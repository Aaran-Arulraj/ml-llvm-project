; ModuleID = 'regex.c'
source_filename = "regex.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.re_pattern_buffer = type { i8*, i64, i64, i64, i8*, i8*, i64, i8 }
%struct.byte_fail_stack_type = type { %union.byte_fail_stack_elt*, i32, i32 }
%union.byte_fail_stack_elt = type { i8* }
%struct.re_registers = type { i32, i32*, i32* }
%union.byte_register_info_type = type { %union.byte_fail_stack_elt }
%struct.anon = type { i8, [3 x i8] }
%struct.compile_stack_type = type { %struct.compile_stack_elt_t*, i32, i32 }
%struct.compile_stack_elt_t = type { i64, i64, i64, i64, i32 }
%struct.regmatch_t = type { i32, i32 }

@xre_max_failures = dso_local global i32 4000, align 4, !dbg !0
@xre_syntax_options = common dso_local global i64 0, align 8, !dbg !131
@re_error_msgid = internal global [17 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i32 0, i32 0)], align 16, !dbg !167
@re_comp_buf = internal global %struct.re_pattern_buffer zeroinitializer, align 8, !dbg !134
@.str = private unnamed_addr constant [31 x i8] c"No previous regular expression\00", align 1
@re_syntax_table = internal global [256 x i8] zeroinitializer, align 16, !dbg !154
@byte_reg_unset_dummy = internal global i8 0, align 1, !dbg !159
@.str.1 = private unnamed_addr constant [6 x i8] c"alnum\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"blank\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"cntrl\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"digit\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"graph\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"punct\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"space\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"xdigit\00", align 1
@init_syntax_once.done = internal global i32 0, align 4, !dbg !161
@.str.13 = private unnamed_addr constant [8 x i8] c"Success\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"No match\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"Invalid regular expression\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"Invalid collation character\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"Invalid character class name\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"Trailing backslash\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"Invalid back reference\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"Unmatched [ or [^\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"Unmatched ( or \\(\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"Unmatched \\{\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"Invalid content of \\{\\}\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"Invalid range end\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"Memory exhausted\00", align 1
@.str.26 = private unnamed_addr constant [37 x i8] c"Invalid preceding regular expression\00", align 1
@.str.27 = private unnamed_addr constant [36 x i8] c"Premature end of regular expression\00", align 1
@.str.28 = private unnamed_addr constant [27 x i8] c"Regular expression too big\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"Unmatched ) or \\)\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @xre_set_syntax(i64 %syntax) #0 !dbg !176 {
entry:
  %syntax.addr = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %syntax, i64* %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %syntax.addr, metadata !179, metadata !DIExpression()), !dbg !180
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !181, metadata !DIExpression()), !dbg !182
  %0 = load i64, i64* @xre_syntax_options, align 8, !dbg !183
  store i64 %0, i64* %ret, align 8, !dbg !182
  %1 = load i64, i64* %syntax.addr, align 8, !dbg !184
  store i64 %1, i64* @xre_syntax_options, align 8, !dbg !185
  %2 = load i64, i64* %ret, align 8, !dbg !186
  ret i64 %2, !dbg !187
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @xre_compile_fastmap(%struct.re_pattern_buffer* %bufp) #0 !dbg !188 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !192, metadata !DIExpression()), !dbg !193
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !194
  %call = call i32 @byte_re_compile_fastmap(%struct.re_pattern_buffer* %0), !dbg !195
  ret i32 %call, !dbg !196
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @byte_re_compile_fastmap(%struct.re_pattern_buffer* %bufp) #0 !dbg !197 {
entry:
  %retval = alloca i32, align 4
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %fail_stack = alloca %struct.byte_fail_stack_type, align 8
  %destination = alloca i8*, align 8
  %fastmap = alloca i8*, align 8
  %pattern = alloca i8*, align 8
  %pend = alloca i8*, align 8
  %p = alloca i8*, align 8
  %path_can_be_null = alloca i8, align 1
  %succeed_n_p = alloca i8, align 1
  %fastmap_newline = alloca i32, align 4
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !198, metadata !DIExpression()), !dbg !199
  call void @llvm.dbg.declare(metadata i32* %j, metadata !200, metadata !DIExpression()), !dbg !201
  call void @llvm.dbg.declare(metadata i32* %k, metadata !202, metadata !DIExpression()), !dbg !203
  call void @llvm.dbg.declare(metadata %struct.byte_fail_stack_type* %fail_stack, metadata !204, metadata !DIExpression()), !dbg !211
  call void @llvm.dbg.declare(metadata i8** %destination, metadata !212, metadata !DIExpression()), !dbg !213
  call void @llvm.dbg.declare(metadata i8** %fastmap, metadata !214, metadata !DIExpression()), !dbg !215
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !216
  %fastmap1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %0, i32 0, i32 4, !dbg !217
  %1 = load i8*, i8** %fastmap1, align 8, !dbg !217
  store i8* %1, i8** %fastmap, align 8, !dbg !215
  call void @llvm.dbg.declare(metadata i8** %pattern, metadata !218, metadata !DIExpression()), !dbg !219
  %2 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !220
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2, i32 0, i32 0, !dbg !221
  %3 = load i8*, i8** %buffer, align 8, !dbg !221
  store i8* %3, i8** %pattern, align 8, !dbg !219
  call void @llvm.dbg.declare(metadata i8** %pend, metadata !222, metadata !DIExpression()), !dbg !223
  %4 = load i8*, i8** %pattern, align 8, !dbg !224
  %5 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !225
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %5, i32 0, i32 2, !dbg !226
  %6 = load i64, i64* %used, align 8, !dbg !226
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %6, !dbg !227
  store i8* %add.ptr, i8** %pend, align 8, !dbg !223
  call void @llvm.dbg.declare(metadata i8** %p, metadata !228, metadata !DIExpression()), !dbg !229
  %7 = load i8*, i8** %pattern, align 8, !dbg !230
  store i8* %7, i8** %p, align 8, !dbg !229
  call void @llvm.dbg.declare(metadata i8* %path_can_be_null, metadata !231, metadata !DIExpression()), !dbg !233
  store i8 1, i8* %path_can_be_null, align 1, !dbg !233
  call void @llvm.dbg.declare(metadata i8* %succeed_n_p, metadata !234, metadata !DIExpression()), !dbg !235
  store i8 0, i8* %succeed_n_p, align 1, !dbg !235
  br label %do.body, !dbg !236

do.body:                                          ; preds = %entry
  %8 = alloca i8, i64 40, align 16, !dbg !237
  %9 = bitcast i8* %8 to %union.byte_fail_stack_elt*, !dbg !237
  %stack = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !237
  store %union.byte_fail_stack_elt* %9, %union.byte_fail_stack_elt** %stack, align 8, !dbg !237
  %stack2 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !239
  %10 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2, align 8, !dbg !239
  %cmp = icmp eq %union.byte_fail_stack_elt* %10, null, !dbg !239
  br i1 %cmp, label %if.then, label %if.end, !dbg !237

if.then:                                          ; preds = %do.body
  store i32 -2, i32* %retval, align 4, !dbg !239
  br label %return, !dbg !239

if.end:                                           ; preds = %do.body
  %size = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !237
  store i32 5, i32* %size, align 8, !dbg !237
  %avail = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !237
  store i32 0, i32* %avail, align 4, !dbg !237
  br label %do.end, !dbg !237

do.end:                                           ; preds = %if.end
  %11 = load i8*, i8** %fastmap, align 8, !dbg !241
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 256, i1 false), !dbg !241
  %12 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !242
  %fastmap_accurate = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %12, i32 0, i32 7, !dbg !243
  %bf.load = load i8, i8* %fastmap_accurate, align 8, !dbg !244
  %bf.clear = and i8 %bf.load, -9, !dbg !244
  %bf.set = or i8 %bf.clear, 8, !dbg !244
  store i8 %bf.set, i8* %fastmap_accurate, align 8, !dbg !244
  %13 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !245
  %can_be_null = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %13, i32 0, i32 7, !dbg !246
  %bf.load3 = load i8, i8* %can_be_null, align 8, !dbg !247
  %bf.clear4 = and i8 %bf.load3, -2, !dbg !247
  store i8 %bf.clear4, i8* %can_be_null, align 8, !dbg !247
  br label %while.body, !dbg !248

while.body:                                       ; preds = %do.end, %if.then12, %sw.bb141, %if.then156, %if.then164, %if.end195, %if.end270, %if.end288, %sw.bb289, %sw.bb291, %sw.epilog
  %14 = load i8*, i8** %p, align 8, !dbg !249
  %15 = load i8*, i8** %pend, align 8, !dbg !252
  %cmp5 = icmp eq i8* %14, %15, !dbg !253
  br i1 %cmp5, label %if.then8, label %lor.lhs.false, !dbg !254

lor.lhs.false:                                    ; preds = %while.body
  %16 = load i8*, i8** %p, align 8, !dbg !255
  %17 = load i8, i8* %16, align 1, !dbg !256
  %conv = zext i8 %17 to i32, !dbg !256
  %cmp6 = icmp eq i32 %conv, 1, !dbg !257
  br i1 %cmp6, label %if.then8, label %if.end22, !dbg !258

if.then8:                                         ; preds = %lor.lhs.false, %while.body
  %avail9 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !259
  %18 = load i32, i32* %avail9, align 4, !dbg !259
  %cmp10 = icmp eq i32 %18, 0, !dbg !259
  br i1 %cmp10, label %if.else, label %if.then12, !dbg !262

if.then12:                                        ; preds = %if.then8
  %19 = load i8, i8* %path_can_be_null, align 1, !dbg !263
  %conv13 = sext i8 %19 to i32, !dbg !263
  %20 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !265
  %can_be_null14 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %20, i32 0, i32 7, !dbg !266
  %bf.load15 = load i8, i8* %can_be_null14, align 8, !dbg !267
  %bf.clear16 = and i8 %bf.load15, 1, !dbg !267
  %bf.cast = zext i8 %bf.clear16 to i32, !dbg !267
  %or = or i32 %bf.cast, %conv13, !dbg !267
  %21 = trunc i32 %or to i8, !dbg !267
  %bf.load17 = load i8, i8* %can_be_null14, align 8, !dbg !267
  %bf.value = and i8 %21, 1, !dbg !267
  %bf.clear18 = and i8 %bf.load17, -2, !dbg !267
  %bf.set19 = or i8 %bf.clear18, %bf.value, !dbg !267
  store i8 %bf.set19, i8* %can_be_null14, align 8, !dbg !267
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !267
  store i8 1, i8* %path_can_be_null, align 1, !dbg !268
  %stack20 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !269
  %22 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack20, align 8, !dbg !269
  %avail21 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !270
  %23 = load i32, i32* %avail21, align 4, !dbg !271
  %dec = add i32 %23, -1, !dbg !271
  store i32 %dec, i32* %avail21, align 4, !dbg !271
  %idxprom = zext i32 %dec to i64, !dbg !272
  %arrayidx = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %22, i64 %idxprom, !dbg !272
  %pointer = bitcast %union.byte_fail_stack_elt* %arrayidx to i8**, !dbg !273
  %24 = load i8*, i8** %pointer, align 8, !dbg !273
  store i8* %24, i8** %p, align 8, !dbg !274
  br label %while.body, !dbg !275, !llvm.loop !276

if.else:                                          ; preds = %if.then8
  br label %while.end, !dbg !278

if.end22:                                         ; preds = %lor.lhs.false
  %25 = load i8*, i8** %p, align 8, !dbg !279
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1, !dbg !279
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !279
  %26 = load i8, i8* %25, align 1, !dbg !279
  %conv23 = zext i8 %26 to i32, !dbg !279
  switch i32 %conv23, label %sw.default [
    i32 8, label %sw.bb
    i32 2, label %sw.bb28
    i32 4, label %sw.bb32
    i32 5, label %sw.bb45
    i32 24, label %sw.bb79
    i32 25, label %sw.bb97
    i32 3, label %sw.bb115
    i32 0, label %sw.bb141
    i32 9, label %sw.bb141
    i32 10, label %sw.bb141
    i32 11, label %sw.bb141
    i32 12, label %sw.bb141
    i32 28, label %sw.bb141
    i32 29, label %sw.bb141
    i32 26, label %sw.bb141
    i32 27, label %sw.bb141
    i32 20, label %sw.bb141
    i32 22, label %sw.bb142
    i32 17, label %sw.bb142
    i32 18, label %sw.bb142
    i32 13, label %sw.bb142
    i32 14, label %sw.bb142
    i32 19, label %sw.bb142
    i32 15, label %sw.bb196
    i32 16, label %sw.bb196
    i32 21, label %sw.bb271
    i32 23, label %sw.bb289
    i32 6, label %sw.bb291
    i32 7, label %sw.bb291
  ], !dbg !280

sw.bb:                                            ; preds = %if.end22
  %27 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !281
  %can_be_null24 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %27, i32 0, i32 7, !dbg !283
  %bf.load25 = load i8, i8* %can_be_null24, align 8, !dbg !284
  %bf.clear26 = and i8 %bf.load25, -2, !dbg !284
  %bf.set27 = or i8 %bf.clear26, 1, !dbg !284
  store i8 %bf.set27, i8* %can_be_null24, align 8, !dbg !284
  br label %done, !dbg !285

sw.bb28:                                          ; preds = %if.end22
  %28 = load i8*, i8** %fastmap, align 8, !dbg !286
  %29 = load i8*, i8** %p, align 8, !dbg !287
  %arrayidx29 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !287
  %30 = load i8, i8* %arrayidx29, align 1, !dbg !287
  %idxprom30 = zext i8 %30 to i64, !dbg !286
  %arrayidx31 = getelementptr inbounds i8, i8* %28, i64 %idxprom30, !dbg !286
  store i8 1, i8* %arrayidx31, align 1, !dbg !288
  br label %sw.epilog, !dbg !289

sw.bb32:                                          ; preds = %if.end22
  %31 = load i8*, i8** %p, align 8, !dbg !290
  %incdec.ptr33 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !290
  store i8* %incdec.ptr33, i8** %p, align 8, !dbg !290
  %32 = load i8, i8* %31, align 1, !dbg !292
  %conv34 = zext i8 %32 to i32, !dbg !292
  %mul = mul nsw i32 %conv34, 8, !dbg !293
  %sub = sub nsw i32 %mul, 1, !dbg !294
  store i32 %sub, i32* %j, align 4, !dbg !295
  br label %for.cond, !dbg !296

for.cond:                                         ; preds = %for.inc, %sw.bb32
  %33 = load i32, i32* %j, align 4, !dbg !297
  %cmp35 = icmp sge i32 %33, 0, !dbg !299
  br i1 %cmp35, label %for.body, label %for.end, !dbg !300

for.body:                                         ; preds = %for.cond
  %34 = load i8*, i8** %p, align 8, !dbg !301
  %35 = load i32, i32* %j, align 4, !dbg !303
  %div = sdiv i32 %35, 8, !dbg !304
  %idxprom37 = sext i32 %div to i64, !dbg !301
  %arrayidx38 = getelementptr inbounds i8, i8* %34, i64 %idxprom37, !dbg !301
  %36 = load i8, i8* %arrayidx38, align 1, !dbg !301
  %conv39 = zext i8 %36 to i32, !dbg !301
  %37 = load i32, i32* %j, align 4, !dbg !305
  %rem = srem i32 %37, 8, !dbg !306
  %shl = shl i32 1, %rem, !dbg !307
  %and = and i32 %conv39, %shl, !dbg !308
  %tobool = icmp ne i32 %and, 0, !dbg !308
  br i1 %tobool, label %if.then40, label %if.end43, !dbg !309

if.then40:                                        ; preds = %for.body
  %38 = load i8*, i8** %fastmap, align 8, !dbg !310
  %39 = load i32, i32* %j, align 4, !dbg !311
  %idxprom41 = sext i32 %39 to i64, !dbg !310
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 %idxprom41, !dbg !310
  store i8 1, i8* %arrayidx42, align 1, !dbg !312
  br label %if.end43, !dbg !310

if.end43:                                         ; preds = %if.then40, %for.body
  br label %for.inc, !dbg !313

for.inc:                                          ; preds = %if.end43
  %40 = load i32, i32* %j, align 4, !dbg !314
  %dec44 = add nsw i32 %40, -1, !dbg !314
  store i32 %dec44, i32* %j, align 4, !dbg !314
  br label %for.cond, !dbg !315, !llvm.loop !316

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !318

sw.bb45:                                          ; preds = %if.end22
  %41 = load i8*, i8** %p, align 8, !dbg !319
  %42 = load i8, i8* %41, align 1, !dbg !321
  %conv46 = zext i8 %42 to i32, !dbg !321
  %mul47 = mul nsw i32 %conv46, 8, !dbg !322
  store i32 %mul47, i32* %j, align 4, !dbg !323
  br label %for.cond48, !dbg !324

for.cond48:                                       ; preds = %for.inc54, %sw.bb45
  %43 = load i32, i32* %j, align 4, !dbg !325
  %cmp49 = icmp slt i32 %43, 256, !dbg !327
  br i1 %cmp49, label %for.body51, label %for.end55, !dbg !328

for.body51:                                       ; preds = %for.cond48
  %44 = load i8*, i8** %fastmap, align 8, !dbg !329
  %45 = load i32, i32* %j, align 4, !dbg !330
  %idxprom52 = sext i32 %45 to i64, !dbg !329
  %arrayidx53 = getelementptr inbounds i8, i8* %44, i64 %idxprom52, !dbg !329
  store i8 1, i8* %arrayidx53, align 1, !dbg !331
  br label %for.inc54, !dbg !329

for.inc54:                                        ; preds = %for.body51
  %46 = load i32, i32* %j, align 4, !dbg !332
  %inc = add nsw i32 %46, 1, !dbg !332
  store i32 %inc, i32* %j, align 4, !dbg !332
  br label %for.cond48, !dbg !333, !llvm.loop !334

for.end55:                                        ; preds = %for.cond48
  %47 = load i8*, i8** %p, align 8, !dbg !336
  %incdec.ptr56 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !336
  store i8* %incdec.ptr56, i8** %p, align 8, !dbg !336
  %48 = load i8, i8* %47, align 1, !dbg !338
  %conv57 = zext i8 %48 to i32, !dbg !338
  %mul58 = mul nsw i32 %conv57, 8, !dbg !339
  %sub59 = sub nsw i32 %mul58, 1, !dbg !340
  store i32 %sub59, i32* %j, align 4, !dbg !341
  br label %for.cond60, !dbg !342

for.cond60:                                       ; preds = %for.inc76, %for.end55
  %49 = load i32, i32* %j, align 4, !dbg !343
  %cmp61 = icmp sge i32 %49, 0, !dbg !345
  br i1 %cmp61, label %for.body63, label %for.end78, !dbg !346

for.body63:                                       ; preds = %for.cond60
  %50 = load i8*, i8** %p, align 8, !dbg !347
  %51 = load i32, i32* %j, align 4, !dbg !349
  %div64 = sdiv i32 %51, 8, !dbg !350
  %idxprom65 = sext i32 %div64 to i64, !dbg !347
  %arrayidx66 = getelementptr inbounds i8, i8* %50, i64 %idxprom65, !dbg !347
  %52 = load i8, i8* %arrayidx66, align 1, !dbg !347
  %conv67 = zext i8 %52 to i32, !dbg !347
  %53 = load i32, i32* %j, align 4, !dbg !351
  %rem68 = srem i32 %53, 8, !dbg !352
  %shl69 = shl i32 1, %rem68, !dbg !353
  %and70 = and i32 %conv67, %shl69, !dbg !354
  %tobool71 = icmp ne i32 %and70, 0, !dbg !354
  br i1 %tobool71, label %if.end75, label %if.then72, !dbg !355

if.then72:                                        ; preds = %for.body63
  %54 = load i8*, i8** %fastmap, align 8, !dbg !356
  %55 = load i32, i32* %j, align 4, !dbg !357
  %idxprom73 = sext i32 %55 to i64, !dbg !356
  %arrayidx74 = getelementptr inbounds i8, i8* %54, i64 %idxprom73, !dbg !356
  store i8 1, i8* %arrayidx74, align 1, !dbg !358
  br label %if.end75, !dbg !356

if.end75:                                         ; preds = %if.then72, %for.body63
  br label %for.inc76, !dbg !359

for.inc76:                                        ; preds = %if.end75
  %56 = load i32, i32* %j, align 4, !dbg !360
  %dec77 = add nsw i32 %56, -1, !dbg !360
  store i32 %dec77, i32* %j, align 4, !dbg !360
  br label %for.cond60, !dbg !361, !llvm.loop !362

for.end78:                                        ; preds = %for.cond60
  br label %sw.epilog, !dbg !364

sw.bb79:                                          ; preds = %if.end22
  store i32 0, i32* %j, align 4, !dbg !365
  br label %for.cond80, !dbg !367

for.cond80:                                       ; preds = %for.inc94, %sw.bb79
  %57 = load i32, i32* %j, align 4, !dbg !368
  %cmp81 = icmp slt i32 %57, 256, !dbg !370
  br i1 %cmp81, label %for.body83, label %for.end96, !dbg !371

for.body83:                                       ; preds = %for.cond80
  %58 = load i32, i32* %j, align 4, !dbg !372
  %conv84 = trunc i32 %58 to i8, !dbg !372
  %idxprom85 = zext i8 %conv84 to i64, !dbg !372
  %arrayidx86 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom85, !dbg !372
  %59 = load i8, i8* %arrayidx86, align 1, !dbg !372
  %conv87 = sext i8 %59 to i32, !dbg !372
  %cmp88 = icmp eq i32 %conv87, 1, !dbg !374
  br i1 %cmp88, label %if.then90, label %if.end93, !dbg !375

if.then90:                                        ; preds = %for.body83
  %60 = load i8*, i8** %fastmap, align 8, !dbg !376
  %61 = load i32, i32* %j, align 4, !dbg !377
  %idxprom91 = sext i32 %61 to i64, !dbg !376
  %arrayidx92 = getelementptr inbounds i8, i8* %60, i64 %idxprom91, !dbg !376
  store i8 1, i8* %arrayidx92, align 1, !dbg !378
  br label %if.end93, !dbg !376

if.end93:                                         ; preds = %if.then90, %for.body83
  br label %for.inc94, !dbg !379

for.inc94:                                        ; preds = %if.end93
  %62 = load i32, i32* %j, align 4, !dbg !380
  %inc95 = add nsw i32 %62, 1, !dbg !380
  store i32 %inc95, i32* %j, align 4, !dbg !380
  br label %for.cond80, !dbg !381, !llvm.loop !382

for.end96:                                        ; preds = %for.cond80
  br label %sw.epilog, !dbg !384

sw.bb97:                                          ; preds = %if.end22
  store i32 0, i32* %j, align 4, !dbg !385
  br label %for.cond98, !dbg !387

for.cond98:                                       ; preds = %for.inc112, %sw.bb97
  %63 = load i32, i32* %j, align 4, !dbg !388
  %cmp99 = icmp slt i32 %63, 256, !dbg !390
  br i1 %cmp99, label %for.body101, label %for.end114, !dbg !391

for.body101:                                      ; preds = %for.cond98
  %64 = load i32, i32* %j, align 4, !dbg !392
  %conv102 = trunc i32 %64 to i8, !dbg !392
  %idxprom103 = zext i8 %conv102 to i64, !dbg !392
  %arrayidx104 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom103, !dbg !392
  %65 = load i8, i8* %arrayidx104, align 1, !dbg !392
  %conv105 = sext i8 %65 to i32, !dbg !392
  %cmp106 = icmp ne i32 %conv105, 1, !dbg !394
  br i1 %cmp106, label %if.then108, label %if.end111, !dbg !395

if.then108:                                       ; preds = %for.body101
  %66 = load i8*, i8** %fastmap, align 8, !dbg !396
  %67 = load i32, i32* %j, align 4, !dbg !397
  %idxprom109 = sext i32 %67 to i64, !dbg !396
  %arrayidx110 = getelementptr inbounds i8, i8* %66, i64 %idxprom109, !dbg !396
  store i8 1, i8* %arrayidx110, align 1, !dbg !398
  br label %if.end111, !dbg !396

if.end111:                                        ; preds = %if.then108, %for.body101
  br label %for.inc112, !dbg !399

for.inc112:                                       ; preds = %if.end111
  %68 = load i32, i32* %j, align 4, !dbg !400
  %inc113 = add nsw i32 %68, 1, !dbg !400
  store i32 %inc113, i32* %j, align 4, !dbg !400
  br label %for.cond98, !dbg !401, !llvm.loop !402

for.end114:                                       ; preds = %for.cond98
  br label %sw.epilog, !dbg !404

sw.bb115:                                         ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %fastmap_newline, metadata !405, metadata !DIExpression()), !dbg !407
  %69 = load i8*, i8** %fastmap, align 8, !dbg !408
  %arrayidx116 = getelementptr inbounds i8, i8* %69, i64 10, !dbg !408
  %70 = load i8, i8* %arrayidx116, align 1, !dbg !408
  %conv117 = sext i8 %70 to i32, !dbg !408
  store i32 %conv117, i32* %fastmap_newline, align 4, !dbg !407
  store i32 0, i32* %j, align 4, !dbg !409
  br label %for.cond118, !dbg !411

for.cond118:                                      ; preds = %for.inc124, %sw.bb115
  %71 = load i32, i32* %j, align 4, !dbg !412
  %cmp119 = icmp slt i32 %71, 256, !dbg !414
  br i1 %cmp119, label %for.body121, label %for.end126, !dbg !415

for.body121:                                      ; preds = %for.cond118
  %72 = load i8*, i8** %fastmap, align 8, !dbg !416
  %73 = load i32, i32* %j, align 4, !dbg !417
  %idxprom122 = sext i32 %73 to i64, !dbg !416
  %arrayidx123 = getelementptr inbounds i8, i8* %72, i64 %idxprom122, !dbg !416
  store i8 1, i8* %arrayidx123, align 1, !dbg !418
  br label %for.inc124, !dbg !416

for.inc124:                                       ; preds = %for.body121
  %74 = load i32, i32* %j, align 4, !dbg !419
  %inc125 = add nsw i32 %74, 1, !dbg !419
  store i32 %inc125, i32* %j, align 4, !dbg !419
  br label %for.cond118, !dbg !420, !llvm.loop !421

for.end126:                                       ; preds = %for.cond118
  %75 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !423
  %syntax = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %75, i32 0, i32 3, !dbg !425
  %76 = load i64, i64* %syntax, align 8, !dbg !425
  %and127 = and i64 %76, 64, !dbg !426
  %tobool128 = icmp ne i64 %and127, 0, !dbg !426
  br i1 %tobool128, label %if.else132, label %if.then129, !dbg !427

if.then129:                                       ; preds = %for.end126
  %77 = load i32, i32* %fastmap_newline, align 4, !dbg !428
  %conv130 = trunc i32 %77 to i8, !dbg !428
  %78 = load i8*, i8** %fastmap, align 8, !dbg !429
  %arrayidx131 = getelementptr inbounds i8, i8* %78, i64 10, !dbg !429
  store i8 %conv130, i8* %arrayidx131, align 1, !dbg !430
  br label %if.end140, !dbg !429

if.else132:                                       ; preds = %for.end126
  %79 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !431
  %can_be_null133 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %79, i32 0, i32 7, !dbg !433
  %bf.load134 = load i8, i8* %can_be_null133, align 8, !dbg !433
  %bf.clear135 = and i8 %bf.load134, 1, !dbg !433
  %bf.cast136 = zext i8 %bf.clear135 to i32, !dbg !433
  %tobool137 = icmp ne i32 %bf.cast136, 0, !dbg !431
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !434

if.then138:                                       ; preds = %if.else132
  br label %done, !dbg !435

if.end139:                                        ; preds = %if.else132
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then129
  br label %sw.epilog, !dbg !436

sw.bb141:                                         ; preds = %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22
  br label %while.body, !dbg !437, !llvm.loop !276

sw.bb142:                                         ; preds = %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22
  br label %do.body143, !dbg !438

do.body143:                                       ; preds = %sw.bb142
  br label %do.body144, !dbg !439

do.body144:                                       ; preds = %do.body143
  %80 = load i8*, i8** %p, align 8, !dbg !441
  %81 = load i8, i8* %80, align 1, !dbg !441
  %conv145 = zext i8 %81 to i32, !dbg !441
  %and146 = and i32 %conv145, 255, !dbg !441
  store i32 %and146, i32* %j, align 4, !dbg !441
  %82 = load i8*, i8** %p, align 8, !dbg !441
  %add.ptr147 = getelementptr inbounds i8, i8* %82, i64 1, !dbg !441
  %83 = load i8, i8* %add.ptr147, align 1, !dbg !441
  %conv148 = sext i8 %83 to i32, !dbg !441
  %shl149 = shl i32 %conv148, 8, !dbg !441
  %84 = load i32, i32* %j, align 4, !dbg !441
  %add = add nsw i32 %84, %shl149, !dbg !441
  store i32 %add, i32* %j, align 4, !dbg !441
  br label %do.end150, !dbg !441

do.end150:                                        ; preds = %do.body144
  %85 = load i8*, i8** %p, align 8, !dbg !439
  %add.ptr151 = getelementptr inbounds i8, i8* %85, i64 2, !dbg !439
  store i8* %add.ptr151, i8** %p, align 8, !dbg !439
  br label %do.end152, !dbg !439

do.end152:                                        ; preds = %do.end150
  %86 = load i32, i32* %j, align 4, !dbg !443
  %87 = load i8*, i8** %p, align 8, !dbg !444
  %idx.ext = sext i32 %86 to i64, !dbg !444
  %add.ptr153 = getelementptr inbounds i8, i8* %87, i64 %idx.ext, !dbg !444
  store i8* %add.ptr153, i8** %p, align 8, !dbg !444
  %88 = load i32, i32* %j, align 4, !dbg !445
  %cmp154 = icmp sgt i32 %88, 0, !dbg !447
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !448

if.then156:                                       ; preds = %do.end152
  br label %while.body, !dbg !449, !llvm.loop !276

if.end157:                                        ; preds = %do.end152
  %89 = load i8*, i8** %p, align 8, !dbg !450
  %90 = load i8, i8* %89, align 1, !dbg !452
  %conv158 = zext i8 %90 to i32, !dbg !453
  %cmp159 = icmp ne i32 %conv158, 15, !dbg !454
  br i1 %cmp159, label %land.lhs.true, label %if.end165, !dbg !455

land.lhs.true:                                    ; preds = %if.end157
  %91 = load i8*, i8** %p, align 8, !dbg !456
  %92 = load i8, i8* %91, align 1, !dbg !457
  %conv161 = zext i8 %92 to i32, !dbg !458
  %cmp162 = icmp ne i32 %conv161, 21, !dbg !459
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !460

if.then164:                                       ; preds = %land.lhs.true
  br label %while.body, !dbg !461, !llvm.loop !276

if.end165:                                        ; preds = %land.lhs.true, %if.end157
  %93 = load i8*, i8** %p, align 8, !dbg !462
  %incdec.ptr166 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !462
  store i8* %incdec.ptr166, i8** %p, align 8, !dbg !462
  br label %do.body167, !dbg !463

do.body167:                                       ; preds = %if.end165
  br label %do.body168, !dbg !464

do.body168:                                       ; preds = %do.body167
  %94 = load i8*, i8** %p, align 8, !dbg !466
  %95 = load i8, i8* %94, align 1, !dbg !466
  %conv169 = zext i8 %95 to i32, !dbg !466
  %and170 = and i32 %conv169, 255, !dbg !466
  store i32 %and170, i32* %j, align 4, !dbg !466
  %96 = load i8*, i8** %p, align 8, !dbg !466
  %add.ptr171 = getelementptr inbounds i8, i8* %96, i64 1, !dbg !466
  %97 = load i8, i8* %add.ptr171, align 1, !dbg !466
  %conv172 = sext i8 %97 to i32, !dbg !466
  %shl173 = shl i32 %conv172, 8, !dbg !466
  %98 = load i32, i32* %j, align 4, !dbg !466
  %add174 = add nsw i32 %98, %shl173, !dbg !466
  store i32 %add174, i32* %j, align 4, !dbg !466
  br label %do.end175, !dbg !466

do.end175:                                        ; preds = %do.body168
  %99 = load i8*, i8** %p, align 8, !dbg !464
  %add.ptr176 = getelementptr inbounds i8, i8* %99, i64 2, !dbg !464
  store i8* %add.ptr176, i8** %p, align 8, !dbg !464
  br label %do.end177, !dbg !464

do.end177:                                        ; preds = %do.end175
  %100 = load i32, i32* %j, align 4, !dbg !468
  %101 = load i8*, i8** %p, align 8, !dbg !469
  %idx.ext178 = sext i32 %100 to i64, !dbg !469
  %add.ptr179 = getelementptr inbounds i8, i8* %101, i64 %idx.ext178, !dbg !469
  store i8* %add.ptr179, i8** %p, align 8, !dbg !469
  %avail180 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !470
  %102 = load i32, i32* %avail180, align 4, !dbg !470
  %cmp181 = icmp eq i32 %102, 0, !dbg !470
  br i1 %cmp181, label %if.end195, label %land.lhs.true183, !dbg !472

land.lhs.true183:                                 ; preds = %do.end177
  %stack184 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !473
  %103 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack184, align 8, !dbg !473
  %avail185 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !474
  %104 = load i32, i32* %avail185, align 4, !dbg !474
  %sub186 = sub i32 %104, 1, !dbg !475
  %idxprom187 = zext i32 %sub186 to i64, !dbg !476
  %arrayidx188 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %103, i64 %idxprom187, !dbg !476
  %pointer189 = bitcast %union.byte_fail_stack_elt* %arrayidx188 to i8**, !dbg !477
  %105 = load i8*, i8** %pointer189, align 8, !dbg !477
  %106 = load i8*, i8** %p, align 8, !dbg !478
  %cmp190 = icmp eq i8* %105, %106, !dbg !479
  br i1 %cmp190, label %if.then192, label %if.end195, !dbg !480

if.then192:                                       ; preds = %land.lhs.true183
  %avail193 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !481
  %107 = load i32, i32* %avail193, align 4, !dbg !482
  %dec194 = add i32 %107, -1, !dbg !482
  store i32 %dec194, i32* %avail193, align 4, !dbg !482
  br label %if.end195, !dbg !483

if.end195:                                        ; preds = %if.then192, %land.lhs.true183, %do.end177
  br label %while.body, !dbg !484, !llvm.loop !276

sw.bb196:                                         ; preds = %if.end22, %if.end22
  br label %handle_on_failure_jump, !dbg !484

handle_on_failure_jump:                           ; preds = %if.then286, %sw.bb196
  call void @llvm.dbg.label(metadata !485), !dbg !486
  br label %do.body197, !dbg !487

do.body197:                                       ; preds = %handle_on_failure_jump
  br label %do.body198, !dbg !488

do.body198:                                       ; preds = %do.body197
  %108 = load i8*, i8** %p, align 8, !dbg !490
  %109 = load i8, i8* %108, align 1, !dbg !490
  %conv199 = zext i8 %109 to i32, !dbg !490
  %and200 = and i32 %conv199, 255, !dbg !490
  store i32 %and200, i32* %j, align 4, !dbg !490
  %110 = load i8*, i8** %p, align 8, !dbg !490
  %add.ptr201 = getelementptr inbounds i8, i8* %110, i64 1, !dbg !490
  %111 = load i8, i8* %add.ptr201, align 1, !dbg !490
  %conv202 = sext i8 %111 to i32, !dbg !490
  %shl203 = shl i32 %conv202, 8, !dbg !490
  %112 = load i32, i32* %j, align 4, !dbg !490
  %add204 = add nsw i32 %112, %shl203, !dbg !490
  store i32 %add204, i32* %j, align 4, !dbg !490
  br label %do.end205, !dbg !490

do.end205:                                        ; preds = %do.body198
  %113 = load i8*, i8** %p, align 8, !dbg !488
  %add.ptr206 = getelementptr inbounds i8, i8* %113, i64 2, !dbg !488
  store i8* %add.ptr206, i8** %p, align 8, !dbg !488
  br label %do.end207, !dbg !488

do.end207:                                        ; preds = %do.end205
  %114 = load i8*, i8** %p, align 8, !dbg !492
  %115 = load i32, i32* %j, align 4, !dbg !494
  %idx.ext208 = sext i32 %115 to i64, !dbg !495
  %add.ptr209 = getelementptr inbounds i8, i8* %114, i64 %idx.ext208, !dbg !495
  %116 = load i8*, i8** %pend, align 8, !dbg !496
  %cmp210 = icmp ult i8* %add.ptr209, %116, !dbg !497
  br i1 %cmp210, label %if.then212, label %if.else251, !dbg !498

if.then212:                                       ; preds = %do.end207
  %avail213 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !499
  %117 = load i32, i32* %avail213, align 4, !dbg !499
  %size214 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !499
  %118 = load i32, i32* %size214, align 8, !dbg !499
  %cmp215 = icmp eq i32 %117, %118, !dbg !499
  br i1 %cmp215, label %land.lhs.true217, label %cond.false240, !dbg !499

land.lhs.true217:                                 ; preds = %if.then212
  %size218 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !499
  %119 = load i32, i32* %size218, align 8, !dbg !499
  %120 = load i32, i32* @xre_max_failures, align 4, !dbg !499
  %mul219 = mul nsw i32 %120, 19, !dbg !499
  %cmp220 = icmp ugt i32 %119, %mul219, !dbg !499
  br i1 %cmp220, label %cond.true, label %cond.false, !dbg !502

cond.true:                                        ; preds = %land.lhs.true217
  br i1 false, label %cond.false240, label %cond.true239, !dbg !499

cond.false:                                       ; preds = %land.lhs.true217
  %size222 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !499
  %121 = load i32, i32* %size222, align 8, !dbg !499
  %shl223 = shl i32 %121, 1, !dbg !499
  %conv224 = zext i32 %shl223 to i64, !dbg !499
  %mul225 = mul i64 %conv224, 8, !dbg !499
  %122 = alloca i8, i64 %mul225, align 16, !dbg !499
  store i8* %122, i8** %destination, align 8, !dbg !499
  %123 = load i8*, i8** %destination, align 8, !dbg !499
  %stack226 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !499
  %124 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack226, align 8, !dbg !499
  %125 = bitcast %union.byte_fail_stack_elt* %124 to i8*, !dbg !499
  %size227 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !499
  %126 = load i32, i32* %size227, align 8, !dbg !499
  %conv228 = zext i32 %126 to i64, !dbg !499
  %mul229 = mul i64 %conv228, 8, !dbg !499
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %123, i8* align 8 %125, i64 %mul229, i1 false), !dbg !499
  %127 = bitcast i8* %123 to %union.byte_fail_stack_elt*, !dbg !499
  %stack230 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !499
  store %union.byte_fail_stack_elt* %127, %union.byte_fail_stack_elt** %stack230, align 8, !dbg !499
  %stack231 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !499
  %128 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack231, align 8, !dbg !499
  %cmp232 = icmp eq %union.byte_fail_stack_elt* %128, null, !dbg !499
  br i1 %cmp232, label %cond.true234, label %cond.false235, !dbg !499

cond.true234:                                     ; preds = %cond.false
  br label %cond.end, !dbg !499

cond.false235:                                    ; preds = %cond.false
  %size236 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !499
  %129 = load i32, i32* %size236, align 8, !dbg !499
  %shl237 = shl i32 %129, 1, !dbg !499
  store i32 %shl237, i32* %size236, align 8, !dbg !499
  br label %cond.end, !dbg !499

cond.end:                                         ; preds = %cond.false235, %cond.true234
  %cond = phi i32 [ 0, %cond.true234 ], [ 1, %cond.false235 ], !dbg !499
  %tobool238 = icmp ne i32 %cond, 0, !dbg !499
  br i1 %tobool238, label %cond.false240, label %cond.true239, !dbg !502

cond.true239:                                     ; preds = %cond.end, %cond.true
  br i1 false, label %if.end250, label %if.then249, !dbg !499

cond.false240:                                    ; preds = %cond.end, %cond.true, %if.then212
  %130 = load i8*, i8** %p, align 8, !dbg !499
  %131 = load i32, i32* %j, align 4, !dbg !499
  %idx.ext241 = sext i32 %131 to i64, !dbg !499
  %add.ptr242 = getelementptr inbounds i8, i8* %130, i64 %idx.ext241, !dbg !499
  %stack243 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !499
  %132 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack243, align 8, !dbg !499
  %avail244 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !499
  %133 = load i32, i32* %avail244, align 4, !dbg !499
  %inc245 = add i32 %133, 1, !dbg !499
  store i32 %inc245, i32* %avail244, align 4, !dbg !499
  %idxprom246 = zext i32 %133 to i64, !dbg !499
  %arrayidx247 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %132, i64 %idxprom246, !dbg !499
  %pointer248 = bitcast %union.byte_fail_stack_elt* %arrayidx247 to i8**, !dbg !499
  store i8* %add.ptr242, i8** %pointer248, align 8, !dbg !499
  br i1 true, label %if.end250, label %if.then249, !dbg !502

if.then249:                                       ; preds = %cond.false240, %cond.true239
  store i32 -2, i32* %retval, align 4, !dbg !503
  br label %return, !dbg !503

if.end250:                                        ; preds = %cond.false240, %cond.true239
  br label %if.end256, !dbg !505

if.else251:                                       ; preds = %do.end207
  %134 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !506
  %can_be_null252 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %134, i32 0, i32 7, !dbg !507
  %bf.load253 = load i8, i8* %can_be_null252, align 8, !dbg !508
  %bf.clear254 = and i8 %bf.load253, -2, !dbg !508
  %bf.set255 = or i8 %bf.clear254, 1, !dbg !508
  store i8 %bf.set255, i8* %can_be_null252, align 8, !dbg !508
  br label %if.end256

if.end256:                                        ; preds = %if.else251, %if.end250
  %135 = load i8, i8* %succeed_n_p, align 1, !dbg !509
  %tobool257 = icmp ne i8 %135, 0, !dbg !509
  br i1 %tobool257, label %if.then258, label %if.end270, !dbg !511

if.then258:                                       ; preds = %if.end256
  br label %do.body259, !dbg !512

do.body259:                                       ; preds = %if.then258
  br label %do.body260, !dbg !514

do.body260:                                       ; preds = %do.body259
  %136 = load i8*, i8** %p, align 8, !dbg !516
  %137 = load i8, i8* %136, align 1, !dbg !516
  %conv261 = zext i8 %137 to i32, !dbg !516
  %and262 = and i32 %conv261, 255, !dbg !516
  store i32 %and262, i32* %k, align 4, !dbg !516
  %138 = load i8*, i8** %p, align 8, !dbg !516
  %add.ptr263 = getelementptr inbounds i8, i8* %138, i64 1, !dbg !516
  %139 = load i8, i8* %add.ptr263, align 1, !dbg !516
  %conv264 = sext i8 %139 to i32, !dbg !516
  %shl265 = shl i32 %conv264, 8, !dbg !516
  %140 = load i32, i32* %k, align 4, !dbg !516
  %add266 = add nsw i32 %140, %shl265, !dbg !516
  store i32 %add266, i32* %k, align 4, !dbg !516
  br label %do.end267, !dbg !516

do.end267:                                        ; preds = %do.body260
  %141 = load i8*, i8** %p, align 8, !dbg !514
  %add.ptr268 = getelementptr inbounds i8, i8* %141, i64 2, !dbg !514
  store i8* %add.ptr268, i8** %p, align 8, !dbg !514
  br label %do.end269, !dbg !514

do.end269:                                        ; preds = %do.end267
  store i8 0, i8* %succeed_n_p, align 1, !dbg !518
  br label %if.end270, !dbg !519

if.end270:                                        ; preds = %do.end269, %if.end256
  br label %while.body, !dbg !520, !llvm.loop !276

sw.bb271:                                         ; preds = %if.end22
  %142 = load i8*, i8** %p, align 8, !dbg !521
  %add.ptr272 = getelementptr inbounds i8, i8* %142, i64 2, !dbg !521
  store i8* %add.ptr272, i8** %p, align 8, !dbg !521
  br label %do.body273, !dbg !522

do.body273:                                       ; preds = %sw.bb271
  br label %do.body274, !dbg !523

do.body274:                                       ; preds = %do.body273
  %143 = load i8*, i8** %p, align 8, !dbg !525
  %144 = load i8, i8* %143, align 1, !dbg !525
  %conv275 = zext i8 %144 to i32, !dbg !525
  %and276 = and i32 %conv275, 255, !dbg !525
  store i32 %and276, i32* %k, align 4, !dbg !525
  %145 = load i8*, i8** %p, align 8, !dbg !525
  %add.ptr277 = getelementptr inbounds i8, i8* %145, i64 1, !dbg !525
  %146 = load i8, i8* %add.ptr277, align 1, !dbg !525
  %conv278 = sext i8 %146 to i32, !dbg !525
  %shl279 = shl i32 %conv278, 8, !dbg !525
  %147 = load i32, i32* %k, align 4, !dbg !525
  %add280 = add nsw i32 %147, %shl279, !dbg !525
  store i32 %add280, i32* %k, align 4, !dbg !525
  br label %do.end281, !dbg !525

do.end281:                                        ; preds = %do.body274
  %148 = load i8*, i8** %p, align 8, !dbg !523
  %add.ptr282 = getelementptr inbounds i8, i8* %148, i64 2, !dbg !523
  store i8* %add.ptr282, i8** %p, align 8, !dbg !523
  br label %do.end283, !dbg !523

do.end283:                                        ; preds = %do.end281
  %149 = load i32, i32* %k, align 4, !dbg !527
  %cmp284 = icmp eq i32 %149, 0, !dbg !529
  br i1 %cmp284, label %if.then286, label %if.end288, !dbg !530

if.then286:                                       ; preds = %do.end283
  %150 = load i8*, i8** %p, align 8, !dbg !531
  %add.ptr287 = getelementptr inbounds i8, i8* %150, i64 -4, !dbg !531
  store i8* %add.ptr287, i8** %p, align 8, !dbg !531
  store i8 1, i8* %succeed_n_p, align 1, !dbg !533
  br label %handle_on_failure_jump, !dbg !534

if.end288:                                        ; preds = %do.end283
  br label %while.body, !dbg !535, !llvm.loop !276

sw.bb289:                                         ; preds = %if.end22
  %151 = load i8*, i8** %p, align 8, !dbg !536
  %add.ptr290 = getelementptr inbounds i8, i8* %151, i64 4, !dbg !536
  store i8* %add.ptr290, i8** %p, align 8, !dbg !536
  br label %while.body, !dbg !537, !llvm.loop !276

sw.bb291:                                         ; preds = %if.end22, %if.end22
  %152 = load i8*, i8** %p, align 8, !dbg !538
  %add.ptr292 = getelementptr inbounds i8, i8* %152, i64 2, !dbg !538
  store i8* %add.ptr292, i8** %p, align 8, !dbg !538
  br label %while.body, !dbg !539, !llvm.loop !276

sw.default:                                       ; preds = %if.end22
  call void @abort() #5, !dbg !540
  unreachable, !dbg !540

sw.epilog:                                        ; preds = %if.end140, %for.end114, %for.end96, %for.end78, %for.end, %sw.bb28
  store i8 0, i8* %path_can_be_null, align 1, !dbg !541
  %153 = load i8*, i8** %pend, align 8, !dbg !542
  store i8* %153, i8** %p, align 8, !dbg !543
  br label %while.body, !dbg !248, !llvm.loop !276

while.end:                                        ; preds = %if.else
  %154 = load i8, i8* %path_can_be_null, align 1, !dbg !544
  %conv293 = sext i8 %154 to i32, !dbg !544
  %155 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !545
  %can_be_null294 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %155, i32 0, i32 7, !dbg !546
  %bf.load295 = load i8, i8* %can_be_null294, align 8, !dbg !547
  %bf.clear296 = and i8 %bf.load295, 1, !dbg !547
  %bf.cast297 = zext i8 %bf.clear296 to i32, !dbg !547
  %or298 = or i32 %bf.cast297, %conv293, !dbg !547
  %156 = trunc i32 %or298 to i8, !dbg !547
  %bf.load299 = load i8, i8* %can_be_null294, align 8, !dbg !547
  %bf.value300 = and i8 %156, 1, !dbg !547
  %bf.clear301 = and i8 %bf.load299, -2, !dbg !547
  %bf.set302 = or i8 %bf.clear301, %bf.value300, !dbg !547
  store i8 %bf.set302, i8* %can_be_null294, align 8, !dbg !547
  %bf.result.cast303 = zext i8 %bf.value300 to i32, !dbg !547
  br label %done, !dbg !545

done:                                             ; preds = %while.end, %if.then138, %sw.bb
  call void @llvm.dbg.label(metadata !548), !dbg !549
  store i32 0, i32* %retval, align 4, !dbg !550
  br label %return, !dbg !550

return:                                           ; preds = %done, %if.then249, %if.then
  %157 = load i32, i32* %retval, align 4, !dbg !551
  ret i32 %157, !dbg !551
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @xre_set_registers(%struct.re_pattern_buffer* %bufp, %struct.re_registers* %regs, i32 %num_regs, i32* %starts, i32* %ends) #0 !dbg !552 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %regs.addr = alloca %struct.re_registers*, align 8
  %num_regs.addr = alloca i32, align 4
  %starts.addr = alloca i32*, align 8
  %ends.addr = alloca i32*, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !555, metadata !DIExpression()), !dbg !556
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_registers** %regs.addr, metadata !557, metadata !DIExpression()), !dbg !558
  store i32 %num_regs, i32* %num_regs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_regs.addr, metadata !559, metadata !DIExpression()), !dbg !560
  store i32* %starts, i32** %starts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %starts.addr, metadata !561, metadata !DIExpression()), !dbg !562
  store i32* %ends, i32** %ends.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ends.addr, metadata !563, metadata !DIExpression()), !dbg !564
  %0 = load i32, i32* %num_regs.addr, align 4, !dbg !565
  %tobool = icmp ne i32 %0, 0, !dbg !565
  br i1 %tobool, label %if.then, label %if.else, !dbg !567

if.then:                                          ; preds = %entry
  %1 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !568
  %regs_allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1, i32 0, i32 7, !dbg !570
  %bf.load = load i8, i8* %regs_allocated, align 8, !dbg !571
  %bf.clear = and i8 %bf.load, -7, !dbg !571
  %bf.set = or i8 %bf.clear, 2, !dbg !571
  store i8 %bf.set, i8* %regs_allocated, align 8, !dbg !571
  %2 = load i32, i32* %num_regs.addr, align 4, !dbg !572
  %3 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !573
  %num_regs1 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %3, i32 0, i32 0, !dbg !574
  store i32 %2, i32* %num_regs1, align 8, !dbg !575
  %4 = load i32*, i32** %starts.addr, align 8, !dbg !576
  %5 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !577
  %start = getelementptr inbounds %struct.re_registers, %struct.re_registers* %5, i32 0, i32 1, !dbg !578
  store i32* %4, i32** %start, align 8, !dbg !579
  %6 = load i32*, i32** %ends.addr, align 8, !dbg !580
  %7 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !581
  %end = getelementptr inbounds %struct.re_registers, %struct.re_registers* %7, i32 0, i32 2, !dbg !582
  store i32* %6, i32** %end, align 8, !dbg !583
  br label %if.end, !dbg !584

if.else:                                          ; preds = %entry
  %8 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !585
  %regs_allocated2 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %8, i32 0, i32 7, !dbg !587
  %bf.load3 = load i8, i8* %regs_allocated2, align 8, !dbg !588
  %bf.clear4 = and i8 %bf.load3, -7, !dbg !588
  store i8 %bf.clear4, i8* %regs_allocated2, align 8, !dbg !588
  %9 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !589
  %num_regs5 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %9, i32 0, i32 0, !dbg !590
  store i32 0, i32* %num_regs5, align 8, !dbg !591
  %10 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !592
  %end6 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %10, i32 0, i32 2, !dbg !593
  store i32* null, i32** %end6, align 8, !dbg !594
  %11 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !595
  %start7 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %11, i32 0, i32 1, !dbg !596
  store i32* null, i32** %start7, align 8, !dbg !597
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !598
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @xre_search(%struct.re_pattern_buffer* %bufp, i8* %string, i32 %size, i32 %startpos, i32 %range, %struct.re_registers* %regs) #0 !dbg !599 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %string.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %startpos.addr = alloca i32, align 4
  %range.addr = alloca i32, align 4
  %regs.addr = alloca %struct.re_registers*, align 8
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !602, metadata !DIExpression()), !dbg !603
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !604, metadata !DIExpression()), !dbg !605
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !606, metadata !DIExpression()), !dbg !607
  store i32 %startpos, i32* %startpos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %startpos.addr, metadata !608, metadata !DIExpression()), !dbg !609
  store i32 %range, i32* %range.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range.addr, metadata !610, metadata !DIExpression()), !dbg !611
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_registers** %regs.addr, metadata !612, metadata !DIExpression()), !dbg !613
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !614
  %1 = load i8*, i8** %string.addr, align 8, !dbg !615
  %2 = load i32, i32* %size.addr, align 4, !dbg !616
  %3 = load i32, i32* %startpos.addr, align 4, !dbg !617
  %4 = load i32, i32* %range.addr, align 4, !dbg !618
  %5 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !619
  %6 = load i32, i32* %size.addr, align 4, !dbg !620
  %call = call i32 @xre_search_2(%struct.re_pattern_buffer* %0, i8* null, i32 0, i8* %1, i32 %2, i32 %3, i32 %4, %struct.re_registers* %5, i32 %6), !dbg !621
  ret i32 %call, !dbg !622
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @xre_search_2(%struct.re_pattern_buffer* %bufp, i8* %string1, i32 %size1, i8* %string2, i32 %size2, i32 %startpos, i32 %range, %struct.re_registers* %regs, i32 %stop) #0 !dbg !623 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %string1.addr = alloca i8*, align 8
  %size1.addr = alloca i32, align 4
  %string2.addr = alloca i8*, align 8
  %size2.addr = alloca i32, align 4
  %startpos.addr = alloca i32, align 4
  %range.addr = alloca i32, align 4
  %regs.addr = alloca %struct.re_registers*, align 8
  %stop.addr = alloca i32, align 4
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !626, metadata !DIExpression()), !dbg !627
  store i8* %string1, i8** %string1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string1.addr, metadata !628, metadata !DIExpression()), !dbg !629
  store i32 %size1, i32* %size1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size1.addr, metadata !630, metadata !DIExpression()), !dbg !631
  store i8* %string2, i8** %string2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string2.addr, metadata !632, metadata !DIExpression()), !dbg !633
  store i32 %size2, i32* %size2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size2.addr, metadata !634, metadata !DIExpression()), !dbg !635
  store i32 %startpos, i32* %startpos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %startpos.addr, metadata !636, metadata !DIExpression()), !dbg !637
  store i32 %range, i32* %range.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range.addr, metadata !638, metadata !DIExpression()), !dbg !639
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_registers** %regs.addr, metadata !640, metadata !DIExpression()), !dbg !641
  store i32 %stop, i32* %stop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stop.addr, metadata !642, metadata !DIExpression()), !dbg !643
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !644
  %1 = load i8*, i8** %string1.addr, align 8, !dbg !645
  %2 = load i32, i32* %size1.addr, align 4, !dbg !646
  %3 = load i8*, i8** %string2.addr, align 8, !dbg !647
  %4 = load i32, i32* %size2.addr, align 4, !dbg !648
  %5 = load i32, i32* %startpos.addr, align 4, !dbg !649
  %6 = load i32, i32* %range.addr, align 4, !dbg !650
  %7 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !651
  %8 = load i32, i32* %stop.addr, align 4, !dbg !652
  %call = call i32 @byte_re_search_2(%struct.re_pattern_buffer* %0, i8* %1, i32 %2, i8* %3, i32 %4, i32 %5, i32 %6, %struct.re_registers* %7, i32 %8), !dbg !653
  ret i32 %call, !dbg !654
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @byte_re_search_2(%struct.re_pattern_buffer* %bufp, i8* %string1, i32 %size1, i8* %string2, i32 %size2, i32 %startpos, i32 %range, %struct.re_registers* %regs, i32 %stop) #0 !dbg !655 {
entry:
  %retval = alloca i32, align 4
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %string1.addr = alloca i8*, align 8
  %size1.addr = alloca i32, align 4
  %string2.addr = alloca i8*, align 8
  %size2.addr = alloca i32, align 4
  %startpos.addr = alloca i32, align 4
  %range.addr = alloca i32, align 4
  %regs.addr = alloca %struct.re_registers*, align 8
  %stop.addr = alloca i32, align 4
  %val = alloca i32, align 4
  %fastmap = alloca i8*, align 8
  %translate = alloca i8*, align 8
  %total_size = alloca i32, align 4
  %endpos = alloca i32, align 4
  %d = alloca i8*, align 8
  %lim = alloca i32, align 4
  %irange = alloca i32, align 4
  %c = alloca i8, align 1
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !656, metadata !DIExpression()), !dbg !657
  store i8* %string1, i8** %string1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string1.addr, metadata !658, metadata !DIExpression()), !dbg !659
  store i32 %size1, i32* %size1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size1.addr, metadata !660, metadata !DIExpression()), !dbg !661
  store i8* %string2, i8** %string2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string2.addr, metadata !662, metadata !DIExpression()), !dbg !663
  store i32 %size2, i32* %size2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size2.addr, metadata !664, metadata !DIExpression()), !dbg !665
  store i32 %startpos, i32* %startpos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %startpos.addr, metadata !666, metadata !DIExpression()), !dbg !667
  store i32 %range, i32* %range.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range.addr, metadata !668, metadata !DIExpression()), !dbg !669
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_registers** %regs.addr, metadata !670, metadata !DIExpression()), !dbg !671
  store i32 %stop, i32* %stop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stop.addr, metadata !672, metadata !DIExpression()), !dbg !673
  call void @llvm.dbg.declare(metadata i32* %val, metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.declare(metadata i8** %fastmap, metadata !676, metadata !DIExpression()), !dbg !677
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !678
  %fastmap1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %0, i32 0, i32 4, !dbg !679
  %1 = load i8*, i8** %fastmap1, align 8, !dbg !679
  store i8* %1, i8** %fastmap, align 8, !dbg !677
  call void @llvm.dbg.declare(metadata i8** %translate, metadata !680, metadata !DIExpression()), !dbg !681
  %2 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !682
  %translate2 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2, i32 0, i32 5, !dbg !683
  %3 = load i8*, i8** %translate2, align 8, !dbg !683
  store i8* %3, i8** %translate, align 8, !dbg !681
  call void @llvm.dbg.declare(metadata i32* %total_size, metadata !684, metadata !DIExpression()), !dbg !685
  %4 = load i32, i32* %size1.addr, align 4, !dbg !686
  %5 = load i32, i32* %size2.addr, align 4, !dbg !687
  %add = add nsw i32 %4, %5, !dbg !688
  store i32 %add, i32* %total_size, align 4, !dbg !685
  call void @llvm.dbg.declare(metadata i32* %endpos, metadata !689, metadata !DIExpression()), !dbg !690
  %6 = load i32, i32* %startpos.addr, align 4, !dbg !691
  %7 = load i32, i32* %range.addr, align 4, !dbg !692
  %add3 = add nsw i32 %6, %7, !dbg !693
  store i32 %add3, i32* %endpos, align 4, !dbg !690
  %8 = load i32, i32* %startpos.addr, align 4, !dbg !694
  %cmp = icmp slt i32 %8, 0, !dbg !696
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !697

lor.lhs.false:                                    ; preds = %entry
  %9 = load i32, i32* %startpos.addr, align 4, !dbg !698
  %10 = load i32, i32* %total_size, align 4, !dbg !699
  %cmp4 = icmp sgt i32 %9, %10, !dbg !700
  br i1 %cmp4, label %if.then, label %if.end, !dbg !701

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !702
  br label %return, !dbg !702

if.end:                                           ; preds = %lor.lhs.false
  %11 = load i32, i32* %endpos, align 4, !dbg !703
  %cmp5 = icmp slt i32 %11, 0, !dbg !705
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !706

if.then6:                                         ; preds = %if.end
  %12 = load i32, i32* %startpos.addr, align 4, !dbg !707
  %sub = sub nsw i32 0, %12, !dbg !708
  store i32 %sub, i32* %range.addr, align 4, !dbg !709
  br label %if.end11, !dbg !710

if.else:                                          ; preds = %if.end
  %13 = load i32, i32* %endpos, align 4, !dbg !711
  %14 = load i32, i32* %total_size, align 4, !dbg !713
  %cmp7 = icmp sgt i32 %13, %14, !dbg !714
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !715

if.then8:                                         ; preds = %if.else
  %15 = load i32, i32* %total_size, align 4, !dbg !716
  %16 = load i32, i32* %startpos.addr, align 4, !dbg !717
  %sub9 = sub nsw i32 %15, %16, !dbg !718
  store i32 %sub9, i32* %range.addr, align 4, !dbg !719
  br label %if.end10, !dbg !720

if.end10:                                         ; preds = %if.then8, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then6
  %17 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !721
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %17, i32 0, i32 2, !dbg !723
  %18 = load i64, i64* %used, align 8, !dbg !723
  %cmp12 = icmp ugt i64 %18, 0, !dbg !724
  br i1 %cmp12, label %land.lhs.true, label %if.end30, !dbg !725

land.lhs.true:                                    ; preds = %if.end11
  %19 = load i32, i32* %range.addr, align 4, !dbg !726
  %cmp13 = icmp sgt i32 %19, 0, !dbg !727
  br i1 %cmp13, label %land.lhs.true14, label %if.end30, !dbg !728

land.lhs.true14:                                  ; preds = %land.lhs.true
  %20 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !729
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %20, i32 0, i32 0, !dbg !730
  %21 = load i8*, i8** %buffer, align 8, !dbg !730
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 0, !dbg !729
  %22 = load i8, i8* %arrayidx, align 1, !dbg !729
  %conv = zext i8 %22 to i32, !dbg !731
  %cmp15 = icmp eq i32 %conv, 11, !dbg !732
  br i1 %cmp15, label %if.then24, label %lor.lhs.false17, !dbg !733

lor.lhs.false17:                                  ; preds = %land.lhs.true14
  %23 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !734
  %buffer18 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %23, i32 0, i32 0, !dbg !735
  %24 = load i8*, i8** %buffer18, align 8, !dbg !735
  %arrayidx19 = getelementptr inbounds i8, i8* %24, i64 0, !dbg !734
  %25 = load i8, i8* %arrayidx19, align 1, !dbg !734
  %conv20 = zext i8 %25 to i32, !dbg !736
  %cmp21 = icmp eq i32 %conv20, 9, !dbg !737
  br i1 %cmp21, label %land.lhs.true23, label %if.end30, !dbg !738

land.lhs.true23:                                  ; preds = %lor.lhs.false17
  %26 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !739
  %newline_anchor = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %26, i32 0, i32 7, !dbg !740
  %bf.load = load i8, i8* %newline_anchor, align 8, !dbg !740
  %bf.lshr = lshr i8 %bf.load, 7, !dbg !740
  %bf.cast = zext i8 %bf.lshr to i32, !dbg !740
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !739
  br i1 %tobool, label %if.end30, label %if.then24, !dbg !741

if.then24:                                        ; preds = %land.lhs.true23, %land.lhs.true14
  %27 = load i32, i32* %startpos.addr, align 4, !dbg !742
  %cmp25 = icmp sgt i32 %27, 0, !dbg !745
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !746

if.then27:                                        ; preds = %if.then24
  store i32 -1, i32* %retval, align 4, !dbg !747
  br label %return, !dbg !747

if.else28:                                        ; preds = %if.then24
  store i32 1, i32* %range.addr, align 4, !dbg !748
  br label %if.end29

if.end29:                                         ; preds = %if.else28
  br label %if.end30, !dbg !749

if.end30:                                         ; preds = %if.end29, %land.lhs.true23, %lor.lhs.false17, %land.lhs.true, %if.end11
  %28 = load i8*, i8** %fastmap, align 8, !dbg !750
  %tobool31 = icmp ne i8* %28, null, !dbg !750
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !752

land.lhs.true32:                                  ; preds = %if.end30
  %29 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !753
  %fastmap_accurate = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %29, i32 0, i32 7, !dbg !754
  %bf.load33 = load i8, i8* %fastmap_accurate, align 8, !dbg !754
  %bf.lshr34 = lshr i8 %bf.load33, 3, !dbg !754
  %bf.clear = and i8 %bf.lshr34, 1, !dbg !754
  %bf.cast35 = zext i8 %bf.clear to i32, !dbg !754
  %tobool36 = icmp ne i32 %bf.cast35, 0, !dbg !753
  br i1 %tobool36, label %if.end42, label %if.then37, !dbg !755

if.then37:                                        ; preds = %land.lhs.true32
  %30 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !756
  %call = call i32 @xre_compile_fastmap(%struct.re_pattern_buffer* %30), !dbg !758
  %cmp38 = icmp eq i32 %call, -2, !dbg !759
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !760

if.then40:                                        ; preds = %if.then37
  store i32 -2, i32* %retval, align 4, !dbg !761
  br label %return, !dbg !761

if.end41:                                         ; preds = %if.then37
  br label %if.end42, !dbg !762

if.end42:                                         ; preds = %if.end41, %land.lhs.true32, %if.end30
  br label %for.cond, !dbg !763

for.cond:                                         ; preds = %if.end165, %if.end42
  %31 = load i8*, i8** %fastmap, align 8, !dbg !764
  %tobool43 = icmp ne i8* %31, null, !dbg !764
  br i1 %tobool43, label %land.lhs.true44, label %if.end129, !dbg !769

land.lhs.true44:                                  ; preds = %for.cond
  %32 = load i32, i32* %startpos.addr, align 4, !dbg !770
  %33 = load i32, i32* %total_size, align 4, !dbg !771
  %cmp45 = icmp slt i32 %32, %33, !dbg !772
  br i1 %cmp45, label %land.lhs.true47, label %if.end129, !dbg !773

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %34 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !774
  %can_be_null = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %34, i32 0, i32 7, !dbg !775
  %bf.load48 = load i8, i8* %can_be_null, align 8, !dbg !775
  %bf.clear49 = and i8 %bf.load48, 1, !dbg !775
  %bf.cast50 = zext i8 %bf.clear49 to i32, !dbg !775
  %tobool51 = icmp ne i32 %bf.cast50, 0, !dbg !774
  br i1 %tobool51, label %if.end129, label %if.then52, !dbg !776

if.then52:                                        ; preds = %land.lhs.true47
  %35 = load i32, i32* %range.addr, align 4, !dbg !777
  %cmp53 = icmp sgt i32 %35, 0, !dbg !780
  br i1 %cmp53, label %if.then55, label %if.else95, !dbg !781

if.then55:                                        ; preds = %if.then52
  call void @llvm.dbg.declare(metadata i8** %d, metadata !782, metadata !DIExpression()), !dbg !784
  call void @llvm.dbg.declare(metadata i32* %lim, metadata !785, metadata !DIExpression()), !dbg !786
  store i32 0, i32* %lim, align 4, !dbg !786
  call void @llvm.dbg.declare(metadata i32* %irange, metadata !787, metadata !DIExpression()), !dbg !788
  %36 = load i32, i32* %range.addr, align 4, !dbg !789
  store i32 %36, i32* %irange, align 4, !dbg !788
  %37 = load i32, i32* %startpos.addr, align 4, !dbg !790
  %38 = load i32, i32* %size1.addr, align 4, !dbg !792
  %cmp56 = icmp slt i32 %37, %38, !dbg !793
  br i1 %cmp56, label %land.lhs.true58, label %if.end65, !dbg !794

land.lhs.true58:                                  ; preds = %if.then55
  %39 = load i32, i32* %startpos.addr, align 4, !dbg !795
  %40 = load i32, i32* %range.addr, align 4, !dbg !796
  %add59 = add nsw i32 %39, %40, !dbg !797
  %41 = load i32, i32* %size1.addr, align 4, !dbg !798
  %cmp60 = icmp sge i32 %add59, %41, !dbg !799
  br i1 %cmp60, label %if.then62, label %if.end65, !dbg !800

if.then62:                                        ; preds = %land.lhs.true58
  %42 = load i32, i32* %range.addr, align 4, !dbg !801
  %43 = load i32, i32* %size1.addr, align 4, !dbg !802
  %44 = load i32, i32* %startpos.addr, align 4, !dbg !803
  %sub63 = sub nsw i32 %43, %44, !dbg !804
  %sub64 = sub nsw i32 %42, %sub63, !dbg !805
  store i32 %sub64, i32* %lim, align 4, !dbg !806
  br label %if.end65, !dbg !807

if.end65:                                         ; preds = %if.then62, %land.lhs.true58, %if.then55
  %45 = load i32, i32* %startpos.addr, align 4, !dbg !808
  %46 = load i32, i32* %size1.addr, align 4, !dbg !809
  %cmp66 = icmp sge i32 %45, %46, !dbg !810
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !808

cond.true:                                        ; preds = %if.end65
  %47 = load i8*, i8** %string2.addr, align 8, !dbg !811
  %48 = load i32, i32* %size1.addr, align 4, !dbg !812
  %idx.ext = sext i32 %48 to i64, !dbg !813
  %idx.neg = sub i64 0, %idx.ext, !dbg !813
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %idx.neg, !dbg !813
  br label %cond.end, !dbg !808

cond.false:                                       ; preds = %if.end65
  %49 = load i8*, i8** %string1.addr, align 8, !dbg !814
  br label %cond.end, !dbg !808

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %49, %cond.false ], !dbg !808
  %50 = load i32, i32* %startpos.addr, align 4, !dbg !815
  %idx.ext68 = sext i32 %50 to i64, !dbg !816
  %add.ptr69 = getelementptr inbounds i8, i8* %cond, i64 %idx.ext68, !dbg !816
  store i8* %add.ptr69, i8** %d, align 8, !dbg !817
  %51 = load i8*, i8** %translate, align 8, !dbg !818
  %tobool70 = icmp ne i8* %51, null, !dbg !818
  br i1 %tobool70, label %if.then71, label %if.else78, !dbg !820

if.then71:                                        ; preds = %cond.end
  br label %while.cond, !dbg !821

while.cond:                                       ; preds = %while.body, %if.then71
  %52 = load i32, i32* %range.addr, align 4, !dbg !822
  %53 = load i32, i32* %lim, align 4, !dbg !823
  %cmp72 = icmp sgt i32 %52, %53, !dbg !824
  br i1 %cmp72, label %land.rhs, label %land.end, !dbg !825

land.rhs:                                         ; preds = %while.cond
  %54 = load i8*, i8** %fastmap, align 8, !dbg !826
  %55 = load i8*, i8** %translate, align 8, !dbg !827
  %56 = load i8*, i8** %d, align 8, !dbg !828
  %incdec.ptr = getelementptr inbounds i8, i8* %56, i32 1, !dbg !828
  store i8* %incdec.ptr, i8** %d, align 8, !dbg !828
  %57 = load i8, i8* %56, align 1, !dbg !829
  %idxprom = zext i8 %57 to i64, !dbg !827
  %arrayidx74 = getelementptr inbounds i8, i8* %55, i64 %idxprom, !dbg !827
  %58 = load i8, i8* %arrayidx74, align 1, !dbg !827
  %idxprom75 = zext i8 %58 to i64, !dbg !826
  %arrayidx76 = getelementptr inbounds i8, i8* %54, i64 %idxprom75, !dbg !826
  %59 = load i8, i8* %arrayidx76, align 1, !dbg !826
  %tobool77 = icmp ne i8 %59, 0, !dbg !830
  %lnot = xor i1 %tobool77, true, !dbg !830
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %60 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !831
  br i1 %60, label %while.body, label %while.end, !dbg !821

while.body:                                       ; preds = %land.end
  %61 = load i32, i32* %range.addr, align 4, !dbg !832
  %dec = add nsw i32 %61, -1, !dbg !832
  store i32 %dec, i32* %range.addr, align 4, !dbg !832
  br label %while.cond, !dbg !821, !llvm.loop !833

while.end:                                        ; preds = %land.end
  br label %if.end92, !dbg !821

if.else78:                                        ; preds = %cond.end
  br label %while.cond79, !dbg !834

while.cond79:                                     ; preds = %while.body89, %if.else78
  %62 = load i32, i32* %range.addr, align 4, !dbg !835
  %63 = load i32, i32* %lim, align 4, !dbg !836
  %cmp80 = icmp sgt i32 %62, %63, !dbg !837
  br i1 %cmp80, label %land.rhs82, label %land.end88, !dbg !838

land.rhs82:                                       ; preds = %while.cond79
  %64 = load i8*, i8** %fastmap, align 8, !dbg !839
  %65 = load i8*, i8** %d, align 8, !dbg !840
  %incdec.ptr83 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !840
  store i8* %incdec.ptr83, i8** %d, align 8, !dbg !840
  %66 = load i8, i8* %65, align 1, !dbg !841
  %idxprom84 = zext i8 %66 to i64, !dbg !839
  %arrayidx85 = getelementptr inbounds i8, i8* %64, i64 %idxprom84, !dbg !839
  %67 = load i8, i8* %arrayidx85, align 1, !dbg !839
  %tobool86 = icmp ne i8 %67, 0, !dbg !842
  %lnot87 = xor i1 %tobool86, true, !dbg !842
  br label %land.end88

land.end88:                                       ; preds = %land.rhs82, %while.cond79
  %68 = phi i1 [ false, %while.cond79 ], [ %lnot87, %land.rhs82 ], !dbg !831
  br i1 %68, label %while.body89, label %while.end91, !dbg !834

while.body89:                                     ; preds = %land.end88
  %69 = load i32, i32* %range.addr, align 4, !dbg !843
  %dec90 = add nsw i32 %69, -1, !dbg !843
  store i32 %dec90, i32* %range.addr, align 4, !dbg !843
  br label %while.cond79, !dbg !834, !llvm.loop !844

while.end91:                                      ; preds = %land.end88
  br label %if.end92

if.end92:                                         ; preds = %while.end91, %while.end
  %70 = load i32, i32* %irange, align 4, !dbg !845
  %71 = load i32, i32* %range.addr, align 4, !dbg !846
  %sub93 = sub nsw i32 %70, %71, !dbg !847
  %72 = load i32, i32* %startpos.addr, align 4, !dbg !848
  %add94 = add nsw i32 %72, %sub93, !dbg !848
  store i32 %add94, i32* %startpos.addr, align 4, !dbg !848
  br label %if.end128, !dbg !849

if.else95:                                        ; preds = %if.then52
  call void @llvm.dbg.declare(metadata i8* %c, metadata !850, metadata !DIExpression()), !dbg !852
  %73 = load i32, i32* %size1.addr, align 4, !dbg !853
  %cmp96 = icmp eq i32 %73, 0, !dbg !854
  br i1 %cmp96, label %cond.true101, label %lor.lhs.false98, !dbg !855

lor.lhs.false98:                                  ; preds = %if.else95
  %74 = load i32, i32* %startpos.addr, align 4, !dbg !856
  %75 = load i32, i32* %size1.addr, align 4, !dbg !857
  %cmp99 = icmp sge i32 %74, %75, !dbg !858
  br i1 %cmp99, label %cond.true101, label %cond.false106, !dbg !853

cond.true101:                                     ; preds = %lor.lhs.false98, %if.else95
  %76 = load i8*, i8** %string2.addr, align 8, !dbg !859
  %77 = load i32, i32* %startpos.addr, align 4, !dbg !860
  %78 = load i32, i32* %size1.addr, align 4, !dbg !861
  %sub102 = sub nsw i32 %77, %78, !dbg !862
  %idxprom103 = sext i32 %sub102 to i64, !dbg !859
  %arrayidx104 = getelementptr inbounds i8, i8* %76, i64 %idxprom103, !dbg !859
  %79 = load i8, i8* %arrayidx104, align 1, !dbg !859
  %conv105 = sext i8 %79 to i32, !dbg !859
  br label %cond.end110, !dbg !853

cond.false106:                                    ; preds = %lor.lhs.false98
  %80 = load i8*, i8** %string1.addr, align 8, !dbg !863
  %81 = load i32, i32* %startpos.addr, align 4, !dbg !864
  %idxprom107 = sext i32 %81 to i64, !dbg !863
  %arrayidx108 = getelementptr inbounds i8, i8* %80, i64 %idxprom107, !dbg !863
  %82 = load i8, i8* %arrayidx108, align 1, !dbg !863
  %conv109 = sext i8 %82 to i32, !dbg !863
  br label %cond.end110, !dbg !853

cond.end110:                                      ; preds = %cond.false106, %cond.true101
  %cond111 = phi i32 [ %conv105, %cond.true101 ], [ %conv109, %cond.false106 ], !dbg !853
  %conv112 = trunc i32 %cond111 to i8, !dbg !865
  store i8 %conv112, i8* %c, align 1, !dbg !852
  %83 = load i8*, i8** %fastmap, align 8, !dbg !866
  %84 = load i8*, i8** %translate, align 8, !dbg !868
  %tobool113 = icmp ne i8* %84, null, !dbg !868
  br i1 %tobool113, label %cond.true114, label %cond.false118, !dbg !868

cond.true114:                                     ; preds = %cond.end110
  %85 = load i8*, i8** %translate, align 8, !dbg !868
  %86 = load i8, i8* %c, align 1, !dbg !868
  %idxprom115 = zext i8 %86 to i64, !dbg !868
  %arrayidx116 = getelementptr inbounds i8, i8* %85, i64 %idxprom115, !dbg !868
  %87 = load i8, i8* %arrayidx116, align 1, !dbg !868
  %conv117 = sext i8 %87 to i32, !dbg !868
  br label %cond.end120, !dbg !868

cond.false118:                                    ; preds = %cond.end110
  %88 = load i8, i8* %c, align 1, !dbg !868
  %conv119 = sext i8 %88 to i32, !dbg !868
  br label %cond.end120, !dbg !868

cond.end120:                                      ; preds = %cond.false118, %cond.true114
  %cond121 = phi i32 [ %conv117, %cond.true114 ], [ %conv119, %cond.false118 ], !dbg !868
  %conv122 = trunc i32 %cond121 to i8, !dbg !869
  %idxprom123 = zext i8 %conv122 to i64, !dbg !866
  %arrayidx124 = getelementptr inbounds i8, i8* %83, i64 %idxprom123, !dbg !866
  %89 = load i8, i8* %arrayidx124, align 1, !dbg !866
  %tobool125 = icmp ne i8 %89, 0, !dbg !866
  br i1 %tobool125, label %if.end127, label %if.then126, !dbg !870

if.then126:                                       ; preds = %cond.end120
  br label %advance, !dbg !871

if.end127:                                        ; preds = %cond.end120
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end92
  br label %if.end129, !dbg !872

if.end129:                                        ; preds = %if.end128, %land.lhs.true47, %land.lhs.true44, %for.cond
  %90 = load i32, i32* %range.addr, align 4, !dbg !873
  %cmp130 = icmp sge i32 %90, 0, !dbg !875
  br i1 %cmp130, label %land.lhs.true132, label %if.end144, !dbg !876

land.lhs.true132:                                 ; preds = %if.end129
  %91 = load i32, i32* %startpos.addr, align 4, !dbg !877
  %92 = load i32, i32* %total_size, align 4, !dbg !878
  %cmp133 = icmp eq i32 %91, %92, !dbg !879
  br i1 %cmp133, label %land.lhs.true135, label %if.end144, !dbg !880

land.lhs.true135:                                 ; preds = %land.lhs.true132
  %93 = load i8*, i8** %fastmap, align 8, !dbg !881
  %tobool136 = icmp ne i8* %93, null, !dbg !881
  br i1 %tobool136, label %land.lhs.true137, label %if.end144, !dbg !882

land.lhs.true137:                                 ; preds = %land.lhs.true135
  %94 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !883
  %can_be_null138 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %94, i32 0, i32 7, !dbg !884
  %bf.load139 = load i8, i8* %can_be_null138, align 8, !dbg !884
  %bf.clear140 = and i8 %bf.load139, 1, !dbg !884
  %bf.cast141 = zext i8 %bf.clear140 to i32, !dbg !884
  %tobool142 = icmp ne i32 %bf.cast141, 0, !dbg !883
  br i1 %tobool142, label %if.end144, label %if.then143, !dbg !885

if.then143:                                       ; preds = %land.lhs.true137
  store i32 -1, i32* %retval, align 4, !dbg !886
  br label %return, !dbg !886

if.end144:                                        ; preds = %land.lhs.true137, %land.lhs.true135, %land.lhs.true132, %if.end129
  %95 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !888
  %96 = load i8*, i8** %string1.addr, align 8, !dbg !889
  %97 = load i32, i32* %size1.addr, align 4, !dbg !890
  %98 = load i8*, i8** %string2.addr, align 8, !dbg !891
  %99 = load i32, i32* %size2.addr, align 4, !dbg !892
  %100 = load i32, i32* %startpos.addr, align 4, !dbg !893
  %101 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !894
  %102 = load i32, i32* %stop.addr, align 4, !dbg !895
  %call145 = call i32 @byte_re_match_2_internal(%struct.re_pattern_buffer* %95, i8* %96, i32 %97, i8* %98, i32 %99, i32 %100, %struct.re_registers* %101, i32 %102), !dbg !896
  store i32 %call145, i32* %val, align 4, !dbg !897
  %103 = load i32, i32* %val, align 4, !dbg !898
  %cmp146 = icmp sge i32 %103, 0, !dbg !900
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !901

if.then148:                                       ; preds = %if.end144
  %104 = load i32, i32* %startpos.addr, align 4, !dbg !902
  store i32 %104, i32* %retval, align 4, !dbg !904
  br label %return, !dbg !904

if.end149:                                        ; preds = %if.end144
  %105 = load i32, i32* %val, align 4, !dbg !905
  %cmp150 = icmp eq i32 %105, -2, !dbg !907
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !908

if.then152:                                       ; preds = %if.end149
  store i32 -2, i32* %retval, align 4, !dbg !909
  br label %return, !dbg !909

if.end153:                                        ; preds = %if.end149
  br label %advance, !dbg !911

advance:                                          ; preds = %if.end153, %if.then126
  call void @llvm.dbg.label(metadata !912), !dbg !913
  %106 = load i32, i32* %range.addr, align 4, !dbg !914
  %tobool154 = icmp ne i32 %106, 0, !dbg !914
  br i1 %tobool154, label %if.else156, label %if.then155, !dbg !916

if.then155:                                       ; preds = %advance
  br label %for.end, !dbg !917

if.else156:                                       ; preds = %advance
  %107 = load i32, i32* %range.addr, align 4, !dbg !918
  %cmp157 = icmp sgt i32 %107, 0, !dbg !920
  br i1 %cmp157, label %if.then159, label %if.else161, !dbg !921

if.then159:                                       ; preds = %if.else156
  %108 = load i32, i32* %range.addr, align 4, !dbg !922
  %dec160 = add nsw i32 %108, -1, !dbg !922
  store i32 %dec160, i32* %range.addr, align 4, !dbg !922
  %109 = load i32, i32* %startpos.addr, align 4, !dbg !924
  %inc = add nsw i32 %109, 1, !dbg !924
  store i32 %inc, i32* %startpos.addr, align 4, !dbg !924
  br label %if.end164, !dbg !925

if.else161:                                       ; preds = %if.else156
  %110 = load i32, i32* %range.addr, align 4, !dbg !926
  %inc162 = add nsw i32 %110, 1, !dbg !926
  store i32 %inc162, i32* %range.addr, align 4, !dbg !926
  %111 = load i32, i32* %startpos.addr, align 4, !dbg !928
  %dec163 = add nsw i32 %111, -1, !dbg !928
  store i32 %dec163, i32* %startpos.addr, align 4, !dbg !928
  br label %if.end164

if.end164:                                        ; preds = %if.else161, %if.then159
  br label %if.end165

if.end165:                                        ; preds = %if.end164
  br label %for.cond, !dbg !929, !llvm.loop !930

for.end:                                          ; preds = %if.then155
  store i32 -1, i32* %retval, align 4, !dbg !933
  br label %return, !dbg !933

return:                                           ; preds = %for.end, %if.then152, %if.then148, %if.then143, %if.then40, %if.then27, %if.then
  %112 = load i32, i32* %retval, align 4, !dbg !934
  ret i32 %112, !dbg !934
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @xre_match(%struct.re_pattern_buffer* %bufp, i8* %string, i32 %size, i32 %pos, %struct.re_registers* %regs) #0 !dbg !935 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %string.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %pos.addr = alloca i32, align 4
  %regs.addr = alloca %struct.re_registers*, align 8
  %result = alloca i32, align 4
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !938, metadata !DIExpression()), !dbg !939
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !940, metadata !DIExpression()), !dbg !941
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !942, metadata !DIExpression()), !dbg !943
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !944, metadata !DIExpression()), !dbg !945
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_registers** %regs.addr, metadata !946, metadata !DIExpression()), !dbg !947
  call void @llvm.dbg.declare(metadata i32* %result, metadata !948, metadata !DIExpression()), !dbg !949
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !950
  %1 = load i8*, i8** %string.addr, align 8, !dbg !951
  %2 = load i32, i32* %size.addr, align 4, !dbg !952
  %3 = load i32, i32* %pos.addr, align 4, !dbg !953
  %4 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !954
  %5 = load i32, i32* %size.addr, align 4, !dbg !955
  %call = call i32 @byte_re_match_2_internal(%struct.re_pattern_buffer* %0, i8* null, i32 0, i8* %1, i32 %2, i32 %3, %struct.re_registers* %4, i32 %5), !dbg !956
  store i32 %call, i32* %result, align 4, !dbg !957
  %6 = load i32, i32* %result, align 4, !dbg !958
  ret i32 %6, !dbg !959
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @byte_re_match_2_internal(%struct.re_pattern_buffer* %bufp, i8* %string1, i32 %size1, i8* %string2, i32 %size2, i32 %pos, %struct.re_registers* %regs, i32 %stop) #0 !dbg !960 {
entry:
  %retval = alloca i32, align 4
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %string1.addr = alloca i8*, align 8
  %size1.addr = alloca i32, align 4
  %string2.addr = alloca i8*, align 8
  %size2.addr = alloca i32, align 4
  %pos.addr = alloca i32, align 4
  %regs.addr = alloca %struct.re_registers*, align 8
  %stop.addr = alloca i32, align 4
  %mcnt = alloca i32, align 4
  %p1 = alloca i8*, align 8
  %end1 = alloca i8*, align 8
  %end2 = alloca i8*, align 8
  %end_match_1 = alloca i8*, align 8
  %end_match_2 = alloca i8*, align 8
  %d = alloca i8*, align 8
  %dend = alloca i8*, align 8
  %p = alloca i8*, align 8
  %pend = alloca i8*, align 8
  %just_past_start_mem = alloca i8*, align 8
  %translate = alloca i8*, align 8
  %fail_stack = alloca %struct.byte_fail_stack_type, align 8
  %num_regs = alloca i64, align 8
  %lowest_active_reg = alloca i64, align 8
  %highest_active_reg = alloca i64, align 8
  %regstart = alloca i8**, align 8
  %regend = alloca i8**, align 8
  %old_regstart = alloca i8**, align 8
  %old_regend = alloca i8**, align 8
  %reg_info = alloca %union.byte_register_info_type*, align 8
  %best_regs_set = alloca i32, align 4
  %best_regstart = alloca i8**, align 8
  %best_regend = alloca i8**, align 8
  %match_end = alloca i8*, align 8
  %set_regs_matched_done = alloca i32, align 4
  %reg_dummy = alloca i8**, align 8
  %reg_info_dummy = alloca %union.byte_register_info_type*, align 8
  %same_str_p = alloca i8, align 1
  %best_match_p = alloca i8, align 1
  %r = alloca i64, align 8
  %r690 = alloca i64, align 8
  %c = alloca i8, align 1
  %negate = alloca i8, align 1
  %r767 = alloca i64, align 8
  %r890 = alloca i8, align 1
  %is_a_jump_n = alloca i8, align 1
  %r989 = alloca i32, align 4
  %destination = alloca i8*, align 8
  %this_reg = alloca i64, align 8
  %d2 = alloca i8*, align 8
  %dend2 = alloca i8*, align 8
  %regno = alloca i32, align 4
  %r1256 = alloca i64, align 8
  %destination1372 = alloca i8*, align 8
  %this_reg1373 = alloca i64, align 8
  %destination1519 = alloca i8*, align 8
  %this_reg1520 = alloca i64, align 8
  %p2 = alloca i8*, align 8
  %c1684 = alloca i8, align 1
  %negate1718 = alloca i32, align 4
  %idx = alloca i32, align 4
  %idx1838 = alloca i32, align 4
  %dummy_low_reg = alloca i64, align 8
  %dummy_high_reg = alloca i64, align 8
  %pdummy = alloca i8*, align 8
  %sdummy = alloca i8*, align 8
  %this_reg1895 = alloca i64, align 8
  %string_temp = alloca i8*, align 8
  %destination1973 = alloca i8*, align 8
  %this_reg1974 = alloca i64, align 8
  %destination2073 = alloca i8*, align 8
  %this_reg2074 = alloca i64, align 8
  %prevchar = alloca i8, align 1
  %thischar = alloca i8, align 1
  %prevchar2348 = alloca i8, align 1
  %thischar2349 = alloca i8, align 1
  %r2591 = alloca i64, align 8
  %r2651 = alloca i64, align 8
  %this_reg2679 = alloca i64, align 8
  %string_temp2680 = alloca i8*, align 8
  %is_a_jump_n2745 = alloca i8, align 1
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !963, metadata !DIExpression()), !dbg !964
  store i8* %string1, i8** %string1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string1.addr, metadata !965, metadata !DIExpression()), !dbg !966
  store i32 %size1, i32* %size1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size1.addr, metadata !967, metadata !DIExpression()), !dbg !968
  store i8* %string2, i8** %string2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string2.addr, metadata !969, metadata !DIExpression()), !dbg !970
  store i32 %size2, i32* %size2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size2.addr, metadata !971, metadata !DIExpression()), !dbg !972
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !973, metadata !DIExpression()), !dbg !974
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_registers** %regs.addr, metadata !975, metadata !DIExpression()), !dbg !976
  store i32 %stop, i32* %stop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stop.addr, metadata !977, metadata !DIExpression()), !dbg !978
  call void @llvm.dbg.declare(metadata i32* %mcnt, metadata !979, metadata !DIExpression()), !dbg !980
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !981, metadata !DIExpression()), !dbg !982
  call void @llvm.dbg.declare(metadata i8** %end1, metadata !983, metadata !DIExpression()), !dbg !984
  call void @llvm.dbg.declare(metadata i8** %end2, metadata !985, metadata !DIExpression()), !dbg !986
  call void @llvm.dbg.declare(metadata i8** %end_match_1, metadata !987, metadata !DIExpression()), !dbg !988
  call void @llvm.dbg.declare(metadata i8** %end_match_2, metadata !989, metadata !DIExpression()), !dbg !990
  call void @llvm.dbg.declare(metadata i8** %d, metadata !991, metadata !DIExpression()), !dbg !992
  call void @llvm.dbg.declare(metadata i8** %dend, metadata !993, metadata !DIExpression()), !dbg !994
  call void @llvm.dbg.declare(metadata i8** %p, metadata !995, metadata !DIExpression()), !dbg !996
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !997
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %0, i32 0, i32 0, !dbg !998
  %1 = load i8*, i8** %buffer, align 8, !dbg !998
  store i8* %1, i8** %p, align 8, !dbg !996
  call void @llvm.dbg.declare(metadata i8** %pend, metadata !999, metadata !DIExpression()), !dbg !1000
  %2 = load i8*, i8** %p, align 8, !dbg !1001
  %3 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1002
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3, i32 0, i32 2, !dbg !1003
  %4 = load i64, i64* %used, align 8, !dbg !1003
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %4, !dbg !1004
  store i8* %add.ptr, i8** %pend, align 8, !dbg !1000
  call void @llvm.dbg.declare(metadata i8** %just_past_start_mem, metadata !1005, metadata !DIExpression()), !dbg !1006
  store i8* null, i8** %just_past_start_mem, align 8, !dbg !1006
  call void @llvm.dbg.declare(metadata i8** %translate, metadata !1007, metadata !DIExpression()), !dbg !1008
  %5 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1009
  %translate1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %5, i32 0, i32 5, !dbg !1010
  %6 = load i8*, i8** %translate1, align 8, !dbg !1010
  store i8* %6, i8** %translate, align 8, !dbg !1008
  call void @llvm.dbg.declare(metadata %struct.byte_fail_stack_type* %fail_stack, metadata !1011, metadata !DIExpression()), !dbg !1012
  call void @llvm.dbg.declare(metadata i64* %num_regs, metadata !1013, metadata !DIExpression()), !dbg !1014
  %7 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1015
  %re_nsub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %7, i32 0, i32 6, !dbg !1016
  %8 = load i64, i64* %re_nsub, align 8, !dbg !1016
  %add = add i64 %8, 1, !dbg !1017
  store i64 %add, i64* %num_regs, align 8, !dbg !1014
  call void @llvm.dbg.declare(metadata i64* %lowest_active_reg, metadata !1018, metadata !DIExpression()), !dbg !1019
  store i64 257, i64* %lowest_active_reg, align 8, !dbg !1019
  call void @llvm.dbg.declare(metadata i64* %highest_active_reg, metadata !1020, metadata !DIExpression()), !dbg !1021
  store i64 256, i64* %highest_active_reg, align 8, !dbg !1021
  call void @llvm.dbg.declare(metadata i8*** %regstart, metadata !1022, metadata !DIExpression()), !dbg !1023
  call void @llvm.dbg.declare(metadata i8*** %regend, metadata !1024, metadata !DIExpression()), !dbg !1025
  call void @llvm.dbg.declare(metadata i8*** %old_regstart, metadata !1026, metadata !DIExpression()), !dbg !1027
  call void @llvm.dbg.declare(metadata i8*** %old_regend, metadata !1028, metadata !DIExpression()), !dbg !1029
  call void @llvm.dbg.declare(metadata %union.byte_register_info_type** %reg_info, metadata !1030, metadata !DIExpression()), !dbg !1031
  call void @llvm.dbg.declare(metadata i32* %best_regs_set, metadata !1032, metadata !DIExpression()), !dbg !1033
  store i32 0, i32* %best_regs_set, align 4, !dbg !1033
  call void @llvm.dbg.declare(metadata i8*** %best_regstart, metadata !1034, metadata !DIExpression()), !dbg !1035
  call void @llvm.dbg.declare(metadata i8*** %best_regend, metadata !1036, metadata !DIExpression()), !dbg !1037
  call void @llvm.dbg.declare(metadata i8** %match_end, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i8* null, i8** %match_end, align 8, !dbg !1039
  call void @llvm.dbg.declare(metadata i32* %set_regs_matched_done, metadata !1040, metadata !DIExpression()), !dbg !1041
  store i32 0, i32* %set_regs_matched_done, align 4, !dbg !1041
  call void @llvm.dbg.declare(metadata i8*** %reg_dummy, metadata !1042, metadata !DIExpression()), !dbg !1043
  call void @llvm.dbg.declare(metadata %union.byte_register_info_type** %reg_info_dummy, metadata !1044, metadata !DIExpression()), !dbg !1045
  br label %do.body, !dbg !1046

do.body:                                          ; preds = %entry
  %9 = alloca i8, i64 40, align 16, !dbg !1047
  %10 = bitcast i8* %9 to %union.byte_fail_stack_elt*, !dbg !1047
  %stack = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !1047
  store %union.byte_fail_stack_elt* %10, %union.byte_fail_stack_elt** %stack, align 8, !dbg !1047
  %stack2 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !1049
  %11 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2, align 8, !dbg !1049
  %cmp = icmp eq %union.byte_fail_stack_elt* %11, null, !dbg !1049
  br i1 %cmp, label %if.then, label %if.end, !dbg !1047

if.then:                                          ; preds = %do.body
  store i32 -2, i32* %retval, align 4, !dbg !1049
  br label %return, !dbg !1049

if.end:                                           ; preds = %do.body
  %size = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !1047
  store i32 5, i32* %size, align 8, !dbg !1047
  %avail = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !1047
  store i32 0, i32* %avail, align 4, !dbg !1047
  br label %do.end, !dbg !1047

do.end:                                           ; preds = %if.end
  %12 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1051
  %re_nsub3 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %12, i32 0, i32 6, !dbg !1053
  %13 = load i64, i64* %re_nsub3, align 8, !dbg !1053
  %tobool = icmp ne i64 %13, 0, !dbg !1051
  br i1 %tobool, label %if.then4, label %if.else, !dbg !1054

if.then4:                                         ; preds = %do.end
  %14 = load i64, i64* %num_regs, align 8, !dbg !1055
  %mul = mul i64 %14, 8, !dbg !1055
  %15 = alloca i8, i64 %mul, align 16, !dbg !1055
  %16 = bitcast i8* %15 to i8**, !dbg !1055
  store i8** %16, i8*** %regstart, align 8, !dbg !1057
  %17 = load i64, i64* %num_regs, align 8, !dbg !1058
  %mul5 = mul i64 %17, 8, !dbg !1058
  %18 = alloca i8, i64 %mul5, align 16, !dbg !1058
  %19 = bitcast i8* %18 to i8**, !dbg !1058
  store i8** %19, i8*** %regend, align 8, !dbg !1059
  %20 = load i64, i64* %num_regs, align 8, !dbg !1060
  %mul6 = mul i64 %20, 8, !dbg !1060
  %21 = alloca i8, i64 %mul6, align 16, !dbg !1060
  %22 = bitcast i8* %21 to i8**, !dbg !1060
  store i8** %22, i8*** %old_regstart, align 8, !dbg !1061
  %23 = load i64, i64* %num_regs, align 8, !dbg !1062
  %mul7 = mul i64 %23, 8, !dbg !1062
  %24 = alloca i8, i64 %mul7, align 16, !dbg !1062
  %25 = bitcast i8* %24 to i8**, !dbg !1062
  store i8** %25, i8*** %old_regend, align 8, !dbg !1063
  %26 = load i64, i64* %num_regs, align 8, !dbg !1064
  %mul8 = mul i64 %26, 8, !dbg !1064
  %27 = alloca i8, i64 %mul8, align 16, !dbg !1064
  %28 = bitcast i8* %27 to i8**, !dbg !1064
  store i8** %28, i8*** %best_regstart, align 8, !dbg !1065
  %29 = load i64, i64* %num_regs, align 8, !dbg !1066
  %mul9 = mul i64 %29, 8, !dbg !1066
  %30 = alloca i8, i64 %mul9, align 16, !dbg !1066
  %31 = bitcast i8* %30 to i8**, !dbg !1066
  store i8** %31, i8*** %best_regend, align 8, !dbg !1067
  %32 = load i64, i64* %num_regs, align 8, !dbg !1068
  %mul10 = mul i64 %32, 8, !dbg !1068
  %33 = alloca i8, i64 %mul10, align 16, !dbg !1068
  %34 = bitcast i8* %33 to %union.byte_register_info_type*, !dbg !1068
  store %union.byte_register_info_type* %34, %union.byte_register_info_type** %reg_info, align 8, !dbg !1069
  %35 = load i64, i64* %num_regs, align 8, !dbg !1070
  %mul11 = mul i64 %35, 8, !dbg !1070
  %36 = alloca i8, i64 %mul11, align 16, !dbg !1070
  %37 = bitcast i8* %36 to i8**, !dbg !1070
  store i8** %37, i8*** %reg_dummy, align 8, !dbg !1071
  %38 = load i64, i64* %num_regs, align 8, !dbg !1072
  %mul12 = mul i64 %38, 8, !dbg !1072
  %39 = alloca i8, i64 %mul12, align 16, !dbg !1072
  %40 = bitcast i8* %39 to %union.byte_register_info_type*, !dbg !1072
  store %union.byte_register_info_type* %40, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1073
  %41 = load i8**, i8*** %regstart, align 8, !dbg !1074
  %tobool13 = icmp ne i8** %41, null, !dbg !1074
  br i1 %tobool13, label %land.lhs.true, label %if.then29, !dbg !1076

land.lhs.true:                                    ; preds = %if.then4
  %42 = load i8**, i8*** %regend, align 8, !dbg !1077
  %tobool14 = icmp ne i8** %42, null, !dbg !1077
  br i1 %tobool14, label %land.lhs.true15, label %if.then29, !dbg !1078

land.lhs.true15:                                  ; preds = %land.lhs.true
  %43 = load i8**, i8*** %old_regstart, align 8, !dbg !1079
  %tobool16 = icmp ne i8** %43, null, !dbg !1079
  br i1 %tobool16, label %land.lhs.true17, label %if.then29, !dbg !1080

land.lhs.true17:                                  ; preds = %land.lhs.true15
  %44 = load i8**, i8*** %old_regend, align 8, !dbg !1081
  %tobool18 = icmp ne i8** %44, null, !dbg !1081
  br i1 %tobool18, label %land.lhs.true19, label %if.then29, !dbg !1082

land.lhs.true19:                                  ; preds = %land.lhs.true17
  %45 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1083
  %tobool20 = icmp ne %union.byte_register_info_type* %45, null, !dbg !1083
  br i1 %tobool20, label %land.lhs.true21, label %if.then29, !dbg !1084

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %46 = load i8**, i8*** %best_regstart, align 8, !dbg !1085
  %tobool22 = icmp ne i8** %46, null, !dbg !1085
  br i1 %tobool22, label %land.lhs.true23, label %if.then29, !dbg !1086

land.lhs.true23:                                  ; preds = %land.lhs.true21
  %47 = load i8**, i8*** %best_regend, align 8, !dbg !1087
  %tobool24 = icmp ne i8** %47, null, !dbg !1087
  br i1 %tobool24, label %land.lhs.true25, label %if.then29, !dbg !1088

land.lhs.true25:                                  ; preds = %land.lhs.true23
  %48 = load i8**, i8*** %reg_dummy, align 8, !dbg !1089
  %tobool26 = icmp ne i8** %48, null, !dbg !1089
  br i1 %tobool26, label %land.lhs.true27, label %if.then29, !dbg !1090

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %49 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1091
  %tobool28 = icmp ne %union.byte_register_info_type* %49, null, !dbg !1091
  br i1 %tobool28, label %if.end59, label %if.then29, !dbg !1092

if.then29:                                        ; preds = %land.lhs.true27, %land.lhs.true25, %land.lhs.true23, %land.lhs.true21, %land.lhs.true19, %land.lhs.true17, %land.lhs.true15, %land.lhs.true, %if.then4
  br label %do.body30, !dbg !1093

do.body30:                                        ; preds = %if.then29
  %50 = load i8**, i8*** %regstart, align 8, !dbg !1095
  %tobool31 = icmp ne i8** %50, null, !dbg !1095
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !1098

if.then32:                                        ; preds = %do.body30
  br label %if.end33, !dbg !1095

if.end33:                                         ; preds = %if.then32, %do.body30
  store i8** null, i8*** %regstart, align 8, !dbg !1098
  %51 = load i8**, i8*** %regend, align 8, !dbg !1099
  %tobool34 = icmp ne i8** %51, null, !dbg !1099
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !1098

if.then35:                                        ; preds = %if.end33
  br label %if.end36, !dbg !1099

if.end36:                                         ; preds = %if.then35, %if.end33
  store i8** null, i8*** %regend, align 8, !dbg !1098
  %52 = load i8**, i8*** %old_regstart, align 8, !dbg !1101
  %tobool37 = icmp ne i8** %52, null, !dbg !1101
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !1098

if.then38:                                        ; preds = %if.end36
  br label %if.end39, !dbg !1101

if.end39:                                         ; preds = %if.then38, %if.end36
  store i8** null, i8*** %old_regstart, align 8, !dbg !1098
  %53 = load i8**, i8*** %old_regend, align 8, !dbg !1103
  %tobool40 = icmp ne i8** %53, null, !dbg !1103
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !1098

if.then41:                                        ; preds = %if.end39
  br label %if.end42, !dbg !1103

if.end42:                                         ; preds = %if.then41, %if.end39
  store i8** null, i8*** %old_regend, align 8, !dbg !1098
  %54 = load i8**, i8*** %best_regstart, align 8, !dbg !1105
  %tobool43 = icmp ne i8** %54, null, !dbg !1105
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !1098

if.then44:                                        ; preds = %if.end42
  br label %if.end45, !dbg !1105

if.end45:                                         ; preds = %if.then44, %if.end42
  store i8** null, i8*** %best_regstart, align 8, !dbg !1098
  %55 = load i8**, i8*** %best_regend, align 8, !dbg !1107
  %tobool46 = icmp ne i8** %55, null, !dbg !1107
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !1098

if.then47:                                        ; preds = %if.end45
  br label %if.end48, !dbg !1107

if.end48:                                         ; preds = %if.then47, %if.end45
  store i8** null, i8*** %best_regend, align 8, !dbg !1098
  %56 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1109
  %tobool49 = icmp ne %union.byte_register_info_type* %56, null, !dbg !1109
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !1098

if.then50:                                        ; preds = %if.end48
  br label %if.end51, !dbg !1109

if.end51:                                         ; preds = %if.then50, %if.end48
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info, align 8, !dbg !1098
  %57 = load i8**, i8*** %reg_dummy, align 8, !dbg !1111
  %tobool52 = icmp ne i8** %57, null, !dbg !1111
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !1098

if.then53:                                        ; preds = %if.end51
  br label %if.end54, !dbg !1111

if.end54:                                         ; preds = %if.then53, %if.end51
  store i8** null, i8*** %reg_dummy, align 8, !dbg !1098
  %58 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1113
  %tobool55 = icmp ne %union.byte_register_info_type* %58, null, !dbg !1113
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !1098

if.then56:                                        ; preds = %if.end54
  br label %if.end57, !dbg !1113

if.end57:                                         ; preds = %if.then56, %if.end54
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1098
  br label %do.end58, !dbg !1098

do.end58:                                         ; preds = %if.end57
  store i32 -2, i32* %retval, align 4, !dbg !1115
  br label %return, !dbg !1115

if.end59:                                         ; preds = %land.lhs.true27
  br label %if.end60, !dbg !1116

if.else:                                          ; preds = %do.end
  store i8** null, i8*** %reg_dummy, align 8, !dbg !1117
  store i8** null, i8*** %best_regend, align 8, !dbg !1119
  store i8** null, i8*** %best_regstart, align 8, !dbg !1120
  store i8** null, i8*** %old_regend, align 8, !dbg !1121
  store i8** null, i8*** %old_regstart, align 8, !dbg !1122
  store i8** null, i8*** %regend, align 8, !dbg !1123
  store i8** null, i8*** %regstart, align 8, !dbg !1124
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1125
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info, align 8, !dbg !1126
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.end59
  %59 = load i32, i32* %pos.addr, align 4, !dbg !1127
  %cmp61 = icmp slt i32 %59, 0, !dbg !1129
  br i1 %cmp61, label %if.then64, label %lor.lhs.false, !dbg !1130

lor.lhs.false:                                    ; preds = %if.end60
  %60 = load i32, i32* %pos.addr, align 4, !dbg !1131
  %61 = load i32, i32* %size1.addr, align 4, !dbg !1132
  %62 = load i32, i32* %size2.addr, align 4, !dbg !1133
  %add62 = add nsw i32 %61, %62, !dbg !1134
  %cmp63 = icmp sgt i32 %60, %add62, !dbg !1135
  br i1 %cmp63, label %if.then64, label %if.end94, !dbg !1136

if.then64:                                        ; preds = %lor.lhs.false, %if.end60
  br label %do.body65, !dbg !1137

do.body65:                                        ; preds = %if.then64
  %63 = load i8**, i8*** %regstart, align 8, !dbg !1139
  %tobool66 = icmp ne i8** %63, null, !dbg !1139
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !1142

if.then67:                                        ; preds = %do.body65
  br label %if.end68, !dbg !1139

if.end68:                                         ; preds = %if.then67, %do.body65
  store i8** null, i8*** %regstart, align 8, !dbg !1142
  %64 = load i8**, i8*** %regend, align 8, !dbg !1143
  %tobool69 = icmp ne i8** %64, null, !dbg !1143
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !1142

if.then70:                                        ; preds = %if.end68
  br label %if.end71, !dbg !1143

if.end71:                                         ; preds = %if.then70, %if.end68
  store i8** null, i8*** %regend, align 8, !dbg !1142
  %65 = load i8**, i8*** %old_regstart, align 8, !dbg !1145
  %tobool72 = icmp ne i8** %65, null, !dbg !1145
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !1142

if.then73:                                        ; preds = %if.end71
  br label %if.end74, !dbg !1145

if.end74:                                         ; preds = %if.then73, %if.end71
  store i8** null, i8*** %old_regstart, align 8, !dbg !1142
  %66 = load i8**, i8*** %old_regend, align 8, !dbg !1147
  %tobool75 = icmp ne i8** %66, null, !dbg !1147
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !1142

if.then76:                                        ; preds = %if.end74
  br label %if.end77, !dbg !1147

if.end77:                                         ; preds = %if.then76, %if.end74
  store i8** null, i8*** %old_regend, align 8, !dbg !1142
  %67 = load i8**, i8*** %best_regstart, align 8, !dbg !1149
  %tobool78 = icmp ne i8** %67, null, !dbg !1149
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !1142

if.then79:                                        ; preds = %if.end77
  br label %if.end80, !dbg !1149

if.end80:                                         ; preds = %if.then79, %if.end77
  store i8** null, i8*** %best_regstart, align 8, !dbg !1142
  %68 = load i8**, i8*** %best_regend, align 8, !dbg !1151
  %tobool81 = icmp ne i8** %68, null, !dbg !1151
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !1142

if.then82:                                        ; preds = %if.end80
  br label %if.end83, !dbg !1151

if.end83:                                         ; preds = %if.then82, %if.end80
  store i8** null, i8*** %best_regend, align 8, !dbg !1142
  %69 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1153
  %tobool84 = icmp ne %union.byte_register_info_type* %69, null, !dbg !1153
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !1142

if.then85:                                        ; preds = %if.end83
  br label %if.end86, !dbg !1153

if.end86:                                         ; preds = %if.then85, %if.end83
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info, align 8, !dbg !1142
  %70 = load i8**, i8*** %reg_dummy, align 8, !dbg !1155
  %tobool87 = icmp ne i8** %70, null, !dbg !1155
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !1142

if.then88:                                        ; preds = %if.end86
  br label %if.end89, !dbg !1155

if.end89:                                         ; preds = %if.then88, %if.end86
  store i8** null, i8*** %reg_dummy, align 8, !dbg !1142
  %71 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1157
  %tobool90 = icmp ne %union.byte_register_info_type* %71, null, !dbg !1157
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !1142

if.then91:                                        ; preds = %if.end89
  br label %if.end92, !dbg !1157

if.end92:                                         ; preds = %if.then91, %if.end89
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1142
  br label %do.end93, !dbg !1142

do.end93:                                         ; preds = %if.end92
  store i32 -1, i32* %retval, align 4, !dbg !1159
  br label %return, !dbg !1159

if.end94:                                         ; preds = %lor.lhs.false
  store i32 1, i32* %mcnt, align 4, !dbg !1160
  br label %for.cond, !dbg !1162

for.cond:                                         ; preds = %for.inc, %if.end94
  %72 = load i32, i32* %mcnt, align 4, !dbg !1163
  %conv = zext i32 %72 to i64, !dbg !1165
  %73 = load i64, i64* %num_regs, align 8, !dbg !1166
  %cmp95 = icmp ult i64 %conv, %73, !dbg !1167
  br i1 %cmp95, label %for.body, label %for.end, !dbg !1168

for.body:                                         ; preds = %for.cond
  %74 = load i8**, i8*** %old_regend, align 8, !dbg !1169
  %75 = load i32, i32* %mcnt, align 4, !dbg !1171
  %idxprom = sext i32 %75 to i64, !dbg !1169
  %arrayidx = getelementptr inbounds i8*, i8** %74, i64 %idxprom, !dbg !1169
  store i8* @byte_reg_unset_dummy, i8** %arrayidx, align 8, !dbg !1172
  %76 = load i8**, i8*** %old_regstart, align 8, !dbg !1173
  %77 = load i32, i32* %mcnt, align 4, !dbg !1174
  %idxprom97 = sext i32 %77 to i64, !dbg !1173
  %arrayidx98 = getelementptr inbounds i8*, i8** %76, i64 %idxprom97, !dbg !1173
  store i8* @byte_reg_unset_dummy, i8** %arrayidx98, align 8, !dbg !1175
  %78 = load i8**, i8*** %regend, align 8, !dbg !1176
  %79 = load i32, i32* %mcnt, align 4, !dbg !1177
  %idxprom99 = sext i32 %79 to i64, !dbg !1176
  %arrayidx100 = getelementptr inbounds i8*, i8** %78, i64 %idxprom99, !dbg !1176
  store i8* @byte_reg_unset_dummy, i8** %arrayidx100, align 8, !dbg !1178
  %80 = load i8**, i8*** %regstart, align 8, !dbg !1179
  %81 = load i32, i32* %mcnt, align 4, !dbg !1180
  %idxprom101 = sext i32 %81 to i64, !dbg !1179
  %arrayidx102 = getelementptr inbounds i8*, i8** %80, i64 %idxprom101, !dbg !1179
  store i8* @byte_reg_unset_dummy, i8** %arrayidx102, align 8, !dbg !1181
  %82 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1182
  %83 = load i32, i32* %mcnt, align 4, !dbg !1182
  %idxprom103 = sext i32 %83 to i64, !dbg !1182
  %arrayidx104 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %82, i64 %idxprom103, !dbg !1182
  %bits = bitcast %union.byte_register_info_type* %arrayidx104 to %struct.anon*, !dbg !1182
  %84 = bitcast %struct.anon* %bits to i8*, !dbg !1182
  %bf.load = load i8, i8* %84, align 8, !dbg !1183
  %bf.clear = and i8 %bf.load, -4, !dbg !1183
  %bf.set = or i8 %bf.clear, 3, !dbg !1183
  store i8 %bf.set, i8* %84, align 8, !dbg !1183
  %85 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1184
  %86 = load i32, i32* %mcnt, align 4, !dbg !1184
  %idxprom105 = sext i32 %86 to i64, !dbg !1184
  %arrayidx106 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %85, i64 %idxprom105, !dbg !1184
  %bits107 = bitcast %union.byte_register_info_type* %arrayidx106 to %struct.anon*, !dbg !1184
  %87 = bitcast %struct.anon* %bits107 to i8*, !dbg !1184
  %bf.load108 = load i8, i8* %87, align 8, !dbg !1185
  %bf.clear109 = and i8 %bf.load108, -5, !dbg !1185
  store i8 %bf.clear109, i8* %87, align 8, !dbg !1185
  %88 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1186
  %89 = load i32, i32* %mcnt, align 4, !dbg !1186
  %idxprom110 = sext i32 %89 to i64, !dbg !1186
  %arrayidx111 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %88, i64 %idxprom110, !dbg !1186
  %bits112 = bitcast %union.byte_register_info_type* %arrayidx111 to %struct.anon*, !dbg !1186
  %90 = bitcast %struct.anon* %bits112 to i8*, !dbg !1186
  %bf.load113 = load i8, i8* %90, align 8, !dbg !1187
  %bf.clear114 = and i8 %bf.load113, -9, !dbg !1187
  store i8 %bf.clear114, i8* %90, align 8, !dbg !1187
  %91 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1188
  %92 = load i32, i32* %mcnt, align 4, !dbg !1188
  %idxprom115 = sext i32 %92 to i64, !dbg !1188
  %arrayidx116 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %91, i64 %idxprom115, !dbg !1188
  %bits117 = bitcast %union.byte_register_info_type* %arrayidx116 to %struct.anon*, !dbg !1188
  %93 = bitcast %struct.anon* %bits117 to i8*, !dbg !1188
  %bf.load118 = load i8, i8* %93, align 8, !dbg !1189
  %bf.clear119 = and i8 %bf.load118, -17, !dbg !1189
  store i8 %bf.clear119, i8* %93, align 8, !dbg !1189
  br label %for.inc, !dbg !1190

for.inc:                                          ; preds = %for.body
  %94 = load i32, i32* %mcnt, align 4, !dbg !1191
  %inc = add nsw i32 %94, 1, !dbg !1191
  store i32 %inc, i32* %mcnt, align 4, !dbg !1191
  br label %for.cond, !dbg !1192, !llvm.loop !1193

for.end:                                          ; preds = %for.cond
  %95 = load i32, i32* %size2.addr, align 4, !dbg !1195
  %cmp120 = icmp eq i32 %95, 0, !dbg !1197
  br i1 %cmp120, label %land.lhs.true122, label %if.end126, !dbg !1198

land.lhs.true122:                                 ; preds = %for.end
  %96 = load i8*, i8** %string1.addr, align 8, !dbg !1199
  %cmp123 = icmp ne i8* %96, null, !dbg !1200
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !1201

if.then125:                                       ; preds = %land.lhs.true122
  %97 = load i8*, i8** %string1.addr, align 8, !dbg !1202
  store i8* %97, i8** %string2.addr, align 8, !dbg !1204
  %98 = load i32, i32* %size1.addr, align 4, !dbg !1205
  store i32 %98, i32* %size2.addr, align 4, !dbg !1206
  store i8* null, i8** %string1.addr, align 8, !dbg !1207
  store i32 0, i32* %size1.addr, align 4, !dbg !1208
  br label %if.end126, !dbg !1209

if.end126:                                        ; preds = %if.then125, %land.lhs.true122, %for.end
  %99 = load i8*, i8** %string1.addr, align 8, !dbg !1210
  %100 = load i32, i32* %size1.addr, align 4, !dbg !1211
  %idx.ext = sext i32 %100 to i64, !dbg !1212
  %add.ptr127 = getelementptr inbounds i8, i8* %99, i64 %idx.ext, !dbg !1212
  store i8* %add.ptr127, i8** %end1, align 8, !dbg !1213
  %101 = load i8*, i8** %string2.addr, align 8, !dbg !1214
  %102 = load i32, i32* %size2.addr, align 4, !dbg !1215
  %idx.ext128 = sext i32 %102 to i64, !dbg !1216
  %add.ptr129 = getelementptr inbounds i8, i8* %101, i64 %idx.ext128, !dbg !1216
  store i8* %add.ptr129, i8** %end2, align 8, !dbg !1217
  %103 = load i32, i32* %stop.addr, align 4, !dbg !1218
  %104 = load i32, i32* %size1.addr, align 4, !dbg !1220
  %cmp130 = icmp sle i32 %103, %104, !dbg !1221
  br i1 %cmp130, label %if.then132, label %if.else135, !dbg !1222

if.then132:                                       ; preds = %if.end126
  %105 = load i8*, i8** %string1.addr, align 8, !dbg !1223
  %106 = load i32, i32* %stop.addr, align 4, !dbg !1225
  %idx.ext133 = sext i32 %106 to i64, !dbg !1226
  %add.ptr134 = getelementptr inbounds i8, i8* %105, i64 %idx.ext133, !dbg !1226
  store i8* %add.ptr134, i8** %end_match_1, align 8, !dbg !1227
  %107 = load i8*, i8** %string2.addr, align 8, !dbg !1228
  store i8* %107, i8** %end_match_2, align 8, !dbg !1229
  br label %if.end140, !dbg !1230

if.else135:                                       ; preds = %if.end126
  %108 = load i8*, i8** %end1, align 8, !dbg !1231
  store i8* %108, i8** %end_match_1, align 8, !dbg !1233
  %109 = load i8*, i8** %string2.addr, align 8, !dbg !1234
  %110 = load i32, i32* %stop.addr, align 4, !dbg !1235
  %idx.ext136 = sext i32 %110 to i64, !dbg !1236
  %add.ptr137 = getelementptr inbounds i8, i8* %109, i64 %idx.ext136, !dbg !1236
  %111 = load i32, i32* %size1.addr, align 4, !dbg !1237
  %idx.ext138 = sext i32 %111 to i64, !dbg !1238
  %idx.neg = sub i64 0, %idx.ext138, !dbg !1238
  %add.ptr139 = getelementptr inbounds i8, i8* %add.ptr137, i64 %idx.neg, !dbg !1238
  store i8* %add.ptr139, i8** %end_match_2, align 8, !dbg !1239
  br label %if.end140

if.end140:                                        ; preds = %if.else135, %if.then132
  %112 = load i32, i32* %size1.addr, align 4, !dbg !1240
  %cmp141 = icmp sgt i32 %112, 0, !dbg !1242
  br i1 %cmp141, label %land.lhs.true143, label %if.else149, !dbg !1243

land.lhs.true143:                                 ; preds = %if.end140
  %113 = load i32, i32* %pos.addr, align 4, !dbg !1244
  %114 = load i32, i32* %size1.addr, align 4, !dbg !1245
  %cmp144 = icmp sle i32 %113, %114, !dbg !1246
  br i1 %cmp144, label %if.then146, label %if.else149, !dbg !1247

if.then146:                                       ; preds = %land.lhs.true143
  %115 = load i8*, i8** %string1.addr, align 8, !dbg !1248
  %116 = load i32, i32* %pos.addr, align 4, !dbg !1250
  %idx.ext147 = sext i32 %116 to i64, !dbg !1251
  %add.ptr148 = getelementptr inbounds i8, i8* %115, i64 %idx.ext147, !dbg !1251
  store i8* %add.ptr148, i8** %d, align 8, !dbg !1252
  %117 = load i8*, i8** %end_match_1, align 8, !dbg !1253
  store i8* %117, i8** %dend, align 8, !dbg !1254
  br label %if.end155, !dbg !1255

if.else149:                                       ; preds = %land.lhs.true143, %if.end140
  %118 = load i8*, i8** %string2.addr, align 8, !dbg !1256
  %119 = load i32, i32* %pos.addr, align 4, !dbg !1258
  %idx.ext150 = sext i32 %119 to i64, !dbg !1259
  %add.ptr151 = getelementptr inbounds i8, i8* %118, i64 %idx.ext150, !dbg !1259
  %120 = load i32, i32* %size1.addr, align 4, !dbg !1260
  %idx.ext152 = sext i32 %120 to i64, !dbg !1261
  %idx.neg153 = sub i64 0, %idx.ext152, !dbg !1261
  %add.ptr154 = getelementptr inbounds i8, i8* %add.ptr151, i64 %idx.neg153, !dbg !1261
  store i8* %add.ptr154, i8** %d, align 8, !dbg !1262
  %121 = load i8*, i8** %end_match_2, align 8, !dbg !1263
  store i8* %121, i8** %dend, align 8, !dbg !1264
  br label %if.end155

if.end155:                                        ; preds = %if.else149, %if.then146
  br label %for.cond156, !dbg !1265

for.cond156:                                      ; preds = %if.end2790, %sw.epilog2674, %if.end155
  %122 = load i8*, i8** %p, align 8, !dbg !1266
  %123 = load i8*, i8** %pend, align 8, !dbg !1271
  %cmp157 = icmp eq i8* %122, %123, !dbg !1272
  br i1 %cmp157, label %if.then159, label %if.end572, !dbg !1273

if.then159:                                       ; preds = %for.cond156
  %124 = load i8*, i8** %d, align 8, !dbg !1274
  %125 = load i8*, i8** %end_match_2, align 8, !dbg !1277
  %cmp160 = icmp ne i8* %124, %125, !dbg !1278
  br i1 %cmp160, label %if.then162, label %if.end240, !dbg !1279

if.then162:                                       ; preds = %if.then159
  call void @llvm.dbg.declare(metadata i8* %same_str_p, metadata !1280, metadata !DIExpression()), !dbg !1282
  call void @llvm.dbg.declare(metadata i8* %best_match_p, metadata !1283, metadata !DIExpression()), !dbg !1284
  %126 = load i32, i32* %size1.addr, align 4, !dbg !1285
  %tobool163 = icmp ne i32 %126, 0, !dbg !1285
  br i1 %tobool163, label %land.lhs.true164, label %land.end, !dbg !1285

land.lhs.true164:                                 ; preds = %if.then162
  %127 = load i8*, i8** %string1.addr, align 8, !dbg !1285
  %128 = load i8*, i8** %match_end, align 8, !dbg !1285
  %cmp165 = icmp ule i8* %127, %128, !dbg !1285
  br i1 %cmp165, label %land.rhs, label %land.end, !dbg !1285

land.rhs:                                         ; preds = %land.lhs.true164
  %129 = load i8*, i8** %match_end, align 8, !dbg !1285
  %130 = load i8*, i8** %string1.addr, align 8, !dbg !1285
  %131 = load i32, i32* %size1.addr, align 4, !dbg !1285
  %idx.ext167 = sext i32 %131 to i64, !dbg !1285
  %add.ptr168 = getelementptr inbounds i8, i8* %130, i64 %idx.ext167, !dbg !1285
  %cmp169 = icmp ule i8* %129, %add.ptr168, !dbg !1285
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true164, %if.then162
  %132 = phi i1 [ false, %land.lhs.true164 ], [ false, %if.then162 ], [ %cmp169, %land.rhs ], !dbg !1286
  %land.ext = zext i1 %132 to i32, !dbg !1285
  %133 = load i8*, i8** %dend, align 8, !dbg !1287
  %134 = load i8*, i8** %end_match_1, align 8, !dbg !1287
  %cmp171 = icmp eq i8* %133, %134, !dbg !1287
  %conv172 = zext i1 %cmp171 to i32, !dbg !1287
  %cmp173 = icmp eq i32 %land.ext, %conv172, !dbg !1288
  %conv174 = zext i1 %cmp173 to i32, !dbg !1288
  %conv175 = trunc i32 %conv174 to i8, !dbg !1289
  store i8 %conv175, i8* %same_str_p, align 1, !dbg !1290
  %135 = load i8, i8* %same_str_p, align 1, !dbg !1291
  %tobool176 = icmp ne i8 %135, 0, !dbg !1291
  br i1 %tobool176, label %if.then177, label %if.else181, !dbg !1293

if.then177:                                       ; preds = %land.end
  %136 = load i8*, i8** %d, align 8, !dbg !1294
  %137 = load i8*, i8** %match_end, align 8, !dbg !1295
  %cmp178 = icmp ugt i8* %136, %137, !dbg !1296
  %conv179 = zext i1 %cmp178 to i32, !dbg !1296
  %conv180 = trunc i32 %conv179 to i8, !dbg !1294
  store i8 %conv180, i8* %best_match_p, align 1, !dbg !1297
  br label %if.end185, !dbg !1298

if.else181:                                       ; preds = %land.end
  %138 = load i8*, i8** %dend, align 8, !dbg !1299
  %139 = load i8*, i8** %end_match_1, align 8, !dbg !1299
  %cmp182 = icmp eq i8* %138, %139, !dbg !1299
  %lnot = xor i1 %cmp182, true, !dbg !1300
  %lnot.ext = zext i1 %lnot to i32, !dbg !1300
  %conv184 = trunc i32 %lnot.ext to i8, !dbg !1300
  store i8 %conv184, i8* %best_match_p, align 1, !dbg !1301
  br label %if.end185

if.end185:                                        ; preds = %if.else181, %if.then177
  %avail186 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !1302
  %140 = load i32, i32* %avail186, align 4, !dbg !1302
  %cmp187 = icmp eq i32 %140, 0, !dbg !1302
  br i1 %cmp187, label %if.else212, label %if.then189, !dbg !1304

if.then189:                                       ; preds = %if.end185
  %141 = load i32, i32* %best_regs_set, align 4, !dbg !1305
  %tobool190 = icmp ne i32 %141, 0, !dbg !1305
  br i1 %tobool190, label %lor.lhs.false191, label %if.then194, !dbg !1308

lor.lhs.false191:                                 ; preds = %if.then189
  %142 = load i8, i8* %best_match_p, align 1, !dbg !1309
  %conv192 = sext i8 %142 to i32, !dbg !1309
  %tobool193 = icmp ne i32 %conv192, 0, !dbg !1309
  br i1 %tobool193, label %if.then194, label %if.end211, !dbg !1310

if.then194:                                       ; preds = %lor.lhs.false191, %if.then189
  store i32 1, i32* %best_regs_set, align 4, !dbg !1311
  %143 = load i8*, i8** %d, align 8, !dbg !1313
  store i8* %143, i8** %match_end, align 8, !dbg !1314
  store i32 1, i32* %mcnt, align 4, !dbg !1315
  br label %for.cond195, !dbg !1317

for.cond195:                                      ; preds = %for.inc208, %if.then194
  %144 = load i32, i32* %mcnt, align 4, !dbg !1318
  %conv196 = zext i32 %144 to i64, !dbg !1320
  %145 = load i64, i64* %num_regs, align 8, !dbg !1321
  %cmp197 = icmp ult i64 %conv196, %145, !dbg !1322
  br i1 %cmp197, label %for.body199, label %for.end210, !dbg !1323

for.body199:                                      ; preds = %for.cond195
  %146 = load i8**, i8*** %regstart, align 8, !dbg !1324
  %147 = load i32, i32* %mcnt, align 4, !dbg !1326
  %idxprom200 = sext i32 %147 to i64, !dbg !1324
  %arrayidx201 = getelementptr inbounds i8*, i8** %146, i64 %idxprom200, !dbg !1324
  %148 = load i8*, i8** %arrayidx201, align 8, !dbg !1324
  %149 = load i8**, i8*** %best_regstart, align 8, !dbg !1327
  %150 = load i32, i32* %mcnt, align 4, !dbg !1328
  %idxprom202 = sext i32 %150 to i64, !dbg !1327
  %arrayidx203 = getelementptr inbounds i8*, i8** %149, i64 %idxprom202, !dbg !1327
  store i8* %148, i8** %arrayidx203, align 8, !dbg !1329
  %151 = load i8**, i8*** %regend, align 8, !dbg !1330
  %152 = load i32, i32* %mcnt, align 4, !dbg !1331
  %idxprom204 = sext i32 %152 to i64, !dbg !1330
  %arrayidx205 = getelementptr inbounds i8*, i8** %151, i64 %idxprom204, !dbg !1330
  %153 = load i8*, i8** %arrayidx205, align 8, !dbg !1330
  %154 = load i8**, i8*** %best_regend, align 8, !dbg !1332
  %155 = load i32, i32* %mcnt, align 4, !dbg !1333
  %idxprom206 = sext i32 %155 to i64, !dbg !1332
  %arrayidx207 = getelementptr inbounds i8*, i8** %154, i64 %idxprom206, !dbg !1332
  store i8* %153, i8** %arrayidx207, align 8, !dbg !1334
  br label %for.inc208, !dbg !1335

for.inc208:                                       ; preds = %for.body199
  %156 = load i32, i32* %mcnt, align 4, !dbg !1336
  %inc209 = add nsw i32 %156, 1, !dbg !1336
  store i32 %inc209, i32* %mcnt, align 4, !dbg !1336
  br label %for.cond195, !dbg !1337, !llvm.loop !1338

for.end210:                                       ; preds = %for.cond195
  br label %if.end211, !dbg !1340

if.end211:                                        ; preds = %for.end210, %lor.lhs.false191
  br label %fail, !dbg !1341

if.else212:                                       ; preds = %if.end185
  %157 = load i32, i32* %best_regs_set, align 4, !dbg !1342
  %tobool213 = icmp ne i32 %157, 0, !dbg !1342
  br i1 %tobool213, label %land.lhs.true214, label %if.end238, !dbg !1344

land.lhs.true214:                                 ; preds = %if.else212
  %158 = load i8, i8* %best_match_p, align 1, !dbg !1345
  %tobool215 = icmp ne i8 %158, 0, !dbg !1345
  br i1 %tobool215, label %if.end238, label %if.then216, !dbg !1346

if.then216:                                       ; preds = %land.lhs.true214
  br label %restore_best_regs, !dbg !1347

restore_best_regs:                                ; preds = %if.then2793, %if.then216
  call void @llvm.dbg.label(metadata !1348), !dbg !1350
  %159 = load i8*, i8** %match_end, align 8, !dbg !1351
  store i8* %159, i8** %d, align 8, !dbg !1352
  %160 = load i8*, i8** %d, align 8, !dbg !1353
  %161 = load i8*, i8** %string1.addr, align 8, !dbg !1354
  %cmp217 = icmp uge i8* %160, %161, !dbg !1355
  br i1 %cmp217, label %land.lhs.true219, label %cond.false, !dbg !1356

land.lhs.true219:                                 ; preds = %restore_best_regs
  %162 = load i8*, i8** %d, align 8, !dbg !1357
  %163 = load i8*, i8** %end1, align 8, !dbg !1358
  %cmp220 = icmp ule i8* %162, %163, !dbg !1359
  br i1 %cmp220, label %cond.true, label %cond.false, !dbg !1360

cond.true:                                        ; preds = %land.lhs.true219
  %164 = load i8*, i8** %end_match_1, align 8, !dbg !1361
  br label %cond.end, !dbg !1360

cond.false:                                       ; preds = %land.lhs.true219, %restore_best_regs
  %165 = load i8*, i8** %end_match_2, align 8, !dbg !1362
  br label %cond.end, !dbg !1360

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %164, %cond.true ], [ %165, %cond.false ], !dbg !1360
  store i8* %cond, i8** %dend, align 8, !dbg !1363
  store i32 1, i32* %mcnt, align 4, !dbg !1364
  br label %for.cond222, !dbg !1366

for.cond222:                                      ; preds = %for.inc235, %cond.end
  %166 = load i32, i32* %mcnt, align 4, !dbg !1367
  %conv223 = zext i32 %166 to i64, !dbg !1369
  %167 = load i64, i64* %num_regs, align 8, !dbg !1370
  %cmp224 = icmp ult i64 %conv223, %167, !dbg !1371
  br i1 %cmp224, label %for.body226, label %for.end237, !dbg !1372

for.body226:                                      ; preds = %for.cond222
  %168 = load i8**, i8*** %best_regstart, align 8, !dbg !1373
  %169 = load i32, i32* %mcnt, align 4, !dbg !1375
  %idxprom227 = sext i32 %169 to i64, !dbg !1373
  %arrayidx228 = getelementptr inbounds i8*, i8** %168, i64 %idxprom227, !dbg !1373
  %170 = load i8*, i8** %arrayidx228, align 8, !dbg !1373
  %171 = load i8**, i8*** %regstart, align 8, !dbg !1376
  %172 = load i32, i32* %mcnt, align 4, !dbg !1377
  %idxprom229 = sext i32 %172 to i64, !dbg !1376
  %arrayidx230 = getelementptr inbounds i8*, i8** %171, i64 %idxprom229, !dbg !1376
  store i8* %170, i8** %arrayidx230, align 8, !dbg !1378
  %173 = load i8**, i8*** %best_regend, align 8, !dbg !1379
  %174 = load i32, i32* %mcnt, align 4, !dbg !1380
  %idxprom231 = sext i32 %174 to i64, !dbg !1379
  %arrayidx232 = getelementptr inbounds i8*, i8** %173, i64 %idxprom231, !dbg !1379
  %175 = load i8*, i8** %arrayidx232, align 8, !dbg !1379
  %176 = load i8**, i8*** %regend, align 8, !dbg !1381
  %177 = load i32, i32* %mcnt, align 4, !dbg !1382
  %idxprom233 = sext i32 %177 to i64, !dbg !1381
  %arrayidx234 = getelementptr inbounds i8*, i8** %176, i64 %idxprom233, !dbg !1381
  store i8* %175, i8** %arrayidx234, align 8, !dbg !1383
  br label %for.inc235, !dbg !1384

for.inc235:                                       ; preds = %for.body226
  %178 = load i32, i32* %mcnt, align 4, !dbg !1385
  %inc236 = add nsw i32 %178, 1, !dbg !1385
  store i32 %inc236, i32* %mcnt, align 4, !dbg !1385
  br label %for.cond222, !dbg !1386, !llvm.loop !1387

for.end237:                                       ; preds = %for.cond222
  br label %if.end238, !dbg !1389

if.end238:                                        ; preds = %for.end237, %land.lhs.true214, %if.else212
  br label %if.end239

if.end239:                                        ; preds = %if.end238
  br label %if.end240, !dbg !1390

if.end240:                                        ; preds = %if.end239, %if.then159
  br label %succeed_label, !dbg !1277

succeed_label:                                    ; preds = %sw.bb574, %if.end240
  call void @llvm.dbg.label(metadata !1391), !dbg !1392
  %179 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1393
  %tobool241 = icmp ne %struct.re_registers* %179, null, !dbg !1393
  br i1 %tobool241, label %land.lhs.true242, label %if.end526, !dbg !1395

land.lhs.true242:                                 ; preds = %succeed_label
  %180 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1396
  %no_sub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %180, i32 0, i32 7, !dbg !1397
  %bf.load243 = load i8, i8* %no_sub, align 8, !dbg !1397
  %bf.lshr = lshr i8 %bf.load243, 4, !dbg !1397
  %bf.clear244 = and i8 %bf.lshr, 1, !dbg !1397
  %bf.cast = zext i8 %bf.clear244 to i32, !dbg !1397
  %tobool245 = icmp ne i32 %bf.cast, 0, !dbg !1396
  br i1 %tobool245, label %if.end526, label %if.then246, !dbg !1398

if.then246:                                       ; preds = %land.lhs.true242
  %181 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1399
  %regs_allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %181, i32 0, i32 7, !dbg !1402
  %bf.load247 = load i8, i8* %regs_allocated, align 8, !dbg !1402
  %bf.lshr248 = lshr i8 %bf.load247, 1, !dbg !1402
  %bf.clear249 = and i8 %bf.lshr248, 3, !dbg !1402
  %bf.cast250 = zext i8 %bf.clear249 to i32, !dbg !1402
  %cmp251 = icmp eq i32 %bf.cast250, 0, !dbg !1403
  br i1 %cmp251, label %if.then253, label %if.else313, !dbg !1404

if.then253:                                       ; preds = %if.then246
  %182 = load i64, i64* %num_regs, align 8, !dbg !1405
  %add254 = add i64 %182, 1, !dbg !1405
  %cmp255 = icmp ugt i64 30, %add254, !dbg !1405
  br i1 %cmp255, label %cond.true257, label %cond.false258, !dbg !1405

cond.true257:                                     ; preds = %if.then253
  br label %cond.end260, !dbg !1405

cond.false258:                                    ; preds = %if.then253
  %183 = load i64, i64* %num_regs, align 8, !dbg !1405
  %add259 = add i64 %183, 1, !dbg !1405
  br label %cond.end260, !dbg !1405

cond.end260:                                      ; preds = %cond.false258, %cond.true257
  %cond261 = phi i64 [ 30, %cond.true257 ], [ %add259, %cond.false258 ], !dbg !1405
  %conv262 = trunc i64 %cond261 to i32, !dbg !1405
  %184 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1407
  %num_regs263 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %184, i32 0, i32 0, !dbg !1408
  store i32 %conv262, i32* %num_regs263, align 8, !dbg !1409
  %185 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1410
  %num_regs264 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %185, i32 0, i32 0, !dbg !1410
  %186 = load i32, i32* %num_regs264, align 8, !dbg !1410
  %conv265 = zext i32 %186 to i64, !dbg !1410
  %mul266 = mul i64 %conv265, 4, !dbg !1410
  %call = call i8* @malloc(i64 %mul266), !dbg !1410
  %187 = bitcast i8* %call to i32*, !dbg !1410
  %188 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1411
  %start = getelementptr inbounds %struct.re_registers, %struct.re_registers* %188, i32 0, i32 1, !dbg !1412
  store i32* %187, i32** %start, align 8, !dbg !1413
  %189 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1414
  %num_regs267 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %189, i32 0, i32 0, !dbg !1414
  %190 = load i32, i32* %num_regs267, align 8, !dbg !1414
  %conv268 = zext i32 %190 to i64, !dbg !1414
  %mul269 = mul i64 %conv268, 4, !dbg !1414
  %call270 = call i8* @malloc(i64 %mul269), !dbg !1414
  %191 = bitcast i8* %call270 to i32*, !dbg !1414
  %192 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1415
  %end = getelementptr inbounds %struct.re_registers, %struct.re_registers* %192, i32 0, i32 2, !dbg !1416
  store i32* %191, i32** %end, align 8, !dbg !1417
  %193 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1418
  %start271 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %193, i32 0, i32 1, !dbg !1420
  %194 = load i32*, i32** %start271, align 8, !dbg !1420
  %cmp272 = icmp eq i32* %194, null, !dbg !1421
  br i1 %cmp272, label %if.then278, label %lor.lhs.false274, !dbg !1422

lor.lhs.false274:                                 ; preds = %cond.end260
  %195 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1423
  %end275 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %195, i32 0, i32 2, !dbg !1424
  %196 = load i32*, i32** %end275, align 8, !dbg !1424
  %cmp276 = icmp eq i32* %196, null, !dbg !1425
  br i1 %cmp276, label %if.then278, label %if.end308, !dbg !1426

if.then278:                                       ; preds = %lor.lhs.false274, %cond.end260
  br label %do.body279, !dbg !1427

do.body279:                                       ; preds = %if.then278
  %197 = load i8**, i8*** %regstart, align 8, !dbg !1429
  %tobool280 = icmp ne i8** %197, null, !dbg !1429
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !1432

if.then281:                                       ; preds = %do.body279
  br label %if.end282, !dbg !1429

if.end282:                                        ; preds = %if.then281, %do.body279
  store i8** null, i8*** %regstart, align 8, !dbg !1432
  %198 = load i8**, i8*** %regend, align 8, !dbg !1433
  %tobool283 = icmp ne i8** %198, null, !dbg !1433
  br i1 %tobool283, label %if.then284, label %if.end285, !dbg !1432

if.then284:                                       ; preds = %if.end282
  br label %if.end285, !dbg !1433

if.end285:                                        ; preds = %if.then284, %if.end282
  store i8** null, i8*** %regend, align 8, !dbg !1432
  %199 = load i8**, i8*** %old_regstart, align 8, !dbg !1435
  %tobool286 = icmp ne i8** %199, null, !dbg !1435
  br i1 %tobool286, label %if.then287, label %if.end288, !dbg !1432

if.then287:                                       ; preds = %if.end285
  br label %if.end288, !dbg !1435

if.end288:                                        ; preds = %if.then287, %if.end285
  store i8** null, i8*** %old_regstart, align 8, !dbg !1432
  %200 = load i8**, i8*** %old_regend, align 8, !dbg !1437
  %tobool289 = icmp ne i8** %200, null, !dbg !1437
  br i1 %tobool289, label %if.then290, label %if.end291, !dbg !1432

if.then290:                                       ; preds = %if.end288
  br label %if.end291, !dbg !1437

if.end291:                                        ; preds = %if.then290, %if.end288
  store i8** null, i8*** %old_regend, align 8, !dbg !1432
  %201 = load i8**, i8*** %best_regstart, align 8, !dbg !1439
  %tobool292 = icmp ne i8** %201, null, !dbg !1439
  br i1 %tobool292, label %if.then293, label %if.end294, !dbg !1432

if.then293:                                       ; preds = %if.end291
  br label %if.end294, !dbg !1439

if.end294:                                        ; preds = %if.then293, %if.end291
  store i8** null, i8*** %best_regstart, align 8, !dbg !1432
  %202 = load i8**, i8*** %best_regend, align 8, !dbg !1441
  %tobool295 = icmp ne i8** %202, null, !dbg !1441
  br i1 %tobool295, label %if.then296, label %if.end297, !dbg !1432

if.then296:                                       ; preds = %if.end294
  br label %if.end297, !dbg !1441

if.end297:                                        ; preds = %if.then296, %if.end294
  store i8** null, i8*** %best_regend, align 8, !dbg !1432
  %203 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1443
  %tobool298 = icmp ne %union.byte_register_info_type* %203, null, !dbg !1443
  br i1 %tobool298, label %if.then299, label %if.end300, !dbg !1432

if.then299:                                       ; preds = %if.end297
  br label %if.end300, !dbg !1443

if.end300:                                        ; preds = %if.then299, %if.end297
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info, align 8, !dbg !1432
  %204 = load i8**, i8*** %reg_dummy, align 8, !dbg !1445
  %tobool301 = icmp ne i8** %204, null, !dbg !1445
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !1432

if.then302:                                       ; preds = %if.end300
  br label %if.end303, !dbg !1445

if.end303:                                        ; preds = %if.then302, %if.end300
  store i8** null, i8*** %reg_dummy, align 8, !dbg !1432
  %205 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1447
  %tobool304 = icmp ne %union.byte_register_info_type* %205, null, !dbg !1447
  br i1 %tobool304, label %if.then305, label %if.end306, !dbg !1432

if.then305:                                       ; preds = %if.end303
  br label %if.end306, !dbg !1447

if.end306:                                        ; preds = %if.then305, %if.end303
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1432
  br label %do.end307, !dbg !1432

do.end307:                                        ; preds = %if.end306
  store i32 -2, i32* %retval, align 4, !dbg !1449
  br label %return, !dbg !1449

if.end308:                                        ; preds = %lor.lhs.false274
  %206 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1450
  %regs_allocated309 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %206, i32 0, i32 7, !dbg !1451
  %bf.load310 = load i8, i8* %regs_allocated309, align 8, !dbg !1452
  %bf.clear311 = and i8 %bf.load310, -7, !dbg !1452
  %bf.set312 = or i8 %bf.clear311, 2, !dbg !1452
  store i8 %bf.set312, i8* %regs_allocated309, align 8, !dbg !1452
  br label %if.end384, !dbg !1453

if.else313:                                       ; preds = %if.then246
  %207 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1454
  %regs_allocated314 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %207, i32 0, i32 7, !dbg !1456
  %bf.load315 = load i8, i8* %regs_allocated314, align 8, !dbg !1456
  %bf.lshr316 = lshr i8 %bf.load315, 1, !dbg !1456
  %bf.clear317 = and i8 %bf.lshr316, 3, !dbg !1456
  %bf.cast318 = zext i8 %bf.clear317 to i32, !dbg !1456
  %cmp319 = icmp eq i32 %bf.cast318, 1, !dbg !1457
  br i1 %cmp319, label %if.then321, label %if.else382, !dbg !1458

if.then321:                                       ; preds = %if.else313
  %208 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1459
  %num_regs322 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %208, i32 0, i32 0, !dbg !1462
  %209 = load i32, i32* %num_regs322, align 8, !dbg !1462
  %conv323 = zext i32 %209 to i64, !dbg !1459
  %210 = load i64, i64* %num_regs, align 8, !dbg !1463
  %add324 = add i64 %210, 1, !dbg !1464
  %cmp325 = icmp ult i64 %conv323, %add324, !dbg !1465
  br i1 %cmp325, label %if.then327, label %if.end381, !dbg !1466

if.then327:                                       ; preds = %if.then321
  %211 = load i64, i64* %num_regs, align 8, !dbg !1467
  %add328 = add i64 %211, 1, !dbg !1469
  %conv329 = trunc i64 %add328 to i32, !dbg !1467
  %212 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1470
  %num_regs330 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %212, i32 0, i32 0, !dbg !1471
  store i32 %conv329, i32* %num_regs330, align 8, !dbg !1472
  %213 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1473
  %start331 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %213, i32 0, i32 1, !dbg !1473
  %214 = load i32*, i32** %start331, align 8, !dbg !1473
  %215 = bitcast i32* %214 to i8*, !dbg !1473
  %216 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1473
  %num_regs332 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %216, i32 0, i32 0, !dbg !1473
  %217 = load i32, i32* %num_regs332, align 8, !dbg !1473
  %conv333 = zext i32 %217 to i64, !dbg !1473
  %mul334 = mul i64 %conv333, 4, !dbg !1473
  %call335 = call i8* @realloc(i8* %215, i64 %mul334), !dbg !1473
  %218 = bitcast i8* %call335 to i32*, !dbg !1473
  %219 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1473
  %start336 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %219, i32 0, i32 1, !dbg !1473
  store i32* %218, i32** %start336, align 8, !dbg !1473
  %220 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1474
  %end337 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %220, i32 0, i32 2, !dbg !1474
  %221 = load i32*, i32** %end337, align 8, !dbg !1474
  %222 = bitcast i32* %221 to i8*, !dbg !1474
  %223 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1474
  %num_regs338 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %223, i32 0, i32 0, !dbg !1474
  %224 = load i32, i32* %num_regs338, align 8, !dbg !1474
  %conv339 = zext i32 %224 to i64, !dbg !1474
  %mul340 = mul i64 %conv339, 4, !dbg !1474
  %call341 = call i8* @realloc(i8* %222, i64 %mul340), !dbg !1474
  %225 = bitcast i8* %call341 to i32*, !dbg !1474
  %226 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1474
  %end342 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %226, i32 0, i32 2, !dbg !1474
  store i32* %225, i32** %end342, align 8, !dbg !1474
  %227 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1475
  %start343 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %227, i32 0, i32 1, !dbg !1477
  %228 = load i32*, i32** %start343, align 8, !dbg !1477
  %cmp344 = icmp eq i32* %228, null, !dbg !1478
  br i1 %cmp344, label %if.then350, label %lor.lhs.false346, !dbg !1479

lor.lhs.false346:                                 ; preds = %if.then327
  %229 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1480
  %end347 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %229, i32 0, i32 2, !dbg !1481
  %230 = load i32*, i32** %end347, align 8, !dbg !1481
  %cmp348 = icmp eq i32* %230, null, !dbg !1482
  br i1 %cmp348, label %if.then350, label %if.end380, !dbg !1483

if.then350:                                       ; preds = %lor.lhs.false346, %if.then327
  br label %do.body351, !dbg !1484

do.body351:                                       ; preds = %if.then350
  %231 = load i8**, i8*** %regstart, align 8, !dbg !1486
  %tobool352 = icmp ne i8** %231, null, !dbg !1486
  br i1 %tobool352, label %if.then353, label %if.end354, !dbg !1489

if.then353:                                       ; preds = %do.body351
  br label %if.end354, !dbg !1486

if.end354:                                        ; preds = %if.then353, %do.body351
  store i8** null, i8*** %regstart, align 8, !dbg !1489
  %232 = load i8**, i8*** %regend, align 8, !dbg !1490
  %tobool355 = icmp ne i8** %232, null, !dbg !1490
  br i1 %tobool355, label %if.then356, label %if.end357, !dbg !1489

if.then356:                                       ; preds = %if.end354
  br label %if.end357, !dbg !1490

if.end357:                                        ; preds = %if.then356, %if.end354
  store i8** null, i8*** %regend, align 8, !dbg !1489
  %233 = load i8**, i8*** %old_regstart, align 8, !dbg !1492
  %tobool358 = icmp ne i8** %233, null, !dbg !1492
  br i1 %tobool358, label %if.then359, label %if.end360, !dbg !1489

if.then359:                                       ; preds = %if.end357
  br label %if.end360, !dbg !1492

if.end360:                                        ; preds = %if.then359, %if.end357
  store i8** null, i8*** %old_regstart, align 8, !dbg !1489
  %234 = load i8**, i8*** %old_regend, align 8, !dbg !1494
  %tobool361 = icmp ne i8** %234, null, !dbg !1494
  br i1 %tobool361, label %if.then362, label %if.end363, !dbg !1489

if.then362:                                       ; preds = %if.end360
  br label %if.end363, !dbg !1494

if.end363:                                        ; preds = %if.then362, %if.end360
  store i8** null, i8*** %old_regend, align 8, !dbg !1489
  %235 = load i8**, i8*** %best_regstart, align 8, !dbg !1496
  %tobool364 = icmp ne i8** %235, null, !dbg !1496
  br i1 %tobool364, label %if.then365, label %if.end366, !dbg !1489

if.then365:                                       ; preds = %if.end363
  br label %if.end366, !dbg !1496

if.end366:                                        ; preds = %if.then365, %if.end363
  store i8** null, i8*** %best_regstart, align 8, !dbg !1489
  %236 = load i8**, i8*** %best_regend, align 8, !dbg !1498
  %tobool367 = icmp ne i8** %236, null, !dbg !1498
  br i1 %tobool367, label %if.then368, label %if.end369, !dbg !1489

if.then368:                                       ; preds = %if.end366
  br label %if.end369, !dbg !1498

if.end369:                                        ; preds = %if.then368, %if.end366
  store i8** null, i8*** %best_regend, align 8, !dbg !1489
  %237 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1500
  %tobool370 = icmp ne %union.byte_register_info_type* %237, null, !dbg !1500
  br i1 %tobool370, label %if.then371, label %if.end372, !dbg !1489

if.then371:                                       ; preds = %if.end369
  br label %if.end372, !dbg !1500

if.end372:                                        ; preds = %if.then371, %if.end369
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info, align 8, !dbg !1489
  %238 = load i8**, i8*** %reg_dummy, align 8, !dbg !1502
  %tobool373 = icmp ne i8** %238, null, !dbg !1502
  br i1 %tobool373, label %if.then374, label %if.end375, !dbg !1489

if.then374:                                       ; preds = %if.end372
  br label %if.end375, !dbg !1502

if.end375:                                        ; preds = %if.then374, %if.end372
  store i8** null, i8*** %reg_dummy, align 8, !dbg !1489
  %239 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1504
  %tobool376 = icmp ne %union.byte_register_info_type* %239, null, !dbg !1504
  br i1 %tobool376, label %if.then377, label %if.end378, !dbg !1489

if.then377:                                       ; preds = %if.end375
  br label %if.end378, !dbg !1504

if.end378:                                        ; preds = %if.then377, %if.end375
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1489
  br label %do.end379, !dbg !1489

do.end379:                                        ; preds = %if.end378
  store i32 -2, i32* %retval, align 4, !dbg !1506
  br label %return, !dbg !1506

if.end380:                                        ; preds = %lor.lhs.false346
  br label %if.end381, !dbg !1507

if.end381:                                        ; preds = %if.end380, %if.then321
  br label %if.end383, !dbg !1508

if.else382:                                       ; preds = %if.else313
  br label %if.end383

if.end383:                                        ; preds = %if.else382, %if.end381
  br label %if.end384

if.end384:                                        ; preds = %if.end383, %if.end308
  %240 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1509
  %num_regs385 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %240, i32 0, i32 0, !dbg !1511
  %241 = load i32, i32* %num_regs385, align 8, !dbg !1511
  %cmp386 = icmp ugt i32 %241, 0, !dbg !1512
  br i1 %cmp386, label %if.then388, label %if.end406, !dbg !1513

if.then388:                                       ; preds = %if.end384
  %242 = load i32, i32* %pos.addr, align 4, !dbg !1514
  %243 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1516
  %start389 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %243, i32 0, i32 1, !dbg !1517
  %244 = load i32*, i32** %start389, align 8, !dbg !1517
  %arrayidx390 = getelementptr inbounds i32, i32* %244, i64 0, !dbg !1516
  store i32 %242, i32* %arrayidx390, align 4, !dbg !1518
  %245 = load i8*, i8** %dend, align 8, !dbg !1519
  %246 = load i8*, i8** %end_match_1, align 8, !dbg !1519
  %cmp391 = icmp eq i8* %245, %246, !dbg !1519
  br i1 %cmp391, label %cond.true393, label %cond.false395, !dbg !1519

cond.true393:                                     ; preds = %if.then388
  %247 = load i8*, i8** %d, align 8, !dbg !1520
  %248 = load i8*, i8** %string1.addr, align 8, !dbg !1521
  %sub.ptr.lhs.cast = ptrtoint i8* %247 to i64, !dbg !1522
  %sub.ptr.rhs.cast = ptrtoint i8* %248 to i64, !dbg !1522
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1522
  %conv394 = trunc i64 %sub.ptr.sub to i32, !dbg !1523
  br label %cond.end402, !dbg !1519

cond.false395:                                    ; preds = %if.then388
  %249 = load i8*, i8** %d, align 8, !dbg !1524
  %250 = load i8*, i8** %string2.addr, align 8, !dbg !1525
  %sub.ptr.lhs.cast396 = ptrtoint i8* %249 to i64, !dbg !1526
  %sub.ptr.rhs.cast397 = ptrtoint i8* %250 to i64, !dbg !1526
  %sub.ptr.sub398 = sub i64 %sub.ptr.lhs.cast396, %sub.ptr.rhs.cast397, !dbg !1526
  %251 = load i32, i32* %size1.addr, align 4, !dbg !1527
  %conv399 = sext i32 %251 to i64, !dbg !1527
  %add400 = add nsw i64 %sub.ptr.sub398, %conv399, !dbg !1528
  %conv401 = trunc i64 %add400 to i32, !dbg !1529
  br label %cond.end402, !dbg !1519

cond.end402:                                      ; preds = %cond.false395, %cond.true393
  %cond403 = phi i32 [ %conv394, %cond.true393 ], [ %conv401, %cond.false395 ], !dbg !1519
  %252 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1530
  %end404 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %252, i32 0, i32 2, !dbg !1531
  %253 = load i32*, i32** %end404, align 8, !dbg !1531
  %arrayidx405 = getelementptr inbounds i32, i32* %253, i64 0, !dbg !1530
  store i32 %cond403, i32* %arrayidx405, align 4, !dbg !1532
  br label %if.end406, !dbg !1533

if.end406:                                        ; preds = %cond.end402, %if.end384
  store i32 1, i32* %mcnt, align 4, !dbg !1534
  br label %for.cond407, !dbg !1536

for.cond407:                                      ; preds = %for.inc508, %if.end406
  %254 = load i32, i32* %mcnt, align 4, !dbg !1537
  %conv408 = zext i32 %254 to i64, !dbg !1539
  %255 = load i64, i64* %num_regs, align 8, !dbg !1540
  %256 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1540
  %num_regs409 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %256, i32 0, i32 0, !dbg !1540
  %257 = load i32, i32* %num_regs409, align 8, !dbg !1540
  %conv410 = zext i32 %257 to i64, !dbg !1540
  %cmp411 = icmp ult i64 %255, %conv410, !dbg !1540
  br i1 %cmp411, label %cond.true413, label %cond.false414, !dbg !1540

cond.true413:                                     ; preds = %for.cond407
  %258 = load i64, i64* %num_regs, align 8, !dbg !1540
  br label %cond.end417, !dbg !1540

cond.false414:                                    ; preds = %for.cond407
  %259 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1540
  %num_regs415 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %259, i32 0, i32 0, !dbg !1540
  %260 = load i32, i32* %num_regs415, align 8, !dbg !1540
  %conv416 = zext i32 %260 to i64, !dbg !1540
  br label %cond.end417, !dbg !1540

cond.end417:                                      ; preds = %cond.false414, %cond.true413
  %cond418 = phi i64 [ %258, %cond.true413 ], [ %conv416, %cond.false414 ], !dbg !1540
  %cmp419 = icmp ult i64 %conv408, %cond418, !dbg !1541
  br i1 %cmp419, label %for.body421, label %for.end510, !dbg !1542

for.body421:                                      ; preds = %cond.end417
  %261 = load i8**, i8*** %regstart, align 8, !dbg !1543
  %262 = load i32, i32* %mcnt, align 4, !dbg !1543
  %idxprom422 = sext i32 %262 to i64, !dbg !1543
  %arrayidx423 = getelementptr inbounds i8*, i8** %261, i64 %idxprom422, !dbg !1543
  %263 = load i8*, i8** %arrayidx423, align 8, !dbg !1543
  %cmp424 = icmp eq i8* %263, @byte_reg_unset_dummy, !dbg !1543
  br i1 %cmp424, label %if.then431, label %lor.lhs.false426, !dbg !1546

lor.lhs.false426:                                 ; preds = %for.body421
  %264 = load i8**, i8*** %regend, align 8, !dbg !1547
  %265 = load i32, i32* %mcnt, align 4, !dbg !1547
  %idxprom427 = sext i32 %265 to i64, !dbg !1547
  %arrayidx428 = getelementptr inbounds i8*, i8** %264, i64 %idxprom427, !dbg !1547
  %266 = load i8*, i8** %arrayidx428, align 8, !dbg !1547
  %cmp429 = icmp eq i8* %266, @byte_reg_unset_dummy, !dbg !1547
  br i1 %cmp429, label %if.then431, label %if.else438, !dbg !1548

if.then431:                                       ; preds = %lor.lhs.false426, %for.body421
  %267 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1549
  %end432 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %267, i32 0, i32 2, !dbg !1550
  %268 = load i32*, i32** %end432, align 8, !dbg !1550
  %269 = load i32, i32* %mcnt, align 4, !dbg !1551
  %idxprom433 = sext i32 %269 to i64, !dbg !1549
  %arrayidx434 = getelementptr inbounds i32, i32* %268, i64 %idxprom433, !dbg !1549
  store i32 -1, i32* %arrayidx434, align 4, !dbg !1552
  %270 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1553
  %start435 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %270, i32 0, i32 1, !dbg !1554
  %271 = load i32*, i32** %start435, align 8, !dbg !1554
  %272 = load i32, i32* %mcnt, align 4, !dbg !1555
  %idxprom436 = sext i32 %272 to i64, !dbg !1553
  %arrayidx437 = getelementptr inbounds i32, i32* %271, i64 %idxprom436, !dbg !1553
  store i32 -1, i32* %arrayidx437, align 4, !dbg !1556
  br label %if.end507, !dbg !1553

if.else438:                                       ; preds = %lor.lhs.false426
  %273 = load i32, i32* %size1.addr, align 4, !dbg !1557
  %tobool439 = icmp ne i32 %273, 0, !dbg !1557
  br i1 %tobool439, label %land.lhs.true440, label %cond.false459, !dbg !1557

land.lhs.true440:                                 ; preds = %if.else438
  %274 = load i8*, i8** %string1.addr, align 8, !dbg !1557
  %275 = load i8**, i8*** %regstart, align 8, !dbg !1557
  %276 = load i32, i32* %mcnt, align 4, !dbg !1557
  %idxprom441 = sext i32 %276 to i64, !dbg !1557
  %arrayidx442 = getelementptr inbounds i8*, i8** %275, i64 %idxprom441, !dbg !1557
  %277 = load i8*, i8** %arrayidx442, align 8, !dbg !1557
  %cmp443 = icmp ule i8* %274, %277, !dbg !1557
  br i1 %cmp443, label %land.lhs.true445, label %cond.false459, !dbg !1557

land.lhs.true445:                                 ; preds = %land.lhs.true440
  %278 = load i8**, i8*** %regstart, align 8, !dbg !1557
  %279 = load i32, i32* %mcnt, align 4, !dbg !1557
  %idxprom446 = sext i32 %279 to i64, !dbg !1557
  %arrayidx447 = getelementptr inbounds i8*, i8** %278, i64 %idxprom446, !dbg !1557
  %280 = load i8*, i8** %arrayidx447, align 8, !dbg !1557
  %281 = load i8*, i8** %string1.addr, align 8, !dbg !1557
  %282 = load i32, i32* %size1.addr, align 4, !dbg !1557
  %idx.ext448 = sext i32 %282 to i64, !dbg !1557
  %add.ptr449 = getelementptr inbounds i8, i8* %281, i64 %idx.ext448, !dbg !1557
  %cmp450 = icmp ule i8* %280, %add.ptr449, !dbg !1557
  br i1 %cmp450, label %cond.true452, label %cond.false459, !dbg !1557

cond.true452:                                     ; preds = %land.lhs.true445
  %283 = load i8**, i8*** %regstart, align 8, !dbg !1557
  %284 = load i32, i32* %mcnt, align 4, !dbg !1557
  %idxprom453 = sext i32 %284 to i64, !dbg !1557
  %arrayidx454 = getelementptr inbounds i8*, i8** %283, i64 %idxprom453, !dbg !1557
  %285 = load i8*, i8** %arrayidx454, align 8, !dbg !1557
  %286 = load i8*, i8** %string1.addr, align 8, !dbg !1557
  %sub.ptr.lhs.cast455 = ptrtoint i8* %285 to i64, !dbg !1557
  %sub.ptr.rhs.cast456 = ptrtoint i8* %286 to i64, !dbg !1557
  %sub.ptr.sub457 = sub i64 %sub.ptr.lhs.cast455, %sub.ptr.rhs.cast456, !dbg !1557
  %conv458 = trunc i64 %sub.ptr.sub457 to i32, !dbg !1557
  br label %cond.end468, !dbg !1557

cond.false459:                                    ; preds = %land.lhs.true445, %land.lhs.true440, %if.else438
  %287 = load i8**, i8*** %regstart, align 8, !dbg !1557
  %288 = load i32, i32* %mcnt, align 4, !dbg !1557
  %idxprom460 = sext i32 %288 to i64, !dbg !1557
  %arrayidx461 = getelementptr inbounds i8*, i8** %287, i64 %idxprom460, !dbg !1557
  %289 = load i8*, i8** %arrayidx461, align 8, !dbg !1557
  %290 = load i8*, i8** %string2.addr, align 8, !dbg !1557
  %sub.ptr.lhs.cast462 = ptrtoint i8* %289 to i64, !dbg !1557
  %sub.ptr.rhs.cast463 = ptrtoint i8* %290 to i64, !dbg !1557
  %sub.ptr.sub464 = sub i64 %sub.ptr.lhs.cast462, %sub.ptr.rhs.cast463, !dbg !1557
  %291 = load i32, i32* %size1.addr, align 4, !dbg !1557
  %conv465 = sext i32 %291 to i64, !dbg !1557
  %add466 = add nsw i64 %sub.ptr.sub464, %conv465, !dbg !1557
  %conv467 = trunc i64 %add466 to i32, !dbg !1557
  br label %cond.end468, !dbg !1557

cond.end468:                                      ; preds = %cond.false459, %cond.true452
  %cond469 = phi i32 [ %conv458, %cond.true452 ], [ %conv467, %cond.false459 ], !dbg !1557
  %292 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1559
  %start470 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %292, i32 0, i32 1, !dbg !1560
  %293 = load i32*, i32** %start470, align 8, !dbg !1560
  %294 = load i32, i32* %mcnt, align 4, !dbg !1561
  %idxprom471 = sext i32 %294 to i64, !dbg !1559
  %arrayidx472 = getelementptr inbounds i32, i32* %293, i64 %idxprom471, !dbg !1559
  store i32 %cond469, i32* %arrayidx472, align 4, !dbg !1562
  %295 = load i32, i32* %size1.addr, align 4, !dbg !1563
  %tobool473 = icmp ne i32 %295, 0, !dbg !1563
  br i1 %tobool473, label %land.lhs.true474, label %cond.false493, !dbg !1563

land.lhs.true474:                                 ; preds = %cond.end468
  %296 = load i8*, i8** %string1.addr, align 8, !dbg !1563
  %297 = load i8**, i8*** %regend, align 8, !dbg !1563
  %298 = load i32, i32* %mcnt, align 4, !dbg !1563
  %idxprom475 = sext i32 %298 to i64, !dbg !1563
  %arrayidx476 = getelementptr inbounds i8*, i8** %297, i64 %idxprom475, !dbg !1563
  %299 = load i8*, i8** %arrayidx476, align 8, !dbg !1563
  %cmp477 = icmp ule i8* %296, %299, !dbg !1563
  br i1 %cmp477, label %land.lhs.true479, label %cond.false493, !dbg !1563

land.lhs.true479:                                 ; preds = %land.lhs.true474
  %300 = load i8**, i8*** %regend, align 8, !dbg !1563
  %301 = load i32, i32* %mcnt, align 4, !dbg !1563
  %idxprom480 = sext i32 %301 to i64, !dbg !1563
  %arrayidx481 = getelementptr inbounds i8*, i8** %300, i64 %idxprom480, !dbg !1563
  %302 = load i8*, i8** %arrayidx481, align 8, !dbg !1563
  %303 = load i8*, i8** %string1.addr, align 8, !dbg !1563
  %304 = load i32, i32* %size1.addr, align 4, !dbg !1563
  %idx.ext482 = sext i32 %304 to i64, !dbg !1563
  %add.ptr483 = getelementptr inbounds i8, i8* %303, i64 %idx.ext482, !dbg !1563
  %cmp484 = icmp ule i8* %302, %add.ptr483, !dbg !1563
  br i1 %cmp484, label %cond.true486, label %cond.false493, !dbg !1563

cond.true486:                                     ; preds = %land.lhs.true479
  %305 = load i8**, i8*** %regend, align 8, !dbg !1563
  %306 = load i32, i32* %mcnt, align 4, !dbg !1563
  %idxprom487 = sext i32 %306 to i64, !dbg !1563
  %arrayidx488 = getelementptr inbounds i8*, i8** %305, i64 %idxprom487, !dbg !1563
  %307 = load i8*, i8** %arrayidx488, align 8, !dbg !1563
  %308 = load i8*, i8** %string1.addr, align 8, !dbg !1563
  %sub.ptr.lhs.cast489 = ptrtoint i8* %307 to i64, !dbg !1563
  %sub.ptr.rhs.cast490 = ptrtoint i8* %308 to i64, !dbg !1563
  %sub.ptr.sub491 = sub i64 %sub.ptr.lhs.cast489, %sub.ptr.rhs.cast490, !dbg !1563
  %conv492 = trunc i64 %sub.ptr.sub491 to i32, !dbg !1563
  br label %cond.end502, !dbg !1563

cond.false493:                                    ; preds = %land.lhs.true479, %land.lhs.true474, %cond.end468
  %309 = load i8**, i8*** %regend, align 8, !dbg !1563
  %310 = load i32, i32* %mcnt, align 4, !dbg !1563
  %idxprom494 = sext i32 %310 to i64, !dbg !1563
  %arrayidx495 = getelementptr inbounds i8*, i8** %309, i64 %idxprom494, !dbg !1563
  %311 = load i8*, i8** %arrayidx495, align 8, !dbg !1563
  %312 = load i8*, i8** %string2.addr, align 8, !dbg !1563
  %sub.ptr.lhs.cast496 = ptrtoint i8* %311 to i64, !dbg !1563
  %sub.ptr.rhs.cast497 = ptrtoint i8* %312 to i64, !dbg !1563
  %sub.ptr.sub498 = sub i64 %sub.ptr.lhs.cast496, %sub.ptr.rhs.cast497, !dbg !1563
  %313 = load i32, i32* %size1.addr, align 4, !dbg !1563
  %conv499 = sext i32 %313 to i64, !dbg !1563
  %add500 = add nsw i64 %sub.ptr.sub498, %conv499, !dbg !1563
  %conv501 = trunc i64 %add500 to i32, !dbg !1563
  br label %cond.end502, !dbg !1563

cond.end502:                                      ; preds = %cond.false493, %cond.true486
  %cond503 = phi i32 [ %conv492, %cond.true486 ], [ %conv501, %cond.false493 ], !dbg !1563
  %314 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1564
  %end504 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %314, i32 0, i32 2, !dbg !1565
  %315 = load i32*, i32** %end504, align 8, !dbg !1565
  %316 = load i32, i32* %mcnt, align 4, !dbg !1566
  %idxprom505 = sext i32 %316 to i64, !dbg !1564
  %arrayidx506 = getelementptr inbounds i32, i32* %315, i64 %idxprom505, !dbg !1564
  store i32 %cond503, i32* %arrayidx506, align 4, !dbg !1567
  br label %if.end507

if.end507:                                        ; preds = %cond.end502, %if.then431
  br label %for.inc508, !dbg !1568

for.inc508:                                       ; preds = %if.end507
  %317 = load i32, i32* %mcnt, align 4, !dbg !1569
  %inc509 = add nsw i32 %317, 1, !dbg !1569
  store i32 %inc509, i32* %mcnt, align 4, !dbg !1569
  br label %for.cond407, !dbg !1570, !llvm.loop !1571

for.end510:                                       ; preds = %cond.end417
  %318 = load i64, i64* %num_regs, align 8, !dbg !1573
  %conv511 = trunc i64 %318 to i32, !dbg !1573
  store i32 %conv511, i32* %mcnt, align 4, !dbg !1575
  br label %for.cond512, !dbg !1576

for.cond512:                                      ; preds = %for.inc523, %for.end510
  %319 = load i32, i32* %mcnt, align 4, !dbg !1577
  %320 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1579
  %num_regs513 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %320, i32 0, i32 0, !dbg !1580
  %321 = load i32, i32* %num_regs513, align 8, !dbg !1580
  %cmp514 = icmp ult i32 %319, %321, !dbg !1581
  br i1 %cmp514, label %for.body516, label %for.end525, !dbg !1582

for.body516:                                      ; preds = %for.cond512
  %322 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1583
  %end517 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %322, i32 0, i32 2, !dbg !1584
  %323 = load i32*, i32** %end517, align 8, !dbg !1584
  %324 = load i32, i32* %mcnt, align 4, !dbg !1585
  %idxprom518 = sext i32 %324 to i64, !dbg !1583
  %arrayidx519 = getelementptr inbounds i32, i32* %323, i64 %idxprom518, !dbg !1583
  store i32 -1, i32* %arrayidx519, align 4, !dbg !1586
  %325 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !1587
  %start520 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %325, i32 0, i32 1, !dbg !1588
  %326 = load i32*, i32** %start520, align 8, !dbg !1588
  %327 = load i32, i32* %mcnt, align 4, !dbg !1589
  %idxprom521 = sext i32 %327 to i64, !dbg !1587
  %arrayidx522 = getelementptr inbounds i32, i32* %326, i64 %idxprom521, !dbg !1587
  store i32 -1, i32* %arrayidx522, align 4, !dbg !1590
  br label %for.inc523, !dbg !1587

for.inc523:                                       ; preds = %for.body516
  %328 = load i32, i32* %mcnt, align 4, !dbg !1591
  %inc524 = add nsw i32 %328, 1, !dbg !1591
  store i32 %inc524, i32* %mcnt, align 4, !dbg !1591
  br label %for.cond512, !dbg !1592, !llvm.loop !1593

for.end525:                                       ; preds = %for.cond512
  br label %if.end526, !dbg !1595

if.end526:                                        ; preds = %for.end525, %land.lhs.true242, %succeed_label
  %329 = load i8*, i8** %d, align 8, !dbg !1596
  %330 = load i32, i32* %pos.addr, align 4, !dbg !1597
  %idx.ext527 = sext i32 %330 to i64, !dbg !1598
  %idx.neg528 = sub i64 0, %idx.ext527, !dbg !1598
  %add.ptr529 = getelementptr inbounds i8, i8* %329, i64 %idx.neg528, !dbg !1598
  %331 = load i8*, i8** %dend, align 8, !dbg !1599
  %332 = load i8*, i8** %end_match_1, align 8, !dbg !1599
  %cmp530 = icmp eq i8* %331, %332, !dbg !1599
  br i1 %cmp530, label %cond.true532, label %cond.false533, !dbg !1599

cond.true532:                                     ; preds = %if.end526
  %333 = load i8*, i8** %string1.addr, align 8, !dbg !1600
  br label %cond.end537, !dbg !1599

cond.false533:                                    ; preds = %if.end526
  %334 = load i8*, i8** %string2.addr, align 8, !dbg !1601
  %335 = load i32, i32* %size1.addr, align 4, !dbg !1602
  %idx.ext534 = sext i32 %335 to i64, !dbg !1603
  %idx.neg535 = sub i64 0, %idx.ext534, !dbg !1603
  %add.ptr536 = getelementptr inbounds i8, i8* %334, i64 %idx.neg535, !dbg !1603
  br label %cond.end537, !dbg !1599

cond.end537:                                      ; preds = %cond.false533, %cond.true532
  %cond538 = phi i8* [ %333, %cond.true532 ], [ %add.ptr536, %cond.false533 ], !dbg !1599
  %sub.ptr.lhs.cast539 = ptrtoint i8* %add.ptr529 to i64, !dbg !1604
  %sub.ptr.rhs.cast540 = ptrtoint i8* %cond538 to i64, !dbg !1604
  %sub.ptr.sub541 = sub i64 %sub.ptr.lhs.cast539, %sub.ptr.rhs.cast540, !dbg !1604
  %conv542 = trunc i64 %sub.ptr.sub541 to i32, !dbg !1596
  store i32 %conv542, i32* %mcnt, align 4, !dbg !1605
  br label %do.body543, !dbg !1606

do.body543:                                       ; preds = %cond.end537
  %336 = load i8**, i8*** %regstart, align 8, !dbg !1607
  %tobool544 = icmp ne i8** %336, null, !dbg !1607
  br i1 %tobool544, label %if.then545, label %if.end546, !dbg !1610

if.then545:                                       ; preds = %do.body543
  br label %if.end546, !dbg !1607

if.end546:                                        ; preds = %if.then545, %do.body543
  store i8** null, i8*** %regstart, align 8, !dbg !1610
  %337 = load i8**, i8*** %regend, align 8, !dbg !1611
  %tobool547 = icmp ne i8** %337, null, !dbg !1611
  br i1 %tobool547, label %if.then548, label %if.end549, !dbg !1610

if.then548:                                       ; preds = %if.end546
  br label %if.end549, !dbg !1611

if.end549:                                        ; preds = %if.then548, %if.end546
  store i8** null, i8*** %regend, align 8, !dbg !1610
  %338 = load i8**, i8*** %old_regstart, align 8, !dbg !1613
  %tobool550 = icmp ne i8** %338, null, !dbg !1613
  br i1 %tobool550, label %if.then551, label %if.end552, !dbg !1610

if.then551:                                       ; preds = %if.end549
  br label %if.end552, !dbg !1613

if.end552:                                        ; preds = %if.then551, %if.end549
  store i8** null, i8*** %old_regstart, align 8, !dbg !1610
  %339 = load i8**, i8*** %old_regend, align 8, !dbg !1615
  %tobool553 = icmp ne i8** %339, null, !dbg !1615
  br i1 %tobool553, label %if.then554, label %if.end555, !dbg !1610

if.then554:                                       ; preds = %if.end552
  br label %if.end555, !dbg !1615

if.end555:                                        ; preds = %if.then554, %if.end552
  store i8** null, i8*** %old_regend, align 8, !dbg !1610
  %340 = load i8**, i8*** %best_regstart, align 8, !dbg !1617
  %tobool556 = icmp ne i8** %340, null, !dbg !1617
  br i1 %tobool556, label %if.then557, label %if.end558, !dbg !1610

if.then557:                                       ; preds = %if.end555
  br label %if.end558, !dbg !1617

if.end558:                                        ; preds = %if.then557, %if.end555
  store i8** null, i8*** %best_regstart, align 8, !dbg !1610
  %341 = load i8**, i8*** %best_regend, align 8, !dbg !1619
  %tobool559 = icmp ne i8** %341, null, !dbg !1619
  br i1 %tobool559, label %if.then560, label %if.end561, !dbg !1610

if.then560:                                       ; preds = %if.end558
  br label %if.end561, !dbg !1619

if.end561:                                        ; preds = %if.then560, %if.end558
  store i8** null, i8*** %best_regend, align 8, !dbg !1610
  %342 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1621
  %tobool562 = icmp ne %union.byte_register_info_type* %342, null, !dbg !1621
  br i1 %tobool562, label %if.then563, label %if.end564, !dbg !1610

if.then563:                                       ; preds = %if.end561
  br label %if.end564, !dbg !1621

if.end564:                                        ; preds = %if.then563, %if.end561
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info, align 8, !dbg !1610
  %343 = load i8**, i8*** %reg_dummy, align 8, !dbg !1623
  %tobool565 = icmp ne i8** %343, null, !dbg !1623
  br i1 %tobool565, label %if.then566, label %if.end567, !dbg !1610

if.then566:                                       ; preds = %if.end564
  br label %if.end567, !dbg !1623

if.end567:                                        ; preds = %if.then566, %if.end564
  store i8** null, i8*** %reg_dummy, align 8, !dbg !1610
  %344 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1625
  %tobool568 = icmp ne %union.byte_register_info_type* %344, null, !dbg !1625
  br i1 %tobool568, label %if.then569, label %if.end570, !dbg !1610

if.then569:                                       ; preds = %if.end567
  br label %if.end570, !dbg !1625

if.end570:                                        ; preds = %if.then569, %if.end567
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !1610
  br label %do.end571, !dbg !1610

do.end571:                                        ; preds = %if.end570
  %345 = load i32, i32* %mcnt, align 4, !dbg !1627
  store i32 %345, i32* %retval, align 4, !dbg !1628
  br label %return, !dbg !1628

if.end572:                                        ; preds = %for.cond156
  %346 = load i8*, i8** %p, align 8, !dbg !1629
  %incdec.ptr = getelementptr inbounds i8, i8* %346, i32 1, !dbg !1629
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1629
  %347 = load i8, i8* %346, align 1, !dbg !1629
  %conv573 = zext i8 %347 to i32, !dbg !1629
  switch i32 %conv573, label %sw.default2673 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb574
    i32 2, label %sw.bb575
    i32 3, label %sw.bb646
    i32 4, label %sw.bb712
    i32 5, label %sw.bb712
    i32 6, label %sw.bb789
    i32 7, label %sw.bb853
    i32 8, label %sw.bb1137
    i32 9, label %sw.bb1278
    i32 10, label %sw.bb1309
    i32 11, label %sw.bb1340
    i32 12, label %sw.bb1352
    i32 16, label %sw.bb1357
    i32 15, label %sw.bb1472
    i32 18, label %sw.bb1619
    i32 17, label %sw.bb1894
    i32 13, label %sw.bb1954
    i32 14, label %sw.bb1970
    i32 19, label %sw.bb1971
    i32 20, label %sw.bb2071
    i32 21, label %sw.bb2171
    i32 22, label %sw.bb2208
    i32 23, label %sw.bb2237
    i32 28, label %sw.bb2275
    i32 29, label %sw.bb2347
    i32 26, label %sw.bb2421
    i32 27, label %sw.bb2487
    i32 24, label %sw.bb2553
    i32 25, label %sw.bb2613
  ], !dbg !1630

sw.bb:                                            ; preds = %if.end572
  br label %sw.epilog2674, !dbg !1631

sw.bb574:                                         ; preds = %if.end572
  br label %succeed_label, !dbg !1633

sw.bb575:                                         ; preds = %if.end572
  %348 = load i8*, i8** %p, align 8, !dbg !1634
  %incdec.ptr576 = getelementptr inbounds i8, i8* %348, i32 1, !dbg !1634
  store i8* %incdec.ptr576, i8** %p, align 8, !dbg !1634
  %349 = load i8, i8* %348, align 1, !dbg !1635
  %conv577 = zext i8 %349 to i32, !dbg !1635
  store i32 %conv577, i32* %mcnt, align 4, !dbg !1636
  %350 = load i8*, i8** %translate, align 8, !dbg !1637
  %tobool578 = icmp ne i8* %350, null, !dbg !1637
  br i1 %tobool578, label %if.then579, label %if.else599, !dbg !1639

if.then579:                                       ; preds = %sw.bb575
  br label %do.body580, !dbg !1640

do.body580:                                       ; preds = %do.cond, %if.then579
  br label %while.cond, !dbg !1642

while.cond:                                       ; preds = %if.end586, %do.body580
  %351 = load i8*, i8** %d, align 8, !dbg !1642
  %352 = load i8*, i8** %dend, align 8, !dbg !1642
  %cmp581 = icmp eq i8* %351, %352, !dbg !1642
  br i1 %cmp581, label %while.body, label %while.end, !dbg !1642

while.body:                                       ; preds = %while.cond
  %353 = load i8*, i8** %dend, align 8, !dbg !1644
  %354 = load i8*, i8** %end_match_2, align 8, !dbg !1644
  %cmp583 = icmp eq i8* %353, %354, !dbg !1644
  br i1 %cmp583, label %if.then585, label %if.end586, !dbg !1647

if.then585:                                       ; preds = %while.body
  br label %fail, !dbg !1644

if.end586:                                        ; preds = %while.body
  %355 = load i8*, i8** %string2.addr, align 8, !dbg !1647
  store i8* %355, i8** %d, align 8, !dbg !1647
  %356 = load i8*, i8** %end_match_2, align 8, !dbg !1647
  store i8* %356, i8** %dend, align 8, !dbg !1647
  br label %while.cond, !dbg !1642, !llvm.loop !1648

while.end:                                        ; preds = %while.cond
  %357 = load i8*, i8** %translate, align 8, !dbg !1649
  %358 = load i8*, i8** %d, align 8, !dbg !1651
  %incdec.ptr587 = getelementptr inbounds i8, i8* %358, i32 1, !dbg !1651
  store i8* %incdec.ptr587, i8** %d, align 8, !dbg !1651
  %359 = load i8, i8* %358, align 1, !dbg !1652
  %idxprom588 = zext i8 %359 to i64, !dbg !1649
  %arrayidx589 = getelementptr inbounds i8, i8* %357, i64 %idxprom588, !dbg !1649
  %360 = load i8, i8* %arrayidx589, align 1, !dbg !1649
  %conv590 = zext i8 %360 to i32, !dbg !1653
  %361 = load i8*, i8** %p, align 8, !dbg !1654
  %incdec.ptr591 = getelementptr inbounds i8, i8* %361, i32 1, !dbg !1654
  store i8* %incdec.ptr591, i8** %p, align 8, !dbg !1654
  %362 = load i8, i8* %361, align 1, !dbg !1655
  %conv592 = zext i8 %362 to i32, !dbg !1656
  %cmp593 = icmp ne i32 %conv590, %conv592, !dbg !1657
  br i1 %cmp593, label %if.then595, label %if.end596, !dbg !1658

if.then595:                                       ; preds = %while.end
  br label %fail, !dbg !1659

if.end596:                                        ; preds = %while.end
  br label %do.cond, !dbg !1660

do.cond:                                          ; preds = %if.end596
  %363 = load i32, i32* %mcnt, align 4, !dbg !1661
  %dec = add nsw i32 %363, -1, !dbg !1661
  store i32 %dec, i32* %mcnt, align 4, !dbg !1661
  %tobool597 = icmp ne i32 %dec, 0, !dbg !1660
  br i1 %tobool597, label %do.body580, label %do.end598, !dbg !1660, !llvm.loop !1662

do.end598:                                        ; preds = %do.cond
  br label %if.end622, !dbg !1664

if.else599:                                       ; preds = %sw.bb575
  br label %do.body600, !dbg !1665

do.body600:                                       ; preds = %do.cond618, %if.else599
  br label %while.cond601, !dbg !1667

while.cond601:                                    ; preds = %if.end608, %do.body600
  %364 = load i8*, i8** %d, align 8, !dbg !1667
  %365 = load i8*, i8** %dend, align 8, !dbg !1667
  %cmp602 = icmp eq i8* %364, %365, !dbg !1667
  br i1 %cmp602, label %while.body604, label %while.end609, !dbg !1667

while.body604:                                    ; preds = %while.cond601
  %366 = load i8*, i8** %dend, align 8, !dbg !1669
  %367 = load i8*, i8** %end_match_2, align 8, !dbg !1669
  %cmp605 = icmp eq i8* %366, %367, !dbg !1669
  br i1 %cmp605, label %if.then607, label %if.end608, !dbg !1672

if.then607:                                       ; preds = %while.body604
  br label %fail, !dbg !1669

if.end608:                                        ; preds = %while.body604
  %368 = load i8*, i8** %string2.addr, align 8, !dbg !1672
  store i8* %368, i8** %d, align 8, !dbg !1672
  %369 = load i8*, i8** %end_match_2, align 8, !dbg !1672
  store i8* %369, i8** %dend, align 8, !dbg !1672
  br label %while.cond601, !dbg !1667, !llvm.loop !1673

while.end609:                                     ; preds = %while.cond601
  %370 = load i8*, i8** %d, align 8, !dbg !1674
  %incdec.ptr610 = getelementptr inbounds i8, i8* %370, i32 1, !dbg !1674
  store i8* %incdec.ptr610, i8** %d, align 8, !dbg !1674
  %371 = load i8, i8* %370, align 1, !dbg !1676
  %conv611 = sext i8 %371 to i32, !dbg !1676
  %372 = load i8*, i8** %p, align 8, !dbg !1677
  %incdec.ptr612 = getelementptr inbounds i8, i8* %372, i32 1, !dbg !1677
  store i8* %incdec.ptr612, i8** %p, align 8, !dbg !1677
  %373 = load i8, i8* %372, align 1, !dbg !1678
  %conv613 = sext i8 %373 to i32, !dbg !1679
  %cmp614 = icmp ne i32 %conv611, %conv613, !dbg !1680
  br i1 %cmp614, label %if.then616, label %if.end617, !dbg !1681

if.then616:                                       ; preds = %while.end609
  br label %fail, !dbg !1682

if.end617:                                        ; preds = %while.end609
  br label %do.cond618, !dbg !1683

do.cond618:                                       ; preds = %if.end617
  %374 = load i32, i32* %mcnt, align 4, !dbg !1684
  %dec619 = add nsw i32 %374, -1, !dbg !1684
  store i32 %dec619, i32* %mcnt, align 4, !dbg !1684
  %tobool620 = icmp ne i32 %dec619, 0, !dbg !1683
  br i1 %tobool620, label %do.body600, label %do.end621, !dbg !1683, !llvm.loop !1685

do.end621:                                        ; preds = %do.cond618
  br label %if.end622

if.end622:                                        ; preds = %do.end621, %do.end598
  br label %do.body623, !dbg !1687

do.body623:                                       ; preds = %if.end622
  %375 = load i32, i32* %set_regs_matched_done, align 4, !dbg !1688
  %tobool624 = icmp ne i32 %375, 0, !dbg !1688
  br i1 %tobool624, label %if.end643, label %if.then625, !dbg !1691

if.then625:                                       ; preds = %do.body623
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1692, metadata !DIExpression()), !dbg !1694
  store i32 1, i32* %set_regs_matched_done, align 4, !dbg !1694
  %376 = load i64, i64* %lowest_active_reg, align 8, !dbg !1695
  store i64 %376, i64* %r, align 8, !dbg !1695
  br label %for.cond626, !dbg !1695

for.cond626:                                      ; preds = %for.inc640, %if.then625
  %377 = load i64, i64* %r, align 8, !dbg !1697
  %378 = load i64, i64* %highest_active_reg, align 8, !dbg !1697
  %cmp627 = icmp ule i64 %377, %378, !dbg !1697
  br i1 %cmp627, label %for.body629, label %for.end642, !dbg !1695

for.body629:                                      ; preds = %for.cond626
  %379 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1699
  %380 = load i64, i64* %r, align 8, !dbg !1699
  %arrayidx630 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %379, i64 %380, !dbg !1699
  %bits631 = bitcast %union.byte_register_info_type* %arrayidx630 to %struct.anon*, !dbg !1699
  %381 = bitcast %struct.anon* %bits631 to i8*, !dbg !1699
  %bf.load632 = load i8, i8* %381, align 8, !dbg !1699
  %bf.clear633 = and i8 %bf.load632, -17, !dbg !1699
  %bf.set634 = or i8 %bf.clear633, 16, !dbg !1699
  store i8 %bf.set634, i8* %381, align 8, !dbg !1699
  %382 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1699
  %383 = load i64, i64* %r, align 8, !dbg !1699
  %arrayidx635 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %382, i64 %383, !dbg !1699
  %bits636 = bitcast %union.byte_register_info_type* %arrayidx635 to %struct.anon*, !dbg !1699
  %384 = bitcast %struct.anon* %bits636 to i8*, !dbg !1699
  %bf.load637 = load i8, i8* %384, align 8, !dbg !1699
  %bf.clear638 = and i8 %bf.load637, -9, !dbg !1699
  %bf.set639 = or i8 %bf.clear638, 8, !dbg !1699
  store i8 %bf.set639, i8* %384, align 8, !dbg !1699
  br label %for.inc640, !dbg !1699

for.inc640:                                       ; preds = %for.body629
  %385 = load i64, i64* %r, align 8, !dbg !1697
  %inc641 = add i64 %385, 1, !dbg !1697
  store i64 %inc641, i64* %r, align 8, !dbg !1697
  br label %for.cond626, !dbg !1697, !llvm.loop !1701

for.end642:                                       ; preds = %for.cond626
  br label %if.end643, !dbg !1694

if.end643:                                        ; preds = %for.end642, %do.body623
  br label %do.end645, !dbg !1691

do.end645:                                        ; preds = %if.end643
  br label %sw.epilog2674, !dbg !1702

sw.bb646:                                         ; preds = %if.end572
  br label %while.cond647, !dbg !1703

while.cond647:                                    ; preds = %if.end654, %sw.bb646
  %386 = load i8*, i8** %d, align 8, !dbg !1703
  %387 = load i8*, i8** %dend, align 8, !dbg !1703
  %cmp648 = icmp eq i8* %386, %387, !dbg !1703
  br i1 %cmp648, label %while.body650, label %while.end655, !dbg !1703

while.body650:                                    ; preds = %while.cond647
  %388 = load i8*, i8** %dend, align 8, !dbg !1704
  %389 = load i8*, i8** %end_match_2, align 8, !dbg !1704
  %cmp651 = icmp eq i8* %388, %389, !dbg !1704
  br i1 %cmp651, label %if.then653, label %if.end654, !dbg !1707

if.then653:                                       ; preds = %while.body650
  br label %fail, !dbg !1704

if.end654:                                        ; preds = %while.body650
  %390 = load i8*, i8** %string2.addr, align 8, !dbg !1707
  store i8* %390, i8** %d, align 8, !dbg !1707
  %391 = load i8*, i8** %end_match_2, align 8, !dbg !1707
  store i8* %391, i8** %dend, align 8, !dbg !1707
  br label %while.cond647, !dbg !1703, !llvm.loop !1708

while.end655:                                     ; preds = %while.cond647
  %392 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1709
  %syntax = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %392, i32 0, i32 3, !dbg !1711
  %393 = load i64, i64* %syntax, align 8, !dbg !1711
  %and = and i64 %393, 64, !dbg !1712
  %tobool656 = icmp ne i64 %and, 0, !dbg !1712
  br i1 %tobool656, label %lor.lhs.false669, label %land.lhs.true657, !dbg !1713

land.lhs.true657:                                 ; preds = %while.end655
  %394 = load i8*, i8** %translate, align 8, !dbg !1714
  %tobool658 = icmp ne i8* %394, null, !dbg !1714
  br i1 %tobool658, label %cond.true659, label %cond.false663, !dbg !1714

cond.true659:                                     ; preds = %land.lhs.true657
  %395 = load i8*, i8** %translate, align 8, !dbg !1714
  %396 = load i8*, i8** %d, align 8, !dbg !1714
  %397 = load i8, i8* %396, align 1, !dbg !1714
  %idxprom660 = zext i8 %397 to i64, !dbg !1714
  %arrayidx661 = getelementptr inbounds i8, i8* %395, i64 %idxprom660, !dbg !1714
  %398 = load i8, i8* %arrayidx661, align 1, !dbg !1714
  %conv662 = sext i8 %398 to i32, !dbg !1714
  br label %cond.end665, !dbg !1714

cond.false663:                                    ; preds = %land.lhs.true657
  %399 = load i8*, i8** %d, align 8, !dbg !1714
  %400 = load i8, i8* %399, align 1, !dbg !1714
  %conv664 = sext i8 %400 to i32, !dbg !1714
  br label %cond.end665, !dbg !1714

cond.end665:                                      ; preds = %cond.false663, %cond.true659
  %cond666 = phi i32 [ %conv662, %cond.true659 ], [ %conv664, %cond.false663 ], !dbg !1714
  %cmp667 = icmp eq i32 %cond666, 10, !dbg !1715
  br i1 %cmp667, label %if.then685, label %lor.lhs.false669, !dbg !1716

lor.lhs.false669:                                 ; preds = %cond.end665, %while.end655
  %401 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !1717
  %syntax670 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %401, i32 0, i32 3, !dbg !1718
  %402 = load i64, i64* %syntax670, align 8, !dbg !1718
  %and671 = and i64 %402, 128, !dbg !1719
  %tobool672 = icmp ne i64 %and671, 0, !dbg !1719
  br i1 %tobool672, label %land.lhs.true673, label %if.end686, !dbg !1720

land.lhs.true673:                                 ; preds = %lor.lhs.false669
  %403 = load i8*, i8** %translate, align 8, !dbg !1721
  %tobool674 = icmp ne i8* %403, null, !dbg !1721
  br i1 %tobool674, label %cond.true675, label %cond.false679, !dbg !1721

cond.true675:                                     ; preds = %land.lhs.true673
  %404 = load i8*, i8** %translate, align 8, !dbg !1721
  %405 = load i8*, i8** %d, align 8, !dbg !1721
  %406 = load i8, i8* %405, align 1, !dbg !1721
  %idxprom676 = zext i8 %406 to i64, !dbg !1721
  %arrayidx677 = getelementptr inbounds i8, i8* %404, i64 %idxprom676, !dbg !1721
  %407 = load i8, i8* %arrayidx677, align 1, !dbg !1721
  %conv678 = sext i8 %407 to i32, !dbg !1721
  br label %cond.end681, !dbg !1721

cond.false679:                                    ; preds = %land.lhs.true673
  %408 = load i8*, i8** %d, align 8, !dbg !1721
  %409 = load i8, i8* %408, align 1, !dbg !1721
  %conv680 = sext i8 %409 to i32, !dbg !1721
  br label %cond.end681, !dbg !1721

cond.end681:                                      ; preds = %cond.false679, %cond.true675
  %cond682 = phi i32 [ %conv678, %cond.true675 ], [ %conv680, %cond.false679 ], !dbg !1721
  %cmp683 = icmp eq i32 %cond682, 0, !dbg !1722
  br i1 %cmp683, label %if.then685, label %if.end686, !dbg !1723

if.then685:                                       ; preds = %cond.end681, %cond.end665
  br label %fail, !dbg !1724

if.end686:                                        ; preds = %cond.end681, %lor.lhs.false669
  br label %do.body687, !dbg !1725

do.body687:                                       ; preds = %if.end686
  %410 = load i32, i32* %set_regs_matched_done, align 4, !dbg !1726
  %tobool688 = icmp ne i32 %410, 0, !dbg !1726
  br i1 %tobool688, label %if.end708, label %if.then689, !dbg !1729

if.then689:                                       ; preds = %do.body687
  call void @llvm.dbg.declare(metadata i64* %r690, metadata !1730, metadata !DIExpression()), !dbg !1732
  store i32 1, i32* %set_regs_matched_done, align 4, !dbg !1732
  %411 = load i64, i64* %lowest_active_reg, align 8, !dbg !1733
  store i64 %411, i64* %r690, align 8, !dbg !1733
  br label %for.cond691, !dbg !1733

for.cond691:                                      ; preds = %for.inc705, %if.then689
  %412 = load i64, i64* %r690, align 8, !dbg !1735
  %413 = load i64, i64* %highest_active_reg, align 8, !dbg !1735
  %cmp692 = icmp ule i64 %412, %413, !dbg !1735
  br i1 %cmp692, label %for.body694, label %for.end707, !dbg !1733

for.body694:                                      ; preds = %for.cond691
  %414 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1737
  %415 = load i64, i64* %r690, align 8, !dbg !1737
  %arrayidx695 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %414, i64 %415, !dbg !1737
  %bits696 = bitcast %union.byte_register_info_type* %arrayidx695 to %struct.anon*, !dbg !1737
  %416 = bitcast %struct.anon* %bits696 to i8*, !dbg !1737
  %bf.load697 = load i8, i8* %416, align 8, !dbg !1737
  %bf.clear698 = and i8 %bf.load697, -17, !dbg !1737
  %bf.set699 = or i8 %bf.clear698, 16, !dbg !1737
  store i8 %bf.set699, i8* %416, align 8, !dbg !1737
  %417 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1737
  %418 = load i64, i64* %r690, align 8, !dbg !1737
  %arrayidx700 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %417, i64 %418, !dbg !1737
  %bits701 = bitcast %union.byte_register_info_type* %arrayidx700 to %struct.anon*, !dbg !1737
  %419 = bitcast %struct.anon* %bits701 to i8*, !dbg !1737
  %bf.load702 = load i8, i8* %419, align 8, !dbg !1737
  %bf.clear703 = and i8 %bf.load702, -9, !dbg !1737
  %bf.set704 = or i8 %bf.clear703, 8, !dbg !1737
  store i8 %bf.set704, i8* %419, align 8, !dbg !1737
  br label %for.inc705, !dbg !1737

for.inc705:                                       ; preds = %for.body694
  %420 = load i64, i64* %r690, align 8, !dbg !1735
  %inc706 = add i64 %420, 1, !dbg !1735
  store i64 %inc706, i64* %r690, align 8, !dbg !1735
  br label %for.cond691, !dbg !1735, !llvm.loop !1739

for.end707:                                       ; preds = %for.cond691
  br label %if.end708, !dbg !1732

if.end708:                                        ; preds = %for.end707, %do.body687
  br label %do.end710, !dbg !1729

do.end710:                                        ; preds = %if.end708
  %421 = load i8*, i8** %d, align 8, !dbg !1740
  %incdec.ptr711 = getelementptr inbounds i8, i8* %421, i32 1, !dbg !1740
  store i8* %incdec.ptr711, i8** %d, align 8, !dbg !1740
  br label %sw.epilog2674, !dbg !1741

sw.bb712:                                         ; preds = %if.end572, %if.end572
  call void @llvm.dbg.declare(metadata i8* %c, metadata !1742, metadata !DIExpression()), !dbg !1744
  call void @llvm.dbg.declare(metadata i8* %negate, metadata !1745, metadata !DIExpression()), !dbg !1746
  %422 = load i8*, i8** %p, align 8, !dbg !1747
  %add.ptr713 = getelementptr inbounds i8, i8* %422, i64 -1, !dbg !1748
  %423 = load i8, i8* %add.ptr713, align 1, !dbg !1749
  %conv714 = zext i8 %423 to i32, !dbg !1750
  %cmp715 = icmp eq i32 %conv714, 5, !dbg !1751
  %conv716 = zext i1 %cmp715 to i32, !dbg !1751
  %conv717 = trunc i32 %conv716 to i8, !dbg !1750
  store i8 %conv717, i8* %negate, align 1, !dbg !1746
  br label %while.cond718, !dbg !1752

while.cond718:                                    ; preds = %if.end725, %sw.bb712
  %424 = load i8*, i8** %d, align 8, !dbg !1752
  %425 = load i8*, i8** %dend, align 8, !dbg !1752
  %cmp719 = icmp eq i8* %424, %425, !dbg !1752
  br i1 %cmp719, label %while.body721, label %while.end726, !dbg !1752

while.body721:                                    ; preds = %while.cond718
  %426 = load i8*, i8** %dend, align 8, !dbg !1753
  %427 = load i8*, i8** %end_match_2, align 8, !dbg !1753
  %cmp722 = icmp eq i8* %426, %427, !dbg !1753
  br i1 %cmp722, label %if.then724, label %if.end725, !dbg !1756

if.then724:                                       ; preds = %while.body721
  br label %fail, !dbg !1753

if.end725:                                        ; preds = %while.body721
  %428 = load i8*, i8** %string2.addr, align 8, !dbg !1756
  store i8* %428, i8** %d, align 8, !dbg !1756
  %429 = load i8*, i8** %end_match_2, align 8, !dbg !1756
  store i8* %429, i8** %dend, align 8, !dbg !1756
  br label %while.cond718, !dbg !1752, !llvm.loop !1757

while.end726:                                     ; preds = %while.cond718
  %430 = load i8*, i8** %translate, align 8, !dbg !1758
  %tobool727 = icmp ne i8* %430, null, !dbg !1758
  br i1 %tobool727, label %cond.true728, label %cond.false732, !dbg !1758

cond.true728:                                     ; preds = %while.end726
  %431 = load i8*, i8** %translate, align 8, !dbg !1758
  %432 = load i8*, i8** %d, align 8, !dbg !1758
  %433 = load i8, i8* %432, align 1, !dbg !1758
  %idxprom729 = zext i8 %433 to i64, !dbg !1758
  %arrayidx730 = getelementptr inbounds i8, i8* %431, i64 %idxprom729, !dbg !1758
  %434 = load i8, i8* %arrayidx730, align 1, !dbg !1758
  %conv731 = sext i8 %434 to i32, !dbg !1758
  br label %cond.end734, !dbg !1758

cond.false732:                                    ; preds = %while.end726
  %435 = load i8*, i8** %d, align 8, !dbg !1758
  %436 = load i8, i8* %435, align 1, !dbg !1758
  %conv733 = sext i8 %436 to i32, !dbg !1758
  br label %cond.end734, !dbg !1758

cond.end734:                                      ; preds = %cond.false732, %cond.true728
  %cond735 = phi i32 [ %conv731, %cond.true728 ], [ %conv733, %cond.false732 ], !dbg !1758
  %conv736 = trunc i32 %cond735 to i8, !dbg !1758
  store i8 %conv736, i8* %c, align 1, !dbg !1759
  %437 = load i8, i8* %c, align 1, !dbg !1760
  %conv737 = zext i8 %437 to i32, !dbg !1760
  %438 = load i8*, i8** %p, align 8, !dbg !1762
  %439 = load i8, i8* %438, align 1, !dbg !1763
  %conv738 = zext i8 %439 to i32, !dbg !1763
  %mul739 = mul nsw i32 %conv738, 8, !dbg !1764
  %cmp740 = icmp ult i32 %conv737, %mul739, !dbg !1765
  br i1 %cmp740, label %land.lhs.true742, label %if.end756, !dbg !1766

land.lhs.true742:                                 ; preds = %cond.end734
  %440 = load i8*, i8** %p, align 8, !dbg !1767
  %441 = load i8, i8* %c, align 1, !dbg !1768
  %conv743 = zext i8 %441 to i32, !dbg !1768
  %div = sdiv i32 %conv743, 8, !dbg !1769
  %add744 = add nsw i32 1, %div, !dbg !1770
  %idxprom745 = sext i32 %add744 to i64, !dbg !1767
  %arrayidx746 = getelementptr inbounds i8, i8* %440, i64 %idxprom745, !dbg !1767
  %442 = load i8, i8* %arrayidx746, align 1, !dbg !1767
  %conv747 = zext i8 %442 to i32, !dbg !1767
  %443 = load i8, i8* %c, align 1, !dbg !1771
  %conv748 = zext i8 %443 to i32, !dbg !1771
  %rem = srem i32 %conv748, 8, !dbg !1772
  %shl = shl i32 1, %rem, !dbg !1773
  %and749 = and i32 %conv747, %shl, !dbg !1774
  %tobool750 = icmp ne i32 %and749, 0, !dbg !1774
  br i1 %tobool750, label %if.then751, label %if.end756, !dbg !1775

if.then751:                                       ; preds = %land.lhs.true742
  %444 = load i8, i8* %negate, align 1, !dbg !1776
  %tobool752 = icmp ne i8 %444, 0, !dbg !1777
  %lnot753 = xor i1 %tobool752, true, !dbg !1777
  %lnot.ext754 = zext i1 %lnot753 to i32, !dbg !1777
  %conv755 = trunc i32 %lnot.ext754 to i8, !dbg !1777
  store i8 %conv755, i8* %negate, align 1, !dbg !1778
  br label %if.end756, !dbg !1779

if.end756:                                        ; preds = %if.then751, %land.lhs.true742, %cond.end734
  %445 = load i8*, i8** %p, align 8, !dbg !1780
  %446 = load i8, i8* %445, align 1, !dbg !1781
  %conv757 = zext i8 %446 to i32, !dbg !1781
  %add758 = add nsw i32 1, %conv757, !dbg !1782
  %447 = load i8*, i8** %p, align 8, !dbg !1783
  %idx.ext759 = sext i32 %add758 to i64, !dbg !1783
  %add.ptr760 = getelementptr inbounds i8, i8* %447, i64 %idx.ext759, !dbg !1783
  store i8* %add.ptr760, i8** %p, align 8, !dbg !1783
  %448 = load i8, i8* %negate, align 1, !dbg !1784
  %tobool761 = icmp ne i8 %448, 0, !dbg !1784
  br i1 %tobool761, label %if.end763, label %if.then762, !dbg !1786

if.then762:                                       ; preds = %if.end756
  br label %fail, !dbg !1787

if.end763:                                        ; preds = %if.end756
  br label %do.body764, !dbg !1788

do.body764:                                       ; preds = %if.end763
  %449 = load i32, i32* %set_regs_matched_done, align 4, !dbg !1789
  %tobool765 = icmp ne i32 %449, 0, !dbg !1789
  br i1 %tobool765, label %if.end785, label %if.then766, !dbg !1792

if.then766:                                       ; preds = %do.body764
  call void @llvm.dbg.declare(metadata i64* %r767, metadata !1793, metadata !DIExpression()), !dbg !1795
  store i32 1, i32* %set_regs_matched_done, align 4, !dbg !1795
  %450 = load i64, i64* %lowest_active_reg, align 8, !dbg !1796
  store i64 %450, i64* %r767, align 8, !dbg !1796
  br label %for.cond768, !dbg !1796

for.cond768:                                      ; preds = %for.inc782, %if.then766
  %451 = load i64, i64* %r767, align 8, !dbg !1798
  %452 = load i64, i64* %highest_active_reg, align 8, !dbg !1798
  %cmp769 = icmp ule i64 %451, %452, !dbg !1798
  br i1 %cmp769, label %for.body771, label %for.end784, !dbg !1796

for.body771:                                      ; preds = %for.cond768
  %453 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1800
  %454 = load i64, i64* %r767, align 8, !dbg !1800
  %arrayidx772 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %453, i64 %454, !dbg !1800
  %bits773 = bitcast %union.byte_register_info_type* %arrayidx772 to %struct.anon*, !dbg !1800
  %455 = bitcast %struct.anon* %bits773 to i8*, !dbg !1800
  %bf.load774 = load i8, i8* %455, align 8, !dbg !1800
  %bf.clear775 = and i8 %bf.load774, -17, !dbg !1800
  %bf.set776 = or i8 %bf.clear775, 16, !dbg !1800
  store i8 %bf.set776, i8* %455, align 8, !dbg !1800
  %456 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1800
  %457 = load i64, i64* %r767, align 8, !dbg !1800
  %arrayidx777 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %456, i64 %457, !dbg !1800
  %bits778 = bitcast %union.byte_register_info_type* %arrayidx777 to %struct.anon*, !dbg !1800
  %458 = bitcast %struct.anon* %bits778 to i8*, !dbg !1800
  %bf.load779 = load i8, i8* %458, align 8, !dbg !1800
  %bf.clear780 = and i8 %bf.load779, -9, !dbg !1800
  %bf.set781 = or i8 %bf.clear780, 8, !dbg !1800
  store i8 %bf.set781, i8* %458, align 8, !dbg !1800
  br label %for.inc782, !dbg !1800

for.inc782:                                       ; preds = %for.body771
  %459 = load i64, i64* %r767, align 8, !dbg !1798
  %inc783 = add i64 %459, 1, !dbg !1798
  store i64 %inc783, i64* %r767, align 8, !dbg !1798
  br label %for.cond768, !dbg !1798, !llvm.loop !1802

for.end784:                                       ; preds = %for.cond768
  br label %if.end785, !dbg !1795

if.end785:                                        ; preds = %for.end784, %do.body764
  br label %do.end787, !dbg !1792

do.end787:                                        ; preds = %if.end785
  %460 = load i8*, i8** %d, align 8, !dbg !1803
  %incdec.ptr788 = getelementptr inbounds i8, i8* %460, i32 1, !dbg !1803
  store i8* %incdec.ptr788, i8** %d, align 8, !dbg !1803
  br label %sw.epilog2674, !dbg !1804

sw.bb789:                                         ; preds = %if.end572
  %461 = load i8*, i8** %p, align 8, !dbg !1805
  store i8* %461, i8** %p1, align 8, !dbg !1806
  %462 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1807
  %463 = load i8*, i8** %p, align 8, !dbg !1807
  %464 = load i8, i8* %463, align 1, !dbg !1807
  %idxprom790 = zext i8 %464 to i64, !dbg !1807
  %arrayidx791 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %462, i64 %idxprom790, !dbg !1807
  %bits792 = bitcast %union.byte_register_info_type* %arrayidx791 to %struct.anon*, !dbg !1807
  %465 = bitcast %struct.anon* %bits792 to i8*, !dbg !1807
  %bf.load793 = load i8, i8* %465, align 8, !dbg !1807
  %bf.clear794 = and i8 %bf.load793, 3, !dbg !1807
  %bf.cast795 = zext i8 %bf.clear794 to i32, !dbg !1807
  %cmp796 = icmp eq i32 %bf.cast795, 3, !dbg !1809
  br i1 %cmp796, label %if.then798, label %if.end807, !dbg !1810

if.then798:                                       ; preds = %sw.bb789
  %466 = load i8*, i8** %pend, align 8, !dbg !1811
  %467 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1812
  %call799 = call signext i8 @byte_group_match_null_string_p(i8** %p1, i8* %466, %union.byte_register_info_type* %467), !dbg !1813
  %conv800 = sext i8 %call799 to i32, !dbg !1813
  %468 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1814
  %469 = load i8*, i8** %p, align 8, !dbg !1814
  %470 = load i8, i8* %469, align 1, !dbg !1814
  %idxprom801 = zext i8 %470 to i64, !dbg !1814
  %arrayidx802 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %468, i64 %idxprom801, !dbg !1814
  %bits803 = bitcast %union.byte_register_info_type* %arrayidx802 to %struct.anon*, !dbg !1814
  %471 = bitcast %struct.anon* %bits803 to i8*, !dbg !1814
  %472 = trunc i32 %conv800 to i8, !dbg !1815
  %bf.load804 = load i8, i8* %471, align 8, !dbg !1815
  %bf.value = and i8 %472, 3, !dbg !1815
  %bf.clear805 = and i8 %bf.load804, -4, !dbg !1815
  %bf.set806 = or i8 %bf.clear805, %bf.value, !dbg !1815
  store i8 %bf.set806, i8* %471, align 8, !dbg !1815
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !1815
  br label %if.end807, !dbg !1814

if.end807:                                        ; preds = %if.then798, %sw.bb789
  %473 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1816
  %474 = load i8*, i8** %p, align 8, !dbg !1816
  %475 = load i8, i8* %474, align 1, !dbg !1816
  %idxprom808 = zext i8 %475 to i64, !dbg !1816
  %arrayidx809 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %473, i64 %idxprom808, !dbg !1816
  %bits810 = bitcast %union.byte_register_info_type* %arrayidx809 to %struct.anon*, !dbg !1816
  %476 = bitcast %struct.anon* %bits810 to i8*, !dbg !1816
  %bf.load811 = load i8, i8* %476, align 8, !dbg !1816
  %bf.clear812 = and i8 %bf.load811, 3, !dbg !1816
  %bf.cast813 = zext i8 %bf.clear812 to i32, !dbg !1816
  %tobool814 = icmp ne i32 %bf.cast813, 0, !dbg !1816
  br i1 %tobool814, label %cond.true815, label %cond.false826, !dbg !1816

cond.true815:                                     ; preds = %if.end807
  %477 = load i8**, i8*** %regstart, align 8, !dbg !1817
  %478 = load i8*, i8** %p, align 8, !dbg !1817
  %479 = load i8, i8* %478, align 1, !dbg !1817
  %idxprom816 = zext i8 %479 to i64, !dbg !1817
  %arrayidx817 = getelementptr inbounds i8*, i8** %477, i64 %idxprom816, !dbg !1817
  %480 = load i8*, i8** %arrayidx817, align 8, !dbg !1817
  %cmp818 = icmp eq i8* %480, @byte_reg_unset_dummy, !dbg !1817
  br i1 %cmp818, label %cond.true820, label %cond.false821, !dbg !1817

cond.true820:                                     ; preds = %cond.true815
  %481 = load i8*, i8** %d, align 8, !dbg !1818
  br label %cond.end824, !dbg !1817

cond.false821:                                    ; preds = %cond.true815
  %482 = load i8**, i8*** %regstart, align 8, !dbg !1819
  %483 = load i8*, i8** %p, align 8, !dbg !1820
  %484 = load i8, i8* %483, align 1, !dbg !1821
  %idxprom822 = zext i8 %484 to i64, !dbg !1819
  %arrayidx823 = getelementptr inbounds i8*, i8** %482, i64 %idxprom822, !dbg !1819
  %485 = load i8*, i8** %arrayidx823, align 8, !dbg !1819
  br label %cond.end824, !dbg !1817

cond.end824:                                      ; preds = %cond.false821, %cond.true820
  %cond825 = phi i8* [ %481, %cond.true820 ], [ %485, %cond.false821 ], !dbg !1817
  br label %cond.end829, !dbg !1816

cond.false826:                                    ; preds = %if.end807
  %486 = load i8**, i8*** %regstart, align 8, !dbg !1822
  %487 = load i8*, i8** %p, align 8, !dbg !1823
  %488 = load i8, i8* %487, align 1, !dbg !1824
  %idxprom827 = zext i8 %488 to i64, !dbg !1822
  %arrayidx828 = getelementptr inbounds i8*, i8** %486, i64 %idxprom827, !dbg !1822
  %489 = load i8*, i8** %arrayidx828, align 8, !dbg !1822
  br label %cond.end829, !dbg !1816

cond.end829:                                      ; preds = %cond.false826, %cond.end824
  %cond830 = phi i8* [ %cond825, %cond.end824 ], [ %489, %cond.false826 ], !dbg !1816
  %490 = load i8**, i8*** %old_regstart, align 8, !dbg !1825
  %491 = load i8*, i8** %p, align 8, !dbg !1826
  %492 = load i8, i8* %491, align 1, !dbg !1827
  %idxprom831 = zext i8 %492 to i64, !dbg !1825
  %arrayidx832 = getelementptr inbounds i8*, i8** %490, i64 %idxprom831, !dbg !1825
  store i8* %cond830, i8** %arrayidx832, align 8, !dbg !1828
  %493 = load i8*, i8** %d, align 8, !dbg !1829
  %494 = load i8**, i8*** %regstart, align 8, !dbg !1830
  %495 = load i8*, i8** %p, align 8, !dbg !1831
  %496 = load i8, i8* %495, align 1, !dbg !1832
  %idxprom833 = zext i8 %496 to i64, !dbg !1830
  %arrayidx834 = getelementptr inbounds i8*, i8** %494, i64 %idxprom833, !dbg !1830
  store i8* %493, i8** %arrayidx834, align 8, !dbg !1833
  %497 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1834
  %498 = load i8*, i8** %p, align 8, !dbg !1834
  %499 = load i8, i8* %498, align 1, !dbg !1834
  %idxprom835 = zext i8 %499 to i64, !dbg !1834
  %arrayidx836 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %497, i64 %idxprom835, !dbg !1834
  %bits837 = bitcast %union.byte_register_info_type* %arrayidx836 to %struct.anon*, !dbg !1834
  %500 = bitcast %struct.anon* %bits837 to i8*, !dbg !1834
  %bf.load838 = load i8, i8* %500, align 8, !dbg !1835
  %bf.clear839 = and i8 %bf.load838, -5, !dbg !1835
  %bf.set840 = or i8 %bf.clear839, 4, !dbg !1835
  store i8 %bf.set840, i8* %500, align 8, !dbg !1835
  %501 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1836
  %502 = load i8*, i8** %p, align 8, !dbg !1836
  %503 = load i8, i8* %502, align 1, !dbg !1836
  %idxprom841 = zext i8 %503 to i64, !dbg !1836
  %arrayidx842 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %501, i64 %idxprom841, !dbg !1836
  %bits843 = bitcast %union.byte_register_info_type* %arrayidx842 to %struct.anon*, !dbg !1836
  %504 = bitcast %struct.anon* %bits843 to i8*, !dbg !1836
  %bf.load844 = load i8, i8* %504, align 8, !dbg !1837
  %bf.clear845 = and i8 %bf.load844, -9, !dbg !1837
  store i8 %bf.clear845, i8* %504, align 8, !dbg !1837
  store i32 0, i32* %set_regs_matched_done, align 4, !dbg !1838
  %505 = load i8*, i8** %p, align 8, !dbg !1839
  %506 = load i8, i8* %505, align 1, !dbg !1840
  %conv846 = zext i8 %506 to i64, !dbg !1840
  store i64 %conv846, i64* %highest_active_reg, align 8, !dbg !1841
  %507 = load i64, i64* %lowest_active_reg, align 8, !dbg !1842
  %cmp847 = icmp eq i64 %507, 257, !dbg !1844
  br i1 %cmp847, label %if.then849, label %if.end851, !dbg !1845

if.then849:                                       ; preds = %cond.end829
  %508 = load i8*, i8** %p, align 8, !dbg !1846
  %509 = load i8, i8* %508, align 1, !dbg !1847
  %conv850 = zext i8 %509 to i64, !dbg !1847
  store i64 %conv850, i64* %lowest_active_reg, align 8, !dbg !1848
  br label %if.end851, !dbg !1849

if.end851:                                        ; preds = %if.then849, %cond.end829
  %510 = load i8*, i8** %p, align 8, !dbg !1850
  %add.ptr852 = getelementptr inbounds i8, i8* %510, i64 2, !dbg !1850
  store i8* %add.ptr852, i8** %p, align 8, !dbg !1850
  %511 = load i8*, i8** %p, align 8, !dbg !1851
  store i8* %511, i8** %just_past_start_mem, align 8, !dbg !1852
  br label %sw.epilog2674, !dbg !1853

sw.bb853:                                         ; preds = %if.end572
  %512 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1854
  %513 = load i8*, i8** %p, align 8, !dbg !1854
  %514 = load i8, i8* %513, align 1, !dbg !1854
  %idxprom854 = zext i8 %514 to i64, !dbg !1854
  %arrayidx855 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %512, i64 %idxprom854, !dbg !1854
  %bits856 = bitcast %union.byte_register_info_type* %arrayidx855 to %struct.anon*, !dbg !1854
  %515 = bitcast %struct.anon* %bits856 to i8*, !dbg !1854
  %bf.load857 = load i8, i8* %515, align 8, !dbg !1854
  %bf.clear858 = and i8 %bf.load857, 3, !dbg !1854
  %bf.cast859 = zext i8 %bf.clear858 to i32, !dbg !1854
  %tobool860 = icmp ne i32 %bf.cast859, 0, !dbg !1854
  br i1 %tobool860, label %cond.true861, label %cond.false872, !dbg !1854

cond.true861:                                     ; preds = %sw.bb853
  %516 = load i8**, i8*** %regend, align 8, !dbg !1855
  %517 = load i8*, i8** %p, align 8, !dbg !1855
  %518 = load i8, i8* %517, align 1, !dbg !1855
  %idxprom862 = zext i8 %518 to i64, !dbg !1855
  %arrayidx863 = getelementptr inbounds i8*, i8** %516, i64 %idxprom862, !dbg !1855
  %519 = load i8*, i8** %arrayidx863, align 8, !dbg !1855
  %cmp864 = icmp eq i8* %519, @byte_reg_unset_dummy, !dbg !1855
  br i1 %cmp864, label %cond.true866, label %cond.false867, !dbg !1855

cond.true866:                                     ; preds = %cond.true861
  %520 = load i8*, i8** %d, align 8, !dbg !1856
  br label %cond.end870, !dbg !1855

cond.false867:                                    ; preds = %cond.true861
  %521 = load i8**, i8*** %regend, align 8, !dbg !1857
  %522 = load i8*, i8** %p, align 8, !dbg !1858
  %523 = load i8, i8* %522, align 1, !dbg !1859
  %idxprom868 = zext i8 %523 to i64, !dbg !1857
  %arrayidx869 = getelementptr inbounds i8*, i8** %521, i64 %idxprom868, !dbg !1857
  %524 = load i8*, i8** %arrayidx869, align 8, !dbg !1857
  br label %cond.end870, !dbg !1855

cond.end870:                                      ; preds = %cond.false867, %cond.true866
  %cond871 = phi i8* [ %520, %cond.true866 ], [ %524, %cond.false867 ], !dbg !1855
  br label %cond.end875, !dbg !1854

cond.false872:                                    ; preds = %sw.bb853
  %525 = load i8**, i8*** %regend, align 8, !dbg !1860
  %526 = load i8*, i8** %p, align 8, !dbg !1861
  %527 = load i8, i8* %526, align 1, !dbg !1862
  %idxprom873 = zext i8 %527 to i64, !dbg !1860
  %arrayidx874 = getelementptr inbounds i8*, i8** %525, i64 %idxprom873, !dbg !1860
  %528 = load i8*, i8** %arrayidx874, align 8, !dbg !1860
  br label %cond.end875, !dbg !1854

cond.end875:                                      ; preds = %cond.false872, %cond.end870
  %cond876 = phi i8* [ %cond871, %cond.end870 ], [ %528, %cond.false872 ], !dbg !1854
  %529 = load i8**, i8*** %old_regend, align 8, !dbg !1863
  %530 = load i8*, i8** %p, align 8, !dbg !1864
  %531 = load i8, i8* %530, align 1, !dbg !1865
  %idxprom877 = zext i8 %531 to i64, !dbg !1863
  %arrayidx878 = getelementptr inbounds i8*, i8** %529, i64 %idxprom877, !dbg !1863
  store i8* %cond876, i8** %arrayidx878, align 8, !dbg !1866
  %532 = load i8*, i8** %d, align 8, !dbg !1867
  %533 = load i8**, i8*** %regend, align 8, !dbg !1868
  %534 = load i8*, i8** %p, align 8, !dbg !1869
  %535 = load i8, i8* %534, align 1, !dbg !1870
  %idxprom879 = zext i8 %535 to i64, !dbg !1868
  %arrayidx880 = getelementptr inbounds i8*, i8** %533, i64 %idxprom879, !dbg !1868
  store i8* %532, i8** %arrayidx880, align 8, !dbg !1871
  %536 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1872
  %537 = load i8*, i8** %p, align 8, !dbg !1872
  %538 = load i8, i8* %537, align 1, !dbg !1872
  %idxprom881 = zext i8 %538 to i64, !dbg !1872
  %arrayidx882 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %536, i64 %idxprom881, !dbg !1872
  %bits883 = bitcast %union.byte_register_info_type* %arrayidx882 to %struct.anon*, !dbg !1872
  %539 = bitcast %struct.anon* %bits883 to i8*, !dbg !1872
  %bf.load884 = load i8, i8* %539, align 8, !dbg !1873
  %bf.clear885 = and i8 %bf.load884, -5, !dbg !1873
  store i8 %bf.clear885, i8* %539, align 8, !dbg !1873
  store i32 0, i32* %set_regs_matched_done, align 4, !dbg !1874
  %540 = load i64, i64* %lowest_active_reg, align 8, !dbg !1875
  %541 = load i64, i64* %highest_active_reg, align 8, !dbg !1877
  %cmp886 = icmp eq i64 %540, %541, !dbg !1878
  br i1 %cmp886, label %if.then888, label %if.else889, !dbg !1879

if.then888:                                       ; preds = %cond.end875
  store i64 257, i64* %lowest_active_reg, align 8, !dbg !1880
  store i64 256, i64* %highest_active_reg, align 8, !dbg !1882
  br label %if.end920, !dbg !1883

if.else889:                                       ; preds = %cond.end875
  call void @llvm.dbg.declare(metadata i8* %r890, metadata !1884, metadata !DIExpression()), !dbg !1886
  %542 = load i8*, i8** %p, align 8, !dbg !1887
  %543 = load i8, i8* %542, align 1, !dbg !1888
  %conv891 = zext i8 %543 to i32, !dbg !1888
  %sub = sub nsw i32 %conv891, 1, !dbg !1889
  %conv892 = trunc i32 %sub to i8, !dbg !1888
  store i8 %conv892, i8* %r890, align 1, !dbg !1886
  br label %while.cond893, !dbg !1890

while.cond893:                                    ; preds = %while.body910, %if.else889
  %544 = load i8, i8* %r890, align 1, !dbg !1891
  %conv894 = zext i8 %544 to i32, !dbg !1891
  %cmp895 = icmp sgt i32 %conv894, 0, !dbg !1892
  br i1 %cmp895, label %land.rhs897, label %land.end908, !dbg !1893

land.rhs897:                                      ; preds = %while.cond893
  %545 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1894
  %546 = load i8, i8* %r890, align 1, !dbg !1894
  %idxprom898 = zext i8 %546 to i64, !dbg !1894
  %arrayidx899 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %545, i64 %idxprom898, !dbg !1894
  %bits900 = bitcast %union.byte_register_info_type* %arrayidx899 to %struct.anon*, !dbg !1894
  %547 = bitcast %struct.anon* %bits900 to i8*, !dbg !1894
  %bf.load901 = load i8, i8* %547, align 8, !dbg !1894
  %bf.lshr902 = lshr i8 %bf.load901, 2, !dbg !1894
  %bf.clear903 = and i8 %bf.lshr902, 1, !dbg !1894
  %bf.cast904 = zext i8 %bf.clear903 to i32, !dbg !1894
  %tobool905 = icmp ne i32 %bf.cast904, 0, !dbg !1895
  %lnot906 = xor i1 %tobool905, true, !dbg !1895
  br label %land.end908

land.end908:                                      ; preds = %land.rhs897, %while.cond893
  %548 = phi i1 [ false, %while.cond893 ], [ %lnot906, %land.rhs897 ], !dbg !1896
  br i1 %548, label %while.body910, label %while.end912, !dbg !1890

while.body910:                                    ; preds = %land.end908
  %549 = load i8, i8* %r890, align 1, !dbg !1897
  %dec911 = add i8 %549, -1, !dbg !1897
  store i8 %dec911, i8* %r890, align 1, !dbg !1897
  br label %while.cond893, !dbg !1890, !llvm.loop !1898

while.end912:                                     ; preds = %land.end908
  %550 = load i8, i8* %r890, align 1, !dbg !1899
  %conv913 = zext i8 %550 to i32, !dbg !1899
  %cmp914 = icmp eq i32 %conv913, 0, !dbg !1901
  br i1 %cmp914, label %if.then916, label %if.else917, !dbg !1902

if.then916:                                       ; preds = %while.end912
  store i64 257, i64* %lowest_active_reg, align 8, !dbg !1903
  store i64 256, i64* %highest_active_reg, align 8, !dbg !1905
  br label %if.end919, !dbg !1906

if.else917:                                       ; preds = %while.end912
  %551 = load i8, i8* %r890, align 1, !dbg !1907
  %conv918 = zext i8 %551 to i64, !dbg !1907
  store i64 %conv918, i64* %highest_active_reg, align 8, !dbg !1908
  br label %if.end919

if.end919:                                        ; preds = %if.else917, %if.then916
  br label %if.end920

if.end920:                                        ; preds = %if.end919, %if.then888
  %552 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1909
  %553 = load i8*, i8** %p, align 8, !dbg !1909
  %554 = load i8, i8* %553, align 1, !dbg !1909
  %idxprom921 = zext i8 %554 to i64, !dbg !1909
  %arrayidx922 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %552, i64 %idxprom921, !dbg !1909
  %bits923 = bitcast %union.byte_register_info_type* %arrayidx922 to %struct.anon*, !dbg !1909
  %555 = bitcast %struct.anon* %bits923 to i8*, !dbg !1909
  %bf.load924 = load i8, i8* %555, align 8, !dbg !1909
  %bf.lshr925 = lshr i8 %bf.load924, 3, !dbg !1909
  %bf.clear926 = and i8 %bf.lshr925, 1, !dbg !1909
  %bf.cast927 = zext i8 %bf.clear926 to i32, !dbg !1909
  %tobool928 = icmp ne i32 %bf.cast927, 0, !dbg !1909
  br i1 %tobool928, label %lor.lhs.false929, label %land.lhs.true933, !dbg !1911

lor.lhs.false929:                                 ; preds = %if.end920
  %556 = load i8*, i8** %just_past_start_mem, align 8, !dbg !1912
  %557 = load i8*, i8** %p, align 8, !dbg !1913
  %add.ptr930 = getelementptr inbounds i8, i8* %557, i64 -1, !dbg !1914
  %cmp931 = icmp eq i8* %556, %add.ptr930, !dbg !1915
  br i1 %cmp931, label %land.lhs.true933, label %if.end1135, !dbg !1916

land.lhs.true933:                                 ; preds = %lor.lhs.false929, %if.end920
  %558 = load i8*, i8** %p, align 8, !dbg !1917
  %add.ptr934 = getelementptr inbounds i8, i8* %558, i64 2, !dbg !1918
  %559 = load i8*, i8** %pend, align 8, !dbg !1919
  %cmp935 = icmp ult i8* %add.ptr934, %559, !dbg !1920
  br i1 %cmp935, label %if.then937, label %if.end1135, !dbg !1921

if.then937:                                       ; preds = %land.lhs.true933
  call void @llvm.dbg.declare(metadata i8* %is_a_jump_n, metadata !1922, metadata !DIExpression()), !dbg !1924
  store i8 0, i8* %is_a_jump_n, align 1, !dbg !1924
  %560 = load i8*, i8** %p, align 8, !dbg !1925
  %add.ptr938 = getelementptr inbounds i8, i8* %560, i64 2, !dbg !1926
  store i8* %add.ptr938, i8** %p1, align 8, !dbg !1927
  store i32 0, i32* %mcnt, align 4, !dbg !1928
  %561 = load i8*, i8** %p1, align 8, !dbg !1929
  %incdec.ptr939 = getelementptr inbounds i8, i8* %561, i32 1, !dbg !1929
  store i8* %incdec.ptr939, i8** %p1, align 8, !dbg !1929
  %562 = load i8, i8* %561, align 1, !dbg !1930
  %conv940 = zext i8 %562 to i32, !dbg !1931
  switch i32 %conv940, label %sw.default [
    i32 22, label %sw.bb941
    i32 17, label %sw.bb942
    i32 18, label %sw.bb942
    i32 13, label %sw.bb942
    i32 19, label %sw.bb942
  ], !dbg !1932

sw.bb941:                                         ; preds = %if.then937
  store i8 1, i8* %is_a_jump_n, align 1, !dbg !1933
  br label %sw.bb942, !dbg !1935

sw.bb942:                                         ; preds = %if.then937, %if.then937, %if.then937, %if.then937, %sw.bb941
  br label %do.body943, !dbg !1936

do.body943:                                       ; preds = %sw.bb942
  br label %do.body944, !dbg !1937

do.body944:                                       ; preds = %do.body943
  %563 = load i8*, i8** %p1, align 8, !dbg !1939
  %564 = load i8, i8* %563, align 1, !dbg !1939
  %conv945 = zext i8 %564 to i32, !dbg !1939
  %and946 = and i32 %conv945, 255, !dbg !1939
  store i32 %and946, i32* %mcnt, align 4, !dbg !1939
  %565 = load i8*, i8** %p1, align 8, !dbg !1939
  %add.ptr947 = getelementptr inbounds i8, i8* %565, i64 1, !dbg !1939
  %566 = load i8, i8* %add.ptr947, align 1, !dbg !1939
  %conv948 = sext i8 %566 to i32, !dbg !1939
  %shl949 = shl i32 %conv948, 8, !dbg !1939
  %567 = load i32, i32* %mcnt, align 4, !dbg !1939
  %add950 = add nsw i32 %567, %shl949, !dbg !1939
  store i32 %add950, i32* %mcnt, align 4, !dbg !1939
  br label %do.end952, !dbg !1939

do.end952:                                        ; preds = %do.body944
  %568 = load i8*, i8** %p1, align 8, !dbg !1937
  %add.ptr953 = getelementptr inbounds i8, i8* %568, i64 2, !dbg !1937
  store i8* %add.ptr953, i8** %p1, align 8, !dbg !1937
  br label %do.end955, !dbg !1937

do.end955:                                        ; preds = %do.end952
  %569 = load i8, i8* %is_a_jump_n, align 1, !dbg !1941
  %tobool956 = icmp ne i8 %569, 0, !dbg !1941
  br i1 %tobool956, label %if.then957, label %if.end959, !dbg !1943

if.then957:                                       ; preds = %do.end955
  %570 = load i8*, i8** %p1, align 8, !dbg !1944
  %add.ptr958 = getelementptr inbounds i8, i8* %570, i64 2, !dbg !1944
  store i8* %add.ptr958, i8** %p1, align 8, !dbg !1944
  br label %if.end959, !dbg !1945

if.end959:                                        ; preds = %if.then957, %do.end955
  br label %sw.epilog, !dbg !1946

sw.default:                                       ; preds = %if.then937
  br label %sw.epilog, !dbg !1947

sw.epilog:                                        ; preds = %sw.default, %if.end959
  %571 = load i32, i32* %mcnt, align 4, !dbg !1948
  %572 = load i8*, i8** %p1, align 8, !dbg !1949
  %idx.ext960 = sext i32 %571 to i64, !dbg !1949
  %add.ptr961 = getelementptr inbounds i8, i8* %572, i64 %idx.ext960, !dbg !1949
  store i8* %add.ptr961, i8** %p1, align 8, !dbg !1949
  %573 = load i32, i32* %mcnt, align 4, !dbg !1950
  %cmp962 = icmp slt i32 %573, 0, !dbg !1952
  br i1 %cmp962, label %land.lhs.true964, label %if.end1134, !dbg !1953

land.lhs.true964:                                 ; preds = %sw.epilog
  %574 = load i8*, i8** %p1, align 8, !dbg !1954
  %575 = load i8, i8* %574, align 1, !dbg !1955
  %conv965 = zext i8 %575 to i32, !dbg !1956
  %cmp966 = icmp eq i32 %conv965, 15, !dbg !1957
  br i1 %cmp966, label %land.lhs.true968, label %if.end1134, !dbg !1958

land.lhs.true968:                                 ; preds = %land.lhs.true964
  %576 = load i8*, i8** %p1, align 8, !dbg !1959
  %arrayidx969 = getelementptr inbounds i8, i8* %576, i64 3, !dbg !1959
  %577 = load i8, i8* %arrayidx969, align 1, !dbg !1959
  %conv970 = zext i8 %577 to i32, !dbg !1960
  %cmp971 = icmp eq i32 %conv970, 6, !dbg !1961
  br i1 %cmp971, label %land.lhs.true973, label %if.end1134, !dbg !1962

land.lhs.true973:                                 ; preds = %land.lhs.true968
  %578 = load i8*, i8** %p1, align 8, !dbg !1963
  %arrayidx974 = getelementptr inbounds i8, i8* %578, i64 4, !dbg !1963
  %579 = load i8, i8* %arrayidx974, align 1, !dbg !1963
  %conv975 = zext i8 %579 to i32, !dbg !1963
  %580 = load i8*, i8** %p, align 8, !dbg !1964
  %581 = load i8, i8* %580, align 1, !dbg !1965
  %conv976 = zext i8 %581 to i32, !dbg !1965
  %cmp977 = icmp eq i32 %conv975, %conv976, !dbg !1966
  br i1 %cmp977, label %if.then979, label %if.end1134, !dbg !1967

if.then979:                                       ; preds = %land.lhs.true973
  %582 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1968
  %583 = load i8*, i8** %p, align 8, !dbg !1968
  %584 = load i8, i8* %583, align 1, !dbg !1968
  %idxprom980 = zext i8 %584 to i64, !dbg !1968
  %arrayidx981 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %582, i64 %idxprom980, !dbg !1968
  %bits982 = bitcast %union.byte_register_info_type* %arrayidx981 to %struct.anon*, !dbg !1968
  %585 = bitcast %struct.anon* %bits982 to i8*, !dbg !1968
  %bf.load983 = load i8, i8* %585, align 8, !dbg !1968
  %bf.lshr984 = lshr i8 %bf.load983, 4, !dbg !1968
  %bf.clear985 = and i8 %bf.lshr984, 1, !dbg !1968
  %bf.cast986 = zext i8 %bf.clear985 to i32, !dbg !1968
  %tobool987 = icmp ne i32 %bf.cast986, 0, !dbg !1968
  br i1 %tobool987, label %if.then988, label %if.end1023, !dbg !1971

if.then988:                                       ; preds = %if.then979
  call void @llvm.dbg.declare(metadata i32* %r989, metadata !1972, metadata !DIExpression()), !dbg !1974
  %586 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !1975
  %587 = load i8*, i8** %p, align 8, !dbg !1975
  %588 = load i8, i8* %587, align 1, !dbg !1975
  %idxprom990 = zext i8 %588 to i64, !dbg !1975
  %arrayidx991 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %586, i64 %idxprom990, !dbg !1975
  %bits992 = bitcast %union.byte_register_info_type* %arrayidx991 to %struct.anon*, !dbg !1975
  %589 = bitcast %struct.anon* %bits992 to i8*, !dbg !1975
  %bf.load993 = load i8, i8* %589, align 8, !dbg !1976
  %bf.clear994 = and i8 %bf.load993, -17, !dbg !1976
  store i8 %bf.clear994, i8* %589, align 8, !dbg !1976
  %590 = load i8*, i8** %p, align 8, !dbg !1977
  %591 = load i8, i8* %590, align 1, !dbg !1979
  %conv995 = zext i8 %591 to i32, !dbg !1979
  store i32 %conv995, i32* %r989, align 4, !dbg !1980
  br label %for.cond996, !dbg !1981

for.cond996:                                      ; preds = %for.inc1020, %if.then988
  %592 = load i32, i32* %r989, align 4, !dbg !1982
  %593 = load i8*, i8** %p, align 8, !dbg !1984
  %594 = load i8, i8* %593, align 1, !dbg !1985
  %conv997 = zext i8 %594 to i32, !dbg !1986
  %595 = load i8*, i8** %p, align 8, !dbg !1987
  %add.ptr998 = getelementptr inbounds i8, i8* %595, i64 1, !dbg !1988
  %596 = load i8, i8* %add.ptr998, align 1, !dbg !1989
  %conv999 = zext i8 %596 to i32, !dbg !1990
  %add1000 = add i32 %conv997, %conv999, !dbg !1991
  %cmp1001 = icmp ult i32 %592, %add1000, !dbg !1992
  br i1 %cmp1001, label %for.body1003, label %for.end1022, !dbg !1993

for.body1003:                                     ; preds = %for.cond996
  %597 = load i8**, i8*** %old_regstart, align 8, !dbg !1994
  %598 = load i32, i32* %r989, align 4, !dbg !1996
  %idxprom1004 = zext i32 %598 to i64, !dbg !1994
  %arrayidx1005 = getelementptr inbounds i8*, i8** %597, i64 %idxprom1004, !dbg !1994
  %599 = load i8*, i8** %arrayidx1005, align 8, !dbg !1994
  %600 = load i8**, i8*** %regstart, align 8, !dbg !1997
  %601 = load i32, i32* %r989, align 4, !dbg !1998
  %idxprom1006 = zext i32 %601 to i64, !dbg !1997
  %arrayidx1007 = getelementptr inbounds i8*, i8** %600, i64 %idxprom1006, !dbg !1997
  store i8* %599, i8** %arrayidx1007, align 8, !dbg !1999
  %602 = load i8**, i8*** %old_regend, align 8, !dbg !2000
  %603 = load i32, i32* %r989, align 4, !dbg !2002
  %idxprom1008 = zext i32 %603 to i64, !dbg !2000
  %arrayidx1009 = getelementptr inbounds i8*, i8** %602, i64 %idxprom1008, !dbg !2000
  %604 = load i8*, i8** %arrayidx1009, align 8, !dbg !2000
  %605 = load i8**, i8*** %regstart, align 8, !dbg !2003
  %606 = load i32, i32* %r989, align 4, !dbg !2004
  %idxprom1010 = zext i32 %606 to i64, !dbg !2003
  %arrayidx1011 = getelementptr inbounds i8*, i8** %605, i64 %idxprom1010, !dbg !2003
  %607 = load i8*, i8** %arrayidx1011, align 8, !dbg !2003
  %cmp1012 = icmp uge i8* %604, %607, !dbg !2005
  br i1 %cmp1012, label %if.then1014, label %if.end1019, !dbg !2006

if.then1014:                                      ; preds = %for.body1003
  %608 = load i8**, i8*** %old_regend, align 8, !dbg !2007
  %609 = load i32, i32* %r989, align 4, !dbg !2008
  %idxprom1015 = zext i32 %609 to i64, !dbg !2007
  %arrayidx1016 = getelementptr inbounds i8*, i8** %608, i64 %idxprom1015, !dbg !2007
  %610 = load i8*, i8** %arrayidx1016, align 8, !dbg !2007
  %611 = load i8**, i8*** %regend, align 8, !dbg !2009
  %612 = load i32, i32* %r989, align 4, !dbg !2010
  %idxprom1017 = zext i32 %612 to i64, !dbg !2009
  %arrayidx1018 = getelementptr inbounds i8*, i8** %611, i64 %idxprom1017, !dbg !2009
  store i8* %610, i8** %arrayidx1018, align 8, !dbg !2011
  br label %if.end1019, !dbg !2009

if.end1019:                                       ; preds = %if.then1014, %for.body1003
  br label %for.inc1020, !dbg !2012

for.inc1020:                                      ; preds = %if.end1019
  %613 = load i32, i32* %r989, align 4, !dbg !2013
  %inc1021 = add i32 %613, 1, !dbg !2013
  store i32 %inc1021, i32* %r989, align 4, !dbg !2013
  br label %for.cond996, !dbg !2014, !llvm.loop !2015

for.end1022:                                      ; preds = %for.cond996
  br label %if.end1023, !dbg !2017

if.end1023:                                       ; preds = %for.end1022, %if.then979
  %614 = load i8*, i8** %p1, align 8, !dbg !2018
  %incdec.ptr1024 = getelementptr inbounds i8, i8* %614, i32 1, !dbg !2018
  store i8* %incdec.ptr1024, i8** %p1, align 8, !dbg !2018
  br label %do.body1025, !dbg !2019

do.body1025:                                      ; preds = %if.end1023
  br label %do.body1026, !dbg !2020

do.body1026:                                      ; preds = %do.body1025
  %615 = load i8*, i8** %p1, align 8, !dbg !2022
  %616 = load i8, i8* %615, align 1, !dbg !2022
  %conv1027 = zext i8 %616 to i32, !dbg !2022
  %and1028 = and i32 %conv1027, 255, !dbg !2022
  store i32 %and1028, i32* %mcnt, align 4, !dbg !2022
  %617 = load i8*, i8** %p1, align 8, !dbg !2022
  %add.ptr1029 = getelementptr inbounds i8, i8* %617, i64 1, !dbg !2022
  %618 = load i8, i8* %add.ptr1029, align 1, !dbg !2022
  %conv1030 = sext i8 %618 to i32, !dbg !2022
  %shl1031 = shl i32 %conv1030, 8, !dbg !2022
  %619 = load i32, i32* %mcnt, align 4, !dbg !2022
  %add1032 = add nsw i32 %619, %shl1031, !dbg !2022
  store i32 %add1032, i32* %mcnt, align 4, !dbg !2022
  br label %do.end1034, !dbg !2022

do.end1034:                                       ; preds = %do.body1026
  %620 = load i8*, i8** %p1, align 8, !dbg !2020
  %add.ptr1035 = getelementptr inbounds i8, i8* %620, i64 2, !dbg !2020
  store i8* %add.ptr1035, i8** %p1, align 8, !dbg !2020
  br label %do.end1037, !dbg !2020

do.end1037:                                       ; preds = %do.end1034
  br label %do.body1038, !dbg !2024

do.body1038:                                      ; preds = %do.end1037
  call void @llvm.dbg.declare(metadata i8** %destination, metadata !2025, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.declare(metadata i64* %this_reg, metadata !2028, metadata !DIExpression()), !dbg !2027
  br label %while.cond1039, !dbg !2027

while.cond1039:                                   ; preds = %if.end1077, %do.body1038
  %size1040 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2027
  %621 = load i32, i32* %size1040, align 8, !dbg !2027
  %avail1041 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2027
  %622 = load i32, i32* %avail1041, align 4, !dbg !2027
  %sub1042 = sub i32 %621, %622, !dbg !2027
  %conv1043 = zext i32 %sub1042 to i64, !dbg !2027
  %623 = load i64, i64* %highest_active_reg, align 8, !dbg !2027
  %624 = load i64, i64* %lowest_active_reg, align 8, !dbg !2027
  %sub1044 = sub i64 %623, %624, !dbg !2027
  %add1045 = add i64 %sub1044, 1, !dbg !2027
  %mul1046 = mul i64 %add1045, 3, !dbg !2027
  %add1047 = add i64 %mul1046, 4, !dbg !2027
  %cmp1048 = icmp ult i64 %conv1043, %add1047, !dbg !2027
  br i1 %cmp1048, label %while.body1050, label %while.end1078, !dbg !2027

while.body1050:                                   ; preds = %while.cond1039
  %size1051 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2029
  %625 = load i32, i32* %size1051, align 8, !dbg !2029
  %626 = load i32, i32* @xre_max_failures, align 4, !dbg !2029
  %mul1052 = mul nsw i32 %626, 19, !dbg !2029
  %cmp1053 = icmp ugt i32 %625, %mul1052, !dbg !2029
  br i1 %cmp1053, label %cond.true1055, label %cond.false1056, !dbg !2032

cond.true1055:                                    ; preds = %while.body1050
  br i1 false, label %if.end1077, label %if.then1076, !dbg !2029

cond.false1056:                                   ; preds = %while.body1050
  %size1057 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2029
  %627 = load i32, i32* %size1057, align 8, !dbg !2029
  %shl1058 = shl i32 %627, 1, !dbg !2029
  %conv1059 = zext i32 %shl1058 to i64, !dbg !2029
  %mul1060 = mul i64 %conv1059, 8, !dbg !2029
  %628 = alloca i8, i64 %mul1060, align 16, !dbg !2029
  store i8* %628, i8** %destination, align 8, !dbg !2029
  %629 = load i8*, i8** %destination, align 8, !dbg !2029
  %stack1061 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2029
  %630 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1061, align 8, !dbg !2029
  %631 = bitcast %union.byte_fail_stack_elt* %630 to i8*, !dbg !2029
  %size1062 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2029
  %632 = load i32, i32* %size1062, align 8, !dbg !2029
  %conv1063 = zext i32 %632 to i64, !dbg !2029
  %mul1064 = mul i64 %conv1063, 8, !dbg !2029
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %629, i8* align 8 %631, i64 %mul1064, i1 false), !dbg !2029
  %633 = bitcast i8* %629 to %union.byte_fail_stack_elt*, !dbg !2029
  %stack1065 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2029
  store %union.byte_fail_stack_elt* %633, %union.byte_fail_stack_elt** %stack1065, align 8, !dbg !2029
  %stack1066 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2029
  %634 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1066, align 8, !dbg !2029
  %cmp1067 = icmp eq %union.byte_fail_stack_elt* %634, null, !dbg !2029
  br i1 %cmp1067, label %cond.true1069, label %cond.false1070, !dbg !2029

cond.true1069:                                    ; preds = %cond.false1056
  br label %cond.end1073, !dbg !2029

cond.false1070:                                   ; preds = %cond.false1056
  %size1071 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2029
  %635 = load i32, i32* %size1071, align 8, !dbg !2029
  %shl1072 = shl i32 %635, 1, !dbg !2029
  store i32 %shl1072, i32* %size1071, align 8, !dbg !2029
  br label %cond.end1073, !dbg !2029

cond.end1073:                                     ; preds = %cond.false1070, %cond.true1069
  %cond1074 = phi i32 [ 0, %cond.true1069 ], [ 1, %cond.false1070 ], !dbg !2029
  %tobool1075 = icmp ne i32 %cond1074, 0, !dbg !2029
  br i1 %tobool1075, label %if.end1077, label %if.then1076, !dbg !2032

if.then1076:                                      ; preds = %cond.end1073, %cond.true1055
  store i32 -2, i32* %retval, align 4, !dbg !2029
  br label %return, !dbg !2029

if.end1077:                                       ; preds = %cond.end1073, %cond.true1055
  br label %while.cond1039, !dbg !2027, !llvm.loop !2033

while.end1078:                                    ; preds = %while.cond1039
  %636 = load i64, i64* %lowest_active_reg, align 8, !dbg !2034
  store i64 %636, i64* %this_reg, align 8, !dbg !2034
  br label %for.cond1079, !dbg !2034

for.cond1079:                                     ; preds = %for.inc1102, %while.end1078
  %637 = load i64, i64* %this_reg, align 8, !dbg !2037
  %638 = load i64, i64* %highest_active_reg, align 8, !dbg !2037
  %cmp1080 = icmp ule i64 %637, %638, !dbg !2037
  br i1 %cmp1080, label %for.body1082, label %for.end1104, !dbg !2034

for.body1082:                                     ; preds = %for.cond1079
  %639 = load i8**, i8*** %regstart, align 8, !dbg !2039
  %640 = load i64, i64* %this_reg, align 8, !dbg !2039
  %arrayidx1083 = getelementptr inbounds i8*, i8** %639, i64 %640, !dbg !2039
  %641 = load i8*, i8** %arrayidx1083, align 8, !dbg !2039
  %stack1084 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2039
  %642 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1084, align 8, !dbg !2039
  %avail1085 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2039
  %643 = load i32, i32* %avail1085, align 4, !dbg !2039
  %inc1086 = add i32 %643, 1, !dbg !2039
  store i32 %inc1086, i32* %avail1085, align 4, !dbg !2039
  %idxprom1087 = zext i32 %643 to i64, !dbg !2039
  %arrayidx1088 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %642, i64 %idxprom1087, !dbg !2039
  %pointer = bitcast %union.byte_fail_stack_elt* %arrayidx1088 to i8**, !dbg !2039
  store i8* %641, i8** %pointer, align 8, !dbg !2039
  %644 = load i8**, i8*** %regend, align 8, !dbg !2039
  %645 = load i64, i64* %this_reg, align 8, !dbg !2039
  %arrayidx1089 = getelementptr inbounds i8*, i8** %644, i64 %645, !dbg !2039
  %646 = load i8*, i8** %arrayidx1089, align 8, !dbg !2039
  %stack1090 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2039
  %647 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1090, align 8, !dbg !2039
  %avail1091 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2039
  %648 = load i32, i32* %avail1091, align 4, !dbg !2039
  %inc1092 = add i32 %648, 1, !dbg !2039
  store i32 %inc1092, i32* %avail1091, align 4, !dbg !2039
  %idxprom1093 = zext i32 %648 to i64, !dbg !2039
  %arrayidx1094 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %647, i64 %idxprom1093, !dbg !2039
  %pointer1095 = bitcast %union.byte_fail_stack_elt* %arrayidx1094 to i8**, !dbg !2039
  store i8* %646, i8** %pointer1095, align 8, !dbg !2039
  %stack1096 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2039
  %649 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1096, align 8, !dbg !2039
  %avail1097 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2039
  %650 = load i32, i32* %avail1097, align 4, !dbg !2039
  %inc1098 = add i32 %650, 1, !dbg !2039
  store i32 %inc1098, i32* %avail1097, align 4, !dbg !2039
  %idxprom1099 = zext i32 %650 to i64, !dbg !2039
  %arrayidx1100 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %649, i64 %idxprom1099, !dbg !2039
  %651 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2039
  %652 = load i64, i64* %this_reg, align 8, !dbg !2039
  %arrayidx1101 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %651, i64 %652, !dbg !2039
  %word = bitcast %union.byte_register_info_type* %arrayidx1101 to %union.byte_fail_stack_elt*, !dbg !2039
  %653 = bitcast %union.byte_fail_stack_elt* %arrayidx1100 to i8*, !dbg !2039
  %654 = bitcast %union.byte_fail_stack_elt* %word to i8*, !dbg !2039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %653, i8* align 8 %654, i64 8, i1 false), !dbg !2039
  br label %for.inc1102, !dbg !2039

for.inc1102:                                      ; preds = %for.body1082
  %655 = load i64, i64* %this_reg, align 8, !dbg !2037
  %inc1103 = add i64 %655, 1, !dbg !2037
  store i64 %inc1103, i64* %this_reg, align 8, !dbg !2037
  br label %for.cond1079, !dbg !2037, !llvm.loop !2041

for.end1104:                                      ; preds = %for.cond1079
  %656 = load i64, i64* %lowest_active_reg, align 8, !dbg !2027
  %conv1105 = trunc i64 %656 to i32, !dbg !2027
  %stack1106 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2027
  %657 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1106, align 8, !dbg !2027
  %avail1107 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2027
  %658 = load i32, i32* %avail1107, align 4, !dbg !2027
  %inc1108 = add i32 %658, 1, !dbg !2027
  store i32 %inc1108, i32* %avail1107, align 4, !dbg !2027
  %idxprom1109 = zext i32 %658 to i64, !dbg !2027
  %arrayidx1110 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %657, i64 %idxprom1109, !dbg !2027
  %integer = bitcast %union.byte_fail_stack_elt* %arrayidx1110 to i32*, !dbg !2027
  store i32 %conv1105, i32* %integer, align 8, !dbg !2027
  %659 = load i64, i64* %highest_active_reg, align 8, !dbg !2027
  %conv1111 = trunc i64 %659 to i32, !dbg !2027
  %stack1112 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2027
  %660 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1112, align 8, !dbg !2027
  %avail1113 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2027
  %661 = load i32, i32* %avail1113, align 4, !dbg !2027
  %inc1114 = add i32 %661, 1, !dbg !2027
  store i32 %inc1114, i32* %avail1113, align 4, !dbg !2027
  %idxprom1115 = zext i32 %661 to i64, !dbg !2027
  %arrayidx1116 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %660, i64 %idxprom1115, !dbg !2027
  %integer1117 = bitcast %union.byte_fail_stack_elt* %arrayidx1116 to i32*, !dbg !2027
  store i32 %conv1111, i32* %integer1117, align 8, !dbg !2027
  %662 = load i8*, i8** %p1, align 8, !dbg !2027
  %663 = load i32, i32* %mcnt, align 4, !dbg !2027
  %idx.ext1118 = sext i32 %663 to i64, !dbg !2027
  %add.ptr1119 = getelementptr inbounds i8, i8* %662, i64 %idx.ext1118, !dbg !2027
  %stack1120 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2027
  %664 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1120, align 8, !dbg !2027
  %avail1121 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2027
  %665 = load i32, i32* %avail1121, align 4, !dbg !2027
  %inc1122 = add i32 %665, 1, !dbg !2027
  store i32 %inc1122, i32* %avail1121, align 4, !dbg !2027
  %idxprom1123 = zext i32 %665 to i64, !dbg !2027
  %arrayidx1124 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %664, i64 %idxprom1123, !dbg !2027
  %pointer1125 = bitcast %union.byte_fail_stack_elt* %arrayidx1124 to i8**, !dbg !2027
  store i8* %add.ptr1119, i8** %pointer1125, align 8, !dbg !2027
  %666 = load i8*, i8** %d, align 8, !dbg !2027
  %stack1126 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2027
  %667 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1126, align 8, !dbg !2027
  %avail1127 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2027
  %668 = load i32, i32* %avail1127, align 4, !dbg !2027
  %inc1128 = add i32 %668, 1, !dbg !2027
  store i32 %inc1128, i32* %avail1127, align 4, !dbg !2027
  %idxprom1129 = zext i32 %668 to i64, !dbg !2027
  %arrayidx1130 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %667, i64 %idxprom1129, !dbg !2027
  %pointer1131 = bitcast %union.byte_fail_stack_elt* %arrayidx1130 to i8**, !dbg !2027
  store i8* %666, i8** %pointer1131, align 8, !dbg !2027
  br label %do.end1133, !dbg !2027

do.end1133:                                       ; preds = %for.end1104
  br label %fail, !dbg !2042

if.end1134:                                       ; preds = %land.lhs.true973, %land.lhs.true968, %land.lhs.true964, %sw.epilog
  br label %if.end1135, !dbg !2043

if.end1135:                                       ; preds = %if.end1134, %land.lhs.true933, %lor.lhs.false929
  %669 = load i8*, i8** %p, align 8, !dbg !2044
  %add.ptr1136 = getelementptr inbounds i8, i8* %669, i64 2, !dbg !2044
  store i8* %add.ptr1136, i8** %p, align 8, !dbg !2044
  br label %sw.epilog2674, !dbg !2045

sw.bb1137:                                        ; preds = %if.end572
  call void @llvm.dbg.declare(metadata i8** %d2, metadata !2046, metadata !DIExpression()), !dbg !2048
  call void @llvm.dbg.declare(metadata i8** %dend2, metadata !2049, metadata !DIExpression()), !dbg !2050
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !2051, metadata !DIExpression()), !dbg !2052
  %670 = load i8*, i8** %p, align 8, !dbg !2053
  %incdec.ptr1138 = getelementptr inbounds i8, i8* %670, i32 1, !dbg !2053
  store i8* %incdec.ptr1138, i8** %p, align 8, !dbg !2053
  %671 = load i8, i8* %670, align 1, !dbg !2054
  %conv1139 = zext i8 %671 to i32, !dbg !2054
  store i32 %conv1139, i32* %regno, align 4, !dbg !2052
  %672 = load i8**, i8*** %regstart, align 8, !dbg !2055
  %673 = load i32, i32* %regno, align 4, !dbg !2055
  %idxprom1140 = sext i32 %673 to i64, !dbg !2055
  %arrayidx1141 = getelementptr inbounds i8*, i8** %672, i64 %idxprom1140, !dbg !2055
  %674 = load i8*, i8** %arrayidx1141, align 8, !dbg !2055
  %cmp1142 = icmp eq i8* %674, @byte_reg_unset_dummy, !dbg !2055
  br i1 %cmp1142, label %if.then1149, label %lor.lhs.false1144, !dbg !2057

lor.lhs.false1144:                                ; preds = %sw.bb1137
  %675 = load i8**, i8*** %regend, align 8, !dbg !2058
  %676 = load i32, i32* %regno, align 4, !dbg !2058
  %idxprom1145 = sext i32 %676 to i64, !dbg !2058
  %arrayidx1146 = getelementptr inbounds i8*, i8** %675, i64 %idxprom1145, !dbg !2058
  %677 = load i8*, i8** %arrayidx1146, align 8, !dbg !2058
  %cmp1147 = icmp eq i8* %677, @byte_reg_unset_dummy, !dbg !2058
  br i1 %cmp1147, label %if.then1149, label %if.end1150, !dbg !2059

if.then1149:                                      ; preds = %lor.lhs.false1144, %sw.bb1137
  br label %fail, !dbg !2060

if.end1150:                                       ; preds = %lor.lhs.false1144
  %678 = load i8**, i8*** %regstart, align 8, !dbg !2061
  %679 = load i32, i32* %regno, align 4, !dbg !2062
  %idxprom1151 = sext i32 %679 to i64, !dbg !2061
  %arrayidx1152 = getelementptr inbounds i8*, i8** %678, i64 %idxprom1151, !dbg !2061
  %680 = load i8*, i8** %arrayidx1152, align 8, !dbg !2061
  store i8* %680, i8** %d2, align 8, !dbg !2063
  %681 = load i32, i32* %size1.addr, align 4, !dbg !2064
  %tobool1153 = icmp ne i32 %681, 0, !dbg !2064
  br i1 %tobool1153, label %land.lhs.true1154, label %land.end1166, !dbg !2064

land.lhs.true1154:                                ; preds = %if.end1150
  %682 = load i8*, i8** %string1.addr, align 8, !dbg !2064
  %683 = load i8**, i8*** %regstart, align 8, !dbg !2064
  %684 = load i32, i32* %regno, align 4, !dbg !2064
  %idxprom1155 = sext i32 %684 to i64, !dbg !2064
  %arrayidx1156 = getelementptr inbounds i8*, i8** %683, i64 %idxprom1155, !dbg !2064
  %685 = load i8*, i8** %arrayidx1156, align 8, !dbg !2064
  %cmp1157 = icmp ule i8* %682, %685, !dbg !2064
  br i1 %cmp1157, label %land.rhs1159, label %land.end1166, !dbg !2064

land.rhs1159:                                     ; preds = %land.lhs.true1154
  %686 = load i8**, i8*** %regstart, align 8, !dbg !2064
  %687 = load i32, i32* %regno, align 4, !dbg !2064
  %idxprom1160 = sext i32 %687 to i64, !dbg !2064
  %arrayidx1161 = getelementptr inbounds i8*, i8** %686, i64 %idxprom1160, !dbg !2064
  %688 = load i8*, i8** %arrayidx1161, align 8, !dbg !2064
  %689 = load i8*, i8** %string1.addr, align 8, !dbg !2064
  %690 = load i32, i32* %size1.addr, align 4, !dbg !2064
  %idx.ext1162 = sext i32 %690 to i64, !dbg !2064
  %add.ptr1163 = getelementptr inbounds i8, i8* %689, i64 %idx.ext1162, !dbg !2064
  %cmp1164 = icmp ule i8* %688, %add.ptr1163, !dbg !2064
  br label %land.end1166

land.end1166:                                     ; preds = %land.rhs1159, %land.lhs.true1154, %if.end1150
  %691 = phi i1 [ false, %land.lhs.true1154 ], [ false, %if.end1150 ], [ %cmp1164, %land.rhs1159 ], !dbg !2065
  %land.ext1167 = zext i1 %691 to i32, !dbg !2064
  %692 = load i32, i32* %size1.addr, align 4, !dbg !2066
  %tobool1168 = icmp ne i32 %692, 0, !dbg !2066
  br i1 %tobool1168, label %land.lhs.true1169, label %land.end1181, !dbg !2066

land.lhs.true1169:                                ; preds = %land.end1166
  %693 = load i8*, i8** %string1.addr, align 8, !dbg !2066
  %694 = load i8**, i8*** %regend, align 8, !dbg !2066
  %695 = load i32, i32* %regno, align 4, !dbg !2066
  %idxprom1170 = sext i32 %695 to i64, !dbg !2066
  %arrayidx1171 = getelementptr inbounds i8*, i8** %694, i64 %idxprom1170, !dbg !2066
  %696 = load i8*, i8** %arrayidx1171, align 8, !dbg !2066
  %cmp1172 = icmp ule i8* %693, %696, !dbg !2066
  br i1 %cmp1172, label %land.rhs1174, label %land.end1181, !dbg !2066

land.rhs1174:                                     ; preds = %land.lhs.true1169
  %697 = load i8**, i8*** %regend, align 8, !dbg !2066
  %698 = load i32, i32* %regno, align 4, !dbg !2066
  %idxprom1175 = sext i32 %698 to i64, !dbg !2066
  %arrayidx1176 = getelementptr inbounds i8*, i8** %697, i64 %idxprom1175, !dbg !2066
  %699 = load i8*, i8** %arrayidx1176, align 8, !dbg !2066
  %700 = load i8*, i8** %string1.addr, align 8, !dbg !2066
  %701 = load i32, i32* %size1.addr, align 4, !dbg !2066
  %idx.ext1177 = sext i32 %701 to i64, !dbg !2066
  %add.ptr1178 = getelementptr inbounds i8, i8* %700, i64 %idx.ext1177, !dbg !2066
  %cmp1179 = icmp ule i8* %699, %add.ptr1178, !dbg !2066
  br label %land.end1181

land.end1181:                                     ; preds = %land.rhs1174, %land.lhs.true1169, %land.end1166
  %702 = phi i1 [ false, %land.lhs.true1169 ], [ false, %land.end1166 ], [ %cmp1179, %land.rhs1174 ], !dbg !2065
  %land.ext1182 = zext i1 %702 to i32, !dbg !2066
  %cmp1183 = icmp eq i32 %land.ext1167, %land.ext1182, !dbg !2067
  br i1 %cmp1183, label %cond.true1185, label %cond.false1188, !dbg !2068

cond.true1185:                                    ; preds = %land.end1181
  %703 = load i8**, i8*** %regend, align 8, !dbg !2069
  %704 = load i32, i32* %regno, align 4, !dbg !2070
  %idxprom1186 = sext i32 %704 to i64, !dbg !2069
  %arrayidx1187 = getelementptr inbounds i8*, i8** %703, i64 %idxprom1186, !dbg !2069
  %705 = load i8*, i8** %arrayidx1187, align 8, !dbg !2069
  br label %cond.end1189, !dbg !2068

cond.false1188:                                   ; preds = %land.end1181
  %706 = load i8*, i8** %end_match_1, align 8, !dbg !2071
  br label %cond.end1189, !dbg !2068

cond.end1189:                                     ; preds = %cond.false1188, %cond.true1185
  %cond1190 = phi i8* [ %705, %cond.true1185 ], [ %706, %cond.false1188 ], !dbg !2068
  store i8* %cond1190, i8** %dend2, align 8, !dbg !2072
  br label %for.cond1191, !dbg !2073

for.cond1191:                                     ; preds = %do.end1276, %cond.end1189
  br label %while.cond1192, !dbg !2074

while.cond1192:                                   ; preds = %if.end1205, %for.cond1191
  %707 = load i8*, i8** %d2, align 8, !dbg !2078
  %708 = load i8*, i8** %dend2, align 8, !dbg !2079
  %cmp1193 = icmp eq i8* %707, %708, !dbg !2080
  br i1 %cmp1193, label %while.body1195, label %while.end1208, !dbg !2074

while.body1195:                                   ; preds = %while.cond1192
  %709 = load i8*, i8** %dend2, align 8, !dbg !2081
  %710 = load i8*, i8** %end_match_2, align 8, !dbg !2084
  %cmp1196 = icmp eq i8* %709, %710, !dbg !2085
  br i1 %cmp1196, label %if.then1198, label %if.end1199, !dbg !2086

if.then1198:                                      ; preds = %while.body1195
  br label %while.end1208, !dbg !2087

if.end1199:                                       ; preds = %while.body1195
  %711 = load i8*, i8** %dend2, align 8, !dbg !2088
  %712 = load i8**, i8*** %regend, align 8, !dbg !2090
  %713 = load i32, i32* %regno, align 4, !dbg !2091
  %idxprom1200 = sext i32 %713 to i64, !dbg !2090
  %arrayidx1201 = getelementptr inbounds i8*, i8** %712, i64 %idxprom1200, !dbg !2090
  %714 = load i8*, i8** %arrayidx1201, align 8, !dbg !2090
  %cmp1202 = icmp eq i8* %711, %714, !dbg !2092
  br i1 %cmp1202, label %if.then1204, label %if.end1205, !dbg !2093

if.then1204:                                      ; preds = %if.end1199
  br label %while.end1208, !dbg !2094

if.end1205:                                       ; preds = %if.end1199
  %715 = load i8*, i8** %string2.addr, align 8, !dbg !2095
  store i8* %715, i8** %d2, align 8, !dbg !2096
  %716 = load i8**, i8*** %regend, align 8, !dbg !2097
  %717 = load i32, i32* %regno, align 4, !dbg !2098
  %idxprom1206 = sext i32 %717 to i64, !dbg !2097
  %arrayidx1207 = getelementptr inbounds i8*, i8** %716, i64 %idxprom1206, !dbg !2097
  %718 = load i8*, i8** %arrayidx1207, align 8, !dbg !2097
  store i8* %718, i8** %dend2, align 8, !dbg !2099
  br label %while.cond1192, !dbg !2074, !llvm.loop !2100

while.end1208:                                    ; preds = %if.then1204, %if.then1198, %while.cond1192
  %719 = load i8*, i8** %d2, align 8, !dbg !2102
  %720 = load i8*, i8** %dend2, align 8, !dbg !2104
  %cmp1209 = icmp eq i8* %719, %720, !dbg !2105
  br i1 %cmp1209, label %if.then1211, label %if.end1212, !dbg !2106

if.then1211:                                      ; preds = %while.end1208
  br label %for.end1277, !dbg !2107

if.end1212:                                       ; preds = %while.end1208
  br label %while.cond1213, !dbg !2108

while.cond1213:                                   ; preds = %if.end1220, %if.end1212
  %721 = load i8*, i8** %d, align 8, !dbg !2108
  %722 = load i8*, i8** %dend, align 8, !dbg !2108
  %cmp1214 = icmp eq i8* %721, %722, !dbg !2108
  br i1 %cmp1214, label %while.body1216, label %while.end1221, !dbg !2108

while.body1216:                                   ; preds = %while.cond1213
  %723 = load i8*, i8** %dend, align 8, !dbg !2109
  %724 = load i8*, i8** %end_match_2, align 8, !dbg !2109
  %cmp1217 = icmp eq i8* %723, %724, !dbg !2109
  br i1 %cmp1217, label %if.then1219, label %if.end1220, !dbg !2112

if.then1219:                                      ; preds = %while.body1216
  br label %fail, !dbg !2109

if.end1220:                                       ; preds = %while.body1216
  %725 = load i8*, i8** %string2.addr, align 8, !dbg !2112
  store i8* %725, i8** %d, align 8, !dbg !2112
  %726 = load i8*, i8** %end_match_2, align 8, !dbg !2112
  store i8* %726, i8** %dend, align 8, !dbg !2112
  br label %while.cond1213, !dbg !2108, !llvm.loop !2113

while.end1221:                                    ; preds = %while.cond1213
  %727 = load i8*, i8** %dend, align 8, !dbg !2114
  %728 = load i8*, i8** %d, align 8, !dbg !2115
  %sub.ptr.lhs.cast1222 = ptrtoint i8* %727 to i64, !dbg !2116
  %sub.ptr.rhs.cast1223 = ptrtoint i8* %728 to i64, !dbg !2116
  %sub.ptr.sub1224 = sub i64 %sub.ptr.lhs.cast1222, %sub.ptr.rhs.cast1223, !dbg !2116
  %conv1225 = trunc i64 %sub.ptr.sub1224 to i32, !dbg !2114
  store i32 %conv1225, i32* %mcnt, align 4, !dbg !2117
  %729 = load i32, i32* %mcnt, align 4, !dbg !2118
  %conv1226 = sext i32 %729 to i64, !dbg !2118
  %730 = load i8*, i8** %dend2, align 8, !dbg !2120
  %731 = load i8*, i8** %d2, align 8, !dbg !2121
  %sub.ptr.lhs.cast1227 = ptrtoint i8* %730 to i64, !dbg !2122
  %sub.ptr.rhs.cast1228 = ptrtoint i8* %731 to i64, !dbg !2122
  %sub.ptr.sub1229 = sub i64 %sub.ptr.lhs.cast1227, %sub.ptr.rhs.cast1228, !dbg !2122
  %cmp1230 = icmp sgt i64 %conv1226, %sub.ptr.sub1229, !dbg !2123
  br i1 %cmp1230, label %if.then1232, label %if.end1237, !dbg !2124

if.then1232:                                      ; preds = %while.end1221
  %732 = load i8*, i8** %dend2, align 8, !dbg !2125
  %733 = load i8*, i8** %d2, align 8, !dbg !2126
  %sub.ptr.lhs.cast1233 = ptrtoint i8* %732 to i64, !dbg !2127
  %sub.ptr.rhs.cast1234 = ptrtoint i8* %733 to i64, !dbg !2127
  %sub.ptr.sub1235 = sub i64 %sub.ptr.lhs.cast1233, %sub.ptr.rhs.cast1234, !dbg !2127
  %conv1236 = trunc i64 %sub.ptr.sub1235 to i32, !dbg !2125
  store i32 %conv1236, i32* %mcnt, align 4, !dbg !2128
  br label %if.end1237, !dbg !2129

if.end1237:                                       ; preds = %if.then1232, %while.end1221
  %734 = load i8*, i8** %translate, align 8, !dbg !2130
  %tobool1238 = icmp ne i8* %734, null, !dbg !2130
  br i1 %tobool1238, label %cond.true1239, label %cond.false1242, !dbg !2132

cond.true1239:                                    ; preds = %if.end1237
  %735 = load i8*, i8** %d, align 8, !dbg !2133
  %736 = load i8*, i8** %d2, align 8, !dbg !2134
  %737 = load i32, i32* %mcnt, align 4, !dbg !2135
  %738 = load i8*, i8** %translate, align 8, !dbg !2136
  %call1240 = call i32 @byte_bcmp_translate(i8* %735, i8* %736, i32 %737, i8* %738), !dbg !2137
  %tobool1241 = icmp ne i32 %call1240, 0, !dbg !2137
  br i1 %tobool1241, label %if.then1247, label %if.end1248, !dbg !2130

cond.false1242:                                   ; preds = %if.end1237
  %739 = load i8*, i8** %d, align 8, !dbg !2138
  %740 = load i8*, i8** %d2, align 8, !dbg !2139
  %741 = load i32, i32* %mcnt, align 4, !dbg !2140
  %conv1243 = sext i32 %741 to i64, !dbg !2140
  %mul1244 = mul i64 %conv1243, 1, !dbg !2141
  %call1245 = call i32 @memcmp(i8* %739, i8* %740, i64 %mul1244), !dbg !2142
  %tobool1246 = icmp ne i32 %call1245, 0, !dbg !2142
  br i1 %tobool1246, label %if.then1247, label %if.end1248, !dbg !2132

if.then1247:                                      ; preds = %cond.false1242, %cond.true1239
  br label %fail, !dbg !2143

if.end1248:                                       ; preds = %cond.false1242, %cond.true1239
  %742 = load i32, i32* %mcnt, align 4, !dbg !2144
  %743 = load i8*, i8** %d, align 8, !dbg !2145
  %idx.ext1249 = sext i32 %742 to i64, !dbg !2145
  %add.ptr1250 = getelementptr inbounds i8, i8* %743, i64 %idx.ext1249, !dbg !2145
  store i8* %add.ptr1250, i8** %d, align 8, !dbg !2145
  %744 = load i32, i32* %mcnt, align 4, !dbg !2146
  %745 = load i8*, i8** %d2, align 8, !dbg !2147
  %idx.ext1251 = sext i32 %744 to i64, !dbg !2147
  %add.ptr1252 = getelementptr inbounds i8, i8* %745, i64 %idx.ext1251, !dbg !2147
  store i8* %add.ptr1252, i8** %d2, align 8, !dbg !2147
  br label %do.body1253, !dbg !2148

do.body1253:                                      ; preds = %if.end1248
  %746 = load i32, i32* %set_regs_matched_done, align 4, !dbg !2149
  %tobool1254 = icmp ne i32 %746, 0, !dbg !2149
  br i1 %tobool1254, label %if.end1274, label %if.then1255, !dbg !2152

if.then1255:                                      ; preds = %do.body1253
  call void @llvm.dbg.declare(metadata i64* %r1256, metadata !2153, metadata !DIExpression()), !dbg !2155
  store i32 1, i32* %set_regs_matched_done, align 4, !dbg !2155
  %747 = load i64, i64* %lowest_active_reg, align 8, !dbg !2156
  store i64 %747, i64* %r1256, align 8, !dbg !2156
  br label %for.cond1257, !dbg !2156

for.cond1257:                                     ; preds = %for.inc1271, %if.then1255
  %748 = load i64, i64* %r1256, align 8, !dbg !2158
  %749 = load i64, i64* %highest_active_reg, align 8, !dbg !2158
  %cmp1258 = icmp ule i64 %748, %749, !dbg !2158
  br i1 %cmp1258, label %for.body1260, label %for.end1273, !dbg !2156

for.body1260:                                     ; preds = %for.cond1257
  %750 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2160
  %751 = load i64, i64* %r1256, align 8, !dbg !2160
  %arrayidx1261 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %750, i64 %751, !dbg !2160
  %bits1262 = bitcast %union.byte_register_info_type* %arrayidx1261 to %struct.anon*, !dbg !2160
  %752 = bitcast %struct.anon* %bits1262 to i8*, !dbg !2160
  %bf.load1263 = load i8, i8* %752, align 8, !dbg !2160
  %bf.clear1264 = and i8 %bf.load1263, -17, !dbg !2160
  %bf.set1265 = or i8 %bf.clear1264, 16, !dbg !2160
  store i8 %bf.set1265, i8* %752, align 8, !dbg !2160
  %753 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2160
  %754 = load i64, i64* %r1256, align 8, !dbg !2160
  %arrayidx1266 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %753, i64 %754, !dbg !2160
  %bits1267 = bitcast %union.byte_register_info_type* %arrayidx1266 to %struct.anon*, !dbg !2160
  %755 = bitcast %struct.anon* %bits1267 to i8*, !dbg !2160
  %bf.load1268 = load i8, i8* %755, align 8, !dbg !2160
  %bf.clear1269 = and i8 %bf.load1268, -9, !dbg !2160
  %bf.set1270 = or i8 %bf.clear1269, 8, !dbg !2160
  store i8 %bf.set1270, i8* %755, align 8, !dbg !2160
  br label %for.inc1271, !dbg !2160

for.inc1271:                                      ; preds = %for.body1260
  %756 = load i64, i64* %r1256, align 8, !dbg !2158
  %inc1272 = add i64 %756, 1, !dbg !2158
  store i64 %inc1272, i64* %r1256, align 8, !dbg !2158
  br label %for.cond1257, !dbg !2158, !llvm.loop !2162

for.end1273:                                      ; preds = %for.cond1257
  br label %if.end1274, !dbg !2155

if.end1274:                                       ; preds = %for.end1273, %do.body1253
  br label %do.end1276, !dbg !2152

do.end1276:                                       ; preds = %if.end1274
  br label %for.cond1191, !dbg !2163, !llvm.loop !2164

for.end1277:                                      ; preds = %if.then1211
  br label %sw.epilog2674, !dbg !2167

sw.bb1278:                                        ; preds = %if.end572
  %757 = load i8*, i8** %d, align 8, !dbg !2168
  %758 = load i32, i32* %size1.addr, align 4, !dbg !2168
  %tobool1279 = icmp ne i32 %758, 0, !dbg !2168
  br i1 %tobool1279, label %cond.true1280, label %cond.false1281, !dbg !2168

cond.true1280:                                    ; preds = %sw.bb1278
  %759 = load i8*, i8** %string1.addr, align 8, !dbg !2168
  br label %cond.end1282, !dbg !2168

cond.false1281:                                   ; preds = %sw.bb1278
  %760 = load i8*, i8** %string2.addr, align 8, !dbg !2168
  br label %cond.end1282, !dbg !2168

cond.end1282:                                     ; preds = %cond.false1281, %cond.true1280
  %cond1283 = phi i8* [ %759, %cond.true1280 ], [ %760, %cond.false1281 ], !dbg !2168
  %cmp1284 = icmp eq i8* %757, %cond1283, !dbg !2168
  br i1 %cmp1284, label %if.then1288, label %lor.lhs.false1286, !dbg !2168

lor.lhs.false1286:                                ; preds = %cond.end1282
  %761 = load i32, i32* %size2.addr, align 4, !dbg !2168
  %tobool1287 = icmp ne i32 %761, 0, !dbg !2168
  br i1 %tobool1287, label %if.else1296, label %if.then1288, !dbg !2170

if.then1288:                                      ; preds = %lor.lhs.false1286, %cond.end1282
  %762 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !2171
  %not_bol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %762, i32 0, i32 7, !dbg !2174
  %bf.load1289 = load i8, i8* %not_bol, align 8, !dbg !2174
  %bf.lshr1290 = lshr i8 %bf.load1289, 5, !dbg !2174
  %bf.clear1291 = and i8 %bf.lshr1290, 1, !dbg !2174
  %bf.cast1292 = zext i8 %bf.clear1291 to i32, !dbg !2174
  %tobool1293 = icmp ne i32 %bf.cast1292, 0, !dbg !2171
  br i1 %tobool1293, label %if.end1295, label %if.then1294, !dbg !2175

if.then1294:                                      ; preds = %if.then1288
  br label %sw.epilog2674, !dbg !2176

if.end1295:                                       ; preds = %if.then1288
  br label %if.end1308, !dbg !2177

if.else1296:                                      ; preds = %lor.lhs.false1286
  %763 = load i8*, i8** %d, align 8, !dbg !2178
  %arrayidx1297 = getelementptr inbounds i8, i8* %763, i64 -1, !dbg !2178
  %764 = load i8, i8* %arrayidx1297, align 1, !dbg !2178
  %conv1298 = sext i8 %764 to i32, !dbg !2178
  %cmp1299 = icmp eq i32 %conv1298, 10, !dbg !2180
  br i1 %cmp1299, label %land.lhs.true1301, label %if.end1307, !dbg !2181

land.lhs.true1301:                                ; preds = %if.else1296
  %765 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !2182
  %newline_anchor = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %765, i32 0, i32 7, !dbg !2183
  %bf.load1302 = load i8, i8* %newline_anchor, align 8, !dbg !2183
  %bf.lshr1303 = lshr i8 %bf.load1302, 7, !dbg !2183
  %bf.cast1304 = zext i8 %bf.lshr1303 to i32, !dbg !2183
  %tobool1305 = icmp ne i32 %bf.cast1304, 0, !dbg !2182
  br i1 %tobool1305, label %if.then1306, label %if.end1307, !dbg !2184

if.then1306:                                      ; preds = %land.lhs.true1301
  br label %sw.epilog2674, !dbg !2185

if.end1307:                                       ; preds = %land.lhs.true1301, %if.else1296
  br label %if.end1308

if.end1308:                                       ; preds = %if.end1307, %if.end1295
  br label %fail, !dbg !2187

sw.bb1309:                                        ; preds = %if.end572
  %766 = load i8*, i8** %d, align 8, !dbg !2188
  %767 = load i8*, i8** %end2, align 8, !dbg !2188
  %cmp1310 = icmp eq i8* %766, %767, !dbg !2188
  br i1 %cmp1310, label %if.then1312, label %if.else1320, !dbg !2190

if.then1312:                                      ; preds = %sw.bb1309
  %768 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !2191
  %not_eol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %768, i32 0, i32 7, !dbg !2194
  %bf.load1313 = load i8, i8* %not_eol, align 8, !dbg !2194
  %bf.lshr1314 = lshr i8 %bf.load1313, 6, !dbg !2194
  %bf.clear1315 = and i8 %bf.lshr1314, 1, !dbg !2194
  %bf.cast1316 = zext i8 %bf.clear1315 to i32, !dbg !2194
  %tobool1317 = icmp ne i32 %bf.cast1316, 0, !dbg !2191
  br i1 %tobool1317, label %if.end1319, label %if.then1318, !dbg !2195

if.then1318:                                      ; preds = %if.then1312
  br label %sw.epilog2674, !dbg !2196

if.end1319:                                       ; preds = %if.then1312
  br label %if.end1339, !dbg !2197

if.else1320:                                      ; preds = %sw.bb1309
  %769 = load i8*, i8** %d, align 8, !dbg !2198
  %770 = load i8*, i8** %end1, align 8, !dbg !2200
  %cmp1321 = icmp eq i8* %769, %770, !dbg !2201
  br i1 %cmp1321, label %cond.true1323, label %cond.false1325, !dbg !2198

cond.true1323:                                    ; preds = %if.else1320
  %771 = load i8*, i8** %string2.addr, align 8, !dbg !2202
  %772 = load i8, i8* %771, align 1, !dbg !2203
  %conv1324 = sext i8 %772 to i32, !dbg !2203
  br label %cond.end1327, !dbg !2198

cond.false1325:                                   ; preds = %if.else1320
  %773 = load i8*, i8** %d, align 8, !dbg !2204
  %774 = load i8, i8* %773, align 1, !dbg !2205
  %conv1326 = sext i8 %774 to i32, !dbg !2205
  br label %cond.end1327, !dbg !2198

cond.end1327:                                     ; preds = %cond.false1325, %cond.true1323
  %cond1328 = phi i32 [ %conv1324, %cond.true1323 ], [ %conv1326, %cond.false1325 ], !dbg !2198
  %cmp1329 = icmp eq i32 %cond1328, 10, !dbg !2206
  br i1 %cmp1329, label %land.lhs.true1331, label %if.end1338, !dbg !2207

land.lhs.true1331:                                ; preds = %cond.end1327
  %775 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !2208
  %newline_anchor1332 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %775, i32 0, i32 7, !dbg !2209
  %bf.load1333 = load i8, i8* %newline_anchor1332, align 8, !dbg !2209
  %bf.lshr1334 = lshr i8 %bf.load1333, 7, !dbg !2209
  %bf.cast1335 = zext i8 %bf.lshr1334 to i32, !dbg !2209
  %tobool1336 = icmp ne i32 %bf.cast1335, 0, !dbg !2208
  br i1 %tobool1336, label %if.then1337, label %if.end1338, !dbg !2210

if.then1337:                                      ; preds = %land.lhs.true1331
  br label %sw.epilog2674, !dbg !2211

if.end1338:                                       ; preds = %land.lhs.true1331, %cond.end1327
  br label %if.end1339

if.end1339:                                       ; preds = %if.end1338, %if.end1319
  br label %fail, !dbg !2213

sw.bb1340:                                        ; preds = %if.end572
  %776 = load i8*, i8** %d, align 8, !dbg !2214
  %777 = load i32, i32* %size1.addr, align 4, !dbg !2214
  %tobool1341 = icmp ne i32 %777, 0, !dbg !2214
  br i1 %tobool1341, label %cond.true1342, label %cond.false1343, !dbg !2214

cond.true1342:                                    ; preds = %sw.bb1340
  %778 = load i8*, i8** %string1.addr, align 8, !dbg !2214
  br label %cond.end1344, !dbg !2214

cond.false1343:                                   ; preds = %sw.bb1340
  %779 = load i8*, i8** %string2.addr, align 8, !dbg !2214
  br label %cond.end1344, !dbg !2214

cond.end1344:                                     ; preds = %cond.false1343, %cond.true1342
  %cond1345 = phi i8* [ %778, %cond.true1342 ], [ %779, %cond.false1343 ], !dbg !2214
  %cmp1346 = icmp eq i8* %776, %cond1345, !dbg !2214
  br i1 %cmp1346, label %if.then1350, label %lor.lhs.false1348, !dbg !2214

lor.lhs.false1348:                                ; preds = %cond.end1344
  %780 = load i32, i32* %size2.addr, align 4, !dbg !2214
  %tobool1349 = icmp ne i32 %780, 0, !dbg !2214
  br i1 %tobool1349, label %if.end1351, label %if.then1350, !dbg !2216

if.then1350:                                      ; preds = %lor.lhs.false1348, %cond.end1344
  br label %sw.epilog2674, !dbg !2217

if.end1351:                                       ; preds = %lor.lhs.false1348
  br label %fail, !dbg !2218

sw.bb1352:                                        ; preds = %if.end572
  %781 = load i8*, i8** %d, align 8, !dbg !2219
  %782 = load i8*, i8** %end2, align 8, !dbg !2219
  %cmp1353 = icmp eq i8* %781, %782, !dbg !2219
  br i1 %cmp1353, label %if.then1355, label %if.end1356, !dbg !2221

if.then1355:                                      ; preds = %sw.bb1352
  br label %sw.epilog2674, !dbg !2222

if.end1356:                                       ; preds = %sw.bb1352
  br label %fail, !dbg !2223

sw.bb1357:                                        ; preds = %if.end572
  br label %do.body1358, !dbg !2224

do.body1358:                                      ; preds = %sw.bb1357
  br label %do.body1359, !dbg !2225

do.body1359:                                      ; preds = %do.body1358
  %783 = load i8*, i8** %p, align 8, !dbg !2227
  %784 = load i8, i8* %783, align 1, !dbg !2227
  %conv1360 = zext i8 %784 to i32, !dbg !2227
  %and1361 = and i32 %conv1360, 255, !dbg !2227
  store i32 %and1361, i32* %mcnt, align 4, !dbg !2227
  %785 = load i8*, i8** %p, align 8, !dbg !2227
  %add.ptr1362 = getelementptr inbounds i8, i8* %785, i64 1, !dbg !2227
  %786 = load i8, i8* %add.ptr1362, align 1, !dbg !2227
  %conv1363 = sext i8 %786 to i32, !dbg !2227
  %shl1364 = shl i32 %conv1363, 8, !dbg !2227
  %787 = load i32, i32* %mcnt, align 4, !dbg !2227
  %add1365 = add nsw i32 %787, %shl1364, !dbg !2227
  store i32 %add1365, i32* %mcnt, align 4, !dbg !2227
  br label %do.end1367, !dbg !2227

do.end1367:                                       ; preds = %do.body1359
  %788 = load i8*, i8** %p, align 8, !dbg !2225
  %add.ptr1368 = getelementptr inbounds i8, i8* %788, i64 2, !dbg !2225
  store i8* %add.ptr1368, i8** %p, align 8, !dbg !2225
  br label %do.end1370, !dbg !2225

do.end1370:                                       ; preds = %do.end1367
  br label %do.body1371, !dbg !2229

do.body1371:                                      ; preds = %do.end1370
  call void @llvm.dbg.declare(metadata i8** %destination1372, metadata !2230, metadata !DIExpression()), !dbg !2232
  call void @llvm.dbg.declare(metadata i64* %this_reg1373, metadata !2233, metadata !DIExpression()), !dbg !2232
  br label %while.cond1374, !dbg !2232

while.cond1374:                                   ; preds = %if.end1412, %do.body1371
  %size1375 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2232
  %789 = load i32, i32* %size1375, align 8, !dbg !2232
  %avail1376 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2232
  %790 = load i32, i32* %avail1376, align 4, !dbg !2232
  %sub1377 = sub i32 %789, %790, !dbg !2232
  %conv1378 = zext i32 %sub1377 to i64, !dbg !2232
  %791 = load i64, i64* %highest_active_reg, align 8, !dbg !2232
  %792 = load i64, i64* %lowest_active_reg, align 8, !dbg !2232
  %sub1379 = sub i64 %791, %792, !dbg !2232
  %add1380 = add i64 %sub1379, 1, !dbg !2232
  %mul1381 = mul i64 %add1380, 3, !dbg !2232
  %add1382 = add i64 %mul1381, 4, !dbg !2232
  %cmp1383 = icmp ult i64 %conv1378, %add1382, !dbg !2232
  br i1 %cmp1383, label %while.body1385, label %while.end1413, !dbg !2232

while.body1385:                                   ; preds = %while.cond1374
  %size1386 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2234
  %793 = load i32, i32* %size1386, align 8, !dbg !2234
  %794 = load i32, i32* @xre_max_failures, align 4, !dbg !2234
  %mul1387 = mul nsw i32 %794, 19, !dbg !2234
  %cmp1388 = icmp ugt i32 %793, %mul1387, !dbg !2234
  br i1 %cmp1388, label %cond.true1390, label %cond.false1391, !dbg !2237

cond.true1390:                                    ; preds = %while.body1385
  br i1 false, label %if.end1412, label %if.then1411, !dbg !2234

cond.false1391:                                   ; preds = %while.body1385
  %size1392 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2234
  %795 = load i32, i32* %size1392, align 8, !dbg !2234
  %shl1393 = shl i32 %795, 1, !dbg !2234
  %conv1394 = zext i32 %shl1393 to i64, !dbg !2234
  %mul1395 = mul i64 %conv1394, 8, !dbg !2234
  %796 = alloca i8, i64 %mul1395, align 16, !dbg !2234
  store i8* %796, i8** %destination1372, align 8, !dbg !2234
  %797 = load i8*, i8** %destination1372, align 8, !dbg !2234
  %stack1396 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2234
  %798 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1396, align 8, !dbg !2234
  %799 = bitcast %union.byte_fail_stack_elt* %798 to i8*, !dbg !2234
  %size1397 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2234
  %800 = load i32, i32* %size1397, align 8, !dbg !2234
  %conv1398 = zext i32 %800 to i64, !dbg !2234
  %mul1399 = mul i64 %conv1398, 8, !dbg !2234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %797, i8* align 8 %799, i64 %mul1399, i1 false), !dbg !2234
  %801 = bitcast i8* %797 to %union.byte_fail_stack_elt*, !dbg !2234
  %stack1400 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2234
  store %union.byte_fail_stack_elt* %801, %union.byte_fail_stack_elt** %stack1400, align 8, !dbg !2234
  %stack1401 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2234
  %802 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1401, align 8, !dbg !2234
  %cmp1402 = icmp eq %union.byte_fail_stack_elt* %802, null, !dbg !2234
  br i1 %cmp1402, label %cond.true1404, label %cond.false1405, !dbg !2234

cond.true1404:                                    ; preds = %cond.false1391
  br label %cond.end1408, !dbg !2234

cond.false1405:                                   ; preds = %cond.false1391
  %size1406 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2234
  %803 = load i32, i32* %size1406, align 8, !dbg !2234
  %shl1407 = shl i32 %803, 1, !dbg !2234
  store i32 %shl1407, i32* %size1406, align 8, !dbg !2234
  br label %cond.end1408, !dbg !2234

cond.end1408:                                     ; preds = %cond.false1405, %cond.true1404
  %cond1409 = phi i32 [ 0, %cond.true1404 ], [ 1, %cond.false1405 ], !dbg !2234
  %tobool1410 = icmp ne i32 %cond1409, 0, !dbg !2234
  br i1 %tobool1410, label %if.end1412, label %if.then1411, !dbg !2237

if.then1411:                                      ; preds = %cond.end1408, %cond.true1390
  store i32 -2, i32* %retval, align 4, !dbg !2234
  br label %return, !dbg !2234

if.end1412:                                       ; preds = %cond.end1408, %cond.true1390
  br label %while.cond1374, !dbg !2232, !llvm.loop !2238

while.end1413:                                    ; preds = %while.cond1374
  %804 = load i64, i64* %lowest_active_reg, align 8, !dbg !2239
  store i64 %804, i64* %this_reg1373, align 8, !dbg !2239
  br label %for.cond1414, !dbg !2239

for.cond1414:                                     ; preds = %for.inc1439, %while.end1413
  %805 = load i64, i64* %this_reg1373, align 8, !dbg !2242
  %806 = load i64, i64* %highest_active_reg, align 8, !dbg !2242
  %cmp1415 = icmp ule i64 %805, %806, !dbg !2242
  br i1 %cmp1415, label %for.body1417, label %for.end1441, !dbg !2239

for.body1417:                                     ; preds = %for.cond1414
  %807 = load i8**, i8*** %regstart, align 8, !dbg !2244
  %808 = load i64, i64* %this_reg1373, align 8, !dbg !2244
  %arrayidx1418 = getelementptr inbounds i8*, i8** %807, i64 %808, !dbg !2244
  %809 = load i8*, i8** %arrayidx1418, align 8, !dbg !2244
  %stack1419 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2244
  %810 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1419, align 8, !dbg !2244
  %avail1420 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2244
  %811 = load i32, i32* %avail1420, align 4, !dbg !2244
  %inc1421 = add i32 %811, 1, !dbg !2244
  store i32 %inc1421, i32* %avail1420, align 4, !dbg !2244
  %idxprom1422 = zext i32 %811 to i64, !dbg !2244
  %arrayidx1423 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %810, i64 %idxprom1422, !dbg !2244
  %pointer1424 = bitcast %union.byte_fail_stack_elt* %arrayidx1423 to i8**, !dbg !2244
  store i8* %809, i8** %pointer1424, align 8, !dbg !2244
  %812 = load i8**, i8*** %regend, align 8, !dbg !2244
  %813 = load i64, i64* %this_reg1373, align 8, !dbg !2244
  %arrayidx1425 = getelementptr inbounds i8*, i8** %812, i64 %813, !dbg !2244
  %814 = load i8*, i8** %arrayidx1425, align 8, !dbg !2244
  %stack1426 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2244
  %815 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1426, align 8, !dbg !2244
  %avail1427 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2244
  %816 = load i32, i32* %avail1427, align 4, !dbg !2244
  %inc1428 = add i32 %816, 1, !dbg !2244
  store i32 %inc1428, i32* %avail1427, align 4, !dbg !2244
  %idxprom1429 = zext i32 %816 to i64, !dbg !2244
  %arrayidx1430 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %815, i64 %idxprom1429, !dbg !2244
  %pointer1431 = bitcast %union.byte_fail_stack_elt* %arrayidx1430 to i8**, !dbg !2244
  store i8* %814, i8** %pointer1431, align 8, !dbg !2244
  %stack1432 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2244
  %817 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1432, align 8, !dbg !2244
  %avail1433 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2244
  %818 = load i32, i32* %avail1433, align 4, !dbg !2244
  %inc1434 = add i32 %818, 1, !dbg !2244
  store i32 %inc1434, i32* %avail1433, align 4, !dbg !2244
  %idxprom1435 = zext i32 %818 to i64, !dbg !2244
  %arrayidx1436 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %817, i64 %idxprom1435, !dbg !2244
  %819 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2244
  %820 = load i64, i64* %this_reg1373, align 8, !dbg !2244
  %arrayidx1437 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %819, i64 %820, !dbg !2244
  %word1438 = bitcast %union.byte_register_info_type* %arrayidx1437 to %union.byte_fail_stack_elt*, !dbg !2244
  %821 = bitcast %union.byte_fail_stack_elt* %arrayidx1436 to i8*, !dbg !2244
  %822 = bitcast %union.byte_fail_stack_elt* %word1438 to i8*, !dbg !2244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %821, i8* align 8 %822, i64 8, i1 false), !dbg !2244
  br label %for.inc1439, !dbg !2244

for.inc1439:                                      ; preds = %for.body1417
  %823 = load i64, i64* %this_reg1373, align 8, !dbg !2242
  %inc1440 = add i64 %823, 1, !dbg !2242
  store i64 %inc1440, i64* %this_reg1373, align 8, !dbg !2242
  br label %for.cond1414, !dbg !2242, !llvm.loop !2246

for.end1441:                                      ; preds = %for.cond1414
  %824 = load i64, i64* %lowest_active_reg, align 8, !dbg !2232
  %conv1442 = trunc i64 %824 to i32, !dbg !2232
  %stack1443 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2232
  %825 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1443, align 8, !dbg !2232
  %avail1444 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2232
  %826 = load i32, i32* %avail1444, align 4, !dbg !2232
  %inc1445 = add i32 %826, 1, !dbg !2232
  store i32 %inc1445, i32* %avail1444, align 4, !dbg !2232
  %idxprom1446 = zext i32 %826 to i64, !dbg !2232
  %arrayidx1447 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %825, i64 %idxprom1446, !dbg !2232
  %integer1448 = bitcast %union.byte_fail_stack_elt* %arrayidx1447 to i32*, !dbg !2232
  store i32 %conv1442, i32* %integer1448, align 8, !dbg !2232
  %827 = load i64, i64* %highest_active_reg, align 8, !dbg !2232
  %conv1449 = trunc i64 %827 to i32, !dbg !2232
  %stack1450 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2232
  %828 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1450, align 8, !dbg !2232
  %avail1451 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2232
  %829 = load i32, i32* %avail1451, align 4, !dbg !2232
  %inc1452 = add i32 %829, 1, !dbg !2232
  store i32 %inc1452, i32* %avail1451, align 4, !dbg !2232
  %idxprom1453 = zext i32 %829 to i64, !dbg !2232
  %arrayidx1454 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %828, i64 %idxprom1453, !dbg !2232
  %integer1455 = bitcast %union.byte_fail_stack_elt* %arrayidx1454 to i32*, !dbg !2232
  store i32 %conv1449, i32* %integer1455, align 8, !dbg !2232
  %830 = load i8*, i8** %p, align 8, !dbg !2232
  %831 = load i32, i32* %mcnt, align 4, !dbg !2232
  %idx.ext1456 = sext i32 %831 to i64, !dbg !2232
  %add.ptr1457 = getelementptr inbounds i8, i8* %830, i64 %idx.ext1456, !dbg !2232
  %stack1458 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2232
  %832 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1458, align 8, !dbg !2232
  %avail1459 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2232
  %833 = load i32, i32* %avail1459, align 4, !dbg !2232
  %inc1460 = add i32 %833, 1, !dbg !2232
  store i32 %inc1460, i32* %avail1459, align 4, !dbg !2232
  %idxprom1461 = zext i32 %833 to i64, !dbg !2232
  %arrayidx1462 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %832, i64 %idxprom1461, !dbg !2232
  %pointer1463 = bitcast %union.byte_fail_stack_elt* %arrayidx1462 to i8**, !dbg !2232
  store i8* %add.ptr1457, i8** %pointer1463, align 8, !dbg !2232
  %stack1464 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2232
  %834 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1464, align 8, !dbg !2232
  %avail1465 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2232
  %835 = load i32, i32* %avail1465, align 4, !dbg !2232
  %inc1466 = add i32 %835, 1, !dbg !2232
  store i32 %inc1466, i32* %avail1465, align 4, !dbg !2232
  %idxprom1467 = zext i32 %835 to i64, !dbg !2232
  %arrayidx1468 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %834, i64 %idxprom1467, !dbg !2232
  %pointer1469 = bitcast %union.byte_fail_stack_elt* %arrayidx1468 to i8**, !dbg !2232
  store i8* null, i8** %pointer1469, align 8, !dbg !2232
  br label %do.end1471, !dbg !2232

do.end1471:                                       ; preds = %for.end1441
  br label %sw.epilog2674, !dbg !2247

sw.bb1472:                                        ; preds = %if.end572
  br label %on_failure, !dbg !2247

on_failure:                                       ; preds = %if.then2203, %sw.bb1472
  call void @llvm.dbg.label(metadata !2248), !dbg !2249
  br label %do.body1473, !dbg !2250

do.body1473:                                      ; preds = %on_failure
  br label %do.body1474, !dbg !2251

do.body1474:                                      ; preds = %do.body1473
  %836 = load i8*, i8** %p, align 8, !dbg !2253
  %837 = load i8, i8* %836, align 1, !dbg !2253
  %conv1475 = zext i8 %837 to i32, !dbg !2253
  %and1476 = and i32 %conv1475, 255, !dbg !2253
  store i32 %and1476, i32* %mcnt, align 4, !dbg !2253
  %838 = load i8*, i8** %p, align 8, !dbg !2253
  %add.ptr1477 = getelementptr inbounds i8, i8* %838, i64 1, !dbg !2253
  %839 = load i8, i8* %add.ptr1477, align 1, !dbg !2253
  %conv1478 = sext i8 %839 to i32, !dbg !2253
  %shl1479 = shl i32 %conv1478, 8, !dbg !2253
  %840 = load i32, i32* %mcnt, align 4, !dbg !2253
  %add1480 = add nsw i32 %840, %shl1479, !dbg !2253
  store i32 %add1480, i32* %mcnt, align 4, !dbg !2253
  br label %do.end1482, !dbg !2253

do.end1482:                                       ; preds = %do.body1474
  %841 = load i8*, i8** %p, align 8, !dbg !2251
  %add.ptr1483 = getelementptr inbounds i8, i8* %841, i64 2, !dbg !2251
  store i8* %add.ptr1483, i8** %p, align 8, !dbg !2251
  br label %do.end1485, !dbg !2251

do.end1485:                                       ; preds = %do.end1482
  %842 = load i8*, i8** %p, align 8, !dbg !2255
  store i8* %842, i8** %p1, align 8, !dbg !2256
  br label %while.cond1486, !dbg !2257

while.cond1486:                                   ; preds = %while.body1495, %do.end1485
  %843 = load i8*, i8** %p1, align 8, !dbg !2258
  %844 = load i8*, i8** %pend, align 8, !dbg !2259
  %cmp1487 = icmp ult i8* %843, %844, !dbg !2260
  br i1 %cmp1487, label %land.rhs1489, label %land.end1493, !dbg !2261

land.rhs1489:                                     ; preds = %while.cond1486
  %845 = load i8*, i8** %p1, align 8, !dbg !2262
  %846 = load i8, i8* %845, align 1, !dbg !2263
  %conv1490 = zext i8 %846 to i32, !dbg !2264
  %cmp1491 = icmp eq i32 %conv1490, 0, !dbg !2265
  br label %land.end1493

land.end1493:                                     ; preds = %land.rhs1489, %while.cond1486
  %847 = phi i1 [ false, %while.cond1486 ], [ %cmp1491, %land.rhs1489 ], !dbg !2266
  br i1 %847, label %while.body1495, label %while.end1497, !dbg !2257

while.body1495:                                   ; preds = %land.end1493
  %848 = load i8*, i8** %p1, align 8, !dbg !2267
  %incdec.ptr1496 = getelementptr inbounds i8, i8* %848, i32 1, !dbg !2267
  store i8* %incdec.ptr1496, i8** %p1, align 8, !dbg !2267
  br label %while.cond1486, !dbg !2257, !llvm.loop !2268

while.end1497:                                    ; preds = %land.end1493
  %849 = load i8*, i8** %p1, align 8, !dbg !2269
  %850 = load i8*, i8** %pend, align 8, !dbg !2271
  %cmp1498 = icmp ult i8* %849, %850, !dbg !2272
  br i1 %cmp1498, label %land.lhs.true1500, label %if.end1517, !dbg !2273

land.lhs.true1500:                                ; preds = %while.end1497
  %851 = load i8*, i8** %p1, align 8, !dbg !2274
  %852 = load i8, i8* %851, align 1, !dbg !2275
  %conv1501 = zext i8 %852 to i32, !dbg !2276
  %cmp1502 = icmp eq i32 %conv1501, 6, !dbg !2277
  br i1 %cmp1502, label %if.then1504, label %if.end1517, !dbg !2278

if.then1504:                                      ; preds = %land.lhs.true1500
  %853 = load i8*, i8** %p1, align 8, !dbg !2279
  %add.ptr1505 = getelementptr inbounds i8, i8* %853, i64 1, !dbg !2281
  %854 = load i8, i8* %add.ptr1505, align 1, !dbg !2282
  %conv1506 = zext i8 %854 to i32, !dbg !2282
  %855 = load i8*, i8** %p1, align 8, !dbg !2283
  %add.ptr1507 = getelementptr inbounds i8, i8* %855, i64 2, !dbg !2284
  %856 = load i8, i8* %add.ptr1507, align 1, !dbg !2285
  %conv1508 = zext i8 %856 to i32, !dbg !2285
  %add1509 = add nsw i32 %conv1506, %conv1508, !dbg !2286
  %conv1510 = sext i32 %add1509 to i64, !dbg !2282
  store i64 %conv1510, i64* %highest_active_reg, align 8, !dbg !2287
  %857 = load i64, i64* %lowest_active_reg, align 8, !dbg !2288
  %cmp1511 = icmp eq i64 %857, 257, !dbg !2290
  br i1 %cmp1511, label %if.then1513, label %if.end1516, !dbg !2291

if.then1513:                                      ; preds = %if.then1504
  %858 = load i8*, i8** %p1, align 8, !dbg !2292
  %add.ptr1514 = getelementptr inbounds i8, i8* %858, i64 1, !dbg !2293
  %859 = load i8, i8* %add.ptr1514, align 1, !dbg !2294
  %conv1515 = zext i8 %859 to i64, !dbg !2294
  store i64 %conv1515, i64* %lowest_active_reg, align 8, !dbg !2295
  br label %if.end1516, !dbg !2296

if.end1516:                                       ; preds = %if.then1513, %if.then1504
  br label %if.end1517, !dbg !2297

if.end1517:                                       ; preds = %if.end1516, %land.lhs.true1500, %while.end1497
  br label %do.body1518, !dbg !2298

do.body1518:                                      ; preds = %if.end1517
  call void @llvm.dbg.declare(metadata i8** %destination1519, metadata !2299, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.declare(metadata i64* %this_reg1520, metadata !2302, metadata !DIExpression()), !dbg !2301
  br label %while.cond1521, !dbg !2301

while.cond1521:                                   ; preds = %if.end1559, %do.body1518
  %size1522 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2301
  %860 = load i32, i32* %size1522, align 8, !dbg !2301
  %avail1523 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2301
  %861 = load i32, i32* %avail1523, align 4, !dbg !2301
  %sub1524 = sub i32 %860, %861, !dbg !2301
  %conv1525 = zext i32 %sub1524 to i64, !dbg !2301
  %862 = load i64, i64* %highest_active_reg, align 8, !dbg !2301
  %863 = load i64, i64* %lowest_active_reg, align 8, !dbg !2301
  %sub1526 = sub i64 %862, %863, !dbg !2301
  %add1527 = add i64 %sub1526, 1, !dbg !2301
  %mul1528 = mul i64 %add1527, 3, !dbg !2301
  %add1529 = add i64 %mul1528, 4, !dbg !2301
  %cmp1530 = icmp ult i64 %conv1525, %add1529, !dbg !2301
  br i1 %cmp1530, label %while.body1532, label %while.end1560, !dbg !2301

while.body1532:                                   ; preds = %while.cond1521
  %size1533 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2303
  %864 = load i32, i32* %size1533, align 8, !dbg !2303
  %865 = load i32, i32* @xre_max_failures, align 4, !dbg !2303
  %mul1534 = mul nsw i32 %865, 19, !dbg !2303
  %cmp1535 = icmp ugt i32 %864, %mul1534, !dbg !2303
  br i1 %cmp1535, label %cond.true1537, label %cond.false1538, !dbg !2306

cond.true1537:                                    ; preds = %while.body1532
  br i1 false, label %if.end1559, label %if.then1558, !dbg !2303

cond.false1538:                                   ; preds = %while.body1532
  %size1539 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2303
  %866 = load i32, i32* %size1539, align 8, !dbg !2303
  %shl1540 = shl i32 %866, 1, !dbg !2303
  %conv1541 = zext i32 %shl1540 to i64, !dbg !2303
  %mul1542 = mul i64 %conv1541, 8, !dbg !2303
  %867 = alloca i8, i64 %mul1542, align 16, !dbg !2303
  store i8* %867, i8** %destination1519, align 8, !dbg !2303
  %868 = load i8*, i8** %destination1519, align 8, !dbg !2303
  %stack1543 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2303
  %869 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1543, align 8, !dbg !2303
  %870 = bitcast %union.byte_fail_stack_elt* %869 to i8*, !dbg !2303
  %size1544 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2303
  %871 = load i32, i32* %size1544, align 8, !dbg !2303
  %conv1545 = zext i32 %871 to i64, !dbg !2303
  %mul1546 = mul i64 %conv1545, 8, !dbg !2303
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %868, i8* align 8 %870, i64 %mul1546, i1 false), !dbg !2303
  %872 = bitcast i8* %868 to %union.byte_fail_stack_elt*, !dbg !2303
  %stack1547 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2303
  store %union.byte_fail_stack_elt* %872, %union.byte_fail_stack_elt** %stack1547, align 8, !dbg !2303
  %stack1548 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2303
  %873 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1548, align 8, !dbg !2303
  %cmp1549 = icmp eq %union.byte_fail_stack_elt* %873, null, !dbg !2303
  br i1 %cmp1549, label %cond.true1551, label %cond.false1552, !dbg !2303

cond.true1551:                                    ; preds = %cond.false1538
  br label %cond.end1555, !dbg !2303

cond.false1552:                                   ; preds = %cond.false1538
  %size1553 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2303
  %874 = load i32, i32* %size1553, align 8, !dbg !2303
  %shl1554 = shl i32 %874, 1, !dbg !2303
  store i32 %shl1554, i32* %size1553, align 8, !dbg !2303
  br label %cond.end1555, !dbg !2303

cond.end1555:                                     ; preds = %cond.false1552, %cond.true1551
  %cond1556 = phi i32 [ 0, %cond.true1551 ], [ 1, %cond.false1552 ], !dbg !2303
  %tobool1557 = icmp ne i32 %cond1556, 0, !dbg !2303
  br i1 %tobool1557, label %if.end1559, label %if.then1558, !dbg !2306

if.then1558:                                      ; preds = %cond.end1555, %cond.true1537
  store i32 -2, i32* %retval, align 4, !dbg !2303
  br label %return, !dbg !2303

if.end1559:                                       ; preds = %cond.end1555, %cond.true1537
  br label %while.cond1521, !dbg !2301, !llvm.loop !2307

while.end1560:                                    ; preds = %while.cond1521
  %875 = load i64, i64* %lowest_active_reg, align 8, !dbg !2308
  store i64 %875, i64* %this_reg1520, align 8, !dbg !2308
  br label %for.cond1561, !dbg !2308

for.cond1561:                                     ; preds = %for.inc1586, %while.end1560
  %876 = load i64, i64* %this_reg1520, align 8, !dbg !2311
  %877 = load i64, i64* %highest_active_reg, align 8, !dbg !2311
  %cmp1562 = icmp ule i64 %876, %877, !dbg !2311
  br i1 %cmp1562, label %for.body1564, label %for.end1588, !dbg !2308

for.body1564:                                     ; preds = %for.cond1561
  %878 = load i8**, i8*** %regstart, align 8, !dbg !2313
  %879 = load i64, i64* %this_reg1520, align 8, !dbg !2313
  %arrayidx1565 = getelementptr inbounds i8*, i8** %878, i64 %879, !dbg !2313
  %880 = load i8*, i8** %arrayidx1565, align 8, !dbg !2313
  %stack1566 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2313
  %881 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1566, align 8, !dbg !2313
  %avail1567 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2313
  %882 = load i32, i32* %avail1567, align 4, !dbg !2313
  %inc1568 = add i32 %882, 1, !dbg !2313
  store i32 %inc1568, i32* %avail1567, align 4, !dbg !2313
  %idxprom1569 = zext i32 %882 to i64, !dbg !2313
  %arrayidx1570 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %881, i64 %idxprom1569, !dbg !2313
  %pointer1571 = bitcast %union.byte_fail_stack_elt* %arrayidx1570 to i8**, !dbg !2313
  store i8* %880, i8** %pointer1571, align 8, !dbg !2313
  %883 = load i8**, i8*** %regend, align 8, !dbg !2313
  %884 = load i64, i64* %this_reg1520, align 8, !dbg !2313
  %arrayidx1572 = getelementptr inbounds i8*, i8** %883, i64 %884, !dbg !2313
  %885 = load i8*, i8** %arrayidx1572, align 8, !dbg !2313
  %stack1573 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2313
  %886 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1573, align 8, !dbg !2313
  %avail1574 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2313
  %887 = load i32, i32* %avail1574, align 4, !dbg !2313
  %inc1575 = add i32 %887, 1, !dbg !2313
  store i32 %inc1575, i32* %avail1574, align 4, !dbg !2313
  %idxprom1576 = zext i32 %887 to i64, !dbg !2313
  %arrayidx1577 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %886, i64 %idxprom1576, !dbg !2313
  %pointer1578 = bitcast %union.byte_fail_stack_elt* %arrayidx1577 to i8**, !dbg !2313
  store i8* %885, i8** %pointer1578, align 8, !dbg !2313
  %stack1579 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2313
  %888 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1579, align 8, !dbg !2313
  %avail1580 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2313
  %889 = load i32, i32* %avail1580, align 4, !dbg !2313
  %inc1581 = add i32 %889, 1, !dbg !2313
  store i32 %inc1581, i32* %avail1580, align 4, !dbg !2313
  %idxprom1582 = zext i32 %889 to i64, !dbg !2313
  %arrayidx1583 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %888, i64 %idxprom1582, !dbg !2313
  %890 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2313
  %891 = load i64, i64* %this_reg1520, align 8, !dbg !2313
  %arrayidx1584 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %890, i64 %891, !dbg !2313
  %word1585 = bitcast %union.byte_register_info_type* %arrayidx1584 to %union.byte_fail_stack_elt*, !dbg !2313
  %892 = bitcast %union.byte_fail_stack_elt* %arrayidx1583 to i8*, !dbg !2313
  %893 = bitcast %union.byte_fail_stack_elt* %word1585 to i8*, !dbg !2313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %892, i8* align 8 %893, i64 8, i1 false), !dbg !2313
  br label %for.inc1586, !dbg !2313

for.inc1586:                                      ; preds = %for.body1564
  %894 = load i64, i64* %this_reg1520, align 8, !dbg !2311
  %inc1587 = add i64 %894, 1, !dbg !2311
  store i64 %inc1587, i64* %this_reg1520, align 8, !dbg !2311
  br label %for.cond1561, !dbg !2311, !llvm.loop !2315

for.end1588:                                      ; preds = %for.cond1561
  %895 = load i64, i64* %lowest_active_reg, align 8, !dbg !2301
  %conv1589 = trunc i64 %895 to i32, !dbg !2301
  %stack1590 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2301
  %896 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1590, align 8, !dbg !2301
  %avail1591 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2301
  %897 = load i32, i32* %avail1591, align 4, !dbg !2301
  %inc1592 = add i32 %897, 1, !dbg !2301
  store i32 %inc1592, i32* %avail1591, align 4, !dbg !2301
  %idxprom1593 = zext i32 %897 to i64, !dbg !2301
  %arrayidx1594 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %896, i64 %idxprom1593, !dbg !2301
  %integer1595 = bitcast %union.byte_fail_stack_elt* %arrayidx1594 to i32*, !dbg !2301
  store i32 %conv1589, i32* %integer1595, align 8, !dbg !2301
  %898 = load i64, i64* %highest_active_reg, align 8, !dbg !2301
  %conv1596 = trunc i64 %898 to i32, !dbg !2301
  %stack1597 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2301
  %899 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1597, align 8, !dbg !2301
  %avail1598 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2301
  %900 = load i32, i32* %avail1598, align 4, !dbg !2301
  %inc1599 = add i32 %900, 1, !dbg !2301
  store i32 %inc1599, i32* %avail1598, align 4, !dbg !2301
  %idxprom1600 = zext i32 %900 to i64, !dbg !2301
  %arrayidx1601 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %899, i64 %idxprom1600, !dbg !2301
  %integer1602 = bitcast %union.byte_fail_stack_elt* %arrayidx1601 to i32*, !dbg !2301
  store i32 %conv1596, i32* %integer1602, align 8, !dbg !2301
  %901 = load i8*, i8** %p, align 8, !dbg !2301
  %902 = load i32, i32* %mcnt, align 4, !dbg !2301
  %idx.ext1603 = sext i32 %902 to i64, !dbg !2301
  %add.ptr1604 = getelementptr inbounds i8, i8* %901, i64 %idx.ext1603, !dbg !2301
  %stack1605 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2301
  %903 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1605, align 8, !dbg !2301
  %avail1606 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2301
  %904 = load i32, i32* %avail1606, align 4, !dbg !2301
  %inc1607 = add i32 %904, 1, !dbg !2301
  store i32 %inc1607, i32* %avail1606, align 4, !dbg !2301
  %idxprom1608 = zext i32 %904 to i64, !dbg !2301
  %arrayidx1609 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %903, i64 %idxprom1608, !dbg !2301
  %pointer1610 = bitcast %union.byte_fail_stack_elt* %arrayidx1609 to i8**, !dbg !2301
  store i8* %add.ptr1604, i8** %pointer1610, align 8, !dbg !2301
  %905 = load i8*, i8** %d, align 8, !dbg !2301
  %stack1611 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2301
  %906 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1611, align 8, !dbg !2301
  %avail1612 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2301
  %907 = load i32, i32* %avail1612, align 4, !dbg !2301
  %inc1613 = add i32 %907, 1, !dbg !2301
  store i32 %inc1613, i32* %avail1612, align 4, !dbg !2301
  %idxprom1614 = zext i32 %907 to i64, !dbg !2301
  %arrayidx1615 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %906, i64 %idxprom1614, !dbg !2301
  %pointer1616 = bitcast %union.byte_fail_stack_elt* %arrayidx1615 to i8**, !dbg !2301
  store i8* %905, i8** %pointer1616, align 8, !dbg !2301
  br label %do.end1618, !dbg !2301

do.end1618:                                       ; preds = %for.end1588
  br label %sw.epilog2674, !dbg !2316

sw.bb1619:                                        ; preds = %if.end572
  br label %do.body1620, !dbg !2317

do.body1620:                                      ; preds = %sw.bb1619
  br label %do.body1621, !dbg !2318

do.body1621:                                      ; preds = %do.body1620
  %908 = load i8*, i8** %p, align 8, !dbg !2320
  %909 = load i8, i8* %908, align 1, !dbg !2320
  %conv1622 = zext i8 %909 to i32, !dbg !2320
  %and1623 = and i32 %conv1622, 255, !dbg !2320
  store i32 %and1623, i32* %mcnt, align 4, !dbg !2320
  %910 = load i8*, i8** %p, align 8, !dbg !2320
  %add.ptr1624 = getelementptr inbounds i8, i8* %910, i64 1, !dbg !2320
  %911 = load i8, i8* %add.ptr1624, align 1, !dbg !2320
  %conv1625 = sext i8 %911 to i32, !dbg !2320
  %shl1626 = shl i32 %conv1625, 8, !dbg !2320
  %912 = load i32, i32* %mcnt, align 4, !dbg !2320
  %add1627 = add nsw i32 %912, %shl1626, !dbg !2320
  store i32 %add1627, i32* %mcnt, align 4, !dbg !2320
  br label %do.end1629, !dbg !2320

do.end1629:                                       ; preds = %do.body1621
  %913 = load i8*, i8** %p, align 8, !dbg !2318
  %add.ptr1630 = getelementptr inbounds i8, i8* %913, i64 2, !dbg !2318
  store i8* %add.ptr1630, i8** %p, align 8, !dbg !2318
  br label %do.end1632, !dbg !2318

do.end1632:                                       ; preds = %do.end1629
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !2322, metadata !DIExpression()), !dbg !2324
  %914 = load i8*, i8** %p, align 8, !dbg !2325
  store i8* %914, i8** %p2, align 8, !dbg !2324
  br label %while.body1634, !dbg !2326

while.body1634:                                   ; preds = %do.end1632, %if.end1661
  %915 = load i8*, i8** %p2, align 8, !dbg !2327
  %add.ptr1635 = getelementptr inbounds i8, i8* %915, i64 2, !dbg !2330
  %916 = load i8*, i8** %pend, align 8, !dbg !2331
  %cmp1636 = icmp ult i8* %add.ptr1635, %916, !dbg !2332
  br i1 %cmp1636, label %land.lhs.true1638, label %if.else1648, !dbg !2333

land.lhs.true1638:                                ; preds = %while.body1634
  %917 = load i8*, i8** %p2, align 8, !dbg !2334
  %918 = load i8, i8* %917, align 1, !dbg !2335
  %conv1639 = zext i8 %918 to i32, !dbg !2336
  %cmp1640 = icmp eq i32 %conv1639, 7, !dbg !2337
  br i1 %cmp1640, label %if.then1646, label %lor.lhs.false1642, !dbg !2338

lor.lhs.false1642:                                ; preds = %land.lhs.true1638
  %919 = load i8*, i8** %p2, align 8, !dbg !2339
  %920 = load i8, i8* %919, align 1, !dbg !2340
  %conv1643 = zext i8 %920 to i32, !dbg !2341
  %cmp1644 = icmp eq i32 %conv1643, 6, !dbg !2342
  br i1 %cmp1644, label %if.then1646, label %if.else1648, !dbg !2343

if.then1646:                                      ; preds = %lor.lhs.false1642, %land.lhs.true1638
  %921 = load i8*, i8** %p2, align 8, !dbg !2344
  %add.ptr1647 = getelementptr inbounds i8, i8* %921, i64 3, !dbg !2344
  store i8* %add.ptr1647, i8** %p2, align 8, !dbg !2344
  br label %if.end1661, !dbg !2345

if.else1648:                                      ; preds = %lor.lhs.false1642, %while.body1634
  %922 = load i8*, i8** %p2, align 8, !dbg !2346
  %add.ptr1649 = getelementptr inbounds i8, i8* %922, i64 2, !dbg !2348
  %add.ptr1650 = getelementptr inbounds i8, i8* %add.ptr1649, i64 4, !dbg !2349
  %923 = load i8*, i8** %pend, align 8, !dbg !2350
  %cmp1651 = icmp ult i8* %add.ptr1650, %923, !dbg !2351
  br i1 %cmp1651, label %land.lhs.true1653, label %if.else1659, !dbg !2352

land.lhs.true1653:                                ; preds = %if.else1648
  %924 = load i8*, i8** %p2, align 8, !dbg !2353
  %925 = load i8, i8* %924, align 1, !dbg !2354
  %conv1654 = zext i8 %925 to i32, !dbg !2355
  %cmp1655 = icmp eq i32 %conv1654, 19, !dbg !2356
  br i1 %cmp1655, label %if.then1657, label %if.else1659, !dbg !2357

if.then1657:                                      ; preds = %land.lhs.true1653
  %926 = load i8*, i8** %p2, align 8, !dbg !2358
  %add.ptr1658 = getelementptr inbounds i8, i8* %926, i64 6, !dbg !2358
  store i8* %add.ptr1658, i8** %p2, align 8, !dbg !2358
  br label %if.end1660, !dbg !2359

if.else1659:                                      ; preds = %land.lhs.true1653, %if.else1648
  br label %while.end1662, !dbg !2360

if.end1660:                                       ; preds = %if.then1657
  br label %if.end1661

if.end1661:                                       ; preds = %if.end1660, %if.then1646
  br label %while.body1634, !dbg !2326, !llvm.loop !2361

while.end1662:                                    ; preds = %if.else1659
  %927 = load i8*, i8** %p, align 8, !dbg !2363
  %928 = load i32, i32* %mcnt, align 4, !dbg !2364
  %idx.ext1663 = sext i32 %928 to i64, !dbg !2365
  %add.ptr1664 = getelementptr inbounds i8, i8* %927, i64 %idx.ext1663, !dbg !2365
  store i8* %add.ptr1664, i8** %p1, align 8, !dbg !2366
  %929 = load i8*, i8** %p2, align 8, !dbg !2367
  %930 = load i8*, i8** %pend, align 8, !dbg !2369
  %cmp1665 = icmp eq i8* %929, %930, !dbg !2370
  br i1 %cmp1665, label %if.then1667, label %if.else1669, !dbg !2371

if.then1667:                                      ; preds = %while.end1662
  %931 = load i8*, i8** %p, align 8, !dbg !2372
  %arrayidx1668 = getelementptr inbounds i8, i8* %931, i64 -3, !dbg !2372
  store i8 17, i8* %arrayidx1668, align 1, !dbg !2374
  br label %if.end1885, !dbg !2375

if.else1669:                                      ; preds = %while.end1662
  %932 = load i8*, i8** %p2, align 8, !dbg !2376
  %933 = load i8, i8* %932, align 1, !dbg !2378
  %conv1670 = zext i8 %933 to i32, !dbg !2379
  %cmp1671 = icmp eq i32 %conv1670, 2, !dbg !2380
  br i1 %cmp1671, label %if.then1683, label %lor.lhs.false1673, !dbg !2381

lor.lhs.false1673:                                ; preds = %if.else1669
  %934 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !2382
  %newline_anchor1674 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %934, i32 0, i32 7, !dbg !2383
  %bf.load1675 = load i8, i8* %newline_anchor1674, align 8, !dbg !2383
  %bf.lshr1676 = lshr i8 %bf.load1675, 7, !dbg !2383
  %bf.cast1677 = zext i8 %bf.lshr1676 to i32, !dbg !2383
  %tobool1678 = icmp ne i32 %bf.cast1677, 0, !dbg !2382
  br i1 %tobool1678, label %land.lhs.true1679, label %if.else1752, !dbg !2384

land.lhs.true1679:                                ; preds = %lor.lhs.false1673
  %935 = load i8*, i8** %p2, align 8, !dbg !2385
  %936 = load i8, i8* %935, align 1, !dbg !2386
  %conv1680 = zext i8 %936 to i32, !dbg !2387
  %cmp1681 = icmp eq i32 %conv1680, 10, !dbg !2388
  br i1 %cmp1681, label %if.then1683, label %if.else1752, !dbg !2389

if.then1683:                                      ; preds = %land.lhs.true1679, %if.else1669
  call void @llvm.dbg.declare(metadata i8* %c1684, metadata !2390, metadata !DIExpression()), !dbg !2392
  %937 = load i8*, i8** %p2, align 8, !dbg !2393
  %938 = load i8, i8* %937, align 1, !dbg !2394
  %conv1685 = zext i8 %938 to i32, !dbg !2394
  %cmp1686 = icmp eq i32 %conv1685, 10, !dbg !2395
  br i1 %cmp1686, label %cond.true1688, label %cond.false1689, !dbg !2394

cond.true1688:                                    ; preds = %if.then1683
  br label %cond.end1692, !dbg !2394

cond.false1689:                                   ; preds = %if.then1683
  %939 = load i8*, i8** %p2, align 8, !dbg !2396
  %arrayidx1690 = getelementptr inbounds i8, i8* %939, i64 2, !dbg !2396
  %940 = load i8, i8* %arrayidx1690, align 1, !dbg !2396
  %conv1691 = zext i8 %940 to i32, !dbg !2396
  br label %cond.end1692, !dbg !2394

cond.end1692:                                     ; preds = %cond.false1689, %cond.true1688
  %cond1693 = phi i32 [ 10, %cond.true1688 ], [ %conv1691, %cond.false1689 ], !dbg !2394
  %conv1694 = trunc i32 %cond1693 to i8, !dbg !2394
  store i8 %conv1694, i8* %c1684, align 1, !dbg !2392
  %941 = load i8*, i8** %p1, align 8, !dbg !2397
  %arrayidx1695 = getelementptr inbounds i8, i8* %941, i64 3, !dbg !2397
  %942 = load i8, i8* %arrayidx1695, align 1, !dbg !2397
  %conv1696 = zext i8 %942 to i32, !dbg !2399
  %cmp1697 = icmp eq i32 %conv1696, 2, !dbg !2400
  br i1 %cmp1697, label %land.lhs.true1699, label %if.else1707, !dbg !2401

land.lhs.true1699:                                ; preds = %cond.end1692
  %943 = load i8*, i8** %p1, align 8, !dbg !2402
  %arrayidx1700 = getelementptr inbounds i8, i8* %943, i64 5, !dbg !2402
  %944 = load i8, i8* %arrayidx1700, align 1, !dbg !2402
  %conv1701 = zext i8 %944 to i32, !dbg !2402
  %945 = load i8, i8* %c1684, align 1, !dbg !2403
  %conv1702 = zext i8 %945 to i32, !dbg !2403
  %cmp1703 = icmp ne i32 %conv1701, %conv1702, !dbg !2404
  br i1 %cmp1703, label %if.then1705, label %if.else1707, !dbg !2405

if.then1705:                                      ; preds = %land.lhs.true1699
  %946 = load i8*, i8** %p, align 8, !dbg !2406
  %arrayidx1706 = getelementptr inbounds i8, i8* %946, i64 -3, !dbg !2406
  store i8 17, i8* %arrayidx1706, align 1, !dbg !2408
  br label %if.end1751, !dbg !2409

if.else1707:                                      ; preds = %land.lhs.true1699, %cond.end1692
  %947 = load i8*, i8** %p1, align 8, !dbg !2410
  %arrayidx1708 = getelementptr inbounds i8, i8* %947, i64 3, !dbg !2410
  %948 = load i8, i8* %arrayidx1708, align 1, !dbg !2410
  %conv1709 = zext i8 %948 to i32, !dbg !2412
  %cmp1710 = icmp eq i32 %conv1709, 4, !dbg !2413
  br i1 %cmp1710, label %if.then1717, label %lor.lhs.false1712, !dbg !2414

lor.lhs.false1712:                                ; preds = %if.else1707
  %949 = load i8*, i8** %p1, align 8, !dbg !2415
  %arrayidx1713 = getelementptr inbounds i8, i8* %949, i64 3, !dbg !2415
  %950 = load i8, i8* %arrayidx1713, align 1, !dbg !2415
  %conv1714 = zext i8 %950 to i32, !dbg !2416
  %cmp1715 = icmp eq i32 %conv1714, 5, !dbg !2417
  br i1 %cmp1715, label %if.then1717, label %if.end1750, !dbg !2418

if.then1717:                                      ; preds = %lor.lhs.false1712, %if.else1707
  call void @llvm.dbg.declare(metadata i32* %negate1718, metadata !2419, metadata !DIExpression()), !dbg !2421
  %951 = load i8*, i8** %p1, align 8, !dbg !2422
  %arrayidx1719 = getelementptr inbounds i8, i8* %951, i64 3, !dbg !2422
  %952 = load i8, i8* %arrayidx1719, align 1, !dbg !2422
  %conv1720 = zext i8 %952 to i32, !dbg !2423
  %cmp1721 = icmp eq i32 %conv1720, 5, !dbg !2424
  %conv1722 = zext i1 %cmp1721 to i32, !dbg !2424
  store i32 %conv1722, i32* %negate1718, align 4, !dbg !2421
  %953 = load i8, i8* %c1684, align 1, !dbg !2425
  %conv1723 = zext i8 %953 to i32, !dbg !2425
  %954 = load i8*, i8** %p1, align 8, !dbg !2427
  %arrayidx1724 = getelementptr inbounds i8, i8* %954, i64 4, !dbg !2427
  %955 = load i8, i8* %arrayidx1724, align 1, !dbg !2427
  %conv1725 = zext i8 %955 to i32, !dbg !2427
  %mul1726 = mul nsw i32 %conv1725, 8, !dbg !2428
  %cmp1727 = icmp ult i32 %conv1723, %mul1726, !dbg !2429
  br i1 %cmp1727, label %land.lhs.true1729, label %if.end1745, !dbg !2430

land.lhs.true1729:                                ; preds = %if.then1717
  %956 = load i8*, i8** %p1, align 8, !dbg !2431
  %957 = load i8, i8* %c1684, align 1, !dbg !2432
  %conv1730 = zext i8 %957 to i32, !dbg !2432
  %div1731 = sdiv i32 %conv1730, 8, !dbg !2433
  %add1732 = add nsw i32 5, %div1731, !dbg !2434
  %idxprom1733 = sext i32 %add1732 to i64, !dbg !2431
  %arrayidx1734 = getelementptr inbounds i8, i8* %956, i64 %idxprom1733, !dbg !2431
  %958 = load i8, i8* %arrayidx1734, align 1, !dbg !2431
  %conv1735 = zext i8 %958 to i32, !dbg !2431
  %959 = load i8, i8* %c1684, align 1, !dbg !2435
  %conv1736 = zext i8 %959 to i32, !dbg !2435
  %rem1737 = srem i32 %conv1736, 8, !dbg !2436
  %shl1738 = shl i32 1, %rem1737, !dbg !2437
  %and1739 = and i32 %conv1735, %shl1738, !dbg !2438
  %tobool1740 = icmp ne i32 %and1739, 0, !dbg !2438
  br i1 %tobool1740, label %if.then1741, label %if.end1745, !dbg !2439

if.then1741:                                      ; preds = %land.lhs.true1729
  %960 = load i32, i32* %negate1718, align 4, !dbg !2440
  %tobool1742 = icmp ne i32 %960, 0, !dbg !2441
  %lnot1743 = xor i1 %tobool1742, true, !dbg !2441
  %lnot.ext1744 = zext i1 %lnot1743 to i32, !dbg !2441
  store i32 %lnot.ext1744, i32* %negate1718, align 4, !dbg !2442
  br label %if.end1745, !dbg !2443

if.end1745:                                       ; preds = %if.then1741, %land.lhs.true1729, %if.then1717
  %961 = load i32, i32* %negate1718, align 4, !dbg !2444
  %tobool1746 = icmp ne i32 %961, 0, !dbg !2444
  br i1 %tobool1746, label %if.end1749, label %if.then1747, !dbg !2446

if.then1747:                                      ; preds = %if.end1745
  %962 = load i8*, i8** %p, align 8, !dbg !2447
  %arrayidx1748 = getelementptr inbounds i8, i8* %962, i64 -3, !dbg !2447
  store i8 17, i8* %arrayidx1748, align 1, !dbg !2449
  br label %if.end1749, !dbg !2450

if.end1749:                                       ; preds = %if.then1747, %if.end1745
  br label %if.end1750, !dbg !2451

if.end1750:                                       ; preds = %if.end1749, %lor.lhs.false1712
  br label %if.end1751

if.end1751:                                       ; preds = %if.end1750, %if.then1705
  br label %if.end1884, !dbg !2452

if.else1752:                                      ; preds = %land.lhs.true1679, %lor.lhs.false1673
  %963 = load i8*, i8** %p2, align 8, !dbg !2453
  %964 = load i8, i8* %963, align 1, !dbg !2455
  %conv1753 = zext i8 %964 to i32, !dbg !2456
  %cmp1754 = icmp eq i32 %conv1753, 4, !dbg !2457
  br i1 %cmp1754, label %if.then1756, label %if.end1883, !dbg !2458

if.then1756:                                      ; preds = %if.else1752
  %965 = load i8*, i8** %p1, align 8, !dbg !2459
  %arrayidx1757 = getelementptr inbounds i8, i8* %965, i64 3, !dbg !2459
  %966 = load i8, i8* %arrayidx1757, align 1, !dbg !2459
  %conv1758 = zext i8 %966 to i32, !dbg !2462
  %cmp1759 = icmp eq i32 %conv1758, 2, !dbg !2463
  br i1 %cmp1759, label %land.lhs.true1761, label %if.else1785, !dbg !2464

land.lhs.true1761:                                ; preds = %if.then1756
  %967 = load i8*, i8** %p2, align 8, !dbg !2465
  %arrayidx1762 = getelementptr inbounds i8, i8* %967, i64 1, !dbg !2465
  %968 = load i8, i8* %arrayidx1762, align 1, !dbg !2465
  %conv1763 = zext i8 %968 to i32, !dbg !2466
  %mul1764 = mul nsw i32 %conv1763, 8, !dbg !2467
  %969 = load i8*, i8** %p1, align 8, !dbg !2468
  %arrayidx1765 = getelementptr inbounds i8, i8* %969, i64 5, !dbg !2468
  %970 = load i8, i8* %arrayidx1765, align 1, !dbg !2468
  %conv1766 = zext i8 %970 to i32, !dbg !2469
  %cmp1767 = icmp sgt i32 %mul1764, %conv1766, !dbg !2470
  br i1 %cmp1767, label %land.lhs.true1769, label %if.then1783, !dbg !2471

land.lhs.true1769:                                ; preds = %land.lhs.true1761
  %971 = load i8*, i8** %p2, align 8, !dbg !2472
  %972 = load i8*, i8** %p1, align 8, !dbg !2473
  %arrayidx1770 = getelementptr inbounds i8, i8* %972, i64 5, !dbg !2473
  %973 = load i8, i8* %arrayidx1770, align 1, !dbg !2473
  %conv1771 = zext i8 %973 to i32, !dbg !2473
  %div1772 = sdiv i32 %conv1771, 8, !dbg !2474
  %add1773 = add nsw i32 2, %div1772, !dbg !2475
  %idxprom1774 = sext i32 %add1773 to i64, !dbg !2472
  %arrayidx1775 = getelementptr inbounds i8, i8* %971, i64 %idxprom1774, !dbg !2472
  %974 = load i8, i8* %arrayidx1775, align 1, !dbg !2472
  %conv1776 = zext i8 %974 to i32, !dbg !2472
  %975 = load i8*, i8** %p1, align 8, !dbg !2476
  %arrayidx1777 = getelementptr inbounds i8, i8* %975, i64 5, !dbg !2476
  %976 = load i8, i8* %arrayidx1777, align 1, !dbg !2476
  %conv1778 = zext i8 %976 to i32, !dbg !2476
  %rem1779 = srem i32 %conv1778, 8, !dbg !2477
  %shl1780 = shl i32 1, %rem1779, !dbg !2478
  %and1781 = and i32 %conv1776, %shl1780, !dbg !2479
  %tobool1782 = icmp ne i32 %and1781, 0, !dbg !2479
  br i1 %tobool1782, label %if.else1785, label %if.then1783, !dbg !2480

if.then1783:                                      ; preds = %land.lhs.true1769, %land.lhs.true1761
  %977 = load i8*, i8** %p, align 8, !dbg !2481
  %arrayidx1784 = getelementptr inbounds i8, i8* %977, i64 -3, !dbg !2481
  store i8 17, i8* %arrayidx1784, align 1, !dbg !2483
  br label %if.end1882, !dbg !2484

if.else1785:                                      ; preds = %land.lhs.true1769, %if.then1756
  %978 = load i8*, i8** %p1, align 8, !dbg !2485
  %arrayidx1786 = getelementptr inbounds i8, i8* %978, i64 3, !dbg !2485
  %979 = load i8, i8* %arrayidx1786, align 1, !dbg !2485
  %conv1787 = zext i8 %979 to i32, !dbg !2487
  %cmp1788 = icmp eq i32 %conv1787, 5, !dbg !2488
  br i1 %cmp1788, label %if.then1790, label %if.else1832, !dbg !2489

if.then1790:                                      ; preds = %if.else1785
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !2490, metadata !DIExpression()), !dbg !2492
  store i32 0, i32* %idx, align 4, !dbg !2493
  br label %for.cond1791, !dbg !2495

for.cond1791:                                     ; preds = %for.inc1822, %if.then1790
  %980 = load i32, i32* %idx, align 4, !dbg !2496
  %981 = load i8*, i8** %p2, align 8, !dbg !2498
  %arrayidx1792 = getelementptr inbounds i8, i8* %981, i64 1, !dbg !2498
  %982 = load i8, i8* %arrayidx1792, align 1, !dbg !2498
  %conv1793 = zext i8 %982 to i32, !dbg !2499
  %cmp1794 = icmp slt i32 %980, %conv1793, !dbg !2500
  br i1 %cmp1794, label %for.body1796, label %for.end1824, !dbg !2501

for.body1796:                                     ; preds = %for.cond1791
  %983 = load i8*, i8** %p2, align 8, !dbg !2502
  %984 = load i32, i32* %idx, align 4, !dbg !2504
  %add1797 = add nsw i32 2, %984, !dbg !2505
  %idxprom1798 = sext i32 %add1797 to i64, !dbg !2502
  %arrayidx1799 = getelementptr inbounds i8, i8* %983, i64 %idxprom1798, !dbg !2502
  %985 = load i8, i8* %arrayidx1799, align 1, !dbg !2502
  %conv1800 = zext i8 %985 to i32, !dbg !2502
  %cmp1801 = icmp eq i32 %conv1800, 0, !dbg !2506
  br i1 %cmp1801, label %if.end1821, label %lor.lhs.false1803, !dbg !2507

lor.lhs.false1803:                                ; preds = %for.body1796
  %986 = load i32, i32* %idx, align 4, !dbg !2508
  %987 = load i8*, i8** %p1, align 8, !dbg !2509
  %arrayidx1804 = getelementptr inbounds i8, i8* %987, i64 4, !dbg !2509
  %988 = load i8, i8* %arrayidx1804, align 1, !dbg !2509
  %conv1805 = zext i8 %988 to i32, !dbg !2510
  %cmp1806 = icmp slt i32 %986, %conv1805, !dbg !2511
  br i1 %cmp1806, label %land.lhs.true1808, label %if.then1820, !dbg !2512

land.lhs.true1808:                                ; preds = %lor.lhs.false1803
  %989 = load i8*, i8** %p2, align 8, !dbg !2513
  %990 = load i32, i32* %idx, align 4, !dbg !2514
  %add1809 = add nsw i32 2, %990, !dbg !2515
  %idxprom1810 = sext i32 %add1809 to i64, !dbg !2513
  %arrayidx1811 = getelementptr inbounds i8, i8* %989, i64 %idxprom1810, !dbg !2513
  %991 = load i8, i8* %arrayidx1811, align 1, !dbg !2513
  %conv1812 = zext i8 %991 to i32, !dbg !2513
  %992 = load i8*, i8** %p1, align 8, !dbg !2516
  %993 = load i32, i32* %idx, align 4, !dbg !2517
  %add1813 = add nsw i32 5, %993, !dbg !2518
  %idxprom1814 = sext i32 %add1813 to i64, !dbg !2516
  %arrayidx1815 = getelementptr inbounds i8, i8* %992, i64 %idxprom1814, !dbg !2516
  %994 = load i8, i8* %arrayidx1815, align 1, !dbg !2516
  %conv1816 = zext i8 %994 to i32, !dbg !2516
  %neg = xor i32 %conv1816, -1, !dbg !2519
  %and1817 = and i32 %conv1812, %neg, !dbg !2520
  %cmp1818 = icmp eq i32 %and1817, 0, !dbg !2521
  br i1 %cmp1818, label %if.end1821, label %if.then1820, !dbg !2522

if.then1820:                                      ; preds = %land.lhs.true1808, %lor.lhs.false1803
  br label %for.end1824, !dbg !2523

if.end1821:                                       ; preds = %land.lhs.true1808, %for.body1796
  br label %for.inc1822, !dbg !2524

for.inc1822:                                      ; preds = %if.end1821
  %995 = load i32, i32* %idx, align 4, !dbg !2525
  %inc1823 = add nsw i32 %995, 1, !dbg !2525
  store i32 %inc1823, i32* %idx, align 4, !dbg !2525
  br label %for.cond1791, !dbg !2526, !llvm.loop !2527

for.end1824:                                      ; preds = %if.then1820, %for.cond1791
  %996 = load i32, i32* %idx, align 4, !dbg !2529
  %997 = load i8*, i8** %p2, align 8, !dbg !2531
  %arrayidx1825 = getelementptr inbounds i8, i8* %997, i64 1, !dbg !2531
  %998 = load i8, i8* %arrayidx1825, align 1, !dbg !2531
  %conv1826 = zext i8 %998 to i32, !dbg !2531
  %cmp1827 = icmp eq i32 %996, %conv1826, !dbg !2532
  br i1 %cmp1827, label %if.then1829, label %if.end1831, !dbg !2533

if.then1829:                                      ; preds = %for.end1824
  %999 = load i8*, i8** %p, align 8, !dbg !2534
  %arrayidx1830 = getelementptr inbounds i8, i8* %999, i64 -3, !dbg !2534
  store i8 17, i8* %arrayidx1830, align 1, !dbg !2536
  br label %if.end1831, !dbg !2537

if.end1831:                                       ; preds = %if.then1829, %for.end1824
  br label %if.end1881, !dbg !2538

if.else1832:                                      ; preds = %if.else1785
  %1000 = load i8*, i8** %p1, align 8, !dbg !2539
  %arrayidx1833 = getelementptr inbounds i8, i8* %1000, i64 3, !dbg !2539
  %1001 = load i8, i8* %arrayidx1833, align 1, !dbg !2539
  %conv1834 = zext i8 %1001 to i32, !dbg !2541
  %cmp1835 = icmp eq i32 %conv1834, 4, !dbg !2542
  br i1 %cmp1835, label %if.then1837, label %if.end1880, !dbg !2543

if.then1837:                                      ; preds = %if.else1832
  call void @llvm.dbg.declare(metadata i32* %idx1838, metadata !2544, metadata !DIExpression()), !dbg !2546
  store i32 0, i32* %idx1838, align 4, !dbg !2547
  br label %for.cond1839, !dbg !2549

for.cond1839:                                     ; preds = %for.inc1865, %if.then1837
  %1002 = load i32, i32* %idx1838, align 4, !dbg !2550
  %1003 = load i8*, i8** %p2, align 8, !dbg !2552
  %arrayidx1840 = getelementptr inbounds i8, i8* %1003, i64 1, !dbg !2552
  %1004 = load i8, i8* %arrayidx1840, align 1, !dbg !2552
  %conv1841 = zext i8 %1004 to i32, !dbg !2553
  %cmp1842 = icmp slt i32 %1002, %conv1841, !dbg !2554
  br i1 %cmp1842, label %land.rhs1844, label %land.end1849, !dbg !2555

land.rhs1844:                                     ; preds = %for.cond1839
  %1005 = load i32, i32* %idx1838, align 4, !dbg !2556
  %1006 = load i8*, i8** %p1, align 8, !dbg !2557
  %arrayidx1845 = getelementptr inbounds i8, i8* %1006, i64 4, !dbg !2557
  %1007 = load i8, i8* %arrayidx1845, align 1, !dbg !2557
  %conv1846 = zext i8 %1007 to i32, !dbg !2558
  %cmp1847 = icmp slt i32 %1005, %conv1846, !dbg !2559
  br label %land.end1849

land.end1849:                                     ; preds = %land.rhs1844, %for.cond1839
  %1008 = phi i1 [ false, %for.cond1839 ], [ %cmp1847, %land.rhs1844 ], !dbg !2560
  br i1 %1008, label %for.body1851, label %for.end1867, !dbg !2561

for.body1851:                                     ; preds = %land.end1849
  %1009 = load i8*, i8** %p2, align 8, !dbg !2562
  %1010 = load i32, i32* %idx1838, align 4, !dbg !2564
  %add1852 = add nsw i32 2, %1010, !dbg !2565
  %idxprom1853 = sext i32 %add1852 to i64, !dbg !2562
  %arrayidx1854 = getelementptr inbounds i8, i8* %1009, i64 %idxprom1853, !dbg !2562
  %1011 = load i8, i8* %arrayidx1854, align 1, !dbg !2562
  %conv1855 = zext i8 %1011 to i32, !dbg !2562
  %1012 = load i8*, i8** %p1, align 8, !dbg !2566
  %1013 = load i32, i32* %idx1838, align 4, !dbg !2567
  %add1856 = add nsw i32 5, %1013, !dbg !2568
  %idxprom1857 = sext i32 %add1856 to i64, !dbg !2566
  %arrayidx1858 = getelementptr inbounds i8, i8* %1012, i64 %idxprom1857, !dbg !2566
  %1014 = load i8, i8* %arrayidx1858, align 1, !dbg !2566
  %conv1859 = zext i8 %1014 to i32, !dbg !2566
  %and1860 = and i32 %conv1855, %conv1859, !dbg !2569
  %cmp1861 = icmp ne i32 %and1860, 0, !dbg !2570
  br i1 %cmp1861, label %if.then1863, label %if.end1864, !dbg !2571

if.then1863:                                      ; preds = %for.body1851
  br label %for.end1867, !dbg !2572

if.end1864:                                       ; preds = %for.body1851
  br label %for.inc1865, !dbg !2573

for.inc1865:                                      ; preds = %if.end1864
  %1015 = load i32, i32* %idx1838, align 4, !dbg !2574
  %inc1866 = add nsw i32 %1015, 1, !dbg !2574
  store i32 %inc1866, i32* %idx1838, align 4, !dbg !2574
  br label %for.cond1839, !dbg !2575, !llvm.loop !2576

for.end1867:                                      ; preds = %if.then1863, %land.end1849
  %1016 = load i32, i32* %idx1838, align 4, !dbg !2578
  %1017 = load i8*, i8** %p2, align 8, !dbg !2580
  %arrayidx1868 = getelementptr inbounds i8, i8* %1017, i64 1, !dbg !2580
  %1018 = load i8, i8* %arrayidx1868, align 1, !dbg !2580
  %conv1869 = zext i8 %1018 to i32, !dbg !2580
  %cmp1870 = icmp eq i32 %1016, %conv1869, !dbg !2581
  br i1 %cmp1870, label %if.then1877, label %lor.lhs.false1872, !dbg !2582

lor.lhs.false1872:                                ; preds = %for.end1867
  %1019 = load i32, i32* %idx1838, align 4, !dbg !2583
  %1020 = load i8*, i8** %p1, align 8, !dbg !2584
  %arrayidx1873 = getelementptr inbounds i8, i8* %1020, i64 4, !dbg !2584
  %1021 = load i8, i8* %arrayidx1873, align 1, !dbg !2584
  %conv1874 = zext i8 %1021 to i32, !dbg !2584
  %cmp1875 = icmp eq i32 %1019, %conv1874, !dbg !2585
  br i1 %cmp1875, label %if.then1877, label %if.end1879, !dbg !2586

if.then1877:                                      ; preds = %lor.lhs.false1872, %for.end1867
  %1022 = load i8*, i8** %p, align 8, !dbg !2587
  %arrayidx1878 = getelementptr inbounds i8, i8* %1022, i64 -3, !dbg !2587
  store i8 17, i8* %arrayidx1878, align 1, !dbg !2589
  br label %if.end1879, !dbg !2590

if.end1879:                                       ; preds = %if.then1877, %lor.lhs.false1872
  br label %if.end1880, !dbg !2591

if.end1880:                                       ; preds = %if.end1879, %if.else1832
  br label %if.end1881

if.end1881:                                       ; preds = %if.end1880, %if.end1831
  br label %if.end1882

if.end1882:                                       ; preds = %if.end1881, %if.then1783
  br label %if.end1883, !dbg !2592

if.end1883:                                       ; preds = %if.end1882, %if.else1752
  br label %if.end1884

if.end1884:                                       ; preds = %if.end1883, %if.end1751
  br label %if.end1885

if.end1885:                                       ; preds = %if.end1884, %if.then1667
  %1023 = load i8*, i8** %p, align 8, !dbg !2593
  %add.ptr1886 = getelementptr inbounds i8, i8* %1023, i64 -2, !dbg !2593
  store i8* %add.ptr1886, i8** %p, align 8, !dbg !2593
  %1024 = load i8*, i8** %p, align 8, !dbg !2594
  %arrayidx1887 = getelementptr inbounds i8, i8* %1024, i64 -1, !dbg !2594
  %1025 = load i8, i8* %arrayidx1887, align 1, !dbg !2594
  %conv1888 = zext i8 %1025 to i32, !dbg !2596
  %cmp1889 = icmp ne i32 %conv1888, 17, !dbg !2597
  br i1 %cmp1889, label %if.then1891, label %if.end1893, !dbg !2598

if.then1891:                                      ; preds = %if.end1885
  %1026 = load i8*, i8** %p, align 8, !dbg !2599
  %arrayidx1892 = getelementptr inbounds i8, i8* %1026, i64 -1, !dbg !2599
  store i8 13, i8* %arrayidx1892, align 1, !dbg !2601
  br label %unconditional_jump, !dbg !2602

if.end1893:                                       ; preds = %if.end1885
  br label %sw.bb1894, !dbg !2603

sw.bb1894:                                        ; preds = %if.end572, %if.end1893
  call void @llvm.dbg.declare(metadata i64* %dummy_low_reg, metadata !2604, metadata !DIExpression()), !dbg !2606
  call void @llvm.dbg.declare(metadata i64* %dummy_high_reg, metadata !2607, metadata !DIExpression()), !dbg !2608
  call void @llvm.dbg.declare(metadata i8** %pdummy, metadata !2609, metadata !DIExpression()), !dbg !2610
  store i8* null, i8** %pdummy, align 8, !dbg !2610
  call void @llvm.dbg.declare(metadata i8** %sdummy, metadata !2611, metadata !DIExpression()), !dbg !2612
  store i8* null, i8** %sdummy, align 8, !dbg !2612
  call void @llvm.dbg.declare(metadata i64* %this_reg1895, metadata !2613, metadata !DIExpression()), !dbg !2615
  call void @llvm.dbg.declare(metadata i8** %string_temp, metadata !2616, metadata !DIExpression()), !dbg !2615
  %stack1896 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2615
  %1027 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1896, align 8, !dbg !2615
  %avail1897 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2615
  %1028 = load i32, i32* %avail1897, align 4, !dbg !2615
  %dec1898 = add i32 %1028, -1, !dbg !2615
  store i32 %dec1898, i32* %avail1897, align 4, !dbg !2615
  %idxprom1899 = zext i32 %dec1898 to i64, !dbg !2615
  %arrayidx1900 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1027, i64 %idxprom1899, !dbg !2615
  %pointer1901 = bitcast %union.byte_fail_stack_elt* %arrayidx1900 to i8**, !dbg !2615
  %1029 = load i8*, i8** %pointer1901, align 8, !dbg !2615
  store i8* %1029, i8** %string_temp, align 8, !dbg !2615
  %1030 = load i8*, i8** %string_temp, align 8, !dbg !2617
  %cmp1902 = icmp ne i8* %1030, null, !dbg !2617
  br i1 %cmp1902, label %if.then1904, label %if.end1905, !dbg !2615

if.then1904:                                      ; preds = %sw.bb1894
  %1031 = load i8*, i8** %string_temp, align 8, !dbg !2617
  store i8* %1031, i8** %sdummy, align 8, !dbg !2617
  br label %if.end1905, !dbg !2617

if.end1905:                                       ; preds = %if.then1904, %sw.bb1894
  %stack1906 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2615
  %1032 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1906, align 8, !dbg !2615
  %avail1907 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2615
  %1033 = load i32, i32* %avail1907, align 4, !dbg !2615
  %dec1908 = add i32 %1033, -1, !dbg !2615
  store i32 %dec1908, i32* %avail1907, align 4, !dbg !2615
  %idxprom1909 = zext i32 %dec1908 to i64, !dbg !2615
  %arrayidx1910 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1032, i64 %idxprom1909, !dbg !2615
  %pointer1911 = bitcast %union.byte_fail_stack_elt* %arrayidx1910 to i8**, !dbg !2615
  %1034 = load i8*, i8** %pointer1911, align 8, !dbg !2615
  store i8* %1034, i8** %pdummy, align 8, !dbg !2615
  %stack1912 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2615
  %1035 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1912, align 8, !dbg !2615
  %avail1913 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2615
  %1036 = load i32, i32* %avail1913, align 4, !dbg !2615
  %dec1914 = add i32 %1036, -1, !dbg !2615
  store i32 %dec1914, i32* %avail1913, align 4, !dbg !2615
  %idxprom1915 = zext i32 %dec1914 to i64, !dbg !2615
  %arrayidx1916 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1035, i64 %idxprom1915, !dbg !2615
  %integer1917 = bitcast %union.byte_fail_stack_elt* %arrayidx1916 to i32*, !dbg !2615
  %1037 = load i32, i32* %integer1917, align 8, !dbg !2615
  %conv1918 = sext i32 %1037 to i64, !dbg !2615
  store i64 %conv1918, i64* %dummy_high_reg, align 8, !dbg !2615
  %stack1919 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2615
  %1038 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1919, align 8, !dbg !2615
  %avail1920 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2615
  %1039 = load i32, i32* %avail1920, align 4, !dbg !2615
  %dec1921 = add i32 %1039, -1, !dbg !2615
  store i32 %dec1921, i32* %avail1920, align 4, !dbg !2615
  %idxprom1922 = zext i32 %dec1921 to i64, !dbg !2615
  %arrayidx1923 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1038, i64 %idxprom1922, !dbg !2615
  %integer1924 = bitcast %union.byte_fail_stack_elt* %arrayidx1923 to i32*, !dbg !2615
  %1040 = load i32, i32* %integer1924, align 8, !dbg !2615
  %conv1925 = sext i32 %1040 to i64, !dbg !2615
  store i64 %conv1925, i64* %dummy_low_reg, align 8, !dbg !2615
  %1041 = load i64, i64* %dummy_high_reg, align 8, !dbg !2619
  store i64 %1041, i64* %this_reg1895, align 8, !dbg !2619
  br label %for.cond1926, !dbg !2619

for.cond1926:                                     ; preds = %for.inc1951, %if.end1905
  %1042 = load i64, i64* %this_reg1895, align 8, !dbg !2622
  %1043 = load i64, i64* %dummy_low_reg, align 8, !dbg !2622
  %cmp1927 = icmp uge i64 %1042, %1043, !dbg !2622
  br i1 %cmp1927, label %for.body1929, label %for.end1953, !dbg !2619

for.body1929:                                     ; preds = %for.cond1926
  %1044 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !2624
  %1045 = load i64, i64* %this_reg1895, align 8, !dbg !2624
  %arrayidx1930 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %1044, i64 %1045, !dbg !2624
  %word1931 = bitcast %union.byte_register_info_type* %arrayidx1930 to %union.byte_fail_stack_elt*, !dbg !2624
  %stack1932 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2624
  %1046 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1932, align 8, !dbg !2624
  %avail1933 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2624
  %1047 = load i32, i32* %avail1933, align 4, !dbg !2624
  %dec1934 = add i32 %1047, -1, !dbg !2624
  store i32 %dec1934, i32* %avail1933, align 4, !dbg !2624
  %idxprom1935 = zext i32 %dec1934 to i64, !dbg !2624
  %arrayidx1936 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1046, i64 %idxprom1935, !dbg !2624
  %1048 = bitcast %union.byte_fail_stack_elt* %word1931 to i8*, !dbg !2624
  %1049 = bitcast %union.byte_fail_stack_elt* %arrayidx1936 to i8*, !dbg !2624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1048, i8* align 8 %1049, i64 8, i1 false), !dbg !2624
  %stack1937 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2624
  %1050 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1937, align 8, !dbg !2624
  %avail1938 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2624
  %1051 = load i32, i32* %avail1938, align 4, !dbg !2624
  %dec1939 = add i32 %1051, -1, !dbg !2624
  store i32 %dec1939, i32* %avail1938, align 4, !dbg !2624
  %idxprom1940 = zext i32 %dec1939 to i64, !dbg !2624
  %arrayidx1941 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1050, i64 %idxprom1940, !dbg !2624
  %pointer1942 = bitcast %union.byte_fail_stack_elt* %arrayidx1941 to i8**, !dbg !2624
  %1052 = load i8*, i8** %pointer1942, align 8, !dbg !2624
  %1053 = load i8**, i8*** %reg_dummy, align 8, !dbg !2624
  %1054 = load i64, i64* %this_reg1895, align 8, !dbg !2624
  %arrayidx1943 = getelementptr inbounds i8*, i8** %1053, i64 %1054, !dbg !2624
  store i8* %1052, i8** %arrayidx1943, align 8, !dbg !2624
  %stack1944 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2624
  %1055 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1944, align 8, !dbg !2624
  %avail1945 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2624
  %1056 = load i32, i32* %avail1945, align 4, !dbg !2624
  %dec1946 = add i32 %1056, -1, !dbg !2624
  store i32 %dec1946, i32* %avail1945, align 4, !dbg !2624
  %idxprom1947 = zext i32 %dec1946 to i64, !dbg !2624
  %arrayidx1948 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1055, i64 %idxprom1947, !dbg !2624
  %pointer1949 = bitcast %union.byte_fail_stack_elt* %arrayidx1948 to i8**, !dbg !2624
  %1057 = load i8*, i8** %pointer1949, align 8, !dbg !2624
  %1058 = load i8**, i8*** %reg_dummy, align 8, !dbg !2624
  %1059 = load i64, i64* %this_reg1895, align 8, !dbg !2624
  %arrayidx1950 = getelementptr inbounds i8*, i8** %1058, i64 %1059, !dbg !2624
  store i8* %1057, i8** %arrayidx1950, align 8, !dbg !2624
  br label %for.inc1951, !dbg !2624

for.inc1951:                                      ; preds = %for.body1929
  %1060 = load i64, i64* %this_reg1895, align 8, !dbg !2622
  %dec1952 = add i64 %1060, -1, !dbg !2622
  store i64 %dec1952, i64* %this_reg1895, align 8, !dbg !2622
  br label %for.cond1926, !dbg !2622, !llvm.loop !2626

for.end1953:                                      ; preds = %for.cond1926
  store i32 0, i32* %set_regs_matched_done, align 4, !dbg !2615
  br label %unconditional_jump, !dbg !2627

unconditional_jump:                               ; preds = %do.end2233, %do.end2070, %sw.bb1970, %for.end1953, %if.then1891
  call void @llvm.dbg.label(metadata !2628), !dbg !2629
  br label %sw.bb1954, !dbg !2627

sw.bb1954:                                        ; preds = %if.end572, %unconditional_jump
  br label %do.body1955, !dbg !2630

do.body1955:                                      ; preds = %sw.bb1954
  br label %do.body1956, !dbg !2631

do.body1956:                                      ; preds = %do.body1955
  %1061 = load i8*, i8** %p, align 8, !dbg !2633
  %1062 = load i8, i8* %1061, align 1, !dbg !2633
  %conv1957 = zext i8 %1062 to i32, !dbg !2633
  %and1958 = and i32 %conv1957, 255, !dbg !2633
  store i32 %and1958, i32* %mcnt, align 4, !dbg !2633
  %1063 = load i8*, i8** %p, align 8, !dbg !2633
  %add.ptr1959 = getelementptr inbounds i8, i8* %1063, i64 1, !dbg !2633
  %1064 = load i8, i8* %add.ptr1959, align 1, !dbg !2633
  %conv1960 = sext i8 %1064 to i32, !dbg !2633
  %shl1961 = shl i32 %conv1960, 8, !dbg !2633
  %1065 = load i32, i32* %mcnt, align 4, !dbg !2633
  %add1962 = add nsw i32 %1065, %shl1961, !dbg !2633
  store i32 %add1962, i32* %mcnt, align 4, !dbg !2633
  br label %do.end1964, !dbg !2633

do.end1964:                                       ; preds = %do.body1956
  %1066 = load i8*, i8** %p, align 8, !dbg !2631
  %add.ptr1965 = getelementptr inbounds i8, i8* %1066, i64 2, !dbg !2631
  store i8* %add.ptr1965, i8** %p, align 8, !dbg !2631
  br label %do.end1967, !dbg !2631

do.end1967:                                       ; preds = %do.end1964
  %1067 = load i32, i32* %mcnt, align 4, !dbg !2635
  %1068 = load i8*, i8** %p, align 8, !dbg !2636
  %idx.ext1968 = sext i32 %1067 to i64, !dbg !2636
  %add.ptr1969 = getelementptr inbounds i8, i8* %1068, i64 %idx.ext1968, !dbg !2636
  store i8* %add.ptr1969, i8** %p, align 8, !dbg !2636
  br label %sw.epilog2674, !dbg !2637

sw.bb1970:                                        ; preds = %if.end572
  br label %unconditional_jump, !dbg !2638

sw.bb1971:                                        ; preds = %if.end572
  br label %do.body1972, !dbg !2639

do.body1972:                                      ; preds = %sw.bb1971
  call void @llvm.dbg.declare(metadata i8** %destination1973, metadata !2640, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.declare(metadata i64* %this_reg1974, metadata !2643, metadata !DIExpression()), !dbg !2642
  br label %while.cond1975, !dbg !2642

while.cond1975:                                   ; preds = %if.end2013, %do.body1972
  %size1976 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2642
  %1069 = load i32, i32* %size1976, align 8, !dbg !2642
  %avail1977 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2642
  %1070 = load i32, i32* %avail1977, align 4, !dbg !2642
  %sub1978 = sub i32 %1069, %1070, !dbg !2642
  %conv1979 = zext i32 %sub1978 to i64, !dbg !2642
  %1071 = load i64, i64* %highest_active_reg, align 8, !dbg !2642
  %1072 = load i64, i64* %lowest_active_reg, align 8, !dbg !2642
  %sub1980 = sub i64 %1071, %1072, !dbg !2642
  %add1981 = add i64 %sub1980, 1, !dbg !2642
  %mul1982 = mul i64 %add1981, 3, !dbg !2642
  %add1983 = add i64 %mul1982, 4, !dbg !2642
  %cmp1984 = icmp ult i64 %conv1979, %add1983, !dbg !2642
  br i1 %cmp1984, label %while.body1986, label %while.end2014, !dbg !2642

while.body1986:                                   ; preds = %while.cond1975
  %size1987 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2644
  %1073 = load i32, i32* %size1987, align 8, !dbg !2644
  %1074 = load i32, i32* @xre_max_failures, align 4, !dbg !2644
  %mul1988 = mul nsw i32 %1074, 19, !dbg !2644
  %cmp1989 = icmp ugt i32 %1073, %mul1988, !dbg !2644
  br i1 %cmp1989, label %cond.true1991, label %cond.false1992, !dbg !2647

cond.true1991:                                    ; preds = %while.body1986
  br i1 false, label %if.end2013, label %if.then2012, !dbg !2644

cond.false1992:                                   ; preds = %while.body1986
  %size1993 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2644
  %1075 = load i32, i32* %size1993, align 8, !dbg !2644
  %shl1994 = shl i32 %1075, 1, !dbg !2644
  %conv1995 = zext i32 %shl1994 to i64, !dbg !2644
  %mul1996 = mul i64 %conv1995, 8, !dbg !2644
  %1076 = alloca i8, i64 %mul1996, align 16, !dbg !2644
  store i8* %1076, i8** %destination1973, align 8, !dbg !2644
  %1077 = load i8*, i8** %destination1973, align 8, !dbg !2644
  %stack1997 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2644
  %1078 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack1997, align 8, !dbg !2644
  %1079 = bitcast %union.byte_fail_stack_elt* %1078 to i8*, !dbg !2644
  %size1998 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2644
  %1080 = load i32, i32* %size1998, align 8, !dbg !2644
  %conv1999 = zext i32 %1080 to i64, !dbg !2644
  %mul2000 = mul i64 %conv1999, 8, !dbg !2644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1077, i8* align 8 %1079, i64 %mul2000, i1 false), !dbg !2644
  %1081 = bitcast i8* %1077 to %union.byte_fail_stack_elt*, !dbg !2644
  %stack2001 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2644
  store %union.byte_fail_stack_elt* %1081, %union.byte_fail_stack_elt** %stack2001, align 8, !dbg !2644
  %stack2002 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2644
  %1082 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2002, align 8, !dbg !2644
  %cmp2003 = icmp eq %union.byte_fail_stack_elt* %1082, null, !dbg !2644
  br i1 %cmp2003, label %cond.true2005, label %cond.false2006, !dbg !2644

cond.true2005:                                    ; preds = %cond.false1992
  br label %cond.end2009, !dbg !2644

cond.false2006:                                   ; preds = %cond.false1992
  %size2007 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2644
  %1083 = load i32, i32* %size2007, align 8, !dbg !2644
  %shl2008 = shl i32 %1083, 1, !dbg !2644
  store i32 %shl2008, i32* %size2007, align 8, !dbg !2644
  br label %cond.end2009, !dbg !2644

cond.end2009:                                     ; preds = %cond.false2006, %cond.true2005
  %cond2010 = phi i32 [ 0, %cond.true2005 ], [ 1, %cond.false2006 ], !dbg !2644
  %tobool2011 = icmp ne i32 %cond2010, 0, !dbg !2644
  br i1 %tobool2011, label %if.end2013, label %if.then2012, !dbg !2647

if.then2012:                                      ; preds = %cond.end2009, %cond.true1991
  store i32 -2, i32* %retval, align 4, !dbg !2644
  br label %return, !dbg !2644

if.end2013:                                       ; preds = %cond.end2009, %cond.true1991
  br label %while.cond1975, !dbg !2642, !llvm.loop !2648

while.end2014:                                    ; preds = %while.cond1975
  %1084 = load i64, i64* %lowest_active_reg, align 8, !dbg !2649
  store i64 %1084, i64* %this_reg1974, align 8, !dbg !2649
  br label %for.cond2015, !dbg !2649

for.cond2015:                                     ; preds = %for.inc2040, %while.end2014
  %1085 = load i64, i64* %this_reg1974, align 8, !dbg !2652
  %1086 = load i64, i64* %highest_active_reg, align 8, !dbg !2652
  %cmp2016 = icmp ule i64 %1085, %1086, !dbg !2652
  br i1 %cmp2016, label %for.body2018, label %for.end2042, !dbg !2649

for.body2018:                                     ; preds = %for.cond2015
  %1087 = load i8**, i8*** %regstart, align 8, !dbg !2654
  %1088 = load i64, i64* %this_reg1974, align 8, !dbg !2654
  %arrayidx2019 = getelementptr inbounds i8*, i8** %1087, i64 %1088, !dbg !2654
  %1089 = load i8*, i8** %arrayidx2019, align 8, !dbg !2654
  %stack2020 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2654
  %1090 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2020, align 8, !dbg !2654
  %avail2021 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2654
  %1091 = load i32, i32* %avail2021, align 4, !dbg !2654
  %inc2022 = add i32 %1091, 1, !dbg !2654
  store i32 %inc2022, i32* %avail2021, align 4, !dbg !2654
  %idxprom2023 = zext i32 %1091 to i64, !dbg !2654
  %arrayidx2024 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1090, i64 %idxprom2023, !dbg !2654
  %pointer2025 = bitcast %union.byte_fail_stack_elt* %arrayidx2024 to i8**, !dbg !2654
  store i8* %1089, i8** %pointer2025, align 8, !dbg !2654
  %1092 = load i8**, i8*** %regend, align 8, !dbg !2654
  %1093 = load i64, i64* %this_reg1974, align 8, !dbg !2654
  %arrayidx2026 = getelementptr inbounds i8*, i8** %1092, i64 %1093, !dbg !2654
  %1094 = load i8*, i8** %arrayidx2026, align 8, !dbg !2654
  %stack2027 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2654
  %1095 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2027, align 8, !dbg !2654
  %avail2028 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2654
  %1096 = load i32, i32* %avail2028, align 4, !dbg !2654
  %inc2029 = add i32 %1096, 1, !dbg !2654
  store i32 %inc2029, i32* %avail2028, align 4, !dbg !2654
  %idxprom2030 = zext i32 %1096 to i64, !dbg !2654
  %arrayidx2031 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1095, i64 %idxprom2030, !dbg !2654
  %pointer2032 = bitcast %union.byte_fail_stack_elt* %arrayidx2031 to i8**, !dbg !2654
  store i8* %1094, i8** %pointer2032, align 8, !dbg !2654
  %stack2033 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2654
  %1097 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2033, align 8, !dbg !2654
  %avail2034 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2654
  %1098 = load i32, i32* %avail2034, align 4, !dbg !2654
  %inc2035 = add i32 %1098, 1, !dbg !2654
  store i32 %inc2035, i32* %avail2034, align 4, !dbg !2654
  %idxprom2036 = zext i32 %1098 to i64, !dbg !2654
  %arrayidx2037 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1097, i64 %idxprom2036, !dbg !2654
  %1099 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2654
  %1100 = load i64, i64* %this_reg1974, align 8, !dbg !2654
  %arrayidx2038 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %1099, i64 %1100, !dbg !2654
  %word2039 = bitcast %union.byte_register_info_type* %arrayidx2038 to %union.byte_fail_stack_elt*, !dbg !2654
  %1101 = bitcast %union.byte_fail_stack_elt* %arrayidx2037 to i8*, !dbg !2654
  %1102 = bitcast %union.byte_fail_stack_elt* %word2039 to i8*, !dbg !2654
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1101, i8* align 8 %1102, i64 8, i1 false), !dbg !2654
  br label %for.inc2040, !dbg !2654

for.inc2040:                                      ; preds = %for.body2018
  %1103 = load i64, i64* %this_reg1974, align 8, !dbg !2652
  %inc2041 = add i64 %1103, 1, !dbg !2652
  store i64 %inc2041, i64* %this_reg1974, align 8, !dbg !2652
  br label %for.cond2015, !dbg !2652, !llvm.loop !2656

for.end2042:                                      ; preds = %for.cond2015
  %1104 = load i64, i64* %lowest_active_reg, align 8, !dbg !2642
  %conv2043 = trunc i64 %1104 to i32, !dbg !2642
  %stack2044 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2642
  %1105 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2044, align 8, !dbg !2642
  %avail2045 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2642
  %1106 = load i32, i32* %avail2045, align 4, !dbg !2642
  %inc2046 = add i32 %1106, 1, !dbg !2642
  store i32 %inc2046, i32* %avail2045, align 4, !dbg !2642
  %idxprom2047 = zext i32 %1106 to i64, !dbg !2642
  %arrayidx2048 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1105, i64 %idxprom2047, !dbg !2642
  %integer2049 = bitcast %union.byte_fail_stack_elt* %arrayidx2048 to i32*, !dbg !2642
  store i32 %conv2043, i32* %integer2049, align 8, !dbg !2642
  %1107 = load i64, i64* %highest_active_reg, align 8, !dbg !2642
  %conv2050 = trunc i64 %1107 to i32, !dbg !2642
  %stack2051 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2642
  %1108 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2051, align 8, !dbg !2642
  %avail2052 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2642
  %1109 = load i32, i32* %avail2052, align 4, !dbg !2642
  %inc2053 = add i32 %1109, 1, !dbg !2642
  store i32 %inc2053, i32* %avail2052, align 4, !dbg !2642
  %idxprom2054 = zext i32 %1109 to i64, !dbg !2642
  %arrayidx2055 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1108, i64 %idxprom2054, !dbg !2642
  %integer2056 = bitcast %union.byte_fail_stack_elt* %arrayidx2055 to i32*, !dbg !2642
  store i32 %conv2050, i32* %integer2056, align 8, !dbg !2642
  %stack2057 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2642
  %1110 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2057, align 8, !dbg !2642
  %avail2058 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2642
  %1111 = load i32, i32* %avail2058, align 4, !dbg !2642
  %inc2059 = add i32 %1111, 1, !dbg !2642
  store i32 %inc2059, i32* %avail2058, align 4, !dbg !2642
  %idxprom2060 = zext i32 %1111 to i64, !dbg !2642
  %arrayidx2061 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1110, i64 %idxprom2060, !dbg !2642
  %pointer2062 = bitcast %union.byte_fail_stack_elt* %arrayidx2061 to i8**, !dbg !2642
  store i8* null, i8** %pointer2062, align 8, !dbg !2642
  %stack2063 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2642
  %1112 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2063, align 8, !dbg !2642
  %avail2064 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2642
  %1113 = load i32, i32* %avail2064, align 4, !dbg !2642
  %inc2065 = add i32 %1113, 1, !dbg !2642
  store i32 %inc2065, i32* %avail2064, align 4, !dbg !2642
  %idxprom2066 = zext i32 %1113 to i64, !dbg !2642
  %arrayidx2067 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1112, i64 %idxprom2066, !dbg !2642
  %pointer2068 = bitcast %union.byte_fail_stack_elt* %arrayidx2067 to i8**, !dbg !2642
  store i8* null, i8** %pointer2068, align 8, !dbg !2642
  br label %do.end2070, !dbg !2642

do.end2070:                                       ; preds = %for.end2042
  br label %unconditional_jump, !dbg !2657

sw.bb2071:                                        ; preds = %if.end572
  br label %do.body2072, !dbg !2658

do.body2072:                                      ; preds = %sw.bb2071
  call void @llvm.dbg.declare(metadata i8** %destination2073, metadata !2659, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.declare(metadata i64* %this_reg2074, metadata !2662, metadata !DIExpression()), !dbg !2661
  br label %while.cond2075, !dbg !2661

while.cond2075:                                   ; preds = %if.end2113, %do.body2072
  %size2076 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2661
  %1114 = load i32, i32* %size2076, align 8, !dbg !2661
  %avail2077 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2661
  %1115 = load i32, i32* %avail2077, align 4, !dbg !2661
  %sub2078 = sub i32 %1114, %1115, !dbg !2661
  %conv2079 = zext i32 %sub2078 to i64, !dbg !2661
  %1116 = load i64, i64* %highest_active_reg, align 8, !dbg !2661
  %1117 = load i64, i64* %lowest_active_reg, align 8, !dbg !2661
  %sub2080 = sub i64 %1116, %1117, !dbg !2661
  %add2081 = add i64 %sub2080, 1, !dbg !2661
  %mul2082 = mul i64 %add2081, 3, !dbg !2661
  %add2083 = add i64 %mul2082, 4, !dbg !2661
  %cmp2084 = icmp ult i64 %conv2079, %add2083, !dbg !2661
  br i1 %cmp2084, label %while.body2086, label %while.end2114, !dbg !2661

while.body2086:                                   ; preds = %while.cond2075
  %size2087 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2663
  %1118 = load i32, i32* %size2087, align 8, !dbg !2663
  %1119 = load i32, i32* @xre_max_failures, align 4, !dbg !2663
  %mul2088 = mul nsw i32 %1119, 19, !dbg !2663
  %cmp2089 = icmp ugt i32 %1118, %mul2088, !dbg !2663
  br i1 %cmp2089, label %cond.true2091, label %cond.false2092, !dbg !2666

cond.true2091:                                    ; preds = %while.body2086
  br i1 false, label %if.end2113, label %if.then2112, !dbg !2663

cond.false2092:                                   ; preds = %while.body2086
  %size2093 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2663
  %1120 = load i32, i32* %size2093, align 8, !dbg !2663
  %shl2094 = shl i32 %1120, 1, !dbg !2663
  %conv2095 = zext i32 %shl2094 to i64, !dbg !2663
  %mul2096 = mul i64 %conv2095, 8, !dbg !2663
  %1121 = alloca i8, i64 %mul2096, align 16, !dbg !2663
  store i8* %1121, i8** %destination2073, align 8, !dbg !2663
  %1122 = load i8*, i8** %destination2073, align 8, !dbg !2663
  %stack2097 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2663
  %1123 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2097, align 8, !dbg !2663
  %1124 = bitcast %union.byte_fail_stack_elt* %1123 to i8*, !dbg !2663
  %size2098 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2663
  %1125 = load i32, i32* %size2098, align 8, !dbg !2663
  %conv2099 = zext i32 %1125 to i64, !dbg !2663
  %mul2100 = mul i64 %conv2099, 8, !dbg !2663
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1122, i8* align 8 %1124, i64 %mul2100, i1 false), !dbg !2663
  %1126 = bitcast i8* %1122 to %union.byte_fail_stack_elt*, !dbg !2663
  %stack2101 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2663
  store %union.byte_fail_stack_elt* %1126, %union.byte_fail_stack_elt** %stack2101, align 8, !dbg !2663
  %stack2102 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2663
  %1127 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2102, align 8, !dbg !2663
  %cmp2103 = icmp eq %union.byte_fail_stack_elt* %1127, null, !dbg !2663
  br i1 %cmp2103, label %cond.true2105, label %cond.false2106, !dbg !2663

cond.true2105:                                    ; preds = %cond.false2092
  br label %cond.end2109, !dbg !2663

cond.false2106:                                   ; preds = %cond.false2092
  %size2107 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 1, !dbg !2663
  %1128 = load i32, i32* %size2107, align 8, !dbg !2663
  %shl2108 = shl i32 %1128, 1, !dbg !2663
  store i32 %shl2108, i32* %size2107, align 8, !dbg !2663
  br label %cond.end2109, !dbg !2663

cond.end2109:                                     ; preds = %cond.false2106, %cond.true2105
  %cond2110 = phi i32 [ 0, %cond.true2105 ], [ 1, %cond.false2106 ], !dbg !2663
  %tobool2111 = icmp ne i32 %cond2110, 0, !dbg !2663
  br i1 %tobool2111, label %if.end2113, label %if.then2112, !dbg !2666

if.then2112:                                      ; preds = %cond.end2109, %cond.true2091
  store i32 -2, i32* %retval, align 4, !dbg !2663
  br label %return, !dbg !2663

if.end2113:                                       ; preds = %cond.end2109, %cond.true2091
  br label %while.cond2075, !dbg !2661, !llvm.loop !2667

while.end2114:                                    ; preds = %while.cond2075
  %1129 = load i64, i64* %lowest_active_reg, align 8, !dbg !2668
  store i64 %1129, i64* %this_reg2074, align 8, !dbg !2668
  br label %for.cond2115, !dbg !2668

for.cond2115:                                     ; preds = %for.inc2140, %while.end2114
  %1130 = load i64, i64* %this_reg2074, align 8, !dbg !2671
  %1131 = load i64, i64* %highest_active_reg, align 8, !dbg !2671
  %cmp2116 = icmp ule i64 %1130, %1131, !dbg !2671
  br i1 %cmp2116, label %for.body2118, label %for.end2142, !dbg !2668

for.body2118:                                     ; preds = %for.cond2115
  %1132 = load i8**, i8*** %regstart, align 8, !dbg !2673
  %1133 = load i64, i64* %this_reg2074, align 8, !dbg !2673
  %arrayidx2119 = getelementptr inbounds i8*, i8** %1132, i64 %1133, !dbg !2673
  %1134 = load i8*, i8** %arrayidx2119, align 8, !dbg !2673
  %stack2120 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2673
  %1135 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2120, align 8, !dbg !2673
  %avail2121 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2673
  %1136 = load i32, i32* %avail2121, align 4, !dbg !2673
  %inc2122 = add i32 %1136, 1, !dbg !2673
  store i32 %inc2122, i32* %avail2121, align 4, !dbg !2673
  %idxprom2123 = zext i32 %1136 to i64, !dbg !2673
  %arrayidx2124 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1135, i64 %idxprom2123, !dbg !2673
  %pointer2125 = bitcast %union.byte_fail_stack_elt* %arrayidx2124 to i8**, !dbg !2673
  store i8* %1134, i8** %pointer2125, align 8, !dbg !2673
  %1137 = load i8**, i8*** %regend, align 8, !dbg !2673
  %1138 = load i64, i64* %this_reg2074, align 8, !dbg !2673
  %arrayidx2126 = getelementptr inbounds i8*, i8** %1137, i64 %1138, !dbg !2673
  %1139 = load i8*, i8** %arrayidx2126, align 8, !dbg !2673
  %stack2127 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2673
  %1140 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2127, align 8, !dbg !2673
  %avail2128 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2673
  %1141 = load i32, i32* %avail2128, align 4, !dbg !2673
  %inc2129 = add i32 %1141, 1, !dbg !2673
  store i32 %inc2129, i32* %avail2128, align 4, !dbg !2673
  %idxprom2130 = zext i32 %1141 to i64, !dbg !2673
  %arrayidx2131 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1140, i64 %idxprom2130, !dbg !2673
  %pointer2132 = bitcast %union.byte_fail_stack_elt* %arrayidx2131 to i8**, !dbg !2673
  store i8* %1139, i8** %pointer2132, align 8, !dbg !2673
  %stack2133 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2673
  %1142 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2133, align 8, !dbg !2673
  %avail2134 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2673
  %1143 = load i32, i32* %avail2134, align 4, !dbg !2673
  %inc2135 = add i32 %1143, 1, !dbg !2673
  store i32 %inc2135, i32* %avail2134, align 4, !dbg !2673
  %idxprom2136 = zext i32 %1143 to i64, !dbg !2673
  %arrayidx2137 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1142, i64 %idxprom2136, !dbg !2673
  %1144 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2673
  %1145 = load i64, i64* %this_reg2074, align 8, !dbg !2673
  %arrayidx2138 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %1144, i64 %1145, !dbg !2673
  %word2139 = bitcast %union.byte_register_info_type* %arrayidx2138 to %union.byte_fail_stack_elt*, !dbg !2673
  %1146 = bitcast %union.byte_fail_stack_elt* %arrayidx2137 to i8*, !dbg !2673
  %1147 = bitcast %union.byte_fail_stack_elt* %word2139 to i8*, !dbg !2673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1146, i8* align 8 %1147, i64 8, i1 false), !dbg !2673
  br label %for.inc2140, !dbg !2673

for.inc2140:                                      ; preds = %for.body2118
  %1148 = load i64, i64* %this_reg2074, align 8, !dbg !2671
  %inc2141 = add i64 %1148, 1, !dbg !2671
  store i64 %inc2141, i64* %this_reg2074, align 8, !dbg !2671
  br label %for.cond2115, !dbg !2671, !llvm.loop !2675

for.end2142:                                      ; preds = %for.cond2115
  %1149 = load i64, i64* %lowest_active_reg, align 8, !dbg !2661
  %conv2143 = trunc i64 %1149 to i32, !dbg !2661
  %stack2144 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2661
  %1150 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2144, align 8, !dbg !2661
  %avail2145 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2661
  %1151 = load i32, i32* %avail2145, align 4, !dbg !2661
  %inc2146 = add i32 %1151, 1, !dbg !2661
  store i32 %inc2146, i32* %avail2145, align 4, !dbg !2661
  %idxprom2147 = zext i32 %1151 to i64, !dbg !2661
  %arrayidx2148 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1150, i64 %idxprom2147, !dbg !2661
  %integer2149 = bitcast %union.byte_fail_stack_elt* %arrayidx2148 to i32*, !dbg !2661
  store i32 %conv2143, i32* %integer2149, align 8, !dbg !2661
  %1152 = load i64, i64* %highest_active_reg, align 8, !dbg !2661
  %conv2150 = trunc i64 %1152 to i32, !dbg !2661
  %stack2151 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2661
  %1153 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2151, align 8, !dbg !2661
  %avail2152 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2661
  %1154 = load i32, i32* %avail2152, align 4, !dbg !2661
  %inc2153 = add i32 %1154, 1, !dbg !2661
  store i32 %inc2153, i32* %avail2152, align 4, !dbg !2661
  %idxprom2154 = zext i32 %1154 to i64, !dbg !2661
  %arrayidx2155 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1153, i64 %idxprom2154, !dbg !2661
  %integer2156 = bitcast %union.byte_fail_stack_elt* %arrayidx2155 to i32*, !dbg !2661
  store i32 %conv2150, i32* %integer2156, align 8, !dbg !2661
  %stack2157 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2661
  %1155 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2157, align 8, !dbg !2661
  %avail2158 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2661
  %1156 = load i32, i32* %avail2158, align 4, !dbg !2661
  %inc2159 = add i32 %1156, 1, !dbg !2661
  store i32 %inc2159, i32* %avail2158, align 4, !dbg !2661
  %idxprom2160 = zext i32 %1156 to i64, !dbg !2661
  %arrayidx2161 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1155, i64 %idxprom2160, !dbg !2661
  %pointer2162 = bitcast %union.byte_fail_stack_elt* %arrayidx2161 to i8**, !dbg !2661
  store i8* null, i8** %pointer2162, align 8, !dbg !2661
  %stack2163 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2661
  %1157 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2163, align 8, !dbg !2661
  %avail2164 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2661
  %1158 = load i32, i32* %avail2164, align 4, !dbg !2661
  %inc2165 = add i32 %1158, 1, !dbg !2661
  store i32 %inc2165, i32* %avail2164, align 4, !dbg !2661
  %idxprom2166 = zext i32 %1158 to i64, !dbg !2661
  %arrayidx2167 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1157, i64 %idxprom2166, !dbg !2661
  %pointer2168 = bitcast %union.byte_fail_stack_elt* %arrayidx2167 to i8**, !dbg !2661
  store i8* null, i8** %pointer2168, align 8, !dbg !2661
  br label %do.end2170, !dbg !2661

do.end2170:                                       ; preds = %for.end2142
  br label %sw.epilog2674, !dbg !2676

sw.bb2171:                                        ; preds = %if.end572
  br label %do.body2172, !dbg !2677

do.body2172:                                      ; preds = %sw.bb2171
  %1159 = load i8*, i8** %p, align 8, !dbg !2678
  %add.ptr2173 = getelementptr inbounds i8, i8* %1159, i64 2, !dbg !2678
  %1160 = load i8, i8* %add.ptr2173, align 1, !dbg !2678
  %conv2174 = zext i8 %1160 to i32, !dbg !2678
  %and2175 = and i32 %conv2174, 255, !dbg !2678
  store i32 %and2175, i32* %mcnt, align 4, !dbg !2678
  %1161 = load i8*, i8** %p, align 8, !dbg !2678
  %add.ptr2176 = getelementptr inbounds i8, i8* %1161, i64 2, !dbg !2678
  %add.ptr2177 = getelementptr inbounds i8, i8* %add.ptr2176, i64 1, !dbg !2678
  %1162 = load i8, i8* %add.ptr2177, align 1, !dbg !2678
  %conv2178 = sext i8 %1162 to i32, !dbg !2678
  %shl2179 = shl i32 %conv2178, 8, !dbg !2678
  %1163 = load i32, i32* %mcnt, align 4, !dbg !2678
  %add2180 = add nsw i32 %1163, %shl2179, !dbg !2678
  store i32 %add2180, i32* %mcnt, align 4, !dbg !2678
  br label %do.end2182, !dbg !2678

do.end2182:                                       ; preds = %do.body2172
  %1164 = load i32, i32* %mcnt, align 4, !dbg !2680
  %cmp2183 = icmp sgt i32 %1164, 0, !dbg !2682
  br i1 %cmp2183, label %if.then2185, label %if.else2200, !dbg !2683

if.then2185:                                      ; preds = %do.end2182
  %1165 = load i32, i32* %mcnt, align 4, !dbg !2684
  %dec2186 = add nsw i32 %1165, -1, !dbg !2684
  store i32 %dec2186, i32* %mcnt, align 4, !dbg !2684
  %1166 = load i8*, i8** %p, align 8, !dbg !2686
  %add.ptr2187 = getelementptr inbounds i8, i8* %1166, i64 2, !dbg !2686
  store i8* %add.ptr2187, i8** %p, align 8, !dbg !2686
  br label %do.body2188, !dbg !2687

do.body2188:                                      ; preds = %if.then2185
  br label %do.body2189, !dbg !2688

do.body2189:                                      ; preds = %do.body2188
  %1167 = load i32, i32* %mcnt, align 4, !dbg !2690
  %and2190 = and i32 %1167, 255, !dbg !2690
  %conv2191 = trunc i32 %and2190 to i8, !dbg !2690
  %1168 = load i8*, i8** %p, align 8, !dbg !2690
  %arrayidx2192 = getelementptr inbounds i8, i8* %1168, i64 0, !dbg !2690
  store i8 %conv2191, i8* %arrayidx2192, align 1, !dbg !2690
  %1169 = load i32, i32* %mcnt, align 4, !dbg !2690
  %shr = ashr i32 %1169, 8, !dbg !2690
  %conv2193 = trunc i32 %shr to i8, !dbg !2690
  %1170 = load i8*, i8** %p, align 8, !dbg !2690
  %arrayidx2194 = getelementptr inbounds i8, i8* %1170, i64 1, !dbg !2690
  store i8 %conv2193, i8* %arrayidx2194, align 1, !dbg !2690
  br label %do.end2196, !dbg !2690

do.end2196:                                       ; preds = %do.body2189
  %1171 = load i8*, i8** %p, align 8, !dbg !2688
  %add.ptr2197 = getelementptr inbounds i8, i8* %1171, i64 2, !dbg !2688
  store i8* %add.ptr2197, i8** %p, align 8, !dbg !2688
  br label %do.end2199, !dbg !2688

do.end2199:                                       ; preds = %do.end2196
  br label %if.end2207, !dbg !2692

if.else2200:                                      ; preds = %do.end2182
  %1172 = load i32, i32* %mcnt, align 4, !dbg !2693
  %cmp2201 = icmp eq i32 %1172, 0, !dbg !2695
  br i1 %cmp2201, label %if.then2203, label %if.end2206, !dbg !2696

if.then2203:                                      ; preds = %if.else2200
  %1173 = load i8*, i8** %p, align 8, !dbg !2697
  %arrayidx2204 = getelementptr inbounds i8, i8* %1173, i64 2, !dbg !2697
  store i8 0, i8* %arrayidx2204, align 1, !dbg !2699
  %1174 = load i8*, i8** %p, align 8, !dbg !2700
  %arrayidx2205 = getelementptr inbounds i8, i8* %1174, i64 3, !dbg !2700
  store i8 0, i8* %arrayidx2205, align 1, !dbg !2701
  br label %on_failure, !dbg !2702

if.end2206:                                       ; preds = %if.else2200
  br label %if.end2207

if.end2207:                                       ; preds = %if.end2206, %do.end2199
  br label %sw.epilog2674, !dbg !2703

sw.bb2208:                                        ; preds = %if.end572
  br label %do.body2209, !dbg !2704

do.body2209:                                      ; preds = %sw.bb2208
  %1175 = load i8*, i8** %p, align 8, !dbg !2705
  %add.ptr2210 = getelementptr inbounds i8, i8* %1175, i64 2, !dbg !2705
  %1176 = load i8, i8* %add.ptr2210, align 1, !dbg !2705
  %conv2211 = zext i8 %1176 to i32, !dbg !2705
  %and2212 = and i32 %conv2211, 255, !dbg !2705
  store i32 %and2212, i32* %mcnt, align 4, !dbg !2705
  %1177 = load i8*, i8** %p, align 8, !dbg !2705
  %add.ptr2213 = getelementptr inbounds i8, i8* %1177, i64 2, !dbg !2705
  %add.ptr2214 = getelementptr inbounds i8, i8* %add.ptr2213, i64 1, !dbg !2705
  %1178 = load i8, i8* %add.ptr2214, align 1, !dbg !2705
  %conv2215 = sext i8 %1178 to i32, !dbg !2705
  %shl2216 = shl i32 %conv2215, 8, !dbg !2705
  %1179 = load i32, i32* %mcnt, align 4, !dbg !2705
  %add2217 = add nsw i32 %1179, %shl2216, !dbg !2705
  store i32 %add2217, i32* %mcnt, align 4, !dbg !2705
  br label %do.end2219, !dbg !2705

do.end2219:                                       ; preds = %do.body2209
  %1180 = load i32, i32* %mcnt, align 4, !dbg !2707
  %tobool2220 = icmp ne i32 %1180, 0, !dbg !2707
  br i1 %tobool2220, label %if.then2221, label %if.else2234, !dbg !2709

if.then2221:                                      ; preds = %do.end2219
  %1181 = load i32, i32* %mcnt, align 4, !dbg !2710
  %dec2222 = add nsw i32 %1181, -1, !dbg !2710
  store i32 %dec2222, i32* %mcnt, align 4, !dbg !2710
  br label %do.body2223, !dbg !2712

do.body2223:                                      ; preds = %if.then2221
  %1182 = load i32, i32* %mcnt, align 4, !dbg !2713
  %and2224 = and i32 %1182, 255, !dbg !2713
  %conv2225 = trunc i32 %and2224 to i8, !dbg !2713
  %1183 = load i8*, i8** %p, align 8, !dbg !2713
  %add.ptr2226 = getelementptr inbounds i8, i8* %1183, i64 2, !dbg !2713
  %arrayidx2227 = getelementptr inbounds i8, i8* %add.ptr2226, i64 0, !dbg !2713
  store i8 %conv2225, i8* %arrayidx2227, align 1, !dbg !2713
  %1184 = load i32, i32* %mcnt, align 4, !dbg !2713
  %shr2228 = ashr i32 %1184, 8, !dbg !2713
  %conv2229 = trunc i32 %shr2228 to i8, !dbg !2713
  %1185 = load i8*, i8** %p, align 8, !dbg !2713
  %add.ptr2230 = getelementptr inbounds i8, i8* %1185, i64 2, !dbg !2713
  %arrayidx2231 = getelementptr inbounds i8, i8* %add.ptr2230, i64 1, !dbg !2713
  store i8 %conv2229, i8* %arrayidx2231, align 1, !dbg !2713
  br label %do.end2233, !dbg !2713

do.end2233:                                       ; preds = %do.body2223
  br label %unconditional_jump, !dbg !2715

if.else2234:                                      ; preds = %do.end2219
  %1186 = load i8*, i8** %p, align 8, !dbg !2716
  %add.ptr2235 = getelementptr inbounds i8, i8* %1186, i64 4, !dbg !2716
  store i8* %add.ptr2235, i8** %p, align 8, !dbg !2716
  br label %if.end2236

if.end2236:                                       ; preds = %if.else2234
  br label %sw.epilog2674, !dbg !2717

sw.bb2237:                                        ; preds = %if.end572
  br label %do.body2238, !dbg !2718

do.body2238:                                      ; preds = %sw.bb2237
  br label %do.body2239, !dbg !2720

do.body2239:                                      ; preds = %do.body2238
  %1187 = load i8*, i8** %p, align 8, !dbg !2722
  %1188 = load i8, i8* %1187, align 1, !dbg !2722
  %conv2240 = zext i8 %1188 to i32, !dbg !2722
  %and2241 = and i32 %conv2240, 255, !dbg !2722
  store i32 %and2241, i32* %mcnt, align 4, !dbg !2722
  %1189 = load i8*, i8** %p, align 8, !dbg !2722
  %add.ptr2242 = getelementptr inbounds i8, i8* %1189, i64 1, !dbg !2722
  %1190 = load i8, i8* %add.ptr2242, align 1, !dbg !2722
  %conv2243 = sext i8 %1190 to i32, !dbg !2722
  %shl2244 = shl i32 %conv2243, 8, !dbg !2722
  %1191 = load i32, i32* %mcnt, align 4, !dbg !2722
  %add2245 = add nsw i32 %1191, %shl2244, !dbg !2722
  store i32 %add2245, i32* %mcnt, align 4, !dbg !2722
  br label %do.end2247, !dbg !2722

do.end2247:                                       ; preds = %do.body2239
  %1192 = load i8*, i8** %p, align 8, !dbg !2720
  %add.ptr2248 = getelementptr inbounds i8, i8* %1192, i64 2, !dbg !2720
  store i8* %add.ptr2248, i8** %p, align 8, !dbg !2720
  br label %do.end2250, !dbg !2720

do.end2250:                                       ; preds = %do.end2247
  %1193 = load i8*, i8** %p, align 8, !dbg !2724
  %1194 = load i32, i32* %mcnt, align 4, !dbg !2725
  %idx.ext2251 = sext i32 %1194 to i64, !dbg !2726
  %add.ptr2252 = getelementptr inbounds i8, i8* %1193, i64 %idx.ext2251, !dbg !2726
  store i8* %add.ptr2252, i8** %p1, align 8, !dbg !2727
  br label %do.body2253, !dbg !2728

do.body2253:                                      ; preds = %do.end2250
  br label %do.body2254, !dbg !2729

do.body2254:                                      ; preds = %do.body2253
  %1195 = load i8*, i8** %p, align 8, !dbg !2731
  %1196 = load i8, i8* %1195, align 1, !dbg !2731
  %conv2255 = zext i8 %1196 to i32, !dbg !2731
  %and2256 = and i32 %conv2255, 255, !dbg !2731
  store i32 %and2256, i32* %mcnt, align 4, !dbg !2731
  %1197 = load i8*, i8** %p, align 8, !dbg !2731
  %add.ptr2257 = getelementptr inbounds i8, i8* %1197, i64 1, !dbg !2731
  %1198 = load i8, i8* %add.ptr2257, align 1, !dbg !2731
  %conv2258 = sext i8 %1198 to i32, !dbg !2731
  %shl2259 = shl i32 %conv2258, 8, !dbg !2731
  %1199 = load i32, i32* %mcnt, align 4, !dbg !2731
  %add2260 = add nsw i32 %1199, %shl2259, !dbg !2731
  store i32 %add2260, i32* %mcnt, align 4, !dbg !2731
  br label %do.end2262, !dbg !2731

do.end2262:                                       ; preds = %do.body2254
  %1200 = load i8*, i8** %p, align 8, !dbg !2729
  %add.ptr2263 = getelementptr inbounds i8, i8* %1200, i64 2, !dbg !2729
  store i8* %add.ptr2263, i8** %p, align 8, !dbg !2729
  br label %do.end2265, !dbg !2729

do.end2265:                                       ; preds = %do.end2262
  br label %do.body2266, !dbg !2733

do.body2266:                                      ; preds = %do.end2265
  %1201 = load i32, i32* %mcnt, align 4, !dbg !2734
  %and2267 = and i32 %1201, 255, !dbg !2734
  %conv2268 = trunc i32 %and2267 to i8, !dbg !2734
  %1202 = load i8*, i8** %p1, align 8, !dbg !2734
  %arrayidx2269 = getelementptr inbounds i8, i8* %1202, i64 0, !dbg !2734
  store i8 %conv2268, i8* %arrayidx2269, align 1, !dbg !2734
  %1203 = load i32, i32* %mcnt, align 4, !dbg !2734
  %shr2270 = ashr i32 %1203, 8, !dbg !2734
  %conv2271 = trunc i32 %shr2270 to i8, !dbg !2734
  %1204 = load i8*, i8** %p1, align 8, !dbg !2734
  %arrayidx2272 = getelementptr inbounds i8, i8* %1204, i64 1, !dbg !2734
  store i8 %conv2271, i8* %arrayidx2272, align 1, !dbg !2734
  br label %do.end2274, !dbg !2734

do.end2274:                                       ; preds = %do.body2266
  br label %sw.epilog2674, !dbg !2736

sw.bb2275:                                        ; preds = %if.end572
  call void @llvm.dbg.declare(metadata i8* %prevchar, metadata !2737, metadata !DIExpression()), !dbg !2739
  call void @llvm.dbg.declare(metadata i8* %thischar, metadata !2740, metadata !DIExpression()), !dbg !2741
  %1205 = load i8*, i8** %d, align 8, !dbg !2742
  %1206 = load i32, i32* %size1.addr, align 4, !dbg !2742
  %tobool2276 = icmp ne i32 %1206, 0, !dbg !2742
  br i1 %tobool2276, label %cond.true2277, label %cond.false2278, !dbg !2742

cond.true2277:                                    ; preds = %sw.bb2275
  %1207 = load i8*, i8** %string1.addr, align 8, !dbg !2742
  br label %cond.end2279, !dbg !2742

cond.false2278:                                   ; preds = %sw.bb2275
  %1208 = load i8*, i8** %string2.addr, align 8, !dbg !2742
  br label %cond.end2279, !dbg !2742

cond.end2279:                                     ; preds = %cond.false2278, %cond.true2277
  %cond2280 = phi i8* [ %1207, %cond.true2277 ], [ %1208, %cond.false2278 ], !dbg !2742
  %cmp2281 = icmp eq i8* %1205, %cond2280, !dbg !2742
  br i1 %cmp2281, label %if.then2288, label %lor.lhs.false2283, !dbg !2742

lor.lhs.false2283:                                ; preds = %cond.end2279
  %1209 = load i32, i32* %size2.addr, align 4, !dbg !2742
  %tobool2284 = icmp ne i32 %1209, 0, !dbg !2742
  br i1 %tobool2284, label %lor.lhs.false2285, label %if.then2288, !dbg !2744

lor.lhs.false2285:                                ; preds = %lor.lhs.false2283
  %1210 = load i8*, i8** %d, align 8, !dbg !2745
  %1211 = load i8*, i8** %end2, align 8, !dbg !2745
  %cmp2286 = icmp eq i8* %1210, %1211, !dbg !2745
  br i1 %cmp2286, label %if.then2288, label %if.end2289, !dbg !2746

if.then2288:                                      ; preds = %lor.lhs.false2285, %lor.lhs.false2283, %cond.end2279
  br label %sw.epilog2674, !dbg !2747

if.end2289:                                       ; preds = %lor.lhs.false2285
  %1212 = load i8*, i8** %d, align 8, !dbg !2748
  %add.ptr2290 = getelementptr inbounds i8, i8* %1212, i64 -1, !dbg !2748
  %1213 = load i8*, i8** %end1, align 8, !dbg !2748
  %cmp2291 = icmp eq i8* %add.ptr2290, %1213, !dbg !2748
  br i1 %cmp2291, label %cond.true2293, label %cond.false2295, !dbg !2748

cond.true2293:                                    ; preds = %if.end2289
  %1214 = load i8*, i8** %string2.addr, align 8, !dbg !2748
  %1215 = load i8, i8* %1214, align 1, !dbg !2748
  %conv2294 = sext i8 %1215 to i32, !dbg !2748
  br label %cond.end2308, !dbg !2748

cond.false2295:                                   ; preds = %if.end2289
  %1216 = load i8*, i8** %d, align 8, !dbg !2748
  %add.ptr2296 = getelementptr inbounds i8, i8* %1216, i64 -1, !dbg !2748
  %1217 = load i8*, i8** %string2.addr, align 8, !dbg !2748
  %add.ptr2297 = getelementptr inbounds i8, i8* %1217, i64 -1, !dbg !2748
  %cmp2298 = icmp eq i8* %add.ptr2296, %add.ptr2297, !dbg !2748
  br i1 %cmp2298, label %cond.true2300, label %cond.false2303, !dbg !2748

cond.true2300:                                    ; preds = %cond.false2295
  %1218 = load i8*, i8** %end1, align 8, !dbg !2748
  %add.ptr2301 = getelementptr inbounds i8, i8* %1218, i64 -1, !dbg !2748
  %1219 = load i8, i8* %add.ptr2301, align 1, !dbg !2748
  %conv2302 = sext i8 %1219 to i32, !dbg !2748
  br label %cond.end2306, !dbg !2748

cond.false2303:                                   ; preds = %cond.false2295
  %1220 = load i8*, i8** %d, align 8, !dbg !2748
  %add.ptr2304 = getelementptr inbounds i8, i8* %1220, i64 -1, !dbg !2748
  %1221 = load i8, i8* %add.ptr2304, align 1, !dbg !2748
  %conv2305 = sext i8 %1221 to i32, !dbg !2748
  br label %cond.end2306, !dbg !2748

cond.end2306:                                     ; preds = %cond.false2303, %cond.true2300
  %cond2307 = phi i32 [ %conv2302, %cond.true2300 ], [ %conv2305, %cond.false2303 ], !dbg !2748
  br label %cond.end2308, !dbg !2748

cond.end2308:                                     ; preds = %cond.end2306, %cond.true2293
  %cond2309 = phi i32 [ %conv2294, %cond.true2293 ], [ %cond2307, %cond.end2306 ], !dbg !2748
  %conv2310 = trunc i32 %cond2309 to i8, !dbg !2748
  %idxprom2311 = zext i8 %conv2310 to i64, !dbg !2748
  %arrayidx2312 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2311, !dbg !2748
  %1222 = load i8, i8* %arrayidx2312, align 1, !dbg !2748
  %conv2313 = sext i8 %1222 to i32, !dbg !2748
  %cmp2314 = icmp eq i32 %conv2313, 1, !dbg !2748
  %conv2315 = zext i1 %cmp2314 to i32, !dbg !2748
  %conv2316 = trunc i32 %conv2315 to i8, !dbg !2748
  store i8 %conv2316, i8* %prevchar, align 1, !dbg !2749
  %1223 = load i8*, i8** %d, align 8, !dbg !2750
  %1224 = load i8*, i8** %end1, align 8, !dbg !2750
  %cmp2317 = icmp eq i8* %1223, %1224, !dbg !2750
  br i1 %cmp2317, label %cond.true2319, label %cond.false2321, !dbg !2750

cond.true2319:                                    ; preds = %cond.end2308
  %1225 = load i8*, i8** %string2.addr, align 8, !dbg !2750
  %1226 = load i8, i8* %1225, align 1, !dbg !2750
  %conv2320 = sext i8 %1226 to i32, !dbg !2750
  br label %cond.end2332, !dbg !2750

cond.false2321:                                   ; preds = %cond.end2308
  %1227 = load i8*, i8** %d, align 8, !dbg !2750
  %1228 = load i8*, i8** %string2.addr, align 8, !dbg !2750
  %add.ptr2322 = getelementptr inbounds i8, i8* %1228, i64 -1, !dbg !2750
  %cmp2323 = icmp eq i8* %1227, %add.ptr2322, !dbg !2750
  br i1 %cmp2323, label %cond.true2325, label %cond.false2328, !dbg !2750

cond.true2325:                                    ; preds = %cond.false2321
  %1229 = load i8*, i8** %end1, align 8, !dbg !2750
  %add.ptr2326 = getelementptr inbounds i8, i8* %1229, i64 -1, !dbg !2750
  %1230 = load i8, i8* %add.ptr2326, align 1, !dbg !2750
  %conv2327 = sext i8 %1230 to i32, !dbg !2750
  br label %cond.end2330, !dbg !2750

cond.false2328:                                   ; preds = %cond.false2321
  %1231 = load i8*, i8** %d, align 8, !dbg !2750
  %1232 = load i8, i8* %1231, align 1, !dbg !2750
  %conv2329 = sext i8 %1232 to i32, !dbg !2750
  br label %cond.end2330, !dbg !2750

cond.end2330:                                     ; preds = %cond.false2328, %cond.true2325
  %cond2331 = phi i32 [ %conv2327, %cond.true2325 ], [ %conv2329, %cond.false2328 ], !dbg !2750
  br label %cond.end2332, !dbg !2750

cond.end2332:                                     ; preds = %cond.end2330, %cond.true2319
  %cond2333 = phi i32 [ %conv2320, %cond.true2319 ], [ %cond2331, %cond.end2330 ], !dbg !2750
  %conv2334 = trunc i32 %cond2333 to i8, !dbg !2750
  %idxprom2335 = zext i8 %conv2334 to i64, !dbg !2750
  %arrayidx2336 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2335, !dbg !2750
  %1233 = load i8, i8* %arrayidx2336, align 1, !dbg !2750
  %conv2337 = sext i8 %1233 to i32, !dbg !2750
  %cmp2338 = icmp eq i32 %conv2337, 1, !dbg !2750
  %conv2339 = zext i1 %cmp2338 to i32, !dbg !2750
  %conv2340 = trunc i32 %conv2339 to i8, !dbg !2750
  store i8 %conv2340, i8* %thischar, align 1, !dbg !2751
  %1234 = load i8, i8* %prevchar, align 1, !dbg !2752
  %conv2341 = sext i8 %1234 to i32, !dbg !2752
  %1235 = load i8, i8* %thischar, align 1, !dbg !2754
  %conv2342 = sext i8 %1235 to i32, !dbg !2754
  %cmp2343 = icmp ne i32 %conv2341, %conv2342, !dbg !2755
  br i1 %cmp2343, label %if.then2345, label %if.end2346, !dbg !2756

if.then2345:                                      ; preds = %cond.end2332
  br label %sw.epilog2674, !dbg !2757

if.end2346:                                       ; preds = %cond.end2332
  br label %fail, !dbg !2758

sw.bb2347:                                        ; preds = %if.end572
  call void @llvm.dbg.declare(metadata i8* %prevchar2348, metadata !2759, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.declare(metadata i8* %thischar2349, metadata !2762, metadata !DIExpression()), !dbg !2763
  %1236 = load i8*, i8** %d, align 8, !dbg !2764
  %1237 = load i32, i32* %size1.addr, align 4, !dbg !2764
  %tobool2350 = icmp ne i32 %1237, 0, !dbg !2764
  br i1 %tobool2350, label %cond.true2351, label %cond.false2352, !dbg !2764

cond.true2351:                                    ; preds = %sw.bb2347
  %1238 = load i8*, i8** %string1.addr, align 8, !dbg !2764
  br label %cond.end2353, !dbg !2764

cond.false2352:                                   ; preds = %sw.bb2347
  %1239 = load i8*, i8** %string2.addr, align 8, !dbg !2764
  br label %cond.end2353, !dbg !2764

cond.end2353:                                     ; preds = %cond.false2352, %cond.true2351
  %cond2354 = phi i8* [ %1238, %cond.true2351 ], [ %1239, %cond.false2352 ], !dbg !2764
  %cmp2355 = icmp eq i8* %1236, %cond2354, !dbg !2764
  br i1 %cmp2355, label %if.then2362, label %lor.lhs.false2357, !dbg !2764

lor.lhs.false2357:                                ; preds = %cond.end2353
  %1240 = load i32, i32* %size2.addr, align 4, !dbg !2764
  %tobool2358 = icmp ne i32 %1240, 0, !dbg !2764
  br i1 %tobool2358, label %lor.lhs.false2359, label %if.then2362, !dbg !2766

lor.lhs.false2359:                                ; preds = %lor.lhs.false2357
  %1241 = load i8*, i8** %d, align 8, !dbg !2767
  %1242 = load i8*, i8** %end2, align 8, !dbg !2767
  %cmp2360 = icmp eq i8* %1241, %1242, !dbg !2767
  br i1 %cmp2360, label %if.then2362, label %if.end2363, !dbg !2768

if.then2362:                                      ; preds = %lor.lhs.false2359, %lor.lhs.false2357, %cond.end2353
  br label %fail, !dbg !2769

if.end2363:                                       ; preds = %lor.lhs.false2359
  %1243 = load i8*, i8** %d, align 8, !dbg !2770
  %add.ptr2364 = getelementptr inbounds i8, i8* %1243, i64 -1, !dbg !2770
  %1244 = load i8*, i8** %end1, align 8, !dbg !2770
  %cmp2365 = icmp eq i8* %add.ptr2364, %1244, !dbg !2770
  br i1 %cmp2365, label %cond.true2367, label %cond.false2369, !dbg !2770

cond.true2367:                                    ; preds = %if.end2363
  %1245 = load i8*, i8** %string2.addr, align 8, !dbg !2770
  %1246 = load i8, i8* %1245, align 1, !dbg !2770
  %conv2368 = sext i8 %1246 to i32, !dbg !2770
  br label %cond.end2382, !dbg !2770

cond.false2369:                                   ; preds = %if.end2363
  %1247 = load i8*, i8** %d, align 8, !dbg !2770
  %add.ptr2370 = getelementptr inbounds i8, i8* %1247, i64 -1, !dbg !2770
  %1248 = load i8*, i8** %string2.addr, align 8, !dbg !2770
  %add.ptr2371 = getelementptr inbounds i8, i8* %1248, i64 -1, !dbg !2770
  %cmp2372 = icmp eq i8* %add.ptr2370, %add.ptr2371, !dbg !2770
  br i1 %cmp2372, label %cond.true2374, label %cond.false2377, !dbg !2770

cond.true2374:                                    ; preds = %cond.false2369
  %1249 = load i8*, i8** %end1, align 8, !dbg !2770
  %add.ptr2375 = getelementptr inbounds i8, i8* %1249, i64 -1, !dbg !2770
  %1250 = load i8, i8* %add.ptr2375, align 1, !dbg !2770
  %conv2376 = sext i8 %1250 to i32, !dbg !2770
  br label %cond.end2380, !dbg !2770

cond.false2377:                                   ; preds = %cond.false2369
  %1251 = load i8*, i8** %d, align 8, !dbg !2770
  %add.ptr2378 = getelementptr inbounds i8, i8* %1251, i64 -1, !dbg !2770
  %1252 = load i8, i8* %add.ptr2378, align 1, !dbg !2770
  %conv2379 = sext i8 %1252 to i32, !dbg !2770
  br label %cond.end2380, !dbg !2770

cond.end2380:                                     ; preds = %cond.false2377, %cond.true2374
  %cond2381 = phi i32 [ %conv2376, %cond.true2374 ], [ %conv2379, %cond.false2377 ], !dbg !2770
  br label %cond.end2382, !dbg !2770

cond.end2382:                                     ; preds = %cond.end2380, %cond.true2367
  %cond2383 = phi i32 [ %conv2368, %cond.true2367 ], [ %cond2381, %cond.end2380 ], !dbg !2770
  %conv2384 = trunc i32 %cond2383 to i8, !dbg !2770
  %idxprom2385 = zext i8 %conv2384 to i64, !dbg !2770
  %arrayidx2386 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2385, !dbg !2770
  %1253 = load i8, i8* %arrayidx2386, align 1, !dbg !2770
  %conv2387 = sext i8 %1253 to i32, !dbg !2770
  %cmp2388 = icmp eq i32 %conv2387, 1, !dbg !2770
  %conv2389 = zext i1 %cmp2388 to i32, !dbg !2770
  %conv2390 = trunc i32 %conv2389 to i8, !dbg !2770
  store i8 %conv2390, i8* %prevchar2348, align 1, !dbg !2771
  %1254 = load i8*, i8** %d, align 8, !dbg !2772
  %1255 = load i8*, i8** %end1, align 8, !dbg !2772
  %cmp2391 = icmp eq i8* %1254, %1255, !dbg !2772
  br i1 %cmp2391, label %cond.true2393, label %cond.false2395, !dbg !2772

cond.true2393:                                    ; preds = %cond.end2382
  %1256 = load i8*, i8** %string2.addr, align 8, !dbg !2772
  %1257 = load i8, i8* %1256, align 1, !dbg !2772
  %conv2394 = sext i8 %1257 to i32, !dbg !2772
  br label %cond.end2406, !dbg !2772

cond.false2395:                                   ; preds = %cond.end2382
  %1258 = load i8*, i8** %d, align 8, !dbg !2772
  %1259 = load i8*, i8** %string2.addr, align 8, !dbg !2772
  %add.ptr2396 = getelementptr inbounds i8, i8* %1259, i64 -1, !dbg !2772
  %cmp2397 = icmp eq i8* %1258, %add.ptr2396, !dbg !2772
  br i1 %cmp2397, label %cond.true2399, label %cond.false2402, !dbg !2772

cond.true2399:                                    ; preds = %cond.false2395
  %1260 = load i8*, i8** %end1, align 8, !dbg !2772
  %add.ptr2400 = getelementptr inbounds i8, i8* %1260, i64 -1, !dbg !2772
  %1261 = load i8, i8* %add.ptr2400, align 1, !dbg !2772
  %conv2401 = sext i8 %1261 to i32, !dbg !2772
  br label %cond.end2404, !dbg !2772

cond.false2402:                                   ; preds = %cond.false2395
  %1262 = load i8*, i8** %d, align 8, !dbg !2772
  %1263 = load i8, i8* %1262, align 1, !dbg !2772
  %conv2403 = sext i8 %1263 to i32, !dbg !2772
  br label %cond.end2404, !dbg !2772

cond.end2404:                                     ; preds = %cond.false2402, %cond.true2399
  %cond2405 = phi i32 [ %conv2401, %cond.true2399 ], [ %conv2403, %cond.false2402 ], !dbg !2772
  br label %cond.end2406, !dbg !2772

cond.end2406:                                     ; preds = %cond.end2404, %cond.true2393
  %cond2407 = phi i32 [ %conv2394, %cond.true2393 ], [ %cond2405, %cond.end2404 ], !dbg !2772
  %conv2408 = trunc i32 %cond2407 to i8, !dbg !2772
  %idxprom2409 = zext i8 %conv2408 to i64, !dbg !2772
  %arrayidx2410 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2409, !dbg !2772
  %1264 = load i8, i8* %arrayidx2410, align 1, !dbg !2772
  %conv2411 = sext i8 %1264 to i32, !dbg !2772
  %cmp2412 = icmp eq i32 %conv2411, 1, !dbg !2772
  %conv2413 = zext i1 %cmp2412 to i32, !dbg !2772
  %conv2414 = trunc i32 %conv2413 to i8, !dbg !2772
  store i8 %conv2414, i8* %thischar2349, align 1, !dbg !2773
  %1265 = load i8, i8* %prevchar2348, align 1, !dbg !2774
  %conv2415 = sext i8 %1265 to i32, !dbg !2774
  %1266 = load i8, i8* %thischar2349, align 1, !dbg !2776
  %conv2416 = sext i8 %1266 to i32, !dbg !2776
  %cmp2417 = icmp ne i32 %conv2415, %conv2416, !dbg !2777
  br i1 %cmp2417, label %if.then2419, label %if.end2420, !dbg !2778

if.then2419:                                      ; preds = %cond.end2406
  br label %fail, !dbg !2779

if.end2420:                                       ; preds = %cond.end2406
  br label %sw.epilog2674, !dbg !2780

sw.bb2421:                                        ; preds = %if.end572
  %1267 = load i8*, i8** %d, align 8, !dbg !2781
  %1268 = load i8*, i8** %end2, align 8, !dbg !2781
  %cmp2422 = icmp eq i8* %1267, %1268, !dbg !2781
  br i1 %cmp2422, label %if.end2486, label %land.lhs.true2424, !dbg !2783

land.lhs.true2424:                                ; preds = %sw.bb2421
  %1269 = load i8*, i8** %d, align 8, !dbg !2784
  %1270 = load i8*, i8** %end1, align 8, !dbg !2784
  %cmp2425 = icmp eq i8* %1269, %1270, !dbg !2784
  br i1 %cmp2425, label %cond.true2427, label %cond.false2429, !dbg !2784

cond.true2427:                                    ; preds = %land.lhs.true2424
  %1271 = load i8*, i8** %string2.addr, align 8, !dbg !2784
  %1272 = load i8, i8* %1271, align 1, !dbg !2784
  %conv2428 = sext i8 %1272 to i32, !dbg !2784
  br label %cond.end2440, !dbg !2784

cond.false2429:                                   ; preds = %land.lhs.true2424
  %1273 = load i8*, i8** %d, align 8, !dbg !2784
  %1274 = load i8*, i8** %string2.addr, align 8, !dbg !2784
  %add.ptr2430 = getelementptr inbounds i8, i8* %1274, i64 -1, !dbg !2784
  %cmp2431 = icmp eq i8* %1273, %add.ptr2430, !dbg !2784
  br i1 %cmp2431, label %cond.true2433, label %cond.false2436, !dbg !2784

cond.true2433:                                    ; preds = %cond.false2429
  %1275 = load i8*, i8** %end1, align 8, !dbg !2784
  %add.ptr2434 = getelementptr inbounds i8, i8* %1275, i64 -1, !dbg !2784
  %1276 = load i8, i8* %add.ptr2434, align 1, !dbg !2784
  %conv2435 = sext i8 %1276 to i32, !dbg !2784
  br label %cond.end2438, !dbg !2784

cond.false2436:                                   ; preds = %cond.false2429
  %1277 = load i8*, i8** %d, align 8, !dbg !2784
  %1278 = load i8, i8* %1277, align 1, !dbg !2784
  %conv2437 = sext i8 %1278 to i32, !dbg !2784
  br label %cond.end2438, !dbg !2784

cond.end2438:                                     ; preds = %cond.false2436, %cond.true2433
  %cond2439 = phi i32 [ %conv2435, %cond.true2433 ], [ %conv2437, %cond.false2436 ], !dbg !2784
  br label %cond.end2440, !dbg !2784

cond.end2440:                                     ; preds = %cond.end2438, %cond.true2427
  %cond2441 = phi i32 [ %conv2428, %cond.true2427 ], [ %cond2439, %cond.end2438 ], !dbg !2784
  %conv2442 = trunc i32 %cond2441 to i8, !dbg !2784
  %idxprom2443 = zext i8 %conv2442 to i64, !dbg !2784
  %arrayidx2444 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2443, !dbg !2784
  %1279 = load i8, i8* %arrayidx2444, align 1, !dbg !2784
  %conv2445 = sext i8 %1279 to i32, !dbg !2784
  %cmp2446 = icmp eq i32 %conv2445, 1, !dbg !2784
  br i1 %cmp2446, label %land.lhs.true2448, label %if.end2486, !dbg !2785

land.lhs.true2448:                                ; preds = %cond.end2440
  %1280 = load i8*, i8** %d, align 8, !dbg !2786
  %1281 = load i32, i32* %size1.addr, align 4, !dbg !2786
  %tobool2449 = icmp ne i32 %1281, 0, !dbg !2786
  br i1 %tobool2449, label %cond.true2450, label %cond.false2451, !dbg !2786

cond.true2450:                                    ; preds = %land.lhs.true2448
  %1282 = load i8*, i8** %string1.addr, align 8, !dbg !2786
  br label %cond.end2452, !dbg !2786

cond.false2451:                                   ; preds = %land.lhs.true2448
  %1283 = load i8*, i8** %string2.addr, align 8, !dbg !2786
  br label %cond.end2452, !dbg !2786

cond.end2452:                                     ; preds = %cond.false2451, %cond.true2450
  %cond2453 = phi i8* [ %1282, %cond.true2450 ], [ %1283, %cond.false2451 ], !dbg !2786
  %cmp2454 = icmp eq i8* %1280, %cond2453, !dbg !2786
  br i1 %cmp2454, label %if.then2485, label %lor.lhs.false2456, !dbg !2786

lor.lhs.false2456:                                ; preds = %cond.end2452
  %1284 = load i32, i32* %size2.addr, align 4, !dbg !2786
  %tobool2457 = icmp ne i32 %1284, 0, !dbg !2786
  br i1 %tobool2457, label %lor.lhs.false2458, label %if.then2485, !dbg !2787

lor.lhs.false2458:                                ; preds = %lor.lhs.false2456
  %1285 = load i8*, i8** %d, align 8, !dbg !2788
  %add.ptr2459 = getelementptr inbounds i8, i8* %1285, i64 -1, !dbg !2788
  %1286 = load i8*, i8** %end1, align 8, !dbg !2788
  %cmp2460 = icmp eq i8* %add.ptr2459, %1286, !dbg !2788
  br i1 %cmp2460, label %cond.true2462, label %cond.false2464, !dbg !2788

cond.true2462:                                    ; preds = %lor.lhs.false2458
  %1287 = load i8*, i8** %string2.addr, align 8, !dbg !2788
  %1288 = load i8, i8* %1287, align 1, !dbg !2788
  %conv2463 = sext i8 %1288 to i32, !dbg !2788
  br label %cond.end2477, !dbg !2788

cond.false2464:                                   ; preds = %lor.lhs.false2458
  %1289 = load i8*, i8** %d, align 8, !dbg !2788
  %add.ptr2465 = getelementptr inbounds i8, i8* %1289, i64 -1, !dbg !2788
  %1290 = load i8*, i8** %string2.addr, align 8, !dbg !2788
  %add.ptr2466 = getelementptr inbounds i8, i8* %1290, i64 -1, !dbg !2788
  %cmp2467 = icmp eq i8* %add.ptr2465, %add.ptr2466, !dbg !2788
  br i1 %cmp2467, label %cond.true2469, label %cond.false2472, !dbg !2788

cond.true2469:                                    ; preds = %cond.false2464
  %1291 = load i8*, i8** %end1, align 8, !dbg !2788
  %add.ptr2470 = getelementptr inbounds i8, i8* %1291, i64 -1, !dbg !2788
  %1292 = load i8, i8* %add.ptr2470, align 1, !dbg !2788
  %conv2471 = sext i8 %1292 to i32, !dbg !2788
  br label %cond.end2475, !dbg !2788

cond.false2472:                                   ; preds = %cond.false2464
  %1293 = load i8*, i8** %d, align 8, !dbg !2788
  %add.ptr2473 = getelementptr inbounds i8, i8* %1293, i64 -1, !dbg !2788
  %1294 = load i8, i8* %add.ptr2473, align 1, !dbg !2788
  %conv2474 = sext i8 %1294 to i32, !dbg !2788
  br label %cond.end2475, !dbg !2788

cond.end2475:                                     ; preds = %cond.false2472, %cond.true2469
  %cond2476 = phi i32 [ %conv2471, %cond.true2469 ], [ %conv2474, %cond.false2472 ], !dbg !2788
  br label %cond.end2477, !dbg !2788

cond.end2477:                                     ; preds = %cond.end2475, %cond.true2462
  %cond2478 = phi i32 [ %conv2463, %cond.true2462 ], [ %cond2476, %cond.end2475 ], !dbg !2788
  %conv2479 = trunc i32 %cond2478 to i8, !dbg !2788
  %idxprom2480 = zext i8 %conv2479 to i64, !dbg !2788
  %arrayidx2481 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2480, !dbg !2788
  %1295 = load i8, i8* %arrayidx2481, align 1, !dbg !2788
  %conv2482 = sext i8 %1295 to i32, !dbg !2788
  %cmp2483 = icmp eq i32 %conv2482, 1, !dbg !2788
  br i1 %cmp2483, label %if.end2486, label %if.then2485, !dbg !2789

if.then2485:                                      ; preds = %cond.end2477, %lor.lhs.false2456, %cond.end2452
  br label %sw.epilog2674, !dbg !2790

if.end2486:                                       ; preds = %cond.end2477, %cond.end2440, %sw.bb2421
  br label %fail, !dbg !2791

sw.bb2487:                                        ; preds = %if.end572
  %1296 = load i8*, i8** %d, align 8, !dbg !2792
  %1297 = load i32, i32* %size1.addr, align 4, !dbg !2792
  %tobool2488 = icmp ne i32 %1297, 0, !dbg !2792
  br i1 %tobool2488, label %cond.true2489, label %cond.false2490, !dbg !2792

cond.true2489:                                    ; preds = %sw.bb2487
  %1298 = load i8*, i8** %string1.addr, align 8, !dbg !2792
  br label %cond.end2491, !dbg !2792

cond.false2490:                                   ; preds = %sw.bb2487
  %1299 = load i8*, i8** %string2.addr, align 8, !dbg !2792
  br label %cond.end2491, !dbg !2792

cond.end2491:                                     ; preds = %cond.false2490, %cond.true2489
  %cond2492 = phi i8* [ %1298, %cond.true2489 ], [ %1299, %cond.false2490 ], !dbg !2792
  %cmp2493 = icmp eq i8* %1296, %cond2492, !dbg !2792
  br i1 %cmp2493, label %if.end2552, label %lor.lhs.false2495, !dbg !2792

lor.lhs.false2495:                                ; preds = %cond.end2491
  %1300 = load i32, i32* %size2.addr, align 4, !dbg !2792
  %tobool2496 = icmp ne i32 %1300, 0, !dbg !2792
  br i1 %tobool2496, label %land.lhs.true2497, label %if.end2552, !dbg !2794

land.lhs.true2497:                                ; preds = %lor.lhs.false2495
  %1301 = load i8*, i8** %d, align 8, !dbg !2795
  %add.ptr2498 = getelementptr inbounds i8, i8* %1301, i64 -1, !dbg !2795
  %1302 = load i8*, i8** %end1, align 8, !dbg !2795
  %cmp2499 = icmp eq i8* %add.ptr2498, %1302, !dbg !2795
  br i1 %cmp2499, label %cond.true2501, label %cond.false2503, !dbg !2795

cond.true2501:                                    ; preds = %land.lhs.true2497
  %1303 = load i8*, i8** %string2.addr, align 8, !dbg !2795
  %1304 = load i8, i8* %1303, align 1, !dbg !2795
  %conv2502 = sext i8 %1304 to i32, !dbg !2795
  br label %cond.end2516, !dbg !2795

cond.false2503:                                   ; preds = %land.lhs.true2497
  %1305 = load i8*, i8** %d, align 8, !dbg !2795
  %add.ptr2504 = getelementptr inbounds i8, i8* %1305, i64 -1, !dbg !2795
  %1306 = load i8*, i8** %string2.addr, align 8, !dbg !2795
  %add.ptr2505 = getelementptr inbounds i8, i8* %1306, i64 -1, !dbg !2795
  %cmp2506 = icmp eq i8* %add.ptr2504, %add.ptr2505, !dbg !2795
  br i1 %cmp2506, label %cond.true2508, label %cond.false2511, !dbg !2795

cond.true2508:                                    ; preds = %cond.false2503
  %1307 = load i8*, i8** %end1, align 8, !dbg !2795
  %add.ptr2509 = getelementptr inbounds i8, i8* %1307, i64 -1, !dbg !2795
  %1308 = load i8, i8* %add.ptr2509, align 1, !dbg !2795
  %conv2510 = sext i8 %1308 to i32, !dbg !2795
  br label %cond.end2514, !dbg !2795

cond.false2511:                                   ; preds = %cond.false2503
  %1309 = load i8*, i8** %d, align 8, !dbg !2795
  %add.ptr2512 = getelementptr inbounds i8, i8* %1309, i64 -1, !dbg !2795
  %1310 = load i8, i8* %add.ptr2512, align 1, !dbg !2795
  %conv2513 = sext i8 %1310 to i32, !dbg !2795
  br label %cond.end2514, !dbg !2795

cond.end2514:                                     ; preds = %cond.false2511, %cond.true2508
  %cond2515 = phi i32 [ %conv2510, %cond.true2508 ], [ %conv2513, %cond.false2511 ], !dbg !2795
  br label %cond.end2516, !dbg !2795

cond.end2516:                                     ; preds = %cond.end2514, %cond.true2501
  %cond2517 = phi i32 [ %conv2502, %cond.true2501 ], [ %cond2515, %cond.end2514 ], !dbg !2795
  %conv2518 = trunc i32 %cond2517 to i8, !dbg !2795
  %idxprom2519 = zext i8 %conv2518 to i64, !dbg !2795
  %arrayidx2520 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2519, !dbg !2795
  %1311 = load i8, i8* %arrayidx2520, align 1, !dbg !2795
  %conv2521 = sext i8 %1311 to i32, !dbg !2795
  %cmp2522 = icmp eq i32 %conv2521, 1, !dbg !2795
  br i1 %cmp2522, label %land.lhs.true2524, label %if.end2552, !dbg !2796

land.lhs.true2524:                                ; preds = %cond.end2516
  %1312 = load i8*, i8** %d, align 8, !dbg !2797
  %1313 = load i8*, i8** %end2, align 8, !dbg !2797
  %cmp2525 = icmp eq i8* %1312, %1313, !dbg !2797
  br i1 %cmp2525, label %if.then2551, label %lor.lhs.false2527, !dbg !2798

lor.lhs.false2527:                                ; preds = %land.lhs.true2524
  %1314 = load i8*, i8** %d, align 8, !dbg !2799
  %1315 = load i8*, i8** %end1, align 8, !dbg !2799
  %cmp2528 = icmp eq i8* %1314, %1315, !dbg !2799
  br i1 %cmp2528, label %cond.true2530, label %cond.false2532, !dbg !2799

cond.true2530:                                    ; preds = %lor.lhs.false2527
  %1316 = load i8*, i8** %string2.addr, align 8, !dbg !2799
  %1317 = load i8, i8* %1316, align 1, !dbg !2799
  %conv2531 = sext i8 %1317 to i32, !dbg !2799
  br label %cond.end2543, !dbg !2799

cond.false2532:                                   ; preds = %lor.lhs.false2527
  %1318 = load i8*, i8** %d, align 8, !dbg !2799
  %1319 = load i8*, i8** %string2.addr, align 8, !dbg !2799
  %add.ptr2533 = getelementptr inbounds i8, i8* %1319, i64 -1, !dbg !2799
  %cmp2534 = icmp eq i8* %1318, %add.ptr2533, !dbg !2799
  br i1 %cmp2534, label %cond.true2536, label %cond.false2539, !dbg !2799

cond.true2536:                                    ; preds = %cond.false2532
  %1320 = load i8*, i8** %end1, align 8, !dbg !2799
  %add.ptr2537 = getelementptr inbounds i8, i8* %1320, i64 -1, !dbg !2799
  %1321 = load i8, i8* %add.ptr2537, align 1, !dbg !2799
  %conv2538 = sext i8 %1321 to i32, !dbg !2799
  br label %cond.end2541, !dbg !2799

cond.false2539:                                   ; preds = %cond.false2532
  %1322 = load i8*, i8** %d, align 8, !dbg !2799
  %1323 = load i8, i8* %1322, align 1, !dbg !2799
  %conv2540 = sext i8 %1323 to i32, !dbg !2799
  br label %cond.end2541, !dbg !2799

cond.end2541:                                     ; preds = %cond.false2539, %cond.true2536
  %cond2542 = phi i32 [ %conv2538, %cond.true2536 ], [ %conv2540, %cond.false2539 ], !dbg !2799
  br label %cond.end2543, !dbg !2799

cond.end2543:                                     ; preds = %cond.end2541, %cond.true2530
  %cond2544 = phi i32 [ %conv2531, %cond.true2530 ], [ %cond2542, %cond.end2541 ], !dbg !2799
  %conv2545 = trunc i32 %cond2544 to i8, !dbg !2799
  %idxprom2546 = zext i8 %conv2545 to i64, !dbg !2799
  %arrayidx2547 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2546, !dbg !2799
  %1324 = load i8, i8* %arrayidx2547, align 1, !dbg !2799
  %conv2548 = sext i8 %1324 to i32, !dbg !2799
  %cmp2549 = icmp eq i32 %conv2548, 1, !dbg !2799
  br i1 %cmp2549, label %if.end2552, label %if.then2551, !dbg !2800

if.then2551:                                      ; preds = %cond.end2543, %land.lhs.true2524
  br label %sw.epilog2674, !dbg !2801

if.end2552:                                       ; preds = %cond.end2543, %cond.end2516, %lor.lhs.false2495, %cond.end2491
  br label %fail, !dbg !2802

sw.bb2553:                                        ; preds = %if.end572
  br label %while.cond2554, !dbg !2803

while.cond2554:                                   ; preds = %if.end2561, %sw.bb2553
  %1325 = load i8*, i8** %d, align 8, !dbg !2803
  %1326 = load i8*, i8** %dend, align 8, !dbg !2803
  %cmp2555 = icmp eq i8* %1325, %1326, !dbg !2803
  br i1 %cmp2555, label %while.body2557, label %while.end2562, !dbg !2803

while.body2557:                                   ; preds = %while.cond2554
  %1327 = load i8*, i8** %dend, align 8, !dbg !2804
  %1328 = load i8*, i8** %end_match_2, align 8, !dbg !2804
  %cmp2558 = icmp eq i8* %1327, %1328, !dbg !2804
  br i1 %cmp2558, label %if.then2560, label %if.end2561, !dbg !2807

if.then2560:                                      ; preds = %while.body2557
  br label %fail, !dbg !2804

if.end2561:                                       ; preds = %while.body2557
  %1329 = load i8*, i8** %string2.addr, align 8, !dbg !2807
  store i8* %1329, i8** %d, align 8, !dbg !2807
  %1330 = load i8*, i8** %end_match_2, align 8, !dbg !2807
  store i8* %1330, i8** %dend, align 8, !dbg !2807
  br label %while.cond2554, !dbg !2803, !llvm.loop !2808

while.end2562:                                    ; preds = %while.cond2554
  %1331 = load i8*, i8** %d, align 8, !dbg !2809
  %1332 = load i8*, i8** %end1, align 8, !dbg !2809
  %cmp2563 = icmp eq i8* %1331, %1332, !dbg !2809
  br i1 %cmp2563, label %cond.true2565, label %cond.false2567, !dbg !2809

cond.true2565:                                    ; preds = %while.end2562
  %1333 = load i8*, i8** %string2.addr, align 8, !dbg !2809
  %1334 = load i8, i8* %1333, align 1, !dbg !2809
  %conv2566 = sext i8 %1334 to i32, !dbg !2809
  br label %cond.end2578, !dbg !2809

cond.false2567:                                   ; preds = %while.end2562
  %1335 = load i8*, i8** %d, align 8, !dbg !2809
  %1336 = load i8*, i8** %string2.addr, align 8, !dbg !2809
  %add.ptr2568 = getelementptr inbounds i8, i8* %1336, i64 -1, !dbg !2809
  %cmp2569 = icmp eq i8* %1335, %add.ptr2568, !dbg !2809
  br i1 %cmp2569, label %cond.true2571, label %cond.false2574, !dbg !2809

cond.true2571:                                    ; preds = %cond.false2567
  %1337 = load i8*, i8** %end1, align 8, !dbg !2809
  %add.ptr2572 = getelementptr inbounds i8, i8* %1337, i64 -1, !dbg !2809
  %1338 = load i8, i8* %add.ptr2572, align 1, !dbg !2809
  %conv2573 = sext i8 %1338 to i32, !dbg !2809
  br label %cond.end2576, !dbg !2809

cond.false2574:                                   ; preds = %cond.false2567
  %1339 = load i8*, i8** %d, align 8, !dbg !2809
  %1340 = load i8, i8* %1339, align 1, !dbg !2809
  %conv2575 = sext i8 %1340 to i32, !dbg !2809
  br label %cond.end2576, !dbg !2809

cond.end2576:                                     ; preds = %cond.false2574, %cond.true2571
  %cond2577 = phi i32 [ %conv2573, %cond.true2571 ], [ %conv2575, %cond.false2574 ], !dbg !2809
  br label %cond.end2578, !dbg !2809

cond.end2578:                                     ; preds = %cond.end2576, %cond.true2565
  %cond2579 = phi i32 [ %conv2566, %cond.true2565 ], [ %cond2577, %cond.end2576 ], !dbg !2809
  %conv2580 = trunc i32 %cond2579 to i8, !dbg !2809
  %idxprom2581 = zext i8 %conv2580 to i64, !dbg !2809
  %arrayidx2582 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2581, !dbg !2809
  %1341 = load i8, i8* %arrayidx2582, align 1, !dbg !2809
  %conv2583 = sext i8 %1341 to i32, !dbg !2809
  %cmp2584 = icmp eq i32 %conv2583, 1, !dbg !2809
  br i1 %cmp2584, label %if.end2587, label %if.then2586, !dbg !2811

if.then2586:                                      ; preds = %cond.end2578
  br label %fail, !dbg !2812

if.end2587:                                       ; preds = %cond.end2578
  br label %do.body2588, !dbg !2813

do.body2588:                                      ; preds = %if.end2587
  %1342 = load i32, i32* %set_regs_matched_done, align 4, !dbg !2814
  %tobool2589 = icmp ne i32 %1342, 0, !dbg !2814
  br i1 %tobool2589, label %if.end2609, label %if.then2590, !dbg !2817

if.then2590:                                      ; preds = %do.body2588
  call void @llvm.dbg.declare(metadata i64* %r2591, metadata !2818, metadata !DIExpression()), !dbg !2820
  store i32 1, i32* %set_regs_matched_done, align 4, !dbg !2820
  %1343 = load i64, i64* %lowest_active_reg, align 8, !dbg !2821
  store i64 %1343, i64* %r2591, align 8, !dbg !2821
  br label %for.cond2592, !dbg !2821

for.cond2592:                                     ; preds = %for.inc2606, %if.then2590
  %1344 = load i64, i64* %r2591, align 8, !dbg !2823
  %1345 = load i64, i64* %highest_active_reg, align 8, !dbg !2823
  %cmp2593 = icmp ule i64 %1344, %1345, !dbg !2823
  br i1 %cmp2593, label %for.body2595, label %for.end2608, !dbg !2821

for.body2595:                                     ; preds = %for.cond2592
  %1346 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2825
  %1347 = load i64, i64* %r2591, align 8, !dbg !2825
  %arrayidx2596 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %1346, i64 %1347, !dbg !2825
  %bits2597 = bitcast %union.byte_register_info_type* %arrayidx2596 to %struct.anon*, !dbg !2825
  %1348 = bitcast %struct.anon* %bits2597 to i8*, !dbg !2825
  %bf.load2598 = load i8, i8* %1348, align 8, !dbg !2825
  %bf.clear2599 = and i8 %bf.load2598, -17, !dbg !2825
  %bf.set2600 = or i8 %bf.clear2599, 16, !dbg !2825
  store i8 %bf.set2600, i8* %1348, align 8, !dbg !2825
  %1349 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2825
  %1350 = load i64, i64* %r2591, align 8, !dbg !2825
  %arrayidx2601 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %1349, i64 %1350, !dbg !2825
  %bits2602 = bitcast %union.byte_register_info_type* %arrayidx2601 to %struct.anon*, !dbg !2825
  %1351 = bitcast %struct.anon* %bits2602 to i8*, !dbg !2825
  %bf.load2603 = load i8, i8* %1351, align 8, !dbg !2825
  %bf.clear2604 = and i8 %bf.load2603, -9, !dbg !2825
  %bf.set2605 = or i8 %bf.clear2604, 8, !dbg !2825
  store i8 %bf.set2605, i8* %1351, align 8, !dbg !2825
  br label %for.inc2606, !dbg !2825

for.inc2606:                                      ; preds = %for.body2595
  %1352 = load i64, i64* %r2591, align 8, !dbg !2823
  %inc2607 = add i64 %1352, 1, !dbg !2823
  store i64 %inc2607, i64* %r2591, align 8, !dbg !2823
  br label %for.cond2592, !dbg !2823, !llvm.loop !2827

for.end2608:                                      ; preds = %for.cond2592
  br label %if.end2609, !dbg !2820

if.end2609:                                       ; preds = %for.end2608, %do.body2588
  br label %do.end2611, !dbg !2817

do.end2611:                                       ; preds = %if.end2609
  %1353 = load i8*, i8** %d, align 8, !dbg !2828
  %incdec.ptr2612 = getelementptr inbounds i8, i8* %1353, i32 1, !dbg !2828
  store i8* %incdec.ptr2612, i8** %d, align 8, !dbg !2828
  br label %sw.epilog2674, !dbg !2829

sw.bb2613:                                        ; preds = %if.end572
  br label %while.cond2614, !dbg !2830

while.cond2614:                                   ; preds = %if.end2621, %sw.bb2613
  %1354 = load i8*, i8** %d, align 8, !dbg !2830
  %1355 = load i8*, i8** %dend, align 8, !dbg !2830
  %cmp2615 = icmp eq i8* %1354, %1355, !dbg !2830
  br i1 %cmp2615, label %while.body2617, label %while.end2622, !dbg !2830

while.body2617:                                   ; preds = %while.cond2614
  %1356 = load i8*, i8** %dend, align 8, !dbg !2831
  %1357 = load i8*, i8** %end_match_2, align 8, !dbg !2831
  %cmp2618 = icmp eq i8* %1356, %1357, !dbg !2831
  br i1 %cmp2618, label %if.then2620, label %if.end2621, !dbg !2834

if.then2620:                                      ; preds = %while.body2617
  br label %fail, !dbg !2831

if.end2621:                                       ; preds = %while.body2617
  %1358 = load i8*, i8** %string2.addr, align 8, !dbg !2834
  store i8* %1358, i8** %d, align 8, !dbg !2834
  %1359 = load i8*, i8** %end_match_2, align 8, !dbg !2834
  store i8* %1359, i8** %dend, align 8, !dbg !2834
  br label %while.cond2614, !dbg !2830, !llvm.loop !2835

while.end2622:                                    ; preds = %while.cond2614
  %1360 = load i8*, i8** %d, align 8, !dbg !2836
  %1361 = load i8*, i8** %end1, align 8, !dbg !2836
  %cmp2623 = icmp eq i8* %1360, %1361, !dbg !2836
  br i1 %cmp2623, label %cond.true2625, label %cond.false2627, !dbg !2836

cond.true2625:                                    ; preds = %while.end2622
  %1362 = load i8*, i8** %string2.addr, align 8, !dbg !2836
  %1363 = load i8, i8* %1362, align 1, !dbg !2836
  %conv2626 = sext i8 %1363 to i32, !dbg !2836
  br label %cond.end2638, !dbg !2836

cond.false2627:                                   ; preds = %while.end2622
  %1364 = load i8*, i8** %d, align 8, !dbg !2836
  %1365 = load i8*, i8** %string2.addr, align 8, !dbg !2836
  %add.ptr2628 = getelementptr inbounds i8, i8* %1365, i64 -1, !dbg !2836
  %cmp2629 = icmp eq i8* %1364, %add.ptr2628, !dbg !2836
  br i1 %cmp2629, label %cond.true2631, label %cond.false2634, !dbg !2836

cond.true2631:                                    ; preds = %cond.false2627
  %1366 = load i8*, i8** %end1, align 8, !dbg !2836
  %add.ptr2632 = getelementptr inbounds i8, i8* %1366, i64 -1, !dbg !2836
  %1367 = load i8, i8* %add.ptr2632, align 1, !dbg !2836
  %conv2633 = sext i8 %1367 to i32, !dbg !2836
  br label %cond.end2636, !dbg !2836

cond.false2634:                                   ; preds = %cond.false2627
  %1368 = load i8*, i8** %d, align 8, !dbg !2836
  %1369 = load i8, i8* %1368, align 1, !dbg !2836
  %conv2635 = sext i8 %1369 to i32, !dbg !2836
  br label %cond.end2636, !dbg !2836

cond.end2636:                                     ; preds = %cond.false2634, %cond.true2631
  %cond2637 = phi i32 [ %conv2633, %cond.true2631 ], [ %conv2635, %cond.false2634 ], !dbg !2836
  br label %cond.end2638, !dbg !2836

cond.end2638:                                     ; preds = %cond.end2636, %cond.true2625
  %cond2639 = phi i32 [ %conv2626, %cond.true2625 ], [ %cond2637, %cond.end2636 ], !dbg !2836
  %conv2640 = trunc i32 %cond2639 to i8, !dbg !2836
  %idxprom2641 = zext i8 %conv2640 to i64, !dbg !2836
  %arrayidx2642 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom2641, !dbg !2836
  %1370 = load i8, i8* %arrayidx2642, align 1, !dbg !2836
  %conv2643 = sext i8 %1370 to i32, !dbg !2836
  %cmp2644 = icmp eq i32 %conv2643, 1, !dbg !2836
  br i1 %cmp2644, label %if.then2646, label %if.end2647, !dbg !2838

if.then2646:                                      ; preds = %cond.end2638
  br label %fail, !dbg !2839

if.end2647:                                       ; preds = %cond.end2638
  br label %do.body2648, !dbg !2840

do.body2648:                                      ; preds = %if.end2647
  %1371 = load i32, i32* %set_regs_matched_done, align 4, !dbg !2841
  %tobool2649 = icmp ne i32 %1371, 0, !dbg !2841
  br i1 %tobool2649, label %if.end2669, label %if.then2650, !dbg !2844

if.then2650:                                      ; preds = %do.body2648
  call void @llvm.dbg.declare(metadata i64* %r2651, metadata !2845, metadata !DIExpression()), !dbg !2847
  store i32 1, i32* %set_regs_matched_done, align 4, !dbg !2847
  %1372 = load i64, i64* %lowest_active_reg, align 8, !dbg !2848
  store i64 %1372, i64* %r2651, align 8, !dbg !2848
  br label %for.cond2652, !dbg !2848

for.cond2652:                                     ; preds = %for.inc2666, %if.then2650
  %1373 = load i64, i64* %r2651, align 8, !dbg !2850
  %1374 = load i64, i64* %highest_active_reg, align 8, !dbg !2850
  %cmp2653 = icmp ule i64 %1373, %1374, !dbg !2850
  br i1 %cmp2653, label %for.body2655, label %for.end2668, !dbg !2848

for.body2655:                                     ; preds = %for.cond2652
  %1375 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2852
  %1376 = load i64, i64* %r2651, align 8, !dbg !2852
  %arrayidx2656 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %1375, i64 %1376, !dbg !2852
  %bits2657 = bitcast %union.byte_register_info_type* %arrayidx2656 to %struct.anon*, !dbg !2852
  %1377 = bitcast %struct.anon* %bits2657 to i8*, !dbg !2852
  %bf.load2658 = load i8, i8* %1377, align 8, !dbg !2852
  %bf.clear2659 = and i8 %bf.load2658, -17, !dbg !2852
  %bf.set2660 = or i8 %bf.clear2659, 16, !dbg !2852
  store i8 %bf.set2660, i8* %1377, align 8, !dbg !2852
  %1378 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2852
  %1379 = load i64, i64* %r2651, align 8, !dbg !2852
  %arrayidx2661 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %1378, i64 %1379, !dbg !2852
  %bits2662 = bitcast %union.byte_register_info_type* %arrayidx2661 to %struct.anon*, !dbg !2852
  %1380 = bitcast %struct.anon* %bits2662 to i8*, !dbg !2852
  %bf.load2663 = load i8, i8* %1380, align 8, !dbg !2852
  %bf.clear2664 = and i8 %bf.load2663, -9, !dbg !2852
  %bf.set2665 = or i8 %bf.clear2664, 8, !dbg !2852
  store i8 %bf.set2665, i8* %1380, align 8, !dbg !2852
  br label %for.inc2666, !dbg !2852

for.inc2666:                                      ; preds = %for.body2655
  %1381 = load i64, i64* %r2651, align 8, !dbg !2850
  %inc2667 = add i64 %1381, 1, !dbg !2850
  store i64 %inc2667, i64* %r2651, align 8, !dbg !2850
  br label %for.cond2652, !dbg !2850, !llvm.loop !2854

for.end2668:                                      ; preds = %for.cond2652
  br label %if.end2669, !dbg !2847

if.end2669:                                       ; preds = %for.end2668, %do.body2648
  br label %do.end2671, !dbg !2844

do.end2671:                                       ; preds = %if.end2669
  %1382 = load i8*, i8** %d, align 8, !dbg !2855
  %incdec.ptr2672 = getelementptr inbounds i8, i8* %1382, i32 1, !dbg !2855
  store i8* %incdec.ptr2672, i8** %d, align 8, !dbg !2855
  br label %sw.epilog2674, !dbg !2856

sw.default2673:                                   ; preds = %if.end572
  call void @abort() #5, !dbg !2857
  unreachable, !dbg !2857

sw.epilog2674:                                    ; preds = %do.end2671, %do.end2611, %if.then2551, %if.then2485, %if.end2420, %if.then2345, %if.then2288, %do.end2274, %if.end2236, %if.end2207, %do.end2170, %do.end1967, %do.end1618, %do.end1471, %if.then1355, %if.then1350, %if.then1337, %if.then1318, %if.then1306, %if.then1294, %for.end1277, %if.end1135, %if.end851, %do.end787, %do.end710, %do.end645, %sw.bb
  br label %for.cond156, !dbg !2858, !llvm.loop !2859

fail:                                             ; preds = %if.then2777, %if.then2740, %if.then2646, %if.then2620, %if.then2586, %if.then2560, %if.end2552, %if.end2486, %if.then2419, %if.then2362, %if.end2346, %if.end1356, %if.end1351, %if.end1339, %if.end1308, %if.then1247, %if.then1219, %if.then1149, %do.end1133, %if.then762, %if.then724, %if.then685, %if.then653, %if.then616, %if.then607, %if.then595, %if.then585, %if.end211
  call void @llvm.dbg.label(metadata !2862), !dbg !2863
  %avail2675 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2864
  %1383 = load i32, i32* %avail2675, align 4, !dbg !2864
  %cmp2676 = icmp eq i32 %1383, 0, !dbg !2864
  br i1 %cmp2676, label %if.else2789, label %if.then2678, !dbg !2866

if.then2678:                                      ; preds = %fail
  call void @llvm.dbg.declare(metadata i64* %this_reg2679, metadata !2867, metadata !DIExpression()), !dbg !2870
  call void @llvm.dbg.declare(metadata i8** %string_temp2680, metadata !2871, metadata !DIExpression()), !dbg !2870
  %stack2681 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2870
  %1384 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2681, align 8, !dbg !2870
  %avail2682 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2870
  %1385 = load i32, i32* %avail2682, align 4, !dbg !2870
  %dec2683 = add i32 %1385, -1, !dbg !2870
  store i32 %dec2683, i32* %avail2682, align 4, !dbg !2870
  %idxprom2684 = zext i32 %dec2683 to i64, !dbg !2870
  %arrayidx2685 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1384, i64 %idxprom2684, !dbg !2870
  %pointer2686 = bitcast %union.byte_fail_stack_elt* %arrayidx2685 to i8**, !dbg !2870
  %1386 = load i8*, i8** %pointer2686, align 8, !dbg !2870
  store i8* %1386, i8** %string_temp2680, align 8, !dbg !2870
  %1387 = load i8*, i8** %string_temp2680, align 8, !dbg !2872
  %cmp2687 = icmp ne i8* %1387, null, !dbg !2872
  br i1 %cmp2687, label %if.then2689, label %if.end2690, !dbg !2870

if.then2689:                                      ; preds = %if.then2678
  %1388 = load i8*, i8** %string_temp2680, align 8, !dbg !2872
  store i8* %1388, i8** %d, align 8, !dbg !2872
  br label %if.end2690, !dbg !2872

if.end2690:                                       ; preds = %if.then2689, %if.then2678
  %stack2691 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2870
  %1389 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2691, align 8, !dbg !2870
  %avail2692 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2870
  %1390 = load i32, i32* %avail2692, align 4, !dbg !2870
  %dec2693 = add i32 %1390, -1, !dbg !2870
  store i32 %dec2693, i32* %avail2692, align 4, !dbg !2870
  %idxprom2694 = zext i32 %dec2693 to i64, !dbg !2870
  %arrayidx2695 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1389, i64 %idxprom2694, !dbg !2870
  %pointer2696 = bitcast %union.byte_fail_stack_elt* %arrayidx2695 to i8**, !dbg !2870
  %1391 = load i8*, i8** %pointer2696, align 8, !dbg !2870
  store i8* %1391, i8** %p, align 8, !dbg !2870
  %stack2697 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2870
  %1392 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2697, align 8, !dbg !2870
  %avail2698 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2870
  %1393 = load i32, i32* %avail2698, align 4, !dbg !2870
  %dec2699 = add i32 %1393, -1, !dbg !2870
  store i32 %dec2699, i32* %avail2698, align 4, !dbg !2870
  %idxprom2700 = zext i32 %dec2699 to i64, !dbg !2870
  %arrayidx2701 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1392, i64 %idxprom2700, !dbg !2870
  %integer2702 = bitcast %union.byte_fail_stack_elt* %arrayidx2701 to i32*, !dbg !2870
  %1394 = load i32, i32* %integer2702, align 8, !dbg !2870
  %conv2703 = sext i32 %1394 to i64, !dbg !2870
  store i64 %conv2703, i64* %highest_active_reg, align 8, !dbg !2870
  %stack2704 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2870
  %1395 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2704, align 8, !dbg !2870
  %avail2705 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2870
  %1396 = load i32, i32* %avail2705, align 4, !dbg !2870
  %dec2706 = add i32 %1396, -1, !dbg !2870
  store i32 %dec2706, i32* %avail2705, align 4, !dbg !2870
  %idxprom2707 = zext i32 %dec2706 to i64, !dbg !2870
  %arrayidx2708 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1395, i64 %idxprom2707, !dbg !2870
  %integer2709 = bitcast %union.byte_fail_stack_elt* %arrayidx2708 to i32*, !dbg !2870
  %1397 = load i32, i32* %integer2709, align 8, !dbg !2870
  %conv2710 = sext i32 %1397 to i64, !dbg !2870
  store i64 %conv2710, i64* %lowest_active_reg, align 8, !dbg !2870
  %1398 = load i64, i64* %highest_active_reg, align 8, !dbg !2874
  store i64 %1398, i64* %this_reg2679, align 8, !dbg !2874
  br label %for.cond2711, !dbg !2874

for.cond2711:                                     ; preds = %for.inc2736, %if.end2690
  %1399 = load i64, i64* %this_reg2679, align 8, !dbg !2877
  %1400 = load i64, i64* %lowest_active_reg, align 8, !dbg !2877
  %cmp2712 = icmp uge i64 %1399, %1400, !dbg !2877
  br i1 %cmp2712, label %for.body2714, label %for.end2738, !dbg !2874

for.body2714:                                     ; preds = %for.cond2711
  %1401 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2879
  %1402 = load i64, i64* %this_reg2679, align 8, !dbg !2879
  %arrayidx2715 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %1401, i64 %1402, !dbg !2879
  %word2716 = bitcast %union.byte_register_info_type* %arrayidx2715 to %union.byte_fail_stack_elt*, !dbg !2879
  %stack2717 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2879
  %1403 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2717, align 8, !dbg !2879
  %avail2718 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2879
  %1404 = load i32, i32* %avail2718, align 4, !dbg !2879
  %dec2719 = add i32 %1404, -1, !dbg !2879
  store i32 %dec2719, i32* %avail2718, align 4, !dbg !2879
  %idxprom2720 = zext i32 %dec2719 to i64, !dbg !2879
  %arrayidx2721 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1403, i64 %idxprom2720, !dbg !2879
  %1405 = bitcast %union.byte_fail_stack_elt* %word2716 to i8*, !dbg !2879
  %1406 = bitcast %union.byte_fail_stack_elt* %arrayidx2721 to i8*, !dbg !2879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1405, i8* align 8 %1406, i64 8, i1 false), !dbg !2879
  %stack2722 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2879
  %1407 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2722, align 8, !dbg !2879
  %avail2723 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2879
  %1408 = load i32, i32* %avail2723, align 4, !dbg !2879
  %dec2724 = add i32 %1408, -1, !dbg !2879
  store i32 %dec2724, i32* %avail2723, align 4, !dbg !2879
  %idxprom2725 = zext i32 %dec2724 to i64, !dbg !2879
  %arrayidx2726 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1407, i64 %idxprom2725, !dbg !2879
  %pointer2727 = bitcast %union.byte_fail_stack_elt* %arrayidx2726 to i8**, !dbg !2879
  %1409 = load i8*, i8** %pointer2727, align 8, !dbg !2879
  %1410 = load i8**, i8*** %regend, align 8, !dbg !2879
  %1411 = load i64, i64* %this_reg2679, align 8, !dbg !2879
  %arrayidx2728 = getelementptr inbounds i8*, i8** %1410, i64 %1411, !dbg !2879
  store i8* %1409, i8** %arrayidx2728, align 8, !dbg !2879
  %stack2729 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 0, !dbg !2879
  %1412 = load %union.byte_fail_stack_elt*, %union.byte_fail_stack_elt** %stack2729, align 8, !dbg !2879
  %avail2730 = getelementptr inbounds %struct.byte_fail_stack_type, %struct.byte_fail_stack_type* %fail_stack, i32 0, i32 2, !dbg !2879
  %1413 = load i32, i32* %avail2730, align 4, !dbg !2879
  %dec2731 = add i32 %1413, -1, !dbg !2879
  store i32 %dec2731, i32* %avail2730, align 4, !dbg !2879
  %idxprom2732 = zext i32 %dec2731 to i64, !dbg !2879
  %arrayidx2733 = getelementptr inbounds %union.byte_fail_stack_elt, %union.byte_fail_stack_elt* %1412, i64 %idxprom2732, !dbg !2879
  %pointer2734 = bitcast %union.byte_fail_stack_elt* %arrayidx2733 to i8**, !dbg !2879
  %1414 = load i8*, i8** %pointer2734, align 8, !dbg !2879
  %1415 = load i8**, i8*** %regstart, align 8, !dbg !2879
  %1416 = load i64, i64* %this_reg2679, align 8, !dbg !2879
  %arrayidx2735 = getelementptr inbounds i8*, i8** %1415, i64 %1416, !dbg !2879
  store i8* %1414, i8** %arrayidx2735, align 8, !dbg !2879
  br label %for.inc2736, !dbg !2879

for.inc2736:                                      ; preds = %for.body2714
  %1417 = load i64, i64* %this_reg2679, align 8, !dbg !2877
  %dec2737 = add i64 %1417, -1, !dbg !2877
  store i64 %dec2737, i64* %this_reg2679, align 8, !dbg !2877
  br label %for.cond2711, !dbg !2877, !llvm.loop !2881

for.end2738:                                      ; preds = %for.cond2711
  store i32 0, i32* %set_regs_matched_done, align 4, !dbg !2870
  %1418 = load i8*, i8** %p, align 8, !dbg !2882
  %tobool2739 = icmp ne i8* %1418, null, !dbg !2882
  br i1 %tobool2739, label %if.end2741, label %if.then2740, !dbg !2884

if.then2740:                                      ; preds = %for.end2738
  br label %fail, !dbg !2885

if.end2741:                                       ; preds = %for.end2738
  %1419 = load i8*, i8** %p, align 8, !dbg !2886
  %1420 = load i8*, i8** %pend, align 8, !dbg !2888
  %cmp2742 = icmp ult i8* %1419, %1420, !dbg !2889
  br i1 %cmp2742, label %if.then2744, label %if.end2781, !dbg !2890

if.then2744:                                      ; preds = %if.end2741
  call void @llvm.dbg.declare(metadata i8* %is_a_jump_n2745, metadata !2891, metadata !DIExpression()), !dbg !2893
  store i8 0, i8* %is_a_jump_n2745, align 1, !dbg !2893
  %1421 = load i8*, i8** %p, align 8, !dbg !2894
  %1422 = load i8, i8* %1421, align 1, !dbg !2895
  %conv2746 = zext i8 %1422 to i32, !dbg !2896
  switch i32 %conv2746, label %sw.default2779 [
    i32 22, label %sw.bb2747
    i32 18, label %sw.bb2748
    i32 17, label %sw.bb2748
    i32 13, label %sw.bb2748
  ], !dbg !2897

sw.bb2747:                                        ; preds = %if.then2744
  store i8 1, i8* %is_a_jump_n2745, align 1, !dbg !2898
  br label %sw.bb2748, !dbg !2900

sw.bb2748:                                        ; preds = %if.then2744, %if.then2744, %if.then2744, %sw.bb2747
  %1423 = load i8*, i8** %p, align 8, !dbg !2901
  %add.ptr2749 = getelementptr inbounds i8, i8* %1423, i64 1, !dbg !2902
  store i8* %add.ptr2749, i8** %p1, align 8, !dbg !2903
  br label %do.body2750, !dbg !2904

do.body2750:                                      ; preds = %sw.bb2748
  br label %do.body2751, !dbg !2905

do.body2751:                                      ; preds = %do.body2750
  %1424 = load i8*, i8** %p1, align 8, !dbg !2907
  %1425 = load i8, i8* %1424, align 1, !dbg !2907
  %conv2752 = zext i8 %1425 to i32, !dbg !2907
  %and2753 = and i32 %conv2752, 255, !dbg !2907
  store i32 %and2753, i32* %mcnt, align 4, !dbg !2907
  %1426 = load i8*, i8** %p1, align 8, !dbg !2907
  %add.ptr2754 = getelementptr inbounds i8, i8* %1426, i64 1, !dbg !2907
  %1427 = load i8, i8* %add.ptr2754, align 1, !dbg !2907
  %conv2755 = sext i8 %1427 to i32, !dbg !2907
  %shl2756 = shl i32 %conv2755, 8, !dbg !2907
  %1428 = load i32, i32* %mcnt, align 4, !dbg !2907
  %add2757 = add nsw i32 %1428, %shl2756, !dbg !2907
  store i32 %add2757, i32* %mcnt, align 4, !dbg !2907
  br label %do.end2759, !dbg !2907

do.end2759:                                       ; preds = %do.body2751
  %1429 = load i8*, i8** %p1, align 8, !dbg !2905
  %add.ptr2760 = getelementptr inbounds i8, i8* %1429, i64 2, !dbg !2905
  store i8* %add.ptr2760, i8** %p1, align 8, !dbg !2905
  br label %do.end2762, !dbg !2905

do.end2762:                                       ; preds = %do.end2759
  %1430 = load i32, i32* %mcnt, align 4, !dbg !2909
  %1431 = load i8*, i8** %p1, align 8, !dbg !2910
  %idx.ext2763 = sext i32 %1430 to i64, !dbg !2910
  %add.ptr2764 = getelementptr inbounds i8, i8* %1431, i64 %idx.ext2763, !dbg !2910
  store i8* %add.ptr2764, i8** %p1, align 8, !dbg !2910
  %1432 = load i8, i8* %is_a_jump_n2745, align 1, !dbg !2911
  %conv2765 = sext i8 %1432 to i32, !dbg !2911
  %tobool2766 = icmp ne i32 %conv2765, 0, !dbg !2911
  br i1 %tobool2766, label %land.lhs.true2767, label %lor.lhs.false2771, !dbg !2913

land.lhs.true2767:                                ; preds = %do.end2762
  %1433 = load i8*, i8** %p1, align 8, !dbg !2914
  %1434 = load i8, i8* %1433, align 1, !dbg !2915
  %conv2768 = zext i8 %1434 to i32, !dbg !2916
  %cmp2769 = icmp eq i32 %conv2768, 21, !dbg !2917
  br i1 %cmp2769, label %if.then2777, label %lor.lhs.false2771, !dbg !2918

lor.lhs.false2771:                                ; preds = %land.lhs.true2767, %do.end2762
  %1435 = load i8, i8* %is_a_jump_n2745, align 1, !dbg !2919
  %tobool2772 = icmp ne i8 %1435, 0, !dbg !2919
  br i1 %tobool2772, label %if.end2778, label %land.lhs.true2773, !dbg !2920

land.lhs.true2773:                                ; preds = %lor.lhs.false2771
  %1436 = load i8*, i8** %p1, align 8, !dbg !2921
  %1437 = load i8, i8* %1436, align 1, !dbg !2922
  %conv2774 = zext i8 %1437 to i32, !dbg !2923
  %cmp2775 = icmp eq i32 %conv2774, 15, !dbg !2924
  br i1 %cmp2775, label %if.then2777, label %if.end2778, !dbg !2925

if.then2777:                                      ; preds = %land.lhs.true2773, %land.lhs.true2767
  br label %fail, !dbg !2926

if.end2778:                                       ; preds = %land.lhs.true2773, %lor.lhs.false2771
  br label %sw.epilog2780, !dbg !2927

sw.default2779:                                   ; preds = %if.then2744
  br label %sw.epilog2780, !dbg !2928

sw.epilog2780:                                    ; preds = %sw.default2779, %if.end2778
  br label %if.end2781, !dbg !2929

if.end2781:                                       ; preds = %sw.epilog2780, %if.end2741
  %1438 = load i8*, i8** %d, align 8, !dbg !2930
  %1439 = load i8*, i8** %string1.addr, align 8, !dbg !2932
  %cmp2782 = icmp uge i8* %1438, %1439, !dbg !2933
  br i1 %cmp2782, label %land.lhs.true2784, label %if.end2788, !dbg !2934

land.lhs.true2784:                                ; preds = %if.end2781
  %1440 = load i8*, i8** %d, align 8, !dbg !2935
  %1441 = load i8*, i8** %end1, align 8, !dbg !2936
  %cmp2785 = icmp ule i8* %1440, %1441, !dbg !2937
  br i1 %cmp2785, label %if.then2787, label %if.end2788, !dbg !2938

if.then2787:                                      ; preds = %land.lhs.true2784
  %1442 = load i8*, i8** %end_match_1, align 8, !dbg !2939
  store i8* %1442, i8** %dend, align 8, !dbg !2940
  br label %if.end2788, !dbg !2941

if.end2788:                                       ; preds = %if.then2787, %land.lhs.true2784, %if.end2781
  br label %if.end2790, !dbg !2942

if.else2789:                                      ; preds = %fail
  br label %for.end2791, !dbg !2943

if.end2790:                                       ; preds = %if.end2788
  br label %for.cond156, !dbg !2944, !llvm.loop !2859

for.end2791:                                      ; preds = %if.else2789
  %1443 = load i32, i32* %best_regs_set, align 4, !dbg !2945
  %tobool2792 = icmp ne i32 %1443, 0, !dbg !2945
  br i1 %tobool2792, label %if.then2793, label %if.end2794, !dbg !2947

if.then2793:                                      ; preds = %for.end2791
  br label %restore_best_regs, !dbg !2948

if.end2794:                                       ; preds = %for.end2791
  br label %do.body2795, !dbg !2949

do.body2795:                                      ; preds = %if.end2794
  %1444 = load i8**, i8*** %regstart, align 8, !dbg !2950
  %tobool2796 = icmp ne i8** %1444, null, !dbg !2950
  br i1 %tobool2796, label %if.then2797, label %if.end2798, !dbg !2953

if.then2797:                                      ; preds = %do.body2795
  br label %if.end2798, !dbg !2950

if.end2798:                                       ; preds = %if.then2797, %do.body2795
  store i8** null, i8*** %regstart, align 8, !dbg !2953
  %1445 = load i8**, i8*** %regend, align 8, !dbg !2954
  %tobool2799 = icmp ne i8** %1445, null, !dbg !2954
  br i1 %tobool2799, label %if.then2800, label %if.end2801, !dbg !2953

if.then2800:                                      ; preds = %if.end2798
  br label %if.end2801, !dbg !2954

if.end2801:                                       ; preds = %if.then2800, %if.end2798
  store i8** null, i8*** %regend, align 8, !dbg !2953
  %1446 = load i8**, i8*** %old_regstart, align 8, !dbg !2956
  %tobool2802 = icmp ne i8** %1446, null, !dbg !2956
  br i1 %tobool2802, label %if.then2803, label %if.end2804, !dbg !2953

if.then2803:                                      ; preds = %if.end2801
  br label %if.end2804, !dbg !2956

if.end2804:                                       ; preds = %if.then2803, %if.end2801
  store i8** null, i8*** %old_regstart, align 8, !dbg !2953
  %1447 = load i8**, i8*** %old_regend, align 8, !dbg !2958
  %tobool2805 = icmp ne i8** %1447, null, !dbg !2958
  br i1 %tobool2805, label %if.then2806, label %if.end2807, !dbg !2953

if.then2806:                                      ; preds = %if.end2804
  br label %if.end2807, !dbg !2958

if.end2807:                                       ; preds = %if.then2806, %if.end2804
  store i8** null, i8*** %old_regend, align 8, !dbg !2953
  %1448 = load i8**, i8*** %best_regstart, align 8, !dbg !2960
  %tobool2808 = icmp ne i8** %1448, null, !dbg !2960
  br i1 %tobool2808, label %if.then2809, label %if.end2810, !dbg !2953

if.then2809:                                      ; preds = %if.end2807
  br label %if.end2810, !dbg !2960

if.end2810:                                       ; preds = %if.then2809, %if.end2807
  store i8** null, i8*** %best_regstart, align 8, !dbg !2953
  %1449 = load i8**, i8*** %best_regend, align 8, !dbg !2962
  %tobool2811 = icmp ne i8** %1449, null, !dbg !2962
  br i1 %tobool2811, label %if.then2812, label %if.end2813, !dbg !2953

if.then2812:                                      ; preds = %if.end2810
  br label %if.end2813, !dbg !2962

if.end2813:                                       ; preds = %if.then2812, %if.end2810
  store i8** null, i8*** %best_regend, align 8, !dbg !2953
  %1450 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info, align 8, !dbg !2964
  %tobool2814 = icmp ne %union.byte_register_info_type* %1450, null, !dbg !2964
  br i1 %tobool2814, label %if.then2815, label %if.end2816, !dbg !2953

if.then2815:                                      ; preds = %if.end2813
  br label %if.end2816, !dbg !2964

if.end2816:                                       ; preds = %if.then2815, %if.end2813
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info, align 8, !dbg !2953
  %1451 = load i8**, i8*** %reg_dummy, align 8, !dbg !2966
  %tobool2817 = icmp ne i8** %1451, null, !dbg !2966
  br i1 %tobool2817, label %if.then2818, label %if.end2819, !dbg !2953

if.then2818:                                      ; preds = %if.end2816
  br label %if.end2819, !dbg !2966

if.end2819:                                       ; preds = %if.then2818, %if.end2816
  store i8** null, i8*** %reg_dummy, align 8, !dbg !2953
  %1452 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !2968
  %tobool2820 = icmp ne %union.byte_register_info_type* %1452, null, !dbg !2968
  br i1 %tobool2820, label %if.then2821, label %if.end2822, !dbg !2953

if.then2821:                                      ; preds = %if.end2819
  br label %if.end2822, !dbg !2968

if.end2822:                                       ; preds = %if.then2821, %if.end2819
  store %union.byte_register_info_type* null, %union.byte_register_info_type** %reg_info_dummy, align 8, !dbg !2953
  br label %do.end2824, !dbg !2953

do.end2824:                                       ; preds = %if.end2822
  store i32 -1, i32* %retval, align 4, !dbg !2970
  br label %return, !dbg !2970

return:                                           ; preds = %do.end2824, %if.then2112, %if.then2012, %if.then1558, %if.then1411, %if.then1076, %do.end571, %do.end379, %do.end307, %do.end93, %do.end58, %if.then
  %1453 = load i32, i32* %retval, align 4, !dbg !2971
  ret i32 %1453, !dbg !2971
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @xre_match_2(%struct.re_pattern_buffer* %bufp, i8* %string1, i32 %size1, i8* %string2, i32 %size2, i32 %pos, %struct.re_registers* %regs, i32 %stop) #0 !dbg !2972 {
entry:
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %string1.addr = alloca i8*, align 8
  %size1.addr = alloca i32, align 4
  %string2.addr = alloca i8*, align 8
  %size2.addr = alloca i32, align 4
  %pos.addr = alloca i32, align 4
  %regs.addr = alloca %struct.re_registers*, align 8
  %stop.addr = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !2973, metadata !DIExpression()), !dbg !2974
  store i8* %string1, i8** %string1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string1.addr, metadata !2975, metadata !DIExpression()), !dbg !2976
  store i32 %size1, i32* %size1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size1.addr, metadata !2977, metadata !DIExpression()), !dbg !2978
  store i8* %string2, i8** %string2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string2.addr, metadata !2979, metadata !DIExpression()), !dbg !2980
  store i32 %size2, i32* %size2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size2.addr, metadata !2981, metadata !DIExpression()), !dbg !2982
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !2983, metadata !DIExpression()), !dbg !2984
  store %struct.re_registers* %regs, %struct.re_registers** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_registers** %regs.addr, metadata !2985, metadata !DIExpression()), !dbg !2986
  store i32 %stop, i32* %stop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stop.addr, metadata !2987, metadata !DIExpression()), !dbg !2988
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2989, metadata !DIExpression()), !dbg !2990
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !2991
  %1 = load i8*, i8** %string1.addr, align 8, !dbg !2992
  %2 = load i32, i32* %size1.addr, align 4, !dbg !2993
  %3 = load i8*, i8** %string2.addr, align 8, !dbg !2994
  %4 = load i32, i32* %size2.addr, align 4, !dbg !2995
  %5 = load i32, i32* %pos.addr, align 4, !dbg !2996
  %6 = load %struct.re_registers*, %struct.re_registers** %regs.addr, align 8, !dbg !2997
  %7 = load i32, i32* %stop.addr, align 4, !dbg !2998
  %call = call i32 @byte_re_match_2_internal(%struct.re_pattern_buffer* %0, i8* %1, i32 %2, i8* %3, i32 %4, i32 %5, %struct.re_registers* %6, i32 %7), !dbg !2999
  store i32 %call, i32* %result, align 4, !dbg !3000
  %8 = load i32, i32* %result, align 4, !dbg !3001
  ret i32 %8, !dbg !3002
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @xre_compile_pattern(i8* %pattern, i64 %length, %struct.re_pattern_buffer* %bufp) #0 !dbg !3003 {
entry:
  %retval = alloca i8*, align 8
  %pattern.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %ret = alloca i32, align 4
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !3006, metadata !DIExpression()), !dbg !3007
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !3008, metadata !DIExpression()), !dbg !3009
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !3010, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3012, metadata !DIExpression()), !dbg !3014
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3015
  %regs_allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %0, i32 0, i32 7, !dbg !3016
  %bf.load = load i8, i8* %regs_allocated, align 8, !dbg !3017
  %bf.clear = and i8 %bf.load, -7, !dbg !3017
  store i8 %bf.clear, i8* %regs_allocated, align 8, !dbg !3017
  %1 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3018
  %no_sub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1, i32 0, i32 7, !dbg !3019
  %bf.load1 = load i8, i8* %no_sub, align 8, !dbg !3020
  %bf.clear2 = and i8 %bf.load1, -17, !dbg !3020
  store i8 %bf.clear2, i8* %no_sub, align 8, !dbg !3020
  %2 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3021
  %newline_anchor = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2, i32 0, i32 7, !dbg !3022
  %bf.load3 = load i8, i8* %newline_anchor, align 8, !dbg !3023
  %bf.clear4 = and i8 %bf.load3, 127, !dbg !3023
  %bf.set = or i8 %bf.clear4, -128, !dbg !3023
  store i8 %bf.set, i8* %newline_anchor, align 8, !dbg !3023
  %3 = load i8*, i8** %pattern.addr, align 8, !dbg !3024
  %4 = load i64, i64* %length.addr, align 8, !dbg !3025
  %5 = load i64, i64* @xre_syntax_options, align 8, !dbg !3026
  %6 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3027
  %call = call i32 @byte_regex_compile(i8* %3, i64 %4, i64 %5, %struct.re_pattern_buffer* %6), !dbg !3028
  store i32 %call, i32* %ret, align 4, !dbg !3029
  %7 = load i32, i32* %ret, align 4, !dbg !3030
  %tobool = icmp ne i32 %7, 0, !dbg !3030
  br i1 %tobool, label %if.end, label %if.then, !dbg !3032

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !3033
  br label %return, !dbg !3033

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %ret, align 4, !dbg !3034
  %idxprom = sext i32 %8 to i64, !dbg !3034
  %arrayidx = getelementptr inbounds [17 x i8*], [17 x i8*]* @re_error_msgid, i64 0, i64 %idxprom, !dbg !3034
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !3034
  store i8* %9, i8** %retval, align 8, !dbg !3035
  br label %return, !dbg !3035

return:                                           ; preds = %if.end, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !3036
  ret i8* %10, !dbg !3036
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @byte_regex_compile(i8* %pattern, i64 %size, i64 %syntax, %struct.re_pattern_buffer* %bufp) #0 !dbg !3037 {
entry:
  %retval = alloca i32, align 4
  %pattern.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %syntax.addr = alloca i64, align 8
  %bufp.addr = alloca %struct.re_pattern_buffer*, align 8
  %c = alloca i8, align 1
  %c1 = alloca i8, align 1
  %p1 = alloca i8*, align 8
  %b = alloca i8*, align 8
  %compile_stack = alloca %struct.compile_stack_type, align 8
  %p = alloca i8*, align 8
  %pend = alloca i8*, align 8
  %translate = alloca i8*, align 8
  %pending_exact = alloca i8*, align 8
  %laststart = alloca i8*, align 8
  %begalt = alloca i8*, align 8
  %fixup_alt_jump = alloca i8*, align 8
  %regnum = alloca i32, align 4
  %old_buffer = alloca i8*, align 8
  %incr = alloca i32, align 4
  %old_buffer128 = alloca i8*, align 8
  %incr156 = alloca i32, align 4
  %keep_string_p = alloca i8, align 1
  %zero_times_ok = alloca i8, align 1
  %many_times_ok = alloca i8, align 1
  %old_buffer307 = alloca i8*, align 8
  %incr335 = alloca i32, align 4
  %old_buffer433 = alloca i8*, align 8
  %incr461 = alloca i32, align 4
  %old_buffer513 = alloca i8*, align 8
  %incr541 = alloca i32, align 4
  %old_buffer591 = alloca i8*, align 8
  %incr619 = alloca i32, align 4
  %had_char_class = alloca i8, align 1
  %range_start = alloca i32, align 4
  %old_buffer666 = alloca i8*, align 8
  %incr694 = alloca i32, align 4
  %old_buffer734 = alloca i8*, align 8
  %incr762 = alloca i32, align 4
  %old_buffer815 = alloca i8*, align 8
  %incr843 = alloca i32, align 4
  %ret = alloca i32, align 4
  %ret1008 = alloca i32, align 4
  %str = alloca [7 x i8], align 1
  %ch = alloca i32, align 4
  %is_alnum = alloca i8, align 1
  %is_alpha = alloca i8, align 1
  %is_blank = alloca i8, align 1
  %is_cntrl = alloca i8, align 1
  %is_digit = alloca i8, align 1
  %is_graph = alloca i8, align 1
  %is_lower = alloca i8, align 1
  %is_print = alloca i8, align 1
  %is_punct = alloca i8, align 1
  %is_space = alloca i8, align 1
  %is_upper = alloca i8, align 1
  %is_xdigit = alloca i8, align 1
  %str1467 = alloca [17 x i8], align 16
  %str1595 = alloca [128 x i8], align 16
  %old_buffer1882 = alloca i8*, align 8
  %incr1910 = alloca i32, align 4
  %old_buffer1975 = alloca i8*, align 8
  %incr2003 = alloca i32, align 4
  %this_group_regnum = alloca i32, align 4
  %inner_group_loc = alloca i8*, align 8
  %old_buffer2113 = alloca i8*, align 8
  %incr2141 = alloca i32, align 4
  %old_buffer2200 = alloca i8*, align 8
  %incr2228 = alloca i32, align 4
  %old_buffer2283 = alloca i8*, align 8
  %incr2311 = alloca i32, align 4
  %lower_bound = alloca i32, align 4
  %upper_bound = alloca i32, align 4
  %beg_interval = alloca i8*, align 8
  %old_buffer2510 = alloca i8*, align 8
  %incr2538 = alloca i32, align 4
  %nbytes = alloca i32, align 4
  %old_buffer2591 = alloca i8*, align 8
  %incr2619 = alloca i32, align 4
  %old_buffer2710 = alloca i8*, align 8
  %incr2738 = alloca i32, align 4
  %old_buffer2785 = alloca i8*, align 8
  %incr2813 = alloca i32, align 4
  %old_buffer2860 = alloca i8*, align 8
  %incr2888 = alloca i32, align 4
  %old_buffer2935 = alloca i8*, align 8
  %incr2963 = alloca i32, align 4
  %old_buffer3010 = alloca i8*, align 8
  %incr3038 = alloca i32, align 4
  %old_buffer3085 = alloca i8*, align 8
  %incr3113 = alloca i32, align 4
  %old_buffer3160 = alloca i8*, align 8
  %incr3188 = alloca i32, align 4
  %old_buffer3235 = alloca i8*, align 8
  %incr3263 = alloca i32, align 4
  %old_buffer3324 = alloca i8*, align 8
  %incr3352 = alloca i32, align 4
  %old_buffer3477 = alloca i8*, align 8
  %incr3505 = alloca i32, align 4
  %old_buffer3550 = alloca i8*, align 8
  %incr3578 = alloca i32, align 4
  %old_buffer3640 = alloca i8*, align 8
  %incr3668 = alloca i32, align 4
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !3040, metadata !DIExpression()), !dbg !3041
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !3042, metadata !DIExpression()), !dbg !3043
  store i64 %syntax, i64* %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %syntax.addr, metadata !3044, metadata !DIExpression()), !dbg !3045
  store %struct.re_pattern_buffer* %bufp, %struct.re_pattern_buffer** %bufp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %bufp.addr, metadata !3046, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.declare(metadata i8* %c, metadata !3048, metadata !DIExpression()), !dbg !3049
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !3050, metadata !DIExpression()), !dbg !3051
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !3052, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.declare(metadata i8** %b, metadata !3054, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.declare(metadata %struct.compile_stack_type* %compile_stack, metadata !3056, metadata !DIExpression()), !dbg !3063
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3064, metadata !DIExpression()), !dbg !3065
  %0 = load i8*, i8** %pattern.addr, align 8, !dbg !3066
  store i8* %0, i8** %p, align 8, !dbg !3065
  call void @llvm.dbg.declare(metadata i8** %pend, metadata !3067, metadata !DIExpression()), !dbg !3068
  %1 = load i8*, i8** %pattern.addr, align 8, !dbg !3069
  %2 = load i64, i64* %size.addr, align 8, !dbg !3070
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !3071
  store i8* %add.ptr, i8** %pend, align 8, !dbg !3068
  call void @llvm.dbg.declare(metadata i8** %translate, metadata !3072, metadata !DIExpression()), !dbg !3073
  %3 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3074
  %translate1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3, i32 0, i32 5, !dbg !3075
  %4 = load i8*, i8** %translate1, align 8, !dbg !3075
  store i8* %4, i8** %translate, align 8, !dbg !3073
  call void @llvm.dbg.declare(metadata i8** %pending_exact, metadata !3076, metadata !DIExpression()), !dbg !3077
  store i8* null, i8** %pending_exact, align 8, !dbg !3077
  call void @llvm.dbg.declare(metadata i8** %laststart, metadata !3078, metadata !DIExpression()), !dbg !3079
  store i8* null, i8** %laststart, align 8, !dbg !3079
  call void @llvm.dbg.declare(metadata i8** %begalt, metadata !3080, metadata !DIExpression()), !dbg !3081
  call void @llvm.dbg.declare(metadata i8** %fixup_alt_jump, metadata !3082, metadata !DIExpression()), !dbg !3083
  store i8* null, i8** %fixup_alt_jump, align 8, !dbg !3083
  call void @llvm.dbg.declare(metadata i32* %regnum, metadata !3084, metadata !DIExpression()), !dbg !3085
  store i32 0, i32* %regnum, align 4, !dbg !3085
  %call = call i8* @malloc(i64 1280), !dbg !3086
  %5 = bitcast i8* %call to %struct.compile_stack_elt_t*, !dbg !3086
  %stack = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3087
  store %struct.compile_stack_elt_t* %5, %struct.compile_stack_elt_t** %stack, align 8, !dbg !3088
  %stack2 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3089
  %6 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2, align 8, !dbg !3089
  %cmp = icmp eq %struct.compile_stack_elt_t* %6, null, !dbg !3091
  br i1 %cmp, label %if.then, label %if.end, !dbg !3092

if.then:                                          ; preds = %entry
  store i32 12, i32* %retval, align 4, !dbg !3093
  br label %return, !dbg !3093

if.end:                                           ; preds = %entry
  %size3 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 1, !dbg !3095
  store i32 32, i32* %size3, align 8, !dbg !3096
  %avail = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !3097
  store i32 0, i32* %avail, align 4, !dbg !3098
  %7 = load i64, i64* %syntax.addr, align 8, !dbg !3099
  %8 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3100
  %syntax4 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %8, i32 0, i32 3, !dbg !3101
  store i64 %7, i64* %syntax4, align 8, !dbg !3102
  %9 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3103
  %fastmap_accurate = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %9, i32 0, i32 7, !dbg !3104
  %bf.load = load i8, i8* %fastmap_accurate, align 8, !dbg !3105
  %bf.clear = and i8 %bf.load, -9, !dbg !3105
  store i8 %bf.clear, i8* %fastmap_accurate, align 8, !dbg !3105
  %10 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3106
  %not_eol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %10, i32 0, i32 7, !dbg !3107
  %bf.load5 = load i8, i8* %not_eol, align 8, !dbg !3108
  %bf.clear6 = and i8 %bf.load5, -65, !dbg !3108
  store i8 %bf.clear6, i8* %not_eol, align 8, !dbg !3108
  %11 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3109
  %not_bol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %11, i32 0, i32 7, !dbg !3110
  %bf.load7 = load i8, i8* %not_bol, align 8, !dbg !3111
  %bf.clear8 = and i8 %bf.load7, -33, !dbg !3111
  store i8 %bf.clear8, i8* %not_bol, align 8, !dbg !3111
  %12 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3112
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %12, i32 0, i32 2, !dbg !3113
  store i64 0, i64* %used, align 8, !dbg !3114
  %13 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3115
  %re_nsub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %13, i32 0, i32 6, !dbg !3116
  store i64 0, i64* %re_nsub, align 8, !dbg !3117
  call void @init_syntax_once(), !dbg !3118
  %14 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3119
  %allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %14, i32 0, i32 1, !dbg !3121
  %15 = load i64, i64* %allocated, align 8, !dbg !3121
  %cmp9 = icmp eq i64 %15, 0, !dbg !3122
  br i1 %cmp9, label %if.then10, label %if.end24, !dbg !3123

if.then10:                                        ; preds = %if.end
  %16 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3124
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %16, i32 0, i32 0, !dbg !3127
  %17 = load i8*, i8** %buffer, align 8, !dbg !3127
  %tobool = icmp ne i8* %17, null, !dbg !3124
  br i1 %tobool, label %if.then11, label %if.else, !dbg !3128

if.then11:                                        ; preds = %if.then10
  %18 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3129
  %buffer12 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %18, i32 0, i32 0, !dbg !3129
  %19 = load i8*, i8** %buffer12, align 8, !dbg !3129
  %call13 = call i8* @realloc(i8* %19, i64 32), !dbg !3129
  %20 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3129
  %buffer14 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %20, i32 0, i32 0, !dbg !3129
  store i8* %call13, i8** %buffer14, align 8, !dbg !3129
  br label %if.end17, !dbg !3131

if.else:                                          ; preds = %if.then10
  %call15 = call i8* @malloc(i64 32), !dbg !3132
  %21 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3134
  %buffer16 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %21, i32 0, i32 0, !dbg !3134
  store i8* %call15, i8** %buffer16, align 8, !dbg !3135
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then11
  %22 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3136
  %buffer18 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %22, i32 0, i32 0, !dbg !3136
  %23 = load i8*, i8** %buffer18, align 8, !dbg !3136
  %tobool19 = icmp ne i8* %23, null, !dbg !3136
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !3138

if.then20:                                        ; preds = %if.end17
  %stack21 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3139
  %24 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack21, align 8, !dbg !3139
  %25 = bitcast %struct.compile_stack_elt_t* %24 to i8*, !dbg !3139
  call void @free(i8* %25), !dbg !3139
  store i32 12, i32* %retval, align 4, !dbg !3139
  br label %return, !dbg !3139

if.end22:                                         ; preds = %if.end17
  %26 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3140
  %allocated23 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %26, i32 0, i32 1, !dbg !3141
  store i64 32, i64* %allocated23, align 8, !dbg !3142
  br label %if.end24, !dbg !3143

if.end24:                                         ; preds = %if.end22, %if.end
  %27 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3144
  %buffer25 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %27, i32 0, i32 0, !dbg !3144
  %28 = load i8*, i8** %buffer25, align 8, !dbg !3144
  store i8* %28, i8** %b, align 8, !dbg !3145
  store i8* %28, i8** %begalt, align 8, !dbg !3146
  br label %while.cond, !dbg !3147

while.cond:                                       ; preds = %sw.epilog3609, %if.end24
  %29 = load i8*, i8** %p, align 8, !dbg !3148
  %30 = load i8*, i8** %pend, align 8, !dbg !3149
  %cmp26 = icmp ne i8* %29, %30, !dbg !3150
  br i1 %cmp26, label %while.body, label %while.end3610, !dbg !3147

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !3151

do.body:                                          ; preds = %while.body
  %31 = load i8*, i8** %p, align 8, !dbg !3153
  %32 = load i8*, i8** %pend, align 8, !dbg !3153
  %cmp27 = icmp eq i8* %31, %32, !dbg !3153
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !3156

if.then28:                                        ; preds = %do.body
  store i32 14, i32* %retval, align 4, !dbg !3153
  br label %return, !dbg !3153

if.end29:                                         ; preds = %do.body
  %33 = load i8*, i8** %p, align 8, !dbg !3156
  %incdec.ptr = getelementptr inbounds i8, i8* %33, i32 1, !dbg !3156
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3156
  %34 = load i8, i8* %33, align 1, !dbg !3156
  store i8 %34, i8* %c, align 1, !dbg !3156
  %35 = load i8*, i8** %translate, align 8, !dbg !3157
  %tobool30 = icmp ne i8* %35, null, !dbg !3157
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !3156

if.then31:                                        ; preds = %if.end29
  %36 = load i8*, i8** %translate, align 8, !dbg !3157
  %37 = load i8, i8* %c, align 1, !dbg !3157
  %idxprom = zext i8 %37 to i64, !dbg !3157
  %arrayidx = getelementptr inbounds i8, i8* %36, i64 %idxprom, !dbg !3157
  %38 = load i8, i8* %arrayidx, align 1, !dbg !3157
  store i8 %38, i8* %c, align 1, !dbg !3157
  br label %if.end32, !dbg !3157

if.end32:                                         ; preds = %if.then31, %if.end29
  br label %do.end, !dbg !3156

do.end:                                           ; preds = %if.end32
  %39 = load i8, i8* %c, align 1, !dbg !3159
  %conv = zext i8 %39 to i32, !dbg !3159
  switch i32 %conv, label %sw.default3398 [
    i32 94, label %sw.bb
    i32 36, label %sw.bb105
    i32 43, label %sw.bb188
    i32 63, label %sw.bb188
    i32 42, label %sw.bb196
    i32 46, label %sw.bb578
    i32 91, label %sw.bb649
    i32 40, label %sw.bb1753
    i32 41, label %sw.bb1758
    i32 10, label %sw.bb1763
    i32 124, label %sw.bb1768
    i32 123, label %sw.bb1773
    i32 92, label %sw.bb1781
  ], !dbg !3160

sw.bb:                                            ; preds = %do.end
  %40 = load i8*, i8** %p, align 8, !dbg !3161
  %41 = load i8*, i8** %pattern.addr, align 8, !dbg !3165
  %add.ptr33 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !3166
  %cmp34 = icmp eq i8* %40, %add.ptr33, !dbg !3167
  br i1 %cmp34, label %if.then41, label %lor.lhs.false, !dbg !3168

lor.lhs.false:                                    ; preds = %sw.bb
  %42 = load i64, i64* %syntax.addr, align 8, !dbg !3169
  %and = and i64 %42, 8, !dbg !3170
  %tobool36 = icmp ne i64 %and, 0, !dbg !3170
  br i1 %tobool36, label %if.then41, label %lor.lhs.false37, !dbg !3171

lor.lhs.false37:                                  ; preds = %lor.lhs.false
  %43 = load i8*, i8** %pattern.addr, align 8, !dbg !3172
  %44 = load i8*, i8** %p, align 8, !dbg !3173
  %45 = load i64, i64* %syntax.addr, align 8, !dbg !3174
  %call38 = call signext i8 @byte_at_begline_loc_p(i8* %43, i8* %44, i64 %45), !dbg !3175
  %conv39 = sext i8 %call38 to i32, !dbg !3175
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !3175
  br i1 %tobool40, label %if.then41, label %if.else103, !dbg !3176

if.then41:                                        ; preds = %lor.lhs.false37, %lor.lhs.false, %sw.bb
  br label %do.body42, !dbg !3177

do.body42:                                        ; preds = %if.then41
  br label %while.cond43, !dbg !3178

while.cond43:                                     ; preds = %do.end100, %do.body42
  %46 = load i8*, i8** %b, align 8, !dbg !3178
  %47 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3178
  %buffer44 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %47, i32 0, i32 0, !dbg !3178
  %48 = load i8*, i8** %buffer44, align 8, !dbg !3178
  %sub.ptr.lhs.cast = ptrtoint i8* %46 to i64, !dbg !3178
  %sub.ptr.rhs.cast = ptrtoint i8* %48 to i64, !dbg !3178
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3178
  %add = add nsw i64 %sub.ptr.sub, 1, !dbg !3178
  %49 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3178
  %allocated45 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %49, i32 0, i32 1, !dbg !3178
  %50 = load i64, i64* %allocated45, align 8, !dbg !3178
  %cmp46 = icmp ugt i64 %add, %50, !dbg !3178
  br i1 %cmp46, label %while.body48, label %while.end, !dbg !3178

while.body48:                                     ; preds = %while.cond43
  br label %do.body49, !dbg !3178

do.body49:                                        ; preds = %while.body48
  call void @llvm.dbg.declare(metadata i8** %old_buffer, metadata !3180, metadata !DIExpression()), !dbg !3182
  %51 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3182
  %buffer50 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %51, i32 0, i32 0, !dbg !3182
  %52 = load i8*, i8** %buffer50, align 8, !dbg !3182
  store i8* %52, i8** %old_buffer, align 8, !dbg !3182
  %53 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3183
  %allocated51 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %53, i32 0, i32 1, !dbg !3183
  %54 = load i64, i64* %allocated51, align 8, !dbg !3183
  %cmp52 = icmp eq i64 %54, 65536, !dbg !3183
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !3182

if.then54:                                        ; preds = %do.body49
  store i32 15, i32* %retval, align 4, !dbg !3183
  br label %return, !dbg !3183

if.end55:                                         ; preds = %do.body49
  %55 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3182
  %allocated56 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %55, i32 0, i32 1, !dbg !3182
  %56 = load i64, i64* %allocated56, align 8, !dbg !3182
  %shl = shl i64 %56, 1, !dbg !3182
  store i64 %shl, i64* %allocated56, align 8, !dbg !3182
  %57 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3185
  %allocated57 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %57, i32 0, i32 1, !dbg !3185
  %58 = load i64, i64* %allocated57, align 8, !dbg !3185
  %cmp58 = icmp ugt i64 %58, 65536, !dbg !3185
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !3182

if.then60:                                        ; preds = %if.end55
  %59 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3185
  %allocated61 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %59, i32 0, i32 1, !dbg !3185
  store i64 65536, i64* %allocated61, align 8, !dbg !3185
  br label %if.end62, !dbg !3185

if.end62:                                         ; preds = %if.then60, %if.end55
  %60 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3182
  %buffer63 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %60, i32 0, i32 0, !dbg !3182
  %61 = load i8*, i8** %buffer63, align 8, !dbg !3182
  %62 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3182
  %allocated64 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %62, i32 0, i32 1, !dbg !3182
  %63 = load i64, i64* %allocated64, align 8, !dbg !3182
  %call65 = call i8* @realloc(i8* %61, i64 %63), !dbg !3182
  %64 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3182
  %buffer66 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %64, i32 0, i32 0, !dbg !3182
  store i8* %call65, i8** %buffer66, align 8, !dbg !3182
  %65 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3187
  %buffer67 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %65, i32 0, i32 0, !dbg !3187
  %66 = load i8*, i8** %buffer67, align 8, !dbg !3187
  %cmp68 = icmp eq i8* %66, null, !dbg !3187
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !3182

if.then70:                                        ; preds = %if.end62
  store i32 12, i32* %retval, align 4, !dbg !3187
  br label %return, !dbg !3187

if.end71:                                         ; preds = %if.end62
  %67 = load i8*, i8** %old_buffer, align 8, !dbg !3189
  %68 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3189
  %buffer72 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %68, i32 0, i32 0, !dbg !3189
  %69 = load i8*, i8** %buffer72, align 8, !dbg !3189
  %cmp73 = icmp ne i8* %67, %69, !dbg !3189
  br i1 %cmp73, label %if.then75, label %if.end99, !dbg !3182

if.then75:                                        ; preds = %if.end71
  call void @llvm.dbg.declare(metadata i32* %incr, metadata !3191, metadata !DIExpression()), !dbg !3193
  %70 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3193
  %buffer76 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %70, i32 0, i32 0, !dbg !3193
  %71 = load i8*, i8** %buffer76, align 8, !dbg !3193
  %72 = load i8*, i8** %old_buffer, align 8, !dbg !3193
  %sub.ptr.lhs.cast77 = ptrtoint i8* %71 to i64, !dbg !3193
  %sub.ptr.rhs.cast78 = ptrtoint i8* %72 to i64, !dbg !3193
  %sub.ptr.sub79 = sub i64 %sub.ptr.lhs.cast77, %sub.ptr.rhs.cast78, !dbg !3193
  %conv80 = trunc i64 %sub.ptr.sub79 to i32, !dbg !3193
  store i32 %conv80, i32* %incr, align 4, !dbg !3193
  %73 = load i32, i32* %incr, align 4, !dbg !3193
  %74 = load i8*, i8** %b, align 8, !dbg !3193
  %idx.ext = sext i32 %73 to i64, !dbg !3193
  %add.ptr81 = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !3193
  store i8* %add.ptr81, i8** %b, align 8, !dbg !3193
  %75 = load i32, i32* %incr, align 4, !dbg !3193
  %76 = load i8*, i8** %begalt, align 8, !dbg !3193
  %idx.ext82 = sext i32 %75 to i64, !dbg !3193
  %add.ptr83 = getelementptr inbounds i8, i8* %76, i64 %idx.ext82, !dbg !3193
  store i8* %add.ptr83, i8** %begalt, align 8, !dbg !3193
  %77 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3194
  %tobool84 = icmp ne i8* %77, null, !dbg !3194
  br i1 %tobool84, label %if.then85, label %if.end88, !dbg !3193

if.then85:                                        ; preds = %if.then75
  %78 = load i32, i32* %incr, align 4, !dbg !3194
  %79 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3194
  %idx.ext86 = sext i32 %78 to i64, !dbg !3194
  %add.ptr87 = getelementptr inbounds i8, i8* %79, i64 %idx.ext86, !dbg !3194
  store i8* %add.ptr87, i8** %fixup_alt_jump, align 8, !dbg !3194
  br label %if.end88, !dbg !3194

if.end88:                                         ; preds = %if.then85, %if.then75
  %80 = load i8*, i8** %laststart, align 8, !dbg !3196
  %tobool89 = icmp ne i8* %80, null, !dbg !3196
  br i1 %tobool89, label %if.then90, label %if.end93, !dbg !3193

if.then90:                                        ; preds = %if.end88
  %81 = load i32, i32* %incr, align 4, !dbg !3196
  %82 = load i8*, i8** %laststart, align 8, !dbg !3196
  %idx.ext91 = sext i32 %81 to i64, !dbg !3196
  %add.ptr92 = getelementptr inbounds i8, i8* %82, i64 %idx.ext91, !dbg !3196
  store i8* %add.ptr92, i8** %laststart, align 8, !dbg !3196
  br label %if.end93, !dbg !3196

if.end93:                                         ; preds = %if.then90, %if.end88
  %83 = load i8*, i8** %pending_exact, align 8, !dbg !3198
  %tobool94 = icmp ne i8* %83, null, !dbg !3198
  br i1 %tobool94, label %if.then95, label %if.end98, !dbg !3193

if.then95:                                        ; preds = %if.end93
  %84 = load i32, i32* %incr, align 4, !dbg !3198
  %85 = load i8*, i8** %pending_exact, align 8, !dbg !3198
  %idx.ext96 = sext i32 %84 to i64, !dbg !3198
  %add.ptr97 = getelementptr inbounds i8, i8* %85, i64 %idx.ext96, !dbg !3198
  store i8* %add.ptr97, i8** %pending_exact, align 8, !dbg !3198
  br label %if.end98, !dbg !3198

if.end98:                                         ; preds = %if.then95, %if.end93
  br label %if.end99, !dbg !3193

if.end99:                                         ; preds = %if.end98, %if.end71
  br label %do.end100, !dbg !3182

do.end100:                                        ; preds = %if.end99
  br label %while.cond43, !dbg !3178, !llvm.loop !3200

while.end:                                        ; preds = %while.cond43
  %86 = load i8*, i8** %b, align 8, !dbg !3178
  %incdec.ptr101 = getelementptr inbounds i8, i8* %86, i32 1, !dbg !3178
  store i8* %incdec.ptr101, i8** %b, align 8, !dbg !3178
  store i8 9, i8* %86, align 1, !dbg !3178
  br label %do.end102, !dbg !3178

do.end102:                                        ; preds = %while.end
  br label %if.end104, !dbg !3178

if.else103:                                       ; preds = %lor.lhs.false37
  br label %normal_char, !dbg !3201

if.end104:                                        ; preds = %do.end102
  br label %sw.epilog3609, !dbg !3202

sw.bb105:                                         ; preds = %do.end
  %87 = load i8*, i8** %p, align 8, !dbg !3203
  %88 = load i8*, i8** %pend, align 8, !dbg !3206
  %cmp106 = icmp eq i8* %87, %88, !dbg !3207
  br i1 %cmp106, label %if.then115, label %lor.lhs.false108, !dbg !3208

lor.lhs.false108:                                 ; preds = %sw.bb105
  %89 = load i64, i64* %syntax.addr, align 8, !dbg !3209
  %and109 = and i64 %89, 8, !dbg !3210
  %tobool110 = icmp ne i64 %and109, 0, !dbg !3210
  br i1 %tobool110, label %if.then115, label %lor.lhs.false111, !dbg !3211

lor.lhs.false111:                                 ; preds = %lor.lhs.false108
  %90 = load i8*, i8** %p, align 8, !dbg !3212
  %91 = load i8*, i8** %pend, align 8, !dbg !3213
  %92 = load i64, i64* %syntax.addr, align 8, !dbg !3214
  %call112 = call signext i8 @byte_at_endline_loc_p(i8* %90, i8* %91, i64 %92), !dbg !3215
  %conv113 = sext i8 %call112 to i32, !dbg !3215
  %tobool114 = icmp ne i32 %conv113, 0, !dbg !3215
  br i1 %tobool114, label %if.then115, label %if.else186, !dbg !3216

if.then115:                                       ; preds = %lor.lhs.false111, %lor.lhs.false108, %sw.bb105
  br label %do.body116, !dbg !3217

do.body116:                                       ; preds = %if.then115
  br label %while.cond117, !dbg !3218

while.cond117:                                    ; preds = %do.end182, %do.body116
  %93 = load i8*, i8** %b, align 8, !dbg !3218
  %94 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3218
  %buffer118 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %94, i32 0, i32 0, !dbg !3218
  %95 = load i8*, i8** %buffer118, align 8, !dbg !3218
  %sub.ptr.lhs.cast119 = ptrtoint i8* %93 to i64, !dbg !3218
  %sub.ptr.rhs.cast120 = ptrtoint i8* %95 to i64, !dbg !3218
  %sub.ptr.sub121 = sub i64 %sub.ptr.lhs.cast119, %sub.ptr.rhs.cast120, !dbg !3218
  %add122 = add nsw i64 %sub.ptr.sub121, 1, !dbg !3218
  %96 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3218
  %allocated123 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %96, i32 0, i32 1, !dbg !3218
  %97 = load i64, i64* %allocated123, align 8, !dbg !3218
  %cmp124 = icmp ugt i64 %add122, %97, !dbg !3218
  br i1 %cmp124, label %while.body126, label %while.end183, !dbg !3218

while.body126:                                    ; preds = %while.cond117
  br label %do.body127, !dbg !3218

do.body127:                                       ; preds = %while.body126
  call void @llvm.dbg.declare(metadata i8** %old_buffer128, metadata !3220, metadata !DIExpression()), !dbg !3222
  %98 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3222
  %buffer129 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %98, i32 0, i32 0, !dbg !3222
  %99 = load i8*, i8** %buffer129, align 8, !dbg !3222
  store i8* %99, i8** %old_buffer128, align 8, !dbg !3222
  %100 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3223
  %allocated130 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %100, i32 0, i32 1, !dbg !3223
  %101 = load i64, i64* %allocated130, align 8, !dbg !3223
  %cmp131 = icmp eq i64 %101, 65536, !dbg !3223
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !3222

if.then133:                                       ; preds = %do.body127
  store i32 15, i32* %retval, align 4, !dbg !3223
  br label %return, !dbg !3223

if.end134:                                        ; preds = %do.body127
  %102 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3222
  %allocated135 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %102, i32 0, i32 1, !dbg !3222
  %103 = load i64, i64* %allocated135, align 8, !dbg !3222
  %shl136 = shl i64 %103, 1, !dbg !3222
  store i64 %shl136, i64* %allocated135, align 8, !dbg !3222
  %104 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3225
  %allocated137 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %104, i32 0, i32 1, !dbg !3225
  %105 = load i64, i64* %allocated137, align 8, !dbg !3225
  %cmp138 = icmp ugt i64 %105, 65536, !dbg !3225
  br i1 %cmp138, label %if.then140, label %if.end142, !dbg !3222

if.then140:                                       ; preds = %if.end134
  %106 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3225
  %allocated141 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %106, i32 0, i32 1, !dbg !3225
  store i64 65536, i64* %allocated141, align 8, !dbg !3225
  br label %if.end142, !dbg !3225

if.end142:                                        ; preds = %if.then140, %if.end134
  %107 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3222
  %buffer143 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %107, i32 0, i32 0, !dbg !3222
  %108 = load i8*, i8** %buffer143, align 8, !dbg !3222
  %109 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3222
  %allocated144 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %109, i32 0, i32 1, !dbg !3222
  %110 = load i64, i64* %allocated144, align 8, !dbg !3222
  %call145 = call i8* @realloc(i8* %108, i64 %110), !dbg !3222
  %111 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3222
  %buffer146 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %111, i32 0, i32 0, !dbg !3222
  store i8* %call145, i8** %buffer146, align 8, !dbg !3222
  %112 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3227
  %buffer147 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %112, i32 0, i32 0, !dbg !3227
  %113 = load i8*, i8** %buffer147, align 8, !dbg !3227
  %cmp148 = icmp eq i8* %113, null, !dbg !3227
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !3222

if.then150:                                       ; preds = %if.end142
  store i32 12, i32* %retval, align 4, !dbg !3227
  br label %return, !dbg !3227

if.end151:                                        ; preds = %if.end142
  %114 = load i8*, i8** %old_buffer128, align 8, !dbg !3229
  %115 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3229
  %buffer152 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %115, i32 0, i32 0, !dbg !3229
  %116 = load i8*, i8** %buffer152, align 8, !dbg !3229
  %cmp153 = icmp ne i8* %114, %116, !dbg !3229
  br i1 %cmp153, label %if.then155, label %if.end181, !dbg !3222

if.then155:                                       ; preds = %if.end151
  call void @llvm.dbg.declare(metadata i32* %incr156, metadata !3231, metadata !DIExpression()), !dbg !3233
  %117 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3233
  %buffer157 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %117, i32 0, i32 0, !dbg !3233
  %118 = load i8*, i8** %buffer157, align 8, !dbg !3233
  %119 = load i8*, i8** %old_buffer128, align 8, !dbg !3233
  %sub.ptr.lhs.cast158 = ptrtoint i8* %118 to i64, !dbg !3233
  %sub.ptr.rhs.cast159 = ptrtoint i8* %119 to i64, !dbg !3233
  %sub.ptr.sub160 = sub i64 %sub.ptr.lhs.cast158, %sub.ptr.rhs.cast159, !dbg !3233
  %conv161 = trunc i64 %sub.ptr.sub160 to i32, !dbg !3233
  store i32 %conv161, i32* %incr156, align 4, !dbg !3233
  %120 = load i32, i32* %incr156, align 4, !dbg !3233
  %121 = load i8*, i8** %b, align 8, !dbg !3233
  %idx.ext162 = sext i32 %120 to i64, !dbg !3233
  %add.ptr163 = getelementptr inbounds i8, i8* %121, i64 %idx.ext162, !dbg !3233
  store i8* %add.ptr163, i8** %b, align 8, !dbg !3233
  %122 = load i32, i32* %incr156, align 4, !dbg !3233
  %123 = load i8*, i8** %begalt, align 8, !dbg !3233
  %idx.ext164 = sext i32 %122 to i64, !dbg !3233
  %add.ptr165 = getelementptr inbounds i8, i8* %123, i64 %idx.ext164, !dbg !3233
  store i8* %add.ptr165, i8** %begalt, align 8, !dbg !3233
  %124 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3234
  %tobool166 = icmp ne i8* %124, null, !dbg !3234
  br i1 %tobool166, label %if.then167, label %if.end170, !dbg !3233

if.then167:                                       ; preds = %if.then155
  %125 = load i32, i32* %incr156, align 4, !dbg !3234
  %126 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3234
  %idx.ext168 = sext i32 %125 to i64, !dbg !3234
  %add.ptr169 = getelementptr inbounds i8, i8* %126, i64 %idx.ext168, !dbg !3234
  store i8* %add.ptr169, i8** %fixup_alt_jump, align 8, !dbg !3234
  br label %if.end170, !dbg !3234

if.end170:                                        ; preds = %if.then167, %if.then155
  %127 = load i8*, i8** %laststart, align 8, !dbg !3236
  %tobool171 = icmp ne i8* %127, null, !dbg !3236
  br i1 %tobool171, label %if.then172, label %if.end175, !dbg !3233

if.then172:                                       ; preds = %if.end170
  %128 = load i32, i32* %incr156, align 4, !dbg !3236
  %129 = load i8*, i8** %laststart, align 8, !dbg !3236
  %idx.ext173 = sext i32 %128 to i64, !dbg !3236
  %add.ptr174 = getelementptr inbounds i8, i8* %129, i64 %idx.ext173, !dbg !3236
  store i8* %add.ptr174, i8** %laststart, align 8, !dbg !3236
  br label %if.end175, !dbg !3236

if.end175:                                        ; preds = %if.then172, %if.end170
  %130 = load i8*, i8** %pending_exact, align 8, !dbg !3238
  %tobool176 = icmp ne i8* %130, null, !dbg !3238
  br i1 %tobool176, label %if.then177, label %if.end180, !dbg !3233

if.then177:                                       ; preds = %if.end175
  %131 = load i32, i32* %incr156, align 4, !dbg !3238
  %132 = load i8*, i8** %pending_exact, align 8, !dbg !3238
  %idx.ext178 = sext i32 %131 to i64, !dbg !3238
  %add.ptr179 = getelementptr inbounds i8, i8* %132, i64 %idx.ext178, !dbg !3238
  store i8* %add.ptr179, i8** %pending_exact, align 8, !dbg !3238
  br label %if.end180, !dbg !3238

if.end180:                                        ; preds = %if.then177, %if.end175
  br label %if.end181, !dbg !3233

if.end181:                                        ; preds = %if.end180, %if.end151
  br label %do.end182, !dbg !3222

do.end182:                                        ; preds = %if.end181
  br label %while.cond117, !dbg !3218, !llvm.loop !3240

while.end183:                                     ; preds = %while.cond117
  %133 = load i8*, i8** %b, align 8, !dbg !3218
  %incdec.ptr184 = getelementptr inbounds i8, i8* %133, i32 1, !dbg !3218
  store i8* %incdec.ptr184, i8** %b, align 8, !dbg !3218
  store i8 10, i8* %133, align 1, !dbg !3218
  br label %do.end185, !dbg !3218

do.end185:                                        ; preds = %while.end183
  br label %if.end187, !dbg !3218

if.else186:                                       ; preds = %lor.lhs.false111
  br label %normal_char, !dbg !3241

if.end187:                                        ; preds = %do.end185
  br label %sw.epilog3609, !dbg !3242

sw.bb188:                                         ; preds = %do.end, %do.end
  %134 = load i64, i64* %syntax.addr, align 8, !dbg !3243
  %and189 = and i64 %134, 2, !dbg !3245
  %tobool190 = icmp ne i64 %and189, 0, !dbg !3245
  br i1 %tobool190, label %if.then194, label %lor.lhs.false191, !dbg !3246

lor.lhs.false191:                                 ; preds = %sw.bb188
  %135 = load i64, i64* %syntax.addr, align 8, !dbg !3247
  %and192 = and i64 %135, 1024, !dbg !3248
  %tobool193 = icmp ne i64 %and192, 0, !dbg !3248
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !3249

if.then194:                                       ; preds = %lor.lhs.false191, %sw.bb188
  br label %normal_char, !dbg !3250

if.end195:                                        ; preds = %lor.lhs.false191
  br label %handle_plus, !dbg !3251

handle_plus:                                      ; preds = %if.then3386, %if.end195
  call void @llvm.dbg.label(metadata !3252), !dbg !3253
  br label %sw.bb196, !dbg !3251

sw.bb196:                                         ; preds = %do.end, %handle_plus
  %136 = load i8*, i8** %laststart, align 8, !dbg !3254
  %tobool197 = icmp ne i8* %136, null, !dbg !3254
  br i1 %tobool197, label %if.end209, label %if.then198, !dbg !3256

if.then198:                                       ; preds = %sw.bb196
  %137 = load i64, i64* %syntax.addr, align 8, !dbg !3257
  %and199 = and i64 %137, 32, !dbg !3260
  %tobool200 = icmp ne i64 %and199, 0, !dbg !3260
  br i1 %tobool200, label %if.then201, label %if.else203, !dbg !3261

if.then201:                                       ; preds = %if.then198
  %stack202 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3262
  %138 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack202, align 8, !dbg !3262
  %139 = bitcast %struct.compile_stack_elt_t* %138 to i8*, !dbg !3262
  call void @free(i8* %139), !dbg !3262
  store i32 13, i32* %retval, align 4, !dbg !3262
  br label %return, !dbg !3262

if.else203:                                       ; preds = %if.then198
  %140 = load i64, i64* %syntax.addr, align 8, !dbg !3263
  %and204 = and i64 %140, 16, !dbg !3265
  %tobool205 = icmp ne i64 %and204, 0, !dbg !3265
  br i1 %tobool205, label %if.end207, label %if.then206, !dbg !3266

if.then206:                                       ; preds = %if.else203
  br label %normal_char, !dbg !3267

if.end207:                                        ; preds = %if.else203
  br label %if.end208

if.end208:                                        ; preds = %if.end207
  br label %if.end209, !dbg !3268

if.end209:                                        ; preds = %if.end208, %sw.bb196
  call void @llvm.dbg.declare(metadata i8* %keep_string_p, metadata !3269, metadata !DIExpression()), !dbg !3271
  store i8 0, i8* %keep_string_p, align 1, !dbg !3271
  call void @llvm.dbg.declare(metadata i8* %zero_times_ok, metadata !3272, metadata !DIExpression()), !dbg !3273
  store i8 0, i8* %zero_times_ok, align 1, !dbg !3273
  call void @llvm.dbg.declare(metadata i8* %many_times_ok, metadata !3274, metadata !DIExpression()), !dbg !3275
  store i8 0, i8* %many_times_ok, align 1, !dbg !3275
  br label %for.cond, !dbg !3276

for.cond:                                         ; preds = %if.end290, %if.end209
  %141 = load i8, i8* %c, align 1, !dbg !3277
  %conv210 = zext i8 %141 to i32, !dbg !3277
  %cmp211 = icmp ne i32 %conv210, 43, !dbg !3281
  %conv212 = zext i1 %cmp211 to i32, !dbg !3281
  %142 = load i8, i8* %zero_times_ok, align 1, !dbg !3282
  %conv213 = sext i8 %142 to i32, !dbg !3282
  %or = or i32 %conv213, %conv212, !dbg !3282
  %conv214 = trunc i32 %or to i8, !dbg !3282
  store i8 %conv214, i8* %zero_times_ok, align 1, !dbg !3282
  %143 = load i8, i8* %c, align 1, !dbg !3283
  %conv215 = zext i8 %143 to i32, !dbg !3283
  %cmp216 = icmp ne i32 %conv215, 63, !dbg !3284
  %conv217 = zext i1 %cmp216 to i32, !dbg !3284
  %144 = load i8, i8* %many_times_ok, align 1, !dbg !3285
  %conv218 = sext i8 %144 to i32, !dbg !3285
  %or219 = or i32 %conv218, %conv217, !dbg !3285
  %conv220 = trunc i32 %or219 to i8, !dbg !3285
  store i8 %conv220, i8* %many_times_ok, align 1, !dbg !3285
  %145 = load i8*, i8** %p, align 8, !dbg !3286
  %146 = load i8*, i8** %pend, align 8, !dbg !3288
  %cmp221 = icmp eq i8* %145, %146, !dbg !3289
  br i1 %cmp221, label %if.then223, label %if.end224, !dbg !3290

if.then223:                                       ; preds = %for.cond
  br label %for.end, !dbg !3291

if.end224:                                        ; preds = %for.cond
  br label %do.body225, !dbg !3292

do.body225:                                       ; preds = %if.end224
  %147 = load i8*, i8** %p, align 8, !dbg !3293
  %148 = load i8*, i8** %pend, align 8, !dbg !3293
  %cmp226 = icmp eq i8* %147, %148, !dbg !3293
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !3296

if.then228:                                       ; preds = %do.body225
  store i32 14, i32* %retval, align 4, !dbg !3293
  br label %return, !dbg !3293

if.end229:                                        ; preds = %do.body225
  %149 = load i8*, i8** %p, align 8, !dbg !3296
  %incdec.ptr230 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !3296
  store i8* %incdec.ptr230, i8** %p, align 8, !dbg !3296
  %150 = load i8, i8* %149, align 1, !dbg !3296
  store i8 %150, i8* %c, align 1, !dbg !3296
  %151 = load i8*, i8** %translate, align 8, !dbg !3297
  %tobool231 = icmp ne i8* %151, null, !dbg !3297
  br i1 %tobool231, label %if.then232, label %if.end235, !dbg !3296

if.then232:                                       ; preds = %if.end229
  %152 = load i8*, i8** %translate, align 8, !dbg !3297
  %153 = load i8, i8* %c, align 1, !dbg !3297
  %idxprom233 = zext i8 %153 to i64, !dbg !3297
  %arrayidx234 = getelementptr inbounds i8, i8* %152, i64 %idxprom233, !dbg !3297
  %154 = load i8, i8* %arrayidx234, align 1, !dbg !3297
  store i8 %154, i8* %c, align 1, !dbg !3297
  br label %if.end235, !dbg !3297

if.end235:                                        ; preds = %if.then232, %if.end229
  br label %do.end236, !dbg !3296

do.end236:                                        ; preds = %if.end235
  %155 = load i8, i8* %c, align 1, !dbg !3299
  %conv237 = zext i8 %155 to i32, !dbg !3299
  %cmp238 = icmp eq i32 %conv237, 42, !dbg !3301
  br i1 %cmp238, label %if.then250, label %lor.lhs.false240, !dbg !3302

lor.lhs.false240:                                 ; preds = %do.end236
  %156 = load i64, i64* %syntax.addr, align 8, !dbg !3303
  %and241 = and i64 %156, 2, !dbg !3304
  %tobool242 = icmp ne i64 %and241, 0, !dbg !3304
  br i1 %tobool242, label %if.else251, label %land.lhs.true, !dbg !3305

land.lhs.true:                                    ; preds = %lor.lhs.false240
  %157 = load i8, i8* %c, align 1, !dbg !3306
  %conv243 = zext i8 %157 to i32, !dbg !3306
  %cmp244 = icmp eq i32 %conv243, 43, !dbg !3307
  br i1 %cmp244, label %if.then250, label %lor.lhs.false246, !dbg !3308

lor.lhs.false246:                                 ; preds = %land.lhs.true
  %158 = load i8, i8* %c, align 1, !dbg !3309
  %conv247 = zext i8 %158 to i32, !dbg !3309
  %cmp248 = icmp eq i32 %conv247, 63, !dbg !3310
  br i1 %cmp248, label %if.then250, label %if.else251, !dbg !3311

if.then250:                                       ; preds = %lor.lhs.false246, %land.lhs.true, %do.end236
  br label %if.end290, !dbg !3311

if.else251:                                       ; preds = %lor.lhs.false246, %lor.lhs.false240
  %159 = load i64, i64* %syntax.addr, align 8, !dbg !3312
  %and252 = and i64 %159, 2, !dbg !3314
  %tobool253 = icmp ne i64 %and252, 0, !dbg !3314
  br i1 %tobool253, label %land.lhs.true254, label %if.else287, !dbg !3315

land.lhs.true254:                                 ; preds = %if.else251
  %160 = load i8, i8* %c, align 1, !dbg !3316
  %conv255 = zext i8 %160 to i32, !dbg !3316
  %cmp256 = icmp eq i32 %conv255, 92, !dbg !3317
  br i1 %cmp256, label %if.then258, label %if.else287, !dbg !3318

if.then258:                                       ; preds = %land.lhs.true254
  %161 = load i8*, i8** %p, align 8, !dbg !3319
  %162 = load i8*, i8** %pend, align 8, !dbg !3322
  %cmp259 = icmp eq i8* %161, %162, !dbg !3323
  br i1 %cmp259, label %if.then261, label %if.end263, !dbg !3324

if.then261:                                       ; preds = %if.then258
  %stack262 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3325
  %163 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack262, align 8, !dbg !3325
  %164 = bitcast %struct.compile_stack_elt_t* %163 to i8*, !dbg !3325
  call void @free(i8* %164), !dbg !3325
  store i32 5, i32* %retval, align 4, !dbg !3325
  br label %return, !dbg !3325

if.end263:                                        ; preds = %if.then258
  br label %do.body264, !dbg !3326

do.body264:                                       ; preds = %if.end263
  %165 = load i8*, i8** %p, align 8, !dbg !3327
  %166 = load i8*, i8** %pend, align 8, !dbg !3327
  %cmp265 = icmp eq i8* %165, %166, !dbg !3327
  br i1 %cmp265, label %if.then267, label %if.end268, !dbg !3330

if.then267:                                       ; preds = %do.body264
  store i32 14, i32* %retval, align 4, !dbg !3327
  br label %return, !dbg !3327

if.end268:                                        ; preds = %do.body264
  %167 = load i8*, i8** %p, align 8, !dbg !3330
  %incdec.ptr269 = getelementptr inbounds i8, i8* %167, i32 1, !dbg !3330
  store i8* %incdec.ptr269, i8** %p, align 8, !dbg !3330
  %168 = load i8, i8* %167, align 1, !dbg !3330
  store i8 %168, i8* %c1, align 1, !dbg !3330
  %169 = load i8*, i8** %translate, align 8, !dbg !3331
  %tobool270 = icmp ne i8* %169, null, !dbg !3331
  br i1 %tobool270, label %if.then271, label %if.end274, !dbg !3330

if.then271:                                       ; preds = %if.end268
  %170 = load i8*, i8** %translate, align 8, !dbg !3331
  %171 = load i8, i8* %c1, align 1, !dbg !3331
  %idxprom272 = zext i8 %171 to i64, !dbg !3331
  %arrayidx273 = getelementptr inbounds i8, i8* %170, i64 %idxprom272, !dbg !3331
  %172 = load i8, i8* %arrayidx273, align 1, !dbg !3331
  store i8 %172, i8* %c1, align 1, !dbg !3331
  br label %if.end274, !dbg !3331

if.end274:                                        ; preds = %if.then271, %if.end268
  br label %do.end275, !dbg !3330

do.end275:                                        ; preds = %if.end274
  %173 = load i8, i8* %c1, align 1, !dbg !3333
  %conv276 = zext i8 %173 to i32, !dbg !3333
  %cmp277 = icmp eq i32 %conv276, 43, !dbg !3335
  br i1 %cmp277, label %if.end286, label %lor.lhs.false279, !dbg !3336

lor.lhs.false279:                                 ; preds = %do.end275
  %174 = load i8, i8* %c1, align 1, !dbg !3337
  %conv280 = zext i8 %174 to i32, !dbg !3337
  %cmp281 = icmp eq i32 %conv280, 63, !dbg !3338
  br i1 %cmp281, label %if.end286, label %if.then283, !dbg !3339

if.then283:                                       ; preds = %lor.lhs.false279
  %175 = load i8*, i8** %p, align 8, !dbg !3340
  %incdec.ptr284 = getelementptr inbounds i8, i8* %175, i32 -1, !dbg !3340
  store i8* %incdec.ptr284, i8** %p, align 8, !dbg !3340
  %176 = load i8*, i8** %p, align 8, !dbg !3342
  %incdec.ptr285 = getelementptr inbounds i8, i8* %176, i32 -1, !dbg !3342
  store i8* %incdec.ptr285, i8** %p, align 8, !dbg !3342
  br label %for.end, !dbg !3343

if.end286:                                        ; preds = %lor.lhs.false279, %do.end275
  %177 = load i8, i8* %c1, align 1, !dbg !3344
  store i8 %177, i8* %c, align 1, !dbg !3345
  br label %if.end289, !dbg !3346

if.else287:                                       ; preds = %land.lhs.true254, %if.else251
  %178 = load i8*, i8** %p, align 8, !dbg !3347
  %incdec.ptr288 = getelementptr inbounds i8, i8* %178, i32 -1, !dbg !3347
  store i8* %incdec.ptr288, i8** %p, align 8, !dbg !3347
  br label %for.end, !dbg !3349

if.end289:                                        ; preds = %if.end286
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then250
  br label %for.cond, !dbg !3350, !llvm.loop !3351

for.end:                                          ; preds = %if.else287, %if.then283, %if.then223
  %179 = load i8*, i8** %laststart, align 8, !dbg !3354
  %tobool291 = icmp ne i8* %179, null, !dbg !3354
  br i1 %tobool291, label %if.end293, label %if.then292, !dbg !3356

if.then292:                                       ; preds = %for.end
  br label %sw.epilog3609, !dbg !3357

if.end293:                                        ; preds = %for.end
  %180 = load i8, i8* %many_times_ok, align 1, !dbg !3358
  %tobool294 = icmp ne i8 %180, 0, !dbg !3358
  br i1 %tobool294, label %if.then295, label %if.end421, !dbg !3360

if.then295:                                       ; preds = %if.end293
  br label %while.cond296, !dbg !3361

while.cond296:                                    ; preds = %do.end361, %if.then295
  %181 = load i8*, i8** %b, align 8, !dbg !3361
  %182 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3361
  %buffer297 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %182, i32 0, i32 0, !dbg !3361
  %183 = load i8*, i8** %buffer297, align 8, !dbg !3361
  %sub.ptr.lhs.cast298 = ptrtoint i8* %181 to i64, !dbg !3361
  %sub.ptr.rhs.cast299 = ptrtoint i8* %183 to i64, !dbg !3361
  %sub.ptr.sub300 = sub i64 %sub.ptr.lhs.cast298, %sub.ptr.rhs.cast299, !dbg !3361
  %add301 = add nsw i64 %sub.ptr.sub300, 3, !dbg !3361
  %184 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3361
  %allocated302 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %184, i32 0, i32 1, !dbg !3361
  %185 = load i64, i64* %allocated302, align 8, !dbg !3361
  %cmp303 = icmp ugt i64 %add301, %185, !dbg !3361
  br i1 %cmp303, label %while.body305, label %while.end362, !dbg !3361

while.body305:                                    ; preds = %while.cond296
  br label %do.body306, !dbg !3361

do.body306:                                       ; preds = %while.body305
  call void @llvm.dbg.declare(metadata i8** %old_buffer307, metadata !3363, metadata !DIExpression()), !dbg !3365
  %186 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3365
  %buffer308 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %186, i32 0, i32 0, !dbg !3365
  %187 = load i8*, i8** %buffer308, align 8, !dbg !3365
  store i8* %187, i8** %old_buffer307, align 8, !dbg !3365
  %188 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3366
  %allocated309 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %188, i32 0, i32 1, !dbg !3366
  %189 = load i64, i64* %allocated309, align 8, !dbg !3366
  %cmp310 = icmp eq i64 %189, 65536, !dbg !3366
  br i1 %cmp310, label %if.then312, label %if.end313, !dbg !3365

if.then312:                                       ; preds = %do.body306
  store i32 15, i32* %retval, align 4, !dbg !3366
  br label %return, !dbg !3366

if.end313:                                        ; preds = %do.body306
  %190 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3365
  %allocated314 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %190, i32 0, i32 1, !dbg !3365
  %191 = load i64, i64* %allocated314, align 8, !dbg !3365
  %shl315 = shl i64 %191, 1, !dbg !3365
  store i64 %shl315, i64* %allocated314, align 8, !dbg !3365
  %192 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3368
  %allocated316 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %192, i32 0, i32 1, !dbg !3368
  %193 = load i64, i64* %allocated316, align 8, !dbg !3368
  %cmp317 = icmp ugt i64 %193, 65536, !dbg !3368
  br i1 %cmp317, label %if.then319, label %if.end321, !dbg !3365

if.then319:                                       ; preds = %if.end313
  %194 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3368
  %allocated320 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %194, i32 0, i32 1, !dbg !3368
  store i64 65536, i64* %allocated320, align 8, !dbg !3368
  br label %if.end321, !dbg !3368

if.end321:                                        ; preds = %if.then319, %if.end313
  %195 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3365
  %buffer322 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %195, i32 0, i32 0, !dbg !3365
  %196 = load i8*, i8** %buffer322, align 8, !dbg !3365
  %197 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3365
  %allocated323 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %197, i32 0, i32 1, !dbg !3365
  %198 = load i64, i64* %allocated323, align 8, !dbg !3365
  %call324 = call i8* @realloc(i8* %196, i64 %198), !dbg !3365
  %199 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3365
  %buffer325 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %199, i32 0, i32 0, !dbg !3365
  store i8* %call324, i8** %buffer325, align 8, !dbg !3365
  %200 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3370
  %buffer326 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %200, i32 0, i32 0, !dbg !3370
  %201 = load i8*, i8** %buffer326, align 8, !dbg !3370
  %cmp327 = icmp eq i8* %201, null, !dbg !3370
  br i1 %cmp327, label %if.then329, label %if.end330, !dbg !3365

if.then329:                                       ; preds = %if.end321
  store i32 12, i32* %retval, align 4, !dbg !3370
  br label %return, !dbg !3370

if.end330:                                        ; preds = %if.end321
  %202 = load i8*, i8** %old_buffer307, align 8, !dbg !3372
  %203 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3372
  %buffer331 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %203, i32 0, i32 0, !dbg !3372
  %204 = load i8*, i8** %buffer331, align 8, !dbg !3372
  %cmp332 = icmp ne i8* %202, %204, !dbg !3372
  br i1 %cmp332, label %if.then334, label %if.end360, !dbg !3365

if.then334:                                       ; preds = %if.end330
  call void @llvm.dbg.declare(metadata i32* %incr335, metadata !3374, metadata !DIExpression()), !dbg !3376
  %205 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3376
  %buffer336 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %205, i32 0, i32 0, !dbg !3376
  %206 = load i8*, i8** %buffer336, align 8, !dbg !3376
  %207 = load i8*, i8** %old_buffer307, align 8, !dbg !3376
  %sub.ptr.lhs.cast337 = ptrtoint i8* %206 to i64, !dbg !3376
  %sub.ptr.rhs.cast338 = ptrtoint i8* %207 to i64, !dbg !3376
  %sub.ptr.sub339 = sub i64 %sub.ptr.lhs.cast337, %sub.ptr.rhs.cast338, !dbg !3376
  %conv340 = trunc i64 %sub.ptr.sub339 to i32, !dbg !3376
  store i32 %conv340, i32* %incr335, align 4, !dbg !3376
  %208 = load i32, i32* %incr335, align 4, !dbg !3376
  %209 = load i8*, i8** %b, align 8, !dbg !3376
  %idx.ext341 = sext i32 %208 to i64, !dbg !3376
  %add.ptr342 = getelementptr inbounds i8, i8* %209, i64 %idx.ext341, !dbg !3376
  store i8* %add.ptr342, i8** %b, align 8, !dbg !3376
  %210 = load i32, i32* %incr335, align 4, !dbg !3376
  %211 = load i8*, i8** %begalt, align 8, !dbg !3376
  %idx.ext343 = sext i32 %210 to i64, !dbg !3376
  %add.ptr344 = getelementptr inbounds i8, i8* %211, i64 %idx.ext343, !dbg !3376
  store i8* %add.ptr344, i8** %begalt, align 8, !dbg !3376
  %212 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3377
  %tobool345 = icmp ne i8* %212, null, !dbg !3377
  br i1 %tobool345, label %if.then346, label %if.end349, !dbg !3376

if.then346:                                       ; preds = %if.then334
  %213 = load i32, i32* %incr335, align 4, !dbg !3377
  %214 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3377
  %idx.ext347 = sext i32 %213 to i64, !dbg !3377
  %add.ptr348 = getelementptr inbounds i8, i8* %214, i64 %idx.ext347, !dbg !3377
  store i8* %add.ptr348, i8** %fixup_alt_jump, align 8, !dbg !3377
  br label %if.end349, !dbg !3377

if.end349:                                        ; preds = %if.then346, %if.then334
  %215 = load i8*, i8** %laststart, align 8, !dbg !3379
  %tobool350 = icmp ne i8* %215, null, !dbg !3379
  br i1 %tobool350, label %if.then351, label %if.end354, !dbg !3376

if.then351:                                       ; preds = %if.end349
  %216 = load i32, i32* %incr335, align 4, !dbg !3379
  %217 = load i8*, i8** %laststart, align 8, !dbg !3379
  %idx.ext352 = sext i32 %216 to i64, !dbg !3379
  %add.ptr353 = getelementptr inbounds i8, i8* %217, i64 %idx.ext352, !dbg !3379
  store i8* %add.ptr353, i8** %laststart, align 8, !dbg !3379
  br label %if.end354, !dbg !3379

if.end354:                                        ; preds = %if.then351, %if.end349
  %218 = load i8*, i8** %pending_exact, align 8, !dbg !3381
  %tobool355 = icmp ne i8* %218, null, !dbg !3381
  br i1 %tobool355, label %if.then356, label %if.end359, !dbg !3376

if.then356:                                       ; preds = %if.end354
  %219 = load i32, i32* %incr335, align 4, !dbg !3381
  %220 = load i8*, i8** %pending_exact, align 8, !dbg !3381
  %idx.ext357 = sext i32 %219 to i64, !dbg !3381
  %add.ptr358 = getelementptr inbounds i8, i8* %220, i64 %idx.ext357, !dbg !3381
  store i8* %add.ptr358, i8** %pending_exact, align 8, !dbg !3381
  br label %if.end359, !dbg !3381

if.end359:                                        ; preds = %if.then356, %if.end354
  br label %if.end360, !dbg !3376

if.end360:                                        ; preds = %if.end359, %if.end330
  br label %do.end361, !dbg !3365

do.end361:                                        ; preds = %if.end360
  br label %while.cond296, !dbg !3361, !llvm.loop !3383

while.end362:                                     ; preds = %while.cond296
  %221 = load i8*, i8** %translate, align 8, !dbg !3384
  %tobool363 = icmp ne i8* %221, null, !dbg !3384
  br i1 %tobool363, label %cond.true, label %cond.false, !dbg !3384

cond.true:                                        ; preds = %while.end362
  %222 = load i8*, i8** %translate, align 8, !dbg !3384
  %223 = load i8*, i8** %p, align 8, !dbg !3384
  %add.ptr364 = getelementptr inbounds i8, i8* %223, i64 -2, !dbg !3384
  %224 = load i8, i8* %add.ptr364, align 1, !dbg !3384
  %idxprom365 = zext i8 %224 to i64, !dbg !3384
  %arrayidx366 = getelementptr inbounds i8, i8* %222, i64 %idxprom365, !dbg !3384
  %225 = load i8, i8* %arrayidx366, align 1, !dbg !3384
  %conv367 = sext i8 %225 to i32, !dbg !3384
  br label %cond.end, !dbg !3384

cond.false:                                       ; preds = %while.end362
  %226 = load i8*, i8** %p, align 8, !dbg !3384
  %add.ptr368 = getelementptr inbounds i8, i8* %226, i64 -2, !dbg !3384
  %227 = load i8, i8* %add.ptr368, align 1, !dbg !3384
  %conv369 = sext i8 %227 to i32, !dbg !3384
  br label %cond.end, !dbg !3384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv367, %cond.true ], [ %conv369, %cond.false ], !dbg !3384
  %228 = load i8*, i8** %translate, align 8, !dbg !3386
  %tobool370 = icmp ne i8* %228, null, !dbg !3386
  br i1 %tobool370, label %cond.true371, label %cond.false374, !dbg !3386

cond.true371:                                     ; preds = %cond.end
  %229 = load i8*, i8** %translate, align 8, !dbg !3386
  %arrayidx372 = getelementptr inbounds i8, i8* %229, i64 46, !dbg !3386
  %230 = load i8, i8* %arrayidx372, align 1, !dbg !3386
  %conv373 = sext i8 %230 to i32, !dbg !3386
  br label %cond.end375, !dbg !3386

cond.false374:                                    ; preds = %cond.end
  br label %cond.end375, !dbg !3386

cond.end375:                                      ; preds = %cond.false374, %cond.true371
  %cond376 = phi i32 [ %conv373, %cond.true371 ], [ 46, %cond.false374 ], !dbg !3386
  %cmp377 = icmp eq i32 %cond, %cond376, !dbg !3387
  br i1 %cmp377, label %land.lhs.true379, label %if.else412, !dbg !3388

land.lhs.true379:                                 ; preds = %cond.end375
  %231 = load i8, i8* %zero_times_ok, align 1, !dbg !3389
  %conv380 = sext i8 %231 to i32, !dbg !3389
  %tobool381 = icmp ne i32 %conv380, 0, !dbg !3389
  br i1 %tobool381, label %land.lhs.true382, label %if.else412, !dbg !3390

land.lhs.true382:                                 ; preds = %land.lhs.true379
  %232 = load i8*, i8** %p, align 8, !dbg !3391
  %233 = load i8*, i8** %pend, align 8, !dbg !3392
  %cmp383 = icmp ult i8* %232, %233, !dbg !3393
  br i1 %cmp383, label %land.lhs.true385, label %if.else412, !dbg !3394

land.lhs.true385:                                 ; preds = %land.lhs.true382
  %234 = load i8*, i8** %translate, align 8, !dbg !3395
  %tobool386 = icmp ne i8* %234, null, !dbg !3395
  br i1 %tobool386, label %cond.true387, label %cond.false391, !dbg !3395

cond.true387:                                     ; preds = %land.lhs.true385
  %235 = load i8*, i8** %translate, align 8, !dbg !3395
  %236 = load i8*, i8** %p, align 8, !dbg !3395
  %237 = load i8, i8* %236, align 1, !dbg !3395
  %idxprom388 = zext i8 %237 to i64, !dbg !3395
  %arrayidx389 = getelementptr inbounds i8, i8* %235, i64 %idxprom388, !dbg !3395
  %238 = load i8, i8* %arrayidx389, align 1, !dbg !3395
  %conv390 = sext i8 %238 to i32, !dbg !3395
  br label %cond.end393, !dbg !3395

cond.false391:                                    ; preds = %land.lhs.true385
  %239 = load i8*, i8** %p, align 8, !dbg !3395
  %240 = load i8, i8* %239, align 1, !dbg !3395
  %conv392 = sext i8 %240 to i32, !dbg !3395
  br label %cond.end393, !dbg !3395

cond.end393:                                      ; preds = %cond.false391, %cond.true387
  %cond394 = phi i32 [ %conv390, %cond.true387 ], [ %conv392, %cond.false391 ], !dbg !3395
  %241 = load i8*, i8** %translate, align 8, !dbg !3396
  %tobool395 = icmp ne i8* %241, null, !dbg !3396
  br i1 %tobool395, label %cond.true396, label %cond.false399, !dbg !3396

cond.true396:                                     ; preds = %cond.end393
  %242 = load i8*, i8** %translate, align 8, !dbg !3396
  %arrayidx397 = getelementptr inbounds i8, i8* %242, i64 10, !dbg !3396
  %243 = load i8, i8* %arrayidx397, align 1, !dbg !3396
  %conv398 = sext i8 %243 to i32, !dbg !3396
  br label %cond.end400, !dbg !3396

cond.false399:                                    ; preds = %cond.end393
  br label %cond.end400, !dbg !3396

cond.end400:                                      ; preds = %cond.false399, %cond.true396
  %cond401 = phi i32 [ %conv398, %cond.true396 ], [ 10, %cond.false399 ], !dbg !3396
  %cmp402 = icmp eq i32 %cond394, %cond401, !dbg !3397
  br i1 %cmp402, label %land.lhs.true404, label %if.else412, !dbg !3398

land.lhs.true404:                                 ; preds = %cond.end400
  %244 = load i64, i64* %syntax.addr, align 8, !dbg !3399
  %and405 = and i64 %244, 64, !dbg !3400
  %tobool406 = icmp ne i64 %and405, 0, !dbg !3400
  br i1 %tobool406, label %if.else412, label %if.then407, !dbg !3401

if.then407:                                       ; preds = %land.lhs.true404
  %245 = load i8*, i8** %b, align 8, !dbg !3402
  %246 = load i8*, i8** %laststart, align 8, !dbg !3402
  %247 = load i8*, i8** %b, align 8, !dbg !3402
  %sub.ptr.lhs.cast408 = ptrtoint i8* %246 to i64, !dbg !3402
  %sub.ptr.rhs.cast409 = ptrtoint i8* %247 to i64, !dbg !3402
  %sub.ptr.sub410 = sub i64 %sub.ptr.lhs.cast408, %sub.ptr.rhs.cast409, !dbg !3402
  %sub = sub nsw i64 %sub.ptr.sub410, 3, !dbg !3402
  %conv411 = trunc i64 %sub to i32, !dbg !3402
  call void @byte_store_op1(i32 13, i8* %245, i32 %conv411), !dbg !3402
  store i8 1, i8* %keep_string_p, align 1, !dbg !3404
  br label %if.end419, !dbg !3405

if.else412:                                       ; preds = %land.lhs.true404, %cond.end400, %land.lhs.true382, %land.lhs.true379, %cond.end375
  %248 = load i8*, i8** %b, align 8, !dbg !3406
  %249 = load i8*, i8** %laststart, align 8, !dbg !3406
  %add.ptr413 = getelementptr inbounds i8, i8* %249, i64 -3, !dbg !3406
  %250 = load i8*, i8** %b, align 8, !dbg !3406
  %sub.ptr.lhs.cast414 = ptrtoint i8* %add.ptr413 to i64, !dbg !3406
  %sub.ptr.rhs.cast415 = ptrtoint i8* %250 to i64, !dbg !3406
  %sub.ptr.sub416 = sub i64 %sub.ptr.lhs.cast414, %sub.ptr.rhs.cast415, !dbg !3406
  %sub417 = sub nsw i64 %sub.ptr.sub416, 3, !dbg !3406
  %conv418 = trunc i64 %sub417 to i32, !dbg !3406
  call void @byte_store_op1(i32 18, i8* %248, i32 %conv418), !dbg !3406
  br label %if.end419

if.end419:                                        ; preds = %if.else412, %if.then407
  %251 = load i8*, i8** %b, align 8, !dbg !3407
  %add.ptr420 = getelementptr inbounds i8, i8* %251, i64 3, !dbg !3407
  store i8* %add.ptr420, i8** %b, align 8, !dbg !3407
  br label %if.end421, !dbg !3408

if.end421:                                        ; preds = %if.end419, %if.end293
  br label %while.cond422, !dbg !3409

while.cond422:                                    ; preds = %do.end487, %if.end421
  %252 = load i8*, i8** %b, align 8, !dbg !3409
  %253 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3409
  %buffer423 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %253, i32 0, i32 0, !dbg !3409
  %254 = load i8*, i8** %buffer423, align 8, !dbg !3409
  %sub.ptr.lhs.cast424 = ptrtoint i8* %252 to i64, !dbg !3409
  %sub.ptr.rhs.cast425 = ptrtoint i8* %254 to i64, !dbg !3409
  %sub.ptr.sub426 = sub i64 %sub.ptr.lhs.cast424, %sub.ptr.rhs.cast425, !dbg !3409
  %add427 = add nsw i64 %sub.ptr.sub426, 3, !dbg !3409
  %255 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3409
  %allocated428 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %255, i32 0, i32 1, !dbg !3409
  %256 = load i64, i64* %allocated428, align 8, !dbg !3409
  %cmp429 = icmp ugt i64 %add427, %256, !dbg !3409
  br i1 %cmp429, label %while.body431, label %while.end488, !dbg !3409

while.body431:                                    ; preds = %while.cond422
  br label %do.body432, !dbg !3409

do.body432:                                       ; preds = %while.body431
  call void @llvm.dbg.declare(metadata i8** %old_buffer433, metadata !3410, metadata !DIExpression()), !dbg !3412
  %257 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3412
  %buffer434 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %257, i32 0, i32 0, !dbg !3412
  %258 = load i8*, i8** %buffer434, align 8, !dbg !3412
  store i8* %258, i8** %old_buffer433, align 8, !dbg !3412
  %259 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3413
  %allocated435 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %259, i32 0, i32 1, !dbg !3413
  %260 = load i64, i64* %allocated435, align 8, !dbg !3413
  %cmp436 = icmp eq i64 %260, 65536, !dbg !3413
  br i1 %cmp436, label %if.then438, label %if.end439, !dbg !3412

if.then438:                                       ; preds = %do.body432
  store i32 15, i32* %retval, align 4, !dbg !3413
  br label %return, !dbg !3413

if.end439:                                        ; preds = %do.body432
  %261 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3412
  %allocated440 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %261, i32 0, i32 1, !dbg !3412
  %262 = load i64, i64* %allocated440, align 8, !dbg !3412
  %shl441 = shl i64 %262, 1, !dbg !3412
  store i64 %shl441, i64* %allocated440, align 8, !dbg !3412
  %263 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3415
  %allocated442 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %263, i32 0, i32 1, !dbg !3415
  %264 = load i64, i64* %allocated442, align 8, !dbg !3415
  %cmp443 = icmp ugt i64 %264, 65536, !dbg !3415
  br i1 %cmp443, label %if.then445, label %if.end447, !dbg !3412

if.then445:                                       ; preds = %if.end439
  %265 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3415
  %allocated446 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %265, i32 0, i32 1, !dbg !3415
  store i64 65536, i64* %allocated446, align 8, !dbg !3415
  br label %if.end447, !dbg !3415

if.end447:                                        ; preds = %if.then445, %if.end439
  %266 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3412
  %buffer448 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %266, i32 0, i32 0, !dbg !3412
  %267 = load i8*, i8** %buffer448, align 8, !dbg !3412
  %268 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3412
  %allocated449 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %268, i32 0, i32 1, !dbg !3412
  %269 = load i64, i64* %allocated449, align 8, !dbg !3412
  %call450 = call i8* @realloc(i8* %267, i64 %269), !dbg !3412
  %270 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3412
  %buffer451 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %270, i32 0, i32 0, !dbg !3412
  store i8* %call450, i8** %buffer451, align 8, !dbg !3412
  %271 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3417
  %buffer452 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %271, i32 0, i32 0, !dbg !3417
  %272 = load i8*, i8** %buffer452, align 8, !dbg !3417
  %cmp453 = icmp eq i8* %272, null, !dbg !3417
  br i1 %cmp453, label %if.then455, label %if.end456, !dbg !3412

if.then455:                                       ; preds = %if.end447
  store i32 12, i32* %retval, align 4, !dbg !3417
  br label %return, !dbg !3417

if.end456:                                        ; preds = %if.end447
  %273 = load i8*, i8** %old_buffer433, align 8, !dbg !3419
  %274 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3419
  %buffer457 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %274, i32 0, i32 0, !dbg !3419
  %275 = load i8*, i8** %buffer457, align 8, !dbg !3419
  %cmp458 = icmp ne i8* %273, %275, !dbg !3419
  br i1 %cmp458, label %if.then460, label %if.end486, !dbg !3412

if.then460:                                       ; preds = %if.end456
  call void @llvm.dbg.declare(metadata i32* %incr461, metadata !3421, metadata !DIExpression()), !dbg !3423
  %276 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3423
  %buffer462 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %276, i32 0, i32 0, !dbg !3423
  %277 = load i8*, i8** %buffer462, align 8, !dbg !3423
  %278 = load i8*, i8** %old_buffer433, align 8, !dbg !3423
  %sub.ptr.lhs.cast463 = ptrtoint i8* %277 to i64, !dbg !3423
  %sub.ptr.rhs.cast464 = ptrtoint i8* %278 to i64, !dbg !3423
  %sub.ptr.sub465 = sub i64 %sub.ptr.lhs.cast463, %sub.ptr.rhs.cast464, !dbg !3423
  %conv466 = trunc i64 %sub.ptr.sub465 to i32, !dbg !3423
  store i32 %conv466, i32* %incr461, align 4, !dbg !3423
  %279 = load i32, i32* %incr461, align 4, !dbg !3423
  %280 = load i8*, i8** %b, align 8, !dbg !3423
  %idx.ext467 = sext i32 %279 to i64, !dbg !3423
  %add.ptr468 = getelementptr inbounds i8, i8* %280, i64 %idx.ext467, !dbg !3423
  store i8* %add.ptr468, i8** %b, align 8, !dbg !3423
  %281 = load i32, i32* %incr461, align 4, !dbg !3423
  %282 = load i8*, i8** %begalt, align 8, !dbg !3423
  %idx.ext469 = sext i32 %281 to i64, !dbg !3423
  %add.ptr470 = getelementptr inbounds i8, i8* %282, i64 %idx.ext469, !dbg !3423
  store i8* %add.ptr470, i8** %begalt, align 8, !dbg !3423
  %283 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3424
  %tobool471 = icmp ne i8* %283, null, !dbg !3424
  br i1 %tobool471, label %if.then472, label %if.end475, !dbg !3423

if.then472:                                       ; preds = %if.then460
  %284 = load i32, i32* %incr461, align 4, !dbg !3424
  %285 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3424
  %idx.ext473 = sext i32 %284 to i64, !dbg !3424
  %add.ptr474 = getelementptr inbounds i8, i8* %285, i64 %idx.ext473, !dbg !3424
  store i8* %add.ptr474, i8** %fixup_alt_jump, align 8, !dbg !3424
  br label %if.end475, !dbg !3424

if.end475:                                        ; preds = %if.then472, %if.then460
  %286 = load i8*, i8** %laststart, align 8, !dbg !3426
  %tobool476 = icmp ne i8* %286, null, !dbg !3426
  br i1 %tobool476, label %if.then477, label %if.end480, !dbg !3423

if.then477:                                       ; preds = %if.end475
  %287 = load i32, i32* %incr461, align 4, !dbg !3426
  %288 = load i8*, i8** %laststart, align 8, !dbg !3426
  %idx.ext478 = sext i32 %287 to i64, !dbg !3426
  %add.ptr479 = getelementptr inbounds i8, i8* %288, i64 %idx.ext478, !dbg !3426
  store i8* %add.ptr479, i8** %laststart, align 8, !dbg !3426
  br label %if.end480, !dbg !3426

if.end480:                                        ; preds = %if.then477, %if.end475
  %289 = load i8*, i8** %pending_exact, align 8, !dbg !3428
  %tobool481 = icmp ne i8* %289, null, !dbg !3428
  br i1 %tobool481, label %if.then482, label %if.end485, !dbg !3423

if.then482:                                       ; preds = %if.end480
  %290 = load i32, i32* %incr461, align 4, !dbg !3428
  %291 = load i8*, i8** %pending_exact, align 8, !dbg !3428
  %idx.ext483 = sext i32 %290 to i64, !dbg !3428
  %add.ptr484 = getelementptr inbounds i8, i8* %291, i64 %idx.ext483, !dbg !3428
  store i8* %add.ptr484, i8** %pending_exact, align 8, !dbg !3428
  br label %if.end485, !dbg !3428

if.end485:                                        ; preds = %if.then482, %if.end480
  br label %if.end486, !dbg !3423

if.end486:                                        ; preds = %if.end485, %if.end456
  br label %do.end487, !dbg !3412

do.end487:                                        ; preds = %if.end486
  br label %while.cond422, !dbg !3409, !llvm.loop !3430

while.end488:                                     ; preds = %while.cond422
  %292 = load i8, i8* %keep_string_p, align 1, !dbg !3431
  %conv489 = sext i8 %292 to i32, !dbg !3431
  %tobool490 = icmp ne i32 %conv489, 0, !dbg !3431
  %293 = zext i1 %tobool490 to i64, !dbg !3431
  %cond491 = select i1 %tobool490, i32 16, i32 15, !dbg !3431
  %294 = load i8*, i8** %laststart, align 8, !dbg !3431
  %295 = load i8*, i8** %b, align 8, !dbg !3431
  %add.ptr492 = getelementptr inbounds i8, i8* %295, i64 1, !dbg !3431
  %add.ptr493 = getelementptr inbounds i8, i8* %add.ptr492, i64 2, !dbg !3431
  %296 = load i8*, i8** %laststart, align 8, !dbg !3431
  %sub.ptr.lhs.cast494 = ptrtoint i8* %add.ptr493 to i64, !dbg !3431
  %sub.ptr.rhs.cast495 = ptrtoint i8* %296 to i64, !dbg !3431
  %sub.ptr.sub496 = sub i64 %sub.ptr.lhs.cast494, %sub.ptr.rhs.cast495, !dbg !3431
  %sub497 = sub nsw i64 %sub.ptr.sub496, 3, !dbg !3431
  %conv498 = trunc i64 %sub497 to i32, !dbg !3431
  %297 = load i8*, i8** %b, align 8, !dbg !3431
  call void @byte_insert_op1(i32 %cond491, i8* %294, i32 %conv498, i8* %297), !dbg !3431
  store i8* null, i8** %pending_exact, align 8, !dbg !3432
  %298 = load i8*, i8** %b, align 8, !dbg !3433
  %add.ptr499 = getelementptr inbounds i8, i8* %298, i64 3, !dbg !3433
  store i8* %add.ptr499, i8** %b, align 8, !dbg !3433
  %299 = load i8, i8* %zero_times_ok, align 1, !dbg !3434
  %tobool500 = icmp ne i8 %299, 0, !dbg !3434
  br i1 %tobool500, label %if.end577, label %if.then501, !dbg !3436

if.then501:                                       ; preds = %while.end488
  br label %while.cond502, !dbg !3437

while.cond502:                                    ; preds = %do.end567, %if.then501
  %300 = load i8*, i8** %b, align 8, !dbg !3437
  %301 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3437
  %buffer503 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %301, i32 0, i32 0, !dbg !3437
  %302 = load i8*, i8** %buffer503, align 8, !dbg !3437
  %sub.ptr.lhs.cast504 = ptrtoint i8* %300 to i64, !dbg !3437
  %sub.ptr.rhs.cast505 = ptrtoint i8* %302 to i64, !dbg !3437
  %sub.ptr.sub506 = sub i64 %sub.ptr.lhs.cast504, %sub.ptr.rhs.cast505, !dbg !3437
  %add507 = add nsw i64 %sub.ptr.sub506, 3, !dbg !3437
  %303 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3437
  %allocated508 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %303, i32 0, i32 1, !dbg !3437
  %304 = load i64, i64* %allocated508, align 8, !dbg !3437
  %cmp509 = icmp ugt i64 %add507, %304, !dbg !3437
  br i1 %cmp509, label %while.body511, label %while.end568, !dbg !3437

while.body511:                                    ; preds = %while.cond502
  br label %do.body512, !dbg !3437

do.body512:                                       ; preds = %while.body511
  call void @llvm.dbg.declare(metadata i8** %old_buffer513, metadata !3439, metadata !DIExpression()), !dbg !3441
  %305 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3441
  %buffer514 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %305, i32 0, i32 0, !dbg !3441
  %306 = load i8*, i8** %buffer514, align 8, !dbg !3441
  store i8* %306, i8** %old_buffer513, align 8, !dbg !3441
  %307 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3442
  %allocated515 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %307, i32 0, i32 1, !dbg !3442
  %308 = load i64, i64* %allocated515, align 8, !dbg !3442
  %cmp516 = icmp eq i64 %308, 65536, !dbg !3442
  br i1 %cmp516, label %if.then518, label %if.end519, !dbg !3441

if.then518:                                       ; preds = %do.body512
  store i32 15, i32* %retval, align 4, !dbg !3442
  br label %return, !dbg !3442

if.end519:                                        ; preds = %do.body512
  %309 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3441
  %allocated520 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %309, i32 0, i32 1, !dbg !3441
  %310 = load i64, i64* %allocated520, align 8, !dbg !3441
  %shl521 = shl i64 %310, 1, !dbg !3441
  store i64 %shl521, i64* %allocated520, align 8, !dbg !3441
  %311 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3444
  %allocated522 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %311, i32 0, i32 1, !dbg !3444
  %312 = load i64, i64* %allocated522, align 8, !dbg !3444
  %cmp523 = icmp ugt i64 %312, 65536, !dbg !3444
  br i1 %cmp523, label %if.then525, label %if.end527, !dbg !3441

if.then525:                                       ; preds = %if.end519
  %313 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3444
  %allocated526 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %313, i32 0, i32 1, !dbg !3444
  store i64 65536, i64* %allocated526, align 8, !dbg !3444
  br label %if.end527, !dbg !3444

if.end527:                                        ; preds = %if.then525, %if.end519
  %314 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3441
  %buffer528 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %314, i32 0, i32 0, !dbg !3441
  %315 = load i8*, i8** %buffer528, align 8, !dbg !3441
  %316 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3441
  %allocated529 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %316, i32 0, i32 1, !dbg !3441
  %317 = load i64, i64* %allocated529, align 8, !dbg !3441
  %call530 = call i8* @realloc(i8* %315, i64 %317), !dbg !3441
  %318 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3441
  %buffer531 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %318, i32 0, i32 0, !dbg !3441
  store i8* %call530, i8** %buffer531, align 8, !dbg !3441
  %319 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3446
  %buffer532 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %319, i32 0, i32 0, !dbg !3446
  %320 = load i8*, i8** %buffer532, align 8, !dbg !3446
  %cmp533 = icmp eq i8* %320, null, !dbg !3446
  br i1 %cmp533, label %if.then535, label %if.end536, !dbg !3441

if.then535:                                       ; preds = %if.end527
  store i32 12, i32* %retval, align 4, !dbg !3446
  br label %return, !dbg !3446

if.end536:                                        ; preds = %if.end527
  %321 = load i8*, i8** %old_buffer513, align 8, !dbg !3448
  %322 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3448
  %buffer537 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %322, i32 0, i32 0, !dbg !3448
  %323 = load i8*, i8** %buffer537, align 8, !dbg !3448
  %cmp538 = icmp ne i8* %321, %323, !dbg !3448
  br i1 %cmp538, label %if.then540, label %if.end566, !dbg !3441

if.then540:                                       ; preds = %if.end536
  call void @llvm.dbg.declare(metadata i32* %incr541, metadata !3450, metadata !DIExpression()), !dbg !3452
  %324 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3452
  %buffer542 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %324, i32 0, i32 0, !dbg !3452
  %325 = load i8*, i8** %buffer542, align 8, !dbg !3452
  %326 = load i8*, i8** %old_buffer513, align 8, !dbg !3452
  %sub.ptr.lhs.cast543 = ptrtoint i8* %325 to i64, !dbg !3452
  %sub.ptr.rhs.cast544 = ptrtoint i8* %326 to i64, !dbg !3452
  %sub.ptr.sub545 = sub i64 %sub.ptr.lhs.cast543, %sub.ptr.rhs.cast544, !dbg !3452
  %conv546 = trunc i64 %sub.ptr.sub545 to i32, !dbg !3452
  store i32 %conv546, i32* %incr541, align 4, !dbg !3452
  %327 = load i32, i32* %incr541, align 4, !dbg !3452
  %328 = load i8*, i8** %b, align 8, !dbg !3452
  %idx.ext547 = sext i32 %327 to i64, !dbg !3452
  %add.ptr548 = getelementptr inbounds i8, i8* %328, i64 %idx.ext547, !dbg !3452
  store i8* %add.ptr548, i8** %b, align 8, !dbg !3452
  %329 = load i32, i32* %incr541, align 4, !dbg !3452
  %330 = load i8*, i8** %begalt, align 8, !dbg !3452
  %idx.ext549 = sext i32 %329 to i64, !dbg !3452
  %add.ptr550 = getelementptr inbounds i8, i8* %330, i64 %idx.ext549, !dbg !3452
  store i8* %add.ptr550, i8** %begalt, align 8, !dbg !3452
  %331 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3453
  %tobool551 = icmp ne i8* %331, null, !dbg !3453
  br i1 %tobool551, label %if.then552, label %if.end555, !dbg !3452

if.then552:                                       ; preds = %if.then540
  %332 = load i32, i32* %incr541, align 4, !dbg !3453
  %333 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3453
  %idx.ext553 = sext i32 %332 to i64, !dbg !3453
  %add.ptr554 = getelementptr inbounds i8, i8* %333, i64 %idx.ext553, !dbg !3453
  store i8* %add.ptr554, i8** %fixup_alt_jump, align 8, !dbg !3453
  br label %if.end555, !dbg !3453

if.end555:                                        ; preds = %if.then552, %if.then540
  %334 = load i8*, i8** %laststart, align 8, !dbg !3455
  %tobool556 = icmp ne i8* %334, null, !dbg !3455
  br i1 %tobool556, label %if.then557, label %if.end560, !dbg !3452

if.then557:                                       ; preds = %if.end555
  %335 = load i32, i32* %incr541, align 4, !dbg !3455
  %336 = load i8*, i8** %laststart, align 8, !dbg !3455
  %idx.ext558 = sext i32 %335 to i64, !dbg !3455
  %add.ptr559 = getelementptr inbounds i8, i8* %336, i64 %idx.ext558, !dbg !3455
  store i8* %add.ptr559, i8** %laststart, align 8, !dbg !3455
  br label %if.end560, !dbg !3455

if.end560:                                        ; preds = %if.then557, %if.end555
  %337 = load i8*, i8** %pending_exact, align 8, !dbg !3457
  %tobool561 = icmp ne i8* %337, null, !dbg !3457
  br i1 %tobool561, label %if.then562, label %if.end565, !dbg !3452

if.then562:                                       ; preds = %if.end560
  %338 = load i32, i32* %incr541, align 4, !dbg !3457
  %339 = load i8*, i8** %pending_exact, align 8, !dbg !3457
  %idx.ext563 = sext i32 %338 to i64, !dbg !3457
  %add.ptr564 = getelementptr inbounds i8, i8* %339, i64 %idx.ext563, !dbg !3457
  store i8* %add.ptr564, i8** %pending_exact, align 8, !dbg !3457
  br label %if.end565, !dbg !3457

if.end565:                                        ; preds = %if.then562, %if.end560
  br label %if.end566, !dbg !3452

if.end566:                                        ; preds = %if.end565, %if.end536
  br label %do.end567, !dbg !3441

do.end567:                                        ; preds = %if.end566
  br label %while.cond502, !dbg !3437, !llvm.loop !3459

while.end568:                                     ; preds = %while.cond502
  %340 = load i8*, i8** %laststart, align 8, !dbg !3460
  %341 = load i8*, i8** %laststart, align 8, !dbg !3460
  %add.ptr569 = getelementptr inbounds i8, i8* %341, i64 2, !dbg !3460
  %add.ptr570 = getelementptr inbounds i8, i8* %add.ptr569, i64 4, !dbg !3460
  %342 = load i8*, i8** %laststart, align 8, !dbg !3460
  %sub.ptr.lhs.cast571 = ptrtoint i8* %add.ptr570 to i64, !dbg !3460
  %sub.ptr.rhs.cast572 = ptrtoint i8* %342 to i64, !dbg !3460
  %sub.ptr.sub573 = sub i64 %sub.ptr.lhs.cast571, %sub.ptr.rhs.cast572, !dbg !3460
  %sub574 = sub nsw i64 %sub.ptr.sub573, 3, !dbg !3460
  %conv575 = trunc i64 %sub574 to i32, !dbg !3460
  %343 = load i8*, i8** %b, align 8, !dbg !3460
  call void @byte_insert_op1(i32 19, i8* %340, i32 %conv575, i8* %343), !dbg !3460
  %344 = load i8*, i8** %b, align 8, !dbg !3461
  %add.ptr576 = getelementptr inbounds i8, i8* %344, i64 3, !dbg !3461
  store i8* %add.ptr576, i8** %b, align 8, !dbg !3461
  br label %if.end577, !dbg !3462

if.end577:                                        ; preds = %while.end568, %while.end488
  br label %sw.epilog3609, !dbg !3463

sw.bb578:                                         ; preds = %do.end
  %345 = load i8*, i8** %b, align 8, !dbg !3464
  store i8* %345, i8** %laststart, align 8, !dbg !3465
  br label %do.body579, !dbg !3466

do.body579:                                       ; preds = %sw.bb578
  br label %while.cond580, !dbg !3467

while.cond580:                                    ; preds = %do.end645, %do.body579
  %346 = load i8*, i8** %b, align 8, !dbg !3467
  %347 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3467
  %buffer581 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %347, i32 0, i32 0, !dbg !3467
  %348 = load i8*, i8** %buffer581, align 8, !dbg !3467
  %sub.ptr.lhs.cast582 = ptrtoint i8* %346 to i64, !dbg !3467
  %sub.ptr.rhs.cast583 = ptrtoint i8* %348 to i64, !dbg !3467
  %sub.ptr.sub584 = sub i64 %sub.ptr.lhs.cast582, %sub.ptr.rhs.cast583, !dbg !3467
  %add585 = add nsw i64 %sub.ptr.sub584, 1, !dbg !3467
  %349 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3467
  %allocated586 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %349, i32 0, i32 1, !dbg !3467
  %350 = load i64, i64* %allocated586, align 8, !dbg !3467
  %cmp587 = icmp ugt i64 %add585, %350, !dbg !3467
  br i1 %cmp587, label %while.body589, label %while.end646, !dbg !3467

while.body589:                                    ; preds = %while.cond580
  br label %do.body590, !dbg !3467

do.body590:                                       ; preds = %while.body589
  call void @llvm.dbg.declare(metadata i8** %old_buffer591, metadata !3469, metadata !DIExpression()), !dbg !3471
  %351 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3471
  %buffer592 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %351, i32 0, i32 0, !dbg !3471
  %352 = load i8*, i8** %buffer592, align 8, !dbg !3471
  store i8* %352, i8** %old_buffer591, align 8, !dbg !3471
  %353 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3472
  %allocated593 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %353, i32 0, i32 1, !dbg !3472
  %354 = load i64, i64* %allocated593, align 8, !dbg !3472
  %cmp594 = icmp eq i64 %354, 65536, !dbg !3472
  br i1 %cmp594, label %if.then596, label %if.end597, !dbg !3471

if.then596:                                       ; preds = %do.body590
  store i32 15, i32* %retval, align 4, !dbg !3472
  br label %return, !dbg !3472

if.end597:                                        ; preds = %do.body590
  %355 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3471
  %allocated598 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %355, i32 0, i32 1, !dbg !3471
  %356 = load i64, i64* %allocated598, align 8, !dbg !3471
  %shl599 = shl i64 %356, 1, !dbg !3471
  store i64 %shl599, i64* %allocated598, align 8, !dbg !3471
  %357 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3474
  %allocated600 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %357, i32 0, i32 1, !dbg !3474
  %358 = load i64, i64* %allocated600, align 8, !dbg !3474
  %cmp601 = icmp ugt i64 %358, 65536, !dbg !3474
  br i1 %cmp601, label %if.then603, label %if.end605, !dbg !3471

if.then603:                                       ; preds = %if.end597
  %359 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3474
  %allocated604 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %359, i32 0, i32 1, !dbg !3474
  store i64 65536, i64* %allocated604, align 8, !dbg !3474
  br label %if.end605, !dbg !3474

if.end605:                                        ; preds = %if.then603, %if.end597
  %360 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3471
  %buffer606 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %360, i32 0, i32 0, !dbg !3471
  %361 = load i8*, i8** %buffer606, align 8, !dbg !3471
  %362 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3471
  %allocated607 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %362, i32 0, i32 1, !dbg !3471
  %363 = load i64, i64* %allocated607, align 8, !dbg !3471
  %call608 = call i8* @realloc(i8* %361, i64 %363), !dbg !3471
  %364 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3471
  %buffer609 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %364, i32 0, i32 0, !dbg !3471
  store i8* %call608, i8** %buffer609, align 8, !dbg !3471
  %365 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3476
  %buffer610 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %365, i32 0, i32 0, !dbg !3476
  %366 = load i8*, i8** %buffer610, align 8, !dbg !3476
  %cmp611 = icmp eq i8* %366, null, !dbg !3476
  br i1 %cmp611, label %if.then613, label %if.end614, !dbg !3471

if.then613:                                       ; preds = %if.end605
  store i32 12, i32* %retval, align 4, !dbg !3476
  br label %return, !dbg !3476

if.end614:                                        ; preds = %if.end605
  %367 = load i8*, i8** %old_buffer591, align 8, !dbg !3478
  %368 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3478
  %buffer615 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %368, i32 0, i32 0, !dbg !3478
  %369 = load i8*, i8** %buffer615, align 8, !dbg !3478
  %cmp616 = icmp ne i8* %367, %369, !dbg !3478
  br i1 %cmp616, label %if.then618, label %if.end644, !dbg !3471

if.then618:                                       ; preds = %if.end614
  call void @llvm.dbg.declare(metadata i32* %incr619, metadata !3480, metadata !DIExpression()), !dbg !3482
  %370 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3482
  %buffer620 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %370, i32 0, i32 0, !dbg !3482
  %371 = load i8*, i8** %buffer620, align 8, !dbg !3482
  %372 = load i8*, i8** %old_buffer591, align 8, !dbg !3482
  %sub.ptr.lhs.cast621 = ptrtoint i8* %371 to i64, !dbg !3482
  %sub.ptr.rhs.cast622 = ptrtoint i8* %372 to i64, !dbg !3482
  %sub.ptr.sub623 = sub i64 %sub.ptr.lhs.cast621, %sub.ptr.rhs.cast622, !dbg !3482
  %conv624 = trunc i64 %sub.ptr.sub623 to i32, !dbg !3482
  store i32 %conv624, i32* %incr619, align 4, !dbg !3482
  %373 = load i32, i32* %incr619, align 4, !dbg !3482
  %374 = load i8*, i8** %b, align 8, !dbg !3482
  %idx.ext625 = sext i32 %373 to i64, !dbg !3482
  %add.ptr626 = getelementptr inbounds i8, i8* %374, i64 %idx.ext625, !dbg !3482
  store i8* %add.ptr626, i8** %b, align 8, !dbg !3482
  %375 = load i32, i32* %incr619, align 4, !dbg !3482
  %376 = load i8*, i8** %begalt, align 8, !dbg !3482
  %idx.ext627 = sext i32 %375 to i64, !dbg !3482
  %add.ptr628 = getelementptr inbounds i8, i8* %376, i64 %idx.ext627, !dbg !3482
  store i8* %add.ptr628, i8** %begalt, align 8, !dbg !3482
  %377 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3483
  %tobool629 = icmp ne i8* %377, null, !dbg !3483
  br i1 %tobool629, label %if.then630, label %if.end633, !dbg !3482

if.then630:                                       ; preds = %if.then618
  %378 = load i32, i32* %incr619, align 4, !dbg !3483
  %379 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3483
  %idx.ext631 = sext i32 %378 to i64, !dbg !3483
  %add.ptr632 = getelementptr inbounds i8, i8* %379, i64 %idx.ext631, !dbg !3483
  store i8* %add.ptr632, i8** %fixup_alt_jump, align 8, !dbg !3483
  br label %if.end633, !dbg !3483

if.end633:                                        ; preds = %if.then630, %if.then618
  %380 = load i8*, i8** %laststart, align 8, !dbg !3485
  %tobool634 = icmp ne i8* %380, null, !dbg !3485
  br i1 %tobool634, label %if.then635, label %if.end638, !dbg !3482

if.then635:                                       ; preds = %if.end633
  %381 = load i32, i32* %incr619, align 4, !dbg !3485
  %382 = load i8*, i8** %laststart, align 8, !dbg !3485
  %idx.ext636 = sext i32 %381 to i64, !dbg !3485
  %add.ptr637 = getelementptr inbounds i8, i8* %382, i64 %idx.ext636, !dbg !3485
  store i8* %add.ptr637, i8** %laststart, align 8, !dbg !3485
  br label %if.end638, !dbg !3485

if.end638:                                        ; preds = %if.then635, %if.end633
  %383 = load i8*, i8** %pending_exact, align 8, !dbg !3487
  %tobool639 = icmp ne i8* %383, null, !dbg !3487
  br i1 %tobool639, label %if.then640, label %if.end643, !dbg !3482

if.then640:                                       ; preds = %if.end638
  %384 = load i32, i32* %incr619, align 4, !dbg !3487
  %385 = load i8*, i8** %pending_exact, align 8, !dbg !3487
  %idx.ext641 = sext i32 %384 to i64, !dbg !3487
  %add.ptr642 = getelementptr inbounds i8, i8* %385, i64 %idx.ext641, !dbg !3487
  store i8* %add.ptr642, i8** %pending_exact, align 8, !dbg !3487
  br label %if.end643, !dbg !3487

if.end643:                                        ; preds = %if.then640, %if.end638
  br label %if.end644, !dbg !3482

if.end644:                                        ; preds = %if.end643, %if.end614
  br label %do.end645, !dbg !3471

do.end645:                                        ; preds = %if.end644
  br label %while.cond580, !dbg !3467, !llvm.loop !3489

while.end646:                                     ; preds = %while.cond580
  %386 = load i8*, i8** %b, align 8, !dbg !3467
  %incdec.ptr647 = getelementptr inbounds i8, i8* %386, i32 1, !dbg !3467
  store i8* %incdec.ptr647, i8** %b, align 8, !dbg !3467
  store i8 3, i8* %386, align 1, !dbg !3467
  br label %do.end648, !dbg !3467

do.end648:                                        ; preds = %while.end646
  br label %sw.epilog3609, !dbg !3490

sw.bb649:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8* %had_char_class, metadata !3491, metadata !DIExpression()), !dbg !3493
  store i8 0, i8* %had_char_class, align 1, !dbg !3493
  call void @llvm.dbg.declare(metadata i32* %range_start, metadata !3494, metadata !DIExpression()), !dbg !3495
  store i32 -1, i32* %range_start, align 4, !dbg !3495
  %387 = load i8*, i8** %p, align 8, !dbg !3496
  %388 = load i8*, i8** %pend, align 8, !dbg !3498
  %cmp650 = icmp eq i8* %387, %388, !dbg !3499
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !3500

if.then652:                                       ; preds = %sw.bb649
  %stack653 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3501
  %389 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack653, align 8, !dbg !3501
  %390 = bitcast %struct.compile_stack_elt_t* %389 to i8*, !dbg !3501
  call void @free(i8* %390), !dbg !3501
  store i32 7, i32* %retval, align 4, !dbg !3501
  br label %return, !dbg !3501

if.end654:                                        ; preds = %sw.bb649
  br label %while.cond655, !dbg !3502

while.cond655:                                    ; preds = %do.end720, %if.end654
  %391 = load i8*, i8** %b, align 8, !dbg !3502
  %392 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3502
  %buffer656 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %392, i32 0, i32 0, !dbg !3502
  %393 = load i8*, i8** %buffer656, align 8, !dbg !3502
  %sub.ptr.lhs.cast657 = ptrtoint i8* %391 to i64, !dbg !3502
  %sub.ptr.rhs.cast658 = ptrtoint i8* %393 to i64, !dbg !3502
  %sub.ptr.sub659 = sub i64 %sub.ptr.lhs.cast657, %sub.ptr.rhs.cast658, !dbg !3502
  %add660 = add nsw i64 %sub.ptr.sub659, 34, !dbg !3502
  %394 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3502
  %allocated661 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %394, i32 0, i32 1, !dbg !3502
  %395 = load i64, i64* %allocated661, align 8, !dbg !3502
  %cmp662 = icmp ugt i64 %add660, %395, !dbg !3502
  br i1 %cmp662, label %while.body664, label %while.end721, !dbg !3502

while.body664:                                    ; preds = %while.cond655
  br label %do.body665, !dbg !3502

do.body665:                                       ; preds = %while.body664
  call void @llvm.dbg.declare(metadata i8** %old_buffer666, metadata !3503, metadata !DIExpression()), !dbg !3505
  %396 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3505
  %buffer667 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %396, i32 0, i32 0, !dbg !3505
  %397 = load i8*, i8** %buffer667, align 8, !dbg !3505
  store i8* %397, i8** %old_buffer666, align 8, !dbg !3505
  %398 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3506
  %allocated668 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %398, i32 0, i32 1, !dbg !3506
  %399 = load i64, i64* %allocated668, align 8, !dbg !3506
  %cmp669 = icmp eq i64 %399, 65536, !dbg !3506
  br i1 %cmp669, label %if.then671, label %if.end672, !dbg !3505

if.then671:                                       ; preds = %do.body665
  store i32 15, i32* %retval, align 4, !dbg !3506
  br label %return, !dbg !3506

if.end672:                                        ; preds = %do.body665
  %400 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3505
  %allocated673 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %400, i32 0, i32 1, !dbg !3505
  %401 = load i64, i64* %allocated673, align 8, !dbg !3505
  %shl674 = shl i64 %401, 1, !dbg !3505
  store i64 %shl674, i64* %allocated673, align 8, !dbg !3505
  %402 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3508
  %allocated675 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %402, i32 0, i32 1, !dbg !3508
  %403 = load i64, i64* %allocated675, align 8, !dbg !3508
  %cmp676 = icmp ugt i64 %403, 65536, !dbg !3508
  br i1 %cmp676, label %if.then678, label %if.end680, !dbg !3505

if.then678:                                       ; preds = %if.end672
  %404 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3508
  %allocated679 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %404, i32 0, i32 1, !dbg !3508
  store i64 65536, i64* %allocated679, align 8, !dbg !3508
  br label %if.end680, !dbg !3508

if.end680:                                        ; preds = %if.then678, %if.end672
  %405 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3505
  %buffer681 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %405, i32 0, i32 0, !dbg !3505
  %406 = load i8*, i8** %buffer681, align 8, !dbg !3505
  %407 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3505
  %allocated682 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %407, i32 0, i32 1, !dbg !3505
  %408 = load i64, i64* %allocated682, align 8, !dbg !3505
  %call683 = call i8* @realloc(i8* %406, i64 %408), !dbg !3505
  %409 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3505
  %buffer684 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %409, i32 0, i32 0, !dbg !3505
  store i8* %call683, i8** %buffer684, align 8, !dbg !3505
  %410 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3510
  %buffer685 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %410, i32 0, i32 0, !dbg !3510
  %411 = load i8*, i8** %buffer685, align 8, !dbg !3510
  %cmp686 = icmp eq i8* %411, null, !dbg !3510
  br i1 %cmp686, label %if.then688, label %if.end689, !dbg !3505

if.then688:                                       ; preds = %if.end680
  store i32 12, i32* %retval, align 4, !dbg !3510
  br label %return, !dbg !3510

if.end689:                                        ; preds = %if.end680
  %412 = load i8*, i8** %old_buffer666, align 8, !dbg !3512
  %413 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3512
  %buffer690 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %413, i32 0, i32 0, !dbg !3512
  %414 = load i8*, i8** %buffer690, align 8, !dbg !3512
  %cmp691 = icmp ne i8* %412, %414, !dbg !3512
  br i1 %cmp691, label %if.then693, label %if.end719, !dbg !3505

if.then693:                                       ; preds = %if.end689
  call void @llvm.dbg.declare(metadata i32* %incr694, metadata !3514, metadata !DIExpression()), !dbg !3516
  %415 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3516
  %buffer695 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %415, i32 0, i32 0, !dbg !3516
  %416 = load i8*, i8** %buffer695, align 8, !dbg !3516
  %417 = load i8*, i8** %old_buffer666, align 8, !dbg !3516
  %sub.ptr.lhs.cast696 = ptrtoint i8* %416 to i64, !dbg !3516
  %sub.ptr.rhs.cast697 = ptrtoint i8* %417 to i64, !dbg !3516
  %sub.ptr.sub698 = sub i64 %sub.ptr.lhs.cast696, %sub.ptr.rhs.cast697, !dbg !3516
  %conv699 = trunc i64 %sub.ptr.sub698 to i32, !dbg !3516
  store i32 %conv699, i32* %incr694, align 4, !dbg !3516
  %418 = load i32, i32* %incr694, align 4, !dbg !3516
  %419 = load i8*, i8** %b, align 8, !dbg !3516
  %idx.ext700 = sext i32 %418 to i64, !dbg !3516
  %add.ptr701 = getelementptr inbounds i8, i8* %419, i64 %idx.ext700, !dbg !3516
  store i8* %add.ptr701, i8** %b, align 8, !dbg !3516
  %420 = load i32, i32* %incr694, align 4, !dbg !3516
  %421 = load i8*, i8** %begalt, align 8, !dbg !3516
  %idx.ext702 = sext i32 %420 to i64, !dbg !3516
  %add.ptr703 = getelementptr inbounds i8, i8* %421, i64 %idx.ext702, !dbg !3516
  store i8* %add.ptr703, i8** %begalt, align 8, !dbg !3516
  %422 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3517
  %tobool704 = icmp ne i8* %422, null, !dbg !3517
  br i1 %tobool704, label %if.then705, label %if.end708, !dbg !3516

if.then705:                                       ; preds = %if.then693
  %423 = load i32, i32* %incr694, align 4, !dbg !3517
  %424 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3517
  %idx.ext706 = sext i32 %423 to i64, !dbg !3517
  %add.ptr707 = getelementptr inbounds i8, i8* %424, i64 %idx.ext706, !dbg !3517
  store i8* %add.ptr707, i8** %fixup_alt_jump, align 8, !dbg !3517
  br label %if.end708, !dbg !3517

if.end708:                                        ; preds = %if.then705, %if.then693
  %425 = load i8*, i8** %laststart, align 8, !dbg !3519
  %tobool709 = icmp ne i8* %425, null, !dbg !3519
  br i1 %tobool709, label %if.then710, label %if.end713, !dbg !3516

if.then710:                                       ; preds = %if.end708
  %426 = load i32, i32* %incr694, align 4, !dbg !3519
  %427 = load i8*, i8** %laststart, align 8, !dbg !3519
  %idx.ext711 = sext i32 %426 to i64, !dbg !3519
  %add.ptr712 = getelementptr inbounds i8, i8* %427, i64 %idx.ext711, !dbg !3519
  store i8* %add.ptr712, i8** %laststart, align 8, !dbg !3519
  br label %if.end713, !dbg !3519

if.end713:                                        ; preds = %if.then710, %if.end708
  %428 = load i8*, i8** %pending_exact, align 8, !dbg !3521
  %tobool714 = icmp ne i8* %428, null, !dbg !3521
  br i1 %tobool714, label %if.then715, label %if.end718, !dbg !3516

if.then715:                                       ; preds = %if.end713
  %429 = load i32, i32* %incr694, align 4, !dbg !3521
  %430 = load i8*, i8** %pending_exact, align 8, !dbg !3521
  %idx.ext716 = sext i32 %429 to i64, !dbg !3521
  %add.ptr717 = getelementptr inbounds i8, i8* %430, i64 %idx.ext716, !dbg !3521
  store i8* %add.ptr717, i8** %pending_exact, align 8, !dbg !3521
  br label %if.end718, !dbg !3521

if.end718:                                        ; preds = %if.then715, %if.end713
  br label %if.end719, !dbg !3516

if.end719:                                        ; preds = %if.end718, %if.end689
  br label %do.end720, !dbg !3505

do.end720:                                        ; preds = %if.end719
  br label %while.cond655, !dbg !3502, !llvm.loop !3523

while.end721:                                     ; preds = %while.cond655
  %431 = load i8*, i8** %b, align 8, !dbg !3524
  store i8* %431, i8** %laststart, align 8, !dbg !3525
  br label %do.body722, !dbg !3526

do.body722:                                       ; preds = %while.end721
  br label %while.cond723, !dbg !3527

while.cond723:                                    ; preds = %do.end788, %do.body722
  %432 = load i8*, i8** %b, align 8, !dbg !3527
  %433 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3527
  %buffer724 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %433, i32 0, i32 0, !dbg !3527
  %434 = load i8*, i8** %buffer724, align 8, !dbg !3527
  %sub.ptr.lhs.cast725 = ptrtoint i8* %432 to i64, !dbg !3527
  %sub.ptr.rhs.cast726 = ptrtoint i8* %434 to i64, !dbg !3527
  %sub.ptr.sub727 = sub i64 %sub.ptr.lhs.cast725, %sub.ptr.rhs.cast726, !dbg !3527
  %add728 = add nsw i64 %sub.ptr.sub727, 1, !dbg !3527
  %435 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3527
  %allocated729 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %435, i32 0, i32 1, !dbg !3527
  %436 = load i64, i64* %allocated729, align 8, !dbg !3527
  %cmp730 = icmp ugt i64 %add728, %436, !dbg !3527
  br i1 %cmp730, label %while.body732, label %while.end789, !dbg !3527

while.body732:                                    ; preds = %while.cond723
  br label %do.body733, !dbg !3527

do.body733:                                       ; preds = %while.body732
  call void @llvm.dbg.declare(metadata i8** %old_buffer734, metadata !3529, metadata !DIExpression()), !dbg !3531
  %437 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3531
  %buffer735 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %437, i32 0, i32 0, !dbg !3531
  %438 = load i8*, i8** %buffer735, align 8, !dbg !3531
  store i8* %438, i8** %old_buffer734, align 8, !dbg !3531
  %439 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3532
  %allocated736 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %439, i32 0, i32 1, !dbg !3532
  %440 = load i64, i64* %allocated736, align 8, !dbg !3532
  %cmp737 = icmp eq i64 %440, 65536, !dbg !3532
  br i1 %cmp737, label %if.then739, label %if.end740, !dbg !3531

if.then739:                                       ; preds = %do.body733
  store i32 15, i32* %retval, align 4, !dbg !3532
  br label %return, !dbg !3532

if.end740:                                        ; preds = %do.body733
  %441 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3531
  %allocated741 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %441, i32 0, i32 1, !dbg !3531
  %442 = load i64, i64* %allocated741, align 8, !dbg !3531
  %shl742 = shl i64 %442, 1, !dbg !3531
  store i64 %shl742, i64* %allocated741, align 8, !dbg !3531
  %443 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3534
  %allocated743 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %443, i32 0, i32 1, !dbg !3534
  %444 = load i64, i64* %allocated743, align 8, !dbg !3534
  %cmp744 = icmp ugt i64 %444, 65536, !dbg !3534
  br i1 %cmp744, label %if.then746, label %if.end748, !dbg !3531

if.then746:                                       ; preds = %if.end740
  %445 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3534
  %allocated747 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %445, i32 0, i32 1, !dbg !3534
  store i64 65536, i64* %allocated747, align 8, !dbg !3534
  br label %if.end748, !dbg !3534

if.end748:                                        ; preds = %if.then746, %if.end740
  %446 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3531
  %buffer749 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %446, i32 0, i32 0, !dbg !3531
  %447 = load i8*, i8** %buffer749, align 8, !dbg !3531
  %448 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3531
  %allocated750 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %448, i32 0, i32 1, !dbg !3531
  %449 = load i64, i64* %allocated750, align 8, !dbg !3531
  %call751 = call i8* @realloc(i8* %447, i64 %449), !dbg !3531
  %450 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3531
  %buffer752 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %450, i32 0, i32 0, !dbg !3531
  store i8* %call751, i8** %buffer752, align 8, !dbg !3531
  %451 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3536
  %buffer753 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %451, i32 0, i32 0, !dbg !3536
  %452 = load i8*, i8** %buffer753, align 8, !dbg !3536
  %cmp754 = icmp eq i8* %452, null, !dbg !3536
  br i1 %cmp754, label %if.then756, label %if.end757, !dbg !3531

if.then756:                                       ; preds = %if.end748
  store i32 12, i32* %retval, align 4, !dbg !3536
  br label %return, !dbg !3536

if.end757:                                        ; preds = %if.end748
  %453 = load i8*, i8** %old_buffer734, align 8, !dbg !3538
  %454 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3538
  %buffer758 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %454, i32 0, i32 0, !dbg !3538
  %455 = load i8*, i8** %buffer758, align 8, !dbg !3538
  %cmp759 = icmp ne i8* %453, %455, !dbg !3538
  br i1 %cmp759, label %if.then761, label %if.end787, !dbg !3531

if.then761:                                       ; preds = %if.end757
  call void @llvm.dbg.declare(metadata i32* %incr762, metadata !3540, metadata !DIExpression()), !dbg !3542
  %456 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3542
  %buffer763 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %456, i32 0, i32 0, !dbg !3542
  %457 = load i8*, i8** %buffer763, align 8, !dbg !3542
  %458 = load i8*, i8** %old_buffer734, align 8, !dbg !3542
  %sub.ptr.lhs.cast764 = ptrtoint i8* %457 to i64, !dbg !3542
  %sub.ptr.rhs.cast765 = ptrtoint i8* %458 to i64, !dbg !3542
  %sub.ptr.sub766 = sub i64 %sub.ptr.lhs.cast764, %sub.ptr.rhs.cast765, !dbg !3542
  %conv767 = trunc i64 %sub.ptr.sub766 to i32, !dbg !3542
  store i32 %conv767, i32* %incr762, align 4, !dbg !3542
  %459 = load i32, i32* %incr762, align 4, !dbg !3542
  %460 = load i8*, i8** %b, align 8, !dbg !3542
  %idx.ext768 = sext i32 %459 to i64, !dbg !3542
  %add.ptr769 = getelementptr inbounds i8, i8* %460, i64 %idx.ext768, !dbg !3542
  store i8* %add.ptr769, i8** %b, align 8, !dbg !3542
  %461 = load i32, i32* %incr762, align 4, !dbg !3542
  %462 = load i8*, i8** %begalt, align 8, !dbg !3542
  %idx.ext770 = sext i32 %461 to i64, !dbg !3542
  %add.ptr771 = getelementptr inbounds i8, i8* %462, i64 %idx.ext770, !dbg !3542
  store i8* %add.ptr771, i8** %begalt, align 8, !dbg !3542
  %463 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3543
  %tobool772 = icmp ne i8* %463, null, !dbg !3543
  br i1 %tobool772, label %if.then773, label %if.end776, !dbg !3542

if.then773:                                       ; preds = %if.then761
  %464 = load i32, i32* %incr762, align 4, !dbg !3543
  %465 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3543
  %idx.ext774 = sext i32 %464 to i64, !dbg !3543
  %add.ptr775 = getelementptr inbounds i8, i8* %465, i64 %idx.ext774, !dbg !3543
  store i8* %add.ptr775, i8** %fixup_alt_jump, align 8, !dbg !3543
  br label %if.end776, !dbg !3543

if.end776:                                        ; preds = %if.then773, %if.then761
  %466 = load i8*, i8** %laststart, align 8, !dbg !3545
  %tobool777 = icmp ne i8* %466, null, !dbg !3545
  br i1 %tobool777, label %if.then778, label %if.end781, !dbg !3542

if.then778:                                       ; preds = %if.end776
  %467 = load i32, i32* %incr762, align 4, !dbg !3545
  %468 = load i8*, i8** %laststart, align 8, !dbg !3545
  %idx.ext779 = sext i32 %467 to i64, !dbg !3545
  %add.ptr780 = getelementptr inbounds i8, i8* %468, i64 %idx.ext779, !dbg !3545
  store i8* %add.ptr780, i8** %laststart, align 8, !dbg !3545
  br label %if.end781, !dbg !3545

if.end781:                                        ; preds = %if.then778, %if.end776
  %469 = load i8*, i8** %pending_exact, align 8, !dbg !3547
  %tobool782 = icmp ne i8* %469, null, !dbg !3547
  br i1 %tobool782, label %if.then783, label %if.end786, !dbg !3542

if.then783:                                       ; preds = %if.end781
  %470 = load i32, i32* %incr762, align 4, !dbg !3547
  %471 = load i8*, i8** %pending_exact, align 8, !dbg !3547
  %idx.ext784 = sext i32 %470 to i64, !dbg !3547
  %add.ptr785 = getelementptr inbounds i8, i8* %471, i64 %idx.ext784, !dbg !3547
  store i8* %add.ptr785, i8** %pending_exact, align 8, !dbg !3547
  br label %if.end786, !dbg !3547

if.end786:                                        ; preds = %if.then783, %if.end781
  br label %if.end787, !dbg !3542

if.end787:                                        ; preds = %if.end786, %if.end757
  br label %do.end788, !dbg !3531

do.end788:                                        ; preds = %if.end787
  br label %while.cond723, !dbg !3527, !llvm.loop !3549

while.end789:                                     ; preds = %while.cond723
  %472 = load i8*, i8** %p, align 8, !dbg !3527
  %473 = load i8, i8* %472, align 1, !dbg !3527
  %conv790 = sext i8 %473 to i32, !dbg !3527
  %cmp791 = icmp eq i32 %conv790, 94, !dbg !3527
  %474 = zext i1 %cmp791 to i64, !dbg !3527
  %cond793 = select i1 %cmp791, i32 5, i32 4, !dbg !3527
  %conv794 = trunc i32 %cond793 to i8, !dbg !3527
  %475 = load i8*, i8** %b, align 8, !dbg !3527
  %incdec.ptr795 = getelementptr inbounds i8, i8* %475, i32 1, !dbg !3527
  store i8* %incdec.ptr795, i8** %b, align 8, !dbg !3527
  store i8 %conv794, i8* %475, align 1, !dbg !3527
  br label %do.end796, !dbg !3527

do.end796:                                        ; preds = %while.end789
  %476 = load i8*, i8** %p, align 8, !dbg !3550
  %477 = load i8, i8* %476, align 1, !dbg !3552
  %conv797 = sext i8 %477 to i32, !dbg !3552
  %cmp798 = icmp eq i32 %conv797, 94, !dbg !3553
  br i1 %cmp798, label %if.then800, label %if.end802, !dbg !3554

if.then800:                                       ; preds = %do.end796
  %478 = load i8*, i8** %p, align 8, !dbg !3555
  %incdec.ptr801 = getelementptr inbounds i8, i8* %478, i32 1, !dbg !3555
  store i8* %incdec.ptr801, i8** %p, align 8, !dbg !3555
  br label %if.end802, !dbg !3556

if.end802:                                        ; preds = %if.then800, %do.end796
  %479 = load i8*, i8** %p, align 8, !dbg !3557
  store i8* %479, i8** %p1, align 8, !dbg !3558
  br label %do.body803, !dbg !3559

do.body803:                                       ; preds = %if.end802
  br label %while.cond804, !dbg !3560

while.cond804:                                    ; preds = %do.end869, %do.body803
  %480 = load i8*, i8** %b, align 8, !dbg !3560
  %481 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3560
  %buffer805 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %481, i32 0, i32 0, !dbg !3560
  %482 = load i8*, i8** %buffer805, align 8, !dbg !3560
  %sub.ptr.lhs.cast806 = ptrtoint i8* %480 to i64, !dbg !3560
  %sub.ptr.rhs.cast807 = ptrtoint i8* %482 to i64, !dbg !3560
  %sub.ptr.sub808 = sub i64 %sub.ptr.lhs.cast806, %sub.ptr.rhs.cast807, !dbg !3560
  %add809 = add nsw i64 %sub.ptr.sub808, 1, !dbg !3560
  %483 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3560
  %allocated810 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %483, i32 0, i32 1, !dbg !3560
  %484 = load i64, i64* %allocated810, align 8, !dbg !3560
  %cmp811 = icmp ugt i64 %add809, %484, !dbg !3560
  br i1 %cmp811, label %while.body813, label %while.end870, !dbg !3560

while.body813:                                    ; preds = %while.cond804
  br label %do.body814, !dbg !3560

do.body814:                                       ; preds = %while.body813
  call void @llvm.dbg.declare(metadata i8** %old_buffer815, metadata !3562, metadata !DIExpression()), !dbg !3564
  %485 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3564
  %buffer816 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %485, i32 0, i32 0, !dbg !3564
  %486 = load i8*, i8** %buffer816, align 8, !dbg !3564
  store i8* %486, i8** %old_buffer815, align 8, !dbg !3564
  %487 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3565
  %allocated817 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %487, i32 0, i32 1, !dbg !3565
  %488 = load i64, i64* %allocated817, align 8, !dbg !3565
  %cmp818 = icmp eq i64 %488, 65536, !dbg !3565
  br i1 %cmp818, label %if.then820, label %if.end821, !dbg !3564

if.then820:                                       ; preds = %do.body814
  store i32 15, i32* %retval, align 4, !dbg !3565
  br label %return, !dbg !3565

if.end821:                                        ; preds = %do.body814
  %489 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3564
  %allocated822 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %489, i32 0, i32 1, !dbg !3564
  %490 = load i64, i64* %allocated822, align 8, !dbg !3564
  %shl823 = shl i64 %490, 1, !dbg !3564
  store i64 %shl823, i64* %allocated822, align 8, !dbg !3564
  %491 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3567
  %allocated824 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %491, i32 0, i32 1, !dbg !3567
  %492 = load i64, i64* %allocated824, align 8, !dbg !3567
  %cmp825 = icmp ugt i64 %492, 65536, !dbg !3567
  br i1 %cmp825, label %if.then827, label %if.end829, !dbg !3564

if.then827:                                       ; preds = %if.end821
  %493 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3567
  %allocated828 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %493, i32 0, i32 1, !dbg !3567
  store i64 65536, i64* %allocated828, align 8, !dbg !3567
  br label %if.end829, !dbg !3567

if.end829:                                        ; preds = %if.then827, %if.end821
  %494 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3564
  %buffer830 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %494, i32 0, i32 0, !dbg !3564
  %495 = load i8*, i8** %buffer830, align 8, !dbg !3564
  %496 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3564
  %allocated831 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %496, i32 0, i32 1, !dbg !3564
  %497 = load i64, i64* %allocated831, align 8, !dbg !3564
  %call832 = call i8* @realloc(i8* %495, i64 %497), !dbg !3564
  %498 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3564
  %buffer833 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %498, i32 0, i32 0, !dbg !3564
  store i8* %call832, i8** %buffer833, align 8, !dbg !3564
  %499 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3569
  %buffer834 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %499, i32 0, i32 0, !dbg !3569
  %500 = load i8*, i8** %buffer834, align 8, !dbg !3569
  %cmp835 = icmp eq i8* %500, null, !dbg !3569
  br i1 %cmp835, label %if.then837, label %if.end838, !dbg !3564

if.then837:                                       ; preds = %if.end829
  store i32 12, i32* %retval, align 4, !dbg !3569
  br label %return, !dbg !3569

if.end838:                                        ; preds = %if.end829
  %501 = load i8*, i8** %old_buffer815, align 8, !dbg !3571
  %502 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3571
  %buffer839 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %502, i32 0, i32 0, !dbg !3571
  %503 = load i8*, i8** %buffer839, align 8, !dbg !3571
  %cmp840 = icmp ne i8* %501, %503, !dbg !3571
  br i1 %cmp840, label %if.then842, label %if.end868, !dbg !3564

if.then842:                                       ; preds = %if.end838
  call void @llvm.dbg.declare(metadata i32* %incr843, metadata !3573, metadata !DIExpression()), !dbg !3575
  %504 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !3575
  %buffer844 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %504, i32 0, i32 0, !dbg !3575
  %505 = load i8*, i8** %buffer844, align 8, !dbg !3575
  %506 = load i8*, i8** %old_buffer815, align 8, !dbg !3575
  %sub.ptr.lhs.cast845 = ptrtoint i8* %505 to i64, !dbg !3575
  %sub.ptr.rhs.cast846 = ptrtoint i8* %506 to i64, !dbg !3575
  %sub.ptr.sub847 = sub i64 %sub.ptr.lhs.cast845, %sub.ptr.rhs.cast846, !dbg !3575
  %conv848 = trunc i64 %sub.ptr.sub847 to i32, !dbg !3575
  store i32 %conv848, i32* %incr843, align 4, !dbg !3575
  %507 = load i32, i32* %incr843, align 4, !dbg !3575
  %508 = load i8*, i8** %b, align 8, !dbg !3575
  %idx.ext849 = sext i32 %507 to i64, !dbg !3575
  %add.ptr850 = getelementptr inbounds i8, i8* %508, i64 %idx.ext849, !dbg !3575
  store i8* %add.ptr850, i8** %b, align 8, !dbg !3575
  %509 = load i32, i32* %incr843, align 4, !dbg !3575
  %510 = load i8*, i8** %begalt, align 8, !dbg !3575
  %idx.ext851 = sext i32 %509 to i64, !dbg !3575
  %add.ptr852 = getelementptr inbounds i8, i8* %510, i64 %idx.ext851, !dbg !3575
  store i8* %add.ptr852, i8** %begalt, align 8, !dbg !3575
  %511 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3576
  %tobool853 = icmp ne i8* %511, null, !dbg !3576
  br i1 %tobool853, label %if.then854, label %if.end857, !dbg !3575

if.then854:                                       ; preds = %if.then842
  %512 = load i32, i32* %incr843, align 4, !dbg !3576
  %513 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !3576
  %idx.ext855 = sext i32 %512 to i64, !dbg !3576
  %add.ptr856 = getelementptr inbounds i8, i8* %513, i64 %idx.ext855, !dbg !3576
  store i8* %add.ptr856, i8** %fixup_alt_jump, align 8, !dbg !3576
  br label %if.end857, !dbg !3576

if.end857:                                        ; preds = %if.then854, %if.then842
  %514 = load i8*, i8** %laststart, align 8, !dbg !3578
  %tobool858 = icmp ne i8* %514, null, !dbg !3578
  br i1 %tobool858, label %if.then859, label %if.end862, !dbg !3575

if.then859:                                       ; preds = %if.end857
  %515 = load i32, i32* %incr843, align 4, !dbg !3578
  %516 = load i8*, i8** %laststart, align 8, !dbg !3578
  %idx.ext860 = sext i32 %515 to i64, !dbg !3578
  %add.ptr861 = getelementptr inbounds i8, i8* %516, i64 %idx.ext860, !dbg !3578
  store i8* %add.ptr861, i8** %laststart, align 8, !dbg !3578
  br label %if.end862, !dbg !3578

if.end862:                                        ; preds = %if.then859, %if.end857
  %517 = load i8*, i8** %pending_exact, align 8, !dbg !3580
  %tobool863 = icmp ne i8* %517, null, !dbg !3580
  br i1 %tobool863, label %if.then864, label %if.end867, !dbg !3575

if.then864:                                       ; preds = %if.end862
  %518 = load i32, i32* %incr843, align 4, !dbg !3580
  %519 = load i8*, i8** %pending_exact, align 8, !dbg !3580
  %idx.ext865 = sext i32 %518 to i64, !dbg !3580
  %add.ptr866 = getelementptr inbounds i8, i8* %519, i64 %idx.ext865, !dbg !3580
  store i8* %add.ptr866, i8** %pending_exact, align 8, !dbg !3580
  br label %if.end867, !dbg !3580

if.end867:                                        ; preds = %if.then864, %if.end862
  br label %if.end868, !dbg !3575

if.end868:                                        ; preds = %if.end867, %if.end838
  br label %do.end869, !dbg !3564

do.end869:                                        ; preds = %if.end868
  br label %while.cond804, !dbg !3560, !llvm.loop !3582

while.end870:                                     ; preds = %while.cond804
  %520 = load i8*, i8** %b, align 8, !dbg !3560
  %incdec.ptr871 = getelementptr inbounds i8, i8* %520, i32 1, !dbg !3560
  store i8* %incdec.ptr871, i8** %b, align 8, !dbg !3560
  store i8 32, i8* %520, align 1, !dbg !3560
  br label %do.end872, !dbg !3560

do.end872:                                        ; preds = %while.end870
  %521 = load i8*, i8** %b, align 8, !dbg !3583
  call void @llvm.memset.p0i8.i64(i8* align 1 %521, i8 0, i64 32, i1 false), !dbg !3583
  %522 = load i8*, i8** %b, align 8, !dbg !3584
  %arrayidx873 = getelementptr inbounds i8, i8* %522, i64 -2, !dbg !3584
  %523 = load i8, i8* %arrayidx873, align 1, !dbg !3584
  %conv874 = zext i8 %523 to i32, !dbg !3586
  %cmp875 = icmp eq i32 %conv874, 5, !dbg !3587
  br i1 %cmp875, label %land.lhs.true877, label %if.end885, !dbg !3588

land.lhs.true877:                                 ; preds = %do.end872
  %524 = load i64, i64* %syntax.addr, align 8, !dbg !3589
  %and878 = and i64 %524, 256, !dbg !3590
  %tobool879 = icmp ne i64 %and878, 0, !dbg !3590
  br i1 %tobool879, label %if.then880, label %if.end885, !dbg !3591

if.then880:                                       ; preds = %land.lhs.true877
  %525 = load i8*, i8** %b, align 8, !dbg !3592
  %arrayidx881 = getelementptr inbounds i8, i8* %525, i64 1, !dbg !3592
  %526 = load i8, i8* %arrayidx881, align 1, !dbg !3592
  %conv882 = zext i8 %526 to i32, !dbg !3592
  %or883 = or i32 %conv882, 4, !dbg !3592
  %conv884 = trunc i32 %or883 to i8, !dbg !3592
  store i8 %conv884, i8* %arrayidx881, align 1, !dbg !3592
  br label %if.end885, !dbg !3592

if.end885:                                        ; preds = %if.then880, %land.lhs.true877, %do.end872
  br label %for.cond886, !dbg !3593

for.cond886:                                      ; preds = %if.end1730, %do.end927, %if.end885
  %527 = load i8*, i8** %p, align 8, !dbg !3594
  %528 = load i8*, i8** %pend, align 8, !dbg !3599
  %cmp887 = icmp eq i8* %527, %528, !dbg !3600
  br i1 %cmp887, label %if.then889, label %if.end891, !dbg !3601

if.then889:                                       ; preds = %for.cond886
  %stack890 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3602
  %529 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack890, align 8, !dbg !3602
  %530 = bitcast %struct.compile_stack_elt_t* %529 to i8*, !dbg !3602
  call void @free(i8* %530), !dbg !3602
  store i32 7, i32* %retval, align 4, !dbg !3602
  br label %return, !dbg !3602

if.end891:                                        ; preds = %for.cond886
  br label %do.body892, !dbg !3603

do.body892:                                       ; preds = %if.end891
  %531 = load i8*, i8** %p, align 8, !dbg !3604
  %532 = load i8*, i8** %pend, align 8, !dbg !3604
  %cmp893 = icmp eq i8* %531, %532, !dbg !3604
  br i1 %cmp893, label %if.then895, label %if.end896, !dbg !3607

if.then895:                                       ; preds = %do.body892
  store i32 14, i32* %retval, align 4, !dbg !3604
  br label %return, !dbg !3604

if.end896:                                        ; preds = %do.body892
  %533 = load i8*, i8** %p, align 8, !dbg !3607
  %incdec.ptr897 = getelementptr inbounds i8, i8* %533, i32 1, !dbg !3607
  store i8* %incdec.ptr897, i8** %p, align 8, !dbg !3607
  %534 = load i8, i8* %533, align 1, !dbg !3607
  store i8 %534, i8* %c, align 1, !dbg !3607
  %535 = load i8*, i8** %translate, align 8, !dbg !3608
  %tobool898 = icmp ne i8* %535, null, !dbg !3608
  br i1 %tobool898, label %if.then899, label %if.end902, !dbg !3607

if.then899:                                       ; preds = %if.end896
  %536 = load i8*, i8** %translate, align 8, !dbg !3608
  %537 = load i8, i8* %c, align 1, !dbg !3608
  %idxprom900 = zext i8 %537 to i64, !dbg !3608
  %arrayidx901 = getelementptr inbounds i8, i8* %536, i64 %idxprom900, !dbg !3608
  %538 = load i8, i8* %arrayidx901, align 1, !dbg !3608
  store i8 %538, i8* %c, align 1, !dbg !3608
  br label %if.end902, !dbg !3608

if.end902:                                        ; preds = %if.then899, %if.end896
  br label %do.end903, !dbg !3607

do.end903:                                        ; preds = %if.end902
  %539 = load i64, i64* %syntax.addr, align 8, !dbg !3610
  %and904 = and i64 %539, 1, !dbg !3612
  %tobool905 = icmp ne i64 %and904, 0, !dbg !3612
  br i1 %tobool905, label %land.lhs.true906, label %if.end937, !dbg !3613

land.lhs.true906:                                 ; preds = %do.end903
  %540 = load i8, i8* %c, align 1, !dbg !3614
  %conv907 = zext i8 %540 to i32, !dbg !3614
  %cmp908 = icmp eq i32 %conv907, 92, !dbg !3615
  br i1 %cmp908, label %if.then910, label %if.end937, !dbg !3616

if.then910:                                       ; preds = %land.lhs.true906
  %541 = load i8*, i8** %p, align 8, !dbg !3617
  %542 = load i8*, i8** %pend, align 8, !dbg !3620
  %cmp911 = icmp eq i8* %541, %542, !dbg !3621
  br i1 %cmp911, label %if.then913, label %if.end915, !dbg !3622

if.then913:                                       ; preds = %if.then910
  %stack914 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3623
  %543 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack914, align 8, !dbg !3623
  %544 = bitcast %struct.compile_stack_elt_t* %543 to i8*, !dbg !3623
  call void @free(i8* %544), !dbg !3623
  store i32 5, i32* %retval, align 4, !dbg !3623
  br label %return, !dbg !3623

if.end915:                                        ; preds = %if.then910
  br label %do.body916, !dbg !3624

do.body916:                                       ; preds = %if.end915
  %545 = load i8*, i8** %p, align 8, !dbg !3625
  %546 = load i8*, i8** %pend, align 8, !dbg !3625
  %cmp917 = icmp eq i8* %545, %546, !dbg !3625
  br i1 %cmp917, label %if.then919, label %if.end920, !dbg !3628

if.then919:                                       ; preds = %do.body916
  store i32 14, i32* %retval, align 4, !dbg !3625
  br label %return, !dbg !3625

if.end920:                                        ; preds = %do.body916
  %547 = load i8*, i8** %p, align 8, !dbg !3628
  %incdec.ptr921 = getelementptr inbounds i8, i8* %547, i32 1, !dbg !3628
  store i8* %incdec.ptr921, i8** %p, align 8, !dbg !3628
  %548 = load i8, i8* %547, align 1, !dbg !3628
  store i8 %548, i8* %c1, align 1, !dbg !3628
  %549 = load i8*, i8** %translate, align 8, !dbg !3629
  %tobool922 = icmp ne i8* %549, null, !dbg !3629
  br i1 %tobool922, label %if.then923, label %if.end926, !dbg !3628

if.then923:                                       ; preds = %if.end920
  %550 = load i8*, i8** %translate, align 8, !dbg !3629
  %551 = load i8, i8* %c1, align 1, !dbg !3629
  %idxprom924 = zext i8 %551 to i64, !dbg !3629
  %arrayidx925 = getelementptr inbounds i8, i8* %550, i64 %idxprom924, !dbg !3629
  %552 = load i8, i8* %arrayidx925, align 1, !dbg !3629
  store i8 %552, i8* %c1, align 1, !dbg !3629
  br label %if.end926, !dbg !3629

if.end926:                                        ; preds = %if.then923, %if.end920
  br label %do.end927, !dbg !3628

do.end927:                                        ; preds = %if.end926
  %553 = load i8, i8* %c1, align 1, !dbg !3631
  %conv928 = zext i8 %553 to i32, !dbg !3631
  %rem = srem i32 %conv928, 8, !dbg !3631
  %shl929 = shl i32 1, %rem, !dbg !3631
  %554 = load i8*, i8** %b, align 8, !dbg !3631
  %555 = load i8, i8* %c1, align 1, !dbg !3631
  %conv930 = zext i8 %555 to i32, !dbg !3631
  %div = sdiv i32 %conv930, 8, !dbg !3631
  %idxprom931 = sext i32 %div to i64, !dbg !3631
  %arrayidx932 = getelementptr inbounds i8, i8* %554, i64 %idxprom931, !dbg !3631
  %556 = load i8, i8* %arrayidx932, align 1, !dbg !3631
  %conv933 = zext i8 %556 to i32, !dbg !3631
  %or934 = or i32 %conv933, %shl929, !dbg !3631
  %conv935 = trunc i32 %or934 to i8, !dbg !3631
  store i8 %conv935, i8* %arrayidx932, align 1, !dbg !3631
  %557 = load i8, i8* %c1, align 1, !dbg !3632
  %conv936 = zext i8 %557 to i32, !dbg !3632
  store i32 %conv936, i32* %range_start, align 4, !dbg !3633
  br label %for.cond886, !dbg !3634, !llvm.loop !3635

if.end937:                                        ; preds = %land.lhs.true906, %do.end903
  %558 = load i8, i8* %c, align 1, !dbg !3638
  %conv938 = zext i8 %558 to i32, !dbg !3638
  %cmp939 = icmp eq i32 %conv938, 93, !dbg !3640
  br i1 %cmp939, label %land.lhs.true941, label %if.end946, !dbg !3641

land.lhs.true941:                                 ; preds = %if.end937
  %559 = load i8*, i8** %p, align 8, !dbg !3642
  %560 = load i8*, i8** %p1, align 8, !dbg !3643
  %add.ptr942 = getelementptr inbounds i8, i8* %560, i64 1, !dbg !3644
  %cmp943 = icmp ne i8* %559, %add.ptr942, !dbg !3645
  br i1 %cmp943, label %if.then945, label %if.end946, !dbg !3646

if.then945:                                       ; preds = %land.lhs.true941
  br label %for.end1731, !dbg !3647

if.end946:                                        ; preds = %land.lhs.true941, %if.end937
  %561 = load i8, i8* %had_char_class, align 1, !dbg !3648
  %conv947 = sext i8 %561 to i32, !dbg !3648
  %tobool948 = icmp ne i32 %conv947, 0, !dbg !3648
  br i1 %tobool948, label %land.lhs.true949, label %if.end959, !dbg !3650

land.lhs.true949:                                 ; preds = %if.end946
  %562 = load i8, i8* %c, align 1, !dbg !3651
  %conv950 = zext i8 %562 to i32, !dbg !3651
  %cmp951 = icmp eq i32 %conv950, 45, !dbg !3652
  br i1 %cmp951, label %land.lhs.true953, label %if.end959, !dbg !3653

land.lhs.true953:                                 ; preds = %land.lhs.true949
  %563 = load i8*, i8** %p, align 8, !dbg !3654
  %564 = load i8, i8* %563, align 1, !dbg !3655
  %conv954 = sext i8 %564 to i32, !dbg !3655
  %cmp955 = icmp ne i32 %conv954, 93, !dbg !3656
  br i1 %cmp955, label %if.then957, label %if.end959, !dbg !3657

if.then957:                                       ; preds = %land.lhs.true953
  %stack958 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3658
  %565 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack958, align 8, !dbg !3658
  %566 = bitcast %struct.compile_stack_elt_t* %565 to i8*, !dbg !3658
  call void @free(i8* %566), !dbg !3658
  store i32 11, i32* %retval, align 4, !dbg !3658
  br label %return, !dbg !3658

if.end959:                                        ; preds = %land.lhs.true953, %land.lhs.true949, %if.end946
  %567 = load i8, i8* %c, align 1, !dbg !3659
  %conv960 = zext i8 %567 to i32, !dbg !3659
  %cmp961 = icmp eq i32 %conv960, 45, !dbg !3661
  br i1 %cmp961, label %land.lhs.true963, label %if.else997, !dbg !3662

land.lhs.true963:                                 ; preds = %if.end959
  %568 = load i8*, i8** %p, align 8, !dbg !3663
  %add.ptr964 = getelementptr inbounds i8, i8* %568, i64 -2, !dbg !3664
  %569 = load i8*, i8** %pattern.addr, align 8, !dbg !3665
  %cmp965 = icmp uge i8* %add.ptr964, %569, !dbg !3666
  br i1 %cmp965, label %land.lhs.true967, label %land.lhs.true972, !dbg !3667

land.lhs.true967:                                 ; preds = %land.lhs.true963
  %570 = load i8*, i8** %p, align 8, !dbg !3668
  %arrayidx968 = getelementptr inbounds i8, i8* %570, i64 -2, !dbg !3668
  %571 = load i8, i8* %arrayidx968, align 1, !dbg !3668
  %conv969 = sext i8 %571 to i32, !dbg !3668
  %cmp970 = icmp eq i32 %conv969, 91, !dbg !3669
  br i1 %cmp970, label %if.else997, label %land.lhs.true972, !dbg !3670

land.lhs.true972:                                 ; preds = %land.lhs.true967, %land.lhs.true963
  %572 = load i8*, i8** %p, align 8, !dbg !3671
  %add.ptr973 = getelementptr inbounds i8, i8* %572, i64 -3, !dbg !3672
  %573 = load i8*, i8** %pattern.addr, align 8, !dbg !3673
  %cmp974 = icmp uge i8* %add.ptr973, %573, !dbg !3674
  br i1 %cmp974, label %land.lhs.true976, label %land.lhs.true986, !dbg !3675

land.lhs.true976:                                 ; preds = %land.lhs.true972
  %574 = load i8*, i8** %p, align 8, !dbg !3676
  %arrayidx977 = getelementptr inbounds i8, i8* %574, i64 -3, !dbg !3676
  %575 = load i8, i8* %arrayidx977, align 1, !dbg !3676
  %conv978 = sext i8 %575 to i32, !dbg !3676
  %cmp979 = icmp eq i32 %conv978, 91, !dbg !3677
  br i1 %cmp979, label %land.lhs.true981, label %land.lhs.true986, !dbg !3678

land.lhs.true981:                                 ; preds = %land.lhs.true976
  %576 = load i8*, i8** %p, align 8, !dbg !3679
  %arrayidx982 = getelementptr inbounds i8, i8* %576, i64 -2, !dbg !3679
  %577 = load i8, i8* %arrayidx982, align 1, !dbg !3679
  %conv983 = sext i8 %577 to i32, !dbg !3679
  %cmp984 = icmp eq i32 %conv983, 94, !dbg !3680
  br i1 %cmp984, label %if.else997, label %land.lhs.true986, !dbg !3681

land.lhs.true986:                                 ; preds = %land.lhs.true981, %land.lhs.true976, %land.lhs.true972
  %578 = load i8*, i8** %p, align 8, !dbg !3682
  %579 = load i8, i8* %578, align 1, !dbg !3683
  %conv987 = sext i8 %579 to i32, !dbg !3683
  %cmp988 = icmp ne i32 %conv987, 93, !dbg !3684
  br i1 %cmp988, label %if.then990, label %if.else997, !dbg !3685

if.then990:                                       ; preds = %land.lhs.true986
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3686, metadata !DIExpression()), !dbg !3688
  %580 = load i32, i32* %range_start, align 4, !dbg !3689
  %581 = load i8*, i8** %pend, align 8, !dbg !3690
  %582 = load i8*, i8** %translate, align 8, !dbg !3691
  %583 = load i64, i64* %syntax.addr, align 8, !dbg !3692
  %584 = load i8*, i8** %b, align 8, !dbg !3693
  %call991 = call i32 @byte_compile_range(i32 %580, i8** %p, i8* %581, i8* %582, i64 %583, i8* %584), !dbg !3694
  store i32 %call991, i32* %ret, align 4, !dbg !3688
  %585 = load i32, i32* %ret, align 4, !dbg !3695
  %cmp992 = icmp ne i32 %585, 0, !dbg !3697
  br i1 %cmp992, label %if.then994, label %if.end996, !dbg !3698

if.then994:                                       ; preds = %if.then990
  %stack995 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3699
  %586 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack995, align 8, !dbg !3699
  %587 = bitcast %struct.compile_stack_elt_t* %586 to i8*, !dbg !3699
  call void @free(i8* %587), !dbg !3699
  %588 = load i32, i32* %ret, align 4, !dbg !3699
  store i32 %588, i32* %retval, align 4, !dbg !3699
  br label %return, !dbg !3699

if.end996:                                        ; preds = %if.then990
  store i32 -1, i32* %range_start, align 4, !dbg !3700
  br label %if.end1730, !dbg !3701

if.else997:                                       ; preds = %land.lhs.true986, %land.lhs.true981, %land.lhs.true967, %if.end959
  %589 = load i8*, i8** %p, align 8, !dbg !3702
  %arrayidx998 = getelementptr inbounds i8, i8* %589, i64 0, !dbg !3702
  %590 = load i8, i8* %arrayidx998, align 1, !dbg !3702
  %conv999 = sext i8 %590 to i32, !dbg !3702
  %cmp1000 = icmp eq i32 %conv999, 45, !dbg !3704
  br i1 %cmp1000, label %land.lhs.true1002, label %if.else1028, !dbg !3705

land.lhs.true1002:                                ; preds = %if.else997
  %591 = load i8*, i8** %p, align 8, !dbg !3706
  %arrayidx1003 = getelementptr inbounds i8, i8* %591, i64 1, !dbg !3706
  %592 = load i8, i8* %arrayidx1003, align 1, !dbg !3706
  %conv1004 = sext i8 %592 to i32, !dbg !3706
  %cmp1005 = icmp ne i32 %conv1004, 93, !dbg !3707
  br i1 %cmp1005, label %if.then1007, label %if.else1028, !dbg !3708

if.then1007:                                      ; preds = %land.lhs.true1002
  call void @llvm.dbg.declare(metadata i32* %ret1008, metadata !3709, metadata !DIExpression()), !dbg !3711
  br label %do.body1009, !dbg !3712

do.body1009:                                      ; preds = %if.then1007
  %593 = load i8*, i8** %p, align 8, !dbg !3713
  %594 = load i8*, i8** %pend, align 8, !dbg !3713
  %cmp1010 = icmp eq i8* %593, %594, !dbg !3713
  br i1 %cmp1010, label %if.then1012, label %if.end1013, !dbg !3716

if.then1012:                                      ; preds = %do.body1009
  store i32 14, i32* %retval, align 4, !dbg !3713
  br label %return, !dbg !3713

if.end1013:                                       ; preds = %do.body1009
  %595 = load i8*, i8** %p, align 8, !dbg !3716
  %incdec.ptr1014 = getelementptr inbounds i8, i8* %595, i32 1, !dbg !3716
  store i8* %incdec.ptr1014, i8** %p, align 8, !dbg !3716
  %596 = load i8, i8* %595, align 1, !dbg !3716
  store i8 %596, i8* %c1, align 1, !dbg !3716
  %597 = load i8*, i8** %translate, align 8, !dbg !3717
  %tobool1015 = icmp ne i8* %597, null, !dbg !3717
  br i1 %tobool1015, label %if.then1016, label %if.end1019, !dbg !3716

if.then1016:                                      ; preds = %if.end1013
  %598 = load i8*, i8** %translate, align 8, !dbg !3717
  %599 = load i8, i8* %c1, align 1, !dbg !3717
  %idxprom1017 = zext i8 %599 to i64, !dbg !3717
  %arrayidx1018 = getelementptr inbounds i8, i8* %598, i64 %idxprom1017, !dbg !3717
  %600 = load i8, i8* %arrayidx1018, align 1, !dbg !3717
  store i8 %600, i8* %c1, align 1, !dbg !3717
  br label %if.end1019, !dbg !3717

if.end1019:                                       ; preds = %if.then1016, %if.end1013
  br label %do.end1020, !dbg !3716

do.end1020:                                       ; preds = %if.end1019
  %601 = load i8, i8* %c, align 1, !dbg !3719
  %conv1021 = zext i8 %601 to i32, !dbg !3719
  %602 = load i8*, i8** %pend, align 8, !dbg !3720
  %603 = load i8*, i8** %translate, align 8, !dbg !3721
  %604 = load i64, i64* %syntax.addr, align 8, !dbg !3722
  %605 = load i8*, i8** %b, align 8, !dbg !3723
  %call1022 = call i32 @byte_compile_range(i32 %conv1021, i8** %p, i8* %602, i8* %603, i64 %604, i8* %605), !dbg !3724
  store i32 %call1022, i32* %ret1008, align 4, !dbg !3725
  %606 = load i32, i32* %ret1008, align 4, !dbg !3726
  %cmp1023 = icmp ne i32 %606, 0, !dbg !3728
  br i1 %cmp1023, label %if.then1025, label %if.end1027, !dbg !3729

if.then1025:                                      ; preds = %do.end1020
  %stack1026 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3730
  %607 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1026, align 8, !dbg !3730
  %608 = bitcast %struct.compile_stack_elt_t* %607 to i8*, !dbg !3730
  call void @free(i8* %608), !dbg !3730
  %609 = load i32, i32* %ret1008, align 4, !dbg !3730
  store i32 %609, i32* %retval, align 4, !dbg !3730
  br label %return, !dbg !3730

if.end1027:                                       ; preds = %do.end1020
  store i32 -1, i32* %range_start, align 4, !dbg !3731
  br label %if.end1729, !dbg !3732

if.else1028:                                      ; preds = %land.lhs.true1002, %if.else997
  %610 = load i64, i64* %syntax.addr, align 8, !dbg !3733
  %and1029 = and i64 %610, 4, !dbg !3735
  %tobool1030 = icmp ne i64 %and1029, 0, !dbg !3735
  br i1 %tobool1030, label %land.lhs.true1031, label %if.else1455, !dbg !3736

land.lhs.true1031:                                ; preds = %if.else1028
  %611 = load i8, i8* %c, align 1, !dbg !3737
  %conv1032 = zext i8 %611 to i32, !dbg !3737
  %cmp1033 = icmp eq i32 %conv1032, 91, !dbg !3738
  br i1 %cmp1033, label %land.lhs.true1035, label %if.else1455, !dbg !3739

land.lhs.true1035:                                ; preds = %land.lhs.true1031
  %612 = load i8*, i8** %p, align 8, !dbg !3740
  %613 = load i8, i8* %612, align 1, !dbg !3741
  %conv1036 = sext i8 %613 to i32, !dbg !3741
  %cmp1037 = icmp eq i32 %conv1036, 58, !dbg !3742
  br i1 %cmp1037, label %if.then1039, label %if.else1455, !dbg !3743

if.then1039:                                      ; preds = %land.lhs.true1035
  call void @llvm.dbg.declare(metadata [7 x i8]* %str, metadata !3744, metadata !DIExpression()), !dbg !3749
  br label %do.body1040, !dbg !3750

do.body1040:                                      ; preds = %if.then1039
  %614 = load i8*, i8** %p, align 8, !dbg !3751
  %615 = load i8*, i8** %pend, align 8, !dbg !3751
  %cmp1041 = icmp eq i8* %614, %615, !dbg !3751
  br i1 %cmp1041, label %if.then1043, label %if.end1044, !dbg !3754

if.then1043:                                      ; preds = %do.body1040
  store i32 14, i32* %retval, align 4, !dbg !3751
  br label %return, !dbg !3751

if.end1044:                                       ; preds = %do.body1040
  %616 = load i8*, i8** %p, align 8, !dbg !3754
  %incdec.ptr1045 = getelementptr inbounds i8, i8* %616, i32 1, !dbg !3754
  store i8* %incdec.ptr1045, i8** %p, align 8, !dbg !3754
  %617 = load i8, i8* %616, align 1, !dbg !3754
  store i8 %617, i8* %c, align 1, !dbg !3754
  %618 = load i8*, i8** %translate, align 8, !dbg !3755
  %tobool1046 = icmp ne i8* %618, null, !dbg !3755
  br i1 %tobool1046, label %if.then1047, label %if.end1050, !dbg !3754

if.then1047:                                      ; preds = %if.end1044
  %619 = load i8*, i8** %translate, align 8, !dbg !3755
  %620 = load i8, i8* %c, align 1, !dbg !3755
  %idxprom1048 = zext i8 %620 to i64, !dbg !3755
  %arrayidx1049 = getelementptr inbounds i8, i8* %619, i64 %idxprom1048, !dbg !3755
  %621 = load i8, i8* %arrayidx1049, align 1, !dbg !3755
  store i8 %621, i8* %c, align 1, !dbg !3755
  br label %if.end1050, !dbg !3755

if.end1050:                                       ; preds = %if.then1047, %if.end1044
  br label %do.end1051, !dbg !3754

do.end1051:                                       ; preds = %if.end1050
  store i8 0, i8* %c1, align 1, !dbg !3757
  %622 = load i8*, i8** %p, align 8, !dbg !3758
  %623 = load i8*, i8** %pend, align 8, !dbg !3760
  %cmp1052 = icmp eq i8* %622, %623, !dbg !3761
  br i1 %cmp1052, label %if.then1054, label %if.end1056, !dbg !3762

if.then1054:                                      ; preds = %do.end1051
  %stack1055 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3763
  %624 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1055, align 8, !dbg !3763
  %625 = bitcast %struct.compile_stack_elt_t* %624 to i8*, !dbg !3763
  call void @free(i8* %625), !dbg !3763
  store i32 7, i32* %retval, align 4, !dbg !3763
  br label %return, !dbg !3763

if.end1056:                                       ; preds = %do.end1051
  br label %for.cond1057, !dbg !3764

for.cond1057:                                     ; preds = %if.end1090, %if.end1056
  br label %do.body1058, !dbg !3765

do.body1058:                                      ; preds = %for.cond1057
  %626 = load i8*, i8** %p, align 8, !dbg !3769
  %627 = load i8*, i8** %pend, align 8, !dbg !3769
  %cmp1059 = icmp eq i8* %626, %627, !dbg !3769
  br i1 %cmp1059, label %if.then1061, label %if.end1062, !dbg !3772

if.then1061:                                      ; preds = %do.body1058
  store i32 14, i32* %retval, align 4, !dbg !3769
  br label %return, !dbg !3769

if.end1062:                                       ; preds = %do.body1058
  %628 = load i8*, i8** %p, align 8, !dbg !3772
  %incdec.ptr1063 = getelementptr inbounds i8, i8* %628, i32 1, !dbg !3772
  store i8* %incdec.ptr1063, i8** %p, align 8, !dbg !3772
  %629 = load i8, i8* %628, align 1, !dbg !3772
  store i8 %629, i8* %c, align 1, !dbg !3772
  %630 = load i8*, i8** %translate, align 8, !dbg !3773
  %tobool1064 = icmp ne i8* %630, null, !dbg !3773
  br i1 %tobool1064, label %if.then1065, label %if.end1068, !dbg !3772

if.then1065:                                      ; preds = %if.end1062
  %631 = load i8*, i8** %translate, align 8, !dbg !3773
  %632 = load i8, i8* %c, align 1, !dbg !3773
  %idxprom1066 = zext i8 %632 to i64, !dbg !3773
  %arrayidx1067 = getelementptr inbounds i8, i8* %631, i64 %idxprom1066, !dbg !3773
  %633 = load i8, i8* %arrayidx1067, align 1, !dbg !3773
  store i8 %633, i8* %c, align 1, !dbg !3773
  br label %if.end1068, !dbg !3773

if.end1068:                                       ; preds = %if.then1065, %if.end1062
  br label %do.end1069, !dbg !3772

do.end1069:                                       ; preds = %if.end1068
  %634 = load i8, i8* %c, align 1, !dbg !3775
  %conv1070 = zext i8 %634 to i32, !dbg !3775
  %cmp1071 = icmp eq i32 %conv1070, 58, !dbg !3777
  br i1 %cmp1071, label %land.lhs.true1073, label %lor.lhs.false1077, !dbg !3778

land.lhs.true1073:                                ; preds = %do.end1069
  %635 = load i8*, i8** %p, align 8, !dbg !3779
  %636 = load i8, i8* %635, align 1, !dbg !3780
  %conv1074 = sext i8 %636 to i32, !dbg !3780
  %cmp1075 = icmp eq i32 %conv1074, 93, !dbg !3781
  br i1 %cmp1075, label %if.then1080, label %lor.lhs.false1077, !dbg !3782

lor.lhs.false1077:                                ; preds = %land.lhs.true1073, %do.end1069
  %637 = load i8*, i8** %p, align 8, !dbg !3783
  %638 = load i8*, i8** %pend, align 8, !dbg !3784
  %cmp1078 = icmp eq i8* %637, %638, !dbg !3785
  br i1 %cmp1078, label %if.then1080, label %if.end1081, !dbg !3786

if.then1080:                                      ; preds = %lor.lhs.false1077, %land.lhs.true1073
  br label %for.end1091, !dbg !3787

if.end1081:                                       ; preds = %lor.lhs.false1077
  %639 = load i8, i8* %c1, align 1, !dbg !3788
  %conv1082 = zext i8 %639 to i32, !dbg !3788
  %cmp1083 = icmp slt i32 %conv1082, 6, !dbg !3790
  br i1 %cmp1083, label %if.then1085, label %if.else1088, !dbg !3791

if.then1085:                                      ; preds = %if.end1081
  %640 = load i8, i8* %c, align 1, !dbg !3792
  %641 = load i8, i8* %c1, align 1, !dbg !3793
  %inc = add i8 %641, 1, !dbg !3793
  store i8 %inc, i8* %c1, align 1, !dbg !3793
  %idxprom1086 = zext i8 %641 to i64, !dbg !3794
  %arrayidx1087 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 %idxprom1086, !dbg !3794
  store i8 %640, i8* %arrayidx1087, align 1, !dbg !3795
  br label %if.end1090, !dbg !3794

if.else1088:                                      ; preds = %if.end1081
  %arrayidx1089 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3796
  store i8 0, i8* %arrayidx1089, align 1, !dbg !3797
  br label %if.end1090

if.end1090:                                       ; preds = %if.else1088, %if.then1085
  br label %for.cond1057, !dbg !3798, !llvm.loop !3799

for.end1091:                                      ; preds = %if.then1080
  %642 = load i8, i8* %c1, align 1, !dbg !3802
  %idxprom1092 = zext i8 %642 to i64, !dbg !3803
  %arrayidx1093 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 %idxprom1092, !dbg !3803
  store i8 0, i8* %arrayidx1093, align 1, !dbg !3804
  %643 = load i8, i8* %c, align 1, !dbg !3805
  %conv1094 = zext i8 %643 to i32, !dbg !3805
  %cmp1095 = icmp eq i32 %conv1094, 58, !dbg !3807
  br i1 %cmp1095, label %land.lhs.true1097, label %if.else1439, !dbg !3808

land.lhs.true1097:                                ; preds = %for.end1091
  %644 = load i8*, i8** %p, align 8, !dbg !3809
  %645 = load i8, i8* %644, align 1, !dbg !3810
  %conv1098 = sext i8 %645 to i32, !dbg !3810
  %cmp1099 = icmp eq i32 %conv1098, 93, !dbg !3811
  br i1 %cmp1099, label %if.then1101, label %if.else1439, !dbg !3812

if.then1101:                                      ; preds = %land.lhs.true1097
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3813, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.declare(metadata i8* %is_alnum, metadata !3816, metadata !DIExpression()), !dbg !3817
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3818
  %call1102 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)), !dbg !3818
  %cmp1103 = icmp eq i32 %call1102, 0, !dbg !3818
  %conv1104 = zext i1 %cmp1103 to i32, !dbg !3818
  %conv1105 = trunc i32 %conv1104 to i8, !dbg !3818
  store i8 %conv1105, i8* %is_alnum, align 1, !dbg !3817
  call void @llvm.dbg.declare(metadata i8* %is_alpha, metadata !3819, metadata !DIExpression()), !dbg !3820
  %arraydecay1106 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3821
  %call1107 = call i32 @strcmp(i8* %arraydecay1106, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)), !dbg !3821
  %cmp1108 = icmp eq i32 %call1107, 0, !dbg !3821
  %conv1109 = zext i1 %cmp1108 to i32, !dbg !3821
  %conv1110 = trunc i32 %conv1109 to i8, !dbg !3821
  store i8 %conv1110, i8* %is_alpha, align 1, !dbg !3820
  call void @llvm.dbg.declare(metadata i8* %is_blank, metadata !3822, metadata !DIExpression()), !dbg !3823
  %arraydecay1111 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3824
  %call1112 = call i32 @strcmp(i8* %arraydecay1111, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)), !dbg !3824
  %cmp1113 = icmp eq i32 %call1112, 0, !dbg !3824
  %conv1114 = zext i1 %cmp1113 to i32, !dbg !3824
  %conv1115 = trunc i32 %conv1114 to i8, !dbg !3824
  store i8 %conv1115, i8* %is_blank, align 1, !dbg !3823
  call void @llvm.dbg.declare(metadata i8* %is_cntrl, metadata !3825, metadata !DIExpression()), !dbg !3826
  %arraydecay1116 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3827
  %call1117 = call i32 @strcmp(i8* %arraydecay1116, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)), !dbg !3827
  %cmp1118 = icmp eq i32 %call1117, 0, !dbg !3827
  %conv1119 = zext i1 %cmp1118 to i32, !dbg !3827
  %conv1120 = trunc i32 %conv1119 to i8, !dbg !3827
  store i8 %conv1120, i8* %is_cntrl, align 1, !dbg !3826
  call void @llvm.dbg.declare(metadata i8* %is_digit, metadata !3828, metadata !DIExpression()), !dbg !3829
  %arraydecay1121 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3830
  %call1122 = call i32 @strcmp(i8* %arraydecay1121, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)), !dbg !3830
  %cmp1123 = icmp eq i32 %call1122, 0, !dbg !3830
  %conv1124 = zext i1 %cmp1123 to i32, !dbg !3830
  %conv1125 = trunc i32 %conv1124 to i8, !dbg !3830
  store i8 %conv1125, i8* %is_digit, align 1, !dbg !3829
  call void @llvm.dbg.declare(metadata i8* %is_graph, metadata !3831, metadata !DIExpression()), !dbg !3832
  %arraydecay1126 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3833
  %call1127 = call i32 @strcmp(i8* %arraydecay1126, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)), !dbg !3833
  %cmp1128 = icmp eq i32 %call1127, 0, !dbg !3833
  %conv1129 = zext i1 %cmp1128 to i32, !dbg !3833
  %conv1130 = trunc i32 %conv1129 to i8, !dbg !3833
  store i8 %conv1130, i8* %is_graph, align 1, !dbg !3832
  call void @llvm.dbg.declare(metadata i8* %is_lower, metadata !3834, metadata !DIExpression()), !dbg !3835
  %arraydecay1131 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3836
  %call1132 = call i32 @strcmp(i8* %arraydecay1131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)), !dbg !3836
  %cmp1133 = icmp eq i32 %call1132, 0, !dbg !3836
  %conv1134 = zext i1 %cmp1133 to i32, !dbg !3836
  %conv1135 = trunc i32 %conv1134 to i8, !dbg !3836
  store i8 %conv1135, i8* %is_lower, align 1, !dbg !3835
  call void @llvm.dbg.declare(metadata i8* %is_print, metadata !3837, metadata !DIExpression()), !dbg !3838
  %arraydecay1136 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3839
  %call1137 = call i32 @strcmp(i8* %arraydecay1136, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)), !dbg !3839
  %cmp1138 = icmp eq i32 %call1137, 0, !dbg !3839
  %conv1139 = zext i1 %cmp1138 to i32, !dbg !3839
  %conv1140 = trunc i32 %conv1139 to i8, !dbg !3839
  store i8 %conv1140, i8* %is_print, align 1, !dbg !3838
  call void @llvm.dbg.declare(metadata i8* %is_punct, metadata !3840, metadata !DIExpression()), !dbg !3841
  %arraydecay1141 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3842
  %call1142 = call i32 @strcmp(i8* %arraydecay1141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)), !dbg !3842
  %cmp1143 = icmp eq i32 %call1142, 0, !dbg !3842
  %conv1144 = zext i1 %cmp1143 to i32, !dbg !3842
  %conv1145 = trunc i32 %conv1144 to i8, !dbg !3842
  store i8 %conv1145, i8* %is_punct, align 1, !dbg !3841
  call void @llvm.dbg.declare(metadata i8* %is_space, metadata !3843, metadata !DIExpression()), !dbg !3844
  %arraydecay1146 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3845
  %call1147 = call i32 @strcmp(i8* %arraydecay1146, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)), !dbg !3845
  %cmp1148 = icmp eq i32 %call1147, 0, !dbg !3845
  %conv1149 = zext i1 %cmp1148 to i32, !dbg !3845
  %conv1150 = trunc i32 %conv1149 to i8, !dbg !3845
  store i8 %conv1150, i8* %is_space, align 1, !dbg !3844
  call void @llvm.dbg.declare(metadata i8* %is_upper, metadata !3846, metadata !DIExpression()), !dbg !3847
  %arraydecay1151 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3848
  %call1152 = call i32 @strcmp(i8* %arraydecay1151, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)), !dbg !3848
  %cmp1153 = icmp eq i32 %call1152, 0, !dbg !3848
  %conv1154 = zext i1 %cmp1153 to i32, !dbg !3848
  %conv1155 = trunc i32 %conv1154 to i8, !dbg !3848
  store i8 %conv1155, i8* %is_upper, align 1, !dbg !3847
  call void @llvm.dbg.declare(metadata i8* %is_xdigit, metadata !3849, metadata !DIExpression()), !dbg !3850
  %arraydecay1156 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3851
  %call1157 = call i32 @strcmp(i8* %arraydecay1156, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)), !dbg !3851
  %cmp1158 = icmp eq i32 %call1157, 0, !dbg !3851
  %conv1159 = zext i1 %cmp1158 to i32, !dbg !3851
  %conv1160 = trunc i32 %conv1159 to i8, !dbg !3851
  store i8 %conv1160, i8* %is_xdigit, align 1, !dbg !3850
  %arraydecay1161 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1162 = call i32 @strcmp(i8* %arraydecay1161, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)), !dbg !3852
  %cmp1163 = icmp eq i32 %call1162, 0, !dbg !3852
  br i1 %cmp1163, label %if.end1222, label %lor.lhs.false1165, !dbg !3852

lor.lhs.false1165:                                ; preds = %if.then1101
  %arraydecay1166 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1167 = call i32 @strcmp(i8* %arraydecay1166, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)), !dbg !3852
  %cmp1168 = icmp eq i32 %call1167, 0, !dbg !3852
  br i1 %cmp1168, label %if.end1222, label %lor.lhs.false1170, !dbg !3852

lor.lhs.false1170:                                ; preds = %lor.lhs.false1165
  %arraydecay1171 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1172 = call i32 @strcmp(i8* %arraydecay1171, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)), !dbg !3852
  %cmp1173 = icmp eq i32 %call1172, 0, !dbg !3852
  br i1 %cmp1173, label %if.end1222, label %lor.lhs.false1175, !dbg !3852

lor.lhs.false1175:                                ; preds = %lor.lhs.false1170
  %arraydecay1176 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1177 = call i32 @strcmp(i8* %arraydecay1176, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)), !dbg !3852
  %cmp1178 = icmp eq i32 %call1177, 0, !dbg !3852
  br i1 %cmp1178, label %if.end1222, label %lor.lhs.false1180, !dbg !3852

lor.lhs.false1180:                                ; preds = %lor.lhs.false1175
  %arraydecay1181 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1182 = call i32 @strcmp(i8* %arraydecay1181, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)), !dbg !3852
  %cmp1183 = icmp eq i32 %call1182, 0, !dbg !3852
  br i1 %cmp1183, label %if.end1222, label %lor.lhs.false1185, !dbg !3852

lor.lhs.false1185:                                ; preds = %lor.lhs.false1180
  %arraydecay1186 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1187 = call i32 @strcmp(i8* %arraydecay1186, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)), !dbg !3852
  %cmp1188 = icmp eq i32 %call1187, 0, !dbg !3852
  br i1 %cmp1188, label %if.end1222, label %lor.lhs.false1190, !dbg !3852

lor.lhs.false1190:                                ; preds = %lor.lhs.false1185
  %arraydecay1191 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1192 = call i32 @strcmp(i8* %arraydecay1191, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)), !dbg !3852
  %cmp1193 = icmp eq i32 %call1192, 0, !dbg !3852
  br i1 %cmp1193, label %if.end1222, label %lor.lhs.false1195, !dbg !3852

lor.lhs.false1195:                                ; preds = %lor.lhs.false1190
  %arraydecay1196 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1197 = call i32 @strcmp(i8* %arraydecay1196, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)), !dbg !3852
  %cmp1198 = icmp eq i32 %call1197, 0, !dbg !3852
  br i1 %cmp1198, label %if.end1222, label %lor.lhs.false1200, !dbg !3852

lor.lhs.false1200:                                ; preds = %lor.lhs.false1195
  %arraydecay1201 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1202 = call i32 @strcmp(i8* %arraydecay1201, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0)), !dbg !3852
  %cmp1203 = icmp eq i32 %call1202, 0, !dbg !3852
  br i1 %cmp1203, label %if.end1222, label %lor.lhs.false1205, !dbg !3852

lor.lhs.false1205:                                ; preds = %lor.lhs.false1200
  %arraydecay1206 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1207 = call i32 @strcmp(i8* %arraydecay1206, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)), !dbg !3852
  %cmp1208 = icmp eq i32 %call1207, 0, !dbg !3852
  br i1 %cmp1208, label %if.end1222, label %lor.lhs.false1210, !dbg !3852

lor.lhs.false1210:                                ; preds = %lor.lhs.false1205
  %arraydecay1211 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1212 = call i32 @strcmp(i8* %arraydecay1211, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)), !dbg !3852
  %cmp1213 = icmp eq i32 %call1212, 0, !dbg !3852
  br i1 %cmp1213, label %if.end1222, label %lor.lhs.false1215, !dbg !3852

lor.lhs.false1215:                                ; preds = %lor.lhs.false1210
  %arraydecay1216 = getelementptr inbounds [7 x i8], [7 x i8]* %str, i64 0, i64 0, !dbg !3852
  %call1217 = call i32 @strcmp(i8* %arraydecay1216, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)), !dbg !3852
  %cmp1218 = icmp eq i32 %call1217, 0, !dbg !3852
  br i1 %cmp1218, label %if.end1222, label %if.then1220, !dbg !3854

if.then1220:                                      ; preds = %lor.lhs.false1215
  %stack1221 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3855
  %646 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1221, align 8, !dbg !3855
  %647 = bitcast %struct.compile_stack_elt_t* %646 to i8*, !dbg !3855
  call void @free(i8* %647), !dbg !3855
  store i32 4, i32* %retval, align 4, !dbg !3855
  br label %return, !dbg !3855

if.end1222:                                       ; preds = %lor.lhs.false1215, %lor.lhs.false1210, %lor.lhs.false1205, %lor.lhs.false1200, %lor.lhs.false1195, %lor.lhs.false1190, %lor.lhs.false1185, %lor.lhs.false1180, %lor.lhs.false1175, %lor.lhs.false1170, %lor.lhs.false1165, %if.then1101
  br label %do.body1223, !dbg !3856

do.body1223:                                      ; preds = %if.end1222
  %648 = load i8*, i8** %p, align 8, !dbg !3857
  %649 = load i8*, i8** %pend, align 8, !dbg !3857
  %cmp1224 = icmp eq i8* %648, %649, !dbg !3857
  br i1 %cmp1224, label %if.then1226, label %if.end1227, !dbg !3860

if.then1226:                                      ; preds = %do.body1223
  store i32 14, i32* %retval, align 4, !dbg !3857
  br label %return, !dbg !3857

if.end1227:                                       ; preds = %do.body1223
  %650 = load i8*, i8** %p, align 8, !dbg !3860
  %incdec.ptr1228 = getelementptr inbounds i8, i8* %650, i32 1, !dbg !3860
  store i8* %incdec.ptr1228, i8** %p, align 8, !dbg !3860
  %651 = load i8, i8* %650, align 1, !dbg !3860
  store i8 %651, i8* %c, align 1, !dbg !3860
  %652 = load i8*, i8** %translate, align 8, !dbg !3861
  %tobool1229 = icmp ne i8* %652, null, !dbg !3861
  br i1 %tobool1229, label %if.then1230, label %if.end1233, !dbg !3860

if.then1230:                                      ; preds = %if.end1227
  %653 = load i8*, i8** %translate, align 8, !dbg !3861
  %654 = load i8, i8* %c, align 1, !dbg !3861
  %idxprom1231 = zext i8 %654 to i64, !dbg !3861
  %arrayidx1232 = getelementptr inbounds i8, i8* %653, i64 %idxprom1231, !dbg !3861
  %655 = load i8, i8* %arrayidx1232, align 1, !dbg !3861
  store i8 %655, i8* %c, align 1, !dbg !3861
  br label %if.end1233, !dbg !3861

if.end1233:                                       ; preds = %if.then1230, %if.end1227
  br label %do.end1234, !dbg !3860

do.end1234:                                       ; preds = %if.end1233
  %656 = load i8*, i8** %p, align 8, !dbg !3863
  %657 = load i8*, i8** %pend, align 8, !dbg !3865
  %cmp1235 = icmp eq i8* %656, %657, !dbg !3866
  br i1 %cmp1235, label %if.then1237, label %if.end1239, !dbg !3867

if.then1237:                                      ; preds = %do.end1234
  %stack1238 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3868
  %658 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1238, align 8, !dbg !3868
  %659 = bitcast %struct.compile_stack_elt_t* %658 to i8*, !dbg !3868
  call void @free(i8* %659), !dbg !3868
  store i32 7, i32* %retval, align 4, !dbg !3868
  br label %return, !dbg !3868

if.end1239:                                       ; preds = %do.end1234
  store i32 0, i32* %ch, align 4, !dbg !3869
  br label %for.cond1240, !dbg !3871

for.cond1240:                                     ; preds = %for.inc, %if.end1239
  %660 = load i32, i32* %ch, align 4, !dbg !3872
  %cmp1241 = icmp slt i32 %660, 256, !dbg !3874
  br i1 %cmp1241, label %for.body, label %for.end1438, !dbg !3875

for.body:                                         ; preds = %for.cond1240
  %661 = load i8, i8* %is_alnum, align 1, !dbg !3876
  %conv1243 = sext i8 %661 to i32, !dbg !3876
  %tobool1244 = icmp ne i32 %conv1243, 0, !dbg !3876
  br i1 %tobool1244, label %land.lhs.true1245, label %lor.lhs.false1252, !dbg !3879

land.lhs.true1245:                                ; preds = %for.body
  %call1246 = call i16** @__ctype_b_loc(), !dbg !3880
  %662 = load i16*, i16** %call1246, align 8, !dbg !3880
  %663 = load i32, i32* %ch, align 4, !dbg !3880
  %idxprom1247 = sext i32 %663 to i64, !dbg !3880
  %arrayidx1248 = getelementptr inbounds i16, i16* %662, i64 %idxprom1247, !dbg !3880
  %664 = load i16, i16* %arrayidx1248, align 2, !dbg !3880
  %conv1249 = zext i16 %664 to i32, !dbg !3880
  %and1250 = and i32 %conv1249, 8, !dbg !3880
  %tobool1251 = icmp ne i32 %and1250, 0, !dbg !3880
  br i1 %tobool1251, label %if.then1282, label %lor.lhs.false1252, !dbg !3881

lor.lhs.false1252:                                ; preds = %land.lhs.true1245, %for.body
  %665 = load i8, i8* %is_alpha, align 1, !dbg !3882
  %conv1253 = sext i8 %665 to i32, !dbg !3882
  %tobool1254 = icmp ne i32 %conv1253, 0, !dbg !3882
  br i1 %tobool1254, label %land.lhs.true1255, label %lor.lhs.false1262, !dbg !3883

land.lhs.true1255:                                ; preds = %lor.lhs.false1252
  %call1256 = call i16** @__ctype_b_loc(), !dbg !3884
  %666 = load i16*, i16** %call1256, align 8, !dbg !3884
  %667 = load i32, i32* %ch, align 4, !dbg !3884
  %idxprom1257 = sext i32 %667 to i64, !dbg !3884
  %arrayidx1258 = getelementptr inbounds i16, i16* %666, i64 %idxprom1257, !dbg !3884
  %668 = load i16, i16* %arrayidx1258, align 2, !dbg !3884
  %conv1259 = zext i16 %668 to i32, !dbg !3884
  %and1260 = and i32 %conv1259, 1024, !dbg !3884
  %tobool1261 = icmp ne i32 %and1260, 0, !dbg !3884
  br i1 %tobool1261, label %if.then1282, label %lor.lhs.false1262, !dbg !3885

lor.lhs.false1262:                                ; preds = %land.lhs.true1255, %lor.lhs.false1252
  %669 = load i8, i8* %is_blank, align 1, !dbg !3886
  %conv1263 = sext i8 %669 to i32, !dbg !3886
  %tobool1264 = icmp ne i32 %conv1263, 0, !dbg !3886
  br i1 %tobool1264, label %land.lhs.true1265, label %lor.lhs.false1272, !dbg !3887

land.lhs.true1265:                                ; preds = %lor.lhs.false1262
  %call1266 = call i16** @__ctype_b_loc(), !dbg !3888
  %670 = load i16*, i16** %call1266, align 8, !dbg !3888
  %671 = load i32, i32* %ch, align 4, !dbg !3888
  %idxprom1267 = sext i32 %671 to i64, !dbg !3888
  %arrayidx1268 = getelementptr inbounds i16, i16* %670, i64 %idxprom1267, !dbg !3888
  %672 = load i16, i16* %arrayidx1268, align 2, !dbg !3888
  %conv1269 = zext i16 %672 to i32, !dbg !3888
  %and1270 = and i32 %conv1269, 1, !dbg !3888
  %tobool1271 = icmp ne i32 %and1270, 0, !dbg !3888
  br i1 %tobool1271, label %if.then1282, label %lor.lhs.false1272, !dbg !3889

lor.lhs.false1272:                                ; preds = %land.lhs.true1265, %lor.lhs.false1262
  %673 = load i8, i8* %is_cntrl, align 1, !dbg !3890
  %conv1273 = sext i8 %673 to i32, !dbg !3890
  %tobool1274 = icmp ne i32 %conv1273, 0, !dbg !3890
  br i1 %tobool1274, label %land.lhs.true1275, label %if.end1295, !dbg !3891

land.lhs.true1275:                                ; preds = %lor.lhs.false1272
  %call1276 = call i16** @__ctype_b_loc(), !dbg !3892
  %674 = load i16*, i16** %call1276, align 8, !dbg !3892
  %675 = load i32, i32* %ch, align 4, !dbg !3892
  %idxprom1277 = sext i32 %675 to i64, !dbg !3892
  %arrayidx1278 = getelementptr inbounds i16, i16* %674, i64 %idxprom1277, !dbg !3892
  %676 = load i16, i16* %arrayidx1278, align 2, !dbg !3892
  %conv1279 = zext i16 %676 to i32, !dbg !3892
  %and1280 = and i32 %conv1279, 2, !dbg !3892
  %tobool1281 = icmp ne i32 %and1280, 0, !dbg !3892
  br i1 %tobool1281, label %if.then1282, label %if.end1295, !dbg !3893

if.then1282:                                      ; preds = %land.lhs.true1275, %land.lhs.true1265, %land.lhs.true1255, %land.lhs.true1245
  %677 = load i32, i32* %ch, align 4, !dbg !3894
  %conv1283 = trunc i32 %677 to i8, !dbg !3894
  %conv1284 = zext i8 %conv1283 to i32, !dbg !3894
  %rem1285 = srem i32 %conv1284, 8, !dbg !3894
  %shl1286 = shl i32 1, %rem1285, !dbg !3894
  %678 = load i8*, i8** %b, align 8, !dbg !3894
  %679 = load i32, i32* %ch, align 4, !dbg !3894
  %conv1287 = trunc i32 %679 to i8, !dbg !3894
  %conv1288 = zext i8 %conv1287 to i32, !dbg !3894
  %div1289 = sdiv i32 %conv1288, 8, !dbg !3894
  %idxprom1290 = sext i32 %div1289 to i64, !dbg !3894
  %arrayidx1291 = getelementptr inbounds i8, i8* %678, i64 %idxprom1290, !dbg !3894
  %680 = load i8, i8* %arrayidx1291, align 1, !dbg !3894
  %conv1292 = zext i8 %680 to i32, !dbg !3894
  %or1293 = or i32 %conv1292, %shl1286, !dbg !3894
  %conv1294 = trunc i32 %or1293 to i8, !dbg !3894
  store i8 %conv1294, i8* %arrayidx1291, align 1, !dbg !3894
  br label %if.end1295, !dbg !3894

if.end1295:                                       ; preds = %if.then1282, %land.lhs.true1275, %lor.lhs.false1272
  %681 = load i8, i8* %is_digit, align 1, !dbg !3895
  %conv1296 = sext i8 %681 to i32, !dbg !3895
  %tobool1297 = icmp ne i32 %conv1296, 0, !dbg !3895
  br i1 %tobool1297, label %land.lhs.true1298, label %lor.lhs.false1305, !dbg !3897

land.lhs.true1298:                                ; preds = %if.end1295
  %call1299 = call i16** @__ctype_b_loc(), !dbg !3898
  %682 = load i16*, i16** %call1299, align 8, !dbg !3898
  %683 = load i32, i32* %ch, align 4, !dbg !3898
  %idxprom1300 = sext i32 %683 to i64, !dbg !3898
  %arrayidx1301 = getelementptr inbounds i16, i16* %682, i64 %idxprom1300, !dbg !3898
  %684 = load i16, i16* %arrayidx1301, align 2, !dbg !3898
  %conv1302 = zext i16 %684 to i32, !dbg !3898
  %and1303 = and i32 %conv1302, 2048, !dbg !3898
  %tobool1304 = icmp ne i32 %and1303, 0, !dbg !3898
  br i1 %tobool1304, label %if.then1335, label %lor.lhs.false1305, !dbg !3899

lor.lhs.false1305:                                ; preds = %land.lhs.true1298, %if.end1295
  %685 = load i8, i8* %is_graph, align 1, !dbg !3900
  %conv1306 = sext i8 %685 to i32, !dbg !3900
  %tobool1307 = icmp ne i32 %conv1306, 0, !dbg !3900
  br i1 %tobool1307, label %land.lhs.true1308, label %lor.lhs.false1315, !dbg !3901

land.lhs.true1308:                                ; preds = %lor.lhs.false1305
  %call1309 = call i16** @__ctype_b_loc(), !dbg !3902
  %686 = load i16*, i16** %call1309, align 8, !dbg !3902
  %687 = load i32, i32* %ch, align 4, !dbg !3902
  %idxprom1310 = sext i32 %687 to i64, !dbg !3902
  %arrayidx1311 = getelementptr inbounds i16, i16* %686, i64 %idxprom1310, !dbg !3902
  %688 = load i16, i16* %arrayidx1311, align 2, !dbg !3902
  %conv1312 = zext i16 %688 to i32, !dbg !3902
  %and1313 = and i32 %conv1312, 32768, !dbg !3902
  %tobool1314 = icmp ne i32 %and1313, 0, !dbg !3902
  br i1 %tobool1314, label %if.then1335, label %lor.lhs.false1315, !dbg !3903

lor.lhs.false1315:                                ; preds = %land.lhs.true1308, %lor.lhs.false1305
  %689 = load i8, i8* %is_lower, align 1, !dbg !3904
  %conv1316 = sext i8 %689 to i32, !dbg !3904
  %tobool1317 = icmp ne i32 %conv1316, 0, !dbg !3904
  br i1 %tobool1317, label %land.lhs.true1318, label %lor.lhs.false1325, !dbg !3905

land.lhs.true1318:                                ; preds = %lor.lhs.false1315
  %call1319 = call i16** @__ctype_b_loc(), !dbg !3906
  %690 = load i16*, i16** %call1319, align 8, !dbg !3906
  %691 = load i32, i32* %ch, align 4, !dbg !3906
  %idxprom1320 = sext i32 %691 to i64, !dbg !3906
  %arrayidx1321 = getelementptr inbounds i16, i16* %690, i64 %idxprom1320, !dbg !3906
  %692 = load i16, i16* %arrayidx1321, align 2, !dbg !3906
  %conv1322 = zext i16 %692 to i32, !dbg !3906
  %and1323 = and i32 %conv1322, 512, !dbg !3906
  %tobool1324 = icmp ne i32 %and1323, 0, !dbg !3906
  br i1 %tobool1324, label %if.then1335, label %lor.lhs.false1325, !dbg !3907

lor.lhs.false1325:                                ; preds = %land.lhs.true1318, %lor.lhs.false1315
  %693 = load i8, i8* %is_print, align 1, !dbg !3908
  %conv1326 = sext i8 %693 to i32, !dbg !3908
  %tobool1327 = icmp ne i32 %conv1326, 0, !dbg !3908
  br i1 %tobool1327, label %land.lhs.true1328, label %if.end1348, !dbg !3909

land.lhs.true1328:                                ; preds = %lor.lhs.false1325
  %call1329 = call i16** @__ctype_b_loc(), !dbg !3910
  %694 = load i16*, i16** %call1329, align 8, !dbg !3910
  %695 = load i32, i32* %ch, align 4, !dbg !3910
  %idxprom1330 = sext i32 %695 to i64, !dbg !3910
  %arrayidx1331 = getelementptr inbounds i16, i16* %694, i64 %idxprom1330, !dbg !3910
  %696 = load i16, i16* %arrayidx1331, align 2, !dbg !3910
  %conv1332 = zext i16 %696 to i32, !dbg !3910
  %and1333 = and i32 %conv1332, 16384, !dbg !3910
  %tobool1334 = icmp ne i32 %and1333, 0, !dbg !3910
  br i1 %tobool1334, label %if.then1335, label %if.end1348, !dbg !3911

if.then1335:                                      ; preds = %land.lhs.true1328, %land.lhs.true1318, %land.lhs.true1308, %land.lhs.true1298
  %697 = load i32, i32* %ch, align 4, !dbg !3912
  %conv1336 = trunc i32 %697 to i8, !dbg !3912
  %conv1337 = zext i8 %conv1336 to i32, !dbg !3912
  %rem1338 = srem i32 %conv1337, 8, !dbg !3912
  %shl1339 = shl i32 1, %rem1338, !dbg !3912
  %698 = load i8*, i8** %b, align 8, !dbg !3912
  %699 = load i32, i32* %ch, align 4, !dbg !3912
  %conv1340 = trunc i32 %699 to i8, !dbg !3912
  %conv1341 = zext i8 %conv1340 to i32, !dbg !3912
  %div1342 = sdiv i32 %conv1341, 8, !dbg !3912
  %idxprom1343 = sext i32 %div1342 to i64, !dbg !3912
  %arrayidx1344 = getelementptr inbounds i8, i8* %698, i64 %idxprom1343, !dbg !3912
  %700 = load i8, i8* %arrayidx1344, align 1, !dbg !3912
  %conv1345 = zext i8 %700 to i32, !dbg !3912
  %or1346 = or i32 %conv1345, %shl1339, !dbg !3912
  %conv1347 = trunc i32 %or1346 to i8, !dbg !3912
  store i8 %conv1347, i8* %arrayidx1344, align 1, !dbg !3912
  br label %if.end1348, !dbg !3912

if.end1348:                                       ; preds = %if.then1335, %land.lhs.true1328, %lor.lhs.false1325
  %701 = load i8, i8* %is_punct, align 1, !dbg !3913
  %conv1349 = sext i8 %701 to i32, !dbg !3913
  %tobool1350 = icmp ne i32 %conv1349, 0, !dbg !3913
  br i1 %tobool1350, label %land.lhs.true1351, label %lor.lhs.false1358, !dbg !3915

land.lhs.true1351:                                ; preds = %if.end1348
  %call1352 = call i16** @__ctype_b_loc(), !dbg !3916
  %702 = load i16*, i16** %call1352, align 8, !dbg !3916
  %703 = load i32, i32* %ch, align 4, !dbg !3916
  %idxprom1353 = sext i32 %703 to i64, !dbg !3916
  %arrayidx1354 = getelementptr inbounds i16, i16* %702, i64 %idxprom1353, !dbg !3916
  %704 = load i16, i16* %arrayidx1354, align 2, !dbg !3916
  %conv1355 = zext i16 %704 to i32, !dbg !3916
  %and1356 = and i32 %conv1355, 4, !dbg !3916
  %tobool1357 = icmp ne i32 %and1356, 0, !dbg !3916
  br i1 %tobool1357, label %if.then1388, label %lor.lhs.false1358, !dbg !3917

lor.lhs.false1358:                                ; preds = %land.lhs.true1351, %if.end1348
  %705 = load i8, i8* %is_space, align 1, !dbg !3918
  %conv1359 = sext i8 %705 to i32, !dbg !3918
  %tobool1360 = icmp ne i32 %conv1359, 0, !dbg !3918
  br i1 %tobool1360, label %land.lhs.true1361, label %lor.lhs.false1368, !dbg !3919

land.lhs.true1361:                                ; preds = %lor.lhs.false1358
  %call1362 = call i16** @__ctype_b_loc(), !dbg !3920
  %706 = load i16*, i16** %call1362, align 8, !dbg !3920
  %707 = load i32, i32* %ch, align 4, !dbg !3920
  %idxprom1363 = sext i32 %707 to i64, !dbg !3920
  %arrayidx1364 = getelementptr inbounds i16, i16* %706, i64 %idxprom1363, !dbg !3920
  %708 = load i16, i16* %arrayidx1364, align 2, !dbg !3920
  %conv1365 = zext i16 %708 to i32, !dbg !3920
  %and1366 = and i32 %conv1365, 8192, !dbg !3920
  %tobool1367 = icmp ne i32 %and1366, 0, !dbg !3920
  br i1 %tobool1367, label %if.then1388, label %lor.lhs.false1368, !dbg !3921

lor.lhs.false1368:                                ; preds = %land.lhs.true1361, %lor.lhs.false1358
  %709 = load i8, i8* %is_upper, align 1, !dbg !3922
  %conv1369 = sext i8 %709 to i32, !dbg !3922
  %tobool1370 = icmp ne i32 %conv1369, 0, !dbg !3922
  br i1 %tobool1370, label %land.lhs.true1371, label %lor.lhs.false1378, !dbg !3923

land.lhs.true1371:                                ; preds = %lor.lhs.false1368
  %call1372 = call i16** @__ctype_b_loc(), !dbg !3924
  %710 = load i16*, i16** %call1372, align 8, !dbg !3924
  %711 = load i32, i32* %ch, align 4, !dbg !3924
  %idxprom1373 = sext i32 %711 to i64, !dbg !3924
  %arrayidx1374 = getelementptr inbounds i16, i16* %710, i64 %idxprom1373, !dbg !3924
  %712 = load i16, i16* %arrayidx1374, align 2, !dbg !3924
  %conv1375 = zext i16 %712 to i32, !dbg !3924
  %and1376 = and i32 %conv1375, 256, !dbg !3924
  %tobool1377 = icmp ne i32 %and1376, 0, !dbg !3924
  br i1 %tobool1377, label %if.then1388, label %lor.lhs.false1378, !dbg !3925

lor.lhs.false1378:                                ; preds = %land.lhs.true1371, %lor.lhs.false1368
  %713 = load i8, i8* %is_xdigit, align 1, !dbg !3926
  %conv1379 = sext i8 %713 to i32, !dbg !3926
  %tobool1380 = icmp ne i32 %conv1379, 0, !dbg !3926
  br i1 %tobool1380, label %land.lhs.true1381, label %if.end1401, !dbg !3927

land.lhs.true1381:                                ; preds = %lor.lhs.false1378
  %call1382 = call i16** @__ctype_b_loc(), !dbg !3928
  %714 = load i16*, i16** %call1382, align 8, !dbg !3928
  %715 = load i32, i32* %ch, align 4, !dbg !3928
  %idxprom1383 = sext i32 %715 to i64, !dbg !3928
  %arrayidx1384 = getelementptr inbounds i16, i16* %714, i64 %idxprom1383, !dbg !3928
  %716 = load i16, i16* %arrayidx1384, align 2, !dbg !3928
  %conv1385 = zext i16 %716 to i32, !dbg !3928
  %and1386 = and i32 %conv1385, 4096, !dbg !3928
  %tobool1387 = icmp ne i32 %and1386, 0, !dbg !3928
  br i1 %tobool1387, label %if.then1388, label %if.end1401, !dbg !3929

if.then1388:                                      ; preds = %land.lhs.true1381, %land.lhs.true1371, %land.lhs.true1361, %land.lhs.true1351
  %717 = load i32, i32* %ch, align 4, !dbg !3930
  %conv1389 = trunc i32 %717 to i8, !dbg !3930
  %conv1390 = zext i8 %conv1389 to i32, !dbg !3930
  %rem1391 = srem i32 %conv1390, 8, !dbg !3930
  %shl1392 = shl i32 1, %rem1391, !dbg !3930
  %718 = load i8*, i8** %b, align 8, !dbg !3930
  %719 = load i32, i32* %ch, align 4, !dbg !3930
  %conv1393 = trunc i32 %719 to i8, !dbg !3930
  %conv1394 = zext i8 %conv1393 to i32, !dbg !3930
  %div1395 = sdiv i32 %conv1394, 8, !dbg !3930
  %idxprom1396 = sext i32 %div1395 to i64, !dbg !3930
  %arrayidx1397 = getelementptr inbounds i8, i8* %718, i64 %idxprom1396, !dbg !3930
  %720 = load i8, i8* %arrayidx1397, align 1, !dbg !3930
  %conv1398 = zext i8 %720 to i32, !dbg !3930
  %or1399 = or i32 %conv1398, %shl1392, !dbg !3930
  %conv1400 = trunc i32 %or1399 to i8, !dbg !3930
  store i8 %conv1400, i8* %arrayidx1397, align 1, !dbg !3930
  br label %if.end1401, !dbg !3930

if.end1401:                                       ; preds = %if.then1388, %land.lhs.true1381, %lor.lhs.false1378
  %721 = load i8*, i8** %translate, align 8, !dbg !3931
  %tobool1402 = icmp ne i8* %721, null, !dbg !3931
  br i1 %tobool1402, label %land.lhs.true1403, label %if.end1436, !dbg !3933

land.lhs.true1403:                                ; preds = %if.end1401
  %722 = load i8, i8* %is_upper, align 1, !dbg !3934
  %conv1404 = sext i8 %722 to i32, !dbg !3934
  %tobool1405 = icmp ne i32 %conv1404, 0, !dbg !3934
  br i1 %tobool1405, label %land.lhs.true1409, label %lor.lhs.false1406, !dbg !3935

lor.lhs.false1406:                                ; preds = %land.lhs.true1403
  %723 = load i8, i8* %is_lower, align 1, !dbg !3936
  %conv1407 = sext i8 %723 to i32, !dbg !3936
  %tobool1408 = icmp ne i32 %conv1407, 0, !dbg !3936
  br i1 %tobool1408, label %land.lhs.true1409, label %if.end1436, !dbg !3937

land.lhs.true1409:                                ; preds = %lor.lhs.false1406, %land.lhs.true1403
  %call1410 = call i16** @__ctype_b_loc(), !dbg !3938
  %724 = load i16*, i16** %call1410, align 8, !dbg !3938
  %725 = load i32, i32* %ch, align 4, !dbg !3938
  %idxprom1411 = sext i32 %725 to i64, !dbg !3938
  %arrayidx1412 = getelementptr inbounds i16, i16* %724, i64 %idxprom1411, !dbg !3938
  %726 = load i16, i16* %arrayidx1412, align 2, !dbg !3938
  %conv1413 = zext i16 %726 to i32, !dbg !3938
  %and1414 = and i32 %conv1413, 256, !dbg !3938
  %tobool1415 = icmp ne i32 %and1414, 0, !dbg !3938
  br i1 %tobool1415, label %if.then1423, label %lor.lhs.false1416, !dbg !3939

lor.lhs.false1416:                                ; preds = %land.lhs.true1409
  %call1417 = call i16** @__ctype_b_loc(), !dbg !3940
  %727 = load i16*, i16** %call1417, align 8, !dbg !3940
  %728 = load i32, i32* %ch, align 4, !dbg !3940
  %idxprom1418 = sext i32 %728 to i64, !dbg !3940
  %arrayidx1419 = getelementptr inbounds i16, i16* %727, i64 %idxprom1418, !dbg !3940
  %729 = load i16, i16* %arrayidx1419, align 2, !dbg !3940
  %conv1420 = zext i16 %729 to i32, !dbg !3940
  %and1421 = and i32 %conv1420, 512, !dbg !3940
  %tobool1422 = icmp ne i32 %and1421, 0, !dbg !3940
  br i1 %tobool1422, label %if.then1423, label %if.end1436, !dbg !3941

if.then1423:                                      ; preds = %lor.lhs.false1416, %land.lhs.true1409
  %730 = load i32, i32* %ch, align 4, !dbg !3942
  %conv1424 = trunc i32 %730 to i8, !dbg !3942
  %conv1425 = zext i8 %conv1424 to i32, !dbg !3942
  %rem1426 = srem i32 %conv1425, 8, !dbg !3942
  %shl1427 = shl i32 1, %rem1426, !dbg !3942
  %731 = load i8*, i8** %b, align 8, !dbg !3942
  %732 = load i32, i32* %ch, align 4, !dbg !3942
  %conv1428 = trunc i32 %732 to i8, !dbg !3942
  %conv1429 = zext i8 %conv1428 to i32, !dbg !3942
  %div1430 = sdiv i32 %conv1429, 8, !dbg !3942
  %idxprom1431 = sext i32 %div1430 to i64, !dbg !3942
  %arrayidx1432 = getelementptr inbounds i8, i8* %731, i64 %idxprom1431, !dbg !3942
  %733 = load i8, i8* %arrayidx1432, align 1, !dbg !3942
  %conv1433 = zext i8 %733 to i32, !dbg !3942
  %or1434 = or i32 %conv1433, %shl1427, !dbg !3942
  %conv1435 = trunc i32 %or1434 to i8, !dbg !3942
  store i8 %conv1435, i8* %arrayidx1432, align 1, !dbg !3942
  br label %if.end1436, !dbg !3942

if.end1436:                                       ; preds = %if.then1423, %lor.lhs.false1416, %lor.lhs.false1406, %if.end1401
  br label %for.inc, !dbg !3943

for.inc:                                          ; preds = %if.end1436
  %734 = load i32, i32* %ch, align 4, !dbg !3944
  %inc1437 = add nsw i32 %734, 1, !dbg !3944
  store i32 %inc1437, i32* %ch, align 4, !dbg !3944
  br label %for.cond1240, !dbg !3945, !llvm.loop !3946

for.end1438:                                      ; preds = %for.cond1240
  store i8 1, i8* %had_char_class, align 1, !dbg !3948
  br label %if.end1454, !dbg !3949

if.else1439:                                      ; preds = %land.lhs.true1097, %for.end1091
  %735 = load i8, i8* %c1, align 1, !dbg !3950
  %inc1440 = add i8 %735, 1, !dbg !3950
  store i8 %inc1440, i8* %c1, align 1, !dbg !3950
  br label %while.cond1441, !dbg !3952

while.cond1441:                                   ; preds = %while.body1443, %if.else1439
  %736 = load i8, i8* %c1, align 1, !dbg !3953
  %dec = add i8 %736, -1, !dbg !3953
  store i8 %dec, i8* %c1, align 1, !dbg !3953
  %tobool1442 = icmp ne i8 %736, 0, !dbg !3952
  br i1 %tobool1442, label %while.body1443, label %while.end1445, !dbg !3952

while.body1443:                                   ; preds = %while.cond1441
  %737 = load i8*, i8** %p, align 8, !dbg !3954
  %incdec.ptr1444 = getelementptr inbounds i8, i8* %737, i32 -1, !dbg !3954
  store i8* %incdec.ptr1444, i8** %p, align 8, !dbg !3954
  br label %while.cond1441, !dbg !3952, !llvm.loop !3955

while.end1445:                                    ; preds = %while.cond1441
  %738 = load i8*, i8** %b, align 8, !dbg !3956
  %arrayidx1446 = getelementptr inbounds i8, i8* %738, i64 11, !dbg !3956
  %739 = load i8, i8* %arrayidx1446, align 1, !dbg !3956
  %conv1447 = zext i8 %739 to i32, !dbg !3956
  %or1448 = or i32 %conv1447, 8, !dbg !3956
  %conv1449 = trunc i32 %or1448 to i8, !dbg !3956
  store i8 %conv1449, i8* %arrayidx1446, align 1, !dbg !3956
  %740 = load i8*, i8** %b, align 8, !dbg !3957
  %arrayidx1450 = getelementptr inbounds i8, i8* %740, i64 7, !dbg !3957
  %741 = load i8, i8* %arrayidx1450, align 1, !dbg !3957
  %conv1451 = zext i8 %741 to i32, !dbg !3957
  %or1452 = or i32 %conv1451, 4, !dbg !3957
  %conv1453 = trunc i32 %or1452 to i8, !dbg !3957
  store i8 %conv1453, i8* %arrayidx1450, align 1, !dbg !3957
  store i32 58, i32* %range_start, align 4, !dbg !3958
  store i8 0, i8* %had_char_class, align 1, !dbg !3959
  br label %if.end1454

if.end1454:                                       ; preds = %while.end1445, %for.end1438
  br label %if.end1728, !dbg !3960

if.else1455:                                      ; preds = %land.lhs.true1035, %land.lhs.true1031, %if.else1028
  %742 = load i64, i64* %syntax.addr, align 8, !dbg !3961
  %and1456 = and i64 %742, 4, !dbg !3963
  %tobool1457 = icmp ne i64 %and1456, 0, !dbg !3963
  br i1 %tobool1457, label %land.lhs.true1458, label %if.else1583, !dbg !3964

land.lhs.true1458:                                ; preds = %if.else1455
  %743 = load i8, i8* %c, align 1, !dbg !3965
  %conv1459 = zext i8 %743 to i32, !dbg !3965
  %cmp1460 = icmp eq i32 %conv1459, 91, !dbg !3966
  br i1 %cmp1460, label %land.lhs.true1462, label %if.else1583, !dbg !3967

land.lhs.true1462:                                ; preds = %land.lhs.true1458
  %744 = load i8*, i8** %p, align 8, !dbg !3968
  %745 = load i8, i8* %744, align 1, !dbg !3969
  %conv1463 = sext i8 %745 to i32, !dbg !3969
  %cmp1464 = icmp eq i32 %conv1463, 61, !dbg !3970
  br i1 %cmp1464, label %if.then1466, label %if.else1583, !dbg !3971

if.then1466:                                      ; preds = %land.lhs.true1462
  call void @llvm.dbg.declare(metadata [17 x i8]* %str1467, metadata !3972, metadata !DIExpression()), !dbg !3975
  br label %do.body1468, !dbg !3976

do.body1468:                                      ; preds = %if.then1466
  %746 = load i8*, i8** %p, align 8, !dbg !3977
  %747 = load i8*, i8** %pend, align 8, !dbg !3977
  %cmp1469 = icmp eq i8* %746, %747, !dbg !3977
  br i1 %cmp1469, label %if.then1471, label %if.end1472, !dbg !3980

if.then1471:                                      ; preds = %do.body1468
  store i32 14, i32* %retval, align 4, !dbg !3977
  br label %return, !dbg !3977

if.end1472:                                       ; preds = %do.body1468
  %748 = load i8*, i8** %p, align 8, !dbg !3980
  %incdec.ptr1473 = getelementptr inbounds i8, i8* %748, i32 1, !dbg !3980
  store i8* %incdec.ptr1473, i8** %p, align 8, !dbg !3980
  %749 = load i8, i8* %748, align 1, !dbg !3980
  store i8 %749, i8* %c, align 1, !dbg !3980
  %750 = load i8*, i8** %translate, align 8, !dbg !3981
  %tobool1474 = icmp ne i8* %750, null, !dbg !3981
  br i1 %tobool1474, label %if.then1475, label %if.end1478, !dbg !3980

if.then1475:                                      ; preds = %if.end1472
  %751 = load i8*, i8** %translate, align 8, !dbg !3981
  %752 = load i8, i8* %c, align 1, !dbg !3981
  %idxprom1476 = zext i8 %752 to i64, !dbg !3981
  %arrayidx1477 = getelementptr inbounds i8, i8* %751, i64 %idxprom1476, !dbg !3981
  %753 = load i8, i8* %arrayidx1477, align 1, !dbg !3981
  store i8 %753, i8* %c, align 1, !dbg !3981
  br label %if.end1478, !dbg !3981

if.end1478:                                       ; preds = %if.then1475, %if.end1472
  br label %do.end1479, !dbg !3980

do.end1479:                                       ; preds = %if.end1478
  store i8 0, i8* %c1, align 1, !dbg !3983
  %754 = load i8*, i8** %p, align 8, !dbg !3984
  %755 = load i8*, i8** %pend, align 8, !dbg !3986
  %cmp1480 = icmp eq i8* %754, %755, !dbg !3987
  br i1 %cmp1480, label %if.then1482, label %if.end1484, !dbg !3988

if.then1482:                                      ; preds = %do.end1479
  %stack1483 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !3989
  %756 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1483, align 8, !dbg !3989
  %757 = bitcast %struct.compile_stack_elt_t* %756 to i8*, !dbg !3989
  call void @free(i8* %757), !dbg !3989
  store i32 7, i32* %retval, align 4, !dbg !3989
  br label %return, !dbg !3989

if.end1484:                                       ; preds = %do.end1479
  br label %for.cond1485, !dbg !3990

for.cond1485:                                     ; preds = %if.end1519, %if.end1484
  br label %do.body1486, !dbg !3991

do.body1486:                                      ; preds = %for.cond1485
  %758 = load i8*, i8** %p, align 8, !dbg !3995
  %759 = load i8*, i8** %pend, align 8, !dbg !3995
  %cmp1487 = icmp eq i8* %758, %759, !dbg !3995
  br i1 %cmp1487, label %if.then1489, label %if.end1490, !dbg !3998

if.then1489:                                      ; preds = %do.body1486
  store i32 14, i32* %retval, align 4, !dbg !3995
  br label %return, !dbg !3995

if.end1490:                                       ; preds = %do.body1486
  %760 = load i8*, i8** %p, align 8, !dbg !3998
  %incdec.ptr1491 = getelementptr inbounds i8, i8* %760, i32 1, !dbg !3998
  store i8* %incdec.ptr1491, i8** %p, align 8, !dbg !3998
  %761 = load i8, i8* %760, align 1, !dbg !3998
  store i8 %761, i8* %c, align 1, !dbg !3998
  %762 = load i8*, i8** %translate, align 8, !dbg !3999
  %tobool1492 = icmp ne i8* %762, null, !dbg !3999
  br i1 %tobool1492, label %if.then1493, label %if.end1496, !dbg !3998

if.then1493:                                      ; preds = %if.end1490
  %763 = load i8*, i8** %translate, align 8, !dbg !3999
  %764 = load i8, i8* %c, align 1, !dbg !3999
  %idxprom1494 = zext i8 %764 to i64, !dbg !3999
  %arrayidx1495 = getelementptr inbounds i8, i8* %763, i64 %idxprom1494, !dbg !3999
  %765 = load i8, i8* %arrayidx1495, align 1, !dbg !3999
  store i8 %765, i8* %c, align 1, !dbg !3999
  br label %if.end1496, !dbg !3999

if.end1496:                                       ; preds = %if.then1493, %if.end1490
  br label %do.end1497, !dbg !3998

do.end1497:                                       ; preds = %if.end1496
  %766 = load i8, i8* %c, align 1, !dbg !4001
  %conv1498 = zext i8 %766 to i32, !dbg !4001
  %cmp1499 = icmp eq i32 %conv1498, 61, !dbg !4003
  br i1 %cmp1499, label %land.lhs.true1501, label %lor.lhs.false1505, !dbg !4004

land.lhs.true1501:                                ; preds = %do.end1497
  %767 = load i8*, i8** %p, align 8, !dbg !4005
  %768 = load i8, i8* %767, align 1, !dbg !4006
  %conv1502 = sext i8 %768 to i32, !dbg !4006
  %cmp1503 = icmp eq i32 %conv1502, 93, !dbg !4007
  br i1 %cmp1503, label %if.then1508, label %lor.lhs.false1505, !dbg !4008

lor.lhs.false1505:                                ; preds = %land.lhs.true1501, %do.end1497
  %769 = load i8*, i8** %p, align 8, !dbg !4009
  %770 = load i8*, i8** %pend, align 8, !dbg !4010
  %cmp1506 = icmp eq i8* %769, %770, !dbg !4011
  br i1 %cmp1506, label %if.then1508, label %if.end1509, !dbg !4012

if.then1508:                                      ; preds = %lor.lhs.false1505, %land.lhs.true1501
  br label %for.end1520, !dbg !4013

if.end1509:                                       ; preds = %lor.lhs.false1505
  %771 = load i8, i8* %c1, align 1, !dbg !4014
  %conv1510 = zext i8 %771 to i32, !dbg !4014
  %cmp1511 = icmp slt i32 %conv1510, 16, !dbg !4016
  br i1 %cmp1511, label %if.then1513, label %if.else1517, !dbg !4017

if.then1513:                                      ; preds = %if.end1509
  %772 = load i8, i8* %c, align 1, !dbg !4018
  %773 = load i8, i8* %c1, align 1, !dbg !4019
  %inc1514 = add i8 %773, 1, !dbg !4019
  store i8 %inc1514, i8* %c1, align 1, !dbg !4019
  %idxprom1515 = zext i8 %773 to i64, !dbg !4020
  %arrayidx1516 = getelementptr inbounds [17 x i8], [17 x i8]* %str1467, i64 0, i64 %idxprom1515, !dbg !4020
  store i8 %772, i8* %arrayidx1516, align 1, !dbg !4021
  br label %if.end1519, !dbg !4020

if.else1517:                                      ; preds = %if.end1509
  %arrayidx1518 = getelementptr inbounds [17 x i8], [17 x i8]* %str1467, i64 0, i64 0, !dbg !4022
  store i8 0, i8* %arrayidx1518, align 16, !dbg !4023
  br label %if.end1519

if.end1519:                                       ; preds = %if.else1517, %if.then1513
  br label %for.cond1485, !dbg !4024, !llvm.loop !4025

for.end1520:                                      ; preds = %if.then1508
  %774 = load i8, i8* %c1, align 1, !dbg !4028
  %idxprom1521 = zext i8 %774 to i64, !dbg !4029
  %arrayidx1522 = getelementptr inbounds [17 x i8], [17 x i8]* %str1467, i64 0, i64 %idxprom1521, !dbg !4029
  store i8 0, i8* %arrayidx1522, align 1, !dbg !4030
  %775 = load i8, i8* %c, align 1, !dbg !4031
  %conv1523 = zext i8 %775 to i32, !dbg !4031
  %cmp1524 = icmp eq i32 %conv1523, 61, !dbg !4033
  br i1 %cmp1524, label %land.lhs.true1526, label %if.else1566, !dbg !4034

land.lhs.true1526:                                ; preds = %for.end1520
  %776 = load i8*, i8** %p, align 8, !dbg !4035
  %777 = load i8, i8* %776, align 1, !dbg !4036
  %conv1527 = sext i8 %777 to i32, !dbg !4036
  %cmp1528 = icmp eq i32 %conv1527, 93, !dbg !4037
  br i1 %cmp1528, label %land.lhs.true1530, label %if.else1566, !dbg !4038

land.lhs.true1530:                                ; preds = %land.lhs.true1526
  %arrayidx1531 = getelementptr inbounds [17 x i8], [17 x i8]* %str1467, i64 0, i64 0, !dbg !4039
  %778 = load i8, i8* %arrayidx1531, align 16, !dbg !4039
  %conv1532 = zext i8 %778 to i32, !dbg !4039
  %cmp1533 = icmp ne i32 %conv1532, 0, !dbg !4040
  br i1 %cmp1533, label %if.then1535, label %if.else1566, !dbg !4041

if.then1535:                                      ; preds = %land.lhs.true1530
  %779 = load i8, i8* %c1, align 1, !dbg !4042
  %conv1536 = zext i8 %779 to i32, !dbg !4042
  %cmp1537 = icmp ne i32 %conv1536, 1, !dbg !4046
  br i1 %cmp1537, label %if.then1539, label %if.end1541, !dbg !4047

if.then1539:                                      ; preds = %if.then1535
  %stack1540 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4048
  %780 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1540, align 8, !dbg !4048
  %781 = bitcast %struct.compile_stack_elt_t* %780 to i8*, !dbg !4048
  call void @free(i8* %781), !dbg !4048
  store i32 3, i32* %retval, align 4, !dbg !4048
  br label %return, !dbg !4048

if.end1541:                                       ; preds = %if.then1535
  br label %do.body1542, !dbg !4049

do.body1542:                                      ; preds = %if.end1541
  %782 = load i8*, i8** %p, align 8, !dbg !4050
  %783 = load i8*, i8** %pend, align 8, !dbg !4050
  %cmp1543 = icmp eq i8* %782, %783, !dbg !4050
  br i1 %cmp1543, label %if.then1545, label %if.end1546, !dbg !4053

if.then1545:                                      ; preds = %do.body1542
  store i32 14, i32* %retval, align 4, !dbg !4050
  br label %return, !dbg !4050

if.end1546:                                       ; preds = %do.body1542
  %784 = load i8*, i8** %p, align 8, !dbg !4053
  %incdec.ptr1547 = getelementptr inbounds i8, i8* %784, i32 1, !dbg !4053
  store i8* %incdec.ptr1547, i8** %p, align 8, !dbg !4053
  %785 = load i8, i8* %784, align 1, !dbg !4053
  store i8 %785, i8* %c, align 1, !dbg !4053
  %786 = load i8*, i8** %translate, align 8, !dbg !4054
  %tobool1548 = icmp ne i8* %786, null, !dbg !4054
  br i1 %tobool1548, label %if.then1549, label %if.end1552, !dbg !4053

if.then1549:                                      ; preds = %if.end1546
  %787 = load i8*, i8** %translate, align 8, !dbg !4054
  %788 = load i8, i8* %c, align 1, !dbg !4054
  %idxprom1550 = zext i8 %788 to i64, !dbg !4054
  %arrayidx1551 = getelementptr inbounds i8, i8* %787, i64 %idxprom1550, !dbg !4054
  %789 = load i8, i8* %arrayidx1551, align 1, !dbg !4054
  store i8 %789, i8* %c, align 1, !dbg !4054
  br label %if.end1552, !dbg !4054

if.end1552:                                       ; preds = %if.then1549, %if.end1546
  br label %do.end1553, !dbg !4053

do.end1553:                                       ; preds = %if.end1552
  %arrayidx1554 = getelementptr inbounds [17 x i8], [17 x i8]* %str1467, i64 0, i64 0, !dbg !4056
  %790 = load i8, i8* %arrayidx1554, align 16, !dbg !4056
  %conv1555 = zext i8 %790 to i32, !dbg !4056
  %rem1556 = srem i32 %conv1555, 8, !dbg !4056
  %shl1557 = shl i32 1, %rem1556, !dbg !4056
  %791 = load i8*, i8** %b, align 8, !dbg !4056
  %arrayidx1558 = getelementptr inbounds [17 x i8], [17 x i8]* %str1467, i64 0, i64 0, !dbg !4056
  %792 = load i8, i8* %arrayidx1558, align 16, !dbg !4056
  %conv1559 = zext i8 %792 to i32, !dbg !4056
  %div1560 = sdiv i32 %conv1559, 8, !dbg !4056
  %idxprom1561 = sext i32 %div1560 to i64, !dbg !4056
  %arrayidx1562 = getelementptr inbounds i8, i8* %791, i64 %idxprom1561, !dbg !4056
  %793 = load i8, i8* %arrayidx1562, align 1, !dbg !4056
  %conv1563 = zext i8 %793 to i32, !dbg !4056
  %or1564 = or i32 %conv1563, %shl1557, !dbg !4056
  %conv1565 = trunc i32 %or1564 to i8, !dbg !4056
  store i8 %conv1565, i8* %arrayidx1562, align 1, !dbg !4056
  store i8 1, i8* %had_char_class, align 1, !dbg !4057
  br label %if.end1582, !dbg !4058

if.else1566:                                      ; preds = %land.lhs.true1530, %land.lhs.true1526, %for.end1520
  %794 = load i8, i8* %c1, align 1, !dbg !4059
  %inc1567 = add i8 %794, 1, !dbg !4059
  store i8 %inc1567, i8* %c1, align 1, !dbg !4059
  br label %while.cond1568, !dbg !4061

while.cond1568:                                   ; preds = %while.body1571, %if.else1566
  %795 = load i8, i8* %c1, align 1, !dbg !4062
  %dec1569 = add i8 %795, -1, !dbg !4062
  store i8 %dec1569, i8* %c1, align 1, !dbg !4062
  %tobool1570 = icmp ne i8 %795, 0, !dbg !4061
  br i1 %tobool1570, label %while.body1571, label %while.end1573, !dbg !4061

while.body1571:                                   ; preds = %while.cond1568
  %796 = load i8*, i8** %p, align 8, !dbg !4063
  %incdec.ptr1572 = getelementptr inbounds i8, i8* %796, i32 -1, !dbg !4063
  store i8* %incdec.ptr1572, i8** %p, align 8, !dbg !4063
  br label %while.cond1568, !dbg !4061, !llvm.loop !4064

while.end1573:                                    ; preds = %while.cond1568
  %797 = load i8*, i8** %b, align 8, !dbg !4065
  %arrayidx1574 = getelementptr inbounds i8, i8* %797, i64 11, !dbg !4065
  %798 = load i8, i8* %arrayidx1574, align 1, !dbg !4065
  %conv1575 = zext i8 %798 to i32, !dbg !4065
  %or1576 = or i32 %conv1575, 8, !dbg !4065
  %conv1577 = trunc i32 %or1576 to i8, !dbg !4065
  store i8 %conv1577, i8* %arrayidx1574, align 1, !dbg !4065
  %799 = load i8*, i8** %b, align 8, !dbg !4066
  %arrayidx1578 = getelementptr inbounds i8, i8* %799, i64 7, !dbg !4066
  %800 = load i8, i8* %arrayidx1578, align 1, !dbg !4066
  %conv1579 = zext i8 %800 to i32, !dbg !4066
  %or1580 = or i32 %conv1579, 32, !dbg !4066
  %conv1581 = trunc i32 %or1580 to i8, !dbg !4066
  store i8 %conv1581, i8* %arrayidx1578, align 1, !dbg !4066
  store i32 61, i32* %range_start, align 4, !dbg !4067
  store i8 0, i8* %had_char_class, align 1, !dbg !4068
  br label %if.end1582

if.end1582:                                       ; preds = %while.end1573, %do.end1553
  br label %if.end1727, !dbg !4069

if.else1583:                                      ; preds = %land.lhs.true1462, %land.lhs.true1458, %if.else1455
  %801 = load i64, i64* %syntax.addr, align 8, !dbg !4070
  %and1584 = and i64 %801, 4, !dbg !4072
  %tobool1585 = icmp ne i64 %and1584, 0, !dbg !4072
  br i1 %tobool1585, label %land.lhs.true1586, label %if.else1714, !dbg !4073

land.lhs.true1586:                                ; preds = %if.else1583
  %802 = load i8, i8* %c, align 1, !dbg !4074
  %conv1587 = zext i8 %802 to i32, !dbg !4074
  %cmp1588 = icmp eq i32 %conv1587, 91, !dbg !4075
  br i1 %cmp1588, label %land.lhs.true1590, label %if.else1714, !dbg !4076

land.lhs.true1590:                                ; preds = %land.lhs.true1586
  %803 = load i8*, i8** %p, align 8, !dbg !4077
  %804 = load i8, i8* %803, align 1, !dbg !4078
  %conv1591 = sext i8 %804 to i32, !dbg !4078
  %cmp1592 = icmp eq i32 %conv1591, 46, !dbg !4079
  br i1 %cmp1592, label %if.then1594, label %if.else1714, !dbg !4080

if.then1594:                                      ; preds = %land.lhs.true1590
  call void @llvm.dbg.declare(metadata [128 x i8]* %str1595, metadata !4081, metadata !DIExpression()), !dbg !4086
  br label %do.body1596, !dbg !4087

do.body1596:                                      ; preds = %if.then1594
  %805 = load i8*, i8** %p, align 8, !dbg !4088
  %806 = load i8*, i8** %pend, align 8, !dbg !4088
  %cmp1597 = icmp eq i8* %805, %806, !dbg !4088
  br i1 %cmp1597, label %if.then1599, label %if.end1600, !dbg !4091

if.then1599:                                      ; preds = %do.body1596
  store i32 14, i32* %retval, align 4, !dbg !4088
  br label %return, !dbg !4088

if.end1600:                                       ; preds = %do.body1596
  %807 = load i8*, i8** %p, align 8, !dbg !4091
  %incdec.ptr1601 = getelementptr inbounds i8, i8* %807, i32 1, !dbg !4091
  store i8* %incdec.ptr1601, i8** %p, align 8, !dbg !4091
  %808 = load i8, i8* %807, align 1, !dbg !4091
  store i8 %808, i8* %c, align 1, !dbg !4091
  %809 = load i8*, i8** %translate, align 8, !dbg !4092
  %tobool1602 = icmp ne i8* %809, null, !dbg !4092
  br i1 %tobool1602, label %if.then1603, label %if.end1606, !dbg !4091

if.then1603:                                      ; preds = %if.end1600
  %810 = load i8*, i8** %translate, align 8, !dbg !4092
  %811 = load i8, i8* %c, align 1, !dbg !4092
  %idxprom1604 = zext i8 %811 to i64, !dbg !4092
  %arrayidx1605 = getelementptr inbounds i8, i8* %810, i64 %idxprom1604, !dbg !4092
  %812 = load i8, i8* %arrayidx1605, align 1, !dbg !4092
  store i8 %812, i8* %c, align 1, !dbg !4092
  br label %if.end1606, !dbg !4092

if.end1606:                                       ; preds = %if.then1603, %if.end1600
  br label %do.end1607, !dbg !4091

do.end1607:                                       ; preds = %if.end1606
  store i8 0, i8* %c1, align 1, !dbg !4094
  %813 = load i8*, i8** %p, align 8, !dbg !4095
  %814 = load i8*, i8** %pend, align 8, !dbg !4097
  %cmp1608 = icmp eq i8* %813, %814, !dbg !4098
  br i1 %cmp1608, label %if.then1610, label %if.end1612, !dbg !4099

if.then1610:                                      ; preds = %do.end1607
  %stack1611 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4100
  %815 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1611, align 8, !dbg !4100
  %816 = bitcast %struct.compile_stack_elt_t* %815 to i8*, !dbg !4100
  call void @free(i8* %816), !dbg !4100
  store i32 7, i32* %retval, align 4, !dbg !4100
  br label %return, !dbg !4100

if.end1612:                                       ; preds = %do.end1607
  br label %for.cond1613, !dbg !4101

for.cond1613:                                     ; preds = %if.end1647, %if.end1612
  br label %do.body1614, !dbg !4102

do.body1614:                                      ; preds = %for.cond1613
  %817 = load i8*, i8** %p, align 8, !dbg !4106
  %818 = load i8*, i8** %pend, align 8, !dbg !4106
  %cmp1615 = icmp eq i8* %817, %818, !dbg !4106
  br i1 %cmp1615, label %if.then1617, label %if.end1618, !dbg !4109

if.then1617:                                      ; preds = %do.body1614
  store i32 14, i32* %retval, align 4, !dbg !4106
  br label %return, !dbg !4106

if.end1618:                                       ; preds = %do.body1614
  %819 = load i8*, i8** %p, align 8, !dbg !4109
  %incdec.ptr1619 = getelementptr inbounds i8, i8* %819, i32 1, !dbg !4109
  store i8* %incdec.ptr1619, i8** %p, align 8, !dbg !4109
  %820 = load i8, i8* %819, align 1, !dbg !4109
  store i8 %820, i8* %c, align 1, !dbg !4109
  %821 = load i8*, i8** %translate, align 8, !dbg !4110
  %tobool1620 = icmp ne i8* %821, null, !dbg !4110
  br i1 %tobool1620, label %if.then1621, label %if.end1624, !dbg !4109

if.then1621:                                      ; preds = %if.end1618
  %822 = load i8*, i8** %translate, align 8, !dbg !4110
  %823 = load i8, i8* %c, align 1, !dbg !4110
  %idxprom1622 = zext i8 %823 to i64, !dbg !4110
  %arrayidx1623 = getelementptr inbounds i8, i8* %822, i64 %idxprom1622, !dbg !4110
  %824 = load i8, i8* %arrayidx1623, align 1, !dbg !4110
  store i8 %824, i8* %c, align 1, !dbg !4110
  br label %if.end1624, !dbg !4110

if.end1624:                                       ; preds = %if.then1621, %if.end1618
  br label %do.end1625, !dbg !4109

do.end1625:                                       ; preds = %if.end1624
  %825 = load i8, i8* %c, align 1, !dbg !4112
  %conv1626 = zext i8 %825 to i32, !dbg !4112
  %cmp1627 = icmp eq i32 %conv1626, 46, !dbg !4114
  br i1 %cmp1627, label %land.lhs.true1629, label %lor.lhs.false1633, !dbg !4115

land.lhs.true1629:                                ; preds = %do.end1625
  %826 = load i8*, i8** %p, align 8, !dbg !4116
  %827 = load i8, i8* %826, align 1, !dbg !4117
  %conv1630 = sext i8 %827 to i32, !dbg !4117
  %cmp1631 = icmp eq i32 %conv1630, 93, !dbg !4118
  br i1 %cmp1631, label %if.then1636, label %lor.lhs.false1633, !dbg !4119

lor.lhs.false1633:                                ; preds = %land.lhs.true1629, %do.end1625
  %828 = load i8*, i8** %p, align 8, !dbg !4120
  %829 = load i8*, i8** %pend, align 8, !dbg !4121
  %cmp1634 = icmp eq i8* %828, %829, !dbg !4122
  br i1 %cmp1634, label %if.then1636, label %if.end1637, !dbg !4123

if.then1636:                                      ; preds = %lor.lhs.false1633, %land.lhs.true1629
  br label %for.end1648, !dbg !4124

if.end1637:                                       ; preds = %lor.lhs.false1633
  %830 = load i8, i8* %c1, align 1, !dbg !4125
  %conv1638 = zext i8 %830 to i64, !dbg !4125
  %cmp1639 = icmp ult i64 %conv1638, 128, !dbg !4127
  br i1 %cmp1639, label %if.then1641, label %if.else1645, !dbg !4128

if.then1641:                                      ; preds = %if.end1637
  %831 = load i8, i8* %c, align 1, !dbg !4129
  %832 = load i8, i8* %c1, align 1, !dbg !4130
  %inc1642 = add i8 %832, 1, !dbg !4130
  store i8 %inc1642, i8* %c1, align 1, !dbg !4130
  %idxprom1643 = zext i8 %832 to i64, !dbg !4131
  %arrayidx1644 = getelementptr inbounds [128 x i8], [128 x i8]* %str1595, i64 0, i64 %idxprom1643, !dbg !4131
  store i8 %831, i8* %arrayidx1644, align 1, !dbg !4132
  br label %if.end1647, !dbg !4131

if.else1645:                                      ; preds = %if.end1637
  %arrayidx1646 = getelementptr inbounds [128 x i8], [128 x i8]* %str1595, i64 0, i64 0, !dbg !4133
  store i8 0, i8* %arrayidx1646, align 16, !dbg !4134
  br label %if.end1647

if.end1647:                                       ; preds = %if.else1645, %if.then1641
  br label %for.cond1613, !dbg !4135, !llvm.loop !4136

for.end1648:                                      ; preds = %if.then1636
  %833 = load i8, i8* %c1, align 1, !dbg !4139
  %idxprom1649 = zext i8 %833 to i64, !dbg !4140
  %arrayidx1650 = getelementptr inbounds [128 x i8], [128 x i8]* %str1595, i64 0, i64 %idxprom1649, !dbg !4140
  store i8 0, i8* %arrayidx1650, align 1, !dbg !4141
  %834 = load i8, i8* %c, align 1, !dbg !4142
  %conv1651 = zext i8 %834 to i32, !dbg !4142
  %cmp1652 = icmp eq i32 %conv1651, 46, !dbg !4144
  br i1 %cmp1652, label %land.lhs.true1654, label %if.else1697, !dbg !4145

land.lhs.true1654:                                ; preds = %for.end1648
  %835 = load i8*, i8** %p, align 8, !dbg !4146
  %836 = load i8, i8* %835, align 1, !dbg !4147
  %conv1655 = sext i8 %836 to i32, !dbg !4147
  %cmp1656 = icmp eq i32 %conv1655, 93, !dbg !4148
  br i1 %cmp1656, label %land.lhs.true1658, label %if.else1697, !dbg !4149

land.lhs.true1658:                                ; preds = %land.lhs.true1654
  %arrayidx1659 = getelementptr inbounds [128 x i8], [128 x i8]* %str1595, i64 0, i64 0, !dbg !4150
  %837 = load i8, i8* %arrayidx1659, align 16, !dbg !4150
  %conv1660 = zext i8 %837 to i32, !dbg !4150
  %cmp1661 = icmp ne i32 %conv1660, 0, !dbg !4151
  br i1 %cmp1661, label %if.then1663, label %if.else1697, !dbg !4152

if.then1663:                                      ; preds = %land.lhs.true1658
  %838 = load i8, i8* %c1, align 1, !dbg !4153
  %conv1664 = zext i8 %838 to i32, !dbg !4153
  %cmp1665 = icmp ne i32 %conv1664, 1, !dbg !4157
  br i1 %cmp1665, label %if.then1667, label %if.end1669, !dbg !4158

if.then1667:                                      ; preds = %if.then1663
  %stack1668 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4159
  %839 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1668, align 8, !dbg !4159
  %840 = bitcast %struct.compile_stack_elt_t* %839 to i8*, !dbg !4159
  call void @free(i8* %840), !dbg !4159
  store i32 3, i32* %retval, align 4, !dbg !4159
  br label %return, !dbg !4159

if.end1669:                                       ; preds = %if.then1663
  br label %do.body1670, !dbg !4160

do.body1670:                                      ; preds = %if.end1669
  %841 = load i8*, i8** %p, align 8, !dbg !4161
  %842 = load i8*, i8** %pend, align 8, !dbg !4161
  %cmp1671 = icmp eq i8* %841, %842, !dbg !4161
  br i1 %cmp1671, label %if.then1673, label %if.end1674, !dbg !4164

if.then1673:                                      ; preds = %do.body1670
  store i32 14, i32* %retval, align 4, !dbg !4161
  br label %return, !dbg !4161

if.end1674:                                       ; preds = %do.body1670
  %843 = load i8*, i8** %p, align 8, !dbg !4164
  %incdec.ptr1675 = getelementptr inbounds i8, i8* %843, i32 1, !dbg !4164
  store i8* %incdec.ptr1675, i8** %p, align 8, !dbg !4164
  %844 = load i8, i8* %843, align 1, !dbg !4164
  store i8 %844, i8* %c, align 1, !dbg !4164
  %845 = load i8*, i8** %translate, align 8, !dbg !4165
  %tobool1676 = icmp ne i8* %845, null, !dbg !4165
  br i1 %tobool1676, label %if.then1677, label %if.end1680, !dbg !4164

if.then1677:                                      ; preds = %if.end1674
  %846 = load i8*, i8** %translate, align 8, !dbg !4165
  %847 = load i8, i8* %c, align 1, !dbg !4165
  %idxprom1678 = zext i8 %847 to i64, !dbg !4165
  %arrayidx1679 = getelementptr inbounds i8, i8* %846, i64 %idxprom1678, !dbg !4165
  %848 = load i8, i8* %arrayidx1679, align 1, !dbg !4165
  store i8 %848, i8* %c, align 1, !dbg !4165
  br label %if.end1680, !dbg !4165

if.end1680:                                       ; preds = %if.then1677, %if.end1674
  br label %do.end1681, !dbg !4164

do.end1681:                                       ; preds = %if.end1680
  %arrayidx1682 = getelementptr inbounds [128 x i8], [128 x i8]* %str1595, i64 0, i64 0, !dbg !4167
  %849 = load i8, i8* %arrayidx1682, align 16, !dbg !4167
  %conv1683 = zext i8 %849 to i32, !dbg !4167
  %rem1684 = srem i32 %conv1683, 8, !dbg !4167
  %shl1685 = shl i32 1, %rem1684, !dbg !4167
  %850 = load i8*, i8** %b, align 8, !dbg !4167
  %arrayidx1686 = getelementptr inbounds [128 x i8], [128 x i8]* %str1595, i64 0, i64 0, !dbg !4167
  %851 = load i8, i8* %arrayidx1686, align 16, !dbg !4167
  %conv1687 = zext i8 %851 to i32, !dbg !4167
  %div1688 = sdiv i32 %conv1687, 8, !dbg !4167
  %idxprom1689 = sext i32 %div1688 to i64, !dbg !4167
  %arrayidx1690 = getelementptr inbounds i8, i8* %850, i64 %idxprom1689, !dbg !4167
  %852 = load i8, i8* %arrayidx1690, align 1, !dbg !4167
  %conv1691 = zext i8 %852 to i32, !dbg !4167
  %or1692 = or i32 %conv1691, %shl1685, !dbg !4167
  %conv1693 = trunc i32 %or1692 to i8, !dbg !4167
  store i8 %conv1693, i8* %arrayidx1690, align 1, !dbg !4167
  %arraydecay1694 = getelementptr inbounds [128 x i8], [128 x i8]* %str1595, i64 0, i64 0, !dbg !4168
  %arrayidx1695 = getelementptr inbounds i8, i8* %arraydecay1694, i64 0, !dbg !4168
  %853 = load i8, i8* %arrayidx1695, align 16, !dbg !4168
  %conv1696 = zext i8 %853 to i32, !dbg !4168
  store i32 %conv1696, i32* %range_start, align 4, !dbg !4169
  store i8 0, i8* %had_char_class, align 1, !dbg !4170
  br label %if.end1713, !dbg !4171

if.else1697:                                      ; preds = %land.lhs.true1658, %land.lhs.true1654, %for.end1648
  %854 = load i8, i8* %c1, align 1, !dbg !4172
  %inc1698 = add i8 %854, 1, !dbg !4172
  store i8 %inc1698, i8* %c1, align 1, !dbg !4172
  br label %while.cond1699, !dbg !4174

while.cond1699:                                   ; preds = %while.body1702, %if.else1697
  %855 = load i8, i8* %c1, align 1, !dbg !4175
  %dec1700 = add i8 %855, -1, !dbg !4175
  store i8 %dec1700, i8* %c1, align 1, !dbg !4175
  %tobool1701 = icmp ne i8 %855, 0, !dbg !4174
  br i1 %tobool1701, label %while.body1702, label %while.end1704, !dbg !4174

while.body1702:                                   ; preds = %while.cond1699
  %856 = load i8*, i8** %p, align 8, !dbg !4176
  %incdec.ptr1703 = getelementptr inbounds i8, i8* %856, i32 -1, !dbg !4176
  store i8* %incdec.ptr1703, i8** %p, align 8, !dbg !4176
  br label %while.cond1699, !dbg !4174, !llvm.loop !4177

while.end1704:                                    ; preds = %while.cond1699
  %857 = load i8*, i8** %b, align 8, !dbg !4178
  %arrayidx1705 = getelementptr inbounds i8, i8* %857, i64 11, !dbg !4178
  %858 = load i8, i8* %arrayidx1705, align 1, !dbg !4178
  %conv1706 = zext i8 %858 to i32, !dbg !4178
  %or1707 = or i32 %conv1706, 8, !dbg !4178
  %conv1708 = trunc i32 %or1707 to i8, !dbg !4178
  store i8 %conv1708, i8* %arrayidx1705, align 1, !dbg !4178
  %859 = load i8*, i8** %b, align 8, !dbg !4179
  %arrayidx1709 = getelementptr inbounds i8, i8* %859, i64 5, !dbg !4179
  %860 = load i8, i8* %arrayidx1709, align 1, !dbg !4179
  %conv1710 = zext i8 %860 to i32, !dbg !4179
  %or1711 = or i32 %conv1710, 64, !dbg !4179
  %conv1712 = trunc i32 %or1711 to i8, !dbg !4179
  store i8 %conv1712, i8* %arrayidx1709, align 1, !dbg !4179
  store i32 46, i32* %range_start, align 4, !dbg !4180
  store i8 0, i8* %had_char_class, align 1, !dbg !4181
  br label %if.end1713

if.end1713:                                       ; preds = %while.end1704, %do.end1681
  br label %if.end1726, !dbg !4182

if.else1714:                                      ; preds = %land.lhs.true1590, %land.lhs.true1586, %if.else1583
  store i8 0, i8* %had_char_class, align 1, !dbg !4183
  %861 = load i8, i8* %c, align 1, !dbg !4185
  %conv1715 = zext i8 %861 to i32, !dbg !4185
  %rem1716 = srem i32 %conv1715, 8, !dbg !4185
  %shl1717 = shl i32 1, %rem1716, !dbg !4185
  %862 = load i8*, i8** %b, align 8, !dbg !4185
  %863 = load i8, i8* %c, align 1, !dbg !4185
  %conv1718 = zext i8 %863 to i32, !dbg !4185
  %div1719 = sdiv i32 %conv1718, 8, !dbg !4185
  %idxprom1720 = sext i32 %div1719 to i64, !dbg !4185
  %arrayidx1721 = getelementptr inbounds i8, i8* %862, i64 %idxprom1720, !dbg !4185
  %864 = load i8, i8* %arrayidx1721, align 1, !dbg !4185
  %conv1722 = zext i8 %864 to i32, !dbg !4185
  %or1723 = or i32 %conv1722, %shl1717, !dbg !4185
  %conv1724 = trunc i32 %or1723 to i8, !dbg !4185
  store i8 %conv1724, i8* %arrayidx1721, align 1, !dbg !4185
  %865 = load i8, i8* %c, align 1, !dbg !4186
  %conv1725 = zext i8 %865 to i32, !dbg !4186
  store i32 %conv1725, i32* %range_start, align 4, !dbg !4187
  br label %if.end1726

if.end1726:                                       ; preds = %if.else1714, %if.end1713
  br label %if.end1727

if.end1727:                                       ; preds = %if.end1726, %if.end1582
  br label %if.end1728

if.end1728:                                       ; preds = %if.end1727, %if.end1454
  br label %if.end1729

if.end1729:                                       ; preds = %if.end1728, %if.end1027
  br label %if.end1730

if.end1730:                                       ; preds = %if.end1729, %if.end996
  br label %for.cond886, !dbg !4188, !llvm.loop !3635

for.end1731:                                      ; preds = %if.then945
  br label %while.cond1732, !dbg !4189

while.cond1732:                                   ; preds = %while.body1745, %for.end1731
  %866 = load i8*, i8** %b, align 8, !dbg !4190
  %arrayidx1733 = getelementptr inbounds i8, i8* %866, i64 -1, !dbg !4190
  %867 = load i8, i8* %arrayidx1733, align 1, !dbg !4190
  %conv1734 = zext i8 %867 to i32, !dbg !4191
  %cmp1735 = icmp sgt i32 %conv1734, 0, !dbg !4192
  br i1 %cmp1735, label %land.rhs, label %land.end, !dbg !4193

land.rhs:                                         ; preds = %while.cond1732
  %868 = load i8*, i8** %b, align 8, !dbg !4194
  %869 = load i8*, i8** %b, align 8, !dbg !4195
  %arrayidx1737 = getelementptr inbounds i8, i8* %869, i64 -1, !dbg !4195
  %870 = load i8, i8* %arrayidx1737, align 1, !dbg !4195
  %conv1738 = zext i8 %870 to i32, !dbg !4195
  %sub1739 = sub nsw i32 %conv1738, 1, !dbg !4196
  %idxprom1740 = sext i32 %sub1739 to i64, !dbg !4194
  %arrayidx1741 = getelementptr inbounds i8, i8* %868, i64 %idxprom1740, !dbg !4194
  %871 = load i8, i8* %arrayidx1741, align 1, !dbg !4194
  %conv1742 = zext i8 %871 to i32, !dbg !4194
  %cmp1743 = icmp eq i32 %conv1742, 0, !dbg !4197
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond1732
  %872 = phi i1 [ false, %while.cond1732 ], [ %cmp1743, %land.rhs ], !dbg !4198
  br i1 %872, label %while.body1745, label %while.end1748, !dbg !4189

while.body1745:                                   ; preds = %land.end
  %873 = load i8*, i8** %b, align 8, !dbg !4199
  %arrayidx1746 = getelementptr inbounds i8, i8* %873, i64 -1, !dbg !4199
  %874 = load i8, i8* %arrayidx1746, align 1, !dbg !4200
  %dec1747 = add i8 %874, -1, !dbg !4200
  store i8 %dec1747, i8* %arrayidx1746, align 1, !dbg !4200
  br label %while.cond1732, !dbg !4189, !llvm.loop !4201

while.end1748:                                    ; preds = %land.end
  %875 = load i8*, i8** %b, align 8, !dbg !4202
  %arrayidx1749 = getelementptr inbounds i8, i8* %875, i64 -1, !dbg !4202
  %876 = load i8, i8* %arrayidx1749, align 1, !dbg !4202
  %conv1750 = zext i8 %876 to i32, !dbg !4202
  %877 = load i8*, i8** %b, align 8, !dbg !4203
  %idx.ext1751 = sext i32 %conv1750 to i64, !dbg !4203
  %add.ptr1752 = getelementptr inbounds i8, i8* %877, i64 %idx.ext1751, !dbg !4203
  store i8* %add.ptr1752, i8** %b, align 8, !dbg !4203
  br label %sw.epilog3609, !dbg !4204

sw.bb1753:                                        ; preds = %do.end
  %878 = load i64, i64* %syntax.addr, align 8, !dbg !4205
  %and1754 = and i64 %878, 8192, !dbg !4207
  %tobool1755 = icmp ne i64 %and1754, 0, !dbg !4207
  br i1 %tobool1755, label %if.then1756, label %if.else1757, !dbg !4208

if.then1756:                                      ; preds = %sw.bb1753
  br label %handle_open, !dbg !4209

if.else1757:                                      ; preds = %sw.bb1753
  br label %normal_char, !dbg !4210

sw.bb1758:                                        ; preds = %do.end
  %879 = load i64, i64* %syntax.addr, align 8, !dbg !4211
  %and1759 = and i64 %879, 8192, !dbg !4213
  %tobool1760 = icmp ne i64 %and1759, 0, !dbg !4213
  br i1 %tobool1760, label %if.then1761, label %if.else1762, !dbg !4214

if.then1761:                                      ; preds = %sw.bb1758
  br label %handle_close, !dbg !4215

if.else1762:                                      ; preds = %sw.bb1758
  br label %normal_char, !dbg !4216

sw.bb1763:                                        ; preds = %do.end
  %880 = load i64, i64* %syntax.addr, align 8, !dbg !4217
  %and1764 = and i64 %880, 2048, !dbg !4219
  %tobool1765 = icmp ne i64 %and1764, 0, !dbg !4219
  br i1 %tobool1765, label %if.then1766, label %if.else1767, !dbg !4220

if.then1766:                                      ; preds = %sw.bb1763
  br label %handle_alt, !dbg !4221

if.else1767:                                      ; preds = %sw.bb1763
  br label %normal_char, !dbg !4222

sw.bb1768:                                        ; preds = %do.end
  %881 = load i64, i64* %syntax.addr, align 8, !dbg !4223
  %and1769 = and i64 %881, 32768, !dbg !4225
  %tobool1770 = icmp ne i64 %and1769, 0, !dbg !4225
  br i1 %tobool1770, label %if.then1771, label %if.else1772, !dbg !4226

if.then1771:                                      ; preds = %sw.bb1768
  br label %handle_alt, !dbg !4227

if.else1772:                                      ; preds = %sw.bb1768
  br label %normal_char, !dbg !4228

sw.bb1773:                                        ; preds = %do.end
  %882 = load i64, i64* %syntax.addr, align 8, !dbg !4229
  %and1774 = and i64 %882, 512, !dbg !4231
  %tobool1775 = icmp ne i64 %and1774, 0, !dbg !4231
  br i1 %tobool1775, label %land.lhs.true1776, label %if.else1780, !dbg !4232

land.lhs.true1776:                                ; preds = %sw.bb1773
  %883 = load i64, i64* %syntax.addr, align 8, !dbg !4233
  %and1777 = and i64 %883, 4096, !dbg !4234
  %tobool1778 = icmp ne i64 %and1777, 0, !dbg !4234
  br i1 %tobool1778, label %if.then1779, label %if.else1780, !dbg !4235

if.then1779:                                      ; preds = %land.lhs.true1776
  br label %handle_interval, !dbg !4236

if.else1780:                                      ; preds = %land.lhs.true1776, %sw.bb1773
  br label %normal_char, !dbg !4237

sw.bb1781:                                        ; preds = %do.end
  %884 = load i8*, i8** %p, align 8, !dbg !4238
  %885 = load i8*, i8** %pend, align 8, !dbg !4240
  %cmp1782 = icmp eq i8* %884, %885, !dbg !4241
  br i1 %cmp1782, label %if.then1784, label %if.end1786, !dbg !4242

if.then1784:                                      ; preds = %sw.bb1781
  %stack1785 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4243
  %886 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1785, align 8, !dbg !4243
  %887 = bitcast %struct.compile_stack_elt_t* %886 to i8*, !dbg !4243
  call void @free(i8* %887), !dbg !4243
  store i32 5, i32* %retval, align 4, !dbg !4243
  br label %return, !dbg !4243

if.end1786:                                       ; preds = %sw.bb1781
  br label %do.body1787, !dbg !4244

do.body1787:                                      ; preds = %if.end1786
  %888 = load i8*, i8** %p, align 8, !dbg !4245
  %889 = load i8*, i8** %pend, align 8, !dbg !4245
  %cmp1788 = icmp eq i8* %888, %889, !dbg !4245
  br i1 %cmp1788, label %if.then1790, label %if.end1791, !dbg !4248

if.then1790:                                      ; preds = %do.body1787
  store i32 14, i32* %retval, align 4, !dbg !4245
  br label %return, !dbg !4245

if.end1791:                                       ; preds = %do.body1787
  %890 = load i8*, i8** %p, align 8, !dbg !4248
  %incdec.ptr1792 = getelementptr inbounds i8, i8* %890, i32 1, !dbg !4248
  store i8* %incdec.ptr1792, i8** %p, align 8, !dbg !4248
  %891 = load i8, i8* %890, align 1, !dbg !4248
  store i8 %891, i8* %c, align 1, !dbg !4248
  br label %do.end1793, !dbg !4248

do.end1793:                                       ; preds = %if.end1791
  %892 = load i8, i8* %c, align 1, !dbg !4249
  %conv1794 = zext i8 %892 to i32, !dbg !4249
  switch i32 %conv1794, label %sw.default [
    i32 40, label %sw.bb1795
    i32 41, label %sw.bb1946
    i32 124, label %sw.bb2177
    i32 123, label %sw.bb2340
    i32 119, label %sw.bb2693
    i32 87, label %sw.bb2768
    i32 60, label %sw.bb2843
    i32 62, label %sw.bb2918
    i32 98, label %sw.bb2993
    i32 66, label %sw.bb3068
    i32 96, label %sw.bb3143
    i32 39, label %sw.bb3218
    i32 49, label %sw.bb3293
    i32 50, label %sw.bb3293
    i32 51, label %sw.bb3293
    i32 52, label %sw.bb3293
    i32 53, label %sw.bb3293
    i32 54, label %sw.bb3293
    i32 55, label %sw.bb3293
    i32 56, label %sw.bb3293
    i32 57, label %sw.bb3293
    i32 43, label %sw.bb3383
    i32 63, label %sw.bb3383
  ], !dbg !4250

sw.bb1795:                                        ; preds = %do.end1793
  %893 = load i64, i64* %syntax.addr, align 8, !dbg !4251
  %and1796 = and i64 %893, 8192, !dbg !4254
  %tobool1797 = icmp ne i64 %and1796, 0, !dbg !4254
  br i1 %tobool1797, label %if.then1798, label %if.end1799, !dbg !4255

if.then1798:                                      ; preds = %sw.bb1795
  br label %normal_backslash, !dbg !4256

if.end1799:                                       ; preds = %sw.bb1795
  br label %handle_open, !dbg !4257

handle_open:                                      ; preds = %if.end1799, %if.then1756
  call void @llvm.dbg.label(metadata !4258), !dbg !4259
  %894 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4260
  %re_nsub1800 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %894, i32 0, i32 6, !dbg !4261
  %895 = load i64, i64* %re_nsub1800, align 8, !dbg !4262
  %inc1801 = add i64 %895, 1, !dbg !4262
  store i64 %inc1801, i64* %re_nsub1800, align 8, !dbg !4262
  %896 = load i32, i32* %regnum, align 4, !dbg !4263
  %inc1802 = add i32 %896, 1, !dbg !4263
  store i32 %inc1802, i32* %regnum, align 4, !dbg !4263
  %avail1803 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4264
  %897 = load i32, i32* %avail1803, align 4, !dbg !4264
  %size1804 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 1, !dbg !4264
  %898 = load i32, i32* %size1804, align 8, !dbg !4264
  %cmp1805 = icmp eq i32 %897, %898, !dbg !4264
  br i1 %cmp1805, label %if.then1807, label %if.end1821, !dbg !4266

if.then1807:                                      ; preds = %handle_open
  %stack1808 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4267
  %899 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1808, align 8, !dbg !4267
  %900 = bitcast %struct.compile_stack_elt_t* %899 to i8*, !dbg !4267
  %size1809 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 1, !dbg !4267
  %901 = load i32, i32* %size1809, align 8, !dbg !4267
  %shl1810 = shl i32 %901, 1, !dbg !4267
  %conv1811 = zext i32 %shl1810 to i64, !dbg !4267
  %mul = mul i64 %conv1811, 40, !dbg !4267
  %call1812 = call i8* @realloc(i8* %900, i64 %mul), !dbg !4267
  %902 = bitcast i8* %call1812 to %struct.compile_stack_elt_t*, !dbg !4267
  %stack1813 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4267
  store %struct.compile_stack_elt_t* %902, %struct.compile_stack_elt_t** %stack1813, align 8, !dbg !4267
  %stack1814 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4269
  %903 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1814, align 8, !dbg !4269
  %cmp1815 = icmp eq %struct.compile_stack_elt_t* %903, null, !dbg !4271
  br i1 %cmp1815, label %if.then1817, label %if.end1818, !dbg !4272

if.then1817:                                      ; preds = %if.then1807
  store i32 12, i32* %retval, align 4, !dbg !4273
  br label %return, !dbg !4273

if.end1818:                                       ; preds = %if.then1807
  %size1819 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 1, !dbg !4274
  %904 = load i32, i32* %size1819, align 8, !dbg !4275
  %shl1820 = shl i32 %904, 1, !dbg !4275
  store i32 %shl1820, i32* %size1819, align 8, !dbg !4275
  br label %if.end1821, !dbg !4276

if.end1821:                                       ; preds = %if.end1818, %handle_open
  %905 = load i8*, i8** %begalt, align 8, !dbg !4277
  %906 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4278
  %buffer1822 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %906, i32 0, i32 0, !dbg !4278
  %907 = load i8*, i8** %buffer1822, align 8, !dbg !4278
  %sub.ptr.lhs.cast1823 = ptrtoint i8* %905 to i64, !dbg !4279
  %sub.ptr.rhs.cast1824 = ptrtoint i8* %907 to i64, !dbg !4279
  %sub.ptr.sub1825 = sub i64 %sub.ptr.lhs.cast1823, %sub.ptr.rhs.cast1824, !dbg !4279
  %stack1826 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4280
  %908 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1826, align 8, !dbg !4280
  %avail1827 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4280
  %909 = load i32, i32* %avail1827, align 4, !dbg !4280
  %idxprom1828 = zext i32 %909 to i64, !dbg !4280
  %arrayidx1829 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %908, i64 %idxprom1828, !dbg !4280
  %begalt_offset = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx1829, i32 0, i32 0, !dbg !4281
  store i64 %sub.ptr.sub1825, i64* %begalt_offset, align 8, !dbg !4282
  %910 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4283
  %tobool1830 = icmp ne i8* %910, null, !dbg !4283
  br i1 %tobool1830, label %cond.true1831, label %cond.false1837, !dbg !4283

cond.true1831:                                    ; preds = %if.end1821
  %911 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4284
  %912 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4285
  %buffer1832 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %912, i32 0, i32 0, !dbg !4285
  %913 = load i8*, i8** %buffer1832, align 8, !dbg !4285
  %sub.ptr.lhs.cast1833 = ptrtoint i8* %911 to i64, !dbg !4286
  %sub.ptr.rhs.cast1834 = ptrtoint i8* %913 to i64, !dbg !4286
  %sub.ptr.sub1835 = sub i64 %sub.ptr.lhs.cast1833, %sub.ptr.rhs.cast1834, !dbg !4286
  %add1836 = add nsw i64 %sub.ptr.sub1835, 1, !dbg !4287
  br label %cond.end1838, !dbg !4283

cond.false1837:                                   ; preds = %if.end1821
  br label %cond.end1838, !dbg !4283

cond.end1838:                                     ; preds = %cond.false1837, %cond.true1831
  %cond1839 = phi i64 [ %add1836, %cond.true1831 ], [ 0, %cond.false1837 ], !dbg !4283
  %stack1840 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4288
  %914 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1840, align 8, !dbg !4288
  %avail1841 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4288
  %915 = load i32, i32* %avail1841, align 4, !dbg !4288
  %idxprom1842 = zext i32 %915 to i64, !dbg !4288
  %arrayidx1843 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %914, i64 %idxprom1842, !dbg !4288
  %fixup_alt_jump1844 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx1843, i32 0, i32 1, !dbg !4289
  store i64 %cond1839, i64* %fixup_alt_jump1844, align 8, !dbg !4290
  %916 = load i8*, i8** %b, align 8, !dbg !4291
  %917 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4292
  %buffer1845 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %917, i32 0, i32 0, !dbg !4292
  %918 = load i8*, i8** %buffer1845, align 8, !dbg !4292
  %sub.ptr.lhs.cast1846 = ptrtoint i8* %916 to i64, !dbg !4293
  %sub.ptr.rhs.cast1847 = ptrtoint i8* %918 to i64, !dbg !4293
  %sub.ptr.sub1848 = sub i64 %sub.ptr.lhs.cast1846, %sub.ptr.rhs.cast1847, !dbg !4293
  %stack1849 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4294
  %919 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1849, align 8, !dbg !4294
  %avail1850 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4294
  %920 = load i32, i32* %avail1850, align 4, !dbg !4294
  %idxprom1851 = zext i32 %920 to i64, !dbg !4294
  %arrayidx1852 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %919, i64 %idxprom1851, !dbg !4294
  %laststart_offset = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx1852, i32 0, i32 3, !dbg !4295
  store i64 %sub.ptr.sub1848, i64* %laststart_offset, align 8, !dbg !4296
  %921 = load i32, i32* %regnum, align 4, !dbg !4297
  %stack1853 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4298
  %922 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1853, align 8, !dbg !4298
  %avail1854 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4298
  %923 = load i32, i32* %avail1854, align 4, !dbg !4298
  %idxprom1855 = zext i32 %923 to i64, !dbg !4298
  %arrayidx1856 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %922, i64 %idxprom1855, !dbg !4298
  %regnum1857 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx1856, i32 0, i32 4, !dbg !4299
  store i32 %921, i32* %regnum1857, align 8, !dbg !4300
  %924 = load i32, i32* %regnum, align 4, !dbg !4301
  %cmp1858 = icmp ule i32 %924, 255, !dbg !4303
  br i1 %cmp1858, label %if.then1860, label %if.end1943, !dbg !4304

if.then1860:                                      ; preds = %cond.end1838
  %925 = load i8*, i8** %b, align 8, !dbg !4305
  %926 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4307
  %buffer1861 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %926, i32 0, i32 0, !dbg !4307
  %927 = load i8*, i8** %buffer1861, align 8, !dbg !4307
  %sub.ptr.lhs.cast1862 = ptrtoint i8* %925 to i64, !dbg !4308
  %sub.ptr.rhs.cast1863 = ptrtoint i8* %927 to i64, !dbg !4308
  %sub.ptr.sub1864 = sub i64 %sub.ptr.lhs.cast1862, %sub.ptr.rhs.cast1863, !dbg !4308
  %add1865 = add nsw i64 %sub.ptr.sub1864, 2, !dbg !4309
  %stack1866 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4310
  %928 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1866, align 8, !dbg !4310
  %avail1867 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4310
  %929 = load i32, i32* %avail1867, align 4, !dbg !4310
  %idxprom1868 = zext i32 %929 to i64, !dbg !4310
  %arrayidx1869 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %928, i64 %idxprom1868, !dbg !4310
  %inner_group_offset = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx1869, i32 0, i32 2, !dbg !4311
  store i64 %add1865, i64* %inner_group_offset, align 8, !dbg !4312
  br label %do.body1870, !dbg !4313

do.body1870:                                      ; preds = %if.then1860
  br label %while.cond1871, !dbg !4314

while.cond1871:                                   ; preds = %do.end1936, %do.body1870
  %930 = load i8*, i8** %b, align 8, !dbg !4314
  %931 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4314
  %buffer1872 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %931, i32 0, i32 0, !dbg !4314
  %932 = load i8*, i8** %buffer1872, align 8, !dbg !4314
  %sub.ptr.lhs.cast1873 = ptrtoint i8* %930 to i64, !dbg !4314
  %sub.ptr.rhs.cast1874 = ptrtoint i8* %932 to i64, !dbg !4314
  %sub.ptr.sub1875 = sub i64 %sub.ptr.lhs.cast1873, %sub.ptr.rhs.cast1874, !dbg !4314
  %add1876 = add nsw i64 %sub.ptr.sub1875, 3, !dbg !4314
  %933 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4314
  %allocated1877 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %933, i32 0, i32 1, !dbg !4314
  %934 = load i64, i64* %allocated1877, align 8, !dbg !4314
  %cmp1878 = icmp ugt i64 %add1876, %934, !dbg !4314
  br i1 %cmp1878, label %while.body1880, label %while.end1937, !dbg !4314

while.body1880:                                   ; preds = %while.cond1871
  br label %do.body1881, !dbg !4314

do.body1881:                                      ; preds = %while.body1880
  call void @llvm.dbg.declare(metadata i8** %old_buffer1882, metadata !4316, metadata !DIExpression()), !dbg !4318
  %935 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4318
  %buffer1883 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %935, i32 0, i32 0, !dbg !4318
  %936 = load i8*, i8** %buffer1883, align 8, !dbg !4318
  store i8* %936, i8** %old_buffer1882, align 8, !dbg !4318
  %937 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4319
  %allocated1884 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %937, i32 0, i32 1, !dbg !4319
  %938 = load i64, i64* %allocated1884, align 8, !dbg !4319
  %cmp1885 = icmp eq i64 %938, 65536, !dbg !4319
  br i1 %cmp1885, label %if.then1887, label %if.end1888, !dbg !4318

if.then1887:                                      ; preds = %do.body1881
  store i32 15, i32* %retval, align 4, !dbg !4319
  br label %return, !dbg !4319

if.end1888:                                       ; preds = %do.body1881
  %939 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4318
  %allocated1889 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %939, i32 0, i32 1, !dbg !4318
  %940 = load i64, i64* %allocated1889, align 8, !dbg !4318
  %shl1890 = shl i64 %940, 1, !dbg !4318
  store i64 %shl1890, i64* %allocated1889, align 8, !dbg !4318
  %941 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4321
  %allocated1891 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %941, i32 0, i32 1, !dbg !4321
  %942 = load i64, i64* %allocated1891, align 8, !dbg !4321
  %cmp1892 = icmp ugt i64 %942, 65536, !dbg !4321
  br i1 %cmp1892, label %if.then1894, label %if.end1896, !dbg !4318

if.then1894:                                      ; preds = %if.end1888
  %943 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4321
  %allocated1895 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %943, i32 0, i32 1, !dbg !4321
  store i64 65536, i64* %allocated1895, align 8, !dbg !4321
  br label %if.end1896, !dbg !4321

if.end1896:                                       ; preds = %if.then1894, %if.end1888
  %944 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4318
  %buffer1897 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %944, i32 0, i32 0, !dbg !4318
  %945 = load i8*, i8** %buffer1897, align 8, !dbg !4318
  %946 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4318
  %allocated1898 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %946, i32 0, i32 1, !dbg !4318
  %947 = load i64, i64* %allocated1898, align 8, !dbg !4318
  %call1899 = call i8* @realloc(i8* %945, i64 %947), !dbg !4318
  %948 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4318
  %buffer1900 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %948, i32 0, i32 0, !dbg !4318
  store i8* %call1899, i8** %buffer1900, align 8, !dbg !4318
  %949 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4323
  %buffer1901 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %949, i32 0, i32 0, !dbg !4323
  %950 = load i8*, i8** %buffer1901, align 8, !dbg !4323
  %cmp1902 = icmp eq i8* %950, null, !dbg !4323
  br i1 %cmp1902, label %if.then1904, label %if.end1905, !dbg !4318

if.then1904:                                      ; preds = %if.end1896
  store i32 12, i32* %retval, align 4, !dbg !4323
  br label %return, !dbg !4323

if.end1905:                                       ; preds = %if.end1896
  %951 = load i8*, i8** %old_buffer1882, align 8, !dbg !4325
  %952 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4325
  %buffer1906 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %952, i32 0, i32 0, !dbg !4325
  %953 = load i8*, i8** %buffer1906, align 8, !dbg !4325
  %cmp1907 = icmp ne i8* %951, %953, !dbg !4325
  br i1 %cmp1907, label %if.then1909, label %if.end1935, !dbg !4318

if.then1909:                                      ; preds = %if.end1905
  call void @llvm.dbg.declare(metadata i32* %incr1910, metadata !4327, metadata !DIExpression()), !dbg !4329
  %954 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4329
  %buffer1911 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %954, i32 0, i32 0, !dbg !4329
  %955 = load i8*, i8** %buffer1911, align 8, !dbg !4329
  %956 = load i8*, i8** %old_buffer1882, align 8, !dbg !4329
  %sub.ptr.lhs.cast1912 = ptrtoint i8* %955 to i64, !dbg !4329
  %sub.ptr.rhs.cast1913 = ptrtoint i8* %956 to i64, !dbg !4329
  %sub.ptr.sub1914 = sub i64 %sub.ptr.lhs.cast1912, %sub.ptr.rhs.cast1913, !dbg !4329
  %conv1915 = trunc i64 %sub.ptr.sub1914 to i32, !dbg !4329
  store i32 %conv1915, i32* %incr1910, align 4, !dbg !4329
  %957 = load i32, i32* %incr1910, align 4, !dbg !4329
  %958 = load i8*, i8** %b, align 8, !dbg !4329
  %idx.ext1916 = sext i32 %957 to i64, !dbg !4329
  %add.ptr1917 = getelementptr inbounds i8, i8* %958, i64 %idx.ext1916, !dbg !4329
  store i8* %add.ptr1917, i8** %b, align 8, !dbg !4329
  %959 = load i32, i32* %incr1910, align 4, !dbg !4329
  %960 = load i8*, i8** %begalt, align 8, !dbg !4329
  %idx.ext1918 = sext i32 %959 to i64, !dbg !4329
  %add.ptr1919 = getelementptr inbounds i8, i8* %960, i64 %idx.ext1918, !dbg !4329
  store i8* %add.ptr1919, i8** %begalt, align 8, !dbg !4329
  %961 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4330
  %tobool1920 = icmp ne i8* %961, null, !dbg !4330
  br i1 %tobool1920, label %if.then1921, label %if.end1924, !dbg !4329

if.then1921:                                      ; preds = %if.then1909
  %962 = load i32, i32* %incr1910, align 4, !dbg !4330
  %963 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4330
  %idx.ext1922 = sext i32 %962 to i64, !dbg !4330
  %add.ptr1923 = getelementptr inbounds i8, i8* %963, i64 %idx.ext1922, !dbg !4330
  store i8* %add.ptr1923, i8** %fixup_alt_jump, align 8, !dbg !4330
  br label %if.end1924, !dbg !4330

if.end1924:                                       ; preds = %if.then1921, %if.then1909
  %964 = load i8*, i8** %laststart, align 8, !dbg !4332
  %tobool1925 = icmp ne i8* %964, null, !dbg !4332
  br i1 %tobool1925, label %if.then1926, label %if.end1929, !dbg !4329

if.then1926:                                      ; preds = %if.end1924
  %965 = load i32, i32* %incr1910, align 4, !dbg !4332
  %966 = load i8*, i8** %laststart, align 8, !dbg !4332
  %idx.ext1927 = sext i32 %965 to i64, !dbg !4332
  %add.ptr1928 = getelementptr inbounds i8, i8* %966, i64 %idx.ext1927, !dbg !4332
  store i8* %add.ptr1928, i8** %laststart, align 8, !dbg !4332
  br label %if.end1929, !dbg !4332

if.end1929:                                       ; preds = %if.then1926, %if.end1924
  %967 = load i8*, i8** %pending_exact, align 8, !dbg !4334
  %tobool1930 = icmp ne i8* %967, null, !dbg !4334
  br i1 %tobool1930, label %if.then1931, label %if.end1934, !dbg !4329

if.then1931:                                      ; preds = %if.end1929
  %968 = load i32, i32* %incr1910, align 4, !dbg !4334
  %969 = load i8*, i8** %pending_exact, align 8, !dbg !4334
  %idx.ext1932 = sext i32 %968 to i64, !dbg !4334
  %add.ptr1933 = getelementptr inbounds i8, i8* %969, i64 %idx.ext1932, !dbg !4334
  store i8* %add.ptr1933, i8** %pending_exact, align 8, !dbg !4334
  br label %if.end1934, !dbg !4334

if.end1934:                                       ; preds = %if.then1931, %if.end1929
  br label %if.end1935, !dbg !4329

if.end1935:                                       ; preds = %if.end1934, %if.end1905
  br label %do.end1936, !dbg !4318

do.end1936:                                       ; preds = %if.end1935
  br label %while.cond1871, !dbg !4314, !llvm.loop !4336

while.end1937:                                    ; preds = %while.cond1871
  %970 = load i8*, i8** %b, align 8, !dbg !4314
  %incdec.ptr1938 = getelementptr inbounds i8, i8* %970, i32 1, !dbg !4314
  store i8* %incdec.ptr1938, i8** %b, align 8, !dbg !4314
  store i8 6, i8* %970, align 1, !dbg !4314
  %971 = load i32, i32* %regnum, align 4, !dbg !4314
  %conv1939 = trunc i32 %971 to i8, !dbg !4314
  %972 = load i8*, i8** %b, align 8, !dbg !4314
  %incdec.ptr1940 = getelementptr inbounds i8, i8* %972, i32 1, !dbg !4314
  store i8* %incdec.ptr1940, i8** %b, align 8, !dbg !4314
  store i8 %conv1939, i8* %972, align 1, !dbg !4314
  %973 = load i8*, i8** %b, align 8, !dbg !4314
  %incdec.ptr1941 = getelementptr inbounds i8, i8* %973, i32 1, !dbg !4314
  store i8* %incdec.ptr1941, i8** %b, align 8, !dbg !4314
  store i8 0, i8* %973, align 1, !dbg !4314
  br label %do.end1942, !dbg !4314

do.end1942:                                       ; preds = %while.end1937
  br label %if.end1943, !dbg !4337

if.end1943:                                       ; preds = %do.end1942, %cond.end1838
  %avail1944 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4338
  %974 = load i32, i32* %avail1944, align 4, !dbg !4339
  %inc1945 = add i32 %974, 1, !dbg !4339
  store i32 %inc1945, i32* %avail1944, align 4, !dbg !4339
  store i8* null, i8** %fixup_alt_jump, align 8, !dbg !4340
  store i8* null, i8** %laststart, align 8, !dbg !4341
  %975 = load i8*, i8** %b, align 8, !dbg !4342
  store i8* %975, i8** %begalt, align 8, !dbg !4343
  store i8* null, i8** %pending_exact, align 8, !dbg !4344
  br label %sw.epilog, !dbg !4345

sw.bb1946:                                        ; preds = %do.end1793
  %976 = load i64, i64* %syntax.addr, align 8, !dbg !4346
  %and1947 = and i64 %976, 8192, !dbg !4348
  %tobool1948 = icmp ne i64 %and1947, 0, !dbg !4348
  br i1 %tobool1948, label %if.then1949, label %if.end1950, !dbg !4349

if.then1949:                                      ; preds = %sw.bb1946
  br label %normal_backslash, !dbg !4350

if.end1950:                                       ; preds = %sw.bb1946
  %avail1951 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4351
  %977 = load i32, i32* %avail1951, align 4, !dbg !4351
  %cmp1952 = icmp eq i32 %977, 0, !dbg !4351
  br i1 %cmp1952, label %if.then1954, label %if.end1960, !dbg !4353

if.then1954:                                      ; preds = %if.end1950
  %978 = load i64, i64* %syntax.addr, align 8, !dbg !4354
  %and1955 = and i64 %978, 131072, !dbg !4357
  %tobool1956 = icmp ne i64 %and1955, 0, !dbg !4357
  br i1 %tobool1956, label %if.then1957, label %if.else1958, !dbg !4358

if.then1957:                                      ; preds = %if.then1954
  br label %normal_backslash, !dbg !4359

if.else1958:                                      ; preds = %if.then1954
  %stack1959 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4360
  %979 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack1959, align 8, !dbg !4360
  %980 = bitcast %struct.compile_stack_elt_t* %979 to i8*, !dbg !4360
  call void @free(i8* %980), !dbg !4360
  store i32 16, i32* %retval, align 4, !dbg !4360
  br label %return, !dbg !4360

if.end1960:                                       ; preds = %if.end1950
  br label %handle_close, !dbg !4351

handle_close:                                     ; preds = %if.end1960, %if.then1761
  call void @llvm.dbg.label(metadata !4361), !dbg !4362
  %981 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4363
  %tobool1961 = icmp ne i8* %981, null, !dbg !4363
  br i1 %tobool1961, label %if.then1962, label %if.end2039, !dbg !4365

if.then1962:                                      ; preds = %handle_close
  br label %do.body1963, !dbg !4366

do.body1963:                                      ; preds = %if.then1962
  br label %while.cond1964, !dbg !4368

while.cond1964:                                   ; preds = %do.end2029, %do.body1963
  %982 = load i8*, i8** %b, align 8, !dbg !4368
  %983 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4368
  %buffer1965 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %983, i32 0, i32 0, !dbg !4368
  %984 = load i8*, i8** %buffer1965, align 8, !dbg !4368
  %sub.ptr.lhs.cast1966 = ptrtoint i8* %982 to i64, !dbg !4368
  %sub.ptr.rhs.cast1967 = ptrtoint i8* %984 to i64, !dbg !4368
  %sub.ptr.sub1968 = sub i64 %sub.ptr.lhs.cast1966, %sub.ptr.rhs.cast1967, !dbg !4368
  %add1969 = add nsw i64 %sub.ptr.sub1968, 1, !dbg !4368
  %985 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4368
  %allocated1970 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %985, i32 0, i32 1, !dbg !4368
  %986 = load i64, i64* %allocated1970, align 8, !dbg !4368
  %cmp1971 = icmp ugt i64 %add1969, %986, !dbg !4368
  br i1 %cmp1971, label %while.body1973, label %while.end2030, !dbg !4368

while.body1973:                                   ; preds = %while.cond1964
  br label %do.body1974, !dbg !4368

do.body1974:                                      ; preds = %while.body1973
  call void @llvm.dbg.declare(metadata i8** %old_buffer1975, metadata !4370, metadata !DIExpression()), !dbg !4372
  %987 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4372
  %buffer1976 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %987, i32 0, i32 0, !dbg !4372
  %988 = load i8*, i8** %buffer1976, align 8, !dbg !4372
  store i8* %988, i8** %old_buffer1975, align 8, !dbg !4372
  %989 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4373
  %allocated1977 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %989, i32 0, i32 1, !dbg !4373
  %990 = load i64, i64* %allocated1977, align 8, !dbg !4373
  %cmp1978 = icmp eq i64 %990, 65536, !dbg !4373
  br i1 %cmp1978, label %if.then1980, label %if.end1981, !dbg !4372

if.then1980:                                      ; preds = %do.body1974
  store i32 15, i32* %retval, align 4, !dbg !4373
  br label %return, !dbg !4373

if.end1981:                                       ; preds = %do.body1974
  %991 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4372
  %allocated1982 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %991, i32 0, i32 1, !dbg !4372
  %992 = load i64, i64* %allocated1982, align 8, !dbg !4372
  %shl1983 = shl i64 %992, 1, !dbg !4372
  store i64 %shl1983, i64* %allocated1982, align 8, !dbg !4372
  %993 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4375
  %allocated1984 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %993, i32 0, i32 1, !dbg !4375
  %994 = load i64, i64* %allocated1984, align 8, !dbg !4375
  %cmp1985 = icmp ugt i64 %994, 65536, !dbg !4375
  br i1 %cmp1985, label %if.then1987, label %if.end1989, !dbg !4372

if.then1987:                                      ; preds = %if.end1981
  %995 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4375
  %allocated1988 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %995, i32 0, i32 1, !dbg !4375
  store i64 65536, i64* %allocated1988, align 8, !dbg !4375
  br label %if.end1989, !dbg !4375

if.end1989:                                       ; preds = %if.then1987, %if.end1981
  %996 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4372
  %buffer1990 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %996, i32 0, i32 0, !dbg !4372
  %997 = load i8*, i8** %buffer1990, align 8, !dbg !4372
  %998 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4372
  %allocated1991 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %998, i32 0, i32 1, !dbg !4372
  %999 = load i64, i64* %allocated1991, align 8, !dbg !4372
  %call1992 = call i8* @realloc(i8* %997, i64 %999), !dbg !4372
  %1000 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4372
  %buffer1993 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1000, i32 0, i32 0, !dbg !4372
  store i8* %call1992, i8** %buffer1993, align 8, !dbg !4372
  %1001 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4377
  %buffer1994 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1001, i32 0, i32 0, !dbg !4377
  %1002 = load i8*, i8** %buffer1994, align 8, !dbg !4377
  %cmp1995 = icmp eq i8* %1002, null, !dbg !4377
  br i1 %cmp1995, label %if.then1997, label %if.end1998, !dbg !4372

if.then1997:                                      ; preds = %if.end1989
  store i32 12, i32* %retval, align 4, !dbg !4377
  br label %return, !dbg !4377

if.end1998:                                       ; preds = %if.end1989
  %1003 = load i8*, i8** %old_buffer1975, align 8, !dbg !4379
  %1004 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4379
  %buffer1999 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1004, i32 0, i32 0, !dbg !4379
  %1005 = load i8*, i8** %buffer1999, align 8, !dbg !4379
  %cmp2000 = icmp ne i8* %1003, %1005, !dbg !4379
  br i1 %cmp2000, label %if.then2002, label %if.end2028, !dbg !4372

if.then2002:                                      ; preds = %if.end1998
  call void @llvm.dbg.declare(metadata i32* %incr2003, metadata !4381, metadata !DIExpression()), !dbg !4383
  %1006 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4383
  %buffer2004 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1006, i32 0, i32 0, !dbg !4383
  %1007 = load i8*, i8** %buffer2004, align 8, !dbg !4383
  %1008 = load i8*, i8** %old_buffer1975, align 8, !dbg !4383
  %sub.ptr.lhs.cast2005 = ptrtoint i8* %1007 to i64, !dbg !4383
  %sub.ptr.rhs.cast2006 = ptrtoint i8* %1008 to i64, !dbg !4383
  %sub.ptr.sub2007 = sub i64 %sub.ptr.lhs.cast2005, %sub.ptr.rhs.cast2006, !dbg !4383
  %conv2008 = trunc i64 %sub.ptr.sub2007 to i32, !dbg !4383
  store i32 %conv2008, i32* %incr2003, align 4, !dbg !4383
  %1009 = load i32, i32* %incr2003, align 4, !dbg !4383
  %1010 = load i8*, i8** %b, align 8, !dbg !4383
  %idx.ext2009 = sext i32 %1009 to i64, !dbg !4383
  %add.ptr2010 = getelementptr inbounds i8, i8* %1010, i64 %idx.ext2009, !dbg !4383
  store i8* %add.ptr2010, i8** %b, align 8, !dbg !4383
  %1011 = load i32, i32* %incr2003, align 4, !dbg !4383
  %1012 = load i8*, i8** %begalt, align 8, !dbg !4383
  %idx.ext2011 = sext i32 %1011 to i64, !dbg !4383
  %add.ptr2012 = getelementptr inbounds i8, i8* %1012, i64 %idx.ext2011, !dbg !4383
  store i8* %add.ptr2012, i8** %begalt, align 8, !dbg !4383
  %1013 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4384
  %tobool2013 = icmp ne i8* %1013, null, !dbg !4384
  br i1 %tobool2013, label %if.then2014, label %if.end2017, !dbg !4383

if.then2014:                                      ; preds = %if.then2002
  %1014 = load i32, i32* %incr2003, align 4, !dbg !4384
  %1015 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4384
  %idx.ext2015 = sext i32 %1014 to i64, !dbg !4384
  %add.ptr2016 = getelementptr inbounds i8, i8* %1015, i64 %idx.ext2015, !dbg !4384
  store i8* %add.ptr2016, i8** %fixup_alt_jump, align 8, !dbg !4384
  br label %if.end2017, !dbg !4384

if.end2017:                                       ; preds = %if.then2014, %if.then2002
  %1016 = load i8*, i8** %laststart, align 8, !dbg !4386
  %tobool2018 = icmp ne i8* %1016, null, !dbg !4386
  br i1 %tobool2018, label %if.then2019, label %if.end2022, !dbg !4383

if.then2019:                                      ; preds = %if.end2017
  %1017 = load i32, i32* %incr2003, align 4, !dbg !4386
  %1018 = load i8*, i8** %laststart, align 8, !dbg !4386
  %idx.ext2020 = sext i32 %1017 to i64, !dbg !4386
  %add.ptr2021 = getelementptr inbounds i8, i8* %1018, i64 %idx.ext2020, !dbg !4386
  store i8* %add.ptr2021, i8** %laststart, align 8, !dbg !4386
  br label %if.end2022, !dbg !4386

if.end2022:                                       ; preds = %if.then2019, %if.end2017
  %1019 = load i8*, i8** %pending_exact, align 8, !dbg !4388
  %tobool2023 = icmp ne i8* %1019, null, !dbg !4388
  br i1 %tobool2023, label %if.then2024, label %if.end2027, !dbg !4383

if.then2024:                                      ; preds = %if.end2022
  %1020 = load i32, i32* %incr2003, align 4, !dbg !4388
  %1021 = load i8*, i8** %pending_exact, align 8, !dbg !4388
  %idx.ext2025 = sext i32 %1020 to i64, !dbg !4388
  %add.ptr2026 = getelementptr inbounds i8, i8* %1021, i64 %idx.ext2025, !dbg !4388
  store i8* %add.ptr2026, i8** %pending_exact, align 8, !dbg !4388
  br label %if.end2027, !dbg !4388

if.end2027:                                       ; preds = %if.then2024, %if.end2022
  br label %if.end2028, !dbg !4383

if.end2028:                                       ; preds = %if.end2027, %if.end1998
  br label %do.end2029, !dbg !4372

do.end2029:                                       ; preds = %if.end2028
  br label %while.cond1964, !dbg !4368, !llvm.loop !4390

while.end2030:                                    ; preds = %while.cond1964
  %1022 = load i8*, i8** %b, align 8, !dbg !4368
  %incdec.ptr2031 = getelementptr inbounds i8, i8* %1022, i32 1, !dbg !4368
  store i8* %incdec.ptr2031, i8** %b, align 8, !dbg !4368
  store i8 20, i8* %1022, align 1, !dbg !4368
  br label %do.end2032, !dbg !4368

do.end2032:                                       ; preds = %while.end2030
  %1023 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4391
  %1024 = load i8*, i8** %b, align 8, !dbg !4391
  %add.ptr2033 = getelementptr inbounds i8, i8* %1024, i64 -1, !dbg !4391
  %1025 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4391
  %sub.ptr.lhs.cast2034 = ptrtoint i8* %add.ptr2033 to i64, !dbg !4391
  %sub.ptr.rhs.cast2035 = ptrtoint i8* %1025 to i64, !dbg !4391
  %sub.ptr.sub2036 = sub i64 %sub.ptr.lhs.cast2034, %sub.ptr.rhs.cast2035, !dbg !4391
  %sub2037 = sub nsw i64 %sub.ptr.sub2036, 3, !dbg !4391
  %conv2038 = trunc i64 %sub2037 to i32, !dbg !4391
  call void @byte_store_op1(i32 14, i8* %1023, i32 %conv2038), !dbg !4391
  br label %if.end2039, !dbg !4392

if.end2039:                                       ; preds = %do.end2032, %handle_close
  %avail2040 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4393
  %1026 = load i32, i32* %avail2040, align 4, !dbg !4393
  %cmp2041 = icmp eq i32 %1026, 0, !dbg !4393
  br i1 %cmp2041, label %if.then2043, label %if.end2049, !dbg !4395

if.then2043:                                      ; preds = %if.end2039
  %1027 = load i64, i64* %syntax.addr, align 8, !dbg !4396
  %and2044 = and i64 %1027, 131072, !dbg !4399
  %tobool2045 = icmp ne i64 %and2044, 0, !dbg !4399
  br i1 %tobool2045, label %if.then2046, label %if.else2047, !dbg !4400

if.then2046:                                      ; preds = %if.then2043
  br label %normal_char, !dbg !4401

if.else2047:                                      ; preds = %if.then2043
  %stack2048 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4402
  %1028 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2048, align 8, !dbg !4402
  %1029 = bitcast %struct.compile_stack_elt_t* %1028 to i8*, !dbg !4402
  call void @free(i8* %1029), !dbg !4402
  store i32 16, i32* %retval, align 4, !dbg !4402
  br label %return, !dbg !4402

if.end2049:                                       ; preds = %if.end2039
  call void @llvm.dbg.declare(metadata i32* %this_group_regnum, metadata !4403, metadata !DIExpression()), !dbg !4405
  %avail2050 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4406
  %1030 = load i32, i32* %avail2050, align 4, !dbg !4407
  %dec2051 = add i32 %1030, -1, !dbg !4407
  store i32 %dec2051, i32* %avail2050, align 4, !dbg !4407
  %1031 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4408
  %buffer2052 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1031, i32 0, i32 0, !dbg !4408
  %1032 = load i8*, i8** %buffer2052, align 8, !dbg !4408
  %stack2053 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4409
  %1033 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2053, align 8, !dbg !4409
  %avail2054 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4409
  %1034 = load i32, i32* %avail2054, align 4, !dbg !4409
  %idxprom2055 = zext i32 %1034 to i64, !dbg !4409
  %arrayidx2056 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1033, i64 %idxprom2055, !dbg !4409
  %begalt_offset2057 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx2056, i32 0, i32 0, !dbg !4410
  %1035 = load i64, i64* %begalt_offset2057, align 8, !dbg !4410
  %add.ptr2058 = getelementptr inbounds i8, i8* %1032, i64 %1035, !dbg !4411
  store i8* %add.ptr2058, i8** %begalt, align 8, !dbg !4412
  %stack2059 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4413
  %1036 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2059, align 8, !dbg !4413
  %avail2060 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4413
  %1037 = load i32, i32* %avail2060, align 4, !dbg !4413
  %idxprom2061 = zext i32 %1037 to i64, !dbg !4413
  %arrayidx2062 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1036, i64 %idxprom2061, !dbg !4413
  %fixup_alt_jump2063 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx2062, i32 0, i32 1, !dbg !4414
  %1038 = load i64, i64* %fixup_alt_jump2063, align 8, !dbg !4414
  %tobool2064 = icmp ne i64 %1038, 0, !dbg !4413
  br i1 %tobool2064, label %cond.true2065, label %cond.false2074, !dbg !4413

cond.true2065:                                    ; preds = %if.end2049
  %1039 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4415
  %buffer2066 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1039, i32 0, i32 0, !dbg !4415
  %1040 = load i8*, i8** %buffer2066, align 8, !dbg !4415
  %stack2067 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4416
  %1041 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2067, align 8, !dbg !4416
  %avail2068 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4416
  %1042 = load i32, i32* %avail2068, align 4, !dbg !4416
  %idxprom2069 = zext i32 %1042 to i64, !dbg !4416
  %arrayidx2070 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1041, i64 %idxprom2069, !dbg !4416
  %fixup_alt_jump2071 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx2070, i32 0, i32 1, !dbg !4417
  %1043 = load i64, i64* %fixup_alt_jump2071, align 8, !dbg !4417
  %add.ptr2072 = getelementptr inbounds i8, i8* %1040, i64 %1043, !dbg !4418
  %add.ptr2073 = getelementptr inbounds i8, i8* %add.ptr2072, i64 -1, !dbg !4419
  br label %cond.end2075, !dbg !4413

cond.false2074:                                   ; preds = %if.end2049
  br label %cond.end2075, !dbg !4413

cond.end2075:                                     ; preds = %cond.false2074, %cond.true2065
  %cond2076 = phi i8* [ %add.ptr2073, %cond.true2065 ], [ null, %cond.false2074 ], !dbg !4413
  store i8* %cond2076, i8** %fixup_alt_jump, align 8, !dbg !4420
  %1044 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4421
  %buffer2077 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1044, i32 0, i32 0, !dbg !4421
  %1045 = load i8*, i8** %buffer2077, align 8, !dbg !4421
  %stack2078 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4422
  %1046 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2078, align 8, !dbg !4422
  %avail2079 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4422
  %1047 = load i32, i32* %avail2079, align 4, !dbg !4422
  %idxprom2080 = zext i32 %1047 to i64, !dbg !4422
  %arrayidx2081 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1046, i64 %idxprom2080, !dbg !4422
  %laststart_offset2082 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx2081, i32 0, i32 3, !dbg !4423
  %1048 = load i64, i64* %laststart_offset2082, align 8, !dbg !4423
  %add.ptr2083 = getelementptr inbounds i8, i8* %1045, i64 %1048, !dbg !4424
  store i8* %add.ptr2083, i8** %laststart, align 8, !dbg !4425
  %stack2084 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4426
  %1049 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2084, align 8, !dbg !4426
  %avail2085 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4426
  %1050 = load i32, i32* %avail2085, align 4, !dbg !4426
  %idxprom2086 = zext i32 %1050 to i64, !dbg !4426
  %arrayidx2087 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1049, i64 %idxprom2086, !dbg !4426
  %regnum2088 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx2087, i32 0, i32 4, !dbg !4427
  %1051 = load i32, i32* %regnum2088, align 8, !dbg !4427
  store i32 %1051, i32* %this_group_regnum, align 4, !dbg !4428
  store i8* null, i8** %pending_exact, align 8, !dbg !4429
  %1052 = load i32, i32* %this_group_regnum, align 4, !dbg !4430
  %cmp2089 = icmp ule i32 %1052, 255, !dbg !4432
  br i1 %cmp2089, label %if.then2091, label %if.end2176, !dbg !4433

if.then2091:                                      ; preds = %cond.end2075
  call void @llvm.dbg.declare(metadata i8** %inner_group_loc, metadata !4434, metadata !DIExpression()), !dbg !4436
  %1053 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4437
  %buffer2092 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1053, i32 0, i32 0, !dbg !4437
  %1054 = load i8*, i8** %buffer2092, align 8, !dbg !4437
  %stack2093 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4438
  %1055 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2093, align 8, !dbg !4438
  %avail2094 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !4438
  %1056 = load i32, i32* %avail2094, align 4, !dbg !4438
  %idxprom2095 = zext i32 %1056 to i64, !dbg !4438
  %arrayidx2096 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %1055, i64 %idxprom2095, !dbg !4438
  %inner_group_offset2097 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx2096, i32 0, i32 2, !dbg !4439
  %1057 = load i64, i64* %inner_group_offset2097, align 8, !dbg !4439
  %add.ptr2098 = getelementptr inbounds i8, i8* %1054, i64 %1057, !dbg !4440
  store i8* %add.ptr2098, i8** %inner_group_loc, align 8, !dbg !4436
  %1058 = load i32, i32* %regnum, align 4, !dbg !4441
  %1059 = load i32, i32* %this_group_regnum, align 4, !dbg !4442
  %sub2099 = sub i32 %1058, %1059, !dbg !4443
  %conv2100 = trunc i32 %sub2099 to i8, !dbg !4441
  %1060 = load i8*, i8** %inner_group_loc, align 8, !dbg !4444
  store i8 %conv2100, i8* %1060, align 1, !dbg !4445
  br label %do.body2101, !dbg !4446

do.body2101:                                      ; preds = %if.then2091
  br label %while.cond2102, !dbg !4447

while.cond2102:                                   ; preds = %do.end2167, %do.body2101
  %1061 = load i8*, i8** %b, align 8, !dbg !4447
  %1062 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4447
  %buffer2103 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1062, i32 0, i32 0, !dbg !4447
  %1063 = load i8*, i8** %buffer2103, align 8, !dbg !4447
  %sub.ptr.lhs.cast2104 = ptrtoint i8* %1061 to i64, !dbg !4447
  %sub.ptr.rhs.cast2105 = ptrtoint i8* %1063 to i64, !dbg !4447
  %sub.ptr.sub2106 = sub i64 %sub.ptr.lhs.cast2104, %sub.ptr.rhs.cast2105, !dbg !4447
  %add2107 = add nsw i64 %sub.ptr.sub2106, 3, !dbg !4447
  %1064 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4447
  %allocated2108 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1064, i32 0, i32 1, !dbg !4447
  %1065 = load i64, i64* %allocated2108, align 8, !dbg !4447
  %cmp2109 = icmp ugt i64 %add2107, %1065, !dbg !4447
  br i1 %cmp2109, label %while.body2111, label %while.end2168, !dbg !4447

while.body2111:                                   ; preds = %while.cond2102
  br label %do.body2112, !dbg !4447

do.body2112:                                      ; preds = %while.body2111
  call void @llvm.dbg.declare(metadata i8** %old_buffer2113, metadata !4449, metadata !DIExpression()), !dbg !4451
  %1066 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4451
  %buffer2114 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1066, i32 0, i32 0, !dbg !4451
  %1067 = load i8*, i8** %buffer2114, align 8, !dbg !4451
  store i8* %1067, i8** %old_buffer2113, align 8, !dbg !4451
  %1068 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4452
  %allocated2115 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1068, i32 0, i32 1, !dbg !4452
  %1069 = load i64, i64* %allocated2115, align 8, !dbg !4452
  %cmp2116 = icmp eq i64 %1069, 65536, !dbg !4452
  br i1 %cmp2116, label %if.then2118, label %if.end2119, !dbg !4451

if.then2118:                                      ; preds = %do.body2112
  store i32 15, i32* %retval, align 4, !dbg !4452
  br label %return, !dbg !4452

if.end2119:                                       ; preds = %do.body2112
  %1070 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4451
  %allocated2120 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1070, i32 0, i32 1, !dbg !4451
  %1071 = load i64, i64* %allocated2120, align 8, !dbg !4451
  %shl2121 = shl i64 %1071, 1, !dbg !4451
  store i64 %shl2121, i64* %allocated2120, align 8, !dbg !4451
  %1072 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4454
  %allocated2122 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1072, i32 0, i32 1, !dbg !4454
  %1073 = load i64, i64* %allocated2122, align 8, !dbg !4454
  %cmp2123 = icmp ugt i64 %1073, 65536, !dbg !4454
  br i1 %cmp2123, label %if.then2125, label %if.end2127, !dbg !4451

if.then2125:                                      ; preds = %if.end2119
  %1074 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4454
  %allocated2126 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1074, i32 0, i32 1, !dbg !4454
  store i64 65536, i64* %allocated2126, align 8, !dbg !4454
  br label %if.end2127, !dbg !4454

if.end2127:                                       ; preds = %if.then2125, %if.end2119
  %1075 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4451
  %buffer2128 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1075, i32 0, i32 0, !dbg !4451
  %1076 = load i8*, i8** %buffer2128, align 8, !dbg !4451
  %1077 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4451
  %allocated2129 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1077, i32 0, i32 1, !dbg !4451
  %1078 = load i64, i64* %allocated2129, align 8, !dbg !4451
  %call2130 = call i8* @realloc(i8* %1076, i64 %1078), !dbg !4451
  %1079 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4451
  %buffer2131 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1079, i32 0, i32 0, !dbg !4451
  store i8* %call2130, i8** %buffer2131, align 8, !dbg !4451
  %1080 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4456
  %buffer2132 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1080, i32 0, i32 0, !dbg !4456
  %1081 = load i8*, i8** %buffer2132, align 8, !dbg !4456
  %cmp2133 = icmp eq i8* %1081, null, !dbg !4456
  br i1 %cmp2133, label %if.then2135, label %if.end2136, !dbg !4451

if.then2135:                                      ; preds = %if.end2127
  store i32 12, i32* %retval, align 4, !dbg !4456
  br label %return, !dbg !4456

if.end2136:                                       ; preds = %if.end2127
  %1082 = load i8*, i8** %old_buffer2113, align 8, !dbg !4458
  %1083 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4458
  %buffer2137 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1083, i32 0, i32 0, !dbg !4458
  %1084 = load i8*, i8** %buffer2137, align 8, !dbg !4458
  %cmp2138 = icmp ne i8* %1082, %1084, !dbg !4458
  br i1 %cmp2138, label %if.then2140, label %if.end2166, !dbg !4451

if.then2140:                                      ; preds = %if.end2136
  call void @llvm.dbg.declare(metadata i32* %incr2141, metadata !4460, metadata !DIExpression()), !dbg !4462
  %1085 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4462
  %buffer2142 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1085, i32 0, i32 0, !dbg !4462
  %1086 = load i8*, i8** %buffer2142, align 8, !dbg !4462
  %1087 = load i8*, i8** %old_buffer2113, align 8, !dbg !4462
  %sub.ptr.lhs.cast2143 = ptrtoint i8* %1086 to i64, !dbg !4462
  %sub.ptr.rhs.cast2144 = ptrtoint i8* %1087 to i64, !dbg !4462
  %sub.ptr.sub2145 = sub i64 %sub.ptr.lhs.cast2143, %sub.ptr.rhs.cast2144, !dbg !4462
  %conv2146 = trunc i64 %sub.ptr.sub2145 to i32, !dbg !4462
  store i32 %conv2146, i32* %incr2141, align 4, !dbg !4462
  %1088 = load i32, i32* %incr2141, align 4, !dbg !4462
  %1089 = load i8*, i8** %b, align 8, !dbg !4462
  %idx.ext2147 = sext i32 %1088 to i64, !dbg !4462
  %add.ptr2148 = getelementptr inbounds i8, i8* %1089, i64 %idx.ext2147, !dbg !4462
  store i8* %add.ptr2148, i8** %b, align 8, !dbg !4462
  %1090 = load i32, i32* %incr2141, align 4, !dbg !4462
  %1091 = load i8*, i8** %begalt, align 8, !dbg !4462
  %idx.ext2149 = sext i32 %1090 to i64, !dbg !4462
  %add.ptr2150 = getelementptr inbounds i8, i8* %1091, i64 %idx.ext2149, !dbg !4462
  store i8* %add.ptr2150, i8** %begalt, align 8, !dbg !4462
  %1092 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4463
  %tobool2151 = icmp ne i8* %1092, null, !dbg !4463
  br i1 %tobool2151, label %if.then2152, label %if.end2155, !dbg !4462

if.then2152:                                      ; preds = %if.then2140
  %1093 = load i32, i32* %incr2141, align 4, !dbg !4463
  %1094 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4463
  %idx.ext2153 = sext i32 %1093 to i64, !dbg !4463
  %add.ptr2154 = getelementptr inbounds i8, i8* %1094, i64 %idx.ext2153, !dbg !4463
  store i8* %add.ptr2154, i8** %fixup_alt_jump, align 8, !dbg !4463
  br label %if.end2155, !dbg !4463

if.end2155:                                       ; preds = %if.then2152, %if.then2140
  %1095 = load i8*, i8** %laststart, align 8, !dbg !4465
  %tobool2156 = icmp ne i8* %1095, null, !dbg !4465
  br i1 %tobool2156, label %if.then2157, label %if.end2160, !dbg !4462

if.then2157:                                      ; preds = %if.end2155
  %1096 = load i32, i32* %incr2141, align 4, !dbg !4465
  %1097 = load i8*, i8** %laststart, align 8, !dbg !4465
  %idx.ext2158 = sext i32 %1096 to i64, !dbg !4465
  %add.ptr2159 = getelementptr inbounds i8, i8* %1097, i64 %idx.ext2158, !dbg !4465
  store i8* %add.ptr2159, i8** %laststart, align 8, !dbg !4465
  br label %if.end2160, !dbg !4465

if.end2160:                                       ; preds = %if.then2157, %if.end2155
  %1098 = load i8*, i8** %pending_exact, align 8, !dbg !4467
  %tobool2161 = icmp ne i8* %1098, null, !dbg !4467
  br i1 %tobool2161, label %if.then2162, label %if.end2165, !dbg !4462

if.then2162:                                      ; preds = %if.end2160
  %1099 = load i32, i32* %incr2141, align 4, !dbg !4467
  %1100 = load i8*, i8** %pending_exact, align 8, !dbg !4467
  %idx.ext2163 = sext i32 %1099 to i64, !dbg !4467
  %add.ptr2164 = getelementptr inbounds i8, i8* %1100, i64 %idx.ext2163, !dbg !4467
  store i8* %add.ptr2164, i8** %pending_exact, align 8, !dbg !4467
  br label %if.end2165, !dbg !4467

if.end2165:                                       ; preds = %if.then2162, %if.end2160
  br label %if.end2166, !dbg !4462

if.end2166:                                       ; preds = %if.end2165, %if.end2136
  br label %do.end2167, !dbg !4451

do.end2167:                                       ; preds = %if.end2166
  br label %while.cond2102, !dbg !4447, !llvm.loop !4469

while.end2168:                                    ; preds = %while.cond2102
  %1101 = load i8*, i8** %b, align 8, !dbg !4447
  %incdec.ptr2169 = getelementptr inbounds i8, i8* %1101, i32 1, !dbg !4447
  store i8* %incdec.ptr2169, i8** %b, align 8, !dbg !4447
  store i8 7, i8* %1101, align 1, !dbg !4447
  %1102 = load i32, i32* %this_group_regnum, align 4, !dbg !4447
  %conv2170 = trunc i32 %1102 to i8, !dbg !4447
  %1103 = load i8*, i8** %b, align 8, !dbg !4447
  %incdec.ptr2171 = getelementptr inbounds i8, i8* %1103, i32 1, !dbg !4447
  store i8* %incdec.ptr2171, i8** %b, align 8, !dbg !4447
  store i8 %conv2170, i8* %1103, align 1, !dbg !4447
  %1104 = load i32, i32* %regnum, align 4, !dbg !4447
  %1105 = load i32, i32* %this_group_regnum, align 4, !dbg !4447
  %sub2172 = sub i32 %1104, %1105, !dbg !4447
  %conv2173 = trunc i32 %sub2172 to i8, !dbg !4447
  %1106 = load i8*, i8** %b, align 8, !dbg !4447
  %incdec.ptr2174 = getelementptr inbounds i8, i8* %1106, i32 1, !dbg !4447
  store i8* %incdec.ptr2174, i8** %b, align 8, !dbg !4447
  store i8 %conv2173, i8* %1106, align 1, !dbg !4447
  br label %do.end2175, !dbg !4447

do.end2175:                                       ; preds = %while.end2168
  br label %if.end2176, !dbg !4470

if.end2176:                                       ; preds = %do.end2175, %cond.end2075
  br label %sw.epilog, !dbg !4471

sw.bb2177:                                        ; preds = %do.end1793
  %1107 = load i64, i64* %syntax.addr, align 8, !dbg !4472
  %and2178 = and i64 %1107, 1024, !dbg !4474
  %tobool2179 = icmp ne i64 %and2178, 0, !dbg !4474
  br i1 %tobool2179, label %if.then2183, label %lor.lhs.false2180, !dbg !4475

lor.lhs.false2180:                                ; preds = %sw.bb2177
  %1108 = load i64, i64* %syntax.addr, align 8, !dbg !4476
  %and2181 = and i64 %1108, 32768, !dbg !4477
  %tobool2182 = icmp ne i64 %and2181, 0, !dbg !4477
  br i1 %tobool2182, label %if.then2183, label %if.end2184, !dbg !4478

if.then2183:                                      ; preds = %lor.lhs.false2180, %sw.bb2177
  br label %normal_backslash, !dbg !4479

if.end2184:                                       ; preds = %lor.lhs.false2180
  br label %handle_alt, !dbg !4480

handle_alt:                                       ; preds = %if.end2184, %if.then1771, %if.then1766
  call void @llvm.dbg.label(metadata !4481), !dbg !4482
  %1109 = load i64, i64* %syntax.addr, align 8, !dbg !4483
  %and2185 = and i64 %1109, 1024, !dbg !4485
  %tobool2186 = icmp ne i64 %and2185, 0, !dbg !4485
  br i1 %tobool2186, label %if.then2187, label %if.end2188, !dbg !4486

if.then2187:                                      ; preds = %handle_alt
  br label %normal_char, !dbg !4487

if.end2188:                                       ; preds = %handle_alt
  br label %while.cond2189, !dbg !4488

while.cond2189:                                   ; preds = %do.end2254, %if.end2188
  %1110 = load i8*, i8** %b, align 8, !dbg !4488
  %1111 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4488
  %buffer2190 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1111, i32 0, i32 0, !dbg !4488
  %1112 = load i8*, i8** %buffer2190, align 8, !dbg !4488
  %sub.ptr.lhs.cast2191 = ptrtoint i8* %1110 to i64, !dbg !4488
  %sub.ptr.rhs.cast2192 = ptrtoint i8* %1112 to i64, !dbg !4488
  %sub.ptr.sub2193 = sub i64 %sub.ptr.lhs.cast2191, %sub.ptr.rhs.cast2192, !dbg !4488
  %add2194 = add nsw i64 %sub.ptr.sub2193, 3, !dbg !4488
  %1113 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4488
  %allocated2195 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1113, i32 0, i32 1, !dbg !4488
  %1114 = load i64, i64* %allocated2195, align 8, !dbg !4488
  %cmp2196 = icmp ugt i64 %add2194, %1114, !dbg !4488
  br i1 %cmp2196, label %while.body2198, label %while.end2255, !dbg !4488

while.body2198:                                   ; preds = %while.cond2189
  br label %do.body2199, !dbg !4488

do.body2199:                                      ; preds = %while.body2198
  call void @llvm.dbg.declare(metadata i8** %old_buffer2200, metadata !4489, metadata !DIExpression()), !dbg !4491
  %1115 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4491
  %buffer2201 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1115, i32 0, i32 0, !dbg !4491
  %1116 = load i8*, i8** %buffer2201, align 8, !dbg !4491
  store i8* %1116, i8** %old_buffer2200, align 8, !dbg !4491
  %1117 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4492
  %allocated2202 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1117, i32 0, i32 1, !dbg !4492
  %1118 = load i64, i64* %allocated2202, align 8, !dbg !4492
  %cmp2203 = icmp eq i64 %1118, 65536, !dbg !4492
  br i1 %cmp2203, label %if.then2205, label %if.end2206, !dbg !4491

if.then2205:                                      ; preds = %do.body2199
  store i32 15, i32* %retval, align 4, !dbg !4492
  br label %return, !dbg !4492

if.end2206:                                       ; preds = %do.body2199
  %1119 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4491
  %allocated2207 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1119, i32 0, i32 1, !dbg !4491
  %1120 = load i64, i64* %allocated2207, align 8, !dbg !4491
  %shl2208 = shl i64 %1120, 1, !dbg !4491
  store i64 %shl2208, i64* %allocated2207, align 8, !dbg !4491
  %1121 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4494
  %allocated2209 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1121, i32 0, i32 1, !dbg !4494
  %1122 = load i64, i64* %allocated2209, align 8, !dbg !4494
  %cmp2210 = icmp ugt i64 %1122, 65536, !dbg !4494
  br i1 %cmp2210, label %if.then2212, label %if.end2214, !dbg !4491

if.then2212:                                      ; preds = %if.end2206
  %1123 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4494
  %allocated2213 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1123, i32 0, i32 1, !dbg !4494
  store i64 65536, i64* %allocated2213, align 8, !dbg !4494
  br label %if.end2214, !dbg !4494

if.end2214:                                       ; preds = %if.then2212, %if.end2206
  %1124 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4491
  %buffer2215 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1124, i32 0, i32 0, !dbg !4491
  %1125 = load i8*, i8** %buffer2215, align 8, !dbg !4491
  %1126 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4491
  %allocated2216 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1126, i32 0, i32 1, !dbg !4491
  %1127 = load i64, i64* %allocated2216, align 8, !dbg !4491
  %call2217 = call i8* @realloc(i8* %1125, i64 %1127), !dbg !4491
  %1128 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4491
  %buffer2218 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1128, i32 0, i32 0, !dbg !4491
  store i8* %call2217, i8** %buffer2218, align 8, !dbg !4491
  %1129 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4496
  %buffer2219 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1129, i32 0, i32 0, !dbg !4496
  %1130 = load i8*, i8** %buffer2219, align 8, !dbg !4496
  %cmp2220 = icmp eq i8* %1130, null, !dbg !4496
  br i1 %cmp2220, label %if.then2222, label %if.end2223, !dbg !4491

if.then2222:                                      ; preds = %if.end2214
  store i32 12, i32* %retval, align 4, !dbg !4496
  br label %return, !dbg !4496

if.end2223:                                       ; preds = %if.end2214
  %1131 = load i8*, i8** %old_buffer2200, align 8, !dbg !4498
  %1132 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4498
  %buffer2224 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1132, i32 0, i32 0, !dbg !4498
  %1133 = load i8*, i8** %buffer2224, align 8, !dbg !4498
  %cmp2225 = icmp ne i8* %1131, %1133, !dbg !4498
  br i1 %cmp2225, label %if.then2227, label %if.end2253, !dbg !4491

if.then2227:                                      ; preds = %if.end2223
  call void @llvm.dbg.declare(metadata i32* %incr2228, metadata !4500, metadata !DIExpression()), !dbg !4502
  %1134 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4502
  %buffer2229 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1134, i32 0, i32 0, !dbg !4502
  %1135 = load i8*, i8** %buffer2229, align 8, !dbg !4502
  %1136 = load i8*, i8** %old_buffer2200, align 8, !dbg !4502
  %sub.ptr.lhs.cast2230 = ptrtoint i8* %1135 to i64, !dbg !4502
  %sub.ptr.rhs.cast2231 = ptrtoint i8* %1136 to i64, !dbg !4502
  %sub.ptr.sub2232 = sub i64 %sub.ptr.lhs.cast2230, %sub.ptr.rhs.cast2231, !dbg !4502
  %conv2233 = trunc i64 %sub.ptr.sub2232 to i32, !dbg !4502
  store i32 %conv2233, i32* %incr2228, align 4, !dbg !4502
  %1137 = load i32, i32* %incr2228, align 4, !dbg !4502
  %1138 = load i8*, i8** %b, align 8, !dbg !4502
  %idx.ext2234 = sext i32 %1137 to i64, !dbg !4502
  %add.ptr2235 = getelementptr inbounds i8, i8* %1138, i64 %idx.ext2234, !dbg !4502
  store i8* %add.ptr2235, i8** %b, align 8, !dbg !4502
  %1139 = load i32, i32* %incr2228, align 4, !dbg !4502
  %1140 = load i8*, i8** %begalt, align 8, !dbg !4502
  %idx.ext2236 = sext i32 %1139 to i64, !dbg !4502
  %add.ptr2237 = getelementptr inbounds i8, i8* %1140, i64 %idx.ext2236, !dbg !4502
  store i8* %add.ptr2237, i8** %begalt, align 8, !dbg !4502
  %1141 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4503
  %tobool2238 = icmp ne i8* %1141, null, !dbg !4503
  br i1 %tobool2238, label %if.then2239, label %if.end2242, !dbg !4502

if.then2239:                                      ; preds = %if.then2227
  %1142 = load i32, i32* %incr2228, align 4, !dbg !4503
  %1143 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4503
  %idx.ext2240 = sext i32 %1142 to i64, !dbg !4503
  %add.ptr2241 = getelementptr inbounds i8, i8* %1143, i64 %idx.ext2240, !dbg !4503
  store i8* %add.ptr2241, i8** %fixup_alt_jump, align 8, !dbg !4503
  br label %if.end2242, !dbg !4503

if.end2242:                                       ; preds = %if.then2239, %if.then2227
  %1144 = load i8*, i8** %laststart, align 8, !dbg !4505
  %tobool2243 = icmp ne i8* %1144, null, !dbg !4505
  br i1 %tobool2243, label %if.then2244, label %if.end2247, !dbg !4502

if.then2244:                                      ; preds = %if.end2242
  %1145 = load i32, i32* %incr2228, align 4, !dbg !4505
  %1146 = load i8*, i8** %laststart, align 8, !dbg !4505
  %idx.ext2245 = sext i32 %1145 to i64, !dbg !4505
  %add.ptr2246 = getelementptr inbounds i8, i8* %1146, i64 %idx.ext2245, !dbg !4505
  store i8* %add.ptr2246, i8** %laststart, align 8, !dbg !4505
  br label %if.end2247, !dbg !4505

if.end2247:                                       ; preds = %if.then2244, %if.end2242
  %1147 = load i8*, i8** %pending_exact, align 8, !dbg !4507
  %tobool2248 = icmp ne i8* %1147, null, !dbg !4507
  br i1 %tobool2248, label %if.then2249, label %if.end2252, !dbg !4502

if.then2249:                                      ; preds = %if.end2247
  %1148 = load i32, i32* %incr2228, align 4, !dbg !4507
  %1149 = load i8*, i8** %pending_exact, align 8, !dbg !4507
  %idx.ext2250 = sext i32 %1148 to i64, !dbg !4507
  %add.ptr2251 = getelementptr inbounds i8, i8* %1149, i64 %idx.ext2250, !dbg !4507
  store i8* %add.ptr2251, i8** %pending_exact, align 8, !dbg !4507
  br label %if.end2252, !dbg !4507

if.end2252:                                       ; preds = %if.then2249, %if.end2247
  br label %if.end2253, !dbg !4502

if.end2253:                                       ; preds = %if.end2252, %if.end2223
  br label %do.end2254, !dbg !4491

do.end2254:                                       ; preds = %if.end2253
  br label %while.cond2189, !dbg !4488, !llvm.loop !4509

while.end2255:                                    ; preds = %while.cond2189
  %1150 = load i8*, i8** %begalt, align 8, !dbg !4510
  %1151 = load i8*, i8** %b, align 8, !dbg !4510
  %add.ptr2256 = getelementptr inbounds i8, i8* %1151, i64 2, !dbg !4510
  %add.ptr2257 = getelementptr inbounds i8, i8* %add.ptr2256, i64 4, !dbg !4510
  %1152 = load i8*, i8** %begalt, align 8, !dbg !4510
  %sub.ptr.lhs.cast2258 = ptrtoint i8* %add.ptr2257 to i64, !dbg !4510
  %sub.ptr.rhs.cast2259 = ptrtoint i8* %1152 to i64, !dbg !4510
  %sub.ptr.sub2260 = sub i64 %sub.ptr.lhs.cast2258, %sub.ptr.rhs.cast2259, !dbg !4510
  %sub2261 = sub nsw i64 %sub.ptr.sub2260, 3, !dbg !4510
  %conv2262 = trunc i64 %sub2261 to i32, !dbg !4510
  %1153 = load i8*, i8** %b, align 8, !dbg !4510
  call void @byte_insert_op1(i32 15, i8* %1150, i32 %conv2262, i8* %1153), !dbg !4510
  store i8* null, i8** %pending_exact, align 8, !dbg !4511
  %1154 = load i8*, i8** %b, align 8, !dbg !4512
  %add.ptr2263 = getelementptr inbounds i8, i8* %1154, i64 3, !dbg !4512
  store i8* %add.ptr2263, i8** %b, align 8, !dbg !4512
  %1155 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4513
  %tobool2264 = icmp ne i8* %1155, null, !dbg !4513
  br i1 %tobool2264, label %if.then2265, label %if.end2271, !dbg !4515

if.then2265:                                      ; preds = %while.end2255
  %1156 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4516
  %1157 = load i8*, i8** %b, align 8, !dbg !4516
  %1158 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4516
  %sub.ptr.lhs.cast2266 = ptrtoint i8* %1157 to i64, !dbg !4516
  %sub.ptr.rhs.cast2267 = ptrtoint i8* %1158 to i64, !dbg !4516
  %sub.ptr.sub2268 = sub i64 %sub.ptr.lhs.cast2266, %sub.ptr.rhs.cast2267, !dbg !4516
  %sub2269 = sub nsw i64 %sub.ptr.sub2268, 3, !dbg !4516
  %conv2270 = trunc i64 %sub2269 to i32, !dbg !4516
  call void @byte_store_op1(i32 14, i8* %1156, i32 %conv2270), !dbg !4516
  br label %if.end2271, !dbg !4516

if.end2271:                                       ; preds = %if.then2265, %while.end2255
  %1159 = load i8*, i8** %b, align 8, !dbg !4517
  store i8* %1159, i8** %fixup_alt_jump, align 8, !dbg !4518
  br label %while.cond2272, !dbg !4519

while.cond2272:                                   ; preds = %do.end2337, %if.end2271
  %1160 = load i8*, i8** %b, align 8, !dbg !4519
  %1161 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4519
  %buffer2273 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1161, i32 0, i32 0, !dbg !4519
  %1162 = load i8*, i8** %buffer2273, align 8, !dbg !4519
  %sub.ptr.lhs.cast2274 = ptrtoint i8* %1160 to i64, !dbg !4519
  %sub.ptr.rhs.cast2275 = ptrtoint i8* %1162 to i64, !dbg !4519
  %sub.ptr.sub2276 = sub i64 %sub.ptr.lhs.cast2274, %sub.ptr.rhs.cast2275, !dbg !4519
  %add2277 = add nsw i64 %sub.ptr.sub2276, 3, !dbg !4519
  %1163 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4519
  %allocated2278 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1163, i32 0, i32 1, !dbg !4519
  %1164 = load i64, i64* %allocated2278, align 8, !dbg !4519
  %cmp2279 = icmp ugt i64 %add2277, %1164, !dbg !4519
  br i1 %cmp2279, label %while.body2281, label %while.end2338, !dbg !4519

while.body2281:                                   ; preds = %while.cond2272
  br label %do.body2282, !dbg !4519

do.body2282:                                      ; preds = %while.body2281
  call void @llvm.dbg.declare(metadata i8** %old_buffer2283, metadata !4520, metadata !DIExpression()), !dbg !4522
  %1165 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4522
  %buffer2284 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1165, i32 0, i32 0, !dbg !4522
  %1166 = load i8*, i8** %buffer2284, align 8, !dbg !4522
  store i8* %1166, i8** %old_buffer2283, align 8, !dbg !4522
  %1167 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4523
  %allocated2285 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1167, i32 0, i32 1, !dbg !4523
  %1168 = load i64, i64* %allocated2285, align 8, !dbg !4523
  %cmp2286 = icmp eq i64 %1168, 65536, !dbg !4523
  br i1 %cmp2286, label %if.then2288, label %if.end2289, !dbg !4522

if.then2288:                                      ; preds = %do.body2282
  store i32 15, i32* %retval, align 4, !dbg !4523
  br label %return, !dbg !4523

if.end2289:                                       ; preds = %do.body2282
  %1169 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4522
  %allocated2290 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1169, i32 0, i32 1, !dbg !4522
  %1170 = load i64, i64* %allocated2290, align 8, !dbg !4522
  %shl2291 = shl i64 %1170, 1, !dbg !4522
  store i64 %shl2291, i64* %allocated2290, align 8, !dbg !4522
  %1171 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4525
  %allocated2292 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1171, i32 0, i32 1, !dbg !4525
  %1172 = load i64, i64* %allocated2292, align 8, !dbg !4525
  %cmp2293 = icmp ugt i64 %1172, 65536, !dbg !4525
  br i1 %cmp2293, label %if.then2295, label %if.end2297, !dbg !4522

if.then2295:                                      ; preds = %if.end2289
  %1173 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4525
  %allocated2296 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1173, i32 0, i32 1, !dbg !4525
  store i64 65536, i64* %allocated2296, align 8, !dbg !4525
  br label %if.end2297, !dbg !4525

if.end2297:                                       ; preds = %if.then2295, %if.end2289
  %1174 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4522
  %buffer2298 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1174, i32 0, i32 0, !dbg !4522
  %1175 = load i8*, i8** %buffer2298, align 8, !dbg !4522
  %1176 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4522
  %allocated2299 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1176, i32 0, i32 1, !dbg !4522
  %1177 = load i64, i64* %allocated2299, align 8, !dbg !4522
  %call2300 = call i8* @realloc(i8* %1175, i64 %1177), !dbg !4522
  %1178 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4522
  %buffer2301 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1178, i32 0, i32 0, !dbg !4522
  store i8* %call2300, i8** %buffer2301, align 8, !dbg !4522
  %1179 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4527
  %buffer2302 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1179, i32 0, i32 0, !dbg !4527
  %1180 = load i8*, i8** %buffer2302, align 8, !dbg !4527
  %cmp2303 = icmp eq i8* %1180, null, !dbg !4527
  br i1 %cmp2303, label %if.then2305, label %if.end2306, !dbg !4522

if.then2305:                                      ; preds = %if.end2297
  store i32 12, i32* %retval, align 4, !dbg !4527
  br label %return, !dbg !4527

if.end2306:                                       ; preds = %if.end2297
  %1181 = load i8*, i8** %old_buffer2283, align 8, !dbg !4529
  %1182 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4529
  %buffer2307 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1182, i32 0, i32 0, !dbg !4529
  %1183 = load i8*, i8** %buffer2307, align 8, !dbg !4529
  %cmp2308 = icmp ne i8* %1181, %1183, !dbg !4529
  br i1 %cmp2308, label %if.then2310, label %if.end2336, !dbg !4522

if.then2310:                                      ; preds = %if.end2306
  call void @llvm.dbg.declare(metadata i32* %incr2311, metadata !4531, metadata !DIExpression()), !dbg !4533
  %1184 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4533
  %buffer2312 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1184, i32 0, i32 0, !dbg !4533
  %1185 = load i8*, i8** %buffer2312, align 8, !dbg !4533
  %1186 = load i8*, i8** %old_buffer2283, align 8, !dbg !4533
  %sub.ptr.lhs.cast2313 = ptrtoint i8* %1185 to i64, !dbg !4533
  %sub.ptr.rhs.cast2314 = ptrtoint i8* %1186 to i64, !dbg !4533
  %sub.ptr.sub2315 = sub i64 %sub.ptr.lhs.cast2313, %sub.ptr.rhs.cast2314, !dbg !4533
  %conv2316 = trunc i64 %sub.ptr.sub2315 to i32, !dbg !4533
  store i32 %conv2316, i32* %incr2311, align 4, !dbg !4533
  %1187 = load i32, i32* %incr2311, align 4, !dbg !4533
  %1188 = load i8*, i8** %b, align 8, !dbg !4533
  %idx.ext2317 = sext i32 %1187 to i64, !dbg !4533
  %add.ptr2318 = getelementptr inbounds i8, i8* %1188, i64 %idx.ext2317, !dbg !4533
  store i8* %add.ptr2318, i8** %b, align 8, !dbg !4533
  %1189 = load i32, i32* %incr2311, align 4, !dbg !4533
  %1190 = load i8*, i8** %begalt, align 8, !dbg !4533
  %idx.ext2319 = sext i32 %1189 to i64, !dbg !4533
  %add.ptr2320 = getelementptr inbounds i8, i8* %1190, i64 %idx.ext2319, !dbg !4533
  store i8* %add.ptr2320, i8** %begalt, align 8, !dbg !4533
  %1191 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4534
  %tobool2321 = icmp ne i8* %1191, null, !dbg !4534
  br i1 %tobool2321, label %if.then2322, label %if.end2325, !dbg !4533

if.then2322:                                      ; preds = %if.then2310
  %1192 = load i32, i32* %incr2311, align 4, !dbg !4534
  %1193 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4534
  %idx.ext2323 = sext i32 %1192 to i64, !dbg !4534
  %add.ptr2324 = getelementptr inbounds i8, i8* %1193, i64 %idx.ext2323, !dbg !4534
  store i8* %add.ptr2324, i8** %fixup_alt_jump, align 8, !dbg !4534
  br label %if.end2325, !dbg !4534

if.end2325:                                       ; preds = %if.then2322, %if.then2310
  %1194 = load i8*, i8** %laststart, align 8, !dbg !4536
  %tobool2326 = icmp ne i8* %1194, null, !dbg !4536
  br i1 %tobool2326, label %if.then2327, label %if.end2330, !dbg !4533

if.then2327:                                      ; preds = %if.end2325
  %1195 = load i32, i32* %incr2311, align 4, !dbg !4536
  %1196 = load i8*, i8** %laststart, align 8, !dbg !4536
  %idx.ext2328 = sext i32 %1195 to i64, !dbg !4536
  %add.ptr2329 = getelementptr inbounds i8, i8* %1196, i64 %idx.ext2328, !dbg !4536
  store i8* %add.ptr2329, i8** %laststart, align 8, !dbg !4536
  br label %if.end2330, !dbg !4536

if.end2330:                                       ; preds = %if.then2327, %if.end2325
  %1197 = load i8*, i8** %pending_exact, align 8, !dbg !4538
  %tobool2331 = icmp ne i8* %1197, null, !dbg !4538
  br i1 %tobool2331, label %if.then2332, label %if.end2335, !dbg !4533

if.then2332:                                      ; preds = %if.end2330
  %1198 = load i32, i32* %incr2311, align 4, !dbg !4538
  %1199 = load i8*, i8** %pending_exact, align 8, !dbg !4538
  %idx.ext2333 = sext i32 %1198 to i64, !dbg !4538
  %add.ptr2334 = getelementptr inbounds i8, i8* %1199, i64 %idx.ext2333, !dbg !4538
  store i8* %add.ptr2334, i8** %pending_exact, align 8, !dbg !4538
  br label %if.end2335, !dbg !4538

if.end2335:                                       ; preds = %if.then2332, %if.end2330
  br label %if.end2336, !dbg !4533

if.end2336:                                       ; preds = %if.end2335, %if.end2306
  br label %do.end2337, !dbg !4522

do.end2337:                                       ; preds = %if.end2336
  br label %while.cond2272, !dbg !4519, !llvm.loop !4540

while.end2338:                                    ; preds = %while.cond2272
  %1200 = load i8*, i8** %b, align 8, !dbg !4541
  %add.ptr2339 = getelementptr inbounds i8, i8* %1200, i64 3, !dbg !4541
  store i8* %add.ptr2339, i8** %b, align 8, !dbg !4541
  store i8* null, i8** %laststart, align 8, !dbg !4542
  %1201 = load i8*, i8** %b, align 8, !dbg !4543
  store i8* %1201, i8** %begalt, align 8, !dbg !4544
  br label %sw.epilog, !dbg !4545

sw.bb2340:                                        ; preds = %do.end1793
  %1202 = load i64, i64* %syntax.addr, align 8, !dbg !4546
  %and2341 = and i64 %1202, 512, !dbg !4548
  %tobool2342 = icmp ne i64 %and2341, 0, !dbg !4548
  br i1 %tobool2342, label %lor.lhs.false2343, label %if.then2346, !dbg !4549

lor.lhs.false2343:                                ; preds = %sw.bb2340
  %1203 = load i64, i64* %syntax.addr, align 8, !dbg !4550
  %and2344 = and i64 %1203, 4096, !dbg !4551
  %tobool2345 = icmp ne i64 %and2344, 0, !dbg !4551
  br i1 %tobool2345, label %if.then2346, label %if.end2347, !dbg !4552

if.then2346:                                      ; preds = %lor.lhs.false2343, %sw.bb2340
  br label %normal_backslash, !dbg !4553

if.end2347:                                       ; preds = %lor.lhs.false2343
  br label %handle_interval, !dbg !4554

handle_interval:                                  ; preds = %if.end2347, %if.then1779
  call void @llvm.dbg.label(metadata !4555), !dbg !4556
  call void @llvm.dbg.declare(metadata i32* %lower_bound, metadata !4557, metadata !DIExpression()), !dbg !4559
  store i32 -1, i32* %lower_bound, align 4, !dbg !4559
  call void @llvm.dbg.declare(metadata i32* %upper_bound, metadata !4560, metadata !DIExpression()), !dbg !4561
  store i32 -1, i32* %upper_bound, align 4, !dbg !4561
  call void @llvm.dbg.declare(metadata i8** %beg_interval, metadata !4562, metadata !DIExpression()), !dbg !4563
  %1204 = load i8*, i8** %p, align 8, !dbg !4564
  store i8* %1204, i8** %beg_interval, align 8, !dbg !4563
  %1205 = load i8*, i8** %p, align 8, !dbg !4565
  %1206 = load i8*, i8** %pend, align 8, !dbg !4567
  %cmp2348 = icmp eq i8* %1205, %1206, !dbg !4568
  br i1 %cmp2348, label %if.then2350, label %if.end2351, !dbg !4569

if.then2350:                                      ; preds = %handle_interval
  br label %invalid_interval, !dbg !4570

if.end2351:                                       ; preds = %handle_interval
  br label %while.cond2352, !dbg !4571

while.cond2352:                                   ; preds = %if.end2388, %if.end2351
  %1207 = load i8*, i8** %p, align 8, !dbg !4571
  %1208 = load i8*, i8** %pend, align 8, !dbg !4571
  %cmp2353 = icmp ne i8* %1207, %1208, !dbg !4571
  br i1 %cmp2353, label %while.body2355, label %while.end2389, !dbg !4571

while.body2355:                                   ; preds = %while.cond2352
  br label %do.body2356, !dbg !4573

do.body2356:                                      ; preds = %while.body2355
  %1209 = load i8*, i8** %p, align 8, !dbg !4575
  %1210 = load i8*, i8** %pend, align 8, !dbg !4575
  %cmp2357 = icmp eq i8* %1209, %1210, !dbg !4575
  br i1 %cmp2357, label %if.then2359, label %if.end2360, !dbg !4578

if.then2359:                                      ; preds = %do.body2356
  store i32 14, i32* %retval, align 4, !dbg !4575
  br label %return, !dbg !4575

if.end2360:                                       ; preds = %do.body2356
  %1211 = load i8*, i8** %p, align 8, !dbg !4578
  %incdec.ptr2361 = getelementptr inbounds i8, i8* %1211, i32 1, !dbg !4578
  store i8* %incdec.ptr2361, i8** %p, align 8, !dbg !4578
  %1212 = load i8, i8* %1211, align 1, !dbg !4578
  store i8 %1212, i8* %c, align 1, !dbg !4578
  %1213 = load i8*, i8** %translate, align 8, !dbg !4579
  %tobool2362 = icmp ne i8* %1213, null, !dbg !4579
  br i1 %tobool2362, label %if.then2363, label %if.end2366, !dbg !4578

if.then2363:                                      ; preds = %if.end2360
  %1214 = load i8*, i8** %translate, align 8, !dbg !4579
  %1215 = load i8, i8* %c, align 1, !dbg !4579
  %idxprom2364 = zext i8 %1215 to i64, !dbg !4579
  %arrayidx2365 = getelementptr inbounds i8, i8* %1214, i64 %idxprom2364, !dbg !4579
  %1216 = load i8, i8* %arrayidx2365, align 1, !dbg !4579
  store i8 %1216, i8* %c, align 1, !dbg !4579
  br label %if.end2366, !dbg !4579

if.end2366:                                       ; preds = %if.then2363, %if.end2360
  br label %do.end2367, !dbg !4578

do.end2367:                                       ; preds = %if.end2366
  %1217 = load i8, i8* %c, align 1, !dbg !4581
  %conv2368 = zext i8 %1217 to i32, !dbg !4581
  %cmp2369 = icmp slt i32 %conv2368, 48, !dbg !4581
  br i1 %cmp2369, label %if.then2375, label %lor.lhs.false2371, !dbg !4581

lor.lhs.false2371:                                ; preds = %do.end2367
  %1218 = load i8, i8* %c, align 1, !dbg !4581
  %conv2372 = zext i8 %1218 to i32, !dbg !4581
  %cmp2373 = icmp sgt i32 %conv2372, 57, !dbg !4581
  br i1 %cmp2373, label %if.then2375, label %if.end2376, !dbg !4573

if.then2375:                                      ; preds = %lor.lhs.false2371, %do.end2367
  br label %while.end2389, !dbg !4581

if.end2376:                                       ; preds = %lor.lhs.false2371
  %1219 = load i32, i32* %lower_bound, align 4, !dbg !4583
  %cmp2377 = icmp sle i32 %1219, 32767, !dbg !4583
  br i1 %cmp2377, label %if.then2379, label %if.end2388, !dbg !4573

if.then2379:                                      ; preds = %if.end2376
  %1220 = load i32, i32* %lower_bound, align 4, !dbg !4585
  %cmp2380 = icmp slt i32 %1220, 0, !dbg !4585
  br i1 %cmp2380, label %if.then2382, label %if.end2383, !dbg !4588

if.then2382:                                      ; preds = %if.then2379
  store i32 0, i32* %lower_bound, align 4, !dbg !4585
  br label %if.end2383, !dbg !4585

if.end2383:                                       ; preds = %if.then2382, %if.then2379
  %1221 = load i32, i32* %lower_bound, align 4, !dbg !4588
  %mul2384 = mul nsw i32 %1221, 10, !dbg !4588
  %1222 = load i8, i8* %c, align 1, !dbg !4588
  %conv2385 = zext i8 %1222 to i32, !dbg !4588
  %add2386 = add nsw i32 %mul2384, %conv2385, !dbg !4588
  %sub2387 = sub nsw i32 %add2386, 48, !dbg !4588
  store i32 %sub2387, i32* %lower_bound, align 4, !dbg !4588
  br label %if.end2388, !dbg !4588

if.end2388:                                       ; preds = %if.end2383, %if.end2376
  br label %while.cond2352, !dbg !4571, !llvm.loop !4589

while.end2389:                                    ; preds = %if.then2375, %while.cond2352
  %1223 = load i8, i8* %c, align 1, !dbg !4590
  %conv2390 = zext i8 %1223 to i32, !dbg !4590
  %cmp2391 = icmp eq i32 %conv2390, 44, !dbg !4592
  br i1 %cmp2391, label %if.then2393, label %if.else2436, !dbg !4593

if.then2393:                                      ; preds = %while.end2389
  br label %while.cond2394, !dbg !4594

while.cond2394:                                   ; preds = %if.end2430, %if.then2393
  %1224 = load i8*, i8** %p, align 8, !dbg !4594
  %1225 = load i8*, i8** %pend, align 8, !dbg !4594
  %cmp2395 = icmp ne i8* %1224, %1225, !dbg !4594
  br i1 %cmp2395, label %while.body2397, label %while.end2431, !dbg !4594

while.body2397:                                   ; preds = %while.cond2394
  br label %do.body2398, !dbg !4597

do.body2398:                                      ; preds = %while.body2397
  %1226 = load i8*, i8** %p, align 8, !dbg !4599
  %1227 = load i8*, i8** %pend, align 8, !dbg !4599
  %cmp2399 = icmp eq i8* %1226, %1227, !dbg !4599
  br i1 %cmp2399, label %if.then2401, label %if.end2402, !dbg !4602

if.then2401:                                      ; preds = %do.body2398
  store i32 14, i32* %retval, align 4, !dbg !4599
  br label %return, !dbg !4599

if.end2402:                                       ; preds = %do.body2398
  %1228 = load i8*, i8** %p, align 8, !dbg !4602
  %incdec.ptr2403 = getelementptr inbounds i8, i8* %1228, i32 1, !dbg !4602
  store i8* %incdec.ptr2403, i8** %p, align 8, !dbg !4602
  %1229 = load i8, i8* %1228, align 1, !dbg !4602
  store i8 %1229, i8* %c, align 1, !dbg !4602
  %1230 = load i8*, i8** %translate, align 8, !dbg !4603
  %tobool2404 = icmp ne i8* %1230, null, !dbg !4603
  br i1 %tobool2404, label %if.then2405, label %if.end2408, !dbg !4602

if.then2405:                                      ; preds = %if.end2402
  %1231 = load i8*, i8** %translate, align 8, !dbg !4603
  %1232 = load i8, i8* %c, align 1, !dbg !4603
  %idxprom2406 = zext i8 %1232 to i64, !dbg !4603
  %arrayidx2407 = getelementptr inbounds i8, i8* %1231, i64 %idxprom2406, !dbg !4603
  %1233 = load i8, i8* %arrayidx2407, align 1, !dbg !4603
  store i8 %1233, i8* %c, align 1, !dbg !4603
  br label %if.end2408, !dbg !4603

if.end2408:                                       ; preds = %if.then2405, %if.end2402
  br label %do.end2409, !dbg !4602

do.end2409:                                       ; preds = %if.end2408
  %1234 = load i8, i8* %c, align 1, !dbg !4605
  %conv2410 = zext i8 %1234 to i32, !dbg !4605
  %cmp2411 = icmp slt i32 %conv2410, 48, !dbg !4605
  br i1 %cmp2411, label %if.then2417, label %lor.lhs.false2413, !dbg !4605

lor.lhs.false2413:                                ; preds = %do.end2409
  %1235 = load i8, i8* %c, align 1, !dbg !4605
  %conv2414 = zext i8 %1235 to i32, !dbg !4605
  %cmp2415 = icmp sgt i32 %conv2414, 57, !dbg !4605
  br i1 %cmp2415, label %if.then2417, label %if.end2418, !dbg !4597

if.then2417:                                      ; preds = %lor.lhs.false2413, %do.end2409
  br label %while.end2431, !dbg !4605

if.end2418:                                       ; preds = %lor.lhs.false2413
  %1236 = load i32, i32* %upper_bound, align 4, !dbg !4607
  %cmp2419 = icmp sle i32 %1236, 32767, !dbg !4607
  br i1 %cmp2419, label %if.then2421, label %if.end2430, !dbg !4597

if.then2421:                                      ; preds = %if.end2418
  %1237 = load i32, i32* %upper_bound, align 4, !dbg !4609
  %cmp2422 = icmp slt i32 %1237, 0, !dbg !4609
  br i1 %cmp2422, label %if.then2424, label %if.end2425, !dbg !4612

if.then2424:                                      ; preds = %if.then2421
  store i32 0, i32* %upper_bound, align 4, !dbg !4609
  br label %if.end2425, !dbg !4609

if.end2425:                                       ; preds = %if.then2424, %if.then2421
  %1238 = load i32, i32* %upper_bound, align 4, !dbg !4612
  %mul2426 = mul nsw i32 %1238, 10, !dbg !4612
  %1239 = load i8, i8* %c, align 1, !dbg !4612
  %conv2427 = zext i8 %1239 to i32, !dbg !4612
  %add2428 = add nsw i32 %mul2426, %conv2427, !dbg !4612
  %sub2429 = sub nsw i32 %add2428, 48, !dbg !4612
  store i32 %sub2429, i32* %upper_bound, align 4, !dbg !4612
  br label %if.end2430, !dbg !4612

if.end2430:                                       ; preds = %if.end2425, %if.end2418
  br label %while.cond2394, !dbg !4594, !llvm.loop !4613

while.end2431:                                    ; preds = %if.then2417, %while.cond2394
  %1240 = load i32, i32* %upper_bound, align 4, !dbg !4614
  %cmp2432 = icmp slt i32 %1240, 0, !dbg !4616
  br i1 %cmp2432, label %if.then2434, label %if.end2435, !dbg !4617

if.then2434:                                      ; preds = %while.end2431
  store i32 32767, i32* %upper_bound, align 4, !dbg !4618
  br label %if.end2435, !dbg !4619

if.end2435:                                       ; preds = %if.then2434, %while.end2431
  br label %if.end2437, !dbg !4620

if.else2436:                                      ; preds = %while.end2389
  %1241 = load i32, i32* %lower_bound, align 4, !dbg !4621
  store i32 %1241, i32* %upper_bound, align 4, !dbg !4622
  br label %if.end2437

if.end2437:                                       ; preds = %if.else2436, %if.end2435
  %1242 = load i32, i32* %lower_bound, align 4, !dbg !4623
  %cmp2438 = icmp sle i32 0, %1242, !dbg !4625
  br i1 %cmp2438, label %land.lhs.true2440, label %if.then2443, !dbg !4626

land.lhs.true2440:                                ; preds = %if.end2437
  %1243 = load i32, i32* %lower_bound, align 4, !dbg !4627
  %1244 = load i32, i32* %upper_bound, align 4, !dbg !4628
  %cmp2441 = icmp sle i32 %1243, %1244, !dbg !4629
  br i1 %cmp2441, label %if.end2444, label %if.then2443, !dbg !4630

if.then2443:                                      ; preds = %land.lhs.true2440, %if.end2437
  br label %invalid_interval, !dbg !4631

if.end2444:                                       ; preds = %land.lhs.true2440
  %1245 = load i64, i64* %syntax.addr, align 8, !dbg !4632
  %and2445 = and i64 %1245, 4096, !dbg !4634
  %tobool2446 = icmp ne i64 %and2445, 0, !dbg !4634
  br i1 %tobool2446, label %if.end2468, label %if.then2447, !dbg !4635

if.then2447:                                      ; preds = %if.end2444
  %1246 = load i8, i8* %c, align 1, !dbg !4636
  %conv2448 = zext i8 %1246 to i32, !dbg !4636
  %cmp2449 = icmp ne i32 %conv2448, 92, !dbg !4639
  br i1 %cmp2449, label %if.then2454, label %lor.lhs.false2451, !dbg !4640

lor.lhs.false2451:                                ; preds = %if.then2447
  %1247 = load i8*, i8** %p, align 8, !dbg !4641
  %1248 = load i8*, i8** %pend, align 8, !dbg !4642
  %cmp2452 = icmp eq i8* %1247, %1248, !dbg !4643
  br i1 %cmp2452, label %if.then2454, label %if.end2455, !dbg !4644

if.then2454:                                      ; preds = %lor.lhs.false2451, %if.then2447
  br label %invalid_interval, !dbg !4645

if.end2455:                                       ; preds = %lor.lhs.false2451
  br label %do.body2456, !dbg !4646

do.body2456:                                      ; preds = %if.end2455
  %1249 = load i8*, i8** %p, align 8, !dbg !4647
  %1250 = load i8*, i8** %pend, align 8, !dbg !4647
  %cmp2457 = icmp eq i8* %1249, %1250, !dbg !4647
  br i1 %cmp2457, label %if.then2459, label %if.end2460, !dbg !4650

if.then2459:                                      ; preds = %do.body2456
  store i32 14, i32* %retval, align 4, !dbg !4647
  br label %return, !dbg !4647

if.end2460:                                       ; preds = %do.body2456
  %1251 = load i8*, i8** %p, align 8, !dbg !4650
  %incdec.ptr2461 = getelementptr inbounds i8, i8* %1251, i32 1, !dbg !4650
  store i8* %incdec.ptr2461, i8** %p, align 8, !dbg !4650
  %1252 = load i8, i8* %1251, align 1, !dbg !4650
  store i8 %1252, i8* %c, align 1, !dbg !4650
  %1253 = load i8*, i8** %translate, align 8, !dbg !4651
  %tobool2462 = icmp ne i8* %1253, null, !dbg !4651
  br i1 %tobool2462, label %if.then2463, label %if.end2466, !dbg !4650

if.then2463:                                      ; preds = %if.end2460
  %1254 = load i8*, i8** %translate, align 8, !dbg !4651
  %1255 = load i8, i8* %c, align 1, !dbg !4651
  %idxprom2464 = zext i8 %1255 to i64, !dbg !4651
  %arrayidx2465 = getelementptr inbounds i8, i8* %1254, i64 %idxprom2464, !dbg !4651
  %1256 = load i8, i8* %arrayidx2465, align 1, !dbg !4651
  store i8 %1256, i8* %c, align 1, !dbg !4651
  br label %if.end2466, !dbg !4651

if.end2466:                                       ; preds = %if.then2463, %if.end2460
  br label %do.end2467, !dbg !4650

do.end2467:                                       ; preds = %if.end2466
  br label %if.end2468, !dbg !4653

if.end2468:                                       ; preds = %do.end2467, %if.end2444
  %1257 = load i8, i8* %c, align 1, !dbg !4654
  %conv2469 = zext i8 %1257 to i32, !dbg !4654
  %cmp2470 = icmp ne i32 %conv2469, 125, !dbg !4656
  br i1 %cmp2470, label %if.then2472, label %if.end2473, !dbg !4657

if.then2472:                                      ; preds = %if.end2468
  br label %invalid_interval, !dbg !4658

if.end2473:                                       ; preds = %if.end2468
  %1258 = load i8*, i8** %laststart, align 8, !dbg !4659
  %tobool2474 = icmp ne i8* %1258, null, !dbg !4659
  br i1 %tobool2474, label %if.end2490, label %if.then2475, !dbg !4661

if.then2475:                                      ; preds = %if.end2473
  %1259 = load i64, i64* %syntax.addr, align 8, !dbg !4662
  %and2476 = and i64 %1259, 32, !dbg !4665
  %tobool2477 = icmp ne i64 %and2476, 0, !dbg !4665
  br i1 %tobool2477, label %land.lhs.true2478, label %if.else2483, !dbg !4666

land.lhs.true2478:                                ; preds = %if.then2475
  %1260 = load i64, i64* %syntax.addr, align 8, !dbg !4667
  %and2479 = and i64 %1260, 2097152, !dbg !4668
  %tobool2480 = icmp ne i64 %and2479, 0, !dbg !4668
  br i1 %tobool2480, label %if.else2483, label %if.then2481, !dbg !4669

if.then2481:                                      ; preds = %land.lhs.true2478
  %stack2482 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4670
  %1261 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2482, align 8, !dbg !4670
  %1262 = bitcast %struct.compile_stack_elt_t* %1261 to i8*, !dbg !4670
  call void @free(i8* %1262), !dbg !4670
  store i32 13, i32* %retval, align 4, !dbg !4670
  br label %return, !dbg !4670

if.else2483:                                      ; preds = %land.lhs.true2478, %if.then2475
  %1263 = load i64, i64* %syntax.addr, align 8, !dbg !4671
  %and2484 = and i64 %1263, 16, !dbg !4673
  %tobool2485 = icmp ne i64 %and2484, 0, !dbg !4673
  br i1 %tobool2485, label %if.then2486, label %if.else2487, !dbg !4674

if.then2486:                                      ; preds = %if.else2483
  %1264 = load i8*, i8** %b, align 8, !dbg !4675
  store i8* %1264, i8** %laststart, align 8, !dbg !4676
  br label %if.end2488, !dbg !4677

if.else2487:                                      ; preds = %if.else2483
  br label %unfetch_interval, !dbg !4678

if.end2488:                                       ; preds = %if.then2486
  br label %if.end2489

if.end2489:                                       ; preds = %if.end2488
  br label %if.end2490, !dbg !4679

if.end2490:                                       ; preds = %if.end2489, %if.end2473
  %1265 = load i32, i32* %upper_bound, align 4, !dbg !4680
  %cmp2491 = icmp slt i32 32767, %1265, !dbg !4682
  br i1 %cmp2491, label %if.then2493, label %if.end2495, !dbg !4683

if.then2493:                                      ; preds = %if.end2490
  %stack2494 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4684
  %1266 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2494, align 8, !dbg !4684
  %1267 = bitcast %struct.compile_stack_elt_t* %1266 to i8*, !dbg !4684
  call void @free(i8* %1267), !dbg !4684
  store i32 10, i32* %retval, align 4, !dbg !4684
  br label %return, !dbg !4684

if.end2495:                                       ; preds = %if.end2490
  %1268 = load i32, i32* %upper_bound, align 4, !dbg !4685
  %cmp2496 = icmp eq i32 %1268, 0, !dbg !4687
  br i1 %cmp2496, label %if.then2498, label %if.else2574, !dbg !4688

if.then2498:                                      ; preds = %if.end2495
  br label %while.cond2499, !dbg !4689

while.cond2499:                                   ; preds = %do.end2564, %if.then2498
  %1269 = load i8*, i8** %b, align 8, !dbg !4689
  %1270 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4689
  %buffer2500 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1270, i32 0, i32 0, !dbg !4689
  %1271 = load i8*, i8** %buffer2500, align 8, !dbg !4689
  %sub.ptr.lhs.cast2501 = ptrtoint i8* %1269 to i64, !dbg !4689
  %sub.ptr.rhs.cast2502 = ptrtoint i8* %1271 to i64, !dbg !4689
  %sub.ptr.sub2503 = sub i64 %sub.ptr.lhs.cast2501, %sub.ptr.rhs.cast2502, !dbg !4689
  %add2504 = add nsw i64 %sub.ptr.sub2503, 3, !dbg !4689
  %1272 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4689
  %allocated2505 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1272, i32 0, i32 1, !dbg !4689
  %1273 = load i64, i64* %allocated2505, align 8, !dbg !4689
  %cmp2506 = icmp ugt i64 %add2504, %1273, !dbg !4689
  br i1 %cmp2506, label %while.body2508, label %while.end2565, !dbg !4689

while.body2508:                                   ; preds = %while.cond2499
  br label %do.body2509, !dbg !4689

do.body2509:                                      ; preds = %while.body2508
  call void @llvm.dbg.declare(metadata i8** %old_buffer2510, metadata !4691, metadata !DIExpression()), !dbg !4693
  %1274 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4693
  %buffer2511 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1274, i32 0, i32 0, !dbg !4693
  %1275 = load i8*, i8** %buffer2511, align 8, !dbg !4693
  store i8* %1275, i8** %old_buffer2510, align 8, !dbg !4693
  %1276 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4694
  %allocated2512 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1276, i32 0, i32 1, !dbg !4694
  %1277 = load i64, i64* %allocated2512, align 8, !dbg !4694
  %cmp2513 = icmp eq i64 %1277, 65536, !dbg !4694
  br i1 %cmp2513, label %if.then2515, label %if.end2516, !dbg !4693

if.then2515:                                      ; preds = %do.body2509
  store i32 15, i32* %retval, align 4, !dbg !4694
  br label %return, !dbg !4694

if.end2516:                                       ; preds = %do.body2509
  %1278 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4693
  %allocated2517 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1278, i32 0, i32 1, !dbg !4693
  %1279 = load i64, i64* %allocated2517, align 8, !dbg !4693
  %shl2518 = shl i64 %1279, 1, !dbg !4693
  store i64 %shl2518, i64* %allocated2517, align 8, !dbg !4693
  %1280 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4696
  %allocated2519 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1280, i32 0, i32 1, !dbg !4696
  %1281 = load i64, i64* %allocated2519, align 8, !dbg !4696
  %cmp2520 = icmp ugt i64 %1281, 65536, !dbg !4696
  br i1 %cmp2520, label %if.then2522, label %if.end2524, !dbg !4693

if.then2522:                                      ; preds = %if.end2516
  %1282 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4696
  %allocated2523 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1282, i32 0, i32 1, !dbg !4696
  store i64 65536, i64* %allocated2523, align 8, !dbg !4696
  br label %if.end2524, !dbg !4696

if.end2524:                                       ; preds = %if.then2522, %if.end2516
  %1283 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4693
  %buffer2525 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1283, i32 0, i32 0, !dbg !4693
  %1284 = load i8*, i8** %buffer2525, align 8, !dbg !4693
  %1285 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4693
  %allocated2526 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1285, i32 0, i32 1, !dbg !4693
  %1286 = load i64, i64* %allocated2526, align 8, !dbg !4693
  %call2527 = call i8* @realloc(i8* %1284, i64 %1286), !dbg !4693
  %1287 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4693
  %buffer2528 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1287, i32 0, i32 0, !dbg !4693
  store i8* %call2527, i8** %buffer2528, align 8, !dbg !4693
  %1288 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4698
  %buffer2529 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1288, i32 0, i32 0, !dbg !4698
  %1289 = load i8*, i8** %buffer2529, align 8, !dbg !4698
  %cmp2530 = icmp eq i8* %1289, null, !dbg !4698
  br i1 %cmp2530, label %if.then2532, label %if.end2533, !dbg !4693

if.then2532:                                      ; preds = %if.end2524
  store i32 12, i32* %retval, align 4, !dbg !4698
  br label %return, !dbg !4698

if.end2533:                                       ; preds = %if.end2524
  %1290 = load i8*, i8** %old_buffer2510, align 8, !dbg !4700
  %1291 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4700
  %buffer2534 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1291, i32 0, i32 0, !dbg !4700
  %1292 = load i8*, i8** %buffer2534, align 8, !dbg !4700
  %cmp2535 = icmp ne i8* %1290, %1292, !dbg !4700
  br i1 %cmp2535, label %if.then2537, label %if.end2563, !dbg !4693

if.then2537:                                      ; preds = %if.end2533
  call void @llvm.dbg.declare(metadata i32* %incr2538, metadata !4702, metadata !DIExpression()), !dbg !4704
  %1293 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4704
  %buffer2539 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1293, i32 0, i32 0, !dbg !4704
  %1294 = load i8*, i8** %buffer2539, align 8, !dbg !4704
  %1295 = load i8*, i8** %old_buffer2510, align 8, !dbg !4704
  %sub.ptr.lhs.cast2540 = ptrtoint i8* %1294 to i64, !dbg !4704
  %sub.ptr.rhs.cast2541 = ptrtoint i8* %1295 to i64, !dbg !4704
  %sub.ptr.sub2542 = sub i64 %sub.ptr.lhs.cast2540, %sub.ptr.rhs.cast2541, !dbg !4704
  %conv2543 = trunc i64 %sub.ptr.sub2542 to i32, !dbg !4704
  store i32 %conv2543, i32* %incr2538, align 4, !dbg !4704
  %1296 = load i32, i32* %incr2538, align 4, !dbg !4704
  %1297 = load i8*, i8** %b, align 8, !dbg !4704
  %idx.ext2544 = sext i32 %1296 to i64, !dbg !4704
  %add.ptr2545 = getelementptr inbounds i8, i8* %1297, i64 %idx.ext2544, !dbg !4704
  store i8* %add.ptr2545, i8** %b, align 8, !dbg !4704
  %1298 = load i32, i32* %incr2538, align 4, !dbg !4704
  %1299 = load i8*, i8** %begalt, align 8, !dbg !4704
  %idx.ext2546 = sext i32 %1298 to i64, !dbg !4704
  %add.ptr2547 = getelementptr inbounds i8, i8* %1299, i64 %idx.ext2546, !dbg !4704
  store i8* %add.ptr2547, i8** %begalt, align 8, !dbg !4704
  %1300 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4705
  %tobool2548 = icmp ne i8* %1300, null, !dbg !4705
  br i1 %tobool2548, label %if.then2549, label %if.end2552, !dbg !4704

if.then2549:                                      ; preds = %if.then2537
  %1301 = load i32, i32* %incr2538, align 4, !dbg !4705
  %1302 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4705
  %idx.ext2550 = sext i32 %1301 to i64, !dbg !4705
  %add.ptr2551 = getelementptr inbounds i8, i8* %1302, i64 %idx.ext2550, !dbg !4705
  store i8* %add.ptr2551, i8** %fixup_alt_jump, align 8, !dbg !4705
  br label %if.end2552, !dbg !4705

if.end2552:                                       ; preds = %if.then2549, %if.then2537
  %1303 = load i8*, i8** %laststart, align 8, !dbg !4707
  %tobool2553 = icmp ne i8* %1303, null, !dbg !4707
  br i1 %tobool2553, label %if.then2554, label %if.end2557, !dbg !4704

if.then2554:                                      ; preds = %if.end2552
  %1304 = load i32, i32* %incr2538, align 4, !dbg !4707
  %1305 = load i8*, i8** %laststart, align 8, !dbg !4707
  %idx.ext2555 = sext i32 %1304 to i64, !dbg !4707
  %add.ptr2556 = getelementptr inbounds i8, i8* %1305, i64 %idx.ext2555, !dbg !4707
  store i8* %add.ptr2556, i8** %laststart, align 8, !dbg !4707
  br label %if.end2557, !dbg !4707

if.end2557:                                       ; preds = %if.then2554, %if.end2552
  %1306 = load i8*, i8** %pending_exact, align 8, !dbg !4709
  %tobool2558 = icmp ne i8* %1306, null, !dbg !4709
  br i1 %tobool2558, label %if.then2559, label %if.end2562, !dbg !4704

if.then2559:                                      ; preds = %if.end2557
  %1307 = load i32, i32* %incr2538, align 4, !dbg !4709
  %1308 = load i8*, i8** %pending_exact, align 8, !dbg !4709
  %idx.ext2560 = sext i32 %1307 to i64, !dbg !4709
  %add.ptr2561 = getelementptr inbounds i8, i8* %1308, i64 %idx.ext2560, !dbg !4709
  store i8* %add.ptr2561, i8** %pending_exact, align 8, !dbg !4709
  br label %if.end2562, !dbg !4709

if.end2562:                                       ; preds = %if.then2559, %if.end2557
  br label %if.end2563, !dbg !4704

if.end2563:                                       ; preds = %if.end2562, %if.end2533
  br label %do.end2564, !dbg !4693

do.end2564:                                       ; preds = %if.end2563
  br label %while.cond2499, !dbg !4689, !llvm.loop !4711

while.end2565:                                    ; preds = %while.cond2499
  %1309 = load i8*, i8** %laststart, align 8, !dbg !4712
  %1310 = load i8*, i8** %b, align 8, !dbg !4712
  %add.ptr2566 = getelementptr inbounds i8, i8* %1310, i64 1, !dbg !4712
  %add.ptr2567 = getelementptr inbounds i8, i8* %add.ptr2566, i64 2, !dbg !4712
  %1311 = load i8*, i8** %laststart, align 8, !dbg !4712
  %sub.ptr.lhs.cast2568 = ptrtoint i8* %add.ptr2567 to i64, !dbg !4712
  %sub.ptr.rhs.cast2569 = ptrtoint i8* %1311 to i64, !dbg !4712
  %sub.ptr.sub2570 = sub i64 %sub.ptr.lhs.cast2568, %sub.ptr.rhs.cast2569, !dbg !4712
  %sub2571 = sub nsw i64 %sub.ptr.sub2570, 3, !dbg !4712
  %conv2572 = trunc i64 %sub2571 to i32, !dbg !4712
  %1312 = load i8*, i8** %b, align 8, !dbg !4712
  call void @byte_insert_op1(i32 13, i8* %1309, i32 %conv2572, i8* %1312), !dbg !4712
  %1313 = load i8*, i8** %b, align 8, !dbg !4713
  %add.ptr2573 = getelementptr inbounds i8, i8* %1313, i64 3, !dbg !4713
  store i8* %add.ptr2573, i8** %b, align 8, !dbg !4713
  br label %if.end2680, !dbg !4714

if.else2574:                                      ; preds = %if.end2495
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !4715, metadata !DIExpression()), !dbg !4717
  %1314 = load i32, i32* %upper_bound, align 4, !dbg !4718
  %cmp2575 = icmp sgt i32 %1314, 1, !dbg !4719
  %conv2576 = zext i1 %cmp2575 to i32, !dbg !4719
  %mul2577 = mul nsw i32 %conv2576, 10, !dbg !4720
  %add2578 = add nsw i32 10, %mul2577, !dbg !4721
  store i32 %add2578, i32* %nbytes, align 4, !dbg !4717
  br label %while.cond2579, !dbg !4722

while.cond2579:                                   ; preds = %do.end2645, %if.else2574
  %1315 = load i8*, i8** %b, align 8, !dbg !4722
  %1316 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4722
  %buffer2580 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1316, i32 0, i32 0, !dbg !4722
  %1317 = load i8*, i8** %buffer2580, align 8, !dbg !4722
  %sub.ptr.lhs.cast2581 = ptrtoint i8* %1315 to i64, !dbg !4722
  %sub.ptr.rhs.cast2582 = ptrtoint i8* %1317 to i64, !dbg !4722
  %sub.ptr.sub2583 = sub i64 %sub.ptr.lhs.cast2581, %sub.ptr.rhs.cast2582, !dbg !4722
  %1318 = load i32, i32* %nbytes, align 4, !dbg !4722
  %conv2584 = zext i32 %1318 to i64, !dbg !4722
  %add2585 = add nsw i64 %sub.ptr.sub2583, %conv2584, !dbg !4722
  %1319 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4722
  %allocated2586 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1319, i32 0, i32 1, !dbg !4722
  %1320 = load i64, i64* %allocated2586, align 8, !dbg !4722
  %cmp2587 = icmp ugt i64 %add2585, %1320, !dbg !4722
  br i1 %cmp2587, label %while.body2589, label %while.end2646, !dbg !4722

while.body2589:                                   ; preds = %while.cond2579
  br label %do.body2590, !dbg !4722

do.body2590:                                      ; preds = %while.body2589
  call void @llvm.dbg.declare(metadata i8** %old_buffer2591, metadata !4723, metadata !DIExpression()), !dbg !4725
  %1321 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4725
  %buffer2592 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1321, i32 0, i32 0, !dbg !4725
  %1322 = load i8*, i8** %buffer2592, align 8, !dbg !4725
  store i8* %1322, i8** %old_buffer2591, align 8, !dbg !4725
  %1323 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4726
  %allocated2593 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1323, i32 0, i32 1, !dbg !4726
  %1324 = load i64, i64* %allocated2593, align 8, !dbg !4726
  %cmp2594 = icmp eq i64 %1324, 65536, !dbg !4726
  br i1 %cmp2594, label %if.then2596, label %if.end2597, !dbg !4725

if.then2596:                                      ; preds = %do.body2590
  store i32 15, i32* %retval, align 4, !dbg !4726
  br label %return, !dbg !4726

if.end2597:                                       ; preds = %do.body2590
  %1325 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4725
  %allocated2598 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1325, i32 0, i32 1, !dbg !4725
  %1326 = load i64, i64* %allocated2598, align 8, !dbg !4725
  %shl2599 = shl i64 %1326, 1, !dbg !4725
  store i64 %shl2599, i64* %allocated2598, align 8, !dbg !4725
  %1327 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4728
  %allocated2600 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1327, i32 0, i32 1, !dbg !4728
  %1328 = load i64, i64* %allocated2600, align 8, !dbg !4728
  %cmp2601 = icmp ugt i64 %1328, 65536, !dbg !4728
  br i1 %cmp2601, label %if.then2603, label %if.end2605, !dbg !4725

if.then2603:                                      ; preds = %if.end2597
  %1329 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4728
  %allocated2604 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1329, i32 0, i32 1, !dbg !4728
  store i64 65536, i64* %allocated2604, align 8, !dbg !4728
  br label %if.end2605, !dbg !4728

if.end2605:                                       ; preds = %if.then2603, %if.end2597
  %1330 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4725
  %buffer2606 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1330, i32 0, i32 0, !dbg !4725
  %1331 = load i8*, i8** %buffer2606, align 8, !dbg !4725
  %1332 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4725
  %allocated2607 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1332, i32 0, i32 1, !dbg !4725
  %1333 = load i64, i64* %allocated2607, align 8, !dbg !4725
  %call2608 = call i8* @realloc(i8* %1331, i64 %1333), !dbg !4725
  %1334 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4725
  %buffer2609 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1334, i32 0, i32 0, !dbg !4725
  store i8* %call2608, i8** %buffer2609, align 8, !dbg !4725
  %1335 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4730
  %buffer2610 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1335, i32 0, i32 0, !dbg !4730
  %1336 = load i8*, i8** %buffer2610, align 8, !dbg !4730
  %cmp2611 = icmp eq i8* %1336, null, !dbg !4730
  br i1 %cmp2611, label %if.then2613, label %if.end2614, !dbg !4725

if.then2613:                                      ; preds = %if.end2605
  store i32 12, i32* %retval, align 4, !dbg !4730
  br label %return, !dbg !4730

if.end2614:                                       ; preds = %if.end2605
  %1337 = load i8*, i8** %old_buffer2591, align 8, !dbg !4732
  %1338 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4732
  %buffer2615 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1338, i32 0, i32 0, !dbg !4732
  %1339 = load i8*, i8** %buffer2615, align 8, !dbg !4732
  %cmp2616 = icmp ne i8* %1337, %1339, !dbg !4732
  br i1 %cmp2616, label %if.then2618, label %if.end2644, !dbg !4725

if.then2618:                                      ; preds = %if.end2614
  call void @llvm.dbg.declare(metadata i32* %incr2619, metadata !4734, metadata !DIExpression()), !dbg !4736
  %1340 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4736
  %buffer2620 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1340, i32 0, i32 0, !dbg !4736
  %1341 = load i8*, i8** %buffer2620, align 8, !dbg !4736
  %1342 = load i8*, i8** %old_buffer2591, align 8, !dbg !4736
  %sub.ptr.lhs.cast2621 = ptrtoint i8* %1341 to i64, !dbg !4736
  %sub.ptr.rhs.cast2622 = ptrtoint i8* %1342 to i64, !dbg !4736
  %sub.ptr.sub2623 = sub i64 %sub.ptr.lhs.cast2621, %sub.ptr.rhs.cast2622, !dbg !4736
  %conv2624 = trunc i64 %sub.ptr.sub2623 to i32, !dbg !4736
  store i32 %conv2624, i32* %incr2619, align 4, !dbg !4736
  %1343 = load i32, i32* %incr2619, align 4, !dbg !4736
  %1344 = load i8*, i8** %b, align 8, !dbg !4736
  %idx.ext2625 = sext i32 %1343 to i64, !dbg !4736
  %add.ptr2626 = getelementptr inbounds i8, i8* %1344, i64 %idx.ext2625, !dbg !4736
  store i8* %add.ptr2626, i8** %b, align 8, !dbg !4736
  %1345 = load i32, i32* %incr2619, align 4, !dbg !4736
  %1346 = load i8*, i8** %begalt, align 8, !dbg !4736
  %idx.ext2627 = sext i32 %1345 to i64, !dbg !4736
  %add.ptr2628 = getelementptr inbounds i8, i8* %1346, i64 %idx.ext2627, !dbg !4736
  store i8* %add.ptr2628, i8** %begalt, align 8, !dbg !4736
  %1347 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4737
  %tobool2629 = icmp ne i8* %1347, null, !dbg !4737
  br i1 %tobool2629, label %if.then2630, label %if.end2633, !dbg !4736

if.then2630:                                      ; preds = %if.then2618
  %1348 = load i32, i32* %incr2619, align 4, !dbg !4737
  %1349 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4737
  %idx.ext2631 = sext i32 %1348 to i64, !dbg !4737
  %add.ptr2632 = getelementptr inbounds i8, i8* %1349, i64 %idx.ext2631, !dbg !4737
  store i8* %add.ptr2632, i8** %fixup_alt_jump, align 8, !dbg !4737
  br label %if.end2633, !dbg !4737

if.end2633:                                       ; preds = %if.then2630, %if.then2618
  %1350 = load i8*, i8** %laststart, align 8, !dbg !4739
  %tobool2634 = icmp ne i8* %1350, null, !dbg !4739
  br i1 %tobool2634, label %if.then2635, label %if.end2638, !dbg !4736

if.then2635:                                      ; preds = %if.end2633
  %1351 = load i32, i32* %incr2619, align 4, !dbg !4739
  %1352 = load i8*, i8** %laststart, align 8, !dbg !4739
  %idx.ext2636 = sext i32 %1351 to i64, !dbg !4739
  %add.ptr2637 = getelementptr inbounds i8, i8* %1352, i64 %idx.ext2636, !dbg !4739
  store i8* %add.ptr2637, i8** %laststart, align 8, !dbg !4739
  br label %if.end2638, !dbg !4739

if.end2638:                                       ; preds = %if.then2635, %if.end2633
  %1353 = load i8*, i8** %pending_exact, align 8, !dbg !4741
  %tobool2639 = icmp ne i8* %1353, null, !dbg !4741
  br i1 %tobool2639, label %if.then2640, label %if.end2643, !dbg !4736

if.then2640:                                      ; preds = %if.end2638
  %1354 = load i32, i32* %incr2619, align 4, !dbg !4741
  %1355 = load i8*, i8** %pending_exact, align 8, !dbg !4741
  %idx.ext2641 = sext i32 %1354 to i64, !dbg !4741
  %add.ptr2642 = getelementptr inbounds i8, i8* %1355, i64 %idx.ext2641, !dbg !4741
  store i8* %add.ptr2642, i8** %pending_exact, align 8, !dbg !4741
  br label %if.end2643, !dbg !4741

if.end2643:                                       ; preds = %if.then2640, %if.end2638
  br label %if.end2644, !dbg !4736

if.end2644:                                       ; preds = %if.end2643, %if.end2614
  br label %do.end2645, !dbg !4725

do.end2645:                                       ; preds = %if.end2644
  br label %while.cond2579, !dbg !4722, !llvm.loop !4743

while.end2646:                                    ; preds = %while.cond2579
  %1356 = load i8*, i8** %laststart, align 8, !dbg !4744
  %1357 = load i8*, i8** %b, align 8, !dbg !4744
  %add.ptr2647 = getelementptr inbounds i8, i8* %1357, i64 1, !dbg !4744
  %add.ptr2648 = getelementptr inbounds i8, i8* %add.ptr2647, i64 4, !dbg !4744
  %1358 = load i32, i32* %upper_bound, align 4, !dbg !4744
  %cmp2649 = icmp sgt i32 %1358, 1, !dbg !4744
  %conv2650 = zext i1 %cmp2649 to i32, !dbg !4744
  %mul2651 = mul nsw i32 %conv2650, 5, !dbg !4744
  %idx.ext2652 = sext i32 %mul2651 to i64, !dbg !4744
  %add.ptr2653 = getelementptr inbounds i8, i8* %add.ptr2648, i64 %idx.ext2652, !dbg !4744
  %1359 = load i8*, i8** %laststart, align 8, !dbg !4744
  %sub.ptr.lhs.cast2654 = ptrtoint i8* %add.ptr2653 to i64, !dbg !4744
  %sub.ptr.rhs.cast2655 = ptrtoint i8* %1359 to i64, !dbg !4744
  %sub.ptr.sub2656 = sub i64 %sub.ptr.lhs.cast2654, %sub.ptr.rhs.cast2655, !dbg !4744
  %sub2657 = sub nsw i64 %sub.ptr.sub2656, 3, !dbg !4744
  %conv2658 = trunc i64 %sub2657 to i32, !dbg !4744
  %1360 = load i32, i32* %lower_bound, align 4, !dbg !4744
  %1361 = load i8*, i8** %b, align 8, !dbg !4744
  call void @byte_insert_op2(i32 21, i8* %1356, i32 %conv2658, i32 %1360, i8* %1361), !dbg !4744
  %1362 = load i8*, i8** %b, align 8, !dbg !4745
  %add.ptr2659 = getelementptr inbounds i8, i8* %1362, i64 5, !dbg !4745
  store i8* %add.ptr2659, i8** %b, align 8, !dbg !4745
  %1363 = load i8*, i8** %laststart, align 8, !dbg !4746
  %1364 = load i32, i32* %lower_bound, align 4, !dbg !4747
  %1365 = load i8*, i8** %b, align 8, !dbg !4748
  call void @byte_insert_op2(i32 23, i8* %1363, i32 5, i32 %1364, i8* %1365), !dbg !4749
  %1366 = load i8*, i8** %b, align 8, !dbg !4750
  %add.ptr2660 = getelementptr inbounds i8, i8* %1366, i64 5, !dbg !4750
  store i8* %add.ptr2660, i8** %b, align 8, !dbg !4750
  %1367 = load i32, i32* %upper_bound, align 4, !dbg !4751
  %cmp2661 = icmp sgt i32 %1367, 1, !dbg !4753
  br i1 %cmp2661, label %if.then2663, label %if.end2679, !dbg !4754

if.then2663:                                      ; preds = %while.end2646
  %1368 = load i8*, i8** %b, align 8, !dbg !4755
  %1369 = load i8*, i8** %laststart, align 8, !dbg !4755
  %add.ptr2664 = getelementptr inbounds i8, i8* %1369, i64 4, !dbg !4755
  %add.ptr2665 = getelementptr inbounds i8, i8* %add.ptr2664, i64 1, !dbg !4755
  %1370 = load i8*, i8** %b, align 8, !dbg !4755
  %sub.ptr.lhs.cast2666 = ptrtoint i8* %add.ptr2665 to i64, !dbg !4755
  %sub.ptr.rhs.cast2667 = ptrtoint i8* %1370 to i64, !dbg !4755
  %sub.ptr.sub2668 = sub i64 %sub.ptr.lhs.cast2666, %sub.ptr.rhs.cast2667, !dbg !4755
  %sub2669 = sub nsw i64 %sub.ptr.sub2668, 3, !dbg !4755
  %conv2670 = trunc i64 %sub2669 to i32, !dbg !4755
  %1371 = load i32, i32* %upper_bound, align 4, !dbg !4755
  %sub2671 = sub nsw i32 %1371, 1, !dbg !4755
  call void @byte_store_op2(i32 22, i8* %1368, i32 %conv2670, i32 %sub2671), !dbg !4755
  %1372 = load i8*, i8** %b, align 8, !dbg !4757
  %add.ptr2672 = getelementptr inbounds i8, i8* %1372, i64 5, !dbg !4757
  store i8* %add.ptr2672, i8** %b, align 8, !dbg !4757
  %1373 = load i8*, i8** %laststart, align 8, !dbg !4758
  %1374 = load i8*, i8** %b, align 8, !dbg !4759
  %1375 = load i8*, i8** %laststart, align 8, !dbg !4760
  %sub.ptr.lhs.cast2673 = ptrtoint i8* %1374 to i64, !dbg !4761
  %sub.ptr.rhs.cast2674 = ptrtoint i8* %1375 to i64, !dbg !4761
  %sub.ptr.sub2675 = sub i64 %sub.ptr.lhs.cast2673, %sub.ptr.rhs.cast2674, !dbg !4761
  %conv2676 = trunc i64 %sub.ptr.sub2675 to i32, !dbg !4759
  %1376 = load i32, i32* %upper_bound, align 4, !dbg !4762
  %sub2677 = sub nsw i32 %1376, 1, !dbg !4763
  %1377 = load i8*, i8** %b, align 8, !dbg !4764
  call void @byte_insert_op2(i32 23, i8* %1373, i32 %conv2676, i32 %sub2677, i8* %1377), !dbg !4765
  %1378 = load i8*, i8** %b, align 8, !dbg !4766
  %add.ptr2678 = getelementptr inbounds i8, i8* %1378, i64 5, !dbg !4766
  store i8* %add.ptr2678, i8** %b, align 8, !dbg !4766
  br label %if.end2679, !dbg !4767

if.end2679:                                       ; preds = %if.then2663, %while.end2646
  br label %if.end2680

if.end2680:                                       ; preds = %if.end2679, %while.end2565
  store i8* null, i8** %pending_exact, align 8, !dbg !4768
  br label %sw.epilog, !dbg !4769

invalid_interval:                                 ; preds = %if.then2472, %if.then2454, %if.then2443, %if.then2350
  call void @llvm.dbg.label(metadata !4770), !dbg !4771
  %1379 = load i64, i64* %syntax.addr, align 8, !dbg !4772
  %and2681 = and i64 %1379, 2097152, !dbg !4774
  %tobool2682 = icmp ne i64 %and2681, 0, !dbg !4774
  br i1 %tobool2682, label %if.end2688, label %if.then2683, !dbg !4775

if.then2683:                                      ; preds = %invalid_interval
  %stack2684 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !4776
  %1380 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack2684, align 8, !dbg !4776
  %1381 = bitcast %struct.compile_stack_elt_t* %1380 to i8*, !dbg !4776
  call void @free(i8* %1381), !dbg !4776
  %1382 = load i8*, i8** %p, align 8, !dbg !4776
  %1383 = load i8*, i8** %pend, align 8, !dbg !4776
  %cmp2685 = icmp eq i8* %1382, %1383, !dbg !4776
  %1384 = zext i1 %cmp2685 to i64, !dbg !4776
  %cond2687 = select i1 %cmp2685, i32 9, i32 10, !dbg !4776
  store i32 %cond2687, i32* %retval, align 4, !dbg !4776
  br label %return, !dbg !4776

if.end2688:                                       ; preds = %invalid_interval
  br label %unfetch_interval, !dbg !4777

unfetch_interval:                                 ; preds = %if.end2688, %if.else2487
  call void @llvm.dbg.label(metadata !4778), !dbg !4779
  %1385 = load i8*, i8** %beg_interval, align 8, !dbg !4780
  store i8* %1385, i8** %p, align 8, !dbg !4781
  store i8 123, i8* %c, align 1, !dbg !4782
  %1386 = load i64, i64* %syntax.addr, align 8, !dbg !4783
  %and2689 = and i64 %1386, 4096, !dbg !4785
  %tobool2690 = icmp ne i64 %and2689, 0, !dbg !4785
  br i1 %tobool2690, label %if.then2691, label %if.else2692, !dbg !4786

if.then2691:                                      ; preds = %unfetch_interval
  br label %normal_char, !dbg !4787

if.else2692:                                      ; preds = %unfetch_interval
  br label %normal_backslash, !dbg !4788

sw.bb2693:                                        ; preds = %do.end1793
  %1387 = load i64, i64* %syntax.addr, align 8, !dbg !4789
  %and2694 = and i64 %1387, 524288, !dbg !4791
  %tobool2695 = icmp ne i64 %and2694, 0, !dbg !4791
  br i1 %tobool2695, label %if.then2696, label %if.end2697, !dbg !4792

if.then2696:                                      ; preds = %sw.bb2693
  br label %normal_char, !dbg !4793

if.end2697:                                       ; preds = %sw.bb2693
  %1388 = load i8*, i8** %b, align 8, !dbg !4794
  store i8* %1388, i8** %laststart, align 8, !dbg !4795
  br label %do.body2698, !dbg !4796

do.body2698:                                      ; preds = %if.end2697
  br label %while.cond2699, !dbg !4797

while.cond2699:                                   ; preds = %do.end2764, %do.body2698
  %1389 = load i8*, i8** %b, align 8, !dbg !4797
  %1390 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4797
  %buffer2700 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1390, i32 0, i32 0, !dbg !4797
  %1391 = load i8*, i8** %buffer2700, align 8, !dbg !4797
  %sub.ptr.lhs.cast2701 = ptrtoint i8* %1389 to i64, !dbg !4797
  %sub.ptr.rhs.cast2702 = ptrtoint i8* %1391 to i64, !dbg !4797
  %sub.ptr.sub2703 = sub i64 %sub.ptr.lhs.cast2701, %sub.ptr.rhs.cast2702, !dbg !4797
  %add2704 = add nsw i64 %sub.ptr.sub2703, 1, !dbg !4797
  %1392 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4797
  %allocated2705 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1392, i32 0, i32 1, !dbg !4797
  %1393 = load i64, i64* %allocated2705, align 8, !dbg !4797
  %cmp2706 = icmp ugt i64 %add2704, %1393, !dbg !4797
  br i1 %cmp2706, label %while.body2708, label %while.end2765, !dbg !4797

while.body2708:                                   ; preds = %while.cond2699
  br label %do.body2709, !dbg !4797

do.body2709:                                      ; preds = %while.body2708
  call void @llvm.dbg.declare(metadata i8** %old_buffer2710, metadata !4799, metadata !DIExpression()), !dbg !4801
  %1394 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4801
  %buffer2711 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1394, i32 0, i32 0, !dbg !4801
  %1395 = load i8*, i8** %buffer2711, align 8, !dbg !4801
  store i8* %1395, i8** %old_buffer2710, align 8, !dbg !4801
  %1396 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4802
  %allocated2712 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1396, i32 0, i32 1, !dbg !4802
  %1397 = load i64, i64* %allocated2712, align 8, !dbg !4802
  %cmp2713 = icmp eq i64 %1397, 65536, !dbg !4802
  br i1 %cmp2713, label %if.then2715, label %if.end2716, !dbg !4801

if.then2715:                                      ; preds = %do.body2709
  store i32 15, i32* %retval, align 4, !dbg !4802
  br label %return, !dbg !4802

if.end2716:                                       ; preds = %do.body2709
  %1398 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4801
  %allocated2717 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1398, i32 0, i32 1, !dbg !4801
  %1399 = load i64, i64* %allocated2717, align 8, !dbg !4801
  %shl2718 = shl i64 %1399, 1, !dbg !4801
  store i64 %shl2718, i64* %allocated2717, align 8, !dbg !4801
  %1400 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4804
  %allocated2719 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1400, i32 0, i32 1, !dbg !4804
  %1401 = load i64, i64* %allocated2719, align 8, !dbg !4804
  %cmp2720 = icmp ugt i64 %1401, 65536, !dbg !4804
  br i1 %cmp2720, label %if.then2722, label %if.end2724, !dbg !4801

if.then2722:                                      ; preds = %if.end2716
  %1402 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4804
  %allocated2723 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1402, i32 0, i32 1, !dbg !4804
  store i64 65536, i64* %allocated2723, align 8, !dbg !4804
  br label %if.end2724, !dbg !4804

if.end2724:                                       ; preds = %if.then2722, %if.end2716
  %1403 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4801
  %buffer2725 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1403, i32 0, i32 0, !dbg !4801
  %1404 = load i8*, i8** %buffer2725, align 8, !dbg !4801
  %1405 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4801
  %allocated2726 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1405, i32 0, i32 1, !dbg !4801
  %1406 = load i64, i64* %allocated2726, align 8, !dbg !4801
  %call2727 = call i8* @realloc(i8* %1404, i64 %1406), !dbg !4801
  %1407 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4801
  %buffer2728 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1407, i32 0, i32 0, !dbg !4801
  store i8* %call2727, i8** %buffer2728, align 8, !dbg !4801
  %1408 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4806
  %buffer2729 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1408, i32 0, i32 0, !dbg !4806
  %1409 = load i8*, i8** %buffer2729, align 8, !dbg !4806
  %cmp2730 = icmp eq i8* %1409, null, !dbg !4806
  br i1 %cmp2730, label %if.then2732, label %if.end2733, !dbg !4801

if.then2732:                                      ; preds = %if.end2724
  store i32 12, i32* %retval, align 4, !dbg !4806
  br label %return, !dbg !4806

if.end2733:                                       ; preds = %if.end2724
  %1410 = load i8*, i8** %old_buffer2710, align 8, !dbg !4808
  %1411 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4808
  %buffer2734 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1411, i32 0, i32 0, !dbg !4808
  %1412 = load i8*, i8** %buffer2734, align 8, !dbg !4808
  %cmp2735 = icmp ne i8* %1410, %1412, !dbg !4808
  br i1 %cmp2735, label %if.then2737, label %if.end2763, !dbg !4801

if.then2737:                                      ; preds = %if.end2733
  call void @llvm.dbg.declare(metadata i32* %incr2738, metadata !4810, metadata !DIExpression()), !dbg !4812
  %1413 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4812
  %buffer2739 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1413, i32 0, i32 0, !dbg !4812
  %1414 = load i8*, i8** %buffer2739, align 8, !dbg !4812
  %1415 = load i8*, i8** %old_buffer2710, align 8, !dbg !4812
  %sub.ptr.lhs.cast2740 = ptrtoint i8* %1414 to i64, !dbg !4812
  %sub.ptr.rhs.cast2741 = ptrtoint i8* %1415 to i64, !dbg !4812
  %sub.ptr.sub2742 = sub i64 %sub.ptr.lhs.cast2740, %sub.ptr.rhs.cast2741, !dbg !4812
  %conv2743 = trunc i64 %sub.ptr.sub2742 to i32, !dbg !4812
  store i32 %conv2743, i32* %incr2738, align 4, !dbg !4812
  %1416 = load i32, i32* %incr2738, align 4, !dbg !4812
  %1417 = load i8*, i8** %b, align 8, !dbg !4812
  %idx.ext2744 = sext i32 %1416 to i64, !dbg !4812
  %add.ptr2745 = getelementptr inbounds i8, i8* %1417, i64 %idx.ext2744, !dbg !4812
  store i8* %add.ptr2745, i8** %b, align 8, !dbg !4812
  %1418 = load i32, i32* %incr2738, align 4, !dbg !4812
  %1419 = load i8*, i8** %begalt, align 8, !dbg !4812
  %idx.ext2746 = sext i32 %1418 to i64, !dbg !4812
  %add.ptr2747 = getelementptr inbounds i8, i8* %1419, i64 %idx.ext2746, !dbg !4812
  store i8* %add.ptr2747, i8** %begalt, align 8, !dbg !4812
  %1420 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4813
  %tobool2748 = icmp ne i8* %1420, null, !dbg !4813
  br i1 %tobool2748, label %if.then2749, label %if.end2752, !dbg !4812

if.then2749:                                      ; preds = %if.then2737
  %1421 = load i32, i32* %incr2738, align 4, !dbg !4813
  %1422 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4813
  %idx.ext2750 = sext i32 %1421 to i64, !dbg !4813
  %add.ptr2751 = getelementptr inbounds i8, i8* %1422, i64 %idx.ext2750, !dbg !4813
  store i8* %add.ptr2751, i8** %fixup_alt_jump, align 8, !dbg !4813
  br label %if.end2752, !dbg !4813

if.end2752:                                       ; preds = %if.then2749, %if.then2737
  %1423 = load i8*, i8** %laststart, align 8, !dbg !4815
  %tobool2753 = icmp ne i8* %1423, null, !dbg !4815
  br i1 %tobool2753, label %if.then2754, label %if.end2757, !dbg !4812

if.then2754:                                      ; preds = %if.end2752
  %1424 = load i32, i32* %incr2738, align 4, !dbg !4815
  %1425 = load i8*, i8** %laststart, align 8, !dbg !4815
  %idx.ext2755 = sext i32 %1424 to i64, !dbg !4815
  %add.ptr2756 = getelementptr inbounds i8, i8* %1425, i64 %idx.ext2755, !dbg !4815
  store i8* %add.ptr2756, i8** %laststart, align 8, !dbg !4815
  br label %if.end2757, !dbg !4815

if.end2757:                                       ; preds = %if.then2754, %if.end2752
  %1426 = load i8*, i8** %pending_exact, align 8, !dbg !4817
  %tobool2758 = icmp ne i8* %1426, null, !dbg !4817
  br i1 %tobool2758, label %if.then2759, label %if.end2762, !dbg !4812

if.then2759:                                      ; preds = %if.end2757
  %1427 = load i32, i32* %incr2738, align 4, !dbg !4817
  %1428 = load i8*, i8** %pending_exact, align 8, !dbg !4817
  %idx.ext2760 = sext i32 %1427 to i64, !dbg !4817
  %add.ptr2761 = getelementptr inbounds i8, i8* %1428, i64 %idx.ext2760, !dbg !4817
  store i8* %add.ptr2761, i8** %pending_exact, align 8, !dbg !4817
  br label %if.end2762, !dbg !4817

if.end2762:                                       ; preds = %if.then2759, %if.end2757
  br label %if.end2763, !dbg !4812

if.end2763:                                       ; preds = %if.end2762, %if.end2733
  br label %do.end2764, !dbg !4801

do.end2764:                                       ; preds = %if.end2763
  br label %while.cond2699, !dbg !4797, !llvm.loop !4819

while.end2765:                                    ; preds = %while.cond2699
  %1429 = load i8*, i8** %b, align 8, !dbg !4797
  %incdec.ptr2766 = getelementptr inbounds i8, i8* %1429, i32 1, !dbg !4797
  store i8* %incdec.ptr2766, i8** %b, align 8, !dbg !4797
  store i8 24, i8* %1429, align 1, !dbg !4797
  br label %do.end2767, !dbg !4797

do.end2767:                                       ; preds = %while.end2765
  br label %sw.epilog, !dbg !4820

sw.bb2768:                                        ; preds = %do.end1793
  %1430 = load i64, i64* %syntax.addr, align 8, !dbg !4821
  %and2769 = and i64 %1430, 524288, !dbg !4823
  %tobool2770 = icmp ne i64 %and2769, 0, !dbg !4823
  br i1 %tobool2770, label %if.then2771, label %if.end2772, !dbg !4824

if.then2771:                                      ; preds = %sw.bb2768
  br label %normal_char, !dbg !4825

if.end2772:                                       ; preds = %sw.bb2768
  %1431 = load i8*, i8** %b, align 8, !dbg !4826
  store i8* %1431, i8** %laststart, align 8, !dbg !4827
  br label %do.body2773, !dbg !4828

do.body2773:                                      ; preds = %if.end2772
  br label %while.cond2774, !dbg !4829

while.cond2774:                                   ; preds = %do.end2839, %do.body2773
  %1432 = load i8*, i8** %b, align 8, !dbg !4829
  %1433 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4829
  %buffer2775 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1433, i32 0, i32 0, !dbg !4829
  %1434 = load i8*, i8** %buffer2775, align 8, !dbg !4829
  %sub.ptr.lhs.cast2776 = ptrtoint i8* %1432 to i64, !dbg !4829
  %sub.ptr.rhs.cast2777 = ptrtoint i8* %1434 to i64, !dbg !4829
  %sub.ptr.sub2778 = sub i64 %sub.ptr.lhs.cast2776, %sub.ptr.rhs.cast2777, !dbg !4829
  %add2779 = add nsw i64 %sub.ptr.sub2778, 1, !dbg !4829
  %1435 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4829
  %allocated2780 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1435, i32 0, i32 1, !dbg !4829
  %1436 = load i64, i64* %allocated2780, align 8, !dbg !4829
  %cmp2781 = icmp ugt i64 %add2779, %1436, !dbg !4829
  br i1 %cmp2781, label %while.body2783, label %while.end2840, !dbg !4829

while.body2783:                                   ; preds = %while.cond2774
  br label %do.body2784, !dbg !4829

do.body2784:                                      ; preds = %while.body2783
  call void @llvm.dbg.declare(metadata i8** %old_buffer2785, metadata !4831, metadata !DIExpression()), !dbg !4833
  %1437 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4833
  %buffer2786 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1437, i32 0, i32 0, !dbg !4833
  %1438 = load i8*, i8** %buffer2786, align 8, !dbg !4833
  store i8* %1438, i8** %old_buffer2785, align 8, !dbg !4833
  %1439 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4834
  %allocated2787 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1439, i32 0, i32 1, !dbg !4834
  %1440 = load i64, i64* %allocated2787, align 8, !dbg !4834
  %cmp2788 = icmp eq i64 %1440, 65536, !dbg !4834
  br i1 %cmp2788, label %if.then2790, label %if.end2791, !dbg !4833

if.then2790:                                      ; preds = %do.body2784
  store i32 15, i32* %retval, align 4, !dbg !4834
  br label %return, !dbg !4834

if.end2791:                                       ; preds = %do.body2784
  %1441 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4833
  %allocated2792 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1441, i32 0, i32 1, !dbg !4833
  %1442 = load i64, i64* %allocated2792, align 8, !dbg !4833
  %shl2793 = shl i64 %1442, 1, !dbg !4833
  store i64 %shl2793, i64* %allocated2792, align 8, !dbg !4833
  %1443 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4836
  %allocated2794 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1443, i32 0, i32 1, !dbg !4836
  %1444 = load i64, i64* %allocated2794, align 8, !dbg !4836
  %cmp2795 = icmp ugt i64 %1444, 65536, !dbg !4836
  br i1 %cmp2795, label %if.then2797, label %if.end2799, !dbg !4833

if.then2797:                                      ; preds = %if.end2791
  %1445 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4836
  %allocated2798 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1445, i32 0, i32 1, !dbg !4836
  store i64 65536, i64* %allocated2798, align 8, !dbg !4836
  br label %if.end2799, !dbg !4836

if.end2799:                                       ; preds = %if.then2797, %if.end2791
  %1446 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4833
  %buffer2800 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1446, i32 0, i32 0, !dbg !4833
  %1447 = load i8*, i8** %buffer2800, align 8, !dbg !4833
  %1448 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4833
  %allocated2801 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1448, i32 0, i32 1, !dbg !4833
  %1449 = load i64, i64* %allocated2801, align 8, !dbg !4833
  %call2802 = call i8* @realloc(i8* %1447, i64 %1449), !dbg !4833
  %1450 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4833
  %buffer2803 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1450, i32 0, i32 0, !dbg !4833
  store i8* %call2802, i8** %buffer2803, align 8, !dbg !4833
  %1451 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4838
  %buffer2804 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1451, i32 0, i32 0, !dbg !4838
  %1452 = load i8*, i8** %buffer2804, align 8, !dbg !4838
  %cmp2805 = icmp eq i8* %1452, null, !dbg !4838
  br i1 %cmp2805, label %if.then2807, label %if.end2808, !dbg !4833

if.then2807:                                      ; preds = %if.end2799
  store i32 12, i32* %retval, align 4, !dbg !4838
  br label %return, !dbg !4838

if.end2808:                                       ; preds = %if.end2799
  %1453 = load i8*, i8** %old_buffer2785, align 8, !dbg !4840
  %1454 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4840
  %buffer2809 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1454, i32 0, i32 0, !dbg !4840
  %1455 = load i8*, i8** %buffer2809, align 8, !dbg !4840
  %cmp2810 = icmp ne i8* %1453, %1455, !dbg !4840
  br i1 %cmp2810, label %if.then2812, label %if.end2838, !dbg !4833

if.then2812:                                      ; preds = %if.end2808
  call void @llvm.dbg.declare(metadata i32* %incr2813, metadata !4842, metadata !DIExpression()), !dbg !4844
  %1456 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4844
  %buffer2814 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1456, i32 0, i32 0, !dbg !4844
  %1457 = load i8*, i8** %buffer2814, align 8, !dbg !4844
  %1458 = load i8*, i8** %old_buffer2785, align 8, !dbg !4844
  %sub.ptr.lhs.cast2815 = ptrtoint i8* %1457 to i64, !dbg !4844
  %sub.ptr.rhs.cast2816 = ptrtoint i8* %1458 to i64, !dbg !4844
  %sub.ptr.sub2817 = sub i64 %sub.ptr.lhs.cast2815, %sub.ptr.rhs.cast2816, !dbg !4844
  %conv2818 = trunc i64 %sub.ptr.sub2817 to i32, !dbg !4844
  store i32 %conv2818, i32* %incr2813, align 4, !dbg !4844
  %1459 = load i32, i32* %incr2813, align 4, !dbg !4844
  %1460 = load i8*, i8** %b, align 8, !dbg !4844
  %idx.ext2819 = sext i32 %1459 to i64, !dbg !4844
  %add.ptr2820 = getelementptr inbounds i8, i8* %1460, i64 %idx.ext2819, !dbg !4844
  store i8* %add.ptr2820, i8** %b, align 8, !dbg !4844
  %1461 = load i32, i32* %incr2813, align 4, !dbg !4844
  %1462 = load i8*, i8** %begalt, align 8, !dbg !4844
  %idx.ext2821 = sext i32 %1461 to i64, !dbg !4844
  %add.ptr2822 = getelementptr inbounds i8, i8* %1462, i64 %idx.ext2821, !dbg !4844
  store i8* %add.ptr2822, i8** %begalt, align 8, !dbg !4844
  %1463 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4845
  %tobool2823 = icmp ne i8* %1463, null, !dbg !4845
  br i1 %tobool2823, label %if.then2824, label %if.end2827, !dbg !4844

if.then2824:                                      ; preds = %if.then2812
  %1464 = load i32, i32* %incr2813, align 4, !dbg !4845
  %1465 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4845
  %idx.ext2825 = sext i32 %1464 to i64, !dbg !4845
  %add.ptr2826 = getelementptr inbounds i8, i8* %1465, i64 %idx.ext2825, !dbg !4845
  store i8* %add.ptr2826, i8** %fixup_alt_jump, align 8, !dbg !4845
  br label %if.end2827, !dbg !4845

if.end2827:                                       ; preds = %if.then2824, %if.then2812
  %1466 = load i8*, i8** %laststart, align 8, !dbg !4847
  %tobool2828 = icmp ne i8* %1466, null, !dbg !4847
  br i1 %tobool2828, label %if.then2829, label %if.end2832, !dbg !4844

if.then2829:                                      ; preds = %if.end2827
  %1467 = load i32, i32* %incr2813, align 4, !dbg !4847
  %1468 = load i8*, i8** %laststart, align 8, !dbg !4847
  %idx.ext2830 = sext i32 %1467 to i64, !dbg !4847
  %add.ptr2831 = getelementptr inbounds i8, i8* %1468, i64 %idx.ext2830, !dbg !4847
  store i8* %add.ptr2831, i8** %laststart, align 8, !dbg !4847
  br label %if.end2832, !dbg !4847

if.end2832:                                       ; preds = %if.then2829, %if.end2827
  %1469 = load i8*, i8** %pending_exact, align 8, !dbg !4849
  %tobool2833 = icmp ne i8* %1469, null, !dbg !4849
  br i1 %tobool2833, label %if.then2834, label %if.end2837, !dbg !4844

if.then2834:                                      ; preds = %if.end2832
  %1470 = load i32, i32* %incr2813, align 4, !dbg !4849
  %1471 = load i8*, i8** %pending_exact, align 8, !dbg !4849
  %idx.ext2835 = sext i32 %1470 to i64, !dbg !4849
  %add.ptr2836 = getelementptr inbounds i8, i8* %1471, i64 %idx.ext2835, !dbg !4849
  store i8* %add.ptr2836, i8** %pending_exact, align 8, !dbg !4849
  br label %if.end2837, !dbg !4849

if.end2837:                                       ; preds = %if.then2834, %if.end2832
  br label %if.end2838, !dbg !4844

if.end2838:                                       ; preds = %if.end2837, %if.end2808
  br label %do.end2839, !dbg !4833

do.end2839:                                       ; preds = %if.end2838
  br label %while.cond2774, !dbg !4829, !llvm.loop !4851

while.end2840:                                    ; preds = %while.cond2774
  %1472 = load i8*, i8** %b, align 8, !dbg !4829
  %incdec.ptr2841 = getelementptr inbounds i8, i8* %1472, i32 1, !dbg !4829
  store i8* %incdec.ptr2841, i8** %b, align 8, !dbg !4829
  store i8 25, i8* %1472, align 1, !dbg !4829
  br label %do.end2842, !dbg !4829

do.end2842:                                       ; preds = %while.end2840
  br label %sw.epilog, !dbg !4852

sw.bb2843:                                        ; preds = %do.end1793
  %1473 = load i64, i64* %syntax.addr, align 8, !dbg !4853
  %and2844 = and i64 %1473, 524288, !dbg !4855
  %tobool2845 = icmp ne i64 %and2844, 0, !dbg !4855
  br i1 %tobool2845, label %if.then2846, label %if.end2847, !dbg !4856

if.then2846:                                      ; preds = %sw.bb2843
  br label %normal_char, !dbg !4857

if.end2847:                                       ; preds = %sw.bb2843
  br label %do.body2848, !dbg !4858

do.body2848:                                      ; preds = %if.end2847
  br label %while.cond2849, !dbg !4859

while.cond2849:                                   ; preds = %do.end2914, %do.body2848
  %1474 = load i8*, i8** %b, align 8, !dbg !4859
  %1475 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4859
  %buffer2850 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1475, i32 0, i32 0, !dbg !4859
  %1476 = load i8*, i8** %buffer2850, align 8, !dbg !4859
  %sub.ptr.lhs.cast2851 = ptrtoint i8* %1474 to i64, !dbg !4859
  %sub.ptr.rhs.cast2852 = ptrtoint i8* %1476 to i64, !dbg !4859
  %sub.ptr.sub2853 = sub i64 %sub.ptr.lhs.cast2851, %sub.ptr.rhs.cast2852, !dbg !4859
  %add2854 = add nsw i64 %sub.ptr.sub2853, 1, !dbg !4859
  %1477 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4859
  %allocated2855 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1477, i32 0, i32 1, !dbg !4859
  %1478 = load i64, i64* %allocated2855, align 8, !dbg !4859
  %cmp2856 = icmp ugt i64 %add2854, %1478, !dbg !4859
  br i1 %cmp2856, label %while.body2858, label %while.end2915, !dbg !4859

while.body2858:                                   ; preds = %while.cond2849
  br label %do.body2859, !dbg !4859

do.body2859:                                      ; preds = %while.body2858
  call void @llvm.dbg.declare(metadata i8** %old_buffer2860, metadata !4861, metadata !DIExpression()), !dbg !4863
  %1479 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4863
  %buffer2861 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1479, i32 0, i32 0, !dbg !4863
  %1480 = load i8*, i8** %buffer2861, align 8, !dbg !4863
  store i8* %1480, i8** %old_buffer2860, align 8, !dbg !4863
  %1481 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4864
  %allocated2862 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1481, i32 0, i32 1, !dbg !4864
  %1482 = load i64, i64* %allocated2862, align 8, !dbg !4864
  %cmp2863 = icmp eq i64 %1482, 65536, !dbg !4864
  br i1 %cmp2863, label %if.then2865, label %if.end2866, !dbg !4863

if.then2865:                                      ; preds = %do.body2859
  store i32 15, i32* %retval, align 4, !dbg !4864
  br label %return, !dbg !4864

if.end2866:                                       ; preds = %do.body2859
  %1483 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4863
  %allocated2867 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1483, i32 0, i32 1, !dbg !4863
  %1484 = load i64, i64* %allocated2867, align 8, !dbg !4863
  %shl2868 = shl i64 %1484, 1, !dbg !4863
  store i64 %shl2868, i64* %allocated2867, align 8, !dbg !4863
  %1485 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4866
  %allocated2869 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1485, i32 0, i32 1, !dbg !4866
  %1486 = load i64, i64* %allocated2869, align 8, !dbg !4866
  %cmp2870 = icmp ugt i64 %1486, 65536, !dbg !4866
  br i1 %cmp2870, label %if.then2872, label %if.end2874, !dbg !4863

if.then2872:                                      ; preds = %if.end2866
  %1487 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4866
  %allocated2873 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1487, i32 0, i32 1, !dbg !4866
  store i64 65536, i64* %allocated2873, align 8, !dbg !4866
  br label %if.end2874, !dbg !4866

if.end2874:                                       ; preds = %if.then2872, %if.end2866
  %1488 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4863
  %buffer2875 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1488, i32 0, i32 0, !dbg !4863
  %1489 = load i8*, i8** %buffer2875, align 8, !dbg !4863
  %1490 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4863
  %allocated2876 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1490, i32 0, i32 1, !dbg !4863
  %1491 = load i64, i64* %allocated2876, align 8, !dbg !4863
  %call2877 = call i8* @realloc(i8* %1489, i64 %1491), !dbg !4863
  %1492 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4863
  %buffer2878 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1492, i32 0, i32 0, !dbg !4863
  store i8* %call2877, i8** %buffer2878, align 8, !dbg !4863
  %1493 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4868
  %buffer2879 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1493, i32 0, i32 0, !dbg !4868
  %1494 = load i8*, i8** %buffer2879, align 8, !dbg !4868
  %cmp2880 = icmp eq i8* %1494, null, !dbg !4868
  br i1 %cmp2880, label %if.then2882, label %if.end2883, !dbg !4863

if.then2882:                                      ; preds = %if.end2874
  store i32 12, i32* %retval, align 4, !dbg !4868
  br label %return, !dbg !4868

if.end2883:                                       ; preds = %if.end2874
  %1495 = load i8*, i8** %old_buffer2860, align 8, !dbg !4870
  %1496 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4870
  %buffer2884 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1496, i32 0, i32 0, !dbg !4870
  %1497 = load i8*, i8** %buffer2884, align 8, !dbg !4870
  %cmp2885 = icmp ne i8* %1495, %1497, !dbg !4870
  br i1 %cmp2885, label %if.then2887, label %if.end2913, !dbg !4863

if.then2887:                                      ; preds = %if.end2883
  call void @llvm.dbg.declare(metadata i32* %incr2888, metadata !4872, metadata !DIExpression()), !dbg !4874
  %1498 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4874
  %buffer2889 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1498, i32 0, i32 0, !dbg !4874
  %1499 = load i8*, i8** %buffer2889, align 8, !dbg !4874
  %1500 = load i8*, i8** %old_buffer2860, align 8, !dbg !4874
  %sub.ptr.lhs.cast2890 = ptrtoint i8* %1499 to i64, !dbg !4874
  %sub.ptr.rhs.cast2891 = ptrtoint i8* %1500 to i64, !dbg !4874
  %sub.ptr.sub2892 = sub i64 %sub.ptr.lhs.cast2890, %sub.ptr.rhs.cast2891, !dbg !4874
  %conv2893 = trunc i64 %sub.ptr.sub2892 to i32, !dbg !4874
  store i32 %conv2893, i32* %incr2888, align 4, !dbg !4874
  %1501 = load i32, i32* %incr2888, align 4, !dbg !4874
  %1502 = load i8*, i8** %b, align 8, !dbg !4874
  %idx.ext2894 = sext i32 %1501 to i64, !dbg !4874
  %add.ptr2895 = getelementptr inbounds i8, i8* %1502, i64 %idx.ext2894, !dbg !4874
  store i8* %add.ptr2895, i8** %b, align 8, !dbg !4874
  %1503 = load i32, i32* %incr2888, align 4, !dbg !4874
  %1504 = load i8*, i8** %begalt, align 8, !dbg !4874
  %idx.ext2896 = sext i32 %1503 to i64, !dbg !4874
  %add.ptr2897 = getelementptr inbounds i8, i8* %1504, i64 %idx.ext2896, !dbg !4874
  store i8* %add.ptr2897, i8** %begalt, align 8, !dbg !4874
  %1505 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4875
  %tobool2898 = icmp ne i8* %1505, null, !dbg !4875
  br i1 %tobool2898, label %if.then2899, label %if.end2902, !dbg !4874

if.then2899:                                      ; preds = %if.then2887
  %1506 = load i32, i32* %incr2888, align 4, !dbg !4875
  %1507 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4875
  %idx.ext2900 = sext i32 %1506 to i64, !dbg !4875
  %add.ptr2901 = getelementptr inbounds i8, i8* %1507, i64 %idx.ext2900, !dbg !4875
  store i8* %add.ptr2901, i8** %fixup_alt_jump, align 8, !dbg !4875
  br label %if.end2902, !dbg !4875

if.end2902:                                       ; preds = %if.then2899, %if.then2887
  %1508 = load i8*, i8** %laststart, align 8, !dbg !4877
  %tobool2903 = icmp ne i8* %1508, null, !dbg !4877
  br i1 %tobool2903, label %if.then2904, label %if.end2907, !dbg !4874

if.then2904:                                      ; preds = %if.end2902
  %1509 = load i32, i32* %incr2888, align 4, !dbg !4877
  %1510 = load i8*, i8** %laststart, align 8, !dbg !4877
  %idx.ext2905 = sext i32 %1509 to i64, !dbg !4877
  %add.ptr2906 = getelementptr inbounds i8, i8* %1510, i64 %idx.ext2905, !dbg !4877
  store i8* %add.ptr2906, i8** %laststart, align 8, !dbg !4877
  br label %if.end2907, !dbg !4877

if.end2907:                                       ; preds = %if.then2904, %if.end2902
  %1511 = load i8*, i8** %pending_exact, align 8, !dbg !4879
  %tobool2908 = icmp ne i8* %1511, null, !dbg !4879
  br i1 %tobool2908, label %if.then2909, label %if.end2912, !dbg !4874

if.then2909:                                      ; preds = %if.end2907
  %1512 = load i32, i32* %incr2888, align 4, !dbg !4879
  %1513 = load i8*, i8** %pending_exact, align 8, !dbg !4879
  %idx.ext2910 = sext i32 %1512 to i64, !dbg !4879
  %add.ptr2911 = getelementptr inbounds i8, i8* %1513, i64 %idx.ext2910, !dbg !4879
  store i8* %add.ptr2911, i8** %pending_exact, align 8, !dbg !4879
  br label %if.end2912, !dbg !4879

if.end2912:                                       ; preds = %if.then2909, %if.end2907
  br label %if.end2913, !dbg !4874

if.end2913:                                       ; preds = %if.end2912, %if.end2883
  br label %do.end2914, !dbg !4863

do.end2914:                                       ; preds = %if.end2913
  br label %while.cond2849, !dbg !4859, !llvm.loop !4881

while.end2915:                                    ; preds = %while.cond2849
  %1514 = load i8*, i8** %b, align 8, !dbg !4859
  %incdec.ptr2916 = getelementptr inbounds i8, i8* %1514, i32 1, !dbg !4859
  store i8* %incdec.ptr2916, i8** %b, align 8, !dbg !4859
  store i8 26, i8* %1514, align 1, !dbg !4859
  br label %do.end2917, !dbg !4859

do.end2917:                                       ; preds = %while.end2915
  br label %sw.epilog, !dbg !4882

sw.bb2918:                                        ; preds = %do.end1793
  %1515 = load i64, i64* %syntax.addr, align 8, !dbg !4883
  %and2919 = and i64 %1515, 524288, !dbg !4885
  %tobool2920 = icmp ne i64 %and2919, 0, !dbg !4885
  br i1 %tobool2920, label %if.then2921, label %if.end2922, !dbg !4886

if.then2921:                                      ; preds = %sw.bb2918
  br label %normal_char, !dbg !4887

if.end2922:                                       ; preds = %sw.bb2918
  br label %do.body2923, !dbg !4888

do.body2923:                                      ; preds = %if.end2922
  br label %while.cond2924, !dbg !4889

while.cond2924:                                   ; preds = %do.end2989, %do.body2923
  %1516 = load i8*, i8** %b, align 8, !dbg !4889
  %1517 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4889
  %buffer2925 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1517, i32 0, i32 0, !dbg !4889
  %1518 = load i8*, i8** %buffer2925, align 8, !dbg !4889
  %sub.ptr.lhs.cast2926 = ptrtoint i8* %1516 to i64, !dbg !4889
  %sub.ptr.rhs.cast2927 = ptrtoint i8* %1518 to i64, !dbg !4889
  %sub.ptr.sub2928 = sub i64 %sub.ptr.lhs.cast2926, %sub.ptr.rhs.cast2927, !dbg !4889
  %add2929 = add nsw i64 %sub.ptr.sub2928, 1, !dbg !4889
  %1519 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4889
  %allocated2930 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1519, i32 0, i32 1, !dbg !4889
  %1520 = load i64, i64* %allocated2930, align 8, !dbg !4889
  %cmp2931 = icmp ugt i64 %add2929, %1520, !dbg !4889
  br i1 %cmp2931, label %while.body2933, label %while.end2990, !dbg !4889

while.body2933:                                   ; preds = %while.cond2924
  br label %do.body2934, !dbg !4889

do.body2934:                                      ; preds = %while.body2933
  call void @llvm.dbg.declare(metadata i8** %old_buffer2935, metadata !4891, metadata !DIExpression()), !dbg !4893
  %1521 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4893
  %buffer2936 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1521, i32 0, i32 0, !dbg !4893
  %1522 = load i8*, i8** %buffer2936, align 8, !dbg !4893
  store i8* %1522, i8** %old_buffer2935, align 8, !dbg !4893
  %1523 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4894
  %allocated2937 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1523, i32 0, i32 1, !dbg !4894
  %1524 = load i64, i64* %allocated2937, align 8, !dbg !4894
  %cmp2938 = icmp eq i64 %1524, 65536, !dbg !4894
  br i1 %cmp2938, label %if.then2940, label %if.end2941, !dbg !4893

if.then2940:                                      ; preds = %do.body2934
  store i32 15, i32* %retval, align 4, !dbg !4894
  br label %return, !dbg !4894

if.end2941:                                       ; preds = %do.body2934
  %1525 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4893
  %allocated2942 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1525, i32 0, i32 1, !dbg !4893
  %1526 = load i64, i64* %allocated2942, align 8, !dbg !4893
  %shl2943 = shl i64 %1526, 1, !dbg !4893
  store i64 %shl2943, i64* %allocated2942, align 8, !dbg !4893
  %1527 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4896
  %allocated2944 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1527, i32 0, i32 1, !dbg !4896
  %1528 = load i64, i64* %allocated2944, align 8, !dbg !4896
  %cmp2945 = icmp ugt i64 %1528, 65536, !dbg !4896
  br i1 %cmp2945, label %if.then2947, label %if.end2949, !dbg !4893

if.then2947:                                      ; preds = %if.end2941
  %1529 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4896
  %allocated2948 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1529, i32 0, i32 1, !dbg !4896
  store i64 65536, i64* %allocated2948, align 8, !dbg !4896
  br label %if.end2949, !dbg !4896

if.end2949:                                       ; preds = %if.then2947, %if.end2941
  %1530 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4893
  %buffer2950 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1530, i32 0, i32 0, !dbg !4893
  %1531 = load i8*, i8** %buffer2950, align 8, !dbg !4893
  %1532 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4893
  %allocated2951 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1532, i32 0, i32 1, !dbg !4893
  %1533 = load i64, i64* %allocated2951, align 8, !dbg !4893
  %call2952 = call i8* @realloc(i8* %1531, i64 %1533), !dbg !4893
  %1534 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4893
  %buffer2953 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1534, i32 0, i32 0, !dbg !4893
  store i8* %call2952, i8** %buffer2953, align 8, !dbg !4893
  %1535 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4898
  %buffer2954 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1535, i32 0, i32 0, !dbg !4898
  %1536 = load i8*, i8** %buffer2954, align 8, !dbg !4898
  %cmp2955 = icmp eq i8* %1536, null, !dbg !4898
  br i1 %cmp2955, label %if.then2957, label %if.end2958, !dbg !4893

if.then2957:                                      ; preds = %if.end2949
  store i32 12, i32* %retval, align 4, !dbg !4898
  br label %return, !dbg !4898

if.end2958:                                       ; preds = %if.end2949
  %1537 = load i8*, i8** %old_buffer2935, align 8, !dbg !4900
  %1538 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4900
  %buffer2959 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1538, i32 0, i32 0, !dbg !4900
  %1539 = load i8*, i8** %buffer2959, align 8, !dbg !4900
  %cmp2960 = icmp ne i8* %1537, %1539, !dbg !4900
  br i1 %cmp2960, label %if.then2962, label %if.end2988, !dbg !4893

if.then2962:                                      ; preds = %if.end2958
  call void @llvm.dbg.declare(metadata i32* %incr2963, metadata !4902, metadata !DIExpression()), !dbg !4904
  %1540 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4904
  %buffer2964 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1540, i32 0, i32 0, !dbg !4904
  %1541 = load i8*, i8** %buffer2964, align 8, !dbg !4904
  %1542 = load i8*, i8** %old_buffer2935, align 8, !dbg !4904
  %sub.ptr.lhs.cast2965 = ptrtoint i8* %1541 to i64, !dbg !4904
  %sub.ptr.rhs.cast2966 = ptrtoint i8* %1542 to i64, !dbg !4904
  %sub.ptr.sub2967 = sub i64 %sub.ptr.lhs.cast2965, %sub.ptr.rhs.cast2966, !dbg !4904
  %conv2968 = trunc i64 %sub.ptr.sub2967 to i32, !dbg !4904
  store i32 %conv2968, i32* %incr2963, align 4, !dbg !4904
  %1543 = load i32, i32* %incr2963, align 4, !dbg !4904
  %1544 = load i8*, i8** %b, align 8, !dbg !4904
  %idx.ext2969 = sext i32 %1543 to i64, !dbg !4904
  %add.ptr2970 = getelementptr inbounds i8, i8* %1544, i64 %idx.ext2969, !dbg !4904
  store i8* %add.ptr2970, i8** %b, align 8, !dbg !4904
  %1545 = load i32, i32* %incr2963, align 4, !dbg !4904
  %1546 = load i8*, i8** %begalt, align 8, !dbg !4904
  %idx.ext2971 = sext i32 %1545 to i64, !dbg !4904
  %add.ptr2972 = getelementptr inbounds i8, i8* %1546, i64 %idx.ext2971, !dbg !4904
  store i8* %add.ptr2972, i8** %begalt, align 8, !dbg !4904
  %1547 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4905
  %tobool2973 = icmp ne i8* %1547, null, !dbg !4905
  br i1 %tobool2973, label %if.then2974, label %if.end2977, !dbg !4904

if.then2974:                                      ; preds = %if.then2962
  %1548 = load i32, i32* %incr2963, align 4, !dbg !4905
  %1549 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4905
  %idx.ext2975 = sext i32 %1548 to i64, !dbg !4905
  %add.ptr2976 = getelementptr inbounds i8, i8* %1549, i64 %idx.ext2975, !dbg !4905
  store i8* %add.ptr2976, i8** %fixup_alt_jump, align 8, !dbg !4905
  br label %if.end2977, !dbg !4905

if.end2977:                                       ; preds = %if.then2974, %if.then2962
  %1550 = load i8*, i8** %laststart, align 8, !dbg !4907
  %tobool2978 = icmp ne i8* %1550, null, !dbg !4907
  br i1 %tobool2978, label %if.then2979, label %if.end2982, !dbg !4904

if.then2979:                                      ; preds = %if.end2977
  %1551 = load i32, i32* %incr2963, align 4, !dbg !4907
  %1552 = load i8*, i8** %laststart, align 8, !dbg !4907
  %idx.ext2980 = sext i32 %1551 to i64, !dbg !4907
  %add.ptr2981 = getelementptr inbounds i8, i8* %1552, i64 %idx.ext2980, !dbg !4907
  store i8* %add.ptr2981, i8** %laststart, align 8, !dbg !4907
  br label %if.end2982, !dbg !4907

if.end2982:                                       ; preds = %if.then2979, %if.end2977
  %1553 = load i8*, i8** %pending_exact, align 8, !dbg !4909
  %tobool2983 = icmp ne i8* %1553, null, !dbg !4909
  br i1 %tobool2983, label %if.then2984, label %if.end2987, !dbg !4904

if.then2984:                                      ; preds = %if.end2982
  %1554 = load i32, i32* %incr2963, align 4, !dbg !4909
  %1555 = load i8*, i8** %pending_exact, align 8, !dbg !4909
  %idx.ext2985 = sext i32 %1554 to i64, !dbg !4909
  %add.ptr2986 = getelementptr inbounds i8, i8* %1555, i64 %idx.ext2985, !dbg !4909
  store i8* %add.ptr2986, i8** %pending_exact, align 8, !dbg !4909
  br label %if.end2987, !dbg !4909

if.end2987:                                       ; preds = %if.then2984, %if.end2982
  br label %if.end2988, !dbg !4904

if.end2988:                                       ; preds = %if.end2987, %if.end2958
  br label %do.end2989, !dbg !4893

do.end2989:                                       ; preds = %if.end2988
  br label %while.cond2924, !dbg !4889, !llvm.loop !4911

while.end2990:                                    ; preds = %while.cond2924
  %1556 = load i8*, i8** %b, align 8, !dbg !4889
  %incdec.ptr2991 = getelementptr inbounds i8, i8* %1556, i32 1, !dbg !4889
  store i8* %incdec.ptr2991, i8** %b, align 8, !dbg !4889
  store i8 27, i8* %1556, align 1, !dbg !4889
  br label %do.end2992, !dbg !4889

do.end2992:                                       ; preds = %while.end2990
  br label %sw.epilog, !dbg !4912

sw.bb2993:                                        ; preds = %do.end1793
  %1557 = load i64, i64* %syntax.addr, align 8, !dbg !4913
  %and2994 = and i64 %1557, 524288, !dbg !4915
  %tobool2995 = icmp ne i64 %and2994, 0, !dbg !4915
  br i1 %tobool2995, label %if.then2996, label %if.end2997, !dbg !4916

if.then2996:                                      ; preds = %sw.bb2993
  br label %normal_char, !dbg !4917

if.end2997:                                       ; preds = %sw.bb2993
  br label %do.body2998, !dbg !4918

do.body2998:                                      ; preds = %if.end2997
  br label %while.cond2999, !dbg !4919

while.cond2999:                                   ; preds = %do.end3064, %do.body2998
  %1558 = load i8*, i8** %b, align 8, !dbg !4919
  %1559 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4919
  %buffer3000 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1559, i32 0, i32 0, !dbg !4919
  %1560 = load i8*, i8** %buffer3000, align 8, !dbg !4919
  %sub.ptr.lhs.cast3001 = ptrtoint i8* %1558 to i64, !dbg !4919
  %sub.ptr.rhs.cast3002 = ptrtoint i8* %1560 to i64, !dbg !4919
  %sub.ptr.sub3003 = sub i64 %sub.ptr.lhs.cast3001, %sub.ptr.rhs.cast3002, !dbg !4919
  %add3004 = add nsw i64 %sub.ptr.sub3003, 1, !dbg !4919
  %1561 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4919
  %allocated3005 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1561, i32 0, i32 1, !dbg !4919
  %1562 = load i64, i64* %allocated3005, align 8, !dbg !4919
  %cmp3006 = icmp ugt i64 %add3004, %1562, !dbg !4919
  br i1 %cmp3006, label %while.body3008, label %while.end3065, !dbg !4919

while.body3008:                                   ; preds = %while.cond2999
  br label %do.body3009, !dbg !4919

do.body3009:                                      ; preds = %while.body3008
  call void @llvm.dbg.declare(metadata i8** %old_buffer3010, metadata !4921, metadata !DIExpression()), !dbg !4923
  %1563 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4923
  %buffer3011 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1563, i32 0, i32 0, !dbg !4923
  %1564 = load i8*, i8** %buffer3011, align 8, !dbg !4923
  store i8* %1564, i8** %old_buffer3010, align 8, !dbg !4923
  %1565 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4924
  %allocated3012 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1565, i32 0, i32 1, !dbg !4924
  %1566 = load i64, i64* %allocated3012, align 8, !dbg !4924
  %cmp3013 = icmp eq i64 %1566, 65536, !dbg !4924
  br i1 %cmp3013, label %if.then3015, label %if.end3016, !dbg !4923

if.then3015:                                      ; preds = %do.body3009
  store i32 15, i32* %retval, align 4, !dbg !4924
  br label %return, !dbg !4924

if.end3016:                                       ; preds = %do.body3009
  %1567 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4923
  %allocated3017 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1567, i32 0, i32 1, !dbg !4923
  %1568 = load i64, i64* %allocated3017, align 8, !dbg !4923
  %shl3018 = shl i64 %1568, 1, !dbg !4923
  store i64 %shl3018, i64* %allocated3017, align 8, !dbg !4923
  %1569 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4926
  %allocated3019 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1569, i32 0, i32 1, !dbg !4926
  %1570 = load i64, i64* %allocated3019, align 8, !dbg !4926
  %cmp3020 = icmp ugt i64 %1570, 65536, !dbg !4926
  br i1 %cmp3020, label %if.then3022, label %if.end3024, !dbg !4923

if.then3022:                                      ; preds = %if.end3016
  %1571 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4926
  %allocated3023 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1571, i32 0, i32 1, !dbg !4926
  store i64 65536, i64* %allocated3023, align 8, !dbg !4926
  br label %if.end3024, !dbg !4926

if.end3024:                                       ; preds = %if.then3022, %if.end3016
  %1572 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4923
  %buffer3025 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1572, i32 0, i32 0, !dbg !4923
  %1573 = load i8*, i8** %buffer3025, align 8, !dbg !4923
  %1574 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4923
  %allocated3026 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1574, i32 0, i32 1, !dbg !4923
  %1575 = load i64, i64* %allocated3026, align 8, !dbg !4923
  %call3027 = call i8* @realloc(i8* %1573, i64 %1575), !dbg !4923
  %1576 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4923
  %buffer3028 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1576, i32 0, i32 0, !dbg !4923
  store i8* %call3027, i8** %buffer3028, align 8, !dbg !4923
  %1577 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4928
  %buffer3029 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1577, i32 0, i32 0, !dbg !4928
  %1578 = load i8*, i8** %buffer3029, align 8, !dbg !4928
  %cmp3030 = icmp eq i8* %1578, null, !dbg !4928
  br i1 %cmp3030, label %if.then3032, label %if.end3033, !dbg !4923

if.then3032:                                      ; preds = %if.end3024
  store i32 12, i32* %retval, align 4, !dbg !4928
  br label %return, !dbg !4928

if.end3033:                                       ; preds = %if.end3024
  %1579 = load i8*, i8** %old_buffer3010, align 8, !dbg !4930
  %1580 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4930
  %buffer3034 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1580, i32 0, i32 0, !dbg !4930
  %1581 = load i8*, i8** %buffer3034, align 8, !dbg !4930
  %cmp3035 = icmp ne i8* %1579, %1581, !dbg !4930
  br i1 %cmp3035, label %if.then3037, label %if.end3063, !dbg !4923

if.then3037:                                      ; preds = %if.end3033
  call void @llvm.dbg.declare(metadata i32* %incr3038, metadata !4932, metadata !DIExpression()), !dbg !4934
  %1582 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4934
  %buffer3039 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1582, i32 0, i32 0, !dbg !4934
  %1583 = load i8*, i8** %buffer3039, align 8, !dbg !4934
  %1584 = load i8*, i8** %old_buffer3010, align 8, !dbg !4934
  %sub.ptr.lhs.cast3040 = ptrtoint i8* %1583 to i64, !dbg !4934
  %sub.ptr.rhs.cast3041 = ptrtoint i8* %1584 to i64, !dbg !4934
  %sub.ptr.sub3042 = sub i64 %sub.ptr.lhs.cast3040, %sub.ptr.rhs.cast3041, !dbg !4934
  %conv3043 = trunc i64 %sub.ptr.sub3042 to i32, !dbg !4934
  store i32 %conv3043, i32* %incr3038, align 4, !dbg !4934
  %1585 = load i32, i32* %incr3038, align 4, !dbg !4934
  %1586 = load i8*, i8** %b, align 8, !dbg !4934
  %idx.ext3044 = sext i32 %1585 to i64, !dbg !4934
  %add.ptr3045 = getelementptr inbounds i8, i8* %1586, i64 %idx.ext3044, !dbg !4934
  store i8* %add.ptr3045, i8** %b, align 8, !dbg !4934
  %1587 = load i32, i32* %incr3038, align 4, !dbg !4934
  %1588 = load i8*, i8** %begalt, align 8, !dbg !4934
  %idx.ext3046 = sext i32 %1587 to i64, !dbg !4934
  %add.ptr3047 = getelementptr inbounds i8, i8* %1588, i64 %idx.ext3046, !dbg !4934
  store i8* %add.ptr3047, i8** %begalt, align 8, !dbg !4934
  %1589 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4935
  %tobool3048 = icmp ne i8* %1589, null, !dbg !4935
  br i1 %tobool3048, label %if.then3049, label %if.end3052, !dbg !4934

if.then3049:                                      ; preds = %if.then3037
  %1590 = load i32, i32* %incr3038, align 4, !dbg !4935
  %1591 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4935
  %idx.ext3050 = sext i32 %1590 to i64, !dbg !4935
  %add.ptr3051 = getelementptr inbounds i8, i8* %1591, i64 %idx.ext3050, !dbg !4935
  store i8* %add.ptr3051, i8** %fixup_alt_jump, align 8, !dbg !4935
  br label %if.end3052, !dbg !4935

if.end3052:                                       ; preds = %if.then3049, %if.then3037
  %1592 = load i8*, i8** %laststart, align 8, !dbg !4937
  %tobool3053 = icmp ne i8* %1592, null, !dbg !4937
  br i1 %tobool3053, label %if.then3054, label %if.end3057, !dbg !4934

if.then3054:                                      ; preds = %if.end3052
  %1593 = load i32, i32* %incr3038, align 4, !dbg !4937
  %1594 = load i8*, i8** %laststart, align 8, !dbg !4937
  %idx.ext3055 = sext i32 %1593 to i64, !dbg !4937
  %add.ptr3056 = getelementptr inbounds i8, i8* %1594, i64 %idx.ext3055, !dbg !4937
  store i8* %add.ptr3056, i8** %laststart, align 8, !dbg !4937
  br label %if.end3057, !dbg !4937

if.end3057:                                       ; preds = %if.then3054, %if.end3052
  %1595 = load i8*, i8** %pending_exact, align 8, !dbg !4939
  %tobool3058 = icmp ne i8* %1595, null, !dbg !4939
  br i1 %tobool3058, label %if.then3059, label %if.end3062, !dbg !4934

if.then3059:                                      ; preds = %if.end3057
  %1596 = load i32, i32* %incr3038, align 4, !dbg !4939
  %1597 = load i8*, i8** %pending_exact, align 8, !dbg !4939
  %idx.ext3060 = sext i32 %1596 to i64, !dbg !4939
  %add.ptr3061 = getelementptr inbounds i8, i8* %1597, i64 %idx.ext3060, !dbg !4939
  store i8* %add.ptr3061, i8** %pending_exact, align 8, !dbg !4939
  br label %if.end3062, !dbg !4939

if.end3062:                                       ; preds = %if.then3059, %if.end3057
  br label %if.end3063, !dbg !4934

if.end3063:                                       ; preds = %if.end3062, %if.end3033
  br label %do.end3064, !dbg !4923

do.end3064:                                       ; preds = %if.end3063
  br label %while.cond2999, !dbg !4919, !llvm.loop !4941

while.end3065:                                    ; preds = %while.cond2999
  %1598 = load i8*, i8** %b, align 8, !dbg !4919
  %incdec.ptr3066 = getelementptr inbounds i8, i8* %1598, i32 1, !dbg !4919
  store i8* %incdec.ptr3066, i8** %b, align 8, !dbg !4919
  store i8 28, i8* %1598, align 1, !dbg !4919
  br label %do.end3067, !dbg !4919

do.end3067:                                       ; preds = %while.end3065
  br label %sw.epilog, !dbg !4942

sw.bb3068:                                        ; preds = %do.end1793
  %1599 = load i64, i64* %syntax.addr, align 8, !dbg !4943
  %and3069 = and i64 %1599, 524288, !dbg !4945
  %tobool3070 = icmp ne i64 %and3069, 0, !dbg !4945
  br i1 %tobool3070, label %if.then3071, label %if.end3072, !dbg !4946

if.then3071:                                      ; preds = %sw.bb3068
  br label %normal_char, !dbg !4947

if.end3072:                                       ; preds = %sw.bb3068
  br label %do.body3073, !dbg !4948

do.body3073:                                      ; preds = %if.end3072
  br label %while.cond3074, !dbg !4949

while.cond3074:                                   ; preds = %do.end3139, %do.body3073
  %1600 = load i8*, i8** %b, align 8, !dbg !4949
  %1601 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4949
  %buffer3075 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1601, i32 0, i32 0, !dbg !4949
  %1602 = load i8*, i8** %buffer3075, align 8, !dbg !4949
  %sub.ptr.lhs.cast3076 = ptrtoint i8* %1600 to i64, !dbg !4949
  %sub.ptr.rhs.cast3077 = ptrtoint i8* %1602 to i64, !dbg !4949
  %sub.ptr.sub3078 = sub i64 %sub.ptr.lhs.cast3076, %sub.ptr.rhs.cast3077, !dbg !4949
  %add3079 = add nsw i64 %sub.ptr.sub3078, 1, !dbg !4949
  %1603 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4949
  %allocated3080 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1603, i32 0, i32 1, !dbg !4949
  %1604 = load i64, i64* %allocated3080, align 8, !dbg !4949
  %cmp3081 = icmp ugt i64 %add3079, %1604, !dbg !4949
  br i1 %cmp3081, label %while.body3083, label %while.end3140, !dbg !4949

while.body3083:                                   ; preds = %while.cond3074
  br label %do.body3084, !dbg !4949

do.body3084:                                      ; preds = %while.body3083
  call void @llvm.dbg.declare(metadata i8** %old_buffer3085, metadata !4951, metadata !DIExpression()), !dbg !4953
  %1605 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4953
  %buffer3086 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1605, i32 0, i32 0, !dbg !4953
  %1606 = load i8*, i8** %buffer3086, align 8, !dbg !4953
  store i8* %1606, i8** %old_buffer3085, align 8, !dbg !4953
  %1607 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4954
  %allocated3087 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1607, i32 0, i32 1, !dbg !4954
  %1608 = load i64, i64* %allocated3087, align 8, !dbg !4954
  %cmp3088 = icmp eq i64 %1608, 65536, !dbg !4954
  br i1 %cmp3088, label %if.then3090, label %if.end3091, !dbg !4953

if.then3090:                                      ; preds = %do.body3084
  store i32 15, i32* %retval, align 4, !dbg !4954
  br label %return, !dbg !4954

if.end3091:                                       ; preds = %do.body3084
  %1609 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4953
  %allocated3092 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1609, i32 0, i32 1, !dbg !4953
  %1610 = load i64, i64* %allocated3092, align 8, !dbg !4953
  %shl3093 = shl i64 %1610, 1, !dbg !4953
  store i64 %shl3093, i64* %allocated3092, align 8, !dbg !4953
  %1611 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4956
  %allocated3094 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1611, i32 0, i32 1, !dbg !4956
  %1612 = load i64, i64* %allocated3094, align 8, !dbg !4956
  %cmp3095 = icmp ugt i64 %1612, 65536, !dbg !4956
  br i1 %cmp3095, label %if.then3097, label %if.end3099, !dbg !4953

if.then3097:                                      ; preds = %if.end3091
  %1613 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4956
  %allocated3098 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1613, i32 0, i32 1, !dbg !4956
  store i64 65536, i64* %allocated3098, align 8, !dbg !4956
  br label %if.end3099, !dbg !4956

if.end3099:                                       ; preds = %if.then3097, %if.end3091
  %1614 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4953
  %buffer3100 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1614, i32 0, i32 0, !dbg !4953
  %1615 = load i8*, i8** %buffer3100, align 8, !dbg !4953
  %1616 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4953
  %allocated3101 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1616, i32 0, i32 1, !dbg !4953
  %1617 = load i64, i64* %allocated3101, align 8, !dbg !4953
  %call3102 = call i8* @realloc(i8* %1615, i64 %1617), !dbg !4953
  %1618 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4953
  %buffer3103 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1618, i32 0, i32 0, !dbg !4953
  store i8* %call3102, i8** %buffer3103, align 8, !dbg !4953
  %1619 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4958
  %buffer3104 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1619, i32 0, i32 0, !dbg !4958
  %1620 = load i8*, i8** %buffer3104, align 8, !dbg !4958
  %cmp3105 = icmp eq i8* %1620, null, !dbg !4958
  br i1 %cmp3105, label %if.then3107, label %if.end3108, !dbg !4953

if.then3107:                                      ; preds = %if.end3099
  store i32 12, i32* %retval, align 4, !dbg !4958
  br label %return, !dbg !4958

if.end3108:                                       ; preds = %if.end3099
  %1621 = load i8*, i8** %old_buffer3085, align 8, !dbg !4960
  %1622 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4960
  %buffer3109 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1622, i32 0, i32 0, !dbg !4960
  %1623 = load i8*, i8** %buffer3109, align 8, !dbg !4960
  %cmp3110 = icmp ne i8* %1621, %1623, !dbg !4960
  br i1 %cmp3110, label %if.then3112, label %if.end3138, !dbg !4953

if.then3112:                                      ; preds = %if.end3108
  call void @llvm.dbg.declare(metadata i32* %incr3113, metadata !4962, metadata !DIExpression()), !dbg !4964
  %1624 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4964
  %buffer3114 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1624, i32 0, i32 0, !dbg !4964
  %1625 = load i8*, i8** %buffer3114, align 8, !dbg !4964
  %1626 = load i8*, i8** %old_buffer3085, align 8, !dbg !4964
  %sub.ptr.lhs.cast3115 = ptrtoint i8* %1625 to i64, !dbg !4964
  %sub.ptr.rhs.cast3116 = ptrtoint i8* %1626 to i64, !dbg !4964
  %sub.ptr.sub3117 = sub i64 %sub.ptr.lhs.cast3115, %sub.ptr.rhs.cast3116, !dbg !4964
  %conv3118 = trunc i64 %sub.ptr.sub3117 to i32, !dbg !4964
  store i32 %conv3118, i32* %incr3113, align 4, !dbg !4964
  %1627 = load i32, i32* %incr3113, align 4, !dbg !4964
  %1628 = load i8*, i8** %b, align 8, !dbg !4964
  %idx.ext3119 = sext i32 %1627 to i64, !dbg !4964
  %add.ptr3120 = getelementptr inbounds i8, i8* %1628, i64 %idx.ext3119, !dbg !4964
  store i8* %add.ptr3120, i8** %b, align 8, !dbg !4964
  %1629 = load i32, i32* %incr3113, align 4, !dbg !4964
  %1630 = load i8*, i8** %begalt, align 8, !dbg !4964
  %idx.ext3121 = sext i32 %1629 to i64, !dbg !4964
  %add.ptr3122 = getelementptr inbounds i8, i8* %1630, i64 %idx.ext3121, !dbg !4964
  store i8* %add.ptr3122, i8** %begalt, align 8, !dbg !4964
  %1631 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4965
  %tobool3123 = icmp ne i8* %1631, null, !dbg !4965
  br i1 %tobool3123, label %if.then3124, label %if.end3127, !dbg !4964

if.then3124:                                      ; preds = %if.then3112
  %1632 = load i32, i32* %incr3113, align 4, !dbg !4965
  %1633 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4965
  %idx.ext3125 = sext i32 %1632 to i64, !dbg !4965
  %add.ptr3126 = getelementptr inbounds i8, i8* %1633, i64 %idx.ext3125, !dbg !4965
  store i8* %add.ptr3126, i8** %fixup_alt_jump, align 8, !dbg !4965
  br label %if.end3127, !dbg !4965

if.end3127:                                       ; preds = %if.then3124, %if.then3112
  %1634 = load i8*, i8** %laststart, align 8, !dbg !4967
  %tobool3128 = icmp ne i8* %1634, null, !dbg !4967
  br i1 %tobool3128, label %if.then3129, label %if.end3132, !dbg !4964

if.then3129:                                      ; preds = %if.end3127
  %1635 = load i32, i32* %incr3113, align 4, !dbg !4967
  %1636 = load i8*, i8** %laststart, align 8, !dbg !4967
  %idx.ext3130 = sext i32 %1635 to i64, !dbg !4967
  %add.ptr3131 = getelementptr inbounds i8, i8* %1636, i64 %idx.ext3130, !dbg !4967
  store i8* %add.ptr3131, i8** %laststart, align 8, !dbg !4967
  br label %if.end3132, !dbg !4967

if.end3132:                                       ; preds = %if.then3129, %if.end3127
  %1637 = load i8*, i8** %pending_exact, align 8, !dbg !4969
  %tobool3133 = icmp ne i8* %1637, null, !dbg !4969
  br i1 %tobool3133, label %if.then3134, label %if.end3137, !dbg !4964

if.then3134:                                      ; preds = %if.end3132
  %1638 = load i32, i32* %incr3113, align 4, !dbg !4969
  %1639 = load i8*, i8** %pending_exact, align 8, !dbg !4969
  %idx.ext3135 = sext i32 %1638 to i64, !dbg !4969
  %add.ptr3136 = getelementptr inbounds i8, i8* %1639, i64 %idx.ext3135, !dbg !4969
  store i8* %add.ptr3136, i8** %pending_exact, align 8, !dbg !4969
  br label %if.end3137, !dbg !4969

if.end3137:                                       ; preds = %if.then3134, %if.end3132
  br label %if.end3138, !dbg !4964

if.end3138:                                       ; preds = %if.end3137, %if.end3108
  br label %do.end3139, !dbg !4953

do.end3139:                                       ; preds = %if.end3138
  br label %while.cond3074, !dbg !4949, !llvm.loop !4971

while.end3140:                                    ; preds = %while.cond3074
  %1640 = load i8*, i8** %b, align 8, !dbg !4949
  %incdec.ptr3141 = getelementptr inbounds i8, i8* %1640, i32 1, !dbg !4949
  store i8* %incdec.ptr3141, i8** %b, align 8, !dbg !4949
  store i8 29, i8* %1640, align 1, !dbg !4949
  br label %do.end3142, !dbg !4949

do.end3142:                                       ; preds = %while.end3140
  br label %sw.epilog, !dbg !4972

sw.bb3143:                                        ; preds = %do.end1793
  %1641 = load i64, i64* %syntax.addr, align 8, !dbg !4973
  %and3144 = and i64 %1641, 524288, !dbg !4975
  %tobool3145 = icmp ne i64 %and3144, 0, !dbg !4975
  br i1 %tobool3145, label %if.then3146, label %if.end3147, !dbg !4976

if.then3146:                                      ; preds = %sw.bb3143
  br label %normal_char, !dbg !4977

if.end3147:                                       ; preds = %sw.bb3143
  br label %do.body3148, !dbg !4978

do.body3148:                                      ; preds = %if.end3147
  br label %while.cond3149, !dbg !4979

while.cond3149:                                   ; preds = %do.end3214, %do.body3148
  %1642 = load i8*, i8** %b, align 8, !dbg !4979
  %1643 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4979
  %buffer3150 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1643, i32 0, i32 0, !dbg !4979
  %1644 = load i8*, i8** %buffer3150, align 8, !dbg !4979
  %sub.ptr.lhs.cast3151 = ptrtoint i8* %1642 to i64, !dbg !4979
  %sub.ptr.rhs.cast3152 = ptrtoint i8* %1644 to i64, !dbg !4979
  %sub.ptr.sub3153 = sub i64 %sub.ptr.lhs.cast3151, %sub.ptr.rhs.cast3152, !dbg !4979
  %add3154 = add nsw i64 %sub.ptr.sub3153, 1, !dbg !4979
  %1645 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4979
  %allocated3155 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1645, i32 0, i32 1, !dbg !4979
  %1646 = load i64, i64* %allocated3155, align 8, !dbg !4979
  %cmp3156 = icmp ugt i64 %add3154, %1646, !dbg !4979
  br i1 %cmp3156, label %while.body3158, label %while.end3215, !dbg !4979

while.body3158:                                   ; preds = %while.cond3149
  br label %do.body3159, !dbg !4979

do.body3159:                                      ; preds = %while.body3158
  call void @llvm.dbg.declare(metadata i8** %old_buffer3160, metadata !4981, metadata !DIExpression()), !dbg !4983
  %1647 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4983
  %buffer3161 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1647, i32 0, i32 0, !dbg !4983
  %1648 = load i8*, i8** %buffer3161, align 8, !dbg !4983
  store i8* %1648, i8** %old_buffer3160, align 8, !dbg !4983
  %1649 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4984
  %allocated3162 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1649, i32 0, i32 1, !dbg !4984
  %1650 = load i64, i64* %allocated3162, align 8, !dbg !4984
  %cmp3163 = icmp eq i64 %1650, 65536, !dbg !4984
  br i1 %cmp3163, label %if.then3165, label %if.end3166, !dbg !4983

if.then3165:                                      ; preds = %do.body3159
  store i32 15, i32* %retval, align 4, !dbg !4984
  br label %return, !dbg !4984

if.end3166:                                       ; preds = %do.body3159
  %1651 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4983
  %allocated3167 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1651, i32 0, i32 1, !dbg !4983
  %1652 = load i64, i64* %allocated3167, align 8, !dbg !4983
  %shl3168 = shl i64 %1652, 1, !dbg !4983
  store i64 %shl3168, i64* %allocated3167, align 8, !dbg !4983
  %1653 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4986
  %allocated3169 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1653, i32 0, i32 1, !dbg !4986
  %1654 = load i64, i64* %allocated3169, align 8, !dbg !4986
  %cmp3170 = icmp ugt i64 %1654, 65536, !dbg !4986
  br i1 %cmp3170, label %if.then3172, label %if.end3174, !dbg !4983

if.then3172:                                      ; preds = %if.end3166
  %1655 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4986
  %allocated3173 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1655, i32 0, i32 1, !dbg !4986
  store i64 65536, i64* %allocated3173, align 8, !dbg !4986
  br label %if.end3174, !dbg !4986

if.end3174:                                       ; preds = %if.then3172, %if.end3166
  %1656 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4983
  %buffer3175 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1656, i32 0, i32 0, !dbg !4983
  %1657 = load i8*, i8** %buffer3175, align 8, !dbg !4983
  %1658 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4983
  %allocated3176 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1658, i32 0, i32 1, !dbg !4983
  %1659 = load i64, i64* %allocated3176, align 8, !dbg !4983
  %call3177 = call i8* @realloc(i8* %1657, i64 %1659), !dbg !4983
  %1660 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4983
  %buffer3178 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1660, i32 0, i32 0, !dbg !4983
  store i8* %call3177, i8** %buffer3178, align 8, !dbg !4983
  %1661 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4988
  %buffer3179 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1661, i32 0, i32 0, !dbg !4988
  %1662 = load i8*, i8** %buffer3179, align 8, !dbg !4988
  %cmp3180 = icmp eq i8* %1662, null, !dbg !4988
  br i1 %cmp3180, label %if.then3182, label %if.end3183, !dbg !4983

if.then3182:                                      ; preds = %if.end3174
  store i32 12, i32* %retval, align 4, !dbg !4988
  br label %return, !dbg !4988

if.end3183:                                       ; preds = %if.end3174
  %1663 = load i8*, i8** %old_buffer3160, align 8, !dbg !4990
  %1664 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4990
  %buffer3184 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1664, i32 0, i32 0, !dbg !4990
  %1665 = load i8*, i8** %buffer3184, align 8, !dbg !4990
  %cmp3185 = icmp ne i8* %1663, %1665, !dbg !4990
  br i1 %cmp3185, label %if.then3187, label %if.end3213, !dbg !4983

if.then3187:                                      ; preds = %if.end3183
  call void @llvm.dbg.declare(metadata i32* %incr3188, metadata !4992, metadata !DIExpression()), !dbg !4994
  %1666 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !4994
  %buffer3189 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1666, i32 0, i32 0, !dbg !4994
  %1667 = load i8*, i8** %buffer3189, align 8, !dbg !4994
  %1668 = load i8*, i8** %old_buffer3160, align 8, !dbg !4994
  %sub.ptr.lhs.cast3190 = ptrtoint i8* %1667 to i64, !dbg !4994
  %sub.ptr.rhs.cast3191 = ptrtoint i8* %1668 to i64, !dbg !4994
  %sub.ptr.sub3192 = sub i64 %sub.ptr.lhs.cast3190, %sub.ptr.rhs.cast3191, !dbg !4994
  %conv3193 = trunc i64 %sub.ptr.sub3192 to i32, !dbg !4994
  store i32 %conv3193, i32* %incr3188, align 4, !dbg !4994
  %1669 = load i32, i32* %incr3188, align 4, !dbg !4994
  %1670 = load i8*, i8** %b, align 8, !dbg !4994
  %idx.ext3194 = sext i32 %1669 to i64, !dbg !4994
  %add.ptr3195 = getelementptr inbounds i8, i8* %1670, i64 %idx.ext3194, !dbg !4994
  store i8* %add.ptr3195, i8** %b, align 8, !dbg !4994
  %1671 = load i32, i32* %incr3188, align 4, !dbg !4994
  %1672 = load i8*, i8** %begalt, align 8, !dbg !4994
  %idx.ext3196 = sext i32 %1671 to i64, !dbg !4994
  %add.ptr3197 = getelementptr inbounds i8, i8* %1672, i64 %idx.ext3196, !dbg !4994
  store i8* %add.ptr3197, i8** %begalt, align 8, !dbg !4994
  %1673 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4995
  %tobool3198 = icmp ne i8* %1673, null, !dbg !4995
  br i1 %tobool3198, label %if.then3199, label %if.end3202, !dbg !4994

if.then3199:                                      ; preds = %if.then3187
  %1674 = load i32, i32* %incr3188, align 4, !dbg !4995
  %1675 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !4995
  %idx.ext3200 = sext i32 %1674 to i64, !dbg !4995
  %add.ptr3201 = getelementptr inbounds i8, i8* %1675, i64 %idx.ext3200, !dbg !4995
  store i8* %add.ptr3201, i8** %fixup_alt_jump, align 8, !dbg !4995
  br label %if.end3202, !dbg !4995

if.end3202:                                       ; preds = %if.then3199, %if.then3187
  %1676 = load i8*, i8** %laststart, align 8, !dbg !4997
  %tobool3203 = icmp ne i8* %1676, null, !dbg !4997
  br i1 %tobool3203, label %if.then3204, label %if.end3207, !dbg !4994

if.then3204:                                      ; preds = %if.end3202
  %1677 = load i32, i32* %incr3188, align 4, !dbg !4997
  %1678 = load i8*, i8** %laststart, align 8, !dbg !4997
  %idx.ext3205 = sext i32 %1677 to i64, !dbg !4997
  %add.ptr3206 = getelementptr inbounds i8, i8* %1678, i64 %idx.ext3205, !dbg !4997
  store i8* %add.ptr3206, i8** %laststart, align 8, !dbg !4997
  br label %if.end3207, !dbg !4997

if.end3207:                                       ; preds = %if.then3204, %if.end3202
  %1679 = load i8*, i8** %pending_exact, align 8, !dbg !4999
  %tobool3208 = icmp ne i8* %1679, null, !dbg !4999
  br i1 %tobool3208, label %if.then3209, label %if.end3212, !dbg !4994

if.then3209:                                      ; preds = %if.end3207
  %1680 = load i32, i32* %incr3188, align 4, !dbg !4999
  %1681 = load i8*, i8** %pending_exact, align 8, !dbg !4999
  %idx.ext3210 = sext i32 %1680 to i64, !dbg !4999
  %add.ptr3211 = getelementptr inbounds i8, i8* %1681, i64 %idx.ext3210, !dbg !4999
  store i8* %add.ptr3211, i8** %pending_exact, align 8, !dbg !4999
  br label %if.end3212, !dbg !4999

if.end3212:                                       ; preds = %if.then3209, %if.end3207
  br label %if.end3213, !dbg !4994

if.end3213:                                       ; preds = %if.end3212, %if.end3183
  br label %do.end3214, !dbg !4983

do.end3214:                                       ; preds = %if.end3213
  br label %while.cond3149, !dbg !4979, !llvm.loop !5001

while.end3215:                                    ; preds = %while.cond3149
  %1682 = load i8*, i8** %b, align 8, !dbg !4979
  %incdec.ptr3216 = getelementptr inbounds i8, i8* %1682, i32 1, !dbg !4979
  store i8* %incdec.ptr3216, i8** %b, align 8, !dbg !4979
  store i8 11, i8* %1682, align 1, !dbg !4979
  br label %do.end3217, !dbg !4979

do.end3217:                                       ; preds = %while.end3215
  br label %sw.epilog, !dbg !5002

sw.bb3218:                                        ; preds = %do.end1793
  %1683 = load i64, i64* %syntax.addr, align 8, !dbg !5003
  %and3219 = and i64 %1683, 524288, !dbg !5005
  %tobool3220 = icmp ne i64 %and3219, 0, !dbg !5005
  br i1 %tobool3220, label %if.then3221, label %if.end3222, !dbg !5006

if.then3221:                                      ; preds = %sw.bb3218
  br label %normal_char, !dbg !5007

if.end3222:                                       ; preds = %sw.bb3218
  br label %do.body3223, !dbg !5008

do.body3223:                                      ; preds = %if.end3222
  br label %while.cond3224, !dbg !5009

while.cond3224:                                   ; preds = %do.end3289, %do.body3223
  %1684 = load i8*, i8** %b, align 8, !dbg !5009
  %1685 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5009
  %buffer3225 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1685, i32 0, i32 0, !dbg !5009
  %1686 = load i8*, i8** %buffer3225, align 8, !dbg !5009
  %sub.ptr.lhs.cast3226 = ptrtoint i8* %1684 to i64, !dbg !5009
  %sub.ptr.rhs.cast3227 = ptrtoint i8* %1686 to i64, !dbg !5009
  %sub.ptr.sub3228 = sub i64 %sub.ptr.lhs.cast3226, %sub.ptr.rhs.cast3227, !dbg !5009
  %add3229 = add nsw i64 %sub.ptr.sub3228, 1, !dbg !5009
  %1687 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5009
  %allocated3230 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1687, i32 0, i32 1, !dbg !5009
  %1688 = load i64, i64* %allocated3230, align 8, !dbg !5009
  %cmp3231 = icmp ugt i64 %add3229, %1688, !dbg !5009
  br i1 %cmp3231, label %while.body3233, label %while.end3290, !dbg !5009

while.body3233:                                   ; preds = %while.cond3224
  br label %do.body3234, !dbg !5009

do.body3234:                                      ; preds = %while.body3233
  call void @llvm.dbg.declare(metadata i8** %old_buffer3235, metadata !5011, metadata !DIExpression()), !dbg !5013
  %1689 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5013
  %buffer3236 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1689, i32 0, i32 0, !dbg !5013
  %1690 = load i8*, i8** %buffer3236, align 8, !dbg !5013
  store i8* %1690, i8** %old_buffer3235, align 8, !dbg !5013
  %1691 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5014
  %allocated3237 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1691, i32 0, i32 1, !dbg !5014
  %1692 = load i64, i64* %allocated3237, align 8, !dbg !5014
  %cmp3238 = icmp eq i64 %1692, 65536, !dbg !5014
  br i1 %cmp3238, label %if.then3240, label %if.end3241, !dbg !5013

if.then3240:                                      ; preds = %do.body3234
  store i32 15, i32* %retval, align 4, !dbg !5014
  br label %return, !dbg !5014

if.end3241:                                       ; preds = %do.body3234
  %1693 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5013
  %allocated3242 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1693, i32 0, i32 1, !dbg !5013
  %1694 = load i64, i64* %allocated3242, align 8, !dbg !5013
  %shl3243 = shl i64 %1694, 1, !dbg !5013
  store i64 %shl3243, i64* %allocated3242, align 8, !dbg !5013
  %1695 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5016
  %allocated3244 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1695, i32 0, i32 1, !dbg !5016
  %1696 = load i64, i64* %allocated3244, align 8, !dbg !5016
  %cmp3245 = icmp ugt i64 %1696, 65536, !dbg !5016
  br i1 %cmp3245, label %if.then3247, label %if.end3249, !dbg !5013

if.then3247:                                      ; preds = %if.end3241
  %1697 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5016
  %allocated3248 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1697, i32 0, i32 1, !dbg !5016
  store i64 65536, i64* %allocated3248, align 8, !dbg !5016
  br label %if.end3249, !dbg !5016

if.end3249:                                       ; preds = %if.then3247, %if.end3241
  %1698 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5013
  %buffer3250 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1698, i32 0, i32 0, !dbg !5013
  %1699 = load i8*, i8** %buffer3250, align 8, !dbg !5013
  %1700 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5013
  %allocated3251 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1700, i32 0, i32 1, !dbg !5013
  %1701 = load i64, i64* %allocated3251, align 8, !dbg !5013
  %call3252 = call i8* @realloc(i8* %1699, i64 %1701), !dbg !5013
  %1702 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5013
  %buffer3253 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1702, i32 0, i32 0, !dbg !5013
  store i8* %call3252, i8** %buffer3253, align 8, !dbg !5013
  %1703 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5018
  %buffer3254 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1703, i32 0, i32 0, !dbg !5018
  %1704 = load i8*, i8** %buffer3254, align 8, !dbg !5018
  %cmp3255 = icmp eq i8* %1704, null, !dbg !5018
  br i1 %cmp3255, label %if.then3257, label %if.end3258, !dbg !5013

if.then3257:                                      ; preds = %if.end3249
  store i32 12, i32* %retval, align 4, !dbg !5018
  br label %return, !dbg !5018

if.end3258:                                       ; preds = %if.end3249
  %1705 = load i8*, i8** %old_buffer3235, align 8, !dbg !5020
  %1706 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5020
  %buffer3259 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1706, i32 0, i32 0, !dbg !5020
  %1707 = load i8*, i8** %buffer3259, align 8, !dbg !5020
  %cmp3260 = icmp ne i8* %1705, %1707, !dbg !5020
  br i1 %cmp3260, label %if.then3262, label %if.end3288, !dbg !5013

if.then3262:                                      ; preds = %if.end3258
  call void @llvm.dbg.declare(metadata i32* %incr3263, metadata !5022, metadata !DIExpression()), !dbg !5024
  %1708 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5024
  %buffer3264 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1708, i32 0, i32 0, !dbg !5024
  %1709 = load i8*, i8** %buffer3264, align 8, !dbg !5024
  %1710 = load i8*, i8** %old_buffer3235, align 8, !dbg !5024
  %sub.ptr.lhs.cast3265 = ptrtoint i8* %1709 to i64, !dbg !5024
  %sub.ptr.rhs.cast3266 = ptrtoint i8* %1710 to i64, !dbg !5024
  %sub.ptr.sub3267 = sub i64 %sub.ptr.lhs.cast3265, %sub.ptr.rhs.cast3266, !dbg !5024
  %conv3268 = trunc i64 %sub.ptr.sub3267 to i32, !dbg !5024
  store i32 %conv3268, i32* %incr3263, align 4, !dbg !5024
  %1711 = load i32, i32* %incr3263, align 4, !dbg !5024
  %1712 = load i8*, i8** %b, align 8, !dbg !5024
  %idx.ext3269 = sext i32 %1711 to i64, !dbg !5024
  %add.ptr3270 = getelementptr inbounds i8, i8* %1712, i64 %idx.ext3269, !dbg !5024
  store i8* %add.ptr3270, i8** %b, align 8, !dbg !5024
  %1713 = load i32, i32* %incr3263, align 4, !dbg !5024
  %1714 = load i8*, i8** %begalt, align 8, !dbg !5024
  %idx.ext3271 = sext i32 %1713 to i64, !dbg !5024
  %add.ptr3272 = getelementptr inbounds i8, i8* %1714, i64 %idx.ext3271, !dbg !5024
  store i8* %add.ptr3272, i8** %begalt, align 8, !dbg !5024
  %1715 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5025
  %tobool3273 = icmp ne i8* %1715, null, !dbg !5025
  br i1 %tobool3273, label %if.then3274, label %if.end3277, !dbg !5024

if.then3274:                                      ; preds = %if.then3262
  %1716 = load i32, i32* %incr3263, align 4, !dbg !5025
  %1717 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5025
  %idx.ext3275 = sext i32 %1716 to i64, !dbg !5025
  %add.ptr3276 = getelementptr inbounds i8, i8* %1717, i64 %idx.ext3275, !dbg !5025
  store i8* %add.ptr3276, i8** %fixup_alt_jump, align 8, !dbg !5025
  br label %if.end3277, !dbg !5025

if.end3277:                                       ; preds = %if.then3274, %if.then3262
  %1718 = load i8*, i8** %laststart, align 8, !dbg !5027
  %tobool3278 = icmp ne i8* %1718, null, !dbg !5027
  br i1 %tobool3278, label %if.then3279, label %if.end3282, !dbg !5024

if.then3279:                                      ; preds = %if.end3277
  %1719 = load i32, i32* %incr3263, align 4, !dbg !5027
  %1720 = load i8*, i8** %laststart, align 8, !dbg !5027
  %idx.ext3280 = sext i32 %1719 to i64, !dbg !5027
  %add.ptr3281 = getelementptr inbounds i8, i8* %1720, i64 %idx.ext3280, !dbg !5027
  store i8* %add.ptr3281, i8** %laststart, align 8, !dbg !5027
  br label %if.end3282, !dbg !5027

if.end3282:                                       ; preds = %if.then3279, %if.end3277
  %1721 = load i8*, i8** %pending_exact, align 8, !dbg !5029
  %tobool3283 = icmp ne i8* %1721, null, !dbg !5029
  br i1 %tobool3283, label %if.then3284, label %if.end3287, !dbg !5024

if.then3284:                                      ; preds = %if.end3282
  %1722 = load i32, i32* %incr3263, align 4, !dbg !5029
  %1723 = load i8*, i8** %pending_exact, align 8, !dbg !5029
  %idx.ext3285 = sext i32 %1722 to i64, !dbg !5029
  %add.ptr3286 = getelementptr inbounds i8, i8* %1723, i64 %idx.ext3285, !dbg !5029
  store i8* %add.ptr3286, i8** %pending_exact, align 8, !dbg !5029
  br label %if.end3287, !dbg !5029

if.end3287:                                       ; preds = %if.then3284, %if.end3282
  br label %if.end3288, !dbg !5024

if.end3288:                                       ; preds = %if.end3287, %if.end3258
  br label %do.end3289, !dbg !5013

do.end3289:                                       ; preds = %if.end3288
  br label %while.cond3224, !dbg !5009, !llvm.loop !5031

while.end3290:                                    ; preds = %while.cond3224
  %1724 = load i8*, i8** %b, align 8, !dbg !5009
  %incdec.ptr3291 = getelementptr inbounds i8, i8* %1724, i32 1, !dbg !5009
  store i8* %incdec.ptr3291, i8** %b, align 8, !dbg !5009
  store i8 12, i8* %1724, align 1, !dbg !5009
  br label %do.end3292, !dbg !5009

do.end3292:                                       ; preds = %while.end3290
  br label %sw.epilog, !dbg !5032

sw.bb3293:                                        ; preds = %do.end1793, %do.end1793, %do.end1793, %do.end1793, %do.end1793, %do.end1793, %do.end1793, %do.end1793, %do.end1793
  %1725 = load i64, i64* %syntax.addr, align 8, !dbg !5033
  %and3294 = and i64 %1725, 16384, !dbg !5035
  %tobool3295 = icmp ne i64 %and3294, 0, !dbg !5035
  br i1 %tobool3295, label %if.then3296, label %if.end3297, !dbg !5036

if.then3296:                                      ; preds = %sw.bb3293
  br label %normal_char, !dbg !5037

if.end3297:                                       ; preds = %sw.bb3293
  %1726 = load i8, i8* %c, align 1, !dbg !5038
  %conv3298 = zext i8 %1726 to i32, !dbg !5038
  %sub3299 = sub nsw i32 %conv3298, 48, !dbg !5039
  %conv3300 = trunc i32 %sub3299 to i8, !dbg !5038
  store i8 %conv3300, i8* %c1, align 1, !dbg !5040
  %1727 = load i8, i8* %c1, align 1, !dbg !5041
  %conv3301 = zext i8 %1727 to i32, !dbg !5041
  %1728 = load i32, i32* %regnum, align 4, !dbg !5043
  %cmp3302 = icmp ugt i32 %conv3301, %1728, !dbg !5044
  br i1 %cmp3302, label %if.then3304, label %if.end3306, !dbg !5045

if.then3304:                                      ; preds = %if.end3297
  %stack3305 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !5046
  %1729 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3305, align 8, !dbg !5046
  %1730 = bitcast %struct.compile_stack_elt_t* %1729 to i8*, !dbg !5046
  call void @free(i8* %1730), !dbg !5046
  store i32 6, i32* %retval, align 4, !dbg !5046
  br label %return, !dbg !5046

if.end3306:                                       ; preds = %if.end3297
  %1731 = load i8, i8* %c1, align 1, !dbg !5047
  %conv3307 = zext i8 %1731 to i32, !dbg !5049
  %1732 = bitcast %struct.compile_stack_type* %compile_stack to { %struct.compile_stack_elt_t*, i64 }*, !dbg !5050
  %1733 = getelementptr inbounds { %struct.compile_stack_elt_t*, i64 }, { %struct.compile_stack_elt_t*, i64 }* %1732, i32 0, i32 0, !dbg !5050
  %1734 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %1733, align 8, !dbg !5050
  %1735 = getelementptr inbounds { %struct.compile_stack_elt_t*, i64 }, { %struct.compile_stack_elt_t*, i64 }* %1732, i32 0, i32 1, !dbg !5050
  %1736 = load i64, i64* %1735, align 8, !dbg !5050
  %call3308 = call signext i8 @group_in_compile_stack(%struct.compile_stack_elt_t* %1734, i64 %1736, i32 %conv3307), !dbg !5050
  %tobool3309 = icmp ne i8 %call3308, 0, !dbg !5050
  br i1 %tobool3309, label %if.then3310, label %if.end3311, !dbg !5051

if.then3310:                                      ; preds = %if.end3306
  br label %normal_char, !dbg !5052

if.end3311:                                       ; preds = %if.end3306
  %1737 = load i8*, i8** %b, align 8, !dbg !5053
  store i8* %1737, i8** %laststart, align 8, !dbg !5054
  br label %do.body3312, !dbg !5055

do.body3312:                                      ; preds = %if.end3311
  br label %while.cond3313, !dbg !5056

while.cond3313:                                   ; preds = %do.end3378, %do.body3312
  %1738 = load i8*, i8** %b, align 8, !dbg !5056
  %1739 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5056
  %buffer3314 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1739, i32 0, i32 0, !dbg !5056
  %1740 = load i8*, i8** %buffer3314, align 8, !dbg !5056
  %sub.ptr.lhs.cast3315 = ptrtoint i8* %1738 to i64, !dbg !5056
  %sub.ptr.rhs.cast3316 = ptrtoint i8* %1740 to i64, !dbg !5056
  %sub.ptr.sub3317 = sub i64 %sub.ptr.lhs.cast3315, %sub.ptr.rhs.cast3316, !dbg !5056
  %add3318 = add nsw i64 %sub.ptr.sub3317, 2, !dbg !5056
  %1741 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5056
  %allocated3319 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1741, i32 0, i32 1, !dbg !5056
  %1742 = load i64, i64* %allocated3319, align 8, !dbg !5056
  %cmp3320 = icmp ugt i64 %add3318, %1742, !dbg !5056
  br i1 %cmp3320, label %while.body3322, label %while.end3379, !dbg !5056

while.body3322:                                   ; preds = %while.cond3313
  br label %do.body3323, !dbg !5056

do.body3323:                                      ; preds = %while.body3322
  call void @llvm.dbg.declare(metadata i8** %old_buffer3324, metadata !5058, metadata !DIExpression()), !dbg !5060
  %1743 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5060
  %buffer3325 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1743, i32 0, i32 0, !dbg !5060
  %1744 = load i8*, i8** %buffer3325, align 8, !dbg !5060
  store i8* %1744, i8** %old_buffer3324, align 8, !dbg !5060
  %1745 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5061
  %allocated3326 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1745, i32 0, i32 1, !dbg !5061
  %1746 = load i64, i64* %allocated3326, align 8, !dbg !5061
  %cmp3327 = icmp eq i64 %1746, 65536, !dbg !5061
  br i1 %cmp3327, label %if.then3329, label %if.end3330, !dbg !5060

if.then3329:                                      ; preds = %do.body3323
  store i32 15, i32* %retval, align 4, !dbg !5061
  br label %return, !dbg !5061

if.end3330:                                       ; preds = %do.body3323
  %1747 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5060
  %allocated3331 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1747, i32 0, i32 1, !dbg !5060
  %1748 = load i64, i64* %allocated3331, align 8, !dbg !5060
  %shl3332 = shl i64 %1748, 1, !dbg !5060
  store i64 %shl3332, i64* %allocated3331, align 8, !dbg !5060
  %1749 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5063
  %allocated3333 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1749, i32 0, i32 1, !dbg !5063
  %1750 = load i64, i64* %allocated3333, align 8, !dbg !5063
  %cmp3334 = icmp ugt i64 %1750, 65536, !dbg !5063
  br i1 %cmp3334, label %if.then3336, label %if.end3338, !dbg !5060

if.then3336:                                      ; preds = %if.end3330
  %1751 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5063
  %allocated3337 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1751, i32 0, i32 1, !dbg !5063
  store i64 65536, i64* %allocated3337, align 8, !dbg !5063
  br label %if.end3338, !dbg !5063

if.end3338:                                       ; preds = %if.then3336, %if.end3330
  %1752 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5060
  %buffer3339 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1752, i32 0, i32 0, !dbg !5060
  %1753 = load i8*, i8** %buffer3339, align 8, !dbg !5060
  %1754 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5060
  %allocated3340 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1754, i32 0, i32 1, !dbg !5060
  %1755 = load i64, i64* %allocated3340, align 8, !dbg !5060
  %call3341 = call i8* @realloc(i8* %1753, i64 %1755), !dbg !5060
  %1756 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5060
  %buffer3342 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1756, i32 0, i32 0, !dbg !5060
  store i8* %call3341, i8** %buffer3342, align 8, !dbg !5060
  %1757 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5065
  %buffer3343 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1757, i32 0, i32 0, !dbg !5065
  %1758 = load i8*, i8** %buffer3343, align 8, !dbg !5065
  %cmp3344 = icmp eq i8* %1758, null, !dbg !5065
  br i1 %cmp3344, label %if.then3346, label %if.end3347, !dbg !5060

if.then3346:                                      ; preds = %if.end3338
  store i32 12, i32* %retval, align 4, !dbg !5065
  br label %return, !dbg !5065

if.end3347:                                       ; preds = %if.end3338
  %1759 = load i8*, i8** %old_buffer3324, align 8, !dbg !5067
  %1760 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5067
  %buffer3348 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1760, i32 0, i32 0, !dbg !5067
  %1761 = load i8*, i8** %buffer3348, align 8, !dbg !5067
  %cmp3349 = icmp ne i8* %1759, %1761, !dbg !5067
  br i1 %cmp3349, label %if.then3351, label %if.end3377, !dbg !5060

if.then3351:                                      ; preds = %if.end3347
  call void @llvm.dbg.declare(metadata i32* %incr3352, metadata !5069, metadata !DIExpression()), !dbg !5071
  %1762 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5071
  %buffer3353 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1762, i32 0, i32 0, !dbg !5071
  %1763 = load i8*, i8** %buffer3353, align 8, !dbg !5071
  %1764 = load i8*, i8** %old_buffer3324, align 8, !dbg !5071
  %sub.ptr.lhs.cast3354 = ptrtoint i8* %1763 to i64, !dbg !5071
  %sub.ptr.rhs.cast3355 = ptrtoint i8* %1764 to i64, !dbg !5071
  %sub.ptr.sub3356 = sub i64 %sub.ptr.lhs.cast3354, %sub.ptr.rhs.cast3355, !dbg !5071
  %conv3357 = trunc i64 %sub.ptr.sub3356 to i32, !dbg !5071
  store i32 %conv3357, i32* %incr3352, align 4, !dbg !5071
  %1765 = load i32, i32* %incr3352, align 4, !dbg !5071
  %1766 = load i8*, i8** %b, align 8, !dbg !5071
  %idx.ext3358 = sext i32 %1765 to i64, !dbg !5071
  %add.ptr3359 = getelementptr inbounds i8, i8* %1766, i64 %idx.ext3358, !dbg !5071
  store i8* %add.ptr3359, i8** %b, align 8, !dbg !5071
  %1767 = load i32, i32* %incr3352, align 4, !dbg !5071
  %1768 = load i8*, i8** %begalt, align 8, !dbg !5071
  %idx.ext3360 = sext i32 %1767 to i64, !dbg !5071
  %add.ptr3361 = getelementptr inbounds i8, i8* %1768, i64 %idx.ext3360, !dbg !5071
  store i8* %add.ptr3361, i8** %begalt, align 8, !dbg !5071
  %1769 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5072
  %tobool3362 = icmp ne i8* %1769, null, !dbg !5072
  br i1 %tobool3362, label %if.then3363, label %if.end3366, !dbg !5071

if.then3363:                                      ; preds = %if.then3351
  %1770 = load i32, i32* %incr3352, align 4, !dbg !5072
  %1771 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5072
  %idx.ext3364 = sext i32 %1770 to i64, !dbg !5072
  %add.ptr3365 = getelementptr inbounds i8, i8* %1771, i64 %idx.ext3364, !dbg !5072
  store i8* %add.ptr3365, i8** %fixup_alt_jump, align 8, !dbg !5072
  br label %if.end3366, !dbg !5072

if.end3366:                                       ; preds = %if.then3363, %if.then3351
  %1772 = load i8*, i8** %laststart, align 8, !dbg !5074
  %tobool3367 = icmp ne i8* %1772, null, !dbg !5074
  br i1 %tobool3367, label %if.then3368, label %if.end3371, !dbg !5071

if.then3368:                                      ; preds = %if.end3366
  %1773 = load i32, i32* %incr3352, align 4, !dbg !5074
  %1774 = load i8*, i8** %laststart, align 8, !dbg !5074
  %idx.ext3369 = sext i32 %1773 to i64, !dbg !5074
  %add.ptr3370 = getelementptr inbounds i8, i8* %1774, i64 %idx.ext3369, !dbg !5074
  store i8* %add.ptr3370, i8** %laststart, align 8, !dbg !5074
  br label %if.end3371, !dbg !5074

if.end3371:                                       ; preds = %if.then3368, %if.end3366
  %1775 = load i8*, i8** %pending_exact, align 8, !dbg !5076
  %tobool3372 = icmp ne i8* %1775, null, !dbg !5076
  br i1 %tobool3372, label %if.then3373, label %if.end3376, !dbg !5071

if.then3373:                                      ; preds = %if.end3371
  %1776 = load i32, i32* %incr3352, align 4, !dbg !5076
  %1777 = load i8*, i8** %pending_exact, align 8, !dbg !5076
  %idx.ext3374 = sext i32 %1776 to i64, !dbg !5076
  %add.ptr3375 = getelementptr inbounds i8, i8* %1777, i64 %idx.ext3374, !dbg !5076
  store i8* %add.ptr3375, i8** %pending_exact, align 8, !dbg !5076
  br label %if.end3376, !dbg !5076

if.end3376:                                       ; preds = %if.then3373, %if.end3371
  br label %if.end3377, !dbg !5071

if.end3377:                                       ; preds = %if.end3376, %if.end3347
  br label %do.end3378, !dbg !5060

do.end3378:                                       ; preds = %if.end3377
  br label %while.cond3313, !dbg !5056, !llvm.loop !5078

while.end3379:                                    ; preds = %while.cond3313
  %1778 = load i8*, i8** %b, align 8, !dbg !5056
  %incdec.ptr3380 = getelementptr inbounds i8, i8* %1778, i32 1, !dbg !5056
  store i8* %incdec.ptr3380, i8** %b, align 8, !dbg !5056
  store i8 8, i8* %1778, align 1, !dbg !5056
  %1779 = load i8, i8* %c1, align 1, !dbg !5056
  %1780 = load i8*, i8** %b, align 8, !dbg !5056
  %incdec.ptr3381 = getelementptr inbounds i8, i8* %1780, i32 1, !dbg !5056
  store i8* %incdec.ptr3381, i8** %b, align 8, !dbg !5056
  store i8 %1779, i8* %1780, align 1, !dbg !5056
  br label %do.end3382, !dbg !5056

do.end3382:                                       ; preds = %while.end3379
  br label %sw.epilog, !dbg !5079

sw.bb3383:                                        ; preds = %do.end1793, %do.end1793
  %1781 = load i64, i64* %syntax.addr, align 8, !dbg !5080
  %and3384 = and i64 %1781, 2, !dbg !5082
  %tobool3385 = icmp ne i64 %and3384, 0, !dbg !5082
  br i1 %tobool3385, label %if.then3386, label %if.else3387, !dbg !5083

if.then3386:                                      ; preds = %sw.bb3383
  br label %handle_plus, !dbg !5084

if.else3387:                                      ; preds = %sw.bb3383
  br label %normal_backslash, !dbg !5085

sw.default:                                       ; preds = %do.end1793
  br label %normal_backslash, !dbg !5086

normal_backslash:                                 ; preds = %sw.default, %if.else3387, %if.else2692, %if.then2346, %if.then2183, %if.then1957, %if.then1949, %if.then1798
  call void @llvm.dbg.label(metadata !5087), !dbg !5088
  %1782 = load i8*, i8** %translate, align 8, !dbg !5089
  %tobool3388 = icmp ne i8* %1782, null, !dbg !5089
  br i1 %tobool3388, label %cond.true3389, label %cond.false3393, !dbg !5089

cond.true3389:                                    ; preds = %normal_backslash
  %1783 = load i8*, i8** %translate, align 8, !dbg !5089
  %1784 = load i8, i8* %c, align 1, !dbg !5089
  %idxprom3390 = zext i8 %1784 to i64, !dbg !5089
  %arrayidx3391 = getelementptr inbounds i8, i8* %1783, i64 %idxprom3390, !dbg !5089
  %1785 = load i8, i8* %arrayidx3391, align 1, !dbg !5089
  %conv3392 = sext i8 %1785 to i32, !dbg !5089
  br label %cond.end3395, !dbg !5089

cond.false3393:                                   ; preds = %normal_backslash
  %1786 = load i8, i8* %c, align 1, !dbg !5089
  %conv3394 = sext i8 %1786 to i32, !dbg !5089
  br label %cond.end3395, !dbg !5089

cond.end3395:                                     ; preds = %cond.false3393, %cond.true3389
  %cond3396 = phi i32 [ %conv3392, %cond.true3389 ], [ %conv3394, %cond.false3393 ], !dbg !5089
  %conv3397 = trunc i32 %cond3396 to i8, !dbg !5089
  store i8 %conv3397, i8* %c, align 1, !dbg !5090
  br label %normal_char, !dbg !5091

sw.epilog:                                        ; preds = %do.end3382, %do.end3292, %do.end3217, %do.end3142, %do.end3067, %do.end2992, %do.end2917, %do.end2842, %do.end2767, %if.end2680, %while.end2338, %if.end2176, %if.end1943
  br label %sw.epilog3609, !dbg !5092

sw.default3398:                                   ; preds = %do.end
  br label %normal_char, !dbg !5092

normal_char:                                      ; preds = %sw.default3398, %cond.end3395, %if.then3310, %if.then3296, %if.then3221, %if.then3146, %if.then3071, %if.then2996, %if.then2921, %if.then2846, %if.then2771, %if.then2696, %if.then2691, %if.then2187, %if.then2046, %if.else1780, %if.else1772, %if.else1767, %if.else1762, %if.else1757, %if.then206, %if.then194, %if.else186, %if.else103
  call void @llvm.dbg.label(metadata !5093), !dbg !5094
  %1787 = load i8*, i8** %pending_exact, align 8, !dbg !5095
  %tobool3399 = icmp ne i8* %1787, null, !dbg !5095
  br i1 %tobool3399, label %lor.lhs.false3400, label %if.then3464, !dbg !5097

lor.lhs.false3400:                                ; preds = %normal_char
  %1788 = load i8*, i8** %pending_exact, align 8, !dbg !5098
  %1789 = load i8*, i8** %pending_exact, align 8, !dbg !5099
  %1790 = load i8, i8* %1789, align 1, !dbg !5100
  %conv3401 = zext i8 %1790 to i32, !dbg !5100
  %idx.ext3402 = sext i32 %conv3401 to i64, !dbg !5101
  %add.ptr3403 = getelementptr inbounds i8, i8* %1788, i64 %idx.ext3402, !dbg !5101
  %add.ptr3404 = getelementptr inbounds i8, i8* %add.ptr3403, i64 1, !dbg !5102
  %1791 = load i8*, i8** %b, align 8, !dbg !5103
  %cmp3405 = icmp ne i8* %add.ptr3404, %1791, !dbg !5104
  br i1 %cmp3405, label %if.then3464, label %lor.lhs.false3407, !dbg !5105

lor.lhs.false3407:                                ; preds = %lor.lhs.false3400
  %1792 = load i8*, i8** %pending_exact, align 8, !dbg !5106
  %1793 = load i8, i8* %1792, align 1, !dbg !5107
  %conv3408 = zext i8 %1793 to i32, !dbg !5107
  %cmp3409 = icmp eq i32 %conv3408, 255, !dbg !5108
  br i1 %cmp3409, label %if.then3464, label %lor.lhs.false3411, !dbg !5109

lor.lhs.false3411:                                ; preds = %lor.lhs.false3407
  %1794 = load i8*, i8** %p, align 8, !dbg !5110
  %1795 = load i8, i8* %1794, align 1, !dbg !5111
  %conv3412 = sext i8 %1795 to i32, !dbg !5111
  %cmp3413 = icmp eq i32 %conv3412, 42, !dbg !5112
  br i1 %cmp3413, label %if.then3464, label %lor.lhs.false3415, !dbg !5113

lor.lhs.false3415:                                ; preds = %lor.lhs.false3411
  %1796 = load i8*, i8** %p, align 8, !dbg !5114
  %1797 = load i8, i8* %1796, align 1, !dbg !5115
  %conv3416 = sext i8 %1797 to i32, !dbg !5115
  %cmp3417 = icmp eq i32 %conv3416, 94, !dbg !5116
  br i1 %cmp3417, label %if.then3464, label %lor.lhs.false3419, !dbg !5117

lor.lhs.false3419:                                ; preds = %lor.lhs.false3415
  %1798 = load i64, i64* %syntax.addr, align 8, !dbg !5118
  %and3420 = and i64 %1798, 2, !dbg !5119
  %tobool3421 = icmp ne i64 %and3420, 0, !dbg !5119
  br i1 %tobool3421, label %cond.true3422, label %cond.false3436, !dbg !5120

cond.true3422:                                    ; preds = %lor.lhs.false3419
  %1799 = load i8*, i8** %p, align 8, !dbg !5121
  %1800 = load i8, i8* %1799, align 1, !dbg !5122
  %conv3423 = sext i8 %1800 to i32, !dbg !5122
  %cmp3424 = icmp eq i32 %conv3423, 92, !dbg !5123
  br i1 %cmp3424, label %land.lhs.true3426, label %lor.lhs.false3444, !dbg !5124

land.lhs.true3426:                                ; preds = %cond.true3422
  %1801 = load i8*, i8** %p, align 8, !dbg !5125
  %arrayidx3427 = getelementptr inbounds i8, i8* %1801, i64 1, !dbg !5125
  %1802 = load i8, i8* %arrayidx3427, align 1, !dbg !5125
  %conv3428 = sext i8 %1802 to i32, !dbg !5125
  %cmp3429 = icmp eq i32 %conv3428, 43, !dbg !5126
  br i1 %cmp3429, label %if.then3464, label %lor.lhs.false3431, !dbg !5127

lor.lhs.false3431:                                ; preds = %land.lhs.true3426
  %1803 = load i8*, i8** %p, align 8, !dbg !5128
  %arrayidx3432 = getelementptr inbounds i8, i8* %1803, i64 1, !dbg !5128
  %1804 = load i8, i8* %arrayidx3432, align 1, !dbg !5128
  %conv3433 = sext i8 %1804 to i32, !dbg !5128
  %cmp3434 = icmp eq i32 %conv3433, 63, !dbg !5129
  br i1 %cmp3434, label %if.then3464, label %lor.lhs.false3444, !dbg !5130

cond.false3436:                                   ; preds = %lor.lhs.false3419
  %1805 = load i8*, i8** %p, align 8, !dbg !5131
  %1806 = load i8, i8* %1805, align 1, !dbg !5132
  %conv3437 = sext i8 %1806 to i32, !dbg !5132
  %cmp3438 = icmp eq i32 %conv3437, 43, !dbg !5133
  br i1 %cmp3438, label %if.then3464, label %lor.lhs.false3440, !dbg !5134

lor.lhs.false3440:                                ; preds = %cond.false3436
  %1807 = load i8*, i8** %p, align 8, !dbg !5135
  %1808 = load i8, i8* %1807, align 1, !dbg !5136
  %conv3441 = sext i8 %1808 to i32, !dbg !5136
  %cmp3442 = icmp eq i32 %conv3441, 63, !dbg !5137
  br i1 %cmp3442, label %if.then3464, label %lor.lhs.false3444, !dbg !5120

lor.lhs.false3444:                                ; preds = %lor.lhs.false3440, %lor.lhs.false3431, %cond.true3422
  %1809 = load i64, i64* %syntax.addr, align 8, !dbg !5138
  %and3445 = and i64 %1809, 512, !dbg !5139
  %tobool3446 = icmp ne i64 %and3445, 0, !dbg !5139
  br i1 %tobool3446, label %land.lhs.true3447, label %if.end3537, !dbg !5140

land.lhs.true3447:                                ; preds = %lor.lhs.false3444
  %1810 = load i64, i64* %syntax.addr, align 8, !dbg !5141
  %and3448 = and i64 %1810, 4096, !dbg !5142
  %tobool3449 = icmp ne i64 %and3448, 0, !dbg !5142
  br i1 %tobool3449, label %cond.true3450, label %cond.false3454, !dbg !5143

cond.true3450:                                    ; preds = %land.lhs.true3447
  %1811 = load i8*, i8** %p, align 8, !dbg !5144
  %1812 = load i8, i8* %1811, align 1, !dbg !5145
  %conv3451 = sext i8 %1812 to i32, !dbg !5145
  %cmp3452 = icmp eq i32 %conv3451, 123, !dbg !5146
  br i1 %cmp3452, label %if.then3464, label %if.end3537, !dbg !5147

cond.false3454:                                   ; preds = %land.lhs.true3447
  %1813 = load i8*, i8** %p, align 8, !dbg !5148
  %arrayidx3455 = getelementptr inbounds i8, i8* %1813, i64 0, !dbg !5148
  %1814 = load i8, i8* %arrayidx3455, align 1, !dbg !5148
  %conv3456 = sext i8 %1814 to i32, !dbg !5148
  %cmp3457 = icmp eq i32 %conv3456, 92, !dbg !5149
  br i1 %cmp3457, label %land.lhs.true3459, label %if.end3537, !dbg !5150

land.lhs.true3459:                                ; preds = %cond.false3454
  %1815 = load i8*, i8** %p, align 8, !dbg !5151
  %arrayidx3460 = getelementptr inbounds i8, i8* %1815, i64 1, !dbg !5151
  %1816 = load i8, i8* %arrayidx3460, align 1, !dbg !5151
  %conv3461 = sext i8 %1816 to i32, !dbg !5151
  %cmp3462 = icmp eq i32 %conv3461, 123, !dbg !5152
  br i1 %cmp3462, label %if.then3464, label %if.end3537, !dbg !5143

if.then3464:                                      ; preds = %land.lhs.true3459, %cond.true3450, %lor.lhs.false3440, %cond.false3436, %lor.lhs.false3431, %land.lhs.true3426, %lor.lhs.false3415, %lor.lhs.false3411, %lor.lhs.false3407, %lor.lhs.false3400, %normal_char
  %1817 = load i8*, i8** %b, align 8, !dbg !5153
  store i8* %1817, i8** %laststart, align 8, !dbg !5155
  br label %do.body3465, !dbg !5156

do.body3465:                                      ; preds = %if.then3464
  br label %while.cond3466, !dbg !5157

while.cond3466:                                   ; preds = %do.end3531, %do.body3465
  %1818 = load i8*, i8** %b, align 8, !dbg !5157
  %1819 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5157
  %buffer3467 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1819, i32 0, i32 0, !dbg !5157
  %1820 = load i8*, i8** %buffer3467, align 8, !dbg !5157
  %sub.ptr.lhs.cast3468 = ptrtoint i8* %1818 to i64, !dbg !5157
  %sub.ptr.rhs.cast3469 = ptrtoint i8* %1820 to i64, !dbg !5157
  %sub.ptr.sub3470 = sub i64 %sub.ptr.lhs.cast3468, %sub.ptr.rhs.cast3469, !dbg !5157
  %add3471 = add nsw i64 %sub.ptr.sub3470, 2, !dbg !5157
  %1821 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5157
  %allocated3472 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1821, i32 0, i32 1, !dbg !5157
  %1822 = load i64, i64* %allocated3472, align 8, !dbg !5157
  %cmp3473 = icmp ugt i64 %add3471, %1822, !dbg !5157
  br i1 %cmp3473, label %while.body3475, label %while.end3532, !dbg !5157

while.body3475:                                   ; preds = %while.cond3466
  br label %do.body3476, !dbg !5157

do.body3476:                                      ; preds = %while.body3475
  call void @llvm.dbg.declare(metadata i8** %old_buffer3477, metadata !5159, metadata !DIExpression()), !dbg !5161
  %1823 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5161
  %buffer3478 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1823, i32 0, i32 0, !dbg !5161
  %1824 = load i8*, i8** %buffer3478, align 8, !dbg !5161
  store i8* %1824, i8** %old_buffer3477, align 8, !dbg !5161
  %1825 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5162
  %allocated3479 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1825, i32 0, i32 1, !dbg !5162
  %1826 = load i64, i64* %allocated3479, align 8, !dbg !5162
  %cmp3480 = icmp eq i64 %1826, 65536, !dbg !5162
  br i1 %cmp3480, label %if.then3482, label %if.end3483, !dbg !5161

if.then3482:                                      ; preds = %do.body3476
  store i32 15, i32* %retval, align 4, !dbg !5162
  br label %return, !dbg !5162

if.end3483:                                       ; preds = %do.body3476
  %1827 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5161
  %allocated3484 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1827, i32 0, i32 1, !dbg !5161
  %1828 = load i64, i64* %allocated3484, align 8, !dbg !5161
  %shl3485 = shl i64 %1828, 1, !dbg !5161
  store i64 %shl3485, i64* %allocated3484, align 8, !dbg !5161
  %1829 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5164
  %allocated3486 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1829, i32 0, i32 1, !dbg !5164
  %1830 = load i64, i64* %allocated3486, align 8, !dbg !5164
  %cmp3487 = icmp ugt i64 %1830, 65536, !dbg !5164
  br i1 %cmp3487, label %if.then3489, label %if.end3491, !dbg !5161

if.then3489:                                      ; preds = %if.end3483
  %1831 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5164
  %allocated3490 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1831, i32 0, i32 1, !dbg !5164
  store i64 65536, i64* %allocated3490, align 8, !dbg !5164
  br label %if.end3491, !dbg !5164

if.end3491:                                       ; preds = %if.then3489, %if.end3483
  %1832 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5161
  %buffer3492 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1832, i32 0, i32 0, !dbg !5161
  %1833 = load i8*, i8** %buffer3492, align 8, !dbg !5161
  %1834 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5161
  %allocated3493 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1834, i32 0, i32 1, !dbg !5161
  %1835 = load i64, i64* %allocated3493, align 8, !dbg !5161
  %call3494 = call i8* @realloc(i8* %1833, i64 %1835), !dbg !5161
  %1836 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5161
  %buffer3495 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1836, i32 0, i32 0, !dbg !5161
  store i8* %call3494, i8** %buffer3495, align 8, !dbg !5161
  %1837 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5166
  %buffer3496 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1837, i32 0, i32 0, !dbg !5166
  %1838 = load i8*, i8** %buffer3496, align 8, !dbg !5166
  %cmp3497 = icmp eq i8* %1838, null, !dbg !5166
  br i1 %cmp3497, label %if.then3499, label %if.end3500, !dbg !5161

if.then3499:                                      ; preds = %if.end3491
  store i32 12, i32* %retval, align 4, !dbg !5166
  br label %return, !dbg !5166

if.end3500:                                       ; preds = %if.end3491
  %1839 = load i8*, i8** %old_buffer3477, align 8, !dbg !5168
  %1840 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5168
  %buffer3501 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1840, i32 0, i32 0, !dbg !5168
  %1841 = load i8*, i8** %buffer3501, align 8, !dbg !5168
  %cmp3502 = icmp ne i8* %1839, %1841, !dbg !5168
  br i1 %cmp3502, label %if.then3504, label %if.end3530, !dbg !5161

if.then3504:                                      ; preds = %if.end3500
  call void @llvm.dbg.declare(metadata i32* %incr3505, metadata !5170, metadata !DIExpression()), !dbg !5172
  %1842 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5172
  %buffer3506 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1842, i32 0, i32 0, !dbg !5172
  %1843 = load i8*, i8** %buffer3506, align 8, !dbg !5172
  %1844 = load i8*, i8** %old_buffer3477, align 8, !dbg !5172
  %sub.ptr.lhs.cast3507 = ptrtoint i8* %1843 to i64, !dbg !5172
  %sub.ptr.rhs.cast3508 = ptrtoint i8* %1844 to i64, !dbg !5172
  %sub.ptr.sub3509 = sub i64 %sub.ptr.lhs.cast3507, %sub.ptr.rhs.cast3508, !dbg !5172
  %conv3510 = trunc i64 %sub.ptr.sub3509 to i32, !dbg !5172
  store i32 %conv3510, i32* %incr3505, align 4, !dbg !5172
  %1845 = load i32, i32* %incr3505, align 4, !dbg !5172
  %1846 = load i8*, i8** %b, align 8, !dbg !5172
  %idx.ext3511 = sext i32 %1845 to i64, !dbg !5172
  %add.ptr3512 = getelementptr inbounds i8, i8* %1846, i64 %idx.ext3511, !dbg !5172
  store i8* %add.ptr3512, i8** %b, align 8, !dbg !5172
  %1847 = load i32, i32* %incr3505, align 4, !dbg !5172
  %1848 = load i8*, i8** %begalt, align 8, !dbg !5172
  %idx.ext3513 = sext i32 %1847 to i64, !dbg !5172
  %add.ptr3514 = getelementptr inbounds i8, i8* %1848, i64 %idx.ext3513, !dbg !5172
  store i8* %add.ptr3514, i8** %begalt, align 8, !dbg !5172
  %1849 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5173
  %tobool3515 = icmp ne i8* %1849, null, !dbg !5173
  br i1 %tobool3515, label %if.then3516, label %if.end3519, !dbg !5172

if.then3516:                                      ; preds = %if.then3504
  %1850 = load i32, i32* %incr3505, align 4, !dbg !5173
  %1851 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5173
  %idx.ext3517 = sext i32 %1850 to i64, !dbg !5173
  %add.ptr3518 = getelementptr inbounds i8, i8* %1851, i64 %idx.ext3517, !dbg !5173
  store i8* %add.ptr3518, i8** %fixup_alt_jump, align 8, !dbg !5173
  br label %if.end3519, !dbg !5173

if.end3519:                                       ; preds = %if.then3516, %if.then3504
  %1852 = load i8*, i8** %laststart, align 8, !dbg !5175
  %tobool3520 = icmp ne i8* %1852, null, !dbg !5175
  br i1 %tobool3520, label %if.then3521, label %if.end3524, !dbg !5172

if.then3521:                                      ; preds = %if.end3519
  %1853 = load i32, i32* %incr3505, align 4, !dbg !5175
  %1854 = load i8*, i8** %laststart, align 8, !dbg !5175
  %idx.ext3522 = sext i32 %1853 to i64, !dbg !5175
  %add.ptr3523 = getelementptr inbounds i8, i8* %1854, i64 %idx.ext3522, !dbg !5175
  store i8* %add.ptr3523, i8** %laststart, align 8, !dbg !5175
  br label %if.end3524, !dbg !5175

if.end3524:                                       ; preds = %if.then3521, %if.end3519
  %1855 = load i8*, i8** %pending_exact, align 8, !dbg !5177
  %tobool3525 = icmp ne i8* %1855, null, !dbg !5177
  br i1 %tobool3525, label %if.then3526, label %if.end3529, !dbg !5172

if.then3526:                                      ; preds = %if.end3524
  %1856 = load i32, i32* %incr3505, align 4, !dbg !5177
  %1857 = load i8*, i8** %pending_exact, align 8, !dbg !5177
  %idx.ext3527 = sext i32 %1856 to i64, !dbg !5177
  %add.ptr3528 = getelementptr inbounds i8, i8* %1857, i64 %idx.ext3527, !dbg !5177
  store i8* %add.ptr3528, i8** %pending_exact, align 8, !dbg !5177
  br label %if.end3529, !dbg !5177

if.end3529:                                       ; preds = %if.then3526, %if.end3524
  br label %if.end3530, !dbg !5172

if.end3530:                                       ; preds = %if.end3529, %if.end3500
  br label %do.end3531, !dbg !5161

do.end3531:                                       ; preds = %if.end3530
  br label %while.cond3466, !dbg !5157, !llvm.loop !5179

while.end3532:                                    ; preds = %while.cond3466
  %1858 = load i8*, i8** %b, align 8, !dbg !5157
  %incdec.ptr3533 = getelementptr inbounds i8, i8* %1858, i32 1, !dbg !5157
  store i8* %incdec.ptr3533, i8** %b, align 8, !dbg !5157
  store i8 2, i8* %1858, align 1, !dbg !5157
  %1859 = load i8*, i8** %b, align 8, !dbg !5157
  %incdec.ptr3534 = getelementptr inbounds i8, i8* %1859, i32 1, !dbg !5157
  store i8* %incdec.ptr3534, i8** %b, align 8, !dbg !5157
  store i8 0, i8* %1859, align 1, !dbg !5157
  br label %do.end3535, !dbg !5157

do.end3535:                                       ; preds = %while.end3532
  %1860 = load i8*, i8** %b, align 8, !dbg !5180
  %add.ptr3536 = getelementptr inbounds i8, i8* %1860, i64 -1, !dbg !5181
  store i8* %add.ptr3536, i8** %pending_exact, align 8, !dbg !5182
  br label %if.end3537, !dbg !5183

if.end3537:                                       ; preds = %do.end3535, %land.lhs.true3459, %cond.false3454, %cond.true3450, %lor.lhs.false3444
  br label %do.body3538, !dbg !5184

do.body3538:                                      ; preds = %if.end3537
  br label %while.cond3539, !dbg !5185

while.cond3539:                                   ; preds = %do.end3604, %do.body3538
  %1861 = load i8*, i8** %b, align 8, !dbg !5185
  %1862 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5185
  %buffer3540 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1862, i32 0, i32 0, !dbg !5185
  %1863 = load i8*, i8** %buffer3540, align 8, !dbg !5185
  %sub.ptr.lhs.cast3541 = ptrtoint i8* %1861 to i64, !dbg !5185
  %sub.ptr.rhs.cast3542 = ptrtoint i8* %1863 to i64, !dbg !5185
  %sub.ptr.sub3543 = sub i64 %sub.ptr.lhs.cast3541, %sub.ptr.rhs.cast3542, !dbg !5185
  %add3544 = add nsw i64 %sub.ptr.sub3543, 1, !dbg !5185
  %1864 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5185
  %allocated3545 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1864, i32 0, i32 1, !dbg !5185
  %1865 = load i64, i64* %allocated3545, align 8, !dbg !5185
  %cmp3546 = icmp ugt i64 %add3544, %1865, !dbg !5185
  br i1 %cmp3546, label %while.body3548, label %while.end3605, !dbg !5185

while.body3548:                                   ; preds = %while.cond3539
  br label %do.body3549, !dbg !5185

do.body3549:                                      ; preds = %while.body3548
  call void @llvm.dbg.declare(metadata i8** %old_buffer3550, metadata !5187, metadata !DIExpression()), !dbg !5189
  %1866 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5189
  %buffer3551 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1866, i32 0, i32 0, !dbg !5189
  %1867 = load i8*, i8** %buffer3551, align 8, !dbg !5189
  store i8* %1867, i8** %old_buffer3550, align 8, !dbg !5189
  %1868 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5190
  %allocated3552 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1868, i32 0, i32 1, !dbg !5190
  %1869 = load i64, i64* %allocated3552, align 8, !dbg !5190
  %cmp3553 = icmp eq i64 %1869, 65536, !dbg !5190
  br i1 %cmp3553, label %if.then3555, label %if.end3556, !dbg !5189

if.then3555:                                      ; preds = %do.body3549
  store i32 15, i32* %retval, align 4, !dbg !5190
  br label %return, !dbg !5190

if.end3556:                                       ; preds = %do.body3549
  %1870 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5189
  %allocated3557 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1870, i32 0, i32 1, !dbg !5189
  %1871 = load i64, i64* %allocated3557, align 8, !dbg !5189
  %shl3558 = shl i64 %1871, 1, !dbg !5189
  store i64 %shl3558, i64* %allocated3557, align 8, !dbg !5189
  %1872 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5192
  %allocated3559 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1872, i32 0, i32 1, !dbg !5192
  %1873 = load i64, i64* %allocated3559, align 8, !dbg !5192
  %cmp3560 = icmp ugt i64 %1873, 65536, !dbg !5192
  br i1 %cmp3560, label %if.then3562, label %if.end3564, !dbg !5189

if.then3562:                                      ; preds = %if.end3556
  %1874 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5192
  %allocated3563 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1874, i32 0, i32 1, !dbg !5192
  store i64 65536, i64* %allocated3563, align 8, !dbg !5192
  br label %if.end3564, !dbg !5192

if.end3564:                                       ; preds = %if.then3562, %if.end3556
  %1875 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5189
  %buffer3565 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1875, i32 0, i32 0, !dbg !5189
  %1876 = load i8*, i8** %buffer3565, align 8, !dbg !5189
  %1877 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5189
  %allocated3566 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1877, i32 0, i32 1, !dbg !5189
  %1878 = load i64, i64* %allocated3566, align 8, !dbg !5189
  %call3567 = call i8* @realloc(i8* %1876, i64 %1878), !dbg !5189
  %1879 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5189
  %buffer3568 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1879, i32 0, i32 0, !dbg !5189
  store i8* %call3567, i8** %buffer3568, align 8, !dbg !5189
  %1880 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5194
  %buffer3569 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1880, i32 0, i32 0, !dbg !5194
  %1881 = load i8*, i8** %buffer3569, align 8, !dbg !5194
  %cmp3570 = icmp eq i8* %1881, null, !dbg !5194
  br i1 %cmp3570, label %if.then3572, label %if.end3573, !dbg !5189

if.then3572:                                      ; preds = %if.end3564
  store i32 12, i32* %retval, align 4, !dbg !5194
  br label %return, !dbg !5194

if.end3573:                                       ; preds = %if.end3564
  %1882 = load i8*, i8** %old_buffer3550, align 8, !dbg !5196
  %1883 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5196
  %buffer3574 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1883, i32 0, i32 0, !dbg !5196
  %1884 = load i8*, i8** %buffer3574, align 8, !dbg !5196
  %cmp3575 = icmp ne i8* %1882, %1884, !dbg !5196
  br i1 %cmp3575, label %if.then3577, label %if.end3603, !dbg !5189

if.then3577:                                      ; preds = %if.end3573
  call void @llvm.dbg.declare(metadata i32* %incr3578, metadata !5198, metadata !DIExpression()), !dbg !5200
  %1885 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5200
  %buffer3579 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1885, i32 0, i32 0, !dbg !5200
  %1886 = load i8*, i8** %buffer3579, align 8, !dbg !5200
  %1887 = load i8*, i8** %old_buffer3550, align 8, !dbg !5200
  %sub.ptr.lhs.cast3580 = ptrtoint i8* %1886 to i64, !dbg !5200
  %sub.ptr.rhs.cast3581 = ptrtoint i8* %1887 to i64, !dbg !5200
  %sub.ptr.sub3582 = sub i64 %sub.ptr.lhs.cast3580, %sub.ptr.rhs.cast3581, !dbg !5200
  %conv3583 = trunc i64 %sub.ptr.sub3582 to i32, !dbg !5200
  store i32 %conv3583, i32* %incr3578, align 4, !dbg !5200
  %1888 = load i32, i32* %incr3578, align 4, !dbg !5200
  %1889 = load i8*, i8** %b, align 8, !dbg !5200
  %idx.ext3584 = sext i32 %1888 to i64, !dbg !5200
  %add.ptr3585 = getelementptr inbounds i8, i8* %1889, i64 %idx.ext3584, !dbg !5200
  store i8* %add.ptr3585, i8** %b, align 8, !dbg !5200
  %1890 = load i32, i32* %incr3578, align 4, !dbg !5200
  %1891 = load i8*, i8** %begalt, align 8, !dbg !5200
  %idx.ext3586 = sext i32 %1890 to i64, !dbg !5200
  %add.ptr3587 = getelementptr inbounds i8, i8* %1891, i64 %idx.ext3586, !dbg !5200
  store i8* %add.ptr3587, i8** %begalt, align 8, !dbg !5200
  %1892 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5201
  %tobool3588 = icmp ne i8* %1892, null, !dbg !5201
  br i1 %tobool3588, label %if.then3589, label %if.end3592, !dbg !5200

if.then3589:                                      ; preds = %if.then3577
  %1893 = load i32, i32* %incr3578, align 4, !dbg !5201
  %1894 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5201
  %idx.ext3590 = sext i32 %1893 to i64, !dbg !5201
  %add.ptr3591 = getelementptr inbounds i8, i8* %1894, i64 %idx.ext3590, !dbg !5201
  store i8* %add.ptr3591, i8** %fixup_alt_jump, align 8, !dbg !5201
  br label %if.end3592, !dbg !5201

if.end3592:                                       ; preds = %if.then3589, %if.then3577
  %1895 = load i8*, i8** %laststart, align 8, !dbg !5203
  %tobool3593 = icmp ne i8* %1895, null, !dbg !5203
  br i1 %tobool3593, label %if.then3594, label %if.end3597, !dbg !5200

if.then3594:                                      ; preds = %if.end3592
  %1896 = load i32, i32* %incr3578, align 4, !dbg !5203
  %1897 = load i8*, i8** %laststart, align 8, !dbg !5203
  %idx.ext3595 = sext i32 %1896 to i64, !dbg !5203
  %add.ptr3596 = getelementptr inbounds i8, i8* %1897, i64 %idx.ext3595, !dbg !5203
  store i8* %add.ptr3596, i8** %laststart, align 8, !dbg !5203
  br label %if.end3597, !dbg !5203

if.end3597:                                       ; preds = %if.then3594, %if.end3592
  %1898 = load i8*, i8** %pending_exact, align 8, !dbg !5205
  %tobool3598 = icmp ne i8* %1898, null, !dbg !5205
  br i1 %tobool3598, label %if.then3599, label %if.end3602, !dbg !5200

if.then3599:                                      ; preds = %if.end3597
  %1899 = load i32, i32* %incr3578, align 4, !dbg !5205
  %1900 = load i8*, i8** %pending_exact, align 8, !dbg !5205
  %idx.ext3600 = sext i32 %1899 to i64, !dbg !5205
  %add.ptr3601 = getelementptr inbounds i8, i8* %1900, i64 %idx.ext3600, !dbg !5205
  store i8* %add.ptr3601, i8** %pending_exact, align 8, !dbg !5205
  br label %if.end3602, !dbg !5205

if.end3602:                                       ; preds = %if.then3599, %if.end3597
  br label %if.end3603, !dbg !5200

if.end3603:                                       ; preds = %if.end3602, %if.end3573
  br label %do.end3604, !dbg !5189

do.end3604:                                       ; preds = %if.end3603
  br label %while.cond3539, !dbg !5185, !llvm.loop !5207

while.end3605:                                    ; preds = %while.cond3539
  %1901 = load i8, i8* %c, align 1, !dbg !5185
  %1902 = load i8*, i8** %b, align 8, !dbg !5185
  %incdec.ptr3606 = getelementptr inbounds i8, i8* %1902, i32 1, !dbg !5185
  store i8* %incdec.ptr3606, i8** %b, align 8, !dbg !5185
  store i8 %1901, i8* %1902, align 1, !dbg !5185
  br label %do.end3607, !dbg !5185

do.end3607:                                       ; preds = %while.end3605
  %1903 = load i8*, i8** %pending_exact, align 8, !dbg !5208
  %1904 = load i8, i8* %1903, align 1, !dbg !5209
  %inc3608 = add i8 %1904, 1, !dbg !5209
  store i8 %inc3608, i8* %1903, align 1, !dbg !5209
  br label %sw.epilog3609, !dbg !5210

sw.epilog3609:                                    ; preds = %do.end3607, %sw.epilog, %while.end1748, %do.end648, %if.end577, %if.then292, %if.end187, %if.end104
  br label %while.cond, !dbg !3147, !llvm.loop !5211

while.end3610:                                    ; preds = %while.cond
  %1905 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5213
  %tobool3611 = icmp ne i8* %1905, null, !dbg !5213
  br i1 %tobool3611, label %if.then3612, label %if.end3618, !dbg !5215

if.then3612:                                      ; preds = %while.end3610
  %1906 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5216
  %1907 = load i8*, i8** %b, align 8, !dbg !5216
  %1908 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5216
  %sub.ptr.lhs.cast3613 = ptrtoint i8* %1907 to i64, !dbg !5216
  %sub.ptr.rhs.cast3614 = ptrtoint i8* %1908 to i64, !dbg !5216
  %sub.ptr.sub3615 = sub i64 %sub.ptr.lhs.cast3613, %sub.ptr.rhs.cast3614, !dbg !5216
  %sub3616 = sub nsw i64 %sub.ptr.sub3615, 3, !dbg !5216
  %conv3617 = trunc i64 %sub3616 to i32, !dbg !5216
  call void @byte_store_op1(i32 14, i8* %1906, i32 %conv3617), !dbg !5216
  br label %if.end3618, !dbg !5216

if.end3618:                                       ; preds = %if.then3612, %while.end3610
  %avail3619 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !5217
  %1909 = load i32, i32* %avail3619, align 4, !dbg !5217
  %cmp3620 = icmp eq i32 %1909, 0, !dbg !5217
  br i1 %cmp3620, label %if.end3624, label %if.then3622, !dbg !5219

if.then3622:                                      ; preds = %if.end3618
  %stack3623 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !5220
  %1910 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3623, align 8, !dbg !5220
  %1911 = bitcast %struct.compile_stack_elt_t* %1910 to i8*, !dbg !5220
  call void @free(i8* %1911), !dbg !5220
  store i32 8, i32* %retval, align 4, !dbg !5220
  br label %return, !dbg !5220

if.end3624:                                       ; preds = %if.end3618
  %1912 = load i64, i64* %syntax.addr, align 8, !dbg !5221
  %and3625 = and i64 %1912, 262144, !dbg !5223
  %tobool3626 = icmp ne i64 %and3625, 0, !dbg !5223
  br i1 %tobool3626, label %if.then3627, label %if.end3698, !dbg !5224

if.then3627:                                      ; preds = %if.end3624
  br label %do.body3628, !dbg !5225

do.body3628:                                      ; preds = %if.then3627
  br label %while.cond3629, !dbg !5226

while.cond3629:                                   ; preds = %do.end3694, %do.body3628
  %1913 = load i8*, i8** %b, align 8, !dbg !5226
  %1914 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5226
  %buffer3630 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1914, i32 0, i32 0, !dbg !5226
  %1915 = load i8*, i8** %buffer3630, align 8, !dbg !5226
  %sub.ptr.lhs.cast3631 = ptrtoint i8* %1913 to i64, !dbg !5226
  %sub.ptr.rhs.cast3632 = ptrtoint i8* %1915 to i64, !dbg !5226
  %sub.ptr.sub3633 = sub i64 %sub.ptr.lhs.cast3631, %sub.ptr.rhs.cast3632, !dbg !5226
  %add3634 = add nsw i64 %sub.ptr.sub3633, 1, !dbg !5226
  %1916 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5226
  %allocated3635 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1916, i32 0, i32 1, !dbg !5226
  %1917 = load i64, i64* %allocated3635, align 8, !dbg !5226
  %cmp3636 = icmp ugt i64 %add3634, %1917, !dbg !5226
  br i1 %cmp3636, label %while.body3638, label %while.end3695, !dbg !5226

while.body3638:                                   ; preds = %while.cond3629
  br label %do.body3639, !dbg !5226

do.body3639:                                      ; preds = %while.body3638
  call void @llvm.dbg.declare(metadata i8** %old_buffer3640, metadata !5228, metadata !DIExpression()), !dbg !5230
  %1918 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5230
  %buffer3641 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1918, i32 0, i32 0, !dbg !5230
  %1919 = load i8*, i8** %buffer3641, align 8, !dbg !5230
  store i8* %1919, i8** %old_buffer3640, align 8, !dbg !5230
  %1920 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5231
  %allocated3642 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1920, i32 0, i32 1, !dbg !5231
  %1921 = load i64, i64* %allocated3642, align 8, !dbg !5231
  %cmp3643 = icmp eq i64 %1921, 65536, !dbg !5231
  br i1 %cmp3643, label %if.then3645, label %if.end3646, !dbg !5230

if.then3645:                                      ; preds = %do.body3639
  store i32 15, i32* %retval, align 4, !dbg !5231
  br label %return, !dbg !5231

if.end3646:                                       ; preds = %do.body3639
  %1922 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5230
  %allocated3647 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1922, i32 0, i32 1, !dbg !5230
  %1923 = load i64, i64* %allocated3647, align 8, !dbg !5230
  %shl3648 = shl i64 %1923, 1, !dbg !5230
  store i64 %shl3648, i64* %allocated3647, align 8, !dbg !5230
  %1924 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5233
  %allocated3649 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1924, i32 0, i32 1, !dbg !5233
  %1925 = load i64, i64* %allocated3649, align 8, !dbg !5233
  %cmp3650 = icmp ugt i64 %1925, 65536, !dbg !5233
  br i1 %cmp3650, label %if.then3652, label %if.end3654, !dbg !5230

if.then3652:                                      ; preds = %if.end3646
  %1926 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5233
  %allocated3653 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1926, i32 0, i32 1, !dbg !5233
  store i64 65536, i64* %allocated3653, align 8, !dbg !5233
  br label %if.end3654, !dbg !5233

if.end3654:                                       ; preds = %if.then3652, %if.end3646
  %1927 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5230
  %buffer3655 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1927, i32 0, i32 0, !dbg !5230
  %1928 = load i8*, i8** %buffer3655, align 8, !dbg !5230
  %1929 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5230
  %allocated3656 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1929, i32 0, i32 1, !dbg !5230
  %1930 = load i64, i64* %allocated3656, align 8, !dbg !5230
  %call3657 = call i8* @realloc(i8* %1928, i64 %1930), !dbg !5230
  %1931 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5230
  %buffer3658 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1931, i32 0, i32 0, !dbg !5230
  store i8* %call3657, i8** %buffer3658, align 8, !dbg !5230
  %1932 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5235
  %buffer3659 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1932, i32 0, i32 0, !dbg !5235
  %1933 = load i8*, i8** %buffer3659, align 8, !dbg !5235
  %cmp3660 = icmp eq i8* %1933, null, !dbg !5235
  br i1 %cmp3660, label %if.then3662, label %if.end3663, !dbg !5230

if.then3662:                                      ; preds = %if.end3654
  store i32 12, i32* %retval, align 4, !dbg !5235
  br label %return, !dbg !5235

if.end3663:                                       ; preds = %if.end3654
  %1934 = load i8*, i8** %old_buffer3640, align 8, !dbg !5237
  %1935 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5237
  %buffer3664 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1935, i32 0, i32 0, !dbg !5237
  %1936 = load i8*, i8** %buffer3664, align 8, !dbg !5237
  %cmp3665 = icmp ne i8* %1934, %1936, !dbg !5237
  br i1 %cmp3665, label %if.then3667, label %if.end3693, !dbg !5230

if.then3667:                                      ; preds = %if.end3663
  call void @llvm.dbg.declare(metadata i32* %incr3668, metadata !5239, metadata !DIExpression()), !dbg !5241
  %1937 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5241
  %buffer3669 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1937, i32 0, i32 0, !dbg !5241
  %1938 = load i8*, i8** %buffer3669, align 8, !dbg !5241
  %1939 = load i8*, i8** %old_buffer3640, align 8, !dbg !5241
  %sub.ptr.lhs.cast3670 = ptrtoint i8* %1938 to i64, !dbg !5241
  %sub.ptr.rhs.cast3671 = ptrtoint i8* %1939 to i64, !dbg !5241
  %sub.ptr.sub3672 = sub i64 %sub.ptr.lhs.cast3670, %sub.ptr.rhs.cast3671, !dbg !5241
  %conv3673 = trunc i64 %sub.ptr.sub3672 to i32, !dbg !5241
  store i32 %conv3673, i32* %incr3668, align 4, !dbg !5241
  %1940 = load i32, i32* %incr3668, align 4, !dbg !5241
  %1941 = load i8*, i8** %b, align 8, !dbg !5241
  %idx.ext3674 = sext i32 %1940 to i64, !dbg !5241
  %add.ptr3675 = getelementptr inbounds i8, i8* %1941, i64 %idx.ext3674, !dbg !5241
  store i8* %add.ptr3675, i8** %b, align 8, !dbg !5241
  %1942 = load i32, i32* %incr3668, align 4, !dbg !5241
  %1943 = load i8*, i8** %begalt, align 8, !dbg !5241
  %idx.ext3676 = sext i32 %1942 to i64, !dbg !5241
  %add.ptr3677 = getelementptr inbounds i8, i8* %1943, i64 %idx.ext3676, !dbg !5241
  store i8* %add.ptr3677, i8** %begalt, align 8, !dbg !5241
  %1944 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5242
  %tobool3678 = icmp ne i8* %1944, null, !dbg !5242
  br i1 %tobool3678, label %if.then3679, label %if.end3682, !dbg !5241

if.then3679:                                      ; preds = %if.then3667
  %1945 = load i32, i32* %incr3668, align 4, !dbg !5242
  %1946 = load i8*, i8** %fixup_alt_jump, align 8, !dbg !5242
  %idx.ext3680 = sext i32 %1945 to i64, !dbg !5242
  %add.ptr3681 = getelementptr inbounds i8, i8* %1946, i64 %idx.ext3680, !dbg !5242
  store i8* %add.ptr3681, i8** %fixup_alt_jump, align 8, !dbg !5242
  br label %if.end3682, !dbg !5242

if.end3682:                                       ; preds = %if.then3679, %if.then3667
  %1947 = load i8*, i8** %laststart, align 8, !dbg !5244
  %tobool3683 = icmp ne i8* %1947, null, !dbg !5244
  br i1 %tobool3683, label %if.then3684, label %if.end3687, !dbg !5241

if.then3684:                                      ; preds = %if.end3682
  %1948 = load i32, i32* %incr3668, align 4, !dbg !5244
  %1949 = load i8*, i8** %laststart, align 8, !dbg !5244
  %idx.ext3685 = sext i32 %1948 to i64, !dbg !5244
  %add.ptr3686 = getelementptr inbounds i8, i8* %1949, i64 %idx.ext3685, !dbg !5244
  store i8* %add.ptr3686, i8** %laststart, align 8, !dbg !5244
  br label %if.end3687, !dbg !5244

if.end3687:                                       ; preds = %if.then3684, %if.end3682
  %1950 = load i8*, i8** %pending_exact, align 8, !dbg !5246
  %tobool3688 = icmp ne i8* %1950, null, !dbg !5246
  br i1 %tobool3688, label %if.then3689, label %if.end3692, !dbg !5241

if.then3689:                                      ; preds = %if.end3687
  %1951 = load i32, i32* %incr3668, align 4, !dbg !5246
  %1952 = load i8*, i8** %pending_exact, align 8, !dbg !5246
  %idx.ext3690 = sext i32 %1951 to i64, !dbg !5246
  %add.ptr3691 = getelementptr inbounds i8, i8* %1952, i64 %idx.ext3690, !dbg !5246
  store i8* %add.ptr3691, i8** %pending_exact, align 8, !dbg !5246
  br label %if.end3692, !dbg !5246

if.end3692:                                       ; preds = %if.then3689, %if.end3687
  br label %if.end3693, !dbg !5241

if.end3693:                                       ; preds = %if.end3692, %if.end3663
  br label %do.end3694, !dbg !5230

do.end3694:                                       ; preds = %if.end3693
  br label %while.cond3629, !dbg !5226, !llvm.loop !5248

while.end3695:                                    ; preds = %while.cond3629
  %1953 = load i8*, i8** %b, align 8, !dbg !5226
  %incdec.ptr3696 = getelementptr inbounds i8, i8* %1953, i32 1, !dbg !5226
  store i8* %incdec.ptr3696, i8** %b, align 8, !dbg !5226
  store i8 1, i8* %1953, align 1, !dbg !5226
  br label %do.end3697, !dbg !5226

do.end3697:                                       ; preds = %while.end3695
  br label %if.end3698, !dbg !5226

if.end3698:                                       ; preds = %do.end3697, %if.end3624
  %stack3699 = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !5249
  %1954 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack3699, align 8, !dbg !5249
  %1955 = bitcast %struct.compile_stack_elt_t* %1954 to i8*, !dbg !5250
  call void @free(i8* %1955), !dbg !5251
  %1956 = load i8*, i8** %b, align 8, !dbg !5252
  %1957 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5253
  %buffer3700 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1957, i32 0, i32 0, !dbg !5254
  %1958 = load i8*, i8** %buffer3700, align 8, !dbg !5254
  %sub.ptr.lhs.cast3701 = ptrtoint i8* %1956 to i64, !dbg !5255
  %sub.ptr.rhs.cast3702 = ptrtoint i8* %1958 to i64, !dbg !5255
  %sub.ptr.sub3703 = sub i64 %sub.ptr.lhs.cast3701, %sub.ptr.rhs.cast3702, !dbg !5255
  %1959 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %bufp.addr, align 8, !dbg !5256
  %used3704 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1959, i32 0, i32 2, !dbg !5257
  store i64 %sub.ptr.sub3703, i64* %used3704, align 8, !dbg !5258
  store i32 0, i32* %retval, align 4, !dbg !5259
  br label %return, !dbg !5259

return:                                           ; preds = %if.end3698, %if.then3662, %if.then3645, %if.then3622, %if.then3572, %if.then3555, %if.then3499, %if.then3482, %if.then3346, %if.then3329, %if.then3304, %if.then3257, %if.then3240, %if.then3182, %if.then3165, %if.then3107, %if.then3090, %if.then3032, %if.then3015, %if.then2957, %if.then2940, %if.then2882, %if.then2865, %if.then2807, %if.then2790, %if.then2732, %if.then2715, %if.then2683, %if.then2613, %if.then2596, %if.then2532, %if.then2515, %if.then2493, %if.then2481, %if.then2459, %if.then2401, %if.then2359, %if.then2305, %if.then2288, %if.then2222, %if.then2205, %if.then2135, %if.then2118, %if.else2047, %if.then1997, %if.then1980, %if.else1958, %if.then1904, %if.then1887, %if.then1817, %if.then1790, %if.then1784, %if.then1673, %if.then1667, %if.then1617, %if.then1610, %if.then1599, %if.then1545, %if.then1539, %if.then1489, %if.then1482, %if.then1471, %if.then1237, %if.then1226, %if.then1220, %if.then1061, %if.then1054, %if.then1043, %if.then1025, %if.then1012, %if.then994, %if.then957, %if.then919, %if.then913, %if.then895, %if.then889, %if.then837, %if.then820, %if.then756, %if.then739, %if.then688, %if.then671, %if.then652, %if.then613, %if.then596, %if.then535, %if.then518, %if.then455, %if.then438, %if.then329, %if.then312, %if.then267, %if.then261, %if.then228, %if.then201, %if.then150, %if.then133, %if.then70, %if.then54, %if.then28, %if.then20, %if.then
  %1960 = load i32, i32* %retval, align 4, !dbg !5260
  ret i32 %1960, !dbg !5260
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @xre_comp(i8* %s) #0 !dbg !5261 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !5264, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5266, metadata !DIExpression()), !dbg !5267
  %0 = load i8*, i8** %s.addr, align 8, !dbg !5268
  %tobool = icmp ne i8* %0, null, !dbg !5268
  br i1 %tobool, label %if.end3, label %if.then, !dbg !5270

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.re_pattern_buffer, %struct.re_pattern_buffer* @re_comp_buf, i32 0, i32 0), align 8, !dbg !5271
  %tobool1 = icmp ne i8* %1, null, !dbg !5274
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !5275

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8** %retval, align 8, !dbg !5276
  br label %return, !dbg !5276

if.end:                                           ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !5277
  br label %return, !dbg !5277

if.end3:                                          ; preds = %entry
  %2 = load i8*, i8** getelementptr inbounds (%struct.re_pattern_buffer, %struct.re_pattern_buffer* @re_comp_buf, i32 0, i32 0), align 8, !dbg !5278
  %tobool4 = icmp ne i8* %2, null, !dbg !5280
  br i1 %tobool4, label %if.end12, label %if.then5, !dbg !5281

if.then5:                                         ; preds = %if.end3
  %call = call i8* @malloc(i64 200), !dbg !5282
  store i8* %call, i8** getelementptr inbounds (%struct.re_pattern_buffer, %struct.re_pattern_buffer* @re_comp_buf, i32 0, i32 0), align 8, !dbg !5284
  %3 = load i8*, i8** getelementptr inbounds (%struct.re_pattern_buffer, %struct.re_pattern_buffer* @re_comp_buf, i32 0, i32 0), align 8, !dbg !5285
  %cmp = icmp eq i8* %3, null, !dbg !5287
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !5288

if.then6:                                         ; preds = %if.then5
  %4 = load i8*, i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @re_error_msgid, i64 0, i64 12), align 16, !dbg !5289
  store i8* %4, i8** %retval, align 8, !dbg !5290
  br label %return, !dbg !5290

if.end7:                                          ; preds = %if.then5
  store i64 200, i64* getelementptr inbounds (%struct.re_pattern_buffer, %struct.re_pattern_buffer* @re_comp_buf, i32 0, i32 1), align 8, !dbg !5291
  %call8 = call i8* @malloc(i64 256), !dbg !5292
  store i8* %call8, i8** getelementptr inbounds (%struct.re_pattern_buffer, %struct.re_pattern_buffer* @re_comp_buf, i32 0, i32 4), align 8, !dbg !5293
  %5 = load i8*, i8** getelementptr inbounds (%struct.re_pattern_buffer, %struct.re_pattern_buffer* @re_comp_buf, i32 0, i32 4), align 8, !dbg !5294
  %cmp9 = icmp eq i8* %5, null, !dbg !5296
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5297

if.then10:                                        ; preds = %if.end7
  %6 = load i8*, i8** getelementptr inbounds ([17 x i8*], [17 x i8*]* @re_error_msgid, i64 0, i64 12), align 16, !dbg !5298
  store i8* %6, i8** %retval, align 8, !dbg !5299
  br label %return, !dbg !5299

if.end11:                                         ; preds = %if.end7
  br label %if.end12, !dbg !5300

if.end12:                                         ; preds = %if.end11, %if.end3
  %bf.load = load i8, i8* getelementptr inbounds (%struct.re_pattern_buffer, %struct.re_pattern_buffer* @re_comp_buf, i32 0, i32 7), align 8, !dbg !5301
  %bf.clear = and i8 %bf.load, 127, !dbg !5301
  %bf.set = or i8 %bf.clear, -128, !dbg !5301
  store i8 %bf.set, i8* getelementptr inbounds (%struct.re_pattern_buffer, %struct.re_pattern_buffer* @re_comp_buf, i32 0, i32 7), align 8, !dbg !5301
  %7 = load i8*, i8** %s.addr, align 8, !dbg !5302
  %8 = load i8*, i8** %s.addr, align 8, !dbg !5303
  %call13 = call i64 @strlen(i8* %8), !dbg !5304
  %9 = load i64, i64* @xre_syntax_options, align 8, !dbg !5305
  %call14 = call i32 @byte_regex_compile(i8* %7, i64 %call13, i64 %9, %struct.re_pattern_buffer* @re_comp_buf), !dbg !5306
  store i32 %call14, i32* %ret, align 4, !dbg !5307
  %10 = load i32, i32* %ret, align 4, !dbg !5308
  %tobool15 = icmp ne i32 %10, 0, !dbg !5308
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !5310

if.then16:                                        ; preds = %if.end12
  store i8* null, i8** %retval, align 8, !dbg !5311
  br label %return, !dbg !5311

if.end17:                                         ; preds = %if.end12
  %11 = load i32, i32* %ret, align 4, !dbg !5312
  %idxprom = sext i32 %11 to i64, !dbg !5312
  %arrayidx = getelementptr inbounds [17 x i8*], [17 x i8*]* @re_error_msgid, i64 0, i64 %idxprom, !dbg !5312
  %12 = load i8*, i8** %arrayidx, align 8, !dbg !5312
  store i8* %12, i8** %retval, align 8, !dbg !5313
  br label %return, !dbg !5313

return:                                           ; preds = %if.end17, %if.then16, %if.then10, %if.then6, %if.end, %if.then2
  %13 = load i8*, i8** %retval, align 8, !dbg !5314
  ret i8* %13, !dbg !5314
}

declare dso_local i8* @malloc(i64) #2

declare dso_local i64 @strlen(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @xre_exec(i8* %s) #0 !dbg !5315 {
entry:
  %s.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !5318, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5320, metadata !DIExpression()), !dbg !5322
  %0 = load i8*, i8** %s.addr, align 8, !dbg !5323
  %call = call i64 @strlen(i8* %0), !dbg !5324
  %conv = trunc i64 %call to i32, !dbg !5324
  store i32 %conv, i32* %len, align 4, !dbg !5322
  %1 = load i8*, i8** %s.addr, align 8, !dbg !5325
  %2 = load i32, i32* %len, align 4, !dbg !5326
  %3 = load i32, i32* %len, align 4, !dbg !5327
  %call1 = call i32 @xre_search(%struct.re_pattern_buffer* @re_comp_buf, i8* %1, i32 %2, i32 0, i32 %3, %struct.re_registers* null), !dbg !5328
  %cmp = icmp sle i32 0, %call1, !dbg !5329
  %conv2 = zext i1 %cmp to i32, !dbg !5329
  ret i32 %conv2, !dbg !5330
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @xregcomp(%struct.re_pattern_buffer* %preg, i8* %pattern, i32 %cflags) #0 !dbg !5331 {
entry:
  %retval = alloca i32, align 4
  %preg.addr = alloca %struct.re_pattern_buffer*, align 8
  %pattern.addr = alloca i8*, align 8
  %cflags.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %syntax = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.re_pattern_buffer* %preg, %struct.re_pattern_buffer** %preg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %preg.addr, metadata !5336, metadata !DIExpression()), !dbg !5337
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !5338, metadata !DIExpression()), !dbg !5339
  store i32 %cflags, i32* %cflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cflags.addr, metadata !5340, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5342, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.declare(metadata i64* %syntax, metadata !5344, metadata !DIExpression()), !dbg !5345
  %0 = load i32, i32* %cflags.addr, align 4, !dbg !5346
  %and = and i32 %0, 1, !dbg !5347
  %tobool = icmp ne i32 %and, 0, !dbg !5348
  %1 = zext i1 %tobool to i64, !dbg !5348
  %cond = select i1 %tobool, i64 242428, i64 66246, !dbg !5348
  store i64 %cond, i64* %syntax, align 8, !dbg !5345
  %2 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5349
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2, i32 0, i32 0, !dbg !5350
  store i8* null, i8** %buffer, align 8, !dbg !5351
  %3 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5352
  %allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %3, i32 0, i32 1, !dbg !5353
  store i64 0, i64* %allocated, align 8, !dbg !5354
  %4 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5355
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %4, i32 0, i32 2, !dbg !5356
  store i64 0, i64* %used, align 8, !dbg !5357
  %call = call i8* @malloc(i64 256), !dbg !5358
  %5 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5359
  %fastmap = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %5, i32 0, i32 4, !dbg !5360
  store i8* %call, i8** %fastmap, align 8, !dbg !5361
  %6 = load i32, i32* %cflags.addr, align 4, !dbg !5362
  %and1 = and i32 %6, 2, !dbg !5364
  %tobool2 = icmp ne i32 %and1, 0, !dbg !5364
  br i1 %tobool2, label %if.then, label %if.else, !dbg !5365

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5366, metadata !DIExpression()), !dbg !5368
  %call3 = call i8* @malloc(i64 256), !dbg !5369
  %7 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5370
  %translate = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %7, i32 0, i32 5, !dbg !5371
  store i8* %call3, i8** %translate, align 8, !dbg !5372
  %8 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5373
  %translate4 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %8, i32 0, i32 5, !dbg !5375
  %9 = load i8*, i8** %translate4, align 8, !dbg !5375
  %cmp = icmp eq i8* %9, null, !dbg !5376
  br i1 %cmp, label %if.then5, label %if.end, !dbg !5377

if.then5:                                         ; preds = %if.then
  store i32 12, i32* %retval, align 4, !dbg !5378
  br label %return, !dbg !5378

if.end:                                           ; preds = %if.then
  store i32 0, i32* %i, align 4, !dbg !5379
  br label %for.cond, !dbg !5381

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !5382
  %cmp6 = icmp slt i32 %10, 256, !dbg !5384
  br i1 %cmp6, label %for.body, label %for.end, !dbg !5385

for.body:                                         ; preds = %for.cond
  %call7 = call i16** @__ctype_b_loc(), !dbg !5386
  %11 = load i16*, i16** %call7, align 8, !dbg !5386
  %12 = load i32, i32* %i, align 4, !dbg !5386
  %idxprom = sext i32 %12 to i64, !dbg !5386
  %arrayidx = getelementptr inbounds i16, i16* %11, i64 %idxprom, !dbg !5386
  %13 = load i16, i16* %arrayidx, align 2, !dbg !5386
  %conv = zext i16 %13 to i32, !dbg !5386
  %and8 = and i32 %conv, 256, !dbg !5386
  %tobool9 = icmp ne i32 %and8, 0, !dbg !5386
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !5386

cond.true:                                        ; preds = %for.body
  %call10 = call i32** @__ctype_tolower_loc(), !dbg !5387
  %14 = load i32*, i32** %call10, align 8, !dbg !5387
  %15 = load i32, i32* %i, align 4, !dbg !5387
  %idxprom11 = sext i32 %15 to i64, !dbg !5387
  %arrayidx12 = getelementptr inbounds i32, i32* %14, i64 %idxprom11, !dbg !5387
  %16 = load i32, i32* %arrayidx12, align 4, !dbg !5387
  br label %cond.end, !dbg !5386

cond.false:                                       ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !5388
  br label %cond.end, !dbg !5386

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ %16, %cond.true ], [ %17, %cond.false ], !dbg !5386
  %conv14 = trunc i32 %cond13 to i8, !dbg !5386
  %18 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5389
  %translate15 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %18, i32 0, i32 5, !dbg !5390
  %19 = load i8*, i8** %translate15, align 8, !dbg !5390
  %20 = load i32, i32* %i, align 4, !dbg !5391
  %idxprom16 = sext i32 %20 to i64, !dbg !5389
  %arrayidx17 = getelementptr inbounds i8, i8* %19, i64 %idxprom16, !dbg !5389
  store i8 %conv14, i8* %arrayidx17, align 1, !dbg !5392
  br label %for.inc, !dbg !5389

for.inc:                                          ; preds = %cond.end
  %21 = load i32, i32* %i, align 4, !dbg !5393
  %inc = add nsw i32 %21, 1, !dbg !5393
  store i32 %inc, i32* %i, align 4, !dbg !5393
  br label %for.cond, !dbg !5394, !llvm.loop !5395

for.end:                                          ; preds = %for.cond
  br label %if.end19, !dbg !5397

if.else:                                          ; preds = %entry
  %22 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5398
  %translate18 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %22, i32 0, i32 5, !dbg !5399
  store i8* null, i8** %translate18, align 8, !dbg !5400
  br label %if.end19

if.end19:                                         ; preds = %if.else, %for.end
  %23 = load i32, i32* %cflags.addr, align 4, !dbg !5401
  %and20 = and i32 %23, 4, !dbg !5403
  %tobool21 = icmp ne i32 %and20, 0, !dbg !5403
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !5404

if.then22:                                        ; preds = %if.end19
  %24 = load i64, i64* %syntax, align 8, !dbg !5405
  %and23 = and i64 %24, -65, !dbg !5405
  store i64 %and23, i64* %syntax, align 8, !dbg !5405
  %25 = load i64, i64* %syntax, align 8, !dbg !5407
  %or = or i64 %25, 256, !dbg !5407
  store i64 %or, i64* %syntax, align 8, !dbg !5407
  %26 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5408
  %newline_anchor = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %26, i32 0, i32 7, !dbg !5409
  %bf.load = load i8, i8* %newline_anchor, align 8, !dbg !5410
  %bf.clear = and i8 %bf.load, 127, !dbg !5410
  %bf.set = or i8 %bf.clear, -128, !dbg !5410
  store i8 %bf.set, i8* %newline_anchor, align 8, !dbg !5410
  br label %if.end28, !dbg !5411

if.else24:                                        ; preds = %if.end19
  %27 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5412
  %newline_anchor25 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %27, i32 0, i32 7, !dbg !5413
  %bf.load26 = load i8, i8* %newline_anchor25, align 8, !dbg !5414
  %bf.clear27 = and i8 %bf.load26, 127, !dbg !5414
  store i8 %bf.clear27, i8* %newline_anchor25, align 8, !dbg !5414
  br label %if.end28

if.end28:                                         ; preds = %if.else24, %if.then22
  %28 = load i32, i32* %cflags.addr, align 4, !dbg !5415
  %and29 = and i32 %28, 8, !dbg !5416
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5417
  %lnot = xor i1 %tobool30, true, !dbg !5417
  %lnot31 = xor i1 %lnot, true, !dbg !5418
  %lnot.ext = zext i1 %lnot31 to i32, !dbg !5418
  %29 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5419
  %no_sub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %29, i32 0, i32 7, !dbg !5420
  %30 = trunc i32 %lnot.ext to i8, !dbg !5421
  %bf.load32 = load i8, i8* %no_sub, align 8, !dbg !5421
  %bf.value = and i8 %30, 1, !dbg !5421
  %bf.shl = shl i8 %bf.value, 4, !dbg !5421
  %bf.clear33 = and i8 %bf.load32, -17, !dbg !5421
  %bf.set34 = or i8 %bf.clear33, %bf.shl, !dbg !5421
  store i8 %bf.set34, i8* %no_sub, align 8, !dbg !5421
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !5421
  %31 = load i8*, i8** %pattern.addr, align 8, !dbg !5422
  %32 = load i8*, i8** %pattern.addr, align 8, !dbg !5423
  %call35 = call i64 @strlen(i8* %32), !dbg !5424
  %33 = load i64, i64* %syntax, align 8, !dbg !5425
  %34 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5426
  %call36 = call i32 @byte_regex_compile(i8* %31, i64 %call35, i64 %33, %struct.re_pattern_buffer* %34), !dbg !5427
  store i32 %call36, i32* %ret, align 4, !dbg !5428
  %35 = load i32, i32* %ret, align 4, !dbg !5429
  %cmp37 = icmp eq i32 %35, 16, !dbg !5431
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !5432

if.then39:                                        ; preds = %if.end28
  store i32 8, i32* %ret, align 4, !dbg !5433
  br label %if.end40, !dbg !5434

if.end40:                                         ; preds = %if.then39, %if.end28
  %36 = load i32, i32* %ret, align 4, !dbg !5435
  %cmp41 = icmp eq i32 %36, 0, !dbg !5437
  br i1 %cmp41, label %land.lhs.true, label %if.end53, !dbg !5438

land.lhs.true:                                    ; preds = %if.end40
  %37 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5439
  %fastmap43 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %37, i32 0, i32 4, !dbg !5440
  %38 = load i8*, i8** %fastmap43, align 8, !dbg !5440
  %tobool44 = icmp ne i8* %38, null, !dbg !5439
  br i1 %tobool44, label %if.then45, label %if.end53, !dbg !5441

if.then45:                                        ; preds = %land.lhs.true
  %39 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5442
  %call46 = call i32 @xre_compile_fastmap(%struct.re_pattern_buffer* %39), !dbg !5445
  %cmp47 = icmp eq i32 %call46, -2, !dbg !5446
  br i1 %cmp47, label %if.then49, label %if.end52, !dbg !5447

if.then49:                                        ; preds = %if.then45
  %40 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5448
  %fastmap50 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %40, i32 0, i32 4, !dbg !5450
  %41 = load i8*, i8** %fastmap50, align 8, !dbg !5450
  call void @free(i8* %41), !dbg !5451
  %42 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5452
  %fastmap51 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %42, i32 0, i32 4, !dbg !5453
  store i8* null, i8** %fastmap51, align 8, !dbg !5454
  br label %if.end52, !dbg !5455

if.end52:                                         ; preds = %if.then49, %if.then45
  br label %if.end53, !dbg !5456

if.end53:                                         ; preds = %if.end52, %land.lhs.true, %if.end40
  %43 = load i32, i32* %ret, align 4, !dbg !5457
  store i32 %43, i32* %retval, align 4, !dbg !5458
  br label %return, !dbg !5458

return:                                           ; preds = %if.end53, %if.then5
  %44 = load i32, i32* %retval, align 4, !dbg !5459
  ret i32 %44, !dbg !5459
}

declare dso_local i16** @__ctype_b_loc() #2

declare dso_local i32** @__ctype_tolower_loc() #2

declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @xregexec(%struct.re_pattern_buffer* %preg, i8* %string, i64 %nmatch, %struct.regmatch_t* %pmatch, i32 %eflags) #0 !dbg !5460 {
entry:
  %retval = alloca i32, align 4
  %preg.addr = alloca %struct.re_pattern_buffer*, align 8
  %string.addr = alloca i8*, align 8
  %nmatch.addr = alloca i64, align 8
  %pmatch.addr = alloca %struct.regmatch_t*, align 8
  %eflags.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %regs = alloca %struct.re_registers, align 8
  %private_preg = alloca %struct.re_pattern_buffer, align 8
  %len = alloca i32, align 4
  %want_reg_info = alloca i8, align 1
  %r = alloca i32, align 4
  store %struct.re_pattern_buffer* %preg, %struct.re_pattern_buffer** %preg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %preg.addr, metadata !5471, metadata !DIExpression()), !dbg !5472
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !5473, metadata !DIExpression()), !dbg !5474
  store i64 %nmatch, i64* %nmatch.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nmatch.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  store %struct.regmatch_t* %pmatch, %struct.regmatch_t** %pmatch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regmatch_t** %pmatch.addr, metadata !5477, metadata !DIExpression()), !dbg !5478
  store i32 %eflags, i32* %eflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eflags.addr, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5481, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.declare(metadata %struct.re_registers* %regs, metadata !5483, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer* %private_preg, metadata !5485, metadata !DIExpression()), !dbg !5486
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5487, metadata !DIExpression()), !dbg !5488
  %0 = load i8*, i8** %string.addr, align 8, !dbg !5489
  %call = call i64 @strlen(i8* %0), !dbg !5490
  %conv = trunc i64 %call to i32, !dbg !5490
  store i32 %conv, i32* %len, align 4, !dbg !5488
  call void @llvm.dbg.declare(metadata i8* %want_reg_info, metadata !5491, metadata !DIExpression()), !dbg !5492
  %1 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5493
  %no_sub = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %1, i32 0, i32 7, !dbg !5494
  %bf.load = load i8, i8* %no_sub, align 8, !dbg !5494
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !5494
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5494
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5494
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5493
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !5495

land.rhs:                                         ; preds = %entry
  %2 = load i64, i64* %nmatch.addr, align 8, !dbg !5496
  %cmp = icmp ugt i64 %2, 0, !dbg !5497
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !5498
  %land.ext = zext i1 %3 to i32, !dbg !5495
  %conv2 = trunc i32 %land.ext to i8, !dbg !5499
  store i8 %conv2, i8* %want_reg_info, align 1, !dbg !5492
  %4 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5500
  %5 = bitcast %struct.re_pattern_buffer* %private_preg to i8*, !dbg !5501
  %6 = bitcast %struct.re_pattern_buffer* %4 to i8*, !dbg !5501
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 64, i1 false), !dbg !5501
  %7 = load i32, i32* %eflags.addr, align 4, !dbg !5502
  %and = and i32 %7, 1, !dbg !5503
  %tobool3 = icmp ne i32 %and, 0, !dbg !5504
  %lnot = xor i1 %tobool3, true, !dbg !5504
  %lnot4 = xor i1 %lnot, true, !dbg !5505
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !5505
  %not_bol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %private_preg, i32 0, i32 7, !dbg !5506
  %8 = trunc i32 %lnot.ext to i8, !dbg !5507
  %bf.load5 = load i8, i8* %not_bol, align 8, !dbg !5507
  %bf.value = and i8 %8, 1, !dbg !5507
  %bf.shl = shl i8 %bf.value, 5, !dbg !5507
  %bf.clear6 = and i8 %bf.load5, -33, !dbg !5507
  %bf.set = or i8 %bf.clear6, %bf.shl, !dbg !5507
  store i8 %bf.set, i8* %not_bol, align 8, !dbg !5507
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !5507
  %9 = load i32, i32* %eflags.addr, align 4, !dbg !5508
  %and7 = and i32 %9, 2, !dbg !5509
  %tobool8 = icmp ne i32 %and7, 0, !dbg !5510
  %lnot9 = xor i1 %tobool8, true, !dbg !5510
  %lnot11 = xor i1 %lnot9, true, !dbg !5511
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !5511
  %not_eol = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %private_preg, i32 0, i32 7, !dbg !5512
  %10 = trunc i32 %lnot.ext12 to i8, !dbg !5513
  %bf.load13 = load i8, i8* %not_eol, align 8, !dbg !5513
  %bf.value14 = and i8 %10, 1, !dbg !5513
  %bf.shl15 = shl i8 %bf.value14, 6, !dbg !5513
  %bf.clear16 = and i8 %bf.load13, -65, !dbg !5513
  %bf.set17 = or i8 %bf.clear16, %bf.shl15, !dbg !5513
  store i8 %bf.set17, i8* %not_eol, align 8, !dbg !5513
  %bf.result.cast18 = zext i8 %bf.value14 to i32, !dbg !5513
  %regs_allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %private_preg, i32 0, i32 7, !dbg !5514
  %bf.load19 = load i8, i8* %regs_allocated, align 8, !dbg !5515
  %bf.clear20 = and i8 %bf.load19, -7, !dbg !5515
  %bf.set21 = or i8 %bf.clear20, 4, !dbg !5515
  store i8 %bf.set21, i8* %regs_allocated, align 8, !dbg !5515
  %11 = load i8, i8* %want_reg_info, align 1, !dbg !5516
  %tobool22 = icmp ne i8 %11, 0, !dbg !5516
  br i1 %tobool22, label %if.then, label %if.end31, !dbg !5518

if.then:                                          ; preds = %land.end
  %12 = load i64, i64* %nmatch.addr, align 8, !dbg !5519
  %conv23 = trunc i64 %12 to i32, !dbg !5519
  %num_regs = getelementptr inbounds %struct.re_registers, %struct.re_registers* %regs, i32 0, i32 0, !dbg !5521
  store i32 %conv23, i32* %num_regs, align 8, !dbg !5522
  %13 = load i64, i64* %nmatch.addr, align 8, !dbg !5523
  %mul = mul i64 %13, 2, !dbg !5523
  %mul24 = mul i64 %mul, 4, !dbg !5523
  %call25 = call i8* @malloc(i64 %mul24), !dbg !5523
  %14 = bitcast i8* %call25 to i32*, !dbg !5523
  %start = getelementptr inbounds %struct.re_registers, %struct.re_registers* %regs, i32 0, i32 1, !dbg !5524
  store i32* %14, i32** %start, align 8, !dbg !5525
  %start26 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %regs, i32 0, i32 1, !dbg !5526
  %15 = load i32*, i32** %start26, align 8, !dbg !5526
  %cmp27 = icmp eq i32* %15, null, !dbg !5528
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !5529

if.then29:                                        ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !5530
  br label %return, !dbg !5530

if.end:                                           ; preds = %if.then
  %start30 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %regs, i32 0, i32 1, !dbg !5531
  %16 = load i32*, i32** %start30, align 8, !dbg !5531
  %17 = load i64, i64* %nmatch.addr, align 8, !dbg !5532
  %add.ptr = getelementptr inbounds i32, i32* %16, i64 %17, !dbg !5533
  %end = getelementptr inbounds %struct.re_registers, %struct.re_registers* %regs, i32 0, i32 2, !dbg !5534
  store i32* %add.ptr, i32** %end, align 8, !dbg !5535
  br label %if.end31, !dbg !5536

if.end31:                                         ; preds = %if.end, %land.end
  %18 = load i8*, i8** %string.addr, align 8, !dbg !5537
  %19 = load i32, i32* %len, align 4, !dbg !5538
  %20 = load i32, i32* %len, align 4, !dbg !5539
  %21 = load i8, i8* %want_reg_info, align 1, !dbg !5540
  %conv32 = sext i8 %21 to i32, !dbg !5540
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !5540
  br i1 %tobool33, label %cond.true, label %cond.false, !dbg !5540

cond.true:                                        ; preds = %if.end31
  br label %cond.end, !dbg !5540

cond.false:                                       ; preds = %if.end31
  br label %cond.end, !dbg !5540

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.re_registers* [ %regs, %cond.true ], [ null, %cond.false ], !dbg !5540
  %call34 = call i32 @xre_search(%struct.re_pattern_buffer* %private_preg, i8* %18, i32 %19, i32 0, i32 %20, %struct.re_registers* %cond), !dbg !5541
  store i32 %call34, i32* %ret, align 4, !dbg !5542
  %22 = load i8, i8* %want_reg_info, align 1, !dbg !5543
  %tobool35 = icmp ne i8 %22, 0, !dbg !5543
  br i1 %tobool35, label %if.then36, label %if.end53, !dbg !5545

if.then36:                                        ; preds = %cond.end
  %23 = load i32, i32* %ret, align 4, !dbg !5546
  %cmp37 = icmp sge i32 %23, 0, !dbg !5549
  br i1 %cmp37, label %if.then39, label %if.end51, !dbg !5550

if.then39:                                        ; preds = %if.then36
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5551, metadata !DIExpression()), !dbg !5553
  store i32 0, i32* %r, align 4, !dbg !5554
  br label %for.cond, !dbg !5556

for.cond:                                         ; preds = %for.inc, %if.then39
  %24 = load i32, i32* %r, align 4, !dbg !5557
  %conv40 = zext i32 %24 to i64, !dbg !5557
  %25 = load i64, i64* %nmatch.addr, align 8, !dbg !5559
  %cmp41 = icmp ult i64 %conv40, %25, !dbg !5560
  br i1 %cmp41, label %for.body, label %for.end, !dbg !5561

for.body:                                         ; preds = %for.cond
  %start43 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %regs, i32 0, i32 1, !dbg !5562
  %26 = load i32*, i32** %start43, align 8, !dbg !5562
  %27 = load i32, i32* %r, align 4, !dbg !5564
  %idxprom = zext i32 %27 to i64, !dbg !5565
  %arrayidx = getelementptr inbounds i32, i32* %26, i64 %idxprom, !dbg !5565
  %28 = load i32, i32* %arrayidx, align 4, !dbg !5565
  %29 = load %struct.regmatch_t*, %struct.regmatch_t** %pmatch.addr, align 8, !dbg !5566
  %30 = load i32, i32* %r, align 4, !dbg !5567
  %idxprom44 = zext i32 %30 to i64, !dbg !5566
  %arrayidx45 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %29, i64 %idxprom44, !dbg !5566
  %rm_so = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %arrayidx45, i32 0, i32 0, !dbg !5568
  store i32 %28, i32* %rm_so, align 4, !dbg !5569
  %end46 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %regs, i32 0, i32 2, !dbg !5570
  %31 = load i32*, i32** %end46, align 8, !dbg !5570
  %32 = load i32, i32* %r, align 4, !dbg !5571
  %idxprom47 = zext i32 %32 to i64, !dbg !5572
  %arrayidx48 = getelementptr inbounds i32, i32* %31, i64 %idxprom47, !dbg !5572
  %33 = load i32, i32* %arrayidx48, align 4, !dbg !5572
  %34 = load %struct.regmatch_t*, %struct.regmatch_t** %pmatch.addr, align 8, !dbg !5573
  %35 = load i32, i32* %r, align 4, !dbg !5574
  %idxprom49 = zext i32 %35 to i64, !dbg !5573
  %arrayidx50 = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %34, i64 %idxprom49, !dbg !5573
  %rm_eo = getelementptr inbounds %struct.regmatch_t, %struct.regmatch_t* %arrayidx50, i32 0, i32 1, !dbg !5575
  store i32 %33, i32* %rm_eo, align 4, !dbg !5576
  br label %for.inc, !dbg !5577

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %r, align 4, !dbg !5578
  %inc = add i32 %36, 1, !dbg !5578
  store i32 %inc, i32* %r, align 4, !dbg !5578
  br label %for.cond, !dbg !5579, !llvm.loop !5580

for.end:                                          ; preds = %for.cond
  br label %if.end51, !dbg !5582

if.end51:                                         ; preds = %for.end, %if.then36
  %start52 = getelementptr inbounds %struct.re_registers, %struct.re_registers* %regs, i32 0, i32 1, !dbg !5583
  %37 = load i32*, i32** %start52, align 8, !dbg !5583
  %38 = bitcast i32* %37 to i8*, !dbg !5584
  call void @free(i8* %38), !dbg !5585
  br label %if.end53, !dbg !5586

if.end53:                                         ; preds = %if.end51, %cond.end
  %39 = load i32, i32* %ret, align 4, !dbg !5587
  %cmp54 = icmp sge i32 %39, 0, !dbg !5588
  %40 = zext i1 %cmp54 to i64, !dbg !5587
  %cond56 = select i1 %cmp54, i32 0, i32 1, !dbg !5587
  store i32 %cond56, i32* %retval, align 4, !dbg !5589
  br label %return, !dbg !5589

return:                                           ; preds = %if.end53, %if.then29
  %41 = load i32, i32* %retval, align 4, !dbg !5590
  ret i32 %41, !dbg !5590
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @xregerror(i32 %errcode, %struct.re_pattern_buffer* %preg, i8* %errbuf, i64 %errbuf_size) #0 !dbg !5591 {
entry:
  %errcode.addr = alloca i32, align 4
  %preg.addr = alloca %struct.re_pattern_buffer*, align 8
  %errbuf.addr = alloca i8*, align 8
  %errbuf_size.addr = alloca i64, align 8
  %msg = alloca i8*, align 8
  %msg_size = alloca i64, align 8
  store i32 %errcode, i32* %errcode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errcode.addr, metadata !5594, metadata !DIExpression()), !dbg !5595
  store %struct.re_pattern_buffer* %preg, %struct.re_pattern_buffer** %preg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %preg.addr, metadata !5596, metadata !DIExpression()), !dbg !5597
  store i8* %errbuf, i8** %errbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %errbuf.addr, metadata !5598, metadata !DIExpression()), !dbg !5599
  store i64 %errbuf_size, i64* %errbuf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %errbuf_size.addr, metadata !5600, metadata !DIExpression()), !dbg !5601
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !5602, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.declare(metadata i64* %msg_size, metadata !5604, metadata !DIExpression()), !dbg !5605
  %0 = load i32, i32* %errcode.addr, align 4, !dbg !5606
  %cmp = icmp slt i32 %0, 0, !dbg !5608
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5609

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %errcode.addr, align 4, !dbg !5610
  %cmp1 = icmp sge i32 %1, 17, !dbg !5611
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5612

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @abort() #5, !dbg !5613
  unreachable, !dbg !5613

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %errcode.addr, align 4, !dbg !5614
  %idxprom = sext i32 %2 to i64, !dbg !5614
  %arrayidx = getelementptr inbounds [17 x i8*], [17 x i8*]* @re_error_msgid, i64 0, i64 %idxprom, !dbg !5614
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !5614
  store i8* %3, i8** %msg, align 8, !dbg !5615
  %4 = load i8*, i8** %msg, align 8, !dbg !5616
  %call = call i64 @strlen(i8* %4), !dbg !5617
  %add = add i64 %call, 1, !dbg !5618
  store i64 %add, i64* %msg_size, align 8, !dbg !5619
  %5 = load i64, i64* %errbuf_size.addr, align 8, !dbg !5620
  %cmp2 = icmp ne i64 %5, 0, !dbg !5622
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !5623

if.then3:                                         ; preds = %if.end
  %6 = load i64, i64* %msg_size, align 8, !dbg !5624
  %7 = load i64, i64* %errbuf_size.addr, align 8, !dbg !5627
  %cmp4 = icmp ugt i64 %6, %7, !dbg !5628
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !5629

if.then5:                                         ; preds = %if.then3
  %8 = load i8*, i8** %errbuf.addr, align 8, !dbg !5630
  %9 = load i8*, i8** %msg, align 8, !dbg !5632
  %10 = load i64, i64* %errbuf_size.addr, align 8, !dbg !5633
  %sub = sub i64 %10, 1, !dbg !5634
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 %sub, i1 false), !dbg !5635
  %11 = load i8*, i8** %errbuf.addr, align 8, !dbg !5636
  %12 = load i64, i64* %errbuf_size.addr, align 8, !dbg !5637
  %sub6 = sub i64 %12, 1, !dbg !5638
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 %sub6, !dbg !5636
  store i8 0, i8* %arrayidx7, align 1, !dbg !5639
  br label %if.end8, !dbg !5640

if.else:                                          ; preds = %if.then3
  %13 = load i8*, i8** %errbuf.addr, align 8, !dbg !5641
  %14 = load i8*, i8** %msg, align 8, !dbg !5642
  %15 = load i64, i64* %msg_size, align 8, !dbg !5643
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 %15, i1 false), !dbg !5644
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then5
  br label %if.end9, !dbg !5645

if.end9:                                          ; preds = %if.end8, %if.end
  %16 = load i64, i64* %msg_size, align 8, !dbg !5646
  ret i64 %16, !dbg !5647
}

; Function Attrs: noreturn
declare dso_local void @abort() #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @xregfree(%struct.re_pattern_buffer* %preg) #0 !dbg !5648 {
entry:
  %preg.addr = alloca %struct.re_pattern_buffer*, align 8
  store %struct.re_pattern_buffer* %preg, %struct.re_pattern_buffer** %preg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.re_pattern_buffer** %preg.addr, metadata !5651, metadata !DIExpression()), !dbg !5652
  %0 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5653
  %buffer = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %0, i32 0, i32 0, !dbg !5655
  %1 = load i8*, i8** %buffer, align 8, !dbg !5655
  %cmp = icmp ne i8* %1, null, !dbg !5656
  br i1 %cmp, label %if.then, label %if.end, !dbg !5657

if.then:                                          ; preds = %entry
  %2 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5658
  %buffer1 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %2, i32 0, i32 0, !dbg !5659
  %3 = load i8*, i8** %buffer1, align 8, !dbg !5659
  call void @free(i8* %3), !dbg !5660
  br label %if.end, !dbg !5660

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5661
  %buffer2 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %4, i32 0, i32 0, !dbg !5662
  store i8* null, i8** %buffer2, align 8, !dbg !5663
  %5 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5664
  %allocated = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %5, i32 0, i32 1, !dbg !5665
  store i64 0, i64* %allocated, align 8, !dbg !5666
  %6 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5667
  %used = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %6, i32 0, i32 2, !dbg !5668
  store i64 0, i64* %used, align 8, !dbg !5669
  %7 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5670
  %fastmap = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %7, i32 0, i32 4, !dbg !5672
  %8 = load i8*, i8** %fastmap, align 8, !dbg !5672
  %cmp3 = icmp ne i8* %8, null, !dbg !5673
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !5674

if.then4:                                         ; preds = %if.end
  %9 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5675
  %fastmap5 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %9, i32 0, i32 4, !dbg !5676
  %10 = load i8*, i8** %fastmap5, align 8, !dbg !5676
  call void @free(i8* %10), !dbg !5677
  br label %if.end6, !dbg !5677

if.end6:                                          ; preds = %if.then4, %if.end
  %11 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5678
  %fastmap7 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %11, i32 0, i32 4, !dbg !5679
  store i8* null, i8** %fastmap7, align 8, !dbg !5680
  %12 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5681
  %fastmap_accurate = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %12, i32 0, i32 7, !dbg !5682
  %bf.load = load i8, i8* %fastmap_accurate, align 8, !dbg !5683
  %bf.clear = and i8 %bf.load, -9, !dbg !5683
  store i8 %bf.clear, i8* %fastmap_accurate, align 8, !dbg !5683
  %13 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5684
  %translate = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %13, i32 0, i32 5, !dbg !5686
  %14 = load i8*, i8** %translate, align 8, !dbg !5686
  %cmp8 = icmp ne i8* %14, null, !dbg !5687
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !5688

if.then9:                                         ; preds = %if.end6
  %15 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5689
  %translate10 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %15, i32 0, i32 5, !dbg !5690
  %16 = load i8*, i8** %translate10, align 8, !dbg !5690
  call void @free(i8* %16), !dbg !5691
  br label %if.end11, !dbg !5691

if.end11:                                         ; preds = %if.then9, %if.end6
  %17 = load %struct.re_pattern_buffer*, %struct.re_pattern_buffer** %preg.addr, align 8, !dbg !5692
  %translate12 = getelementptr inbounds %struct.re_pattern_buffer, %struct.re_pattern_buffer* %17, i32 0, i32 5, !dbg !5693
  store i8* null, i8** %translate12, align 8, !dbg !5694
  ret void, !dbg !5695
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @byte_group_match_null_string_p(i8** %p, i8* %end, %union.byte_register_info_type* %reg_info) #0 !dbg !5696 {
entry:
  %retval = alloca i8, align 1
  %p.addr = alloca i8**, align 8
  %end.addr = alloca i8*, align 8
  %reg_info.addr = alloca %union.byte_register_info_type*, align 8
  %mcnt = alloca i32, align 4
  %p1 = alloca i8*, align 8
  store i8** %p, i8*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %p.addr, metadata !5700, metadata !DIExpression()), !dbg !5701
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !5702, metadata !DIExpression()), !dbg !5703
  store %union.byte_register_info_type* %reg_info, %union.byte_register_info_type** %reg_info.addr, align 8
  call void @llvm.dbg.declare(metadata %union.byte_register_info_type** %reg_info.addr, metadata !5704, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.declare(metadata i32* %mcnt, metadata !5706, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !5708, metadata !DIExpression()), !dbg !5709
  %0 = load i8**, i8*** %p.addr, align 8, !dbg !5710
  %1 = load i8*, i8** %0, align 8, !dbg !5711
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 2, !dbg !5712
  store i8* %add.ptr, i8** %p1, align 8, !dbg !5709
  br label %while.cond, !dbg !5713

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i8*, i8** %p1, align 8, !dbg !5714
  %3 = load i8*, i8** %end.addr, align 8, !dbg !5715
  %cmp = icmp ult i8* %2, %3, !dbg !5716
  br i1 %cmp, label %while.body, label %while.end70, !dbg !5713

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %p1, align 8, !dbg !5717
  %5 = load i8, i8* %4, align 1, !dbg !5719
  %conv = zext i8 %5 to i32, !dbg !5720
  switch i32 %conv, label %sw.default [
    i32 15, label %sw.bb
    i32 7, label %sw.bb64
  ], !dbg !5721

sw.bb:                                            ; preds = %while.body
  %6 = load i8*, i8** %p1, align 8, !dbg !5722
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5722
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !5722
  br label %do.body, !dbg !5724

do.body:                                          ; preds = %sw.bb
  br label %do.body1, !dbg !5725

do.body1:                                         ; preds = %do.body
  %7 = load i8*, i8** %p1, align 8, !dbg !5727
  %8 = load i8, i8* %7, align 1, !dbg !5727
  %conv2 = zext i8 %8 to i32, !dbg !5727
  %and = and i32 %conv2, 255, !dbg !5727
  store i32 %and, i32* %mcnt, align 4, !dbg !5727
  %9 = load i8*, i8** %p1, align 8, !dbg !5727
  %add.ptr3 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !5727
  %10 = load i8, i8* %add.ptr3, align 1, !dbg !5727
  %conv4 = sext i8 %10 to i32, !dbg !5727
  %shl = shl i32 %conv4, 8, !dbg !5727
  %11 = load i32, i32* %mcnt, align 4, !dbg !5727
  %add = add nsw i32 %11, %shl, !dbg !5727
  store i32 %add, i32* %mcnt, align 4, !dbg !5727
  br label %do.end, !dbg !5727

do.end:                                           ; preds = %do.body1
  %12 = load i8*, i8** %p1, align 8, !dbg !5725
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !5725
  store i8* %add.ptr5, i8** %p1, align 8, !dbg !5725
  br label %do.end6, !dbg !5725

do.end6:                                          ; preds = %do.end
  %13 = load i32, i32* %mcnt, align 4, !dbg !5729
  %cmp7 = icmp sge i32 %13, 0, !dbg !5731
  br i1 %cmp7, label %if.then, label %if.end63, !dbg !5732

if.then:                                          ; preds = %do.end6
  br label %while.cond9, !dbg !5733

while.cond9:                                      ; preds = %if.end44, %if.then
  %14 = load i8*, i8** %p1, align 8, !dbg !5735
  %15 = load i32, i32* %mcnt, align 4, !dbg !5736
  %sub = sub nsw i32 %15, 3, !dbg !5737
  %idxprom = sext i32 %sub to i64, !dbg !5735
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 %idxprom, !dbg !5735
  %16 = load i8, i8* %arrayidx, align 1, !dbg !5735
  %conv10 = zext i8 %16 to i32, !dbg !5738
  %cmp11 = icmp eq i32 %conv10, 14, !dbg !5739
  br i1 %cmp11, label %while.body13, label %while.end, !dbg !5733

while.body13:                                     ; preds = %while.cond9
  %17 = load i8*, i8** %p1, align 8, !dbg !5740
  %18 = load i8*, i8** %p1, align 8, !dbg !5743
  %19 = load i32, i32* %mcnt, align 4, !dbg !5744
  %idx.ext = sext i32 %19 to i64, !dbg !5745
  %add.ptr14 = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !5745
  %add.ptr15 = getelementptr inbounds i8, i8* %add.ptr14, i64 -3, !dbg !5746
  %20 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info.addr, align 8, !dbg !5747
  %call = call signext i8 @byte_alt_match_null_string_p(i8* %17, i8* %add.ptr15, %union.byte_register_info_type* %20), !dbg !5748
  %tobool = icmp ne i8 %call, 0, !dbg !5748
  br i1 %tobool, label %if.end, label %if.then16, !dbg !5749

if.then16:                                        ; preds = %while.body13
  store i8 0, i8* %retval, align 1, !dbg !5750
  br label %return, !dbg !5750

if.end:                                           ; preds = %while.body13
  %21 = load i32, i32* %mcnt, align 4, !dbg !5751
  %22 = load i8*, i8** %p1, align 8, !dbg !5752
  %idx.ext17 = sext i32 %21 to i64, !dbg !5752
  %add.ptr18 = getelementptr inbounds i8, i8* %22, i64 %idx.ext17, !dbg !5752
  store i8* %add.ptr18, i8** %p1, align 8, !dbg !5752
  %23 = load i8*, i8** %p1, align 8, !dbg !5753
  %24 = load i8, i8* %23, align 1, !dbg !5755
  %conv19 = zext i8 %24 to i32, !dbg !5756
  %cmp20 = icmp ne i32 %conv19, 15, !dbg !5757
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !5758

if.then22:                                        ; preds = %if.end
  br label %while.end, !dbg !5759

if.end23:                                         ; preds = %if.end
  %25 = load i8*, i8** %p1, align 8, !dbg !5760
  %incdec.ptr24 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !5760
  store i8* %incdec.ptr24, i8** %p1, align 8, !dbg !5760
  br label %do.body25, !dbg !5761

do.body25:                                        ; preds = %if.end23
  br label %do.body26, !dbg !5762

do.body26:                                        ; preds = %do.body25
  %26 = load i8*, i8** %p1, align 8, !dbg !5764
  %27 = load i8, i8* %26, align 1, !dbg !5764
  %conv27 = zext i8 %27 to i32, !dbg !5764
  %and28 = and i32 %conv27, 255, !dbg !5764
  store i32 %and28, i32* %mcnt, align 4, !dbg !5764
  %28 = load i8*, i8** %p1, align 8, !dbg !5764
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !5764
  %29 = load i8, i8* %add.ptr29, align 1, !dbg !5764
  %conv30 = sext i8 %29 to i32, !dbg !5764
  %shl31 = shl i32 %conv30, 8, !dbg !5764
  %30 = load i32, i32* %mcnt, align 4, !dbg !5764
  %add32 = add nsw i32 %30, %shl31, !dbg !5764
  store i32 %add32, i32* %mcnt, align 4, !dbg !5764
  br label %do.end33, !dbg !5764

do.end33:                                         ; preds = %do.body26
  %31 = load i8*, i8** %p1, align 8, !dbg !5762
  %add.ptr34 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !5762
  store i8* %add.ptr34, i8** %p1, align 8, !dbg !5762
  br label %do.end35, !dbg !5762

do.end35:                                         ; preds = %do.end33
  %32 = load i8*, i8** %p1, align 8, !dbg !5766
  %33 = load i32, i32* %mcnt, align 4, !dbg !5768
  %sub36 = sub nsw i32 %33, 3, !dbg !5769
  %idxprom37 = sext i32 %sub36 to i64, !dbg !5766
  %arrayidx38 = getelementptr inbounds i8, i8* %32, i64 %idxprom37, !dbg !5766
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !5766
  %conv39 = zext i8 %34 to i32, !dbg !5770
  %cmp40 = icmp ne i32 %conv39, 14, !dbg !5771
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !5772

if.then42:                                        ; preds = %do.end35
  %35 = load i8*, i8** %p1, align 8, !dbg !5773
  %add.ptr43 = getelementptr inbounds i8, i8* %35, i64 -3, !dbg !5773
  store i8* %add.ptr43, i8** %p1, align 8, !dbg !5773
  br label %while.end, !dbg !5775

if.end44:                                         ; preds = %do.end35
  br label %while.cond9, !dbg !5733, !llvm.loop !5776

while.end:                                        ; preds = %if.then42, %if.then22, %while.cond9
  br label %do.body45, !dbg !5778

do.body45:                                        ; preds = %while.end
  %36 = load i8*, i8** %p1, align 8, !dbg !5779
  %add.ptr46 = getelementptr inbounds i8, i8* %36, i64 -2, !dbg !5779
  %37 = load i8, i8* %add.ptr46, align 1, !dbg !5779
  %conv47 = zext i8 %37 to i32, !dbg !5779
  %and48 = and i32 %conv47, 255, !dbg !5779
  store i32 %and48, i32* %mcnt, align 4, !dbg !5779
  %38 = load i8*, i8** %p1, align 8, !dbg !5779
  %add.ptr49 = getelementptr inbounds i8, i8* %38, i64 -2, !dbg !5779
  %add.ptr50 = getelementptr inbounds i8, i8* %add.ptr49, i64 1, !dbg !5779
  %39 = load i8, i8* %add.ptr50, align 1, !dbg !5779
  %conv51 = sext i8 %39 to i32, !dbg !5779
  %shl52 = shl i32 %conv51, 8, !dbg !5779
  %40 = load i32, i32* %mcnt, align 4, !dbg !5779
  %add53 = add nsw i32 %40, %shl52, !dbg !5779
  store i32 %add53, i32* %mcnt, align 4, !dbg !5779
  br label %do.end54, !dbg !5779

do.end54:                                         ; preds = %do.body45
  %41 = load i8*, i8** %p1, align 8, !dbg !5781
  %42 = load i8*, i8** %p1, align 8, !dbg !5783
  %43 = load i32, i32* %mcnt, align 4, !dbg !5784
  %idx.ext55 = sext i32 %43 to i64, !dbg !5785
  %add.ptr56 = getelementptr inbounds i8, i8* %42, i64 %idx.ext55, !dbg !5785
  %44 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info.addr, align 8, !dbg !5786
  %call57 = call signext i8 @byte_alt_match_null_string_p(i8* %41, i8* %add.ptr56, %union.byte_register_info_type* %44), !dbg !5787
  %tobool58 = icmp ne i8 %call57, 0, !dbg !5787
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !5788

if.then59:                                        ; preds = %do.end54
  store i8 0, i8* %retval, align 1, !dbg !5789
  br label %return, !dbg !5789

if.end60:                                         ; preds = %do.end54
  %45 = load i32, i32* %mcnt, align 4, !dbg !5790
  %46 = load i8*, i8** %p1, align 8, !dbg !5791
  %idx.ext61 = sext i32 %45 to i64, !dbg !5791
  %add.ptr62 = getelementptr inbounds i8, i8* %46, i64 %idx.ext61, !dbg !5791
  store i8* %add.ptr62, i8** %p1, align 8, !dbg !5791
  br label %if.end63, !dbg !5792

if.end63:                                         ; preds = %if.end60, %do.end6
  br label %sw.epilog, !dbg !5793

sw.bb64:                                          ; preds = %while.body
  %47 = load i8*, i8** %p1, align 8, !dbg !5794
  %add.ptr65 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !5795
  %48 = load i8**, i8*** %p.addr, align 8, !dbg !5796
  store i8* %add.ptr65, i8** %48, align 8, !dbg !5797
  store i8 1, i8* %retval, align 1, !dbg !5798
  br label %return, !dbg !5798

sw.default:                                       ; preds = %while.body
  %49 = load i8*, i8** %end.addr, align 8, !dbg !5799
  %50 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info.addr, align 8, !dbg !5801
  %call66 = call signext i8 @byte_common_op_match_null_string_p(i8** %p1, i8* %49, %union.byte_register_info_type* %50), !dbg !5802
  %tobool67 = icmp ne i8 %call66, 0, !dbg !5802
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !5803

if.then68:                                        ; preds = %sw.default
  store i8 0, i8* %retval, align 1, !dbg !5804
  br label %return, !dbg !5804

if.end69:                                         ; preds = %sw.default
  br label %sw.epilog, !dbg !5805

sw.epilog:                                        ; preds = %if.end69, %if.end63
  br label %while.cond, !dbg !5713, !llvm.loop !5806

while.end70:                                      ; preds = %while.cond
  store i8 0, i8* %retval, align 1, !dbg !5808
  br label %return, !dbg !5808

return:                                           ; preds = %while.end70, %if.then68, %sw.bb64, %if.then59, %if.then16
  %51 = load i8, i8* %retval, align 1, !dbg !5809
  ret i8 %51, !dbg !5809
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @byte_bcmp_translate(i8* %s1, i8* %s2, i32 %len, i8* %translate) #0 !dbg !5810 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %translate.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8
  %p2 = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !5815, metadata !DIExpression()), !dbg !5816
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !5817, metadata !DIExpression()), !dbg !5818
  store i8* %translate, i8** %translate.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %translate.addr, metadata !5819, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !5821, metadata !DIExpression()), !dbg !5822
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !5823
  store i8* %0, i8** %p1, align 8, !dbg !5822
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !5824, metadata !DIExpression()), !dbg !5825
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !5826
  store i8* %1, i8** %p2, align 8, !dbg !5825
  br label %while.cond, !dbg !5827

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i32, i32* %len.addr, align 4, !dbg !5828
  %tobool = icmp ne i32 %2, 0, !dbg !5827
  br i1 %tobool, label %while.body, label %while.end, !dbg !5827

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %translate.addr, align 8, !dbg !5829
  %4 = load i8*, i8** %p1, align 8, !dbg !5832
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !5832
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !5832
  %5 = load i8, i8* %4, align 1, !dbg !5833
  %idxprom = zext i8 %5 to i64, !dbg !5829
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !5829
  %6 = load i8, i8* %arrayidx, align 1, !dbg !5829
  %conv = sext i8 %6 to i32, !dbg !5829
  %7 = load i8*, i8** %translate.addr, align 8, !dbg !5834
  %8 = load i8*, i8** %p2, align 8, !dbg !5835
  %incdec.ptr1 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5835
  store i8* %incdec.ptr1, i8** %p2, align 8, !dbg !5835
  %9 = load i8, i8* %8, align 1, !dbg !5836
  %idxprom2 = zext i8 %9 to i64, !dbg !5834
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i64 %idxprom2, !dbg !5834
  %10 = load i8, i8* %arrayidx3, align 1, !dbg !5834
  %conv4 = sext i8 %10 to i32, !dbg !5834
  %cmp = icmp ne i32 %conv, %conv4, !dbg !5837
  br i1 %cmp, label %if.then, label %if.end, !dbg !5838

if.then:                                          ; preds = %while.body
  store i32 1, i32* %retval, align 4, !dbg !5839
  br label %return, !dbg !5839

if.end:                                           ; preds = %while.body
  %11 = load i32, i32* %len.addr, align 4, !dbg !5840
  %dec = add nsw i32 %11, -1, !dbg !5840
  store i32 %dec, i32* %len.addr, align 4, !dbg !5840
  br label %while.cond, !dbg !5827, !llvm.loop !5841

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !5843
  br label %return, !dbg !5843

return:                                           ; preds = %while.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !5844
  ret i32 %12, !dbg !5844
}

declare dso_local i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @byte_alt_match_null_string_p(i8* %p, i8* %end, %union.byte_register_info_type* %reg_info) #0 !dbg !5845 {
entry:
  %retval = alloca i8, align 1
  %p.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %reg_info.addr = alloca %union.byte_register_info_type*, align 8
  %mcnt = alloca i32, align 4
  %p1 = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5848, metadata !DIExpression()), !dbg !5849
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !5850, metadata !DIExpression()), !dbg !5851
  store %union.byte_register_info_type* %reg_info, %union.byte_register_info_type** %reg_info.addr, align 8
  call void @llvm.dbg.declare(metadata %union.byte_register_info_type** %reg_info.addr, metadata !5852, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.declare(metadata i32* %mcnt, metadata !5854, metadata !DIExpression()), !dbg !5855
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !5856, metadata !DIExpression()), !dbg !5857
  %0 = load i8*, i8** %p.addr, align 8, !dbg !5858
  store i8* %0, i8** %p1, align 8, !dbg !5857
  br label %while.cond, !dbg !5859

while.cond:                                       ; preds = %sw.epilog, %entry
  %1 = load i8*, i8** %p1, align 8, !dbg !5860
  %2 = load i8*, i8** %end.addr, align 8, !dbg !5861
  %cmp = icmp ult i8* %1, %2, !dbg !5862
  br i1 %cmp, label %while.body, label %while.end, !dbg !5859

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p1, align 8, !dbg !5863
  %4 = load i8, i8* %3, align 1, !dbg !5865
  %conv = zext i8 %4 to i32, !dbg !5866
  switch i32 %conv, label %sw.default [
    i32 15, label %sw.bb
  ], !dbg !5867

sw.bb:                                            ; preds = %while.body
  %5 = load i8*, i8** %p1, align 8, !dbg !5868
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5868
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !5868
  br label %do.body, !dbg !5870

do.body:                                          ; preds = %sw.bb
  br label %do.body1, !dbg !5871

do.body1:                                         ; preds = %do.body
  %6 = load i8*, i8** %p1, align 8, !dbg !5873
  %7 = load i8, i8* %6, align 1, !dbg !5873
  %conv2 = zext i8 %7 to i32, !dbg !5873
  %and = and i32 %conv2, 255, !dbg !5873
  store i32 %and, i32* %mcnt, align 4, !dbg !5873
  %8 = load i8*, i8** %p1, align 8, !dbg !5873
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 1, !dbg !5873
  %9 = load i8, i8* %add.ptr, align 1, !dbg !5873
  %conv3 = sext i8 %9 to i32, !dbg !5873
  %shl = shl i32 %conv3, 8, !dbg !5873
  %10 = load i32, i32* %mcnt, align 4, !dbg !5873
  %add = add nsw i32 %10, %shl, !dbg !5873
  store i32 %add, i32* %mcnt, align 4, !dbg !5873
  br label %do.end, !dbg !5873

do.end:                                           ; preds = %do.body1
  %11 = load i8*, i8** %p1, align 8, !dbg !5871
  %add.ptr4 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !5871
  store i8* %add.ptr4, i8** %p1, align 8, !dbg !5871
  br label %do.end5, !dbg !5871

do.end5:                                          ; preds = %do.end
  %12 = load i32, i32* %mcnt, align 4, !dbg !5875
  %13 = load i8*, i8** %p1, align 8, !dbg !5876
  %idx.ext = sext i32 %12 to i64, !dbg !5876
  %add.ptr6 = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !5876
  store i8* %add.ptr6, i8** %p1, align 8, !dbg !5876
  br label %sw.epilog, !dbg !5877

sw.default:                                       ; preds = %while.body
  %14 = load i8*, i8** %end.addr, align 8, !dbg !5878
  %15 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info.addr, align 8, !dbg !5880
  %call = call signext i8 @byte_common_op_match_null_string_p(i8** %p1, i8* %14, %union.byte_register_info_type* %15), !dbg !5881
  %tobool = icmp ne i8 %call, 0, !dbg !5881
  br i1 %tobool, label %if.end, label %if.then, !dbg !5882

if.then:                                          ; preds = %sw.default
  store i8 0, i8* %retval, align 1, !dbg !5883
  br label %return, !dbg !5883

if.end:                                           ; preds = %sw.default
  br label %sw.epilog, !dbg !5884

sw.epilog:                                        ; preds = %if.end, %do.end5
  br label %while.cond, !dbg !5859, !llvm.loop !5885

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !5887
  br label %return, !dbg !5887

return:                                           ; preds = %while.end, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !5888
  ret i8 %16, !dbg !5888
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @byte_common_op_match_null_string_p(i8** %p, i8* %end, %union.byte_register_info_type* %reg_info) #0 !dbg !5889 {
entry:
  %retval = alloca i8, align 1
  %p.addr = alloca i8**, align 8
  %end.addr = alloca i8*, align 8
  %reg_info.addr = alloca %union.byte_register_info_type*, align 8
  %mcnt = alloca i32, align 4
  %ret = alloca i8, align 1
  %reg_no = alloca i32, align 4
  %p1 = alloca i8*, align 8
  store i8** %p, i8*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %p.addr, metadata !5890, metadata !DIExpression()), !dbg !5891
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !5892, metadata !DIExpression()), !dbg !5893
  store %union.byte_register_info_type* %reg_info, %union.byte_register_info_type** %reg_info.addr, align 8
  call void @llvm.dbg.declare(metadata %union.byte_register_info_type** %reg_info.addr, metadata !5894, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.declare(metadata i32* %mcnt, metadata !5896, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !5898, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.declare(metadata i32* %reg_no, metadata !5900, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !5902, metadata !DIExpression()), !dbg !5903
  %0 = load i8**, i8*** %p.addr, align 8, !dbg !5904
  %1 = load i8*, i8** %0, align 8, !dbg !5905
  store i8* %1, i8** %p1, align 8, !dbg !5903
  %2 = load i8*, i8** %p1, align 8, !dbg !5906
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !5906
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !5906
  %3 = load i8, i8* %2, align 1, !dbg !5907
  %conv = zext i8 %3 to i32, !dbg !5908
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 6, label %sw.bb1
    i32 13, label %sw.bb12
    i32 21, label %sw.bb23
    i32 8, label %sw.bb55
    i32 23, label %sw.bb65
  ], !dbg !5909

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !5910

sw.bb1:                                           ; preds = %entry
  %4 = load i8*, i8** %p1, align 8, !dbg !5912
  %5 = load i8, i8* %4, align 1, !dbg !5913
  %conv2 = zext i8 %5 to i32, !dbg !5913
  store i32 %conv2, i32* %reg_no, align 4, !dbg !5914
  %6 = load i8*, i8** %end.addr, align 8, !dbg !5915
  %7 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info.addr, align 8, !dbg !5916
  %call = call signext i8 @byte_group_match_null_string_p(i8** %p1, i8* %6, %union.byte_register_info_type* %7), !dbg !5917
  store i8 %call, i8* %ret, align 1, !dbg !5918
  %8 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info.addr, align 8, !dbg !5919
  %9 = load i32, i32* %reg_no, align 4, !dbg !5919
  %idxprom = sext i32 %9 to i64, !dbg !5919
  %arrayidx = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %8, i64 %idxprom, !dbg !5919
  %bits = bitcast %union.byte_register_info_type* %arrayidx to %struct.anon*, !dbg !5919
  %10 = bitcast %struct.anon* %bits to i8*, !dbg !5919
  %bf.load = load i8, i8* %10, align 8, !dbg !5919
  %bf.clear = and i8 %bf.load, 3, !dbg !5919
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5919
  %cmp = icmp eq i32 %bf.cast, 3, !dbg !5921
  br i1 %cmp, label %if.then, label %if.end, !dbg !5922

if.then:                                          ; preds = %sw.bb1
  %11 = load i8, i8* %ret, align 1, !dbg !5923
  %conv4 = sext i8 %11 to i32, !dbg !5923
  %12 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info.addr, align 8, !dbg !5924
  %13 = load i32, i32* %reg_no, align 4, !dbg !5924
  %idxprom5 = sext i32 %13 to i64, !dbg !5924
  %arrayidx6 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %12, i64 %idxprom5, !dbg !5924
  %bits7 = bitcast %union.byte_register_info_type* %arrayidx6 to %struct.anon*, !dbg !5924
  %14 = bitcast %struct.anon* %bits7 to i8*, !dbg !5924
  %15 = trunc i32 %conv4 to i8, !dbg !5925
  %bf.load8 = load i8, i8* %14, align 8, !dbg !5925
  %bf.value = and i8 %15, 3, !dbg !5925
  %bf.clear9 = and i8 %bf.load8, -4, !dbg !5925
  %bf.set = or i8 %bf.clear9, %bf.value, !dbg !5925
  store i8 %bf.set, i8* %14, align 8, !dbg !5925
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !5925
  br label %if.end, !dbg !5924

if.end:                                           ; preds = %if.then, %sw.bb1
  %16 = load i8, i8* %ret, align 1, !dbg !5926
  %tobool = icmp ne i8 %16, 0, !dbg !5926
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !5928

if.then10:                                        ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !5929
  br label %return, !dbg !5929

if.end11:                                         ; preds = %if.end
  br label %sw.epilog, !dbg !5930

sw.bb12:                                          ; preds = %entry
  br label %do.body, !dbg !5931

do.body:                                          ; preds = %sw.bb12
  br label %do.body13, !dbg !5932

do.body13:                                        ; preds = %do.body
  %17 = load i8*, i8** %p1, align 8, !dbg !5934
  %18 = load i8, i8* %17, align 1, !dbg !5934
  %conv14 = zext i8 %18 to i32, !dbg !5934
  %and = and i32 %conv14, 255, !dbg !5934
  store i32 %and, i32* %mcnt, align 4, !dbg !5934
  %19 = load i8*, i8** %p1, align 8, !dbg !5934
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 1, !dbg !5934
  %20 = load i8, i8* %add.ptr, align 1, !dbg !5934
  %conv15 = sext i8 %20 to i32, !dbg !5934
  %shl = shl i32 %conv15, 8, !dbg !5934
  %21 = load i32, i32* %mcnt, align 4, !dbg !5934
  %add = add nsw i32 %21, %shl, !dbg !5934
  store i32 %add, i32* %mcnt, align 4, !dbg !5934
  br label %do.end, !dbg !5934

do.end:                                           ; preds = %do.body13
  %22 = load i8*, i8** %p1, align 8, !dbg !5932
  %add.ptr16 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !5932
  store i8* %add.ptr16, i8** %p1, align 8, !dbg !5932
  br label %do.end17, !dbg !5932

do.end17:                                         ; preds = %do.end
  %23 = load i32, i32* %mcnt, align 4, !dbg !5936
  %cmp18 = icmp sge i32 %23, 0, !dbg !5938
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !5939

if.then20:                                        ; preds = %do.end17
  %24 = load i32, i32* %mcnt, align 4, !dbg !5940
  %25 = load i8*, i8** %p1, align 8, !dbg !5941
  %idx.ext = sext i32 %24 to i64, !dbg !5941
  %add.ptr21 = getelementptr inbounds i8, i8* %25, i64 %idx.ext, !dbg !5941
  store i8* %add.ptr21, i8** %p1, align 8, !dbg !5941
  br label %if.end22, !dbg !5942

if.else:                                          ; preds = %do.end17
  store i8 0, i8* %retval, align 1, !dbg !5943
  br label %return, !dbg !5943

if.end22:                                         ; preds = %if.then20
  br label %sw.epilog, !dbg !5944

sw.bb23:                                          ; preds = %entry
  %26 = load i8*, i8** %p1, align 8, !dbg !5945
  %add.ptr24 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !5945
  store i8* %add.ptr24, i8** %p1, align 8, !dbg !5945
  br label %do.body25, !dbg !5946

do.body25:                                        ; preds = %sw.bb23
  br label %do.body26, !dbg !5947

do.body26:                                        ; preds = %do.body25
  %27 = load i8*, i8** %p1, align 8, !dbg !5949
  %28 = load i8, i8* %27, align 1, !dbg !5949
  %conv27 = zext i8 %28 to i32, !dbg !5949
  %and28 = and i32 %conv27, 255, !dbg !5949
  store i32 %and28, i32* %mcnt, align 4, !dbg !5949
  %29 = load i8*, i8** %p1, align 8, !dbg !5949
  %add.ptr29 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !5949
  %30 = load i8, i8* %add.ptr29, align 1, !dbg !5949
  %conv30 = sext i8 %30 to i32, !dbg !5949
  %shl31 = shl i32 %conv30, 8, !dbg !5949
  %31 = load i32, i32* %mcnt, align 4, !dbg !5949
  %add32 = add nsw i32 %31, %shl31, !dbg !5949
  store i32 %add32, i32* %mcnt, align 4, !dbg !5949
  br label %do.end33, !dbg !5949

do.end33:                                         ; preds = %do.body26
  %32 = load i8*, i8** %p1, align 8, !dbg !5947
  %add.ptr34 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !5947
  store i8* %add.ptr34, i8** %p1, align 8, !dbg !5947
  br label %do.end35, !dbg !5947

do.end35:                                         ; preds = %do.end33
  %33 = load i32, i32* %mcnt, align 4, !dbg !5951
  %cmp36 = icmp eq i32 %33, 0, !dbg !5953
  br i1 %cmp36, label %if.then38, label %if.else53, !dbg !5954

if.then38:                                        ; preds = %do.end35
  %34 = load i8*, i8** %p1, align 8, !dbg !5955
  %add.ptr39 = getelementptr inbounds i8, i8* %34, i64 -4, !dbg !5955
  store i8* %add.ptr39, i8** %p1, align 8, !dbg !5955
  br label %do.body40, !dbg !5957

do.body40:                                        ; preds = %if.then38
  br label %do.body41, !dbg !5958

do.body41:                                        ; preds = %do.body40
  %35 = load i8*, i8** %p1, align 8, !dbg !5960
  %36 = load i8, i8* %35, align 1, !dbg !5960
  %conv42 = zext i8 %36 to i32, !dbg !5960
  %and43 = and i32 %conv42, 255, !dbg !5960
  store i32 %and43, i32* %mcnt, align 4, !dbg !5960
  %37 = load i8*, i8** %p1, align 8, !dbg !5960
  %add.ptr44 = getelementptr inbounds i8, i8* %37, i64 1, !dbg !5960
  %38 = load i8, i8* %add.ptr44, align 1, !dbg !5960
  %conv45 = sext i8 %38 to i32, !dbg !5960
  %shl46 = shl i32 %conv45, 8, !dbg !5960
  %39 = load i32, i32* %mcnt, align 4, !dbg !5960
  %add47 = add nsw i32 %39, %shl46, !dbg !5960
  store i32 %add47, i32* %mcnt, align 4, !dbg !5960
  br label %do.end48, !dbg !5960

do.end48:                                         ; preds = %do.body41
  %40 = load i8*, i8** %p1, align 8, !dbg !5958
  %add.ptr49 = getelementptr inbounds i8, i8* %40, i64 2, !dbg !5958
  store i8* %add.ptr49, i8** %p1, align 8, !dbg !5958
  br label %do.end50, !dbg !5958

do.end50:                                         ; preds = %do.end48
  %41 = load i32, i32* %mcnt, align 4, !dbg !5962
  %42 = load i8*, i8** %p1, align 8, !dbg !5963
  %idx.ext51 = sext i32 %41 to i64, !dbg !5963
  %add.ptr52 = getelementptr inbounds i8, i8* %42, i64 %idx.ext51, !dbg !5963
  store i8* %add.ptr52, i8** %p1, align 8, !dbg !5963
  br label %if.end54, !dbg !5964

if.else53:                                        ; preds = %do.end35
  store i8 0, i8* %retval, align 1, !dbg !5965
  br label %return, !dbg !5965

if.end54:                                         ; preds = %do.end50
  br label %sw.epilog, !dbg !5966

sw.bb55:                                          ; preds = %entry
  %43 = load %union.byte_register_info_type*, %union.byte_register_info_type** %reg_info.addr, align 8, !dbg !5967
  %44 = load i8*, i8** %p1, align 8, !dbg !5967
  %45 = load i8, i8* %44, align 1, !dbg !5967
  %idxprom56 = zext i8 %45 to i64, !dbg !5967
  %arrayidx57 = getelementptr inbounds %union.byte_register_info_type, %union.byte_register_info_type* %43, i64 %idxprom56, !dbg !5967
  %bits58 = bitcast %union.byte_register_info_type* %arrayidx57 to %struct.anon*, !dbg !5967
  %46 = bitcast %struct.anon* %bits58 to i8*, !dbg !5967
  %bf.load59 = load i8, i8* %46, align 8, !dbg !5967
  %bf.clear60 = and i8 %bf.load59, 3, !dbg !5967
  %bf.cast61 = zext i8 %bf.clear60 to i32, !dbg !5967
  %tobool62 = icmp ne i32 %bf.cast61, 0, !dbg !5967
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !5969

if.then63:                                        ; preds = %sw.bb55
  store i8 0, i8* %retval, align 1, !dbg !5970
  br label %return, !dbg !5970

if.end64:                                         ; preds = %sw.bb55
  br label %sw.epilog, !dbg !5971

sw.bb65:                                          ; preds = %entry
  %47 = load i8*, i8** %p1, align 8, !dbg !5972
  %add.ptr66 = getelementptr inbounds i8, i8* %47, i64 4, !dbg !5972
  store i8* %add.ptr66, i8** %p1, align 8, !dbg !5972
  br label %sw.default, !dbg !5973

sw.default:                                       ; preds = %entry, %sw.bb65
  store i8 0, i8* %retval, align 1, !dbg !5974
  br label %return, !dbg !5974

sw.epilog:                                        ; preds = %if.end64, %if.end54, %if.end22, %if.end11, %sw.bb
  %48 = load i8*, i8** %p1, align 8, !dbg !5975
  %49 = load i8**, i8*** %p.addr, align 8, !dbg !5976
  store i8* %48, i8** %49, align 8, !dbg !5977
  store i8 1, i8* %retval, align 1, !dbg !5978
  br label %return, !dbg !5978

return:                                           ; preds = %sw.epilog, %sw.default, %if.then63, %if.else53, %if.else, %if.then10
  %50 = load i8, i8* %retval, align 1, !dbg !5979
  ret i8 %50, !dbg !5979
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_syntax_once() #0 !dbg !163 {
entry:
  %c = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5980, metadata !DIExpression()), !dbg !5981
  %0 = load i32, i32* @init_syntax_once.done, align 4, !dbg !5982
  %tobool = icmp ne i32 %0, 0, !dbg !5982
  br i1 %tobool, label %if.then, label %if.end, !dbg !5984

if.then:                                          ; preds = %entry
  br label %return, !dbg !5985

if.end:                                           ; preds = %entry
  call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds ([256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 0), i8 0, i64 256, i1 false), !dbg !5986
  store i32 0, i32* %c, align 4, !dbg !5987
  br label %for.cond, !dbg !5989

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %c, align 4, !dbg !5990
  %cmp = icmp slt i32 %1, 256, !dbg !5992
  br i1 %cmp, label %for.body, label %for.end, !dbg !5993

for.body:                                         ; preds = %for.cond
  %call = call i16** @__ctype_b_loc(), !dbg !5994
  %2 = load i16*, i16** %call, align 8, !dbg !5994
  %3 = load i32, i32* %c, align 4, !dbg !5994
  %idxprom = sext i32 %3 to i64, !dbg !5994
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom, !dbg !5994
  %4 = load i16, i16* %arrayidx, align 2, !dbg !5994
  %conv = zext i16 %4 to i32, !dbg !5994
  %and = and i32 %conv, 8, !dbg !5994
  %tobool1 = icmp ne i32 %and, 0, !dbg !5994
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !5996

if.then2:                                         ; preds = %for.body
  %5 = load i32, i32* %c, align 4, !dbg !5997
  %idxprom3 = sext i32 %5 to i64, !dbg !5998
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 %idxprom3, !dbg !5998
  store i8 1, i8* %arrayidx4, align 1, !dbg !5999
  br label %if.end5, !dbg !5998

if.end5:                                          ; preds = %if.then2, %for.body
  br label %for.inc, !dbg !5994

for.inc:                                          ; preds = %if.end5
  %6 = load i32, i32* %c, align 4, !dbg !6000
  %inc = add nsw i32 %6, 1, !dbg !6000
  store i32 %inc, i32* %c, align 4, !dbg !6000
  br label %for.cond, !dbg !6001, !llvm.loop !6002

for.end:                                          ; preds = %for.cond
  store i8 1, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @re_syntax_table, i64 0, i64 95), align 1, !dbg !6004
  store i32 1, i32* @init_syntax_once.done, align 4, !dbg !6005
  br label %return, !dbg !6006

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !6006
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @byte_at_begline_loc_p(i8* %pattern, i8* %p, i64 %syntax) #0 !dbg !6007 {
entry:
  %pattern.addr = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %syntax.addr = alloca i64, align 8
  %prev = alloca i8*, align 8
  %prev_prev_backslash = alloca i8, align 1
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !6010, metadata !DIExpression()), !dbg !6011
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  store i64 %syntax, i64* %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %syntax.addr, metadata !6014, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.declare(metadata i8** %prev, metadata !6016, metadata !DIExpression()), !dbg !6017
  %0 = load i8*, i8** %p.addr, align 8, !dbg !6018
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -2, !dbg !6019
  store i8* %add.ptr, i8** %prev, align 8, !dbg !6017
  call void @llvm.dbg.declare(metadata i8* %prev_prev_backslash, metadata !6020, metadata !DIExpression()), !dbg !6021
  %1 = load i8*, i8** %prev, align 8, !dbg !6022
  %2 = load i8*, i8** %pattern.addr, align 8, !dbg !6023
  %cmp = icmp ugt i8* %1, %2, !dbg !6024
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6025

land.rhs:                                         ; preds = %entry
  %3 = load i8*, i8** %prev, align 8, !dbg !6026
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 -1, !dbg !6026
  %4 = load i8, i8* %arrayidx, align 1, !dbg !6026
  %conv = sext i8 %4 to i32, !dbg !6026
  %cmp1 = icmp eq i32 %conv, 92, !dbg !6027
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !6028
  %land.ext = zext i1 %5 to i32, !dbg !6025
  %conv3 = trunc i32 %land.ext to i8, !dbg !6022
  store i8 %conv3, i8* %prev_prev_backslash, align 1, !dbg !6021
  %6 = load i8*, i8** %prev, align 8, !dbg !6029
  %7 = load i8, i8* %6, align 1, !dbg !6030
  %conv4 = sext i8 %7 to i32, !dbg !6030
  %cmp5 = icmp eq i32 %conv4, 40, !dbg !6031
  br i1 %cmp5, label %land.lhs.true, label %lor.rhs, !dbg !6032

land.lhs.true:                                    ; preds = %land.end
  %8 = load i64, i64* %syntax.addr, align 8, !dbg !6033
  %and = and i64 %8, 8192, !dbg !6034
  %tobool = icmp ne i64 %and, 0, !dbg !6034
  br i1 %tobool, label %lor.end20, label %lor.lhs.false, !dbg !6035

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load i8, i8* %prev_prev_backslash, align 1, !dbg !6036
  %conv7 = sext i8 %9 to i32, !dbg !6036
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !6036
  br i1 %tobool8, label %lor.end20, label %lor.rhs, !dbg !6037

lor.rhs:                                          ; preds = %lor.lhs.false, %land.end
  %10 = load i8*, i8** %prev, align 8, !dbg !6038
  %11 = load i8, i8* %10, align 1, !dbg !6039
  %conv9 = sext i8 %11 to i32, !dbg !6039
  %cmp10 = icmp eq i32 %conv9, 124, !dbg !6040
  br i1 %cmp10, label %land.rhs12, label %land.end18, !dbg !6041

land.rhs12:                                       ; preds = %lor.rhs
  %12 = load i64, i64* %syntax.addr, align 8, !dbg !6042
  %and13 = and i64 %12, 32768, !dbg !6043
  %tobool14 = icmp ne i64 %and13, 0, !dbg !6043
  br i1 %tobool14, label %lor.end, label %lor.rhs15, !dbg !6044

lor.rhs15:                                        ; preds = %land.rhs12
  %13 = load i8, i8* %prev_prev_backslash, align 1, !dbg !6045
  %conv16 = sext i8 %13 to i32, !dbg !6045
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !6044
  br label %lor.end, !dbg !6044

lor.end:                                          ; preds = %lor.rhs15, %land.rhs12
  %14 = phi i1 [ true, %land.rhs12 ], [ %tobool17, %lor.rhs15 ]
  br label %land.end18

land.end18:                                       ; preds = %lor.end, %lor.rhs
  %15 = phi i1 [ false, %lor.rhs ], [ %14, %lor.end ], !dbg !6028
  br label %lor.end20, !dbg !6037

lor.end20:                                        ; preds = %land.end18, %lor.lhs.false, %land.lhs.true
  %16 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true ], [ %15, %land.end18 ]
  %lor.ext = zext i1 %16 to i32, !dbg !6037
  %conv21 = trunc i32 %lor.ext to i8, !dbg !6046
  ret i8 %conv21, !dbg !6047
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @byte_at_endline_loc_p(i8* %p, i8* %pend, i64 %syntax) #0 !dbg !6048 {
entry:
  %p.addr = alloca i8*, align 8
  %pend.addr = alloca i8*, align 8
  %syntax.addr = alloca i64, align 8
  %next = alloca i8*, align 8
  %next_backslash = alloca i8, align 1
  %next_next = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6049, metadata !DIExpression()), !dbg !6050
  store i8* %pend, i8** %pend.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pend.addr, metadata !6051, metadata !DIExpression()), !dbg !6052
  store i64 %syntax, i64* %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %syntax.addr, metadata !6053, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.declare(metadata i8** %next, metadata !6055, metadata !DIExpression()), !dbg !6056
  %0 = load i8*, i8** %p.addr, align 8, !dbg !6057
  store i8* %0, i8** %next, align 8, !dbg !6056
  call void @llvm.dbg.declare(metadata i8* %next_backslash, metadata !6058, metadata !DIExpression()), !dbg !6059
  %1 = load i8*, i8** %next, align 8, !dbg !6060
  %2 = load i8, i8* %1, align 1, !dbg !6061
  %conv = sext i8 %2 to i32, !dbg !6061
  %cmp = icmp eq i32 %conv, 92, !dbg !6062
  %conv1 = zext i1 %cmp to i32, !dbg !6062
  %conv2 = trunc i32 %conv1 to i8, !dbg !6061
  store i8 %conv2, i8* %next_backslash, align 1, !dbg !6059
  call void @llvm.dbg.declare(metadata i8** %next_next, metadata !6063, metadata !DIExpression()), !dbg !6064
  %3 = load i8*, i8** %p.addr, align 8, !dbg !6065
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6066
  %4 = load i8*, i8** %pend.addr, align 8, !dbg !6067
  %cmp3 = icmp ult i8* %add.ptr, %4, !dbg !6068
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !6065

cond.true:                                        ; preds = %entry
  %5 = load i8*, i8** %p.addr, align 8, !dbg !6069
  %add.ptr5 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !6070
  br label %cond.end, !dbg !6065

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6065

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr5, %cond.true ], [ null, %cond.false ], !dbg !6065
  store i8* %cond, i8** %next_next, align 8, !dbg !6064
  %6 = load i64, i64* %syntax.addr, align 8, !dbg !6071
  %and = and i64 %6, 8192, !dbg !6072
  %tobool = icmp ne i64 %and, 0, !dbg !6072
  br i1 %tobool, label %cond.true6, label %cond.false10, !dbg !6073

cond.true6:                                       ; preds = %cond.end
  %7 = load i8*, i8** %next, align 8, !dbg !6074
  %8 = load i8, i8* %7, align 1, !dbg !6075
  %conv7 = sext i8 %8 to i32, !dbg !6075
  %cmp8 = icmp eq i32 %conv7, 41, !dbg !6076
  br i1 %cmp8, label %lor.end, label %lor.rhs, !dbg !6071

cond.false10:                                     ; preds = %cond.end
  %9 = load i8, i8* %next_backslash, align 1, !dbg !6077
  %conv11 = sext i8 %9 to i32, !dbg !6077
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !6077
  br i1 %tobool12, label %land.lhs.true, label %lor.rhs, !dbg !6078

land.lhs.true:                                    ; preds = %cond.false10
  %10 = load i8*, i8** %next_next, align 8, !dbg !6079
  %tobool13 = icmp ne i8* %10, null, !dbg !6079
  br i1 %tobool13, label %land.lhs.true14, label %lor.rhs, !dbg !6080

land.lhs.true14:                                  ; preds = %land.lhs.true
  %11 = load i8*, i8** %next_next, align 8, !dbg !6081
  %12 = load i8, i8* %11, align 1, !dbg !6082
  %conv15 = sext i8 %12 to i32, !dbg !6082
  %cmp16 = icmp eq i32 %conv15, 41, !dbg !6083
  br i1 %cmp16, label %lor.end, label %lor.rhs, !dbg !6073

lor.rhs:                                          ; preds = %land.lhs.true14, %land.lhs.true, %cond.false10, %cond.true6
  %13 = load i64, i64* %syntax.addr, align 8, !dbg !6084
  %and18 = and i64 %13, 32768, !dbg !6085
  %tobool19 = icmp ne i64 %and18, 0, !dbg !6085
  br i1 %tobool19, label %cond.true20, label %cond.false24, !dbg !6084

cond.true20:                                      ; preds = %lor.rhs
  %14 = load i8*, i8** %next, align 8, !dbg !6086
  %15 = load i8, i8* %14, align 1, !dbg !6087
  %conv21 = sext i8 %15 to i32, !dbg !6087
  %cmp22 = icmp eq i32 %conv21, 124, !dbg !6088
  %conv23 = zext i1 %cmp22 to i32, !dbg !6088
  br label %cond.end32, !dbg !6084

cond.false24:                                     ; preds = %lor.rhs
  %16 = load i8, i8* %next_backslash, align 1, !dbg !6089
  %conv25 = sext i8 %16 to i32, !dbg !6089
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !6089
  br i1 %tobool26, label %land.lhs.true27, label %land.end, !dbg !6090

land.lhs.true27:                                  ; preds = %cond.false24
  %17 = load i8*, i8** %next_next, align 8, !dbg !6091
  %tobool28 = icmp ne i8* %17, null, !dbg !6091
  br i1 %tobool28, label %land.rhs, label %land.end, !dbg !6092

land.rhs:                                         ; preds = %land.lhs.true27
  %18 = load i8*, i8** %next_next, align 8, !dbg !6093
  %19 = load i8, i8* %18, align 1, !dbg !6094
  %conv29 = sext i8 %19 to i32, !dbg !6094
  %cmp30 = icmp eq i32 %conv29, 124, !dbg !6095
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true27, %cond.false24
  %20 = phi i1 [ false, %land.lhs.true27 ], [ false, %cond.false24 ], [ %cmp30, %land.rhs ], !dbg !6096
  %land.ext = zext i1 %20 to i32, !dbg !6092
  br label %cond.end32, !dbg !6084

cond.end32:                                       ; preds = %land.end, %cond.true20
  %cond33 = phi i32 [ %conv23, %cond.true20 ], [ %land.ext, %land.end ], !dbg !6084
  %tobool34 = icmp ne i32 %cond33, 0, !dbg !6073
  br label %lor.end, !dbg !6073

lor.end:                                          ; preds = %cond.end32, %land.lhs.true14, %cond.true6
  %21 = phi i1 [ true, %land.lhs.true14 ], [ true, %cond.true6 ], [ %tobool34, %cond.end32 ]
  %lor.ext = zext i1 %21 to i32, !dbg !6073
  %conv35 = trunc i32 %lor.ext to i8, !dbg !6097
  ret i8 %conv35, !dbg !6098
}

; Function Attrs: noinline nounwind uwtable
define internal void @byte_store_op1(i32 %op, i8* %loc, i32 %arg) #0 !dbg !6099 {
entry:
  %op.addr = alloca i32, align 4
  %loc.addr = alloca i8*, align 8
  %arg.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !6102, metadata !DIExpression()), !dbg !6103
  store i8* %loc, i8** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %loc.addr, metadata !6104, metadata !DIExpression()), !dbg !6105
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !6106, metadata !DIExpression()), !dbg !6107
  %0 = load i32, i32* %op.addr, align 4, !dbg !6108
  %conv = trunc i32 %0 to i8, !dbg !6109
  %1 = load i8*, i8** %loc.addr, align 8, !dbg !6110
  store i8 %conv, i8* %1, align 1, !dbg !6111
  br label %do.body, !dbg !6112

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %arg.addr, align 4, !dbg !6113
  %and = and i32 %2, 255, !dbg !6113
  %conv1 = trunc i32 %and to i8, !dbg !6113
  %3 = load i8*, i8** %loc.addr, align 8, !dbg !6113
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6113
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !6113
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !6113
  %4 = load i32, i32* %arg.addr, align 4, !dbg !6113
  %shr = ashr i32 %4, 8, !dbg !6113
  %conv2 = trunc i32 %shr to i8, !dbg !6113
  %5 = load i8*, i8** %loc.addr, align 8, !dbg !6113
  %add.ptr3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !6113
  %arrayidx4 = getelementptr inbounds i8, i8* %add.ptr3, i64 1, !dbg !6113
  store i8 %conv2, i8* %arrayidx4, align 1, !dbg !6113
  br label %do.end, !dbg !6113

do.end:                                           ; preds = %do.body
  ret void, !dbg !6115
}

; Function Attrs: noinline nounwind uwtable
define internal void @byte_insert_op1(i32 %op, i8* %loc, i32 %arg, i8* %end) #0 !dbg !6116 {
entry:
  %op.addr = alloca i32, align 4
  %loc.addr = alloca i8*, align 8
  %arg.addr = alloca i32, align 4
  %end.addr = alloca i8*, align 8
  %pfrom = alloca i8*, align 8
  %pto = alloca i8*, align 8
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !6119, metadata !DIExpression()), !dbg !6120
  store i8* %loc, i8** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %loc.addr, metadata !6121, metadata !DIExpression()), !dbg !6122
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !6123, metadata !DIExpression()), !dbg !6124
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6125, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.declare(metadata i8** %pfrom, metadata !6127, metadata !DIExpression()), !dbg !6128
  %0 = load i8*, i8** %end.addr, align 8, !dbg !6129
  store i8* %0, i8** %pfrom, align 8, !dbg !6128
  call void @llvm.dbg.declare(metadata i8** %pto, metadata !6130, metadata !DIExpression()), !dbg !6131
  %1 = load i8*, i8** %end.addr, align 8, !dbg !6132
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !6133
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 2, !dbg !6134
  store i8* %add.ptr1, i8** %pto, align 8, !dbg !6131
  br label %while.cond, !dbg !6135

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i8*, i8** %pfrom, align 8, !dbg !6136
  %3 = load i8*, i8** %loc.addr, align 8, !dbg !6137
  %cmp = icmp ne i8* %2, %3, !dbg !6138
  br i1 %cmp, label %while.body, label %while.end, !dbg !6135

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %pfrom, align 8, !dbg !6139
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !6139
  store i8* %incdec.ptr, i8** %pfrom, align 8, !dbg !6139
  %5 = load i8, i8* %incdec.ptr, align 1, !dbg !6140
  %6 = load i8*, i8** %pto, align 8, !dbg !6141
  %incdec.ptr2 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !6141
  store i8* %incdec.ptr2, i8** %pto, align 8, !dbg !6141
  store i8 %5, i8* %incdec.ptr2, align 1, !dbg !6142
  br label %while.cond, !dbg !6135, !llvm.loop !6143

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %op.addr, align 4, !dbg !6145
  %8 = load i8*, i8** %loc.addr, align 8, !dbg !6146
  %9 = load i32, i32* %arg.addr, align 4, !dbg !6147
  call void @byte_store_op1(i32 %7, i8* %8, i32 %9), !dbg !6148
  ret void, !dbg !6149
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @byte_compile_range(i32 %range_start_char, i8** %p_ptr, i8* %pend, i8* %translate, i64 %syntax, i8* %b) #0 !dbg !6150 {
entry:
  %retval = alloca i32, align 4
  %range_start_char.addr = alloca i32, align 4
  %p_ptr.addr = alloca i8**, align 8
  %pend.addr = alloca i8*, align 8
  %translate.addr = alloca i8*, align 8
  %syntax.addr = alloca i64, align 8
  %b.addr = alloca i8*, align 8
  %this_char = alloca i32, align 4
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  %end_char = alloca i32, align 4
  store i32 %range_start_char, i32* %range_start_char.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range_start_char.addr, metadata !6153, metadata !DIExpression()), !dbg !6154
  store i8** %p_ptr, i8*** %p_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %p_ptr.addr, metadata !6155, metadata !DIExpression()), !dbg !6156
  store i8* %pend, i8** %pend.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pend.addr, metadata !6157, metadata !DIExpression()), !dbg !6158
  store i8* %translate, i8** %translate.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %translate.addr, metadata !6159, metadata !DIExpression()), !dbg !6160
  store i64 %syntax, i64* %syntax.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %syntax.addr, metadata !6161, metadata !DIExpression()), !dbg !6162
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !6163, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.declare(metadata i32* %this_char, metadata !6165, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6167, metadata !DIExpression()), !dbg !6168
  %0 = load i8**, i8*** %p_ptr.addr, align 8, !dbg !6169
  %1 = load i8*, i8** %0, align 8, !dbg !6170
  store i8* %1, i8** %p, align 8, !dbg !6168
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6171, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata i32* %end_char, metadata !6173, metadata !DIExpression()), !dbg !6174
  %2 = load i8*, i8** %p, align 8, !dbg !6175
  %3 = load i8*, i8** %pend.addr, align 8, !dbg !6177
  %cmp = icmp eq i8* %2, %3, !dbg !6178
  br i1 %cmp, label %if.then, label %if.end, !dbg !6179

if.then:                                          ; preds = %entry
  store i32 11, i32* %retval, align 4, !dbg !6180
  br label %return, !dbg !6180

if.end:                                           ; preds = %entry
  %4 = load i8**, i8*** %p_ptr.addr, align 8, !dbg !6181
  %5 = load i8*, i8** %4, align 8, !dbg !6182
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6182
  store i8* %incdec.ptr, i8** %4, align 8, !dbg !6182
  %6 = load i64, i64* %syntax.addr, align 8, !dbg !6183
  %and = and i64 %6, 65536, !dbg !6184
  %tobool = icmp ne i64 %and, 0, !dbg !6183
  %7 = zext i1 %tobool to i64, !dbg !6183
  %cond = select i1 %tobool, i32 11, i32 0, !dbg !6183
  store i32 %cond, i32* %ret, align 4, !dbg !6185
  %8 = load i8*, i8** %translate.addr, align 8, !dbg !6186
  %tobool1 = icmp ne i8* %8, null, !dbg !6186
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !6186

cond.true:                                        ; preds = %if.end
  %9 = load i8*, i8** %translate.addr, align 8, !dbg !6186
  %10 = load i32, i32* %range_start_char.addr, align 4, !dbg !6186
  %conv = trunc i32 %10 to i8, !dbg !6186
  %idxprom = zext i8 %conv to i64, !dbg !6186
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !6186
  %11 = load i8, i8* %arrayidx, align 1, !dbg !6186
  %conv2 = sext i8 %11 to i32, !dbg !6186
  br label %cond.end, !dbg !6186

cond.false:                                       ; preds = %if.end
  %12 = load i32, i32* %range_start_char.addr, align 4, !dbg !6186
  %conv3 = trunc i32 %12 to i8, !dbg !6186
  %conv4 = sext i8 %conv3 to i32, !dbg !6186
  br label %cond.end, !dbg !6186

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi i32 [ %conv2, %cond.true ], [ %conv4, %cond.false ], !dbg !6186
  store i32 %cond5, i32* %range_start_char.addr, align 4, !dbg !6187
  %13 = load i8*, i8** %translate.addr, align 8, !dbg !6188
  %tobool6 = icmp ne i8* %13, null, !dbg !6188
  br i1 %tobool6, label %cond.true7, label %cond.false12, !dbg !6188

cond.true7:                                       ; preds = %cond.end
  %14 = load i8*, i8** %translate.addr, align 8, !dbg !6188
  %15 = load i8*, i8** %p, align 8, !dbg !6188
  %arrayidx8 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !6188
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !6188
  %idxprom9 = zext i8 %16 to i64, !dbg !6188
  %arrayidx10 = getelementptr inbounds i8, i8* %14, i64 %idxprom9, !dbg !6188
  %17 = load i8, i8* %arrayidx10, align 1, !dbg !6188
  %conv11 = sext i8 %17 to i32, !dbg !6188
  br label %cond.end15, !dbg !6188

cond.false12:                                     ; preds = %cond.end
  %18 = load i8*, i8** %p, align 8, !dbg !6188
  %arrayidx13 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !6188
  %19 = load i8, i8* %arrayidx13, align 1, !dbg !6188
  %conv14 = sext i8 %19 to i32, !dbg !6188
  br label %cond.end15, !dbg !6188

cond.end15:                                       ; preds = %cond.false12, %cond.true7
  %cond16 = phi i32 [ %conv11, %cond.true7 ], [ %conv14, %cond.false12 ], !dbg !6188
  %and17 = and i32 %cond16, 255, !dbg !6189
  store i32 %and17, i32* %end_char, align 4, !dbg !6190
  %20 = load i32, i32* %range_start_char.addr, align 4, !dbg !6191
  store i32 %20, i32* %this_char, align 4, !dbg !6193
  br label %for.cond, !dbg !6194

for.cond:                                         ; preds = %for.inc, %cond.end15
  %21 = load i32, i32* %this_char, align 4, !dbg !6195
  %22 = load i32, i32* %end_char, align 4, !dbg !6197
  %cmp18 = icmp ule i32 %21, %22, !dbg !6198
  br i1 %cmp18, label %for.body, label %for.end, !dbg !6199

for.body:                                         ; preds = %for.cond
  %23 = load i8*, i8** %translate.addr, align 8, !dbg !6200
  %tobool20 = icmp ne i8* %23, null, !dbg !6200
  br i1 %tobool20, label %cond.true21, label %cond.false26, !dbg !6200

cond.true21:                                      ; preds = %for.body
  %24 = load i8*, i8** %translate.addr, align 8, !dbg !6200
  %25 = load i32, i32* %this_char, align 4, !dbg !6200
  %conv22 = trunc i32 %25 to i8, !dbg !6200
  %idxprom23 = zext i8 %conv22 to i64, !dbg !6200
  %arrayidx24 = getelementptr inbounds i8, i8* %24, i64 %idxprom23, !dbg !6200
  %26 = load i8, i8* %arrayidx24, align 1, !dbg !6200
  %conv25 = sext i8 %26 to i32, !dbg !6200
  br label %cond.end29, !dbg !6200

cond.false26:                                     ; preds = %for.body
  %27 = load i32, i32* %this_char, align 4, !dbg !6200
  %conv27 = trunc i32 %27 to i8, !dbg !6200
  %conv28 = sext i8 %conv27 to i32, !dbg !6200
  br label %cond.end29, !dbg !6200

cond.end29:                                       ; preds = %cond.false26, %cond.true21
  %cond30 = phi i32 [ %conv25, %cond.true21 ], [ %conv28, %cond.false26 ], !dbg !6200
  %conv31 = trunc i32 %cond30 to i8, !dbg !6200
  %conv32 = zext i8 %conv31 to i32, !dbg !6200
  %rem = srem i32 %conv32, 8, !dbg !6200
  %shl = shl i32 1, %rem, !dbg !6200
  %28 = load i8*, i8** %b.addr, align 8, !dbg !6200
  %29 = load i8*, i8** %translate.addr, align 8, !dbg !6200
  %tobool33 = icmp ne i8* %29, null, !dbg !6200
  br i1 %tobool33, label %cond.true34, label %cond.false39, !dbg !6200

cond.true34:                                      ; preds = %cond.end29
  %30 = load i8*, i8** %translate.addr, align 8, !dbg !6200
  %31 = load i32, i32* %this_char, align 4, !dbg !6200
  %conv35 = trunc i32 %31 to i8, !dbg !6200
  %idxprom36 = zext i8 %conv35 to i64, !dbg !6200
  %arrayidx37 = getelementptr inbounds i8, i8* %30, i64 %idxprom36, !dbg !6200
  %32 = load i8, i8* %arrayidx37, align 1, !dbg !6200
  %conv38 = sext i8 %32 to i32, !dbg !6200
  br label %cond.end42, !dbg !6200

cond.false39:                                     ; preds = %cond.end29
  %33 = load i32, i32* %this_char, align 4, !dbg !6200
  %conv40 = trunc i32 %33 to i8, !dbg !6200
  %conv41 = sext i8 %conv40 to i32, !dbg !6200
  br label %cond.end42, !dbg !6200

cond.end42:                                       ; preds = %cond.false39, %cond.true34
  %cond43 = phi i32 [ %conv38, %cond.true34 ], [ %conv41, %cond.false39 ], !dbg !6200
  %conv44 = trunc i32 %cond43 to i8, !dbg !6200
  %conv45 = zext i8 %conv44 to i32, !dbg !6200
  %div = sdiv i32 %conv45, 8, !dbg !6200
  %idxprom46 = sext i32 %div to i64, !dbg !6200
  %arrayidx47 = getelementptr inbounds i8, i8* %28, i64 %idxprom46, !dbg !6200
  %34 = load i8, i8* %arrayidx47, align 1, !dbg !6200
  %conv48 = zext i8 %34 to i32, !dbg !6200
  %or = or i32 %conv48, %shl, !dbg !6200
  %conv49 = trunc i32 %or to i8, !dbg !6200
  store i8 %conv49, i8* %arrayidx47, align 1, !dbg !6200
  store i32 0, i32* %ret, align 4, !dbg !6202
  br label %for.inc, !dbg !6203

for.inc:                                          ; preds = %cond.end42
  %35 = load i32, i32* %this_char, align 4, !dbg !6204
  %inc = add i32 %35, 1, !dbg !6204
  store i32 %inc, i32* %this_char, align 4, !dbg !6204
  br label %for.cond, !dbg !6205, !llvm.loop !6206

for.end:                                          ; preds = %for.cond
  %36 = load i32, i32* %ret, align 4, !dbg !6208
  store i32 %36, i32* %retval, align 4, !dbg !6209
  br label %return, !dbg !6209

return:                                           ; preds = %for.end, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !6210
  ret i32 %37, !dbg !6210
}

declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @byte_insert_op2(i32 %op, i8* %loc, i32 %arg1, i32 %arg2, i8* %end) #0 !dbg !6211 {
entry:
  %op.addr = alloca i32, align 4
  %loc.addr = alloca i8*, align 8
  %arg1.addr = alloca i32, align 4
  %arg2.addr = alloca i32, align 4
  %end.addr = alloca i8*, align 8
  %pfrom = alloca i8*, align 8
  %pto = alloca i8*, align 8
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !6214, metadata !DIExpression()), !dbg !6215
  store i8* %loc, i8** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %loc.addr, metadata !6216, metadata !DIExpression()), !dbg !6217
  store i32 %arg1, i32* %arg1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg1.addr, metadata !6218, metadata !DIExpression()), !dbg !6219
  store i32 %arg2, i32* %arg2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg2.addr, metadata !6220, metadata !DIExpression()), !dbg !6221
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !6222, metadata !DIExpression()), !dbg !6223
  call void @llvm.dbg.declare(metadata i8** %pfrom, metadata !6224, metadata !DIExpression()), !dbg !6225
  %0 = load i8*, i8** %end.addr, align 8, !dbg !6226
  store i8* %0, i8** %pfrom, align 8, !dbg !6225
  call void @llvm.dbg.declare(metadata i8** %pto, metadata !6227, metadata !DIExpression()), !dbg !6228
  %1 = load i8*, i8** %end.addr, align 8, !dbg !6229
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !6230
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 4, !dbg !6231
  store i8* %add.ptr1, i8** %pto, align 8, !dbg !6228
  br label %while.cond, !dbg !6232

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i8*, i8** %pfrom, align 8, !dbg !6233
  %3 = load i8*, i8** %loc.addr, align 8, !dbg !6234
  %cmp = icmp ne i8* %2, %3, !dbg !6235
  br i1 %cmp, label %while.body, label %while.end, !dbg !6232

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %pfrom, align 8, !dbg !6236
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !6236
  store i8* %incdec.ptr, i8** %pfrom, align 8, !dbg !6236
  %5 = load i8, i8* %incdec.ptr, align 1, !dbg !6237
  %6 = load i8*, i8** %pto, align 8, !dbg !6238
  %incdec.ptr2 = getelementptr inbounds i8, i8* %6, i32 -1, !dbg !6238
  store i8* %incdec.ptr2, i8** %pto, align 8, !dbg !6238
  store i8 %5, i8* %incdec.ptr2, align 1, !dbg !6239
  br label %while.cond, !dbg !6232, !llvm.loop !6240

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %op.addr, align 4, !dbg !6242
  %8 = load i8*, i8** %loc.addr, align 8, !dbg !6243
  %9 = load i32, i32* %arg1.addr, align 4, !dbg !6244
  %10 = load i32, i32* %arg2.addr, align 4, !dbg !6245
  call void @byte_store_op2(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !6246
  ret void, !dbg !6247
}

; Function Attrs: noinline nounwind uwtable
define internal void @byte_store_op2(i32 %op, i8* %loc, i32 %arg1, i32 %arg2) #0 !dbg !6248 {
entry:
  %op.addr = alloca i32, align 4
  %loc.addr = alloca i8*, align 8
  %arg1.addr = alloca i32, align 4
  %arg2.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !6251, metadata !DIExpression()), !dbg !6252
  store i8* %loc, i8** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %loc.addr, metadata !6253, metadata !DIExpression()), !dbg !6254
  store i32 %arg1, i32* %arg1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg1.addr, metadata !6255, metadata !DIExpression()), !dbg !6256
  store i32 %arg2, i32* %arg2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg2.addr, metadata !6257, metadata !DIExpression()), !dbg !6258
  %0 = load i32, i32* %op.addr, align 4, !dbg !6259
  %conv = trunc i32 %0 to i8, !dbg !6260
  %1 = load i8*, i8** %loc.addr, align 8, !dbg !6261
  store i8 %conv, i8* %1, align 1, !dbg !6262
  br label %do.body, !dbg !6263

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %arg1.addr, align 4, !dbg !6264
  %and = and i32 %2, 255, !dbg !6264
  %conv1 = trunc i32 %and to i8, !dbg !6264
  %3 = load i8*, i8** %loc.addr, align 8, !dbg !6264
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6264
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !6264
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !6264
  %4 = load i32, i32* %arg1.addr, align 4, !dbg !6264
  %shr = ashr i32 %4, 8, !dbg !6264
  %conv2 = trunc i32 %shr to i8, !dbg !6264
  %5 = load i8*, i8** %loc.addr, align 8, !dbg !6264
  %add.ptr3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !6264
  %arrayidx4 = getelementptr inbounds i8, i8* %add.ptr3, i64 1, !dbg !6264
  store i8 %conv2, i8* %arrayidx4, align 1, !dbg !6264
  br label %do.end, !dbg !6264

do.end:                                           ; preds = %do.body
  br label %do.body5, !dbg !6266

do.body5:                                         ; preds = %do.end
  %6 = load i32, i32* %arg2.addr, align 4, !dbg !6267
  %and6 = and i32 %6, 255, !dbg !6267
  %conv7 = trunc i32 %and6 to i8, !dbg !6267
  %7 = load i8*, i8** %loc.addr, align 8, !dbg !6267
  %add.ptr8 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !6267
  %add.ptr9 = getelementptr inbounds i8, i8* %add.ptr8, i64 2, !dbg !6267
  %arrayidx10 = getelementptr inbounds i8, i8* %add.ptr9, i64 0, !dbg !6267
  store i8 %conv7, i8* %arrayidx10, align 1, !dbg !6267
  %8 = load i32, i32* %arg2.addr, align 4, !dbg !6267
  %shr11 = ashr i32 %8, 8, !dbg !6267
  %conv12 = trunc i32 %shr11 to i8, !dbg !6267
  %9 = load i8*, i8** %loc.addr, align 8, !dbg !6267
  %add.ptr13 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !6267
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr13, i64 2, !dbg !6267
  %arrayidx15 = getelementptr inbounds i8, i8* %add.ptr14, i64 1, !dbg !6267
  store i8 %conv12, i8* %arrayidx15, align 1, !dbg !6267
  br label %do.end16, !dbg !6267

do.end16:                                         ; preds = %do.body5
  ret void, !dbg !6269
}

; Function Attrs: noinline nounwind uwtable
define internal signext i8 @group_in_compile_stack(%struct.compile_stack_elt_t* %compile_stack.coerce0, i64 %compile_stack.coerce1, i32 %regnum) #0 !dbg !6270 {
entry:
  %retval = alloca i8, align 1
  %compile_stack = alloca %struct.compile_stack_type, align 8
  %regnum.addr = alloca i32, align 4
  %this_element = alloca i32, align 4
  %0 = bitcast %struct.compile_stack_type* %compile_stack to { %struct.compile_stack_elt_t*, i64 }*
  %1 = getelementptr inbounds { %struct.compile_stack_elt_t*, i64 }, { %struct.compile_stack_elt_t*, i64 }* %0, i32 0, i32 0
  store %struct.compile_stack_elt_t* %compile_stack.coerce0, %struct.compile_stack_elt_t** %1, align 8
  %2 = getelementptr inbounds { %struct.compile_stack_elt_t*, i64 }, { %struct.compile_stack_elt_t*, i64 }* %0, i32 0, i32 1
  store i64 %compile_stack.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.compile_stack_type* %compile_stack, metadata !6273, metadata !DIExpression()), !dbg !6274
  store i32 %regnum, i32* %regnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regnum.addr, metadata !6275, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.declare(metadata i32* %this_element, metadata !6277, metadata !DIExpression()), !dbg !6278
  %avail = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 2, !dbg !6279
  %3 = load i32, i32* %avail, align 4, !dbg !6279
  %sub = sub i32 %3, 1, !dbg !6281
  store i32 %sub, i32* %this_element, align 4, !dbg !6282
  br label %for.cond, !dbg !6283

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %this_element, align 4, !dbg !6284
  %cmp = icmp sge i32 %4, 0, !dbg !6286
  br i1 %cmp, label %for.body, label %for.end, !dbg !6287

for.body:                                         ; preds = %for.cond
  %stack = getelementptr inbounds %struct.compile_stack_type, %struct.compile_stack_type* %compile_stack, i32 0, i32 0, !dbg !6288
  %5 = load %struct.compile_stack_elt_t*, %struct.compile_stack_elt_t** %stack, align 8, !dbg !6288
  %6 = load i32, i32* %this_element, align 4, !dbg !6290
  %idxprom = sext i32 %6 to i64, !dbg !6291
  %arrayidx = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %5, i64 %idxprom, !dbg !6291
  %regnum1 = getelementptr inbounds %struct.compile_stack_elt_t, %struct.compile_stack_elt_t* %arrayidx, i32 0, i32 4, !dbg !6292
  %7 = load i32, i32* %regnum1, align 8, !dbg !6292
  %8 = load i32, i32* %regnum.addr, align 4, !dbg !6293
  %cmp2 = icmp eq i32 %7, %8, !dbg !6294
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6295

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !6296
  br label %return, !dbg !6296

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6293

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %this_element, align 4, !dbg !6297
  %dec = add nsw i32 %9, -1, !dbg !6297
  store i32 %dec, i32* %this_element, align 4, !dbg !6297
  br label %for.cond, !dbg !6298, !llvm.loop !6299

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !6301
  br label %return, !dbg !6301

return:                                           ; preds = %for.end, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !6302
  ret i8 %10, !dbg !6302
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!172, !173, !174}
!llvm.ident = !{!175}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "xre_max_failures", scope: !2, file: !44, line: 1485, type: !7, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !76, globals: !130, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "regex.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !27, !43}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 291, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/xregex2.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26}
!9 = !DIEnumerator(name: "REG_ENOSYS", value: -1)
!10 = !DIEnumerator(name: "REG_NOERROR", value: 0)
!11 = !DIEnumerator(name: "REG_NOMATCH", value: 1)
!12 = !DIEnumerator(name: "REG_BADPAT", value: 2)
!13 = !DIEnumerator(name: "REG_ECOLLATE", value: 3)
!14 = !DIEnumerator(name: "REG_ECTYPE", value: 4)
!15 = !DIEnumerator(name: "REG_EESCAPE", value: 5)
!16 = !DIEnumerator(name: "REG_ESUBREG", value: 6)
!17 = !DIEnumerator(name: "REG_EBRACK", value: 7)
!18 = !DIEnumerator(name: "REG_EPAREN", value: 8)
!19 = !DIEnumerator(name: "REG_EBRACE", value: 9)
!20 = !DIEnumerator(name: "REG_BADBR", value: 10)
!21 = !DIEnumerator(name: "REG_ERANGE", value: 11)
!22 = !DIEnumerator(name: "REG_ESPACE", value: 12)
!23 = !DIEnumerator(name: "REG_BADRPT", value: 13)
!24 = !DIEnumerator(name: "REG_EEND", value: 14)
!25 = !DIEnumerator(name: "REG_ESIZE", value: 15)
!26 = !DIEnumerator(name: "REG_ERPAREN", value: 16)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 46, baseType: !29, size: 32, elements: !30)
!28 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!29 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!30 = !{!31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42}
!31 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!32 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!33 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!34 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!35 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!36 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!37 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!38 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!39 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!42 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !44, line: 479, baseType: !29, size: 32, elements: !45)
!44 = !DIFile(filename: "./regex.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!45 = !{!46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75}
!46 = !DIEnumerator(name: "no_op", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "succeed", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "exactn", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "anychar", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "charset", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "charset_not", value: 5, isUnsigned: true)
!52 = !DIEnumerator(name: "start_memory", value: 6, isUnsigned: true)
!53 = !DIEnumerator(name: "stop_memory", value: 7, isUnsigned: true)
!54 = !DIEnumerator(name: "duplicate", value: 8, isUnsigned: true)
!55 = !DIEnumerator(name: "begline", value: 9, isUnsigned: true)
!56 = !DIEnumerator(name: "endline", value: 10, isUnsigned: true)
!57 = !DIEnumerator(name: "begbuf", value: 11, isUnsigned: true)
!58 = !DIEnumerator(name: "endbuf", value: 12, isUnsigned: true)
!59 = !DIEnumerator(name: "jump", value: 13, isUnsigned: true)
!60 = !DIEnumerator(name: "jump_past_alt", value: 14, isUnsigned: true)
!61 = !DIEnumerator(name: "on_failure_jump", value: 15, isUnsigned: true)
!62 = !DIEnumerator(name: "on_failure_keep_string_jump", value: 16, isUnsigned: true)
!63 = !DIEnumerator(name: "pop_failure_jump", value: 17, isUnsigned: true)
!64 = !DIEnumerator(name: "maybe_pop_jump", value: 18, isUnsigned: true)
!65 = !DIEnumerator(name: "dummy_failure_jump", value: 19, isUnsigned: true)
!66 = !DIEnumerator(name: "push_dummy_failure", value: 20, isUnsigned: true)
!67 = !DIEnumerator(name: "succeed_n", value: 21, isUnsigned: true)
!68 = !DIEnumerator(name: "jump_n", value: 22, isUnsigned: true)
!69 = !DIEnumerator(name: "set_number_at", value: 23, isUnsigned: true)
!70 = !DIEnumerator(name: "wordchar", value: 24, isUnsigned: true)
!71 = !DIEnumerator(name: "notwordchar", value: 25, isUnsigned: true)
!72 = !DIEnumerator(name: "wordbeg", value: 26, isUnsigned: true)
!73 = !DIEnumerator(name: "wordend", value: 27, isUnsigned: true)
!74 = !DIEnumerator(name: "wordbound", value: 28, isUnsigned: true)
!75 = !DIEnumerator(name: "notwordbound", value: 29, isUnsigned: true)
!76 = !{!77, !7, !79, !81, !83, !84, !90, !91, !92, !82, !98, !99, !29, !80, !100, !103, !78, !101, !115, !116, !118, !129}
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "regoff_t", file: !6, line: 402, baseType: !7)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!80 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "re_registers", file: !6, line: 407, size: 192, elements: !86)
!86 = !{!87, !88, !89}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "num_regs", scope: !85, file: !6, line: 409, baseType: !29, size: 32)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !85, file: !6, line: 410, baseType: !77, size: 64, offset: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !85, file: !6, line: 411, baseType: !77, size: 64, offset: 128)
!90 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!91 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "byte_fail_stack_elt_t", file: !44, line: 1497, baseType: !94)
!94 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "byte_fail_stack_elt", file: !44, line: 1491, size: 64, elements: !95)
!95 = !{!96, !97}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !94, file: !44, line: 1493, baseType: !81, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !94, file: !44, line: 1494, baseType: !7, size: 32)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "re_opcode_t", file: !44, line: 630, baseType: !43)
!99 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !80)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "byte_register_info_type", file: !44, line: 1833, baseType: !105)
!105 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !44, line: 1820, size: 64, elements: !106)
!106 = !{!107, !108}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !105, file: !44, line: 1822, baseType: !93, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !105, file: !44, line: 1832, baseType: !109, size: 32)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !105, file: !44, line: 1823, size: 32, elements: !110)
!110 = !{!111, !112, !113, !114}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "match_null_string_p", scope: !109, file: !44, line: 1828, baseType: !29, size: 2, flags: DIFlagBitField, extraData: i64 0)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "is_active", scope: !109, file: !44, line: 1829, baseType: !29, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "matched_something", scope: !109, file: !44, line: 1830, baseType: !29, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "ever_matched_something", scope: !109, file: !44, line: 1831, baseType: !29, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "active_reg_t", file: !6, line: 47, baseType: !90)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "compile_stack_elt_t", file: !44, line: 2150, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !44, line: 2143, size: 320, elements: !121)
!121 = !{!122, !125, !126, !127, !128}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "begalt_offset", scope: !120, file: !44, line: 2145, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "pattern_offset_t", file: !44, line: 2141, baseType: !124)
!124 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "fixup_alt_jump", scope: !120, file: !44, line: 2146, baseType: !123, size: 64, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "inner_group_offset", scope: !120, file: !44, line: 2147, baseType: !123, size: 64, offset: 128)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "laststart_offset", scope: !120, file: !44, line: 2148, baseType: !123, size: 64, offset: 192)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "regnum", scope: !120, file: !44, line: 2149, baseType: !129, size: 32, offset: 256)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "regnum_t", file: !44, line: 2133, baseType: !29)
!130 = !{!0, !131, !134, !154, !159, !161, !167}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "xre_syntax_options", scope: !2, file: !44, line: 1339, type: !133, isLocal: false, isDefinition: true)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_syntax_t", file: !6, line: 54, baseType: !90)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "re_comp_buf", scope: !2, file: !44, line: 7832, type: !136, isLocal: true, isDefinition: true)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "re_pattern_buffer", file: !6, line: 331, size: 512, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !147, !148, !149, !150, !151, !152, !153}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !136, file: !6, line: 337, baseType: !81, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !136, file: !6, line: 340, baseType: !90, size: 64, offset: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !136, file: !6, line: 343, baseType: !90, size: 64, offset: 128)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "syntax", scope: !136, file: !6, line: 346, baseType: !133, size: 64, offset: 192)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "fastmap", scope: !136, file: !6, line: 351, baseType: !79, size: 64, offset: 256)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !136, file: !6, line: 357, baseType: !79, size: 64, offset: 320)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "re_nsub", scope: !136, file: !6, line: 360, baseType: !145, size: 64, offset: 384)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !146, line: 46, baseType: !90)
!146 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!147 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_null", scope: !136, file: !6, line: 367, baseType: !29, size: 1, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "regs_allocated", scope: !136, file: !6, line: 376, baseType: !29, size: 2, offset: 449, flags: DIFlagBitField, extraData: i64 448)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "fastmap_accurate", scope: !136, file: !6, line: 380, baseType: !29, size: 1, offset: 451, flags: DIFlagBitField, extraData: i64 448)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "no_sub", scope: !136, file: !6, line: 384, baseType: !29, size: 1, offset: 452, flags: DIFlagBitField, extraData: i64 448)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "not_bol", scope: !136, file: !6, line: 388, baseType: !29, size: 1, offset: 453, flags: DIFlagBitField, extraData: i64 448)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "not_eol", scope: !136, file: !6, line: 391, baseType: !29, size: 1, offset: 454, flags: DIFlagBitField, extraData: i64 448)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "newline_anchor", scope: !136, file: !6, line: 394, baseType: !29, size: 1, offset: 455, flags: DIFlagBitField, extraData: i64 448)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "re_syntax_table", scope: !2, file: !44, line: 298, type: !156, isLocal: true, isDefinition: true)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 2048, elements: !157)
!157 = !{!158}
!158 = !DISubrange(count: 256)
!159 = !DIGlobalVariableExpression(var: !160, expr: !DIExpression())
!160 = distinct !DIGlobalVariable(name: "byte_reg_unset_dummy", scope: !2, file: !44, line: 1864, type: !80, isLocal: true, isDefinition: true)
!161 = !DIGlobalVariableExpression(var: !162, expr: !DIExpression())
!162 = distinct !DIGlobalVariable(name: "done", scope: !163, file: !44, line: 306, type: !7, isLocal: true, isDefinition: true)
!163 = distinct !DISubprogram(name: "init_syntax_once", scope: !44, file: !44, line: 303, type: !164, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!164 = !DISubroutineType(types: !165)
!165 = !{null}
!166 = !{}
!167 = !DIGlobalVariableExpression(var: !168, expr: !DIExpression())
!168 = distinct !DIGlobalVariable(name: "re_error_msgid", scope: !2, file: !44, line: 1372, type: !169, isLocal: true, isDefinition: true)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 1088, elements: !170)
!170 = !{!171}
!171 = !DISubrange(count: 17)
!172 = !{i32 7, !"Dwarf Version", i32 4}
!173 = !{i32 2, !"Debug Info Version", i32 3}
!174 = !{i32 1, !"wchar_size", i32 4}
!175 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!176 = distinct !DISubprogram(name: "xre_set_syntax", scope: !44, file: !44, line: 1350, type: !177, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!177 = !DISubroutineType(types: !178)
!178 = !{!133, !133}
!179 = !DILocalVariable(name: "syntax", arg: 1, scope: !176, file: !44, line: 1350, type: !133)
!180 = !DILocation(line: 1350, column: 29, scope: !176)
!181 = !DILocalVariable(name: "ret", scope: !176, file: !44, line: 1352, type: !133)
!182 = !DILocation(line: 1352, column: 16, scope: !176)
!183 = !DILocation(line: 1352, column: 22, scope: !176)
!184 = !DILocation(line: 1354, column: 23, scope: !176)
!185 = !DILocation(line: 1354, column: 21, scope: !176)
!186 = !DILocation(line: 1361, column: 10, scope: !176)
!187 = !DILocation(line: 1361, column: 3, scope: !176)
!188 = distinct !DISubprogram(name: "xre_compile_fastmap", scope: !44, file: !44, line: 4886, type: !189, scopeLine: 4887, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!189 = !DISubroutineType(types: !190)
!190 = !{!7, !191}
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!192 = !DILocalVariable(name: "bufp", arg: 1, scope: !188, file: !44, line: 4886, type: !191)
!193 = !DILocation(line: 4886, column: 47, scope: !188)
!194 = !DILocation(line: 4893, column: 36, scope: !188)
!195 = !DILocation(line: 4893, column: 12, scope: !188)
!196 = !DILocation(line: 4893, column: 5, scope: !188)
!197 = distinct !DISubprogram(name: "byte_re_compile_fastmap", scope: !44, file: !44, line: 4567, type: !189, scopeLine: 4568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!198 = !DILocalVariable(name: "bufp", arg: 1, scope: !197, file: !44, line: 4567, type: !191)
!199 = !DILocation(line: 4567, column: 55, scope: !197)
!200 = !DILocalVariable(name: "j", scope: !197, file: !44, line: 4569, type: !7)
!201 = !DILocation(line: 4569, column: 7, scope: !197)
!202 = !DILocalVariable(name: "k", scope: !197, file: !44, line: 4569, type: !7)
!203 = !DILocation(line: 4569, column: 10, scope: !197)
!204 = !DILocalVariable(name: "fail_stack", scope: !197, file: !44, line: 4571, type: !205)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "byte_fail_stack_type", file: !44, line: 1504, baseType: !206)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !44, line: 1499, size: 128, elements: !207)
!207 = !{!208, !209, !210}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !206, file: !44, line: 1501, baseType: !92, size: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !206, file: !44, line: 1502, baseType: !29, size: 32, offset: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !206, file: !44, line: 1503, baseType: !29, size: 32, offset: 96)
!211 = !DILocation(line: 4571, column: 27, scope: !197)
!212 = !DILocalVariable(name: "destination", scope: !197, file: !44, line: 4574, type: !79)
!213 = !DILocation(line: 4574, column: 9, scope: !197)
!214 = !DILocalVariable(name: "fastmap", scope: !197, file: !44, line: 4577, type: !79)
!215 = !DILocation(line: 4577, column: 18, scope: !197)
!216 = !DILocation(line: 4577, column: 28, scope: !197)
!217 = !DILocation(line: 4577, column: 34, scope: !197)
!218 = !DILocalVariable(name: "pattern", scope: !197, file: !44, line: 4585, type: !81)
!219 = !DILocation(line: 4585, column: 12, scope: !197)
!220 = !DILocation(line: 4585, column: 22, scope: !197)
!221 = !DILocation(line: 4585, column: 28, scope: !197)
!222 = !DILocalVariable(name: "pend", scope: !197, file: !44, line: 4586, type: !81)
!223 = !DILocation(line: 4586, column: 21, scope: !197)
!224 = !DILocation(line: 4586, column: 28, scope: !197)
!225 = !DILocation(line: 4586, column: 38, scope: !197)
!226 = !DILocation(line: 4586, column: 44, scope: !197)
!227 = !DILocation(line: 4586, column: 36, scope: !197)
!228 = !DILocalVariable(name: "p", scope: !197, file: !44, line: 4588, type: !81)
!229 = !DILocation(line: 4588, column: 12, scope: !197)
!230 = !DILocation(line: 4588, column: 16, scope: !197)
!231 = !DILocalVariable(name: "path_can_be_null", scope: !197, file: !44, line: 4600, type: !232)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "boolean", file: !44, line: 430, baseType: !80)
!233 = !DILocation(line: 4600, column: 11, scope: !197)
!234 = !DILocalVariable(name: "succeed_n_p", scope: !197, file: !44, line: 4603, type: !232)
!235 = !DILocation(line: 4603, column: 11, scope: !197)
!236 = !DILocation(line: 4607, column: 3, scope: !197)
!237 = !DILocation(line: 4607, column: 3, scope: !238)
!238 = distinct !DILexicalBlock(scope: !197, file: !44, line: 4607, column: 3)
!239 = !DILocation(line: 4607, column: 3, scope: !240)
!240 = distinct !DILexicalBlock(scope: !238, file: !44, line: 4607, column: 3)
!241 = !DILocation(line: 4608, column: 3, scope: !197)
!242 = !DILocation(line: 4609, column: 3, scope: !197)
!243 = !DILocation(line: 4609, column: 9, scope: !197)
!244 = !DILocation(line: 4609, column: 26, scope: !197)
!245 = !DILocation(line: 4610, column: 3, scope: !197)
!246 = !DILocation(line: 4610, column: 9, scope: !197)
!247 = !DILocation(line: 4610, column: 21, scope: !197)
!248 = !DILocation(line: 4612, column: 3, scope: !197)
!249 = !DILocation(line: 4614, column: 11, scope: !250)
!250 = distinct !DILexicalBlock(scope: !251, file: !44, line: 4614, column: 11)
!251 = distinct !DILexicalBlock(scope: !197, file: !44, line: 4613, column: 5)
!252 = !DILocation(line: 4614, column: 16, scope: !250)
!253 = !DILocation(line: 4614, column: 13, scope: !250)
!254 = !DILocation(line: 4614, column: 21, scope: !250)
!255 = !DILocation(line: 4614, column: 25, scope: !250)
!256 = !DILocation(line: 4614, column: 24, scope: !250)
!257 = !DILocation(line: 4614, column: 27, scope: !250)
!258 = !DILocation(line: 4614, column: 11, scope: !251)
!259 = !DILocation(line: 4617, column: 9, scope: !260)
!260 = distinct !DILexicalBlock(scope: !261, file: !44, line: 4617, column: 8)
!261 = distinct !DILexicalBlock(scope: !250, file: !44, line: 4615, column: 2)
!262 = !DILocation(line: 4617, column: 8, scope: !261)
!263 = !DILocation(line: 4619, column: 29, scope: !264)
!264 = distinct !DILexicalBlock(scope: !260, file: !44, line: 4618, column: 6)
!265 = !DILocation(line: 4619, column: 8, scope: !264)
!266 = !DILocation(line: 4619, column: 14, scope: !264)
!267 = !DILocation(line: 4619, column: 26, scope: !264)
!268 = !DILocation(line: 4622, column: 25, scope: !264)
!269 = !DILocation(line: 4624, column: 23, scope: !264)
!270 = !DILocation(line: 4624, column: 42, scope: !264)
!271 = !DILocation(line: 4624, column: 29, scope: !264)
!272 = !DILocation(line: 4624, column: 12, scope: !264)
!273 = !DILocation(line: 4624, column: 49, scope: !264)
!274 = !DILocation(line: 4624, column: 10, scope: !264)
!275 = !DILocation(line: 4626, column: 8, scope: !264)
!276 = distinct !{!276, !248, !277}
!277 = !DILocation(line: 4872, column: 5, scope: !197)
!278 = !DILocation(line: 4629, column: 6, scope: !260)
!279 = !DILocation(line: 4635, column: 15, scope: !251)
!280 = !DILocation(line: 4635, column: 7, scope: !251)
!281 = !DILocation(line: 4644, column: 4, scope: !282)
!282 = distinct !DILexicalBlock(scope: !251, file: !44, line: 4636, column: 2)
!283 = !DILocation(line: 4644, column: 10, scope: !282)
!284 = !DILocation(line: 4644, column: 22, scope: !282)
!285 = !DILocation(line: 4645, column: 11, scope: !282)
!286 = !DILocation(line: 4657, column: 11, scope: !282)
!287 = !DILocation(line: 4657, column: 19, scope: !282)
!288 = !DILocation(line: 4657, column: 25, scope: !282)
!289 = !DILocation(line: 4658, column: 4, scope: !282)
!290 = !DILocation(line: 4677, column: 22, scope: !291)
!291 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4677, column: 11)
!292 = !DILocation(line: 4677, column: 20, scope: !291)
!293 = !DILocation(line: 4677, column: 25, scope: !291)
!294 = !DILocation(line: 4677, column: 37, scope: !291)
!295 = !DILocation(line: 4677, column: 18, scope: !291)
!296 = !DILocation(line: 4677, column: 16, scope: !291)
!297 = !DILocation(line: 4677, column: 42, scope: !298)
!298 = distinct !DILexicalBlock(scope: !291, file: !44, line: 4677, column: 11)
!299 = !DILocation(line: 4677, column: 44, scope: !298)
!300 = !DILocation(line: 4677, column: 11, scope: !291)
!301 = !DILocation(line: 4678, column: 10, scope: !302)
!302 = distinct !DILexicalBlock(scope: !298, file: !44, line: 4678, column: 10)
!303 = !DILocation(line: 4678, column: 12, scope: !302)
!304 = !DILocation(line: 4678, column: 14, scope: !302)
!305 = !DILocation(line: 4678, column: 36, scope: !302)
!306 = !DILocation(line: 4678, column: 38, scope: !302)
!307 = !DILocation(line: 4678, column: 32, scope: !302)
!308 = !DILocation(line: 4678, column: 27, scope: !302)
!309 = !DILocation(line: 4678, column: 10, scope: !298)
!310 = !DILocation(line: 4679, column: 15, scope: !302)
!311 = !DILocation(line: 4679, column: 23, scope: !302)
!312 = !DILocation(line: 4679, column: 26, scope: !302)
!313 = !DILocation(line: 4678, column: 50, scope: !302)
!314 = !DILocation(line: 4677, column: 51, scope: !298)
!315 = !DILocation(line: 4677, column: 11, scope: !298)
!316 = distinct !{!316, !300, !317}
!317 = !DILocation(line: 4679, column: 28, scope: !291)
!318 = !DILocation(line: 4680, column: 4, scope: !282)
!319 = !DILocation(line: 4685, column: 14, scope: !320)
!320 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4685, column: 4)
!321 = !DILocation(line: 4685, column: 13, scope: !320)
!322 = !DILocation(line: 4685, column: 16, scope: !320)
!323 = !DILocation(line: 4685, column: 11, scope: !320)
!324 = !DILocation(line: 4685, column: 9, scope: !320)
!325 = !DILocation(line: 4685, column: 29, scope: !326)
!326 = distinct !DILexicalBlock(scope: !320, file: !44, line: 4685, column: 4)
!327 = !DILocation(line: 4685, column: 31, scope: !326)
!328 = !DILocation(line: 4685, column: 4, scope: !320)
!329 = !DILocation(line: 4686, column: 13, scope: !326)
!330 = !DILocation(line: 4686, column: 21, scope: !326)
!331 = !DILocation(line: 4686, column: 24, scope: !326)
!332 = !DILocation(line: 4685, column: 52, scope: !326)
!333 = !DILocation(line: 4685, column: 4, scope: !326)
!334 = distinct !{!334, !328, !335}
!335 = !DILocation(line: 4686, column: 26, scope: !320)
!336 = !DILocation(line: 4688, column: 15, scope: !337)
!337 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4688, column: 4)
!338 = !DILocation(line: 4688, column: 13, scope: !337)
!339 = !DILocation(line: 4688, column: 18, scope: !337)
!340 = !DILocation(line: 4688, column: 30, scope: !337)
!341 = !DILocation(line: 4688, column: 11, scope: !337)
!342 = !DILocation(line: 4688, column: 9, scope: !337)
!343 = !DILocation(line: 4688, column: 35, scope: !344)
!344 = distinct !DILexicalBlock(scope: !337, file: !44, line: 4688, column: 4)
!345 = !DILocation(line: 4688, column: 37, scope: !344)
!346 = !DILocation(line: 4688, column: 4, scope: !337)
!347 = !DILocation(line: 4689, column: 12, scope: !348)
!348 = distinct !DILexicalBlock(scope: !344, file: !44, line: 4689, column: 10)
!349 = !DILocation(line: 4689, column: 14, scope: !348)
!350 = !DILocation(line: 4689, column: 16, scope: !348)
!351 = !DILocation(line: 4689, column: 38, scope: !348)
!352 = !DILocation(line: 4689, column: 40, scope: !348)
!353 = !DILocation(line: 4689, column: 34, scope: !348)
!354 = !DILocation(line: 4689, column: 29, scope: !348)
!355 = !DILocation(line: 4689, column: 10, scope: !344)
!356 = !DILocation(line: 4690, column: 15, scope: !348)
!357 = !DILocation(line: 4690, column: 23, scope: !348)
!358 = !DILocation(line: 4690, column: 26, scope: !348)
!359 = !DILocation(line: 4689, column: 53, scope: !348)
!360 = !DILocation(line: 4688, column: 44, scope: !344)
!361 = !DILocation(line: 4688, column: 4, scope: !344)
!362 = distinct !{!362, !346, !363}
!363 = !DILocation(line: 4690, column: 28, scope: !337)
!364 = !DILocation(line: 4691, column: 11, scope: !282)
!365 = !DILocation(line: 4695, column: 11, scope: !366)
!366 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4695, column: 4)
!367 = !DILocation(line: 4695, column: 9, scope: !366)
!368 = !DILocation(line: 4695, column: 16, scope: !369)
!369 = distinct !DILexicalBlock(scope: !366, file: !44, line: 4695, column: 4)
!370 = !DILocation(line: 4695, column: 18, scope: !369)
!371 = !DILocation(line: 4695, column: 4, scope: !366)
!372 = !DILocation(line: 4696, column: 10, scope: !373)
!373 = distinct !DILexicalBlock(scope: !369, file: !44, line: 4696, column: 10)
!374 = !DILocation(line: 4696, column: 21, scope: !373)
!375 = !DILocation(line: 4696, column: 10, scope: !369)
!376 = !DILocation(line: 4697, column: 8, scope: !373)
!377 = !DILocation(line: 4697, column: 16, scope: !373)
!378 = !DILocation(line: 4697, column: 19, scope: !373)
!379 = !DILocation(line: 4696, column: 24, scope: !373)
!380 = !DILocation(line: 4695, column: 39, scope: !369)
!381 = !DILocation(line: 4695, column: 4, scope: !369)
!382 = distinct !{!382, !371, !383}
!383 = !DILocation(line: 4697, column: 21, scope: !366)
!384 = !DILocation(line: 4698, column: 4, scope: !282)
!385 = !DILocation(line: 4702, column: 11, scope: !386)
!386 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4702, column: 4)
!387 = !DILocation(line: 4702, column: 9, scope: !386)
!388 = !DILocation(line: 4702, column: 16, scope: !389)
!389 = distinct !DILexicalBlock(scope: !386, file: !44, line: 4702, column: 4)
!390 = !DILocation(line: 4702, column: 18, scope: !389)
!391 = !DILocation(line: 4702, column: 4, scope: !386)
!392 = !DILocation(line: 4703, column: 10, scope: !393)
!393 = distinct !DILexicalBlock(scope: !389, file: !44, line: 4703, column: 10)
!394 = !DILocation(line: 4703, column: 21, scope: !393)
!395 = !DILocation(line: 4703, column: 10, scope: !389)
!396 = !DILocation(line: 4704, column: 8, scope: !393)
!397 = !DILocation(line: 4704, column: 16, scope: !393)
!398 = !DILocation(line: 4704, column: 19, scope: !393)
!399 = !DILocation(line: 4703, column: 24, scope: !393)
!400 = !DILocation(line: 4702, column: 39, scope: !389)
!401 = !DILocation(line: 4702, column: 4, scope: !389)
!402 = distinct !{!402, !391, !403}
!403 = !DILocation(line: 4704, column: 21, scope: !386)
!404 = !DILocation(line: 4705, column: 4, scope: !282)
!405 = !DILocalVariable(name: "fastmap_newline", scope: !406, file: !44, line: 4710, type: !7)
!406 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4709, column: 4)
!407 = !DILocation(line: 4710, column: 10, scope: !406)
!408 = !DILocation(line: 4710, column: 28, scope: !406)
!409 = !DILocation(line: 4713, column: 13, scope: !410)
!410 = distinct !DILexicalBlock(scope: !406, file: !44, line: 4713, column: 6)
!411 = !DILocation(line: 4713, column: 11, scope: !410)
!412 = !DILocation(line: 4713, column: 18, scope: !413)
!413 = distinct !DILexicalBlock(scope: !410, file: !44, line: 4713, column: 6)
!414 = !DILocation(line: 4713, column: 20, scope: !413)
!415 = !DILocation(line: 4713, column: 6, scope: !410)
!416 = !DILocation(line: 4714, column: 8, scope: !413)
!417 = !DILocation(line: 4714, column: 16, scope: !413)
!418 = !DILocation(line: 4714, column: 19, scope: !413)
!419 = !DILocation(line: 4713, column: 41, scope: !413)
!420 = !DILocation(line: 4713, column: 6, scope: !413)
!421 = distinct !{!421, !415, !422}
!422 = !DILocation(line: 4714, column: 21, scope: !410)
!423 = !DILocation(line: 4717, column: 12, scope: !424)
!424 = distinct !DILexicalBlock(scope: !406, file: !44, line: 4717, column: 10)
!425 = !DILocation(line: 4717, column: 18, scope: !424)
!426 = !DILocation(line: 4717, column: 25, scope: !424)
!427 = !DILocation(line: 4717, column: 10, scope: !406)
!428 = !DILocation(line: 4718, column: 24, scope: !424)
!429 = !DILocation(line: 4718, column: 8, scope: !424)
!430 = !DILocation(line: 4718, column: 22, scope: !424)
!431 = !DILocation(line: 4722, column: 15, scope: !432)
!432 = distinct !DILexicalBlock(scope: !424, file: !44, line: 4722, column: 15)
!433 = !DILocation(line: 4722, column: 21, scope: !432)
!434 = !DILocation(line: 4722, column: 15, scope: !424)
!435 = !DILocation(line: 4723, column: 8, scope: !432)
!436 = !DILocation(line: 4726, column: 6, scope: !406)
!437 = !DILocation(line: 4767, column: 11, scope: !282)
!438 = !DILocation(line: 4776, column: 11, scope: !282)
!439 = !DILocation(line: 4776, column: 11, scope: !440)
!440 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4776, column: 11)
!441 = !DILocation(line: 4776, column: 11, scope: !442)
!442 = distinct !DILexicalBlock(scope: !440, file: !44, line: 4776, column: 11)
!443 = !DILocation(line: 4777, column: 9, scope: !282)
!444 = !DILocation(line: 4777, column: 6, scope: !282)
!445 = !DILocation(line: 4778, column: 8, scope: !446)
!446 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4778, column: 8)
!447 = !DILocation(line: 4778, column: 10, scope: !446)
!448 = !DILocation(line: 4778, column: 8, scope: !282)
!449 = !DILocation(line: 4779, column: 6, scope: !446)
!450 = !DILocation(line: 4786, column: 30, scope: !451)
!451 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4786, column: 15)
!452 = !DILocation(line: 4786, column: 29, scope: !451)
!453 = !DILocation(line: 4786, column: 15, scope: !451)
!454 = !DILocation(line: 4786, column: 32, scope: !451)
!455 = !DILocation(line: 4787, column: 8, scope: !451)
!456 = !DILocation(line: 4787, column: 26, scope: !451)
!457 = !DILocation(line: 4787, column: 25, scope: !451)
!458 = !DILocation(line: 4787, column: 11, scope: !451)
!459 = !DILocation(line: 4787, column: 28, scope: !451)
!460 = !DILocation(line: 4786, column: 15, scope: !282)
!461 = !DILocation(line: 4788, column: 6, scope: !451)
!462 = !DILocation(line: 4790, column: 12, scope: !282)
!463 = !DILocation(line: 4791, column: 11, scope: !282)
!464 = !DILocation(line: 4791, column: 11, scope: !465)
!465 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4791, column: 11)
!466 = !DILocation(line: 4791, column: 11, scope: !467)
!467 = distinct !DILexicalBlock(scope: !465, file: !44, line: 4791, column: 11)
!468 = !DILocation(line: 4792, column: 16, scope: !282)
!469 = !DILocation(line: 4792, column: 13, scope: !282)
!470 = !DILocation(line: 4795, column: 16, scope: !471)
!471 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4795, column: 15)
!472 = !DILocation(line: 4796, column: 8, scope: !471)
!473 = !DILocation(line: 4796, column: 22, scope: !471)
!474 = !DILocation(line: 4796, column: 39, scope: !471)
!475 = !DILocation(line: 4796, column: 45, scope: !471)
!476 = !DILocation(line: 4796, column: 11, scope: !471)
!477 = !DILocation(line: 4796, column: 50, scope: !471)
!478 = !DILocation(line: 4796, column: 61, scope: !471)
!479 = !DILocation(line: 4796, column: 58, scope: !471)
!480 = !DILocation(line: 4795, column: 15, scope: !282)
!481 = !DILocation(line: 4797, column: 24, scope: !471)
!482 = !DILocation(line: 4797, column: 29, scope: !471)
!483 = !DILocation(line: 4797, column: 13, scope: !471)
!484 = !DILocation(line: 4799, column: 11, scope: !282)
!485 = !DILabel(scope: !282, name: "handle_on_failure_jump", file: !44, line: 4804)
!486 = !DILocation(line: 4804, column: 2, scope: !282)
!487 = !DILocation(line: 4805, column: 11, scope: !282)
!488 = !DILocation(line: 4805, column: 11, scope: !489)
!489 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4805, column: 11)
!490 = !DILocation(line: 4805, column: 11, scope: !491)
!491 = distinct !DILexicalBlock(scope: !489, file: !44, line: 4805, column: 11)
!492 = !DILocation(line: 4814, column: 15, scope: !493)
!493 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4814, column: 15)
!494 = !DILocation(line: 4814, column: 19, scope: !493)
!495 = !DILocation(line: 4814, column: 17, scope: !493)
!496 = !DILocation(line: 4814, column: 23, scope: !493)
!497 = !DILocation(line: 4814, column: 21, scope: !493)
!498 = !DILocation(line: 4814, column: 15, scope: !282)
!499 = !DILocation(line: 4816, column: 20, scope: !500)
!500 = distinct !DILexicalBlock(scope: !501, file: !44, line: 4816, column: 19)
!501 = distinct !DILexicalBlock(scope: !493, file: !44, line: 4815, column: 13)
!502 = !DILocation(line: 4816, column: 19, scope: !501)
!503 = !DILocation(line: 4819, column: 5, scope: !504)
!504 = distinct !DILexicalBlock(scope: !500, file: !44, line: 4817, column: 3)
!505 = !DILocation(line: 4821, column: 13, scope: !501)
!506 = !DILocation(line: 4823, column: 13, scope: !493)
!507 = !DILocation(line: 4823, column: 19, scope: !493)
!508 = !DILocation(line: 4823, column: 31, scope: !493)
!509 = !DILocation(line: 4825, column: 15, scope: !510)
!510 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4825, column: 15)
!511 = !DILocation(line: 4825, column: 15, scope: !282)
!512 = !DILocation(line: 4827, column: 15, scope: !513)
!513 = distinct !DILexicalBlock(scope: !510, file: !44, line: 4826, column: 13)
!514 = !DILocation(line: 4827, column: 15, scope: !515)
!515 = distinct !DILexicalBlock(scope: !513, file: !44, line: 4827, column: 15)
!516 = !DILocation(line: 4827, column: 15, scope: !517)
!517 = distinct !DILexicalBlock(scope: !515, file: !44, line: 4827, column: 15)
!518 = !DILocation(line: 4828, column: 27, scope: !513)
!519 = !DILocation(line: 4829, column: 6, scope: !513)
!520 = !DILocation(line: 4831, column: 11, scope: !282)
!521 = !DILocation(line: 4836, column: 13, scope: !282)
!522 = !DILocation(line: 4839, column: 11, scope: !282)
!523 = !DILocation(line: 4839, column: 11, scope: !524)
!524 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4839, column: 11)
!525 = !DILocation(line: 4839, column: 11, scope: !526)
!526 = distinct !DILexicalBlock(scope: !524, file: !44, line: 4839, column: 11)
!527 = !DILocation(line: 4840, column: 15, scope: !528)
!528 = distinct !DILexicalBlock(scope: !282, file: !44, line: 4840, column: 15)
!529 = !DILocation(line: 4840, column: 17, scope: !528)
!530 = !DILocation(line: 4840, column: 15, scope: !282)
!531 = !DILocation(line: 4842, column: 17, scope: !532)
!532 = distinct !DILexicalBlock(scope: !528, file: !44, line: 4841, column: 6)
!533 = !DILocation(line: 4843, column: 22, scope: !532)
!534 = !DILocation(line: 4844, column: 15, scope: !532)
!535 = !DILocation(line: 4846, column: 11, scope: !282)
!536 = !DILocation(line: 4850, column: 13, scope: !282)
!537 = !DILocation(line: 4851, column: 11, scope: !282)
!538 = !DILocation(line: 4856, column: 6, scope: !282)
!539 = !DILocation(line: 4857, column: 4, scope: !282)
!540 = !DILocation(line: 4861, column: 11, scope: !282)
!541 = !DILocation(line: 4870, column: 24, scope: !251)
!542 = !DILocation(line: 4871, column: 11, scope: !251)
!543 = !DILocation(line: 4871, column: 9, scope: !251)
!544 = !DILocation(line: 4876, column: 24, scope: !197)
!545 = !DILocation(line: 4876, column: 3, scope: !197)
!546 = !DILocation(line: 4876, column: 9, scope: !197)
!547 = !DILocation(line: 4876, column: 21, scope: !197)
!548 = !DILabel(scope: !197, name: "done", file: !44, line: 4878)
!549 = !DILocation(line: 4878, column: 2, scope: !197)
!550 = !DILocation(line: 4880, column: 3, scope: !197)
!551 = !DILocation(line: 4881, column: 1, scope: !197)
!552 = distinct !DISubprogram(name: "xre_set_registers", scope: !44, file: !44, line: 4914, type: !553, scopeLine: 4917, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!553 = !DISubroutineType(types: !554)
!554 = !{null, !191, !84, !29, !77, !77}
!555 = !DILocalVariable(name: "bufp", arg: 1, scope: !552, file: !44, line: 4914, type: !191)
!556 = !DILocation(line: 4914, column: 45, scope: !552)
!557 = !DILocalVariable(name: "regs", arg: 2, scope: !552, file: !44, line: 4915, type: !84)
!558 = !DILocation(line: 4915, column: 40, scope: !552)
!559 = !DILocalVariable(name: "num_regs", arg: 3, scope: !552, file: !44, line: 4915, type: !29)
!560 = !DILocation(line: 4915, column: 55, scope: !552)
!561 = !DILocalVariable(name: "starts", arg: 4, scope: !552, file: !44, line: 4916, type: !77)
!562 = !DILocation(line: 4916, column: 29, scope: !552)
!563 = !DILocalVariable(name: "ends", arg: 5, scope: !552, file: !44, line: 4916, type: !77)
!564 = !DILocation(line: 4916, column: 47, scope: !552)
!565 = !DILocation(line: 4918, column: 7, scope: !566)
!566 = distinct !DILexicalBlock(scope: !552, file: !44, line: 4918, column: 7)
!567 = !DILocation(line: 4918, column: 7, scope: !552)
!568 = !DILocation(line: 4920, column: 7, scope: !569)
!569 = distinct !DILexicalBlock(scope: !566, file: !44, line: 4919, column: 5)
!570 = !DILocation(line: 4920, column: 13, scope: !569)
!571 = !DILocation(line: 4920, column: 28, scope: !569)
!572 = !DILocation(line: 4921, column: 24, scope: !569)
!573 = !DILocation(line: 4921, column: 7, scope: !569)
!574 = !DILocation(line: 4921, column: 13, scope: !569)
!575 = !DILocation(line: 4921, column: 22, scope: !569)
!576 = !DILocation(line: 4922, column: 21, scope: !569)
!577 = !DILocation(line: 4922, column: 7, scope: !569)
!578 = !DILocation(line: 4922, column: 13, scope: !569)
!579 = !DILocation(line: 4922, column: 19, scope: !569)
!580 = !DILocation(line: 4923, column: 19, scope: !569)
!581 = !DILocation(line: 4923, column: 7, scope: !569)
!582 = !DILocation(line: 4923, column: 13, scope: !569)
!583 = !DILocation(line: 4923, column: 17, scope: !569)
!584 = !DILocation(line: 4924, column: 5, scope: !569)
!585 = !DILocation(line: 4927, column: 7, scope: !586)
!586 = distinct !DILexicalBlock(scope: !566, file: !44, line: 4926, column: 5)
!587 = !DILocation(line: 4927, column: 13, scope: !586)
!588 = !DILocation(line: 4927, column: 28, scope: !586)
!589 = !DILocation(line: 4928, column: 7, scope: !586)
!590 = !DILocation(line: 4928, column: 13, scope: !586)
!591 = !DILocation(line: 4928, column: 22, scope: !586)
!592 = !DILocation(line: 4929, column: 21, scope: !586)
!593 = !DILocation(line: 4929, column: 27, scope: !586)
!594 = !DILocation(line: 4929, column: 31, scope: !586)
!595 = !DILocation(line: 4929, column: 7, scope: !586)
!596 = !DILocation(line: 4929, column: 13, scope: !586)
!597 = !DILocation(line: 4929, column: 19, scope: !586)
!598 = !DILocation(line: 4931, column: 1, scope: !552)
!599 = distinct !DISubprogram(name: "xre_search", scope: !44, file: !44, line: 4942, type: !600, scopeLine: 4944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!600 = !DISubroutineType(types: !601)
!601 = !{!7, !191, !101, !7, !7, !7, !84}
!602 = !DILocalVariable(name: "bufp", arg: 1, scope: !599, file: !44, line: 4942, type: !191)
!603 = !DILocation(line: 4942, column: 38, scope: !599)
!604 = !DILocalVariable(name: "string", arg: 2, scope: !599, file: !44, line: 4942, type: !101)
!605 = !DILocation(line: 4942, column: 56, scope: !599)
!606 = !DILocalVariable(name: "size", arg: 3, scope: !599, file: !44, line: 4942, type: !7)
!607 = !DILocation(line: 4942, column: 68, scope: !599)
!608 = !DILocalVariable(name: "startpos", arg: 4, scope: !599, file: !44, line: 4943, type: !7)
!609 = !DILocation(line: 4943, column: 16, scope: !599)
!610 = !DILocalVariable(name: "range", arg: 5, scope: !599, file: !44, line: 4943, type: !7)
!611 = !DILocation(line: 4943, column: 30, scope: !599)
!612 = !DILocalVariable(name: "regs", arg: 6, scope: !599, file: !44, line: 4943, type: !84)
!613 = !DILocation(line: 4943, column: 58, scope: !599)
!614 = !DILocation(line: 4945, column: 23, scope: !599)
!615 = !DILocation(line: 4945, column: 38, scope: !599)
!616 = !DILocation(line: 4945, column: 46, scope: !599)
!617 = !DILocation(line: 4945, column: 52, scope: !599)
!618 = !DILocation(line: 4945, column: 62, scope: !599)
!619 = !DILocation(line: 4946, column: 9, scope: !599)
!620 = !DILocation(line: 4946, column: 15, scope: !599)
!621 = !DILocation(line: 4945, column: 10, scope: !599)
!622 = !DILocation(line: 4945, column: 3, scope: !599)
!623 = distinct !DISubprogram(name: "xre_search_2", scope: !44, file: !44, line: 4975, type: !624, scopeLine: 4978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!624 = !DISubroutineType(types: !625)
!625 = !{!7, !191, !101, !7, !101, !7, !7, !7, !84, !7}
!626 = !DILocalVariable(name: "bufp", arg: 1, scope: !623, file: !44, line: 4975, type: !191)
!627 = !DILocation(line: 4975, column: 40, scope: !623)
!628 = !DILocalVariable(name: "string1", arg: 2, scope: !623, file: !44, line: 4975, type: !101)
!629 = !DILocation(line: 4975, column: 58, scope: !623)
!630 = !DILocalVariable(name: "size1", arg: 3, scope: !623, file: !44, line: 4975, type: !7)
!631 = !DILocation(line: 4975, column: 71, scope: !623)
!632 = !DILocalVariable(name: "string2", arg: 4, scope: !623, file: !44, line: 4976, type: !101)
!633 = !DILocation(line: 4976, column: 26, scope: !623)
!634 = !DILocalVariable(name: "size2", arg: 5, scope: !623, file: !44, line: 4976, type: !7)
!635 = !DILocation(line: 4976, column: 39, scope: !623)
!636 = !DILocalVariable(name: "startpos", arg: 6, scope: !623, file: !44, line: 4976, type: !7)
!637 = !DILocation(line: 4976, column: 50, scope: !623)
!638 = !DILocalVariable(name: "range", arg: 7, scope: !623, file: !44, line: 4976, type: !7)
!639 = !DILocation(line: 4976, column: 64, scope: !623)
!640 = !DILocalVariable(name: "regs", arg: 8, scope: !623, file: !44, line: 4977, type: !84)
!641 = !DILocation(line: 4977, column: 35, scope: !623)
!642 = !DILocalVariable(name: "stop", arg: 9, scope: !623, file: !44, line: 4977, type: !7)
!643 = !DILocation(line: 4977, column: 45, scope: !623)
!644 = !DILocation(line: 4985, column: 30, scope: !623)
!645 = !DILocation(line: 4985, column: 36, scope: !623)
!646 = !DILocation(line: 4985, column: 45, scope: !623)
!647 = !DILocation(line: 4985, column: 52, scope: !623)
!648 = !DILocation(line: 4985, column: 61, scope: !623)
!649 = !DILocation(line: 4985, column: 68, scope: !623)
!650 = !DILocation(line: 4986, column: 9, scope: !623)
!651 = !DILocation(line: 4986, column: 16, scope: !623)
!652 = !DILocation(line: 4986, column: 22, scope: !623)
!653 = !DILocation(line: 4985, column: 12, scope: !623)
!654 = !DILocation(line: 4985, column: 5, scope: !623)
!655 = distinct !DISubprogram(name: "byte_re_search_2", scope: !44, file: !44, line: 5033, type: !624, scopeLine: 5037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!656 = !DILocalVariable(name: "bufp", arg: 1, scope: !655, file: !44, line: 5033, type: !191)
!657 = !DILocation(line: 5033, column: 48, scope: !655)
!658 = !DILocalVariable(name: "string1", arg: 2, scope: !655, file: !44, line: 5033, type: !101)
!659 = !DILocation(line: 5033, column: 66, scope: !655)
!660 = !DILocalVariable(name: "size1", arg: 3, scope: !655, file: !44, line: 5034, type: !7)
!661 = !DILocation(line: 5034, column: 26, scope: !655)
!662 = !DILocalVariable(name: "string2", arg: 4, scope: !655, file: !44, line: 5034, type: !101)
!663 = !DILocation(line: 5034, column: 45, scope: !655)
!664 = !DILocalVariable(name: "size2", arg: 5, scope: !655, file: !44, line: 5034, type: !7)
!665 = !DILocation(line: 5034, column: 58, scope: !655)
!666 = !DILocalVariable(name: "startpos", arg: 6, scope: !655, file: !44, line: 5035, type: !7)
!667 = !DILocation(line: 5035, column: 26, scope: !655)
!668 = !DILocalVariable(name: "range", arg: 7, scope: !655, file: !44, line: 5035, type: !7)
!669 = !DILocation(line: 5035, column: 40, scope: !655)
!670 = !DILocalVariable(name: "regs", arg: 8, scope: !655, file: !44, line: 5036, type: !84)
!671 = !DILocation(line: 5036, column: 43, scope: !655)
!672 = !DILocalVariable(name: "stop", arg: 9, scope: !655, file: !44, line: 5036, type: !7)
!673 = !DILocation(line: 5036, column: 53, scope: !655)
!674 = !DILocalVariable(name: "val", scope: !655, file: !44, line: 5038, type: !7)
!675 = !DILocation(line: 5038, column: 7, scope: !655)
!676 = !DILocalVariable(name: "fastmap", scope: !655, file: !44, line: 5039, type: !79)
!677 = !DILocation(line: 5039, column: 18, scope: !655)
!678 = !DILocation(line: 5039, column: 28, scope: !655)
!679 = !DILocation(line: 5039, column: 34, scope: !655)
!680 = !DILocalVariable(name: "translate", scope: !655, file: !44, line: 5040, type: !79)
!681 = !DILocation(line: 5040, column: 30, scope: !655)
!682 = !DILocation(line: 5040, column: 42, scope: !655)
!683 = !DILocation(line: 5040, column: 48, scope: !655)
!684 = !DILocalVariable(name: "total_size", scope: !655, file: !44, line: 5041, type: !7)
!685 = !DILocation(line: 5041, column: 7, scope: !655)
!686 = !DILocation(line: 5041, column: 20, scope: !655)
!687 = !DILocation(line: 5041, column: 28, scope: !655)
!688 = !DILocation(line: 5041, column: 26, scope: !655)
!689 = !DILocalVariable(name: "endpos", scope: !655, file: !44, line: 5042, type: !7)
!690 = !DILocation(line: 5042, column: 7, scope: !655)
!691 = !DILocation(line: 5042, column: 16, scope: !655)
!692 = !DILocation(line: 5042, column: 27, scope: !655)
!693 = !DILocation(line: 5042, column: 25, scope: !655)
!694 = !DILocation(line: 5055, column: 7, scope: !695)
!695 = distinct !DILexicalBlock(scope: !655, file: !44, line: 5055, column: 7)
!696 = !DILocation(line: 5055, column: 16, scope: !695)
!697 = !DILocation(line: 5055, column: 20, scope: !695)
!698 = !DILocation(line: 5055, column: 23, scope: !695)
!699 = !DILocation(line: 5055, column: 34, scope: !695)
!700 = !DILocation(line: 5055, column: 32, scope: !695)
!701 = !DILocation(line: 5055, column: 7, scope: !655)
!702 = !DILocation(line: 5056, column: 5, scope: !695)
!703 = !DILocation(line: 5061, column: 7, scope: !704)
!704 = distinct !DILexicalBlock(scope: !655, file: !44, line: 5061, column: 7)
!705 = !DILocation(line: 5061, column: 14, scope: !704)
!706 = !DILocation(line: 5061, column: 7, scope: !655)
!707 = !DILocation(line: 5062, column: 17, scope: !704)
!708 = !DILocation(line: 5062, column: 15, scope: !704)
!709 = !DILocation(line: 5062, column: 11, scope: !704)
!710 = !DILocation(line: 5062, column: 5, scope: !704)
!711 = !DILocation(line: 5063, column: 12, scope: !712)
!712 = distinct !DILexicalBlock(scope: !704, file: !44, line: 5063, column: 12)
!713 = !DILocation(line: 5063, column: 21, scope: !712)
!714 = !DILocation(line: 5063, column: 19, scope: !712)
!715 = !DILocation(line: 5063, column: 12, scope: !704)
!716 = !DILocation(line: 5064, column: 13, scope: !712)
!717 = !DILocation(line: 5064, column: 26, scope: !712)
!718 = !DILocation(line: 5064, column: 24, scope: !712)
!719 = !DILocation(line: 5064, column: 11, scope: !712)
!720 = !DILocation(line: 5064, column: 5, scope: !712)
!721 = !DILocation(line: 5068, column: 7, scope: !722)
!722 = distinct !DILexicalBlock(scope: !655, file: !44, line: 5068, column: 7)
!723 = !DILocation(line: 5068, column: 13, scope: !722)
!724 = !DILocation(line: 5068, column: 18, scope: !722)
!725 = !DILocation(line: 5068, column: 22, scope: !722)
!726 = !DILocation(line: 5068, column: 25, scope: !722)
!727 = !DILocation(line: 5068, column: 31, scope: !722)
!728 = !DILocation(line: 5069, column: 7, scope: !722)
!729 = !DILocation(line: 5069, column: 25, scope: !722)
!730 = !DILocation(line: 5069, column: 31, scope: !722)
!731 = !DILocation(line: 5069, column: 11, scope: !722)
!732 = !DILocation(line: 5069, column: 41, scope: !722)
!733 = !DILocation(line: 5071, column: 4, scope: !722)
!734 = !DILocation(line: 5071, column: 22, scope: !722)
!735 = !DILocation(line: 5071, column: 28, scope: !722)
!736 = !DILocation(line: 5071, column: 8, scope: !722)
!737 = !DILocation(line: 5071, column: 38, scope: !722)
!738 = !DILocation(line: 5072, column: 8, scope: !722)
!739 = !DILocation(line: 5072, column: 12, scope: !722)
!740 = !DILocation(line: 5072, column: 18, scope: !722)
!741 = !DILocation(line: 5068, column: 7, scope: !655)
!742 = !DILocation(line: 5074, column: 11, scope: !743)
!743 = distinct !DILexicalBlock(scope: !744, file: !44, line: 5074, column: 11)
!744 = distinct !DILexicalBlock(scope: !722, file: !44, line: 5073, column: 5)
!745 = !DILocation(line: 5074, column: 20, scope: !743)
!746 = !DILocation(line: 5074, column: 11, scope: !744)
!747 = !DILocation(line: 5075, column: 2, scope: !743)
!748 = !DILocation(line: 5077, column: 8, scope: !743)
!749 = !DILocation(line: 5078, column: 5, scope: !744)
!750 = !DILocation(line: 5092, column: 7, scope: !751)
!751 = distinct !DILexicalBlock(scope: !655, file: !44, line: 5092, column: 7)
!752 = !DILocation(line: 5092, column: 15, scope: !751)
!753 = !DILocation(line: 5092, column: 19, scope: !751)
!754 = !DILocation(line: 5092, column: 25, scope: !751)
!755 = !DILocation(line: 5092, column: 7, scope: !655)
!756 = !DILocation(line: 5093, column: 29, scope: !757)
!757 = distinct !DILexicalBlock(scope: !751, file: !44, line: 5093, column: 9)
!758 = !DILocation(line: 5093, column: 9, scope: !757)
!759 = !DILocation(line: 5093, column: 35, scope: !757)
!760 = !DILocation(line: 5093, column: 9, scope: !751)
!761 = !DILocation(line: 5094, column: 7, scope: !757)
!762 = !DILocation(line: 5093, column: 39, scope: !757)
!763 = !DILocation(line: 5172, column: 3, scope: !655)
!764 = !DILocation(line: 5178, column: 11, scope: !765)
!765 = distinct !DILexicalBlock(scope: !766, file: !44, line: 5178, column: 11)
!766 = distinct !DILexicalBlock(scope: !767, file: !44, line: 5173, column: 5)
!767 = distinct !DILexicalBlock(scope: !768, file: !44, line: 5172, column: 3)
!768 = distinct !DILexicalBlock(scope: !655, file: !44, line: 5172, column: 3)
!769 = !DILocation(line: 5178, column: 19, scope: !765)
!770 = !DILocation(line: 5178, column: 22, scope: !765)
!771 = !DILocation(line: 5178, column: 33, scope: !765)
!772 = !DILocation(line: 5178, column: 31, scope: !765)
!773 = !DILocation(line: 5178, column: 44, scope: !765)
!774 = !DILocation(line: 5178, column: 48, scope: !765)
!775 = !DILocation(line: 5178, column: 54, scope: !765)
!776 = !DILocation(line: 5178, column: 11, scope: !766)
!777 = !DILocation(line: 5180, column: 8, scope: !778)
!778 = distinct !DILexicalBlock(scope: !779, file: !44, line: 5180, column: 8)
!779 = distinct !DILexicalBlock(scope: !765, file: !44, line: 5179, column: 2)
!780 = !DILocation(line: 5180, column: 14, scope: !778)
!781 = !DILocation(line: 5180, column: 8, scope: !779)
!782 = !DILocalVariable(name: "d", scope: !783, file: !44, line: 5182, type: !101)
!783 = distinct !DILexicalBlock(scope: !778, file: !44, line: 5181, column: 6)
!784 = !DILocation(line: 5182, column: 29, scope: !783)
!785 = !DILocalVariable(name: "lim", scope: !783, file: !44, line: 5183, type: !7)
!786 = !DILocation(line: 5183, column: 21, scope: !783)
!787 = !DILocalVariable(name: "irange", scope: !783, file: !44, line: 5184, type: !7)
!788 = !DILocation(line: 5184, column: 12, scope: !783)
!789 = !DILocation(line: 5184, column: 21, scope: !783)
!790 = !DILocation(line: 5186, column: 19, scope: !791)
!791 = distinct !DILexicalBlock(scope: !783, file: !44, line: 5186, column: 19)
!792 = !DILocation(line: 5186, column: 30, scope: !791)
!793 = !DILocation(line: 5186, column: 28, scope: !791)
!794 = !DILocation(line: 5186, column: 36, scope: !791)
!795 = !DILocation(line: 5186, column: 39, scope: !791)
!796 = !DILocation(line: 5186, column: 50, scope: !791)
!797 = !DILocation(line: 5186, column: 48, scope: !791)
!798 = !DILocation(line: 5186, column: 59, scope: !791)
!799 = !DILocation(line: 5186, column: 56, scope: !791)
!800 = !DILocation(line: 5186, column: 19, scope: !783)
!801 = !DILocation(line: 5187, column: 23, scope: !791)
!802 = !DILocation(line: 5187, column: 32, scope: !791)
!803 = !DILocation(line: 5187, column: 40, scope: !791)
!804 = !DILocation(line: 5187, column: 38, scope: !791)
!805 = !DILocation(line: 5187, column: 29, scope: !791)
!806 = !DILocation(line: 5187, column: 21, scope: !791)
!807 = !DILocation(line: 5187, column: 17, scope: !791)
!808 = !DILocation(line: 5189, column: 13, scope: !783)
!809 = !DILocation(line: 5189, column: 25, scope: !783)
!810 = !DILocation(line: 5189, column: 22, scope: !783)
!811 = !DILocation(line: 5189, column: 33, scope: !783)
!812 = !DILocation(line: 5189, column: 43, scope: !783)
!813 = !DILocation(line: 5189, column: 41, scope: !783)
!814 = !DILocation(line: 5189, column: 51, scope: !783)
!815 = !DILocation(line: 5189, column: 62, scope: !783)
!816 = !DILocation(line: 5189, column: 60, scope: !783)
!817 = !DILocation(line: 5189, column: 10, scope: !783)
!818 = !DILocation(line: 5193, column: 12, scope: !819)
!819 = distinct !DILexicalBlock(scope: !783, file: !44, line: 5193, column: 12)
!820 = !DILocation(line: 5193, column: 12, scope: !783)
!821 = !DILocation(line: 5194, column: 17, scope: !819)
!822 = !DILocation(line: 5194, column: 24, scope: !819)
!823 = !DILocation(line: 5194, column: 32, scope: !819)
!824 = !DILocation(line: 5194, column: 30, scope: !819)
!825 = !DILocation(line: 5195, column: 24, scope: !819)
!826 = !DILocation(line: 5195, column: 28, scope: !819)
!827 = !DILocation(line: 5196, column: 8, scope: !819)
!828 = !DILocation(line: 5196, column: 36, scope: !819)
!829 = !DILocation(line: 5196, column: 34, scope: !819)
!830 = !DILocation(line: 5195, column: 27, scope: !819)
!831 = !DILocation(line: 0, scope: !819)
!832 = !DILocation(line: 5197, column: 24, scope: !819)
!833 = distinct !{!833, !821, !832}
!834 = !DILocation(line: 5199, column: 17, scope: !819)
!835 = !DILocation(line: 5199, column: 24, scope: !819)
!836 = !DILocation(line: 5199, column: 32, scope: !819)
!837 = !DILocation(line: 5199, column: 30, scope: !819)
!838 = !DILocation(line: 5199, column: 36, scope: !819)
!839 = !DILocation(line: 5199, column: 40, scope: !819)
!840 = !DILocation(line: 5199, column: 66, scope: !819)
!841 = !DILocation(line: 5199, column: 64, scope: !819)
!842 = !DILocation(line: 5199, column: 39, scope: !819)
!843 = !DILocation(line: 5200, column: 24, scope: !819)
!844 = distinct !{!844, !834, !843}
!845 = !DILocation(line: 5202, column: 20, scope: !783)
!846 = !DILocation(line: 5202, column: 29, scope: !783)
!847 = !DILocation(line: 5202, column: 27, scope: !783)
!848 = !DILocation(line: 5202, column: 17, scope: !783)
!849 = !DILocation(line: 5203, column: 6, scope: !783)
!850 = !DILocalVariable(name: "c", scope: !851, file: !44, line: 5206, type: !80)
!851 = distinct !DILexicalBlock(scope: !778, file: !44, line: 5205, column: 6)
!852 = !DILocation(line: 5206, column: 24, scope: !851)
!853 = !DILocation(line: 5206, column: 29, scope: !851)
!854 = !DILocation(line: 5206, column: 35, scope: !851)
!855 = !DILocation(line: 5206, column: 40, scope: !851)
!856 = !DILocation(line: 5206, column: 43, scope: !851)
!857 = !DILocation(line: 5206, column: 55, scope: !851)
!858 = !DILocation(line: 5206, column: 52, scope: !851)
!859 = !DILocation(line: 5207, column: 13, scope: !851)
!860 = !DILocation(line: 5207, column: 21, scope: !851)
!861 = !DILocation(line: 5207, column: 32, scope: !851)
!862 = !DILocation(line: 5207, column: 30, scope: !851)
!863 = !DILocation(line: 5208, column: 13, scope: !851)
!864 = !DILocation(line: 5208, column: 21, scope: !851)
!865 = !DILocation(line: 5206, column: 28, scope: !851)
!866 = !DILocation(line: 5210, column: 13, scope: !867)
!867 = distinct !DILexicalBlock(scope: !851, file: !44, line: 5210, column: 12)
!868 = !DILocation(line: 5210, column: 37, scope: !867)
!869 = !DILocation(line: 5210, column: 21, scope: !867)
!870 = !DILocation(line: 5210, column: 12, scope: !851)
!871 = !DILocation(line: 5211, column: 3, scope: !867)
!872 = !DILocation(line: 5213, column: 2, scope: !779)
!873 = !DILocation(line: 5216, column: 11, scope: !874)
!874 = distinct !DILexicalBlock(scope: !766, file: !44, line: 5216, column: 11)
!875 = !DILocation(line: 5216, column: 17, scope: !874)
!876 = !DILocation(line: 5216, column: 22, scope: !874)
!877 = !DILocation(line: 5216, column: 25, scope: !874)
!878 = !DILocation(line: 5216, column: 37, scope: !874)
!879 = !DILocation(line: 5216, column: 34, scope: !874)
!880 = !DILocation(line: 5216, column: 48, scope: !874)
!881 = !DILocation(line: 5216, column: 51, scope: !874)
!882 = !DILocation(line: 5217, column: 11, scope: !874)
!883 = !DILocation(line: 5217, column: 15, scope: !874)
!884 = !DILocation(line: 5217, column: 21, scope: !874)
!885 = !DILocation(line: 5216, column: 11, scope: !766)
!886 = !DILocation(line: 5222, column: 10, scope: !887)
!887 = distinct !DILexicalBlock(scope: !874, file: !44, line: 5218, column: 8)
!888 = !DILocation(line: 5232, column: 39, scope: !766)
!889 = !DILocation(line: 5232, column: 45, scope: !766)
!890 = !DILocation(line: 5232, column: 54, scope: !766)
!891 = !DILocation(line: 5232, column: 61, scope: !766)
!892 = !DILocation(line: 5233, column: 11, scope: !766)
!893 = !DILocation(line: 5233, column: 18, scope: !766)
!894 = !DILocation(line: 5233, column: 28, scope: !766)
!895 = !DILocation(line: 5233, column: 34, scope: !766)
!896 = !DILocation(line: 5232, column: 13, scope: !766)
!897 = !DILocation(line: 5232, column: 11, scope: !766)
!898 = !DILocation(line: 5242, column: 11, scope: !899)
!899 = distinct !DILexicalBlock(scope: !766, file: !44, line: 5242, column: 11)
!900 = !DILocation(line: 5242, column: 15, scope: !899)
!901 = !DILocation(line: 5242, column: 11, scope: !766)
!902 = !DILocation(line: 5247, column: 11, scope: !903)
!903 = distinct !DILexicalBlock(scope: !899, file: !44, line: 5243, column: 2)
!904 = !DILocation(line: 5247, column: 4, scope: !903)
!905 = !DILocation(line: 5250, column: 11, scope: !906)
!906 = distinct !DILexicalBlock(scope: !766, file: !44, line: 5250, column: 11)
!907 = !DILocation(line: 5250, column: 15, scope: !906)
!908 = !DILocation(line: 5250, column: 11, scope: !766)
!909 = !DILocation(line: 5255, column: 4, scope: !910)
!910 = distinct !DILexicalBlock(scope: !906, file: !44, line: 5251, column: 2)
!911 = !DILocation(line: 5250, column: 19, scope: !906)
!912 = !DILabel(scope: !766, name: "advance", file: !44, line: 5258)
!913 = !DILocation(line: 5258, column: 5, scope: !766)
!914 = !DILocation(line: 5259, column: 12, scope: !915)
!915 = distinct !DILexicalBlock(scope: !766, file: !44, line: 5259, column: 11)
!916 = !DILocation(line: 5259, column: 11, scope: !766)
!917 = !DILocation(line: 5260, column: 9, scope: !915)
!918 = !DILocation(line: 5261, column: 16, scope: !919)
!919 = distinct !DILexicalBlock(scope: !915, file: !44, line: 5261, column: 16)
!920 = !DILocation(line: 5261, column: 22, scope: !919)
!921 = !DILocation(line: 5261, column: 16, scope: !915)
!922 = !DILocation(line: 5263, column: 16, scope: !923)
!923 = distinct !DILexicalBlock(scope: !919, file: !44, line: 5262, column: 9)
!924 = !DILocation(line: 5264, column: 19, scope: !923)
!925 = !DILocation(line: 5265, column: 9, scope: !923)
!926 = !DILocation(line: 5268, column: 16, scope: !927)
!927 = distinct !DILexicalBlock(scope: !919, file: !44, line: 5267, column: 9)
!928 = !DILocation(line: 5269, column: 19, scope: !927)
!929 = !DILocation(line: 5172, column: 3, scope: !767)
!930 = distinct !{!930, !931, !932}
!931 = !DILocation(line: 5172, column: 3, scope: !768)
!932 = !DILocation(line: 5271, column: 5, scope: !768)
!933 = !DILocation(line: 5275, column: 3, scope: !655)
!934 = !DILocation(line: 5276, column: 1, scope: !655)
!935 = distinct !DISubprogram(name: "xre_match", scope: !44, file: !44, line: 5419, type: !936, scopeLine: 5421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!936 = !DISubroutineType(types: !937)
!937 = !{!7, !191, !101, !7, !7, !84}
!938 = !DILocalVariable(name: "bufp", arg: 1, scope: !935, file: !44, line: 5419, type: !191)
!939 = !DILocation(line: 5419, column: 37, scope: !935)
!940 = !DILocalVariable(name: "string", arg: 2, scope: !935, file: !44, line: 5419, type: !101)
!941 = !DILocation(line: 5419, column: 55, scope: !935)
!942 = !DILocalVariable(name: "size", arg: 3, scope: !935, file: !44, line: 5420, type: !7)
!943 = !DILocation(line: 5420, column: 15, scope: !935)
!944 = !DILocalVariable(name: "pos", arg: 4, scope: !935, file: !44, line: 5420, type: !7)
!945 = !DILocation(line: 5420, column: 25, scope: !935)
!946 = !DILocalVariable(name: "regs", arg: 5, scope: !935, file: !44, line: 5420, type: !84)
!947 = !DILocation(line: 5420, column: 51, scope: !935)
!948 = !DILocalVariable(name: "result", scope: !935, file: !44, line: 5422, type: !7)
!949 = !DILocation(line: 5422, column: 7, scope: !935)
!950 = !DILocation(line: 5430, column: 40, scope: !935)
!951 = !DILocation(line: 5430, column: 55, scope: !935)
!952 = !DILocation(line: 5430, column: 63, scope: !935)
!953 = !DILocation(line: 5431, column: 7, scope: !935)
!954 = !DILocation(line: 5431, column: 12, scope: !935)
!955 = !DILocation(line: 5431, column: 18, scope: !935)
!956 = !DILocation(line: 5430, column: 14, scope: !935)
!957 = !DILocation(line: 5430, column: 12, scope: !935)
!958 = !DILocation(line: 5437, column: 10, scope: !935)
!959 = !DILocation(line: 5437, column: 3, scope: !935)
!960 = distinct !DISubprogram(name: "byte_re_match_2_internal", scope: !44, file: !44, line: 5569, type: !961, scopeLine: 5575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!961 = !DISubroutineType(types: !962)
!962 = !{!7, !191, !101, !7, !101, !7, !7, !84, !7}
!963 = !DILocalVariable(name: "bufp", arg: 1, scope: !960, file: !44, line: 5569, type: !191)
!964 = !DILocation(line: 5569, column: 53, scope: !960)
!965 = !DILocalVariable(name: "string1", arg: 2, scope: !960, file: !44, line: 5570, type: !101)
!966 = !DILocation(line: 5570, column: 39, scope: !960)
!967 = !DILocalVariable(name: "size1", arg: 3, scope: !960, file: !44, line: 5570, type: !7)
!968 = !DILocation(line: 5570, column: 52, scope: !960)
!969 = !DILocalVariable(name: "string2", arg: 4, scope: !960, file: !44, line: 5571, type: !101)
!970 = !DILocation(line: 5571, column: 39, scope: !960)
!971 = !DILocalVariable(name: "size2", arg: 5, scope: !960, file: !44, line: 5571, type: !7)
!972 = !DILocation(line: 5571, column: 52, scope: !960)
!973 = !DILocalVariable(name: "pos", arg: 6, scope: !960, file: !44, line: 5572, type: !7)
!974 = !DILocation(line: 5572, column: 31, scope: !960)
!975 = !DILocalVariable(name: "regs", arg: 7, scope: !960, file: !44, line: 5573, type: !84)
!976 = !DILocation(line: 5573, column: 27, scope: !960)
!977 = !DILocalVariable(name: "stop", arg: 8, scope: !960, file: !44, line: 5573, type: !7)
!978 = !DILocation(line: 5573, column: 37, scope: !960)
!979 = !DILocalVariable(name: "mcnt", scope: !960, file: !44, line: 5577, type: !7)
!980 = !DILocation(line: 5577, column: 7, scope: !960)
!981 = !DILocalVariable(name: "p1", scope: !960, file: !44, line: 5578, type: !81)
!982 = !DILocation(line: 5578, column: 12, scope: !960)
!983 = !DILocalVariable(name: "end1", scope: !960, file: !44, line: 5587, type: !101)
!984 = !DILocation(line: 5587, column: 17, scope: !960)
!985 = !DILocalVariable(name: "end2", scope: !960, file: !44, line: 5587, type: !101)
!986 = !DILocation(line: 5587, column: 24, scope: !960)
!987 = !DILocalVariable(name: "end_match_1", scope: !960, file: !44, line: 5591, type: !101)
!988 = !DILocation(line: 5591, column: 17, scope: !960)
!989 = !DILocalVariable(name: "end_match_2", scope: !960, file: !44, line: 5591, type: !101)
!990 = !DILocation(line: 5591, column: 31, scope: !960)
!991 = !DILocalVariable(name: "d", scope: !960, file: !44, line: 5594, type: !101)
!992 = !DILocation(line: 5594, column: 17, scope: !960)
!993 = !DILocalVariable(name: "dend", scope: !960, file: !44, line: 5594, type: !101)
!994 = !DILocation(line: 5594, column: 21, scope: !960)
!995 = !DILocalVariable(name: "p", scope: !960, file: !44, line: 5601, type: !81)
!996 = !DILocation(line: 5601, column: 12, scope: !960)
!997 = !DILocation(line: 5601, column: 16, scope: !960)
!998 = !DILocation(line: 5601, column: 22, scope: !960)
!999 = !DILocalVariable(name: "pend", scope: !960, file: !44, line: 5602, type: !81)
!1000 = !DILocation(line: 5602, column: 21, scope: !960)
!1001 = !DILocation(line: 5602, column: 28, scope: !960)
!1002 = !DILocation(line: 5602, column: 32, scope: !960)
!1003 = !DILocation(line: 5602, column: 38, scope: !960)
!1004 = !DILocation(line: 5602, column: 30, scope: !960)
!1005 = !DILocalVariable(name: "just_past_start_mem", scope: !960, file: !44, line: 5607, type: !81)
!1006 = !DILocation(line: 5607, column: 12, scope: !960)
!1007 = !DILocalVariable(name: "translate", scope: !960, file: !44, line: 5610, type: !79)
!1008 = !DILocation(line: 5610, column: 21, scope: !960)
!1009 = !DILocation(line: 5610, column: 33, scope: !960)
!1010 = !DILocation(line: 5610, column: 39, scope: !960)
!1011 = !DILocalVariable(name: "fail_stack", scope: !960, file: !44, line: 5622, type: !205)
!1012 = !DILocation(line: 5622, column: 27, scope: !960)
!1013 = !DILocalVariable(name: "num_regs", scope: !960, file: !44, line: 5638, type: !145)
!1014 = !DILocation(line: 5638, column: 10, scope: !960)
!1015 = !DILocation(line: 5638, column: 21, scope: !960)
!1016 = !DILocation(line: 5638, column: 27, scope: !960)
!1017 = !DILocation(line: 5638, column: 35, scope: !960)
!1018 = !DILocalVariable(name: "lowest_active_reg", scope: !960, file: !44, line: 5641, type: !115)
!1019 = !DILocation(line: 5641, column: 16, scope: !960)
!1020 = !DILocalVariable(name: "highest_active_reg", scope: !960, file: !44, line: 5642, type: !115)
!1021 = !DILocation(line: 5642, column: 16, scope: !960)
!1022 = !DILocalVariable(name: "regstart", scope: !960, file: !44, line: 5652, type: !100)
!1023 = !DILocation(line: 5652, column: 18, scope: !960)
!1024 = !DILocalVariable(name: "regend", scope: !960, file: !44, line: 5652, type: !100)
!1025 = !DILocation(line: 5652, column: 30, scope: !960)
!1026 = !DILocalVariable(name: "old_regstart", scope: !960, file: !44, line: 5661, type: !100)
!1027 = !DILocation(line: 5661, column: 18, scope: !960)
!1028 = !DILocalVariable(name: "old_regend", scope: !960, file: !44, line: 5661, type: !100)
!1029 = !DILocation(line: 5661, column: 34, scope: !960)
!1030 = !DILocalVariable(name: "reg_info", scope: !960, file: !44, line: 5671, type: !103)
!1031 = !DILocation(line: 5671, column: 31, scope: !960)
!1032 = !DILocalVariable(name: "best_regs_set", scope: !960, file: !44, line: 5678, type: !29)
!1033 = !DILocation(line: 5678, column: 12, scope: !960)
!1034 = !DILocalVariable(name: "best_regstart", scope: !960, file: !44, line: 5680, type: !100)
!1035 = !DILocation(line: 5680, column: 18, scope: !960)
!1036 = !DILocalVariable(name: "best_regend", scope: !960, file: !44, line: 5680, type: !100)
!1037 = !DILocation(line: 5680, column: 35, scope: !960)
!1038 = !DILocalVariable(name: "match_end", scope: !960, file: !44, line: 5691, type: !101)
!1039 = !DILocation(line: 5691, column: 17, scope: !960)
!1040 = !DILocalVariable(name: "set_regs_matched_done", scope: !960, file: !44, line: 5694, type: !7)
!1041 = !DILocation(line: 5694, column: 7, scope: !960)
!1042 = !DILocalVariable(name: "reg_dummy", scope: !960, file: !44, line: 5698, type: !100)
!1043 = !DILocation(line: 5698, column: 18, scope: !960)
!1044 = !DILocalVariable(name: "reg_info_dummy", scope: !960, file: !44, line: 5699, type: !103)
!1045 = !DILocation(line: 5699, column: 31, scope: !960)
!1046 = !DILocation(line: 5709, column: 3, scope: !960)
!1047 = !DILocation(line: 5709, column: 3, scope: !1048)
!1048 = distinct !DILexicalBlock(scope: !960, file: !44, line: 5709, column: 3)
!1049 = !DILocation(line: 5709, column: 3, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !1048, file: !44, line: 5709, column: 3)
!1051 = !DILocation(line: 5717, column: 7, scope: !1052)
!1052 = distinct !DILexicalBlock(scope: !960, file: !44, line: 5717, column: 7)
!1053 = !DILocation(line: 5717, column: 13, scope: !1052)
!1054 = !DILocation(line: 5717, column: 7, scope: !960)
!1055 = !DILocation(line: 5719, column: 18, scope: !1056)
!1056 = distinct !DILexicalBlock(scope: !1052, file: !44, line: 5718, column: 5)
!1057 = !DILocation(line: 5719, column: 16, scope: !1056)
!1058 = !DILocation(line: 5720, column: 16, scope: !1056)
!1059 = !DILocation(line: 5720, column: 14, scope: !1056)
!1060 = !DILocation(line: 5721, column: 22, scope: !1056)
!1061 = !DILocation(line: 5721, column: 20, scope: !1056)
!1062 = !DILocation(line: 5722, column: 20, scope: !1056)
!1063 = !DILocation(line: 5722, column: 18, scope: !1056)
!1064 = !DILocation(line: 5723, column: 23, scope: !1056)
!1065 = !DILocation(line: 5723, column: 21, scope: !1056)
!1066 = !DILocation(line: 5724, column: 21, scope: !1056)
!1067 = !DILocation(line: 5724, column: 19, scope: !1056)
!1068 = !DILocation(line: 5725, column: 18, scope: !1056)
!1069 = !DILocation(line: 5725, column: 16, scope: !1056)
!1070 = !DILocation(line: 5726, column: 19, scope: !1056)
!1071 = !DILocation(line: 5726, column: 17, scope: !1056)
!1072 = !DILocation(line: 5727, column: 24, scope: !1056)
!1073 = !DILocation(line: 5727, column: 22, scope: !1056)
!1074 = !DILocation(line: 5729, column: 13, scope: !1075)
!1075 = distinct !DILexicalBlock(scope: !1056, file: !44, line: 5729, column: 11)
!1076 = !DILocation(line: 5729, column: 22, scope: !1075)
!1077 = !DILocation(line: 5729, column: 25, scope: !1075)
!1078 = !DILocation(line: 5729, column: 32, scope: !1075)
!1079 = !DILocation(line: 5729, column: 35, scope: !1075)
!1080 = !DILocation(line: 5729, column: 48, scope: !1075)
!1081 = !DILocation(line: 5729, column: 51, scope: !1075)
!1082 = !DILocation(line: 5729, column: 62, scope: !1075)
!1083 = !DILocation(line: 5729, column: 65, scope: !1075)
!1084 = !DILocation(line: 5730, column: 13, scope: !1075)
!1085 = !DILocation(line: 5730, column: 16, scope: !1075)
!1086 = !DILocation(line: 5730, column: 30, scope: !1075)
!1087 = !DILocation(line: 5730, column: 33, scope: !1075)
!1088 = !DILocation(line: 5730, column: 45, scope: !1075)
!1089 = !DILocation(line: 5730, column: 48, scope: !1075)
!1090 = !DILocation(line: 5730, column: 58, scope: !1075)
!1091 = !DILocation(line: 5730, column: 61, scope: !1075)
!1092 = !DILocation(line: 5729, column: 11, scope: !1056)
!1093 = !DILocation(line: 5732, column: 11, scope: !1094)
!1094 = distinct !DILexicalBlock(scope: !1075, file: !44, line: 5731, column: 9)
!1095 = !DILocation(line: 5732, column: 11, scope: !1096)
!1096 = distinct !DILexicalBlock(scope: !1097, file: !44, line: 5732, column: 11)
!1097 = distinct !DILexicalBlock(scope: !1094, file: !44, line: 5732, column: 11)
!1098 = !DILocation(line: 5732, column: 11, scope: !1097)
!1099 = !DILocation(line: 5732, column: 11, scope: !1100)
!1100 = distinct !DILexicalBlock(scope: !1097, file: !44, line: 5732, column: 11)
!1101 = !DILocation(line: 5732, column: 11, scope: !1102)
!1102 = distinct !DILexicalBlock(scope: !1097, file: !44, line: 5732, column: 11)
!1103 = !DILocation(line: 5732, column: 11, scope: !1104)
!1104 = distinct !DILexicalBlock(scope: !1097, file: !44, line: 5732, column: 11)
!1105 = !DILocation(line: 5732, column: 11, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1097, file: !44, line: 5732, column: 11)
!1107 = !DILocation(line: 5732, column: 11, scope: !1108)
!1108 = distinct !DILexicalBlock(scope: !1097, file: !44, line: 5732, column: 11)
!1109 = !DILocation(line: 5732, column: 11, scope: !1110)
!1110 = distinct !DILexicalBlock(scope: !1097, file: !44, line: 5732, column: 11)
!1111 = !DILocation(line: 5732, column: 11, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1097, file: !44, line: 5732, column: 11)
!1113 = !DILocation(line: 5732, column: 11, scope: !1114)
!1114 = distinct !DILexicalBlock(scope: !1097, file: !44, line: 5732, column: 11)
!1115 = !DILocation(line: 5733, column: 11, scope: !1094)
!1116 = !DILocation(line: 5735, column: 5, scope: !1056)
!1117 = !DILocation(line: 5741, column: 35, scope: !1118)
!1118 = distinct !DILexicalBlock(scope: !1052, file: !44, line: 5737, column: 5)
!1119 = !DILocation(line: 5741, column: 23, scope: !1118)
!1120 = !DILocation(line: 5741, column: 9, scope: !1118)
!1121 = !DILocation(line: 5740, column: 53, scope: !1118)
!1122 = !DILocation(line: 5740, column: 40, scope: !1118)
!1123 = !DILocation(line: 5740, column: 25, scope: !1118)
!1124 = !DILocation(line: 5740, column: 16, scope: !1118)
!1125 = !DILocation(line: 5742, column: 33, scope: !1118)
!1126 = !DILocation(line: 5742, column: 16, scope: !1118)
!1127 = !DILocation(line: 5750, column: 7, scope: !1128)
!1128 = distinct !DILexicalBlock(scope: !960, file: !44, line: 5750, column: 7)
!1129 = !DILocation(line: 5750, column: 11, scope: !1128)
!1130 = !DILocation(line: 5750, column: 15, scope: !1128)
!1131 = !DILocation(line: 5750, column: 18, scope: !1128)
!1132 = !DILocation(line: 5750, column: 24, scope: !1128)
!1133 = !DILocation(line: 5750, column: 32, scope: !1128)
!1134 = !DILocation(line: 5750, column: 30, scope: !1128)
!1135 = !DILocation(line: 5750, column: 22, scope: !1128)
!1136 = !DILocation(line: 5750, column: 7, scope: !960)
!1137 = !DILocation(line: 5753, column: 7, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1128, file: !44, line: 5752, column: 5)
!1139 = !DILocation(line: 5753, column: 7, scope: !1140)
!1140 = distinct !DILexicalBlock(scope: !1141, file: !44, line: 5753, column: 7)
!1141 = distinct !DILexicalBlock(scope: !1138, file: !44, line: 5753, column: 7)
!1142 = !DILocation(line: 5753, column: 7, scope: !1141)
!1143 = !DILocation(line: 5753, column: 7, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1141, file: !44, line: 5753, column: 7)
!1145 = !DILocation(line: 5753, column: 7, scope: !1146)
!1146 = distinct !DILexicalBlock(scope: !1141, file: !44, line: 5753, column: 7)
!1147 = !DILocation(line: 5753, column: 7, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1141, file: !44, line: 5753, column: 7)
!1149 = !DILocation(line: 5753, column: 7, scope: !1150)
!1150 = distinct !DILexicalBlock(scope: !1141, file: !44, line: 5753, column: 7)
!1151 = !DILocation(line: 5753, column: 7, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1141, file: !44, line: 5753, column: 7)
!1153 = !DILocation(line: 5753, column: 7, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !1141, file: !44, line: 5753, column: 7)
!1155 = !DILocation(line: 5753, column: 7, scope: !1156)
!1156 = distinct !DILexicalBlock(scope: !1141, file: !44, line: 5753, column: 7)
!1157 = !DILocation(line: 5753, column: 7, scope: !1158)
!1158 = distinct !DILexicalBlock(scope: !1141, file: !44, line: 5753, column: 7)
!1159 = !DILocation(line: 5754, column: 7, scope: !1138)
!1160 = !DILocation(line: 5811, column: 13, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !960, file: !44, line: 5811, column: 3)
!1162 = !DILocation(line: 5811, column: 8, scope: !1161)
!1163 = !DILocation(line: 5811, column: 29, scope: !1164)
!1164 = distinct !DILexicalBlock(scope: !1161, file: !44, line: 5811, column: 3)
!1165 = !DILocation(line: 5811, column: 18, scope: !1164)
!1166 = !DILocation(line: 5811, column: 36, scope: !1164)
!1167 = !DILocation(line: 5811, column: 34, scope: !1164)
!1168 = !DILocation(line: 5811, column: 3, scope: !1161)
!1169 = !DILocation(line: 5814, column: 32, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !1164, file: !44, line: 5812, column: 5)
!1171 = !DILocation(line: 5814, column: 43, scope: !1170)
!1172 = !DILocation(line: 5814, column: 49, scope: !1170)
!1173 = !DILocation(line: 5814, column: 11, scope: !1170)
!1174 = !DILocation(line: 5814, column: 24, scope: !1170)
!1175 = !DILocation(line: 5814, column: 30, scope: !1170)
!1176 = !DILocation(line: 5813, column: 24, scope: !1170)
!1177 = !DILocation(line: 5813, column: 31, scope: !1170)
!1178 = !DILocation(line: 5814, column: 9, scope: !1170)
!1179 = !DILocation(line: 5813, column: 7, scope: !1170)
!1180 = !DILocation(line: 5813, column: 16, scope: !1170)
!1181 = !DILocation(line: 5813, column: 22, scope: !1170)
!1182 = !DILocation(line: 5816, column: 7, scope: !1170)
!1183 = !DILocation(line: 5816, column: 48, scope: !1170)
!1184 = !DILocation(line: 5817, column: 7, scope: !1170)
!1185 = !DILocation(line: 5817, column: 34, scope: !1170)
!1186 = !DILocation(line: 5818, column: 7, scope: !1170)
!1187 = !DILocation(line: 5818, column: 42, scope: !1170)
!1188 = !DILocation(line: 5819, column: 7, scope: !1170)
!1189 = !DILocation(line: 5819, column: 47, scope: !1170)
!1190 = !DILocation(line: 5820, column: 5, scope: !1170)
!1191 = !DILocation(line: 5811, column: 50, scope: !1164)
!1192 = !DILocation(line: 5811, column: 3, scope: !1164)
!1193 = distinct !{!1193, !1168, !1194}
!1194 = !DILocation(line: 5820, column: 5, scope: !1161)
!1195 = !DILocation(line: 5824, column: 7, scope: !1196)
!1196 = distinct !DILexicalBlock(scope: !960, file: !44, line: 5824, column: 7)
!1197 = !DILocation(line: 5824, column: 13, scope: !1196)
!1198 = !DILocation(line: 5824, column: 18, scope: !1196)
!1199 = !DILocation(line: 5824, column: 21, scope: !1196)
!1200 = !DILocation(line: 5824, column: 29, scope: !1196)
!1201 = !DILocation(line: 5824, column: 7, scope: !960)
!1202 = !DILocation(line: 5826, column: 17, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1196, file: !44, line: 5825, column: 5)
!1204 = !DILocation(line: 5826, column: 15, scope: !1203)
!1205 = !DILocation(line: 5827, column: 15, scope: !1203)
!1206 = !DILocation(line: 5827, column: 13, scope: !1203)
!1207 = !DILocation(line: 5828, column: 15, scope: !1203)
!1208 = !DILocation(line: 5829, column: 13, scope: !1203)
!1209 = !DILocation(line: 5836, column: 5, scope: !1203)
!1210 = !DILocation(line: 5837, column: 10, scope: !960)
!1211 = !DILocation(line: 5837, column: 20, scope: !960)
!1212 = !DILocation(line: 5837, column: 18, scope: !960)
!1213 = !DILocation(line: 5837, column: 8, scope: !960)
!1214 = !DILocation(line: 5838, column: 10, scope: !960)
!1215 = !DILocation(line: 5838, column: 20, scope: !960)
!1216 = !DILocation(line: 5838, column: 18, scope: !960)
!1217 = !DILocation(line: 5838, column: 8, scope: !960)
!1218 = !DILocation(line: 5862, column: 7, scope: !1219)
!1219 = distinct !DILexicalBlock(scope: !960, file: !44, line: 5862, column: 7)
!1220 = !DILocation(line: 5862, column: 15, scope: !1219)
!1221 = !DILocation(line: 5862, column: 12, scope: !1219)
!1222 = !DILocation(line: 5862, column: 7, scope: !960)
!1223 = !DILocation(line: 5864, column: 21, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !1219, file: !44, line: 5863, column: 5)
!1225 = !DILocation(line: 5864, column: 31, scope: !1224)
!1226 = !DILocation(line: 5864, column: 29, scope: !1224)
!1227 = !DILocation(line: 5864, column: 19, scope: !1224)
!1228 = !DILocation(line: 5865, column: 21, scope: !1224)
!1229 = !DILocation(line: 5865, column: 19, scope: !1224)
!1230 = !DILocation(line: 5866, column: 5, scope: !1224)
!1231 = !DILocation(line: 5869, column: 21, scope: !1232)
!1232 = distinct !DILexicalBlock(scope: !1219, file: !44, line: 5868, column: 5)
!1233 = !DILocation(line: 5869, column: 19, scope: !1232)
!1234 = !DILocation(line: 5870, column: 21, scope: !1232)
!1235 = !DILocation(line: 5870, column: 31, scope: !1232)
!1236 = !DILocation(line: 5870, column: 29, scope: !1232)
!1237 = !DILocation(line: 5870, column: 38, scope: !1232)
!1238 = !DILocation(line: 5870, column: 36, scope: !1232)
!1239 = !DILocation(line: 5870, column: 19, scope: !1232)
!1240 = !DILocation(line: 5900, column: 7, scope: !1241)
!1241 = distinct !DILexicalBlock(scope: !960, file: !44, line: 5900, column: 7)
!1242 = !DILocation(line: 5900, column: 13, scope: !1241)
!1243 = !DILocation(line: 5900, column: 17, scope: !1241)
!1244 = !DILocation(line: 5900, column: 20, scope: !1241)
!1245 = !DILocation(line: 5900, column: 27, scope: !1241)
!1246 = !DILocation(line: 5900, column: 24, scope: !1241)
!1247 = !DILocation(line: 5900, column: 7, scope: !960)
!1248 = !DILocation(line: 5902, column: 11, scope: !1249)
!1249 = distinct !DILexicalBlock(scope: !1241, file: !44, line: 5901, column: 5)
!1250 = !DILocation(line: 5902, column: 21, scope: !1249)
!1251 = !DILocation(line: 5902, column: 19, scope: !1249)
!1252 = !DILocation(line: 5902, column: 9, scope: !1249)
!1253 = !DILocation(line: 5903, column: 14, scope: !1249)
!1254 = !DILocation(line: 5903, column: 12, scope: !1249)
!1255 = !DILocation(line: 5904, column: 5, scope: !1249)
!1256 = !DILocation(line: 5907, column: 11, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1241, file: !44, line: 5906, column: 5)
!1258 = !DILocation(line: 5907, column: 21, scope: !1257)
!1259 = !DILocation(line: 5907, column: 19, scope: !1257)
!1260 = !DILocation(line: 5907, column: 27, scope: !1257)
!1261 = !DILocation(line: 5907, column: 25, scope: !1257)
!1262 = !DILocation(line: 5907, column: 9, scope: !1257)
!1263 = !DILocation(line: 5908, column: 14, scope: !1257)
!1264 = !DILocation(line: 5908, column: 12, scope: !1257)
!1265 = !DILocation(line: 5921, column: 3, scope: !960)
!1266 = !DILocation(line: 5929, column: 11, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1268, file: !44, line: 5929, column: 11)
!1268 = distinct !DILexicalBlock(scope: !1269, file: !44, line: 5922, column: 5)
!1269 = distinct !DILexicalBlock(scope: !1270, file: !44, line: 5921, column: 3)
!1270 = distinct !DILexicalBlock(scope: !960, file: !44, line: 5921, column: 3)
!1271 = !DILocation(line: 5929, column: 16, scope: !1267)
!1272 = !DILocation(line: 5929, column: 13, scope: !1267)
!1273 = !DILocation(line: 5929, column: 11, scope: !1268)
!1274 = !DILocation(line: 5935, column: 15, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !1276, file: !44, line: 5935, column: 15)
!1276 = distinct !DILexicalBlock(scope: !1267, file: !44, line: 5930, column: 2)
!1277 = !DILocation(line: 5935, column: 20, scope: !1275)
!1278 = !DILocation(line: 5935, column: 17, scope: !1275)
!1279 = !DILocation(line: 5935, column: 15, scope: !1276)
!1280 = !DILocalVariable(name: "same_str_p", scope: !1281, file: !44, line: 5939, type: !232)
!1281 = distinct !DILexicalBlock(scope: !1275, file: !44, line: 5936, column: 6)
!1282 = !DILocation(line: 5939, column: 16, scope: !1281)
!1283 = !DILocalVariable(name: "best_match_p", scope: !1281, file: !44, line: 5942, type: !232)
!1284 = !DILocation(line: 5942, column: 16, scope: !1281)
!1285 = !DILocation(line: 5944, column: 29, scope: !1281)
!1286 = !DILocation(line: 0, scope: !1281)
!1287 = !DILocation(line: 5945, column: 32, scope: !1281)
!1288 = !DILocation(line: 5945, column: 29, scope: !1281)
!1289 = !DILocation(line: 5944, column: 28, scope: !1281)
!1290 = !DILocation(line: 5944, column: 26, scope: !1281)
!1291 = !DILocation(line: 5949, column: 12, scope: !1292)
!1292 = distinct !DILexicalBlock(scope: !1281, file: !44, line: 5949, column: 12)
!1293 = !DILocation(line: 5949, column: 12, scope: !1281)
!1294 = !DILocation(line: 5950, column: 18, scope: !1292)
!1295 = !DILocation(line: 5950, column: 22, scope: !1292)
!1296 = !DILocation(line: 5950, column: 20, scope: !1292)
!1297 = !DILocation(line: 5950, column: 16, scope: !1292)
!1298 = !DILocation(line: 5950, column: 3, scope: !1292)
!1299 = !DILocation(line: 5952, column: 19, scope: !1292)
!1300 = !DILocation(line: 5952, column: 18, scope: !1292)
!1301 = !DILocation(line: 5952, column: 16, scope: !1292)
!1302 = !DILocation(line: 5956, column: 20, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !1281, file: !44, line: 5956, column: 19)
!1304 = !DILocation(line: 5956, column: 19, scope: !1281)
!1305 = !DILocation(line: 5960, column: 24, scope: !1306)
!1306 = distinct !DILexicalBlock(scope: !1307, file: !44, line: 5960, column: 23)
!1307 = distinct !DILexicalBlock(scope: !1303, file: !44, line: 5957, column: 17)
!1308 = !DILocation(line: 5960, column: 38, scope: !1306)
!1309 = !DILocation(line: 5960, column: 41, scope: !1306)
!1310 = !DILocation(line: 5960, column: 23, scope: !1307)
!1311 = !DILocation(line: 5962, column: 37, scope: !1312)
!1312 = distinct !DILexicalBlock(scope: !1306, file: !44, line: 5961, column: 21)
!1313 = !DILocation(line: 5963, column: 35, scope: !1312)
!1314 = !DILocation(line: 5963, column: 33, scope: !1312)
!1315 = !DILocation(line: 5967, column: 33, scope: !1316)
!1316 = distinct !DILexicalBlock(scope: !1312, file: !44, line: 5967, column: 23)
!1317 = !DILocation(line: 5967, column: 28, scope: !1316)
!1318 = !DILocation(line: 5967, column: 49, scope: !1319)
!1319 = distinct !DILexicalBlock(scope: !1316, file: !44, line: 5967, column: 23)
!1320 = !DILocation(line: 5967, column: 38, scope: !1319)
!1321 = !DILocation(line: 5967, column: 56, scope: !1319)
!1322 = !DILocation(line: 5967, column: 54, scope: !1319)
!1323 = !DILocation(line: 5967, column: 23, scope: !1316)
!1324 = !DILocation(line: 5969, column: 49, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1319, file: !44, line: 5968, column: 25)
!1326 = !DILocation(line: 5969, column: 58, scope: !1325)
!1327 = !DILocation(line: 5969, column: 27, scope: !1325)
!1328 = !DILocation(line: 5969, column: 41, scope: !1325)
!1329 = !DILocation(line: 5969, column: 47, scope: !1325)
!1330 = !DILocation(line: 5970, column: 47, scope: !1325)
!1331 = !DILocation(line: 5970, column: 54, scope: !1325)
!1332 = !DILocation(line: 5970, column: 27, scope: !1325)
!1333 = !DILocation(line: 5970, column: 39, scope: !1325)
!1334 = !DILocation(line: 5970, column: 45, scope: !1325)
!1335 = !DILocation(line: 5971, column: 25, scope: !1325)
!1336 = !DILocation(line: 5967, column: 70, scope: !1319)
!1337 = !DILocation(line: 5967, column: 23, scope: !1319)
!1338 = distinct !{!1338, !1323, !1339}
!1339 = !DILocation(line: 5971, column: 25, scope: !1316)
!1340 = !DILocation(line: 5972, column: 21, scope: !1312)
!1341 = !DILocation(line: 5973, column: 19, scope: !1307)
!1342 = !DILocation(line: 5979, column: 24, scope: !1343)
!1343 = distinct !DILexicalBlock(scope: !1303, file: !44, line: 5979, column: 24)
!1344 = !DILocation(line: 5979, column: 38, scope: !1343)
!1345 = !DILocation(line: 5979, column: 42, scope: !1343)
!1346 = !DILocation(line: 5979, column: 24, scope: !1303)
!1347 = !DILocation(line: 5980, column: 17, scope: !1343)
!1348 = !DILabel(scope: !1349, name: "restore_best_regs", file: !44, line: 5981)
!1349 = distinct !DILexicalBlock(scope: !1343, file: !44, line: 5980, column: 17)
!1350 = !DILocation(line: 5981, column: 12, scope: !1349)
!1351 = !DILocation(line: 5989, column: 23, scope: !1349)
!1352 = !DILocation(line: 5989, column: 21, scope: !1349)
!1353 = !DILocation(line: 5990, column: 28, scope: !1349)
!1354 = !DILocation(line: 5990, column: 33, scope: !1349)
!1355 = !DILocation(line: 5990, column: 30, scope: !1349)
!1356 = !DILocation(line: 5990, column: 41, scope: !1349)
!1357 = !DILocation(line: 5990, column: 44, scope: !1349)
!1358 = !DILocation(line: 5990, column: 49, scope: !1349)
!1359 = !DILocation(line: 5990, column: 46, scope: !1349)
!1360 = !DILocation(line: 5990, column: 27, scope: !1349)
!1361 = !DILocation(line: 5991, column: 16, scope: !1349)
!1362 = !DILocation(line: 5991, column: 30, scope: !1349)
!1363 = !DILocation(line: 5990, column: 24, scope: !1349)
!1364 = !DILocation(line: 5993, column: 15, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !1349, file: !44, line: 5993, column: 5)
!1366 = !DILocation(line: 5993, column: 10, scope: !1365)
!1367 = !DILocation(line: 5993, column: 31, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !1365, file: !44, line: 5993, column: 5)
!1369 = !DILocation(line: 5993, column: 20, scope: !1368)
!1370 = !DILocation(line: 5993, column: 38, scope: !1368)
!1371 = !DILocation(line: 5993, column: 36, scope: !1368)
!1372 = !DILocation(line: 5993, column: 5, scope: !1365)
!1373 = !DILocation(line: 5995, column: 26, scope: !1374)
!1374 = distinct !DILexicalBlock(scope: !1368, file: !44, line: 5994, column: 7)
!1375 = !DILocation(line: 5995, column: 40, scope: !1374)
!1376 = !DILocation(line: 5995, column: 9, scope: !1374)
!1377 = !DILocation(line: 5995, column: 18, scope: !1374)
!1378 = !DILocation(line: 5995, column: 24, scope: !1374)
!1379 = !DILocation(line: 5996, column: 24, scope: !1374)
!1380 = !DILocation(line: 5996, column: 36, scope: !1374)
!1381 = !DILocation(line: 5996, column: 9, scope: !1374)
!1382 = !DILocation(line: 5996, column: 16, scope: !1374)
!1383 = !DILocation(line: 5996, column: 22, scope: !1374)
!1384 = !DILocation(line: 5997, column: 7, scope: !1374)
!1385 = !DILocation(line: 5993, column: 52, scope: !1368)
!1386 = !DILocation(line: 5993, column: 5, scope: !1368)
!1387 = distinct !{!1387, !1372, !1388}
!1388 = !DILocation(line: 5997, column: 7, scope: !1365)
!1389 = !DILocation(line: 5998, column: 17, scope: !1349)
!1390 = !DILocation(line: 5999, column: 13, scope: !1281)
!1391 = !DILabel(scope: !1276, name: "succeed_label", file: !44, line: 6001)
!1392 = !DILocation(line: 6001, column: 2, scope: !1276)
!1393 = !DILocation(line: 6004, column: 15, scope: !1394)
!1394 = distinct !DILexicalBlock(scope: !1276, file: !44, line: 6004, column: 15)
!1395 = !DILocation(line: 6004, column: 20, scope: !1394)
!1396 = !DILocation(line: 6004, column: 24, scope: !1394)
!1397 = !DILocation(line: 6004, column: 30, scope: !1394)
!1398 = !DILocation(line: 6004, column: 15, scope: !1276)
!1399 = !DILocation(line: 6007, column: 19, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !1401, file: !44, line: 6007, column: 19)
!1401 = distinct !DILexicalBlock(scope: !1394, file: !44, line: 6005, column: 6)
!1402 = !DILocation(line: 6007, column: 25, scope: !1400)
!1403 = !DILocation(line: 6007, column: 40, scope: !1400)
!1404 = !DILocation(line: 6007, column: 19, scope: !1401)
!1405 = !DILocation(line: 6011, column: 36, scope: !1406)
!1406 = distinct !DILexicalBlock(scope: !1400, file: !44, line: 6008, column: 17)
!1407 = !DILocation(line: 6011, column: 19, scope: !1406)
!1408 = !DILocation(line: 6011, column: 25, scope: !1406)
!1409 = !DILocation(line: 6011, column: 34, scope: !1406)
!1410 = !DILocation(line: 6012, column: 33, scope: !1406)
!1411 = !DILocation(line: 6012, column: 19, scope: !1406)
!1412 = !DILocation(line: 6012, column: 25, scope: !1406)
!1413 = !DILocation(line: 6012, column: 31, scope: !1406)
!1414 = !DILocation(line: 6013, column: 31, scope: !1406)
!1415 = !DILocation(line: 6013, column: 19, scope: !1406)
!1416 = !DILocation(line: 6013, column: 25, scope: !1406)
!1417 = !DILocation(line: 6013, column: 29, scope: !1406)
!1418 = !DILocation(line: 6014, column: 23, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1406, file: !44, line: 6014, column: 23)
!1420 = !DILocation(line: 6014, column: 29, scope: !1419)
!1421 = !DILocation(line: 6014, column: 35, scope: !1419)
!1422 = !DILocation(line: 6014, column: 43, scope: !1419)
!1423 = !DILocation(line: 6014, column: 46, scope: !1419)
!1424 = !DILocation(line: 6014, column: 52, scope: !1419)
!1425 = !DILocation(line: 6014, column: 56, scope: !1419)
!1426 = !DILocation(line: 6014, column: 23, scope: !1406)
!1427 = !DILocation(line: 6016, column: 9, scope: !1428)
!1428 = distinct !DILexicalBlock(scope: !1419, file: !44, line: 6015, column: 7)
!1429 = !DILocation(line: 6016, column: 9, scope: !1430)
!1430 = distinct !DILexicalBlock(scope: !1431, file: !44, line: 6016, column: 9)
!1431 = distinct !DILexicalBlock(scope: !1428, file: !44, line: 6016, column: 9)
!1432 = !DILocation(line: 6016, column: 9, scope: !1431)
!1433 = !DILocation(line: 6016, column: 9, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1431, file: !44, line: 6016, column: 9)
!1435 = !DILocation(line: 6016, column: 9, scope: !1436)
!1436 = distinct !DILexicalBlock(scope: !1431, file: !44, line: 6016, column: 9)
!1437 = !DILocation(line: 6016, column: 9, scope: !1438)
!1438 = distinct !DILexicalBlock(scope: !1431, file: !44, line: 6016, column: 9)
!1439 = !DILocation(line: 6016, column: 9, scope: !1440)
!1440 = distinct !DILexicalBlock(scope: !1431, file: !44, line: 6016, column: 9)
!1441 = !DILocation(line: 6016, column: 9, scope: !1442)
!1442 = distinct !DILexicalBlock(scope: !1431, file: !44, line: 6016, column: 9)
!1443 = !DILocation(line: 6016, column: 9, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1431, file: !44, line: 6016, column: 9)
!1445 = !DILocation(line: 6016, column: 9, scope: !1446)
!1446 = distinct !DILexicalBlock(scope: !1431, file: !44, line: 6016, column: 9)
!1447 = !DILocation(line: 6016, column: 9, scope: !1448)
!1448 = distinct !DILexicalBlock(scope: !1431, file: !44, line: 6016, column: 9)
!1449 = !DILocation(line: 6017, column: 9, scope: !1428)
!1450 = !DILocation(line: 6019, column: 19, scope: !1406)
!1451 = !DILocation(line: 6019, column: 25, scope: !1406)
!1452 = !DILocation(line: 6019, column: 40, scope: !1406)
!1453 = !DILocation(line: 6020, column: 17, scope: !1406)
!1454 = !DILocation(line: 6021, column: 24, scope: !1455)
!1455 = distinct !DILexicalBlock(scope: !1400, file: !44, line: 6021, column: 24)
!1456 = !DILocation(line: 6021, column: 30, scope: !1455)
!1457 = !DILocation(line: 6021, column: 45, scope: !1455)
!1458 = !DILocation(line: 6021, column: 24, scope: !1400)
!1459 = !DILocation(line: 6025, column: 23, scope: !1460)
!1460 = distinct !DILexicalBlock(scope: !1461, file: !44, line: 6025, column: 23)
!1461 = distinct !DILexicalBlock(scope: !1455, file: !44, line: 6022, column: 17)
!1462 = !DILocation(line: 6025, column: 29, scope: !1460)
!1463 = !DILocation(line: 6025, column: 40, scope: !1460)
!1464 = !DILocation(line: 6025, column: 49, scope: !1460)
!1465 = !DILocation(line: 6025, column: 38, scope: !1460)
!1466 = !DILocation(line: 6025, column: 23, scope: !1461)
!1467 = !DILocation(line: 6027, column: 40, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1460, file: !44, line: 6026, column: 21)
!1469 = !DILocation(line: 6027, column: 49, scope: !1468)
!1470 = !DILocation(line: 6027, column: 23, scope: !1468)
!1471 = !DILocation(line: 6027, column: 29, scope: !1468)
!1472 = !DILocation(line: 6027, column: 38, scope: !1468)
!1473 = !DILocation(line: 6028, column: 23, scope: !1468)
!1474 = !DILocation(line: 6029, column: 23, scope: !1468)
!1475 = !DILocation(line: 6030, column: 27, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1468, file: !44, line: 6030, column: 27)
!1477 = !DILocation(line: 6030, column: 33, scope: !1476)
!1478 = !DILocation(line: 6030, column: 39, scope: !1476)
!1479 = !DILocation(line: 6030, column: 47, scope: !1476)
!1480 = !DILocation(line: 6030, column: 50, scope: !1476)
!1481 = !DILocation(line: 6030, column: 56, scope: !1476)
!1482 = !DILocation(line: 6030, column: 60, scope: !1476)
!1483 = !DILocation(line: 6030, column: 27, scope: !1468)
!1484 = !DILocation(line: 6032, column: 6, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1476, file: !44, line: 6031, column: 4)
!1486 = !DILocation(line: 6032, column: 6, scope: !1487)
!1487 = distinct !DILexicalBlock(scope: !1488, file: !44, line: 6032, column: 6)
!1488 = distinct !DILexicalBlock(scope: !1485, file: !44, line: 6032, column: 6)
!1489 = !DILocation(line: 6032, column: 6, scope: !1488)
!1490 = !DILocation(line: 6032, column: 6, scope: !1491)
!1491 = distinct !DILexicalBlock(scope: !1488, file: !44, line: 6032, column: 6)
!1492 = !DILocation(line: 6032, column: 6, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1488, file: !44, line: 6032, column: 6)
!1494 = !DILocation(line: 6032, column: 6, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1488, file: !44, line: 6032, column: 6)
!1496 = !DILocation(line: 6032, column: 6, scope: !1497)
!1497 = distinct !DILexicalBlock(scope: !1488, file: !44, line: 6032, column: 6)
!1498 = !DILocation(line: 6032, column: 6, scope: !1499)
!1499 = distinct !DILexicalBlock(scope: !1488, file: !44, line: 6032, column: 6)
!1500 = !DILocation(line: 6032, column: 6, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1488, file: !44, line: 6032, column: 6)
!1502 = !DILocation(line: 6032, column: 6, scope: !1503)
!1503 = distinct !DILexicalBlock(scope: !1488, file: !44, line: 6032, column: 6)
!1504 = !DILocation(line: 6032, column: 6, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1488, file: !44, line: 6032, column: 6)
!1506 = !DILocation(line: 6033, column: 6, scope: !1485)
!1507 = !DILocation(line: 6035, column: 21, scope: !1468)
!1508 = !DILocation(line: 6036, column: 17, scope: !1461)
!1509 = !DILocation(line: 6047, column: 19, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1401, file: !44, line: 6047, column: 19)
!1511 = !DILocation(line: 6047, column: 25, scope: !1510)
!1512 = !DILocation(line: 6047, column: 34, scope: !1510)
!1513 = !DILocation(line: 6047, column: 19, scope: !1401)
!1514 = !DILocation(line: 6049, column: 36, scope: !1515)
!1515 = distinct !DILexicalBlock(scope: !1510, file: !44, line: 6048, column: 17)
!1516 = !DILocation(line: 6049, column: 19, scope: !1515)
!1517 = !DILocation(line: 6049, column: 25, scope: !1515)
!1518 = !DILocation(line: 6049, column: 34, scope: !1515)
!1519 = !DILocation(line: 6058, column: 35, scope: !1515)
!1520 = !DILocation(line: 6059, column: 22, scope: !1515)
!1521 = !DILocation(line: 6059, column: 26, scope: !1515)
!1522 = !DILocation(line: 6059, column: 24, scope: !1515)
!1523 = !DILocation(line: 6059, column: 10, scope: !1515)
!1524 = !DILocation(line: 6060, column: 29, scope: !1515)
!1525 = !DILocation(line: 6060, column: 33, scope: !1515)
!1526 = !DILocation(line: 6060, column: 31, scope: !1515)
!1527 = !DILocation(line: 6060, column: 43, scope: !1515)
!1528 = !DILocation(line: 6060, column: 41, scope: !1515)
!1529 = !DILocation(line: 6060, column: 17, scope: !1515)
!1530 = !DILocation(line: 6058, column: 19, scope: !1515)
!1531 = !DILocation(line: 6058, column: 25, scope: !1515)
!1532 = !DILocation(line: 6058, column: 32, scope: !1515)
!1533 = !DILocation(line: 6062, column: 17, scope: !1515)
!1534 = !DILocation(line: 6066, column: 18, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1401, file: !44, line: 6066, column: 8)
!1536 = !DILocation(line: 6066, column: 13, scope: !1535)
!1537 = !DILocation(line: 6066, column: 34, scope: !1538)
!1538 = distinct !DILexicalBlock(scope: !1535, file: !44, line: 6066, column: 8)
!1539 = !DILocation(line: 6066, column: 23, scope: !1538)
!1540 = !DILocation(line: 6066, column: 41, scope: !1538)
!1541 = !DILocation(line: 6066, column: 39, scope: !1538)
!1542 = !DILocation(line: 6066, column: 8, scope: !1535)
!1543 = !DILocation(line: 6069, column: 23, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1545, file: !44, line: 6069, column: 23)
!1545 = distinct !DILexicalBlock(scope: !1538, file: !44, line: 6068, column: 3)
!1546 = !DILocation(line: 6069, column: 50, scope: !1544)
!1547 = !DILocation(line: 6069, column: 53, scope: !1544)
!1548 = !DILocation(line: 6069, column: 23, scope: !1545)
!1549 = !DILocation(line: 6070, column: 41, scope: !1544)
!1550 = !DILocation(line: 6070, column: 47, scope: !1544)
!1551 = !DILocation(line: 6070, column: 51, scope: !1544)
!1552 = !DILocation(line: 6070, column: 57, scope: !1544)
!1553 = !DILocation(line: 6070, column: 21, scope: !1544)
!1554 = !DILocation(line: 6070, column: 27, scope: !1544)
!1555 = !DILocation(line: 6070, column: 33, scope: !1544)
!1556 = !DILocation(line: 6070, column: 39, scope: !1544)
!1557 = !DILocation(line: 6074, column: 17, scope: !1558)
!1558 = distinct !DILexicalBlock(scope: !1544, file: !44, line: 6072, column: 21)
!1559 = !DILocation(line: 6073, column: 9, scope: !1558)
!1560 = !DILocation(line: 6073, column: 15, scope: !1558)
!1561 = !DILocation(line: 6073, column: 21, scope: !1558)
!1562 = !DILocation(line: 6074, column: 4, scope: !1558)
!1563 = !DILocation(line: 6076, column: 17, scope: !1558)
!1564 = !DILocation(line: 6075, column: 23, scope: !1558)
!1565 = !DILocation(line: 6075, column: 29, scope: !1558)
!1566 = !DILocation(line: 6075, column: 33, scope: !1558)
!1567 = !DILocation(line: 6076, column: 4, scope: !1558)
!1568 = !DILocation(line: 6078, column: 3, scope: !1545)
!1569 = !DILocation(line: 6067, column: 10, scope: !1538)
!1570 = !DILocation(line: 6066, column: 8, scope: !1538)
!1571 = distinct !{!1571, !1542, !1572}
!1572 = !DILocation(line: 6078, column: 3, scope: !1535)
!1573 = !DILocation(line: 6085, column: 27, scope: !1574)
!1574 = distinct !DILexicalBlock(scope: !1401, file: !44, line: 6085, column: 15)
!1575 = !DILocation(line: 6085, column: 25, scope: !1574)
!1576 = !DILocation(line: 6085, column: 20, scope: !1574)
!1577 = !DILocation(line: 6085, column: 48, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1574, file: !44, line: 6085, column: 15)
!1579 = !DILocation(line: 6085, column: 55, scope: !1578)
!1580 = !DILocation(line: 6085, column: 61, scope: !1578)
!1581 = !DILocation(line: 6085, column: 53, scope: !1578)
!1582 = !DILocation(line: 6085, column: 15, scope: !1574)
!1583 = !DILocation(line: 6086, column: 37, scope: !1578)
!1584 = !DILocation(line: 6086, column: 43, scope: !1578)
!1585 = !DILocation(line: 6086, column: 47, scope: !1578)
!1586 = !DILocation(line: 6086, column: 53, scope: !1578)
!1587 = !DILocation(line: 6086, column: 17, scope: !1578)
!1588 = !DILocation(line: 6086, column: 23, scope: !1578)
!1589 = !DILocation(line: 6086, column: 29, scope: !1578)
!1590 = !DILocation(line: 6086, column: 35, scope: !1578)
!1591 = !DILocation(line: 6085, column: 75, scope: !1578)
!1592 = !DILocation(line: 6085, column: 15, scope: !1578)
!1593 = distinct !{!1593, !1582, !1594}
!1594 = !DILocation(line: 6086, column: 56, scope: !1574)
!1595 = !DILocation(line: 6087, column: 6, scope: !1401)
!1596 = !DILocation(line: 6102, column: 18, scope: !1276)
!1597 = !DILocation(line: 6102, column: 22, scope: !1276)
!1598 = !DILocation(line: 6102, column: 20, scope: !1276)
!1599 = !DILocation(line: 6102, column: 29, scope: !1276)
!1600 = !DILocation(line: 6103, column: 10, scope: !1276)
!1601 = !DILocation(line: 6104, column: 10, scope: !1276)
!1602 = !DILocation(line: 6104, column: 20, scope: !1276)
!1603 = !DILocation(line: 6104, column: 18, scope: !1276)
!1604 = !DILocation(line: 6102, column: 26, scope: !1276)
!1605 = !DILocation(line: 6102, column: 16, scope: !1276)
!1606 = !DILocation(line: 6109, column: 11, scope: !1276)
!1607 = !DILocation(line: 6109, column: 11, scope: !1608)
!1608 = distinct !DILexicalBlock(scope: !1609, file: !44, line: 6109, column: 11)
!1609 = distinct !DILexicalBlock(scope: !1276, file: !44, line: 6109, column: 11)
!1610 = !DILocation(line: 6109, column: 11, scope: !1609)
!1611 = !DILocation(line: 6109, column: 11, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1609, file: !44, line: 6109, column: 11)
!1613 = !DILocation(line: 6109, column: 11, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1609, file: !44, line: 6109, column: 11)
!1615 = !DILocation(line: 6109, column: 11, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1609, file: !44, line: 6109, column: 11)
!1617 = !DILocation(line: 6109, column: 11, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1609, file: !44, line: 6109, column: 11)
!1619 = !DILocation(line: 6109, column: 11, scope: !1620)
!1620 = distinct !DILexicalBlock(scope: !1609, file: !44, line: 6109, column: 11)
!1621 = !DILocation(line: 6109, column: 11, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !1609, file: !44, line: 6109, column: 11)
!1623 = !DILocation(line: 6109, column: 11, scope: !1624)
!1624 = distinct !DILexicalBlock(scope: !1609, file: !44, line: 6109, column: 11)
!1625 = !DILocation(line: 6109, column: 11, scope: !1626)
!1626 = distinct !DILexicalBlock(scope: !1609, file: !44, line: 6109, column: 11)
!1627 = !DILocation(line: 6110, column: 18, scope: !1276)
!1628 = !DILocation(line: 6110, column: 11, scope: !1276)
!1629 = !DILocation(line: 6114, column: 15, scope: !1268)
!1630 = !DILocation(line: 6114, column: 7, scope: !1268)
!1631 = !DILocation(line: 6120, column: 11, scope: !1632)
!1632 = distinct !DILexicalBlock(scope: !1268, file: !44, line: 6115, column: 2)
!1633 = !DILocation(line: 6124, column: 4, scope: !1632)
!1634 = !DILocation(line: 6133, column: 13, scope: !1632)
!1635 = !DILocation(line: 6133, column: 11, scope: !1632)
!1636 = !DILocation(line: 6133, column: 9, scope: !1632)
!1637 = !DILocation(line: 6138, column: 15, scope: !1638)
!1638 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6138, column: 15)
!1639 = !DILocation(line: 6138, column: 15, scope: !1632)
!1640 = !DILocation(line: 6140, column: 8, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1638, file: !44, line: 6139, column: 6)
!1642 = !DILocation(line: 6142, column: 5, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1641, file: !44, line: 6141, column: 3)
!1644 = !DILocation(line: 6142, column: 5, scope: !1645)
!1645 = distinct !DILexicalBlock(scope: !1646, file: !44, line: 6142, column: 5)
!1646 = distinct !DILexicalBlock(scope: !1643, file: !44, line: 6142, column: 5)
!1647 = !DILocation(line: 6142, column: 5, scope: !1646)
!1648 = distinct !{!1648, !1642, !1642}
!1649 = !DILocation(line: 6156, column: 19, scope: !1650)
!1650 = distinct !DILexicalBlock(scope: !1643, file: !44, line: 6156, column: 9)
!1651 = !DILocation(line: 6156, column: 47, scope: !1650)
!1652 = !DILocation(line: 6156, column: 45, scope: !1650)
!1653 = !DILocation(line: 6156, column: 9, scope: !1650)
!1654 = !DILocation(line: 6157, column: 24, scope: !1650)
!1655 = !DILocation(line: 6157, column: 22, scope: !1650)
!1656 = !DILocation(line: 6157, column: 12, scope: !1650)
!1657 = !DILocation(line: 6157, column: 9, scope: !1650)
!1658 = !DILocation(line: 6156, column: 9, scope: !1643)
!1659 = !DILocation(line: 6158, column: 21, scope: !1650)
!1660 = !DILocation(line: 6160, column: 3, scope: !1643)
!1661 = !DILocation(line: 6161, column: 15, scope: !1641)
!1662 = distinct !{!1662, !1640, !1663}
!1663 = !DILocation(line: 6161, column: 21, scope: !1641)
!1664 = !DILocation(line: 6162, column: 6, scope: !1641)
!1665 = !DILocation(line: 6165, column: 8, scope: !1666)
!1666 = distinct !DILexicalBlock(scope: !1638, file: !44, line: 6164, column: 6)
!1667 = !DILocation(line: 6167, column: 5, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1666, file: !44, line: 6166, column: 3)
!1669 = !DILocation(line: 6167, column: 5, scope: !1670)
!1670 = distinct !DILexicalBlock(scope: !1671, file: !44, line: 6167, column: 5)
!1671 = distinct !DILexicalBlock(scope: !1668, file: !44, line: 6167, column: 5)
!1672 = !DILocation(line: 6167, column: 5, scope: !1671)
!1673 = distinct !{!1673, !1667, !1667}
!1674 = !DILocation(line: 6168, column: 11, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1668, file: !44, line: 6168, column: 9)
!1676 = !DILocation(line: 6168, column: 9, scope: !1675)
!1677 = !DILocation(line: 6168, column: 28, scope: !1675)
!1678 = !DILocation(line: 6168, column: 26, scope: !1675)
!1679 = !DILocation(line: 6168, column: 17, scope: !1675)
!1680 = !DILocation(line: 6168, column: 14, scope: !1675)
!1681 = !DILocation(line: 6168, column: 9, scope: !1668)
!1682 = !DILocation(line: 6168, column: 32, scope: !1675)
!1683 = !DILocation(line: 6169, column: 3, scope: !1668)
!1684 = !DILocation(line: 6170, column: 15, scope: !1666)
!1685 = distinct !{!1685, !1665, !1686}
!1686 = !DILocation(line: 6170, column: 21, scope: !1666)
!1687 = !DILocation(line: 6172, column: 4, scope: !1632)
!1688 = !DILocation(line: 6172, column: 4, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1690, file: !44, line: 6172, column: 4)
!1690 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6172, column: 4)
!1691 = !DILocation(line: 6172, column: 4, scope: !1690)
!1692 = !DILocalVariable(name: "r", scope: !1693, file: !44, line: 6172, type: !115)
!1693 = distinct !DILexicalBlock(scope: !1689, file: !44, line: 6172, column: 4)
!1694 = !DILocation(line: 6172, column: 4, scope: !1693)
!1695 = !DILocation(line: 6172, column: 4, scope: !1696)
!1696 = distinct !DILexicalBlock(scope: !1693, file: !44, line: 6172, column: 4)
!1697 = !DILocation(line: 6172, column: 4, scope: !1698)
!1698 = distinct !DILexicalBlock(scope: !1696, file: !44, line: 6172, column: 4)
!1699 = !DILocation(line: 6172, column: 4, scope: !1700)
!1700 = distinct !DILexicalBlock(scope: !1698, file: !44, line: 6172, column: 4)
!1701 = distinct !{!1701, !1695, !1695}
!1702 = !DILocation(line: 6173, column: 11, scope: !1632)
!1703 = !DILocation(line: 6180, column: 11, scope: !1632)
!1704 = !DILocation(line: 6180, column: 11, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1706, file: !44, line: 6180, column: 11)
!1706 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6180, column: 11)
!1707 = !DILocation(line: 6180, column: 11, scope: !1706)
!1708 = distinct !{!1708, !1703, !1703}
!1709 = !DILocation(line: 6182, column: 18, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6182, column: 15)
!1711 = !DILocation(line: 6182, column: 24, scope: !1710)
!1712 = !DILocation(line: 6182, column: 31, scope: !1710)
!1713 = !DILocation(line: 6182, column: 49, scope: !1710)
!1714 = !DILocation(line: 6182, column: 52, scope: !1710)
!1715 = !DILocation(line: 6182, column: 67, scope: !1710)
!1716 = !DILocation(line: 6183, column: 15, scope: !1710)
!1717 = !DILocation(line: 6183, column: 19, scope: !1710)
!1718 = !DILocation(line: 6183, column: 25, scope: !1710)
!1719 = !DILocation(line: 6183, column: 32, scope: !1710)
!1720 = !DILocation(line: 6183, column: 50, scope: !1710)
!1721 = !DILocation(line: 6183, column: 53, scope: !1710)
!1722 = !DILocation(line: 6183, column: 68, scope: !1710)
!1723 = !DILocation(line: 6182, column: 15, scope: !1632)
!1724 = !DILocation(line: 6184, column: 6, scope: !1710)
!1725 = !DILocation(line: 6186, column: 11, scope: !1632)
!1726 = !DILocation(line: 6186, column: 11, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1728, file: !44, line: 6186, column: 11)
!1728 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6186, column: 11)
!1729 = !DILocation(line: 6186, column: 11, scope: !1728)
!1730 = !DILocalVariable(name: "r", scope: !1731, file: !44, line: 6186, type: !115)
!1731 = distinct !DILexicalBlock(scope: !1727, file: !44, line: 6186, column: 11)
!1732 = !DILocation(line: 6186, column: 11, scope: !1731)
!1733 = !DILocation(line: 6186, column: 11, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1731, file: !44, line: 6186, column: 11)
!1735 = !DILocation(line: 6186, column: 11, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1734, file: !44, line: 6186, column: 11)
!1737 = !DILocation(line: 6186, column: 11, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1736, file: !44, line: 6186, column: 11)
!1739 = distinct !{!1739, !1733, !1733}
!1740 = !DILocation(line: 6188, column: 12, scope: !1632)
!1741 = !DILocation(line: 6189, column: 4, scope: !1632)
!1742 = !DILocalVariable(name: "c", scope: !1743, file: !44, line: 6195, type: !82)
!1743 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6194, column: 4)
!1744 = !DILocation(line: 6195, column: 23, scope: !1743)
!1745 = !DILocalVariable(name: "negate", scope: !1743, file: !44, line: 6206, type: !232)
!1746 = !DILocation(line: 6206, column: 14, scope: !1743)
!1747 = !DILocation(line: 6206, column: 39, scope: !1743)
!1748 = !DILocation(line: 6206, column: 41, scope: !1743)
!1749 = !DILocation(line: 6206, column: 37, scope: !1743)
!1750 = !DILocation(line: 6206, column: 23, scope: !1743)
!1751 = !DILocation(line: 6206, column: 46, scope: !1743)
!1752 = !DILocation(line: 6209, column: 6, scope: !1743)
!1753 = !DILocation(line: 6209, column: 6, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1755, file: !44, line: 6209, column: 6)
!1755 = distinct !DILexicalBlock(scope: !1743, file: !44, line: 6209, column: 6)
!1756 = !DILocation(line: 6209, column: 6, scope: !1755)
!1757 = distinct !{!1757, !1752, !1752}
!1758 = !DILocation(line: 6210, column: 10, scope: !1743)
!1759 = !DILocation(line: 6210, column: 8, scope: !1743)
!1760 = !DILocation(line: 6582, column: 10, scope: !1761)
!1761 = distinct !DILexicalBlock(scope: !1743, file: !44, line: 6582, column: 10)
!1762 = !DILocation(line: 6582, column: 27, scope: !1761)
!1763 = !DILocation(line: 6582, column: 26, scope: !1761)
!1764 = !DILocation(line: 6582, column: 29, scope: !1761)
!1765 = !DILocation(line: 6582, column: 12, scope: !1761)
!1766 = !DILocation(line: 6583, column: 3, scope: !1761)
!1767 = !DILocation(line: 6583, column: 6, scope: !1761)
!1768 = !DILocation(line: 6583, column: 12, scope: !1761)
!1769 = !DILocation(line: 6583, column: 14, scope: !1761)
!1770 = !DILocation(line: 6583, column: 10, scope: !1761)
!1771 = !DILocation(line: 6583, column: 36, scope: !1761)
!1772 = !DILocation(line: 6583, column: 38, scope: !1761)
!1773 = !DILocation(line: 6583, column: 32, scope: !1761)
!1774 = !DILocation(line: 6583, column: 27, scope: !1761)
!1775 = !DILocation(line: 6582, column: 10, scope: !1743)
!1776 = !DILocation(line: 6584, column: 18, scope: !1761)
!1777 = !DILocation(line: 6584, column: 17, scope: !1761)
!1778 = !DILocation(line: 6584, column: 15, scope: !1761)
!1779 = !DILocation(line: 6584, column: 8, scope: !1761)
!1780 = !DILocation(line: 6586, column: 16, scope: !1743)
!1781 = !DILocation(line: 6586, column: 15, scope: !1743)
!1782 = !DILocation(line: 6586, column: 13, scope: !1743)
!1783 = !DILocation(line: 6586, column: 8, scope: !1743)
!1784 = !DILocation(line: 6588, column: 11, scope: !1785)
!1785 = distinct !DILexicalBlock(scope: !1743, file: !44, line: 6588, column: 10)
!1786 = !DILocation(line: 6588, column: 10, scope: !1743)
!1787 = !DILocation(line: 6588, column: 19, scope: !1785)
!1788 = !DILocation(line: 6591, column: 6, scope: !1743)
!1789 = !DILocation(line: 6591, column: 6, scope: !1790)
!1790 = distinct !DILexicalBlock(scope: !1791, file: !44, line: 6591, column: 6)
!1791 = distinct !DILexicalBlock(scope: !1743, file: !44, line: 6591, column: 6)
!1792 = !DILocation(line: 6591, column: 6, scope: !1791)
!1793 = !DILocalVariable(name: "r", scope: !1794, file: !44, line: 6591, type: !115)
!1794 = distinct !DILexicalBlock(scope: !1790, file: !44, line: 6591, column: 6)
!1795 = !DILocation(line: 6591, column: 6, scope: !1794)
!1796 = !DILocation(line: 6591, column: 6, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1794, file: !44, line: 6591, column: 6)
!1798 = !DILocation(line: 6591, column: 6, scope: !1799)
!1799 = distinct !DILexicalBlock(scope: !1797, file: !44, line: 6591, column: 6)
!1800 = !DILocation(line: 6591, column: 6, scope: !1801)
!1801 = distinct !DILexicalBlock(scope: !1799, file: !44, line: 6591, column: 6)
!1802 = distinct !{!1802, !1796, !1796}
!1803 = !DILocation(line: 6592, column: 14, scope: !1743)
!1804 = !DILocation(line: 6593, column: 6, scope: !1743)
!1805 = !DILocation(line: 6607, column: 9, scope: !1632)
!1806 = !DILocation(line: 6607, column: 7, scope: !1632)
!1807 = !DILocation(line: 6609, column: 15, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6609, column: 15)
!1809 = !DILocation(line: 6609, column: 54, scope: !1808)
!1810 = !DILocation(line: 6609, column: 15, scope: !1632)
!1811 = !DILocation(line: 6611, column: 57, scope: !1808)
!1812 = !DILocation(line: 6611, column: 63, scope: !1808)
!1813 = !DILocation(line: 6611, column: 17, scope: !1808)
!1814 = !DILocation(line: 6610, column: 13, scope: !1808)
!1815 = !DILocation(line: 6611, column: 15, scope: !1808)
!1816 = !DILocation(line: 6618, column: 30, scope: !1632)
!1817 = !DILocation(line: 6619, column: 32, scope: !1632)
!1818 = !DILocation(line: 6619, column: 59, scope: !1632)
!1819 = !DILocation(line: 6619, column: 63, scope: !1632)
!1820 = !DILocation(line: 6619, column: 73, scope: !1632)
!1821 = !DILocation(line: 6619, column: 72, scope: !1632)
!1822 = !DILocation(line: 6620, column: 32, scope: !1632)
!1823 = !DILocation(line: 6620, column: 42, scope: !1632)
!1824 = !DILocation(line: 6620, column: 41, scope: !1632)
!1825 = !DILocation(line: 6618, column: 11, scope: !1632)
!1826 = !DILocation(line: 6618, column: 25, scope: !1632)
!1827 = !DILocation(line: 6618, column: 24, scope: !1632)
!1828 = !DILocation(line: 6618, column: 28, scope: !1632)
!1829 = !DILocation(line: 6624, column: 26, scope: !1632)
!1830 = !DILocation(line: 6624, column: 11, scope: !1632)
!1831 = !DILocation(line: 6624, column: 21, scope: !1632)
!1832 = !DILocation(line: 6624, column: 20, scope: !1632)
!1833 = !DILocation(line: 6624, column: 24, scope: !1632)
!1834 = !DILocation(line: 6627, column: 11, scope: !1632)
!1835 = !DILocation(line: 6627, column: 36, scope: !1632)
!1836 = !DILocation(line: 6628, column: 11, scope: !1632)
!1837 = !DILocation(line: 6628, column: 44, scope: !1632)
!1838 = !DILocation(line: 6631, column: 26, scope: !1632)
!1839 = !DILocation(line: 6634, column: 33, scope: !1632)
!1840 = !DILocation(line: 6634, column: 32, scope: !1632)
!1841 = !DILocation(line: 6634, column: 30, scope: !1632)
!1842 = !DILocation(line: 6638, column: 15, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6638, column: 15)
!1844 = !DILocation(line: 6638, column: 33, scope: !1843)
!1845 = !DILocation(line: 6638, column: 15, scope: !1632)
!1846 = !DILocation(line: 6639, column: 34, scope: !1843)
!1847 = !DILocation(line: 6639, column: 33, scope: !1843)
!1848 = !DILocation(line: 6639, column: 31, scope: !1843)
!1849 = !DILocation(line: 6639, column: 13, scope: !1843)
!1850 = !DILocation(line: 6642, column: 13, scope: !1632)
!1851 = !DILocation(line: 6643, column: 26, scope: !1632)
!1852 = !DILocation(line: 6643, column: 24, scope: !1632)
!1853 = !DILocation(line: 6645, column: 11, scope: !1632)
!1854 = !DILocation(line: 6660, column: 28, scope: !1632)
!1855 = !DILocation(line: 6661, column: 30, scope: !1632)
!1856 = !DILocation(line: 6661, column: 55, scope: !1632)
!1857 = !DILocation(line: 6661, column: 59, scope: !1632)
!1858 = !DILocation(line: 6661, column: 67, scope: !1632)
!1859 = !DILocation(line: 6661, column: 66, scope: !1632)
!1860 = !DILocation(line: 6662, column: 9, scope: !1632)
!1861 = !DILocation(line: 6662, column: 17, scope: !1632)
!1862 = !DILocation(line: 6662, column: 16, scope: !1632)
!1863 = !DILocation(line: 6660, column: 11, scope: !1632)
!1864 = !DILocation(line: 6660, column: 23, scope: !1632)
!1865 = !DILocation(line: 6660, column: 22, scope: !1632)
!1866 = !DILocation(line: 6660, column: 26, scope: !1632)
!1867 = !DILocation(line: 6666, column: 24, scope: !1632)
!1868 = !DILocation(line: 6666, column: 11, scope: !1632)
!1869 = !DILocation(line: 6666, column: 19, scope: !1632)
!1870 = !DILocation(line: 6666, column: 18, scope: !1632)
!1871 = !DILocation(line: 6666, column: 22, scope: !1632)
!1872 = !DILocation(line: 6670, column: 11, scope: !1632)
!1873 = !DILocation(line: 6670, column: 36, scope: !1632)
!1874 = !DILocation(line: 6673, column: 26, scope: !1632)
!1875 = !DILocation(line: 6677, column: 15, scope: !1876)
!1876 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6677, column: 15)
!1877 = !DILocation(line: 6677, column: 36, scope: !1876)
!1878 = !DILocation(line: 6677, column: 33, scope: !1876)
!1879 = !DILocation(line: 6677, column: 15, scope: !1632)
!1880 = !DILocation(line: 6679, column: 33, scope: !1881)
!1881 = distinct !DILexicalBlock(scope: !1876, file: !44, line: 6678, column: 13)
!1882 = !DILocation(line: 6680, column: 34, scope: !1881)
!1883 = !DILocation(line: 6681, column: 13, scope: !1881)
!1884 = !DILocalVariable(name: "r", scope: !1885, file: !44, line: 6687, type: !82)
!1885 = distinct !DILexicalBlock(scope: !1876, file: !44, line: 6683, column: 13)
!1886 = !DILocation(line: 6687, column: 23, scope: !1885)
!1887 = !DILocation(line: 6687, column: 28, scope: !1885)
!1888 = !DILocation(line: 6687, column: 27, scope: !1885)
!1889 = !DILocation(line: 6687, column: 30, scope: !1885)
!1890 = !DILocation(line: 6688, column: 15, scope: !1885)
!1891 = !DILocation(line: 6688, column: 22, scope: !1885)
!1892 = !DILocation(line: 6688, column: 24, scope: !1885)
!1893 = !DILocation(line: 6688, column: 28, scope: !1885)
!1894 = !DILocation(line: 6688, column: 32, scope: !1885)
!1895 = !DILocation(line: 6688, column: 31, scope: !1885)
!1896 = !DILocation(line: 0, scope: !1885)
!1897 = !DILocation(line: 6689, column: 18, scope: !1885)
!1898 = distinct !{!1898, !1890, !1897}
!1899 = !DILocation(line: 6698, column: 12, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1885, file: !44, line: 6698, column: 12)
!1901 = !DILocation(line: 6698, column: 14, scope: !1900)
!1902 = !DILocation(line: 6698, column: 12, scope: !1885)
!1903 = !DILocation(line: 6700, column: 37, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1900, file: !44, line: 6699, column: 17)
!1905 = !DILocation(line: 6701, column: 38, scope: !1904)
!1906 = !DILocation(line: 6702, column: 17, scope: !1904)
!1907 = !DILocation(line: 6704, column: 38, scope: !1900)
!1908 = !DILocation(line: 6704, column: 36, scope: !1900)
!1909 = !DILocation(line: 6712, column: 17, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6712, column: 15)
!1911 = !DILocation(line: 6713, column: 16, scope: !1910)
!1912 = !DILocation(line: 6713, column: 19, scope: !1910)
!1913 = !DILocation(line: 6713, column: 42, scope: !1910)
!1914 = !DILocation(line: 6713, column: 44, scope: !1910)
!1915 = !DILocation(line: 6713, column: 39, scope: !1910)
!1916 = !DILocation(line: 6714, column: 8, scope: !1910)
!1917 = !DILocation(line: 6714, column: 12, scope: !1910)
!1918 = !DILocation(line: 6714, column: 14, scope: !1910)
!1919 = !DILocation(line: 6714, column: 21, scope: !1910)
!1920 = !DILocation(line: 6714, column: 19, scope: !1910)
!1921 = !DILocation(line: 6712, column: 15, scope: !1632)
!1922 = !DILocalVariable(name: "is_a_jump_n", scope: !1923, file: !44, line: 6716, type: !232)
!1923 = distinct !DILexicalBlock(scope: !1910, file: !44, line: 6715, column: 13)
!1924 = !DILocation(line: 6716, column: 23, scope: !1923)
!1925 = !DILocation(line: 6718, column: 20, scope: !1923)
!1926 = !DILocation(line: 6718, column: 22, scope: !1923)
!1927 = !DILocation(line: 6718, column: 18, scope: !1923)
!1928 = !DILocation(line: 6719, column: 20, scope: !1923)
!1929 = !DILocation(line: 6720, column: 40, scope: !1923)
!1930 = !DILocation(line: 6720, column: 37, scope: !1923)
!1931 = !DILocation(line: 6720, column: 23, scope: !1923)
!1932 = !DILocation(line: 6720, column: 15, scope: !1923)
!1933 = !DILocation(line: 6723, column: 19, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1923, file: !44, line: 6721, column: 17)
!1935 = !DILocation(line: 6723, column: 7, scope: !1934)
!1936 = !DILocation(line: 6728, column: 21, scope: !1934)
!1937 = !DILocation(line: 6728, column: 21, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1934, file: !44, line: 6728, column: 21)
!1939 = !DILocation(line: 6728, column: 21, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1938, file: !44, line: 6728, column: 21)
!1941 = !DILocation(line: 6729, column: 11, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1934, file: !44, line: 6729, column: 11)
!1943 = !DILocation(line: 6729, column: 11, scope: !1934)
!1944 = !DILocation(line: 6730, column: 12, scope: !1942)
!1945 = !DILocation(line: 6730, column: 9, scope: !1942)
!1946 = !DILocation(line: 6731, column: 21, scope: !1934)
!1947 = !DILocation(line: 6735, column: 17, scope: !1934)
!1948 = !DILocation(line: 6736, column: 14, scope: !1923)
!1949 = !DILocation(line: 6736, column: 11, scope: !1923)
!1950 = !DILocation(line: 6743, column: 19, scope: !1951)
!1951 = distinct !DILexicalBlock(scope: !1923, file: !44, line: 6743, column: 19)
!1952 = !DILocation(line: 6743, column: 24, scope: !1951)
!1953 = !DILocation(line: 6743, column: 28, scope: !1951)
!1954 = !DILocation(line: 6743, column: 46, scope: !1951)
!1955 = !DILocation(line: 6743, column: 45, scope: !1951)
!1956 = !DILocation(line: 6743, column: 31, scope: !1951)
!1957 = !DILocation(line: 6743, column: 49, scope: !1951)
!1958 = !DILocation(line: 6744, column: 19, scope: !1951)
!1959 = !DILocation(line: 6744, column: 36, scope: !1951)
!1960 = !DILocation(line: 6744, column: 22, scope: !1951)
!1961 = !DILocation(line: 6744, column: 62, scope: !1951)
!1962 = !DILocation(line: 6745, column: 5, scope: !1951)
!1963 = !DILocation(line: 6745, column: 8, scope: !1951)
!1964 = !DILocation(line: 6745, column: 38, scope: !1951)
!1965 = !DILocation(line: 6745, column: 37, scope: !1951)
!1966 = !DILocation(line: 6745, column: 34, scope: !1951)
!1967 = !DILocation(line: 6743, column: 19, scope: !1923)
!1968 = !DILocation(line: 6757, column: 23, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1970, file: !44, line: 6757, column: 23)
!1970 = distinct !DILexicalBlock(scope: !1951, file: !44, line: 6746, column: 3)
!1971 = !DILocation(line: 6757, column: 23, scope: !1970)
!1972 = !DILocalVariable(name: "r", scope: !1973, file: !44, line: 6759, type: !29)
!1973 = distinct !DILexicalBlock(scope: !1969, file: !44, line: 6758, column: 7)
!1974 = !DILocation(line: 6759, column: 18, scope: !1973)
!1975 = !DILocation(line: 6761, column: 23, scope: !1973)
!1976 = !DILocation(line: 6761, column: 61, scope: !1973)
!1977 = !DILocation(line: 6764, column: 33, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1973, file: !44, line: 6764, column: 23)
!1979 = !DILocation(line: 6764, column: 32, scope: !1978)
!1980 = !DILocation(line: 6764, column: 30, scope: !1978)
!1981 = !DILocation(line: 6764, column: 28, scope: !1978)
!1982 = !DILocation(line: 6764, column: 36, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1978, file: !44, line: 6764, column: 23)
!1984 = !DILocation(line: 6764, column: 52, scope: !1983)
!1985 = !DILocation(line: 6764, column: 51, scope: !1983)
!1986 = !DILocation(line: 6764, column: 40, scope: !1983)
!1987 = !DILocation(line: 6764, column: 69, scope: !1983)
!1988 = !DILocation(line: 6764, column: 71, scope: !1983)
!1989 = !DILocation(line: 6764, column: 67, scope: !1983)
!1990 = !DILocation(line: 6764, column: 56, scope: !1983)
!1991 = !DILocation(line: 6764, column: 54, scope: !1983)
!1992 = !DILocation(line: 6764, column: 38, scope: !1983)
!1993 = !DILocation(line: 6764, column: 23, scope: !1978)
!1994 = !DILocation(line: 6767, column: 41, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1983, file: !44, line: 6766, column: 25)
!1996 = !DILocation(line: 6767, column: 54, scope: !1995)
!1997 = !DILocation(line: 6767, column: 27, scope: !1995)
!1998 = !DILocation(line: 6767, column: 36, scope: !1995)
!1999 = !DILocation(line: 6767, column: 39, scope: !1995)
!2000 = !DILocation(line: 6770, column: 31, scope: !2001)
!2001 = distinct !DILexicalBlock(scope: !1995, file: !44, line: 6770, column: 31)
!2002 = !DILocation(line: 6770, column: 42, scope: !2001)
!2003 = !DILocation(line: 6770, column: 48, scope: !2001)
!2004 = !DILocation(line: 6770, column: 57, scope: !2001)
!2005 = !DILocation(line: 6770, column: 45, scope: !2001)
!2006 = !DILocation(line: 6770, column: 31, scope: !1995)
!2007 = !DILocation(line: 6771, column: 41, scope: !2001)
!2008 = !DILocation(line: 6771, column: 52, scope: !2001)
!2009 = !DILocation(line: 6771, column: 29, scope: !2001)
!2010 = !DILocation(line: 6771, column: 36, scope: !2001)
!2011 = !DILocation(line: 6771, column: 39, scope: !2001)
!2012 = !DILocation(line: 6772, column: 25, scope: !1995)
!2013 = !DILocation(line: 6765, column: 8, scope: !1983)
!2014 = !DILocation(line: 6764, column: 23, scope: !1983)
!2015 = distinct !{!2015, !1993, !2016}
!2016 = !DILocation(line: 6772, column: 25, scope: !1978)
!2017 = !DILocation(line: 6773, column: 21, scope: !1973)
!2018 = !DILocation(line: 6774, column: 7, scope: !1970)
!2019 = !DILocation(line: 6775, column: 19, scope: !1970)
!2020 = !DILocation(line: 6775, column: 19, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !1970, file: !44, line: 6775, column: 19)
!2022 = !DILocation(line: 6775, column: 19, scope: !2023)
!2023 = distinct !DILexicalBlock(scope: !2021, file: !44, line: 6775, column: 19)
!2024 = !DILocation(line: 6776, column: 19, scope: !1970)
!2025 = !DILocalVariable(name: "destination", scope: !2026, file: !44, line: 6776, type: !79)
!2026 = distinct !DILexicalBlock(scope: !1970, file: !44, line: 6776, column: 19)
!2027 = !DILocation(line: 6776, column: 19, scope: !2026)
!2028 = !DILocalVariable(name: "this_reg", scope: !2026, file: !44, line: 6776, type: !115)
!2029 = !DILocation(line: 6776, column: 19, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2031, file: !44, line: 6776, column: 19)
!2031 = distinct !DILexicalBlock(scope: !2026, file: !44, line: 6776, column: 19)
!2032 = !DILocation(line: 6776, column: 19, scope: !2031)
!2033 = distinct !{!2033, !2027, !2027}
!2034 = !DILocation(line: 6776, column: 19, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !2036, file: !44, line: 6776, column: 19)
!2036 = distinct !DILexicalBlock(scope: !2026, file: !44, line: 6776, column: 19)
!2037 = !DILocation(line: 6776, column: 19, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !2035, file: !44, line: 6776, column: 19)
!2039 = !DILocation(line: 6776, column: 19, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2038, file: !44, line: 6776, column: 19)
!2041 = distinct !{!2041, !2034, !2034}
!2042 = !DILocation(line: 6778, column: 19, scope: !1970)
!2043 = !DILocation(line: 6780, column: 13, scope: !1923)
!2044 = !DILocation(line: 6783, column: 13, scope: !1632)
!2045 = !DILocation(line: 6784, column: 11, scope: !1632)
!2046 = !DILocalVariable(name: "d2", scope: !2047, file: !44, line: 6791, type: !101)
!2047 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6790, column: 4)
!2048 = !DILocation(line: 6791, column: 29, scope: !2047)
!2049 = !DILocalVariable(name: "dend2", scope: !2047, file: !44, line: 6791, type: !101)
!2050 = !DILocation(line: 6791, column: 34, scope: !2047)
!2051 = !DILocalVariable(name: "regno", scope: !2047, file: !44, line: 6792, type: !7)
!2052 = !DILocation(line: 6792, column: 10, scope: !2047)
!2053 = !DILocation(line: 6792, column: 20, scope: !2047)
!2054 = !DILocation(line: 6792, column: 18, scope: !2047)
!2055 = !DILocation(line: 6796, column: 17, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !2047, file: !44, line: 6796, column: 17)
!2057 = !DILocation(line: 6796, column: 45, scope: !2056)
!2058 = !DILocation(line: 6796, column: 48, scope: !2056)
!2059 = !DILocation(line: 6796, column: 17, scope: !2047)
!2060 = !DILocation(line: 6797, column: 15, scope: !2056)
!2061 = !DILocation(line: 6800, column: 18, scope: !2047)
!2062 = !DILocation(line: 6800, column: 27, scope: !2047)
!2063 = !DILocation(line: 6800, column: 16, scope: !2047)
!2064 = !DILocation(line: 6807, column: 23, scope: !2047)
!2065 = !DILocation(line: 0, scope: !2047)
!2066 = !DILocation(line: 6808, column: 12, scope: !2047)
!2067 = !DILocation(line: 6808, column: 9, scope: !2047)
!2068 = !DILocation(line: 6807, column: 22, scope: !2047)
!2069 = !DILocation(line: 6809, column: 10, scope: !2047)
!2070 = !DILocation(line: 6809, column: 17, scope: !2047)
!2071 = !DILocation(line: 6809, column: 26, scope: !2047)
!2072 = !DILocation(line: 6807, column: 19, scope: !2047)
!2073 = !DILocation(line: 6810, column: 6, scope: !2047)
!2074 = !DILocation(line: 6814, column: 3, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !2076, file: !44, line: 6811, column: 8)
!2076 = distinct !DILexicalBlock(scope: !2077, file: !44, line: 6810, column: 6)
!2077 = distinct !DILexicalBlock(scope: !2047, file: !44, line: 6810, column: 6)
!2078 = !DILocation(line: 6814, column: 10, scope: !2075)
!2079 = !DILocation(line: 6814, column: 16, scope: !2075)
!2080 = !DILocation(line: 6814, column: 13, scope: !2075)
!2081 = !DILocation(line: 6816, column: 11, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2083, file: !44, line: 6816, column: 11)
!2083 = distinct !DILexicalBlock(scope: !2075, file: !44, line: 6815, column: 5)
!2084 = !DILocation(line: 6816, column: 20, scope: !2082)
!2085 = !DILocation(line: 6816, column: 17, scope: !2082)
!2086 = !DILocation(line: 6816, column: 11, scope: !2083)
!2087 = !DILocation(line: 6816, column: 33, scope: !2082)
!2088 = !DILocation(line: 6817, column: 11, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !2083, file: !44, line: 6817, column: 11)
!2090 = !DILocation(line: 6817, column: 20, scope: !2089)
!2091 = !DILocation(line: 6817, column: 27, scope: !2089)
!2092 = !DILocation(line: 6817, column: 17, scope: !2089)
!2093 = !DILocation(line: 6817, column: 11, scope: !2083)
!2094 = !DILocation(line: 6817, column: 35, scope: !2089)
!2095 = !DILocation(line: 6820, column: 26, scope: !2083)
!2096 = !DILocation(line: 6820, column: 24, scope: !2083)
!2097 = !DILocation(line: 6821, column: 29, scope: !2083)
!2098 = !DILocation(line: 6821, column: 36, scope: !2083)
!2099 = !DILocation(line: 6821, column: 27, scope: !2083)
!2100 = distinct !{!2100, !2074, !2101}
!2101 = !DILocation(line: 6822, column: 5, scope: !2075)
!2102 = !DILocation(line: 6824, column: 7, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2075, file: !44, line: 6824, column: 7)
!2104 = !DILocation(line: 6824, column: 13, scope: !2103)
!2105 = !DILocation(line: 6824, column: 10, scope: !2103)
!2106 = !DILocation(line: 6824, column: 7, scope: !2075)
!2107 = !DILocation(line: 6824, column: 20, scope: !2103)
!2108 = !DILocation(line: 6827, column: 3, scope: !2075)
!2109 = !DILocation(line: 6827, column: 3, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !2111, file: !44, line: 6827, column: 3)
!2111 = distinct !DILexicalBlock(scope: !2075, file: !44, line: 6827, column: 3)
!2112 = !DILocation(line: 6827, column: 3, scope: !2111)
!2113 = distinct !{!2113, !2108, !2108}
!2114 = !DILocation(line: 6830, column: 10, scope: !2075)
!2115 = !DILocation(line: 6830, column: 17, scope: !2075)
!2116 = !DILocation(line: 6830, column: 15, scope: !2075)
!2117 = !DILocation(line: 6830, column: 8, scope: !2075)
!2118 = !DILocation(line: 6834, column: 21, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2075, file: !44, line: 6834, column: 21)
!2120 = !DILocation(line: 6834, column: 28, scope: !2119)
!2121 = !DILocation(line: 6834, column: 36, scope: !2119)
!2122 = !DILocation(line: 6834, column: 34, scope: !2119)
!2123 = !DILocation(line: 6834, column: 26, scope: !2119)
!2124 = !DILocation(line: 6834, column: 21, scope: !2075)
!2125 = !DILocation(line: 6835, column: 12, scope: !2119)
!2126 = !DILocation(line: 6835, column: 20, scope: !2119)
!2127 = !DILocation(line: 6835, column: 18, scope: !2119)
!2128 = !DILocation(line: 6835, column: 10, scope: !2119)
!2129 = !DILocation(line: 6835, column: 5, scope: !2119)
!2130 = !DILocation(line: 6839, column: 7, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2075, file: !44, line: 6839, column: 7)
!2132 = !DILocation(line: 6839, column: 7, scope: !2075)
!2133 = !DILocation(line: 6840, column: 47, scope: !2131)
!2134 = !DILocation(line: 6840, column: 50, scope: !2131)
!2135 = !DILocation(line: 6840, column: 54, scope: !2131)
!2136 = !DILocation(line: 6840, column: 60, scope: !2131)
!2137 = !DILocation(line: 6840, column: 23, scope: !2131)
!2138 = !DILocation(line: 6841, column: 31, scope: !2131)
!2139 = !DILocation(line: 6841, column: 34, scope: !2131)
!2140 = !DILocation(line: 6841, column: 38, scope: !2131)
!2141 = !DILocation(line: 6841, column: 42, scope: !2131)
!2142 = !DILocation(line: 6841, column: 23, scope: !2131)
!2143 = !DILocation(line: 6842, column: 5, scope: !2131)
!2144 = !DILocation(line: 6843, column: 8, scope: !2075)
!2145 = !DILocation(line: 6843, column: 5, scope: !2075)
!2146 = !DILocation(line: 6843, column: 20, scope: !2075)
!2147 = !DILocation(line: 6843, column: 17, scope: !2075)
!2148 = !DILocation(line: 6846, column: 3, scope: !2075)
!2149 = !DILocation(line: 6846, column: 3, scope: !2150)
!2150 = distinct !DILexicalBlock(scope: !2151, file: !44, line: 6846, column: 3)
!2151 = distinct !DILexicalBlock(scope: !2075, file: !44, line: 6846, column: 3)
!2152 = !DILocation(line: 6846, column: 3, scope: !2151)
!2153 = !DILocalVariable(name: "r", scope: !2154, file: !44, line: 6846, type: !115)
!2154 = distinct !DILexicalBlock(scope: !2150, file: !44, line: 6846, column: 3)
!2155 = !DILocation(line: 6846, column: 3, scope: !2154)
!2156 = !DILocation(line: 6846, column: 3, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2154, file: !44, line: 6846, column: 3)
!2158 = !DILocation(line: 6846, column: 3, scope: !2159)
!2159 = distinct !DILexicalBlock(scope: !2157, file: !44, line: 6846, column: 3)
!2160 = !DILocation(line: 6846, column: 3, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2159, file: !44, line: 6846, column: 3)
!2162 = distinct !{!2162, !2156, !2156}
!2163 = !DILocation(line: 6810, column: 6, scope: !2076)
!2164 = distinct !{!2164, !2165, !2166}
!2165 = !DILocation(line: 6810, column: 6, scope: !2077)
!2166 = !DILocation(line: 6847, column: 8, scope: !2077)
!2167 = !DILocation(line: 6849, column: 4, scope: !1632)
!2168 = !DILocation(line: 6858, column: 15, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6858, column: 15)
!2170 = !DILocation(line: 6858, column: 15, scope: !1632)
!2171 = !DILocation(line: 6860, column: 20, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2173, file: !44, line: 6860, column: 19)
!2173 = distinct !DILexicalBlock(scope: !2169, file: !44, line: 6859, column: 13)
!2174 = !DILocation(line: 6860, column: 26, scope: !2172)
!2175 = !DILocation(line: 6860, column: 19, scope: !2173)
!2176 = !DILocation(line: 6860, column: 35, scope: !2172)
!2177 = !DILocation(line: 6861, column: 13, scope: !2173)
!2178 = !DILocation(line: 6862, column: 20, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2169, file: !44, line: 6862, column: 20)
!2180 = !DILocation(line: 6862, column: 26, scope: !2179)
!2181 = !DILocation(line: 6862, column: 34, scope: !2179)
!2182 = !DILocation(line: 6862, column: 37, scope: !2179)
!2183 = !DILocation(line: 6862, column: 43, scope: !2179)
!2184 = !DILocation(line: 6862, column: 20, scope: !2169)
!2185 = !DILocation(line: 6864, column: 15, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !2179, file: !44, line: 6863, column: 13)
!2187 = !DILocation(line: 6867, column: 11, scope: !1632)
!2188 = !DILocation(line: 6874, column: 15, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6874, column: 15)
!2190 = !DILocation(line: 6874, column: 15, scope: !1632)
!2191 = !DILocation(line: 6876, column: 20, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !44, line: 6876, column: 19)
!2193 = distinct !DILexicalBlock(scope: !2189, file: !44, line: 6875, column: 13)
!2194 = !DILocation(line: 6876, column: 26, scope: !2192)
!2195 = !DILocation(line: 6876, column: 19, scope: !2193)
!2196 = !DILocation(line: 6876, column: 35, scope: !2192)
!2197 = !DILocation(line: 6877, column: 13, scope: !2193)
!2198 = !DILocation(line: 6880, column: 21, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2189, file: !44, line: 6880, column: 20)
!2200 = !DILocation(line: 6880, column: 26, scope: !2199)
!2201 = !DILocation(line: 6880, column: 23, scope: !2199)
!2202 = !DILocation(line: 6880, column: 34, scope: !2199)
!2203 = !DILocation(line: 6880, column: 33, scope: !2199)
!2204 = !DILocation(line: 6880, column: 45, scope: !2199)
!2205 = !DILocation(line: 6880, column: 44, scope: !2199)
!2206 = !DILocation(line: 6880, column: 48, scope: !2199)
!2207 = !DILocation(line: 6881, column: 20, scope: !2199)
!2208 = !DILocation(line: 6881, column: 23, scope: !2199)
!2209 = !DILocation(line: 6881, column: 29, scope: !2199)
!2210 = !DILocation(line: 6880, column: 20, scope: !2189)
!2211 = !DILocation(line: 6883, column: 15, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2199, file: !44, line: 6882, column: 13)
!2213 = !DILocation(line: 6885, column: 11, scope: !1632)
!2214 = !DILocation(line: 6891, column: 15, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6891, column: 15)
!2216 = !DILocation(line: 6891, column: 15, scope: !1632)
!2217 = !DILocation(line: 6892, column: 13, scope: !2215)
!2218 = !DILocation(line: 6893, column: 11, scope: !1632)
!2219 = !DILocation(line: 6899, column: 8, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6899, column: 8)
!2221 = !DILocation(line: 6899, column: 8, scope: !1632)
!2222 = !DILocation(line: 6900, column: 6, scope: !2220)
!2223 = !DILocation(line: 6901, column: 11, scope: !1632)
!2224 = !DILocation(line: 6923, column: 11, scope: !1632)
!2225 = !DILocation(line: 6923, column: 11, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6923, column: 11)
!2227 = !DILocation(line: 6923, column: 11, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2226, file: !44, line: 6923, column: 11)
!2229 = !DILocation(line: 6930, column: 11, scope: !1632)
!2230 = !DILocalVariable(name: "destination", scope: !2231, file: !44, line: 6930, type: !79)
!2231 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6930, column: 11)
!2232 = !DILocation(line: 6930, column: 11, scope: !2231)
!2233 = !DILocalVariable(name: "this_reg", scope: !2231, file: !44, line: 6930, type: !115)
!2234 = !DILocation(line: 6930, column: 11, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2236, file: !44, line: 6930, column: 11)
!2236 = distinct !DILexicalBlock(scope: !2231, file: !44, line: 6930, column: 11)
!2237 = !DILocation(line: 6930, column: 11, scope: !2236)
!2238 = distinct !{!2238, !2232, !2232}
!2239 = !DILocation(line: 6930, column: 11, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !44, line: 6930, column: 11)
!2241 = distinct !DILexicalBlock(scope: !2231, file: !44, line: 6930, column: 11)
!2242 = !DILocation(line: 6930, column: 11, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2240, file: !44, line: 6930, column: 11)
!2244 = !DILocation(line: 6930, column: 11, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2243, file: !44, line: 6930, column: 11)
!2246 = distinct !{!2246, !2239, !2239}
!2247 = !DILocation(line: 6931, column: 11, scope: !1632)
!2248 = !DILabel(scope: !1632, name: "on_failure", file: !44, line: 6947)
!2249 = !DILocation(line: 6947, column: 9, scope: !1632)
!2250 = !DILocation(line: 6950, column: 11, scope: !1632)
!2251 = !DILocation(line: 6950, column: 11, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6950, column: 11)
!2253 = !DILocation(line: 6950, column: 11, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2252, file: !44, line: 6950, column: 11)
!2255 = !DILocation(line: 6966, column: 16, scope: !1632)
!2256 = !DILocation(line: 6966, column: 14, scope: !1632)
!2257 = !DILocation(line: 6972, column: 11, scope: !1632)
!2258 = !DILocation(line: 6972, column: 18, scope: !1632)
!2259 = !DILocation(line: 6972, column: 23, scope: !1632)
!2260 = !DILocation(line: 6972, column: 21, scope: !1632)
!2261 = !DILocation(line: 6972, column: 28, scope: !1632)
!2262 = !DILocation(line: 6972, column: 46, scope: !1632)
!2263 = !DILocation(line: 6972, column: 45, scope: !1632)
!2264 = !DILocation(line: 6972, column: 31, scope: !1632)
!2265 = !DILocation(line: 6972, column: 49, scope: !1632)
!2266 = !DILocation(line: 0, scope: !1632)
!2267 = !DILocation(line: 6973, column: 15, scope: !1632)
!2268 = distinct !{!2268, !2257, !2267}
!2269 = !DILocation(line: 6975, column: 15, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6975, column: 15)
!2271 = !DILocation(line: 6975, column: 20, scope: !2270)
!2272 = !DILocation(line: 6975, column: 18, scope: !2270)
!2273 = !DILocation(line: 6975, column: 25, scope: !2270)
!2274 = !DILocation(line: 6975, column: 43, scope: !2270)
!2275 = !DILocation(line: 6975, column: 42, scope: !2270)
!2276 = !DILocation(line: 6975, column: 28, scope: !2270)
!2277 = !DILocation(line: 6975, column: 46, scope: !2270)
!2278 = !DILocation(line: 6975, column: 15, scope: !1632)
!2279 = !DILocation(line: 6981, column: 38, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2270, file: !44, line: 6976, column: 13)
!2281 = !DILocation(line: 6981, column: 41, scope: !2280)
!2282 = !DILocation(line: 6981, column: 36, scope: !2280)
!2283 = !DILocation(line: 6981, column: 50, scope: !2280)
!2284 = !DILocation(line: 6981, column: 53, scope: !2280)
!2285 = !DILocation(line: 6981, column: 48, scope: !2280)
!2286 = !DILocation(line: 6981, column: 46, scope: !2280)
!2287 = !DILocation(line: 6981, column: 34, scope: !2280)
!2288 = !DILocation(line: 6982, column: 19, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2280, file: !44, line: 6982, column: 19)
!2290 = !DILocation(line: 6982, column: 37, scope: !2289)
!2291 = !DILocation(line: 6982, column: 19, scope: !2280)
!2292 = !DILocation(line: 6983, column: 39, scope: !2289)
!2293 = !DILocation(line: 6983, column: 42, scope: !2289)
!2294 = !DILocation(line: 6983, column: 37, scope: !2289)
!2295 = !DILocation(line: 6983, column: 35, scope: !2289)
!2296 = !DILocation(line: 6983, column: 17, scope: !2289)
!2297 = !DILocation(line: 6984, column: 13, scope: !2280)
!2298 = !DILocation(line: 6987, column: 11, scope: !1632)
!2299 = !DILocalVariable(name: "destination", scope: !2300, file: !44, line: 6987, type: !79)
!2300 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6987, column: 11)
!2301 = !DILocation(line: 6987, column: 11, scope: !2300)
!2302 = !DILocalVariable(name: "this_reg", scope: !2300, file: !44, line: 6987, type: !115)
!2303 = !DILocation(line: 6987, column: 11, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2305, file: !44, line: 6987, column: 11)
!2305 = distinct !DILexicalBlock(scope: !2300, file: !44, line: 6987, column: 11)
!2306 = !DILocation(line: 6987, column: 11, scope: !2305)
!2307 = distinct !{!2307, !2301, !2301}
!2308 = !DILocation(line: 6987, column: 11, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2310, file: !44, line: 6987, column: 11)
!2310 = distinct !DILexicalBlock(scope: !2300, file: !44, line: 6987, column: 11)
!2311 = !DILocation(line: 6987, column: 11, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2309, file: !44, line: 6987, column: 11)
!2313 = !DILocation(line: 6987, column: 11, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2312, file: !44, line: 6987, column: 11)
!2315 = distinct !{!2315, !2308, !2308}
!2316 = !DILocation(line: 6988, column: 11, scope: !1632)
!2317 = !DILocation(line: 6994, column: 11, scope: !1632)
!2318 = !DILocation(line: 6994, column: 11, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6994, column: 11)
!2320 = !DILocation(line: 6994, column: 11, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2319, file: !44, line: 6994, column: 11)
!2322 = !DILocalVariable(name: "p2", scope: !2323, file: !44, line: 6997, type: !81)
!2323 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 6996, column: 11)
!2324 = !DILocation(line: 6997, column: 24, scope: !2323)
!2325 = !DILocation(line: 6997, column: 29, scope: !2323)
!2326 = !DILocation(line: 7016, column: 6, scope: !2323)
!2327 = !DILocation(line: 7018, column: 7, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2329, file: !44, line: 7018, column: 7)
!2329 = distinct !DILexicalBlock(scope: !2323, file: !44, line: 7017, column: 8)
!2330 = !DILocation(line: 7018, column: 10, scope: !2328)
!2331 = !DILocation(line: 7018, column: 16, scope: !2328)
!2332 = !DILocation(line: 7018, column: 14, scope: !2328)
!2333 = !DILocation(line: 7019, column: 7, scope: !2328)
!2334 = !DILocation(line: 7019, column: 26, scope: !2328)
!2335 = !DILocation(line: 7019, column: 25, scope: !2328)
!2336 = !DILocation(line: 7019, column: 11, scope: !2328)
!2337 = !DILocation(line: 7019, column: 29, scope: !2328)
!2338 = !DILocation(line: 7020, column: 4, scope: !2328)
!2339 = !DILocation(line: 7020, column: 22, scope: !2328)
!2340 = !DILocation(line: 7020, column: 21, scope: !2328)
!2341 = !DILocation(line: 7020, column: 7, scope: !2328)
!2342 = !DILocation(line: 7020, column: 25, scope: !2328)
!2343 = !DILocation(line: 7018, column: 7, scope: !2329)
!2344 = !DILocation(line: 7021, column: 8, scope: !2328)
!2345 = !DILocation(line: 7021, column: 5, scope: !2328)
!2346 = !DILocation(line: 7022, column: 12, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2328, file: !44, line: 7022, column: 12)
!2348 = !DILocation(line: 7022, column: 15, scope: !2347)
!2349 = !DILocation(line: 7022, column: 19, scope: !2347)
!2350 = !DILocation(line: 7022, column: 47, scope: !2347)
!2351 = !DILocation(line: 7022, column: 45, scope: !2347)
!2352 = !DILocation(line: 7023, column: 5, scope: !2347)
!2353 = !DILocation(line: 7023, column: 23, scope: !2347)
!2354 = !DILocation(line: 7023, column: 22, scope: !2347)
!2355 = !DILocation(line: 7023, column: 8, scope: !2347)
!2356 = !DILocation(line: 7023, column: 26, scope: !2347)
!2357 = !DILocation(line: 7022, column: 12, scope: !2328)
!2358 = !DILocation(line: 7024, column: 8, scope: !2347)
!2359 = !DILocation(line: 7024, column: 5, scope: !2347)
!2360 = !DILocation(line: 7026, column: 5, scope: !2347)
!2361 = distinct !{!2361, !2326, !2362}
!2362 = !DILocation(line: 7027, column: 8, scope: !2323)
!2363 = !DILocation(line: 7029, column: 11, scope: !2323)
!2364 = !DILocation(line: 7029, column: 15, scope: !2323)
!2365 = !DILocation(line: 7029, column: 13, scope: !2323)
!2366 = !DILocation(line: 7029, column: 9, scope: !2323)
!2367 = !DILocation(line: 7035, column: 17, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2323, file: !44, line: 7035, column: 17)
!2369 = !DILocation(line: 7035, column: 23, scope: !2368)
!2370 = !DILocation(line: 7035, column: 20, scope: !2368)
!2371 = !DILocation(line: 7035, column: 17, scope: !2323)
!2372 = !DILocation(line: 7040, column: 12, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2368, file: !44, line: 7036, column: 8)
!2374 = !DILocation(line: 7040, column: 40, scope: !2373)
!2375 = !DILocation(line: 7044, column: 15, scope: !2373)
!2376 = !DILocation(line: 7046, column: 37, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2368, file: !44, line: 7046, column: 22)
!2378 = !DILocation(line: 7046, column: 36, scope: !2377)
!2379 = !DILocation(line: 7046, column: 22, scope: !2377)
!2380 = !DILocation(line: 7046, column: 40, scope: !2377)
!2381 = !DILocation(line: 7050, column: 8, scope: !2377)
!2382 = !DILocation(line: 7050, column: 12, scope: !2377)
!2383 = !DILocation(line: 7050, column: 18, scope: !2377)
!2384 = !DILocation(line: 7050, column: 33, scope: !2377)
!2385 = !DILocation(line: 7050, column: 51, scope: !2377)
!2386 = !DILocation(line: 7050, column: 50, scope: !2377)
!2387 = !DILocation(line: 7050, column: 36, scope: !2377)
!2388 = !DILocation(line: 7050, column: 54, scope: !2377)
!2389 = !DILocation(line: 7046, column: 22, scope: !2368)
!2390 = !DILocalVariable(name: "c", scope: !2391, file: !44, line: 7052, type: !82)
!2391 = distinct !DILexicalBlock(scope: !2377, file: !44, line: 7051, column: 8)
!2392 = !DILocation(line: 7052, column: 20, scope: !2391)
!2393 = !DILocation(line: 7053, column: 22, scope: !2391)
!2394 = !DILocation(line: 7053, column: 21, scope: !2391)
!2395 = !DILocation(line: 7053, column: 25, scope: !2391)
!2396 = !DILocation(line: 7053, column: 55, scope: !2391)
!2397 = !DILocation(line: 7055, column: 36, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2391, file: !44, line: 7055, column: 21)
!2399 = !DILocation(line: 7055, column: 22, scope: !2398)
!2400 = !DILocation(line: 7055, column: 62, scope: !2398)
!2401 = !DILocation(line: 7059, column: 9, scope: !2398)
!2402 = !DILocation(line: 7059, column: 12, scope: !2398)
!2403 = !DILocation(line: 7059, column: 41, scope: !2398)
!2404 = !DILocation(line: 7059, column: 38, scope: !2398)
!2405 = !DILocation(line: 7055, column: 21, scope: !2391)
!2406 = !DILocation(line: 7061, column: 9, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2398, file: !44, line: 7060, column: 19)
!2408 = !DILocation(line: 7061, column: 37, scope: !2407)
!2409 = !DILocation(line: 7072, column: 19, scope: !2407)
!2410 = !DILocation(line: 7075, column: 26, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2398, file: !44, line: 7075, column: 12)
!2412 = !DILocation(line: 7075, column: 12, scope: !2411)
!2413 = !DILocation(line: 7075, column: 32, scope: !2411)
!2414 = !DILocation(line: 7076, column: 5, scope: !2411)
!2415 = !DILocation(line: 7076, column: 22, scope: !2411)
!2416 = !DILocation(line: 7076, column: 8, scope: !2411)
!2417 = !DILocation(line: 7076, column: 28, scope: !2411)
!2418 = !DILocation(line: 7075, column: 12, scope: !2398)
!2419 = !DILocalVariable(name: "negate", scope: !2420, file: !44, line: 7078, type: !7)
!2420 = distinct !DILexicalBlock(scope: !2411, file: !44, line: 7077, column: 5)
!2421 = !DILocation(line: 7078, column: 11, scope: !2420)
!2422 = !DILocation(line: 7078, column: 34, scope: !2420)
!2423 = !DILocation(line: 7078, column: 20, scope: !2420)
!2424 = !DILocation(line: 7078, column: 40, scope: !2420)
!2425 = !DILocation(line: 7080, column: 11, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2420, file: !44, line: 7080, column: 11)
!2427 = !DILocation(line: 7080, column: 27, scope: !2426)
!2428 = !DILocation(line: 7080, column: 33, scope: !2426)
!2429 = !DILocation(line: 7080, column: 13, scope: !2426)
!2430 = !DILocation(line: 7081, column: 4, scope: !2426)
!2431 = !DILocation(line: 7081, column: 7, scope: !2426)
!2432 = !DILocation(line: 7081, column: 14, scope: !2426)
!2433 = !DILocation(line: 7081, column: 16, scope: !2426)
!2434 = !DILocation(line: 7081, column: 12, scope: !2426)
!2435 = !DILocation(line: 7081, column: 38, scope: !2426)
!2436 = !DILocation(line: 7081, column: 40, scope: !2426)
!2437 = !DILocation(line: 7081, column: 34, scope: !2426)
!2438 = !DILocation(line: 7081, column: 29, scope: !2426)
!2439 = !DILocation(line: 7080, column: 11, scope: !2420)
!2440 = !DILocation(line: 7082, column: 19, scope: !2426)
!2441 = !DILocation(line: 7082, column: 18, scope: !2426)
!2442 = !DILocation(line: 7082, column: 16, scope: !2426)
!2443 = !DILocation(line: 7082, column: 9, scope: !2426)
!2444 = !DILocation(line: 7086, column: 12, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !2420, file: !44, line: 7086, column: 11)
!2446 = !DILocation(line: 7086, column: 11, scope: !2420)
!2447 = !DILocation(line: 7088, column: 13, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2445, file: !44, line: 7087, column: 23)
!2449 = !DILocation(line: 7088, column: 19, scope: !2448)
!2450 = !DILocation(line: 7090, column: 23, scope: !2448)
!2451 = !DILocation(line: 7091, column: 5, scope: !2420)
!2452 = !DILocation(line: 7093, column: 8, scope: !2391)
!2453 = !DILocation(line: 7095, column: 37, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2377, file: !44, line: 7095, column: 22)
!2455 = !DILocation(line: 7095, column: 36, scope: !2454)
!2456 = !DILocation(line: 7095, column: 22, scope: !2454)
!2457 = !DILocation(line: 7095, column: 40, scope: !2454)
!2458 = !DILocation(line: 7095, column: 22, scope: !2377)
!2459 = !DILocation(line: 7099, column: 35, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2461, file: !44, line: 7099, column: 21)
!2461 = distinct !DILexicalBlock(scope: !2454, file: !44, line: 7096, column: 8)
!2462 = !DILocation(line: 7099, column: 21, scope: !2460)
!2463 = !DILocation(line: 7099, column: 41, scope: !2460)
!2464 = !DILocation(line: 7100, column: 8, scope: !2460)
!2465 = !DILocation(line: 7100, column: 20, scope: !2460)
!2466 = !DILocation(line: 7100, column: 14, scope: !2460)
!2467 = !DILocation(line: 7100, column: 26, scope: !2460)
!2468 = !DILocation(line: 7100, column: 46, scope: !2460)
!2469 = !DILocation(line: 7100, column: 40, scope: !2460)
!2470 = !DILocation(line: 7100, column: 38, scope: !2460)
!2471 = !DILocation(line: 7101, column: 7, scope: !2460)
!2472 = !DILocation(line: 7101, column: 11, scope: !2460)
!2473 = !DILocation(line: 7101, column: 18, scope: !2460)
!2474 = !DILocation(line: 7101, column: 24, scope: !2460)
!2475 = !DILocation(line: 7101, column: 16, scope: !2460)
!2476 = !DILocation(line: 7102, column: 20, scope: !2460)
!2477 = !DILocation(line: 7102, column: 26, scope: !2460)
!2478 = !DILocation(line: 7102, column: 16, scope: !2460)
!2479 = !DILocation(line: 7102, column: 11, scope: !2460)
!2480 = !DILocation(line: 7099, column: 21, scope: !2461)
!2481 = !DILocation(line: 7104, column: 7, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2460, file: !44, line: 7103, column: 5)
!2483 = !DILocation(line: 7104, column: 13, scope: !2482)
!2484 = !DILocation(line: 7106, column: 19, scope: !2482)
!2485 = !DILocation(line: 7108, column: 26, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2460, file: !44, line: 7108, column: 12)
!2487 = !DILocation(line: 7108, column: 12, scope: !2486)
!2488 = !DILocation(line: 7108, column: 32, scope: !2486)
!2489 = !DILocation(line: 7108, column: 12, scope: !2460)
!2490 = !DILocalVariable(name: "idx", scope: !2491, file: !44, line: 7110, type: !7)
!2491 = distinct !DILexicalBlock(scope: !2486, file: !44, line: 7109, column: 5)
!2492 = !DILocation(line: 7110, column: 11, scope: !2491)
!2493 = !DILocation(line: 7113, column: 16, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2491, file: !44, line: 7113, column: 7)
!2495 = !DILocation(line: 7113, column: 12, scope: !2494)
!2496 = !DILocation(line: 7113, column: 21, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2494, file: !44, line: 7113, column: 7)
!2498 = !DILocation(line: 7113, column: 33, scope: !2497)
!2499 = !DILocation(line: 7113, column: 27, scope: !2497)
!2500 = !DILocation(line: 7113, column: 25, scope: !2497)
!2501 = !DILocation(line: 7113, column: 7, scope: !2494)
!2502 = !DILocation(line: 7114, column: 16, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2497, file: !44, line: 7114, column: 13)
!2504 = !DILocation(line: 7114, column: 23, scope: !2503)
!2505 = !DILocation(line: 7114, column: 21, scope: !2503)
!2506 = !DILocation(line: 7114, column: 28, scope: !2503)
!2507 = !DILocation(line: 7115, column: 9, scope: !2503)
!2508 = !DILocation(line: 7115, column: 13, scope: !2503)
!2509 = !DILocation(line: 7115, column: 25, scope: !2503)
!2510 = !DILocation(line: 7115, column: 19, scope: !2503)
!2511 = !DILocation(line: 7115, column: 17, scope: !2503)
!2512 = !DILocation(line: 7116, column: 6, scope: !2503)
!2513 = !DILocation(line: 7116, column: 11, scope: !2503)
!2514 = !DILocation(line: 7116, column: 18, scope: !2503)
!2515 = !DILocation(line: 7116, column: 16, scope: !2503)
!2516 = !DILocation(line: 7116, column: 27, scope: !2503)
!2517 = !DILocation(line: 7116, column: 34, scope: !2503)
!2518 = !DILocation(line: 7116, column: 32, scope: !2503)
!2519 = !DILocation(line: 7116, column: 25, scope: !2503)
!2520 = !DILocation(line: 7116, column: 23, scope: !2503)
!2521 = !DILocation(line: 7116, column: 40, scope: !2503)
!2522 = !DILocation(line: 7114, column: 13, scope: !2497)
!2523 = !DILocation(line: 7117, column: 4, scope: !2503)
!2524 = !DILocation(line: 7116, column: 46, scope: !2503)
!2525 = !DILocation(line: 7113, column: 43, scope: !2497)
!2526 = !DILocation(line: 7113, column: 7, scope: !2497)
!2527 = distinct !{!2527, !2501, !2528}
!2528 = !DILocation(line: 7117, column: 4, scope: !2494)
!2529 = !DILocation(line: 7119, column: 11, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2491, file: !44, line: 7119, column: 11)
!2531 = !DILocation(line: 7119, column: 18, scope: !2530)
!2532 = !DILocation(line: 7119, column: 15, scope: !2530)
!2533 = !DILocation(line: 7119, column: 11, scope: !2491)
!2534 = !DILocation(line: 7121, column: 13, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2530, file: !44, line: 7120, column: 23)
!2536 = !DILocation(line: 7121, column: 19, scope: !2535)
!2537 = !DILocation(line: 7123, column: 23, scope: !2535)
!2538 = !DILocation(line: 7124, column: 5, scope: !2491)
!2539 = !DILocation(line: 7125, column: 26, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2486, file: !44, line: 7125, column: 12)
!2541 = !DILocation(line: 7125, column: 12, scope: !2540)
!2542 = !DILocation(line: 7125, column: 32, scope: !2540)
!2543 = !DILocation(line: 7125, column: 12, scope: !2486)
!2544 = !DILocalVariable(name: "idx", scope: !2545, file: !44, line: 7127, type: !7)
!2545 = distinct !DILexicalBlock(scope: !2540, file: !44, line: 7126, column: 5)
!2546 = !DILocation(line: 7127, column: 11, scope: !2545)
!2547 = !DILocation(line: 7130, column: 16, scope: !2548)
!2548 = distinct !DILexicalBlock(scope: !2545, file: !44, line: 7130, column: 7)
!2549 = !DILocation(line: 7130, column: 12, scope: !2548)
!2550 = !DILocation(line: 7131, column: 5, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2548, file: !44, line: 7130, column: 7)
!2552 = !DILocation(line: 7131, column: 17, scope: !2551)
!2553 = !DILocation(line: 7131, column: 11, scope: !2551)
!2554 = !DILocation(line: 7131, column: 9, scope: !2551)
!2555 = !DILocation(line: 7131, column: 23, scope: !2551)
!2556 = !DILocation(line: 7131, column: 26, scope: !2551)
!2557 = !DILocation(line: 7131, column: 38, scope: !2551)
!2558 = !DILocation(line: 7131, column: 32, scope: !2551)
!2559 = !DILocation(line: 7131, column: 30, scope: !2551)
!2560 = !DILocation(line: 0, scope: !2551)
!2561 = !DILocation(line: 7130, column: 7, scope: !2548)
!2562 = !DILocation(line: 7133, column: 14, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2551, file: !44, line: 7133, column: 13)
!2564 = !DILocation(line: 7133, column: 21, scope: !2563)
!2565 = !DILocation(line: 7133, column: 19, scope: !2563)
!2566 = !DILocation(line: 7133, column: 28, scope: !2563)
!2567 = !DILocation(line: 7133, column: 35, scope: !2563)
!2568 = !DILocation(line: 7133, column: 33, scope: !2563)
!2569 = !DILocation(line: 7133, column: 26, scope: !2563)
!2570 = !DILocation(line: 7133, column: 41, scope: !2563)
!2571 = !DILocation(line: 7133, column: 13, scope: !2551)
!2572 = !DILocation(line: 7134, column: 4, scope: !2563)
!2573 = !DILocation(line: 7133, column: 44, scope: !2563)
!2574 = !DILocation(line: 7132, column: 8, scope: !2551)
!2575 = !DILocation(line: 7130, column: 7, scope: !2551)
!2576 = distinct !{!2576, !2561, !2577}
!2577 = !DILocation(line: 7134, column: 4, scope: !2548)
!2578 = !DILocation(line: 7136, column: 11, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2545, file: !44, line: 7136, column: 11)
!2580 = !DILocation(line: 7136, column: 18, scope: !2579)
!2581 = !DILocation(line: 7136, column: 15, scope: !2579)
!2582 = !DILocation(line: 7136, column: 24, scope: !2579)
!2583 = !DILocation(line: 7136, column: 27, scope: !2579)
!2584 = !DILocation(line: 7136, column: 34, scope: !2579)
!2585 = !DILocation(line: 7136, column: 31, scope: !2579)
!2586 = !DILocation(line: 7136, column: 11, scope: !2545)
!2587 = !DILocation(line: 7138, column: 13, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2579, file: !44, line: 7137, column: 23)
!2589 = !DILocation(line: 7138, column: 19, scope: !2588)
!2590 = !DILocation(line: 7140, column: 23, scope: !2588)
!2591 = !DILocation(line: 7141, column: 5, scope: !2545)
!2592 = !DILocation(line: 7142, column: 8, scope: !2461)
!2593 = !DILocation(line: 7145, column: 6, scope: !1632)
!2594 = !DILocation(line: 7146, column: 22, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7146, column: 8)
!2596 = !DILocation(line: 7146, column: 8, scope: !2595)
!2597 = !DILocation(line: 7146, column: 28, scope: !2595)
!2598 = !DILocation(line: 7146, column: 8, scope: !1632)
!2599 = !DILocation(line: 7148, column: 8, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2595, file: !44, line: 7147, column: 6)
!2601 = !DILocation(line: 7148, column: 14, scope: !2600)
!2602 = !DILocation(line: 7150, column: 8, scope: !2600)
!2603 = !DILocation(line: 7146, column: 31, scope: !2595)
!2604 = !DILocalVariable(name: "dummy_low_reg", scope: !2605, file: !44, line: 7168, type: !115)
!2605 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7162, column: 11)
!2606 = !DILocation(line: 7168, column: 26, scope: !2605)
!2607 = !DILocalVariable(name: "dummy_high_reg", scope: !2605, file: !44, line: 7168, type: !115)
!2608 = !DILocation(line: 7168, column: 41, scope: !2605)
!2609 = !DILocalVariable(name: "pdummy", scope: !2605, file: !44, line: 7169, type: !81)
!2610 = !DILocation(line: 7169, column: 22, scope: !2605)
!2611 = !DILocalVariable(name: "sdummy", scope: !2605, file: !44, line: 7170, type: !101)
!2612 = !DILocation(line: 7170, column: 27, scope: !2605)
!2613 = !DILocalVariable(name: "this_reg", scope: !2614, file: !44, line: 7173, type: !115)
!2614 = distinct !DILexicalBlock(scope: !2605, file: !44, line: 7173, column: 13)
!2615 = !DILocation(line: 7173, column: 13, scope: !2614)
!2616 = !DILocalVariable(name: "string_temp", scope: !2614, file: !44, line: 7173, type: !116)
!2617 = !DILocation(line: 7173, column: 13, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2614, file: !44, line: 7173, column: 13)
!2619 = !DILocation(line: 7173, column: 13, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2621, file: !44, line: 7173, column: 13)
!2621 = distinct !DILexicalBlock(scope: !2614, file: !44, line: 7173, column: 13)
!2622 = !DILocation(line: 7173, column: 13, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2620, file: !44, line: 7173, column: 13)
!2624 = !DILocation(line: 7173, column: 13, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2623, file: !44, line: 7173, column: 13)
!2626 = distinct !{!2626, !2619, !2619}
!2627 = !DILocation(line: 7176, column: 11, scope: !2605)
!2628 = !DILabel(scope: !1632, name: "unconditional_jump", file: !44, line: 7179)
!2629 = !DILocation(line: 7179, column: 2, scope: !1632)
!2630 = !DILocation(line: 7189, column: 4, scope: !1632)
!2631 = !DILocation(line: 7189, column: 4, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7189, column: 4)
!2633 = !DILocation(line: 7189, column: 4, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2632, file: !44, line: 7189, column: 4)
!2635 = !DILocation(line: 7191, column: 9, scope: !1632)
!2636 = !DILocation(line: 7191, column: 6, scope: !1632)
!2637 = !DILocation(line: 7197, column: 4, scope: !1632)
!2638 = !DILocation(line: 7204, column: 11, scope: !1632)
!2639 = !DILocation(line: 7216, column: 11, scope: !1632)
!2640 = !DILocalVariable(name: "destination", scope: !2641, file: !44, line: 7216, type: !79)
!2641 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7216, column: 11)
!2642 = !DILocation(line: 7216, column: 11, scope: !2641)
!2643 = !DILocalVariable(name: "this_reg", scope: !2641, file: !44, line: 7216, type: !115)
!2644 = !DILocation(line: 7216, column: 11, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2646, file: !44, line: 7216, column: 11)
!2646 = distinct !DILexicalBlock(scope: !2641, file: !44, line: 7216, column: 11)
!2647 = !DILocation(line: 7216, column: 11, scope: !2646)
!2648 = distinct !{!2648, !2642, !2642}
!2649 = !DILocation(line: 7216, column: 11, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2651, file: !44, line: 7216, column: 11)
!2651 = distinct !DILexicalBlock(scope: !2641, file: !44, line: 7216, column: 11)
!2652 = !DILocation(line: 7216, column: 11, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2650, file: !44, line: 7216, column: 11)
!2654 = !DILocation(line: 7216, column: 11, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2653, file: !44, line: 7216, column: 11)
!2656 = distinct !{!2656, !2649, !2649}
!2657 = !DILocation(line: 7217, column: 11, scope: !1632)
!2658 = !DILocation(line: 7229, column: 11, scope: !1632)
!2659 = !DILocalVariable(name: "destination", scope: !2660, file: !44, line: 7229, type: !79)
!2660 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7229, column: 11)
!2661 = !DILocation(line: 7229, column: 11, scope: !2660)
!2662 = !DILocalVariable(name: "this_reg", scope: !2660, file: !44, line: 7229, type: !115)
!2663 = !DILocation(line: 7229, column: 11, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2665, file: !44, line: 7229, column: 11)
!2665 = distinct !DILexicalBlock(scope: !2660, file: !44, line: 7229, column: 11)
!2666 = !DILocation(line: 7229, column: 11, scope: !2665)
!2667 = distinct !{!2667, !2661, !2661}
!2668 = !DILocation(line: 7229, column: 11, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !2670, file: !44, line: 7229, column: 11)
!2670 = distinct !DILexicalBlock(scope: !2660, file: !44, line: 7229, column: 11)
!2671 = !DILocation(line: 7229, column: 11, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2669, file: !44, line: 7229, column: 11)
!2673 = !DILocation(line: 7229, column: 11, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2672, file: !44, line: 7229, column: 11)
!2675 = distinct !{!2675, !2668, !2668}
!2676 = !DILocation(line: 7230, column: 11, scope: !1632)
!2677 = !DILocation(line: 7235, column: 11, scope: !1632)
!2678 = !DILocation(line: 7235, column: 11, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7235, column: 11)
!2680 = !DILocation(line: 7240, column: 15, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7240, column: 15)
!2682 = !DILocation(line: 7240, column: 20, scope: !2681)
!2683 = !DILocation(line: 7240, column: 15, scope: !1632)
!2684 = !DILocation(line: 7242, column: 20, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2681, file: !44, line: 7241, column: 13)
!2686 = !DILocation(line: 7243, column: 11, scope: !2685)
!2687 = !DILocation(line: 7244, column: 16, scope: !2685)
!2688 = !DILocation(line: 7244, column: 16, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2685, file: !44, line: 7244, column: 16)
!2690 = !DILocation(line: 7244, column: 16, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2689, file: !44, line: 7244, column: 16)
!2692 = !DILocation(line: 7252, column: 13, scope: !2685)
!2693 = !DILocation(line: 7253, column: 13, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2681, file: !44, line: 7253, column: 13)
!2695 = !DILocation(line: 7253, column: 18, scope: !2694)
!2696 = !DILocation(line: 7253, column: 13, scope: !2681)
!2697 = !DILocation(line: 7266, column: 8, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2694, file: !44, line: 7254, column: 13)
!2699 = !DILocation(line: 7266, column: 13, scope: !2698)
!2700 = !DILocation(line: 7267, column: 15, scope: !2698)
!2701 = !DILocation(line: 7267, column: 20, scope: !2698)
!2702 = !DILocation(line: 7269, column: 15, scope: !2698)
!2703 = !DILocation(line: 7271, column: 11, scope: !1632)
!2704 = !DILocation(line: 7274, column: 11, scope: !1632)
!2705 = !DILocation(line: 7274, column: 11, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7274, column: 11)
!2707 = !DILocation(line: 7278, column: 15, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7278, column: 15)
!2709 = !DILocation(line: 7278, column: 15, scope: !1632)
!2710 = !DILocation(line: 7280, column: 20, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2708, file: !44, line: 7279, column: 13)
!2712 = !DILocation(line: 7281, column: 16, scope: !2711)
!2713 = !DILocation(line: 7281, column: 16, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2711, file: !44, line: 7281, column: 16)
!2715 = !DILocation(line: 7290, column: 9, scope: !2711)
!2716 = !DILocation(line: 7294, column: 8, scope: !2708)
!2717 = !DILocation(line: 7295, column: 11, scope: !1632)
!2718 = !DILocation(line: 7301, column: 13, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7298, column: 4)
!2720 = !DILocation(line: 7301, column: 13, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2719, file: !44, line: 7301, column: 13)
!2722 = !DILocation(line: 7301, column: 13, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2721, file: !44, line: 7301, column: 13)
!2724 = !DILocation(line: 7302, column: 18, scope: !2719)
!2725 = !DILocation(line: 7302, column: 22, scope: !2719)
!2726 = !DILocation(line: 7302, column: 20, scope: !2719)
!2727 = !DILocation(line: 7302, column: 16, scope: !2719)
!2728 = !DILocation(line: 7303, column: 13, scope: !2719)
!2729 = !DILocation(line: 7303, column: 13, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2719, file: !44, line: 7303, column: 13)
!2731 = !DILocation(line: 7303, column: 13, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2730, file: !44, line: 7303, column: 13)
!2733 = !DILocation(line: 7309, column: 6, scope: !2719)
!2734 = !DILocation(line: 7309, column: 6, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2719, file: !44, line: 7309, column: 6)
!2736 = !DILocation(line: 7310, column: 13, scope: !2719)
!2737 = !DILocalVariable(name: "prevchar", scope: !2738, file: !44, line: 7333, type: !232)
!2738 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7332, column: 2)
!2739 = !DILocation(line: 7333, column: 12, scope: !2738)
!2740 = !DILocalVariable(name: "thischar", scope: !2738, file: !44, line: 7333, type: !232)
!2741 = !DILocation(line: 7333, column: 22, scope: !2738)
!2742 = !DILocation(line: 7336, column: 8, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2738, file: !44, line: 7336, column: 8)
!2744 = !DILocation(line: 7336, column: 27, scope: !2743)
!2745 = !DILocation(line: 7336, column: 30, scope: !2743)
!2746 = !DILocation(line: 7336, column: 8, scope: !2738)
!2747 = !DILocation(line: 7337, column: 6, scope: !2743)
!2748 = !DILocation(line: 7339, column: 15, scope: !2738)
!2749 = !DILocation(line: 7339, column: 13, scope: !2738)
!2750 = !DILocation(line: 7340, column: 15, scope: !2738)
!2751 = !DILocation(line: 7340, column: 13, scope: !2738)
!2752 = !DILocation(line: 7341, column: 8, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2738, file: !44, line: 7341, column: 8)
!2754 = !DILocation(line: 7341, column: 20, scope: !2753)
!2755 = !DILocation(line: 7341, column: 17, scope: !2753)
!2756 = !DILocation(line: 7341, column: 8, scope: !2738)
!2757 = !DILocation(line: 7342, column: 6, scope: !2753)
!2758 = !DILocation(line: 7343, column: 4, scope: !2738)
!2759 = !DILocalVariable(name: "prevchar", scope: !2760, file: !44, line: 7348, type: !232)
!2760 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7347, column: 2)
!2761 = !DILocation(line: 7348, column: 12, scope: !2760)
!2762 = !DILocalVariable(name: "thischar", scope: !2760, file: !44, line: 7348, type: !232)
!2763 = !DILocation(line: 7348, column: 22, scope: !2760)
!2764 = !DILocation(line: 7351, column: 8, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2760, file: !44, line: 7351, column: 8)
!2766 = !DILocation(line: 7351, column: 27, scope: !2765)
!2767 = !DILocation(line: 7351, column: 30, scope: !2765)
!2768 = !DILocation(line: 7351, column: 8, scope: !2760)
!2769 = !DILocation(line: 7352, column: 6, scope: !2765)
!2770 = !DILocation(line: 7354, column: 15, scope: !2760)
!2771 = !DILocation(line: 7354, column: 13, scope: !2760)
!2772 = !DILocation(line: 7355, column: 15, scope: !2760)
!2773 = !DILocation(line: 7355, column: 13, scope: !2760)
!2774 = !DILocation(line: 7356, column: 8, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2760, file: !44, line: 7356, column: 8)
!2776 = !DILocation(line: 7356, column: 20, scope: !2775)
!2777 = !DILocation(line: 7356, column: 17, scope: !2775)
!2778 = !DILocation(line: 7356, column: 8, scope: !2760)
!2779 = !DILocation(line: 7357, column: 6, scope: !2775)
!2780 = !DILocation(line: 7358, column: 4, scope: !2760)
!2781 = !DILocation(line: 7364, column: 9, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7364, column: 8)
!2783 = !DILocation(line: 7364, column: 28, scope: !2782)
!2784 = !DILocation(line: 7364, column: 31, scope: !2782)
!2785 = !DILocation(line: 7365, column: 8, scope: !2782)
!2786 = !DILocation(line: 7365, column: 12, scope: !2782)
!2787 = !DILocation(line: 7365, column: 31, scope: !2782)
!2788 = !DILocation(line: 7365, column: 35, scope: !2782)
!2789 = !DILocation(line: 7364, column: 8, scope: !1632)
!2790 = !DILocation(line: 7366, column: 6, scope: !2782)
!2791 = !DILocation(line: 7367, column: 11, scope: !1632)
!2792 = !DILocation(line: 7371, column: 9, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7371, column: 8)
!2794 = !DILocation(line: 7371, column: 28, scope: !2793)
!2795 = !DILocation(line: 7371, column: 31, scope: !2793)
!2796 = !DILocation(line: 7372, column: 15, scope: !2793)
!2797 = !DILocation(line: 7372, column: 19, scope: !2793)
!2798 = !DILocation(line: 7372, column: 38, scope: !2793)
!2799 = !DILocation(line: 7372, column: 42, scope: !2793)
!2800 = !DILocation(line: 7371, column: 8, scope: !1632)
!2801 = !DILocation(line: 7373, column: 6, scope: !2793)
!2802 = !DILocation(line: 7374, column: 11, scope: !1632)
!2803 = !DILocation(line: 7432, column: 4, scope: !1632)
!2804 = !DILocation(line: 7432, column: 4, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2806, file: !44, line: 7432, column: 4)
!2806 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7432, column: 4)
!2807 = !DILocation(line: 7432, column: 4, scope: !2806)
!2808 = distinct !{!2808, !2803, !2803}
!2809 = !DILocation(line: 7433, column: 16, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7433, column: 15)
!2811 = !DILocation(line: 7433, column: 15, scope: !1632)
!2812 = !DILocation(line: 7434, column: 13, scope: !2810)
!2813 = !DILocation(line: 7435, column: 4, scope: !1632)
!2814 = !DILocation(line: 7435, column: 4, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2816, file: !44, line: 7435, column: 4)
!2816 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7435, column: 4)
!2817 = !DILocation(line: 7435, column: 4, scope: !2816)
!2818 = !DILocalVariable(name: "r", scope: !2819, file: !44, line: 7435, type: !115)
!2819 = distinct !DILexicalBlock(scope: !2815, file: !44, line: 7435, column: 4)
!2820 = !DILocation(line: 7435, column: 4, scope: !2819)
!2821 = !DILocation(line: 7435, column: 4, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2819, file: !44, line: 7435, column: 4)
!2823 = !DILocation(line: 7435, column: 4, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2822, file: !44, line: 7435, column: 4)
!2825 = !DILocation(line: 7435, column: 4, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2824, file: !44, line: 7435, column: 4)
!2827 = distinct !{!2827, !2821, !2821}
!2828 = !DILocation(line: 7436, column: 12, scope: !1632)
!2829 = !DILocation(line: 7437, column: 4, scope: !1632)
!2830 = !DILocation(line: 7441, column: 4, scope: !1632)
!2831 = !DILocation(line: 7441, column: 4, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2833, file: !44, line: 7441, column: 4)
!2833 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7441, column: 4)
!2834 = !DILocation(line: 7441, column: 4, scope: !2833)
!2835 = distinct !{!2835, !2830, !2830}
!2836 = !DILocation(line: 7442, column: 8, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7442, column: 8)
!2838 = !DILocation(line: 7442, column: 8, scope: !1632)
!2839 = !DILocation(line: 7443, column: 13, scope: !2837)
!2840 = !DILocation(line: 7444, column: 11, scope: !1632)
!2841 = !DILocation(line: 7444, column: 11, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2843, file: !44, line: 7444, column: 11)
!2843 = distinct !DILexicalBlock(scope: !1632, file: !44, line: 7444, column: 11)
!2844 = !DILocation(line: 7444, column: 11, scope: !2843)
!2845 = !DILocalVariable(name: "r", scope: !2846, file: !44, line: 7444, type: !115)
!2846 = distinct !DILexicalBlock(scope: !2842, file: !44, line: 7444, column: 11)
!2847 = !DILocation(line: 7444, column: 11, scope: !2846)
!2848 = !DILocation(line: 7444, column: 11, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2846, file: !44, line: 7444, column: 11)
!2850 = !DILocation(line: 7444, column: 11, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2849, file: !44, line: 7444, column: 11)
!2852 = !DILocation(line: 7444, column: 11, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2851, file: !44, line: 7444, column: 11)
!2854 = distinct !{!2854, !2848, !2848}
!2855 = !DILocation(line: 7445, column: 12, scope: !1632)
!2856 = !DILocation(line: 7446, column: 4, scope: !1632)
!2857 = !DILocation(line: 7450, column: 11, scope: !1632)
!2858 = !DILocation(line: 7452, column: 7, scope: !1268)
!2859 = distinct !{!2859, !2860, !2861}
!2860 = !DILocation(line: 5921, column: 3, scope: !1270)
!2861 = !DILocation(line: 7502, column: 5, scope: !1270)
!2862 = !DILabel(scope: !1268, name: "fail", file: !44, line: 7456)
!2863 = !DILocation(line: 7456, column: 5, scope: !1268)
!2864 = !DILocation(line: 7457, column: 12, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !1268, file: !44, line: 7457, column: 11)
!2866 = !DILocation(line: 7457, column: 11, scope: !1268)
!2867 = !DILocalVariable(name: "this_reg", scope: !2868, file: !44, line: 7460, type: !115)
!2868 = distinct !DILexicalBlock(scope: !2869, file: !44, line: 7460, column: 11)
!2869 = distinct !DILexicalBlock(scope: !2865, file: !44, line: 7458, column: 2)
!2870 = !DILocation(line: 7460, column: 11, scope: !2868)
!2871 = !DILocalVariable(name: "string_temp", scope: !2868, file: !44, line: 7460, type: !116)
!2872 = !DILocation(line: 7460, column: 11, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2868, file: !44, line: 7460, column: 11)
!2874 = !DILocation(line: 7460, column: 11, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2876, file: !44, line: 7460, column: 11)
!2876 = distinct !DILexicalBlock(scope: !2868, file: !44, line: 7460, column: 11)
!2877 = !DILocation(line: 7460, column: 11, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2875, file: !44, line: 7460, column: 11)
!2879 = !DILocation(line: 7460, column: 11, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2878, file: !44, line: 7460, column: 11)
!2881 = distinct !{!2881, !2874, !2874}
!2882 = !DILocation(line: 7465, column: 16, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2869, file: !44, line: 7465, column: 15)
!2884 = !DILocation(line: 7465, column: 15, scope: !2869)
!2885 = !DILocation(line: 7466, column: 6, scope: !2883)
!2886 = !DILocation(line: 7470, column: 15, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2869, file: !44, line: 7470, column: 15)
!2888 = !DILocation(line: 7470, column: 19, scope: !2887)
!2889 = !DILocation(line: 7470, column: 17, scope: !2887)
!2890 = !DILocation(line: 7470, column: 15, scope: !2869)
!2891 = !DILocalVariable(name: "is_a_jump_n", scope: !2892, file: !44, line: 7472, type: !232)
!2892 = distinct !DILexicalBlock(scope: !2887, file: !44, line: 7471, column: 13)
!2893 = !DILocation(line: 7472, column: 23, scope: !2892)
!2894 = !DILocation(line: 7476, column: 38, scope: !2892)
!2895 = !DILocation(line: 7476, column: 37, scope: !2892)
!2896 = !DILocation(line: 7476, column: 23, scope: !2892)
!2897 = !DILocation(line: 7476, column: 15, scope: !2892)
!2898 = !DILocation(line: 7479, column: 31, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2892, file: !44, line: 7477, column: 17)
!2900 = !DILocation(line: 7479, column: 19, scope: !2899)
!2901 = !DILocation(line: 7483, column: 24, scope: !2899)
!2902 = !DILocation(line: 7483, column: 26, scope: !2899)
!2903 = !DILocation(line: 7483, column: 22, scope: !2899)
!2904 = !DILocation(line: 7484, column: 19, scope: !2899)
!2905 = !DILocation(line: 7484, column: 19, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2899, file: !44, line: 7484, column: 19)
!2907 = !DILocation(line: 7484, column: 19, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2906, file: !44, line: 7484, column: 19)
!2909 = !DILocation(line: 7485, column: 25, scope: !2899)
!2910 = !DILocation(line: 7485, column: 22, scope: !2899)
!2911 = !DILocation(line: 7487, column: 24, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2899, file: !44, line: 7487, column: 23)
!2913 = !DILocation(line: 7487, column: 36, scope: !2912)
!2914 = !DILocation(line: 7487, column: 54, scope: !2912)
!2915 = !DILocation(line: 7487, column: 53, scope: !2912)
!2916 = !DILocation(line: 7487, column: 39, scope: !2912)
!2917 = !DILocation(line: 7487, column: 57, scope: !2912)
!2918 = !DILocation(line: 7488, column: 23, scope: !2912)
!2919 = !DILocation(line: 7488, column: 28, scope: !2912)
!2920 = !DILocation(line: 7489, column: 27, scope: !2912)
!2921 = !DILocation(line: 7489, column: 45, scope: !2912)
!2922 = !DILocation(line: 7489, column: 44, scope: !2912)
!2923 = !DILocation(line: 7489, column: 30, scope: !2912)
!2924 = !DILocation(line: 7489, column: 48, scope: !2912)
!2925 = !DILocation(line: 7487, column: 23, scope: !2899)
!2926 = !DILocation(line: 7490, column: 21, scope: !2912)
!2927 = !DILocation(line: 7491, column: 19, scope: !2899)
!2928 = !DILocation(line: 7494, column: 17, scope: !2899)
!2929 = !DILocation(line: 7495, column: 13, scope: !2892)
!2930 = !DILocation(line: 7497, column: 15, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2869, file: !44, line: 7497, column: 15)
!2932 = !DILocation(line: 7497, column: 20, scope: !2931)
!2933 = !DILocation(line: 7497, column: 17, scope: !2931)
!2934 = !DILocation(line: 7497, column: 28, scope: !2931)
!2935 = !DILocation(line: 7497, column: 31, scope: !2931)
!2936 = !DILocation(line: 7497, column: 36, scope: !2931)
!2937 = !DILocation(line: 7497, column: 33, scope: !2931)
!2938 = !DILocation(line: 7497, column: 15, scope: !2869)
!2939 = !DILocation(line: 7498, column: 13, scope: !2931)
!2940 = !DILocation(line: 7498, column: 11, scope: !2931)
!2941 = !DILocation(line: 7498, column: 6, scope: !2931)
!2942 = !DILocation(line: 7499, column: 9, scope: !2869)
!2943 = !DILocation(line: 7501, column: 9, scope: !2865)
!2944 = !DILocation(line: 5921, column: 3, scope: !1269)
!2945 = !DILocation(line: 7504, column: 7, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !960, file: !44, line: 7504, column: 7)
!2947 = !DILocation(line: 7504, column: 7, scope: !960)
!2948 = !DILocation(line: 7505, column: 5, scope: !2946)
!2949 = !DILocation(line: 7507, column: 3, scope: !960)
!2950 = !DILocation(line: 7507, column: 3, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2952, file: !44, line: 7507, column: 3)
!2952 = distinct !DILexicalBlock(scope: !960, file: !44, line: 7507, column: 3)
!2953 = !DILocation(line: 7507, column: 3, scope: !2952)
!2954 = !DILocation(line: 7507, column: 3, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2952, file: !44, line: 7507, column: 3)
!2956 = !DILocation(line: 7507, column: 3, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2952, file: !44, line: 7507, column: 3)
!2958 = !DILocation(line: 7507, column: 3, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2952, file: !44, line: 7507, column: 3)
!2960 = !DILocation(line: 7507, column: 3, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2952, file: !44, line: 7507, column: 3)
!2962 = !DILocation(line: 7507, column: 3, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2952, file: !44, line: 7507, column: 3)
!2964 = !DILocation(line: 7507, column: 3, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2952, file: !44, line: 7507, column: 3)
!2966 = !DILocation(line: 7507, column: 3, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2952, file: !44, line: 7507, column: 3)
!2968 = !DILocation(line: 7507, column: 3, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2952, file: !44, line: 7507, column: 3)
!2970 = !DILocation(line: 7509, column: 3, scope: !960)
!2971 = !DILocation(line: 7510, column: 1, scope: !960)
!2972 = distinct !DISubprogram(name: "xre_match_2", scope: !44, file: !44, line: 5474, type: !961, scopeLine: 5477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!2973 = !DILocalVariable(name: "bufp", arg: 1, scope: !2972, file: !44, line: 5474, type: !191)
!2974 = !DILocation(line: 5474, column: 39, scope: !2972)
!2975 = !DILocalVariable(name: "string1", arg: 2, scope: !2972, file: !44, line: 5474, type: !101)
!2976 = !DILocation(line: 5474, column: 57, scope: !2972)
!2977 = !DILocalVariable(name: "size1", arg: 3, scope: !2972, file: !44, line: 5474, type: !7)
!2978 = !DILocation(line: 5474, column: 70, scope: !2972)
!2979 = !DILocalVariable(name: "string2", arg: 4, scope: !2972, file: !44, line: 5475, type: !101)
!2980 = !DILocation(line: 5475, column: 25, scope: !2972)
!2981 = !DILocalVariable(name: "size2", arg: 5, scope: !2972, file: !44, line: 5475, type: !7)
!2982 = !DILocation(line: 5475, column: 38, scope: !2972)
!2983 = !DILocalVariable(name: "pos", arg: 6, scope: !2972, file: !44, line: 5475, type: !7)
!2984 = !DILocation(line: 5475, column: 49, scope: !2972)
!2985 = !DILocalVariable(name: "regs", arg: 7, scope: !2972, file: !44, line: 5476, type: !84)
!2986 = !DILocation(line: 5476, column: 34, scope: !2972)
!2987 = !DILocalVariable(name: "stop", arg: 8, scope: !2972, file: !44, line: 5476, type: !7)
!2988 = !DILocation(line: 5476, column: 44, scope: !2972)
!2989 = !DILocalVariable(name: "result", scope: !2972, file: !44, line: 5478, type: !7)
!2990 = !DILocation(line: 5478, column: 7, scope: !2972)
!2991 = !DILocation(line: 5486, column: 40, scope: !2972)
!2992 = !DILocation(line: 5486, column: 46, scope: !2972)
!2993 = !DILocation(line: 5486, column: 55, scope: !2972)
!2994 = !DILocation(line: 5486, column: 62, scope: !2972)
!2995 = !DILocation(line: 5486, column: 71, scope: !2972)
!2996 = !DILocation(line: 5487, column: 7, scope: !2972)
!2997 = !DILocation(line: 5487, column: 12, scope: !2972)
!2998 = !DILocation(line: 5487, column: 18, scope: !2972)
!2999 = !DILocation(line: 5486, column: 14, scope: !2972)
!3000 = !DILocation(line: 5486, column: 12, scope: !2972)
!3001 = !DILocation(line: 5494, column: 10, scope: !2972)
!3002 = !DILocation(line: 5494, column: 3, scope: !2972)
!3003 = distinct !DISubprogram(name: "xre_compile_pattern", scope: !44, file: !44, line: 7794, type: !3004, scopeLine: 7796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!3004 = !DISubroutineType(types: !3005)
!3005 = !{!101, !101, !145, !191}
!3006 = !DILocalVariable(name: "pattern", arg: 1, scope: !3003, file: !44, line: 7794, type: !101)
!3007 = !DILocation(line: 7794, column: 33, scope: !3003)
!3008 = !DILocalVariable(name: "length", arg: 2, scope: !3003, file: !44, line: 7794, type: !145)
!3009 = !DILocation(line: 7794, column: 49, scope: !3003)
!3010 = !DILocalVariable(name: "bufp", arg: 3, scope: !3003, file: !44, line: 7795, type: !191)
!3011 = !DILocation(line: 7795, column: 47, scope: !3003)
!3012 = !DILocalVariable(name: "ret", scope: !3003, file: !44, line: 7797, type: !3013)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_errcode_t", file: !6, line: 319, baseType: !5)
!3014 = !DILocation(line: 7797, column: 17, scope: !3003)
!3015 = !DILocation(line: 7801, column: 3, scope: !3003)
!3016 = !DILocation(line: 7801, column: 9, scope: !3003)
!3017 = !DILocation(line: 7801, column: 24, scope: !3003)
!3018 = !DILocation(line: 7806, column: 3, scope: !3003)
!3019 = !DILocation(line: 7806, column: 9, scope: !3003)
!3020 = !DILocation(line: 7806, column: 16, scope: !3003)
!3021 = !DILocation(line: 7809, column: 3, scope: !3003)
!3022 = !DILocation(line: 7809, column: 9, scope: !3003)
!3023 = !DILocation(line: 7809, column: 24, scope: !3003)
!3024 = !DILocation(line: 7816, column: 31, scope: !3003)
!3025 = !DILocation(line: 7816, column: 40, scope: !3003)
!3026 = !DILocation(line: 7816, column: 48, scope: !3003)
!3027 = !DILocation(line: 7816, column: 67, scope: !3003)
!3028 = !DILocation(line: 7816, column: 11, scope: !3003)
!3029 = !DILocation(line: 7816, column: 9, scope: !3003)
!3030 = !DILocation(line: 7818, column: 8, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3003, file: !44, line: 7818, column: 7)
!3032 = !DILocation(line: 7818, column: 7, scope: !3003)
!3033 = !DILocation(line: 7819, column: 5, scope: !3031)
!3034 = !DILocation(line: 7820, column: 10, scope: !3003)
!3035 = !DILocation(line: 7820, column: 3, scope: !3003)
!3036 = !DILocation(line: 7821, column: 1, scope: !3003)
!3037 = distinct !DISubprogram(name: "byte_regex_compile", scope: !44, file: !44, line: 2308, type: !3038, scopeLine: 2311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!3013, !101, !145, !133, !191}
!3040 = !DILocalVariable(name: "pattern", arg: 1, scope: !3037, file: !44, line: 2308, type: !101)
!3041 = !DILocation(line: 2308, column: 36, scope: !3037)
!3042 = !DILocalVariable(name: "size", arg: 2, scope: !3037, file: !44, line: 2309, type: !145)
!3043 = !DILocation(line: 2309, column: 31, scope: !3037)
!3044 = !DILocalVariable(name: "syntax", arg: 3, scope: !3037, file: !44, line: 2309, type: !133)
!3045 = !DILocation(line: 2309, column: 62, scope: !3037)
!3046 = !DILocalVariable(name: "bufp", arg: 4, scope: !3037, file: !44, line: 2310, type: !191)
!3047 = !DILocation(line: 2310, column: 50, scope: !3037)
!3048 = !DILocalVariable(name: "c", scope: !3037, file: !44, line: 2315, type: !82)
!3049 = !DILocation(line: 2315, column: 20, scope: !3037)
!3050 = !DILocalVariable(name: "c1", scope: !3037, file: !44, line: 2315, type: !82)
!3051 = !DILocation(line: 2315, column: 23, scope: !3037)
!3052 = !DILocalVariable(name: "p1", scope: !3037, file: !44, line: 2330, type: !101)
!3053 = !DILocation(line: 2330, column: 17, scope: !3037)
!3054 = !DILocalVariable(name: "b", scope: !3037, file: !44, line: 2333, type: !81)
!3055 = !DILocation(line: 2333, column: 21, scope: !3037)
!3056 = !DILocalVariable(name: "compile_stack", scope: !3037, file: !44, line: 2336, type: !3057)
!3057 = !DIDerivedType(tag: DW_TAG_typedef, name: "compile_stack_type", file: !44, line: 2158, baseType: !3058)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !44, line: 2153, size: 128, elements: !3059)
!3059 = !{!3060, !3061, !3062}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !3058, file: !44, line: 2155, baseType: !118, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3058, file: !44, line: 2156, baseType: !29, size: 32, offset: 64)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "avail", scope: !3058, file: !44, line: 2157, baseType: !29, size: 32, offset: 96)
!3063 = !DILocation(line: 2336, column: 22, scope: !3037)
!3064 = !DILocalVariable(name: "p", scope: !3037, file: !44, line: 2343, type: !101)
!3065 = !DILocation(line: 2343, column: 17, scope: !3037)
!3066 = !DILocation(line: 2343, column: 21, scope: !3037)
!3067 = !DILocalVariable(name: "pend", scope: !3037, file: !44, line: 2344, type: !101)
!3068 = !DILocation(line: 2344, column: 17, scope: !3037)
!3069 = !DILocation(line: 2344, column: 24, scope: !3037)
!3070 = !DILocation(line: 2344, column: 34, scope: !3037)
!3071 = !DILocation(line: 2344, column: 32, scope: !3037)
!3072 = !DILocalVariable(name: "translate", scope: !3037, file: !44, line: 2348, type: !79)
!3073 = !DILocation(line: 2348, column: 21, scope: !3037)
!3074 = !DILocation(line: 2348, column: 33, scope: !3037)
!3075 = !DILocation(line: 2348, column: 39, scope: !3037)
!3076 = !DILocalVariable(name: "pending_exact", scope: !3037, file: !44, line: 2354, type: !81)
!3077 = !DILocation(line: 2354, column: 12, scope: !3037)
!3078 = !DILocalVariable(name: "laststart", scope: !3037, file: !44, line: 2359, type: !81)
!3079 = !DILocation(line: 2359, column: 12, scope: !3037)
!3080 = !DILocalVariable(name: "begalt", scope: !3037, file: !44, line: 2362, type: !81)
!3081 = !DILocation(line: 2362, column: 12, scope: !3037)
!3082 = !DILocalVariable(name: "fixup_alt_jump", scope: !3037, file: !44, line: 2367, type: !81)
!3083 = !DILocation(line: 2367, column: 12, scope: !3037)
!3084 = !DILocalVariable(name: "regnum", scope: !3037, file: !44, line: 2372, type: !129)
!3085 = !DILocation(line: 2372, column: 12, scope: !3037)
!3086 = !DILocation(line: 2411, column: 25, scope: !3037)
!3087 = !DILocation(line: 2411, column: 17, scope: !3037)
!3088 = !DILocation(line: 2411, column: 23, scope: !3037)
!3089 = !DILocation(line: 2412, column: 21, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3037, file: !44, line: 2412, column: 7)
!3091 = !DILocation(line: 2412, column: 27, scope: !3090)
!3092 = !DILocation(line: 2412, column: 7, scope: !3037)
!3093 = !DILocation(line: 2419, column: 7, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3090, file: !44, line: 2413, column: 5)
!3095 = !DILocation(line: 2422, column: 17, scope: !3037)
!3096 = !DILocation(line: 2422, column: 22, scope: !3037)
!3097 = !DILocation(line: 2423, column: 17, scope: !3037)
!3098 = !DILocation(line: 2423, column: 23, scope: !3037)
!3099 = !DILocation(line: 2426, column: 18, scope: !3037)
!3100 = !DILocation(line: 2426, column: 3, scope: !3037)
!3101 = !DILocation(line: 2426, column: 9, scope: !3037)
!3102 = !DILocation(line: 2426, column: 16, scope: !3037)
!3103 = !DILocation(line: 2427, column: 3, scope: !3037)
!3104 = !DILocation(line: 2427, column: 9, scope: !3037)
!3105 = !DILocation(line: 2427, column: 26, scope: !3037)
!3106 = !DILocation(line: 2428, column: 19, scope: !3037)
!3107 = !DILocation(line: 2428, column: 25, scope: !3037)
!3108 = !DILocation(line: 2428, column: 33, scope: !3037)
!3109 = !DILocation(line: 2428, column: 3, scope: !3037)
!3110 = !DILocation(line: 2428, column: 9, scope: !3037)
!3111 = !DILocation(line: 2428, column: 17, scope: !3037)
!3112 = !DILocation(line: 2433, column: 3, scope: !3037)
!3113 = !DILocation(line: 2433, column: 9, scope: !3037)
!3114 = !DILocation(line: 2433, column: 14, scope: !3037)
!3115 = !DILocation(line: 2436, column: 3, scope: !3037)
!3116 = !DILocation(line: 2436, column: 9, scope: !3037)
!3117 = !DILocation(line: 2436, column: 17, scope: !3037)
!3118 = !DILocation(line: 2440, column: 4, scope: !3037)
!3119 = !DILocation(line: 2443, column: 7, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3037, file: !44, line: 2443, column: 7)
!3121 = !DILocation(line: 2443, column: 13, scope: !3120)
!3122 = !DILocation(line: 2443, column: 23, scope: !3120)
!3123 = !DILocation(line: 2443, column: 7, scope: !3037)
!3124 = !DILocation(line: 2445, column: 11, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3126, file: !44, line: 2445, column: 11)
!3126 = distinct !DILexicalBlock(scope: !3120, file: !44, line: 2444, column: 5)
!3127 = !DILocation(line: 2445, column: 17, scope: !3125)
!3128 = !DILocation(line: 2445, column: 11, scope: !3126)
!3129 = !DILocation(line: 2456, column: 11, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3125, file: !44, line: 2446, column: 2)
!3131 = !DILocation(line: 2458, column: 9, scope: !3130)
!3132 = !DILocation(line: 2461, column: 33, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3125, file: !44, line: 2460, column: 9)
!3134 = !DILocation(line: 2461, column: 11, scope: !3133)
!3135 = !DILocation(line: 2461, column: 31, scope: !3133)
!3136 = !DILocation(line: 2465, column: 12, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3126, file: !44, line: 2465, column: 11)
!3138 = !DILocation(line: 2465, column: 11, scope: !3126)
!3139 = !DILocation(line: 2465, column: 33, scope: !3137)
!3140 = !DILocation(line: 2469, column: 7, scope: !3126)
!3141 = !DILocation(line: 2469, column: 13, scope: !3126)
!3142 = !DILocation(line: 2469, column: 23, scope: !3126)
!3143 = !DILocation(line: 2470, column: 5, scope: !3126)
!3144 = !DILocation(line: 2476, column: 16, scope: !3037)
!3145 = !DILocation(line: 2476, column: 14, scope: !3037)
!3146 = !DILocation(line: 2476, column: 10, scope: !3037)
!3147 = !DILocation(line: 2479, column: 3, scope: !3037)
!3148 = !DILocation(line: 2479, column: 10, scope: !3037)
!3149 = !DILocation(line: 2479, column: 15, scope: !3037)
!3150 = !DILocation(line: 2479, column: 12, scope: !3037)
!3151 = !DILocation(line: 2481, column: 7, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3037, file: !44, line: 2480, column: 5)
!3153 = !DILocation(line: 2481, column: 7, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3155, file: !44, line: 2481, column: 7)
!3155 = distinct !DILexicalBlock(scope: !3152, file: !44, line: 2481, column: 7)
!3156 = !DILocation(line: 2481, column: 7, scope: !3155)
!3157 = !DILocation(line: 2481, column: 7, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3155, file: !44, line: 2481, column: 7)
!3159 = !DILocation(line: 2483, column: 15, scope: !3152)
!3160 = !DILocation(line: 2483, column: 7, scope: !3152)
!3161 = !DILocation(line: 2488, column: 20, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3163, file: !44, line: 2488, column: 20)
!3163 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 2486, column: 11)
!3164 = distinct !DILexicalBlock(scope: !3152, file: !44, line: 2484, column: 9)
!3165 = !DILocation(line: 2488, column: 25, scope: !3162)
!3166 = !DILocation(line: 2488, column: 33, scope: !3162)
!3167 = !DILocation(line: 2488, column: 22, scope: !3162)
!3168 = !DILocation(line: 2490, column: 17, scope: !3162)
!3169 = !DILocation(line: 2490, column: 20, scope: !3162)
!3170 = !DILocation(line: 2490, column: 27, scope: !3162)
!3171 = !DILocation(line: 2492, column: 17, scope: !3162)
!3172 = !DILocation(line: 2492, column: 46, scope: !3162)
!3173 = !DILocation(line: 2492, column: 55, scope: !3162)
!3174 = !DILocation(line: 2492, column: 58, scope: !3162)
!3175 = !DILocation(line: 2492, column: 20, scope: !3162)
!3176 = !DILocation(line: 2488, column: 20, scope: !3163)
!3177 = !DILocation(line: 2493, column: 15, scope: !3162)
!3178 = !DILocation(line: 2493, column: 15, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3162, file: !44, line: 2493, column: 15)
!3180 = !DILocalVariable(name: "old_buffer", scope: !3181, file: !44, line: 2493, type: !81)
!3181 = distinct !DILexicalBlock(scope: !3179, file: !44, line: 2493, column: 15)
!3182 = !DILocation(line: 2493, column: 15, scope: !3181)
!3183 = !DILocation(line: 2493, column: 15, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3181, file: !44, line: 2493, column: 15)
!3185 = !DILocation(line: 2493, column: 15, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3181, file: !44, line: 2493, column: 15)
!3187 = !DILocation(line: 2493, column: 15, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3181, file: !44, line: 2493, column: 15)
!3189 = !DILocation(line: 2493, column: 15, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3181, file: !44, line: 2493, column: 15)
!3191 = !DILocalVariable(name: "incr", scope: !3192, file: !44, line: 2493, type: !7)
!3192 = distinct !DILexicalBlock(scope: !3190, file: !44, line: 2493, column: 15)
!3193 = !DILocation(line: 2493, column: 15, scope: !3192)
!3194 = !DILocation(line: 2493, column: 15, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3192, file: !44, line: 2493, column: 15)
!3196 = !DILocation(line: 2493, column: 15, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3192, file: !44, line: 2493, column: 15)
!3198 = !DILocation(line: 2493, column: 15, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3192, file: !44, line: 2493, column: 15)
!3200 = distinct !{!3200, !3178, !3178}
!3201 = !DILocation(line: 2495, column: 15, scope: !3162)
!3202 = !DILocation(line: 2497, column: 11, scope: !3164)
!3203 = !DILocation(line: 2503, column: 20, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3205, file: !44, line: 2503, column: 20)
!3205 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 2501, column: 11)
!3206 = !DILocation(line: 2503, column: 25, scope: !3204)
!3207 = !DILocation(line: 2503, column: 22, scope: !3204)
!3208 = !DILocation(line: 2505, column: 17, scope: !3204)
!3209 = !DILocation(line: 2505, column: 20, scope: !3204)
!3210 = !DILocation(line: 2505, column: 27, scope: !3204)
!3211 = !DILocation(line: 2507, column: 17, scope: !3204)
!3212 = !DILocation(line: 2507, column: 46, scope: !3204)
!3213 = !DILocation(line: 2507, column: 49, scope: !3204)
!3214 = !DILocation(line: 2507, column: 55, scope: !3204)
!3215 = !DILocation(line: 2507, column: 20, scope: !3204)
!3216 = !DILocation(line: 2503, column: 20, scope: !3205)
!3217 = !DILocation(line: 2508, column: 16, scope: !3204)
!3218 = !DILocation(line: 2508, column: 16, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3204, file: !44, line: 2508, column: 16)
!3220 = !DILocalVariable(name: "old_buffer", scope: !3221, file: !44, line: 2508, type: !81)
!3221 = distinct !DILexicalBlock(scope: !3219, file: !44, line: 2508, column: 16)
!3222 = !DILocation(line: 2508, column: 16, scope: !3221)
!3223 = !DILocation(line: 2508, column: 16, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3221, file: !44, line: 2508, column: 16)
!3225 = !DILocation(line: 2508, column: 16, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3221, file: !44, line: 2508, column: 16)
!3227 = !DILocation(line: 2508, column: 16, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3221, file: !44, line: 2508, column: 16)
!3229 = !DILocation(line: 2508, column: 16, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3221, file: !44, line: 2508, column: 16)
!3231 = !DILocalVariable(name: "incr", scope: !3232, file: !44, line: 2508, type: !7)
!3232 = distinct !DILexicalBlock(scope: !3230, file: !44, line: 2508, column: 16)
!3233 = !DILocation(line: 2508, column: 16, scope: !3232)
!3234 = !DILocation(line: 2508, column: 16, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3232, file: !44, line: 2508, column: 16)
!3236 = !DILocation(line: 2508, column: 16, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3232, file: !44, line: 2508, column: 16)
!3238 = !DILocation(line: 2508, column: 16, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3232, file: !44, line: 2508, column: 16)
!3240 = distinct !{!3240, !3218, !3218}
!3241 = !DILocation(line: 2510, column: 16, scope: !3204)
!3242 = !DILocation(line: 2512, column: 12, scope: !3164)
!3243 = !DILocation(line: 2517, column: 16, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 2517, column: 15)
!3245 = !DILocation(line: 2517, column: 23, scope: !3244)
!3246 = !DILocation(line: 2518, column: 15, scope: !3244)
!3247 = !DILocation(line: 2518, column: 19, scope: !3244)
!3248 = !DILocation(line: 2518, column: 26, scope: !3244)
!3249 = !DILocation(line: 2517, column: 15, scope: !3164)
!3250 = !DILocation(line: 2519, column: 13, scope: !3244)
!3251 = !DILocation(line: 2518, column: 42, scope: !3244)
!3252 = !DILabel(scope: !3164, name: "handle_plus", file: !44, line: 2520)
!3253 = !DILocation(line: 2520, column: 9, scope: !3164)
!3254 = !DILocation(line: 2523, column: 16, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 2523, column: 15)
!3256 = !DILocation(line: 2523, column: 15, scope: !3164)
!3257 = !DILocation(line: 2525, column: 19, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !44, line: 2525, column: 19)
!3259 = distinct !DILexicalBlock(scope: !3255, file: !44, line: 2524, column: 13)
!3260 = !DILocation(line: 2525, column: 26, scope: !3258)
!3261 = !DILocation(line: 2525, column: 19, scope: !3259)
!3262 = !DILocation(line: 2526, column: 17, scope: !3258)
!3263 = !DILocation(line: 2527, column: 26, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3258, file: !44, line: 2527, column: 24)
!3265 = !DILocation(line: 2527, column: 33, scope: !3264)
!3266 = !DILocation(line: 2527, column: 24, scope: !3258)
!3267 = !DILocation(line: 2528, column: 17, scope: !3264)
!3268 = !DILocation(line: 2529, column: 13, scope: !3259)
!3269 = !DILocalVariable(name: "keep_string_p", scope: !3270, file: !44, line: 2533, type: !232)
!3270 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 2531, column: 11)
!3271 = !DILocation(line: 2533, column: 21, scope: !3270)
!3272 = !DILocalVariable(name: "zero_times_ok", scope: !3270, file: !44, line: 2536, type: !80)
!3273 = !DILocation(line: 2536, column: 18, scope: !3270)
!3274 = !DILocalVariable(name: "many_times_ok", scope: !3270, file: !44, line: 2536, type: !80)
!3275 = !DILocation(line: 2536, column: 37, scope: !3270)
!3276 = !DILocation(line: 2543, column: 13, scope: !3270)
!3277 = !DILocation(line: 2545, column: 34, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !44, line: 2544, column: 15)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !44, line: 2543, column: 13)
!3280 = distinct !DILexicalBlock(scope: !3270, file: !44, line: 2543, column: 13)
!3281 = !DILocation(line: 2545, column: 36, scope: !3278)
!3282 = !DILocation(line: 2545, column: 31, scope: !3278)
!3283 = !DILocation(line: 2546, column: 34, scope: !3278)
!3284 = !DILocation(line: 2546, column: 36, scope: !3278)
!3285 = !DILocation(line: 2546, column: 31, scope: !3278)
!3286 = !DILocation(line: 2548, column: 21, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3278, file: !44, line: 2548, column: 21)
!3288 = !DILocation(line: 2548, column: 26, scope: !3287)
!3289 = !DILocation(line: 2548, column: 23, scope: !3287)
!3290 = !DILocation(line: 2548, column: 21, scope: !3278)
!3291 = !DILocation(line: 2549, column: 19, scope: !3287)
!3292 = !DILocation(line: 2551, column: 17, scope: !3278)
!3293 = !DILocation(line: 2551, column: 17, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3295, file: !44, line: 2551, column: 17)
!3295 = distinct !DILexicalBlock(scope: !3278, file: !44, line: 2551, column: 17)
!3296 = !DILocation(line: 2551, column: 17, scope: !3295)
!3297 = !DILocation(line: 2551, column: 17, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3295, file: !44, line: 2551, column: 17)
!3299 = !DILocation(line: 2553, column: 21, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3278, file: !44, line: 2553, column: 21)
!3301 = !DILocation(line: 2553, column: 23, scope: !3300)
!3302 = !DILocation(line: 2554, column: 21, scope: !3300)
!3303 = !DILocation(line: 2554, column: 27, scope: !3300)
!3304 = !DILocation(line: 2554, column: 34, scope: !3300)
!3305 = !DILocation(line: 2554, column: 51, scope: !3300)
!3306 = !DILocation(line: 2554, column: 55, scope: !3300)
!3307 = !DILocation(line: 2554, column: 57, scope: !3300)
!3308 = !DILocation(line: 2554, column: 64, scope: !3300)
!3309 = !DILocation(line: 2554, column: 67, scope: !3300)
!3310 = !DILocation(line: 2554, column: 69, scope: !3300)
!3311 = !DILocation(line: 2553, column: 21, scope: !3278)
!3312 = !DILocation(line: 2557, column: 26, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3300, file: !44, line: 2557, column: 26)
!3314 = !DILocation(line: 2557, column: 33, scope: !3313)
!3315 = !DILocation(line: 2557, column: 50, scope: !3313)
!3316 = !DILocation(line: 2557, column: 54, scope: !3313)
!3317 = !DILocation(line: 2557, column: 56, scope: !3313)
!3318 = !DILocation(line: 2557, column: 26, scope: !3300)
!3319 = !DILocation(line: 2559, column: 25, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !44, line: 2559, column: 25)
!3321 = distinct !DILexicalBlock(scope: !3313, file: !44, line: 2558, column: 19)
!3322 = !DILocation(line: 2559, column: 30, scope: !3320)
!3323 = !DILocation(line: 2559, column: 27, scope: !3320)
!3324 = !DILocation(line: 2559, column: 25, scope: !3321)
!3325 = !DILocation(line: 2559, column: 36, scope: !3320)
!3326 = !DILocation(line: 2561, column: 21, scope: !3321)
!3327 = !DILocation(line: 2561, column: 21, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !44, line: 2561, column: 21)
!3329 = distinct !DILexicalBlock(scope: !3321, file: !44, line: 2561, column: 21)
!3330 = !DILocation(line: 2561, column: 21, scope: !3329)
!3331 = !DILocation(line: 2561, column: 21, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3329, file: !44, line: 2561, column: 21)
!3333 = !DILocation(line: 2562, column: 27, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3321, file: !44, line: 2562, column: 25)
!3335 = !DILocation(line: 2562, column: 30, scope: !3334)
!3336 = !DILocation(line: 2562, column: 37, scope: !3334)
!3337 = !DILocation(line: 2562, column: 40, scope: !3334)
!3338 = !DILocation(line: 2562, column: 43, scope: !3334)
!3339 = !DILocation(line: 2562, column: 25, scope: !3321)
!3340 = !DILocation(line: 2564, column: 25, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3334, file: !44, line: 2563, column: 23)
!3342 = !DILocation(line: 2565, column: 25, scope: !3341)
!3343 = !DILocation(line: 2566, column: 25, scope: !3341)
!3344 = !DILocation(line: 2569, column: 25, scope: !3321)
!3345 = !DILocation(line: 2569, column: 23, scope: !3321)
!3346 = !DILocation(line: 2570, column: 19, scope: !3321)
!3347 = !DILocation(line: 2573, column: 21, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3313, file: !44, line: 2572, column: 19)
!3349 = !DILocation(line: 2574, column: 21, scope: !3348)
!3350 = !DILocation(line: 2543, column: 13, scope: !3279)
!3351 = distinct !{!3351, !3352, !3353}
!3352 = !DILocation(line: 2543, column: 13, scope: !3280)
!3353 = !DILocation(line: 2578, column: 16, scope: !3280)
!3354 = !DILocation(line: 2582, column: 18, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3270, file: !44, line: 2582, column: 17)
!3356 = !DILocation(line: 2582, column: 17, scope: !3270)
!3357 = !DILocation(line: 2583, column: 15, scope: !3355)
!3358 = !DILocation(line: 2587, column: 17, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3270, file: !44, line: 2587, column: 17)
!3360 = !DILocation(line: 2587, column: 17, scope: !3270)
!3361 = !DILocation(line: 2601, column: 17, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3359, file: !44, line: 2588, column: 15)
!3363 = !DILocalVariable(name: "old_buffer", scope: !3364, file: !44, line: 2601, type: !81)
!3364 = distinct !DILexicalBlock(scope: !3362, file: !44, line: 2601, column: 17)
!3365 = !DILocation(line: 2601, column: 17, scope: !3364)
!3366 = !DILocation(line: 2601, column: 17, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3364, file: !44, line: 2601, column: 17)
!3368 = !DILocation(line: 2601, column: 17, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3364, file: !44, line: 2601, column: 17)
!3370 = !DILocation(line: 2601, column: 17, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3364, file: !44, line: 2601, column: 17)
!3372 = !DILocation(line: 2601, column: 17, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3364, file: !44, line: 2601, column: 17)
!3374 = !DILocalVariable(name: "incr", scope: !3375, file: !44, line: 2601, type: !7)
!3375 = distinct !DILexicalBlock(scope: !3373, file: !44, line: 2601, column: 17)
!3376 = !DILocation(line: 2601, column: 17, scope: !3375)
!3377 = !DILocation(line: 2601, column: 17, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3375, file: !44, line: 2601, column: 17)
!3379 = !DILocation(line: 2601, column: 17, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3375, file: !44, line: 2601, column: 17)
!3381 = !DILocation(line: 2601, column: 17, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3375, file: !44, line: 2601, column: 17)
!3383 = distinct !{!3383, !3361, !3361}
!3384 = !DILocation(line: 2608, column: 21, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3362, file: !44, line: 2608, column: 21)
!3386 = !DILocation(line: 2608, column: 45, scope: !3385)
!3387 = !DILocation(line: 2608, column: 42, scope: !3385)
!3388 = !DILocation(line: 2609, column: 7, scope: !3385)
!3389 = !DILocation(line: 2609, column: 10, scope: !3385)
!3390 = !DILocation(line: 2610, column: 21, scope: !3385)
!3391 = !DILocation(line: 2610, column: 24, scope: !3385)
!3392 = !DILocation(line: 2610, column: 28, scope: !3385)
!3393 = !DILocation(line: 2610, column: 26, scope: !3385)
!3394 = !DILocation(line: 2610, column: 33, scope: !3385)
!3395 = !DILocation(line: 2610, column: 36, scope: !3385)
!3396 = !DILocation(line: 2610, column: 54, scope: !3385)
!3397 = !DILocation(line: 2610, column: 51, scope: !3385)
!3398 = !DILocation(line: 2611, column: 21, scope: !3385)
!3399 = !DILocation(line: 2611, column: 26, scope: !3385)
!3400 = !DILocation(line: 2611, column: 33, scope: !3385)
!3401 = !DILocation(line: 2608, column: 21, scope: !3362)
!3402 = !DILocation(line: 2613, column: 21, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3385, file: !44, line: 2612, column: 19)
!3404 = !DILocation(line: 2614, column: 35, scope: !3403)
!3405 = !DILocation(line: 2615, column: 19, scope: !3403)
!3406 = !DILocation(line: 2618, column: 19, scope: !3385)
!3407 = !DILocation(line: 2622, column: 19, scope: !3362)
!3408 = !DILocation(line: 2623, column: 15, scope: !3362)
!3409 = !DILocation(line: 2629, column: 13, scope: !3270)
!3410 = !DILocalVariable(name: "old_buffer", scope: !3411, file: !44, line: 2629, type: !81)
!3411 = distinct !DILexicalBlock(scope: !3270, file: !44, line: 2629, column: 13)
!3412 = !DILocation(line: 2629, column: 13, scope: !3411)
!3413 = !DILocation(line: 2629, column: 13, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3411, file: !44, line: 2629, column: 13)
!3415 = !DILocation(line: 2629, column: 13, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3411, file: !44, line: 2629, column: 13)
!3417 = !DILocation(line: 2629, column: 13, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3411, file: !44, line: 2629, column: 13)
!3419 = !DILocation(line: 2629, column: 13, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3411, file: !44, line: 2629, column: 13)
!3421 = !DILocalVariable(name: "incr", scope: !3422, file: !44, line: 2629, type: !7)
!3422 = distinct !DILexicalBlock(scope: !3420, file: !44, line: 2629, column: 13)
!3423 = !DILocation(line: 2629, column: 13, scope: !3422)
!3424 = !DILocation(line: 2629, column: 13, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3422, file: !44, line: 2629, column: 13)
!3426 = !DILocation(line: 2629, column: 13, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3422, file: !44, line: 2629, column: 13)
!3428 = !DILocation(line: 2629, column: 13, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3422, file: !44, line: 2629, column: 13)
!3430 = distinct !{!3430, !3409, !3409}
!3431 = !DILocation(line: 2630, column: 13, scope: !3270)
!3432 = !DILocation(line: 2633, column: 27, scope: !3270)
!3433 = !DILocation(line: 2634, column: 15, scope: !3270)
!3434 = !DILocation(line: 2636, column: 18, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3270, file: !44, line: 2636, column: 17)
!3436 = !DILocation(line: 2636, column: 17, scope: !3270)
!3437 = !DILocation(line: 2643, column: 17, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3435, file: !44, line: 2637, column: 15)
!3439 = !DILocalVariable(name: "old_buffer", scope: !3440, file: !44, line: 2643, type: !81)
!3440 = distinct !DILexicalBlock(scope: !3438, file: !44, line: 2643, column: 17)
!3441 = !DILocation(line: 2643, column: 17, scope: !3440)
!3442 = !DILocation(line: 2643, column: 17, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3440, file: !44, line: 2643, column: 17)
!3444 = !DILocation(line: 2643, column: 17, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3440, file: !44, line: 2643, column: 17)
!3446 = !DILocation(line: 2643, column: 17, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3440, file: !44, line: 2643, column: 17)
!3448 = !DILocation(line: 2643, column: 17, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3440, file: !44, line: 2643, column: 17)
!3450 = !DILocalVariable(name: "incr", scope: !3451, file: !44, line: 2643, type: !7)
!3451 = distinct !DILexicalBlock(scope: !3449, file: !44, line: 2643, column: 17)
!3452 = !DILocation(line: 2643, column: 17, scope: !3451)
!3453 = !DILocation(line: 2643, column: 17, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3451, file: !44, line: 2643, column: 17)
!3455 = !DILocation(line: 2643, column: 17, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3451, file: !44, line: 2643, column: 17)
!3457 = !DILocation(line: 2643, column: 17, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3451, file: !44, line: 2643, column: 17)
!3459 = distinct !{!3459, !3437, !3437}
!3460 = !DILocation(line: 2644, column: 17, scope: !3438)
!3461 = !DILocation(line: 2646, column: 19, scope: !3438)
!3462 = !DILocation(line: 2647, column: 15, scope: !3438)
!3463 = !DILocation(line: 2649, column: 4, scope: !3164)
!3464 = !DILocation(line: 2653, column: 23, scope: !3164)
!3465 = !DILocation(line: 2653, column: 21, scope: !3164)
!3466 = !DILocation(line: 2654, column: 11, scope: !3164)
!3467 = !DILocation(line: 2654, column: 11, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 2654, column: 11)
!3469 = !DILocalVariable(name: "old_buffer", scope: !3470, file: !44, line: 2654, type: !81)
!3470 = distinct !DILexicalBlock(scope: !3468, file: !44, line: 2654, column: 11)
!3471 = !DILocation(line: 2654, column: 11, scope: !3470)
!3472 = !DILocation(line: 2654, column: 11, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3470, file: !44, line: 2654, column: 11)
!3474 = !DILocation(line: 2654, column: 11, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3470, file: !44, line: 2654, column: 11)
!3476 = !DILocation(line: 2654, column: 11, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3470, file: !44, line: 2654, column: 11)
!3478 = !DILocation(line: 2654, column: 11, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3470, file: !44, line: 2654, column: 11)
!3480 = !DILocalVariable(name: "incr", scope: !3481, file: !44, line: 2654, type: !7)
!3481 = distinct !DILexicalBlock(scope: !3479, file: !44, line: 2654, column: 11)
!3482 = !DILocation(line: 2654, column: 11, scope: !3481)
!3483 = !DILocation(line: 2654, column: 11, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !44, line: 2654, column: 11)
!3485 = !DILocation(line: 2654, column: 11, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3481, file: !44, line: 2654, column: 11)
!3487 = !DILocation(line: 2654, column: 11, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3481, file: !44, line: 2654, column: 11)
!3489 = distinct !{!3489, !3467, !3467}
!3490 = !DILocation(line: 2655, column: 11, scope: !3164)
!3491 = !DILocalVariable(name: "had_char_class", scope: !3492, file: !44, line: 2660, type: !232)
!3492 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 2659, column: 11)
!3493 = !DILocation(line: 2660, column: 21, scope: !3492)
!3494 = !DILocalVariable(name: "range_start", scope: !3492, file: !44, line: 2664, type: !29)
!3495 = !DILocation(line: 2664, column: 19, scope: !3492)
!3496 = !DILocation(line: 2666, column: 17, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3492, file: !44, line: 2666, column: 17)
!3498 = !DILocation(line: 2666, column: 22, scope: !3497)
!3499 = !DILocation(line: 2666, column: 19, scope: !3497)
!3500 = !DILocation(line: 2666, column: 17, scope: !3492)
!3501 = !DILocation(line: 2666, column: 28, scope: !3497)
!3502 = !DILocation(line: 3133, column: 6, scope: !3492)
!3503 = !DILocalVariable(name: "old_buffer", scope: !3504, file: !44, line: 3133, type: !81)
!3504 = distinct !DILexicalBlock(scope: !3492, file: !44, line: 3133, column: 6)
!3505 = !DILocation(line: 3133, column: 6, scope: !3504)
!3506 = !DILocation(line: 3133, column: 6, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3504, file: !44, line: 3133, column: 6)
!3508 = !DILocation(line: 3133, column: 6, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3504, file: !44, line: 3133, column: 6)
!3510 = !DILocation(line: 3133, column: 6, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3504, file: !44, line: 3133, column: 6)
!3512 = !DILocation(line: 3133, column: 6, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3504, file: !44, line: 3133, column: 6)
!3514 = !DILocalVariable(name: "incr", scope: !3515, file: !44, line: 3133, type: !7)
!3515 = distinct !DILexicalBlock(scope: !3513, file: !44, line: 3133, column: 6)
!3516 = !DILocation(line: 3133, column: 6, scope: !3515)
!3517 = !DILocation(line: 3133, column: 6, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3515, file: !44, line: 3133, column: 6)
!3519 = !DILocation(line: 3133, column: 6, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3515, file: !44, line: 3133, column: 6)
!3521 = !DILocation(line: 3133, column: 6, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3515, file: !44, line: 3133, column: 6)
!3523 = distinct !{!3523, !3502, !3502}
!3524 = !DILocation(line: 3135, column: 25, scope: !3492)
!3525 = !DILocation(line: 3135, column: 23, scope: !3492)
!3526 = !DILocation(line: 3139, column: 13, scope: !3492)
!3527 = !DILocation(line: 3139, column: 13, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3492, file: !44, line: 3139, column: 13)
!3529 = !DILocalVariable(name: "old_buffer", scope: !3530, file: !44, line: 3139, type: !81)
!3530 = distinct !DILexicalBlock(scope: !3528, file: !44, line: 3139, column: 13)
!3531 = !DILocation(line: 3139, column: 13, scope: !3530)
!3532 = !DILocation(line: 3139, column: 13, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3530, file: !44, line: 3139, column: 13)
!3534 = !DILocation(line: 3139, column: 13, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3530, file: !44, line: 3139, column: 13)
!3536 = !DILocation(line: 3139, column: 13, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3530, file: !44, line: 3139, column: 13)
!3538 = !DILocation(line: 3139, column: 13, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3530, file: !44, line: 3139, column: 13)
!3540 = !DILocalVariable(name: "incr", scope: !3541, file: !44, line: 3139, type: !7)
!3541 = distinct !DILexicalBlock(scope: !3539, file: !44, line: 3139, column: 13)
!3542 = !DILocation(line: 3139, column: 13, scope: !3541)
!3543 = !DILocation(line: 3139, column: 13, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3541, file: !44, line: 3139, column: 13)
!3545 = !DILocation(line: 3139, column: 13, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3541, file: !44, line: 3139, column: 13)
!3547 = !DILocation(line: 3139, column: 13, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3541, file: !44, line: 3139, column: 13)
!3549 = distinct !{!3549, !3527, !3527}
!3550 = !DILocation(line: 3140, column: 18, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3492, file: !44, line: 3140, column: 17)
!3552 = !DILocation(line: 3140, column: 17, scope: !3551)
!3553 = !DILocation(line: 3140, column: 20, scope: !3551)
!3554 = !DILocation(line: 3140, column: 17, scope: !3492)
!3555 = !DILocation(line: 3141, column: 16, scope: !3551)
!3556 = !DILocation(line: 3141, column: 15, scope: !3551)
!3557 = !DILocation(line: 3144, column: 18, scope: !3492)
!3558 = !DILocation(line: 3144, column: 16, scope: !3492)
!3559 = !DILocation(line: 3147, column: 13, scope: !3492)
!3560 = !DILocation(line: 3147, column: 13, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3492, file: !44, line: 3147, column: 13)
!3562 = !DILocalVariable(name: "old_buffer", scope: !3563, file: !44, line: 3147, type: !81)
!3563 = distinct !DILexicalBlock(scope: !3561, file: !44, line: 3147, column: 13)
!3564 = !DILocation(line: 3147, column: 13, scope: !3563)
!3565 = !DILocation(line: 3147, column: 13, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3563, file: !44, line: 3147, column: 13)
!3567 = !DILocation(line: 3147, column: 13, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3563, file: !44, line: 3147, column: 13)
!3569 = !DILocation(line: 3147, column: 13, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3563, file: !44, line: 3147, column: 13)
!3571 = !DILocation(line: 3147, column: 13, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3563, file: !44, line: 3147, column: 13)
!3573 = !DILocalVariable(name: "incr", scope: !3574, file: !44, line: 3147, type: !7)
!3574 = distinct !DILexicalBlock(scope: !3572, file: !44, line: 3147, column: 13)
!3575 = !DILocation(line: 3147, column: 13, scope: !3574)
!3576 = !DILocation(line: 3147, column: 13, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3574, file: !44, line: 3147, column: 13)
!3578 = !DILocation(line: 3147, column: 13, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3574, file: !44, line: 3147, column: 13)
!3580 = !DILocation(line: 3147, column: 13, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3574, file: !44, line: 3147, column: 13)
!3582 = distinct !{!3582, !3560, !3560}
!3583 = !DILocation(line: 3150, column: 13, scope: !3492)
!3584 = !DILocation(line: 3153, column: 31, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3492, file: !44, line: 3153, column: 17)
!3586 = !DILocation(line: 3153, column: 17, scope: !3585)
!3587 = !DILocation(line: 3153, column: 37, scope: !3585)
!3588 = !DILocation(line: 3154, column: 17, scope: !3585)
!3589 = !DILocation(line: 3154, column: 21, scope: !3585)
!3590 = !DILocation(line: 3154, column: 28, scope: !3585)
!3591 = !DILocation(line: 3153, column: 17, scope: !3492)
!3592 = !DILocation(line: 3155, column: 15, scope: !3585)
!3593 = !DILocation(line: 3158, column: 13, scope: !3492)
!3594 = !DILocation(line: 3160, column: 21, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !44, line: 3160, column: 21)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !44, line: 3159, column: 15)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !44, line: 3158, column: 13)
!3598 = distinct !DILexicalBlock(scope: !3492, file: !44, line: 3158, column: 13)
!3599 = !DILocation(line: 3160, column: 26, scope: !3595)
!3600 = !DILocation(line: 3160, column: 23, scope: !3595)
!3601 = !DILocation(line: 3160, column: 21, scope: !3596)
!3602 = !DILocation(line: 3160, column: 32, scope: !3595)
!3603 = !DILocation(line: 3162, column: 17, scope: !3596)
!3604 = !DILocation(line: 3162, column: 17, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !44, line: 3162, column: 17)
!3606 = distinct !DILexicalBlock(scope: !3596, file: !44, line: 3162, column: 17)
!3607 = !DILocation(line: 3162, column: 17, scope: !3606)
!3608 = !DILocation(line: 3162, column: 17, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3606, file: !44, line: 3162, column: 17)
!3610 = !DILocation(line: 3165, column: 22, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3596, file: !44, line: 3165, column: 21)
!3612 = !DILocation(line: 3165, column: 29, scope: !3611)
!3613 = !DILocation(line: 3165, column: 61, scope: !3611)
!3614 = !DILocation(line: 3165, column: 64, scope: !3611)
!3615 = !DILocation(line: 3165, column: 66, scope: !3611)
!3616 = !DILocation(line: 3165, column: 21, scope: !3596)
!3617 = !DILocation(line: 3167, column: 25, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !44, line: 3167, column: 25)
!3619 = distinct !DILexicalBlock(scope: !3611, file: !44, line: 3166, column: 19)
!3620 = !DILocation(line: 3167, column: 30, scope: !3618)
!3621 = !DILocation(line: 3167, column: 27, scope: !3618)
!3622 = !DILocation(line: 3167, column: 25, scope: !3619)
!3623 = !DILocation(line: 3167, column: 36, scope: !3618)
!3624 = !DILocation(line: 3169, column: 21, scope: !3619)
!3625 = !DILocation(line: 3169, column: 21, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !44, line: 3169, column: 21)
!3627 = distinct !DILexicalBlock(scope: !3619, file: !44, line: 3169, column: 21)
!3628 = !DILocation(line: 3169, column: 21, scope: !3627)
!3629 = !DILocation(line: 3169, column: 21, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3627, file: !44, line: 3169, column: 21)
!3631 = !DILocation(line: 3170, column: 21, scope: !3619)
!3632 = !DILocation(line: 3171, column: 21, scope: !3619)
!3633 = !DILocation(line: 3171, column: 19, scope: !3619)
!3634 = !DILocation(line: 3172, column: 21, scope: !3619)
!3635 = distinct !{!3635, !3636, !3637}
!3636 = !DILocation(line: 3158, column: 13, scope: !3598)
!3637 = !DILocation(line: 3621, column: 15, scope: !3598)
!3638 = !DILocation(line: 3178, column: 21, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3596, file: !44, line: 3178, column: 21)
!3640 = !DILocation(line: 3178, column: 23, scope: !3639)
!3641 = !DILocation(line: 3178, column: 30, scope: !3639)
!3642 = !DILocation(line: 3178, column: 33, scope: !3639)
!3643 = !DILocation(line: 3178, column: 38, scope: !3639)
!3644 = !DILocation(line: 3178, column: 41, scope: !3639)
!3645 = !DILocation(line: 3178, column: 35, scope: !3639)
!3646 = !DILocation(line: 3178, column: 21, scope: !3596)
!3647 = !DILocation(line: 3179, column: 19, scope: !3639)
!3648 = !DILocation(line: 3183, column: 21, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3596, file: !44, line: 3183, column: 21)
!3650 = !DILocation(line: 3183, column: 36, scope: !3649)
!3651 = !DILocation(line: 3183, column: 39, scope: !3649)
!3652 = !DILocation(line: 3183, column: 41, scope: !3649)
!3653 = !DILocation(line: 3183, column: 48, scope: !3649)
!3654 = !DILocation(line: 3183, column: 52, scope: !3649)
!3655 = !DILocation(line: 3183, column: 51, scope: !3649)
!3656 = !DILocation(line: 3183, column: 54, scope: !3649)
!3657 = !DILocation(line: 3183, column: 21, scope: !3596)
!3658 = !DILocation(line: 3184, column: 19, scope: !3649)
!3659 = !DILocation(line: 3190, column: 21, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3596, file: !44, line: 3190, column: 21)
!3661 = !DILocation(line: 3190, column: 23, scope: !3660)
!3662 = !DILocation(line: 3191, column: 21, scope: !3660)
!3663 = !DILocation(line: 3191, column: 26, scope: !3660)
!3664 = !DILocation(line: 3191, column: 28, scope: !3660)
!3665 = !DILocation(line: 3191, column: 35, scope: !3660)
!3666 = !DILocation(line: 3191, column: 32, scope: !3660)
!3667 = !DILocation(line: 3191, column: 43, scope: !3660)
!3668 = !DILocation(line: 3191, column: 46, scope: !3660)
!3669 = !DILocation(line: 3191, column: 52, scope: !3660)
!3670 = !DILocation(line: 3192, column: 21, scope: !3660)
!3671 = !DILocation(line: 3192, column: 26, scope: !3660)
!3672 = !DILocation(line: 3192, column: 28, scope: !3660)
!3673 = !DILocation(line: 3192, column: 35, scope: !3660)
!3674 = !DILocation(line: 3192, column: 32, scope: !3660)
!3675 = !DILocation(line: 3192, column: 43, scope: !3660)
!3676 = !DILocation(line: 3192, column: 46, scope: !3660)
!3677 = !DILocation(line: 3192, column: 52, scope: !3660)
!3678 = !DILocation(line: 3192, column: 59, scope: !3660)
!3679 = !DILocation(line: 3192, column: 62, scope: !3660)
!3680 = !DILocation(line: 3192, column: 68, scope: !3660)
!3681 = !DILocation(line: 3193, column: 21, scope: !3660)
!3682 = !DILocation(line: 3193, column: 25, scope: !3660)
!3683 = !DILocation(line: 3193, column: 24, scope: !3660)
!3684 = !DILocation(line: 3193, column: 27, scope: !3660)
!3685 = !DILocation(line: 3190, column: 21, scope: !3596)
!3686 = !DILocalVariable(name: "ret", scope: !3687, file: !44, line: 3195, type: !3013)
!3687 = distinct !DILexicalBlock(scope: !3660, file: !44, line: 3194, column: 19)
!3688 = !DILocation(line: 3195, column: 35, scope: !3687)
!3689 = !DILocation(line: 3196, column: 45, scope: !3687)
!3690 = !DILocation(line: 3196, column: 62, scope: !3687)
!3691 = !DILocation(line: 3196, column: 68, scope: !3687)
!3692 = !DILocation(line: 3197, column: 10, scope: !3687)
!3693 = !DILocation(line: 3197, column: 18, scope: !3687)
!3694 = !DILocation(line: 3196, column: 25, scope: !3687)
!3695 = !DILocation(line: 3198, column: 25, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3687, file: !44, line: 3198, column: 25)
!3697 = !DILocation(line: 3198, column: 29, scope: !3696)
!3698 = !DILocation(line: 3198, column: 25, scope: !3687)
!3699 = !DILocation(line: 3198, column: 45, scope: !3696)
!3700 = !DILocation(line: 3199, column: 19, scope: !3687)
!3701 = !DILocation(line: 3200, column: 19, scope: !3687)
!3702 = !DILocation(line: 3202, column: 26, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3660, file: !44, line: 3202, column: 26)
!3704 = !DILocation(line: 3202, column: 31, scope: !3703)
!3705 = !DILocation(line: 3202, column: 38, scope: !3703)
!3706 = !DILocation(line: 3202, column: 41, scope: !3703)
!3707 = !DILocation(line: 3202, column: 46, scope: !3703)
!3708 = !DILocation(line: 3202, column: 26, scope: !3660)
!3709 = !DILocalVariable(name: "ret", scope: !3710, file: !44, line: 3204, type: !3013)
!3710 = distinct !DILexicalBlock(scope: !3703, file: !44, line: 3203, column: 19)
!3711 = !DILocation(line: 3204, column: 35, scope: !3710)
!3712 = !DILocation(line: 3207, column: 21, scope: !3710)
!3713 = !DILocation(line: 3207, column: 21, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3715, file: !44, line: 3207, column: 21)
!3715 = distinct !DILexicalBlock(scope: !3710, file: !44, line: 3207, column: 21)
!3716 = !DILocation(line: 3207, column: 21, scope: !3715)
!3717 = !DILocation(line: 3207, column: 21, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3715, file: !44, line: 3207, column: 21)
!3719 = !DILocation(line: 3209, column: 47, scope: !3710)
!3720 = !DILocation(line: 3209, column: 54, scope: !3710)
!3721 = !DILocation(line: 3209, column: 60, scope: !3710)
!3722 = !DILocation(line: 3209, column: 71, scope: !3710)
!3723 = !DILocation(line: 3209, column: 79, scope: !3710)
!3724 = !DILocation(line: 3209, column: 27, scope: !3710)
!3725 = !DILocation(line: 3209, column: 25, scope: !3710)
!3726 = !DILocation(line: 3210, column: 25, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3710, file: !44, line: 3210, column: 25)
!3728 = !DILocation(line: 3210, column: 29, scope: !3727)
!3729 = !DILocation(line: 3210, column: 25, scope: !3710)
!3730 = !DILocation(line: 3210, column: 45, scope: !3727)
!3731 = !DILocation(line: 3211, column: 19, scope: !3710)
!3732 = !DILocation(line: 3212, column: 19, scope: !3710)
!3733 = !DILocation(line: 3217, column: 26, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3703, file: !44, line: 3217, column: 26)
!3735 = !DILocation(line: 3217, column: 33, scope: !3734)
!3736 = !DILocation(line: 3217, column: 51, scope: !3734)
!3737 = !DILocation(line: 3217, column: 54, scope: !3734)
!3738 = !DILocation(line: 3217, column: 56, scope: !3734)
!3739 = !DILocation(line: 3217, column: 63, scope: !3734)
!3740 = !DILocation(line: 3217, column: 67, scope: !3734)
!3741 = !DILocation(line: 3217, column: 66, scope: !3734)
!3742 = !DILocation(line: 3217, column: 69, scope: !3734)
!3743 = !DILocation(line: 3217, column: 26, scope: !3703)
!3744 = !DILocalVariable(name: "str", scope: !3745, file: !44, line: 3219, type: !3746)
!3745 = distinct !DILexicalBlock(scope: !3734, file: !44, line: 3218, column: 19)
!3746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 56, elements: !3747)
!3747 = !{!3748}
!3748 = !DISubrange(count: 7)
!3749 = !DILocation(line: 3219, column: 26, scope: !3745)
!3750 = !DILocation(line: 3221, column: 21, scope: !3745)
!3751 = !DILocation(line: 3221, column: 21, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !44, line: 3221, column: 21)
!3753 = distinct !DILexicalBlock(scope: !3745, file: !44, line: 3221, column: 21)
!3754 = !DILocation(line: 3221, column: 21, scope: !3753)
!3755 = !DILocation(line: 3221, column: 21, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3753, file: !44, line: 3221, column: 21)
!3757 = !DILocation(line: 3222, column: 24, scope: !3745)
!3758 = !DILocation(line: 3225, column: 25, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3745, file: !44, line: 3225, column: 25)
!3760 = !DILocation(line: 3225, column: 30, scope: !3759)
!3761 = !DILocation(line: 3225, column: 27, scope: !3759)
!3762 = !DILocation(line: 3225, column: 25, scope: !3745)
!3763 = !DILocation(line: 3225, column: 36, scope: !3759)
!3764 = !DILocation(line: 3227, column: 21, scope: !3745)
!3765 = !DILocation(line: 3229, column: 25, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !44, line: 3228, column: 23)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !44, line: 3227, column: 21)
!3768 = distinct !DILexicalBlock(scope: !3745, file: !44, line: 3227, column: 21)
!3769 = !DILocation(line: 3229, column: 25, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !44, line: 3229, column: 25)
!3771 = distinct !DILexicalBlock(scope: !3766, file: !44, line: 3229, column: 25)
!3772 = !DILocation(line: 3229, column: 25, scope: !3771)
!3773 = !DILocation(line: 3229, column: 25, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3771, file: !44, line: 3229, column: 25)
!3775 = !DILocation(line: 3230, column: 30, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3766, file: !44, line: 3230, column: 29)
!3777 = !DILocation(line: 3230, column: 32, scope: !3776)
!3778 = !DILocation(line: 3230, column: 39, scope: !3776)
!3779 = !DILocation(line: 3230, column: 43, scope: !3776)
!3780 = !DILocation(line: 3230, column: 42, scope: !3776)
!3781 = !DILocation(line: 3230, column: 45, scope: !3776)
!3782 = !DILocation(line: 3230, column: 53, scope: !3776)
!3783 = !DILocation(line: 3230, column: 56, scope: !3776)
!3784 = !DILocation(line: 3230, column: 61, scope: !3776)
!3785 = !DILocation(line: 3230, column: 58, scope: !3776)
!3786 = !DILocation(line: 3230, column: 29, scope: !3766)
!3787 = !DILocation(line: 3231, column: 27, scope: !3776)
!3788 = !DILocation(line: 3232, column: 8, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3766, file: !44, line: 3232, column: 8)
!3790 = !DILocation(line: 3232, column: 11, scope: !3789)
!3791 = !DILocation(line: 3232, column: 8, scope: !3766)
!3792 = !DILocation(line: 3233, column: 18, scope: !3789)
!3793 = !DILocation(line: 3233, column: 12, scope: !3789)
!3794 = !DILocation(line: 3233, column: 6, scope: !3789)
!3795 = !DILocation(line: 3233, column: 16, scope: !3789)
!3796 = !DILocation(line: 3236, column: 6, scope: !3789)
!3797 = !DILocation(line: 3236, column: 13, scope: !3789)
!3798 = !DILocation(line: 3227, column: 21, scope: !3767)
!3799 = distinct !{!3799, !3800, !3801}
!3800 = !DILocation(line: 3227, column: 21, scope: !3768)
!3801 = !DILocation(line: 3237, column: 23, scope: !3768)
!3802 = !DILocation(line: 3238, column: 25, scope: !3745)
!3803 = !DILocation(line: 3238, column: 21, scope: !3745)
!3804 = !DILocation(line: 3238, column: 29, scope: !3745)
!3805 = !DILocation(line: 3243, column: 25, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3745, file: !44, line: 3243, column: 25)
!3807 = !DILocation(line: 3243, column: 27, scope: !3806)
!3808 = !DILocation(line: 3243, column: 34, scope: !3806)
!3809 = !DILocation(line: 3243, column: 38, scope: !3806)
!3810 = !DILocation(line: 3243, column: 37, scope: !3806)
!3811 = !DILocation(line: 3243, column: 40, scope: !3806)
!3812 = !DILocation(line: 3243, column: 25, scope: !3745)
!3813 = !DILocalVariable(name: "ch", scope: !3814, file: !44, line: 3278, type: !7)
!3814 = distinct !DILexicalBlock(scope: !3806, file: !44, line: 3244, column: 23)
!3815 = !DILocation(line: 3278, column: 29, scope: !3814)
!3816 = !DILocalVariable(name: "is_alnum", scope: !3814, file: !44, line: 3279, type: !232)
!3817 = !DILocation(line: 3279, column: 33, scope: !3814)
!3818 = !DILocation(line: 3279, column: 44, scope: !3814)
!3819 = !DILocalVariable(name: "is_alpha", scope: !3814, file: !44, line: 3280, type: !232)
!3820 = !DILocation(line: 3280, column: 33, scope: !3814)
!3821 = !DILocation(line: 3280, column: 44, scope: !3814)
!3822 = !DILocalVariable(name: "is_blank", scope: !3814, file: !44, line: 3281, type: !232)
!3823 = !DILocation(line: 3281, column: 33, scope: !3814)
!3824 = !DILocation(line: 3281, column: 44, scope: !3814)
!3825 = !DILocalVariable(name: "is_cntrl", scope: !3814, file: !44, line: 3282, type: !232)
!3826 = !DILocation(line: 3282, column: 33, scope: !3814)
!3827 = !DILocation(line: 3282, column: 44, scope: !3814)
!3828 = !DILocalVariable(name: "is_digit", scope: !3814, file: !44, line: 3283, type: !232)
!3829 = !DILocation(line: 3283, column: 33, scope: !3814)
!3830 = !DILocation(line: 3283, column: 44, scope: !3814)
!3831 = !DILocalVariable(name: "is_graph", scope: !3814, file: !44, line: 3284, type: !232)
!3832 = !DILocation(line: 3284, column: 33, scope: !3814)
!3833 = !DILocation(line: 3284, column: 44, scope: !3814)
!3834 = !DILocalVariable(name: "is_lower", scope: !3814, file: !44, line: 3285, type: !232)
!3835 = !DILocation(line: 3285, column: 33, scope: !3814)
!3836 = !DILocation(line: 3285, column: 44, scope: !3814)
!3837 = !DILocalVariable(name: "is_print", scope: !3814, file: !44, line: 3286, type: !232)
!3838 = !DILocation(line: 3286, column: 33, scope: !3814)
!3839 = !DILocation(line: 3286, column: 44, scope: !3814)
!3840 = !DILocalVariable(name: "is_punct", scope: !3814, file: !44, line: 3287, type: !232)
!3841 = !DILocation(line: 3287, column: 33, scope: !3814)
!3842 = !DILocation(line: 3287, column: 44, scope: !3814)
!3843 = !DILocalVariable(name: "is_space", scope: !3814, file: !44, line: 3288, type: !232)
!3844 = !DILocation(line: 3288, column: 33, scope: !3814)
!3845 = !DILocation(line: 3288, column: 44, scope: !3814)
!3846 = !DILocalVariable(name: "is_upper", scope: !3814, file: !44, line: 3289, type: !232)
!3847 = !DILocation(line: 3289, column: 33, scope: !3814)
!3848 = !DILocation(line: 3289, column: 44, scope: !3814)
!3849 = !DILocalVariable(name: "is_xdigit", scope: !3814, file: !44, line: 3290, type: !232)
!3850 = !DILocation(line: 3290, column: 33, scope: !3814)
!3851 = !DILocation(line: 3290, column: 45, scope: !3814)
!3852 = !DILocation(line: 3292, column: 30, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3814, file: !44, line: 3292, column: 29)
!3854 = !DILocation(line: 3292, column: 29, scope: !3814)
!3855 = !DILocation(line: 3293, column: 6, scope: !3853)
!3856 = !DILocation(line: 3297, column: 25, scope: !3814)
!3857 = !DILocation(line: 3297, column: 25, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !44, line: 3297, column: 25)
!3859 = distinct !DILexicalBlock(scope: !3814, file: !44, line: 3297, column: 25)
!3860 = !DILocation(line: 3297, column: 25, scope: !3859)
!3861 = !DILocation(line: 3297, column: 25, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3859, file: !44, line: 3297, column: 25)
!3863 = !DILocation(line: 3299, column: 29, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3814, file: !44, line: 3299, column: 29)
!3865 = !DILocation(line: 3299, column: 34, scope: !3864)
!3866 = !DILocation(line: 3299, column: 31, scope: !3864)
!3867 = !DILocation(line: 3299, column: 29, scope: !3814)
!3868 = !DILocation(line: 3299, column: 40, scope: !3864)
!3869 = !DILocation(line: 3301, column: 33, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3814, file: !44, line: 3301, column: 25)
!3871 = !DILocation(line: 3301, column: 30, scope: !3870)
!3872 = !DILocation(line: 3301, column: 38, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3870, file: !44, line: 3301, column: 25)
!3874 = !DILocation(line: 3301, column: 41, scope: !3873)
!3875 = !DILocation(line: 3301, column: 25, scope: !3870)
!3876 = !DILocation(line: 3305, column: 37, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !44, line: 3305, column: 36)
!3878 = distinct !DILexicalBlock(scope: !3873, file: !44, line: 3302, column: 27)
!3879 = !DILocation(line: 3305, column: 47, scope: !3877)
!3880 = !DILocation(line: 3305, column: 50, scope: !3877)
!3881 = !DILocation(line: 3306, column: 33, scope: !3877)
!3882 = !DILocation(line: 3306, column: 37, scope: !3877)
!3883 = !DILocation(line: 3306, column: 47, scope: !3877)
!3884 = !DILocation(line: 3306, column: 50, scope: !3877)
!3885 = !DILocation(line: 3307, column: 33, scope: !3877)
!3886 = !DILocation(line: 3307, column: 37, scope: !3877)
!3887 = !DILocation(line: 3307, column: 47, scope: !3877)
!3888 = !DILocation(line: 3307, column: 50, scope: !3877)
!3889 = !DILocation(line: 3308, column: 33, scope: !3877)
!3890 = !DILocation(line: 3308, column: 37, scope: !3877)
!3891 = !DILocation(line: 3308, column: 47, scope: !3877)
!3892 = !DILocation(line: 3308, column: 50, scope: !3877)
!3893 = !DILocation(line: 3305, column: 36, scope: !3878)
!3894 = !DILocation(line: 3309, column: 10, scope: !3877)
!3895 = !DILocation(line: 3310, column: 16, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3878, file: !44, line: 3310, column: 15)
!3897 = !DILocation(line: 3310, column: 26, scope: !3896)
!3898 = !DILocation(line: 3310, column: 29, scope: !3896)
!3899 = !DILocation(line: 3311, column: 33, scope: !3896)
!3900 = !DILocation(line: 3311, column: 37, scope: !3896)
!3901 = !DILocation(line: 3311, column: 47, scope: !3896)
!3902 = !DILocation(line: 3311, column: 50, scope: !3896)
!3903 = !DILocation(line: 3312, column: 33, scope: !3896)
!3904 = !DILocation(line: 3312, column: 37, scope: !3896)
!3905 = !DILocation(line: 3312, column: 47, scope: !3896)
!3906 = !DILocation(line: 3312, column: 50, scope: !3896)
!3907 = !DILocation(line: 3313, column: 33, scope: !3896)
!3908 = !DILocation(line: 3313, column: 37, scope: !3896)
!3909 = !DILocation(line: 3313, column: 47, scope: !3896)
!3910 = !DILocation(line: 3313, column: 50, scope: !3896)
!3911 = !DILocation(line: 3310, column: 15, scope: !3878)
!3912 = !DILocation(line: 3314, column: 10, scope: !3896)
!3913 = !DILocation(line: 3315, column: 16, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3878, file: !44, line: 3315, column: 15)
!3915 = !DILocation(line: 3315, column: 26, scope: !3914)
!3916 = !DILocation(line: 3315, column: 29, scope: !3914)
!3917 = !DILocation(line: 3316, column: 33, scope: !3914)
!3918 = !DILocation(line: 3316, column: 37, scope: !3914)
!3919 = !DILocation(line: 3316, column: 47, scope: !3914)
!3920 = !DILocation(line: 3316, column: 50, scope: !3914)
!3921 = !DILocation(line: 3317, column: 33, scope: !3914)
!3922 = !DILocation(line: 3317, column: 37, scope: !3914)
!3923 = !DILocation(line: 3317, column: 47, scope: !3914)
!3924 = !DILocation(line: 3317, column: 50, scope: !3914)
!3925 = !DILocation(line: 3318, column: 33, scope: !3914)
!3926 = !DILocation(line: 3318, column: 37, scope: !3914)
!3927 = !DILocation(line: 3318, column: 47, scope: !3914)
!3928 = !DILocation(line: 3318, column: 50, scope: !3914)
!3929 = !DILocation(line: 3315, column: 15, scope: !3878)
!3930 = !DILocation(line: 3319, column: 10, scope: !3914)
!3931 = !DILocation(line: 3320, column: 15, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3878, file: !44, line: 3320, column: 15)
!3933 = !DILocation(line: 3320, column: 25, scope: !3932)
!3934 = !DILocation(line: 3320, column: 29, scope: !3932)
!3935 = !DILocation(line: 3320, column: 38, scope: !3932)
!3936 = !DILocation(line: 3320, column: 41, scope: !3932)
!3937 = !DILocation(line: 3321, column: 5, scope: !3932)
!3938 = !DILocation(line: 3321, column: 9, scope: !3932)
!3939 = !DILocation(line: 3321, column: 22, scope: !3932)
!3940 = !DILocation(line: 3321, column: 25, scope: !3932)
!3941 = !DILocation(line: 3320, column: 15, scope: !3878)
!3942 = !DILocation(line: 3322, column: 10, scope: !3932)
!3943 = !DILocation(line: 3323, column: 27, scope: !3878)
!3944 = !DILocation(line: 3301, column: 61, scope: !3873)
!3945 = !DILocation(line: 3301, column: 25, scope: !3873)
!3946 = distinct !{!3946, !3875, !3947}
!3947 = !DILocation(line: 3323, column: 27, scope: !3870)
!3948 = !DILocation(line: 3324, column: 40, scope: !3814)
!3949 = !DILocation(line: 3326, column: 23, scope: !3814)
!3950 = !DILocation(line: 3329, column: 27, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3806, file: !44, line: 3328, column: 23)
!3952 = !DILocation(line: 3330, column: 25, scope: !3951)
!3953 = !DILocation(line: 3330, column: 34, scope: !3951)
!3954 = !DILocation(line: 3331, column: 27, scope: !3951)
!3955 = distinct !{!3955, !3952, !3954}
!3956 = !DILocation(line: 3332, column: 25, scope: !3951)
!3957 = !DILocation(line: 3333, column: 25, scope: !3951)
!3958 = !DILocation(line: 3334, column: 16, scope: !3951)
!3959 = !DILocation(line: 3335, column: 40, scope: !3951)
!3960 = !DILocation(line: 3337, column: 19, scope: !3745)
!3961 = !DILocation(line: 3338, column: 26, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3734, file: !44, line: 3338, column: 26)
!3963 = !DILocation(line: 3338, column: 33, scope: !3962)
!3964 = !DILocation(line: 3338, column: 51, scope: !3962)
!3965 = !DILocation(line: 3338, column: 54, scope: !3962)
!3966 = !DILocation(line: 3338, column: 56, scope: !3962)
!3967 = !DILocation(line: 3338, column: 63, scope: !3962)
!3968 = !DILocation(line: 3338, column: 67, scope: !3962)
!3969 = !DILocation(line: 3338, column: 66, scope: !3962)
!3970 = !DILocation(line: 3338, column: 69, scope: !3962)
!3971 = !DILocation(line: 3338, column: 26, scope: !3734)
!3972 = !DILocalVariable(name: "str", scope: !3973, file: !44, line: 3340, type: !3974)
!3973 = distinct !DILexicalBlock(scope: !3962, file: !44, line: 3339, column: 5)
!3974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 136, elements: !170)
!3975 = !DILocation(line: 3340, column: 21, scope: !3973)
!3976 = !DILocation(line: 3346, column: 7, scope: !3973)
!3977 = !DILocation(line: 3346, column: 7, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !44, line: 3346, column: 7)
!3979 = distinct !DILexicalBlock(scope: !3973, file: !44, line: 3346, column: 7)
!3980 = !DILocation(line: 3346, column: 7, scope: !3979)
!3981 = !DILocation(line: 3346, column: 7, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3979, file: !44, line: 3346, column: 7)
!3983 = !DILocation(line: 3347, column: 10, scope: !3973)
!3984 = !DILocation(line: 3350, column: 11, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3973, file: !44, line: 3350, column: 11)
!3986 = !DILocation(line: 3350, column: 16, scope: !3985)
!3987 = !DILocation(line: 3350, column: 13, scope: !3985)
!3988 = !DILocation(line: 3350, column: 11, scope: !3973)
!3989 = !DILocation(line: 3350, column: 22, scope: !3985)
!3990 = !DILocation(line: 3352, column: 7, scope: !3973)
!3991 = !DILocation(line: 3354, column: 4, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !44, line: 3353, column: 9)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !44, line: 3352, column: 7)
!3994 = distinct !DILexicalBlock(scope: !3973, file: !44, line: 3352, column: 7)
!3995 = !DILocation(line: 3354, column: 4, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !44, line: 3354, column: 4)
!3997 = distinct !DILexicalBlock(scope: !3992, file: !44, line: 3354, column: 4)
!3998 = !DILocation(line: 3354, column: 4, scope: !3997)
!3999 = !DILocation(line: 3354, column: 4, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3997, file: !44, line: 3354, column: 4)
!4001 = !DILocation(line: 3355, column: 9, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3992, file: !44, line: 3355, column: 8)
!4003 = !DILocation(line: 3355, column: 11, scope: !4002)
!4004 = !DILocation(line: 3355, column: 18, scope: !4002)
!4005 = !DILocation(line: 3355, column: 22, scope: !4002)
!4006 = !DILocation(line: 3355, column: 21, scope: !4002)
!4007 = !DILocation(line: 3355, column: 24, scope: !4002)
!4008 = !DILocation(line: 3355, column: 32, scope: !4002)
!4009 = !DILocation(line: 3355, column: 35, scope: !4002)
!4010 = !DILocation(line: 3355, column: 40, scope: !4002)
!4011 = !DILocation(line: 3355, column: 37, scope: !4002)
!4012 = !DILocation(line: 3355, column: 8, scope: !3992)
!4013 = !DILocation(line: 3356, column: 6, scope: !4002)
!4014 = !DILocation(line: 3357, column: 8, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3992, file: !44, line: 3357, column: 8)
!4016 = !DILocation(line: 3357, column: 11, scope: !4015)
!4017 = !DILocation(line: 3357, column: 8, scope: !3992)
!4018 = !DILocation(line: 3358, column: 18, scope: !4015)
!4019 = !DILocation(line: 3358, column: 12, scope: !4015)
!4020 = !DILocation(line: 3358, column: 6, scope: !4015)
!4021 = !DILocation(line: 3358, column: 16, scope: !4015)
!4022 = !DILocation(line: 3361, column: 6, scope: !4015)
!4023 = !DILocation(line: 3361, column: 13, scope: !4015)
!4024 = !DILocation(line: 3352, column: 7, scope: !3993)
!4025 = distinct !{!4025, !4026, !4027}
!4026 = !DILocation(line: 3352, column: 7, scope: !3994)
!4027 = !DILocation(line: 3362, column: 23, scope: !3994)
!4028 = !DILocation(line: 3363, column: 11, scope: !3973)
!4029 = !DILocation(line: 3363, column: 7, scope: !3973)
!4030 = !DILocation(line: 3363, column: 15, scope: !3973)
!4031 = !DILocation(line: 3365, column: 11, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !3973, file: !44, line: 3365, column: 11)
!4033 = !DILocation(line: 3365, column: 13, scope: !4032)
!4034 = !DILocation(line: 3365, column: 20, scope: !4032)
!4035 = !DILocation(line: 3365, column: 24, scope: !4032)
!4036 = !DILocation(line: 3365, column: 23, scope: !4032)
!4037 = !DILocation(line: 3365, column: 26, scope: !4032)
!4038 = !DILocation(line: 3365, column: 33, scope: !4032)
!4039 = !DILocation(line: 3365, column: 36, scope: !4032)
!4040 = !DILocation(line: 3365, column: 43, scope: !4032)
!4041 = !DILocation(line: 3365, column: 11, scope: !3973)
!4042 = !DILocation(line: 3377, column: 12, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !44, line: 3377, column: 12)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !44, line: 3376, column: 6)
!4045 = distinct !DILexicalBlock(scope: !4032, file: !44, line: 3366, column: 9)
!4046 = !DILocation(line: 3377, column: 15, scope: !4043)
!4047 = !DILocation(line: 3377, column: 12, scope: !4044)
!4048 = !DILocation(line: 3378, column: 10, scope: !4043)
!4049 = !DILocation(line: 3382, column: 8, scope: !4044)
!4050 = !DILocation(line: 3382, column: 8, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !44, line: 3382, column: 8)
!4052 = distinct !DILexicalBlock(scope: !4044, file: !44, line: 3382, column: 8)
!4053 = !DILocation(line: 3382, column: 8, scope: !4052)
!4054 = !DILocation(line: 3382, column: 8, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4052, file: !44, line: 3382, column: 8)
!4056 = !DILocation(line: 3385, column: 8, scope: !4044)
!4057 = !DILocation(line: 3459, column: 19, scope: !4045)
!4058 = !DILocation(line: 3460, column: 9, scope: !4045)
!4059 = !DILocation(line: 3463, column: 27, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4032, file: !44, line: 3462, column: 23)
!4061 = !DILocation(line: 3464, column: 25, scope: !4060)
!4062 = !DILocation(line: 3464, column: 34, scope: !4060)
!4063 = !DILocation(line: 3465, column: 27, scope: !4060)
!4064 = distinct !{!4064, !4061, !4063}
!4065 = !DILocation(line: 3466, column: 25, scope: !4060)
!4066 = !DILocation(line: 3467, column: 25, scope: !4060)
!4067 = !DILocation(line: 3468, column: 16, scope: !4060)
!4068 = !DILocation(line: 3469, column: 40, scope: !4060)
!4069 = !DILocation(line: 3471, column: 5, scope: !3973)
!4070 = !DILocation(line: 3472, column: 26, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3962, file: !44, line: 3472, column: 26)
!4072 = !DILocation(line: 3472, column: 33, scope: !4071)
!4073 = !DILocation(line: 3472, column: 51, scope: !4071)
!4074 = !DILocation(line: 3472, column: 54, scope: !4071)
!4075 = !DILocation(line: 3472, column: 56, scope: !4071)
!4076 = !DILocation(line: 3472, column: 63, scope: !4071)
!4077 = !DILocation(line: 3472, column: 67, scope: !4071)
!4078 = !DILocation(line: 3472, column: 66, scope: !4071)
!4079 = !DILocation(line: 3472, column: 69, scope: !4071)
!4080 = !DILocation(line: 3472, column: 26, scope: !3962)
!4081 = !DILocalVariable(name: "str", scope: !4082, file: !44, line: 3474, type: !4083)
!4082 = distinct !DILexicalBlock(scope: !4071, file: !44, line: 3473, column: 5)
!4083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 1024, elements: !4084)
!4084 = !{!4085}
!4085 = !DISubrange(count: 128)
!4086 = !DILocation(line: 3474, column: 21, scope: !4082)
!4087 = !DILocation(line: 3480, column: 7, scope: !4082)
!4088 = !DILocation(line: 3480, column: 7, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !44, line: 3480, column: 7)
!4090 = distinct !DILexicalBlock(scope: !4082, file: !44, line: 3480, column: 7)
!4091 = !DILocation(line: 3480, column: 7, scope: !4090)
!4092 = !DILocation(line: 3480, column: 7, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4090, file: !44, line: 3480, column: 7)
!4094 = !DILocation(line: 3481, column: 10, scope: !4082)
!4095 = !DILocation(line: 3484, column: 11, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4082, file: !44, line: 3484, column: 11)
!4097 = !DILocation(line: 3484, column: 16, scope: !4096)
!4098 = !DILocation(line: 3484, column: 13, scope: !4096)
!4099 = !DILocation(line: 3484, column: 11, scope: !4082)
!4100 = !DILocation(line: 3484, column: 22, scope: !4096)
!4101 = !DILocation(line: 3486, column: 7, scope: !4082)
!4102 = !DILocation(line: 3488, column: 4, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !44, line: 3487, column: 9)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !44, line: 3486, column: 7)
!4105 = distinct !DILexicalBlock(scope: !4082, file: !44, line: 3486, column: 7)
!4106 = !DILocation(line: 3488, column: 4, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !44, line: 3488, column: 4)
!4108 = distinct !DILexicalBlock(scope: !4103, file: !44, line: 3488, column: 4)
!4109 = !DILocation(line: 3488, column: 4, scope: !4108)
!4110 = !DILocation(line: 3488, column: 4, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4108, file: !44, line: 3488, column: 4)
!4112 = !DILocation(line: 3489, column: 9, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4103, file: !44, line: 3489, column: 8)
!4114 = !DILocation(line: 3489, column: 11, scope: !4113)
!4115 = !DILocation(line: 3489, column: 18, scope: !4113)
!4116 = !DILocation(line: 3489, column: 22, scope: !4113)
!4117 = !DILocation(line: 3489, column: 21, scope: !4113)
!4118 = !DILocation(line: 3489, column: 24, scope: !4113)
!4119 = !DILocation(line: 3489, column: 32, scope: !4113)
!4120 = !DILocation(line: 3489, column: 35, scope: !4113)
!4121 = !DILocation(line: 3489, column: 40, scope: !4113)
!4122 = !DILocation(line: 3489, column: 37, scope: !4113)
!4123 = !DILocation(line: 3489, column: 8, scope: !4103)
!4124 = !DILocation(line: 3490, column: 6, scope: !4113)
!4125 = !DILocation(line: 3491, column: 8, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4103, file: !44, line: 3491, column: 8)
!4127 = !DILocation(line: 3491, column: 11, scope: !4126)
!4128 = !DILocation(line: 3491, column: 8, scope: !4103)
!4129 = !DILocation(line: 3492, column: 18, scope: !4126)
!4130 = !DILocation(line: 3492, column: 12, scope: !4126)
!4131 = !DILocation(line: 3492, column: 6, scope: !4126)
!4132 = !DILocation(line: 3492, column: 16, scope: !4126)
!4133 = !DILocation(line: 3495, column: 6, scope: !4126)
!4134 = !DILocation(line: 3495, column: 13, scope: !4126)
!4135 = !DILocation(line: 3486, column: 7, scope: !4104)
!4136 = distinct !{!4136, !4137, !4138}
!4137 = !DILocation(line: 3486, column: 7, scope: !4105)
!4138 = !DILocation(line: 3496, column: 23, scope: !4105)
!4139 = !DILocation(line: 3497, column: 11, scope: !4082)
!4140 = !DILocation(line: 3497, column: 7, scope: !4082)
!4141 = !DILocation(line: 3497, column: 15, scope: !4082)
!4142 = !DILocation(line: 3499, column: 11, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4082, file: !44, line: 3499, column: 11)
!4144 = !DILocation(line: 3499, column: 13, scope: !4143)
!4145 = !DILocation(line: 3499, column: 20, scope: !4143)
!4146 = !DILocation(line: 3499, column: 24, scope: !4143)
!4147 = !DILocation(line: 3499, column: 23, scope: !4143)
!4148 = !DILocation(line: 3499, column: 26, scope: !4143)
!4149 = !DILocation(line: 3499, column: 33, scope: !4143)
!4150 = !DILocation(line: 3499, column: 36, scope: !4143)
!4151 = !DILocation(line: 3499, column: 43, scope: !4143)
!4152 = !DILocation(line: 3499, column: 11, scope: !4082)
!4153 = !DILocation(line: 3512, column: 12, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !44, line: 3512, column: 12)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !44, line: 3511, column: 6)
!4156 = distinct !DILexicalBlock(scope: !4143, file: !44, line: 3500, column: 9)
!4157 = !DILocation(line: 3512, column: 15, scope: !4154)
!4158 = !DILocation(line: 3512, column: 12, scope: !4155)
!4159 = !DILocation(line: 3513, column: 10, scope: !4154)
!4160 = !DILocation(line: 3517, column: 8, scope: !4155)
!4161 = !DILocation(line: 3517, column: 8, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4163, file: !44, line: 3517, column: 8)
!4163 = distinct !DILexicalBlock(scope: !4155, file: !44, line: 3517, column: 8)
!4164 = !DILocation(line: 3517, column: 8, scope: !4163)
!4165 = !DILocation(line: 3517, column: 8, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4163, file: !44, line: 3517, column: 8)
!4167 = !DILocation(line: 3520, column: 8, scope: !4155)
!4168 = !DILocation(line: 3521, column: 22, scope: !4155)
!4169 = !DILocation(line: 3521, column: 20, scope: !4155)
!4170 = !DILocation(line: 3602, column: 19, scope: !4156)
!4171 = !DILocation(line: 3603, column: 9, scope: !4156)
!4172 = !DILocation(line: 3606, column: 27, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4143, file: !44, line: 3605, column: 23)
!4174 = !DILocation(line: 3607, column: 25, scope: !4173)
!4175 = !DILocation(line: 3607, column: 34, scope: !4173)
!4176 = !DILocation(line: 3608, column: 27, scope: !4173)
!4177 = distinct !{!4177, !4174, !4176}
!4178 = !DILocation(line: 3609, column: 25, scope: !4173)
!4179 = !DILocation(line: 3610, column: 25, scope: !4173)
!4180 = !DILocation(line: 3611, column: 16, scope: !4173)
!4181 = !DILocation(line: 3612, column: 40, scope: !4173)
!4182 = !DILocation(line: 3614, column: 5, scope: !4082)
!4183 = !DILocation(line: 3617, column: 36, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4071, file: !44, line: 3616, column: 19)
!4185 = !DILocation(line: 3618, column: 21, scope: !4184)
!4186 = !DILocation(line: 3619, column: 21, scope: !4184)
!4187 = !DILocation(line: 3619, column: 19, scope: !4184)
!4188 = !DILocation(line: 3158, column: 13, scope: !3597)
!4189 = !DILocation(line: 3625, column: 13, scope: !3492)
!4190 = !DILocation(line: 3625, column: 26, scope: !3492)
!4191 = !DILocation(line: 3625, column: 20, scope: !3492)
!4192 = !DILocation(line: 3625, column: 32, scope: !3492)
!4193 = !DILocation(line: 3625, column: 36, scope: !3492)
!4194 = !DILocation(line: 3625, column: 39, scope: !3492)
!4195 = !DILocation(line: 3625, column: 41, scope: !3492)
!4196 = !DILocation(line: 3625, column: 47, scope: !3492)
!4197 = !DILocation(line: 3625, column: 52, scope: !3492)
!4198 = !DILocation(line: 0, scope: !3492)
!4199 = !DILocation(line: 3626, column: 15, scope: !3492)
!4200 = !DILocation(line: 3626, column: 20, scope: !3492)
!4201 = distinct !{!4201, !4189, !4200}
!4202 = !DILocation(line: 3627, column: 18, scope: !3492)
!4203 = !DILocation(line: 3627, column: 15, scope: !3492)
!4204 = !DILocation(line: 3630, column: 11, scope: !3164)
!4205 = !DILocation(line: 3634, column: 15, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 3634, column: 15)
!4207 = !DILocation(line: 3634, column: 22, scope: !4206)
!4208 = !DILocation(line: 3634, column: 15, scope: !3164)
!4209 = !DILocation(line: 3635, column: 13, scope: !4206)
!4210 = !DILocation(line: 3637, column: 13, scope: !4206)
!4211 = !DILocation(line: 3641, column: 15, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 3641, column: 15)
!4213 = !DILocation(line: 3641, column: 22, scope: !4212)
!4214 = !DILocation(line: 3641, column: 15, scope: !3164)
!4215 = !DILocation(line: 3642, column: 13, scope: !4212)
!4216 = !DILocation(line: 3644, column: 13, scope: !4212)
!4217 = !DILocation(line: 3648, column: 15, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 3648, column: 15)
!4219 = !DILocation(line: 3648, column: 22, scope: !4218)
!4220 = !DILocation(line: 3648, column: 15, scope: !3164)
!4221 = !DILocation(line: 3649, column: 13, scope: !4218)
!4222 = !DILocation(line: 3651, column: 13, scope: !4218)
!4223 = !DILocation(line: 3655, column: 15, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 3655, column: 15)
!4225 = !DILocation(line: 3655, column: 22, scope: !4224)
!4226 = !DILocation(line: 3655, column: 15, scope: !3164)
!4227 = !DILocation(line: 3656, column: 13, scope: !4224)
!4228 = !DILocation(line: 3658, column: 13, scope: !4224)
!4229 = !DILocation(line: 3662, column: 16, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 3662, column: 16)
!4231 = !DILocation(line: 3662, column: 23, scope: !4230)
!4232 = !DILocation(line: 3662, column: 38, scope: !4230)
!4233 = !DILocation(line: 3662, column: 41, scope: !4230)
!4234 = !DILocation(line: 3662, column: 48, scope: !4230)
!4235 = !DILocation(line: 3662, column: 16, scope: !3164)
!4236 = !DILocation(line: 3663, column: 14, scope: !4230)
!4237 = !DILocation(line: 3665, column: 14, scope: !4230)
!4238 = !DILocation(line: 3669, column: 15, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 3669, column: 15)
!4240 = !DILocation(line: 3669, column: 20, scope: !4239)
!4241 = !DILocation(line: 3669, column: 17, scope: !4239)
!4242 = !DILocation(line: 3669, column: 15, scope: !3164)
!4243 = !DILocation(line: 3669, column: 26, scope: !4239)
!4244 = !DILocation(line: 3674, column: 11, scope: !3164)
!4245 = !DILocation(line: 3674, column: 11, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !44, line: 3674, column: 11)
!4247 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 3674, column: 11)
!4248 = !DILocation(line: 3674, column: 11, scope: !4247)
!4249 = !DILocation(line: 3676, column: 19, scope: !3164)
!4250 = !DILocation(line: 3676, column: 11, scope: !3164)
!4251 = !DILocation(line: 3679, column: 19, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3679, column: 19)
!4253 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 3677, column: 13)
!4254 = !DILocation(line: 3679, column: 26, scope: !4252)
!4255 = !DILocation(line: 3679, column: 19, scope: !4253)
!4256 = !DILocation(line: 3680, column: 17, scope: !4252)
!4257 = !DILocation(line: 3679, column: 28, scope: !4252)
!4258 = !DILabel(scope: !4253, name: "handle_open", file: !44, line: 3682)
!4259 = !DILocation(line: 3682, column: 13, scope: !4253)
!4260 = !DILocation(line: 3683, column: 15, scope: !4253)
!4261 = !DILocation(line: 3683, column: 21, scope: !4253)
!4262 = !DILocation(line: 3683, column: 28, scope: !4253)
!4263 = !DILocation(line: 3684, column: 21, scope: !4253)
!4264 = !DILocation(line: 3686, column: 19, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3686, column: 19)
!4266 = !DILocation(line: 3686, column: 19, scope: !4253)
!4267 = !DILocation(line: 3688, column: 19, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4265, file: !44, line: 3687, column: 17)
!4269 = !DILocation(line: 3690, column: 37, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4268, file: !44, line: 3690, column: 23)
!4271 = !DILocation(line: 3690, column: 43, scope: !4270)
!4272 = !DILocation(line: 3690, column: 23, scope: !4268)
!4273 = !DILocation(line: 3690, column: 52, scope: !4270)
!4274 = !DILocation(line: 3692, column: 33, scope: !4268)
!4275 = !DILocation(line: 3692, column: 38, scope: !4268)
!4276 = !DILocation(line: 3693, column: 17, scope: !4268)
!4277 = !DILocation(line: 3699, column: 49, scope: !4253)
!4278 = !DILocation(line: 3699, column: 58, scope: !4253)
!4279 = !DILocation(line: 3699, column: 56, scope: !4253)
!4280 = !DILocation(line: 3699, column: 15, scope: !4253)
!4281 = !DILocation(line: 3699, column: 33, scope: !4253)
!4282 = !DILocation(line: 3699, column: 47, scope: !4253)
!4283 = !DILocation(line: 3701, column: 19, scope: !4253)
!4284 = !DILocation(line: 3701, column: 36, scope: !4253)
!4285 = !DILocation(line: 3701, column: 53, scope: !4253)
!4286 = !DILocation(line: 3701, column: 51, scope: !4253)
!4287 = !DILocation(line: 3701, column: 73, scope: !4253)
!4288 = !DILocation(line: 3700, column: 15, scope: !4253)
!4289 = !DILocation(line: 3700, column: 33, scope: !4253)
!4290 = !DILocation(line: 3701, column: 17, scope: !4253)
!4291 = !DILocation(line: 3702, column: 52, scope: !4253)
!4292 = !DILocation(line: 3702, column: 56, scope: !4253)
!4293 = !DILocation(line: 3702, column: 54, scope: !4253)
!4294 = !DILocation(line: 3702, column: 15, scope: !4253)
!4295 = !DILocation(line: 3702, column: 33, scope: !4253)
!4296 = !DILocation(line: 3702, column: 50, scope: !4253)
!4297 = !DILocation(line: 3703, column: 42, scope: !4253)
!4298 = !DILocation(line: 3703, column: 15, scope: !4253)
!4299 = !DILocation(line: 3703, column: 33, scope: !4253)
!4300 = !DILocation(line: 3703, column: 40, scope: !4253)
!4301 = !DILocation(line: 3709, column: 19, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3709, column: 19)
!4303 = !DILocation(line: 3709, column: 26, scope: !4302)
!4304 = !DILocation(line: 3709, column: 19, scope: !4253)
!4305 = !DILocation(line: 3711, column: 58, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4302, file: !44, line: 3710, column: 17)
!4307 = !DILocation(line: 3712, column: 9, scope: !4306)
!4308 = !DILocation(line: 3712, column: 7, scope: !4306)
!4309 = !DILocation(line: 3712, column: 29, scope: !4306)
!4310 = !DILocation(line: 3711, column: 19, scope: !4306)
!4311 = !DILocation(line: 3711, column: 37, scope: !4306)
!4312 = !DILocation(line: 3711, column: 56, scope: !4306)
!4313 = !DILocation(line: 3713, column: 19, scope: !4306)
!4314 = !DILocation(line: 3713, column: 19, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4306, file: !44, line: 3713, column: 19)
!4316 = !DILocalVariable(name: "old_buffer", scope: !4317, file: !44, line: 3713, type: !81)
!4317 = distinct !DILexicalBlock(scope: !4315, file: !44, line: 3713, column: 19)
!4318 = !DILocation(line: 3713, column: 19, scope: !4317)
!4319 = !DILocation(line: 3713, column: 19, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4317, file: !44, line: 3713, column: 19)
!4321 = !DILocation(line: 3713, column: 19, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4317, file: !44, line: 3713, column: 19)
!4323 = !DILocation(line: 3713, column: 19, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4317, file: !44, line: 3713, column: 19)
!4325 = !DILocation(line: 3713, column: 19, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4317, file: !44, line: 3713, column: 19)
!4327 = !DILocalVariable(name: "incr", scope: !4328, file: !44, line: 3713, type: !7)
!4328 = distinct !DILexicalBlock(scope: !4326, file: !44, line: 3713, column: 19)
!4329 = !DILocation(line: 3713, column: 19, scope: !4328)
!4330 = !DILocation(line: 3713, column: 19, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4328, file: !44, line: 3713, column: 19)
!4332 = !DILocation(line: 3713, column: 19, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !44, line: 3713, column: 19)
!4334 = !DILocation(line: 3713, column: 19, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4328, file: !44, line: 3713, column: 19)
!4336 = distinct !{!4336, !4314, !4314}
!4337 = !DILocation(line: 3714, column: 17, scope: !4306)
!4338 = !DILocation(line: 3716, column: 29, scope: !4253)
!4339 = !DILocation(line: 3716, column: 34, scope: !4253)
!4340 = !DILocation(line: 3718, column: 30, scope: !4253)
!4341 = !DILocation(line: 3719, column: 25, scope: !4253)
!4342 = !DILocation(line: 3720, column: 24, scope: !4253)
!4343 = !DILocation(line: 3720, column: 22, scope: !4253)
!4344 = !DILocation(line: 3724, column: 22, scope: !4253)
!4345 = !DILocation(line: 3725, column: 15, scope: !4253)
!4346 = !DILocation(line: 3729, column: 19, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3729, column: 19)
!4348 = !DILocation(line: 3729, column: 26, scope: !4347)
!4349 = !DILocation(line: 3729, column: 19, scope: !4253)
!4350 = !DILocation(line: 3729, column: 45, scope: !4347)
!4351 = !DILocation(line: 3731, column: 19, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3731, column: 19)
!4353 = !DILocation(line: 3731, column: 19, scope: !4253)
!4354 = !DILocation(line: 3733, column: 9, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !44, line: 3733, column: 9)
!4356 = distinct !DILexicalBlock(scope: !4352, file: !44, line: 3732, column: 3)
!4357 = !DILocation(line: 3733, column: 16, scope: !4355)
!4358 = !DILocation(line: 3733, column: 9, scope: !4356)
!4359 = !DILocation(line: 3734, column: 7, scope: !4355)
!4360 = !DILocation(line: 3736, column: 7, scope: !4355)
!4361 = !DILabel(scope: !4253, name: "handle_close", file: !44, line: 3739)
!4362 = !DILocation(line: 3739, column: 13, scope: !4253)
!4363 = !DILocation(line: 3740, column: 19, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3740, column: 19)
!4365 = !DILocation(line: 3740, column: 19, scope: !4253)
!4366 = !DILocation(line: 3745, column: 19, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4364, file: !44, line: 3741, column: 17)
!4368 = !DILocation(line: 3745, column: 19, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4367, file: !44, line: 3745, column: 19)
!4370 = !DILocalVariable(name: "old_buffer", scope: !4371, file: !44, line: 3745, type: !81)
!4371 = distinct !DILexicalBlock(scope: !4369, file: !44, line: 3745, column: 19)
!4372 = !DILocation(line: 3745, column: 19, scope: !4371)
!4373 = !DILocation(line: 3745, column: 19, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4371, file: !44, line: 3745, column: 19)
!4375 = !DILocation(line: 3745, column: 19, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4371, file: !44, line: 3745, column: 19)
!4377 = !DILocation(line: 3745, column: 19, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4371, file: !44, line: 3745, column: 19)
!4379 = !DILocation(line: 3745, column: 19, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4371, file: !44, line: 3745, column: 19)
!4381 = !DILocalVariable(name: "incr", scope: !4382, file: !44, line: 3745, type: !7)
!4382 = distinct !DILexicalBlock(scope: !4380, file: !44, line: 3745, column: 19)
!4383 = !DILocation(line: 3745, column: 19, scope: !4382)
!4384 = !DILocation(line: 3745, column: 19, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4382, file: !44, line: 3745, column: 19)
!4386 = !DILocation(line: 3745, column: 19, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4382, file: !44, line: 3745, column: 19)
!4388 = !DILocation(line: 3745, column: 19, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4382, file: !44, line: 3745, column: 19)
!4390 = distinct !{!4390, !4368, !4368}
!4391 = !DILocation(line: 3749, column: 19, scope: !4367)
!4392 = !DILocation(line: 3750, column: 17, scope: !4367)
!4393 = !DILocation(line: 3753, column: 19, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3753, column: 19)
!4395 = !DILocation(line: 3753, column: 19, scope: !4253)
!4396 = !DILocation(line: 3755, column: 9, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !44, line: 3755, column: 9)
!4398 = distinct !DILexicalBlock(scope: !4394, file: !44, line: 3754, column: 3)
!4399 = !DILocation(line: 3755, column: 16, scope: !4397)
!4400 = !DILocation(line: 3755, column: 9, scope: !4398)
!4401 = !DILocation(line: 3756, column: 7, scope: !4397)
!4402 = !DILocation(line: 3758, column: 7, scope: !4397)
!4403 = !DILocalVariable(name: "this_group_regnum", scope: !4404, file: !44, line: 3768, type: !129)
!4404 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3764, column: 15)
!4405 = !DILocation(line: 3768, column: 26, scope: !4404)
!4406 = !DILocation(line: 3770, column: 31, scope: !4404)
!4407 = !DILocation(line: 3770, column: 36, scope: !4404)
!4408 = !DILocation(line: 3771, column: 26, scope: !4404)
!4409 = !DILocation(line: 3771, column: 48, scope: !4404)
!4410 = !DILocation(line: 3771, column: 66, scope: !4404)
!4411 = !DILocation(line: 3771, column: 46, scope: !4404)
!4412 = !DILocation(line: 3771, column: 24, scope: !4404)
!4413 = !DILocation(line: 3773, column: 21, scope: !4404)
!4414 = !DILocation(line: 3773, column: 39, scope: !4404)
!4415 = !DILocation(line: 3774, column: 23, scope: !4404)
!4416 = !DILocation(line: 3774, column: 45, scope: !4404)
!4417 = !DILocation(line: 3774, column: 63, scope: !4404)
!4418 = !DILocation(line: 3774, column: 43, scope: !4404)
!4419 = !DILocation(line: 3774, column: 78, scope: !4404)
!4420 = !DILocation(line: 3773, column: 19, scope: !4404)
!4421 = !DILocation(line: 3776, column: 29, scope: !4404)
!4422 = !DILocation(line: 3776, column: 51, scope: !4404)
!4423 = !DILocation(line: 3776, column: 69, scope: !4404)
!4424 = !DILocation(line: 3776, column: 49, scope: !4404)
!4425 = !DILocation(line: 3776, column: 27, scope: !4404)
!4426 = !DILocation(line: 3777, column: 37, scope: !4404)
!4427 = !DILocation(line: 3777, column: 55, scope: !4404)
!4428 = !DILocation(line: 3777, column: 35, scope: !4404)
!4429 = !DILocation(line: 3781, column: 17, scope: !4404)
!4430 = !DILocation(line: 3785, column: 21, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4404, file: !44, line: 3785, column: 21)
!4432 = !DILocation(line: 3785, column: 39, scope: !4431)
!4433 = !DILocation(line: 3785, column: 21, scope: !4404)
!4434 = !DILocalVariable(name: "inner_group_loc", scope: !4435, file: !44, line: 3787, type: !81)
!4435 = distinct !DILexicalBlock(scope: !4431, file: !44, line: 3786, column: 19)
!4436 = !DILocation(line: 3787, column: 16, scope: !4435)
!4437 = !DILocation(line: 3788, column: 25, scope: !4435)
!4438 = !DILocation(line: 3788, column: 47, scope: !4435)
!4439 = !DILocation(line: 3788, column: 65, scope: !4435)
!4440 = !DILocation(line: 3788, column: 45, scope: !4435)
!4441 = !DILocation(line: 3790, column: 40, scope: !4435)
!4442 = !DILocation(line: 3790, column: 49, scope: !4435)
!4443 = !DILocation(line: 3790, column: 47, scope: !4435)
!4444 = !DILocation(line: 3790, column: 22, scope: !4435)
!4445 = !DILocation(line: 3790, column: 38, scope: !4435)
!4446 = !DILocation(line: 3791, column: 21, scope: !4435)
!4447 = !DILocation(line: 3791, column: 21, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4435, file: !44, line: 3791, column: 21)
!4449 = !DILocalVariable(name: "old_buffer", scope: !4450, file: !44, line: 3791, type: !81)
!4450 = distinct !DILexicalBlock(scope: !4448, file: !44, line: 3791, column: 21)
!4451 = !DILocation(line: 3791, column: 21, scope: !4450)
!4452 = !DILocation(line: 3791, column: 21, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4450, file: !44, line: 3791, column: 21)
!4454 = !DILocation(line: 3791, column: 21, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4450, file: !44, line: 3791, column: 21)
!4456 = !DILocation(line: 3791, column: 21, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4450, file: !44, line: 3791, column: 21)
!4458 = !DILocation(line: 3791, column: 21, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4450, file: !44, line: 3791, column: 21)
!4460 = !DILocalVariable(name: "incr", scope: !4461, file: !44, line: 3791, type: !7)
!4461 = distinct !DILexicalBlock(scope: !4459, file: !44, line: 3791, column: 21)
!4462 = !DILocation(line: 3791, column: 21, scope: !4461)
!4463 = !DILocation(line: 3791, column: 21, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !44, line: 3791, column: 21)
!4465 = !DILocation(line: 3791, column: 21, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4461, file: !44, line: 3791, column: 21)
!4467 = !DILocation(line: 3791, column: 21, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4461, file: !44, line: 3791, column: 21)
!4469 = distinct !{!4469, !4447, !4447}
!4470 = !DILocation(line: 3793, column: 19, scope: !4435)
!4471 = !DILocation(line: 3795, column: 15, scope: !4253)
!4472 = !DILocation(line: 3799, column: 19, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3799, column: 19)
!4474 = !DILocation(line: 3799, column: 26, scope: !4473)
!4475 = !DILocation(line: 3799, column: 43, scope: !4473)
!4476 = !DILocation(line: 3799, column: 46, scope: !4473)
!4477 = !DILocation(line: 3799, column: 53, scope: !4473)
!4478 = !DILocation(line: 3799, column: 19, scope: !4253)
!4479 = !DILocation(line: 3800, column: 17, scope: !4473)
!4480 = !DILocation(line: 3799, column: 55, scope: !4473)
!4481 = !DILabel(scope: !4253, name: "handle_alt", file: !44, line: 3801)
!4482 = !DILocation(line: 3801, column: 13, scope: !4253)
!4483 = !DILocation(line: 3802, column: 19, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3802, column: 19)
!4485 = !DILocation(line: 3802, column: 26, scope: !4484)
!4486 = !DILocation(line: 3802, column: 19, scope: !4253)
!4487 = !DILocation(line: 3803, column: 17, scope: !4484)
!4488 = !DILocation(line: 3807, column: 15, scope: !4253)
!4489 = !DILocalVariable(name: "old_buffer", scope: !4490, file: !44, line: 3807, type: !81)
!4490 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3807, column: 15)
!4491 = !DILocation(line: 3807, column: 15, scope: !4490)
!4492 = !DILocation(line: 3807, column: 15, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4490, file: !44, line: 3807, column: 15)
!4494 = !DILocation(line: 3807, column: 15, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4490, file: !44, line: 3807, column: 15)
!4496 = !DILocation(line: 3807, column: 15, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4490, file: !44, line: 3807, column: 15)
!4498 = !DILocation(line: 3807, column: 15, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4490, file: !44, line: 3807, column: 15)
!4500 = !DILocalVariable(name: "incr", scope: !4501, file: !44, line: 3807, type: !7)
!4501 = distinct !DILexicalBlock(scope: !4499, file: !44, line: 3807, column: 15)
!4502 = !DILocation(line: 3807, column: 15, scope: !4501)
!4503 = !DILocation(line: 3807, column: 15, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4501, file: !44, line: 3807, column: 15)
!4505 = !DILocation(line: 3807, column: 15, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4501, file: !44, line: 3807, column: 15)
!4507 = !DILocation(line: 3807, column: 15, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4501, file: !44, line: 3807, column: 15)
!4509 = distinct !{!4509, !4488, !4488}
!4510 = !DILocation(line: 3808, column: 15, scope: !4253)
!4511 = !DILocation(line: 3810, column: 29, scope: !4253)
!4512 = !DILocation(line: 3811, column: 17, scope: !4253)
!4513 = !DILocation(line: 3829, column: 19, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3829, column: 19)
!4515 = !DILocation(line: 3829, column: 19, scope: !4253)
!4516 = !DILocation(line: 3830, column: 17, scope: !4514)
!4517 = !DILocation(line: 3835, column: 32, scope: !4253)
!4518 = !DILocation(line: 3835, column: 30, scope: !4253)
!4519 = !DILocation(line: 3836, column: 15, scope: !4253)
!4520 = !DILocalVariable(name: "old_buffer", scope: !4521, file: !44, line: 3836, type: !81)
!4521 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3836, column: 15)
!4522 = !DILocation(line: 3836, column: 15, scope: !4521)
!4523 = !DILocation(line: 3836, column: 15, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4521, file: !44, line: 3836, column: 15)
!4525 = !DILocation(line: 3836, column: 15, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4521, file: !44, line: 3836, column: 15)
!4527 = !DILocation(line: 3836, column: 15, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4521, file: !44, line: 3836, column: 15)
!4529 = !DILocation(line: 3836, column: 15, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4521, file: !44, line: 3836, column: 15)
!4531 = !DILocalVariable(name: "incr", scope: !4532, file: !44, line: 3836, type: !7)
!4532 = distinct !DILexicalBlock(scope: !4530, file: !44, line: 3836, column: 15)
!4533 = !DILocation(line: 3836, column: 15, scope: !4532)
!4534 = !DILocation(line: 3836, column: 15, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4532, file: !44, line: 3836, column: 15)
!4536 = !DILocation(line: 3836, column: 15, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4532, file: !44, line: 3836, column: 15)
!4538 = !DILocation(line: 3836, column: 15, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4532, file: !44, line: 3836, column: 15)
!4540 = distinct !{!4540, !4519, !4519}
!4541 = !DILocation(line: 3837, column: 17, scope: !4253)
!4542 = !DILocation(line: 3839, column: 25, scope: !4253)
!4543 = !DILocation(line: 3840, column: 24, scope: !4253)
!4544 = !DILocation(line: 3840, column: 22, scope: !4253)
!4545 = !DILocation(line: 3841, column: 15, scope: !4253)
!4546 = !DILocation(line: 3846, column: 21, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3846, column: 19)
!4548 = !DILocation(line: 3846, column: 28, scope: !4547)
!4549 = !DILocation(line: 3849, column: 5, scope: !4547)
!4550 = !DILocation(line: 3849, column: 9, scope: !4547)
!4551 = !DILocation(line: 3849, column: 16, scope: !4547)
!4552 = !DILocation(line: 3846, column: 19, scope: !4253)
!4553 = !DILocation(line: 3850, column: 17, scope: !4547)
!4554 = !DILocation(line: 3849, column: 33, scope: !4547)
!4555 = !DILabel(scope: !4253, name: "handle_interval", file: !44, line: 3852)
!4556 = !DILocation(line: 3852, column: 13, scope: !4253)
!4557 = !DILocalVariable(name: "lower_bound", scope: !4558, file: !44, line: 3857, type: !7)
!4558 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 3853, column: 15)
!4559 = !DILocation(line: 3857, column: 21, scope: !4558)
!4560 = !DILocalVariable(name: "upper_bound", scope: !4558, file: !44, line: 3857, type: !7)
!4561 = !DILocation(line: 3857, column: 39, scope: !4558)
!4562 = !DILocalVariable(name: "beg_interval", scope: !4558, file: !44, line: 3861, type: !101)
!4563 = !DILocation(line: 3861, column: 17, scope: !4558)
!4564 = !DILocation(line: 3861, column: 32, scope: !4558)
!4565 = !DILocation(line: 3863, column: 21, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3863, column: 21)
!4567 = !DILocation(line: 3863, column: 26, scope: !4566)
!4568 = !DILocation(line: 3863, column: 23, scope: !4566)
!4569 = !DILocation(line: 3863, column: 21, scope: !4558)
!4570 = !DILocation(line: 3864, column: 5, scope: !4566)
!4571 = !DILocation(line: 3866, column: 17, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3866, column: 17)
!4573 = !DILocation(line: 3866, column: 17, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4572, file: !44, line: 3866, column: 17)
!4575 = !DILocation(line: 3866, column: 17, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !44, line: 3866, column: 17)
!4577 = distinct !DILexicalBlock(scope: !4574, file: !44, line: 3866, column: 17)
!4578 = !DILocation(line: 3866, column: 17, scope: !4577)
!4579 = !DILocation(line: 3866, column: 17, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4577, file: !44, line: 3866, column: 17)
!4581 = !DILocation(line: 3866, column: 17, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4574, file: !44, line: 3866, column: 17)
!4583 = !DILocation(line: 3866, column: 17, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4574, file: !44, line: 3866, column: 17)
!4585 = !DILocation(line: 3866, column: 17, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !44, line: 3866, column: 17)
!4587 = distinct !DILexicalBlock(scope: !4584, file: !44, line: 3866, column: 17)
!4588 = !DILocation(line: 3866, column: 17, scope: !4587)
!4589 = distinct !{!4589, !4571, !4571}
!4590 = !DILocation(line: 3868, column: 21, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3868, column: 21)
!4592 = !DILocation(line: 3868, column: 23, scope: !4591)
!4593 = !DILocation(line: 3868, column: 21, scope: !4558)
!4594 = !DILocation(line: 3870, column: 21, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4596, file: !44, line: 3870, column: 21)
!4596 = distinct !DILexicalBlock(scope: !4591, file: !44, line: 3869, column: 19)
!4597 = !DILocation(line: 3870, column: 21, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4595, file: !44, line: 3870, column: 21)
!4599 = !DILocation(line: 3870, column: 21, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !44, line: 3870, column: 21)
!4601 = distinct !DILexicalBlock(scope: !4598, file: !44, line: 3870, column: 21)
!4602 = !DILocation(line: 3870, column: 21, scope: !4601)
!4603 = !DILocation(line: 3870, column: 21, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4601, file: !44, line: 3870, column: 21)
!4605 = !DILocation(line: 3870, column: 21, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4598, file: !44, line: 3870, column: 21)
!4607 = !DILocation(line: 3870, column: 21, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4598, file: !44, line: 3870, column: 21)
!4609 = !DILocation(line: 3870, column: 21, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !44, line: 3870, column: 21)
!4611 = distinct !DILexicalBlock(scope: !4608, file: !44, line: 3870, column: 21)
!4612 = !DILocation(line: 3870, column: 21, scope: !4611)
!4613 = distinct !{!4613, !4594, !4594}
!4614 = !DILocation(line: 3871, column: 11, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4596, file: !44, line: 3871, column: 11)
!4616 = !DILocation(line: 3871, column: 23, scope: !4615)
!4617 = !DILocation(line: 3871, column: 11, scope: !4596)
!4618 = !DILocation(line: 3872, column: 21, scope: !4615)
!4619 = !DILocation(line: 3872, column: 9, scope: !4615)
!4620 = !DILocation(line: 3873, column: 19, scope: !4596)
!4621 = !DILocation(line: 3876, column: 33, scope: !4591)
!4622 = !DILocation(line: 3876, column: 31, scope: !4591)
!4623 = !DILocation(line: 3878, column: 29, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3878, column: 21)
!4625 = !DILocation(line: 3878, column: 26, scope: !4624)
!4626 = !DILocation(line: 3878, column: 41, scope: !4624)
!4627 = !DILocation(line: 3878, column: 44, scope: !4624)
!4628 = !DILocation(line: 3878, column: 59, scope: !4624)
!4629 = !DILocation(line: 3878, column: 56, scope: !4624)
!4630 = !DILocation(line: 3878, column: 21, scope: !4558)
!4631 = !DILocation(line: 3879, column: 5, scope: !4624)
!4632 = !DILocation(line: 3881, column: 23, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3881, column: 21)
!4634 = !DILocation(line: 3881, column: 30, scope: !4633)
!4635 = !DILocation(line: 3881, column: 21, scope: !4558)
!4636 = !DILocation(line: 3883, column: 11, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !44, line: 3883, column: 11)
!4638 = distinct !DILexicalBlock(scope: !4633, file: !44, line: 3882, column: 19)
!4639 = !DILocation(line: 3883, column: 13, scope: !4637)
!4640 = !DILocation(line: 3883, column: 21, scope: !4637)
!4641 = !DILocation(line: 3883, column: 24, scope: !4637)
!4642 = !DILocation(line: 3883, column: 29, scope: !4637)
!4643 = !DILocation(line: 3883, column: 26, scope: !4637)
!4644 = !DILocation(line: 3883, column: 11, scope: !4638)
!4645 = !DILocation(line: 3884, column: 9, scope: !4637)
!4646 = !DILocation(line: 3885, column: 21, scope: !4638)
!4647 = !DILocation(line: 3885, column: 21, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !44, line: 3885, column: 21)
!4649 = distinct !DILexicalBlock(scope: !4638, file: !44, line: 3885, column: 21)
!4650 = !DILocation(line: 3885, column: 21, scope: !4649)
!4651 = !DILocation(line: 3885, column: 21, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4649, file: !44, line: 3885, column: 21)
!4653 = !DILocation(line: 3886, column: 19, scope: !4638)
!4654 = !DILocation(line: 3888, column: 21, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3888, column: 21)
!4656 = !DILocation(line: 3888, column: 23, scope: !4655)
!4657 = !DILocation(line: 3888, column: 21, scope: !4558)
!4658 = !DILocation(line: 3889, column: 5, scope: !4655)
!4659 = !DILocation(line: 3892, column: 22, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3892, column: 21)
!4661 = !DILocation(line: 3892, column: 21, scope: !4558)
!4662 = !DILocation(line: 3894, column: 11, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !44, line: 3894, column: 11)
!4664 = distinct !DILexicalBlock(scope: !4660, file: !44, line: 3893, column: 19)
!4665 = !DILocation(line: 3894, column: 18, scope: !4663)
!4666 = !DILocation(line: 3895, column: 4, scope: !4663)
!4667 = !DILocation(line: 3895, column: 9, scope: !4663)
!4668 = !DILocation(line: 3895, column: 16, scope: !4663)
!4669 = !DILocation(line: 3894, column: 11, scope: !4664)
!4670 = !DILocation(line: 3896, column: 23, scope: !4663)
!4671 = !DILocation(line: 3897, column: 30, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4663, file: !44, line: 3897, column: 30)
!4673 = !DILocation(line: 3897, column: 37, scope: !4672)
!4674 = !DILocation(line: 3897, column: 30, scope: !4663)
!4675 = !DILocation(line: 3898, column: 35, scope: !4672)
!4676 = !DILocation(line: 3898, column: 33, scope: !4672)
!4677 = !DILocation(line: 3898, column: 23, scope: !4672)
!4678 = !DILocation(line: 3900, column: 23, scope: !4672)
!4679 = !DILocation(line: 3901, column: 19, scope: !4664)
!4680 = !DILocation(line: 3905, column: 34, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3905, column: 21)
!4682 = !DILocation(line: 3905, column: 32, scope: !4681)
!4683 = !DILocation(line: 3905, column: 21, scope: !4558)
!4684 = !DILocation(line: 3906, column: 5, scope: !4681)
!4685 = !DILocation(line: 3913, column: 22, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3913, column: 22)
!4687 = !DILocation(line: 3913, column: 34, scope: !4686)
!4688 = !DILocation(line: 3913, column: 22, scope: !4558)
!4689 = !DILocation(line: 3915, column: 22, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4686, file: !44, line: 3914, column: 20)
!4691 = !DILocalVariable(name: "old_buffer", scope: !4692, file: !44, line: 3915, type: !81)
!4692 = distinct !DILexicalBlock(scope: !4690, file: !44, line: 3915, column: 22)
!4693 = !DILocation(line: 3915, column: 22, scope: !4692)
!4694 = !DILocation(line: 3915, column: 22, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4692, file: !44, line: 3915, column: 22)
!4696 = !DILocation(line: 3915, column: 22, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4692, file: !44, line: 3915, column: 22)
!4698 = !DILocation(line: 3915, column: 22, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4692, file: !44, line: 3915, column: 22)
!4700 = !DILocation(line: 3915, column: 22, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4692, file: !44, line: 3915, column: 22)
!4702 = !DILocalVariable(name: "incr", scope: !4703, file: !44, line: 3915, type: !7)
!4703 = distinct !DILexicalBlock(scope: !4701, file: !44, line: 3915, column: 22)
!4704 = !DILocation(line: 3915, column: 22, scope: !4703)
!4705 = !DILocation(line: 3915, column: 22, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !44, line: 3915, column: 22)
!4707 = !DILocation(line: 3915, column: 22, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4703, file: !44, line: 3915, column: 22)
!4709 = !DILocation(line: 3915, column: 22, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4703, file: !44, line: 3915, column: 22)
!4711 = distinct !{!4711, !4689, !4689}
!4712 = !DILocation(line: 3916, column: 22, scope: !4690)
!4713 = !DILocation(line: 3918, column: 24, scope: !4690)
!4714 = !DILocation(line: 3919, column: 20, scope: !4690)
!4715 = !DILocalVariable(name: "nbytes", scope: !4716, file: !44, line: 3933, type: !29)
!4716 = distinct !DILexicalBlock(scope: !4686, file: !44, line: 3931, column: 20)
!4717 = !DILocation(line: 3933, column: 31, scope: !4716)
!4718 = !DILocation(line: 3934, column: 11, scope: !4716)
!4719 = !DILocation(line: 3934, column: 23, scope: !4716)
!4720 = !DILocation(line: 3934, column: 28, scope: !4716)
!4721 = !DILocation(line: 3933, column: 68, scope: !4716)
!4722 = !DILocation(line: 3936, column: 22, scope: !4716)
!4723 = !DILocalVariable(name: "old_buffer", scope: !4724, file: !44, line: 3936, type: !81)
!4724 = distinct !DILexicalBlock(scope: !4716, file: !44, line: 3936, column: 22)
!4725 = !DILocation(line: 3936, column: 22, scope: !4724)
!4726 = !DILocation(line: 3936, column: 22, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4724, file: !44, line: 3936, column: 22)
!4728 = !DILocation(line: 3936, column: 22, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4724, file: !44, line: 3936, column: 22)
!4730 = !DILocation(line: 3936, column: 22, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4724, file: !44, line: 3936, column: 22)
!4732 = !DILocation(line: 3936, column: 22, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4724, file: !44, line: 3936, column: 22)
!4734 = !DILocalVariable(name: "incr", scope: !4735, file: !44, line: 3936, type: !7)
!4735 = distinct !DILexicalBlock(scope: !4733, file: !44, line: 3936, column: 22)
!4736 = !DILocation(line: 3936, column: 22, scope: !4735)
!4737 = !DILocation(line: 3936, column: 22, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4735, file: !44, line: 3936, column: 22)
!4739 = !DILocation(line: 3936, column: 22, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4735, file: !44, line: 3936, column: 22)
!4741 = !DILocation(line: 3936, column: 22, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4735, file: !44, line: 3936, column: 22)
!4743 = distinct !{!4743, !4722, !4722}
!4744 = !DILocation(line: 3943, column: 22, scope: !4716)
!4745 = !DILocation(line: 3947, column: 24, scope: !4716)
!4746 = !DILocation(line: 3956, column: 57, scope: !4716)
!4747 = !DILocation(line: 3957, column: 33, scope: !4716)
!4748 = !DILocation(line: 3957, column: 46, scope: !4716)
!4749 = !DILocation(line: 3956, column: 22, scope: !4716)
!4750 = !DILocation(line: 3958, column: 24, scope: !4716)
!4751 = !DILocation(line: 3960, column: 26, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4716, file: !44, line: 3960, column: 26)
!4753 = !DILocation(line: 3960, column: 38, scope: !4752)
!4754 = !DILocation(line: 3960, column: 26, scope: !4716)
!4755 = !DILocation(line: 3968, column: 26, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4752, file: !44, line: 3961, column: 24)
!4757 = !DILocation(line: 3971, column: 28, scope: !4756)
!4758 = !DILocation(line: 3987, column: 61, scope: !4756)
!4759 = !DILocation(line: 3988, column: 11, scope: !4756)
!4760 = !DILocation(line: 3988, column: 15, scope: !4756)
!4761 = !DILocation(line: 3988, column: 13, scope: !4756)
!4762 = !DILocation(line: 3989, column: 11, scope: !4756)
!4763 = !DILocation(line: 3989, column: 23, scope: !4756)
!4764 = !DILocation(line: 3989, column: 28, scope: !4756)
!4765 = !DILocation(line: 3987, column: 26, scope: !4756)
!4766 = !DILocation(line: 3990, column: 28, scope: !4756)
!4767 = !DILocation(line: 3991, column: 24, scope: !4756)
!4768 = !DILocation(line: 3993, column: 31, scope: !4558)
!4769 = !DILocation(line: 3994, column: 3, scope: !4558)
!4770 = !DILabel(scope: !4558, name: "invalid_interval", file: !44, line: 3996)
!4771 = !DILocation(line: 3996, column: 8, scope: !4558)
!4772 = !DILocation(line: 3997, column: 9, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 3997, column: 7)
!4774 = !DILocation(line: 3997, column: 16, scope: !4773)
!4775 = !DILocation(line: 3997, column: 7, scope: !4558)
!4776 = !DILocation(line: 3998, column: 5, scope: !4773)
!4777 = !DILocation(line: 3997, column: 41, scope: !4773)
!4778 = !DILabel(scope: !4558, name: "unfetch_interval", file: !44, line: 3999)
!4779 = !DILocation(line: 3999, column: 8, scope: !4558)
!4780 = !DILocation(line: 4001, column: 7, scope: !4558)
!4781 = !DILocation(line: 4001, column: 5, scope: !4558)
!4782 = !DILocation(line: 4002, column: 5, scope: !4558)
!4783 = !DILocation(line: 4003, column: 7, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4558, file: !44, line: 4003, column: 7)
!4785 = !DILocation(line: 4003, column: 14, scope: !4784)
!4786 = !DILocation(line: 4003, column: 7, scope: !4558)
!4787 = !DILocation(line: 4004, column: 5, scope: !4784)
!4788 = !DILocation(line: 4006, column: 5, scope: !4784)
!4789 = !DILocation(line: 4031, column: 12, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4031, column: 12)
!4791 = !DILocation(line: 4031, column: 19, scope: !4790)
!4792 = !DILocation(line: 4031, column: 12, scope: !4253)
!4793 = !DILocation(line: 4032, column: 3, scope: !4790)
!4794 = !DILocation(line: 4033, column: 27, scope: !4253)
!4795 = !DILocation(line: 4033, column: 25, scope: !4253)
!4796 = !DILocation(line: 4034, column: 15, scope: !4253)
!4797 = !DILocation(line: 4034, column: 15, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4034, column: 15)
!4799 = !DILocalVariable(name: "old_buffer", scope: !4800, file: !44, line: 4034, type: !81)
!4800 = distinct !DILexicalBlock(scope: !4798, file: !44, line: 4034, column: 15)
!4801 = !DILocation(line: 4034, column: 15, scope: !4800)
!4802 = !DILocation(line: 4034, column: 15, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4800, file: !44, line: 4034, column: 15)
!4804 = !DILocation(line: 4034, column: 15, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4800, file: !44, line: 4034, column: 15)
!4806 = !DILocation(line: 4034, column: 15, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4800, file: !44, line: 4034, column: 15)
!4808 = !DILocation(line: 4034, column: 15, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4800, file: !44, line: 4034, column: 15)
!4810 = !DILocalVariable(name: "incr", scope: !4811, file: !44, line: 4034, type: !7)
!4811 = distinct !DILexicalBlock(scope: !4809, file: !44, line: 4034, column: 15)
!4812 = !DILocation(line: 4034, column: 15, scope: !4811)
!4813 = !DILocation(line: 4034, column: 15, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4811, file: !44, line: 4034, column: 15)
!4815 = !DILocation(line: 4034, column: 15, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4811, file: !44, line: 4034, column: 15)
!4817 = !DILocation(line: 4034, column: 15, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4811, file: !44, line: 4034, column: 15)
!4819 = distinct !{!4819, !4797, !4797}
!4820 = !DILocation(line: 4035, column: 15, scope: !4253)
!4821 = !DILocation(line: 4039, column: 12, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4039, column: 12)
!4823 = !DILocation(line: 4039, column: 19, scope: !4822)
!4824 = !DILocation(line: 4039, column: 12, scope: !4253)
!4825 = !DILocation(line: 4040, column: 3, scope: !4822)
!4826 = !DILocation(line: 4041, column: 27, scope: !4253)
!4827 = !DILocation(line: 4041, column: 25, scope: !4253)
!4828 = !DILocation(line: 4042, column: 15, scope: !4253)
!4829 = !DILocation(line: 4042, column: 15, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4042, column: 15)
!4831 = !DILocalVariable(name: "old_buffer", scope: !4832, file: !44, line: 4042, type: !81)
!4832 = distinct !DILexicalBlock(scope: !4830, file: !44, line: 4042, column: 15)
!4833 = !DILocation(line: 4042, column: 15, scope: !4832)
!4834 = !DILocation(line: 4042, column: 15, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4832, file: !44, line: 4042, column: 15)
!4836 = !DILocation(line: 4042, column: 15, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4832, file: !44, line: 4042, column: 15)
!4838 = !DILocation(line: 4042, column: 15, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4832, file: !44, line: 4042, column: 15)
!4840 = !DILocation(line: 4042, column: 15, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4832, file: !44, line: 4042, column: 15)
!4842 = !DILocalVariable(name: "incr", scope: !4843, file: !44, line: 4042, type: !7)
!4843 = distinct !DILexicalBlock(scope: !4841, file: !44, line: 4042, column: 15)
!4844 = !DILocation(line: 4042, column: 15, scope: !4843)
!4845 = !DILocation(line: 4042, column: 15, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4843, file: !44, line: 4042, column: 15)
!4847 = !DILocation(line: 4042, column: 15, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4843, file: !44, line: 4042, column: 15)
!4849 = !DILocation(line: 4042, column: 15, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4843, file: !44, line: 4042, column: 15)
!4851 = distinct !{!4851, !4829, !4829}
!4852 = !DILocation(line: 4043, column: 15, scope: !4253)
!4853 = !DILocation(line: 4047, column: 12, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4047, column: 12)
!4855 = !DILocation(line: 4047, column: 19, scope: !4854)
!4856 = !DILocation(line: 4047, column: 12, scope: !4253)
!4857 = !DILocation(line: 4048, column: 3, scope: !4854)
!4858 = !DILocation(line: 4049, column: 15, scope: !4253)
!4859 = !DILocation(line: 4049, column: 15, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4049, column: 15)
!4861 = !DILocalVariable(name: "old_buffer", scope: !4862, file: !44, line: 4049, type: !81)
!4862 = distinct !DILexicalBlock(scope: !4860, file: !44, line: 4049, column: 15)
!4863 = !DILocation(line: 4049, column: 15, scope: !4862)
!4864 = !DILocation(line: 4049, column: 15, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4862, file: !44, line: 4049, column: 15)
!4866 = !DILocation(line: 4049, column: 15, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4862, file: !44, line: 4049, column: 15)
!4868 = !DILocation(line: 4049, column: 15, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4862, file: !44, line: 4049, column: 15)
!4870 = !DILocation(line: 4049, column: 15, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4862, file: !44, line: 4049, column: 15)
!4872 = !DILocalVariable(name: "incr", scope: !4873, file: !44, line: 4049, type: !7)
!4873 = distinct !DILexicalBlock(scope: !4871, file: !44, line: 4049, column: 15)
!4874 = !DILocation(line: 4049, column: 15, scope: !4873)
!4875 = !DILocation(line: 4049, column: 15, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4873, file: !44, line: 4049, column: 15)
!4877 = !DILocation(line: 4049, column: 15, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4873, file: !44, line: 4049, column: 15)
!4879 = !DILocation(line: 4049, column: 15, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4873, file: !44, line: 4049, column: 15)
!4881 = distinct !{!4881, !4859, !4859}
!4882 = !DILocation(line: 4050, column: 15, scope: !4253)
!4883 = !DILocation(line: 4053, column: 12, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4053, column: 12)
!4885 = !DILocation(line: 4053, column: 19, scope: !4884)
!4886 = !DILocation(line: 4053, column: 12, scope: !4253)
!4887 = !DILocation(line: 4054, column: 3, scope: !4884)
!4888 = !DILocation(line: 4055, column: 15, scope: !4253)
!4889 = !DILocation(line: 4055, column: 15, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4055, column: 15)
!4891 = !DILocalVariable(name: "old_buffer", scope: !4892, file: !44, line: 4055, type: !81)
!4892 = distinct !DILexicalBlock(scope: !4890, file: !44, line: 4055, column: 15)
!4893 = !DILocation(line: 4055, column: 15, scope: !4892)
!4894 = !DILocation(line: 4055, column: 15, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4892, file: !44, line: 4055, column: 15)
!4896 = !DILocation(line: 4055, column: 15, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4892, file: !44, line: 4055, column: 15)
!4898 = !DILocation(line: 4055, column: 15, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4892, file: !44, line: 4055, column: 15)
!4900 = !DILocation(line: 4055, column: 15, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4892, file: !44, line: 4055, column: 15)
!4902 = !DILocalVariable(name: "incr", scope: !4903, file: !44, line: 4055, type: !7)
!4903 = distinct !DILexicalBlock(scope: !4901, file: !44, line: 4055, column: 15)
!4904 = !DILocation(line: 4055, column: 15, scope: !4903)
!4905 = !DILocation(line: 4055, column: 15, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !44, line: 4055, column: 15)
!4907 = !DILocation(line: 4055, column: 15, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4903, file: !44, line: 4055, column: 15)
!4909 = !DILocation(line: 4055, column: 15, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4903, file: !44, line: 4055, column: 15)
!4911 = distinct !{!4911, !4889, !4889}
!4912 = !DILocation(line: 4056, column: 15, scope: !4253)
!4913 = !DILocation(line: 4059, column: 12, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4059, column: 12)
!4915 = !DILocation(line: 4059, column: 19, scope: !4914)
!4916 = !DILocation(line: 4059, column: 12, scope: !4253)
!4917 = !DILocation(line: 4060, column: 3, scope: !4914)
!4918 = !DILocation(line: 4061, column: 15, scope: !4253)
!4919 = !DILocation(line: 4061, column: 15, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4061, column: 15)
!4921 = !DILocalVariable(name: "old_buffer", scope: !4922, file: !44, line: 4061, type: !81)
!4922 = distinct !DILexicalBlock(scope: !4920, file: !44, line: 4061, column: 15)
!4923 = !DILocation(line: 4061, column: 15, scope: !4922)
!4924 = !DILocation(line: 4061, column: 15, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4922, file: !44, line: 4061, column: 15)
!4926 = !DILocation(line: 4061, column: 15, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4922, file: !44, line: 4061, column: 15)
!4928 = !DILocation(line: 4061, column: 15, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4922, file: !44, line: 4061, column: 15)
!4930 = !DILocation(line: 4061, column: 15, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4922, file: !44, line: 4061, column: 15)
!4932 = !DILocalVariable(name: "incr", scope: !4933, file: !44, line: 4061, type: !7)
!4933 = distinct !DILexicalBlock(scope: !4931, file: !44, line: 4061, column: 15)
!4934 = !DILocation(line: 4061, column: 15, scope: !4933)
!4935 = !DILocation(line: 4061, column: 15, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4933, file: !44, line: 4061, column: 15)
!4937 = !DILocation(line: 4061, column: 15, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4933, file: !44, line: 4061, column: 15)
!4939 = !DILocation(line: 4061, column: 15, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4933, file: !44, line: 4061, column: 15)
!4941 = distinct !{!4941, !4919, !4919}
!4942 = !DILocation(line: 4062, column: 15, scope: !4253)
!4943 = !DILocation(line: 4065, column: 12, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4065, column: 12)
!4945 = !DILocation(line: 4065, column: 19, scope: !4944)
!4946 = !DILocation(line: 4065, column: 12, scope: !4253)
!4947 = !DILocation(line: 4066, column: 3, scope: !4944)
!4948 = !DILocation(line: 4067, column: 15, scope: !4253)
!4949 = !DILocation(line: 4067, column: 15, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4067, column: 15)
!4951 = !DILocalVariable(name: "old_buffer", scope: !4952, file: !44, line: 4067, type: !81)
!4952 = distinct !DILexicalBlock(scope: !4950, file: !44, line: 4067, column: 15)
!4953 = !DILocation(line: 4067, column: 15, scope: !4952)
!4954 = !DILocation(line: 4067, column: 15, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !44, line: 4067, column: 15)
!4956 = !DILocation(line: 4067, column: 15, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4952, file: !44, line: 4067, column: 15)
!4958 = !DILocation(line: 4067, column: 15, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4952, file: !44, line: 4067, column: 15)
!4960 = !DILocation(line: 4067, column: 15, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4952, file: !44, line: 4067, column: 15)
!4962 = !DILocalVariable(name: "incr", scope: !4963, file: !44, line: 4067, type: !7)
!4963 = distinct !DILexicalBlock(scope: !4961, file: !44, line: 4067, column: 15)
!4964 = !DILocation(line: 4067, column: 15, scope: !4963)
!4965 = !DILocation(line: 4067, column: 15, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4963, file: !44, line: 4067, column: 15)
!4967 = !DILocation(line: 4067, column: 15, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4963, file: !44, line: 4067, column: 15)
!4969 = !DILocation(line: 4067, column: 15, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4963, file: !44, line: 4067, column: 15)
!4971 = distinct !{!4971, !4949, !4949}
!4972 = !DILocation(line: 4068, column: 15, scope: !4253)
!4973 = !DILocation(line: 4071, column: 12, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4071, column: 12)
!4975 = !DILocation(line: 4071, column: 19, scope: !4974)
!4976 = !DILocation(line: 4071, column: 12, scope: !4253)
!4977 = !DILocation(line: 4072, column: 3, scope: !4974)
!4978 = !DILocation(line: 4073, column: 15, scope: !4253)
!4979 = !DILocation(line: 4073, column: 15, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4073, column: 15)
!4981 = !DILocalVariable(name: "old_buffer", scope: !4982, file: !44, line: 4073, type: !81)
!4982 = distinct !DILexicalBlock(scope: !4980, file: !44, line: 4073, column: 15)
!4983 = !DILocation(line: 4073, column: 15, scope: !4982)
!4984 = !DILocation(line: 4073, column: 15, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4982, file: !44, line: 4073, column: 15)
!4986 = !DILocation(line: 4073, column: 15, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4982, file: !44, line: 4073, column: 15)
!4988 = !DILocation(line: 4073, column: 15, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4982, file: !44, line: 4073, column: 15)
!4990 = !DILocation(line: 4073, column: 15, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4982, file: !44, line: 4073, column: 15)
!4992 = !DILocalVariable(name: "incr", scope: !4993, file: !44, line: 4073, type: !7)
!4993 = distinct !DILexicalBlock(scope: !4991, file: !44, line: 4073, column: 15)
!4994 = !DILocation(line: 4073, column: 15, scope: !4993)
!4995 = !DILocation(line: 4073, column: 15, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !44, line: 4073, column: 15)
!4997 = !DILocation(line: 4073, column: 15, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4993, file: !44, line: 4073, column: 15)
!4999 = !DILocation(line: 4073, column: 15, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4993, file: !44, line: 4073, column: 15)
!5001 = distinct !{!5001, !4979, !4979}
!5002 = !DILocation(line: 4074, column: 15, scope: !4253)
!5003 = !DILocation(line: 4077, column: 12, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4077, column: 12)
!5005 = !DILocation(line: 4077, column: 19, scope: !5004)
!5006 = !DILocation(line: 4077, column: 12, scope: !4253)
!5007 = !DILocation(line: 4078, column: 3, scope: !5004)
!5008 = !DILocation(line: 4079, column: 15, scope: !4253)
!5009 = !DILocation(line: 4079, column: 15, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4079, column: 15)
!5011 = !DILocalVariable(name: "old_buffer", scope: !5012, file: !44, line: 4079, type: !81)
!5012 = distinct !DILexicalBlock(scope: !5010, file: !44, line: 4079, column: 15)
!5013 = !DILocation(line: 4079, column: 15, scope: !5012)
!5014 = !DILocation(line: 4079, column: 15, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5012, file: !44, line: 4079, column: 15)
!5016 = !DILocation(line: 4079, column: 15, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5012, file: !44, line: 4079, column: 15)
!5018 = !DILocation(line: 4079, column: 15, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5012, file: !44, line: 4079, column: 15)
!5020 = !DILocation(line: 4079, column: 15, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5012, file: !44, line: 4079, column: 15)
!5022 = !DILocalVariable(name: "incr", scope: !5023, file: !44, line: 4079, type: !7)
!5023 = distinct !DILexicalBlock(scope: !5021, file: !44, line: 4079, column: 15)
!5024 = !DILocation(line: 4079, column: 15, scope: !5023)
!5025 = !DILocation(line: 4079, column: 15, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5023, file: !44, line: 4079, column: 15)
!5027 = !DILocation(line: 4079, column: 15, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5023, file: !44, line: 4079, column: 15)
!5029 = !DILocation(line: 4079, column: 15, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5023, file: !44, line: 4079, column: 15)
!5031 = distinct !{!5031, !5009, !5009}
!5032 = !DILocation(line: 4080, column: 15, scope: !4253)
!5033 = !DILocation(line: 4084, column: 19, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4084, column: 19)
!5035 = !DILocation(line: 4084, column: 26, scope: !5034)
!5036 = !DILocation(line: 4084, column: 19, scope: !4253)
!5037 = !DILocation(line: 4085, column: 17, scope: !5034)
!5038 = !DILocation(line: 4087, column: 20, scope: !4253)
!5039 = !DILocation(line: 4087, column: 22, scope: !4253)
!5040 = !DILocation(line: 4087, column: 18, scope: !4253)
!5041 = !DILocation(line: 4089, column: 19, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4089, column: 19)
!5043 = !DILocation(line: 4089, column: 24, scope: !5042)
!5044 = !DILocation(line: 4089, column: 22, scope: !5042)
!5045 = !DILocation(line: 4089, column: 19, scope: !4253)
!5046 = !DILocation(line: 4090, column: 17, scope: !5042)
!5047 = !DILocation(line: 4093, column: 69, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4093, column: 19)
!5049 = !DILocation(line: 4093, column: 58, scope: !5048)
!5050 = !DILocation(line: 4093, column: 19, scope: !5048)
!5051 = !DILocation(line: 4093, column: 19, scope: !4253)
!5052 = !DILocation(line: 4094, column: 17, scope: !5048)
!5053 = !DILocation(line: 4096, column: 27, scope: !4253)
!5054 = !DILocation(line: 4096, column: 25, scope: !4253)
!5055 = !DILocation(line: 4097, column: 15, scope: !4253)
!5056 = !DILocation(line: 4097, column: 15, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4097, column: 15)
!5058 = !DILocalVariable(name: "old_buffer", scope: !5059, file: !44, line: 4097, type: !81)
!5059 = distinct !DILexicalBlock(scope: !5057, file: !44, line: 4097, column: 15)
!5060 = !DILocation(line: 4097, column: 15, scope: !5059)
!5061 = !DILocation(line: 4097, column: 15, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5059, file: !44, line: 4097, column: 15)
!5063 = !DILocation(line: 4097, column: 15, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5059, file: !44, line: 4097, column: 15)
!5065 = !DILocation(line: 4097, column: 15, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5059, file: !44, line: 4097, column: 15)
!5067 = !DILocation(line: 4097, column: 15, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5059, file: !44, line: 4097, column: 15)
!5069 = !DILocalVariable(name: "incr", scope: !5070, file: !44, line: 4097, type: !7)
!5070 = distinct !DILexicalBlock(scope: !5068, file: !44, line: 4097, column: 15)
!5071 = !DILocation(line: 4097, column: 15, scope: !5070)
!5072 = !DILocation(line: 4097, column: 15, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5070, file: !44, line: 4097, column: 15)
!5074 = !DILocation(line: 4097, column: 15, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5070, file: !44, line: 4097, column: 15)
!5076 = !DILocation(line: 4097, column: 15, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5070, file: !44, line: 4097, column: 15)
!5078 = distinct !{!5078, !5056, !5056}
!5079 = !DILocation(line: 4098, column: 15, scope: !4253)
!5080 = !DILocation(line: 4103, column: 19, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4253, file: !44, line: 4103, column: 19)
!5082 = !DILocation(line: 4103, column: 26, scope: !5081)
!5083 = !DILocation(line: 4103, column: 19, scope: !4253)
!5084 = !DILocation(line: 4104, column: 17, scope: !5081)
!5085 = !DILocation(line: 4106, column: 17, scope: !5081)
!5086 = !DILocation(line: 4103, column: 28, scope: !5081)
!5087 = !DILabel(scope: !4253, name: "normal_backslash", file: !44, line: 4109)
!5088 = !DILocation(line: 4109, column: 13, scope: !4253)
!5089 = !DILocation(line: 4113, column: 19, scope: !4253)
!5090 = !DILocation(line: 4113, column: 17, scope: !4253)
!5091 = !DILocation(line: 4114, column: 15, scope: !4253)
!5092 = !DILocation(line: 4116, column: 11, scope: !3164)
!5093 = !DILabel(scope: !3164, name: "normal_char", file: !44, line: 4121)
!5094 = !DILocation(line: 4121, column: 2, scope: !3164)
!5095 = !DILocation(line: 4123, column: 16, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 4123, column: 15)
!5097 = !DILocation(line: 4131, column: 15, scope: !5096)
!5098 = !DILocation(line: 4131, column: 18, scope: !5096)
!5099 = !DILocation(line: 4131, column: 35, scope: !5096)
!5100 = !DILocation(line: 4131, column: 34, scope: !5096)
!5101 = !DILocation(line: 4131, column: 32, scope: !5096)
!5102 = !DILocation(line: 4131, column: 49, scope: !5096)
!5103 = !DILocation(line: 4131, column: 56, scope: !5096)
!5104 = !DILocation(line: 4131, column: 53, scope: !5096)
!5105 = !DILocation(line: 4134, column: 8, scope: !5096)
!5106 = !DILocation(line: 4134, column: 12, scope: !5096)
!5107 = !DILocation(line: 4134, column: 11, scope: !5096)
!5108 = !DILocation(line: 4134, column: 26, scope: !5096)
!5109 = !DILocation(line: 4137, column: 15, scope: !5096)
!5110 = !DILocation(line: 4137, column: 19, scope: !5096)
!5111 = !DILocation(line: 4137, column: 18, scope: !5096)
!5112 = !DILocation(line: 4137, column: 21, scope: !5096)
!5113 = !DILocation(line: 4137, column: 28, scope: !5096)
!5114 = !DILocation(line: 4137, column: 32, scope: !5096)
!5115 = !DILocation(line: 4137, column: 31, scope: !5096)
!5116 = !DILocation(line: 4137, column: 34, scope: !5096)
!5117 = !DILocation(line: 4138, column: 8, scope: !5096)
!5118 = !DILocation(line: 4138, column: 13, scope: !5096)
!5119 = !DILocation(line: 4138, column: 20, scope: !5096)
!5120 = !DILocation(line: 4141, column: 8, scope: !5096)
!5121 = !DILocation(line: 4139, column: 8, scope: !5096)
!5122 = !DILocation(line: 4139, column: 7, scope: !5096)
!5123 = !DILocation(line: 4139, column: 10, scope: !5096)
!5124 = !DILocation(line: 4139, column: 18, scope: !5096)
!5125 = !DILocation(line: 4139, column: 22, scope: !5096)
!5126 = !DILocation(line: 4139, column: 27, scope: !5096)
!5127 = !DILocation(line: 4139, column: 34, scope: !5096)
!5128 = !DILocation(line: 4139, column: 37, scope: !5096)
!5129 = !DILocation(line: 4139, column: 42, scope: !5096)
!5130 = !DILocation(line: 4138, column: 12, scope: !5096)
!5131 = !DILocation(line: 4140, column: 9, scope: !5096)
!5132 = !DILocation(line: 4140, column: 8, scope: !5096)
!5133 = !DILocation(line: 4140, column: 11, scope: !5096)
!5134 = !DILocation(line: 4140, column: 18, scope: !5096)
!5135 = !DILocation(line: 4140, column: 22, scope: !5096)
!5136 = !DILocation(line: 4140, column: 21, scope: !5096)
!5137 = !DILocation(line: 4140, column: 24, scope: !5096)
!5138 = !DILocation(line: 4141, column: 13, scope: !5096)
!5139 = !DILocation(line: 4141, column: 20, scope: !5096)
!5140 = !DILocation(line: 4142, column: 19, scope: !5096)
!5141 = !DILocation(line: 4142, column: 24, scope: !5096)
!5142 = !DILocation(line: 4142, column: 31, scope: !5096)
!5143 = !DILocation(line: 4123, column: 15, scope: !3164)
!5144 = !DILocation(line: 4143, column: 12, scope: !5096)
!5145 = !DILocation(line: 4143, column: 11, scope: !5096)
!5146 = !DILocation(line: 4143, column: 14, scope: !5096)
!5147 = !DILocation(line: 4142, column: 23, scope: !5096)
!5148 = !DILocation(line: 4144, column: 26, scope: !5096)
!5149 = !DILocation(line: 4144, column: 31, scope: !5096)
!5150 = !DILocation(line: 4144, column: 39, scope: !5096)
!5151 = !DILocation(line: 4144, column: 42, scope: !5096)
!5152 = !DILocation(line: 4144, column: 47, scope: !5096)
!5153 = !DILocation(line: 4148, column: 27, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5096, file: !44, line: 4145, column: 6)
!5155 = !DILocation(line: 4148, column: 25, scope: !5154)
!5156 = !DILocation(line: 4158, column: 8, scope: !5154)
!5157 = !DILocation(line: 4158, column: 8, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5154, file: !44, line: 4158, column: 8)
!5159 = !DILocalVariable(name: "old_buffer", scope: !5160, file: !44, line: 4158, type: !81)
!5160 = distinct !DILexicalBlock(scope: !5158, file: !44, line: 4158, column: 8)
!5161 = !DILocation(line: 4158, column: 8, scope: !5160)
!5162 = !DILocation(line: 4158, column: 8, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5160, file: !44, line: 4158, column: 8)
!5164 = !DILocation(line: 4158, column: 8, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5160, file: !44, line: 4158, column: 8)
!5166 = !DILocation(line: 4158, column: 8, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5160, file: !44, line: 4158, column: 8)
!5168 = !DILocation(line: 4158, column: 8, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5160, file: !44, line: 4158, column: 8)
!5170 = !DILocalVariable(name: "incr", scope: !5171, file: !44, line: 4158, type: !7)
!5171 = distinct !DILexicalBlock(scope: !5169, file: !44, line: 4158, column: 8)
!5172 = !DILocation(line: 4158, column: 8, scope: !5171)
!5173 = !DILocation(line: 4158, column: 8, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5171, file: !44, line: 4158, column: 8)
!5175 = !DILocation(line: 4158, column: 8, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5171, file: !44, line: 4158, column: 8)
!5177 = !DILocation(line: 4158, column: 8, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5171, file: !44, line: 4158, column: 8)
!5179 = distinct !{!5179, !5157, !5157}
!5180 = !DILocation(line: 4160, column: 24, scope: !5154)
!5181 = !DILocation(line: 4160, column: 26, scope: !5154)
!5182 = !DILocation(line: 4160, column: 22, scope: !5154)
!5183 = !DILocation(line: 4161, column: 13, scope: !5154)
!5184 = !DILocation(line: 4163, column: 4, scope: !3164)
!5185 = !DILocation(line: 4163, column: 4, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !3164, file: !44, line: 4163, column: 4)
!5187 = !DILocalVariable(name: "old_buffer", scope: !5188, file: !44, line: 4163, type: !81)
!5188 = distinct !DILexicalBlock(scope: !5186, file: !44, line: 4163, column: 4)
!5189 = !DILocation(line: 4163, column: 4, scope: !5188)
!5190 = !DILocation(line: 4163, column: 4, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5188, file: !44, line: 4163, column: 4)
!5192 = !DILocation(line: 4163, column: 4, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5188, file: !44, line: 4163, column: 4)
!5194 = !DILocation(line: 4163, column: 4, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5188, file: !44, line: 4163, column: 4)
!5196 = !DILocation(line: 4163, column: 4, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5188, file: !44, line: 4163, column: 4)
!5198 = !DILocalVariable(name: "incr", scope: !5199, file: !44, line: 4163, type: !7)
!5199 = distinct !DILexicalBlock(scope: !5197, file: !44, line: 4163, column: 4)
!5200 = !DILocation(line: 4163, column: 4, scope: !5199)
!5201 = !DILocation(line: 4163, column: 4, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5199, file: !44, line: 4163, column: 4)
!5203 = !DILocation(line: 4163, column: 4, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5199, file: !44, line: 4163, column: 4)
!5205 = !DILocation(line: 4163, column: 4, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5199, file: !44, line: 4163, column: 4)
!5207 = distinct !{!5207, !5185, !5185}
!5208 = !DILocation(line: 4164, column: 13, scope: !3164)
!5209 = !DILocation(line: 4164, column: 27, scope: !3164)
!5210 = !DILocation(line: 4165, column: 4, scope: !3164)
!5211 = distinct !{!5211, !3147, !5212}
!5212 = !DILocation(line: 4167, column: 5, scope: !3037)
!5213 = !DILocation(line: 4172, column: 7, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !3037, file: !44, line: 4172, column: 7)
!5215 = !DILocation(line: 4172, column: 7, scope: !3037)
!5216 = !DILocation(line: 4173, column: 5, scope: !5214)
!5217 = !DILocation(line: 4175, column: 8, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !3037, file: !44, line: 4175, column: 7)
!5219 = !DILocation(line: 4175, column: 7, scope: !3037)
!5220 = !DILocation(line: 4176, column: 5, scope: !5218)
!5221 = !DILocation(line: 4180, column: 7, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !3037, file: !44, line: 4180, column: 7)
!5223 = !DILocation(line: 4180, column: 14, scope: !5222)
!5224 = !DILocation(line: 4180, column: 7, scope: !3037)
!5225 = !DILocation(line: 4181, column: 5, scope: !5222)
!5226 = !DILocation(line: 4181, column: 5, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5222, file: !44, line: 4181, column: 5)
!5228 = !DILocalVariable(name: "old_buffer", scope: !5229, file: !44, line: 4181, type: !81)
!5229 = distinct !DILexicalBlock(scope: !5227, file: !44, line: 4181, column: 5)
!5230 = !DILocation(line: 4181, column: 5, scope: !5229)
!5231 = !DILocation(line: 4181, column: 5, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5229, file: !44, line: 4181, column: 5)
!5233 = !DILocation(line: 4181, column: 5, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5229, file: !44, line: 4181, column: 5)
!5235 = !DILocation(line: 4181, column: 5, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5229, file: !44, line: 4181, column: 5)
!5237 = !DILocation(line: 4181, column: 5, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5229, file: !44, line: 4181, column: 5)
!5239 = !DILocalVariable(name: "incr", scope: !5240, file: !44, line: 4181, type: !7)
!5240 = distinct !DILexicalBlock(scope: !5238, file: !44, line: 4181, column: 5)
!5241 = !DILocation(line: 4181, column: 5, scope: !5240)
!5242 = !DILocation(line: 4181, column: 5, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5240, file: !44, line: 4181, column: 5)
!5244 = !DILocation(line: 4181, column: 5, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5240, file: !44, line: 4181, column: 5)
!5246 = !DILocation(line: 4181, column: 5, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5240, file: !44, line: 4181, column: 5)
!5248 = distinct !{!5248, !5226, !5226}
!5249 = !DILocation(line: 4188, column: 23, scope: !3037)
!5250 = !DILocation(line: 4188, column: 9, scope: !3037)
!5251 = !DILocation(line: 4188, column: 3, scope: !3037)
!5252 = !DILocation(line: 4194, column: 16, scope: !3037)
!5253 = !DILocation(line: 4194, column: 20, scope: !3037)
!5254 = !DILocation(line: 4194, column: 26, scope: !3037)
!5255 = !DILocation(line: 4194, column: 18, scope: !3037)
!5256 = !DILocation(line: 4194, column: 3, scope: !3037)
!5257 = !DILocation(line: 4194, column: 9, scope: !3037)
!5258 = !DILocation(line: 4194, column: 14, scope: !3037)
!5259 = !DILocation(line: 4246, column: 3, scope: !3037)
!5260 = !DILocation(line: 4247, column: 1, scope: !3037)
!5261 = distinct !DISubprogram(name: "xre_comp", scope: !44, file: !44, line: 7841, type: !5262, scopeLine: 7842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!79, !101}
!5264 = !DILocalVariable(name: "s", arg: 1, scope: !5261, file: !44, line: 7841, type: !101)
!5265 = !DILocation(line: 7841, column: 22, scope: !5261)
!5266 = !DILocalVariable(name: "ret", scope: !5261, file: !44, line: 7843, type: !3013)
!5267 = !DILocation(line: 7843, column: 17, scope: !5261)
!5268 = !DILocation(line: 7845, column: 8, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5261, file: !44, line: 7845, column: 7)
!5270 = !DILocation(line: 7845, column: 7, scope: !5261)
!5271 = !DILocation(line: 7847, column: 24, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !44, line: 7847, column: 11)
!5273 = distinct !DILexicalBlock(scope: !5269, file: !44, line: 7846, column: 5)
!5274 = !DILocation(line: 7847, column: 12, scope: !5272)
!5275 = !DILocation(line: 7847, column: 11, scope: !5273)
!5276 = !DILocation(line: 7848, column: 2, scope: !5272)
!5277 = !DILocation(line: 7849, column: 7, scope: !5273)
!5278 = !DILocation(line: 7852, column: 20, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5261, file: !44, line: 7852, column: 7)
!5280 = !DILocation(line: 7852, column: 8, scope: !5279)
!5281 = !DILocation(line: 7852, column: 7, scope: !5261)
!5282 = !DILocation(line: 7854, column: 46, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5279, file: !44, line: 7853, column: 5)
!5284 = !DILocation(line: 7854, column: 26, scope: !5283)
!5285 = !DILocation(line: 7855, column: 23, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5283, file: !44, line: 7855, column: 11)
!5287 = !DILocation(line: 7855, column: 30, scope: !5286)
!5288 = !DILocation(line: 7855, column: 11, scope: !5283)
!5289 = !DILocation(line: 7856, column: 25, scope: !5286)
!5290 = !DILocation(line: 7856, column: 9, scope: !5286)
!5291 = !DILocation(line: 7857, column: 29, scope: !5283)
!5292 = !DILocation(line: 7859, column: 38, scope: !5283)
!5293 = !DILocation(line: 7859, column: 27, scope: !5283)
!5294 = !DILocation(line: 7860, column: 23, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5283, file: !44, line: 7860, column: 11)
!5296 = !DILocation(line: 7860, column: 31, scope: !5295)
!5297 = !DILocation(line: 7860, column: 11, scope: !5283)
!5298 = !DILocation(line: 7861, column: 18, scope: !5295)
!5299 = !DILocation(line: 7861, column: 2, scope: !5295)
!5300 = !DILocation(line: 7862, column: 5, scope: !5283)
!5301 = !DILocation(line: 7868, column: 30, scope: !5261)
!5302 = !DILocation(line: 7875, column: 31, scope: !5261)
!5303 = !DILocation(line: 7875, column: 42, scope: !5261)
!5304 = !DILocation(line: 7875, column: 34, scope: !5261)
!5305 = !DILocation(line: 7875, column: 46, scope: !5261)
!5306 = !DILocation(line: 7875, column: 11, scope: !5261)
!5307 = !DILocation(line: 7875, column: 9, scope: !5261)
!5308 = !DILocation(line: 7877, column: 8, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5261, file: !44, line: 7877, column: 7)
!5310 = !DILocation(line: 7877, column: 7, scope: !5261)
!5311 = !DILocation(line: 7878, column: 5, scope: !5309)
!5312 = !DILocation(line: 7881, column: 19, scope: !5261)
!5313 = !DILocation(line: 7881, column: 3, scope: !5261)
!5314 = !DILocation(line: 7882, column: 1, scope: !5261)
!5315 = distinct !DISubprogram(name: "xre_exec", scope: !44, file: !44, line: 7889, type: !5316, scopeLine: 7890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5316 = !DISubroutineType(types: !5317)
!5317 = !{!7, !101}
!5318 = !DILocalVariable(name: "s", arg: 1, scope: !5315, file: !44, line: 7889, type: !101)
!5319 = !DILocation(line: 7889, column: 22, scope: !5315)
!5320 = !DILocalVariable(name: "len", scope: !5315, file: !44, line: 7891, type: !5321)
!5321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5322 = !DILocation(line: 7891, column: 13, scope: !5315)
!5323 = !DILocation(line: 7891, column: 27, scope: !5315)
!5324 = !DILocation(line: 7891, column: 19, scope: !5315)
!5325 = !DILocation(line: 7893, column: 35, scope: !5315)
!5326 = !DILocation(line: 7893, column: 38, scope: !5315)
!5327 = !DILocation(line: 7893, column: 46, scope: !5315)
!5328 = !DILocation(line: 7893, column: 10, scope: !5315)
!5329 = !DILocation(line: 7893, column: 7, scope: !5315)
!5330 = !DILocation(line: 7892, column: 3, scope: !5315)
!5331 = distinct !DISubprogram(name: "xregcomp", scope: !44, file: !44, line: 7938, type: !5332, scopeLine: 7939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{!7, !5334, !101, !7}
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 64)
!5335 = !DIDerivedType(tag: DW_TAG_typedef, name: "regex_t", file: !6, line: 399, baseType: !136)
!5336 = !DILocalVariable(name: "preg", arg: 1, scope: !5331, file: !44, line: 7938, type: !5334)
!5337 = !DILocation(line: 7938, column: 19, scope: !5331)
!5338 = !DILocalVariable(name: "pattern", arg: 2, scope: !5331, file: !44, line: 7938, type: !101)
!5339 = !DILocation(line: 7938, column: 37, scope: !5331)
!5340 = !DILocalVariable(name: "cflags", arg: 3, scope: !5331, file: !44, line: 7938, type: !7)
!5341 = !DILocation(line: 7938, column: 50, scope: !5331)
!5342 = !DILocalVariable(name: "ret", scope: !5331, file: !44, line: 7940, type: !3013)
!5343 = !DILocation(line: 7940, column: 17, scope: !5331)
!5344 = !DILocalVariable(name: "syntax", scope: !5331, file: !44, line: 7941, type: !133)
!5345 = !DILocation(line: 7941, column: 16, scope: !5331)
!5346 = !DILocation(line: 7942, column: 8, scope: !5331)
!5347 = !DILocation(line: 7942, column: 15, scope: !5331)
!5348 = !DILocation(line: 7942, column: 7, scope: !5331)
!5349 = !DILocation(line: 7946, column: 3, scope: !5331)
!5350 = !DILocation(line: 7946, column: 9, scope: !5331)
!5351 = !DILocation(line: 7946, column: 16, scope: !5331)
!5352 = !DILocation(line: 7947, column: 3, scope: !5331)
!5353 = !DILocation(line: 7947, column: 9, scope: !5331)
!5354 = !DILocation(line: 7947, column: 19, scope: !5331)
!5355 = !DILocation(line: 7948, column: 3, scope: !5331)
!5356 = !DILocation(line: 7948, column: 9, scope: !5331)
!5357 = !DILocation(line: 7948, column: 14, scope: !5331)
!5358 = !DILocation(line: 7951, column: 28, scope: !5331)
!5359 = !DILocation(line: 7951, column: 3, scope: !5331)
!5360 = !DILocation(line: 7951, column: 9, scope: !5331)
!5361 = !DILocation(line: 7951, column: 17, scope: !5331)
!5362 = !DILocation(line: 7953, column: 7, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5331, file: !44, line: 7953, column: 7)
!5364 = !DILocation(line: 7953, column: 14, scope: !5363)
!5365 = !DILocation(line: 7953, column: 7, scope: !5331)
!5366 = !DILocalVariable(name: "i", scope: !5367, file: !44, line: 7955, type: !7)
!5367 = distinct !DILexicalBlock(scope: !5363, file: !44, line: 7954, column: 5)
!5368 = !DILocation(line: 7955, column: 11, scope: !5367)
!5369 = !DILocation(line: 7958, column: 24, scope: !5367)
!5370 = !DILocation(line: 7957, column: 7, scope: !5367)
!5371 = !DILocation(line: 7957, column: 13, scope: !5367)
!5372 = !DILocation(line: 7958, column: 2, scope: !5367)
!5373 = !DILocation(line: 7960, column: 11, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5367, file: !44, line: 7960, column: 11)
!5375 = !DILocation(line: 7960, column: 17, scope: !5374)
!5376 = !DILocation(line: 7960, column: 27, scope: !5374)
!5377 = !DILocation(line: 7960, column: 11, scope: !5367)
!5378 = !DILocation(line: 7961, column: 9, scope: !5374)
!5379 = !DILocation(line: 7964, column: 14, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5367, file: !44, line: 7964, column: 7)
!5381 = !DILocation(line: 7964, column: 12, scope: !5380)
!5382 = !DILocation(line: 7964, column: 19, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5380, file: !44, line: 7964, column: 7)
!5384 = !DILocation(line: 7964, column: 21, scope: !5383)
!5385 = !DILocation(line: 7964, column: 7, scope: !5380)
!5386 = !DILocation(line: 7965, column: 30, scope: !5383)
!5387 = !DILocation(line: 7965, column: 44, scope: !5383)
!5388 = !DILocation(line: 7965, column: 58, scope: !5383)
!5389 = !DILocation(line: 7965, column: 9, scope: !5383)
!5390 = !DILocation(line: 7965, column: 15, scope: !5383)
!5391 = !DILocation(line: 7965, column: 25, scope: !5383)
!5392 = !DILocation(line: 7965, column: 28, scope: !5383)
!5393 = !DILocation(line: 7964, column: 39, scope: !5383)
!5394 = !DILocation(line: 7964, column: 7, scope: !5383)
!5395 = distinct !{!5395, !5385, !5396}
!5396 = !DILocation(line: 7965, column: 58, scope: !5380)
!5397 = !DILocation(line: 7966, column: 5, scope: !5367)
!5398 = !DILocation(line: 7968, column: 5, scope: !5363)
!5399 = !DILocation(line: 7968, column: 11, scope: !5363)
!5400 = !DILocation(line: 7968, column: 21, scope: !5363)
!5401 = !DILocation(line: 7971, column: 7, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5331, file: !44, line: 7971, column: 7)
!5403 = !DILocation(line: 7971, column: 14, scope: !5402)
!5404 = !DILocation(line: 7971, column: 7, scope: !5331)
!5405 = !DILocation(line: 7973, column: 14, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5402, file: !44, line: 7972, column: 5)
!5407 = !DILocation(line: 7974, column: 14, scope: !5406)
!5408 = !DILocation(line: 7976, column: 7, scope: !5406)
!5409 = !DILocation(line: 7976, column: 13, scope: !5406)
!5410 = !DILocation(line: 7976, column: 28, scope: !5406)
!5411 = !DILocation(line: 7977, column: 5, scope: !5406)
!5412 = !DILocation(line: 7979, column: 5, scope: !5402)
!5413 = !DILocation(line: 7979, column: 11, scope: !5402)
!5414 = !DILocation(line: 7979, column: 26, scope: !5402)
!5415 = !DILocation(line: 7981, column: 21, scope: !5331)
!5416 = !DILocation(line: 7981, column: 28, scope: !5331)
!5417 = !DILocation(line: 7981, column: 19, scope: !5331)
!5418 = !DILocation(line: 7981, column: 18, scope: !5331)
!5419 = !DILocation(line: 7981, column: 3, scope: !5331)
!5420 = !DILocation(line: 7981, column: 9, scope: !5331)
!5421 = !DILocation(line: 7981, column: 16, scope: !5331)
!5422 = !DILocation(line: 7990, column: 31, scope: !5331)
!5423 = !DILocation(line: 7990, column: 48, scope: !5331)
!5424 = !DILocation(line: 7990, column: 40, scope: !5331)
!5425 = !DILocation(line: 7990, column: 58, scope: !5331)
!5426 = !DILocation(line: 7990, column: 66, scope: !5331)
!5427 = !DILocation(line: 7990, column: 11, scope: !5331)
!5428 = !DILocation(line: 7990, column: 9, scope: !5331)
!5429 = !DILocation(line: 7994, column: 7, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5331, file: !44, line: 7994, column: 7)
!5431 = !DILocation(line: 7994, column: 11, scope: !5430)
!5432 = !DILocation(line: 7994, column: 7, scope: !5331)
!5433 = !DILocation(line: 7994, column: 31, scope: !5430)
!5434 = !DILocation(line: 7994, column: 27, scope: !5430)
!5435 = !DILocation(line: 7996, column: 7, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5331, file: !44, line: 7996, column: 7)
!5437 = !DILocation(line: 7996, column: 11, scope: !5436)
!5438 = !DILocation(line: 7996, column: 26, scope: !5436)
!5439 = !DILocation(line: 7996, column: 29, scope: !5436)
!5440 = !DILocation(line: 7996, column: 35, scope: !5436)
!5441 = !DILocation(line: 7996, column: 7, scope: !5331)
!5442 = !DILocation(line: 8000, column: 31, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5444, file: !44, line: 8000, column: 11)
!5444 = distinct !DILexicalBlock(scope: !5436, file: !44, line: 7997, column: 5)
!5445 = !DILocation(line: 8000, column: 11, scope: !5443)
!5446 = !DILocation(line: 8000, column: 37, scope: !5443)
!5447 = !DILocation(line: 8000, column: 11, scope: !5444)
!5448 = !DILocation(line: 8004, column: 10, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5443, file: !44, line: 8001, column: 2)
!5450 = !DILocation(line: 8004, column: 16, scope: !5449)
!5451 = !DILocation(line: 8004, column: 4, scope: !5449)
!5452 = !DILocation(line: 8005, column: 4, scope: !5449)
!5453 = !DILocation(line: 8005, column: 10, scope: !5449)
!5454 = !DILocation(line: 8005, column: 18, scope: !5449)
!5455 = !DILocation(line: 8006, column: 2, scope: !5449)
!5456 = !DILocation(line: 8007, column: 5, scope: !5444)
!5457 = !DILocation(line: 8009, column: 16, scope: !5331)
!5458 = !DILocation(line: 8009, column: 3, scope: !5331)
!5459 = !DILocation(line: 8010, column: 1, scope: !5331)
!5460 = distinct !DISubprogram(name: "xregexec", scope: !44, file: !44, line: 8031, type: !5461, scopeLine: 8033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{!7, !5463, !101, !145, !5465, !7}
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5464, size: 64)
!5464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5335)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = !DIDerivedType(tag: DW_TAG_typedef, name: "regmatch_t", file: !6, line: 430, baseType: !5467)
!5467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 426, size: 64, elements: !5468)
!5468 = !{!5469, !5470}
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "rm_so", scope: !5467, file: !6, line: 428, baseType: !78, size: 32)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "rm_eo", scope: !5467, file: !6, line: 429, baseType: !78, size: 32, offset: 32)
!5471 = !DILocalVariable(name: "preg", arg: 1, scope: !5460, file: !44, line: 8031, type: !5463)
!5472 = !DILocation(line: 8031, column: 25, scope: !5460)
!5473 = !DILocalVariable(name: "string", arg: 2, scope: !5460, file: !44, line: 8031, type: !101)
!5474 = !DILocation(line: 8031, column: 43, scope: !5460)
!5475 = !DILocalVariable(name: "nmatch", arg: 3, scope: !5460, file: !44, line: 8031, type: !145)
!5476 = !DILocation(line: 8031, column: 58, scope: !5460)
!5477 = !DILocalVariable(name: "pmatch", arg: 4, scope: !5460, file: !44, line: 8032, type: !5465)
!5478 = !DILocation(line: 8032, column: 21, scope: !5460)
!5479 = !DILocalVariable(name: "eflags", arg: 5, scope: !5460, file: !44, line: 8032, type: !7)
!5480 = !DILocation(line: 8032, column: 35, scope: !5460)
!5481 = !DILocalVariable(name: "ret", scope: !5460, file: !44, line: 8034, type: !7)
!5482 = !DILocation(line: 8034, column: 7, scope: !5460)
!5483 = !DILocalVariable(name: "regs", scope: !5460, file: !44, line: 8035, type: !85)
!5484 = !DILocation(line: 8035, column: 23, scope: !5460)
!5485 = !DILocalVariable(name: "private_preg", scope: !5460, file: !44, line: 8036, type: !5335)
!5486 = !DILocation(line: 8036, column: 11, scope: !5460)
!5487 = !DILocalVariable(name: "len", scope: !5460, file: !44, line: 8037, type: !7)
!5488 = !DILocation(line: 8037, column: 7, scope: !5460)
!5489 = !DILocation(line: 8037, column: 21, scope: !5460)
!5490 = !DILocation(line: 8037, column: 13, scope: !5460)
!5491 = !DILocalVariable(name: "want_reg_info", scope: !5460, file: !44, line: 8038, type: !232)
!5492 = !DILocation(line: 8038, column: 11, scope: !5460)
!5493 = !DILocation(line: 8038, column: 28, scope: !5460)
!5494 = !DILocation(line: 8038, column: 34, scope: !5460)
!5495 = !DILocation(line: 8038, column: 41, scope: !5460)
!5496 = !DILocation(line: 8038, column: 44, scope: !5460)
!5497 = !DILocation(line: 8038, column: 51, scope: !5460)
!5498 = !DILocation(line: 0, scope: !5460)
!5499 = !DILocation(line: 8038, column: 27, scope: !5460)
!5500 = !DILocation(line: 8040, column: 19, scope: !5460)
!5501 = !DILocation(line: 8040, column: 18, scope: !5460)
!5502 = !DILocation(line: 8042, column: 29, scope: !5460)
!5503 = !DILocation(line: 8042, column: 36, scope: !5460)
!5504 = !DILocation(line: 8042, column: 27, scope: !5460)
!5505 = !DILocation(line: 8042, column: 26, scope: !5460)
!5506 = !DILocation(line: 8042, column: 16, scope: !5460)
!5507 = !DILocation(line: 8042, column: 24, scope: !5460)
!5508 = !DILocation(line: 8043, column: 29, scope: !5460)
!5509 = !DILocation(line: 8043, column: 36, scope: !5460)
!5510 = !DILocation(line: 8043, column: 27, scope: !5460)
!5511 = !DILocation(line: 8043, column: 26, scope: !5460)
!5512 = !DILocation(line: 8043, column: 16, scope: !5460)
!5513 = !DILocation(line: 8043, column: 24, scope: !5460)
!5514 = !DILocation(line: 8048, column: 16, scope: !5460)
!5515 = !DILocation(line: 8048, column: 31, scope: !5460)
!5516 = !DILocation(line: 8050, column: 7, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5460, file: !44, line: 8050, column: 7)
!5518 = !DILocation(line: 8050, column: 7, scope: !5460)
!5519 = !DILocation(line: 8052, column: 23, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5517, file: !44, line: 8051, column: 5)
!5521 = !DILocation(line: 8052, column: 12, scope: !5520)
!5522 = !DILocation(line: 8052, column: 21, scope: !5520)
!5523 = !DILocation(line: 8053, column: 20, scope: !5520)
!5524 = !DILocation(line: 8053, column: 12, scope: !5520)
!5525 = !DILocation(line: 8053, column: 18, scope: !5520)
!5526 = !DILocation(line: 8054, column: 16, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5520, file: !44, line: 8054, column: 11)
!5528 = !DILocation(line: 8054, column: 22, scope: !5527)
!5529 = !DILocation(line: 8054, column: 11, scope: !5520)
!5530 = !DILocation(line: 8055, column: 9, scope: !5527)
!5531 = !DILocation(line: 8056, column: 23, scope: !5520)
!5532 = !DILocation(line: 8056, column: 31, scope: !5520)
!5533 = !DILocation(line: 8056, column: 29, scope: !5520)
!5534 = !DILocation(line: 8056, column: 12, scope: !5520)
!5535 = !DILocation(line: 8056, column: 16, scope: !5520)
!5536 = !DILocation(line: 8057, column: 5, scope: !5520)
!5537 = !DILocation(line: 8060, column: 35, scope: !5460)
!5538 = !DILocation(line: 8060, column: 43, scope: !5460)
!5539 = !DILocation(line: 8061, column: 49, scope: !5460)
!5540 = !DILocation(line: 8062, column: 20, scope: !5460)
!5541 = !DILocation(line: 8060, column: 9, scope: !5460)
!5542 = !DILocation(line: 8060, column: 7, scope: !5460)
!5543 = !DILocation(line: 8065, column: 7, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5460, file: !44, line: 8065, column: 7)
!5545 = !DILocation(line: 8065, column: 7, scope: !5460)
!5546 = !DILocation(line: 8067, column: 11, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5548, file: !44, line: 8067, column: 11)
!5548 = distinct !DILexicalBlock(scope: !5544, file: !44, line: 8066, column: 5)
!5549 = !DILocation(line: 8067, column: 15, scope: !5547)
!5550 = !DILocation(line: 8067, column: 11, scope: !5548)
!5551 = !DILocalVariable(name: "r", scope: !5552, file: !44, line: 8069, type: !29)
!5552 = distinct !DILexicalBlock(scope: !5547, file: !44, line: 8068, column: 9)
!5553 = !DILocation(line: 8069, column: 20, scope: !5552)
!5554 = !DILocation(line: 8071, column: 18, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5552, file: !44, line: 8071, column: 11)
!5556 = !DILocation(line: 8071, column: 16, scope: !5555)
!5557 = !DILocation(line: 8071, column: 23, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5555, file: !44, line: 8071, column: 11)
!5559 = !DILocation(line: 8071, column: 27, scope: !5558)
!5560 = !DILocation(line: 8071, column: 25, scope: !5558)
!5561 = !DILocation(line: 8071, column: 11, scope: !5555)
!5562 = !DILocation(line: 8073, column: 38, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5558, file: !44, line: 8072, column: 13)
!5564 = !DILocation(line: 8073, column: 44, scope: !5563)
!5565 = !DILocation(line: 8073, column: 33, scope: !5563)
!5566 = !DILocation(line: 8073, column: 15, scope: !5563)
!5567 = !DILocation(line: 8073, column: 22, scope: !5563)
!5568 = !DILocation(line: 8073, column: 25, scope: !5563)
!5569 = !DILocation(line: 8073, column: 31, scope: !5563)
!5570 = !DILocation(line: 8074, column: 38, scope: !5563)
!5571 = !DILocation(line: 8074, column: 42, scope: !5563)
!5572 = !DILocation(line: 8074, column: 33, scope: !5563)
!5573 = !DILocation(line: 8074, column: 15, scope: !5563)
!5574 = !DILocation(line: 8074, column: 22, scope: !5563)
!5575 = !DILocation(line: 8074, column: 25, scope: !5563)
!5576 = !DILocation(line: 8074, column: 31, scope: !5563)
!5577 = !DILocation(line: 8075, column: 13, scope: !5563)
!5578 = !DILocation(line: 8071, column: 36, scope: !5558)
!5579 = !DILocation(line: 8071, column: 11, scope: !5558)
!5580 = distinct !{!5580, !5561, !5581}
!5581 = !DILocation(line: 8075, column: 13, scope: !5555)
!5582 = !DILocation(line: 8076, column: 9, scope: !5552)
!5583 = !DILocation(line: 8079, column: 18, scope: !5548)
!5584 = !DILocation(line: 8079, column: 13, scope: !5548)
!5585 = !DILocation(line: 8079, column: 7, scope: !5548)
!5586 = !DILocation(line: 8080, column: 5, scope: !5548)
!5587 = !DILocation(line: 8083, column: 10, scope: !5460)
!5588 = !DILocation(line: 8083, column: 14, scope: !5460)
!5589 = !DILocation(line: 8083, column: 3, scope: !5460)
!5590 = !DILocation(line: 8084, column: 1, scope: !5460)
!5591 = distinct !DISubprogram(name: "xregerror", scope: !44, file: !44, line: 8094, type: !5592, scopeLine: 8096, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5592 = !DISubroutineType(types: !5593)
!5593 = !{!145, !7, !5463, !79, !145}
!5594 = !DILocalVariable(name: "errcode", arg: 1, scope: !5591, file: !44, line: 8094, type: !7)
!5595 = !DILocation(line: 8094, column: 15, scope: !5591)
!5596 = !DILocalVariable(name: "preg", arg: 2, scope: !5591, file: !44, line: 8094, type: !5463)
!5597 = !DILocation(line: 8094, column: 39, scope: !5591)
!5598 = !DILocalVariable(name: "errbuf", arg: 3, scope: !5591, file: !44, line: 8095, type: !79)
!5599 = !DILocation(line: 8095, column: 17, scope: !5591)
!5600 = !DILocalVariable(name: "errbuf_size", arg: 4, scope: !5591, file: !44, line: 8095, type: !145)
!5601 = !DILocation(line: 8095, column: 32, scope: !5591)
!5602 = !DILocalVariable(name: "msg", scope: !5591, file: !44, line: 8097, type: !101)
!5603 = !DILocation(line: 8097, column: 15, scope: !5591)
!5604 = !DILocalVariable(name: "msg_size", scope: !5591, file: !44, line: 8098, type: !145)
!5605 = !DILocation(line: 8098, column: 10, scope: !5591)
!5606 = !DILocation(line: 8100, column: 7, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5591, file: !44, line: 8100, column: 7)
!5608 = !DILocation(line: 8100, column: 15, scope: !5607)
!5609 = !DILocation(line: 8101, column: 7, scope: !5607)
!5610 = !DILocation(line: 8101, column: 10, scope: !5607)
!5611 = !DILocation(line: 8101, column: 18, scope: !5607)
!5612 = !DILocation(line: 8100, column: 7, scope: !5591)
!5613 = !DILocation(line: 8107, column: 5, scope: !5607)
!5614 = !DILocation(line: 8109, column: 9, scope: !5591)
!5615 = !DILocation(line: 8109, column: 7, scope: !5591)
!5616 = !DILocation(line: 8111, column: 22, scope: !5591)
!5617 = !DILocation(line: 8111, column: 14, scope: !5591)
!5618 = !DILocation(line: 8111, column: 27, scope: !5591)
!5619 = !DILocation(line: 8111, column: 12, scope: !5591)
!5620 = !DILocation(line: 8113, column: 7, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5591, file: !44, line: 8113, column: 7)
!5622 = !DILocation(line: 8113, column: 19, scope: !5621)
!5623 = !DILocation(line: 8113, column: 7, scope: !5591)
!5624 = !DILocation(line: 8115, column: 11, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !44, line: 8115, column: 11)
!5626 = distinct !DILexicalBlock(scope: !5621, file: !44, line: 8114, column: 5)
!5627 = !DILocation(line: 8115, column: 22, scope: !5625)
!5628 = !DILocation(line: 8115, column: 20, scope: !5625)
!5629 = !DILocation(line: 8115, column: 11, scope: !5626)
!5630 = !DILocation(line: 8120, column: 19, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5625, file: !44, line: 8116, column: 9)
!5632 = !DILocation(line: 8120, column: 27, scope: !5631)
!5633 = !DILocation(line: 8120, column: 32, scope: !5631)
!5634 = !DILocation(line: 8120, column: 44, scope: !5631)
!5635 = !DILocation(line: 8120, column: 11, scope: !5631)
!5636 = !DILocation(line: 8121, column: 11, scope: !5631)
!5637 = !DILocation(line: 8121, column: 18, scope: !5631)
!5638 = !DILocation(line: 8121, column: 30, scope: !5631)
!5639 = !DILocation(line: 8121, column: 35, scope: !5631)
!5640 = !DILocation(line: 8123, column: 9, scope: !5631)
!5641 = !DILocation(line: 8125, column: 17, scope: !5625)
!5642 = !DILocation(line: 8125, column: 25, scope: !5625)
!5643 = !DILocation(line: 8125, column: 30, scope: !5625)
!5644 = !DILocation(line: 8125, column: 9, scope: !5625)
!5645 = !DILocation(line: 8126, column: 5, scope: !5626)
!5646 = !DILocation(line: 8128, column: 10, scope: !5591)
!5647 = !DILocation(line: 8128, column: 3, scope: !5591)
!5648 = distinct !DISubprogram(name: "xregfree", scope: !44, file: !44, line: 8138, type: !5649, scopeLine: 8139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{null, !5334}
!5651 = !DILocalVariable(name: "preg", arg: 1, scope: !5648, file: !44, line: 8138, type: !5334)
!5652 = !DILocation(line: 8138, column: 19, scope: !5648)
!5653 = !DILocation(line: 8140, column: 7, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5648, file: !44, line: 8140, column: 7)
!5655 = !DILocation(line: 8140, column: 13, scope: !5654)
!5656 = !DILocation(line: 8140, column: 20, scope: !5654)
!5657 = !DILocation(line: 8140, column: 7, scope: !5648)
!5658 = !DILocation(line: 8141, column: 11, scope: !5654)
!5659 = !DILocation(line: 8141, column: 17, scope: !5654)
!5660 = !DILocation(line: 8141, column: 5, scope: !5654)
!5661 = !DILocation(line: 8142, column: 3, scope: !5648)
!5662 = !DILocation(line: 8142, column: 9, scope: !5648)
!5663 = !DILocation(line: 8142, column: 16, scope: !5648)
!5664 = !DILocation(line: 8144, column: 3, scope: !5648)
!5665 = !DILocation(line: 8144, column: 9, scope: !5648)
!5666 = !DILocation(line: 8144, column: 19, scope: !5648)
!5667 = !DILocation(line: 8145, column: 3, scope: !5648)
!5668 = !DILocation(line: 8145, column: 9, scope: !5648)
!5669 = !DILocation(line: 8145, column: 14, scope: !5648)
!5670 = !DILocation(line: 8147, column: 7, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5648, file: !44, line: 8147, column: 7)
!5672 = !DILocation(line: 8147, column: 13, scope: !5671)
!5673 = !DILocation(line: 8147, column: 21, scope: !5671)
!5674 = !DILocation(line: 8147, column: 7, scope: !5648)
!5675 = !DILocation(line: 8148, column: 11, scope: !5671)
!5676 = !DILocation(line: 8148, column: 17, scope: !5671)
!5677 = !DILocation(line: 8148, column: 5, scope: !5671)
!5678 = !DILocation(line: 8149, column: 3, scope: !5648)
!5679 = !DILocation(line: 8149, column: 9, scope: !5648)
!5680 = !DILocation(line: 8149, column: 17, scope: !5648)
!5681 = !DILocation(line: 8150, column: 3, scope: !5648)
!5682 = !DILocation(line: 8150, column: 9, scope: !5648)
!5683 = !DILocation(line: 8150, column: 26, scope: !5648)
!5684 = !DILocation(line: 8152, column: 7, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5648, file: !44, line: 8152, column: 7)
!5686 = !DILocation(line: 8152, column: 13, scope: !5685)
!5687 = !DILocation(line: 8152, column: 23, scope: !5685)
!5688 = !DILocation(line: 8152, column: 7, scope: !5648)
!5689 = !DILocation(line: 8153, column: 11, scope: !5685)
!5690 = !DILocation(line: 8153, column: 17, scope: !5685)
!5691 = !DILocation(line: 8153, column: 5, scope: !5685)
!5692 = !DILocation(line: 8154, column: 3, scope: !5648)
!5693 = !DILocation(line: 8154, column: 9, scope: !5648)
!5694 = !DILocation(line: 8154, column: 19, scope: !5648)
!5695 = !DILocation(line: 8155, column: 1, scope: !5648)
!5696 = distinct !DISubprogram(name: "byte_group_match_null_string_p", scope: !44, file: !44, line: 7526, type: !5697, scopeLine: 7528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5697 = !DISubroutineType(types: !5698)
!5698 = !{!232, !5699, !81, !103}
!5699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!5700 = !DILocalVariable(name: "p", arg: 1, scope: !5696, file: !44, line: 7526, type: !5699)
!5701 = !DILocation(line: 7526, column: 46, scope: !5696)
!5702 = !DILocalVariable(name: "end", arg: 2, scope: !5696, file: !44, line: 7526, type: !81)
!5703 = !DILocation(line: 7526, column: 58, scope: !5696)
!5704 = !DILocalVariable(name: "reg_info", arg: 3, scope: !5696, file: !44, line: 7527, type: !103)
!5705 = !DILocation(line: 7527, column: 64, scope: !5696)
!5706 = !DILocalVariable(name: "mcnt", scope: !5696, file: !44, line: 7529, type: !7)
!5707 = !DILocation(line: 7529, column: 7, scope: !5696)
!5708 = !DILocalVariable(name: "p1", scope: !5696, file: !44, line: 7531, type: !81)
!5709 = !DILocation(line: 7531, column: 12, scope: !5696)
!5710 = !DILocation(line: 7531, column: 18, scope: !5696)
!5711 = !DILocation(line: 7531, column: 17, scope: !5696)
!5712 = !DILocation(line: 7531, column: 20, scope: !5696)
!5713 = !DILocation(line: 7533, column: 3, scope: !5696)
!5714 = !DILocation(line: 7533, column: 10, scope: !5696)
!5715 = !DILocation(line: 7533, column: 15, scope: !5696)
!5716 = !DILocation(line: 7533, column: 13, scope: !5696)
!5717 = !DILocation(line: 7539, column: 30, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5696, file: !44, line: 7534, column: 5)
!5719 = !DILocation(line: 7539, column: 29, scope: !5718)
!5720 = !DILocation(line: 7539, column: 15, scope: !5718)
!5721 = !DILocation(line: 7539, column: 7, scope: !5718)
!5722 = !DILocation(line: 7543, column: 13, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5718, file: !44, line: 7540, column: 9)
!5724 = !DILocation(line: 7544, column: 11, scope: !5723)
!5725 = !DILocation(line: 7544, column: 11, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5723, file: !44, line: 7544, column: 11)
!5727 = !DILocation(line: 7544, column: 11, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5726, file: !44, line: 7544, column: 11)
!5729 = !DILocation(line: 7549, column: 8, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5723, file: !44, line: 7549, column: 8)
!5731 = !DILocation(line: 7549, column: 13, scope: !5730)
!5732 = !DILocation(line: 7549, column: 8, scope: !5723)
!5733 = !DILocation(line: 7569, column: 15, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5730, file: !44, line: 7550, column: 6)
!5735 = !DILocation(line: 7569, column: 36, scope: !5734)
!5736 = !DILocation(line: 7569, column: 39, scope: !5734)
!5737 = !DILocation(line: 7569, column: 43, scope: !5734)
!5738 = !DILocation(line: 7569, column: 22, scope: !5734)
!5739 = !DILocation(line: 7569, column: 69, scope: !5734)
!5740 = !DILocation(line: 7576, column: 57, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !44, line: 7576, column: 23)
!5742 = distinct !DILexicalBlock(scope: !5734, file: !44, line: 7571, column: 17)
!5743 = !DILocation(line: 7576, column: 61, scope: !5741)
!5744 = !DILocation(line: 7576, column: 66, scope: !5741)
!5745 = !DILocation(line: 7576, column: 64, scope: !5741)
!5746 = !DILocation(line: 7576, column: 71, scope: !5741)
!5747 = !DILocation(line: 7578, column: 7, scope: !5741)
!5748 = !DILocation(line: 7576, column: 24, scope: !5741)
!5749 = !DILocation(line: 7576, column: 23, scope: !5742)
!5750 = !DILocation(line: 7579, column: 21, scope: !5741)
!5751 = !DILocation(line: 7583, column: 25, scope: !5742)
!5752 = !DILocation(line: 7583, column: 22, scope: !5742)
!5753 = !DILocation(line: 7587, column: 38, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5742, file: !44, line: 7587, column: 23)
!5755 = !DILocation(line: 7587, column: 37, scope: !5754)
!5756 = !DILocation(line: 7587, column: 23, scope: !5754)
!5757 = !DILocation(line: 7587, column: 41, scope: !5754)
!5758 = !DILocation(line: 7587, column: 23, scope: !5742)
!5759 = !DILocation(line: 7588, column: 21, scope: !5754)
!5760 = !DILocation(line: 7592, column: 7, scope: !5742)
!5761 = !DILocation(line: 7593, column: 19, scope: !5742)
!5762 = !DILocation(line: 7593, column: 19, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5742, file: !44, line: 7593, column: 19)
!5764 = !DILocation(line: 7593, column: 19, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5763, file: !44, line: 7593, column: 19)
!5766 = !DILocation(line: 7594, column: 37, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5742, file: !44, line: 7594, column: 23)
!5768 = !DILocation(line: 7594, column: 40, scope: !5767)
!5769 = !DILocation(line: 7594, column: 44, scope: !5767)
!5770 = !DILocation(line: 7594, column: 23, scope: !5767)
!5771 = !DILocation(line: 7594, column: 70, scope: !5767)
!5772 = !DILocation(line: 7594, column: 23, scope: !5742)
!5773 = !DILocation(line: 7598, column: 26, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5767, file: !44, line: 7596, column: 21)
!5775 = !DILocation(line: 7599, column: 23, scope: !5774)
!5776 = distinct !{!5776, !5733, !5777}
!5777 = !DILocation(line: 7601, column: 17, scope: !5734)
!5778 = !DILocation(line: 7606, column: 15, scope: !5734)
!5779 = !DILocation(line: 7606, column: 15, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5734, file: !44, line: 7606, column: 15)
!5781 = !DILocation(line: 7608, column: 53, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5734, file: !44, line: 7608, column: 19)
!5783 = !DILocation(line: 7608, column: 57, scope: !5782)
!5784 = !DILocation(line: 7608, column: 62, scope: !5782)
!5785 = !DILocation(line: 7608, column: 60, scope: !5782)
!5786 = !DILocation(line: 7608, column: 68, scope: !5782)
!5787 = !DILocation(line: 7608, column: 20, scope: !5782)
!5788 = !DILocation(line: 7608, column: 19, scope: !5734)
!5789 = !DILocation(line: 7609, column: 17, scope: !5782)
!5790 = !DILocation(line: 7611, column: 21, scope: !5734)
!5791 = !DILocation(line: 7611, column: 18, scope: !5734)
!5792 = !DILocation(line: 7612, column: 13, scope: !5734)
!5793 = !DILocation(line: 7613, column: 11, scope: !5723)
!5794 = !DILocation(line: 7618, column: 16, scope: !5723)
!5795 = !DILocation(line: 7618, column: 19, scope: !5723)
!5796 = !DILocation(line: 7618, column: 12, scope: !5723)
!5797 = !DILocation(line: 7618, column: 14, scope: !5723)
!5798 = !DILocation(line: 7619, column: 11, scope: !5723)
!5799 = !DILocation(line: 7623, column: 60, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5723, file: !44, line: 7623, column: 15)
!5801 = !DILocation(line: 7623, column: 65, scope: !5800)
!5802 = !DILocation(line: 7623, column: 16, scope: !5800)
!5803 = !DILocation(line: 7623, column: 15, scope: !5723)
!5804 = !DILocation(line: 7624, column: 13, scope: !5800)
!5805 = !DILocation(line: 7625, column: 9, scope: !5723)
!5806 = distinct !{!5806, !5713, !5807}
!5807 = !DILocation(line: 7626, column: 5, scope: !5696)
!5808 = !DILocation(line: 7628, column: 3, scope: !5696)
!5809 = !DILocation(line: 7629, column: 1, scope: !5696)
!5810 = distinct !DISubprogram(name: "byte_bcmp_translate", scope: !44, file: !44, line: 7760, type: !5811, scopeLine: 7762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5811 = !DISubroutineType(types: !5812)
!5812 = !{!7, !101, !101, !7, !79}
!5813 = !DILocalVariable(name: "s1", arg: 1, scope: !5810, file: !44, line: 7760, type: !101)
!5814 = !DILocation(line: 7760, column: 39, scope: !5810)
!5815 = !DILocalVariable(name: "s2", arg: 2, scope: !5810, file: !44, line: 7760, type: !101)
!5816 = !DILocation(line: 7760, column: 57, scope: !5810)
!5817 = !DILocalVariable(name: "len", arg: 3, scope: !5810, file: !44, line: 7760, type: !7)
!5818 = !DILocation(line: 7760, column: 74, scope: !5810)
!5819 = !DILocalVariable(name: "translate", arg: 4, scope: !5810, file: !44, line: 7761, type: !79)
!5820 = !DILocation(line: 7761, column: 43, scope: !5810)
!5821 = !DILocalVariable(name: "p1", scope: !5810, file: !44, line: 7763, type: !116)
!5822 = !DILocation(line: 7763, column: 27, scope: !5810)
!5823 = !DILocation(line: 7763, column: 50, scope: !5810)
!5824 = !DILocalVariable(name: "p2", scope: !5810, file: !44, line: 7764, type: !116)
!5825 = !DILocation(line: 7764, column: 27, scope: !5810)
!5826 = !DILocation(line: 7764, column: 50, scope: !5810)
!5827 = !DILocation(line: 7765, column: 3, scope: !5810)
!5828 = !DILocation(line: 7765, column: 10, scope: !5810)
!5829 = !DILocation(line: 7772, column: 11, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !44, line: 7772, column: 11)
!5831 = distinct !DILexicalBlock(scope: !5810, file: !44, line: 7766, column: 5)
!5832 = !DILocation(line: 7772, column: 24, scope: !5830)
!5833 = !DILocation(line: 7772, column: 21, scope: !5830)
!5834 = !DILocation(line: 7772, column: 31, scope: !5830)
!5835 = !DILocation(line: 7772, column: 44, scope: !5830)
!5836 = !DILocation(line: 7772, column: 41, scope: !5830)
!5837 = !DILocation(line: 7772, column: 28, scope: !5830)
!5838 = !DILocation(line: 7772, column: 11, scope: !5831)
!5839 = !DILocation(line: 7772, column: 49, scope: !5830)
!5840 = !DILocation(line: 7774, column: 10, scope: !5831)
!5841 = distinct !{!5841, !5827, !5842}
!5842 = !DILocation(line: 7775, column: 5, scope: !5810)
!5843 = !DILocation(line: 7776, column: 3, scope: !5810)
!5844 = !DILocation(line: 7777, column: 1, scope: !5810)
!5845 = distinct !DISubprogram(name: "byte_alt_match_null_string_p", scope: !44, file: !44, line: 7637, type: !5846, scopeLine: 7639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!232, !81, !81, !103}
!5848 = !DILocalVariable(name: "p", arg: 1, scope: !5845, file: !44, line: 7637, type: !81)
!5849 = !DILocation(line: 7637, column: 43, scope: !5845)
!5850 = !DILocalVariable(name: "end", arg: 2, scope: !5845, file: !44, line: 7637, type: !81)
!5851 = !DILocation(line: 7637, column: 55, scope: !5845)
!5852 = !DILocalVariable(name: "reg_info", arg: 3, scope: !5845, file: !44, line: 7638, type: !103)
!5853 = !DILocation(line: 7638, column: 62, scope: !5845)
!5854 = !DILocalVariable(name: "mcnt", scope: !5845, file: !44, line: 7640, type: !7)
!5855 = !DILocation(line: 7640, column: 7, scope: !5845)
!5856 = !DILocalVariable(name: "p1", scope: !5845, file: !44, line: 7641, type: !81)
!5857 = !DILocation(line: 7641, column: 12, scope: !5845)
!5858 = !DILocation(line: 7641, column: 17, scope: !5845)
!5859 = !DILocation(line: 7643, column: 3, scope: !5845)
!5860 = !DILocation(line: 7643, column: 10, scope: !5845)
!5861 = !DILocation(line: 7643, column: 15, scope: !5845)
!5862 = !DILocation(line: 7643, column: 13, scope: !5845)
!5863 = !DILocation(line: 7648, column: 30, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5845, file: !44, line: 7644, column: 5)
!5865 = !DILocation(line: 7648, column: 29, scope: !5864)
!5866 = !DILocation(line: 7648, column: 15, scope: !5864)
!5867 = !DILocation(line: 7648, column: 7, scope: !5864)
!5868 = !DILocation(line: 7652, column: 13, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5864, file: !44, line: 7649, column: 9)
!5870 = !DILocation(line: 7653, column: 11, scope: !5869)
!5871 = !DILocation(line: 7653, column: 11, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5869, file: !44, line: 7653, column: 11)
!5873 = !DILocation(line: 7653, column: 11, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5872, file: !44, line: 7653, column: 11)
!5875 = !DILocation(line: 7654, column: 17, scope: !5869)
!5876 = !DILocation(line: 7654, column: 14, scope: !5869)
!5877 = !DILocation(line: 7655, column: 11, scope: !5869)
!5878 = !DILocation(line: 7658, column: 60, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5869, file: !44, line: 7658, column: 15)
!5880 = !DILocation(line: 7658, column: 65, scope: !5879)
!5881 = !DILocation(line: 7658, column: 16, scope: !5879)
!5882 = !DILocation(line: 7658, column: 15, scope: !5869)
!5883 = !DILocation(line: 7659, column: 13, scope: !5879)
!5884 = !DILocation(line: 7660, column: 9, scope: !5869)
!5885 = distinct !{!5885, !5859, !5886}
!5886 = !DILocation(line: 7661, column: 5, scope: !5845)
!5887 = !DILocation(line: 7663, column: 3, scope: !5845)
!5888 = !DILocation(line: 7664, column: 1, scope: !5845)
!5889 = distinct !DISubprogram(name: "byte_common_op_match_null_string_p", scope: !44, file: !44, line: 7673, type: !5697, scopeLine: 7675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!5890 = !DILocalVariable(name: "p", arg: 1, scope: !5889, file: !44, line: 7673, type: !5699)
!5891 = !DILocation(line: 7673, column: 50, scope: !5889)
!5892 = !DILocalVariable(name: "end", arg: 2, scope: !5889, file: !44, line: 7673, type: !81)
!5893 = !DILocation(line: 7673, column: 62, scope: !5889)
!5894 = !DILocalVariable(name: "reg_info", arg: 3, scope: !5889, file: !44, line: 7674, type: !103)
!5895 = !DILocation(line: 7674, column: 68, scope: !5889)
!5896 = !DILocalVariable(name: "mcnt", scope: !5889, file: !44, line: 7676, type: !7)
!5897 = !DILocation(line: 7676, column: 7, scope: !5889)
!5898 = !DILocalVariable(name: "ret", scope: !5889, file: !44, line: 7677, type: !232)
!5899 = !DILocation(line: 7677, column: 11, scope: !5889)
!5900 = !DILocalVariable(name: "reg_no", scope: !5889, file: !44, line: 7678, type: !7)
!5901 = !DILocation(line: 7678, column: 7, scope: !5889)
!5902 = !DILocalVariable(name: "p1", scope: !5889, file: !44, line: 7679, type: !81)
!5903 = !DILocation(line: 7679, column: 12, scope: !5889)
!5904 = !DILocation(line: 7679, column: 18, scope: !5889)
!5905 = !DILocation(line: 7679, column: 17, scope: !5889)
!5906 = !DILocation(line: 7681, column: 28, scope: !5889)
!5907 = !DILocation(line: 7681, column: 25, scope: !5889)
!5908 = !DILocation(line: 7681, column: 11, scope: !5889)
!5909 = !DILocation(line: 7681, column: 3, scope: !5889)
!5910 = !DILocation(line: 7697, column: 7, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5889, file: !44, line: 7682, column: 5)
!5912 = !DILocation(line: 7700, column: 17, scope: !5911)
!5913 = !DILocation(line: 7700, column: 16, scope: !5911)
!5914 = !DILocation(line: 7700, column: 14, scope: !5911)
!5915 = !DILocation(line: 7702, column: 53, scope: !5911)
!5916 = !DILocation(line: 7702, column: 58, scope: !5911)
!5917 = !DILocation(line: 7702, column: 13, scope: !5911)
!5918 = !DILocation(line: 7702, column: 11, scope: !5911)
!5919 = !DILocation(line: 7707, column: 11, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5911, file: !44, line: 7707, column: 11)
!5921 = !DILocation(line: 7707, column: 54, scope: !5920)
!5922 = !DILocation(line: 7707, column: 11, scope: !5911)
!5923 = !DILocation(line: 7708, column: 54, scope: !5920)
!5924 = !DILocation(line: 7708, column: 9, scope: !5920)
!5925 = !DILocation(line: 7708, column: 52, scope: !5920)
!5926 = !DILocation(line: 7710, column: 12, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5911, file: !44, line: 7710, column: 11)
!5928 = !DILocation(line: 7710, column: 11, scope: !5911)
!5929 = !DILocation(line: 7711, column: 9, scope: !5927)
!5930 = !DILocation(line: 7712, column: 7, scope: !5911)
!5931 = !DILocation(line: 7716, column: 7, scope: !5911)
!5932 = !DILocation(line: 7716, column: 7, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5911, file: !44, line: 7716, column: 7)
!5934 = !DILocation(line: 7716, column: 7, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5933, file: !44, line: 7716, column: 7)
!5936 = !DILocation(line: 7717, column: 11, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5911, file: !44, line: 7717, column: 11)
!5938 = !DILocation(line: 7717, column: 16, scope: !5937)
!5939 = !DILocation(line: 7717, column: 11, scope: !5911)
!5940 = !DILocation(line: 7718, column: 15, scope: !5937)
!5941 = !DILocation(line: 7718, column: 12, scope: !5937)
!5942 = !DILocation(line: 7718, column: 9, scope: !5937)
!5943 = !DILocation(line: 7720, column: 9, scope: !5937)
!5944 = !DILocation(line: 7721, column: 7, scope: !5911)
!5945 = !DILocation(line: 7725, column: 10, scope: !5911)
!5946 = !DILocation(line: 7726, column: 7, scope: !5911)
!5947 = !DILocation(line: 7726, column: 7, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5911, file: !44, line: 7726, column: 7)
!5949 = !DILocation(line: 7726, column: 7, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5948, file: !44, line: 7726, column: 7)
!5951 = !DILocation(line: 7728, column: 11, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5911, file: !44, line: 7728, column: 11)
!5953 = !DILocation(line: 7728, column: 16, scope: !5952)
!5954 = !DILocation(line: 7728, column: 11, scope: !5911)
!5955 = !DILocation(line: 7730, column: 14, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5952, file: !44, line: 7729, column: 9)
!5957 = !DILocation(line: 7731, column: 11, scope: !5956)
!5958 = !DILocation(line: 7731, column: 11, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5956, file: !44, line: 7731, column: 11)
!5960 = !DILocation(line: 7731, column: 11, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5959, file: !44, line: 7731, column: 11)
!5962 = !DILocation(line: 7732, column: 17, scope: !5956)
!5963 = !DILocation(line: 7732, column: 14, scope: !5956)
!5964 = !DILocation(line: 7733, column: 9, scope: !5956)
!5965 = !DILocation(line: 7735, column: 9, scope: !5952)
!5966 = !DILocation(line: 7736, column: 7, scope: !5911)
!5967 = !DILocation(line: 7739, column: 12, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5911, file: !44, line: 7739, column: 11)
!5969 = !DILocation(line: 7739, column: 11, scope: !5911)
!5970 = !DILocation(line: 7740, column: 9, scope: !5968)
!5971 = !DILocation(line: 7741, column: 7, scope: !5911)
!5972 = !DILocation(line: 7744, column: 10, scope: !5911)
!5973 = !DILocation(line: 7744, column: 7, scope: !5911)
!5974 = !DILocation(line: 7748, column: 7, scope: !5911)
!5975 = !DILocation(line: 7751, column: 8, scope: !5889)
!5976 = !DILocation(line: 7751, column: 4, scope: !5889)
!5977 = !DILocation(line: 7751, column: 6, scope: !5889)
!5978 = !DILocation(line: 7752, column: 3, scope: !5889)
!5979 = !DILocation(line: 7753, column: 1, scope: !5889)
!5980 = !DILocalVariable(name: "c", scope: !163, file: !44, line: 305, type: !7)
!5981 = !DILocation(line: 305, column: 17, scope: !163)
!5982 = !DILocation(line: 308, column: 8, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !163, file: !44, line: 308, column: 8)
!5984 = !DILocation(line: 308, column: 8, scope: !163)
!5985 = !DILocation(line: 309, column: 6, scope: !5983)
!5986 = !DILocation(line: 310, column: 4, scope: !163)
!5987 = !DILocation(line: 312, column: 11, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !163, file: !44, line: 312, column: 4)
!5989 = !DILocation(line: 312, column: 9, scope: !5988)
!5990 = !DILocation(line: 312, column: 16, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5988, file: !44, line: 312, column: 4)
!5992 = !DILocation(line: 312, column: 18, scope: !5991)
!5993 = !DILocation(line: 312, column: 4, scope: !5988)
!5994 = !DILocation(line: 313, column: 10, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5991, file: !44, line: 313, column: 10)
!5996 = !DILocation(line: 313, column: 10, scope: !5991)
!5997 = !DILocation(line: 314, column: 18, scope: !5995)
!5998 = !DILocation(line: 314, column: 2, scope: !5995)
!5999 = !DILocation(line: 314, column: 21, scope: !5995)
!6000 = !DILocation(line: 312, column: 35, scope: !5991)
!6001 = !DILocation(line: 312, column: 4, scope: !5991)
!6002 = distinct !{!6002, !5993, !6003}
!6003 = !DILocation(line: 314, column: 23, scope: !5988)
!6004 = !DILocation(line: 316, column: 25, scope: !163)
!6005 = !DILocation(line: 318, column: 9, scope: !163)
!6006 = !DILocation(line: 319, column: 1, scope: !163)
!6007 = distinct !DISubprogram(name: "byte_at_begline_loc_p", scope: !44, file: !44, line: 4313, type: !6008, scopeLine: 4315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!232, !101, !101, !133}
!6010 = !DILocalVariable(name: "pattern", arg: 1, scope: !6007, file: !44, line: 4313, type: !101)
!6011 = !DILocation(line: 4313, column: 41, scope: !6007)
!6012 = !DILocalVariable(name: "p", arg: 2, scope: !6007, file: !44, line: 4313, type: !101)
!6013 = !DILocation(line: 4313, column: 64, scope: !6007)
!6014 = !DILocalVariable(name: "syntax", arg: 3, scope: !6007, file: !44, line: 4314, type: !133)
!6015 = !DILocation(line: 4314, column: 40, scope: !6007)
!6016 = !DILocalVariable(name: "prev", scope: !6007, file: !44, line: 4316, type: !101)
!6017 = !DILocation(line: 4316, column: 17, scope: !6007)
!6018 = !DILocation(line: 4316, column: 24, scope: !6007)
!6019 = !DILocation(line: 4316, column: 26, scope: !6007)
!6020 = !DILocalVariable(name: "prev_prev_backslash", scope: !6007, file: !44, line: 4317, type: !232)
!6021 = !DILocation(line: 4317, column: 11, scope: !6007)
!6022 = !DILocation(line: 4317, column: 33, scope: !6007)
!6023 = !DILocation(line: 4317, column: 40, scope: !6007)
!6024 = !DILocation(line: 4317, column: 38, scope: !6007)
!6025 = !DILocation(line: 4317, column: 48, scope: !6007)
!6026 = !DILocation(line: 4317, column: 51, scope: !6007)
!6027 = !DILocation(line: 4317, column: 60, scope: !6007)
!6028 = !DILocation(line: 0, scope: !6007)
!6029 = !DILocation(line: 4321, column: 10, scope: !6007)
!6030 = !DILocation(line: 4321, column: 9, scope: !6007)
!6031 = !DILocation(line: 4321, column: 15, scope: !6007)
!6032 = !DILocation(line: 4321, column: 22, scope: !6007)
!6033 = !DILocation(line: 4321, column: 26, scope: !6007)
!6034 = !DILocation(line: 4321, column: 33, scope: !6007)
!6035 = !DILocation(line: 4321, column: 51, scope: !6007)
!6036 = !DILocation(line: 4321, column: 54, scope: !6007)
!6037 = !DILocation(line: 4323, column: 5, scope: !6007)
!6038 = !DILocation(line: 4323, column: 10, scope: !6007)
!6039 = !DILocation(line: 4323, column: 9, scope: !6007)
!6040 = !DILocation(line: 4323, column: 15, scope: !6007)
!6041 = !DILocation(line: 4323, column: 22, scope: !6007)
!6042 = !DILocation(line: 4323, column: 26, scope: !6007)
!6043 = !DILocation(line: 4323, column: 33, scope: !6007)
!6044 = !DILocation(line: 4323, column: 49, scope: !6007)
!6045 = !DILocation(line: 4323, column: 52, scope: !6007)
!6046 = !DILocation(line: 4321, column: 8, scope: !6007)
!6047 = !DILocation(line: 4319, column: 3, scope: !6007)
!6048 = distinct !DISubprogram(name: "byte_at_endline_loc_p", scope: !44, file: !44, line: 4331, type: !6008, scopeLine: 4333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!6049 = !DILocalVariable(name: "p", arg: 1, scope: !6048, file: !44, line: 4331, type: !101)
!6050 = !DILocation(line: 4331, column: 41, scope: !6048)
!6051 = !DILocalVariable(name: "pend", arg: 2, scope: !6048, file: !44, line: 4331, type: !101)
!6052 = !DILocation(line: 4331, column: 58, scope: !6048)
!6053 = !DILocalVariable(name: "syntax", arg: 3, scope: !6048, file: !44, line: 4332, type: !133)
!6054 = !DILocation(line: 4332, column: 40, scope: !6048)
!6055 = !DILocalVariable(name: "next", scope: !6048, file: !44, line: 4334, type: !101)
!6056 = !DILocation(line: 4334, column: 17, scope: !6048)
!6057 = !DILocation(line: 4334, column: 24, scope: !6048)
!6058 = !DILocalVariable(name: "next_backslash", scope: !6048, file: !44, line: 4335, type: !232)
!6059 = !DILocation(line: 4335, column: 11, scope: !6048)
!6060 = !DILocation(line: 4335, column: 29, scope: !6048)
!6061 = !DILocation(line: 4335, column: 28, scope: !6048)
!6062 = !DILocation(line: 4335, column: 34, scope: !6048)
!6063 = !DILocalVariable(name: "next_next", scope: !6048, file: !44, line: 4336, type: !101)
!6064 = !DILocation(line: 4336, column: 17, scope: !6048)
!6065 = !DILocation(line: 4336, column: 29, scope: !6048)
!6066 = !DILocation(line: 4336, column: 31, scope: !6048)
!6067 = !DILocation(line: 4336, column: 37, scope: !6048)
!6068 = !DILocation(line: 4336, column: 35, scope: !6048)
!6069 = !DILocation(line: 4336, column: 44, scope: !6048)
!6070 = !DILocation(line: 4336, column: 46, scope: !6048)
!6071 = !DILocation(line: 4340, column: 9, scope: !6048)
!6072 = !DILocation(line: 4340, column: 16, scope: !6048)
!6073 = !DILocation(line: 4343, column: 5, scope: !6048)
!6074 = !DILocation(line: 4340, column: 37, scope: !6048)
!6075 = !DILocation(line: 4340, column: 36, scope: !6048)
!6076 = !DILocation(line: 4340, column: 42, scope: !6048)
!6077 = !DILocation(line: 4341, column: 11, scope: !6048)
!6078 = !DILocation(line: 4341, column: 26, scope: !6048)
!6079 = !DILocation(line: 4341, column: 29, scope: !6048)
!6080 = !DILocation(line: 4341, column: 39, scope: !6048)
!6081 = !DILocation(line: 4341, column: 43, scope: !6048)
!6082 = !DILocation(line: 4341, column: 42, scope: !6048)
!6083 = !DILocation(line: 4341, column: 53, scope: !6048)
!6084 = !DILocation(line: 4343, column: 9, scope: !6048)
!6085 = !DILocation(line: 4343, column: 16, scope: !6048)
!6086 = !DILocation(line: 4343, column: 35, scope: !6048)
!6087 = !DILocation(line: 4343, column: 34, scope: !6048)
!6088 = !DILocation(line: 4343, column: 40, scope: !6048)
!6089 = !DILocation(line: 4344, column: 11, scope: !6048)
!6090 = !DILocation(line: 4344, column: 26, scope: !6048)
!6091 = !DILocation(line: 4344, column: 29, scope: !6048)
!6092 = !DILocation(line: 4344, column: 39, scope: !6048)
!6093 = !DILocation(line: 4344, column: 43, scope: !6048)
!6094 = !DILocation(line: 4344, column: 42, scope: !6048)
!6095 = !DILocation(line: 4344, column: 53, scope: !6048)
!6096 = !DILocation(line: 0, scope: !6048)
!6097 = !DILocation(line: 4340, column: 8, scope: !6048)
!6098 = !DILocation(line: 4338, column: 3, scope: !6048)
!6099 = distinct !DISubprogram(name: "byte_store_op1", scope: !44, file: !44, line: 4255, type: !6100, scopeLine: 4256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!6100 = !DISubroutineType(types: !6101)
!6101 = !{null, !98, !81, !7}
!6102 = !DILocalVariable(name: "op", arg: 1, scope: !6099, file: !44, line: 4255, type: !98)
!6103 = !DILocation(line: 4255, column: 32, scope: !6099)
!6104 = !DILocalVariable(name: "loc", arg: 2, scope: !6099, file: !44, line: 4255, type: !81)
!6105 = !DILocation(line: 4255, column: 45, scope: !6099)
!6106 = !DILocalVariable(name: "arg", arg: 3, scope: !6099, file: !44, line: 4255, type: !7)
!6107 = !DILocation(line: 4255, column: 54, scope: !6099)
!6108 = !DILocation(line: 4257, column: 20, scope: !6099)
!6109 = !DILocation(line: 4257, column: 10, scope: !6099)
!6110 = !DILocation(line: 4257, column: 4, scope: !6099)
!6111 = !DILocation(line: 4257, column: 8, scope: !6099)
!6112 = !DILocation(line: 4258, column: 3, scope: !6099)
!6113 = !DILocation(line: 4258, column: 3, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6099, file: !44, line: 4258, column: 3)
!6115 = !DILocation(line: 4259, column: 1, scope: !6099)
!6116 = distinct !DISubprogram(name: "byte_insert_op1", scope: !44, file: !44, line: 4279, type: !6117, scopeLine: 4280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!6117 = !DISubroutineType(types: !6118)
!6118 = !{null, !98, !81, !7, !81}
!6119 = !DILocalVariable(name: "op", arg: 1, scope: !6116, file: !44, line: 4279, type: !98)
!6120 = !DILocation(line: 4279, column: 33, scope: !6116)
!6121 = !DILocalVariable(name: "loc", arg: 2, scope: !6116, file: !44, line: 4279, type: !81)
!6122 = !DILocation(line: 4279, column: 46, scope: !6116)
!6123 = !DILocalVariable(name: "arg", arg: 3, scope: !6116, file: !44, line: 4279, type: !7)
!6124 = !DILocation(line: 4279, column: 55, scope: !6116)
!6125 = !DILocalVariable(name: "end", arg: 4, scope: !6116, file: !44, line: 4279, type: !81)
!6126 = !DILocation(line: 4279, column: 69, scope: !6116)
!6127 = !DILocalVariable(name: "pfrom", scope: !6116, file: !44, line: 4281, type: !81)
!6128 = !DILocation(line: 4281, column: 21, scope: !6116)
!6129 = !DILocation(line: 4281, column: 29, scope: !6116)
!6130 = !DILocalVariable(name: "pto", scope: !6116, file: !44, line: 4282, type: !81)
!6131 = !DILocation(line: 4282, column: 21, scope: !6116)
!6132 = !DILocation(line: 4282, column: 27, scope: !6116)
!6133 = !DILocation(line: 4282, column: 31, scope: !6116)
!6134 = !DILocation(line: 4282, column: 35, scope: !6116)
!6135 = !DILocation(line: 4284, column: 3, scope: !6116)
!6136 = !DILocation(line: 4284, column: 10, scope: !6116)
!6137 = !DILocation(line: 4284, column: 19, scope: !6116)
!6138 = !DILocation(line: 4284, column: 16, scope: !6116)
!6139 = !DILocation(line: 4285, column: 15, scope: !6116)
!6140 = !DILocation(line: 4285, column: 14, scope: !6116)
!6141 = !DILocation(line: 4285, column: 6, scope: !6116)
!6142 = !DILocation(line: 4285, column: 12, scope: !6116)
!6143 = distinct !{!6143, !6135, !6144}
!6144 = !DILocation(line: 4285, column: 17, scope: !6116)
!6145 = !DILocation(line: 4287, column: 22, scope: !6116)
!6146 = !DILocation(line: 4287, column: 26, scope: !6116)
!6147 = !DILocation(line: 4287, column: 31, scope: !6116)
!6148 = !DILocation(line: 4287, column: 3, scope: !6116)
!6149 = !DILocation(line: 4288, column: 1, scope: !6116)
!6150 = distinct !DISubprogram(name: "byte_compile_range", scope: !44, file: !44, line: 4468, type: !6151, scopeLine: 4471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!3013, !29, !100, !101, !79, !133, !81}
!6153 = !DILocalVariable(name: "range_start_char", arg: 1, scope: !6150, file: !44, line: 4468, type: !29)
!6154 = !DILocation(line: 4468, column: 34, scope: !6150)
!6155 = !DILocalVariable(name: "p_ptr", arg: 2, scope: !6150, file: !44, line: 4468, type: !100)
!6156 = !DILocation(line: 4468, column: 65, scope: !6150)
!6157 = !DILocalVariable(name: "pend", arg: 3, scope: !6150, file: !44, line: 4469, type: !101)
!6158 = !DILocation(line: 4469, column: 33, scope: !6150)
!6159 = !DILocalVariable(name: "translate", arg: 4, scope: !6150, file: !44, line: 4469, type: !79)
!6160 = !DILocation(line: 4469, column: 57, scope: !6150)
!6161 = !DILocalVariable(name: "syntax", arg: 5, scope: !6150, file: !44, line: 4470, type: !133)
!6162 = !DILocation(line: 4470, column: 34, scope: !6150)
!6163 = !DILocalVariable(name: "b", arg: 6, scope: !6150, file: !44, line: 4470, type: !81)
!6164 = !DILocation(line: 4470, column: 57, scope: !6150)
!6165 = !DILocalVariable(name: "this_char", scope: !6150, file: !44, line: 4472, type: !29)
!6166 = !DILocation(line: 4472, column: 12, scope: !6150)
!6167 = !DILocalVariable(name: "p", scope: !6150, file: !44, line: 4473, type: !101)
!6168 = !DILocation(line: 4473, column: 15, scope: !6150)
!6169 = !DILocation(line: 4473, column: 20, scope: !6150)
!6170 = !DILocation(line: 4473, column: 19, scope: !6150)
!6171 = !DILocalVariable(name: "ret", scope: !6150, file: !44, line: 4474, type: !3013)
!6172 = !DILocation(line: 4474, column: 17, scope: !6150)
!6173 = !DILocalVariable(name: "end_char", scope: !6150, file: !44, line: 4480, type: !29)
!6174 = !DILocation(line: 4480, column: 12, scope: !6150)
!6175 = !DILocation(line: 4483, column: 7, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6150, file: !44, line: 4483, column: 7)
!6177 = !DILocation(line: 4483, column: 12, scope: !6176)
!6178 = !DILocation(line: 4483, column: 9, scope: !6176)
!6179 = !DILocation(line: 4483, column: 7, scope: !6150)
!6180 = !DILocation(line: 4484, column: 5, scope: !6176)
!6181 = !DILocation(line: 4488, column: 5, scope: !6150)
!6182 = !DILocation(line: 4488, column: 11, scope: !6150)
!6183 = !DILocation(line: 4491, column: 9, scope: !6150)
!6184 = !DILocation(line: 4491, column: 16, scope: !6150)
!6185 = !DILocation(line: 4491, column: 7, scope: !6150)
!6186 = !DILocation(line: 4513, column: 22, scope: !6150)
!6187 = !DILocation(line: 4513, column: 20, scope: !6150)
!6188 = !DILocation(line: 4519, column: 25, scope: !6150)
!6189 = !DILocation(line: 4519, column: 41, scope: !6150)
!6190 = !DILocation(line: 4519, column: 12, scope: !6150)
!6191 = !DILocation(line: 4521, column: 20, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6150, file: !44, line: 4521, column: 3)
!6193 = !DILocation(line: 4521, column: 18, scope: !6192)
!6194 = !DILocation(line: 4521, column: 8, scope: !6192)
!6195 = !DILocation(line: 4521, column: 38, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6192, file: !44, line: 4521, column: 3)
!6197 = !DILocation(line: 4521, column: 51, scope: !6196)
!6198 = !DILocation(line: 4521, column: 48, scope: !6196)
!6199 = !DILocation(line: 4521, column: 3, scope: !6192)
!6200 = !DILocation(line: 4523, column: 7, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6196, file: !44, line: 4522, column: 5)
!6202 = !DILocation(line: 4524, column: 11, scope: !6201)
!6203 = !DILocation(line: 4525, column: 5, scope: !6201)
!6204 = !DILocation(line: 4521, column: 61, scope: !6196)
!6205 = !DILocation(line: 4521, column: 3, scope: !6196)
!6206 = distinct !{!6206, !6199, !6207}
!6207 = !DILocation(line: 4525, column: 5, scope: !6192)
!6208 = !DILocation(line: 4528, column: 10, scope: !6150)
!6209 = !DILocation(line: 4528, column: 3, scope: !6150)
!6210 = !DILocation(line: 4529, column: 1, scope: !6150)
!6211 = distinct !DISubprogram(name: "byte_insert_op2", scope: !44, file: !44, line: 4295, type: !6212, scopeLine: 4297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!6212 = !DISubroutineType(types: !6213)
!6213 = !{null, !98, !81, !7, !7, !81}
!6214 = !DILocalVariable(name: "op", arg: 1, scope: !6211, file: !44, line: 4295, type: !98)
!6215 = !DILocation(line: 4295, column: 33, scope: !6211)
!6216 = !DILocalVariable(name: "loc", arg: 2, scope: !6211, file: !44, line: 4295, type: !81)
!6217 = !DILocation(line: 4295, column: 46, scope: !6211)
!6218 = !DILocalVariable(name: "arg1", arg: 3, scope: !6211, file: !44, line: 4295, type: !7)
!6219 = !DILocation(line: 4295, column: 55, scope: !6211)
!6220 = !DILocalVariable(name: "arg2", arg: 4, scope: !6211, file: !44, line: 4296, type: !7)
!6221 = !DILocation(line: 4296, column: 25, scope: !6211)
!6222 = !DILocalVariable(name: "end", arg: 5, scope: !6211, file: !44, line: 4296, type: !81)
!6223 = !DILocation(line: 4296, column: 40, scope: !6211)
!6224 = !DILocalVariable(name: "pfrom", scope: !6211, file: !44, line: 4298, type: !81)
!6225 = !DILocation(line: 4298, column: 21, scope: !6211)
!6226 = !DILocation(line: 4298, column: 29, scope: !6211)
!6227 = !DILocalVariable(name: "pto", scope: !6211, file: !44, line: 4299, type: !81)
!6228 = !DILocation(line: 4299, column: 21, scope: !6211)
!6229 = !DILocation(line: 4299, column: 27, scope: !6211)
!6230 = !DILocation(line: 4299, column: 31, scope: !6211)
!6231 = !DILocation(line: 4299, column: 35, scope: !6211)
!6232 = !DILocation(line: 4301, column: 3, scope: !6211)
!6233 = !DILocation(line: 4301, column: 10, scope: !6211)
!6234 = !DILocation(line: 4301, column: 19, scope: !6211)
!6235 = !DILocation(line: 4301, column: 16, scope: !6211)
!6236 = !DILocation(line: 4302, column: 15, scope: !6211)
!6237 = !DILocation(line: 4302, column: 14, scope: !6211)
!6238 = !DILocation(line: 4302, column: 6, scope: !6211)
!6239 = !DILocation(line: 4302, column: 12, scope: !6211)
!6240 = distinct !{!6240, !6232, !6241}
!6241 = !DILocation(line: 4302, column: 17, scope: !6211)
!6242 = !DILocation(line: 4304, column: 22, scope: !6211)
!6243 = !DILocation(line: 4304, column: 26, scope: !6211)
!6244 = !DILocation(line: 4304, column: 31, scope: !6211)
!6245 = !DILocation(line: 4304, column: 37, scope: !6211)
!6246 = !DILocation(line: 4304, column: 3, scope: !6211)
!6247 = !DILocation(line: 4305, column: 1, scope: !6211)
!6248 = distinct !DISubprogram(name: "byte_store_op2", scope: !44, file: !44, line: 4266, type: !6249, scopeLine: 4267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{null, !98, !81, !7, !7}
!6251 = !DILocalVariable(name: "op", arg: 1, scope: !6248, file: !44, line: 4266, type: !98)
!6252 = !DILocation(line: 4266, column: 32, scope: !6248)
!6253 = !DILocalVariable(name: "loc", arg: 2, scope: !6248, file: !44, line: 4266, type: !81)
!6254 = !DILocation(line: 4266, column: 45, scope: !6248)
!6255 = !DILocalVariable(name: "arg1", arg: 3, scope: !6248, file: !44, line: 4266, type: !7)
!6256 = !DILocation(line: 4266, column: 54, scope: !6248)
!6257 = !DILocalVariable(name: "arg2", arg: 4, scope: !6248, file: !44, line: 4266, type: !7)
!6258 = !DILocation(line: 4266, column: 64, scope: !6248)
!6259 = !DILocation(line: 4268, column: 20, scope: !6248)
!6260 = !DILocation(line: 4268, column: 10, scope: !6248)
!6261 = !DILocation(line: 4268, column: 4, scope: !6248)
!6262 = !DILocation(line: 4268, column: 8, scope: !6248)
!6263 = !DILocation(line: 4269, column: 3, scope: !6248)
!6264 = !DILocation(line: 4269, column: 3, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6248, file: !44, line: 4269, column: 3)
!6266 = !DILocation(line: 4270, column: 3, scope: !6248)
!6267 = !DILocation(line: 4270, column: 3, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6248, file: !44, line: 4270, column: 3)
!6269 = !DILocation(line: 4271, column: 1, scope: !6248)
!6270 = distinct !DISubprogram(name: "group_in_compile_stack", scope: !44, file: !44, line: 4353, type: !6271, scopeLine: 4354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !166)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{!232, !3057, !129}
!6273 = !DILocalVariable(name: "compile_stack", arg: 1, scope: !6270, file: !44, line: 4353, type: !3057)
!6274 = !DILocation(line: 4353, column: 44, scope: !6270)
!6275 = !DILocalVariable(name: "regnum", arg: 2, scope: !6270, file: !44, line: 4353, type: !129)
!6276 = !DILocation(line: 4353, column: 68, scope: !6270)
!6277 = !DILocalVariable(name: "this_element", scope: !6270, file: !44, line: 4355, type: !7)
!6278 = !DILocation(line: 4355, column: 7, scope: !6270)
!6279 = !DILocation(line: 4357, column: 37, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6270, file: !44, line: 4357, column: 3)
!6281 = !DILocation(line: 4357, column: 43, scope: !6280)
!6282 = !DILocation(line: 4357, column: 21, scope: !6280)
!6283 = !DILocation(line: 4357, column: 8, scope: !6280)
!6284 = !DILocation(line: 4358, column: 8, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6280, file: !44, line: 4357, column: 3)
!6286 = !DILocation(line: 4358, column: 21, scope: !6285)
!6287 = !DILocation(line: 4357, column: 3, scope: !6280)
!6288 = !DILocation(line: 4360, column: 23, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6285, file: !44, line: 4360, column: 9)
!6290 = !DILocation(line: 4360, column: 29, scope: !6289)
!6291 = !DILocation(line: 4360, column: 9, scope: !6289)
!6292 = !DILocation(line: 4360, column: 43, scope: !6289)
!6293 = !DILocation(line: 4360, column: 53, scope: !6289)
!6294 = !DILocation(line: 4360, column: 50, scope: !6289)
!6295 = !DILocation(line: 4360, column: 9, scope: !6285)
!6296 = !DILocation(line: 4361, column: 7, scope: !6289)
!6297 = !DILocation(line: 4359, column: 20, scope: !6285)
!6298 = !DILocation(line: 4357, column: 3, scope: !6285)
!6299 = distinct !{!6299, !6287, !6300}
!6300 = !DILocation(line: 4361, column: 14, scope: !6280)
!6301 = !DILocation(line: 4363, column: 3, scope: !6270)
!6302 = !DILocation(line: 4364, column: 1, scope: !6270)
