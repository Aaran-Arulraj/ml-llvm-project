; ModuleID = 'magick/pixel.c'
source_filename = "magick/pixel.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct.div_t = type { i32, i32 }
%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._CacheView = type opaque
%struct._PointInfo = type { double, double }

@.str = private unnamed_addr constant [15 x i8] c"magick/pixel.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"ColorSeparatedImageRequired\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"UnrecognizedPixelMap\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"UnrecognizedStorageType\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"`%d'\00", align 1
@DecodeGamma.coefficient = internal constant [9 x double] [double 0x3FFCAB00D9F35BCA, double 0x3FEA412D3E228490, double 0x3F9C5BD7A2F5A808, double 0xBF4EE1C9AFEBFD20, double 0x3F10DED3C62D07CA, double 0xBED8006C750E2F47, double 0x3EA3B81AB7B960D7, double 0xBE71C119C74EC2E0, double 0x3E4108D764FFB3F2], align 16, !dbg !0
@DecodeGamma.powers_of_two = internal constant [5 x double] [double 1.000000e+00, double 0x40051CB453B9536C, double 0x401BDB8CDADBE11F, double 0x4032611186BAE674, double 0x4048406003B2AE5B], align 16, !dbg !706
@EncodeGamma.coefficient = internal constant [9 x double] [double 0x3FF2D028A820DDB5, double 0x3FC555098946F40B, double 0xBF8107B61B699325, double 0x3F48A33981B1F362, double 0xBF15D22760B88BEF, double 0x3EE573C3D60EF8DD, double 0xBEB67B74DD100F57, double 0x3E889B50DFE1182E, double 0xBE5BC9745AECD534], align 16, !dbg !711
@EncodeGamma.powers_of_two = internal constant [12 x double] [double 1.000000e+00, double 0x3FF55B8108F0EC5E, double 0x3FFC823E074EC129, double 0x400306FE0A31B715, double 0x400965FEA53D6E3D, double 0x4010F38F92D97963, double 0x4016A09E667F3BCD, double 0x401E3437E7101344, double 0x402428A2F98D728B, double 0x402AE89F995AD3AE, double 0x4031F59AC3C7D6C0, double 0x4037F910D768CFB1], align 16, !dbg !718
@.str.9 = private unnamed_addr constant [4 x i8] c"BGR\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"BGRA\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"BGRP\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"RGB\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"RGBA\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"RGBP\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"BGRO\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"RGBO\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._MagickPixelPacket* @CloneMagickPixelPacket(%struct._MagickPixelPacket* %pixel) #0 !dbg !727 {
entry:
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %clone_pixel = alloca %struct._MagickPixelPacket*, align 8
  %message = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !732, metadata !DIExpression()), !dbg !733
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %clone_pixel, metadata !734, metadata !DIExpression()), !dbg !735
  %call = call i8* @AcquireAlignedMemory(i64 1, i64 56) #9, !dbg !736
  %0 = bitcast i8* %call to %struct._MagickPixelPacket*, !dbg !737
  store %struct._MagickPixelPacket* %0, %struct._MagickPixelPacket** %clone_pixel, align 8, !dbg !738
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clone_pixel, align 8, !dbg !739
  %cmp = icmp eq %struct._MagickPixelPacket* %1, null, !dbg !741
  br i1 %cmp, label %if.then, label %if.end, !dbg !742

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %message, metadata !743, metadata !DIExpression()), !dbg !745
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !746, metadata !DIExpression()), !dbg !745
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !745
  %call1 = call i32* @__errno_location() #10, !dbg !745
  %2 = load i32, i32* %call1, align 4, !dbg !745
  %call2 = call i8* @GetExceptionMessage(i32 %2), !dbg !745
  store i8* %call2, i8** %message, align 8, !dbg !745
  %3 = load i8*, i8** %message, align 8, !dbg !745
  %call3 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 101, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %3), !dbg !745
  %4 = load i8*, i8** %message, align 8, !dbg !745
  %call4 = call i8* @DestroyString(i8* %4), !dbg !745
  store i8* %call4, i8** %message, align 8, !dbg !745
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !745
  %call5 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !745
  call void @MagickCoreTerminus(), !dbg !745
  call void @_exit(i32 1) #11, !dbg !745
  unreachable, !dbg !745

if.end:                                           ; preds = %entry
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clone_pixel, align 8, !dbg !747
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !748
  %7 = bitcast %struct._MagickPixelPacket* %5 to i8*, !dbg !749
  %8 = bitcast %struct._MagickPixelPacket* %6 to i8*, !dbg !749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 56, i1 false), !dbg !749
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clone_pixel, align 8, !dbg !750
  ret %struct._MagickPixelPacket* %9, !dbg !751
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireAlignedMemory(i64, i64) #2

declare dso_local void @GetExceptionInfo(%struct._ExceptionInfo*) #3

declare dso_local i8* @GetExceptionMessage(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #4

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #3

declare dso_local i8* @DestroyString(i8*) #3

declare dso_local void @CatchException(%struct._ExceptionInfo*) #3

declare dso_local %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo*) #3

declare dso_local void @MagickCoreTerminus() #3

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define dso_local float @DecodePixelGamma(float %pixel) #0 !dbg !752 {
entry:
  %retval = alloca float, align 4
  %pixel.addr = alloca float, align 4
  store float %pixel, float* %pixel.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pixel.addr, metadata !756, metadata !DIExpression()), !dbg !757
  %0 = load float, float* %pixel.addr, align 4, !dbg !758
  %conv = fpext float %0 to double, !dbg !758
  %cmp = fcmp ole double %conv, 0x40A4B58CE259D3F7, !dbg !760
  br i1 %cmp, label %if.then, label %if.end, !dbg !761

if.then:                                          ; preds = %entry
  %1 = load float, float* %pixel.addr, align 4, !dbg !762
  %div = fdiv float %1, 0x4029D70A40000000, !dbg !763
  store float %div, float* %retval, align 4, !dbg !764
  br label %return, !dbg !764

if.end:                                           ; preds = %entry
  %2 = load float, float* %pixel.addr, align 4, !dbg !765
  %conv2 = fpext float %2 to double, !dbg !765
  %mul = fmul double 0x3EF0001000100010, %conv2, !dbg !766
  %add = fadd double %mul, 5.500000e-02, !dbg !767
  %div3 = fdiv double %add, 1.055000e+00, !dbg !768
  %call = call double @DecodeGamma(double %div3), !dbg !769
  %mul4 = fmul double 6.553500e+04, %call, !dbg !770
  %conv5 = fptrunc double %mul4 to float, !dbg !771
  store float %conv5, float* %retval, align 4, !dbg !772
  br label %return, !dbg !772

return:                                           ; preds = %if.end, %if.then
  %3 = load float, float* %retval, align 4, !dbg !773
  ret float %3, !dbg !773
}

; Function Attrs: noinline nounwind uwtable
define internal double @DecodeGamma(double %x) #0 !dbg !2 {
entry:
  %x.addr = alloca double, align 8
  %quotient = alloca %struct.div_t, align 4
  %p = alloca double, align 8
  %term = alloca [9 x double], align 16
  %exponent = alloca i32, align 4
  %tmp = alloca %struct.div_t, align 4
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !774, metadata !DIExpression()), !dbg !775
  call void @llvm.dbg.declare(metadata %struct.div_t* %quotient, metadata !776, metadata !DIExpression()), !dbg !783
  call void @llvm.dbg.declare(metadata double* %p, metadata !784, metadata !DIExpression()), !dbg !785
  call void @llvm.dbg.declare(metadata [9 x double]* %term, metadata !786, metadata !DIExpression()), !dbg !788
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !789, metadata !DIExpression()), !dbg !790
  %arrayidx = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 0, !dbg !791
  store double 1.000000e+00, double* %arrayidx, align 16, !dbg !792
  %0 = load double, double* %x.addr, align 8, !dbg !793
  %call = call double @frexp(double %0, i32* %exponent) #12, !dbg !794
  %mul = fmul double 4.000000e+00, %call, !dbg !795
  %sub = fsub double %mul, 3.000000e+00, !dbg !796
  %arrayidx1 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !797
  store double %sub, double* %arrayidx1, align 8, !dbg !798
  %arrayidx2 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !799
  %1 = load double, double* %arrayidx2, align 8, !dbg !799
  %mul3 = fmul double 2.000000e+00, %1, !dbg !800
  %arrayidx4 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !801
  %2 = load double, double* %arrayidx4, align 8, !dbg !801
  %mul5 = fmul double %mul3, %2, !dbg !802
  %arrayidx6 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 0, !dbg !803
  %3 = load double, double* %arrayidx6, align 16, !dbg !803
  %sub7 = fsub double %mul5, %3, !dbg !804
  %arrayidx8 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 2, !dbg !805
  store double %sub7, double* %arrayidx8, align 16, !dbg !806
  %arrayidx9 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !807
  %4 = load double, double* %arrayidx9, align 8, !dbg !807
  %mul10 = fmul double 2.000000e+00, %4, !dbg !808
  %arrayidx11 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 2, !dbg !809
  %5 = load double, double* %arrayidx11, align 16, !dbg !809
  %mul12 = fmul double %mul10, %5, !dbg !810
  %arrayidx13 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !811
  %6 = load double, double* %arrayidx13, align 8, !dbg !811
  %sub14 = fsub double %mul12, %6, !dbg !812
  %arrayidx15 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 3, !dbg !813
  store double %sub14, double* %arrayidx15, align 8, !dbg !814
  %arrayidx16 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !815
  %7 = load double, double* %arrayidx16, align 8, !dbg !815
  %mul17 = fmul double 2.000000e+00, %7, !dbg !816
  %arrayidx18 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 3, !dbg !817
  %8 = load double, double* %arrayidx18, align 8, !dbg !817
  %mul19 = fmul double %mul17, %8, !dbg !818
  %arrayidx20 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 2, !dbg !819
  %9 = load double, double* %arrayidx20, align 16, !dbg !819
  %sub21 = fsub double %mul19, %9, !dbg !820
  %arrayidx22 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 4, !dbg !821
  store double %sub21, double* %arrayidx22, align 16, !dbg !822
  %arrayidx23 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !823
  %10 = load double, double* %arrayidx23, align 8, !dbg !823
  %mul24 = fmul double 2.000000e+00, %10, !dbg !824
  %arrayidx25 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 4, !dbg !825
  %11 = load double, double* %arrayidx25, align 16, !dbg !825
  %mul26 = fmul double %mul24, %11, !dbg !826
  %arrayidx27 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 3, !dbg !827
  %12 = load double, double* %arrayidx27, align 8, !dbg !827
  %sub28 = fsub double %mul26, %12, !dbg !828
  %arrayidx29 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 5, !dbg !829
  store double %sub28, double* %arrayidx29, align 8, !dbg !830
  %arrayidx30 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !831
  %13 = load double, double* %arrayidx30, align 8, !dbg !831
  %mul31 = fmul double 2.000000e+00, %13, !dbg !832
  %arrayidx32 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 5, !dbg !833
  %14 = load double, double* %arrayidx32, align 8, !dbg !833
  %mul33 = fmul double %mul31, %14, !dbg !834
  %arrayidx34 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 4, !dbg !835
  %15 = load double, double* %arrayidx34, align 16, !dbg !835
  %sub35 = fsub double %mul33, %15, !dbg !836
  %arrayidx36 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 6, !dbg !837
  store double %sub35, double* %arrayidx36, align 16, !dbg !838
  %arrayidx37 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !839
  %16 = load double, double* %arrayidx37, align 8, !dbg !839
  %mul38 = fmul double 2.000000e+00, %16, !dbg !840
  %arrayidx39 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 6, !dbg !841
  %17 = load double, double* %arrayidx39, align 16, !dbg !841
  %mul40 = fmul double %mul38, %17, !dbg !842
  %arrayidx41 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 5, !dbg !843
  %18 = load double, double* %arrayidx41, align 8, !dbg !843
  %sub42 = fsub double %mul40, %18, !dbg !844
  %arrayidx43 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 7, !dbg !845
  store double %sub42, double* %arrayidx43, align 8, !dbg !846
  %arrayidx44 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !847
  %19 = load double, double* %arrayidx44, align 8, !dbg !847
  %mul45 = fmul double 2.000000e+00, %19, !dbg !848
  %arrayidx46 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 7, !dbg !849
  %20 = load double, double* %arrayidx46, align 8, !dbg !849
  %mul47 = fmul double %mul45, %20, !dbg !850
  %arrayidx48 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 6, !dbg !851
  %21 = load double, double* %arrayidx48, align 16, !dbg !851
  %sub49 = fsub double %mul47, %21, !dbg !852
  %arrayidx50 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 8, !dbg !853
  store double %sub49, double* %arrayidx50, align 16, !dbg !854
  %22 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @DecodeGamma.coefficient, i64 0, i64 0), align 16, !dbg !855
  %arrayidx51 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 0, !dbg !856
  %23 = load double, double* %arrayidx51, align 16, !dbg !856
  %mul52 = fmul double %22, %23, !dbg !857
  %24 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @DecodeGamma.coefficient, i64 0, i64 1), align 8, !dbg !858
  %arrayidx53 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !859
  %25 = load double, double* %arrayidx53, align 8, !dbg !859
  %mul54 = fmul double %24, %25, !dbg !860
  %add = fadd double %mul52, %mul54, !dbg !861
  %26 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @DecodeGamma.coefficient, i64 0, i64 2), align 16, !dbg !862
  %arrayidx55 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 2, !dbg !863
  %27 = load double, double* %arrayidx55, align 16, !dbg !863
  %mul56 = fmul double %26, %27, !dbg !864
  %add57 = fadd double %add, %mul56, !dbg !865
  %28 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @DecodeGamma.coefficient, i64 0, i64 3), align 8, !dbg !866
  %arrayidx58 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 3, !dbg !867
  %29 = load double, double* %arrayidx58, align 8, !dbg !867
  %mul59 = fmul double %28, %29, !dbg !868
  %add60 = fadd double %add57, %mul59, !dbg !869
  %30 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @DecodeGamma.coefficient, i64 0, i64 4), align 16, !dbg !870
  %arrayidx61 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 4, !dbg !871
  %31 = load double, double* %arrayidx61, align 16, !dbg !871
  %mul62 = fmul double %30, %31, !dbg !872
  %add63 = fadd double %add60, %mul62, !dbg !873
  %32 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @DecodeGamma.coefficient, i64 0, i64 5), align 8, !dbg !874
  %arrayidx64 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 5, !dbg !875
  %33 = load double, double* %arrayidx64, align 8, !dbg !875
  %mul65 = fmul double %32, %33, !dbg !876
  %add66 = fadd double %add63, %mul65, !dbg !877
  %34 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @DecodeGamma.coefficient, i64 0, i64 6), align 16, !dbg !878
  %arrayidx67 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 6, !dbg !879
  %35 = load double, double* %arrayidx67, align 16, !dbg !879
  %mul68 = fmul double %34, %35, !dbg !880
  %add69 = fadd double %add66, %mul68, !dbg !881
  %36 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @DecodeGamma.coefficient, i64 0, i64 7), align 8, !dbg !882
  %arrayidx70 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 7, !dbg !883
  %37 = load double, double* %arrayidx70, align 8, !dbg !883
  %mul71 = fmul double %36, %37, !dbg !884
  %add72 = fadd double %add69, %mul71, !dbg !885
  %38 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @DecodeGamma.coefficient, i64 0, i64 8), align 16, !dbg !886
  %arrayidx73 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 8, !dbg !887
  %39 = load double, double* %arrayidx73, align 16, !dbg !887
  %mul74 = fmul double %38, %39, !dbg !888
  %add75 = fadd double %add72, %mul74, !dbg !889
  store double %add75, double* %p, align 8, !dbg !890
  %40 = load i32, i32* %exponent, align 4, !dbg !891
  %sub76 = sub nsw i32 %40, 1, !dbg !892
  %call77 = call i64 @div(i32 %sub76, i32 5) #10, !dbg !893
  %41 = bitcast %struct.div_t* %tmp to i64*, !dbg !893
  store i64 %call77, i64* %41, align 4, !dbg !893
  %42 = bitcast %struct.div_t* %quotient to i8*, !dbg !893
  %43 = bitcast %struct.div_t* %tmp to i8*, !dbg !893
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 8, i1 false), !dbg !893
  %rem = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 1, !dbg !894
  %44 = load i32, i32* %rem, align 4, !dbg !894
  %cmp = icmp slt i32 %44, 0, !dbg !896
  br i1 %cmp, label %if.then, label %if.end, !dbg !897

if.then:                                          ; preds = %entry
  %quot = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 0, !dbg !898
  %45 = load i32, i32* %quot, align 4, !dbg !900
  %sub78 = sub nsw i32 %45, 1, !dbg !900
  store i32 %sub78, i32* %quot, align 4, !dbg !900
  %rem79 = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 1, !dbg !901
  %46 = load i32, i32* %rem79, align 4, !dbg !902
  %add80 = add nsw i32 %46, 5, !dbg !902
  store i32 %add80, i32* %rem79, align 4, !dbg !902
  br label %if.end, !dbg !903

if.end:                                           ; preds = %if.then, %entry
  %47 = load double, double* %x.addr, align 8, !dbg !904
  %rem81 = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 1, !dbg !905
  %48 = load i32, i32* %rem81, align 4, !dbg !905
  %idxprom = sext i32 %48 to i64, !dbg !906
  %arrayidx82 = getelementptr inbounds [5 x double], [5 x double]* @DecodeGamma.powers_of_two, i64 0, i64 %idxprom, !dbg !906
  %49 = load double, double* %arrayidx82, align 8, !dbg !906
  %50 = load double, double* %p, align 8, !dbg !907
  %mul83 = fmul double %49, %50, !dbg !908
  %quot84 = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 0, !dbg !909
  %51 = load i32, i32* %quot84, align 4, !dbg !909
  %mul85 = mul nsw i32 7, %51, !dbg !910
  %call86 = call double @ldexp(double %mul83, i32 %mul85) #12, !dbg !911
  %mul87 = fmul double %47, %call86, !dbg !912
  ret double %mul87, !dbg !913
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @EncodePixelGamma(float %pixel) #0 !dbg !914 {
entry:
  %retval = alloca float, align 4
  %pixel.addr = alloca float, align 4
  store float %pixel, float* %pixel.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pixel.addr, metadata !915, metadata !DIExpression()), !dbg !916
  %0 = load float, float* %pixel.addr, align 4, !dbg !917
  %conv = fpext float %0 to double, !dbg !917
  %cmp = fcmp ole double %conv, 0x4069A5632CEAE209, !dbg !919
  br i1 %cmp, label %if.then, label %if.end, !dbg !920

if.then:                                          ; preds = %entry
  %1 = load float, float* %pixel.addr, align 4, !dbg !921
  %mul = fmul float 0x4029D70A40000000, %1, !dbg !922
  store float %mul, float* %retval, align 4, !dbg !923
  br label %return, !dbg !923

if.end:                                           ; preds = %entry
  %2 = load float, float* %pixel.addr, align 4, !dbg !924
  %conv2 = fpext float %2 to double, !dbg !924
  %mul3 = fmul double 0x3EF0001000100010, %conv2, !dbg !925
  %call = call double @EncodeGamma(double %mul3), !dbg !926
  %mul4 = fmul double 1.055000e+00, %call, !dbg !927
  %sub = fsub double %mul4, 5.500000e-02, !dbg !928
  %mul5 = fmul double 6.553500e+04, %sub, !dbg !929
  %conv6 = fptrunc double %mul5 to float, !dbg !930
  store float %conv6, float* %retval, align 4, !dbg !931
  br label %return, !dbg !931

return:                                           ; preds = %if.end, %if.then
  %3 = load float, float* %retval, align 4, !dbg !932
  ret float %3, !dbg !932
}

; Function Attrs: noinline nounwind uwtable
define internal double @EncodeGamma(double %x) #0 !dbg !713 {
entry:
  %x.addr = alloca double, align 8
  %quotient = alloca %struct.div_t, align 4
  %p = alloca double, align 8
  %term = alloca [9 x double], align 16
  %exponent = alloca i32, align 4
  %tmp = alloca %struct.div_t, align 4
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !933, metadata !DIExpression()), !dbg !934
  call void @llvm.dbg.declare(metadata %struct.div_t* %quotient, metadata !935, metadata !DIExpression()), !dbg !936
  call void @llvm.dbg.declare(metadata double* %p, metadata !937, metadata !DIExpression()), !dbg !938
  call void @llvm.dbg.declare(metadata [9 x double]* %term, metadata !939, metadata !DIExpression()), !dbg !940
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !941, metadata !DIExpression()), !dbg !942
  %arrayidx = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 0, !dbg !943
  store double 1.000000e+00, double* %arrayidx, align 16, !dbg !944
  %0 = load double, double* %x.addr, align 8, !dbg !945
  %call = call double @frexp(double %0, i32* %exponent) #12, !dbg !946
  %mul = fmul double 4.000000e+00, %call, !dbg !947
  %sub = fsub double %mul, 3.000000e+00, !dbg !948
  %arrayidx1 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !949
  store double %sub, double* %arrayidx1, align 8, !dbg !950
  %arrayidx2 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !951
  %1 = load double, double* %arrayidx2, align 8, !dbg !951
  %mul3 = fmul double 2.000000e+00, %1, !dbg !952
  %arrayidx4 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !953
  %2 = load double, double* %arrayidx4, align 8, !dbg !953
  %mul5 = fmul double %mul3, %2, !dbg !954
  %arrayidx6 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 0, !dbg !955
  %3 = load double, double* %arrayidx6, align 16, !dbg !955
  %sub7 = fsub double %mul5, %3, !dbg !956
  %arrayidx8 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 2, !dbg !957
  store double %sub7, double* %arrayidx8, align 16, !dbg !958
  %arrayidx9 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !959
  %4 = load double, double* %arrayidx9, align 8, !dbg !959
  %mul10 = fmul double 2.000000e+00, %4, !dbg !960
  %arrayidx11 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 2, !dbg !961
  %5 = load double, double* %arrayidx11, align 16, !dbg !961
  %mul12 = fmul double %mul10, %5, !dbg !962
  %arrayidx13 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !963
  %6 = load double, double* %arrayidx13, align 8, !dbg !963
  %sub14 = fsub double %mul12, %6, !dbg !964
  %arrayidx15 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 3, !dbg !965
  store double %sub14, double* %arrayidx15, align 8, !dbg !966
  %arrayidx16 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !967
  %7 = load double, double* %arrayidx16, align 8, !dbg !967
  %mul17 = fmul double 2.000000e+00, %7, !dbg !968
  %arrayidx18 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 3, !dbg !969
  %8 = load double, double* %arrayidx18, align 8, !dbg !969
  %mul19 = fmul double %mul17, %8, !dbg !970
  %arrayidx20 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 2, !dbg !971
  %9 = load double, double* %arrayidx20, align 16, !dbg !971
  %sub21 = fsub double %mul19, %9, !dbg !972
  %arrayidx22 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 4, !dbg !973
  store double %sub21, double* %arrayidx22, align 16, !dbg !974
  %arrayidx23 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !975
  %10 = load double, double* %arrayidx23, align 8, !dbg !975
  %mul24 = fmul double 2.000000e+00, %10, !dbg !976
  %arrayidx25 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 4, !dbg !977
  %11 = load double, double* %arrayidx25, align 16, !dbg !977
  %mul26 = fmul double %mul24, %11, !dbg !978
  %arrayidx27 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 3, !dbg !979
  %12 = load double, double* %arrayidx27, align 8, !dbg !979
  %sub28 = fsub double %mul26, %12, !dbg !980
  %arrayidx29 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 5, !dbg !981
  store double %sub28, double* %arrayidx29, align 8, !dbg !982
  %arrayidx30 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !983
  %13 = load double, double* %arrayidx30, align 8, !dbg !983
  %mul31 = fmul double 2.000000e+00, %13, !dbg !984
  %arrayidx32 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 5, !dbg !985
  %14 = load double, double* %arrayidx32, align 8, !dbg !985
  %mul33 = fmul double %mul31, %14, !dbg !986
  %arrayidx34 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 4, !dbg !987
  %15 = load double, double* %arrayidx34, align 16, !dbg !987
  %sub35 = fsub double %mul33, %15, !dbg !988
  %arrayidx36 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 6, !dbg !989
  store double %sub35, double* %arrayidx36, align 16, !dbg !990
  %arrayidx37 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !991
  %16 = load double, double* %arrayidx37, align 8, !dbg !991
  %mul38 = fmul double 2.000000e+00, %16, !dbg !992
  %arrayidx39 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 6, !dbg !993
  %17 = load double, double* %arrayidx39, align 16, !dbg !993
  %mul40 = fmul double %mul38, %17, !dbg !994
  %arrayidx41 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 5, !dbg !995
  %18 = load double, double* %arrayidx41, align 8, !dbg !995
  %sub42 = fsub double %mul40, %18, !dbg !996
  %arrayidx43 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 7, !dbg !997
  store double %sub42, double* %arrayidx43, align 8, !dbg !998
  %arrayidx44 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !999
  %19 = load double, double* %arrayidx44, align 8, !dbg !999
  %mul45 = fmul double 2.000000e+00, %19, !dbg !1000
  %arrayidx46 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 7, !dbg !1001
  %20 = load double, double* %arrayidx46, align 8, !dbg !1001
  %mul47 = fmul double %mul45, %20, !dbg !1002
  %arrayidx48 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 6, !dbg !1003
  %21 = load double, double* %arrayidx48, align 16, !dbg !1003
  %sub49 = fsub double %mul47, %21, !dbg !1004
  %arrayidx50 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 8, !dbg !1005
  store double %sub49, double* %arrayidx50, align 16, !dbg !1006
  %22 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @EncodeGamma.coefficient, i64 0, i64 0), align 16, !dbg !1007
  %arrayidx51 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 0, !dbg !1008
  %23 = load double, double* %arrayidx51, align 16, !dbg !1008
  %mul52 = fmul double %22, %23, !dbg !1009
  %24 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @EncodeGamma.coefficient, i64 0, i64 1), align 8, !dbg !1010
  %arrayidx53 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 1, !dbg !1011
  %25 = load double, double* %arrayidx53, align 8, !dbg !1011
  %mul54 = fmul double %24, %25, !dbg !1012
  %add = fadd double %mul52, %mul54, !dbg !1013
  %26 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @EncodeGamma.coefficient, i64 0, i64 2), align 16, !dbg !1014
  %arrayidx55 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 2, !dbg !1015
  %27 = load double, double* %arrayidx55, align 16, !dbg !1015
  %mul56 = fmul double %26, %27, !dbg !1016
  %add57 = fadd double %add, %mul56, !dbg !1017
  %28 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @EncodeGamma.coefficient, i64 0, i64 3), align 8, !dbg !1018
  %arrayidx58 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 3, !dbg !1019
  %29 = load double, double* %arrayidx58, align 8, !dbg !1019
  %mul59 = fmul double %28, %29, !dbg !1020
  %add60 = fadd double %add57, %mul59, !dbg !1021
  %30 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @EncodeGamma.coefficient, i64 0, i64 4), align 16, !dbg !1022
  %arrayidx61 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 4, !dbg !1023
  %31 = load double, double* %arrayidx61, align 16, !dbg !1023
  %mul62 = fmul double %30, %31, !dbg !1024
  %add63 = fadd double %add60, %mul62, !dbg !1025
  %32 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @EncodeGamma.coefficient, i64 0, i64 5), align 8, !dbg !1026
  %arrayidx64 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 5, !dbg !1027
  %33 = load double, double* %arrayidx64, align 8, !dbg !1027
  %mul65 = fmul double %32, %33, !dbg !1028
  %add66 = fadd double %add63, %mul65, !dbg !1029
  %34 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @EncodeGamma.coefficient, i64 0, i64 6), align 16, !dbg !1030
  %arrayidx67 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 6, !dbg !1031
  %35 = load double, double* %arrayidx67, align 16, !dbg !1031
  %mul68 = fmul double %34, %35, !dbg !1032
  %add69 = fadd double %add66, %mul68, !dbg !1033
  %36 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @EncodeGamma.coefficient, i64 0, i64 7), align 8, !dbg !1034
  %arrayidx70 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 7, !dbg !1035
  %37 = load double, double* %arrayidx70, align 8, !dbg !1035
  %mul71 = fmul double %36, %37, !dbg !1036
  %add72 = fadd double %add69, %mul71, !dbg !1037
  %38 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @EncodeGamma.coefficient, i64 0, i64 8), align 16, !dbg !1038
  %arrayidx73 = getelementptr inbounds [9 x double], [9 x double]* %term, i64 0, i64 8, !dbg !1039
  %39 = load double, double* %arrayidx73, align 16, !dbg !1039
  %mul74 = fmul double %38, %39, !dbg !1040
  %add75 = fadd double %add72, %mul74, !dbg !1041
  store double %add75, double* %p, align 8, !dbg !1042
  %40 = load i32, i32* %exponent, align 4, !dbg !1043
  %sub76 = sub nsw i32 %40, 1, !dbg !1044
  %call77 = call i64 @div(i32 %sub76, i32 12) #10, !dbg !1045
  %41 = bitcast %struct.div_t* %tmp to i64*, !dbg !1045
  store i64 %call77, i64* %41, align 4, !dbg !1045
  %42 = bitcast %struct.div_t* %quotient to i8*, !dbg !1045
  %43 = bitcast %struct.div_t* %tmp to i8*, !dbg !1045
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 8, i1 false), !dbg !1045
  %rem = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 1, !dbg !1046
  %44 = load i32, i32* %rem, align 4, !dbg !1046
  %cmp = icmp slt i32 %44, 0, !dbg !1048
  br i1 %cmp, label %if.then, label %if.end, !dbg !1049

if.then:                                          ; preds = %entry
  %quot = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 0, !dbg !1050
  %45 = load i32, i32* %quot, align 4, !dbg !1052
  %sub78 = sub nsw i32 %45, 1, !dbg !1052
  store i32 %sub78, i32* %quot, align 4, !dbg !1052
  %rem79 = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 1, !dbg !1053
  %46 = load i32, i32* %rem79, align 4, !dbg !1054
  %add80 = add nsw i32 %46, 12, !dbg !1054
  store i32 %add80, i32* %rem79, align 4, !dbg !1054
  br label %if.end, !dbg !1055

if.end:                                           ; preds = %if.then, %entry
  %rem81 = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 1, !dbg !1056
  %47 = load i32, i32* %rem81, align 4, !dbg !1056
  %idxprom = sext i32 %47 to i64, !dbg !1057
  %arrayidx82 = getelementptr inbounds [12 x double], [12 x double]* @EncodeGamma.powers_of_two, i64 0, i64 %idxprom, !dbg !1057
  %48 = load double, double* %arrayidx82, align 8, !dbg !1057
  %49 = load double, double* %p, align 8, !dbg !1058
  %mul83 = fmul double %48, %49, !dbg !1059
  %quot84 = getelementptr inbounds %struct.div_t, %struct.div_t* %quotient, i32 0, i32 0, !dbg !1060
  %50 = load i32, i32* %quot84, align 4, !dbg !1060
  %mul85 = mul nsw i32 5, %50, !dbg !1061
  %call86 = call double @ldexp(double %mul83, i32 %mul85) #12, !dbg !1062
  ret double %call86, !dbg !1063
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ExportImagePixels(%struct._Image* %image, i64 %x, i64 %y, i64 %width, i64 %height, i8* %map, i32 %type, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !1064 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %map.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %quantum_map = alloca i32*, align 8
  %roi = alloca %struct._RectangleInfo, align 8
  %i = alloca i64, align 8
  %length = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1072, metadata !DIExpression()), !dbg !1073
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1074, metadata !DIExpression()), !dbg !1075
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !1076, metadata !DIExpression()), !dbg !1077
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !1078, metadata !DIExpression()), !dbg !1079
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !1080, metadata !DIExpression()), !dbg !1081
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !1082, metadata !DIExpression()), !dbg !1083
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !1084, metadata !DIExpression()), !dbg !1085
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !1086, metadata !DIExpression()), !dbg !1087
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1088, metadata !DIExpression()), !dbg !1089
  call void @llvm.dbg.declare(metadata i32** %quantum_map, metadata !1090, metadata !DIExpression()), !dbg !1091
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %roi, metadata !1092, metadata !DIExpression()), !dbg !1093
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1094, metadata !DIExpression()), !dbg !1095
  call void @llvm.dbg.declare(metadata i64* %length, metadata !1096, metadata !DIExpression()), !dbg !1097
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1098
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1100
  %1 = load i32, i32* %debug, align 8, !dbg !1100
  %cmp = icmp ne i32 %1, 0, !dbg !1101
  br i1 %cmp, label %if.then, label %if.end, !dbg !1102

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1103
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1104
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1103
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1845, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !1105
  br label %if.end, !dbg !1106

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %map.addr, align 8, !dbg !1107
  %call1 = call i64 @strlen(i8* %3) #13, !dbg !1108
  store i64 %call1, i64* %length, align 8, !dbg !1109
  %4 = load i64, i64* %length, align 8, !dbg !1110
  %call2 = call i8* @AcquireQuantumMemory(i64 %4, i64 4) #9, !dbg !1111
  %5 = bitcast i8* %call2 to i32*, !dbg !1112
  store i32* %5, i32** %quantum_map, align 8, !dbg !1113
  %6 = load i32*, i32** %quantum_map, align 8, !dbg !1114
  %cmp3 = icmp eq i32* %6, null, !dbg !1116
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !1117

if.then4:                                         ; preds = %if.end
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1118
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1120
  %filename5 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 53, !dbg !1121
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename5, i64 0, i64 0, !dbg !1120
  %call7 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1850, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay6), !dbg !1122
  store i32 0, i32* %retval, align 4, !dbg !1123
  br label %return, !dbg !1123

if.end8:                                          ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !1124
  br label %for.cond, !dbg !1126

for.cond:                                         ; preds = %for.inc, %if.end8
  %9 = load i64, i64* %i, align 8, !dbg !1127
  %10 = load i64, i64* %length, align 8, !dbg !1129
  %cmp9 = icmp slt i64 %9, %10, !dbg !1130
  br i1 %cmp9, label %for.body, label %for.end, !dbg !1131

for.body:                                         ; preds = %for.cond
  %11 = load i8*, i8** %map.addr, align 8, !dbg !1132
  %12 = load i64, i64* %i, align 8, !dbg !1134
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %12, !dbg !1132
  %13 = load i8, i8* %arrayidx, align 1, !dbg !1132
  %conv = sext i8 %13 to i32, !dbg !1132
  switch i32 %conv, label %sw.default [
    i32 65, label %sw.bb
    i32 97, label %sw.bb
    i32 66, label %sw.bb11
    i32 98, label %sw.bb11
    i32 67, label %sw.bb13
    i32 99, label %sw.bb13
    i32 103, label %sw.bb21
    i32 71, label %sw.bb21
    i32 73, label %sw.bb23
    i32 105, label %sw.bb23
    i32 75, label %sw.bb25
    i32 107, label %sw.bb25
    i32 77, label %sw.bb34
    i32 109, label %sw.bb34
    i32 111, label %sw.bb43
    i32 79, label %sw.bb43
    i32 80, label %sw.bb45
    i32 112, label %sw.bb45
    i32 82, label %sw.bb47
    i32 114, label %sw.bb47
    i32 89, label %sw.bb49
    i32 121, label %sw.bb49
  ], !dbg !1135

sw.bb:                                            ; preds = %for.body, %for.body
  %14 = load i32*, i32** %quantum_map, align 8, !dbg !1136
  %15 = load i64, i64* %i, align 8, !dbg !1139
  %arrayidx10 = getelementptr inbounds i32, i32* %14, i64 %15, !dbg !1136
  store i32 1, i32* %arrayidx10, align 4, !dbg !1140
  br label %sw.epilog, !dbg !1141

sw.bb11:                                          ; preds = %for.body, %for.body
  %16 = load i32*, i32** %quantum_map, align 8, !dbg !1142
  %17 = load i64, i64* %i, align 8, !dbg !1144
  %arrayidx12 = getelementptr inbounds i32, i32* %16, i64 %17, !dbg !1142
  store i32 3, i32* %arrayidx12, align 4, !dbg !1145
  br label %sw.epilog, !dbg !1146

sw.bb13:                                          ; preds = %for.body, %for.body
  %18 = load i32*, i32** %quantum_map, align 8, !dbg !1147
  %19 = load i64, i64* %i, align 8, !dbg !1149
  %arrayidx14 = getelementptr inbounds i32, i32* %18, i64 %19, !dbg !1147
  store i32 6, i32* %arrayidx14, align 4, !dbg !1150
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1151
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 1, !dbg !1153
  %21 = load i32, i32* %colorspace, align 4, !dbg !1153
  %cmp15 = icmp eq i32 %21, 12, !dbg !1154
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !1155

if.then17:                                        ; preds = %sw.bb13
  br label %sw.epilog, !dbg !1156

if.end18:                                         ; preds = %sw.bb13
  %22 = load i32*, i32** %quantum_map, align 8, !dbg !1157
  %23 = bitcast i32* %22 to i8*, !dbg !1157
  %call19 = call i8* @RelinquishMagickMemory(i8* %23), !dbg !1158
  %24 = bitcast i8* %call19 to i32*, !dbg !1159
  store i32* %24, i32** %quantum_map, align 8, !dbg !1160
  %25 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1161
  %26 = load i8*, i8** %map.addr, align 8, !dbg !1162
  %call20 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %25, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1877, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %26), !dbg !1163
  store i32 0, i32* %retval, align 4, !dbg !1164
  br label %return, !dbg !1164

sw.bb21:                                          ; preds = %for.body, %for.body
  %27 = load i32*, i32** %quantum_map, align 8, !dbg !1165
  %28 = load i64, i64* %i, align 8, !dbg !1167
  %arrayidx22 = getelementptr inbounds i32, i32* %27, i64 %28, !dbg !1165
  store i32 9, i32* %arrayidx22, align 4, !dbg !1168
  br label %sw.epilog, !dbg !1169

sw.bb23:                                          ; preds = %for.body, %for.body
  %29 = load i32*, i32** %quantum_map, align 8, !dbg !1170
  %30 = load i64, i64* %i, align 8, !dbg !1172
  %arrayidx24 = getelementptr inbounds i32, i32* %29, i64 %30, !dbg !1170
  store i32 11, i32* %arrayidx24, align 4, !dbg !1173
  br label %sw.epilog, !dbg !1174

sw.bb25:                                          ; preds = %for.body, %for.body
  %31 = load i32*, i32** %quantum_map, align 8, !dbg !1175
  %32 = load i64, i64* %i, align 8, !dbg !1177
  %arrayidx26 = getelementptr inbounds i32, i32* %31, i64 %32, !dbg !1175
  store i32 2, i32* %arrayidx26, align 4, !dbg !1178
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1179
  %colorspace27 = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 1, !dbg !1181
  %34 = load i32, i32* %colorspace27, align 4, !dbg !1181
  %cmp28 = icmp eq i32 %34, 12, !dbg !1182
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !1183

if.then30:                                        ; preds = %sw.bb25
  br label %sw.epilog, !dbg !1184

if.end31:                                         ; preds = %sw.bb25
  %35 = load i32*, i32** %quantum_map, align 8, !dbg !1185
  %36 = bitcast i32* %35 to i8*, !dbg !1185
  %call32 = call i8* @RelinquishMagickMemory(i8* %36), !dbg !1186
  %37 = bitcast i8* %call32 to i32*, !dbg !1187
  store i32* %37, i32** %quantum_map, align 8, !dbg !1188
  %38 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1189
  %39 = load i8*, i8** %map.addr, align 8, !dbg !1190
  %call33 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %38, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1900, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %39), !dbg !1191
  store i32 0, i32* %retval, align 4, !dbg !1192
  br label %return, !dbg !1192

sw.bb34:                                          ; preds = %for.body, %for.body
  %40 = load i32*, i32** %quantum_map, align 8, !dbg !1193
  %41 = load i64, i64* %i, align 8, !dbg !1195
  %arrayidx35 = getelementptr inbounds i32, i32* %40, i64 %41, !dbg !1193
  store i32 12, i32* %arrayidx35, align 4, !dbg !1196
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1197
  %colorspace36 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 1, !dbg !1199
  %43 = load i32, i32* %colorspace36, align 4, !dbg !1199
  %cmp37 = icmp eq i32 %43, 12, !dbg !1200
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !1201

if.then39:                                        ; preds = %sw.bb34
  br label %sw.epilog, !dbg !1202

if.end40:                                         ; preds = %sw.bb34
  %44 = load i32*, i32** %quantum_map, align 8, !dbg !1203
  %45 = bitcast i32* %44 to i8*, !dbg !1203
  %call41 = call i8* @RelinquishMagickMemory(i8* %45), !dbg !1204
  %46 = bitcast i8* %call41 to i32*, !dbg !1205
  store i32* %46, i32** %quantum_map, align 8, !dbg !1206
  %47 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1207
  %48 = load i8*, i8** %map.addr, align 8, !dbg !1208
  %call42 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %47, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1911, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %48), !dbg !1209
  store i32 0, i32* %retval, align 4, !dbg !1210
  br label %return, !dbg !1210

sw.bb43:                                          ; preds = %for.body, %for.body
  %49 = load i32*, i32** %quantum_map, align 8, !dbg !1211
  %50 = load i64, i64* %i, align 8, !dbg !1213
  %arrayidx44 = getelementptr inbounds i32, i32* %49, i64 %50, !dbg !1211
  store i32 13, i32* %arrayidx44, align 4, !dbg !1214
  br label %sw.epilog, !dbg !1215

sw.bb45:                                          ; preds = %for.body, %for.body
  %51 = load i32*, i32** %quantum_map, align 8, !dbg !1216
  %52 = load i64, i64* %i, align 8, !dbg !1218
  %arrayidx46 = getelementptr inbounds i32, i32* %51, i64 %52, !dbg !1216
  store i32 0, i32* %arrayidx46, align 4, !dbg !1219
  br label %sw.epilog, !dbg !1220

sw.bb47:                                          ; preds = %for.body, %for.body
  %53 = load i32*, i32** %quantum_map, align 8, !dbg !1221
  %54 = load i64, i64* %i, align 8, !dbg !1223
  %arrayidx48 = getelementptr inbounds i32, i32* %53, i64 %54, !dbg !1221
  store i32 14, i32* %arrayidx48, align 4, !dbg !1224
  br label %sw.epilog, !dbg !1225

sw.bb49:                                          ; preds = %for.body, %for.body
  %55 = load i32*, i32** %quantum_map, align 8, !dbg !1226
  %56 = load i64, i64* %i, align 8, !dbg !1228
  %arrayidx50 = getelementptr inbounds i32, i32* %55, i64 %56, !dbg !1226
  store i32 19, i32* %arrayidx50, align 4, !dbg !1229
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1230
  %colorspace51 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 1, !dbg !1232
  %58 = load i32, i32* %colorspace51, align 4, !dbg !1232
  %cmp52 = icmp eq i32 %58, 12, !dbg !1233
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !1234

if.then54:                                        ; preds = %sw.bb49
  br label %sw.epilog, !dbg !1235

if.end55:                                         ; preds = %sw.bb49
  %59 = load i32*, i32** %quantum_map, align 8, !dbg !1236
  %60 = bitcast i32* %59 to i8*, !dbg !1236
  %call56 = call i8* @RelinquishMagickMemory(i8* %60), !dbg !1237
  %61 = bitcast i8* %call56 to i32*, !dbg !1238
  store i32* %61, i32** %quantum_map, align 8, !dbg !1239
  %62 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1240
  %63 = load i8*, i8** %map.addr, align 8, !dbg !1241
  %call57 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %62, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1940, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %63), !dbg !1242
  store i32 0, i32* %retval, align 4, !dbg !1243
  br label %return, !dbg !1243

sw.default:                                       ; preds = %for.body
  %64 = load i32*, i32** %quantum_map, align 8, !dbg !1244
  %65 = bitcast i32* %64 to i8*, !dbg !1244
  %call58 = call i8* @RelinquishMagickMemory(i8* %65), !dbg !1246
  %66 = bitcast i8* %call58 to i32*, !dbg !1247
  store i32* %66, i32** %quantum_map, align 8, !dbg !1248
  %67 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1249
  %68 = load i8*, i8** %map.addr, align 8, !dbg !1250
  %call59 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %67, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1947, i32 410, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %68), !dbg !1251
  store i32 0, i32* %retval, align 4, !dbg !1252
  br label %return, !dbg !1252

sw.epilog:                                        ; preds = %if.then54, %sw.bb47, %sw.bb45, %sw.bb43, %if.then39, %if.then30, %sw.bb23, %sw.bb21, %if.then17, %sw.bb11, %sw.bb
  br label %for.inc, !dbg !1253

for.inc:                                          ; preds = %sw.epilog
  %69 = load i64, i64* %i, align 8, !dbg !1254
  %inc = add nsw i64 %69, 1, !dbg !1254
  store i64 %inc, i64* %i, align 8, !dbg !1254
  br label %for.cond, !dbg !1255, !llvm.loop !1256

for.end:                                          ; preds = %for.cond
  %70 = load i64, i64* %width.addr, align 8, !dbg !1258
  %width60 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %roi, i32 0, i32 0, !dbg !1259
  store i64 %70, i64* %width60, align 8, !dbg !1260
  %71 = load i64, i64* %height.addr, align 8, !dbg !1261
  %height61 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %roi, i32 0, i32 1, !dbg !1262
  store i64 %71, i64* %height61, align 8, !dbg !1263
  %72 = load i64, i64* %x.addr, align 8, !dbg !1264
  %x62 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %roi, i32 0, i32 2, !dbg !1265
  store i64 %72, i64* %x62, align 8, !dbg !1266
  %73 = load i64, i64* %y.addr, align 8, !dbg !1267
  %y63 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %roi, i32 0, i32 3, !dbg !1268
  store i64 %73, i64* %y63, align 8, !dbg !1269
  %74 = load i32, i32* %type.addr, align 4, !dbg !1270
  switch i32 %74, label %sw.default71 [
    i32 1, label %sw.bb64
    i32 2, label %sw.bb65
    i32 3, label %sw.bb66
    i32 4, label %sw.bb67
    i32 5, label %sw.bb68
    i32 6, label %sw.bb69
    i32 7, label %sw.bb70
  ], !dbg !1271

sw.bb64:                                          ; preds = %for.end
  %75 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1272
  %76 = load i8*, i8** %map.addr, align 8, !dbg !1275
  %77 = load i32*, i32** %quantum_map, align 8, !dbg !1276
  %78 = load i8*, i8** %pixels.addr, align 8, !dbg !1277
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1278
  call void @ExportCharPixel(%struct._Image* %75, %struct._RectangleInfo* %roi, i8* %76, i32* %77, i8* %78, %struct._ExceptionInfo* %79), !dbg !1279
  br label %sw.epilog74, !dbg !1280

sw.bb65:                                          ; preds = %for.end
  %80 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1281
  %81 = load i8*, i8** %map.addr, align 8, !dbg !1283
  %82 = load i32*, i32** %quantum_map, align 8, !dbg !1284
  %83 = load i8*, i8** %pixels.addr, align 8, !dbg !1285
  %84 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1286
  call void @ExportDoublePixel(%struct._Image* %80, %struct._RectangleInfo* %roi, i8* %81, i32* %82, i8* %83, %struct._ExceptionInfo* %84), !dbg !1287
  br label %sw.epilog74, !dbg !1288

sw.bb66:                                          ; preds = %for.end
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1289
  %86 = load i8*, i8** %map.addr, align 8, !dbg !1291
  %87 = load i32*, i32** %quantum_map, align 8, !dbg !1292
  %88 = load i8*, i8** %pixels.addr, align 8, !dbg !1293
  %89 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1294
  call void @ExportFloatPixel(%struct._Image* %85, %struct._RectangleInfo* %roi, i8* %86, i32* %87, i8* %88, %struct._ExceptionInfo* %89), !dbg !1295
  br label %sw.epilog74, !dbg !1296

sw.bb67:                                          ; preds = %for.end
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1297
  %91 = load i8*, i8** %map.addr, align 8, !dbg !1299
  %92 = load i32*, i32** %quantum_map, align 8, !dbg !1300
  %93 = load i8*, i8** %pixels.addr, align 8, !dbg !1301
  %94 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1302
  call void @ExportIntegerPixel(%struct._Image* %90, %struct._RectangleInfo* %roi, i8* %91, i32* %92, i8* %93, %struct._ExceptionInfo* %94), !dbg !1303
  br label %sw.epilog74, !dbg !1304

sw.bb68:                                          ; preds = %for.end
  %95 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1305
  %96 = load i8*, i8** %map.addr, align 8, !dbg !1307
  %97 = load i32*, i32** %quantum_map, align 8, !dbg !1308
  %98 = load i8*, i8** %pixels.addr, align 8, !dbg !1309
  %99 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1310
  call void @ExportLongPixel(%struct._Image* %95, %struct._RectangleInfo* %roi, i8* %96, i32* %97, i8* %98, %struct._ExceptionInfo* %99), !dbg !1311
  br label %sw.epilog74, !dbg !1312

sw.bb69:                                          ; preds = %for.end
  %100 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1313
  %101 = load i8*, i8** %map.addr, align 8, !dbg !1315
  %102 = load i32*, i32** %quantum_map, align 8, !dbg !1316
  %103 = load i8*, i8** %pixels.addr, align 8, !dbg !1317
  %104 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1318
  call void @ExportQuantumPixel(%struct._Image* %100, %struct._RectangleInfo* %roi, i8* %101, i32* %102, i8* %103, %struct._ExceptionInfo* %104), !dbg !1319
  br label %sw.epilog74, !dbg !1320

sw.bb70:                                          ; preds = %for.end
  %105 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1321
  %106 = load i8*, i8** %map.addr, align 8, !dbg !1323
  %107 = load i32*, i32** %quantum_map, align 8, !dbg !1324
  %108 = load i8*, i8** %pixels.addr, align 8, !dbg !1325
  %109 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1326
  call void @ExportShortPixel(%struct._Image* %105, %struct._RectangleInfo* %roi, i8* %106, i32* %107, i8* %108, %struct._ExceptionInfo* %109), !dbg !1327
  br label %sw.epilog74, !dbg !1328

sw.default71:                                     ; preds = %for.end
  %110 = load i32*, i32** %quantum_map, align 8, !dbg !1329
  %111 = bitcast i32* %110 to i8*, !dbg !1329
  %call72 = call i8* @RelinquishMagickMemory(i8* %111), !dbg !1331
  %112 = bitcast i8* %call72 to i32*, !dbg !1332
  store i32* %112, i32** %quantum_map, align 8, !dbg !1333
  %113 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1334
  %114 = load i8*, i8** %map.addr, align 8, !dbg !1335
  %call73 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %113, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1997, i32 410, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %114), !dbg !1336
  br label %sw.epilog74, !dbg !1337

sw.epilog74:                                      ; preds = %sw.default71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb64
  %115 = load i32*, i32** %quantum_map, align 8, !dbg !1338
  %116 = bitcast i32* %115 to i8*, !dbg !1338
  %call75 = call i8* @RelinquishMagickMemory(i8* %116), !dbg !1339
  %117 = bitcast i8* %call75 to i32*, !dbg !1340
  store i32* %117, i32** %quantum_map, align 8, !dbg !1341
  store i32 1, i32* %retval, align 4, !dbg !1342
  br label %return, !dbg !1342

return:                                           ; preds = %sw.epilog74, %sw.default, %if.end55, %if.end40, %if.end31, %if.end18, %if.then4
  %118 = load i32, i32* %retval, align 4, !dbg !1343
  ret i32 %118, !dbg !1343
}

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #2

declare dso_local i8* @RelinquishMagickMemory(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ExportCharPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !1344 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %q = alloca i8*, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1352, metadata !DIExpression()), !dbg !1353
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !1354, metadata !DIExpression()), !dbg !1355
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !1356, metadata !DIExpression()), !dbg !1357
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !1358, metadata !DIExpression()), !dbg !1359
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !1360, metadata !DIExpression()), !dbg !1361
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1362, metadata !DIExpression()), !dbg !1363
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !1364, metadata !DIExpression()), !dbg !1366
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !1367, metadata !DIExpression()), !dbg !1369
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1370, metadata !DIExpression()), !dbg !1371
  call void @llvm.dbg.declare(metadata i8** %q, metadata !1372, metadata !DIExpression()), !dbg !1373
  call void @llvm.dbg.declare(metadata i64* %length, metadata !1374, metadata !DIExpression()), !dbg !1375
  call void @llvm.dbg.declare(metadata i64* %y, metadata !1376, metadata !DIExpression()), !dbg !1377
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !1378
  store i8* %0, i8** %q, align 8, !dbg !1379
  %1 = load i8*, i8** %map.addr, align 8, !dbg !1380
  %call = call i32 @LocaleCompare(i8* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !1382
  %cmp = icmp eq i32 %call, 0, !dbg !1383
  br i1 %cmp, label %if.then, label %if.end20, !dbg !1384

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !1385
  br label %for.cond, !dbg !1388

for.cond:                                         ; preds = %for.inc17, %if.then
  %2 = load i64, i64* %y, align 8, !dbg !1389
  %3 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1391
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %3, i32 0, i32 1, !dbg !1392
  %4 = load i64, i64* %height, align 8, !dbg !1392
  %cmp1 = icmp slt i64 %2, %4, !dbg !1393
  br i1 %cmp1, label %for.body, label %for.end19, !dbg !1394

for.body:                                         ; preds = %for.cond
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1395
  %6 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1397
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %6, i32 0, i32 2, !dbg !1398
  %7 = load i64, i64* %x2, align 8, !dbg !1398
  %8 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1399
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %8, i32 0, i32 3, !dbg !1400
  %9 = load i64, i64* %y3, align 8, !dbg !1400
  %10 = load i64, i64* %y, align 8, !dbg !1401
  %add = add nsw i64 %9, %10, !dbg !1402
  %11 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1403
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %11, i32 0, i32 0, !dbg !1404
  %12 = load i64, i64* %width, align 8, !dbg !1404
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1405
  %call4 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %5, i64 %7, i64 %add, i64 %12, i64 1, %struct._ExceptionInfo* %13), !dbg !1406
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %p, align 8, !dbg !1407
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1408
  %cmp5 = icmp eq %struct._PixelPacket* %14, null, !dbg !1410
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !1411

if.then6:                                         ; preds = %for.body
  br label %for.end19, !dbg !1412

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !1413
  br label %for.cond7, !dbg !1415

for.cond7:                                        ; preds = %for.inc, %if.end
  %15 = load i64, i64* %x, align 8, !dbg !1416
  %16 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1418
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %16, i32 0, i32 0, !dbg !1419
  %17 = load i64, i64* %width8, align 8, !dbg !1419
  %cmp9 = icmp slt i64 %15, %17, !dbg !1420
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !1421

for.body10:                                       ; preds = %for.cond7
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1422
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i32 0, i32 0, !dbg !1422
  %19 = load i16, i16* %blue, align 2, !dbg !1422
  %call11 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %19), !dbg !1424
  %20 = load i8*, i8** %q, align 8, !dbg !1425
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1, !dbg !1425
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !1425
  store i8 %call11, i8* %20, align 1, !dbg !1426
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1427
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i32 0, i32 1, !dbg !1427
  %22 = load i16, i16* %green, align 2, !dbg !1427
  %call12 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %22), !dbg !1428
  %23 = load i8*, i8** %q, align 8, !dbg !1429
  %incdec.ptr13 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !1429
  store i8* %incdec.ptr13, i8** %q, align 8, !dbg !1429
  store i8 %call12, i8* %23, align 1, !dbg !1430
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1431
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 2, !dbg !1431
  %25 = load i16, i16* %red, align 2, !dbg !1431
  %call14 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %25), !dbg !1432
  %26 = load i8*, i8** %q, align 8, !dbg !1433
  %incdec.ptr15 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1433
  store i8* %incdec.ptr15, i8** %q, align 8, !dbg !1433
  store i8 %call14, i8* %26, align 1, !dbg !1434
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1435
  %incdec.ptr16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 1, !dbg !1435
  store %struct._PixelPacket* %incdec.ptr16, %struct._PixelPacket** %p, align 8, !dbg !1435
  br label %for.inc, !dbg !1436

for.inc:                                          ; preds = %for.body10
  %28 = load i64, i64* %x, align 8, !dbg !1437
  %inc = add nsw i64 %28, 1, !dbg !1437
  store i64 %inc, i64* %x, align 8, !dbg !1437
  br label %for.cond7, !dbg !1438, !llvm.loop !1439

for.end:                                          ; preds = %for.cond7
  br label %for.inc17, !dbg !1441

for.inc17:                                        ; preds = %for.end
  %29 = load i64, i64* %y, align 8, !dbg !1442
  %inc18 = add nsw i64 %29, 1, !dbg !1442
  store i64 %inc18, i64* %y, align 8, !dbg !1442
  br label %for.cond, !dbg !1443, !llvm.loop !1444

for.end19:                                        ; preds = %if.then6, %for.cond
  br label %for.end332, !dbg !1446

if.end20:                                         ; preds = %entry
  %30 = load i8*, i8** %map.addr, align 8, !dbg !1447
  %call21 = call i32 @LocaleCompare(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !1449
  %cmp22 = icmp eq i32 %call21, 0, !dbg !1450
  br i1 %cmp22, label %if.then23, label %if.end59, !dbg !1451

if.then23:                                        ; preds = %if.end20
  store i64 0, i64* %y, align 8, !dbg !1452
  br label %for.cond24, !dbg !1455

for.cond24:                                       ; preds = %for.inc56, %if.then23
  %31 = load i64, i64* %y, align 8, !dbg !1456
  %32 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1458
  %height25 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %32, i32 0, i32 1, !dbg !1459
  %33 = load i64, i64* %height25, align 8, !dbg !1459
  %cmp26 = icmp slt i64 %31, %33, !dbg !1460
  br i1 %cmp26, label %for.body27, label %for.end58, !dbg !1461

for.body27:                                       ; preds = %for.cond24
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1462
  %35 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1464
  %x28 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %35, i32 0, i32 2, !dbg !1465
  %36 = load i64, i64* %x28, align 8, !dbg !1465
  %37 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1466
  %y29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %37, i32 0, i32 3, !dbg !1467
  %38 = load i64, i64* %y29, align 8, !dbg !1467
  %39 = load i64, i64* %y, align 8, !dbg !1468
  %add30 = add nsw i64 %38, %39, !dbg !1469
  %40 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1470
  %width31 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %40, i32 0, i32 0, !dbg !1471
  %41 = load i64, i64* %width31, align 8, !dbg !1471
  %42 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1472
  %call32 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %34, i64 %36, i64 %add30, i64 %41, i64 1, %struct._ExceptionInfo* %42), !dbg !1473
  store %struct._PixelPacket* %call32, %struct._PixelPacket** %p, align 8, !dbg !1474
  %43 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1475
  %cmp33 = icmp eq %struct._PixelPacket* %43, null, !dbg !1477
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !1478

if.then34:                                        ; preds = %for.body27
  br label %for.end58, !dbg !1479

if.end35:                                         ; preds = %for.body27
  store i64 0, i64* %x, align 8, !dbg !1480
  br label %for.cond36, !dbg !1482

for.cond36:                                       ; preds = %for.inc53, %if.end35
  %44 = load i64, i64* %x, align 8, !dbg !1483
  %45 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1485
  %width37 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %45, i32 0, i32 0, !dbg !1486
  %46 = load i64, i64* %width37, align 8, !dbg !1486
  %cmp38 = icmp slt i64 %44, %46, !dbg !1487
  br i1 %cmp38, label %for.body39, label %for.end55, !dbg !1488

for.body39:                                       ; preds = %for.cond36
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1489
  %blue40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %47, i32 0, i32 0, !dbg !1489
  %48 = load i16, i16* %blue40, align 2, !dbg !1489
  %call41 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %48), !dbg !1491
  %49 = load i8*, i8** %q, align 8, !dbg !1492
  %incdec.ptr42 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !1492
  store i8* %incdec.ptr42, i8** %q, align 8, !dbg !1492
  store i8 %call41, i8* %49, align 1, !dbg !1493
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1494
  %green43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 0, i32 1, !dbg !1494
  %51 = load i16, i16* %green43, align 2, !dbg !1494
  %call44 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %51), !dbg !1495
  %52 = load i8*, i8** %q, align 8, !dbg !1496
  %incdec.ptr45 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !1496
  store i8* %incdec.ptr45, i8** %q, align 8, !dbg !1496
  store i8 %call44, i8* %52, align 1, !dbg !1497
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1498
  %red46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i32 0, i32 2, !dbg !1498
  %54 = load i16, i16* %red46, align 2, !dbg !1498
  %call47 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %54), !dbg !1499
  %55 = load i8*, i8** %q, align 8, !dbg !1500
  %incdec.ptr48 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !1500
  store i8* %incdec.ptr48, i8** %q, align 8, !dbg !1500
  store i8 %call47, i8* %55, align 1, !dbg !1501
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1502
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 3, !dbg !1502
  %57 = load i16, i16* %opacity, align 2, !dbg !1502
  %conv = zext i16 %57 to i32, !dbg !1502
  %sub = sub nsw i32 65535, %conv, !dbg !1502
  %conv49 = trunc i32 %sub to i16, !dbg !1503
  %call50 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv49), !dbg !1504
  %58 = load i8*, i8** %q, align 8, !dbg !1505
  %incdec.ptr51 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !1505
  store i8* %incdec.ptr51, i8** %q, align 8, !dbg !1505
  store i8 %call50, i8* %58, align 1, !dbg !1506
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1507
  %incdec.ptr52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %59, i32 1, !dbg !1507
  store %struct._PixelPacket* %incdec.ptr52, %struct._PixelPacket** %p, align 8, !dbg !1507
  br label %for.inc53, !dbg !1508

for.inc53:                                        ; preds = %for.body39
  %60 = load i64, i64* %x, align 8, !dbg !1509
  %inc54 = add nsw i64 %60, 1, !dbg !1509
  store i64 %inc54, i64* %x, align 8, !dbg !1509
  br label %for.cond36, !dbg !1510, !llvm.loop !1511

for.end55:                                        ; preds = %for.cond36
  br label %for.inc56, !dbg !1513

for.inc56:                                        ; preds = %for.end55
  %61 = load i64, i64* %y, align 8, !dbg !1514
  %inc57 = add nsw i64 %61, 1, !dbg !1514
  store i64 %inc57, i64* %y, align 8, !dbg !1514
  br label %for.cond24, !dbg !1515, !llvm.loop !1516

for.end58:                                        ; preds = %if.then34, %for.cond24
  br label %for.end332, !dbg !1518

if.end59:                                         ; preds = %if.end20
  %62 = load i8*, i8** %map.addr, align 8, !dbg !1519
  %call60 = call i32 @LocaleCompare(i8* %62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !1521
  %cmp61 = icmp eq i32 %call60, 0, !dbg !1522
  br i1 %cmp61, label %if.then63, label %if.end101, !dbg !1523

if.then63:                                        ; preds = %if.end59
  store i64 0, i64* %y, align 8, !dbg !1524
  br label %for.cond64, !dbg !1527

for.cond64:                                       ; preds = %for.inc98, %if.then63
  %63 = load i64, i64* %y, align 8, !dbg !1528
  %64 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1530
  %height65 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %64, i32 0, i32 1, !dbg !1531
  %65 = load i64, i64* %height65, align 8, !dbg !1531
  %cmp66 = icmp slt i64 %63, %65, !dbg !1532
  br i1 %cmp66, label %for.body68, label %for.end100, !dbg !1533

for.body68:                                       ; preds = %for.cond64
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1534
  %67 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1536
  %x69 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %67, i32 0, i32 2, !dbg !1537
  %68 = load i64, i64* %x69, align 8, !dbg !1537
  %69 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1538
  %y70 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %69, i32 0, i32 3, !dbg !1539
  %70 = load i64, i64* %y70, align 8, !dbg !1539
  %71 = load i64, i64* %y, align 8, !dbg !1540
  %add71 = add nsw i64 %70, %71, !dbg !1541
  %72 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1542
  %width72 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %72, i32 0, i32 0, !dbg !1543
  %73 = load i64, i64* %width72, align 8, !dbg !1543
  %74 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1544
  %call73 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %66, i64 %68, i64 %add71, i64 %73, i64 1, %struct._ExceptionInfo* %74), !dbg !1545
  store %struct._PixelPacket* %call73, %struct._PixelPacket** %p, align 8, !dbg !1546
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1547
  %cmp74 = icmp eq %struct._PixelPacket* %75, null, !dbg !1549
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !1550

if.then76:                                        ; preds = %for.body68
  br label %for.end100, !dbg !1551

if.end77:                                         ; preds = %for.body68
  store i64 0, i64* %x, align 8, !dbg !1552
  br label %for.cond78, !dbg !1554

for.cond78:                                       ; preds = %for.inc95, %if.end77
  %76 = load i64, i64* %x, align 8, !dbg !1555
  %77 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1557
  %width79 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %77, i32 0, i32 0, !dbg !1558
  %78 = load i64, i64* %width79, align 8, !dbg !1558
  %cmp80 = icmp slt i64 %76, %78, !dbg !1559
  br i1 %cmp80, label %for.body82, label %for.end97, !dbg !1560

for.body82:                                       ; preds = %for.cond78
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1561
  %blue83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 0, !dbg !1561
  %80 = load i16, i16* %blue83, align 2, !dbg !1561
  %call84 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %80), !dbg !1563
  %81 = load i8*, i8** %q, align 8, !dbg !1564
  %incdec.ptr85 = getelementptr inbounds i8, i8* %81, i32 1, !dbg !1564
  store i8* %incdec.ptr85, i8** %q, align 8, !dbg !1564
  store i8 %call84, i8* %81, align 1, !dbg !1565
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1566
  %green86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i32 0, i32 1, !dbg !1566
  %83 = load i16, i16* %green86, align 2, !dbg !1566
  %call87 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %83), !dbg !1567
  %84 = load i8*, i8** %q, align 8, !dbg !1568
  %incdec.ptr88 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !1568
  store i8* %incdec.ptr88, i8** %q, align 8, !dbg !1568
  store i8 %call87, i8* %84, align 1, !dbg !1569
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1570
  %red89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 2, !dbg !1570
  %86 = load i16, i16* %red89, align 2, !dbg !1570
  %call90 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %86), !dbg !1571
  %87 = load i8*, i8** %q, align 8, !dbg !1572
  %incdec.ptr91 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !1572
  store i8* %incdec.ptr91, i8** %q, align 8, !dbg !1572
  store i8 %call90, i8* %87, align 1, !dbg !1573
  %call92 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext 0), !dbg !1574
  %88 = load i8*, i8** %q, align 8, !dbg !1575
  %incdec.ptr93 = getelementptr inbounds i8, i8* %88, i32 1, !dbg !1575
  store i8* %incdec.ptr93, i8** %q, align 8, !dbg !1575
  store i8 %call92, i8* %88, align 1, !dbg !1576
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1577
  %incdec.ptr94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !1577
  store %struct._PixelPacket* %incdec.ptr94, %struct._PixelPacket** %p, align 8, !dbg !1577
  br label %for.inc95, !dbg !1578

for.inc95:                                        ; preds = %for.body82
  %90 = load i64, i64* %x, align 8, !dbg !1579
  %inc96 = add nsw i64 %90, 1, !dbg !1579
  store i64 %inc96, i64* %x, align 8, !dbg !1579
  br label %for.cond78, !dbg !1580, !llvm.loop !1581

for.end97:                                        ; preds = %for.cond78
  br label %for.inc98, !dbg !1583

for.inc98:                                        ; preds = %for.end97
  %91 = load i64, i64* %y, align 8, !dbg !1584
  %inc99 = add nsw i64 %91, 1, !dbg !1584
  store i64 %inc99, i64* %y, align 8, !dbg !1584
  br label %for.cond64, !dbg !1585, !llvm.loop !1586

for.end100:                                       ; preds = %if.then76, %for.cond64
  br label %for.end332, !dbg !1588

if.end101:                                        ; preds = %if.end59
  %92 = load i8*, i8** %map.addr, align 8, !dbg !1589
  %call102 = call i32 @LocaleCompare(i8* %92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !1591
  %cmp103 = icmp eq i32 %call102, 0, !dbg !1592
  br i1 %cmp103, label %if.then105, label %if.end136, !dbg !1593

if.then105:                                       ; preds = %if.end101
  store i64 0, i64* %y, align 8, !dbg !1594
  br label %for.cond106, !dbg !1597

for.cond106:                                      ; preds = %for.inc133, %if.then105
  %93 = load i64, i64* %y, align 8, !dbg !1598
  %94 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1600
  %height107 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %94, i32 0, i32 1, !dbg !1601
  %95 = load i64, i64* %height107, align 8, !dbg !1601
  %cmp108 = icmp slt i64 %93, %95, !dbg !1602
  br i1 %cmp108, label %for.body110, label %for.end135, !dbg !1603

for.body110:                                      ; preds = %for.cond106
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1604
  %97 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1606
  %x111 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %97, i32 0, i32 2, !dbg !1607
  %98 = load i64, i64* %x111, align 8, !dbg !1607
  %99 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1608
  %y112 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %99, i32 0, i32 3, !dbg !1609
  %100 = load i64, i64* %y112, align 8, !dbg !1609
  %101 = load i64, i64* %y, align 8, !dbg !1610
  %add113 = add nsw i64 %100, %101, !dbg !1611
  %102 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1612
  %width114 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %102, i32 0, i32 0, !dbg !1613
  %103 = load i64, i64* %width114, align 8, !dbg !1613
  %104 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1614
  %call115 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %96, i64 %98, i64 %add113, i64 %103, i64 1, %struct._ExceptionInfo* %104), !dbg !1615
  store %struct._PixelPacket* %call115, %struct._PixelPacket** %p, align 8, !dbg !1616
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1617
  %cmp116 = icmp eq %struct._PixelPacket* %105, null, !dbg !1619
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !1620

if.then118:                                       ; preds = %for.body110
  br label %for.end135, !dbg !1621

if.end119:                                        ; preds = %for.body110
  store i64 0, i64* %x, align 8, !dbg !1622
  br label %for.cond120, !dbg !1624

for.cond120:                                      ; preds = %for.inc130, %if.end119
  %106 = load i64, i64* %x, align 8, !dbg !1625
  %107 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1627
  %width121 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %107, i32 0, i32 0, !dbg !1628
  %108 = load i64, i64* %width121, align 8, !dbg !1628
  %cmp122 = icmp slt i64 %106, %108, !dbg !1629
  br i1 %cmp122, label %for.body124, label %for.end132, !dbg !1630

for.body124:                                      ; preds = %for.cond120
  %109 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1631
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1633
  %call125 = call float @GetPixelIntensity(%struct._Image* %109, %struct._PixelPacket* %110), !dbg !1634
  %call126 = call zeroext i16 @ClampToQuantum(float %call125), !dbg !1635
  %call127 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call126), !dbg !1636
  %111 = load i8*, i8** %q, align 8, !dbg !1637
  %incdec.ptr128 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !1637
  store i8* %incdec.ptr128, i8** %q, align 8, !dbg !1637
  store i8 %call127, i8* %111, align 1, !dbg !1638
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1639
  %incdec.ptr129 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i32 1, !dbg !1639
  store %struct._PixelPacket* %incdec.ptr129, %struct._PixelPacket** %p, align 8, !dbg !1639
  br label %for.inc130, !dbg !1640

for.inc130:                                       ; preds = %for.body124
  %113 = load i64, i64* %x, align 8, !dbg !1641
  %inc131 = add nsw i64 %113, 1, !dbg !1641
  store i64 %inc131, i64* %x, align 8, !dbg !1641
  br label %for.cond120, !dbg !1642, !llvm.loop !1643

for.end132:                                       ; preds = %for.cond120
  br label %for.inc133, !dbg !1645

for.inc133:                                       ; preds = %for.end132
  %114 = load i64, i64* %y, align 8, !dbg !1646
  %inc134 = add nsw i64 %114, 1, !dbg !1646
  store i64 %inc134, i64* %y, align 8, !dbg !1646
  br label %for.cond106, !dbg !1647, !llvm.loop !1648

for.end135:                                       ; preds = %if.then118, %for.cond106
  br label %for.end332, !dbg !1650

if.end136:                                        ; preds = %if.end101
  %115 = load i8*, i8** %map.addr, align 8, !dbg !1651
  %call137 = call i32 @LocaleCompare(i8* %115, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !1653
  %cmp138 = icmp eq i32 %call137, 0, !dbg !1654
  br i1 %cmp138, label %if.then140, label %if.end176, !dbg !1655

if.then140:                                       ; preds = %if.end136
  store i64 0, i64* %y, align 8, !dbg !1656
  br label %for.cond141, !dbg !1659

for.cond141:                                      ; preds = %for.inc173, %if.then140
  %116 = load i64, i64* %y, align 8, !dbg !1660
  %117 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1662
  %height142 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %117, i32 0, i32 1, !dbg !1663
  %118 = load i64, i64* %height142, align 8, !dbg !1663
  %cmp143 = icmp slt i64 %116, %118, !dbg !1664
  br i1 %cmp143, label %for.body145, label %for.end175, !dbg !1665

for.body145:                                      ; preds = %for.cond141
  %119 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1666
  %120 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1668
  %x146 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %120, i32 0, i32 2, !dbg !1669
  %121 = load i64, i64* %x146, align 8, !dbg !1669
  %122 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1670
  %y147 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %122, i32 0, i32 3, !dbg !1671
  %123 = load i64, i64* %y147, align 8, !dbg !1671
  %124 = load i64, i64* %y, align 8, !dbg !1672
  %add148 = add nsw i64 %123, %124, !dbg !1673
  %125 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1674
  %width149 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %125, i32 0, i32 0, !dbg !1675
  %126 = load i64, i64* %width149, align 8, !dbg !1675
  %127 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1676
  %call150 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %119, i64 %121, i64 %add148, i64 %126, i64 1, %struct._ExceptionInfo* %127), !dbg !1677
  store %struct._PixelPacket* %call150, %struct._PixelPacket** %p, align 8, !dbg !1678
  %128 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1679
  %cmp151 = icmp eq %struct._PixelPacket* %128, null, !dbg !1681
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !1682

if.then153:                                       ; preds = %for.body145
  br label %for.end175, !dbg !1683

if.end154:                                        ; preds = %for.body145
  store i64 0, i64* %x, align 8, !dbg !1684
  br label %for.cond155, !dbg !1686

for.cond155:                                      ; preds = %for.inc170, %if.end154
  %129 = load i64, i64* %x, align 8, !dbg !1687
  %130 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1689
  %width156 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %130, i32 0, i32 0, !dbg !1690
  %131 = load i64, i64* %width156, align 8, !dbg !1690
  %cmp157 = icmp slt i64 %129, %131, !dbg !1691
  br i1 %cmp157, label %for.body159, label %for.end172, !dbg !1692

for.body159:                                      ; preds = %for.cond155
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1693
  %red160 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 2, !dbg !1693
  %133 = load i16, i16* %red160, align 2, !dbg !1693
  %call161 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %133), !dbg !1695
  %134 = load i8*, i8** %q, align 8, !dbg !1696
  %incdec.ptr162 = getelementptr inbounds i8, i8* %134, i32 1, !dbg !1696
  store i8* %incdec.ptr162, i8** %q, align 8, !dbg !1696
  store i8 %call161, i8* %134, align 1, !dbg !1697
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1698
  %green163 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 0, i32 1, !dbg !1698
  %136 = load i16, i16* %green163, align 2, !dbg !1698
  %call164 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %136), !dbg !1699
  %137 = load i8*, i8** %q, align 8, !dbg !1700
  %incdec.ptr165 = getelementptr inbounds i8, i8* %137, i32 1, !dbg !1700
  store i8* %incdec.ptr165, i8** %q, align 8, !dbg !1700
  store i8 %call164, i8* %137, align 1, !dbg !1701
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1702
  %blue166 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 0, !dbg !1702
  %139 = load i16, i16* %blue166, align 2, !dbg !1702
  %call167 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %139), !dbg !1703
  %140 = load i8*, i8** %q, align 8, !dbg !1704
  %incdec.ptr168 = getelementptr inbounds i8, i8* %140, i32 1, !dbg !1704
  store i8* %incdec.ptr168, i8** %q, align 8, !dbg !1704
  store i8 %call167, i8* %140, align 1, !dbg !1705
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1706
  %incdec.ptr169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i32 1, !dbg !1706
  store %struct._PixelPacket* %incdec.ptr169, %struct._PixelPacket** %p, align 8, !dbg !1706
  br label %for.inc170, !dbg !1707

for.inc170:                                       ; preds = %for.body159
  %142 = load i64, i64* %x, align 8, !dbg !1708
  %inc171 = add nsw i64 %142, 1, !dbg !1708
  store i64 %inc171, i64* %x, align 8, !dbg !1708
  br label %for.cond155, !dbg !1709, !llvm.loop !1710

for.end172:                                       ; preds = %for.cond155
  br label %for.inc173, !dbg !1712

for.inc173:                                       ; preds = %for.end172
  %143 = load i64, i64* %y, align 8, !dbg !1713
  %inc174 = add nsw i64 %143, 1, !dbg !1713
  store i64 %inc174, i64* %y, align 8, !dbg !1713
  br label %for.cond141, !dbg !1714, !llvm.loop !1715

for.end175:                                       ; preds = %if.then153, %for.cond141
  br label %for.end332, !dbg !1717

if.end176:                                        ; preds = %if.end136
  %144 = load i8*, i8** %map.addr, align 8, !dbg !1718
  %call177 = call i32 @LocaleCompare(i8* %144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !1720
  %cmp178 = icmp eq i32 %call177, 0, !dbg !1721
  br i1 %cmp178, label %if.then180, label %if.end222, !dbg !1722

if.then180:                                       ; preds = %if.end176
  store i64 0, i64* %y, align 8, !dbg !1723
  br label %for.cond181, !dbg !1726

for.cond181:                                      ; preds = %for.inc219, %if.then180
  %145 = load i64, i64* %y, align 8, !dbg !1727
  %146 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1729
  %height182 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %146, i32 0, i32 1, !dbg !1730
  %147 = load i64, i64* %height182, align 8, !dbg !1730
  %cmp183 = icmp slt i64 %145, %147, !dbg !1731
  br i1 %cmp183, label %for.body185, label %for.end221, !dbg !1732

for.body185:                                      ; preds = %for.cond181
  %148 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1733
  %149 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1735
  %x186 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %149, i32 0, i32 2, !dbg !1736
  %150 = load i64, i64* %x186, align 8, !dbg !1736
  %151 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1737
  %y187 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %151, i32 0, i32 3, !dbg !1738
  %152 = load i64, i64* %y187, align 8, !dbg !1738
  %153 = load i64, i64* %y, align 8, !dbg !1739
  %add188 = add nsw i64 %152, %153, !dbg !1740
  %154 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1741
  %width189 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %154, i32 0, i32 0, !dbg !1742
  %155 = load i64, i64* %width189, align 8, !dbg !1742
  %156 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1743
  %call190 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %148, i64 %150, i64 %add188, i64 %155, i64 1, %struct._ExceptionInfo* %156), !dbg !1744
  store %struct._PixelPacket* %call190, %struct._PixelPacket** %p, align 8, !dbg !1745
  %157 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1746
  %cmp191 = icmp eq %struct._PixelPacket* %157, null, !dbg !1748
  br i1 %cmp191, label %if.then193, label %if.end194, !dbg !1749

if.then193:                                       ; preds = %for.body185
  br label %for.end221, !dbg !1750

if.end194:                                        ; preds = %for.body185
  store i64 0, i64* %x, align 8, !dbg !1751
  br label %for.cond195, !dbg !1753

for.cond195:                                      ; preds = %for.inc216, %if.end194
  %158 = load i64, i64* %x, align 8, !dbg !1754
  %159 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1756
  %width196 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %159, i32 0, i32 0, !dbg !1757
  %160 = load i64, i64* %width196, align 8, !dbg !1757
  %cmp197 = icmp slt i64 %158, %160, !dbg !1758
  br i1 %cmp197, label %for.body199, label %for.end218, !dbg !1759

for.body199:                                      ; preds = %for.cond195
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1760
  %red200 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i32 0, i32 2, !dbg !1760
  %162 = load i16, i16* %red200, align 2, !dbg !1760
  %call201 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %162), !dbg !1762
  %163 = load i8*, i8** %q, align 8, !dbg !1763
  %incdec.ptr202 = getelementptr inbounds i8, i8* %163, i32 1, !dbg !1763
  store i8* %incdec.ptr202, i8** %q, align 8, !dbg !1763
  store i8 %call201, i8* %163, align 1, !dbg !1764
  %164 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1765
  %green203 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %164, i32 0, i32 1, !dbg !1765
  %165 = load i16, i16* %green203, align 2, !dbg !1765
  %call204 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %165), !dbg !1766
  %166 = load i8*, i8** %q, align 8, !dbg !1767
  %incdec.ptr205 = getelementptr inbounds i8, i8* %166, i32 1, !dbg !1767
  store i8* %incdec.ptr205, i8** %q, align 8, !dbg !1767
  store i8 %call204, i8* %166, align 1, !dbg !1768
  %167 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1769
  %blue206 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %167, i32 0, i32 0, !dbg !1769
  %168 = load i16, i16* %blue206, align 2, !dbg !1769
  %call207 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %168), !dbg !1770
  %169 = load i8*, i8** %q, align 8, !dbg !1771
  %incdec.ptr208 = getelementptr inbounds i8, i8* %169, i32 1, !dbg !1771
  store i8* %incdec.ptr208, i8** %q, align 8, !dbg !1771
  store i8 %call207, i8* %169, align 1, !dbg !1772
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1773
  %opacity209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i32 0, i32 3, !dbg !1773
  %171 = load i16, i16* %opacity209, align 2, !dbg !1773
  %conv210 = zext i16 %171 to i32, !dbg !1773
  %sub211 = sub nsw i32 65535, %conv210, !dbg !1773
  %conv212 = trunc i32 %sub211 to i16, !dbg !1774
  %call213 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv212), !dbg !1775
  %172 = load i8*, i8** %q, align 8, !dbg !1776
  %incdec.ptr214 = getelementptr inbounds i8, i8* %172, i32 1, !dbg !1776
  store i8* %incdec.ptr214, i8** %q, align 8, !dbg !1776
  store i8 %call213, i8* %172, align 1, !dbg !1777
  %173 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1778
  %incdec.ptr215 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %173, i32 1, !dbg !1778
  store %struct._PixelPacket* %incdec.ptr215, %struct._PixelPacket** %p, align 8, !dbg !1778
  br label %for.inc216, !dbg !1779

for.inc216:                                       ; preds = %for.body199
  %174 = load i64, i64* %x, align 8, !dbg !1780
  %inc217 = add nsw i64 %174, 1, !dbg !1780
  store i64 %inc217, i64* %x, align 8, !dbg !1780
  br label %for.cond195, !dbg !1781, !llvm.loop !1782

for.end218:                                       ; preds = %for.cond195
  br label %for.inc219, !dbg !1784

for.inc219:                                       ; preds = %for.end218
  %175 = load i64, i64* %y, align 8, !dbg !1785
  %inc220 = add nsw i64 %175, 1, !dbg !1785
  store i64 %inc220, i64* %y, align 8, !dbg !1785
  br label %for.cond181, !dbg !1786, !llvm.loop !1787

for.end221:                                       ; preds = %if.then193, %for.cond181
  br label %for.end332, !dbg !1789

if.end222:                                        ; preds = %if.end176
  %176 = load i8*, i8** %map.addr, align 8, !dbg !1790
  %call223 = call i32 @LocaleCompare(i8* %176, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !1792
  %cmp224 = icmp eq i32 %call223, 0, !dbg !1793
  br i1 %cmp224, label %if.then226, label %if.end264, !dbg !1794

if.then226:                                       ; preds = %if.end222
  store i64 0, i64* %y, align 8, !dbg !1795
  br label %for.cond227, !dbg !1798

for.cond227:                                      ; preds = %for.inc261, %if.then226
  %177 = load i64, i64* %y, align 8, !dbg !1799
  %178 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1801
  %height228 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %178, i32 0, i32 1, !dbg !1802
  %179 = load i64, i64* %height228, align 8, !dbg !1802
  %cmp229 = icmp slt i64 %177, %179, !dbg !1803
  br i1 %cmp229, label %for.body231, label %for.end263, !dbg !1804

for.body231:                                      ; preds = %for.cond227
  %180 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1805
  %181 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1807
  %x232 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %181, i32 0, i32 2, !dbg !1808
  %182 = load i64, i64* %x232, align 8, !dbg !1808
  %183 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1809
  %y233 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %183, i32 0, i32 3, !dbg !1810
  %184 = load i64, i64* %y233, align 8, !dbg !1810
  %185 = load i64, i64* %y, align 8, !dbg !1811
  %add234 = add nsw i64 %184, %185, !dbg !1812
  %186 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1813
  %width235 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %186, i32 0, i32 0, !dbg !1814
  %187 = load i64, i64* %width235, align 8, !dbg !1814
  %188 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1815
  %call236 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %180, i64 %182, i64 %add234, i64 %187, i64 1, %struct._ExceptionInfo* %188), !dbg !1816
  store %struct._PixelPacket* %call236, %struct._PixelPacket** %p, align 8, !dbg !1817
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1818
  %cmp237 = icmp eq %struct._PixelPacket* %189, null, !dbg !1820
  br i1 %cmp237, label %if.then239, label %if.end240, !dbg !1821

if.then239:                                       ; preds = %for.body231
  br label %for.end263, !dbg !1822

if.end240:                                        ; preds = %for.body231
  store i64 0, i64* %x, align 8, !dbg !1823
  br label %for.cond241, !dbg !1825

for.cond241:                                      ; preds = %for.inc258, %if.end240
  %190 = load i64, i64* %x, align 8, !dbg !1826
  %191 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1828
  %width242 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %191, i32 0, i32 0, !dbg !1829
  %192 = load i64, i64* %width242, align 8, !dbg !1829
  %cmp243 = icmp slt i64 %190, %192, !dbg !1830
  br i1 %cmp243, label %for.body245, label %for.end260, !dbg !1831

for.body245:                                      ; preds = %for.cond241
  %193 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1832
  %red246 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %193, i32 0, i32 2, !dbg !1832
  %194 = load i16, i16* %red246, align 2, !dbg !1832
  %call247 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %194), !dbg !1834
  %195 = load i8*, i8** %q, align 8, !dbg !1835
  %incdec.ptr248 = getelementptr inbounds i8, i8* %195, i32 1, !dbg !1835
  store i8* %incdec.ptr248, i8** %q, align 8, !dbg !1835
  store i8 %call247, i8* %195, align 1, !dbg !1836
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1837
  %green249 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 1, !dbg !1837
  %197 = load i16, i16* %green249, align 2, !dbg !1837
  %call250 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %197), !dbg !1838
  %198 = load i8*, i8** %q, align 8, !dbg !1839
  %incdec.ptr251 = getelementptr inbounds i8, i8* %198, i32 1, !dbg !1839
  store i8* %incdec.ptr251, i8** %q, align 8, !dbg !1839
  store i8 %call250, i8* %198, align 1, !dbg !1840
  %199 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1841
  %blue252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %199, i32 0, i32 0, !dbg !1841
  %200 = load i16, i16* %blue252, align 2, !dbg !1841
  %call253 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %200), !dbg !1842
  %201 = load i8*, i8** %q, align 8, !dbg !1843
  %incdec.ptr254 = getelementptr inbounds i8, i8* %201, i32 1, !dbg !1843
  store i8* %incdec.ptr254, i8** %q, align 8, !dbg !1843
  store i8 %call253, i8* %201, align 1, !dbg !1844
  %call255 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext 0), !dbg !1845
  %202 = load i8*, i8** %q, align 8, !dbg !1846
  %incdec.ptr256 = getelementptr inbounds i8, i8* %202, i32 1, !dbg !1846
  store i8* %incdec.ptr256, i8** %q, align 8, !dbg !1846
  store i8 %call255, i8* %202, align 1, !dbg !1847
  %203 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1848
  %incdec.ptr257 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %203, i32 1, !dbg !1848
  store %struct._PixelPacket* %incdec.ptr257, %struct._PixelPacket** %p, align 8, !dbg !1848
  br label %for.inc258, !dbg !1849

for.inc258:                                       ; preds = %for.body245
  %204 = load i64, i64* %x, align 8, !dbg !1850
  %inc259 = add nsw i64 %204, 1, !dbg !1850
  store i64 %inc259, i64* %x, align 8, !dbg !1850
  br label %for.cond241, !dbg !1851, !llvm.loop !1852

for.end260:                                       ; preds = %for.cond241
  br label %for.inc261, !dbg !1854

for.inc261:                                       ; preds = %for.end260
  %205 = load i64, i64* %y, align 8, !dbg !1855
  %inc262 = add nsw i64 %205, 1, !dbg !1855
  store i64 %inc262, i64* %y, align 8, !dbg !1855
  br label %for.cond227, !dbg !1856, !llvm.loop !1857

for.end263:                                       ; preds = %if.then239, %for.cond227
  br label %for.end332, !dbg !1859

if.end264:                                        ; preds = %if.end222
  %206 = load i8*, i8** %map.addr, align 8, !dbg !1860
  %call265 = call i64 @strlen(i8* %206) #13, !dbg !1861
  store i64 %call265, i64* %length, align 8, !dbg !1862
  store i64 0, i64* %y, align 8, !dbg !1863
  br label %for.cond266, !dbg !1865

for.cond266:                                      ; preds = %for.inc330, %if.end264
  %207 = load i64, i64* %y, align 8, !dbg !1866
  %208 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1868
  %height267 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %208, i32 0, i32 1, !dbg !1869
  %209 = load i64, i64* %height267, align 8, !dbg !1869
  %cmp268 = icmp slt i64 %207, %209, !dbg !1870
  br i1 %cmp268, label %for.body270, label %for.end332, !dbg !1871

for.body270:                                      ; preds = %for.cond266
  %210 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1872
  %211 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1874
  %x271 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %211, i32 0, i32 2, !dbg !1875
  %212 = load i64, i64* %x271, align 8, !dbg !1875
  %213 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1876
  %y272 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %213, i32 0, i32 3, !dbg !1877
  %214 = load i64, i64* %y272, align 8, !dbg !1877
  %215 = load i64, i64* %y, align 8, !dbg !1878
  %add273 = add nsw i64 %214, %215, !dbg !1879
  %216 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1880
  %width274 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %216, i32 0, i32 0, !dbg !1881
  %217 = load i64, i64* %width274, align 8, !dbg !1881
  %218 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1882
  %call275 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %210, i64 %212, i64 %add273, i64 %217, i64 1, %struct._ExceptionInfo* %218), !dbg !1883
  store %struct._PixelPacket* %call275, %struct._PixelPacket** %p, align 8, !dbg !1884
  %219 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1885
  %cmp276 = icmp eq %struct._PixelPacket* %219, null, !dbg !1887
  br i1 %cmp276, label %if.then278, label %if.end279, !dbg !1888

if.then278:                                       ; preds = %for.body270
  br label %for.end332, !dbg !1889

if.end279:                                        ; preds = %for.body270
  %220 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1890
  %call280 = call i16* @GetVirtualIndexQueue(%struct._Image* %220), !dbg !1891
  store i16* %call280, i16** %indexes, align 8, !dbg !1892
  store i64 0, i64* %x, align 8, !dbg !1893
  br label %for.cond281, !dbg !1895

for.cond281:                                      ; preds = %for.inc327, %if.end279
  %221 = load i64, i64* %x, align 8, !dbg !1896
  %222 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !1898
  %width282 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %222, i32 0, i32 0, !dbg !1899
  %223 = load i64, i64* %width282, align 8, !dbg !1899
  %cmp283 = icmp slt i64 %221, %223, !dbg !1900
  br i1 %cmp283, label %for.body285, label %for.end329, !dbg !1901

for.body285:                                      ; preds = %for.cond281
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1902, metadata !DIExpression()), !dbg !1904
  store i64 0, i64* %i, align 8, !dbg !1905
  br label %for.cond286, !dbg !1907

for.cond286:                                      ; preds = %for.inc323, %for.body285
  %224 = load i64, i64* %i, align 8, !dbg !1908
  %225 = load i64, i64* %length, align 8, !dbg !1910
  %cmp287 = icmp slt i64 %224, %225, !dbg !1911
  br i1 %cmp287, label %for.body289, label %for.end325, !dbg !1912

for.body289:                                      ; preds = %for.cond286
  %226 = load i8*, i8** %q, align 8, !dbg !1913
  store i8 0, i8* %226, align 1, !dbg !1915
  %227 = load i32*, i32** %quantum_map.addr, align 8, !dbg !1916
  %228 = load i64, i64* %i, align 8, !dbg !1917
  %arrayidx = getelementptr inbounds i32, i32* %227, i64 %228, !dbg !1916
  %229 = load i32, i32* %arrayidx, align 4, !dbg !1916
  switch i32 %229, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb292
    i32 12, label %sw.bb292
    i32 3, label %sw.bb295
    i32 19, label %sw.bb295
    i32 1, label %sw.bb298
    i32 13, label %sw.bb304
    i32 2, label %sw.bb307
    i32 11, label %sw.bb318
  ], !dbg !1918

sw.bb:                                            ; preds = %for.body289, %for.body289
  %230 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1919
  %red290 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %230, i32 0, i32 2, !dbg !1919
  %231 = load i16, i16* %red290, align 2, !dbg !1919
  %call291 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %231), !dbg !1922
  %232 = load i8*, i8** %q, align 8, !dbg !1923
  store i8 %call291, i8* %232, align 1, !dbg !1924
  br label %sw.epilog, !dbg !1925

sw.bb292:                                         ; preds = %for.body289, %for.body289
  %233 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1926
  %green293 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %233, i32 0, i32 1, !dbg !1926
  %234 = load i16, i16* %green293, align 2, !dbg !1926
  %call294 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %234), !dbg !1928
  %235 = load i8*, i8** %q, align 8, !dbg !1929
  store i8 %call294, i8* %235, align 1, !dbg !1930
  br label %sw.epilog, !dbg !1931

sw.bb295:                                         ; preds = %for.body289, %for.body289
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1932
  %blue296 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 0, i32 0, !dbg !1932
  %237 = load i16, i16* %blue296, align 2, !dbg !1932
  %call297 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %237), !dbg !1934
  %238 = load i8*, i8** %q, align 8, !dbg !1935
  store i8 %call297, i8* %238, align 1, !dbg !1936
  br label %sw.epilog, !dbg !1937

sw.bb298:                                         ; preds = %for.body289
  %239 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1938
  %opacity299 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %239, i32 0, i32 3, !dbg !1938
  %240 = load i16, i16* %opacity299, align 2, !dbg !1938
  %conv300 = zext i16 %240 to i32, !dbg !1938
  %sub301 = sub nsw i32 65535, %conv300, !dbg !1938
  %conv302 = trunc i32 %sub301 to i16, !dbg !1940
  %call303 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv302), !dbg !1941
  %241 = load i8*, i8** %q, align 8, !dbg !1942
  store i8 %call303, i8* %241, align 1, !dbg !1943
  br label %sw.epilog, !dbg !1944

sw.bb304:                                         ; preds = %for.body289
  %242 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1945
  %opacity305 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %242, i32 0, i32 3, !dbg !1945
  %243 = load i16, i16* %opacity305, align 2, !dbg !1945
  %call306 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %243), !dbg !1947
  %244 = load i8*, i8** %q, align 8, !dbg !1948
  store i8 %call306, i8* %244, align 1, !dbg !1949
  br label %sw.epilog, !dbg !1950

sw.bb307:                                         ; preds = %for.body289
  %245 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1951
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %245, i32 0, i32 1, !dbg !1954
  %246 = load i32, i32* %colorspace, align 4, !dbg !1954
  %cmp308 = icmp eq i32 %246, 12, !dbg !1955
  br i1 %cmp308, label %if.then310, label %if.end317, !dbg !1956

if.then310:                                       ; preds = %sw.bb307
  %247 = load i16*, i16** %indexes, align 8, !dbg !1957
  %248 = load i64, i64* %x, align 8, !dbg !1957
  %add.ptr = getelementptr inbounds i16, i16* %247, i64 %248, !dbg !1957
  %cmp311 = icmp eq i16* %add.ptr, null, !dbg !1957
  br i1 %cmp311, label %cond.true, label %cond.false, !dbg !1957

cond.true:                                        ; preds = %if.then310
  br label %cond.end, !dbg !1957

cond.false:                                       ; preds = %if.then310
  %249 = load i16*, i16** %indexes, align 8, !dbg !1957
  %250 = load i64, i64* %x, align 8, !dbg !1957
  %add.ptr313 = getelementptr inbounds i16, i16* %249, i64 %250, !dbg !1957
  %251 = load i16, i16* %add.ptr313, align 2, !dbg !1957
  %conv314 = zext i16 %251 to i32, !dbg !1957
  br label %cond.end, !dbg !1957

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv314, %cond.false ], !dbg !1957
  %conv315 = trunc i32 %cond to i16, !dbg !1957
  %call316 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %conv315), !dbg !1958
  %252 = load i8*, i8** %q, align 8, !dbg !1959
  store i8 %call316, i8* %252, align 1, !dbg !1960
  br label %if.end317, !dbg !1961

if.end317:                                        ; preds = %cond.end, %sw.bb307
  br label %sw.epilog, !dbg !1962

sw.bb318:                                         ; preds = %for.body289
  %253 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1963
  %254 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1965
  %call319 = call float @GetPixelIntensity(%struct._Image* %253, %struct._PixelPacket* %254), !dbg !1966
  %call320 = call zeroext i16 @ClampToQuantum(float %call319), !dbg !1967
  %call321 = call zeroext i8 @ScaleQuantumToChar(i16 zeroext %call320), !dbg !1968
  %255 = load i8*, i8** %q, align 8, !dbg !1969
  store i8 %call321, i8* %255, align 1, !dbg !1970
  br label %sw.epilog, !dbg !1971

sw.default:                                       ; preds = %for.body289
  br label %sw.epilog, !dbg !1972

sw.epilog:                                        ; preds = %sw.default, %sw.bb318, %if.end317, %sw.bb304, %sw.bb298, %sw.bb295, %sw.bb292, %sw.bb
  %256 = load i8*, i8** %q, align 8, !dbg !1973
  %incdec.ptr322 = getelementptr inbounds i8, i8* %256, i32 1, !dbg !1973
  store i8* %incdec.ptr322, i8** %q, align 8, !dbg !1973
  br label %for.inc323, !dbg !1974

for.inc323:                                       ; preds = %sw.epilog
  %257 = load i64, i64* %i, align 8, !dbg !1975
  %inc324 = add nsw i64 %257, 1, !dbg !1975
  store i64 %inc324, i64* %i, align 8, !dbg !1975
  br label %for.cond286, !dbg !1976, !llvm.loop !1977

for.end325:                                       ; preds = %for.cond286
  %258 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1979
  %incdec.ptr326 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %258, i32 1, !dbg !1979
  store %struct._PixelPacket* %incdec.ptr326, %struct._PixelPacket** %p, align 8, !dbg !1979
  br label %for.inc327, !dbg !1980

for.inc327:                                       ; preds = %for.end325
  %259 = load i64, i64* %x, align 8, !dbg !1981
  %inc328 = add nsw i64 %259, 1, !dbg !1981
  store i64 %inc328, i64* %x, align 8, !dbg !1981
  br label %for.cond281, !dbg !1982, !llvm.loop !1983

for.end329:                                       ; preds = %for.cond281
  br label %for.inc330, !dbg !1985

for.inc330:                                       ; preds = %for.end329
  %260 = load i64, i64* %y, align 8, !dbg !1986
  %inc331 = add nsw i64 %260, 1, !dbg !1986
  store i64 %inc331, i64* %y, align 8, !dbg !1986
  br label %for.cond266, !dbg !1987, !llvm.loop !1988

for.end332:                                       ; preds = %for.end19, %for.end58, %for.end100, %for.end135, %for.end175, %for.end221, %for.end263, %if.then278, %for.cond266
  ret void, !dbg !1990
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportDoublePixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !1991 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %q = alloca double*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1992, metadata !DIExpression()), !dbg !1993
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !1994, metadata !DIExpression()), !dbg !1995
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !1996, metadata !DIExpression()), !dbg !1997
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !1998, metadata !DIExpression()), !dbg !1999
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !2000, metadata !DIExpression()), !dbg !2001
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2002, metadata !DIExpression()), !dbg !2003
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2004, metadata !DIExpression()), !dbg !2005
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !2006, metadata !DIExpression()), !dbg !2007
  call void @llvm.dbg.declare(metadata double** %q, metadata !2008, metadata !DIExpression()), !dbg !2009
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2010, metadata !DIExpression()), !dbg !2011
  call void @llvm.dbg.declare(metadata i64* %length, metadata !2012, metadata !DIExpression()), !dbg !2013
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2014, metadata !DIExpression()), !dbg !2015
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !2016
  %1 = bitcast i8* %0 to double*, !dbg !2017
  store double* %1, double** %q, align 8, !dbg !2018
  %2 = load i8*, i8** %map.addr, align 8, !dbg !2019
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !2021
  %cmp = icmp eq i32 %call, 0, !dbg !2022
  br i1 %cmp, label %if.then, label %if.end24, !dbg !2023

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !2024
  br label %for.cond, !dbg !2027

for.cond:                                         ; preds = %for.inc21, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !2028
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2030
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !2031
  %5 = load i64, i64* %height, align 8, !dbg !2031
  %cmp1 = icmp slt i64 %3, %5, !dbg !2032
  br i1 %cmp1, label %for.body, label %for.end23, !dbg !2033

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2034
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2036
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !2037
  %8 = load i64, i64* %x2, align 8, !dbg !2037
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2038
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !2039
  %10 = load i64, i64* %y3, align 8, !dbg !2039
  %11 = load i64, i64* %y, align 8, !dbg !2040
  %add = add nsw i64 %10, %11, !dbg !2041
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2042
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !2043
  %13 = load i64, i64* %width, align 8, !dbg !2043
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2044
  %call4 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !2045
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %p, align 8, !dbg !2046
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2047
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !2049
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !2050

if.then6:                                         ; preds = %for.body
  br label %for.end23, !dbg !2051

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !2052
  br label %for.cond7, !dbg !2054

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !2055
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2057
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !2058
  %18 = load i64, i64* %width8, align 8, !dbg !2058
  %cmp9 = icmp slt i64 %16, %18, !dbg !2059
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !2060

for.body10:                                       ; preds = %for.cond7
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2061
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 0, i32 0, !dbg !2061
  %20 = load i16, i16* %blue, align 2, !dbg !2061
  %conv = zext i16 %20 to i32, !dbg !2061
  %conv11 = sitofp i32 %conv to double, !dbg !2061
  %mul = fmul double 0x3EF0001000100010, %conv11, !dbg !2063
  %21 = load double*, double** %q, align 8, !dbg !2064
  %incdec.ptr = getelementptr inbounds double, double* %21, i32 1, !dbg !2064
  store double* %incdec.ptr, double** %q, align 8, !dbg !2064
  store double %mul, double* %21, align 8, !dbg !2065
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2066
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 1, !dbg !2066
  %23 = load i16, i16* %green, align 2, !dbg !2066
  %conv12 = zext i16 %23 to i32, !dbg !2066
  %conv13 = sitofp i32 %conv12 to double, !dbg !2066
  %mul14 = fmul double 0x3EF0001000100010, %conv13, !dbg !2067
  %24 = load double*, double** %q, align 8, !dbg !2068
  %incdec.ptr15 = getelementptr inbounds double, double* %24, i32 1, !dbg !2068
  store double* %incdec.ptr15, double** %q, align 8, !dbg !2068
  store double %mul14, double* %24, align 8, !dbg !2069
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2070
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 2, !dbg !2070
  %26 = load i16, i16* %red, align 2, !dbg !2070
  %conv16 = zext i16 %26 to i32, !dbg !2070
  %conv17 = sitofp i32 %conv16 to double, !dbg !2070
  %mul18 = fmul double 0x3EF0001000100010, %conv17, !dbg !2071
  %27 = load double*, double** %q, align 8, !dbg !2072
  %incdec.ptr19 = getelementptr inbounds double, double* %27, i32 1, !dbg !2072
  store double* %incdec.ptr19, double** %q, align 8, !dbg !2072
  store double %mul18, double* %27, align 8, !dbg !2073
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2074
  %incdec.ptr20 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !2074
  store %struct._PixelPacket* %incdec.ptr20, %struct._PixelPacket** %p, align 8, !dbg !2074
  br label %for.inc, !dbg !2075

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !2076
  %inc = add nsw i64 %29, 1, !dbg !2076
  store i64 %inc, i64* %x, align 8, !dbg !2076
  br label %for.cond7, !dbg !2077, !llvm.loop !2078

for.end:                                          ; preds = %for.cond7
  br label %for.inc21, !dbg !2080

for.inc21:                                        ; preds = %for.end
  %30 = load i64, i64* %y, align 8, !dbg !2081
  %inc22 = add nsw i64 %30, 1, !dbg !2081
  store i64 %inc22, i64* %y, align 8, !dbg !2081
  br label %for.cond, !dbg !2082, !llvm.loop !2083

for.end23:                                        ; preds = %if.then6, %for.cond
  br label %for.end383, !dbg !2085

if.end24:                                         ; preds = %entry
  %31 = load i8*, i8** %map.addr, align 8, !dbg !2086
  %call25 = call i32 @LocaleCompare(i8* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !2088
  %cmp26 = icmp eq i32 %call25, 0, !dbg !2089
  br i1 %cmp26, label %if.then28, label %if.end76, !dbg !2090

if.then28:                                        ; preds = %if.end24
  store i64 0, i64* %y, align 8, !dbg !2091
  br label %for.cond29, !dbg !2094

for.cond29:                                       ; preds = %for.inc73, %if.then28
  %32 = load i64, i64* %y, align 8, !dbg !2095
  %33 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2097
  %height30 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %33, i32 0, i32 1, !dbg !2098
  %34 = load i64, i64* %height30, align 8, !dbg !2098
  %cmp31 = icmp slt i64 %32, %34, !dbg !2099
  br i1 %cmp31, label %for.body33, label %for.end75, !dbg !2100

for.body33:                                       ; preds = %for.cond29
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2101
  %36 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2103
  %x34 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %36, i32 0, i32 2, !dbg !2104
  %37 = load i64, i64* %x34, align 8, !dbg !2104
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2105
  %y35 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 3, !dbg !2106
  %39 = load i64, i64* %y35, align 8, !dbg !2106
  %40 = load i64, i64* %y, align 8, !dbg !2107
  %add36 = add nsw i64 %39, %40, !dbg !2108
  %41 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2109
  %width37 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %41, i32 0, i32 0, !dbg !2110
  %42 = load i64, i64* %width37, align 8, !dbg !2110
  %43 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2111
  %call38 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %35, i64 %37, i64 %add36, i64 %42, i64 1, %struct._ExceptionInfo* %43), !dbg !2112
  store %struct._PixelPacket* %call38, %struct._PixelPacket** %p, align 8, !dbg !2113
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2114
  %cmp39 = icmp eq %struct._PixelPacket* %44, null, !dbg !2116
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !2117

if.then41:                                        ; preds = %for.body33
  br label %for.end75, !dbg !2118

if.end42:                                         ; preds = %for.body33
  store i64 0, i64* %x, align 8, !dbg !2119
  br label %for.cond43, !dbg !2121

for.cond43:                                       ; preds = %for.inc70, %if.end42
  %45 = load i64, i64* %x, align 8, !dbg !2122
  %46 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2124
  %width44 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %46, i32 0, i32 0, !dbg !2125
  %47 = load i64, i64* %width44, align 8, !dbg !2125
  %cmp45 = icmp slt i64 %45, %47, !dbg !2126
  br i1 %cmp45, label %for.body47, label %for.end72, !dbg !2127

for.body47:                                       ; preds = %for.cond43
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2128
  %blue48 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 0, !dbg !2128
  %49 = load i16, i16* %blue48, align 2, !dbg !2128
  %conv49 = zext i16 %49 to i32, !dbg !2128
  %conv50 = sitofp i32 %conv49 to double, !dbg !2128
  %mul51 = fmul double 0x3EF0001000100010, %conv50, !dbg !2130
  %50 = load double*, double** %q, align 8, !dbg !2131
  %incdec.ptr52 = getelementptr inbounds double, double* %50, i32 1, !dbg !2131
  store double* %incdec.ptr52, double** %q, align 8, !dbg !2131
  store double %mul51, double* %50, align 8, !dbg !2132
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2133
  %green53 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 0, i32 1, !dbg !2133
  %52 = load i16, i16* %green53, align 2, !dbg !2133
  %conv54 = zext i16 %52 to i32, !dbg !2133
  %conv55 = sitofp i32 %conv54 to double, !dbg !2133
  %mul56 = fmul double 0x3EF0001000100010, %conv55, !dbg !2134
  %53 = load double*, double** %q, align 8, !dbg !2135
  %incdec.ptr57 = getelementptr inbounds double, double* %53, i32 1, !dbg !2135
  store double* %incdec.ptr57, double** %q, align 8, !dbg !2135
  store double %mul56, double* %53, align 8, !dbg !2136
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2137
  %red58 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !2137
  %55 = load i16, i16* %red58, align 2, !dbg !2137
  %conv59 = zext i16 %55 to i32, !dbg !2137
  %conv60 = sitofp i32 %conv59 to double, !dbg !2137
  %mul61 = fmul double 0x3EF0001000100010, %conv60, !dbg !2138
  %56 = load double*, double** %q, align 8, !dbg !2139
  %incdec.ptr62 = getelementptr inbounds double, double* %56, i32 1, !dbg !2139
  store double* %incdec.ptr62, double** %q, align 8, !dbg !2139
  store double %mul61, double* %56, align 8, !dbg !2140
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2141
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !2141
  %58 = load i16, i16* %opacity, align 2, !dbg !2141
  %conv63 = zext i16 %58 to i32, !dbg !2141
  %sub = sub nsw i32 65535, %conv63, !dbg !2142
  %conv64 = trunc i32 %sub to i16, !dbg !2143
  %conv65 = zext i16 %conv64 to i32, !dbg !2144
  %conv66 = sitofp i32 %conv65 to double, !dbg !2144
  %mul67 = fmul double 0x3EF0001000100010, %conv66, !dbg !2145
  %59 = load double*, double** %q, align 8, !dbg !2146
  %incdec.ptr68 = getelementptr inbounds double, double* %59, i32 1, !dbg !2146
  store double* %incdec.ptr68, double** %q, align 8, !dbg !2146
  store double %mul67, double* %59, align 8, !dbg !2147
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2148
  %incdec.ptr69 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 1, !dbg !2148
  store %struct._PixelPacket* %incdec.ptr69, %struct._PixelPacket** %p, align 8, !dbg !2148
  br label %for.inc70, !dbg !2149

for.inc70:                                        ; preds = %for.body47
  %61 = load i64, i64* %x, align 8, !dbg !2150
  %inc71 = add nsw i64 %61, 1, !dbg !2150
  store i64 %inc71, i64* %x, align 8, !dbg !2150
  br label %for.cond43, !dbg !2151, !llvm.loop !2152

for.end72:                                        ; preds = %for.cond43
  br label %for.inc73, !dbg !2154

for.inc73:                                        ; preds = %for.end72
  %62 = load i64, i64* %y, align 8, !dbg !2155
  %inc74 = add nsw i64 %62, 1, !dbg !2155
  store i64 %inc74, i64* %y, align 8, !dbg !2155
  br label %for.cond29, !dbg !2156, !llvm.loop !2157

for.end75:                                        ; preds = %if.then41, %for.cond29
  br label %for.end383, !dbg !2159

if.end76:                                         ; preds = %if.end24
  %63 = load i8*, i8** %map.addr, align 8, !dbg !2160
  %call77 = call i32 @LocaleCompare(i8* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !2162
  %cmp78 = icmp eq i32 %call77, 0, !dbg !2163
  br i1 %cmp78, label %if.then80, label %if.end123, !dbg !2164

if.then80:                                        ; preds = %if.end76
  store i64 0, i64* %y, align 8, !dbg !2165
  br label %for.cond81, !dbg !2168

for.cond81:                                       ; preds = %for.inc120, %if.then80
  %64 = load i64, i64* %y, align 8, !dbg !2169
  %65 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2171
  %height82 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %65, i32 0, i32 1, !dbg !2172
  %66 = load i64, i64* %height82, align 8, !dbg !2172
  %cmp83 = icmp slt i64 %64, %66, !dbg !2173
  br i1 %cmp83, label %for.body85, label %for.end122, !dbg !2174

for.body85:                                       ; preds = %for.cond81
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2175
  %68 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2177
  %x86 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %68, i32 0, i32 2, !dbg !2178
  %69 = load i64, i64* %x86, align 8, !dbg !2178
  %70 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2179
  %y87 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %70, i32 0, i32 3, !dbg !2180
  %71 = load i64, i64* %y87, align 8, !dbg !2180
  %72 = load i64, i64* %y, align 8, !dbg !2181
  %add88 = add nsw i64 %71, %72, !dbg !2182
  %73 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2183
  %width89 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %73, i32 0, i32 0, !dbg !2184
  %74 = load i64, i64* %width89, align 8, !dbg !2184
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2185
  %call90 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %67, i64 %69, i64 %add88, i64 %74, i64 1, %struct._ExceptionInfo* %75), !dbg !2186
  store %struct._PixelPacket* %call90, %struct._PixelPacket** %p, align 8, !dbg !2187
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2188
  %cmp91 = icmp eq %struct._PixelPacket* %76, null, !dbg !2190
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !2191

if.then93:                                        ; preds = %for.body85
  br label %for.end122, !dbg !2192

if.end94:                                         ; preds = %for.body85
  store i64 0, i64* %x, align 8, !dbg !2193
  br label %for.cond95, !dbg !2195

for.cond95:                                       ; preds = %for.inc117, %if.end94
  %77 = load i64, i64* %x, align 8, !dbg !2196
  %78 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2198
  %width96 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %78, i32 0, i32 0, !dbg !2199
  %79 = load i64, i64* %width96, align 8, !dbg !2199
  %cmp97 = icmp slt i64 %77, %79, !dbg !2200
  br i1 %cmp97, label %for.body99, label %for.end119, !dbg !2201

for.body99:                                       ; preds = %for.cond95
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2202
  %blue100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 0, !dbg !2202
  %81 = load i16, i16* %blue100, align 2, !dbg !2202
  %conv101 = zext i16 %81 to i32, !dbg !2202
  %conv102 = sitofp i32 %conv101 to double, !dbg !2202
  %mul103 = fmul double 0x3EF0001000100010, %conv102, !dbg !2204
  %82 = load double*, double** %q, align 8, !dbg !2205
  %incdec.ptr104 = getelementptr inbounds double, double* %82, i32 1, !dbg !2205
  store double* %incdec.ptr104, double** %q, align 8, !dbg !2205
  store double %mul103, double* %82, align 8, !dbg !2206
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2207
  %green105 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 1, !dbg !2207
  %84 = load i16, i16* %green105, align 2, !dbg !2207
  %conv106 = zext i16 %84 to i32, !dbg !2207
  %conv107 = sitofp i32 %conv106 to double, !dbg !2207
  %mul108 = fmul double 0x3EF0001000100010, %conv107, !dbg !2208
  %85 = load double*, double** %q, align 8, !dbg !2209
  %incdec.ptr109 = getelementptr inbounds double, double* %85, i32 1, !dbg !2209
  store double* %incdec.ptr109, double** %q, align 8, !dbg !2209
  store double %mul108, double* %85, align 8, !dbg !2210
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2211
  %red110 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 2, !dbg !2211
  %87 = load i16, i16* %red110, align 2, !dbg !2211
  %conv111 = zext i16 %87 to i32, !dbg !2211
  %conv112 = sitofp i32 %conv111 to double, !dbg !2211
  %mul113 = fmul double 0x3EF0001000100010, %conv112, !dbg !2212
  %88 = load double*, double** %q, align 8, !dbg !2213
  %incdec.ptr114 = getelementptr inbounds double, double* %88, i32 1, !dbg !2213
  store double* %incdec.ptr114, double** %q, align 8, !dbg !2213
  store double %mul113, double* %88, align 8, !dbg !2214
  %89 = load double*, double** %q, align 8, !dbg !2215
  %incdec.ptr115 = getelementptr inbounds double, double* %89, i32 1, !dbg !2215
  store double* %incdec.ptr115, double** %q, align 8, !dbg !2215
  store double 0.000000e+00, double* %89, align 8, !dbg !2216
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2217
  %incdec.ptr116 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 1, !dbg !2217
  store %struct._PixelPacket* %incdec.ptr116, %struct._PixelPacket** %p, align 8, !dbg !2217
  br label %for.inc117, !dbg !2218

for.inc117:                                       ; preds = %for.body99
  %91 = load i64, i64* %x, align 8, !dbg !2219
  %inc118 = add nsw i64 %91, 1, !dbg !2219
  store i64 %inc118, i64* %x, align 8, !dbg !2219
  br label %for.cond95, !dbg !2220, !llvm.loop !2221

for.end119:                                       ; preds = %for.cond95
  br label %for.inc120, !dbg !2223

for.inc120:                                       ; preds = %for.end119
  %92 = load i64, i64* %y, align 8, !dbg !2224
  %inc121 = add nsw i64 %92, 1, !dbg !2224
  store i64 %inc121, i64* %y, align 8, !dbg !2224
  br label %for.cond81, !dbg !2225, !llvm.loop !2226

for.end122:                                       ; preds = %if.then93, %for.cond81
  br label %for.end383, !dbg !2228

if.end123:                                        ; preds = %if.end76
  %93 = load i8*, i8** %map.addr, align 8, !dbg !2229
  %call124 = call i32 @LocaleCompare(i8* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !2231
  %cmp125 = icmp eq i32 %call124, 0, !dbg !2232
  br i1 %cmp125, label %if.then127, label %if.end158, !dbg !2233

if.then127:                                       ; preds = %if.end123
  store i64 0, i64* %y, align 8, !dbg !2234
  br label %for.cond128, !dbg !2237

for.cond128:                                      ; preds = %for.inc155, %if.then127
  %94 = load i64, i64* %y, align 8, !dbg !2238
  %95 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2240
  %height129 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %95, i32 0, i32 1, !dbg !2241
  %96 = load i64, i64* %height129, align 8, !dbg !2241
  %cmp130 = icmp slt i64 %94, %96, !dbg !2242
  br i1 %cmp130, label %for.body132, label %for.end157, !dbg !2243

for.body132:                                      ; preds = %for.cond128
  %97 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2244
  %98 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2246
  %x133 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %98, i32 0, i32 2, !dbg !2247
  %99 = load i64, i64* %x133, align 8, !dbg !2247
  %100 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2248
  %y134 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %100, i32 0, i32 3, !dbg !2249
  %101 = load i64, i64* %y134, align 8, !dbg !2249
  %102 = load i64, i64* %y, align 8, !dbg !2250
  %add135 = add nsw i64 %101, %102, !dbg !2251
  %103 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2252
  %width136 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %103, i32 0, i32 0, !dbg !2253
  %104 = load i64, i64* %width136, align 8, !dbg !2253
  %105 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2254
  %call137 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %97, i64 %99, i64 %add135, i64 %104, i64 1, %struct._ExceptionInfo* %105), !dbg !2255
  store %struct._PixelPacket* %call137, %struct._PixelPacket** %p, align 8, !dbg !2256
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2257
  %cmp138 = icmp eq %struct._PixelPacket* %106, null, !dbg !2259
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !2260

if.then140:                                       ; preds = %for.body132
  br label %for.end157, !dbg !2261

if.end141:                                        ; preds = %for.body132
  store i64 0, i64* %x, align 8, !dbg !2262
  br label %for.cond142, !dbg !2264

for.cond142:                                      ; preds = %for.inc152, %if.end141
  %107 = load i64, i64* %x, align 8, !dbg !2265
  %108 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2267
  %width143 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %108, i32 0, i32 0, !dbg !2268
  %109 = load i64, i64* %width143, align 8, !dbg !2268
  %cmp144 = icmp slt i64 %107, %109, !dbg !2269
  br i1 %cmp144, label %for.body146, label %for.end154, !dbg !2270

for.body146:                                      ; preds = %for.cond142
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2271
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2273
  %call147 = call float @GetPixelIntensity(%struct._Image* %110, %struct._PixelPacket* %111), !dbg !2274
  %conv148 = fpext float %call147 to double, !dbg !2274
  %mul149 = fmul double 0x3EF0001000100010, %conv148, !dbg !2275
  %112 = load double*, double** %q, align 8, !dbg !2276
  %incdec.ptr150 = getelementptr inbounds double, double* %112, i32 1, !dbg !2276
  store double* %incdec.ptr150, double** %q, align 8, !dbg !2276
  store double %mul149, double* %112, align 8, !dbg !2277
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2278
  %incdec.ptr151 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !2278
  store %struct._PixelPacket* %incdec.ptr151, %struct._PixelPacket** %p, align 8, !dbg !2278
  br label %for.inc152, !dbg !2279

for.inc152:                                       ; preds = %for.body146
  %114 = load i64, i64* %x, align 8, !dbg !2280
  %inc153 = add nsw i64 %114, 1, !dbg !2280
  store i64 %inc153, i64* %x, align 8, !dbg !2280
  br label %for.cond142, !dbg !2281, !llvm.loop !2282

for.end154:                                       ; preds = %for.cond142
  br label %for.inc155, !dbg !2284

for.inc155:                                       ; preds = %for.end154
  %115 = load i64, i64* %y, align 8, !dbg !2285
  %inc156 = add nsw i64 %115, 1, !dbg !2285
  store i64 %inc156, i64* %y, align 8, !dbg !2285
  br label %for.cond128, !dbg !2286, !llvm.loop !2287

for.end157:                                       ; preds = %if.then140, %for.cond128
  br label %for.end383, !dbg !2289

if.end158:                                        ; preds = %if.end123
  %116 = load i8*, i8** %map.addr, align 8, !dbg !2290
  %call159 = call i32 @LocaleCompare(i8* %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !2292
  %cmp160 = icmp eq i32 %call159, 0, !dbg !2293
  br i1 %cmp160, label %if.then162, label %if.end204, !dbg !2294

if.then162:                                       ; preds = %if.end158
  store i64 0, i64* %y, align 8, !dbg !2295
  br label %for.cond163, !dbg !2298

for.cond163:                                      ; preds = %for.inc201, %if.then162
  %117 = load i64, i64* %y, align 8, !dbg !2299
  %118 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2301
  %height164 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %118, i32 0, i32 1, !dbg !2302
  %119 = load i64, i64* %height164, align 8, !dbg !2302
  %cmp165 = icmp slt i64 %117, %119, !dbg !2303
  br i1 %cmp165, label %for.body167, label %for.end203, !dbg !2304

for.body167:                                      ; preds = %for.cond163
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2305
  %121 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2307
  %x168 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %121, i32 0, i32 2, !dbg !2308
  %122 = load i64, i64* %x168, align 8, !dbg !2308
  %123 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2309
  %y169 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %123, i32 0, i32 3, !dbg !2310
  %124 = load i64, i64* %y169, align 8, !dbg !2310
  %125 = load i64, i64* %y, align 8, !dbg !2311
  %add170 = add nsw i64 %124, %125, !dbg !2312
  %126 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2313
  %width171 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %126, i32 0, i32 0, !dbg !2314
  %127 = load i64, i64* %width171, align 8, !dbg !2314
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2315
  %call172 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %120, i64 %122, i64 %add170, i64 %127, i64 1, %struct._ExceptionInfo* %128), !dbg !2316
  store %struct._PixelPacket* %call172, %struct._PixelPacket** %p, align 8, !dbg !2317
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2318
  %cmp173 = icmp eq %struct._PixelPacket* %129, null, !dbg !2320
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !2321

if.then175:                                       ; preds = %for.body167
  br label %for.end203, !dbg !2322

if.end176:                                        ; preds = %for.body167
  store i64 0, i64* %x, align 8, !dbg !2323
  br label %for.cond177, !dbg !2325

for.cond177:                                      ; preds = %for.inc198, %if.end176
  %130 = load i64, i64* %x, align 8, !dbg !2326
  %131 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2328
  %width178 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %131, i32 0, i32 0, !dbg !2329
  %132 = load i64, i64* %width178, align 8, !dbg !2329
  %cmp179 = icmp slt i64 %130, %132, !dbg !2330
  br i1 %cmp179, label %for.body181, label %for.end200, !dbg !2331

for.body181:                                      ; preds = %for.cond177
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2332
  %red182 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 2, !dbg !2332
  %134 = load i16, i16* %red182, align 2, !dbg !2332
  %conv183 = zext i16 %134 to i32, !dbg !2332
  %conv184 = sitofp i32 %conv183 to double, !dbg !2332
  %mul185 = fmul double 0x3EF0001000100010, %conv184, !dbg !2334
  %135 = load double*, double** %q, align 8, !dbg !2335
  %incdec.ptr186 = getelementptr inbounds double, double* %135, i32 1, !dbg !2335
  store double* %incdec.ptr186, double** %q, align 8, !dbg !2335
  store double %mul185, double* %135, align 8, !dbg !2336
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2337
  %green187 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !2337
  %137 = load i16, i16* %green187, align 2, !dbg !2337
  %conv188 = zext i16 %137 to i32, !dbg !2337
  %conv189 = sitofp i32 %conv188 to double, !dbg !2337
  %mul190 = fmul double 0x3EF0001000100010, %conv189, !dbg !2338
  %138 = load double*, double** %q, align 8, !dbg !2339
  %incdec.ptr191 = getelementptr inbounds double, double* %138, i32 1, !dbg !2339
  store double* %incdec.ptr191, double** %q, align 8, !dbg !2339
  store double %mul190, double* %138, align 8, !dbg !2340
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2341
  %blue192 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 0, i32 0, !dbg !2341
  %140 = load i16, i16* %blue192, align 2, !dbg !2341
  %conv193 = zext i16 %140 to i32, !dbg !2341
  %conv194 = sitofp i32 %conv193 to double, !dbg !2341
  %mul195 = fmul double 0x3EF0001000100010, %conv194, !dbg !2342
  %141 = load double*, double** %q, align 8, !dbg !2343
  %incdec.ptr196 = getelementptr inbounds double, double* %141, i32 1, !dbg !2343
  store double* %incdec.ptr196, double** %q, align 8, !dbg !2343
  store double %mul195, double* %141, align 8, !dbg !2344
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2345
  %incdec.ptr197 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 1, !dbg !2345
  store %struct._PixelPacket* %incdec.ptr197, %struct._PixelPacket** %p, align 8, !dbg !2345
  br label %for.inc198, !dbg !2346

for.inc198:                                       ; preds = %for.body181
  %143 = load i64, i64* %x, align 8, !dbg !2347
  %inc199 = add nsw i64 %143, 1, !dbg !2347
  store i64 %inc199, i64* %x, align 8, !dbg !2347
  br label %for.cond177, !dbg !2348, !llvm.loop !2349

for.end200:                                       ; preds = %for.cond177
  br label %for.inc201, !dbg !2351

for.inc201:                                       ; preds = %for.end200
  %144 = load i64, i64* %y, align 8, !dbg !2352
  %inc202 = add nsw i64 %144, 1, !dbg !2352
  store i64 %inc202, i64* %y, align 8, !dbg !2352
  br label %for.cond163, !dbg !2353, !llvm.loop !2354

for.end203:                                       ; preds = %if.then175, %for.cond163
  br label %for.end383, !dbg !2356

if.end204:                                        ; preds = %if.end158
  %145 = load i8*, i8** %map.addr, align 8, !dbg !2357
  %call205 = call i32 @LocaleCompare(i8* %145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !2359
  %cmp206 = icmp eq i32 %call205, 0, !dbg !2360
  br i1 %cmp206, label %if.then208, label %if.end258, !dbg !2361

if.then208:                                       ; preds = %if.end204
  store i64 0, i64* %y, align 8, !dbg !2362
  br label %for.cond209, !dbg !2365

for.cond209:                                      ; preds = %for.inc255, %if.then208
  %146 = load i64, i64* %y, align 8, !dbg !2366
  %147 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2368
  %height210 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %147, i32 0, i32 1, !dbg !2369
  %148 = load i64, i64* %height210, align 8, !dbg !2369
  %cmp211 = icmp slt i64 %146, %148, !dbg !2370
  br i1 %cmp211, label %for.body213, label %for.end257, !dbg !2371

for.body213:                                      ; preds = %for.cond209
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2372
  %150 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2374
  %x214 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %150, i32 0, i32 2, !dbg !2375
  %151 = load i64, i64* %x214, align 8, !dbg !2375
  %152 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2376
  %y215 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %152, i32 0, i32 3, !dbg !2377
  %153 = load i64, i64* %y215, align 8, !dbg !2377
  %154 = load i64, i64* %y, align 8, !dbg !2378
  %add216 = add nsw i64 %153, %154, !dbg !2379
  %155 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2380
  %width217 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %155, i32 0, i32 0, !dbg !2381
  %156 = load i64, i64* %width217, align 8, !dbg !2381
  %157 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2382
  %call218 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %149, i64 %151, i64 %add216, i64 %156, i64 1, %struct._ExceptionInfo* %157), !dbg !2383
  store %struct._PixelPacket* %call218, %struct._PixelPacket** %p, align 8, !dbg !2384
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2385
  %cmp219 = icmp eq %struct._PixelPacket* %158, null, !dbg !2387
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !2388

if.then221:                                       ; preds = %for.body213
  br label %for.end257, !dbg !2389

if.end222:                                        ; preds = %for.body213
  store i64 0, i64* %x, align 8, !dbg !2390
  br label %for.cond223, !dbg !2392

for.cond223:                                      ; preds = %for.inc252, %if.end222
  %159 = load i64, i64* %x, align 8, !dbg !2393
  %160 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2395
  %width224 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %160, i32 0, i32 0, !dbg !2396
  %161 = load i64, i64* %width224, align 8, !dbg !2396
  %cmp225 = icmp slt i64 %159, %161, !dbg !2397
  br i1 %cmp225, label %for.body227, label %for.end254, !dbg !2398

for.body227:                                      ; preds = %for.cond223
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2399
  %red228 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 2, !dbg !2399
  %163 = load i16, i16* %red228, align 2, !dbg !2399
  %conv229 = zext i16 %163 to i32, !dbg !2399
  %conv230 = sitofp i32 %conv229 to double, !dbg !2399
  %mul231 = fmul double 0x3EF0001000100010, %conv230, !dbg !2401
  %164 = load double*, double** %q, align 8, !dbg !2402
  %incdec.ptr232 = getelementptr inbounds double, double* %164, i32 1, !dbg !2402
  store double* %incdec.ptr232, double** %q, align 8, !dbg !2402
  store double %mul231, double* %164, align 8, !dbg !2403
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2404
  %green233 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i32 0, i32 1, !dbg !2404
  %166 = load i16, i16* %green233, align 2, !dbg !2404
  %conv234 = zext i16 %166 to i32, !dbg !2404
  %conv235 = sitofp i32 %conv234 to double, !dbg !2404
  %mul236 = fmul double 0x3EF0001000100010, %conv235, !dbg !2405
  %167 = load double*, double** %q, align 8, !dbg !2406
  %incdec.ptr237 = getelementptr inbounds double, double* %167, i32 1, !dbg !2406
  store double* %incdec.ptr237, double** %q, align 8, !dbg !2406
  store double %mul236, double* %167, align 8, !dbg !2407
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2408
  %blue238 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 0, !dbg !2408
  %169 = load i16, i16* %blue238, align 2, !dbg !2408
  %conv239 = zext i16 %169 to i32, !dbg !2408
  %conv240 = sitofp i32 %conv239 to double, !dbg !2408
  %mul241 = fmul double 0x3EF0001000100010, %conv240, !dbg !2409
  %170 = load double*, double** %q, align 8, !dbg !2410
  %incdec.ptr242 = getelementptr inbounds double, double* %170, i32 1, !dbg !2410
  store double* %incdec.ptr242, double** %q, align 8, !dbg !2410
  store double %mul241, double* %170, align 8, !dbg !2411
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2412
  %opacity243 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 0, i32 3, !dbg !2412
  %172 = load i16, i16* %opacity243, align 2, !dbg !2412
  %conv244 = zext i16 %172 to i32, !dbg !2412
  %sub245 = sub nsw i32 65535, %conv244, !dbg !2413
  %conv246 = trunc i32 %sub245 to i16, !dbg !2414
  %conv247 = zext i16 %conv246 to i32, !dbg !2415
  %conv248 = sitofp i32 %conv247 to double, !dbg !2415
  %mul249 = fmul double 0x3EF0001000100010, %conv248, !dbg !2416
  %173 = load double*, double** %q, align 8, !dbg !2417
  %incdec.ptr250 = getelementptr inbounds double, double* %173, i32 1, !dbg !2417
  store double* %incdec.ptr250, double** %q, align 8, !dbg !2417
  store double %mul249, double* %173, align 8, !dbg !2418
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2419
  %incdec.ptr251 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 1, !dbg !2419
  store %struct._PixelPacket* %incdec.ptr251, %struct._PixelPacket** %p, align 8, !dbg !2419
  br label %for.inc252, !dbg !2420

for.inc252:                                       ; preds = %for.body227
  %175 = load i64, i64* %x, align 8, !dbg !2421
  %inc253 = add nsw i64 %175, 1, !dbg !2421
  store i64 %inc253, i64* %x, align 8, !dbg !2421
  br label %for.cond223, !dbg !2422, !llvm.loop !2423

for.end254:                                       ; preds = %for.cond223
  br label %for.inc255, !dbg !2425

for.inc255:                                       ; preds = %for.end254
  %176 = load i64, i64* %y, align 8, !dbg !2426
  %inc256 = add nsw i64 %176, 1, !dbg !2426
  store i64 %inc256, i64* %y, align 8, !dbg !2426
  br label %for.cond209, !dbg !2427, !llvm.loop !2428

for.end257:                                       ; preds = %if.then221, %for.cond209
  br label %for.end383, !dbg !2430

if.end258:                                        ; preds = %if.end204
  %177 = load i8*, i8** %map.addr, align 8, !dbg !2431
  %call259 = call i32 @LocaleCompare(i8* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !2433
  %cmp260 = icmp eq i32 %call259, 0, !dbg !2434
  br i1 %cmp260, label %if.then262, label %if.end305, !dbg !2435

if.then262:                                       ; preds = %if.end258
  store i64 0, i64* %y, align 8, !dbg !2436
  br label %for.cond263, !dbg !2439

for.cond263:                                      ; preds = %for.inc302, %if.then262
  %178 = load i64, i64* %y, align 8, !dbg !2440
  %179 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2442
  %height264 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %179, i32 0, i32 1, !dbg !2443
  %180 = load i64, i64* %height264, align 8, !dbg !2443
  %cmp265 = icmp slt i64 %178, %180, !dbg !2444
  br i1 %cmp265, label %for.body267, label %for.end304, !dbg !2445

for.body267:                                      ; preds = %for.cond263
  %181 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2446
  %182 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2448
  %x268 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %182, i32 0, i32 2, !dbg !2449
  %183 = load i64, i64* %x268, align 8, !dbg !2449
  %184 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2450
  %y269 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %184, i32 0, i32 3, !dbg !2451
  %185 = load i64, i64* %y269, align 8, !dbg !2451
  %186 = load i64, i64* %y, align 8, !dbg !2452
  %add270 = add nsw i64 %185, %186, !dbg !2453
  %187 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2454
  %width271 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %187, i32 0, i32 0, !dbg !2455
  %188 = load i64, i64* %width271, align 8, !dbg !2455
  %189 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2456
  %call272 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %181, i64 %183, i64 %add270, i64 %188, i64 1, %struct._ExceptionInfo* %189), !dbg !2457
  store %struct._PixelPacket* %call272, %struct._PixelPacket** %p, align 8, !dbg !2458
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2459
  %cmp273 = icmp eq %struct._PixelPacket* %190, null, !dbg !2461
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !2462

if.then275:                                       ; preds = %for.body267
  br label %for.end304, !dbg !2463

if.end276:                                        ; preds = %for.body267
  store i64 0, i64* %x, align 8, !dbg !2464
  br label %for.cond277, !dbg !2466

for.cond277:                                      ; preds = %for.inc299, %if.end276
  %191 = load i64, i64* %x, align 8, !dbg !2467
  %192 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2469
  %width278 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %192, i32 0, i32 0, !dbg !2470
  %193 = load i64, i64* %width278, align 8, !dbg !2470
  %cmp279 = icmp slt i64 %191, %193, !dbg !2471
  br i1 %cmp279, label %for.body281, label %for.end301, !dbg !2472

for.body281:                                      ; preds = %for.cond277
  %194 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2473
  %red282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %194, i32 0, i32 2, !dbg !2473
  %195 = load i16, i16* %red282, align 2, !dbg !2473
  %conv283 = zext i16 %195 to i32, !dbg !2473
  %conv284 = sitofp i32 %conv283 to double, !dbg !2473
  %mul285 = fmul double 0x3EF0001000100010, %conv284, !dbg !2475
  %196 = load double*, double** %q, align 8, !dbg !2476
  %incdec.ptr286 = getelementptr inbounds double, double* %196, i32 1, !dbg !2476
  store double* %incdec.ptr286, double** %q, align 8, !dbg !2476
  store double %mul285, double* %196, align 8, !dbg !2477
  %197 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2478
  %green287 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %197, i32 0, i32 1, !dbg !2478
  %198 = load i16, i16* %green287, align 2, !dbg !2478
  %conv288 = zext i16 %198 to i32, !dbg !2478
  %conv289 = sitofp i32 %conv288 to double, !dbg !2478
  %mul290 = fmul double 0x3EF0001000100010, %conv289, !dbg !2479
  %199 = load double*, double** %q, align 8, !dbg !2480
  %incdec.ptr291 = getelementptr inbounds double, double* %199, i32 1, !dbg !2480
  store double* %incdec.ptr291, double** %q, align 8, !dbg !2480
  store double %mul290, double* %199, align 8, !dbg !2481
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2482
  %blue292 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 0, !dbg !2482
  %201 = load i16, i16* %blue292, align 2, !dbg !2482
  %conv293 = zext i16 %201 to i32, !dbg !2482
  %conv294 = sitofp i32 %conv293 to double, !dbg !2482
  %mul295 = fmul double 0x3EF0001000100010, %conv294, !dbg !2483
  %202 = load double*, double** %q, align 8, !dbg !2484
  %incdec.ptr296 = getelementptr inbounds double, double* %202, i32 1, !dbg !2484
  store double* %incdec.ptr296, double** %q, align 8, !dbg !2484
  store double %mul295, double* %202, align 8, !dbg !2485
  %203 = load double*, double** %q, align 8, !dbg !2486
  %incdec.ptr297 = getelementptr inbounds double, double* %203, i32 1, !dbg !2486
  store double* %incdec.ptr297, double** %q, align 8, !dbg !2486
  store double 0.000000e+00, double* %203, align 8, !dbg !2487
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2488
  %incdec.ptr298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 1, !dbg !2488
  store %struct._PixelPacket* %incdec.ptr298, %struct._PixelPacket** %p, align 8, !dbg !2488
  br label %for.inc299, !dbg !2489

for.inc299:                                       ; preds = %for.body281
  %205 = load i64, i64* %x, align 8, !dbg !2490
  %inc300 = add nsw i64 %205, 1, !dbg !2490
  store i64 %inc300, i64* %x, align 8, !dbg !2490
  br label %for.cond277, !dbg !2491, !llvm.loop !2492

for.end301:                                       ; preds = %for.cond277
  br label %for.inc302, !dbg !2494

for.inc302:                                       ; preds = %for.end301
  %206 = load i64, i64* %y, align 8, !dbg !2495
  %inc303 = add nsw i64 %206, 1, !dbg !2495
  store i64 %inc303, i64* %y, align 8, !dbg !2495
  br label %for.cond263, !dbg !2496, !llvm.loop !2497

for.end304:                                       ; preds = %if.then275, %for.cond263
  br label %for.end383, !dbg !2499

if.end305:                                        ; preds = %if.end258
  %207 = load i8*, i8** %map.addr, align 8, !dbg !2500
  %call306 = call i64 @strlen(i8* %207) #13, !dbg !2501
  store i64 %call306, i64* %length, align 8, !dbg !2502
  store i64 0, i64* %y, align 8, !dbg !2503
  br label %for.cond307, !dbg !2505

for.cond307:                                      ; preds = %for.inc381, %if.end305
  %208 = load i64, i64* %y, align 8, !dbg !2506
  %209 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2508
  %height308 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %209, i32 0, i32 1, !dbg !2509
  %210 = load i64, i64* %height308, align 8, !dbg !2509
  %cmp309 = icmp slt i64 %208, %210, !dbg !2510
  br i1 %cmp309, label %for.body311, label %for.end383, !dbg !2511

for.body311:                                      ; preds = %for.cond307
  %211 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2512
  %212 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2514
  %x312 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %212, i32 0, i32 2, !dbg !2515
  %213 = load i64, i64* %x312, align 8, !dbg !2515
  %214 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2516
  %y313 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %214, i32 0, i32 3, !dbg !2517
  %215 = load i64, i64* %y313, align 8, !dbg !2517
  %216 = load i64, i64* %y, align 8, !dbg !2518
  %add314 = add nsw i64 %215, %216, !dbg !2519
  %217 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2520
  %width315 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %217, i32 0, i32 0, !dbg !2521
  %218 = load i64, i64* %width315, align 8, !dbg !2521
  %219 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2522
  %call316 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %211, i64 %213, i64 %add314, i64 %218, i64 1, %struct._ExceptionInfo* %219), !dbg !2523
  store %struct._PixelPacket* %call316, %struct._PixelPacket** %p, align 8, !dbg !2524
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2525
  %cmp317 = icmp eq %struct._PixelPacket* %220, null, !dbg !2527
  br i1 %cmp317, label %if.then319, label %if.end320, !dbg !2528

if.then319:                                       ; preds = %for.body311
  br label %for.end383, !dbg !2529

if.end320:                                        ; preds = %for.body311
  %221 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2530
  %call321 = call i16* @GetVirtualIndexQueue(%struct._Image* %221), !dbg !2531
  store i16* %call321, i16** %indexes, align 8, !dbg !2532
  store i64 0, i64* %x, align 8, !dbg !2533
  br label %for.cond322, !dbg !2535

for.cond322:                                      ; preds = %for.inc378, %if.end320
  %222 = load i64, i64* %x, align 8, !dbg !2536
  %223 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2538
  %width323 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %223, i32 0, i32 0, !dbg !2539
  %224 = load i64, i64* %width323, align 8, !dbg !2539
  %cmp324 = icmp slt i64 %222, %224, !dbg !2540
  br i1 %cmp324, label %for.body326, label %for.end380, !dbg !2541

for.body326:                                      ; preds = %for.cond322
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2542, metadata !DIExpression()), !dbg !2544
  store i64 0, i64* %i, align 8, !dbg !2545
  br label %for.cond327, !dbg !2547

for.cond327:                                      ; preds = %for.inc374, %for.body326
  %225 = load i64, i64* %i, align 8, !dbg !2548
  %226 = load i64, i64* %length, align 8, !dbg !2550
  %cmp328 = icmp slt i64 %225, %226, !dbg !2551
  br i1 %cmp328, label %for.body330, label %for.end376, !dbg !2552

for.body330:                                      ; preds = %for.cond327
  %227 = load double*, double** %q, align 8, !dbg !2553
  store double 0.000000e+00, double* %227, align 8, !dbg !2555
  %228 = load i32*, i32** %quantum_map.addr, align 8, !dbg !2556
  %229 = load i64, i64* %i, align 8, !dbg !2557
  %arrayidx = getelementptr inbounds i32, i32* %228, i64 %229, !dbg !2556
  %230 = load i32, i32* %arrayidx, align 4, !dbg !2556
  switch i32 %230, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb335
    i32 12, label %sw.bb335
    i32 3, label %sw.bb340
    i32 19, label %sw.bb340
    i32 1, label %sw.bb345
    i32 13, label %sw.bb353
    i32 2, label %sw.bb358
    i32 11, label %sw.bb369
  ], !dbg !2558

sw.bb:                                            ; preds = %for.body330, %for.body330
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2559
  %red331 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 0, i32 2, !dbg !2559
  %232 = load i16, i16* %red331, align 2, !dbg !2559
  %conv332 = zext i16 %232 to i32, !dbg !2559
  %conv333 = sitofp i32 %conv332 to double, !dbg !2559
  %mul334 = fmul double 0x3EF0001000100010, %conv333, !dbg !2562
  %233 = load double*, double** %q, align 8, !dbg !2563
  store double %mul334, double* %233, align 8, !dbg !2564
  br label %sw.epilog, !dbg !2565

sw.bb335:                                         ; preds = %for.body330, %for.body330
  %234 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2566
  %green336 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %234, i32 0, i32 1, !dbg !2566
  %235 = load i16, i16* %green336, align 2, !dbg !2566
  %conv337 = zext i16 %235 to i32, !dbg !2566
  %conv338 = sitofp i32 %conv337 to double, !dbg !2566
  %mul339 = fmul double 0x3EF0001000100010, %conv338, !dbg !2568
  %236 = load double*, double** %q, align 8, !dbg !2569
  store double %mul339, double* %236, align 8, !dbg !2570
  br label %sw.epilog, !dbg !2571

sw.bb340:                                         ; preds = %for.body330, %for.body330
  %237 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2572
  %blue341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %237, i32 0, i32 0, !dbg !2572
  %238 = load i16, i16* %blue341, align 2, !dbg !2572
  %conv342 = zext i16 %238 to i32, !dbg !2572
  %conv343 = sitofp i32 %conv342 to double, !dbg !2572
  %mul344 = fmul double 0x3EF0001000100010, %conv343, !dbg !2574
  %239 = load double*, double** %q, align 8, !dbg !2575
  store double %mul344, double* %239, align 8, !dbg !2576
  br label %sw.epilog, !dbg !2577

sw.bb345:                                         ; preds = %for.body330
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2578
  %opacity346 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 3, !dbg !2578
  %241 = load i16, i16* %opacity346, align 2, !dbg !2578
  %conv347 = zext i16 %241 to i32, !dbg !2578
  %sub348 = sub nsw i32 65535, %conv347, !dbg !2580
  %conv349 = trunc i32 %sub348 to i16, !dbg !2581
  %conv350 = zext i16 %conv349 to i32, !dbg !2582
  %conv351 = sitofp i32 %conv350 to double, !dbg !2582
  %mul352 = fmul double 0x3EF0001000100010, %conv351, !dbg !2583
  %242 = load double*, double** %q, align 8, !dbg !2584
  store double %mul352, double* %242, align 8, !dbg !2585
  br label %sw.epilog, !dbg !2586

sw.bb353:                                         ; preds = %for.body330
  %243 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2587
  %opacity354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %243, i32 0, i32 3, !dbg !2587
  %244 = load i16, i16* %opacity354, align 2, !dbg !2587
  %conv355 = zext i16 %244 to i32, !dbg !2587
  %conv356 = sitofp i32 %conv355 to double, !dbg !2587
  %mul357 = fmul double 0x3EF0001000100010, %conv356, !dbg !2589
  %245 = load double*, double** %q, align 8, !dbg !2590
  store double %mul357, double* %245, align 8, !dbg !2591
  br label %sw.epilog, !dbg !2592

sw.bb358:                                         ; preds = %for.body330
  %246 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2593
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %246, i32 0, i32 1, !dbg !2596
  %247 = load i32, i32* %colorspace, align 4, !dbg !2596
  %cmp359 = icmp eq i32 %247, 12, !dbg !2597
  br i1 %cmp359, label %if.then361, label %if.end368, !dbg !2598

if.then361:                                       ; preds = %sw.bb358
  %248 = load i16*, i16** %indexes, align 8, !dbg !2599
  %249 = load i64, i64* %x, align 8, !dbg !2599
  %add.ptr = getelementptr inbounds i16, i16* %248, i64 %249, !dbg !2599
  %cmp362 = icmp eq i16* %add.ptr, null, !dbg !2599
  br i1 %cmp362, label %cond.true, label %cond.false, !dbg !2599

cond.true:                                        ; preds = %if.then361
  br label %cond.end, !dbg !2599

cond.false:                                       ; preds = %if.then361
  %250 = load i16*, i16** %indexes, align 8, !dbg !2599
  %251 = load i64, i64* %x, align 8, !dbg !2599
  %add.ptr364 = getelementptr inbounds i16, i16* %250, i64 %251, !dbg !2599
  %252 = load i16, i16* %add.ptr364, align 2, !dbg !2599
  %conv365 = zext i16 %252 to i32, !dbg !2599
  br label %cond.end, !dbg !2599

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv365, %cond.false ], !dbg !2599
  %conv366 = sitofp i32 %cond to double, !dbg !2599
  %mul367 = fmul double 0x3EF0001000100010, %conv366, !dbg !2600
  %253 = load double*, double** %q, align 8, !dbg !2601
  store double %mul367, double* %253, align 8, !dbg !2602
  br label %if.end368, !dbg !2603

if.end368:                                        ; preds = %cond.end, %sw.bb358
  br label %sw.epilog, !dbg !2604

sw.bb369:                                         ; preds = %for.body330
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2605
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2607
  %call370 = call float @GetPixelIntensity(%struct._Image* %254, %struct._PixelPacket* %255), !dbg !2608
  %conv371 = fpext float %call370 to double, !dbg !2608
  %mul372 = fmul double 0x3EF0001000100010, %conv371, !dbg !2609
  %256 = load double*, double** %q, align 8, !dbg !2610
  store double %mul372, double* %256, align 8, !dbg !2611
  br label %sw.epilog, !dbg !2612

sw.default:                                       ; preds = %for.body330
  %257 = load double*, double** %q, align 8, !dbg !2613
  store double 0.000000e+00, double* %257, align 8, !dbg !2614
  br label %sw.epilog, !dbg !2615

sw.epilog:                                        ; preds = %sw.default, %sw.bb369, %if.end368, %sw.bb353, %sw.bb345, %sw.bb340, %sw.bb335, %sw.bb
  %258 = load double*, double** %q, align 8, !dbg !2616
  %incdec.ptr373 = getelementptr inbounds double, double* %258, i32 1, !dbg !2616
  store double* %incdec.ptr373, double** %q, align 8, !dbg !2616
  br label %for.inc374, !dbg !2617

for.inc374:                                       ; preds = %sw.epilog
  %259 = load i64, i64* %i, align 8, !dbg !2618
  %inc375 = add nsw i64 %259, 1, !dbg !2618
  store i64 %inc375, i64* %i, align 8, !dbg !2618
  br label %for.cond327, !dbg !2619, !llvm.loop !2620

for.end376:                                       ; preds = %for.cond327
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2622
  %incdec.ptr377 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %260, i32 1, !dbg !2622
  store %struct._PixelPacket* %incdec.ptr377, %struct._PixelPacket** %p, align 8, !dbg !2622
  br label %for.inc378, !dbg !2623

for.inc378:                                       ; preds = %for.end376
  %261 = load i64, i64* %x, align 8, !dbg !2624
  %inc379 = add nsw i64 %261, 1, !dbg !2624
  store i64 %inc379, i64* %x, align 8, !dbg !2624
  br label %for.cond322, !dbg !2625, !llvm.loop !2626

for.end380:                                       ; preds = %for.cond322
  br label %for.inc381, !dbg !2628

for.inc381:                                       ; preds = %for.end380
  %262 = load i64, i64* %y, align 8, !dbg !2629
  %inc382 = add nsw i64 %262, 1, !dbg !2629
  store i64 %inc382, i64* %y, align 8, !dbg !2629
  br label %for.cond307, !dbg !2630, !llvm.loop !2631

for.end383:                                       ; preds = %for.end23, %for.end75, %for.end122, %for.end157, %for.end203, %for.end257, %for.end304, %if.then319, %for.cond307
  ret void, !dbg !2633
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportFloatPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !2634 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %q = alloca float*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2635, metadata !DIExpression()), !dbg !2636
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !2637, metadata !DIExpression()), !dbg !2638
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !2639, metadata !DIExpression()), !dbg !2640
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !2641, metadata !DIExpression()), !dbg !2642
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !2643, metadata !DIExpression()), !dbg !2644
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2645, metadata !DIExpression()), !dbg !2646
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2647, metadata !DIExpression()), !dbg !2648
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !2649, metadata !DIExpression()), !dbg !2650
  call void @llvm.dbg.declare(metadata float** %q, metadata !2651, metadata !DIExpression()), !dbg !2652
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2653, metadata !DIExpression()), !dbg !2654
  call void @llvm.dbg.declare(metadata i64* %length, metadata !2655, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2657, metadata !DIExpression()), !dbg !2658
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !2659
  %1 = bitcast i8* %0 to float*, !dbg !2660
  store float* %1, float** %q, align 8, !dbg !2661
  %2 = load i8*, i8** %map.addr, align 8, !dbg !2662
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !2664
  %cmp = icmp eq i32 %call, 0, !dbg !2665
  br i1 %cmp, label %if.then, label %if.end27, !dbg !2666

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !2667
  br label %for.cond, !dbg !2670

for.cond:                                         ; preds = %for.inc24, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !2671
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2673
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !2674
  %5 = load i64, i64* %height, align 8, !dbg !2674
  %cmp1 = icmp slt i64 %3, %5, !dbg !2675
  br i1 %cmp1, label %for.body, label %for.end26, !dbg !2676

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2677
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2679
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !2680
  %8 = load i64, i64* %x2, align 8, !dbg !2680
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2681
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !2682
  %10 = load i64, i64* %y3, align 8, !dbg !2682
  %11 = load i64, i64* %y, align 8, !dbg !2683
  %add = add nsw i64 %10, %11, !dbg !2684
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2685
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !2686
  %13 = load i64, i64* %width, align 8, !dbg !2686
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2687
  %call4 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !2688
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %p, align 8, !dbg !2689
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2690
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !2692
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !2693

if.then6:                                         ; preds = %for.body
  br label %for.end26, !dbg !2694

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !2695
  br label %for.cond7, !dbg !2697

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !2698
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2700
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !2701
  %18 = load i64, i64* %width8, align 8, !dbg !2701
  %cmp9 = icmp slt i64 %16, %18, !dbg !2702
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !2703

for.body10:                                       ; preds = %for.cond7
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2704
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 0, i32 0, !dbg !2704
  %20 = load i16, i16* %blue, align 2, !dbg !2704
  %conv = zext i16 %20 to i32, !dbg !2704
  %conv11 = sitofp i32 %conv to double, !dbg !2704
  %mul = fmul double 0x3EF0001000100010, %conv11, !dbg !2706
  %conv12 = fptrunc double %mul to float, !dbg !2707
  %21 = load float*, float** %q, align 8, !dbg !2708
  %incdec.ptr = getelementptr inbounds float, float* %21, i32 1, !dbg !2708
  store float* %incdec.ptr, float** %q, align 8, !dbg !2708
  store float %conv12, float* %21, align 4, !dbg !2709
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2710
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 1, !dbg !2710
  %23 = load i16, i16* %green, align 2, !dbg !2710
  %conv13 = zext i16 %23 to i32, !dbg !2710
  %conv14 = sitofp i32 %conv13 to double, !dbg !2710
  %mul15 = fmul double 0x3EF0001000100010, %conv14, !dbg !2711
  %conv16 = fptrunc double %mul15 to float, !dbg !2712
  %24 = load float*, float** %q, align 8, !dbg !2713
  %incdec.ptr17 = getelementptr inbounds float, float* %24, i32 1, !dbg !2713
  store float* %incdec.ptr17, float** %q, align 8, !dbg !2713
  store float %conv16, float* %24, align 4, !dbg !2714
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2715
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 2, !dbg !2715
  %26 = load i16, i16* %red, align 2, !dbg !2715
  %conv18 = zext i16 %26 to i32, !dbg !2715
  %conv19 = sitofp i32 %conv18 to double, !dbg !2715
  %mul20 = fmul double 0x3EF0001000100010, %conv19, !dbg !2716
  %conv21 = fptrunc double %mul20 to float, !dbg !2717
  %27 = load float*, float** %q, align 8, !dbg !2718
  %incdec.ptr22 = getelementptr inbounds float, float* %27, i32 1, !dbg !2718
  store float* %incdec.ptr22, float** %q, align 8, !dbg !2718
  store float %conv21, float* %27, align 4, !dbg !2719
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2720
  %incdec.ptr23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !2720
  store %struct._PixelPacket* %incdec.ptr23, %struct._PixelPacket** %p, align 8, !dbg !2720
  br label %for.inc, !dbg !2721

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !2722
  %inc = add nsw i64 %29, 1, !dbg !2722
  store i64 %inc, i64* %x, align 8, !dbg !2722
  br label %for.cond7, !dbg !2723, !llvm.loop !2724

for.end:                                          ; preds = %for.cond7
  br label %for.inc24, !dbg !2726

for.inc24:                                        ; preds = %for.end
  %30 = load i64, i64* %y, align 8, !dbg !2727
  %inc25 = add nsw i64 %30, 1, !dbg !2727
  store i64 %inc25, i64* %y, align 8, !dbg !2727
  br label %for.cond, !dbg !2728, !llvm.loop !2729

for.end26:                                        ; preds = %if.then6, %for.cond
  br label %for.end407, !dbg !2731

if.end27:                                         ; preds = %entry
  %31 = load i8*, i8** %map.addr, align 8, !dbg !2732
  %call28 = call i32 @LocaleCompare(i8* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !2734
  %cmp29 = icmp eq i32 %call28, 0, !dbg !2735
  br i1 %cmp29, label %if.then31, label %if.end81, !dbg !2736

if.then31:                                        ; preds = %if.end27
  store i64 0, i64* %y, align 8, !dbg !2737
  br label %for.cond32, !dbg !2740

for.cond32:                                       ; preds = %for.inc78, %if.then31
  %32 = load i64, i64* %y, align 8, !dbg !2741
  %33 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2743
  %height33 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %33, i32 0, i32 1, !dbg !2744
  %34 = load i64, i64* %height33, align 8, !dbg !2744
  %cmp34 = icmp slt i64 %32, %34, !dbg !2745
  br i1 %cmp34, label %for.body36, label %for.end80, !dbg !2746

for.body36:                                       ; preds = %for.cond32
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2747
  %36 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2749
  %x37 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %36, i32 0, i32 2, !dbg !2750
  %37 = load i64, i64* %x37, align 8, !dbg !2750
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2751
  %y38 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 3, !dbg !2752
  %39 = load i64, i64* %y38, align 8, !dbg !2752
  %40 = load i64, i64* %y, align 8, !dbg !2753
  %add39 = add nsw i64 %39, %40, !dbg !2754
  %41 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2755
  %width40 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %41, i32 0, i32 0, !dbg !2756
  %42 = load i64, i64* %width40, align 8, !dbg !2756
  %43 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2757
  %call41 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %35, i64 %37, i64 %add39, i64 %42, i64 1, %struct._ExceptionInfo* %43), !dbg !2758
  store %struct._PixelPacket* %call41, %struct._PixelPacket** %p, align 8, !dbg !2759
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2760
  %cmp42 = icmp eq %struct._PixelPacket* %44, null, !dbg !2762
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !2763

if.then44:                                        ; preds = %for.body36
  br label %for.end80, !dbg !2764

if.end45:                                         ; preds = %for.body36
  store i64 0, i64* %x, align 8, !dbg !2765
  br label %for.cond46, !dbg !2767

for.cond46:                                       ; preds = %for.inc75, %if.end45
  %45 = load i64, i64* %x, align 8, !dbg !2768
  %46 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2770
  %width47 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %46, i32 0, i32 0, !dbg !2771
  %47 = load i64, i64* %width47, align 8, !dbg !2771
  %cmp48 = icmp slt i64 %45, %47, !dbg !2772
  br i1 %cmp48, label %for.body50, label %for.end77, !dbg !2773

for.body50:                                       ; preds = %for.cond46
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2774
  %blue51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 0, !dbg !2774
  %49 = load i16, i16* %blue51, align 2, !dbg !2774
  %conv52 = zext i16 %49 to i32, !dbg !2774
  %conv53 = sitofp i32 %conv52 to double, !dbg !2774
  %mul54 = fmul double 0x3EF0001000100010, %conv53, !dbg !2776
  %conv55 = fptrunc double %mul54 to float, !dbg !2777
  %50 = load float*, float** %q, align 8, !dbg !2778
  %incdec.ptr56 = getelementptr inbounds float, float* %50, i32 1, !dbg !2778
  store float* %incdec.ptr56, float** %q, align 8, !dbg !2778
  store float %conv55, float* %50, align 4, !dbg !2779
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2780
  %green57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 0, i32 1, !dbg !2780
  %52 = load i16, i16* %green57, align 2, !dbg !2780
  %conv58 = zext i16 %52 to i32, !dbg !2780
  %conv59 = sitofp i32 %conv58 to double, !dbg !2780
  %mul60 = fmul double 0x3EF0001000100010, %conv59, !dbg !2781
  %conv61 = fptrunc double %mul60 to float, !dbg !2782
  %53 = load float*, float** %q, align 8, !dbg !2783
  %incdec.ptr62 = getelementptr inbounds float, float* %53, i32 1, !dbg !2783
  store float* %incdec.ptr62, float** %q, align 8, !dbg !2783
  store float %conv61, float* %53, align 4, !dbg !2784
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2785
  %red63 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !2785
  %55 = load i16, i16* %red63, align 2, !dbg !2785
  %conv64 = zext i16 %55 to i32, !dbg !2785
  %conv65 = sitofp i32 %conv64 to double, !dbg !2785
  %mul66 = fmul double 0x3EF0001000100010, %conv65, !dbg !2786
  %conv67 = fptrunc double %mul66 to float, !dbg !2787
  %56 = load float*, float** %q, align 8, !dbg !2788
  %incdec.ptr68 = getelementptr inbounds float, float* %56, i32 1, !dbg !2788
  store float* %incdec.ptr68, float** %q, align 8, !dbg !2788
  store float %conv67, float* %56, align 4, !dbg !2789
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2790
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !2790
  %58 = load i16, i16* %opacity, align 2, !dbg !2790
  %conv69 = zext i16 %58 to i32, !dbg !2790
  %sub = sub nsw i32 65535, %conv69, !dbg !2790
  %conv70 = sitofp i32 %sub to double, !dbg !2790
  %mul71 = fmul double 0x3EF0001000100010, %conv70, !dbg !2791
  %conv72 = fptrunc double %mul71 to float, !dbg !2792
  %59 = load float*, float** %q, align 8, !dbg !2793
  %incdec.ptr73 = getelementptr inbounds float, float* %59, i32 1, !dbg !2793
  store float* %incdec.ptr73, float** %q, align 8, !dbg !2793
  store float %conv72, float* %59, align 4, !dbg !2794
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2795
  %incdec.ptr74 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 1, !dbg !2795
  store %struct._PixelPacket* %incdec.ptr74, %struct._PixelPacket** %p, align 8, !dbg !2795
  br label %for.inc75, !dbg !2796

for.inc75:                                        ; preds = %for.body50
  %61 = load i64, i64* %x, align 8, !dbg !2797
  %inc76 = add nsw i64 %61, 1, !dbg !2797
  store i64 %inc76, i64* %x, align 8, !dbg !2797
  br label %for.cond46, !dbg !2798, !llvm.loop !2799

for.end77:                                        ; preds = %for.cond46
  br label %for.inc78, !dbg !2801

for.inc78:                                        ; preds = %for.end77
  %62 = load i64, i64* %y, align 8, !dbg !2802
  %inc79 = add nsw i64 %62, 1, !dbg !2802
  store i64 %inc79, i64* %y, align 8, !dbg !2802
  br label %for.cond32, !dbg !2803, !llvm.loop !2804

for.end80:                                        ; preds = %if.then44, %for.cond32
  br label %for.end407, !dbg !2806

if.end81:                                         ; preds = %if.end27
  %63 = load i8*, i8** %map.addr, align 8, !dbg !2807
  %call82 = call i32 @LocaleCompare(i8* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !2809
  %cmp83 = icmp eq i32 %call82, 0, !dbg !2810
  br i1 %cmp83, label %if.then85, label %if.end131, !dbg !2811

if.then85:                                        ; preds = %if.end81
  store i64 0, i64* %y, align 8, !dbg !2812
  br label %for.cond86, !dbg !2815

for.cond86:                                       ; preds = %for.inc128, %if.then85
  %64 = load i64, i64* %y, align 8, !dbg !2816
  %65 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2818
  %height87 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %65, i32 0, i32 1, !dbg !2819
  %66 = load i64, i64* %height87, align 8, !dbg !2819
  %cmp88 = icmp slt i64 %64, %66, !dbg !2820
  br i1 %cmp88, label %for.body90, label %for.end130, !dbg !2821

for.body90:                                       ; preds = %for.cond86
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2822
  %68 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2824
  %x91 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %68, i32 0, i32 2, !dbg !2825
  %69 = load i64, i64* %x91, align 8, !dbg !2825
  %70 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2826
  %y92 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %70, i32 0, i32 3, !dbg !2827
  %71 = load i64, i64* %y92, align 8, !dbg !2827
  %72 = load i64, i64* %y, align 8, !dbg !2828
  %add93 = add nsw i64 %71, %72, !dbg !2829
  %73 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2830
  %width94 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %73, i32 0, i32 0, !dbg !2831
  %74 = load i64, i64* %width94, align 8, !dbg !2831
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2832
  %call95 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %67, i64 %69, i64 %add93, i64 %74, i64 1, %struct._ExceptionInfo* %75), !dbg !2833
  store %struct._PixelPacket* %call95, %struct._PixelPacket** %p, align 8, !dbg !2834
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2835
  %cmp96 = icmp eq %struct._PixelPacket* %76, null, !dbg !2837
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !2838

if.then98:                                        ; preds = %for.body90
  br label %for.end130, !dbg !2839

if.end99:                                         ; preds = %for.body90
  store i64 0, i64* %x, align 8, !dbg !2840
  br label %for.cond100, !dbg !2842

for.cond100:                                      ; preds = %for.inc125, %if.end99
  %77 = load i64, i64* %x, align 8, !dbg !2843
  %78 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2845
  %width101 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %78, i32 0, i32 0, !dbg !2846
  %79 = load i64, i64* %width101, align 8, !dbg !2846
  %cmp102 = icmp slt i64 %77, %79, !dbg !2847
  br i1 %cmp102, label %for.body104, label %for.end127, !dbg !2848

for.body104:                                      ; preds = %for.cond100
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2849
  %blue105 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 0, !dbg !2849
  %81 = load i16, i16* %blue105, align 2, !dbg !2849
  %conv106 = zext i16 %81 to i32, !dbg !2849
  %conv107 = sitofp i32 %conv106 to double, !dbg !2849
  %mul108 = fmul double 0x3EF0001000100010, %conv107, !dbg !2851
  %conv109 = fptrunc double %mul108 to float, !dbg !2852
  %82 = load float*, float** %q, align 8, !dbg !2853
  %incdec.ptr110 = getelementptr inbounds float, float* %82, i32 1, !dbg !2853
  store float* %incdec.ptr110, float** %q, align 8, !dbg !2853
  store float %conv109, float* %82, align 4, !dbg !2854
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2855
  %green111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 1, !dbg !2855
  %84 = load i16, i16* %green111, align 2, !dbg !2855
  %conv112 = zext i16 %84 to i32, !dbg !2855
  %conv113 = sitofp i32 %conv112 to double, !dbg !2855
  %mul114 = fmul double 0x3EF0001000100010, %conv113, !dbg !2856
  %conv115 = fptrunc double %mul114 to float, !dbg !2857
  %85 = load float*, float** %q, align 8, !dbg !2858
  %incdec.ptr116 = getelementptr inbounds float, float* %85, i32 1, !dbg !2858
  store float* %incdec.ptr116, float** %q, align 8, !dbg !2858
  store float %conv115, float* %85, align 4, !dbg !2859
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2860
  %red117 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 2, !dbg !2860
  %87 = load i16, i16* %red117, align 2, !dbg !2860
  %conv118 = zext i16 %87 to i32, !dbg !2860
  %conv119 = sitofp i32 %conv118 to double, !dbg !2860
  %mul120 = fmul double 0x3EF0001000100010, %conv119, !dbg !2861
  %conv121 = fptrunc double %mul120 to float, !dbg !2862
  %88 = load float*, float** %q, align 8, !dbg !2863
  %incdec.ptr122 = getelementptr inbounds float, float* %88, i32 1, !dbg !2863
  store float* %incdec.ptr122, float** %q, align 8, !dbg !2863
  store float %conv121, float* %88, align 4, !dbg !2864
  %89 = load float*, float** %q, align 8, !dbg !2865
  %incdec.ptr123 = getelementptr inbounds float, float* %89, i32 1, !dbg !2865
  store float* %incdec.ptr123, float** %q, align 8, !dbg !2865
  store float 0.000000e+00, float* %89, align 4, !dbg !2866
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2867
  %incdec.ptr124 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 1, !dbg !2867
  store %struct._PixelPacket* %incdec.ptr124, %struct._PixelPacket** %p, align 8, !dbg !2867
  br label %for.inc125, !dbg !2868

for.inc125:                                       ; preds = %for.body104
  %91 = load i64, i64* %x, align 8, !dbg !2869
  %inc126 = add nsw i64 %91, 1, !dbg !2869
  store i64 %inc126, i64* %x, align 8, !dbg !2869
  br label %for.cond100, !dbg !2870, !llvm.loop !2871

for.end127:                                       ; preds = %for.cond100
  br label %for.inc128, !dbg !2873

for.inc128:                                       ; preds = %for.end127
  %92 = load i64, i64* %y, align 8, !dbg !2874
  %inc129 = add nsw i64 %92, 1, !dbg !2874
  store i64 %inc129, i64* %y, align 8, !dbg !2874
  br label %for.cond86, !dbg !2875, !llvm.loop !2876

for.end130:                                       ; preds = %if.then98, %for.cond86
  br label %for.end407, !dbg !2878

if.end131:                                        ; preds = %if.end81
  %93 = load i8*, i8** %map.addr, align 8, !dbg !2879
  %call132 = call i32 @LocaleCompare(i8* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !2881
  %cmp133 = icmp eq i32 %call132, 0, !dbg !2882
  br i1 %cmp133, label %if.then135, label %if.end167, !dbg !2883

if.then135:                                       ; preds = %if.end131
  store i64 0, i64* %y, align 8, !dbg !2884
  br label %for.cond136, !dbg !2887

for.cond136:                                      ; preds = %for.inc164, %if.then135
  %94 = load i64, i64* %y, align 8, !dbg !2888
  %95 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2890
  %height137 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %95, i32 0, i32 1, !dbg !2891
  %96 = load i64, i64* %height137, align 8, !dbg !2891
  %cmp138 = icmp slt i64 %94, %96, !dbg !2892
  br i1 %cmp138, label %for.body140, label %for.end166, !dbg !2893

for.body140:                                      ; preds = %for.cond136
  %97 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2894
  %98 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2896
  %x141 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %98, i32 0, i32 2, !dbg !2897
  %99 = load i64, i64* %x141, align 8, !dbg !2897
  %100 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2898
  %y142 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %100, i32 0, i32 3, !dbg !2899
  %101 = load i64, i64* %y142, align 8, !dbg !2899
  %102 = load i64, i64* %y, align 8, !dbg !2900
  %add143 = add nsw i64 %101, %102, !dbg !2901
  %103 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2902
  %width144 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %103, i32 0, i32 0, !dbg !2903
  %104 = load i64, i64* %width144, align 8, !dbg !2903
  %105 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2904
  %call145 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %97, i64 %99, i64 %add143, i64 %104, i64 1, %struct._ExceptionInfo* %105), !dbg !2905
  store %struct._PixelPacket* %call145, %struct._PixelPacket** %p, align 8, !dbg !2906
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2907
  %cmp146 = icmp eq %struct._PixelPacket* %106, null, !dbg !2909
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !2910

if.then148:                                       ; preds = %for.body140
  br label %for.end166, !dbg !2911

if.end149:                                        ; preds = %for.body140
  store i64 0, i64* %x, align 8, !dbg !2912
  br label %for.cond150, !dbg !2914

for.cond150:                                      ; preds = %for.inc161, %if.end149
  %107 = load i64, i64* %x, align 8, !dbg !2915
  %108 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2917
  %width151 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %108, i32 0, i32 0, !dbg !2918
  %109 = load i64, i64* %width151, align 8, !dbg !2918
  %cmp152 = icmp slt i64 %107, %109, !dbg !2919
  br i1 %cmp152, label %for.body154, label %for.end163, !dbg !2920

for.body154:                                      ; preds = %for.cond150
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2921
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2923
  %call155 = call float @GetPixelIntensity(%struct._Image* %110, %struct._PixelPacket* %111), !dbg !2924
  %conv156 = fpext float %call155 to double, !dbg !2924
  %mul157 = fmul double 0x3EF0001000100010, %conv156, !dbg !2925
  %conv158 = fptrunc double %mul157 to float, !dbg !2926
  %112 = load float*, float** %q, align 8, !dbg !2927
  %incdec.ptr159 = getelementptr inbounds float, float* %112, i32 1, !dbg !2927
  store float* %incdec.ptr159, float** %q, align 8, !dbg !2927
  store float %conv158, float* %112, align 4, !dbg !2928
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2929
  %incdec.ptr160 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !2929
  store %struct._PixelPacket* %incdec.ptr160, %struct._PixelPacket** %p, align 8, !dbg !2929
  br label %for.inc161, !dbg !2930

for.inc161:                                       ; preds = %for.body154
  %114 = load i64, i64* %x, align 8, !dbg !2931
  %inc162 = add nsw i64 %114, 1, !dbg !2931
  store i64 %inc162, i64* %x, align 8, !dbg !2931
  br label %for.cond150, !dbg !2932, !llvm.loop !2933

for.end163:                                       ; preds = %for.cond150
  br label %for.inc164, !dbg !2935

for.inc164:                                       ; preds = %for.end163
  %115 = load i64, i64* %y, align 8, !dbg !2936
  %inc165 = add nsw i64 %115, 1, !dbg !2936
  store i64 %inc165, i64* %y, align 8, !dbg !2936
  br label %for.cond136, !dbg !2937, !llvm.loop !2938

for.end166:                                       ; preds = %if.then148, %for.cond136
  br label %for.end407, !dbg !2940

if.end167:                                        ; preds = %if.end131
  %116 = load i8*, i8** %map.addr, align 8, !dbg !2941
  %call168 = call i32 @LocaleCompare(i8* %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !2943
  %cmp169 = icmp eq i32 %call168, 0, !dbg !2944
  br i1 %cmp169, label %if.then171, label %if.end216, !dbg !2945

if.then171:                                       ; preds = %if.end167
  store i64 0, i64* %y, align 8, !dbg !2946
  br label %for.cond172, !dbg !2949

for.cond172:                                      ; preds = %for.inc213, %if.then171
  %117 = load i64, i64* %y, align 8, !dbg !2950
  %118 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2952
  %height173 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %118, i32 0, i32 1, !dbg !2953
  %119 = load i64, i64* %height173, align 8, !dbg !2953
  %cmp174 = icmp slt i64 %117, %119, !dbg !2954
  br i1 %cmp174, label %for.body176, label %for.end215, !dbg !2955

for.body176:                                      ; preds = %for.cond172
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2956
  %121 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2958
  %x177 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %121, i32 0, i32 2, !dbg !2959
  %122 = load i64, i64* %x177, align 8, !dbg !2959
  %123 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2960
  %y178 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %123, i32 0, i32 3, !dbg !2961
  %124 = load i64, i64* %y178, align 8, !dbg !2961
  %125 = load i64, i64* %y, align 8, !dbg !2962
  %add179 = add nsw i64 %124, %125, !dbg !2963
  %126 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2964
  %width180 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %126, i32 0, i32 0, !dbg !2965
  %127 = load i64, i64* %width180, align 8, !dbg !2965
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2966
  %call181 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %120, i64 %122, i64 %add179, i64 %127, i64 1, %struct._ExceptionInfo* %128), !dbg !2967
  store %struct._PixelPacket* %call181, %struct._PixelPacket** %p, align 8, !dbg !2968
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2969
  %cmp182 = icmp eq %struct._PixelPacket* %129, null, !dbg !2971
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !2972

if.then184:                                       ; preds = %for.body176
  br label %for.end215, !dbg !2973

if.end185:                                        ; preds = %for.body176
  store i64 0, i64* %x, align 8, !dbg !2974
  br label %for.cond186, !dbg !2976

for.cond186:                                      ; preds = %for.inc210, %if.end185
  %130 = load i64, i64* %x, align 8, !dbg !2977
  %131 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !2979
  %width187 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %131, i32 0, i32 0, !dbg !2980
  %132 = load i64, i64* %width187, align 8, !dbg !2980
  %cmp188 = icmp slt i64 %130, %132, !dbg !2981
  br i1 %cmp188, label %for.body190, label %for.end212, !dbg !2982

for.body190:                                      ; preds = %for.cond186
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2983
  %red191 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 2, !dbg !2983
  %134 = load i16, i16* %red191, align 2, !dbg !2983
  %conv192 = zext i16 %134 to i32, !dbg !2983
  %conv193 = sitofp i32 %conv192 to double, !dbg !2983
  %mul194 = fmul double 0x3EF0001000100010, %conv193, !dbg !2985
  %conv195 = fptrunc double %mul194 to float, !dbg !2986
  %135 = load float*, float** %q, align 8, !dbg !2987
  %incdec.ptr196 = getelementptr inbounds float, float* %135, i32 1, !dbg !2987
  store float* %incdec.ptr196, float** %q, align 8, !dbg !2987
  store float %conv195, float* %135, align 4, !dbg !2988
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2989
  %green197 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !2989
  %137 = load i16, i16* %green197, align 2, !dbg !2989
  %conv198 = zext i16 %137 to i32, !dbg !2989
  %conv199 = sitofp i32 %conv198 to double, !dbg !2989
  %mul200 = fmul double 0x3EF0001000100010, %conv199, !dbg !2990
  %conv201 = fptrunc double %mul200 to float, !dbg !2991
  %138 = load float*, float** %q, align 8, !dbg !2992
  %incdec.ptr202 = getelementptr inbounds float, float* %138, i32 1, !dbg !2992
  store float* %incdec.ptr202, float** %q, align 8, !dbg !2992
  store float %conv201, float* %138, align 4, !dbg !2993
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2994
  %blue203 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 0, i32 0, !dbg !2994
  %140 = load i16, i16* %blue203, align 2, !dbg !2994
  %conv204 = zext i16 %140 to i32, !dbg !2994
  %conv205 = sitofp i32 %conv204 to double, !dbg !2994
  %mul206 = fmul double 0x3EF0001000100010, %conv205, !dbg !2995
  %conv207 = fptrunc double %mul206 to float, !dbg !2996
  %141 = load float*, float** %q, align 8, !dbg !2997
  %incdec.ptr208 = getelementptr inbounds float, float* %141, i32 1, !dbg !2997
  store float* %incdec.ptr208, float** %q, align 8, !dbg !2997
  store float %conv207, float* %141, align 4, !dbg !2998
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2999
  %incdec.ptr209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 1, !dbg !2999
  store %struct._PixelPacket* %incdec.ptr209, %struct._PixelPacket** %p, align 8, !dbg !2999
  br label %for.inc210, !dbg !3000

for.inc210:                                       ; preds = %for.body190
  %143 = load i64, i64* %x, align 8, !dbg !3001
  %inc211 = add nsw i64 %143, 1, !dbg !3001
  store i64 %inc211, i64* %x, align 8, !dbg !3001
  br label %for.cond186, !dbg !3002, !llvm.loop !3003

for.end212:                                       ; preds = %for.cond186
  br label %for.inc213, !dbg !3005

for.inc213:                                       ; preds = %for.end212
  %144 = load i64, i64* %y, align 8, !dbg !3006
  %inc214 = add nsw i64 %144, 1, !dbg !3006
  store i64 %inc214, i64* %y, align 8, !dbg !3006
  br label %for.cond172, !dbg !3007, !llvm.loop !3008

for.end215:                                       ; preds = %if.then184, %for.cond172
  br label %for.end407, !dbg !3010

if.end216:                                        ; preds = %if.end167
  %145 = load i8*, i8** %map.addr, align 8, !dbg !3011
  %call217 = call i32 @LocaleCompare(i8* %145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !3013
  %cmp218 = icmp eq i32 %call217, 0, !dbg !3014
  br i1 %cmp218, label %if.then220, label %if.end272, !dbg !3015

if.then220:                                       ; preds = %if.end216
  store i64 0, i64* %y, align 8, !dbg !3016
  br label %for.cond221, !dbg !3019

for.cond221:                                      ; preds = %for.inc269, %if.then220
  %146 = load i64, i64* %y, align 8, !dbg !3020
  %147 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3022
  %height222 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %147, i32 0, i32 1, !dbg !3023
  %148 = load i64, i64* %height222, align 8, !dbg !3023
  %cmp223 = icmp slt i64 %146, %148, !dbg !3024
  br i1 %cmp223, label %for.body225, label %for.end271, !dbg !3025

for.body225:                                      ; preds = %for.cond221
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3026
  %150 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3028
  %x226 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %150, i32 0, i32 2, !dbg !3029
  %151 = load i64, i64* %x226, align 8, !dbg !3029
  %152 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3030
  %y227 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %152, i32 0, i32 3, !dbg !3031
  %153 = load i64, i64* %y227, align 8, !dbg !3031
  %154 = load i64, i64* %y, align 8, !dbg !3032
  %add228 = add nsw i64 %153, %154, !dbg !3033
  %155 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3034
  %width229 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %155, i32 0, i32 0, !dbg !3035
  %156 = load i64, i64* %width229, align 8, !dbg !3035
  %157 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3036
  %call230 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %149, i64 %151, i64 %add228, i64 %156, i64 1, %struct._ExceptionInfo* %157), !dbg !3037
  store %struct._PixelPacket* %call230, %struct._PixelPacket** %p, align 8, !dbg !3038
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3039
  %cmp231 = icmp eq %struct._PixelPacket* %158, null, !dbg !3041
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !3042

if.then233:                                       ; preds = %for.body225
  br label %for.end271, !dbg !3043

if.end234:                                        ; preds = %for.body225
  store i64 0, i64* %x, align 8, !dbg !3044
  br label %for.cond235, !dbg !3046

for.cond235:                                      ; preds = %for.inc266, %if.end234
  %159 = load i64, i64* %x, align 8, !dbg !3047
  %160 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3049
  %width236 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %160, i32 0, i32 0, !dbg !3050
  %161 = load i64, i64* %width236, align 8, !dbg !3050
  %cmp237 = icmp slt i64 %159, %161, !dbg !3051
  br i1 %cmp237, label %for.body239, label %for.end268, !dbg !3052

for.body239:                                      ; preds = %for.cond235
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3053
  %red240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 2, !dbg !3053
  %163 = load i16, i16* %red240, align 2, !dbg !3053
  %conv241 = zext i16 %163 to i32, !dbg !3053
  %conv242 = sitofp i32 %conv241 to double, !dbg !3053
  %mul243 = fmul double 0x3EF0001000100010, %conv242, !dbg !3055
  %conv244 = fptrunc double %mul243 to float, !dbg !3056
  %164 = load float*, float** %q, align 8, !dbg !3057
  %incdec.ptr245 = getelementptr inbounds float, float* %164, i32 1, !dbg !3057
  store float* %incdec.ptr245, float** %q, align 8, !dbg !3057
  store float %conv244, float* %164, align 4, !dbg !3058
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3059
  %green246 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i32 0, i32 1, !dbg !3059
  %166 = load i16, i16* %green246, align 2, !dbg !3059
  %conv247 = zext i16 %166 to i32, !dbg !3059
  %conv248 = sitofp i32 %conv247 to double, !dbg !3059
  %mul249 = fmul double 0x3EF0001000100010, %conv248, !dbg !3060
  %conv250 = fptrunc double %mul249 to float, !dbg !3061
  %167 = load float*, float** %q, align 8, !dbg !3062
  %incdec.ptr251 = getelementptr inbounds float, float* %167, i32 1, !dbg !3062
  store float* %incdec.ptr251, float** %q, align 8, !dbg !3062
  store float %conv250, float* %167, align 4, !dbg !3063
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3064
  %blue252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 0, !dbg !3064
  %169 = load i16, i16* %blue252, align 2, !dbg !3064
  %conv253 = zext i16 %169 to i32, !dbg !3064
  %conv254 = sitofp i32 %conv253 to double, !dbg !3064
  %mul255 = fmul double 0x3EF0001000100010, %conv254, !dbg !3065
  %conv256 = fptrunc double %mul255 to float, !dbg !3066
  %170 = load float*, float** %q, align 8, !dbg !3067
  %incdec.ptr257 = getelementptr inbounds float, float* %170, i32 1, !dbg !3067
  store float* %incdec.ptr257, float** %q, align 8, !dbg !3067
  store float %conv256, float* %170, align 4, !dbg !3068
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3069
  %opacity258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 0, i32 3, !dbg !3069
  %172 = load i16, i16* %opacity258, align 2, !dbg !3069
  %conv259 = zext i16 %172 to i32, !dbg !3069
  %sub260 = sub nsw i32 65535, %conv259, !dbg !3069
  %conv261 = sitofp i32 %sub260 to double, !dbg !3069
  %mul262 = fmul double 0x3EF0001000100010, %conv261, !dbg !3070
  %conv263 = fptrunc double %mul262 to float, !dbg !3071
  %173 = load float*, float** %q, align 8, !dbg !3072
  %incdec.ptr264 = getelementptr inbounds float, float* %173, i32 1, !dbg !3072
  store float* %incdec.ptr264, float** %q, align 8, !dbg !3072
  store float %conv263, float* %173, align 4, !dbg !3073
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3074
  %incdec.ptr265 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 1, !dbg !3074
  store %struct._PixelPacket* %incdec.ptr265, %struct._PixelPacket** %p, align 8, !dbg !3074
  br label %for.inc266, !dbg !3075

for.inc266:                                       ; preds = %for.body239
  %175 = load i64, i64* %x, align 8, !dbg !3076
  %inc267 = add nsw i64 %175, 1, !dbg !3076
  store i64 %inc267, i64* %x, align 8, !dbg !3076
  br label %for.cond235, !dbg !3077, !llvm.loop !3078

for.end268:                                       ; preds = %for.cond235
  br label %for.inc269, !dbg !3080

for.inc269:                                       ; preds = %for.end268
  %176 = load i64, i64* %y, align 8, !dbg !3081
  %inc270 = add nsw i64 %176, 1, !dbg !3081
  store i64 %inc270, i64* %y, align 8, !dbg !3081
  br label %for.cond221, !dbg !3082, !llvm.loop !3083

for.end271:                                       ; preds = %if.then233, %for.cond221
  br label %for.end407, !dbg !3085

if.end272:                                        ; preds = %if.end216
  %177 = load i8*, i8** %map.addr, align 8, !dbg !3086
  %call273 = call i32 @LocaleCompare(i8* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !3088
  %cmp274 = icmp eq i32 %call273, 0, !dbg !3089
  br i1 %cmp274, label %if.then276, label %if.end322, !dbg !3090

if.then276:                                       ; preds = %if.end272
  store i64 0, i64* %y, align 8, !dbg !3091
  br label %for.cond277, !dbg !3094

for.cond277:                                      ; preds = %for.inc319, %if.then276
  %178 = load i64, i64* %y, align 8, !dbg !3095
  %179 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3097
  %height278 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %179, i32 0, i32 1, !dbg !3098
  %180 = load i64, i64* %height278, align 8, !dbg !3098
  %cmp279 = icmp slt i64 %178, %180, !dbg !3099
  br i1 %cmp279, label %for.body281, label %for.end321, !dbg !3100

for.body281:                                      ; preds = %for.cond277
  %181 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3101
  %182 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3103
  %x282 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %182, i32 0, i32 2, !dbg !3104
  %183 = load i64, i64* %x282, align 8, !dbg !3104
  %184 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3105
  %y283 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %184, i32 0, i32 3, !dbg !3106
  %185 = load i64, i64* %y283, align 8, !dbg !3106
  %186 = load i64, i64* %y, align 8, !dbg !3107
  %add284 = add nsw i64 %185, %186, !dbg !3108
  %187 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3109
  %width285 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %187, i32 0, i32 0, !dbg !3110
  %188 = load i64, i64* %width285, align 8, !dbg !3110
  %189 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3111
  %call286 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %181, i64 %183, i64 %add284, i64 %188, i64 1, %struct._ExceptionInfo* %189), !dbg !3112
  store %struct._PixelPacket* %call286, %struct._PixelPacket** %p, align 8, !dbg !3113
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3114
  %cmp287 = icmp eq %struct._PixelPacket* %190, null, !dbg !3116
  br i1 %cmp287, label %if.then289, label %if.end290, !dbg !3117

if.then289:                                       ; preds = %for.body281
  br label %for.end321, !dbg !3118

if.end290:                                        ; preds = %for.body281
  store i64 0, i64* %x, align 8, !dbg !3119
  br label %for.cond291, !dbg !3121

for.cond291:                                      ; preds = %for.inc316, %if.end290
  %191 = load i64, i64* %x, align 8, !dbg !3122
  %192 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3124
  %width292 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %192, i32 0, i32 0, !dbg !3125
  %193 = load i64, i64* %width292, align 8, !dbg !3125
  %cmp293 = icmp slt i64 %191, %193, !dbg !3126
  br i1 %cmp293, label %for.body295, label %for.end318, !dbg !3127

for.body295:                                      ; preds = %for.cond291
  %194 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3128
  %red296 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %194, i32 0, i32 2, !dbg !3128
  %195 = load i16, i16* %red296, align 2, !dbg !3128
  %conv297 = zext i16 %195 to i32, !dbg !3128
  %conv298 = sitofp i32 %conv297 to double, !dbg !3128
  %mul299 = fmul double 0x3EF0001000100010, %conv298, !dbg !3130
  %conv300 = fptrunc double %mul299 to float, !dbg !3131
  %196 = load float*, float** %q, align 8, !dbg !3132
  %incdec.ptr301 = getelementptr inbounds float, float* %196, i32 1, !dbg !3132
  store float* %incdec.ptr301, float** %q, align 8, !dbg !3132
  store float %conv300, float* %196, align 4, !dbg !3133
  %197 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3134
  %green302 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %197, i32 0, i32 1, !dbg !3134
  %198 = load i16, i16* %green302, align 2, !dbg !3134
  %conv303 = zext i16 %198 to i32, !dbg !3134
  %conv304 = sitofp i32 %conv303 to double, !dbg !3134
  %mul305 = fmul double 0x3EF0001000100010, %conv304, !dbg !3135
  %conv306 = fptrunc double %mul305 to float, !dbg !3136
  %199 = load float*, float** %q, align 8, !dbg !3137
  %incdec.ptr307 = getelementptr inbounds float, float* %199, i32 1, !dbg !3137
  store float* %incdec.ptr307, float** %q, align 8, !dbg !3137
  store float %conv306, float* %199, align 4, !dbg !3138
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3139
  %blue308 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 0, !dbg !3139
  %201 = load i16, i16* %blue308, align 2, !dbg !3139
  %conv309 = zext i16 %201 to i32, !dbg !3139
  %conv310 = sitofp i32 %conv309 to double, !dbg !3139
  %mul311 = fmul double 0x3EF0001000100010, %conv310, !dbg !3140
  %conv312 = fptrunc double %mul311 to float, !dbg !3141
  %202 = load float*, float** %q, align 8, !dbg !3142
  %incdec.ptr313 = getelementptr inbounds float, float* %202, i32 1, !dbg !3142
  store float* %incdec.ptr313, float** %q, align 8, !dbg !3142
  store float %conv312, float* %202, align 4, !dbg !3143
  %203 = load float*, float** %q, align 8, !dbg !3144
  %incdec.ptr314 = getelementptr inbounds float, float* %203, i32 1, !dbg !3144
  store float* %incdec.ptr314, float** %q, align 8, !dbg !3144
  store float 0.000000e+00, float* %203, align 4, !dbg !3145
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3146
  %incdec.ptr315 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 1, !dbg !3146
  store %struct._PixelPacket* %incdec.ptr315, %struct._PixelPacket** %p, align 8, !dbg !3146
  br label %for.inc316, !dbg !3147

for.inc316:                                       ; preds = %for.body295
  %205 = load i64, i64* %x, align 8, !dbg !3148
  %inc317 = add nsw i64 %205, 1, !dbg !3148
  store i64 %inc317, i64* %x, align 8, !dbg !3148
  br label %for.cond291, !dbg !3149, !llvm.loop !3150

for.end318:                                       ; preds = %for.cond291
  br label %for.inc319, !dbg !3152

for.inc319:                                       ; preds = %for.end318
  %206 = load i64, i64* %y, align 8, !dbg !3153
  %inc320 = add nsw i64 %206, 1, !dbg !3153
  store i64 %inc320, i64* %y, align 8, !dbg !3153
  br label %for.cond277, !dbg !3154, !llvm.loop !3155

for.end321:                                       ; preds = %if.then289, %for.cond277
  br label %for.end407, !dbg !3157

if.end322:                                        ; preds = %if.end272
  %207 = load i8*, i8** %map.addr, align 8, !dbg !3158
  %call323 = call i64 @strlen(i8* %207) #13, !dbg !3159
  store i64 %call323, i64* %length, align 8, !dbg !3160
  store i64 0, i64* %y, align 8, !dbg !3161
  br label %for.cond324, !dbg !3163

for.cond324:                                      ; preds = %for.inc405, %if.end322
  %208 = load i64, i64* %y, align 8, !dbg !3164
  %209 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3166
  %height325 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %209, i32 0, i32 1, !dbg !3167
  %210 = load i64, i64* %height325, align 8, !dbg !3167
  %cmp326 = icmp slt i64 %208, %210, !dbg !3168
  br i1 %cmp326, label %for.body328, label %for.end407, !dbg !3169

for.body328:                                      ; preds = %for.cond324
  %211 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3170
  %212 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3172
  %x329 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %212, i32 0, i32 2, !dbg !3173
  %213 = load i64, i64* %x329, align 8, !dbg !3173
  %214 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3174
  %y330 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %214, i32 0, i32 3, !dbg !3175
  %215 = load i64, i64* %y330, align 8, !dbg !3175
  %216 = load i64, i64* %y, align 8, !dbg !3176
  %add331 = add nsw i64 %215, %216, !dbg !3177
  %217 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3178
  %width332 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %217, i32 0, i32 0, !dbg !3179
  %218 = load i64, i64* %width332, align 8, !dbg !3179
  %219 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3180
  %call333 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %211, i64 %213, i64 %add331, i64 %218, i64 1, %struct._ExceptionInfo* %219), !dbg !3181
  store %struct._PixelPacket* %call333, %struct._PixelPacket** %p, align 8, !dbg !3182
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3183
  %cmp334 = icmp eq %struct._PixelPacket* %220, null, !dbg !3185
  br i1 %cmp334, label %if.then336, label %if.end337, !dbg !3186

if.then336:                                       ; preds = %for.body328
  br label %for.end407, !dbg !3187

if.end337:                                        ; preds = %for.body328
  %221 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3188
  %call338 = call i16* @GetVirtualIndexQueue(%struct._Image* %221), !dbg !3189
  store i16* %call338, i16** %indexes, align 8, !dbg !3190
  store i64 0, i64* %x, align 8, !dbg !3191
  br label %for.cond339, !dbg !3193

for.cond339:                                      ; preds = %for.inc402, %if.end337
  %222 = load i64, i64* %x, align 8, !dbg !3194
  %223 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3196
  %width340 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %223, i32 0, i32 0, !dbg !3197
  %224 = load i64, i64* %width340, align 8, !dbg !3197
  %cmp341 = icmp slt i64 %222, %224, !dbg !3198
  br i1 %cmp341, label %for.body343, label %for.end404, !dbg !3199

for.body343:                                      ; preds = %for.cond339
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3200, metadata !DIExpression()), !dbg !3202
  store i64 0, i64* %i, align 8, !dbg !3203
  br label %for.cond344, !dbg !3205

for.cond344:                                      ; preds = %for.inc398, %for.body343
  %225 = load i64, i64* %i, align 8, !dbg !3206
  %226 = load i64, i64* %length, align 8, !dbg !3208
  %cmp345 = icmp slt i64 %225, %226, !dbg !3209
  br i1 %cmp345, label %for.body347, label %for.end400, !dbg !3210

for.body347:                                      ; preds = %for.cond344
  %227 = load float*, float** %q, align 8, !dbg !3211
  store float 0.000000e+00, float* %227, align 4, !dbg !3213
  %228 = load i32*, i32** %quantum_map.addr, align 8, !dbg !3214
  %229 = load i64, i64* %i, align 8, !dbg !3215
  %arrayidx = getelementptr inbounds i32, i32* %228, i64 %229, !dbg !3214
  %230 = load i32, i32* %arrayidx, align 4, !dbg !3214
  switch i32 %230, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb353
    i32 12, label %sw.bb353
    i32 3, label %sw.bb359
    i32 19, label %sw.bb359
    i32 1, label %sw.bb365
    i32 13, label %sw.bb374
    i32 2, label %sw.bb380
    i32 11, label %sw.bb392
  ], !dbg !3216

sw.bb:                                            ; preds = %for.body347, %for.body347
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3217
  %red348 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 0, i32 2, !dbg !3217
  %232 = load i16, i16* %red348, align 2, !dbg !3217
  %conv349 = zext i16 %232 to i32, !dbg !3217
  %conv350 = sitofp i32 %conv349 to double, !dbg !3217
  %mul351 = fmul double 0x3EF0001000100010, %conv350, !dbg !3220
  %conv352 = fptrunc double %mul351 to float, !dbg !3221
  %233 = load float*, float** %q, align 8, !dbg !3222
  store float %conv352, float* %233, align 4, !dbg !3223
  br label %sw.epilog, !dbg !3224

sw.bb353:                                         ; preds = %for.body347, %for.body347
  %234 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3225
  %green354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %234, i32 0, i32 1, !dbg !3225
  %235 = load i16, i16* %green354, align 2, !dbg !3225
  %conv355 = zext i16 %235 to i32, !dbg !3225
  %conv356 = sitofp i32 %conv355 to double, !dbg !3225
  %mul357 = fmul double 0x3EF0001000100010, %conv356, !dbg !3227
  %conv358 = fptrunc double %mul357 to float, !dbg !3228
  %236 = load float*, float** %q, align 8, !dbg !3229
  store float %conv358, float* %236, align 4, !dbg !3230
  br label %sw.epilog, !dbg !3231

sw.bb359:                                         ; preds = %for.body347, %for.body347
  %237 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3232
  %blue360 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %237, i32 0, i32 0, !dbg !3232
  %238 = load i16, i16* %blue360, align 2, !dbg !3232
  %conv361 = zext i16 %238 to i32, !dbg !3232
  %conv362 = sitofp i32 %conv361 to double, !dbg !3232
  %mul363 = fmul double 0x3EF0001000100010, %conv362, !dbg !3234
  %conv364 = fptrunc double %mul363 to float, !dbg !3235
  %239 = load float*, float** %q, align 8, !dbg !3236
  store float %conv364, float* %239, align 4, !dbg !3237
  br label %sw.epilog, !dbg !3238

sw.bb365:                                         ; preds = %for.body347
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3239
  %opacity366 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 3, !dbg !3239
  %241 = load i16, i16* %opacity366, align 2, !dbg !3239
  %conv367 = zext i16 %241 to i32, !dbg !3239
  %sub368 = sub nsw i32 65535, %conv367, !dbg !3239
  %conv369 = trunc i32 %sub368 to i16, !dbg !3241
  %conv370 = zext i16 %conv369 to i32, !dbg !3242
  %conv371 = sitofp i32 %conv370 to double, !dbg !3242
  %mul372 = fmul double 0x3EF0001000100010, %conv371, !dbg !3243
  %conv373 = fptrunc double %mul372 to float, !dbg !3244
  %242 = load float*, float** %q, align 8, !dbg !3245
  store float %conv373, float* %242, align 4, !dbg !3246
  br label %sw.epilog, !dbg !3247

sw.bb374:                                         ; preds = %for.body347
  %243 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3248
  %opacity375 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %243, i32 0, i32 3, !dbg !3248
  %244 = load i16, i16* %opacity375, align 2, !dbg !3248
  %conv376 = zext i16 %244 to i32, !dbg !3248
  %conv377 = sitofp i32 %conv376 to double, !dbg !3248
  %mul378 = fmul double 0x3EF0001000100010, %conv377, !dbg !3250
  %conv379 = fptrunc double %mul378 to float, !dbg !3251
  %245 = load float*, float** %q, align 8, !dbg !3252
  store float %conv379, float* %245, align 4, !dbg !3253
  br label %sw.epilog, !dbg !3254

sw.bb380:                                         ; preds = %for.body347
  %246 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3255
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %246, i32 0, i32 1, !dbg !3258
  %247 = load i32, i32* %colorspace, align 4, !dbg !3258
  %cmp381 = icmp eq i32 %247, 12, !dbg !3259
  br i1 %cmp381, label %if.then383, label %if.end391, !dbg !3260

if.then383:                                       ; preds = %sw.bb380
  %248 = load i16*, i16** %indexes, align 8, !dbg !3261
  %249 = load i64, i64* %x, align 8, !dbg !3261
  %add.ptr = getelementptr inbounds i16, i16* %248, i64 %249, !dbg !3261
  %cmp384 = icmp eq i16* %add.ptr, null, !dbg !3261
  br i1 %cmp384, label %cond.true, label %cond.false, !dbg !3261

cond.true:                                        ; preds = %if.then383
  br label %cond.end, !dbg !3261

cond.false:                                       ; preds = %if.then383
  %250 = load i16*, i16** %indexes, align 8, !dbg !3261
  %251 = load i64, i64* %x, align 8, !dbg !3261
  %add.ptr386 = getelementptr inbounds i16, i16* %250, i64 %251, !dbg !3261
  %252 = load i16, i16* %add.ptr386, align 2, !dbg !3261
  %conv387 = zext i16 %252 to i32, !dbg !3261
  br label %cond.end, !dbg !3261

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv387, %cond.false ], !dbg !3261
  %conv388 = sitofp i32 %cond to double, !dbg !3261
  %mul389 = fmul double 0x3EF0001000100010, %conv388, !dbg !3262
  %conv390 = fptrunc double %mul389 to float, !dbg !3263
  %253 = load float*, float** %q, align 8, !dbg !3264
  store float %conv390, float* %253, align 4, !dbg !3265
  br label %if.end391, !dbg !3266

if.end391:                                        ; preds = %cond.end, %sw.bb380
  br label %sw.epilog, !dbg !3267

sw.bb392:                                         ; preds = %for.body347
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3268
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3270
  %call393 = call float @GetPixelIntensity(%struct._Image* %254, %struct._PixelPacket* %255), !dbg !3271
  %conv394 = fpext float %call393 to double, !dbg !3271
  %mul395 = fmul double 0x3EF0001000100010, %conv394, !dbg !3272
  %conv396 = fptrunc double %mul395 to float, !dbg !3273
  %256 = load float*, float** %q, align 8, !dbg !3274
  store float %conv396, float* %256, align 4, !dbg !3275
  br label %sw.epilog, !dbg !3276

sw.default:                                       ; preds = %for.body347
  %257 = load float*, float** %q, align 8, !dbg !3277
  store float 0.000000e+00, float* %257, align 4, !dbg !3278
  br label %sw.epilog, !dbg !3279

sw.epilog:                                        ; preds = %sw.default, %sw.bb392, %if.end391, %sw.bb374, %sw.bb365, %sw.bb359, %sw.bb353, %sw.bb
  %258 = load float*, float** %q, align 8, !dbg !3280
  %incdec.ptr397 = getelementptr inbounds float, float* %258, i32 1, !dbg !3280
  store float* %incdec.ptr397, float** %q, align 8, !dbg !3280
  br label %for.inc398, !dbg !3281

for.inc398:                                       ; preds = %sw.epilog
  %259 = load i64, i64* %i, align 8, !dbg !3282
  %inc399 = add nsw i64 %259, 1, !dbg !3282
  store i64 %inc399, i64* %i, align 8, !dbg !3282
  br label %for.cond344, !dbg !3283, !llvm.loop !3284

for.end400:                                       ; preds = %for.cond344
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3286
  %incdec.ptr401 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %260, i32 1, !dbg !3286
  store %struct._PixelPacket* %incdec.ptr401, %struct._PixelPacket** %p, align 8, !dbg !3286
  br label %for.inc402, !dbg !3287

for.inc402:                                       ; preds = %for.end400
  %261 = load i64, i64* %x, align 8, !dbg !3288
  %inc403 = add nsw i64 %261, 1, !dbg !3288
  store i64 %inc403, i64* %x, align 8, !dbg !3288
  br label %for.cond339, !dbg !3289, !llvm.loop !3290

for.end404:                                       ; preds = %for.cond339
  br label %for.inc405, !dbg !3292

for.inc405:                                       ; preds = %for.end404
  %262 = load i64, i64* %y, align 8, !dbg !3293
  %inc406 = add nsw i64 %262, 1, !dbg !3293
  store i64 %inc406, i64* %y, align 8, !dbg !3293
  br label %for.cond324, !dbg !3294, !llvm.loop !3295

for.end407:                                       ; preds = %for.end26, %for.end80, %for.end130, %for.end166, %for.end215, %for.end271, %for.end321, %if.then336, %for.cond324
  ret void, !dbg !3297
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportIntegerPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !3298 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %q = alloca i32*, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3299, metadata !DIExpression()), !dbg !3300
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !3301, metadata !DIExpression()), !dbg !3302
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !3303, metadata !DIExpression()), !dbg !3304
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !3305, metadata !DIExpression()), !dbg !3306
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !3307, metadata !DIExpression()), !dbg !3308
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3309, metadata !DIExpression()), !dbg !3310
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !3311, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !3313, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3315, metadata !DIExpression()), !dbg !3316
  call void @llvm.dbg.declare(metadata i32** %q, metadata !3317, metadata !DIExpression()), !dbg !3318
  call void @llvm.dbg.declare(metadata i64* %length, metadata !3319, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.declare(metadata i64* %y, metadata !3321, metadata !DIExpression()), !dbg !3322
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !3323
  %1 = bitcast i8* %0 to i32*, !dbg !3324
  store i32* %1, i32** %q, align 8, !dbg !3325
  %2 = load i8*, i8** %map.addr, align 8, !dbg !3326
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !3328
  %cmp = icmp eq i32 %call, 0, !dbg !3329
  br i1 %cmp, label %if.then, label %if.end20, !dbg !3330

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !3331
  br label %for.cond, !dbg !3334

for.cond:                                         ; preds = %for.inc17, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !3335
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3337
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !3338
  %5 = load i64, i64* %height, align 8, !dbg !3338
  %cmp1 = icmp slt i64 %3, %5, !dbg !3339
  br i1 %cmp1, label %for.body, label %for.end19, !dbg !3340

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3341
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3343
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !3344
  %8 = load i64, i64* %x2, align 8, !dbg !3344
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3345
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !3346
  %10 = load i64, i64* %y3, align 8, !dbg !3346
  %11 = load i64, i64* %y, align 8, !dbg !3347
  %add = add nsw i64 %10, %11, !dbg !3348
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3349
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !3350
  %13 = load i64, i64* %width, align 8, !dbg !3350
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3351
  %call4 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !3352
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %p, align 8, !dbg !3353
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3354
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !3356
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !3357

if.then6:                                         ; preds = %for.body
  br label %for.end19, !dbg !3358

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !3359
  br label %for.cond7, !dbg !3361

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !3362
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3364
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !3365
  %18 = load i64, i64* %width8, align 8, !dbg !3365
  %cmp9 = icmp slt i64 %16, %18, !dbg !3366
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !3367

for.body10:                                       ; preds = %for.cond7
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3368
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 0, i32 0, !dbg !3368
  %20 = load i16, i16* %blue, align 2, !dbg !3368
  %call11 = call i32 @ScaleQuantumToLong(i16 zeroext %20), !dbg !3370
  %21 = load i32*, i32** %q, align 8, !dbg !3371
  %incdec.ptr = getelementptr inbounds i32, i32* %21, i32 1, !dbg !3371
  store i32* %incdec.ptr, i32** %q, align 8, !dbg !3371
  store i32 %call11, i32* %21, align 4, !dbg !3372
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3373
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 1, !dbg !3373
  %23 = load i16, i16* %green, align 2, !dbg !3373
  %call12 = call i32 @ScaleQuantumToLong(i16 zeroext %23), !dbg !3374
  %24 = load i32*, i32** %q, align 8, !dbg !3375
  %incdec.ptr13 = getelementptr inbounds i32, i32* %24, i32 1, !dbg !3375
  store i32* %incdec.ptr13, i32** %q, align 8, !dbg !3375
  store i32 %call12, i32* %24, align 4, !dbg !3376
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3377
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 2, !dbg !3377
  %26 = load i16, i16* %red, align 2, !dbg !3377
  %call14 = call i32 @ScaleQuantumToLong(i16 zeroext %26), !dbg !3378
  %27 = load i32*, i32** %q, align 8, !dbg !3379
  %incdec.ptr15 = getelementptr inbounds i32, i32* %27, i32 1, !dbg !3379
  store i32* %incdec.ptr15, i32** %q, align 8, !dbg !3379
  store i32 %call14, i32* %27, align 4, !dbg !3380
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3381
  %incdec.ptr16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !3381
  store %struct._PixelPacket* %incdec.ptr16, %struct._PixelPacket** %p, align 8, !dbg !3381
  br label %for.inc, !dbg !3382

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !3383
  %inc = add nsw i64 %29, 1, !dbg !3383
  store i64 %inc, i64* %x, align 8, !dbg !3383
  br label %for.cond7, !dbg !3384, !llvm.loop !3385

for.end:                                          ; preds = %for.cond7
  br label %for.inc17, !dbg !3387

for.inc17:                                        ; preds = %for.end
  %30 = load i64, i64* %y, align 8, !dbg !3388
  %inc18 = add nsw i64 %30, 1, !dbg !3388
  store i64 %inc18, i64* %y, align 8, !dbg !3388
  br label %for.cond, !dbg !3389, !llvm.loop !3390

for.end19:                                        ; preds = %if.then6, %for.cond
  br label %for.end330, !dbg !3392

if.end20:                                         ; preds = %entry
  %31 = load i8*, i8** %map.addr, align 8, !dbg !3393
  %call21 = call i32 @LocaleCompare(i8* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !3395
  %cmp22 = icmp eq i32 %call21, 0, !dbg !3396
  br i1 %cmp22, label %if.then23, label %if.end59, !dbg !3397

if.then23:                                        ; preds = %if.end20
  store i64 0, i64* %y, align 8, !dbg !3398
  br label %for.cond24, !dbg !3401

for.cond24:                                       ; preds = %for.inc56, %if.then23
  %32 = load i64, i64* %y, align 8, !dbg !3402
  %33 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3404
  %height25 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %33, i32 0, i32 1, !dbg !3405
  %34 = load i64, i64* %height25, align 8, !dbg !3405
  %cmp26 = icmp slt i64 %32, %34, !dbg !3406
  br i1 %cmp26, label %for.body27, label %for.end58, !dbg !3407

for.body27:                                       ; preds = %for.cond24
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3408
  %36 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3410
  %x28 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %36, i32 0, i32 2, !dbg !3411
  %37 = load i64, i64* %x28, align 8, !dbg !3411
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3412
  %y29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 3, !dbg !3413
  %39 = load i64, i64* %y29, align 8, !dbg !3413
  %40 = load i64, i64* %y, align 8, !dbg !3414
  %add30 = add nsw i64 %39, %40, !dbg !3415
  %41 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3416
  %width31 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %41, i32 0, i32 0, !dbg !3417
  %42 = load i64, i64* %width31, align 8, !dbg !3417
  %43 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3418
  %call32 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %35, i64 %37, i64 %add30, i64 %42, i64 1, %struct._ExceptionInfo* %43), !dbg !3419
  store %struct._PixelPacket* %call32, %struct._PixelPacket** %p, align 8, !dbg !3420
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3421
  %cmp33 = icmp eq %struct._PixelPacket* %44, null, !dbg !3423
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !3424

if.then34:                                        ; preds = %for.body27
  br label %for.end58, !dbg !3425

if.end35:                                         ; preds = %for.body27
  store i64 0, i64* %x, align 8, !dbg !3426
  br label %for.cond36, !dbg !3428

for.cond36:                                       ; preds = %for.inc53, %if.end35
  %45 = load i64, i64* %x, align 8, !dbg !3429
  %46 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3431
  %width37 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %46, i32 0, i32 0, !dbg !3432
  %47 = load i64, i64* %width37, align 8, !dbg !3432
  %cmp38 = icmp slt i64 %45, %47, !dbg !3433
  br i1 %cmp38, label %for.body39, label %for.end55, !dbg !3434

for.body39:                                       ; preds = %for.cond36
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3435
  %blue40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 0, !dbg !3435
  %49 = load i16, i16* %blue40, align 2, !dbg !3435
  %call41 = call i32 @ScaleQuantumToLong(i16 zeroext %49), !dbg !3437
  %50 = load i32*, i32** %q, align 8, !dbg !3438
  %incdec.ptr42 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !3438
  store i32* %incdec.ptr42, i32** %q, align 8, !dbg !3438
  store i32 %call41, i32* %50, align 4, !dbg !3439
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3440
  %green43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 0, i32 1, !dbg !3440
  %52 = load i16, i16* %green43, align 2, !dbg !3440
  %call44 = call i32 @ScaleQuantumToLong(i16 zeroext %52), !dbg !3441
  %53 = load i32*, i32** %q, align 8, !dbg !3442
  %incdec.ptr45 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !3442
  store i32* %incdec.ptr45, i32** %q, align 8, !dbg !3442
  store i32 %call44, i32* %53, align 4, !dbg !3443
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3444
  %red46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !3444
  %55 = load i16, i16* %red46, align 2, !dbg !3444
  %call47 = call i32 @ScaleQuantumToLong(i16 zeroext %55), !dbg !3445
  %56 = load i32*, i32** %q, align 8, !dbg !3446
  %incdec.ptr48 = getelementptr inbounds i32, i32* %56, i32 1, !dbg !3446
  store i32* %incdec.ptr48, i32** %q, align 8, !dbg !3446
  store i32 %call47, i32* %56, align 4, !dbg !3447
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3448
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !3448
  %58 = load i16, i16* %opacity, align 2, !dbg !3448
  %conv = zext i16 %58 to i32, !dbg !3448
  %sub = sub nsw i32 65535, %conv, !dbg !3449
  %conv49 = trunc i32 %sub to i16, !dbg !3450
  %call50 = call i32 @ScaleQuantumToLong(i16 zeroext %conv49), !dbg !3451
  %59 = load i32*, i32** %q, align 8, !dbg !3452
  %incdec.ptr51 = getelementptr inbounds i32, i32* %59, i32 1, !dbg !3452
  store i32* %incdec.ptr51, i32** %q, align 8, !dbg !3452
  store i32 %call50, i32* %59, align 4, !dbg !3453
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3454
  %incdec.ptr52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 1, !dbg !3454
  store %struct._PixelPacket* %incdec.ptr52, %struct._PixelPacket** %p, align 8, !dbg !3454
  br label %for.inc53, !dbg !3455

for.inc53:                                        ; preds = %for.body39
  %61 = load i64, i64* %x, align 8, !dbg !3456
  %inc54 = add nsw i64 %61, 1, !dbg !3456
  store i64 %inc54, i64* %x, align 8, !dbg !3456
  br label %for.cond36, !dbg !3457, !llvm.loop !3458

for.end55:                                        ; preds = %for.cond36
  br label %for.inc56, !dbg !3460

for.inc56:                                        ; preds = %for.end55
  %62 = load i64, i64* %y, align 8, !dbg !3461
  %inc57 = add nsw i64 %62, 1, !dbg !3461
  store i64 %inc57, i64* %y, align 8, !dbg !3461
  br label %for.cond24, !dbg !3462, !llvm.loop !3463

for.end58:                                        ; preds = %if.then34, %for.cond24
  br label %for.end330, !dbg !3465

if.end59:                                         ; preds = %if.end20
  %63 = load i8*, i8** %map.addr, align 8, !dbg !3466
  %call60 = call i32 @LocaleCompare(i8* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !3468
  %cmp61 = icmp eq i32 %call60, 0, !dbg !3469
  br i1 %cmp61, label %if.then63, label %if.end100, !dbg !3470

if.then63:                                        ; preds = %if.end59
  store i64 0, i64* %y, align 8, !dbg !3471
  br label %for.cond64, !dbg !3474

for.cond64:                                       ; preds = %for.inc97, %if.then63
  %64 = load i64, i64* %y, align 8, !dbg !3475
  %65 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3477
  %height65 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %65, i32 0, i32 1, !dbg !3478
  %66 = load i64, i64* %height65, align 8, !dbg !3478
  %cmp66 = icmp slt i64 %64, %66, !dbg !3479
  br i1 %cmp66, label %for.body68, label %for.end99, !dbg !3480

for.body68:                                       ; preds = %for.cond64
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3481
  %68 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3483
  %x69 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %68, i32 0, i32 2, !dbg !3484
  %69 = load i64, i64* %x69, align 8, !dbg !3484
  %70 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3485
  %y70 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %70, i32 0, i32 3, !dbg !3486
  %71 = load i64, i64* %y70, align 8, !dbg !3486
  %72 = load i64, i64* %y, align 8, !dbg !3487
  %add71 = add nsw i64 %71, %72, !dbg !3488
  %73 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3489
  %width72 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %73, i32 0, i32 0, !dbg !3490
  %74 = load i64, i64* %width72, align 8, !dbg !3490
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3491
  %call73 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %67, i64 %69, i64 %add71, i64 %74, i64 1, %struct._ExceptionInfo* %75), !dbg !3492
  store %struct._PixelPacket* %call73, %struct._PixelPacket** %p, align 8, !dbg !3493
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3494
  %cmp74 = icmp eq %struct._PixelPacket* %76, null, !dbg !3496
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !3497

if.then76:                                        ; preds = %for.body68
  br label %for.end99, !dbg !3498

if.end77:                                         ; preds = %for.body68
  store i64 0, i64* %x, align 8, !dbg !3499
  br label %for.cond78, !dbg !3501

for.cond78:                                       ; preds = %for.inc94, %if.end77
  %77 = load i64, i64* %x, align 8, !dbg !3502
  %78 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3504
  %width79 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %78, i32 0, i32 0, !dbg !3505
  %79 = load i64, i64* %width79, align 8, !dbg !3505
  %cmp80 = icmp slt i64 %77, %79, !dbg !3506
  br i1 %cmp80, label %for.body82, label %for.end96, !dbg !3507

for.body82:                                       ; preds = %for.cond78
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3508
  %blue83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 0, !dbg !3508
  %81 = load i16, i16* %blue83, align 2, !dbg !3508
  %call84 = call i32 @ScaleQuantumToLong(i16 zeroext %81), !dbg !3510
  %82 = load i32*, i32** %q, align 8, !dbg !3511
  %incdec.ptr85 = getelementptr inbounds i32, i32* %82, i32 1, !dbg !3511
  store i32* %incdec.ptr85, i32** %q, align 8, !dbg !3511
  store i32 %call84, i32* %82, align 4, !dbg !3512
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3513
  %green86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 1, !dbg !3513
  %84 = load i16, i16* %green86, align 2, !dbg !3513
  %call87 = call i32 @ScaleQuantumToLong(i16 zeroext %84), !dbg !3514
  %85 = load i32*, i32** %q, align 8, !dbg !3515
  %incdec.ptr88 = getelementptr inbounds i32, i32* %85, i32 1, !dbg !3515
  store i32* %incdec.ptr88, i32** %q, align 8, !dbg !3515
  store i32 %call87, i32* %85, align 4, !dbg !3516
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3517
  %red89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 2, !dbg !3517
  %87 = load i16, i16* %red89, align 2, !dbg !3517
  %call90 = call i32 @ScaleQuantumToLong(i16 zeroext %87), !dbg !3518
  %88 = load i32*, i32** %q, align 8, !dbg !3519
  %incdec.ptr91 = getelementptr inbounds i32, i32* %88, i32 1, !dbg !3519
  store i32* %incdec.ptr91, i32** %q, align 8, !dbg !3519
  store i32 %call90, i32* %88, align 4, !dbg !3520
  %89 = load i32*, i32** %q, align 8, !dbg !3521
  %incdec.ptr92 = getelementptr inbounds i32, i32* %89, i32 1, !dbg !3521
  store i32* %incdec.ptr92, i32** %q, align 8, !dbg !3521
  store i32 0, i32* %89, align 4, !dbg !3522
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3523
  %incdec.ptr93 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 1, !dbg !3523
  store %struct._PixelPacket* %incdec.ptr93, %struct._PixelPacket** %p, align 8, !dbg !3523
  br label %for.inc94, !dbg !3524

for.inc94:                                        ; preds = %for.body82
  %91 = load i64, i64* %x, align 8, !dbg !3525
  %inc95 = add nsw i64 %91, 1, !dbg !3525
  store i64 %inc95, i64* %x, align 8, !dbg !3525
  br label %for.cond78, !dbg !3526, !llvm.loop !3527

for.end96:                                        ; preds = %for.cond78
  br label %for.inc97, !dbg !3529

for.inc97:                                        ; preds = %for.end96
  %92 = load i64, i64* %y, align 8, !dbg !3530
  %inc98 = add nsw i64 %92, 1, !dbg !3530
  store i64 %inc98, i64* %y, align 8, !dbg !3530
  br label %for.cond64, !dbg !3531, !llvm.loop !3532

for.end99:                                        ; preds = %if.then76, %for.cond64
  br label %for.end330, !dbg !3534

if.end100:                                        ; preds = %if.end59
  %93 = load i8*, i8** %map.addr, align 8, !dbg !3535
  %call101 = call i32 @LocaleCompare(i8* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !3537
  %cmp102 = icmp eq i32 %call101, 0, !dbg !3538
  br i1 %cmp102, label %if.then104, label %if.end135, !dbg !3539

if.then104:                                       ; preds = %if.end100
  store i64 0, i64* %y, align 8, !dbg !3540
  br label %for.cond105, !dbg !3543

for.cond105:                                      ; preds = %for.inc132, %if.then104
  %94 = load i64, i64* %y, align 8, !dbg !3544
  %95 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3546
  %height106 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %95, i32 0, i32 1, !dbg !3547
  %96 = load i64, i64* %height106, align 8, !dbg !3547
  %cmp107 = icmp slt i64 %94, %96, !dbg !3548
  br i1 %cmp107, label %for.body109, label %for.end134, !dbg !3549

for.body109:                                      ; preds = %for.cond105
  %97 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3550
  %98 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3552
  %x110 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %98, i32 0, i32 2, !dbg !3553
  %99 = load i64, i64* %x110, align 8, !dbg !3553
  %100 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3554
  %y111 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %100, i32 0, i32 3, !dbg !3555
  %101 = load i64, i64* %y111, align 8, !dbg !3555
  %102 = load i64, i64* %y, align 8, !dbg !3556
  %add112 = add nsw i64 %101, %102, !dbg !3557
  %103 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3558
  %width113 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %103, i32 0, i32 0, !dbg !3559
  %104 = load i64, i64* %width113, align 8, !dbg !3559
  %105 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3560
  %call114 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %97, i64 %99, i64 %add112, i64 %104, i64 1, %struct._ExceptionInfo* %105), !dbg !3561
  store %struct._PixelPacket* %call114, %struct._PixelPacket** %p, align 8, !dbg !3562
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3563
  %cmp115 = icmp eq %struct._PixelPacket* %106, null, !dbg !3565
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !3566

if.then117:                                       ; preds = %for.body109
  br label %for.end134, !dbg !3567

if.end118:                                        ; preds = %for.body109
  store i64 0, i64* %x, align 8, !dbg !3568
  br label %for.cond119, !dbg !3570

for.cond119:                                      ; preds = %for.inc129, %if.end118
  %107 = load i64, i64* %x, align 8, !dbg !3571
  %108 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3573
  %width120 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %108, i32 0, i32 0, !dbg !3574
  %109 = load i64, i64* %width120, align 8, !dbg !3574
  %cmp121 = icmp slt i64 %107, %109, !dbg !3575
  br i1 %cmp121, label %for.body123, label %for.end131, !dbg !3576

for.body123:                                      ; preds = %for.cond119
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3577
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3579
  %call124 = call float @GetPixelIntensity(%struct._Image* %110, %struct._PixelPacket* %111), !dbg !3580
  %call125 = call zeroext i16 @ClampToQuantum(float %call124), !dbg !3581
  %call126 = call i32 @ScaleQuantumToLong(i16 zeroext %call125), !dbg !3582
  %112 = load i32*, i32** %q, align 8, !dbg !3583
  %incdec.ptr127 = getelementptr inbounds i32, i32* %112, i32 1, !dbg !3583
  store i32* %incdec.ptr127, i32** %q, align 8, !dbg !3583
  store i32 %call126, i32* %112, align 4, !dbg !3584
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3585
  %incdec.ptr128 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !3585
  store %struct._PixelPacket* %incdec.ptr128, %struct._PixelPacket** %p, align 8, !dbg !3585
  br label %for.inc129, !dbg !3586

for.inc129:                                       ; preds = %for.body123
  %114 = load i64, i64* %x, align 8, !dbg !3587
  %inc130 = add nsw i64 %114, 1, !dbg !3587
  store i64 %inc130, i64* %x, align 8, !dbg !3587
  br label %for.cond119, !dbg !3588, !llvm.loop !3589

for.end131:                                       ; preds = %for.cond119
  br label %for.inc132, !dbg !3591

for.inc132:                                       ; preds = %for.end131
  %115 = load i64, i64* %y, align 8, !dbg !3592
  %inc133 = add nsw i64 %115, 1, !dbg !3592
  store i64 %inc133, i64* %y, align 8, !dbg !3592
  br label %for.cond105, !dbg !3593, !llvm.loop !3594

for.end134:                                       ; preds = %if.then117, %for.cond105
  br label %for.end330, !dbg !3596

if.end135:                                        ; preds = %if.end100
  %116 = load i8*, i8** %map.addr, align 8, !dbg !3597
  %call136 = call i32 @LocaleCompare(i8* %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !3599
  %cmp137 = icmp eq i32 %call136, 0, !dbg !3600
  br i1 %cmp137, label %if.then139, label %if.end175, !dbg !3601

if.then139:                                       ; preds = %if.end135
  store i64 0, i64* %y, align 8, !dbg !3602
  br label %for.cond140, !dbg !3605

for.cond140:                                      ; preds = %for.inc172, %if.then139
  %117 = load i64, i64* %y, align 8, !dbg !3606
  %118 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3608
  %height141 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %118, i32 0, i32 1, !dbg !3609
  %119 = load i64, i64* %height141, align 8, !dbg !3609
  %cmp142 = icmp slt i64 %117, %119, !dbg !3610
  br i1 %cmp142, label %for.body144, label %for.end174, !dbg !3611

for.body144:                                      ; preds = %for.cond140
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3612
  %121 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3614
  %x145 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %121, i32 0, i32 2, !dbg !3615
  %122 = load i64, i64* %x145, align 8, !dbg !3615
  %123 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3616
  %y146 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %123, i32 0, i32 3, !dbg !3617
  %124 = load i64, i64* %y146, align 8, !dbg !3617
  %125 = load i64, i64* %y, align 8, !dbg !3618
  %add147 = add nsw i64 %124, %125, !dbg !3619
  %126 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3620
  %width148 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %126, i32 0, i32 0, !dbg !3621
  %127 = load i64, i64* %width148, align 8, !dbg !3621
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3622
  %call149 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %120, i64 %122, i64 %add147, i64 %127, i64 1, %struct._ExceptionInfo* %128), !dbg !3623
  store %struct._PixelPacket* %call149, %struct._PixelPacket** %p, align 8, !dbg !3624
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3625
  %cmp150 = icmp eq %struct._PixelPacket* %129, null, !dbg !3627
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !3628

if.then152:                                       ; preds = %for.body144
  br label %for.end174, !dbg !3629

if.end153:                                        ; preds = %for.body144
  store i64 0, i64* %x, align 8, !dbg !3630
  br label %for.cond154, !dbg !3632

for.cond154:                                      ; preds = %for.inc169, %if.end153
  %130 = load i64, i64* %x, align 8, !dbg !3633
  %131 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3635
  %width155 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %131, i32 0, i32 0, !dbg !3636
  %132 = load i64, i64* %width155, align 8, !dbg !3636
  %cmp156 = icmp slt i64 %130, %132, !dbg !3637
  br i1 %cmp156, label %for.body158, label %for.end171, !dbg !3638

for.body158:                                      ; preds = %for.cond154
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3639
  %red159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 2, !dbg !3639
  %134 = load i16, i16* %red159, align 2, !dbg !3639
  %call160 = call i32 @ScaleQuantumToLong(i16 zeroext %134), !dbg !3641
  %135 = load i32*, i32** %q, align 8, !dbg !3642
  %incdec.ptr161 = getelementptr inbounds i32, i32* %135, i32 1, !dbg !3642
  store i32* %incdec.ptr161, i32** %q, align 8, !dbg !3642
  store i32 %call160, i32* %135, align 4, !dbg !3643
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3644
  %green162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !3644
  %137 = load i16, i16* %green162, align 2, !dbg !3644
  %call163 = call i32 @ScaleQuantumToLong(i16 zeroext %137), !dbg !3645
  %138 = load i32*, i32** %q, align 8, !dbg !3646
  %incdec.ptr164 = getelementptr inbounds i32, i32* %138, i32 1, !dbg !3646
  store i32* %incdec.ptr164, i32** %q, align 8, !dbg !3646
  store i32 %call163, i32* %138, align 4, !dbg !3647
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3648
  %blue165 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 0, i32 0, !dbg !3648
  %140 = load i16, i16* %blue165, align 2, !dbg !3648
  %call166 = call i32 @ScaleQuantumToLong(i16 zeroext %140), !dbg !3649
  %141 = load i32*, i32** %q, align 8, !dbg !3650
  %incdec.ptr167 = getelementptr inbounds i32, i32* %141, i32 1, !dbg !3650
  store i32* %incdec.ptr167, i32** %q, align 8, !dbg !3650
  store i32 %call166, i32* %141, align 4, !dbg !3651
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3652
  %incdec.ptr168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 1, !dbg !3652
  store %struct._PixelPacket* %incdec.ptr168, %struct._PixelPacket** %p, align 8, !dbg !3652
  br label %for.inc169, !dbg !3653

for.inc169:                                       ; preds = %for.body158
  %143 = load i64, i64* %x, align 8, !dbg !3654
  %inc170 = add nsw i64 %143, 1, !dbg !3654
  store i64 %inc170, i64* %x, align 8, !dbg !3654
  br label %for.cond154, !dbg !3655, !llvm.loop !3656

for.end171:                                       ; preds = %for.cond154
  br label %for.inc172, !dbg !3658

for.inc172:                                       ; preds = %for.end171
  %144 = load i64, i64* %y, align 8, !dbg !3659
  %inc173 = add nsw i64 %144, 1, !dbg !3659
  store i64 %inc173, i64* %y, align 8, !dbg !3659
  br label %for.cond140, !dbg !3660, !llvm.loop !3661

for.end174:                                       ; preds = %if.then152, %for.cond140
  br label %for.end330, !dbg !3663

if.end175:                                        ; preds = %if.end135
  %145 = load i8*, i8** %map.addr, align 8, !dbg !3664
  %call176 = call i32 @LocaleCompare(i8* %145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !3666
  %cmp177 = icmp eq i32 %call176, 0, !dbg !3667
  br i1 %cmp177, label %if.then179, label %if.end221, !dbg !3668

if.then179:                                       ; preds = %if.end175
  store i64 0, i64* %y, align 8, !dbg !3669
  br label %for.cond180, !dbg !3672

for.cond180:                                      ; preds = %for.inc218, %if.then179
  %146 = load i64, i64* %y, align 8, !dbg !3673
  %147 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3675
  %height181 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %147, i32 0, i32 1, !dbg !3676
  %148 = load i64, i64* %height181, align 8, !dbg !3676
  %cmp182 = icmp slt i64 %146, %148, !dbg !3677
  br i1 %cmp182, label %for.body184, label %for.end220, !dbg !3678

for.body184:                                      ; preds = %for.cond180
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3679
  %150 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3681
  %x185 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %150, i32 0, i32 2, !dbg !3682
  %151 = load i64, i64* %x185, align 8, !dbg !3682
  %152 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3683
  %y186 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %152, i32 0, i32 3, !dbg !3684
  %153 = load i64, i64* %y186, align 8, !dbg !3684
  %154 = load i64, i64* %y, align 8, !dbg !3685
  %add187 = add nsw i64 %153, %154, !dbg !3686
  %155 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3687
  %width188 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %155, i32 0, i32 0, !dbg !3688
  %156 = load i64, i64* %width188, align 8, !dbg !3688
  %157 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3689
  %call189 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %149, i64 %151, i64 %add187, i64 %156, i64 1, %struct._ExceptionInfo* %157), !dbg !3690
  store %struct._PixelPacket* %call189, %struct._PixelPacket** %p, align 8, !dbg !3691
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3692
  %cmp190 = icmp eq %struct._PixelPacket* %158, null, !dbg !3694
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !3695

if.then192:                                       ; preds = %for.body184
  br label %for.end220, !dbg !3696

if.end193:                                        ; preds = %for.body184
  store i64 0, i64* %x, align 8, !dbg !3697
  br label %for.cond194, !dbg !3699

for.cond194:                                      ; preds = %for.inc215, %if.end193
  %159 = load i64, i64* %x, align 8, !dbg !3700
  %160 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3702
  %width195 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %160, i32 0, i32 0, !dbg !3703
  %161 = load i64, i64* %width195, align 8, !dbg !3703
  %cmp196 = icmp slt i64 %159, %161, !dbg !3704
  br i1 %cmp196, label %for.body198, label %for.end217, !dbg !3705

for.body198:                                      ; preds = %for.cond194
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3706
  %red199 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 2, !dbg !3706
  %163 = load i16, i16* %red199, align 2, !dbg !3706
  %call200 = call i32 @ScaleQuantumToLong(i16 zeroext %163), !dbg !3708
  %164 = load i32*, i32** %q, align 8, !dbg !3709
  %incdec.ptr201 = getelementptr inbounds i32, i32* %164, i32 1, !dbg !3709
  store i32* %incdec.ptr201, i32** %q, align 8, !dbg !3709
  store i32 %call200, i32* %164, align 4, !dbg !3710
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3711
  %green202 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i32 0, i32 1, !dbg !3711
  %166 = load i16, i16* %green202, align 2, !dbg !3711
  %call203 = call i32 @ScaleQuantumToLong(i16 zeroext %166), !dbg !3712
  %167 = load i32*, i32** %q, align 8, !dbg !3713
  %incdec.ptr204 = getelementptr inbounds i32, i32* %167, i32 1, !dbg !3713
  store i32* %incdec.ptr204, i32** %q, align 8, !dbg !3713
  store i32 %call203, i32* %167, align 4, !dbg !3714
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3715
  %blue205 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 0, !dbg !3715
  %169 = load i16, i16* %blue205, align 2, !dbg !3715
  %call206 = call i32 @ScaleQuantumToLong(i16 zeroext %169), !dbg !3716
  %170 = load i32*, i32** %q, align 8, !dbg !3717
  %incdec.ptr207 = getelementptr inbounds i32, i32* %170, i32 1, !dbg !3717
  store i32* %incdec.ptr207, i32** %q, align 8, !dbg !3717
  store i32 %call206, i32* %170, align 4, !dbg !3718
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3719
  %opacity208 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 0, i32 3, !dbg !3719
  %172 = load i16, i16* %opacity208, align 2, !dbg !3719
  %conv209 = zext i16 %172 to i32, !dbg !3719
  %sub210 = sub nsw i32 65535, %conv209, !dbg !3719
  %conv211 = trunc i32 %sub210 to i16, !dbg !3720
  %call212 = call i32 @ScaleQuantumToLong(i16 zeroext %conv211), !dbg !3721
  %173 = load i32*, i32** %q, align 8, !dbg !3722
  %incdec.ptr213 = getelementptr inbounds i32, i32* %173, i32 1, !dbg !3722
  store i32* %incdec.ptr213, i32** %q, align 8, !dbg !3722
  store i32 %call212, i32* %173, align 4, !dbg !3723
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3724
  %incdec.ptr214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 1, !dbg !3724
  store %struct._PixelPacket* %incdec.ptr214, %struct._PixelPacket** %p, align 8, !dbg !3724
  br label %for.inc215, !dbg !3725

for.inc215:                                       ; preds = %for.body198
  %175 = load i64, i64* %x, align 8, !dbg !3726
  %inc216 = add nsw i64 %175, 1, !dbg !3726
  store i64 %inc216, i64* %x, align 8, !dbg !3726
  br label %for.cond194, !dbg !3727, !llvm.loop !3728

for.end217:                                       ; preds = %for.cond194
  br label %for.inc218, !dbg !3730

for.inc218:                                       ; preds = %for.end217
  %176 = load i64, i64* %y, align 8, !dbg !3731
  %inc219 = add nsw i64 %176, 1, !dbg !3731
  store i64 %inc219, i64* %y, align 8, !dbg !3731
  br label %for.cond180, !dbg !3732, !llvm.loop !3733

for.end220:                                       ; preds = %if.then192, %for.cond180
  br label %for.end330, !dbg !3735

if.end221:                                        ; preds = %if.end175
  %177 = load i8*, i8** %map.addr, align 8, !dbg !3736
  %call222 = call i32 @LocaleCompare(i8* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !3738
  %cmp223 = icmp eq i32 %call222, 0, !dbg !3739
  br i1 %cmp223, label %if.then225, label %if.end262, !dbg !3740

if.then225:                                       ; preds = %if.end221
  store i64 0, i64* %y, align 8, !dbg !3741
  br label %for.cond226, !dbg !3744

for.cond226:                                      ; preds = %for.inc259, %if.then225
  %178 = load i64, i64* %y, align 8, !dbg !3745
  %179 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3747
  %height227 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %179, i32 0, i32 1, !dbg !3748
  %180 = load i64, i64* %height227, align 8, !dbg !3748
  %cmp228 = icmp slt i64 %178, %180, !dbg !3749
  br i1 %cmp228, label %for.body230, label %for.end261, !dbg !3750

for.body230:                                      ; preds = %for.cond226
  %181 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3751
  %182 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3753
  %x231 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %182, i32 0, i32 2, !dbg !3754
  %183 = load i64, i64* %x231, align 8, !dbg !3754
  %184 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3755
  %y232 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %184, i32 0, i32 3, !dbg !3756
  %185 = load i64, i64* %y232, align 8, !dbg !3756
  %186 = load i64, i64* %y, align 8, !dbg !3757
  %add233 = add nsw i64 %185, %186, !dbg !3758
  %187 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3759
  %width234 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %187, i32 0, i32 0, !dbg !3760
  %188 = load i64, i64* %width234, align 8, !dbg !3760
  %189 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3761
  %call235 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %181, i64 %183, i64 %add233, i64 %188, i64 1, %struct._ExceptionInfo* %189), !dbg !3762
  store %struct._PixelPacket* %call235, %struct._PixelPacket** %p, align 8, !dbg !3763
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3764
  %cmp236 = icmp eq %struct._PixelPacket* %190, null, !dbg !3766
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !3767

if.then238:                                       ; preds = %for.body230
  br label %for.end261, !dbg !3768

if.end239:                                        ; preds = %for.body230
  store i64 0, i64* %x, align 8, !dbg !3769
  br label %for.cond240, !dbg !3771

for.cond240:                                      ; preds = %for.inc256, %if.end239
  %191 = load i64, i64* %x, align 8, !dbg !3772
  %192 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3774
  %width241 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %192, i32 0, i32 0, !dbg !3775
  %193 = load i64, i64* %width241, align 8, !dbg !3775
  %cmp242 = icmp slt i64 %191, %193, !dbg !3776
  br i1 %cmp242, label %for.body244, label %for.end258, !dbg !3777

for.body244:                                      ; preds = %for.cond240
  %194 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3778
  %red245 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %194, i32 0, i32 2, !dbg !3778
  %195 = load i16, i16* %red245, align 2, !dbg !3778
  %call246 = call i32 @ScaleQuantumToLong(i16 zeroext %195), !dbg !3780
  %196 = load i32*, i32** %q, align 8, !dbg !3781
  %incdec.ptr247 = getelementptr inbounds i32, i32* %196, i32 1, !dbg !3781
  store i32* %incdec.ptr247, i32** %q, align 8, !dbg !3781
  store i32 %call246, i32* %196, align 4, !dbg !3782
  %197 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3783
  %green248 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %197, i32 0, i32 1, !dbg !3783
  %198 = load i16, i16* %green248, align 2, !dbg !3783
  %call249 = call i32 @ScaleQuantumToLong(i16 zeroext %198), !dbg !3784
  %199 = load i32*, i32** %q, align 8, !dbg !3785
  %incdec.ptr250 = getelementptr inbounds i32, i32* %199, i32 1, !dbg !3785
  store i32* %incdec.ptr250, i32** %q, align 8, !dbg !3785
  store i32 %call249, i32* %199, align 4, !dbg !3786
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3787
  %blue251 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 0, !dbg !3787
  %201 = load i16, i16* %blue251, align 2, !dbg !3787
  %call252 = call i32 @ScaleQuantumToLong(i16 zeroext %201), !dbg !3788
  %202 = load i32*, i32** %q, align 8, !dbg !3789
  %incdec.ptr253 = getelementptr inbounds i32, i32* %202, i32 1, !dbg !3789
  store i32* %incdec.ptr253, i32** %q, align 8, !dbg !3789
  store i32 %call252, i32* %202, align 4, !dbg !3790
  %203 = load i32*, i32** %q, align 8, !dbg !3791
  %incdec.ptr254 = getelementptr inbounds i32, i32* %203, i32 1, !dbg !3791
  store i32* %incdec.ptr254, i32** %q, align 8, !dbg !3791
  store i32 0, i32* %203, align 4, !dbg !3792
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3793
  %incdec.ptr255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 1, !dbg !3793
  store %struct._PixelPacket* %incdec.ptr255, %struct._PixelPacket** %p, align 8, !dbg !3793
  br label %for.inc256, !dbg !3794

for.inc256:                                       ; preds = %for.body244
  %205 = load i64, i64* %x, align 8, !dbg !3795
  %inc257 = add nsw i64 %205, 1, !dbg !3795
  store i64 %inc257, i64* %x, align 8, !dbg !3795
  br label %for.cond240, !dbg !3796, !llvm.loop !3797

for.end258:                                       ; preds = %for.cond240
  br label %for.inc259, !dbg !3799

for.inc259:                                       ; preds = %for.end258
  %206 = load i64, i64* %y, align 8, !dbg !3800
  %inc260 = add nsw i64 %206, 1, !dbg !3800
  store i64 %inc260, i64* %y, align 8, !dbg !3800
  br label %for.cond226, !dbg !3801, !llvm.loop !3802

for.end261:                                       ; preds = %if.then238, %for.cond226
  br label %for.end330, !dbg !3804

if.end262:                                        ; preds = %if.end221
  %207 = load i8*, i8** %map.addr, align 8, !dbg !3805
  %call263 = call i64 @strlen(i8* %207) #13, !dbg !3806
  store i64 %call263, i64* %length, align 8, !dbg !3807
  store i64 0, i64* %y, align 8, !dbg !3808
  br label %for.cond264, !dbg !3810

for.cond264:                                      ; preds = %for.inc328, %if.end262
  %208 = load i64, i64* %y, align 8, !dbg !3811
  %209 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3813
  %height265 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %209, i32 0, i32 1, !dbg !3814
  %210 = load i64, i64* %height265, align 8, !dbg !3814
  %cmp266 = icmp slt i64 %208, %210, !dbg !3815
  br i1 %cmp266, label %for.body268, label %for.end330, !dbg !3816

for.body268:                                      ; preds = %for.cond264
  %211 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3817
  %212 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3819
  %x269 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %212, i32 0, i32 2, !dbg !3820
  %213 = load i64, i64* %x269, align 8, !dbg !3820
  %214 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3821
  %y270 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %214, i32 0, i32 3, !dbg !3822
  %215 = load i64, i64* %y270, align 8, !dbg !3822
  %216 = load i64, i64* %y, align 8, !dbg !3823
  %add271 = add nsw i64 %215, %216, !dbg !3824
  %217 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3825
  %width272 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %217, i32 0, i32 0, !dbg !3826
  %218 = load i64, i64* %width272, align 8, !dbg !3826
  %219 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3827
  %call273 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %211, i64 %213, i64 %add271, i64 %218, i64 1, %struct._ExceptionInfo* %219), !dbg !3828
  store %struct._PixelPacket* %call273, %struct._PixelPacket** %p, align 8, !dbg !3829
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3830
  %cmp274 = icmp eq %struct._PixelPacket* %220, null, !dbg !3832
  br i1 %cmp274, label %if.then276, label %if.end277, !dbg !3833

if.then276:                                       ; preds = %for.body268
  br label %for.end330, !dbg !3834

if.end277:                                        ; preds = %for.body268
  %221 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3835
  %call278 = call i16* @GetVirtualIndexQueue(%struct._Image* %221), !dbg !3836
  store i16* %call278, i16** %indexes, align 8, !dbg !3837
  store i64 0, i64* %x, align 8, !dbg !3838
  br label %for.cond279, !dbg !3840

for.cond279:                                      ; preds = %for.inc325, %if.end277
  %222 = load i64, i64* %x, align 8, !dbg !3841
  %223 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3843
  %width280 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %223, i32 0, i32 0, !dbg !3844
  %224 = load i64, i64* %width280, align 8, !dbg !3844
  %cmp281 = icmp slt i64 %222, %224, !dbg !3845
  br i1 %cmp281, label %for.body283, label %for.end327, !dbg !3846

for.body283:                                      ; preds = %for.cond279
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3847, metadata !DIExpression()), !dbg !3849
  store i64 0, i64* %i, align 8, !dbg !3850
  br label %for.cond284, !dbg !3852

for.cond284:                                      ; preds = %for.inc321, %for.body283
  %225 = load i64, i64* %i, align 8, !dbg !3853
  %226 = load i64, i64* %length, align 8, !dbg !3855
  %cmp285 = icmp slt i64 %225, %226, !dbg !3856
  br i1 %cmp285, label %for.body287, label %for.end323, !dbg !3857

for.body287:                                      ; preds = %for.cond284
  %227 = load i32*, i32** %q, align 8, !dbg !3858
  store i32 0, i32* %227, align 4, !dbg !3860
  %228 = load i32*, i32** %quantum_map.addr, align 8, !dbg !3861
  %229 = load i64, i64* %i, align 8, !dbg !3862
  %arrayidx = getelementptr inbounds i32, i32* %228, i64 %229, !dbg !3861
  %230 = load i32, i32* %arrayidx, align 4, !dbg !3861
  switch i32 %230, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb290
    i32 12, label %sw.bb290
    i32 3, label %sw.bb293
    i32 19, label %sw.bb293
    i32 1, label %sw.bb296
    i32 13, label %sw.bb302
    i32 2, label %sw.bb305
    i32 11, label %sw.bb316
  ], !dbg !3863

sw.bb:                                            ; preds = %for.body287, %for.body287
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3864
  %red288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 0, i32 2, !dbg !3864
  %232 = load i16, i16* %red288, align 2, !dbg !3864
  %call289 = call i32 @ScaleQuantumToLong(i16 zeroext %232), !dbg !3867
  %233 = load i32*, i32** %q, align 8, !dbg !3868
  store i32 %call289, i32* %233, align 4, !dbg !3869
  br label %sw.epilog, !dbg !3870

sw.bb290:                                         ; preds = %for.body287, %for.body287
  %234 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3871
  %green291 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %234, i32 0, i32 1, !dbg !3871
  %235 = load i16, i16* %green291, align 2, !dbg !3871
  %call292 = call i32 @ScaleQuantumToLong(i16 zeroext %235), !dbg !3873
  %236 = load i32*, i32** %q, align 8, !dbg !3874
  store i32 %call292, i32* %236, align 4, !dbg !3875
  br label %sw.epilog, !dbg !3876

sw.bb293:                                         ; preds = %for.body287, %for.body287
  %237 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3877
  %blue294 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %237, i32 0, i32 0, !dbg !3877
  %238 = load i16, i16* %blue294, align 2, !dbg !3877
  %call295 = call i32 @ScaleQuantumToLong(i16 zeroext %238), !dbg !3879
  %239 = load i32*, i32** %q, align 8, !dbg !3880
  store i32 %call295, i32* %239, align 4, !dbg !3881
  br label %sw.epilog, !dbg !3882

sw.bb296:                                         ; preds = %for.body287
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3883
  %opacity297 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 3, !dbg !3883
  %241 = load i16, i16* %opacity297, align 2, !dbg !3883
  %conv298 = zext i16 %241 to i32, !dbg !3883
  %sub299 = sub nsw i32 65535, %conv298, !dbg !3885
  %conv300 = trunc i32 %sub299 to i16, !dbg !3886
  %call301 = call i32 @ScaleQuantumToLong(i16 zeroext %conv300), !dbg !3887
  %242 = load i32*, i32** %q, align 8, !dbg !3888
  store i32 %call301, i32* %242, align 4, !dbg !3889
  br label %sw.epilog, !dbg !3890

sw.bb302:                                         ; preds = %for.body287
  %243 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3891
  %opacity303 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %243, i32 0, i32 3, !dbg !3891
  %244 = load i16, i16* %opacity303, align 2, !dbg !3891
  %call304 = call i32 @ScaleQuantumToLong(i16 zeroext %244), !dbg !3893
  %245 = load i32*, i32** %q, align 8, !dbg !3894
  store i32 %call304, i32* %245, align 4, !dbg !3895
  br label %sw.epilog, !dbg !3896

sw.bb305:                                         ; preds = %for.body287
  %246 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3897
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %246, i32 0, i32 1, !dbg !3900
  %247 = load i32, i32* %colorspace, align 4, !dbg !3900
  %cmp306 = icmp eq i32 %247, 12, !dbg !3901
  br i1 %cmp306, label %if.then308, label %if.end315, !dbg !3902

if.then308:                                       ; preds = %sw.bb305
  %248 = load i16*, i16** %indexes, align 8, !dbg !3903
  %249 = load i64, i64* %x, align 8, !dbg !3903
  %add.ptr = getelementptr inbounds i16, i16* %248, i64 %249, !dbg !3903
  %cmp309 = icmp eq i16* %add.ptr, null, !dbg !3903
  br i1 %cmp309, label %cond.true, label %cond.false, !dbg !3903

cond.true:                                        ; preds = %if.then308
  br label %cond.end, !dbg !3903

cond.false:                                       ; preds = %if.then308
  %250 = load i16*, i16** %indexes, align 8, !dbg !3903
  %251 = load i64, i64* %x, align 8, !dbg !3903
  %add.ptr311 = getelementptr inbounds i16, i16* %250, i64 %251, !dbg !3903
  %252 = load i16, i16* %add.ptr311, align 2, !dbg !3903
  %conv312 = zext i16 %252 to i32, !dbg !3903
  br label %cond.end, !dbg !3903

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv312, %cond.false ], !dbg !3903
  %conv313 = trunc i32 %cond to i16, !dbg !3903
  %call314 = call i32 @ScaleQuantumToLong(i16 zeroext %conv313), !dbg !3904
  %253 = load i32*, i32** %q, align 8, !dbg !3905
  store i32 %call314, i32* %253, align 4, !dbg !3906
  br label %if.end315, !dbg !3907

if.end315:                                        ; preds = %cond.end, %sw.bb305
  br label %sw.epilog, !dbg !3908

sw.bb316:                                         ; preds = %for.body287
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3909
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3911
  %call317 = call float @GetPixelIntensity(%struct._Image* %254, %struct._PixelPacket* %255), !dbg !3912
  %call318 = call zeroext i16 @ClampToQuantum(float %call317), !dbg !3913
  %call319 = call i32 @ScaleQuantumToLong(i16 zeroext %call318), !dbg !3914
  %256 = load i32*, i32** %q, align 8, !dbg !3915
  store i32 %call319, i32* %256, align 4, !dbg !3916
  br label %sw.epilog, !dbg !3917

sw.default:                                       ; preds = %for.body287
  %257 = load i32*, i32** %q, align 8, !dbg !3918
  store i32 0, i32* %257, align 4, !dbg !3919
  br label %sw.epilog, !dbg !3920

sw.epilog:                                        ; preds = %sw.default, %sw.bb316, %if.end315, %sw.bb302, %sw.bb296, %sw.bb293, %sw.bb290, %sw.bb
  %258 = load i32*, i32** %q, align 8, !dbg !3921
  %incdec.ptr320 = getelementptr inbounds i32, i32* %258, i32 1, !dbg !3921
  store i32* %incdec.ptr320, i32** %q, align 8, !dbg !3921
  br label %for.inc321, !dbg !3922

for.inc321:                                       ; preds = %sw.epilog
  %259 = load i64, i64* %i, align 8, !dbg !3923
  %inc322 = add nsw i64 %259, 1, !dbg !3923
  store i64 %inc322, i64* %i, align 8, !dbg !3923
  br label %for.cond284, !dbg !3924, !llvm.loop !3925

for.end323:                                       ; preds = %for.cond284
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3927
  %incdec.ptr324 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %260, i32 1, !dbg !3927
  store %struct._PixelPacket* %incdec.ptr324, %struct._PixelPacket** %p, align 8, !dbg !3927
  br label %for.inc325, !dbg !3928

for.inc325:                                       ; preds = %for.end323
  %261 = load i64, i64* %x, align 8, !dbg !3929
  %inc326 = add nsw i64 %261, 1, !dbg !3929
  store i64 %inc326, i64* %x, align 8, !dbg !3929
  br label %for.cond279, !dbg !3930, !llvm.loop !3931

for.end327:                                       ; preds = %for.cond279
  br label %for.inc328, !dbg !3933

for.inc328:                                       ; preds = %for.end327
  %262 = load i64, i64* %y, align 8, !dbg !3934
  %inc329 = add nsw i64 %262, 1, !dbg !3934
  store i64 %inc329, i64* %y, align 8, !dbg !3934
  br label %for.cond264, !dbg !3935, !llvm.loop !3936

for.end330:                                       ; preds = %for.end19, %for.end58, %for.end99, %for.end134, %for.end174, %for.end220, %for.end261, %if.then276, %for.cond264
  ret void, !dbg !3938
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportLongPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !3939 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %q = alloca i32*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3940, metadata !DIExpression()), !dbg !3941
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !3942, metadata !DIExpression()), !dbg !3943
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !3944, metadata !DIExpression()), !dbg !3945
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !3946, metadata !DIExpression()), !dbg !3947
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !3948, metadata !DIExpression()), !dbg !3949
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3950, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !3952, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !3954, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.declare(metadata i32** %q, metadata !3956, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3958, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.declare(metadata i64* %length, metadata !3960, metadata !DIExpression()), !dbg !3961
  call void @llvm.dbg.declare(metadata i64* %y, metadata !3962, metadata !DIExpression()), !dbg !3963
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !3964
  %1 = bitcast i8* %0 to i32*, !dbg !3965
  store i32* %1, i32** %q, align 8, !dbg !3966
  %2 = load i8*, i8** %map.addr, align 8, !dbg !3967
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !3969
  %cmp = icmp eq i32 %call, 0, !dbg !3970
  br i1 %cmp, label %if.then, label %if.end20, !dbg !3971

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !3972
  br label %for.cond, !dbg !3975

for.cond:                                         ; preds = %for.inc17, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !3976
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3978
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !3979
  %5 = load i64, i64* %height, align 8, !dbg !3979
  %cmp1 = icmp slt i64 %3, %5, !dbg !3980
  br i1 %cmp1, label %for.body, label %for.end19, !dbg !3981

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3982
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3984
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !3985
  %8 = load i64, i64* %x2, align 8, !dbg !3985
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3986
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !3987
  %10 = load i64, i64* %y3, align 8, !dbg !3987
  %11 = load i64, i64* %y, align 8, !dbg !3988
  %add = add nsw i64 %10, %11, !dbg !3989
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !3990
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !3991
  %13 = load i64, i64* %width, align 8, !dbg !3991
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3992
  %call4 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !3993
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %p, align 8, !dbg !3994
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3995
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !3997
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !3998

if.then6:                                         ; preds = %for.body
  br label %for.end19, !dbg !3999

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !4000
  br label %for.cond7, !dbg !4002

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !4003
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4005
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !4006
  %18 = load i64, i64* %width8, align 8, !dbg !4006
  %cmp9 = icmp slt i64 %16, %18, !dbg !4007
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !4008

for.body10:                                       ; preds = %for.cond7
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4009
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 0, i32 0, !dbg !4009
  %20 = load i16, i16* %blue, align 2, !dbg !4009
  %call11 = call i32 @ScaleQuantumToLong(i16 zeroext %20), !dbg !4011
  %21 = load i32*, i32** %q, align 8, !dbg !4012
  %incdec.ptr = getelementptr inbounds i32, i32* %21, i32 1, !dbg !4012
  store i32* %incdec.ptr, i32** %q, align 8, !dbg !4012
  store i32 %call11, i32* %21, align 4, !dbg !4013
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4014
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 1, !dbg !4014
  %23 = load i16, i16* %green, align 2, !dbg !4014
  %call12 = call i32 @ScaleQuantumToLong(i16 zeroext %23), !dbg !4015
  %24 = load i32*, i32** %q, align 8, !dbg !4016
  %incdec.ptr13 = getelementptr inbounds i32, i32* %24, i32 1, !dbg !4016
  store i32* %incdec.ptr13, i32** %q, align 8, !dbg !4016
  store i32 %call12, i32* %24, align 4, !dbg !4017
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4018
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 2, !dbg !4018
  %26 = load i16, i16* %red, align 2, !dbg !4018
  %call14 = call i32 @ScaleQuantumToLong(i16 zeroext %26), !dbg !4019
  %27 = load i32*, i32** %q, align 8, !dbg !4020
  %incdec.ptr15 = getelementptr inbounds i32, i32* %27, i32 1, !dbg !4020
  store i32* %incdec.ptr15, i32** %q, align 8, !dbg !4020
  store i32 %call14, i32* %27, align 4, !dbg !4021
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4022
  %incdec.ptr16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !4022
  store %struct._PixelPacket* %incdec.ptr16, %struct._PixelPacket** %p, align 8, !dbg !4022
  br label %for.inc, !dbg !4023

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !4024
  %inc = add nsw i64 %29, 1, !dbg !4024
  store i64 %inc, i64* %x, align 8, !dbg !4024
  br label %for.cond7, !dbg !4025, !llvm.loop !4026

for.end:                                          ; preds = %for.cond7
  br label %for.inc17, !dbg !4028

for.inc17:                                        ; preds = %for.end
  %30 = load i64, i64* %y, align 8, !dbg !4029
  %inc18 = add nsw i64 %30, 1, !dbg !4029
  store i64 %inc18, i64* %y, align 8, !dbg !4029
  br label %for.cond, !dbg !4030, !llvm.loop !4031

for.end19:                                        ; preds = %if.then6, %for.cond
  br label %for.end330, !dbg !4033

if.end20:                                         ; preds = %entry
  %31 = load i8*, i8** %map.addr, align 8, !dbg !4034
  %call21 = call i32 @LocaleCompare(i8* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !4036
  %cmp22 = icmp eq i32 %call21, 0, !dbg !4037
  br i1 %cmp22, label %if.then23, label %if.end59, !dbg !4038

if.then23:                                        ; preds = %if.end20
  store i64 0, i64* %y, align 8, !dbg !4039
  br label %for.cond24, !dbg !4042

for.cond24:                                       ; preds = %for.inc56, %if.then23
  %32 = load i64, i64* %y, align 8, !dbg !4043
  %33 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4045
  %height25 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %33, i32 0, i32 1, !dbg !4046
  %34 = load i64, i64* %height25, align 8, !dbg !4046
  %cmp26 = icmp slt i64 %32, %34, !dbg !4047
  br i1 %cmp26, label %for.body27, label %for.end58, !dbg !4048

for.body27:                                       ; preds = %for.cond24
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4049
  %36 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4051
  %x28 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %36, i32 0, i32 2, !dbg !4052
  %37 = load i64, i64* %x28, align 8, !dbg !4052
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4053
  %y29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 3, !dbg !4054
  %39 = load i64, i64* %y29, align 8, !dbg !4054
  %40 = load i64, i64* %y, align 8, !dbg !4055
  %add30 = add nsw i64 %39, %40, !dbg !4056
  %41 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4057
  %width31 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %41, i32 0, i32 0, !dbg !4058
  %42 = load i64, i64* %width31, align 8, !dbg !4058
  %43 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4059
  %call32 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %35, i64 %37, i64 %add30, i64 %42, i64 1, %struct._ExceptionInfo* %43), !dbg !4060
  store %struct._PixelPacket* %call32, %struct._PixelPacket** %p, align 8, !dbg !4061
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4062
  %cmp33 = icmp eq %struct._PixelPacket* %44, null, !dbg !4064
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !4065

if.then34:                                        ; preds = %for.body27
  br label %for.end58, !dbg !4066

if.end35:                                         ; preds = %for.body27
  store i64 0, i64* %x, align 8, !dbg !4067
  br label %for.cond36, !dbg !4069

for.cond36:                                       ; preds = %for.inc53, %if.end35
  %45 = load i64, i64* %x, align 8, !dbg !4070
  %46 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4072
  %width37 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %46, i32 0, i32 0, !dbg !4073
  %47 = load i64, i64* %width37, align 8, !dbg !4073
  %cmp38 = icmp slt i64 %45, %47, !dbg !4074
  br i1 %cmp38, label %for.body39, label %for.end55, !dbg !4075

for.body39:                                       ; preds = %for.cond36
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4076
  %blue40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 0, !dbg !4076
  %49 = load i16, i16* %blue40, align 2, !dbg !4076
  %call41 = call i32 @ScaleQuantumToLong(i16 zeroext %49), !dbg !4078
  %50 = load i32*, i32** %q, align 8, !dbg !4079
  %incdec.ptr42 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !4079
  store i32* %incdec.ptr42, i32** %q, align 8, !dbg !4079
  store i32 %call41, i32* %50, align 4, !dbg !4080
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4081
  %green43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 0, i32 1, !dbg !4081
  %52 = load i16, i16* %green43, align 2, !dbg !4081
  %call44 = call i32 @ScaleQuantumToLong(i16 zeroext %52), !dbg !4082
  %53 = load i32*, i32** %q, align 8, !dbg !4083
  %incdec.ptr45 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !4083
  store i32* %incdec.ptr45, i32** %q, align 8, !dbg !4083
  store i32 %call44, i32* %53, align 4, !dbg !4084
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4085
  %red46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !4085
  %55 = load i16, i16* %red46, align 2, !dbg !4085
  %call47 = call i32 @ScaleQuantumToLong(i16 zeroext %55), !dbg !4086
  %56 = load i32*, i32** %q, align 8, !dbg !4087
  %incdec.ptr48 = getelementptr inbounds i32, i32* %56, i32 1, !dbg !4087
  store i32* %incdec.ptr48, i32** %q, align 8, !dbg !4087
  store i32 %call47, i32* %56, align 4, !dbg !4088
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4089
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !4089
  %58 = load i16, i16* %opacity, align 2, !dbg !4089
  %conv = zext i16 %58 to i32, !dbg !4089
  %sub = sub nsw i32 65535, %conv, !dbg !4089
  %conv49 = trunc i32 %sub to i16, !dbg !4090
  %call50 = call i32 @ScaleQuantumToLong(i16 zeroext %conv49), !dbg !4091
  %59 = load i32*, i32** %q, align 8, !dbg !4092
  %incdec.ptr51 = getelementptr inbounds i32, i32* %59, i32 1, !dbg !4092
  store i32* %incdec.ptr51, i32** %q, align 8, !dbg !4092
  store i32 %call50, i32* %59, align 4, !dbg !4093
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4094
  %incdec.ptr52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 1, !dbg !4094
  store %struct._PixelPacket* %incdec.ptr52, %struct._PixelPacket** %p, align 8, !dbg !4094
  br label %for.inc53, !dbg !4095

for.inc53:                                        ; preds = %for.body39
  %61 = load i64, i64* %x, align 8, !dbg !4096
  %inc54 = add nsw i64 %61, 1, !dbg !4096
  store i64 %inc54, i64* %x, align 8, !dbg !4096
  br label %for.cond36, !dbg !4097, !llvm.loop !4098

for.end55:                                        ; preds = %for.cond36
  br label %for.inc56, !dbg !4100

for.inc56:                                        ; preds = %for.end55
  %62 = load i64, i64* %y, align 8, !dbg !4101
  %inc57 = add nsw i64 %62, 1, !dbg !4101
  store i64 %inc57, i64* %y, align 8, !dbg !4101
  br label %for.cond24, !dbg !4102, !llvm.loop !4103

for.end58:                                        ; preds = %if.then34, %for.cond24
  br label %for.end330, !dbg !4105

if.end59:                                         ; preds = %if.end20
  %63 = load i8*, i8** %map.addr, align 8, !dbg !4106
  %call60 = call i32 @LocaleCompare(i8* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !4108
  %cmp61 = icmp eq i32 %call60, 0, !dbg !4109
  br i1 %cmp61, label %if.then63, label %if.end100, !dbg !4110

if.then63:                                        ; preds = %if.end59
  store i64 0, i64* %y, align 8, !dbg !4111
  br label %for.cond64, !dbg !4114

for.cond64:                                       ; preds = %for.inc97, %if.then63
  %64 = load i64, i64* %y, align 8, !dbg !4115
  %65 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4117
  %height65 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %65, i32 0, i32 1, !dbg !4118
  %66 = load i64, i64* %height65, align 8, !dbg !4118
  %cmp66 = icmp slt i64 %64, %66, !dbg !4119
  br i1 %cmp66, label %for.body68, label %for.end99, !dbg !4120

for.body68:                                       ; preds = %for.cond64
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4121
  %68 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4123
  %x69 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %68, i32 0, i32 2, !dbg !4124
  %69 = load i64, i64* %x69, align 8, !dbg !4124
  %70 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4125
  %y70 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %70, i32 0, i32 3, !dbg !4126
  %71 = load i64, i64* %y70, align 8, !dbg !4126
  %72 = load i64, i64* %y, align 8, !dbg !4127
  %add71 = add nsw i64 %71, %72, !dbg !4128
  %73 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4129
  %width72 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %73, i32 0, i32 0, !dbg !4130
  %74 = load i64, i64* %width72, align 8, !dbg !4130
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4131
  %call73 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %67, i64 %69, i64 %add71, i64 %74, i64 1, %struct._ExceptionInfo* %75), !dbg !4132
  store %struct._PixelPacket* %call73, %struct._PixelPacket** %p, align 8, !dbg !4133
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4134
  %cmp74 = icmp eq %struct._PixelPacket* %76, null, !dbg !4136
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !4137

if.then76:                                        ; preds = %for.body68
  br label %for.end99, !dbg !4138

if.end77:                                         ; preds = %for.body68
  store i64 0, i64* %x, align 8, !dbg !4139
  br label %for.cond78, !dbg !4141

for.cond78:                                       ; preds = %for.inc94, %if.end77
  %77 = load i64, i64* %x, align 8, !dbg !4142
  %78 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4144
  %width79 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %78, i32 0, i32 0, !dbg !4145
  %79 = load i64, i64* %width79, align 8, !dbg !4145
  %cmp80 = icmp slt i64 %77, %79, !dbg !4146
  br i1 %cmp80, label %for.body82, label %for.end96, !dbg !4147

for.body82:                                       ; preds = %for.cond78
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4148
  %blue83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 0, !dbg !4148
  %81 = load i16, i16* %blue83, align 2, !dbg !4148
  %call84 = call i32 @ScaleQuantumToLong(i16 zeroext %81), !dbg !4150
  %82 = load i32*, i32** %q, align 8, !dbg !4151
  %incdec.ptr85 = getelementptr inbounds i32, i32* %82, i32 1, !dbg !4151
  store i32* %incdec.ptr85, i32** %q, align 8, !dbg !4151
  store i32 %call84, i32* %82, align 4, !dbg !4152
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4153
  %green86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 1, !dbg !4153
  %84 = load i16, i16* %green86, align 2, !dbg !4153
  %call87 = call i32 @ScaleQuantumToLong(i16 zeroext %84), !dbg !4154
  %85 = load i32*, i32** %q, align 8, !dbg !4155
  %incdec.ptr88 = getelementptr inbounds i32, i32* %85, i32 1, !dbg !4155
  store i32* %incdec.ptr88, i32** %q, align 8, !dbg !4155
  store i32 %call87, i32* %85, align 4, !dbg !4156
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4157
  %red89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 2, !dbg !4157
  %87 = load i16, i16* %red89, align 2, !dbg !4157
  %call90 = call i32 @ScaleQuantumToLong(i16 zeroext %87), !dbg !4158
  %88 = load i32*, i32** %q, align 8, !dbg !4159
  %incdec.ptr91 = getelementptr inbounds i32, i32* %88, i32 1, !dbg !4159
  store i32* %incdec.ptr91, i32** %q, align 8, !dbg !4159
  store i32 %call90, i32* %88, align 4, !dbg !4160
  %89 = load i32*, i32** %q, align 8, !dbg !4161
  %incdec.ptr92 = getelementptr inbounds i32, i32* %89, i32 1, !dbg !4161
  store i32* %incdec.ptr92, i32** %q, align 8, !dbg !4161
  store i32 0, i32* %89, align 4, !dbg !4162
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4163
  %incdec.ptr93 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 1, !dbg !4163
  store %struct._PixelPacket* %incdec.ptr93, %struct._PixelPacket** %p, align 8, !dbg !4163
  br label %for.inc94, !dbg !4164

for.inc94:                                        ; preds = %for.body82
  %91 = load i64, i64* %x, align 8, !dbg !4165
  %inc95 = add nsw i64 %91, 1, !dbg !4165
  store i64 %inc95, i64* %x, align 8, !dbg !4165
  br label %for.cond78, !dbg !4166, !llvm.loop !4167

for.end96:                                        ; preds = %for.cond78
  br label %for.inc97, !dbg !4169

for.inc97:                                        ; preds = %for.end96
  %92 = load i64, i64* %y, align 8, !dbg !4170
  %inc98 = add nsw i64 %92, 1, !dbg !4170
  store i64 %inc98, i64* %y, align 8, !dbg !4170
  br label %for.cond64, !dbg !4171, !llvm.loop !4172

for.end99:                                        ; preds = %if.then76, %for.cond64
  br label %for.end330, !dbg !4174

if.end100:                                        ; preds = %if.end59
  %93 = load i8*, i8** %map.addr, align 8, !dbg !4175
  %call101 = call i32 @LocaleCompare(i8* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !4177
  %cmp102 = icmp eq i32 %call101, 0, !dbg !4178
  br i1 %cmp102, label %if.then104, label %if.end135, !dbg !4179

if.then104:                                       ; preds = %if.end100
  store i64 0, i64* %y, align 8, !dbg !4180
  br label %for.cond105, !dbg !4183

for.cond105:                                      ; preds = %for.inc132, %if.then104
  %94 = load i64, i64* %y, align 8, !dbg !4184
  %95 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4186
  %height106 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %95, i32 0, i32 1, !dbg !4187
  %96 = load i64, i64* %height106, align 8, !dbg !4187
  %cmp107 = icmp slt i64 %94, %96, !dbg !4188
  br i1 %cmp107, label %for.body109, label %for.end134, !dbg !4189

for.body109:                                      ; preds = %for.cond105
  %97 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4190
  %98 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4192
  %x110 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %98, i32 0, i32 2, !dbg !4193
  %99 = load i64, i64* %x110, align 8, !dbg !4193
  %100 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4194
  %y111 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %100, i32 0, i32 3, !dbg !4195
  %101 = load i64, i64* %y111, align 8, !dbg !4195
  %102 = load i64, i64* %y, align 8, !dbg !4196
  %add112 = add nsw i64 %101, %102, !dbg !4197
  %103 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4198
  %width113 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %103, i32 0, i32 0, !dbg !4199
  %104 = load i64, i64* %width113, align 8, !dbg !4199
  %105 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4200
  %call114 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %97, i64 %99, i64 %add112, i64 %104, i64 1, %struct._ExceptionInfo* %105), !dbg !4201
  store %struct._PixelPacket* %call114, %struct._PixelPacket** %p, align 8, !dbg !4202
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4203
  %cmp115 = icmp eq %struct._PixelPacket* %106, null, !dbg !4205
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !4206

if.then117:                                       ; preds = %for.body109
  br label %for.end134, !dbg !4207

if.end118:                                        ; preds = %for.body109
  store i64 0, i64* %x, align 8, !dbg !4208
  br label %for.cond119, !dbg !4210

for.cond119:                                      ; preds = %for.inc129, %if.end118
  %107 = load i64, i64* %x, align 8, !dbg !4211
  %108 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4213
  %width120 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %108, i32 0, i32 0, !dbg !4214
  %109 = load i64, i64* %width120, align 8, !dbg !4214
  %cmp121 = icmp slt i64 %107, %109, !dbg !4215
  br i1 %cmp121, label %for.body123, label %for.end131, !dbg !4216

for.body123:                                      ; preds = %for.cond119
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4217
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4219
  %call124 = call float @GetPixelIntensity(%struct._Image* %110, %struct._PixelPacket* %111), !dbg !4220
  %call125 = call zeroext i16 @ClampToQuantum(float %call124), !dbg !4221
  %call126 = call i32 @ScaleQuantumToLong(i16 zeroext %call125), !dbg !4222
  %112 = load i32*, i32** %q, align 8, !dbg !4223
  %incdec.ptr127 = getelementptr inbounds i32, i32* %112, i32 1, !dbg !4223
  store i32* %incdec.ptr127, i32** %q, align 8, !dbg !4223
  store i32 %call126, i32* %112, align 4, !dbg !4224
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4225
  %incdec.ptr128 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !4225
  store %struct._PixelPacket* %incdec.ptr128, %struct._PixelPacket** %p, align 8, !dbg !4225
  br label %for.inc129, !dbg !4226

for.inc129:                                       ; preds = %for.body123
  %114 = load i64, i64* %x, align 8, !dbg !4227
  %inc130 = add nsw i64 %114, 1, !dbg !4227
  store i64 %inc130, i64* %x, align 8, !dbg !4227
  br label %for.cond119, !dbg !4228, !llvm.loop !4229

for.end131:                                       ; preds = %for.cond119
  br label %for.inc132, !dbg !4231

for.inc132:                                       ; preds = %for.end131
  %115 = load i64, i64* %y, align 8, !dbg !4232
  %inc133 = add nsw i64 %115, 1, !dbg !4232
  store i64 %inc133, i64* %y, align 8, !dbg !4232
  br label %for.cond105, !dbg !4233, !llvm.loop !4234

for.end134:                                       ; preds = %if.then117, %for.cond105
  br label %for.end330, !dbg !4236

if.end135:                                        ; preds = %if.end100
  %116 = load i8*, i8** %map.addr, align 8, !dbg !4237
  %call136 = call i32 @LocaleCompare(i8* %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !4239
  %cmp137 = icmp eq i32 %call136, 0, !dbg !4240
  br i1 %cmp137, label %if.then139, label %if.end175, !dbg !4241

if.then139:                                       ; preds = %if.end135
  store i64 0, i64* %y, align 8, !dbg !4242
  br label %for.cond140, !dbg !4245

for.cond140:                                      ; preds = %for.inc172, %if.then139
  %117 = load i64, i64* %y, align 8, !dbg !4246
  %118 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4248
  %height141 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %118, i32 0, i32 1, !dbg !4249
  %119 = load i64, i64* %height141, align 8, !dbg !4249
  %cmp142 = icmp slt i64 %117, %119, !dbg !4250
  br i1 %cmp142, label %for.body144, label %for.end174, !dbg !4251

for.body144:                                      ; preds = %for.cond140
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4252
  %121 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4254
  %x145 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %121, i32 0, i32 2, !dbg !4255
  %122 = load i64, i64* %x145, align 8, !dbg !4255
  %123 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4256
  %y146 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %123, i32 0, i32 3, !dbg !4257
  %124 = load i64, i64* %y146, align 8, !dbg !4257
  %125 = load i64, i64* %y, align 8, !dbg !4258
  %add147 = add nsw i64 %124, %125, !dbg !4259
  %126 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4260
  %width148 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %126, i32 0, i32 0, !dbg !4261
  %127 = load i64, i64* %width148, align 8, !dbg !4261
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4262
  %call149 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %120, i64 %122, i64 %add147, i64 %127, i64 1, %struct._ExceptionInfo* %128), !dbg !4263
  store %struct._PixelPacket* %call149, %struct._PixelPacket** %p, align 8, !dbg !4264
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4265
  %cmp150 = icmp eq %struct._PixelPacket* %129, null, !dbg !4267
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !4268

if.then152:                                       ; preds = %for.body144
  br label %for.end174, !dbg !4269

if.end153:                                        ; preds = %for.body144
  store i64 0, i64* %x, align 8, !dbg !4270
  br label %for.cond154, !dbg !4272

for.cond154:                                      ; preds = %for.inc169, %if.end153
  %130 = load i64, i64* %x, align 8, !dbg !4273
  %131 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4275
  %width155 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %131, i32 0, i32 0, !dbg !4276
  %132 = load i64, i64* %width155, align 8, !dbg !4276
  %cmp156 = icmp slt i64 %130, %132, !dbg !4277
  br i1 %cmp156, label %for.body158, label %for.end171, !dbg !4278

for.body158:                                      ; preds = %for.cond154
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4279
  %red159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 2, !dbg !4279
  %134 = load i16, i16* %red159, align 2, !dbg !4279
  %call160 = call i32 @ScaleQuantumToLong(i16 zeroext %134), !dbg !4281
  %135 = load i32*, i32** %q, align 8, !dbg !4282
  %incdec.ptr161 = getelementptr inbounds i32, i32* %135, i32 1, !dbg !4282
  store i32* %incdec.ptr161, i32** %q, align 8, !dbg !4282
  store i32 %call160, i32* %135, align 4, !dbg !4283
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4284
  %green162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !4284
  %137 = load i16, i16* %green162, align 2, !dbg !4284
  %call163 = call i32 @ScaleQuantumToLong(i16 zeroext %137), !dbg !4285
  %138 = load i32*, i32** %q, align 8, !dbg !4286
  %incdec.ptr164 = getelementptr inbounds i32, i32* %138, i32 1, !dbg !4286
  store i32* %incdec.ptr164, i32** %q, align 8, !dbg !4286
  store i32 %call163, i32* %138, align 4, !dbg !4287
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4288
  %blue165 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 0, i32 0, !dbg !4288
  %140 = load i16, i16* %blue165, align 2, !dbg !4288
  %call166 = call i32 @ScaleQuantumToLong(i16 zeroext %140), !dbg !4289
  %141 = load i32*, i32** %q, align 8, !dbg !4290
  %incdec.ptr167 = getelementptr inbounds i32, i32* %141, i32 1, !dbg !4290
  store i32* %incdec.ptr167, i32** %q, align 8, !dbg !4290
  store i32 %call166, i32* %141, align 4, !dbg !4291
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4292
  %incdec.ptr168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 1, !dbg !4292
  store %struct._PixelPacket* %incdec.ptr168, %struct._PixelPacket** %p, align 8, !dbg !4292
  br label %for.inc169, !dbg !4293

for.inc169:                                       ; preds = %for.body158
  %143 = load i64, i64* %x, align 8, !dbg !4294
  %inc170 = add nsw i64 %143, 1, !dbg !4294
  store i64 %inc170, i64* %x, align 8, !dbg !4294
  br label %for.cond154, !dbg !4295, !llvm.loop !4296

for.end171:                                       ; preds = %for.cond154
  br label %for.inc172, !dbg !4298

for.inc172:                                       ; preds = %for.end171
  %144 = load i64, i64* %y, align 8, !dbg !4299
  %inc173 = add nsw i64 %144, 1, !dbg !4299
  store i64 %inc173, i64* %y, align 8, !dbg !4299
  br label %for.cond140, !dbg !4300, !llvm.loop !4301

for.end174:                                       ; preds = %if.then152, %for.cond140
  br label %for.end330, !dbg !4303

if.end175:                                        ; preds = %if.end135
  %145 = load i8*, i8** %map.addr, align 8, !dbg !4304
  %call176 = call i32 @LocaleCompare(i8* %145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !4306
  %cmp177 = icmp eq i32 %call176, 0, !dbg !4307
  br i1 %cmp177, label %if.then179, label %if.end221, !dbg !4308

if.then179:                                       ; preds = %if.end175
  store i64 0, i64* %y, align 8, !dbg !4309
  br label %for.cond180, !dbg !4312

for.cond180:                                      ; preds = %for.inc218, %if.then179
  %146 = load i64, i64* %y, align 8, !dbg !4313
  %147 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4315
  %height181 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %147, i32 0, i32 1, !dbg !4316
  %148 = load i64, i64* %height181, align 8, !dbg !4316
  %cmp182 = icmp slt i64 %146, %148, !dbg !4317
  br i1 %cmp182, label %for.body184, label %for.end220, !dbg !4318

for.body184:                                      ; preds = %for.cond180
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4319
  %150 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4321
  %x185 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %150, i32 0, i32 2, !dbg !4322
  %151 = load i64, i64* %x185, align 8, !dbg !4322
  %152 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4323
  %y186 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %152, i32 0, i32 3, !dbg !4324
  %153 = load i64, i64* %y186, align 8, !dbg !4324
  %154 = load i64, i64* %y, align 8, !dbg !4325
  %add187 = add nsw i64 %153, %154, !dbg !4326
  %155 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4327
  %width188 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %155, i32 0, i32 0, !dbg !4328
  %156 = load i64, i64* %width188, align 8, !dbg !4328
  %157 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4329
  %call189 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %149, i64 %151, i64 %add187, i64 %156, i64 1, %struct._ExceptionInfo* %157), !dbg !4330
  store %struct._PixelPacket* %call189, %struct._PixelPacket** %p, align 8, !dbg !4331
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4332
  %cmp190 = icmp eq %struct._PixelPacket* %158, null, !dbg !4334
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !4335

if.then192:                                       ; preds = %for.body184
  br label %for.end220, !dbg !4336

if.end193:                                        ; preds = %for.body184
  store i64 0, i64* %x, align 8, !dbg !4337
  br label %for.cond194, !dbg !4339

for.cond194:                                      ; preds = %for.inc215, %if.end193
  %159 = load i64, i64* %x, align 8, !dbg !4340
  %160 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4342
  %width195 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %160, i32 0, i32 0, !dbg !4343
  %161 = load i64, i64* %width195, align 8, !dbg !4343
  %cmp196 = icmp slt i64 %159, %161, !dbg !4344
  br i1 %cmp196, label %for.body198, label %for.end217, !dbg !4345

for.body198:                                      ; preds = %for.cond194
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4346
  %red199 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 2, !dbg !4346
  %163 = load i16, i16* %red199, align 2, !dbg !4346
  %call200 = call i32 @ScaleQuantumToLong(i16 zeroext %163), !dbg !4348
  %164 = load i32*, i32** %q, align 8, !dbg !4349
  %incdec.ptr201 = getelementptr inbounds i32, i32* %164, i32 1, !dbg !4349
  store i32* %incdec.ptr201, i32** %q, align 8, !dbg !4349
  store i32 %call200, i32* %164, align 4, !dbg !4350
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4351
  %green202 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i32 0, i32 1, !dbg !4351
  %166 = load i16, i16* %green202, align 2, !dbg !4351
  %call203 = call i32 @ScaleQuantumToLong(i16 zeroext %166), !dbg !4352
  %167 = load i32*, i32** %q, align 8, !dbg !4353
  %incdec.ptr204 = getelementptr inbounds i32, i32* %167, i32 1, !dbg !4353
  store i32* %incdec.ptr204, i32** %q, align 8, !dbg !4353
  store i32 %call203, i32* %167, align 4, !dbg !4354
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4355
  %blue205 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 0, !dbg !4355
  %169 = load i16, i16* %blue205, align 2, !dbg !4355
  %call206 = call i32 @ScaleQuantumToLong(i16 zeroext %169), !dbg !4356
  %170 = load i32*, i32** %q, align 8, !dbg !4357
  %incdec.ptr207 = getelementptr inbounds i32, i32* %170, i32 1, !dbg !4357
  store i32* %incdec.ptr207, i32** %q, align 8, !dbg !4357
  store i32 %call206, i32* %170, align 4, !dbg !4358
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4359
  %opacity208 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 0, i32 3, !dbg !4359
  %172 = load i16, i16* %opacity208, align 2, !dbg !4359
  %conv209 = zext i16 %172 to i32, !dbg !4359
  %sub210 = sub nsw i32 65535, %conv209, !dbg !4359
  %conv211 = trunc i32 %sub210 to i16, !dbg !4360
  %call212 = call i32 @ScaleQuantumToLong(i16 zeroext %conv211), !dbg !4361
  %173 = load i32*, i32** %q, align 8, !dbg !4362
  %incdec.ptr213 = getelementptr inbounds i32, i32* %173, i32 1, !dbg !4362
  store i32* %incdec.ptr213, i32** %q, align 8, !dbg !4362
  store i32 %call212, i32* %173, align 4, !dbg !4363
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4364
  %incdec.ptr214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 1, !dbg !4364
  store %struct._PixelPacket* %incdec.ptr214, %struct._PixelPacket** %p, align 8, !dbg !4364
  br label %for.inc215, !dbg !4365

for.inc215:                                       ; preds = %for.body198
  %175 = load i64, i64* %x, align 8, !dbg !4366
  %inc216 = add nsw i64 %175, 1, !dbg !4366
  store i64 %inc216, i64* %x, align 8, !dbg !4366
  br label %for.cond194, !dbg !4367, !llvm.loop !4368

for.end217:                                       ; preds = %for.cond194
  br label %for.inc218, !dbg !4370

for.inc218:                                       ; preds = %for.end217
  %176 = load i64, i64* %y, align 8, !dbg !4371
  %inc219 = add nsw i64 %176, 1, !dbg !4371
  store i64 %inc219, i64* %y, align 8, !dbg !4371
  br label %for.cond180, !dbg !4372, !llvm.loop !4373

for.end220:                                       ; preds = %if.then192, %for.cond180
  br label %for.end330, !dbg !4375

if.end221:                                        ; preds = %if.end175
  %177 = load i8*, i8** %map.addr, align 8, !dbg !4376
  %call222 = call i32 @LocaleCompare(i8* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !4378
  %cmp223 = icmp eq i32 %call222, 0, !dbg !4379
  br i1 %cmp223, label %if.then225, label %if.end262, !dbg !4380

if.then225:                                       ; preds = %if.end221
  store i64 0, i64* %y, align 8, !dbg !4381
  br label %for.cond226, !dbg !4384

for.cond226:                                      ; preds = %for.inc259, %if.then225
  %178 = load i64, i64* %y, align 8, !dbg !4385
  %179 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4387
  %height227 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %179, i32 0, i32 1, !dbg !4388
  %180 = load i64, i64* %height227, align 8, !dbg !4388
  %cmp228 = icmp slt i64 %178, %180, !dbg !4389
  br i1 %cmp228, label %for.body230, label %for.end261, !dbg !4390

for.body230:                                      ; preds = %for.cond226
  %181 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4391
  %182 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4393
  %x231 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %182, i32 0, i32 2, !dbg !4394
  %183 = load i64, i64* %x231, align 8, !dbg !4394
  %184 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4395
  %y232 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %184, i32 0, i32 3, !dbg !4396
  %185 = load i64, i64* %y232, align 8, !dbg !4396
  %186 = load i64, i64* %y, align 8, !dbg !4397
  %add233 = add nsw i64 %185, %186, !dbg !4398
  %187 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4399
  %width234 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %187, i32 0, i32 0, !dbg !4400
  %188 = load i64, i64* %width234, align 8, !dbg !4400
  %189 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4401
  %call235 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %181, i64 %183, i64 %add233, i64 %188, i64 1, %struct._ExceptionInfo* %189), !dbg !4402
  store %struct._PixelPacket* %call235, %struct._PixelPacket** %p, align 8, !dbg !4403
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4404
  %cmp236 = icmp eq %struct._PixelPacket* %190, null, !dbg !4406
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !4407

if.then238:                                       ; preds = %for.body230
  br label %for.end261, !dbg !4408

if.end239:                                        ; preds = %for.body230
  store i64 0, i64* %x, align 8, !dbg !4409
  br label %for.cond240, !dbg !4411

for.cond240:                                      ; preds = %for.inc256, %if.end239
  %191 = load i64, i64* %x, align 8, !dbg !4412
  %192 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4414
  %width241 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %192, i32 0, i32 0, !dbg !4415
  %193 = load i64, i64* %width241, align 8, !dbg !4415
  %cmp242 = icmp slt i64 %191, %193, !dbg !4416
  br i1 %cmp242, label %for.body244, label %for.end258, !dbg !4417

for.body244:                                      ; preds = %for.cond240
  %194 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4418
  %red245 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %194, i32 0, i32 2, !dbg !4418
  %195 = load i16, i16* %red245, align 2, !dbg !4418
  %call246 = call i32 @ScaleQuantumToLong(i16 zeroext %195), !dbg !4420
  %196 = load i32*, i32** %q, align 8, !dbg !4421
  %incdec.ptr247 = getelementptr inbounds i32, i32* %196, i32 1, !dbg !4421
  store i32* %incdec.ptr247, i32** %q, align 8, !dbg !4421
  store i32 %call246, i32* %196, align 4, !dbg !4422
  %197 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4423
  %green248 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %197, i32 0, i32 1, !dbg !4423
  %198 = load i16, i16* %green248, align 2, !dbg !4423
  %call249 = call i32 @ScaleQuantumToLong(i16 zeroext %198), !dbg !4424
  %199 = load i32*, i32** %q, align 8, !dbg !4425
  %incdec.ptr250 = getelementptr inbounds i32, i32* %199, i32 1, !dbg !4425
  store i32* %incdec.ptr250, i32** %q, align 8, !dbg !4425
  store i32 %call249, i32* %199, align 4, !dbg !4426
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4427
  %blue251 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 0, !dbg !4427
  %201 = load i16, i16* %blue251, align 2, !dbg !4427
  %call252 = call i32 @ScaleQuantumToLong(i16 zeroext %201), !dbg !4428
  %202 = load i32*, i32** %q, align 8, !dbg !4429
  %incdec.ptr253 = getelementptr inbounds i32, i32* %202, i32 1, !dbg !4429
  store i32* %incdec.ptr253, i32** %q, align 8, !dbg !4429
  store i32 %call252, i32* %202, align 4, !dbg !4430
  %203 = load i32*, i32** %q, align 8, !dbg !4431
  %incdec.ptr254 = getelementptr inbounds i32, i32* %203, i32 1, !dbg !4431
  store i32* %incdec.ptr254, i32** %q, align 8, !dbg !4431
  store i32 0, i32* %203, align 4, !dbg !4432
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4433
  %incdec.ptr255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 1, !dbg !4433
  store %struct._PixelPacket* %incdec.ptr255, %struct._PixelPacket** %p, align 8, !dbg !4433
  br label %for.inc256, !dbg !4434

for.inc256:                                       ; preds = %for.body244
  %205 = load i64, i64* %x, align 8, !dbg !4435
  %inc257 = add nsw i64 %205, 1, !dbg !4435
  store i64 %inc257, i64* %x, align 8, !dbg !4435
  br label %for.cond240, !dbg !4436, !llvm.loop !4437

for.end258:                                       ; preds = %for.cond240
  br label %for.inc259, !dbg !4439

for.inc259:                                       ; preds = %for.end258
  %206 = load i64, i64* %y, align 8, !dbg !4440
  %inc260 = add nsw i64 %206, 1, !dbg !4440
  store i64 %inc260, i64* %y, align 8, !dbg !4440
  br label %for.cond226, !dbg !4441, !llvm.loop !4442

for.end261:                                       ; preds = %if.then238, %for.cond226
  br label %for.end330, !dbg !4444

if.end262:                                        ; preds = %if.end221
  %207 = load i8*, i8** %map.addr, align 8, !dbg !4445
  %call263 = call i64 @strlen(i8* %207) #13, !dbg !4446
  store i64 %call263, i64* %length, align 8, !dbg !4447
  store i64 0, i64* %y, align 8, !dbg !4448
  br label %for.cond264, !dbg !4450

for.cond264:                                      ; preds = %for.inc328, %if.end262
  %208 = load i64, i64* %y, align 8, !dbg !4451
  %209 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4453
  %height265 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %209, i32 0, i32 1, !dbg !4454
  %210 = load i64, i64* %height265, align 8, !dbg !4454
  %cmp266 = icmp slt i64 %208, %210, !dbg !4455
  br i1 %cmp266, label %for.body268, label %for.end330, !dbg !4456

for.body268:                                      ; preds = %for.cond264
  %211 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4457
  %212 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4459
  %x269 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %212, i32 0, i32 2, !dbg !4460
  %213 = load i64, i64* %x269, align 8, !dbg !4460
  %214 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4461
  %y270 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %214, i32 0, i32 3, !dbg !4462
  %215 = load i64, i64* %y270, align 8, !dbg !4462
  %216 = load i64, i64* %y, align 8, !dbg !4463
  %add271 = add nsw i64 %215, %216, !dbg !4464
  %217 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4465
  %width272 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %217, i32 0, i32 0, !dbg !4466
  %218 = load i64, i64* %width272, align 8, !dbg !4466
  %219 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4467
  %call273 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %211, i64 %213, i64 %add271, i64 %218, i64 1, %struct._ExceptionInfo* %219), !dbg !4468
  store %struct._PixelPacket* %call273, %struct._PixelPacket** %p, align 8, !dbg !4469
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4470
  %cmp274 = icmp eq %struct._PixelPacket* %220, null, !dbg !4472
  br i1 %cmp274, label %if.then276, label %if.end277, !dbg !4473

if.then276:                                       ; preds = %for.body268
  br label %for.end330, !dbg !4474

if.end277:                                        ; preds = %for.body268
  %221 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4475
  %call278 = call i16* @GetVirtualIndexQueue(%struct._Image* %221), !dbg !4476
  store i16* %call278, i16** %indexes, align 8, !dbg !4477
  store i64 0, i64* %x, align 8, !dbg !4478
  br label %for.cond279, !dbg !4480

for.cond279:                                      ; preds = %for.inc325, %if.end277
  %222 = load i64, i64* %x, align 8, !dbg !4481
  %223 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4483
  %width280 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %223, i32 0, i32 0, !dbg !4484
  %224 = load i64, i64* %width280, align 8, !dbg !4484
  %cmp281 = icmp slt i64 %222, %224, !dbg !4485
  br i1 %cmp281, label %for.body283, label %for.end327, !dbg !4486

for.body283:                                      ; preds = %for.cond279
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4487, metadata !DIExpression()), !dbg !4489
  store i64 0, i64* %i, align 8, !dbg !4490
  br label %for.cond284, !dbg !4492

for.cond284:                                      ; preds = %for.inc321, %for.body283
  %225 = load i64, i64* %i, align 8, !dbg !4493
  %226 = load i64, i64* %length, align 8, !dbg !4495
  %cmp285 = icmp slt i64 %225, %226, !dbg !4496
  br i1 %cmp285, label %for.body287, label %for.end323, !dbg !4497

for.body287:                                      ; preds = %for.cond284
  %227 = load i32*, i32** %q, align 8, !dbg !4498
  store i32 0, i32* %227, align 4, !dbg !4500
  %228 = load i32*, i32** %quantum_map.addr, align 8, !dbg !4501
  %229 = load i64, i64* %i, align 8, !dbg !4502
  %arrayidx = getelementptr inbounds i32, i32* %228, i64 %229, !dbg !4501
  %230 = load i32, i32* %arrayidx, align 4, !dbg !4501
  switch i32 %230, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb290
    i32 12, label %sw.bb290
    i32 3, label %sw.bb293
    i32 19, label %sw.bb293
    i32 1, label %sw.bb296
    i32 13, label %sw.bb302
    i32 2, label %sw.bb305
    i32 11, label %sw.bb316
  ], !dbg !4503

sw.bb:                                            ; preds = %for.body287, %for.body287
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4504
  %red288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 0, i32 2, !dbg !4504
  %232 = load i16, i16* %red288, align 2, !dbg !4504
  %call289 = call i32 @ScaleQuantumToLong(i16 zeroext %232), !dbg !4507
  %233 = load i32*, i32** %q, align 8, !dbg !4508
  store i32 %call289, i32* %233, align 4, !dbg !4509
  br label %sw.epilog, !dbg !4510

sw.bb290:                                         ; preds = %for.body287, %for.body287
  %234 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4511
  %green291 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %234, i32 0, i32 1, !dbg !4511
  %235 = load i16, i16* %green291, align 2, !dbg !4511
  %call292 = call i32 @ScaleQuantumToLong(i16 zeroext %235), !dbg !4513
  %236 = load i32*, i32** %q, align 8, !dbg !4514
  store i32 %call292, i32* %236, align 4, !dbg !4515
  br label %sw.epilog, !dbg !4516

sw.bb293:                                         ; preds = %for.body287, %for.body287
  %237 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4517
  %blue294 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %237, i32 0, i32 0, !dbg !4517
  %238 = load i16, i16* %blue294, align 2, !dbg !4517
  %call295 = call i32 @ScaleQuantumToLong(i16 zeroext %238), !dbg !4519
  %239 = load i32*, i32** %q, align 8, !dbg !4520
  store i32 %call295, i32* %239, align 4, !dbg !4521
  br label %sw.epilog, !dbg !4522

sw.bb296:                                         ; preds = %for.body287
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4523
  %opacity297 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 3, !dbg !4523
  %241 = load i16, i16* %opacity297, align 2, !dbg !4523
  %conv298 = zext i16 %241 to i32, !dbg !4523
  %sub299 = sub nsw i32 65535, %conv298, !dbg !4523
  %conv300 = trunc i32 %sub299 to i16, !dbg !4525
  %call301 = call i32 @ScaleQuantumToLong(i16 zeroext %conv300), !dbg !4526
  %242 = load i32*, i32** %q, align 8, !dbg !4527
  store i32 %call301, i32* %242, align 4, !dbg !4528
  br label %sw.epilog, !dbg !4529

sw.bb302:                                         ; preds = %for.body287
  %243 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4530
  %opacity303 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %243, i32 0, i32 3, !dbg !4530
  %244 = load i16, i16* %opacity303, align 2, !dbg !4530
  %call304 = call i32 @ScaleQuantumToLong(i16 zeroext %244), !dbg !4532
  %245 = load i32*, i32** %q, align 8, !dbg !4533
  store i32 %call304, i32* %245, align 4, !dbg !4534
  br label %sw.epilog, !dbg !4535

sw.bb305:                                         ; preds = %for.body287
  %246 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4536
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %246, i32 0, i32 1, !dbg !4539
  %247 = load i32, i32* %colorspace, align 4, !dbg !4539
  %cmp306 = icmp eq i32 %247, 12, !dbg !4540
  br i1 %cmp306, label %if.then308, label %if.end315, !dbg !4541

if.then308:                                       ; preds = %sw.bb305
  %248 = load i16*, i16** %indexes, align 8, !dbg !4542
  %249 = load i64, i64* %x, align 8, !dbg !4542
  %add.ptr = getelementptr inbounds i16, i16* %248, i64 %249, !dbg !4542
  %cmp309 = icmp eq i16* %add.ptr, null, !dbg !4542
  br i1 %cmp309, label %cond.true, label %cond.false, !dbg !4542

cond.true:                                        ; preds = %if.then308
  br label %cond.end, !dbg !4542

cond.false:                                       ; preds = %if.then308
  %250 = load i16*, i16** %indexes, align 8, !dbg !4542
  %251 = load i64, i64* %x, align 8, !dbg !4542
  %add.ptr311 = getelementptr inbounds i16, i16* %250, i64 %251, !dbg !4542
  %252 = load i16, i16* %add.ptr311, align 2, !dbg !4542
  %conv312 = zext i16 %252 to i32, !dbg !4542
  br label %cond.end, !dbg !4542

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv312, %cond.false ], !dbg !4542
  %conv313 = trunc i32 %cond to i16, !dbg !4542
  %call314 = call i32 @ScaleQuantumToLong(i16 zeroext %conv313), !dbg !4543
  %253 = load i32*, i32** %q, align 8, !dbg !4544
  store i32 %call314, i32* %253, align 4, !dbg !4545
  br label %if.end315, !dbg !4546

if.end315:                                        ; preds = %cond.end, %sw.bb305
  br label %sw.epilog, !dbg !4547

sw.bb316:                                         ; preds = %for.body287
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4548
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4550
  %call317 = call float @GetPixelIntensity(%struct._Image* %254, %struct._PixelPacket* %255), !dbg !4551
  %call318 = call zeroext i16 @ClampToQuantum(float %call317), !dbg !4552
  %call319 = call i32 @ScaleQuantumToLong(i16 zeroext %call318), !dbg !4553
  %256 = load i32*, i32** %q, align 8, !dbg !4554
  store i32 %call319, i32* %256, align 4, !dbg !4555
  br label %sw.epilog, !dbg !4556

sw.default:                                       ; preds = %for.body287
  br label %sw.epilog, !dbg !4557

sw.epilog:                                        ; preds = %sw.default, %sw.bb316, %if.end315, %sw.bb302, %sw.bb296, %sw.bb293, %sw.bb290, %sw.bb
  %257 = load i32*, i32** %q, align 8, !dbg !4558
  %incdec.ptr320 = getelementptr inbounds i32, i32* %257, i32 1, !dbg !4558
  store i32* %incdec.ptr320, i32** %q, align 8, !dbg !4558
  br label %for.inc321, !dbg !4559

for.inc321:                                       ; preds = %sw.epilog
  %258 = load i64, i64* %i, align 8, !dbg !4560
  %inc322 = add nsw i64 %258, 1, !dbg !4560
  store i64 %inc322, i64* %i, align 8, !dbg !4560
  br label %for.cond284, !dbg !4561, !llvm.loop !4562

for.end323:                                       ; preds = %for.cond284
  %259 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4564
  %incdec.ptr324 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %259, i32 1, !dbg !4564
  store %struct._PixelPacket* %incdec.ptr324, %struct._PixelPacket** %p, align 8, !dbg !4564
  br label %for.inc325, !dbg !4565

for.inc325:                                       ; preds = %for.end323
  %260 = load i64, i64* %x, align 8, !dbg !4566
  %inc326 = add nsw i64 %260, 1, !dbg !4566
  store i64 %inc326, i64* %x, align 8, !dbg !4566
  br label %for.cond279, !dbg !4567, !llvm.loop !4568

for.end327:                                       ; preds = %for.cond279
  br label %for.inc328, !dbg !4570

for.inc328:                                       ; preds = %for.end327
  %261 = load i64, i64* %y, align 8, !dbg !4571
  %inc329 = add nsw i64 %261, 1, !dbg !4571
  store i64 %inc329, i64* %y, align 8, !dbg !4571
  br label %for.cond264, !dbg !4572, !llvm.loop !4573

for.end330:                                       ; preds = %for.end19, %for.end58, %for.end99, %for.end134, %for.end174, %for.end220, %for.end261, %if.then276, %for.cond264
  ret void, !dbg !4575
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportQuantumPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !4576 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %q = alloca i16*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4577, metadata !DIExpression()), !dbg !4578
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !4579, metadata !DIExpression()), !dbg !4580
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !4581, metadata !DIExpression()), !dbg !4582
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !4583, metadata !DIExpression()), !dbg !4584
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !4585, metadata !DIExpression()), !dbg !4586
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !4587, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !4589, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !4591, metadata !DIExpression()), !dbg !4592
  call void @llvm.dbg.declare(metadata i16** %q, metadata !4593, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.declare(metadata i64* %x, metadata !4595, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.declare(metadata i64* %length, metadata !4597, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.declare(metadata i64* %y, metadata !4599, metadata !DIExpression()), !dbg !4600
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !4601
  %1 = bitcast i8* %0 to i16*, !dbg !4602
  store i16* %1, i16** %q, align 8, !dbg !4603
  %2 = load i8*, i8** %map.addr, align 8, !dbg !4604
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !4606
  %cmp = icmp eq i32 %call, 0, !dbg !4607
  br i1 %cmp, label %if.then, label %if.end17, !dbg !4608

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !4609
  br label %for.cond, !dbg !4612

for.cond:                                         ; preds = %for.inc14, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !4613
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4615
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !4616
  %5 = load i64, i64* %height, align 8, !dbg !4616
  %cmp1 = icmp slt i64 %3, %5, !dbg !4617
  br i1 %cmp1, label %for.body, label %for.end16, !dbg !4618

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4619
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4621
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !4622
  %8 = load i64, i64* %x2, align 8, !dbg !4622
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4623
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !4624
  %10 = load i64, i64* %y3, align 8, !dbg !4624
  %11 = load i64, i64* %y, align 8, !dbg !4625
  %add = add nsw i64 %10, %11, !dbg !4626
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4627
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !4628
  %13 = load i64, i64* %width, align 8, !dbg !4628
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4629
  %call4 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !4630
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %p, align 8, !dbg !4631
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4632
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !4634
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !4635

if.then6:                                         ; preds = %for.body
  br label %for.end16, !dbg !4636

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !4637
  br label %for.cond7, !dbg !4639

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !4640
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4642
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !4643
  %18 = load i64, i64* %width8, align 8, !dbg !4643
  %cmp9 = icmp slt i64 %16, %18, !dbg !4644
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !4645

for.body10:                                       ; preds = %for.cond7
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4646
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 0, i32 0, !dbg !4646
  %20 = load i16, i16* %blue, align 2, !dbg !4646
  %21 = load i16*, i16** %q, align 8, !dbg !4648
  %incdec.ptr = getelementptr inbounds i16, i16* %21, i32 1, !dbg !4648
  store i16* %incdec.ptr, i16** %q, align 8, !dbg !4648
  store i16 %20, i16* %21, align 2, !dbg !4649
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4650
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 1, !dbg !4650
  %23 = load i16, i16* %green, align 2, !dbg !4650
  %24 = load i16*, i16** %q, align 8, !dbg !4651
  %incdec.ptr11 = getelementptr inbounds i16, i16* %24, i32 1, !dbg !4651
  store i16* %incdec.ptr11, i16** %q, align 8, !dbg !4651
  store i16 %23, i16* %24, align 2, !dbg !4652
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4653
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 2, !dbg !4653
  %26 = load i16, i16* %red, align 2, !dbg !4653
  %27 = load i16*, i16** %q, align 8, !dbg !4654
  %incdec.ptr12 = getelementptr inbounds i16, i16* %27, i32 1, !dbg !4654
  store i16* %incdec.ptr12, i16** %q, align 8, !dbg !4654
  store i16 %26, i16* %27, align 2, !dbg !4655
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4656
  %incdec.ptr13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !4656
  store %struct._PixelPacket* %incdec.ptr13, %struct._PixelPacket** %p, align 8, !dbg !4656
  br label %for.inc, !dbg !4657

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !4658
  %inc = add nsw i64 %29, 1, !dbg !4658
  store i64 %inc, i64* %x, align 8, !dbg !4658
  br label %for.cond7, !dbg !4659, !llvm.loop !4660

for.end:                                          ; preds = %for.cond7
  br label %for.inc14, !dbg !4662

for.inc14:                                        ; preds = %for.end
  %30 = load i64, i64* %y, align 8, !dbg !4663
  %inc15 = add nsw i64 %30, 1, !dbg !4663
  store i64 %inc15, i64* %y, align 8, !dbg !4663
  br label %for.cond, !dbg !4664, !llvm.loop !4665

for.end16:                                        ; preds = %if.then6, %for.cond
  br label %for.end302, !dbg !4667

if.end17:                                         ; preds = %entry
  %31 = load i8*, i8** %map.addr, align 8, !dbg !4668
  %call18 = call i32 @LocaleCompare(i8* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !4670
  %cmp19 = icmp eq i32 %call18, 0, !dbg !4671
  br i1 %cmp19, label %if.then20, label %if.end52, !dbg !4672

if.then20:                                        ; preds = %if.end17
  store i64 0, i64* %y, align 8, !dbg !4673
  br label %for.cond21, !dbg !4676

for.cond21:                                       ; preds = %for.inc49, %if.then20
  %32 = load i64, i64* %y, align 8, !dbg !4677
  %33 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4679
  %height22 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %33, i32 0, i32 1, !dbg !4680
  %34 = load i64, i64* %height22, align 8, !dbg !4680
  %cmp23 = icmp slt i64 %32, %34, !dbg !4681
  br i1 %cmp23, label %for.body24, label %for.end51, !dbg !4682

for.body24:                                       ; preds = %for.cond21
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4683
  %36 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4685
  %x25 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %36, i32 0, i32 2, !dbg !4686
  %37 = load i64, i64* %x25, align 8, !dbg !4686
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4687
  %y26 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 3, !dbg !4688
  %39 = load i64, i64* %y26, align 8, !dbg !4688
  %40 = load i64, i64* %y, align 8, !dbg !4689
  %add27 = add nsw i64 %39, %40, !dbg !4690
  %41 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4691
  %width28 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %41, i32 0, i32 0, !dbg !4692
  %42 = load i64, i64* %width28, align 8, !dbg !4692
  %43 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4693
  %call29 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %35, i64 %37, i64 %add27, i64 %42, i64 1, %struct._ExceptionInfo* %43), !dbg !4694
  store %struct._PixelPacket* %call29, %struct._PixelPacket** %p, align 8, !dbg !4695
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4696
  %cmp30 = icmp eq %struct._PixelPacket* %44, null, !dbg !4698
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !4699

if.then31:                                        ; preds = %for.body24
  br label %for.end51, !dbg !4700

if.end32:                                         ; preds = %for.body24
  store i64 0, i64* %x, align 8, !dbg !4701
  br label %for.cond33, !dbg !4703

for.cond33:                                       ; preds = %for.inc46, %if.end32
  %45 = load i64, i64* %x, align 8, !dbg !4704
  %46 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4706
  %width34 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %46, i32 0, i32 0, !dbg !4707
  %47 = load i64, i64* %width34, align 8, !dbg !4707
  %cmp35 = icmp slt i64 %45, %47, !dbg !4708
  br i1 %cmp35, label %for.body36, label %for.end48, !dbg !4709

for.body36:                                       ; preds = %for.cond33
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4710
  %blue37 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 0, !dbg !4710
  %49 = load i16, i16* %blue37, align 2, !dbg !4710
  %50 = load i16*, i16** %q, align 8, !dbg !4712
  %incdec.ptr38 = getelementptr inbounds i16, i16* %50, i32 1, !dbg !4712
  store i16* %incdec.ptr38, i16** %q, align 8, !dbg !4712
  store i16 %49, i16* %50, align 2, !dbg !4713
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4714
  %green39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 0, i32 1, !dbg !4714
  %52 = load i16, i16* %green39, align 2, !dbg !4714
  %53 = load i16*, i16** %q, align 8, !dbg !4715
  %incdec.ptr40 = getelementptr inbounds i16, i16* %53, i32 1, !dbg !4715
  store i16* %incdec.ptr40, i16** %q, align 8, !dbg !4715
  store i16 %52, i16* %53, align 2, !dbg !4716
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4717
  %red41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !4717
  %55 = load i16, i16* %red41, align 2, !dbg !4717
  %56 = load i16*, i16** %q, align 8, !dbg !4718
  %incdec.ptr42 = getelementptr inbounds i16, i16* %56, i32 1, !dbg !4718
  store i16* %incdec.ptr42, i16** %q, align 8, !dbg !4718
  store i16 %55, i16* %56, align 2, !dbg !4719
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4720
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !4720
  %58 = load i16, i16* %opacity, align 2, !dbg !4720
  %conv = zext i16 %58 to i32, !dbg !4720
  %sub = sub nsw i32 65535, %conv, !dbg !4720
  %conv43 = trunc i32 %sub to i16, !dbg !4721
  %59 = load i16*, i16** %q, align 8, !dbg !4722
  %incdec.ptr44 = getelementptr inbounds i16, i16* %59, i32 1, !dbg !4722
  store i16* %incdec.ptr44, i16** %q, align 8, !dbg !4722
  store i16 %conv43, i16* %59, align 2, !dbg !4723
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4724
  %incdec.ptr45 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 1, !dbg !4724
  store %struct._PixelPacket* %incdec.ptr45, %struct._PixelPacket** %p, align 8, !dbg !4724
  br label %for.inc46, !dbg !4725

for.inc46:                                        ; preds = %for.body36
  %61 = load i64, i64* %x, align 8, !dbg !4726
  %inc47 = add nsw i64 %61, 1, !dbg !4726
  store i64 %inc47, i64* %x, align 8, !dbg !4726
  br label %for.cond33, !dbg !4727, !llvm.loop !4728

for.end48:                                        ; preds = %for.cond33
  br label %for.inc49, !dbg !4730

for.inc49:                                        ; preds = %for.end48
  %62 = load i64, i64* %y, align 8, !dbg !4731
  %inc50 = add nsw i64 %62, 1, !dbg !4731
  store i64 %inc50, i64* %y, align 8, !dbg !4731
  br label %for.cond21, !dbg !4732, !llvm.loop !4733

for.end51:                                        ; preds = %if.then31, %for.cond21
  br label %for.end302, !dbg !4735

if.end52:                                         ; preds = %if.end17
  %63 = load i8*, i8** %map.addr, align 8, !dbg !4736
  %call53 = call i32 @LocaleCompare(i8* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !4738
  %cmp54 = icmp eq i32 %call53, 0, !dbg !4739
  br i1 %cmp54, label %if.then56, label %if.end90, !dbg !4740

if.then56:                                        ; preds = %if.end52
  store i64 0, i64* %y, align 8, !dbg !4741
  br label %for.cond57, !dbg !4744

for.cond57:                                       ; preds = %for.inc87, %if.then56
  %64 = load i64, i64* %y, align 8, !dbg !4745
  %65 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4747
  %height58 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %65, i32 0, i32 1, !dbg !4748
  %66 = load i64, i64* %height58, align 8, !dbg !4748
  %cmp59 = icmp slt i64 %64, %66, !dbg !4749
  br i1 %cmp59, label %for.body61, label %for.end89, !dbg !4750

for.body61:                                       ; preds = %for.cond57
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4751
  %68 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4753
  %x62 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %68, i32 0, i32 2, !dbg !4754
  %69 = load i64, i64* %x62, align 8, !dbg !4754
  %70 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4755
  %y63 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %70, i32 0, i32 3, !dbg !4756
  %71 = load i64, i64* %y63, align 8, !dbg !4756
  %72 = load i64, i64* %y, align 8, !dbg !4757
  %add64 = add nsw i64 %71, %72, !dbg !4758
  %73 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4759
  %width65 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %73, i32 0, i32 0, !dbg !4760
  %74 = load i64, i64* %width65, align 8, !dbg !4760
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4761
  %call66 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %67, i64 %69, i64 %add64, i64 %74, i64 1, %struct._ExceptionInfo* %75), !dbg !4762
  store %struct._PixelPacket* %call66, %struct._PixelPacket** %p, align 8, !dbg !4763
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4764
  %cmp67 = icmp eq %struct._PixelPacket* %76, null, !dbg !4766
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !4767

if.then69:                                        ; preds = %for.body61
  br label %for.end89, !dbg !4768

if.end70:                                         ; preds = %for.body61
  store i64 0, i64* %x, align 8, !dbg !4769
  br label %for.cond71, !dbg !4771

for.cond71:                                       ; preds = %for.inc84, %if.end70
  %77 = load i64, i64* %x, align 8, !dbg !4772
  %78 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4774
  %width72 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %78, i32 0, i32 0, !dbg !4775
  %79 = load i64, i64* %width72, align 8, !dbg !4775
  %cmp73 = icmp slt i64 %77, %79, !dbg !4776
  br i1 %cmp73, label %for.body75, label %for.end86, !dbg !4777

for.body75:                                       ; preds = %for.cond71
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4778
  %blue76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 0, !dbg !4778
  %81 = load i16, i16* %blue76, align 2, !dbg !4778
  %82 = load i16*, i16** %q, align 8, !dbg !4780
  %incdec.ptr77 = getelementptr inbounds i16, i16* %82, i32 1, !dbg !4780
  store i16* %incdec.ptr77, i16** %q, align 8, !dbg !4780
  store i16 %81, i16* %82, align 2, !dbg !4781
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4782
  %green78 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 1, !dbg !4782
  %84 = load i16, i16* %green78, align 2, !dbg !4782
  %85 = load i16*, i16** %q, align 8, !dbg !4783
  %incdec.ptr79 = getelementptr inbounds i16, i16* %85, i32 1, !dbg !4783
  store i16* %incdec.ptr79, i16** %q, align 8, !dbg !4783
  store i16 %84, i16* %85, align 2, !dbg !4784
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4785
  %red80 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 2, !dbg !4785
  %87 = load i16, i16* %red80, align 2, !dbg !4785
  %88 = load i16*, i16** %q, align 8, !dbg !4786
  %incdec.ptr81 = getelementptr inbounds i16, i16* %88, i32 1, !dbg !4786
  store i16* %incdec.ptr81, i16** %q, align 8, !dbg !4786
  store i16 %87, i16* %88, align 2, !dbg !4787
  %89 = load i16*, i16** %q, align 8, !dbg !4788
  %incdec.ptr82 = getelementptr inbounds i16, i16* %89, i32 1, !dbg !4788
  store i16* %incdec.ptr82, i16** %q, align 8, !dbg !4788
  store i16 0, i16* %89, align 2, !dbg !4789
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4790
  %incdec.ptr83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 1, !dbg !4790
  store %struct._PixelPacket* %incdec.ptr83, %struct._PixelPacket** %p, align 8, !dbg !4790
  br label %for.inc84, !dbg !4791

for.inc84:                                        ; preds = %for.body75
  %91 = load i64, i64* %x, align 8, !dbg !4792
  %inc85 = add nsw i64 %91, 1, !dbg !4792
  store i64 %inc85, i64* %x, align 8, !dbg !4792
  br label %for.cond71, !dbg !4793, !llvm.loop !4794

for.end86:                                        ; preds = %for.cond71
  br label %for.inc87, !dbg !4796

for.inc87:                                        ; preds = %for.end86
  %92 = load i64, i64* %y, align 8, !dbg !4797
  %inc88 = add nsw i64 %92, 1, !dbg !4797
  store i64 %inc88, i64* %y, align 8, !dbg !4797
  br label %for.cond57, !dbg !4798, !llvm.loop !4799

for.end89:                                        ; preds = %if.then69, %for.cond57
  br label %for.end302, !dbg !4801

if.end90:                                         ; preds = %if.end52
  %93 = load i8*, i8** %map.addr, align 8, !dbg !4802
  %call91 = call i32 @LocaleCompare(i8* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !4804
  %cmp92 = icmp eq i32 %call91, 0, !dbg !4805
  br i1 %cmp92, label %if.then94, label %if.end124, !dbg !4806

if.then94:                                        ; preds = %if.end90
  store i64 0, i64* %y, align 8, !dbg !4807
  br label %for.cond95, !dbg !4810

for.cond95:                                       ; preds = %for.inc121, %if.then94
  %94 = load i64, i64* %y, align 8, !dbg !4811
  %95 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4813
  %height96 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %95, i32 0, i32 1, !dbg !4814
  %96 = load i64, i64* %height96, align 8, !dbg !4814
  %cmp97 = icmp slt i64 %94, %96, !dbg !4815
  br i1 %cmp97, label %for.body99, label %for.end123, !dbg !4816

for.body99:                                       ; preds = %for.cond95
  %97 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4817
  %98 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4819
  %x100 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %98, i32 0, i32 2, !dbg !4820
  %99 = load i64, i64* %x100, align 8, !dbg !4820
  %100 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4821
  %y101 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %100, i32 0, i32 3, !dbg !4822
  %101 = load i64, i64* %y101, align 8, !dbg !4822
  %102 = load i64, i64* %y, align 8, !dbg !4823
  %add102 = add nsw i64 %101, %102, !dbg !4824
  %103 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4825
  %width103 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %103, i32 0, i32 0, !dbg !4826
  %104 = load i64, i64* %width103, align 8, !dbg !4826
  %105 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4827
  %call104 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %97, i64 %99, i64 %add102, i64 %104, i64 1, %struct._ExceptionInfo* %105), !dbg !4828
  store %struct._PixelPacket* %call104, %struct._PixelPacket** %p, align 8, !dbg !4829
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4830
  %cmp105 = icmp eq %struct._PixelPacket* %106, null, !dbg !4832
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !4833

if.then107:                                       ; preds = %for.body99
  br label %for.end123, !dbg !4834

if.end108:                                        ; preds = %for.body99
  store i64 0, i64* %x, align 8, !dbg !4835
  br label %for.cond109, !dbg !4837

for.cond109:                                      ; preds = %for.inc118, %if.end108
  %107 = load i64, i64* %x, align 8, !dbg !4838
  %108 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4840
  %width110 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %108, i32 0, i32 0, !dbg !4841
  %109 = load i64, i64* %width110, align 8, !dbg !4841
  %cmp111 = icmp slt i64 %107, %109, !dbg !4842
  br i1 %cmp111, label %for.body113, label %for.end120, !dbg !4843

for.body113:                                      ; preds = %for.cond109
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4844
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4846
  %call114 = call float @GetPixelIntensity(%struct._Image* %110, %struct._PixelPacket* %111), !dbg !4847
  %call115 = call zeroext i16 @ClampToQuantum(float %call114), !dbg !4848
  %112 = load i16*, i16** %q, align 8, !dbg !4849
  %incdec.ptr116 = getelementptr inbounds i16, i16* %112, i32 1, !dbg !4849
  store i16* %incdec.ptr116, i16** %q, align 8, !dbg !4849
  store i16 %call115, i16* %112, align 2, !dbg !4850
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4851
  %incdec.ptr117 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !4851
  store %struct._PixelPacket* %incdec.ptr117, %struct._PixelPacket** %p, align 8, !dbg !4851
  br label %for.inc118, !dbg !4852

for.inc118:                                       ; preds = %for.body113
  %114 = load i64, i64* %x, align 8, !dbg !4853
  %inc119 = add nsw i64 %114, 1, !dbg !4853
  store i64 %inc119, i64* %x, align 8, !dbg !4853
  br label %for.cond109, !dbg !4854, !llvm.loop !4855

for.end120:                                       ; preds = %for.cond109
  br label %for.inc121, !dbg !4857

for.inc121:                                       ; preds = %for.end120
  %115 = load i64, i64* %y, align 8, !dbg !4858
  %inc122 = add nsw i64 %115, 1, !dbg !4858
  store i64 %inc122, i64* %y, align 8, !dbg !4858
  br label %for.cond95, !dbg !4859, !llvm.loop !4860

for.end123:                                       ; preds = %if.then107, %for.cond95
  br label %for.end302, !dbg !4862

if.end124:                                        ; preds = %if.end90
  %116 = load i8*, i8** %map.addr, align 8, !dbg !4863
  %call125 = call i32 @LocaleCompare(i8* %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !4865
  %cmp126 = icmp eq i32 %call125, 0, !dbg !4866
  br i1 %cmp126, label %if.then128, label %if.end161, !dbg !4867

if.then128:                                       ; preds = %if.end124
  store i64 0, i64* %y, align 8, !dbg !4868
  br label %for.cond129, !dbg !4871

for.cond129:                                      ; preds = %for.inc158, %if.then128
  %117 = load i64, i64* %y, align 8, !dbg !4872
  %118 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4874
  %height130 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %118, i32 0, i32 1, !dbg !4875
  %119 = load i64, i64* %height130, align 8, !dbg !4875
  %cmp131 = icmp slt i64 %117, %119, !dbg !4876
  br i1 %cmp131, label %for.body133, label %for.end160, !dbg !4877

for.body133:                                      ; preds = %for.cond129
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4878
  %121 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4880
  %x134 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %121, i32 0, i32 2, !dbg !4881
  %122 = load i64, i64* %x134, align 8, !dbg !4881
  %123 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4882
  %y135 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %123, i32 0, i32 3, !dbg !4883
  %124 = load i64, i64* %y135, align 8, !dbg !4883
  %125 = load i64, i64* %y, align 8, !dbg !4884
  %add136 = add nsw i64 %124, %125, !dbg !4885
  %126 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4886
  %width137 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %126, i32 0, i32 0, !dbg !4887
  %127 = load i64, i64* %width137, align 8, !dbg !4887
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4888
  %call138 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %120, i64 %122, i64 %add136, i64 %127, i64 1, %struct._ExceptionInfo* %128), !dbg !4889
  store %struct._PixelPacket* %call138, %struct._PixelPacket** %p, align 8, !dbg !4890
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4891
  %cmp139 = icmp eq %struct._PixelPacket* %129, null, !dbg !4893
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !4894

if.then141:                                       ; preds = %for.body133
  br label %for.end160, !dbg !4895

if.end142:                                        ; preds = %for.body133
  store i64 0, i64* %x, align 8, !dbg !4896
  br label %for.cond143, !dbg !4898

for.cond143:                                      ; preds = %for.inc155, %if.end142
  %130 = load i64, i64* %x, align 8, !dbg !4899
  %131 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4901
  %width144 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %131, i32 0, i32 0, !dbg !4902
  %132 = load i64, i64* %width144, align 8, !dbg !4902
  %cmp145 = icmp slt i64 %130, %132, !dbg !4903
  br i1 %cmp145, label %for.body147, label %for.end157, !dbg !4904

for.body147:                                      ; preds = %for.cond143
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4905
  %red148 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 2, !dbg !4905
  %134 = load i16, i16* %red148, align 2, !dbg !4905
  %135 = load i16*, i16** %q, align 8, !dbg !4907
  %incdec.ptr149 = getelementptr inbounds i16, i16* %135, i32 1, !dbg !4907
  store i16* %incdec.ptr149, i16** %q, align 8, !dbg !4907
  store i16 %134, i16* %135, align 2, !dbg !4908
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4909
  %green150 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !4909
  %137 = load i16, i16* %green150, align 2, !dbg !4909
  %138 = load i16*, i16** %q, align 8, !dbg !4910
  %incdec.ptr151 = getelementptr inbounds i16, i16* %138, i32 1, !dbg !4910
  store i16* %incdec.ptr151, i16** %q, align 8, !dbg !4910
  store i16 %137, i16* %138, align 2, !dbg !4911
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4912
  %blue152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 0, i32 0, !dbg !4912
  %140 = load i16, i16* %blue152, align 2, !dbg !4912
  %141 = load i16*, i16** %q, align 8, !dbg !4913
  %incdec.ptr153 = getelementptr inbounds i16, i16* %141, i32 1, !dbg !4913
  store i16* %incdec.ptr153, i16** %q, align 8, !dbg !4913
  store i16 %140, i16* %141, align 2, !dbg !4914
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4915
  %incdec.ptr154 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 1, !dbg !4915
  store %struct._PixelPacket* %incdec.ptr154, %struct._PixelPacket** %p, align 8, !dbg !4915
  br label %for.inc155, !dbg !4916

for.inc155:                                       ; preds = %for.body147
  %143 = load i64, i64* %x, align 8, !dbg !4917
  %inc156 = add nsw i64 %143, 1, !dbg !4917
  store i64 %inc156, i64* %x, align 8, !dbg !4917
  br label %for.cond143, !dbg !4918, !llvm.loop !4919

for.end157:                                       ; preds = %for.cond143
  br label %for.inc158, !dbg !4921

for.inc158:                                       ; preds = %for.end157
  %144 = load i64, i64* %y, align 8, !dbg !4922
  %inc159 = add nsw i64 %144, 1, !dbg !4922
  store i64 %inc159, i64* %y, align 8, !dbg !4922
  br label %for.cond129, !dbg !4923, !llvm.loop !4924

for.end160:                                       ; preds = %if.then141, %for.cond129
  br label %for.end302, !dbg !4926

if.end161:                                        ; preds = %if.end124
  %145 = load i8*, i8** %map.addr, align 8, !dbg !4927
  %call162 = call i32 @LocaleCompare(i8* %145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !4929
  %cmp163 = icmp eq i32 %call162, 0, !dbg !4930
  br i1 %cmp163, label %if.then165, label %if.end203, !dbg !4931

if.then165:                                       ; preds = %if.end161
  store i64 0, i64* %y, align 8, !dbg !4932
  br label %for.cond166, !dbg !4935

for.cond166:                                      ; preds = %for.inc200, %if.then165
  %146 = load i64, i64* %y, align 8, !dbg !4936
  %147 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4938
  %height167 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %147, i32 0, i32 1, !dbg !4939
  %148 = load i64, i64* %height167, align 8, !dbg !4939
  %cmp168 = icmp slt i64 %146, %148, !dbg !4940
  br i1 %cmp168, label %for.body170, label %for.end202, !dbg !4941

for.body170:                                      ; preds = %for.cond166
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4942
  %150 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4944
  %x171 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %150, i32 0, i32 2, !dbg !4945
  %151 = load i64, i64* %x171, align 8, !dbg !4945
  %152 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4946
  %y172 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %152, i32 0, i32 3, !dbg !4947
  %153 = load i64, i64* %y172, align 8, !dbg !4947
  %154 = load i64, i64* %y, align 8, !dbg !4948
  %add173 = add nsw i64 %153, %154, !dbg !4949
  %155 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4950
  %width174 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %155, i32 0, i32 0, !dbg !4951
  %156 = load i64, i64* %width174, align 8, !dbg !4951
  %157 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4952
  %call175 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %149, i64 %151, i64 %add173, i64 %156, i64 1, %struct._ExceptionInfo* %157), !dbg !4953
  store %struct._PixelPacket* %call175, %struct._PixelPacket** %p, align 8, !dbg !4954
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4955
  %cmp176 = icmp eq %struct._PixelPacket* %158, null, !dbg !4957
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !4958

if.then178:                                       ; preds = %for.body170
  br label %for.end202, !dbg !4959

if.end179:                                        ; preds = %for.body170
  store i64 0, i64* %x, align 8, !dbg !4960
  br label %for.cond180, !dbg !4962

for.cond180:                                      ; preds = %for.inc197, %if.end179
  %159 = load i64, i64* %x, align 8, !dbg !4963
  %160 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !4965
  %width181 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %160, i32 0, i32 0, !dbg !4966
  %161 = load i64, i64* %width181, align 8, !dbg !4966
  %cmp182 = icmp slt i64 %159, %161, !dbg !4967
  br i1 %cmp182, label %for.body184, label %for.end199, !dbg !4968

for.body184:                                      ; preds = %for.cond180
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4969
  %red185 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 2, !dbg !4969
  %163 = load i16, i16* %red185, align 2, !dbg !4969
  %164 = load i16*, i16** %q, align 8, !dbg !4971
  %incdec.ptr186 = getelementptr inbounds i16, i16* %164, i32 1, !dbg !4971
  store i16* %incdec.ptr186, i16** %q, align 8, !dbg !4971
  store i16 %163, i16* %164, align 2, !dbg !4972
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4973
  %green187 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i32 0, i32 1, !dbg !4973
  %166 = load i16, i16* %green187, align 2, !dbg !4973
  %167 = load i16*, i16** %q, align 8, !dbg !4974
  %incdec.ptr188 = getelementptr inbounds i16, i16* %167, i32 1, !dbg !4974
  store i16* %incdec.ptr188, i16** %q, align 8, !dbg !4974
  store i16 %166, i16* %167, align 2, !dbg !4975
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4976
  %blue189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 0, !dbg !4976
  %169 = load i16, i16* %blue189, align 2, !dbg !4976
  %170 = load i16*, i16** %q, align 8, !dbg !4977
  %incdec.ptr190 = getelementptr inbounds i16, i16* %170, i32 1, !dbg !4977
  store i16* %incdec.ptr190, i16** %q, align 8, !dbg !4977
  store i16 %169, i16* %170, align 2, !dbg !4978
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4979
  %opacity191 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 0, i32 3, !dbg !4979
  %172 = load i16, i16* %opacity191, align 2, !dbg !4979
  %conv192 = zext i16 %172 to i32, !dbg !4979
  %sub193 = sub nsw i32 65535, %conv192, !dbg !4979
  %conv194 = trunc i32 %sub193 to i16, !dbg !4980
  %173 = load i16*, i16** %q, align 8, !dbg !4981
  %incdec.ptr195 = getelementptr inbounds i16, i16* %173, i32 1, !dbg !4981
  store i16* %incdec.ptr195, i16** %q, align 8, !dbg !4981
  store i16 %conv194, i16* %173, align 2, !dbg !4982
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4983
  %incdec.ptr196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 1, !dbg !4983
  store %struct._PixelPacket* %incdec.ptr196, %struct._PixelPacket** %p, align 8, !dbg !4983
  br label %for.inc197, !dbg !4984

for.inc197:                                       ; preds = %for.body184
  %175 = load i64, i64* %x, align 8, !dbg !4985
  %inc198 = add nsw i64 %175, 1, !dbg !4985
  store i64 %inc198, i64* %x, align 8, !dbg !4985
  br label %for.cond180, !dbg !4986, !llvm.loop !4987

for.end199:                                       ; preds = %for.cond180
  br label %for.inc200, !dbg !4989

for.inc200:                                       ; preds = %for.end199
  %176 = load i64, i64* %y, align 8, !dbg !4990
  %inc201 = add nsw i64 %176, 1, !dbg !4990
  store i64 %inc201, i64* %y, align 8, !dbg !4990
  br label %for.cond166, !dbg !4991, !llvm.loop !4992

for.end202:                                       ; preds = %if.then178, %for.cond166
  br label %for.end302, !dbg !4994

if.end203:                                        ; preds = %if.end161
  %177 = load i8*, i8** %map.addr, align 8, !dbg !4995
  %call204 = call i32 @LocaleCompare(i8* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !4997
  %cmp205 = icmp eq i32 %call204, 0, !dbg !4998
  br i1 %cmp205, label %if.then207, label %if.end241, !dbg !4999

if.then207:                                       ; preds = %if.end203
  store i64 0, i64* %y, align 8, !dbg !5000
  br label %for.cond208, !dbg !5003

for.cond208:                                      ; preds = %for.inc238, %if.then207
  %178 = load i64, i64* %y, align 8, !dbg !5004
  %179 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5006
  %height209 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %179, i32 0, i32 1, !dbg !5007
  %180 = load i64, i64* %height209, align 8, !dbg !5007
  %cmp210 = icmp slt i64 %178, %180, !dbg !5008
  br i1 %cmp210, label %for.body212, label %for.end240, !dbg !5009

for.body212:                                      ; preds = %for.cond208
  %181 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5010
  %182 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5012
  %x213 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %182, i32 0, i32 2, !dbg !5013
  %183 = load i64, i64* %x213, align 8, !dbg !5013
  %184 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5014
  %y214 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %184, i32 0, i32 3, !dbg !5015
  %185 = load i64, i64* %y214, align 8, !dbg !5015
  %186 = load i64, i64* %y, align 8, !dbg !5016
  %add215 = add nsw i64 %185, %186, !dbg !5017
  %187 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5018
  %width216 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %187, i32 0, i32 0, !dbg !5019
  %188 = load i64, i64* %width216, align 8, !dbg !5019
  %189 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5020
  %call217 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %181, i64 %183, i64 %add215, i64 %188, i64 1, %struct._ExceptionInfo* %189), !dbg !5021
  store %struct._PixelPacket* %call217, %struct._PixelPacket** %p, align 8, !dbg !5022
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5023
  %cmp218 = icmp eq %struct._PixelPacket* %190, null, !dbg !5025
  br i1 %cmp218, label %if.then220, label %if.end221, !dbg !5026

if.then220:                                       ; preds = %for.body212
  br label %for.end240, !dbg !5027

if.end221:                                        ; preds = %for.body212
  store i64 0, i64* %x, align 8, !dbg !5028
  br label %for.cond222, !dbg !5030

for.cond222:                                      ; preds = %for.inc235, %if.end221
  %191 = load i64, i64* %x, align 8, !dbg !5031
  %192 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5033
  %width223 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %192, i32 0, i32 0, !dbg !5034
  %193 = load i64, i64* %width223, align 8, !dbg !5034
  %cmp224 = icmp slt i64 %191, %193, !dbg !5035
  br i1 %cmp224, label %for.body226, label %for.end237, !dbg !5036

for.body226:                                      ; preds = %for.cond222
  %194 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5037
  %red227 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %194, i32 0, i32 2, !dbg !5037
  %195 = load i16, i16* %red227, align 2, !dbg !5037
  %196 = load i16*, i16** %q, align 8, !dbg !5039
  %incdec.ptr228 = getelementptr inbounds i16, i16* %196, i32 1, !dbg !5039
  store i16* %incdec.ptr228, i16** %q, align 8, !dbg !5039
  store i16 %195, i16* %196, align 2, !dbg !5040
  %197 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5041
  %green229 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %197, i32 0, i32 1, !dbg !5041
  %198 = load i16, i16* %green229, align 2, !dbg !5041
  %199 = load i16*, i16** %q, align 8, !dbg !5042
  %incdec.ptr230 = getelementptr inbounds i16, i16* %199, i32 1, !dbg !5042
  store i16* %incdec.ptr230, i16** %q, align 8, !dbg !5042
  store i16 %198, i16* %199, align 2, !dbg !5043
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5044
  %blue231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 0, !dbg !5044
  %201 = load i16, i16* %blue231, align 2, !dbg !5044
  %202 = load i16*, i16** %q, align 8, !dbg !5045
  %incdec.ptr232 = getelementptr inbounds i16, i16* %202, i32 1, !dbg !5045
  store i16* %incdec.ptr232, i16** %q, align 8, !dbg !5045
  store i16 %201, i16* %202, align 2, !dbg !5046
  %203 = load i16*, i16** %q, align 8, !dbg !5047
  %incdec.ptr233 = getelementptr inbounds i16, i16* %203, i32 1, !dbg !5047
  store i16* %incdec.ptr233, i16** %q, align 8, !dbg !5047
  store i16 0, i16* %203, align 2, !dbg !5048
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5049
  %incdec.ptr234 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 1, !dbg !5049
  store %struct._PixelPacket* %incdec.ptr234, %struct._PixelPacket** %p, align 8, !dbg !5049
  br label %for.inc235, !dbg !5050

for.inc235:                                       ; preds = %for.body226
  %205 = load i64, i64* %x, align 8, !dbg !5051
  %inc236 = add nsw i64 %205, 1, !dbg !5051
  store i64 %inc236, i64* %x, align 8, !dbg !5051
  br label %for.cond222, !dbg !5052, !llvm.loop !5053

for.end237:                                       ; preds = %for.cond222
  br label %for.inc238, !dbg !5055

for.inc238:                                       ; preds = %for.end237
  %206 = load i64, i64* %y, align 8, !dbg !5056
  %inc239 = add nsw i64 %206, 1, !dbg !5056
  store i64 %inc239, i64* %y, align 8, !dbg !5056
  br label %for.cond208, !dbg !5057, !llvm.loop !5058

for.end240:                                       ; preds = %if.then220, %for.cond208
  br label %for.end302, !dbg !5060

if.end241:                                        ; preds = %if.end203
  %207 = load i8*, i8** %map.addr, align 8, !dbg !5061
  %call242 = call i64 @strlen(i8* %207) #13, !dbg !5062
  store i64 %call242, i64* %length, align 8, !dbg !5063
  store i64 0, i64* %y, align 8, !dbg !5064
  br label %for.cond243, !dbg !5066

for.cond243:                                      ; preds = %for.inc300, %if.end241
  %208 = load i64, i64* %y, align 8, !dbg !5067
  %209 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5069
  %height244 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %209, i32 0, i32 1, !dbg !5070
  %210 = load i64, i64* %height244, align 8, !dbg !5070
  %cmp245 = icmp slt i64 %208, %210, !dbg !5071
  br i1 %cmp245, label %for.body247, label %for.end302, !dbg !5072

for.body247:                                      ; preds = %for.cond243
  %211 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5073
  %212 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5075
  %x248 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %212, i32 0, i32 2, !dbg !5076
  %213 = load i64, i64* %x248, align 8, !dbg !5076
  %214 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5077
  %y249 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %214, i32 0, i32 3, !dbg !5078
  %215 = load i64, i64* %y249, align 8, !dbg !5078
  %216 = load i64, i64* %y, align 8, !dbg !5079
  %add250 = add nsw i64 %215, %216, !dbg !5080
  %217 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5081
  %width251 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %217, i32 0, i32 0, !dbg !5082
  %218 = load i64, i64* %width251, align 8, !dbg !5082
  %219 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5083
  %call252 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %211, i64 %213, i64 %add250, i64 %218, i64 1, %struct._ExceptionInfo* %219), !dbg !5084
  store %struct._PixelPacket* %call252, %struct._PixelPacket** %p, align 8, !dbg !5085
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5086
  %cmp253 = icmp eq %struct._PixelPacket* %220, null, !dbg !5088
  br i1 %cmp253, label %if.then255, label %if.end256, !dbg !5089

if.then255:                                       ; preds = %for.body247
  br label %for.end302, !dbg !5090

if.end256:                                        ; preds = %for.body247
  %221 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5091
  %call257 = call i16* @GetVirtualIndexQueue(%struct._Image* %221), !dbg !5092
  store i16* %call257, i16** %indexes, align 8, !dbg !5093
  store i64 0, i64* %x, align 8, !dbg !5094
  br label %for.cond258, !dbg !5096

for.cond258:                                      ; preds = %for.inc297, %if.end256
  %222 = load i64, i64* %x, align 8, !dbg !5097
  %223 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5099
  %width259 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %223, i32 0, i32 0, !dbg !5100
  %224 = load i64, i64* %width259, align 8, !dbg !5100
  %cmp260 = icmp slt i64 %222, %224, !dbg !5101
  br i1 %cmp260, label %for.body262, label %for.end299, !dbg !5102

for.body262:                                      ; preds = %for.cond258
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5103, metadata !DIExpression()), !dbg !5105
  store i64 0, i64* %i, align 8, !dbg !5106
  br label %for.cond263, !dbg !5108

for.cond263:                                      ; preds = %for.inc293, %for.body262
  %225 = load i64, i64* %i, align 8, !dbg !5109
  %226 = load i64, i64* %length, align 8, !dbg !5111
  %cmp264 = icmp slt i64 %225, %226, !dbg !5112
  br i1 %cmp264, label %for.body266, label %for.end295, !dbg !5113

for.body266:                                      ; preds = %for.cond263
  %227 = load i16*, i16** %q, align 8, !dbg !5114
  store i16 0, i16* %227, align 2, !dbg !5116
  %228 = load i32*, i32** %quantum_map.addr, align 8, !dbg !5117
  %229 = load i64, i64* %i, align 8, !dbg !5118
  %arrayidx = getelementptr inbounds i32, i32* %228, i64 %229, !dbg !5117
  %230 = load i32, i32* %arrayidx, align 4, !dbg !5117
  switch i32 %230, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb268
    i32 12, label %sw.bb268
    i32 3, label %sw.bb270
    i32 19, label %sw.bb270
    i32 1, label %sw.bb272
    i32 13, label %sw.bb277
    i32 2, label %sw.bb279
    i32 11, label %sw.bb289
  ], !dbg !5119

sw.bb:                                            ; preds = %for.body266, %for.body266
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5120
  %red267 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 0, i32 2, !dbg !5120
  %232 = load i16, i16* %red267, align 2, !dbg !5120
  %233 = load i16*, i16** %q, align 8, !dbg !5123
  store i16 %232, i16* %233, align 2, !dbg !5124
  br label %sw.epilog, !dbg !5125

sw.bb268:                                         ; preds = %for.body266, %for.body266
  %234 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5126
  %green269 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %234, i32 0, i32 1, !dbg !5126
  %235 = load i16, i16* %green269, align 2, !dbg !5126
  %236 = load i16*, i16** %q, align 8, !dbg !5128
  store i16 %235, i16* %236, align 2, !dbg !5129
  br label %sw.epilog, !dbg !5130

sw.bb270:                                         ; preds = %for.body266, %for.body266
  %237 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5131
  %blue271 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %237, i32 0, i32 0, !dbg !5131
  %238 = load i16, i16* %blue271, align 2, !dbg !5131
  %239 = load i16*, i16** %q, align 8, !dbg !5133
  store i16 %238, i16* %239, align 2, !dbg !5134
  br label %sw.epilog, !dbg !5135

sw.bb272:                                         ; preds = %for.body266
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5136
  %opacity273 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 3, !dbg !5136
  %241 = load i16, i16* %opacity273, align 2, !dbg !5136
  %conv274 = zext i16 %241 to i32, !dbg !5136
  %sub275 = sub nsw i32 65535, %conv274, !dbg !5136
  %conv276 = trunc i32 %sub275 to i16, !dbg !5138
  %242 = load i16*, i16** %q, align 8, !dbg !5139
  store i16 %conv276, i16* %242, align 2, !dbg !5140
  br label %sw.epilog, !dbg !5141

sw.bb277:                                         ; preds = %for.body266
  %243 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5142
  %opacity278 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %243, i32 0, i32 3, !dbg !5142
  %244 = load i16, i16* %opacity278, align 2, !dbg !5142
  %245 = load i16*, i16** %q, align 8, !dbg !5144
  store i16 %244, i16* %245, align 2, !dbg !5145
  br label %sw.epilog, !dbg !5146

sw.bb279:                                         ; preds = %for.body266
  %246 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5147
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %246, i32 0, i32 1, !dbg !5150
  %247 = load i32, i32* %colorspace, align 4, !dbg !5150
  %cmp280 = icmp eq i32 %247, 12, !dbg !5151
  br i1 %cmp280, label %if.then282, label %if.end288, !dbg !5152

if.then282:                                       ; preds = %sw.bb279
  %248 = load i16*, i16** %indexes, align 8, !dbg !5153
  %249 = load i64, i64* %x, align 8, !dbg !5153
  %add.ptr = getelementptr inbounds i16, i16* %248, i64 %249, !dbg !5153
  %cmp283 = icmp eq i16* %add.ptr, null, !dbg !5153
  br i1 %cmp283, label %cond.true, label %cond.false, !dbg !5153

cond.true:                                        ; preds = %if.then282
  br label %cond.end, !dbg !5153

cond.false:                                       ; preds = %if.then282
  %250 = load i16*, i16** %indexes, align 8, !dbg !5153
  %251 = load i64, i64* %x, align 8, !dbg !5153
  %add.ptr285 = getelementptr inbounds i16, i16* %250, i64 %251, !dbg !5153
  %252 = load i16, i16* %add.ptr285, align 2, !dbg !5153
  %conv286 = zext i16 %252 to i32, !dbg !5153
  br label %cond.end, !dbg !5153

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv286, %cond.false ], !dbg !5153
  %conv287 = trunc i32 %cond to i16, !dbg !5153
  %253 = load i16*, i16** %q, align 8, !dbg !5154
  store i16 %conv287, i16* %253, align 2, !dbg !5155
  br label %if.end288, !dbg !5156

if.end288:                                        ; preds = %cond.end, %sw.bb279
  br label %sw.epilog, !dbg !5157

sw.bb289:                                         ; preds = %for.body266
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5158
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5160
  %call290 = call float @GetPixelIntensity(%struct._Image* %254, %struct._PixelPacket* %255), !dbg !5161
  %call291 = call zeroext i16 @ClampToQuantum(float %call290), !dbg !5162
  %256 = load i16*, i16** %q, align 8, !dbg !5163
  store i16 %call291, i16* %256, align 2, !dbg !5164
  br label %sw.epilog, !dbg !5165

sw.default:                                       ; preds = %for.body266
  %257 = load i16*, i16** %q, align 8, !dbg !5166
  store i16 0, i16* %257, align 2, !dbg !5168
  br label %sw.epilog, !dbg !5169

sw.epilog:                                        ; preds = %sw.default, %sw.bb289, %if.end288, %sw.bb277, %sw.bb272, %sw.bb270, %sw.bb268, %sw.bb
  %258 = load i16*, i16** %q, align 8, !dbg !5170
  %incdec.ptr292 = getelementptr inbounds i16, i16* %258, i32 1, !dbg !5170
  store i16* %incdec.ptr292, i16** %q, align 8, !dbg !5170
  br label %for.inc293, !dbg !5171

for.inc293:                                       ; preds = %sw.epilog
  %259 = load i64, i64* %i, align 8, !dbg !5172
  %inc294 = add nsw i64 %259, 1, !dbg !5172
  store i64 %inc294, i64* %i, align 8, !dbg !5172
  br label %for.cond263, !dbg !5173, !llvm.loop !5174

for.end295:                                       ; preds = %for.cond263
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5176
  %incdec.ptr296 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %260, i32 1, !dbg !5176
  store %struct._PixelPacket* %incdec.ptr296, %struct._PixelPacket** %p, align 8, !dbg !5176
  br label %for.inc297, !dbg !5177

for.inc297:                                       ; preds = %for.end295
  %261 = load i64, i64* %x, align 8, !dbg !5178
  %inc298 = add nsw i64 %261, 1, !dbg !5178
  store i64 %inc298, i64* %x, align 8, !dbg !5178
  br label %for.cond258, !dbg !5179, !llvm.loop !5180

for.end299:                                       ; preds = %for.cond258
  br label %for.inc300, !dbg !5182

for.inc300:                                       ; preds = %for.end299
  %262 = load i64, i64* %y, align 8, !dbg !5183
  %inc301 = add nsw i64 %262, 1, !dbg !5183
  store i64 %inc301, i64* %y, align 8, !dbg !5183
  br label %for.cond243, !dbg !5184, !llvm.loop !5185

for.end302:                                       ; preds = %for.end16, %for.end51, %for.end89, %for.end123, %for.end160, %for.end202, %for.end240, %if.then255, %for.cond243
  ret void, !dbg !5187
}

; Function Attrs: noinline nounwind uwtable
define internal void @ExportShortPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !5188 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %q = alloca i16*, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5189, metadata !DIExpression()), !dbg !5190
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !5191, metadata !DIExpression()), !dbg !5192
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !5193, metadata !DIExpression()), !dbg !5194
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !5195, metadata !DIExpression()), !dbg !5196
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !5197, metadata !DIExpression()), !dbg !5198
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !5199, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !5201, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !5203, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5205, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.declare(metadata i16** %q, metadata !5207, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.declare(metadata i64* %length, metadata !5209, metadata !DIExpression()), !dbg !5210
  call void @llvm.dbg.declare(metadata i64* %y, metadata !5211, metadata !DIExpression()), !dbg !5212
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !5213
  %1 = bitcast i8* %0 to i16*, !dbg !5214
  store i16* %1, i16** %q, align 8, !dbg !5215
  %2 = load i8*, i8** %map.addr, align 8, !dbg !5216
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !5218
  %cmp = icmp eq i32 %call, 0, !dbg !5219
  br i1 %cmp, label %if.then, label %if.end20, !dbg !5220

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !5221
  br label %for.cond, !dbg !5224

for.cond:                                         ; preds = %for.inc17, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !5225
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5227
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !5228
  %5 = load i64, i64* %height, align 8, !dbg !5228
  %cmp1 = icmp slt i64 %3, %5, !dbg !5229
  br i1 %cmp1, label %for.body, label %for.end19, !dbg !5230

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5231
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5233
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !5234
  %8 = load i64, i64* %x2, align 8, !dbg !5234
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5235
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !5236
  %10 = load i64, i64* %y3, align 8, !dbg !5236
  %11 = load i64, i64* %y, align 8, !dbg !5237
  %add = add nsw i64 %10, %11, !dbg !5238
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5239
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !5240
  %13 = load i64, i64* %width, align 8, !dbg !5240
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5241
  %call4 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !5242
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %p, align 8, !dbg !5243
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5244
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !5246
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !5247

if.then6:                                         ; preds = %for.body
  br label %for.end19, !dbg !5248

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !5249
  br label %for.cond7, !dbg !5251

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !5252
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5254
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !5255
  %18 = load i64, i64* %width8, align 8, !dbg !5255
  %cmp9 = icmp slt i64 %16, %18, !dbg !5256
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !5257

for.body10:                                       ; preds = %for.cond7
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5258
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 0, i32 0, !dbg !5258
  %20 = load i16, i16* %blue, align 2, !dbg !5258
  %call11 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %20), !dbg !5260
  %21 = load i16*, i16** %q, align 8, !dbg !5261
  %incdec.ptr = getelementptr inbounds i16, i16* %21, i32 1, !dbg !5261
  store i16* %incdec.ptr, i16** %q, align 8, !dbg !5261
  store i16 %call11, i16* %21, align 2, !dbg !5262
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5263
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 1, !dbg !5263
  %23 = load i16, i16* %green, align 2, !dbg !5263
  %call12 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %23), !dbg !5264
  %24 = load i16*, i16** %q, align 8, !dbg !5265
  %incdec.ptr13 = getelementptr inbounds i16, i16* %24, i32 1, !dbg !5265
  store i16* %incdec.ptr13, i16** %q, align 8, !dbg !5265
  store i16 %call12, i16* %24, align 2, !dbg !5266
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5267
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 2, !dbg !5267
  %26 = load i16, i16* %red, align 2, !dbg !5267
  %call14 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %26), !dbg !5268
  %27 = load i16*, i16** %q, align 8, !dbg !5269
  %incdec.ptr15 = getelementptr inbounds i16, i16* %27, i32 1, !dbg !5269
  store i16* %incdec.ptr15, i16** %q, align 8, !dbg !5269
  store i16 %call14, i16* %27, align 2, !dbg !5270
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5271
  %incdec.ptr16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !5271
  store %struct._PixelPacket* %incdec.ptr16, %struct._PixelPacket** %p, align 8, !dbg !5271
  br label %for.inc, !dbg !5272

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !5273
  %inc = add nsw i64 %29, 1, !dbg !5273
  store i64 %inc, i64* %x, align 8, !dbg !5273
  br label %for.cond7, !dbg !5274, !llvm.loop !5275

for.end:                                          ; preds = %for.cond7
  br label %for.inc17, !dbg !5277

for.inc17:                                        ; preds = %for.end
  %30 = load i64, i64* %y, align 8, !dbg !5278
  %inc18 = add nsw i64 %30, 1, !dbg !5278
  store i64 %inc18, i64* %y, align 8, !dbg !5278
  br label %for.cond, !dbg !5279, !llvm.loop !5280

for.end19:                                        ; preds = %if.then6, %for.cond
  br label %for.end330, !dbg !5282

if.end20:                                         ; preds = %entry
  %31 = load i8*, i8** %map.addr, align 8, !dbg !5283
  %call21 = call i32 @LocaleCompare(i8* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !5285
  %cmp22 = icmp eq i32 %call21, 0, !dbg !5286
  br i1 %cmp22, label %if.then23, label %if.end59, !dbg !5287

if.then23:                                        ; preds = %if.end20
  store i64 0, i64* %y, align 8, !dbg !5288
  br label %for.cond24, !dbg !5291

for.cond24:                                       ; preds = %for.inc56, %if.then23
  %32 = load i64, i64* %y, align 8, !dbg !5292
  %33 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5294
  %height25 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %33, i32 0, i32 1, !dbg !5295
  %34 = load i64, i64* %height25, align 8, !dbg !5295
  %cmp26 = icmp slt i64 %32, %34, !dbg !5296
  br i1 %cmp26, label %for.body27, label %for.end58, !dbg !5297

for.body27:                                       ; preds = %for.cond24
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5298
  %36 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5300
  %x28 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %36, i32 0, i32 2, !dbg !5301
  %37 = load i64, i64* %x28, align 8, !dbg !5301
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5302
  %y29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 3, !dbg !5303
  %39 = load i64, i64* %y29, align 8, !dbg !5303
  %40 = load i64, i64* %y, align 8, !dbg !5304
  %add30 = add nsw i64 %39, %40, !dbg !5305
  %41 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5306
  %width31 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %41, i32 0, i32 0, !dbg !5307
  %42 = load i64, i64* %width31, align 8, !dbg !5307
  %43 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5308
  %call32 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %35, i64 %37, i64 %add30, i64 %42, i64 1, %struct._ExceptionInfo* %43), !dbg !5309
  store %struct._PixelPacket* %call32, %struct._PixelPacket** %p, align 8, !dbg !5310
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5311
  %cmp33 = icmp eq %struct._PixelPacket* %44, null, !dbg !5313
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !5314

if.then34:                                        ; preds = %for.body27
  br label %for.end58, !dbg !5315

if.end35:                                         ; preds = %for.body27
  store i64 0, i64* %x, align 8, !dbg !5316
  br label %for.cond36, !dbg !5318

for.cond36:                                       ; preds = %for.inc53, %if.end35
  %45 = load i64, i64* %x, align 8, !dbg !5319
  %46 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5321
  %width37 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %46, i32 0, i32 0, !dbg !5322
  %47 = load i64, i64* %width37, align 8, !dbg !5322
  %cmp38 = icmp slt i64 %45, %47, !dbg !5323
  br i1 %cmp38, label %for.body39, label %for.end55, !dbg !5324

for.body39:                                       ; preds = %for.cond36
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5325
  %blue40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 0, !dbg !5325
  %49 = load i16, i16* %blue40, align 2, !dbg !5325
  %call41 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %49), !dbg !5327
  %50 = load i16*, i16** %q, align 8, !dbg !5328
  %incdec.ptr42 = getelementptr inbounds i16, i16* %50, i32 1, !dbg !5328
  store i16* %incdec.ptr42, i16** %q, align 8, !dbg !5328
  store i16 %call41, i16* %50, align 2, !dbg !5329
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5330
  %green43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 0, i32 1, !dbg !5330
  %52 = load i16, i16* %green43, align 2, !dbg !5330
  %call44 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %52), !dbg !5331
  %53 = load i16*, i16** %q, align 8, !dbg !5332
  %incdec.ptr45 = getelementptr inbounds i16, i16* %53, i32 1, !dbg !5332
  store i16* %incdec.ptr45, i16** %q, align 8, !dbg !5332
  store i16 %call44, i16* %53, align 2, !dbg !5333
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5334
  %red46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !5334
  %55 = load i16, i16* %red46, align 2, !dbg !5334
  %call47 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %55), !dbg !5335
  %56 = load i16*, i16** %q, align 8, !dbg !5336
  %incdec.ptr48 = getelementptr inbounds i16, i16* %56, i32 1, !dbg !5336
  store i16* %incdec.ptr48, i16** %q, align 8, !dbg !5336
  store i16 %call47, i16* %56, align 2, !dbg !5337
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5338
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !5338
  %58 = load i16, i16* %opacity, align 2, !dbg !5338
  %conv = zext i16 %58 to i32, !dbg !5338
  %sub = sub nsw i32 65535, %conv, !dbg !5338
  %conv49 = trunc i32 %sub to i16, !dbg !5339
  %call50 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv49), !dbg !5340
  %59 = load i16*, i16** %q, align 8, !dbg !5341
  %incdec.ptr51 = getelementptr inbounds i16, i16* %59, i32 1, !dbg !5341
  store i16* %incdec.ptr51, i16** %q, align 8, !dbg !5341
  store i16 %call50, i16* %59, align 2, !dbg !5342
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5343
  %incdec.ptr52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 1, !dbg !5343
  store %struct._PixelPacket* %incdec.ptr52, %struct._PixelPacket** %p, align 8, !dbg !5343
  br label %for.inc53, !dbg !5344

for.inc53:                                        ; preds = %for.body39
  %61 = load i64, i64* %x, align 8, !dbg !5345
  %inc54 = add nsw i64 %61, 1, !dbg !5345
  store i64 %inc54, i64* %x, align 8, !dbg !5345
  br label %for.cond36, !dbg !5346, !llvm.loop !5347

for.end55:                                        ; preds = %for.cond36
  br label %for.inc56, !dbg !5349

for.inc56:                                        ; preds = %for.end55
  %62 = load i64, i64* %y, align 8, !dbg !5350
  %inc57 = add nsw i64 %62, 1, !dbg !5350
  store i64 %inc57, i64* %y, align 8, !dbg !5350
  br label %for.cond24, !dbg !5351, !llvm.loop !5352

for.end58:                                        ; preds = %if.then34, %for.cond24
  br label %for.end330, !dbg !5354

if.end59:                                         ; preds = %if.end20
  %63 = load i8*, i8** %map.addr, align 8, !dbg !5355
  %call60 = call i32 @LocaleCompare(i8* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !5357
  %cmp61 = icmp eq i32 %call60, 0, !dbg !5358
  br i1 %cmp61, label %if.then63, label %if.end100, !dbg !5359

if.then63:                                        ; preds = %if.end59
  store i64 0, i64* %y, align 8, !dbg !5360
  br label %for.cond64, !dbg !5363

for.cond64:                                       ; preds = %for.inc97, %if.then63
  %64 = load i64, i64* %y, align 8, !dbg !5364
  %65 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5366
  %height65 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %65, i32 0, i32 1, !dbg !5367
  %66 = load i64, i64* %height65, align 8, !dbg !5367
  %cmp66 = icmp slt i64 %64, %66, !dbg !5368
  br i1 %cmp66, label %for.body68, label %for.end99, !dbg !5369

for.body68:                                       ; preds = %for.cond64
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5370
  %68 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5372
  %x69 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %68, i32 0, i32 2, !dbg !5373
  %69 = load i64, i64* %x69, align 8, !dbg !5373
  %70 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5374
  %y70 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %70, i32 0, i32 3, !dbg !5375
  %71 = load i64, i64* %y70, align 8, !dbg !5375
  %72 = load i64, i64* %y, align 8, !dbg !5376
  %add71 = add nsw i64 %71, %72, !dbg !5377
  %73 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5378
  %width72 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %73, i32 0, i32 0, !dbg !5379
  %74 = load i64, i64* %width72, align 8, !dbg !5379
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5380
  %call73 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %67, i64 %69, i64 %add71, i64 %74, i64 1, %struct._ExceptionInfo* %75), !dbg !5381
  store %struct._PixelPacket* %call73, %struct._PixelPacket** %p, align 8, !dbg !5382
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5383
  %cmp74 = icmp eq %struct._PixelPacket* %76, null, !dbg !5385
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !5386

if.then76:                                        ; preds = %for.body68
  br label %for.end99, !dbg !5387

if.end77:                                         ; preds = %for.body68
  store i64 0, i64* %x, align 8, !dbg !5388
  br label %for.cond78, !dbg !5390

for.cond78:                                       ; preds = %for.inc94, %if.end77
  %77 = load i64, i64* %x, align 8, !dbg !5391
  %78 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5393
  %width79 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %78, i32 0, i32 0, !dbg !5394
  %79 = load i64, i64* %width79, align 8, !dbg !5394
  %cmp80 = icmp slt i64 %77, %79, !dbg !5395
  br i1 %cmp80, label %for.body82, label %for.end96, !dbg !5396

for.body82:                                       ; preds = %for.cond78
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5397
  %blue83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 0, !dbg !5397
  %81 = load i16, i16* %blue83, align 2, !dbg !5397
  %call84 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %81), !dbg !5399
  %82 = load i16*, i16** %q, align 8, !dbg !5400
  %incdec.ptr85 = getelementptr inbounds i16, i16* %82, i32 1, !dbg !5400
  store i16* %incdec.ptr85, i16** %q, align 8, !dbg !5400
  store i16 %call84, i16* %82, align 2, !dbg !5401
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5402
  %green86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 1, !dbg !5402
  %84 = load i16, i16* %green86, align 2, !dbg !5402
  %call87 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %84), !dbg !5403
  %85 = load i16*, i16** %q, align 8, !dbg !5404
  %incdec.ptr88 = getelementptr inbounds i16, i16* %85, i32 1, !dbg !5404
  store i16* %incdec.ptr88, i16** %q, align 8, !dbg !5404
  store i16 %call87, i16* %85, align 2, !dbg !5405
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5406
  %red89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 2, !dbg !5406
  %87 = load i16, i16* %red89, align 2, !dbg !5406
  %call90 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %87), !dbg !5407
  %88 = load i16*, i16** %q, align 8, !dbg !5408
  %incdec.ptr91 = getelementptr inbounds i16, i16* %88, i32 1, !dbg !5408
  store i16* %incdec.ptr91, i16** %q, align 8, !dbg !5408
  store i16 %call90, i16* %88, align 2, !dbg !5409
  %89 = load i16*, i16** %q, align 8, !dbg !5410
  %incdec.ptr92 = getelementptr inbounds i16, i16* %89, i32 1, !dbg !5410
  store i16* %incdec.ptr92, i16** %q, align 8, !dbg !5410
  store i16 0, i16* %89, align 2, !dbg !5411
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5412
  %incdec.ptr93 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 1, !dbg !5412
  store %struct._PixelPacket* %incdec.ptr93, %struct._PixelPacket** %p, align 8, !dbg !5412
  br label %for.inc94, !dbg !5413

for.inc94:                                        ; preds = %for.body82
  %91 = load i64, i64* %x, align 8, !dbg !5414
  %inc95 = add nsw i64 %91, 1, !dbg !5414
  store i64 %inc95, i64* %x, align 8, !dbg !5414
  br label %for.cond78, !dbg !5415, !llvm.loop !5416

for.end96:                                        ; preds = %for.cond78
  br label %for.inc97, !dbg !5418

for.inc97:                                        ; preds = %for.end96
  %92 = load i64, i64* %y, align 8, !dbg !5419
  %inc98 = add nsw i64 %92, 1, !dbg !5419
  store i64 %inc98, i64* %y, align 8, !dbg !5419
  br label %for.cond64, !dbg !5420, !llvm.loop !5421

for.end99:                                        ; preds = %if.then76, %for.cond64
  br label %for.end330, !dbg !5423

if.end100:                                        ; preds = %if.end59
  %93 = load i8*, i8** %map.addr, align 8, !dbg !5424
  %call101 = call i32 @LocaleCompare(i8* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !5426
  %cmp102 = icmp eq i32 %call101, 0, !dbg !5427
  br i1 %cmp102, label %if.then104, label %if.end135, !dbg !5428

if.then104:                                       ; preds = %if.end100
  store i64 0, i64* %y, align 8, !dbg !5429
  br label %for.cond105, !dbg !5432

for.cond105:                                      ; preds = %for.inc132, %if.then104
  %94 = load i64, i64* %y, align 8, !dbg !5433
  %95 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5435
  %height106 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %95, i32 0, i32 1, !dbg !5436
  %96 = load i64, i64* %height106, align 8, !dbg !5436
  %cmp107 = icmp slt i64 %94, %96, !dbg !5437
  br i1 %cmp107, label %for.body109, label %for.end134, !dbg !5438

for.body109:                                      ; preds = %for.cond105
  %97 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5439
  %98 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5441
  %x110 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %98, i32 0, i32 2, !dbg !5442
  %99 = load i64, i64* %x110, align 8, !dbg !5442
  %100 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5443
  %y111 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %100, i32 0, i32 3, !dbg !5444
  %101 = load i64, i64* %y111, align 8, !dbg !5444
  %102 = load i64, i64* %y, align 8, !dbg !5445
  %add112 = add nsw i64 %101, %102, !dbg !5446
  %103 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5447
  %width113 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %103, i32 0, i32 0, !dbg !5448
  %104 = load i64, i64* %width113, align 8, !dbg !5448
  %105 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5449
  %call114 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %97, i64 %99, i64 %add112, i64 %104, i64 1, %struct._ExceptionInfo* %105), !dbg !5450
  store %struct._PixelPacket* %call114, %struct._PixelPacket** %p, align 8, !dbg !5451
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5452
  %cmp115 = icmp eq %struct._PixelPacket* %106, null, !dbg !5454
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !5455

if.then117:                                       ; preds = %for.body109
  br label %for.end134, !dbg !5456

if.end118:                                        ; preds = %for.body109
  store i64 0, i64* %x, align 8, !dbg !5457
  br label %for.cond119, !dbg !5459

for.cond119:                                      ; preds = %for.inc129, %if.end118
  %107 = load i64, i64* %x, align 8, !dbg !5460
  %108 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5462
  %width120 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %108, i32 0, i32 0, !dbg !5463
  %109 = load i64, i64* %width120, align 8, !dbg !5463
  %cmp121 = icmp slt i64 %107, %109, !dbg !5464
  br i1 %cmp121, label %for.body123, label %for.end131, !dbg !5465

for.body123:                                      ; preds = %for.cond119
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5466
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5468
  %call124 = call float @GetPixelIntensity(%struct._Image* %110, %struct._PixelPacket* %111), !dbg !5469
  %call125 = call zeroext i16 @ClampToQuantum(float %call124), !dbg !5470
  %call126 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %call125), !dbg !5471
  %112 = load i16*, i16** %q, align 8, !dbg !5472
  %incdec.ptr127 = getelementptr inbounds i16, i16* %112, i32 1, !dbg !5472
  store i16* %incdec.ptr127, i16** %q, align 8, !dbg !5472
  store i16 %call126, i16* %112, align 2, !dbg !5473
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5474
  %incdec.ptr128 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !5474
  store %struct._PixelPacket* %incdec.ptr128, %struct._PixelPacket** %p, align 8, !dbg !5474
  br label %for.inc129, !dbg !5475

for.inc129:                                       ; preds = %for.body123
  %114 = load i64, i64* %x, align 8, !dbg !5476
  %inc130 = add nsw i64 %114, 1, !dbg !5476
  store i64 %inc130, i64* %x, align 8, !dbg !5476
  br label %for.cond119, !dbg !5477, !llvm.loop !5478

for.end131:                                       ; preds = %for.cond119
  br label %for.inc132, !dbg !5480

for.inc132:                                       ; preds = %for.end131
  %115 = load i64, i64* %y, align 8, !dbg !5481
  %inc133 = add nsw i64 %115, 1, !dbg !5481
  store i64 %inc133, i64* %y, align 8, !dbg !5481
  br label %for.cond105, !dbg !5482, !llvm.loop !5483

for.end134:                                       ; preds = %if.then117, %for.cond105
  br label %for.end330, !dbg !5485

if.end135:                                        ; preds = %if.end100
  %116 = load i8*, i8** %map.addr, align 8, !dbg !5486
  %call136 = call i32 @LocaleCompare(i8* %116, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !5488
  %cmp137 = icmp eq i32 %call136, 0, !dbg !5489
  br i1 %cmp137, label %if.then139, label %if.end175, !dbg !5490

if.then139:                                       ; preds = %if.end135
  store i64 0, i64* %y, align 8, !dbg !5491
  br label %for.cond140, !dbg !5494

for.cond140:                                      ; preds = %for.inc172, %if.then139
  %117 = load i64, i64* %y, align 8, !dbg !5495
  %118 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5497
  %height141 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %118, i32 0, i32 1, !dbg !5498
  %119 = load i64, i64* %height141, align 8, !dbg !5498
  %cmp142 = icmp slt i64 %117, %119, !dbg !5499
  br i1 %cmp142, label %for.body144, label %for.end174, !dbg !5500

for.body144:                                      ; preds = %for.cond140
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5501
  %121 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5503
  %x145 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %121, i32 0, i32 2, !dbg !5504
  %122 = load i64, i64* %x145, align 8, !dbg !5504
  %123 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5505
  %y146 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %123, i32 0, i32 3, !dbg !5506
  %124 = load i64, i64* %y146, align 8, !dbg !5506
  %125 = load i64, i64* %y, align 8, !dbg !5507
  %add147 = add nsw i64 %124, %125, !dbg !5508
  %126 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5509
  %width148 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %126, i32 0, i32 0, !dbg !5510
  %127 = load i64, i64* %width148, align 8, !dbg !5510
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5511
  %call149 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %120, i64 %122, i64 %add147, i64 %127, i64 1, %struct._ExceptionInfo* %128), !dbg !5512
  store %struct._PixelPacket* %call149, %struct._PixelPacket** %p, align 8, !dbg !5513
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5514
  %cmp150 = icmp eq %struct._PixelPacket* %129, null, !dbg !5516
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !5517

if.then152:                                       ; preds = %for.body144
  br label %for.end174, !dbg !5518

if.end153:                                        ; preds = %for.body144
  store i64 0, i64* %x, align 8, !dbg !5519
  br label %for.cond154, !dbg !5521

for.cond154:                                      ; preds = %for.inc169, %if.end153
  %130 = load i64, i64* %x, align 8, !dbg !5522
  %131 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5524
  %width155 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %131, i32 0, i32 0, !dbg !5525
  %132 = load i64, i64* %width155, align 8, !dbg !5525
  %cmp156 = icmp slt i64 %130, %132, !dbg !5526
  br i1 %cmp156, label %for.body158, label %for.end171, !dbg !5527

for.body158:                                      ; preds = %for.cond154
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5528
  %red159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 2, !dbg !5528
  %134 = load i16, i16* %red159, align 2, !dbg !5528
  %call160 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %134), !dbg !5530
  %135 = load i16*, i16** %q, align 8, !dbg !5531
  %incdec.ptr161 = getelementptr inbounds i16, i16* %135, i32 1, !dbg !5531
  store i16* %incdec.ptr161, i16** %q, align 8, !dbg !5531
  store i16 %call160, i16* %135, align 2, !dbg !5532
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5533
  %green162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !5533
  %137 = load i16, i16* %green162, align 2, !dbg !5533
  %call163 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %137), !dbg !5534
  %138 = load i16*, i16** %q, align 8, !dbg !5535
  %incdec.ptr164 = getelementptr inbounds i16, i16* %138, i32 1, !dbg !5535
  store i16* %incdec.ptr164, i16** %q, align 8, !dbg !5535
  store i16 %call163, i16* %138, align 2, !dbg !5536
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5537
  %blue165 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 0, i32 0, !dbg !5537
  %140 = load i16, i16* %blue165, align 2, !dbg !5537
  %call166 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %140), !dbg !5538
  %141 = load i16*, i16** %q, align 8, !dbg !5539
  %incdec.ptr167 = getelementptr inbounds i16, i16* %141, i32 1, !dbg !5539
  store i16* %incdec.ptr167, i16** %q, align 8, !dbg !5539
  store i16 %call166, i16* %141, align 2, !dbg !5540
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5541
  %incdec.ptr168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 1, !dbg !5541
  store %struct._PixelPacket* %incdec.ptr168, %struct._PixelPacket** %p, align 8, !dbg !5541
  br label %for.inc169, !dbg !5542

for.inc169:                                       ; preds = %for.body158
  %143 = load i64, i64* %x, align 8, !dbg !5543
  %inc170 = add nsw i64 %143, 1, !dbg !5543
  store i64 %inc170, i64* %x, align 8, !dbg !5543
  br label %for.cond154, !dbg !5544, !llvm.loop !5545

for.end171:                                       ; preds = %for.cond154
  br label %for.inc172, !dbg !5547

for.inc172:                                       ; preds = %for.end171
  %144 = load i64, i64* %y, align 8, !dbg !5548
  %inc173 = add nsw i64 %144, 1, !dbg !5548
  store i64 %inc173, i64* %y, align 8, !dbg !5548
  br label %for.cond140, !dbg !5549, !llvm.loop !5550

for.end174:                                       ; preds = %if.then152, %for.cond140
  br label %for.end330, !dbg !5552

if.end175:                                        ; preds = %if.end135
  %145 = load i8*, i8** %map.addr, align 8, !dbg !5553
  %call176 = call i32 @LocaleCompare(i8* %145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !5555
  %cmp177 = icmp eq i32 %call176, 0, !dbg !5556
  br i1 %cmp177, label %if.then179, label %if.end221, !dbg !5557

if.then179:                                       ; preds = %if.end175
  store i64 0, i64* %y, align 8, !dbg !5558
  br label %for.cond180, !dbg !5561

for.cond180:                                      ; preds = %for.inc218, %if.then179
  %146 = load i64, i64* %y, align 8, !dbg !5562
  %147 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5564
  %height181 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %147, i32 0, i32 1, !dbg !5565
  %148 = load i64, i64* %height181, align 8, !dbg !5565
  %cmp182 = icmp slt i64 %146, %148, !dbg !5566
  br i1 %cmp182, label %for.body184, label %for.end220, !dbg !5567

for.body184:                                      ; preds = %for.cond180
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5568
  %150 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5570
  %x185 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %150, i32 0, i32 2, !dbg !5571
  %151 = load i64, i64* %x185, align 8, !dbg !5571
  %152 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5572
  %y186 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %152, i32 0, i32 3, !dbg !5573
  %153 = load i64, i64* %y186, align 8, !dbg !5573
  %154 = load i64, i64* %y, align 8, !dbg !5574
  %add187 = add nsw i64 %153, %154, !dbg !5575
  %155 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5576
  %width188 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %155, i32 0, i32 0, !dbg !5577
  %156 = load i64, i64* %width188, align 8, !dbg !5577
  %157 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5578
  %call189 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %149, i64 %151, i64 %add187, i64 %156, i64 1, %struct._ExceptionInfo* %157), !dbg !5579
  store %struct._PixelPacket* %call189, %struct._PixelPacket** %p, align 8, !dbg !5580
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5581
  %cmp190 = icmp eq %struct._PixelPacket* %158, null, !dbg !5583
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !5584

if.then192:                                       ; preds = %for.body184
  br label %for.end220, !dbg !5585

if.end193:                                        ; preds = %for.body184
  store i64 0, i64* %x, align 8, !dbg !5586
  br label %for.cond194, !dbg !5588

for.cond194:                                      ; preds = %for.inc215, %if.end193
  %159 = load i64, i64* %x, align 8, !dbg !5589
  %160 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5591
  %width195 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %160, i32 0, i32 0, !dbg !5592
  %161 = load i64, i64* %width195, align 8, !dbg !5592
  %cmp196 = icmp slt i64 %159, %161, !dbg !5593
  br i1 %cmp196, label %for.body198, label %for.end217, !dbg !5594

for.body198:                                      ; preds = %for.cond194
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5595
  %red199 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 2, !dbg !5595
  %163 = load i16, i16* %red199, align 2, !dbg !5595
  %call200 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %163), !dbg !5597
  %164 = load i16*, i16** %q, align 8, !dbg !5598
  %incdec.ptr201 = getelementptr inbounds i16, i16* %164, i32 1, !dbg !5598
  store i16* %incdec.ptr201, i16** %q, align 8, !dbg !5598
  store i16 %call200, i16* %164, align 2, !dbg !5599
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5600
  %green202 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i32 0, i32 1, !dbg !5600
  %166 = load i16, i16* %green202, align 2, !dbg !5600
  %call203 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %166), !dbg !5601
  %167 = load i16*, i16** %q, align 8, !dbg !5602
  %incdec.ptr204 = getelementptr inbounds i16, i16* %167, i32 1, !dbg !5602
  store i16* %incdec.ptr204, i16** %q, align 8, !dbg !5602
  store i16 %call203, i16* %167, align 2, !dbg !5603
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5604
  %blue205 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 0, !dbg !5604
  %169 = load i16, i16* %blue205, align 2, !dbg !5604
  %call206 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %169), !dbg !5605
  %170 = load i16*, i16** %q, align 8, !dbg !5606
  %incdec.ptr207 = getelementptr inbounds i16, i16* %170, i32 1, !dbg !5606
  store i16* %incdec.ptr207, i16** %q, align 8, !dbg !5606
  store i16 %call206, i16* %170, align 2, !dbg !5607
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5608
  %opacity208 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 0, i32 3, !dbg !5608
  %172 = load i16, i16* %opacity208, align 2, !dbg !5608
  %conv209 = zext i16 %172 to i32, !dbg !5608
  %sub210 = sub nsw i32 65535, %conv209, !dbg !5608
  %conv211 = trunc i32 %sub210 to i16, !dbg !5609
  %call212 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv211), !dbg !5610
  %173 = load i16*, i16** %q, align 8, !dbg !5611
  %incdec.ptr213 = getelementptr inbounds i16, i16* %173, i32 1, !dbg !5611
  store i16* %incdec.ptr213, i16** %q, align 8, !dbg !5611
  store i16 %call212, i16* %173, align 2, !dbg !5612
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5613
  %incdec.ptr214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 1, !dbg !5613
  store %struct._PixelPacket* %incdec.ptr214, %struct._PixelPacket** %p, align 8, !dbg !5613
  br label %for.inc215, !dbg !5614

for.inc215:                                       ; preds = %for.body198
  %175 = load i64, i64* %x, align 8, !dbg !5615
  %inc216 = add nsw i64 %175, 1, !dbg !5615
  store i64 %inc216, i64* %x, align 8, !dbg !5615
  br label %for.cond194, !dbg !5616, !llvm.loop !5617

for.end217:                                       ; preds = %for.cond194
  br label %for.inc218, !dbg !5619

for.inc218:                                       ; preds = %for.end217
  %176 = load i64, i64* %y, align 8, !dbg !5620
  %inc219 = add nsw i64 %176, 1, !dbg !5620
  store i64 %inc219, i64* %y, align 8, !dbg !5620
  br label %for.cond180, !dbg !5621, !llvm.loop !5622

for.end220:                                       ; preds = %if.then192, %for.cond180
  br label %for.end330, !dbg !5624

if.end221:                                        ; preds = %if.end175
  %177 = load i8*, i8** %map.addr, align 8, !dbg !5625
  %call222 = call i32 @LocaleCompare(i8* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !5627
  %cmp223 = icmp eq i32 %call222, 0, !dbg !5628
  br i1 %cmp223, label %if.then225, label %if.end262, !dbg !5629

if.then225:                                       ; preds = %if.end221
  store i64 0, i64* %y, align 8, !dbg !5630
  br label %for.cond226, !dbg !5633

for.cond226:                                      ; preds = %for.inc259, %if.then225
  %178 = load i64, i64* %y, align 8, !dbg !5634
  %179 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5636
  %height227 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %179, i32 0, i32 1, !dbg !5637
  %180 = load i64, i64* %height227, align 8, !dbg !5637
  %cmp228 = icmp slt i64 %178, %180, !dbg !5638
  br i1 %cmp228, label %for.body230, label %for.end261, !dbg !5639

for.body230:                                      ; preds = %for.cond226
  %181 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5640
  %182 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5642
  %x231 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %182, i32 0, i32 2, !dbg !5643
  %183 = load i64, i64* %x231, align 8, !dbg !5643
  %184 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5644
  %y232 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %184, i32 0, i32 3, !dbg !5645
  %185 = load i64, i64* %y232, align 8, !dbg !5645
  %186 = load i64, i64* %y, align 8, !dbg !5646
  %add233 = add nsw i64 %185, %186, !dbg !5647
  %187 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5648
  %width234 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %187, i32 0, i32 0, !dbg !5649
  %188 = load i64, i64* %width234, align 8, !dbg !5649
  %189 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5650
  %call235 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %181, i64 %183, i64 %add233, i64 %188, i64 1, %struct._ExceptionInfo* %189), !dbg !5651
  store %struct._PixelPacket* %call235, %struct._PixelPacket** %p, align 8, !dbg !5652
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5653
  %cmp236 = icmp eq %struct._PixelPacket* %190, null, !dbg !5655
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !5656

if.then238:                                       ; preds = %for.body230
  br label %for.end261, !dbg !5657

if.end239:                                        ; preds = %for.body230
  store i64 0, i64* %x, align 8, !dbg !5658
  br label %for.cond240, !dbg !5660

for.cond240:                                      ; preds = %for.inc256, %if.end239
  %191 = load i64, i64* %x, align 8, !dbg !5661
  %192 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5663
  %width241 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %192, i32 0, i32 0, !dbg !5664
  %193 = load i64, i64* %width241, align 8, !dbg !5664
  %cmp242 = icmp slt i64 %191, %193, !dbg !5665
  br i1 %cmp242, label %for.body244, label %for.end258, !dbg !5666

for.body244:                                      ; preds = %for.cond240
  %194 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5667
  %red245 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %194, i32 0, i32 2, !dbg !5667
  %195 = load i16, i16* %red245, align 2, !dbg !5667
  %call246 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %195), !dbg !5669
  %196 = load i16*, i16** %q, align 8, !dbg !5670
  %incdec.ptr247 = getelementptr inbounds i16, i16* %196, i32 1, !dbg !5670
  store i16* %incdec.ptr247, i16** %q, align 8, !dbg !5670
  store i16 %call246, i16* %196, align 2, !dbg !5671
  %197 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5672
  %green248 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %197, i32 0, i32 1, !dbg !5672
  %198 = load i16, i16* %green248, align 2, !dbg !5672
  %call249 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %198), !dbg !5673
  %199 = load i16*, i16** %q, align 8, !dbg !5674
  %incdec.ptr250 = getelementptr inbounds i16, i16* %199, i32 1, !dbg !5674
  store i16* %incdec.ptr250, i16** %q, align 8, !dbg !5674
  store i16 %call249, i16* %199, align 2, !dbg !5675
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5676
  %blue251 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 0, !dbg !5676
  %201 = load i16, i16* %blue251, align 2, !dbg !5676
  %call252 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %201), !dbg !5677
  %202 = load i16*, i16** %q, align 8, !dbg !5678
  %incdec.ptr253 = getelementptr inbounds i16, i16* %202, i32 1, !dbg !5678
  store i16* %incdec.ptr253, i16** %q, align 8, !dbg !5678
  store i16 %call252, i16* %202, align 2, !dbg !5679
  %203 = load i16*, i16** %q, align 8, !dbg !5680
  %incdec.ptr254 = getelementptr inbounds i16, i16* %203, i32 1, !dbg !5680
  store i16* %incdec.ptr254, i16** %q, align 8, !dbg !5680
  store i16 0, i16* %203, align 2, !dbg !5681
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5682
  %incdec.ptr255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 1, !dbg !5682
  store %struct._PixelPacket* %incdec.ptr255, %struct._PixelPacket** %p, align 8, !dbg !5682
  br label %for.inc256, !dbg !5683

for.inc256:                                       ; preds = %for.body244
  %205 = load i64, i64* %x, align 8, !dbg !5684
  %inc257 = add nsw i64 %205, 1, !dbg !5684
  store i64 %inc257, i64* %x, align 8, !dbg !5684
  br label %for.cond240, !dbg !5685, !llvm.loop !5686

for.end258:                                       ; preds = %for.cond240
  br label %for.inc259, !dbg !5688

for.inc259:                                       ; preds = %for.end258
  %206 = load i64, i64* %y, align 8, !dbg !5689
  %inc260 = add nsw i64 %206, 1, !dbg !5689
  store i64 %inc260, i64* %y, align 8, !dbg !5689
  br label %for.cond226, !dbg !5690, !llvm.loop !5691

for.end261:                                       ; preds = %if.then238, %for.cond226
  br label %for.end330, !dbg !5693

if.end262:                                        ; preds = %if.end221
  %207 = load i8*, i8** %map.addr, align 8, !dbg !5694
  %call263 = call i64 @strlen(i8* %207) #13, !dbg !5695
  store i64 %call263, i64* %length, align 8, !dbg !5696
  store i64 0, i64* %y, align 8, !dbg !5697
  br label %for.cond264, !dbg !5699

for.cond264:                                      ; preds = %for.inc328, %if.end262
  %208 = load i64, i64* %y, align 8, !dbg !5700
  %209 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5702
  %height265 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %209, i32 0, i32 1, !dbg !5703
  %210 = load i64, i64* %height265, align 8, !dbg !5703
  %cmp266 = icmp slt i64 %208, %210, !dbg !5704
  br i1 %cmp266, label %for.body268, label %for.end330, !dbg !5705

for.body268:                                      ; preds = %for.cond264
  %211 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5706
  %212 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5708
  %x269 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %212, i32 0, i32 2, !dbg !5709
  %213 = load i64, i64* %x269, align 8, !dbg !5709
  %214 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5710
  %y270 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %214, i32 0, i32 3, !dbg !5711
  %215 = load i64, i64* %y270, align 8, !dbg !5711
  %216 = load i64, i64* %y, align 8, !dbg !5712
  %add271 = add nsw i64 %215, %216, !dbg !5713
  %217 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5714
  %width272 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %217, i32 0, i32 0, !dbg !5715
  %218 = load i64, i64* %width272, align 8, !dbg !5715
  %219 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5716
  %call273 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %211, i64 %213, i64 %add271, i64 %218, i64 1, %struct._ExceptionInfo* %219), !dbg !5717
  store %struct._PixelPacket* %call273, %struct._PixelPacket** %p, align 8, !dbg !5718
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5719
  %cmp274 = icmp eq %struct._PixelPacket* %220, null, !dbg !5721
  br i1 %cmp274, label %if.then276, label %if.end277, !dbg !5722

if.then276:                                       ; preds = %for.body268
  br label %for.end330, !dbg !5723

if.end277:                                        ; preds = %for.body268
  %221 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5724
  %call278 = call i16* @GetVirtualIndexQueue(%struct._Image* %221), !dbg !5725
  store i16* %call278, i16** %indexes, align 8, !dbg !5726
  store i64 0, i64* %x, align 8, !dbg !5727
  br label %for.cond279, !dbg !5729

for.cond279:                                      ; preds = %for.inc325, %if.end277
  %222 = load i64, i64* %x, align 8, !dbg !5730
  %223 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !5732
  %width280 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %223, i32 0, i32 0, !dbg !5733
  %224 = load i64, i64* %width280, align 8, !dbg !5733
  %cmp281 = icmp slt i64 %222, %224, !dbg !5734
  br i1 %cmp281, label %for.body283, label %for.end327, !dbg !5735

for.body283:                                      ; preds = %for.cond279
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5736, metadata !DIExpression()), !dbg !5738
  store i64 0, i64* %i, align 8, !dbg !5739
  br label %for.cond284, !dbg !5741

for.cond284:                                      ; preds = %for.inc321, %for.body283
  %225 = load i64, i64* %i, align 8, !dbg !5742
  %226 = load i64, i64* %length, align 8, !dbg !5744
  %cmp285 = icmp slt i64 %225, %226, !dbg !5745
  br i1 %cmp285, label %for.body287, label %for.end323, !dbg !5746

for.body287:                                      ; preds = %for.cond284
  %227 = load i16*, i16** %q, align 8, !dbg !5747
  store i16 0, i16* %227, align 2, !dbg !5749
  %228 = load i32*, i32** %quantum_map.addr, align 8, !dbg !5750
  %229 = load i64, i64* %i, align 8, !dbg !5751
  %arrayidx = getelementptr inbounds i32, i32* %228, i64 %229, !dbg !5750
  %230 = load i32, i32* %arrayidx, align 4, !dbg !5750
  switch i32 %230, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb290
    i32 12, label %sw.bb290
    i32 3, label %sw.bb293
    i32 19, label %sw.bb293
    i32 1, label %sw.bb296
    i32 13, label %sw.bb302
    i32 2, label %sw.bb305
    i32 11, label %sw.bb316
  ], !dbg !5752

sw.bb:                                            ; preds = %for.body287, %for.body287
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5753
  %red288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 0, i32 2, !dbg !5753
  %232 = load i16, i16* %red288, align 2, !dbg !5753
  %call289 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %232), !dbg !5756
  %233 = load i16*, i16** %q, align 8, !dbg !5757
  store i16 %call289, i16* %233, align 2, !dbg !5758
  br label %sw.epilog, !dbg !5759

sw.bb290:                                         ; preds = %for.body287, %for.body287
  %234 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5760
  %green291 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %234, i32 0, i32 1, !dbg !5760
  %235 = load i16, i16* %green291, align 2, !dbg !5760
  %call292 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %235), !dbg !5762
  %236 = load i16*, i16** %q, align 8, !dbg !5763
  store i16 %call292, i16* %236, align 2, !dbg !5764
  br label %sw.epilog, !dbg !5765

sw.bb293:                                         ; preds = %for.body287, %for.body287
  %237 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5766
  %blue294 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %237, i32 0, i32 0, !dbg !5766
  %238 = load i16, i16* %blue294, align 2, !dbg !5766
  %call295 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %238), !dbg !5768
  %239 = load i16*, i16** %q, align 8, !dbg !5769
  store i16 %call295, i16* %239, align 2, !dbg !5770
  br label %sw.epilog, !dbg !5771

sw.bb296:                                         ; preds = %for.body287
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5772
  %opacity297 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 3, !dbg !5772
  %241 = load i16, i16* %opacity297, align 2, !dbg !5772
  %conv298 = zext i16 %241 to i32, !dbg !5772
  %sub299 = sub nsw i32 65535, %conv298, !dbg !5772
  %conv300 = trunc i32 %sub299 to i16, !dbg !5774
  %call301 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv300), !dbg !5775
  %242 = load i16*, i16** %q, align 8, !dbg !5776
  store i16 %call301, i16* %242, align 2, !dbg !5777
  br label %sw.epilog, !dbg !5778

sw.bb302:                                         ; preds = %for.body287
  %243 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5779
  %opacity303 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %243, i32 0, i32 3, !dbg !5779
  %244 = load i16, i16* %opacity303, align 2, !dbg !5779
  %call304 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %244), !dbg !5781
  %245 = load i16*, i16** %q, align 8, !dbg !5782
  store i16 %call304, i16* %245, align 2, !dbg !5783
  br label %sw.epilog, !dbg !5784

sw.bb305:                                         ; preds = %for.body287
  %246 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5785
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %246, i32 0, i32 1, !dbg !5788
  %247 = load i32, i32* %colorspace, align 4, !dbg !5788
  %cmp306 = icmp eq i32 %247, 12, !dbg !5789
  br i1 %cmp306, label %if.then308, label %if.end315, !dbg !5790

if.then308:                                       ; preds = %sw.bb305
  %248 = load i16*, i16** %indexes, align 8, !dbg !5791
  %249 = load i64, i64* %x, align 8, !dbg !5791
  %add.ptr = getelementptr inbounds i16, i16* %248, i64 %249, !dbg !5791
  %cmp309 = icmp eq i16* %add.ptr, null, !dbg !5791
  br i1 %cmp309, label %cond.true, label %cond.false, !dbg !5791

cond.true:                                        ; preds = %if.then308
  br label %cond.end, !dbg !5791

cond.false:                                       ; preds = %if.then308
  %250 = load i16*, i16** %indexes, align 8, !dbg !5791
  %251 = load i64, i64* %x, align 8, !dbg !5791
  %add.ptr311 = getelementptr inbounds i16, i16* %250, i64 %251, !dbg !5791
  %252 = load i16, i16* %add.ptr311, align 2, !dbg !5791
  %conv312 = zext i16 %252 to i32, !dbg !5791
  br label %cond.end, !dbg !5791

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv312, %cond.false ], !dbg !5791
  %conv313 = trunc i32 %cond to i16, !dbg !5791
  %call314 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv313), !dbg !5792
  %253 = load i16*, i16** %q, align 8, !dbg !5793
  store i16 %call314, i16* %253, align 2, !dbg !5794
  br label %if.end315, !dbg !5795

if.end315:                                        ; preds = %cond.end, %sw.bb305
  br label %sw.epilog, !dbg !5796

sw.bb316:                                         ; preds = %for.body287
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5797
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5799
  %call317 = call float @GetPixelIntensity(%struct._Image* %254, %struct._PixelPacket* %255), !dbg !5800
  %call318 = call zeroext i16 @ClampToQuantum(float %call317), !dbg !5801
  %call319 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %call318), !dbg !5802
  %256 = load i16*, i16** %q, align 8, !dbg !5803
  store i16 %call319, i16* %256, align 2, !dbg !5804
  br label %sw.epilog, !dbg !5805

sw.default:                                       ; preds = %for.body287
  br label %sw.epilog, !dbg !5806

sw.epilog:                                        ; preds = %sw.default, %sw.bb316, %if.end315, %sw.bb302, %sw.bb296, %sw.bb293, %sw.bb290, %sw.bb
  %257 = load i16*, i16** %q, align 8, !dbg !5807
  %incdec.ptr320 = getelementptr inbounds i16, i16* %257, i32 1, !dbg !5807
  store i16* %incdec.ptr320, i16** %q, align 8, !dbg !5807
  br label %for.inc321, !dbg !5808

for.inc321:                                       ; preds = %sw.epilog
  %258 = load i64, i64* %i, align 8, !dbg !5809
  %inc322 = add nsw i64 %258, 1, !dbg !5809
  store i64 %inc322, i64* %i, align 8, !dbg !5809
  br label %for.cond284, !dbg !5810, !llvm.loop !5811

for.end323:                                       ; preds = %for.cond284
  %259 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5813
  %incdec.ptr324 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %259, i32 1, !dbg !5813
  store %struct._PixelPacket* %incdec.ptr324, %struct._PixelPacket** %p, align 8, !dbg !5813
  br label %for.inc325, !dbg !5814

for.inc325:                                       ; preds = %for.end323
  %260 = load i64, i64* %x, align 8, !dbg !5815
  %inc326 = add nsw i64 %260, 1, !dbg !5815
  store i64 %inc326, i64* %x, align 8, !dbg !5815
  br label %for.cond279, !dbg !5816, !llvm.loop !5817

for.end327:                                       ; preds = %for.cond279
  br label %for.inc328, !dbg !5819

for.inc328:                                       ; preds = %for.end327
  %261 = load i64, i64* %y, align 8, !dbg !5820
  %inc329 = add nsw i64 %261, 1, !dbg !5820
  store i64 %inc329, i64* %y, align 8, !dbg !5820
  br label %for.cond264, !dbg !5821, !llvm.loop !5822

for.end330:                                       ; preds = %for.end19, %for.end58, %for.end99, %for.end134, %for.end174, %for.end220, %for.end261, %if.then276, %for.cond264
  ret void, !dbg !5824
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @GetMagickPixelPacket(%struct._Image* %image, %struct._MagickPixelPacket* %pixel) #0 !dbg !5825 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5828, metadata !DIExpression()), !dbg !5829
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !5830, metadata !DIExpression()), !dbg !5831
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5832
  %storage_class = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 0, !dbg !5833
  store i32 1, i32* %storage_class, align 8, !dbg !5834
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5835
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %1, i32 0, i32 1, !dbg !5836
  store i32 13, i32* %colorspace, align 4, !dbg !5837
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5838
  %matte = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 2, !dbg !5839
  store i32 0, i32* %matte, align 8, !dbg !5840
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5841
  %fuzz = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 3, !dbg !5842
  store double 0.000000e+00, double* %fuzz, align 8, !dbg !5843
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5844
  %depth = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 4, !dbg !5845
  store i64 16, i64* %depth, align 8, !dbg !5846
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5847
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 5, !dbg !5848
  store float 0.000000e+00, float* %red, align 8, !dbg !5849
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5850
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 6, !dbg !5851
  store float 0.000000e+00, float* %green, align 4, !dbg !5852
  %7 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5853
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %7, i32 0, i32 7, !dbg !5854
  store float 0.000000e+00, float* %blue, align 8, !dbg !5855
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5856
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 8, !dbg !5857
  store float 0.000000e+00, float* %opacity, align 4, !dbg !5858
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5859
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 9, !dbg !5860
  store float 0.000000e+00, float* %index, align 8, !dbg !5861
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5862
  %cmp = icmp eq %struct._Image* %10, null, !dbg !5864
  br i1 %cmp, label %if.then, label %if.end, !dbg !5865

if.then:                                          ; preds = %entry
  br label %return, !dbg !5866

if.end:                                           ; preds = %entry
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5867
  %storage_class1 = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 0, !dbg !5868
  %12 = load i32, i32* %storage_class1, align 8, !dbg !5868
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5869
  %storage_class2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 0, !dbg !5870
  store i32 %12, i32* %storage_class2, align 8, !dbg !5871
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5872
  %colorspace3 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 1, !dbg !5873
  %15 = load i32, i32* %colorspace3, align 4, !dbg !5873
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5874
  %colorspace4 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %16, i32 0, i32 1, !dbg !5875
  store i32 %15, i32* %colorspace4, align 4, !dbg !5876
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5877
  %matte5 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 6, !dbg !5878
  %18 = load i32, i32* %matte5, align 8, !dbg !5878
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5879
  %matte6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i32 0, i32 2, !dbg !5880
  store i32 %18, i32* %matte6, align 8, !dbg !5881
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5882
  %depth7 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 9, !dbg !5883
  %21 = load i64, i64* %depth7, align 8, !dbg !5883
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5884
  %depth8 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 4, !dbg !5885
  store i64 %21, i64* %depth8, align 8, !dbg !5886
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5887
  %fuzz9 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 31, !dbg !5888
  %24 = load double, double* %fuzz9, align 8, !dbg !5888
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5889
  %fuzz10 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 3, !dbg !5890
  store double %24, double* %fuzz10, align 8, !dbg !5891
  br label %return, !dbg !5892

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5892
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @GetPixelIntensity(%struct._Image* %image, %struct._PixelPacket* noalias %pixel) #0 !dbg !5893 {
entry:
  %retval = alloca float, align 4
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %blue = alloca float, align 4
  %green = alloca float, align 4
  %intensity = alloca float, align 4
  %red = alloca float, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5896, metadata !DIExpression()), !dbg !5897
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !5898, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.declare(metadata float* %blue, metadata !5900, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.declare(metadata float* %green, metadata !5902, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.declare(metadata float* %intensity, metadata !5904, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.declare(metadata float* %red, metadata !5906, metadata !DIExpression()), !dbg !5907
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5908
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !5910
  %1 = load i32, i32* %colorspace, align 4, !dbg !5910
  %cmp = icmp eq i32 %1, 2, !dbg !5911
  br i1 %cmp, label %if.then, label %if.end, !dbg !5912

if.then:                                          ; preds = %entry
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !5913
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !5914
  %3 = load i16, i16* %red1, align 2, !dbg !5914
  %conv = uitofp i16 %3 to float, !dbg !5915
  store float %conv, float* %retval, align 4, !dbg !5916
  br label %return, !dbg !5916

if.end:                                           ; preds = %entry
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !5917
  %red2 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 2, !dbg !5918
  %5 = load i16, i16* %red2, align 2, !dbg !5918
  %conv3 = uitofp i16 %5 to float, !dbg !5919
  store float %conv3, float* %red, align 4, !dbg !5920
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !5921
  %green4 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 1, !dbg !5922
  %7 = load i16, i16* %green4, align 2, !dbg !5922
  %conv5 = uitofp i16 %7 to float, !dbg !5923
  store float %conv5, float* %green, align 4, !dbg !5924
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !5925
  %blue6 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !5926
  %9 = load i16, i16* %blue6, align 2, !dbg !5926
  %conv7 = uitofp i16 %9 to float, !dbg !5927
  store float %conv7, float* %blue, align 4, !dbg !5928
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5929
  %intensity8 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 83, !dbg !5930
  %11 = load i32, i32* %intensity8, align 8, !dbg !5930
  switch i32 %11, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb12
    i32 3, label %sw.bb14
    i32 9, label %sw.bb23
    i32 4, label %sw.bb34
    i32 5, label %sw.bb52
    i32 6, label %sw.bb70
    i32 7, label %sw.bb88
    i32 8, label %sw.bb106
  ], !dbg !5931

sw.bb:                                            ; preds = %if.end
  %12 = load float, float* %red, align 4, !dbg !5932
  %13 = load float, float* %green, align 4, !dbg !5935
  %add = fadd float %12, %13, !dbg !5936
  %14 = load float, float* %blue, align 4, !dbg !5937
  %add9 = fadd float %add, %14, !dbg !5938
  %conv10 = fpext float %add9 to double, !dbg !5939
  %div = fdiv double %conv10, 3.000000e+00, !dbg !5940
  %conv11 = fptrunc double %div to float, !dbg !5939
  store float %conv11, float* %intensity, align 4, !dbg !5941
  br label %sw.epilog, !dbg !5942

sw.bb12:                                          ; preds = %if.end
  %15 = load float, float* %red, align 4, !dbg !5943
  %16 = load float, float* %green, align 4, !dbg !5945
  %call = call float @MagickMax(float %15, float %16), !dbg !5946
  %17 = load float, float* %blue, align 4, !dbg !5947
  %call13 = call float @MagickMax(float %call, float %17), !dbg !5948
  store float %call13, float* %intensity, align 4, !dbg !5949
  br label %sw.epilog, !dbg !5950

sw.bb14:                                          ; preds = %if.end
  %18 = load float, float* %red, align 4, !dbg !5951
  %19 = load float, float* %green, align 4, !dbg !5953
  %call15 = call float @MagickMin(float %18, float %19), !dbg !5954
  %20 = load float, float* %blue, align 4, !dbg !5955
  %call16 = call float @MagickMin(float %call15, float %20), !dbg !5956
  %21 = load float, float* %red, align 4, !dbg !5957
  %22 = load float, float* %green, align 4, !dbg !5958
  %call17 = call float @MagickMax(float %21, float %22), !dbg !5959
  %23 = load float, float* %blue, align 4, !dbg !5960
  %call18 = call float @MagickMax(float %call17, float %23), !dbg !5961
  %add19 = fadd float %call16, %call18, !dbg !5962
  %conv20 = fpext float %add19 to double, !dbg !5963
  %div21 = fdiv double %conv20, 2.000000e+00, !dbg !5964
  %conv22 = fptrunc double %div21 to float, !dbg !5963
  store float %conv22, float* %intensity, align 4, !dbg !5965
  br label %sw.epilog, !dbg !5966

sw.bb23:                                          ; preds = %if.end
  %24 = load float, float* %red, align 4, !dbg !5967
  %conv24 = fpext float %24 to double, !dbg !5969
  %25 = load float, float* %red, align 4, !dbg !5970
  %conv25 = fpext float %25 to double, !dbg !5970
  %mul = fmul double %conv24, %conv25, !dbg !5971
  %26 = load float, float* %green, align 4, !dbg !5972
  %27 = load float, float* %green, align 4, !dbg !5973
  %mul26 = fmul float %26, %27, !dbg !5974
  %conv27 = fpext float %mul26 to double, !dbg !5972
  %add28 = fadd double %mul, %conv27, !dbg !5975
  %28 = load float, float* %blue, align 4, !dbg !5976
  %29 = load float, float* %blue, align 4, !dbg !5977
  %mul29 = fmul float %28, %29, !dbg !5978
  %conv30 = fpext float %mul29 to double, !dbg !5976
  %add31 = fadd double %add28, %conv30, !dbg !5979
  %div32 = fdiv double %add31, 1.966050e+05, !dbg !5980
  %conv33 = fptrunc double %div32 to float, !dbg !5981
  store float %conv33, float* %intensity, align 4, !dbg !5982
  br label %sw.epilog, !dbg !5983

sw.bb34:                                          ; preds = %if.end
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5984
  %colorspace35 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 1, !dbg !5987
  %31 = load i32, i32* %colorspace35, align 4, !dbg !5987
  %cmp36 = icmp eq i32 %31, 1, !dbg !5988
  br i1 %cmp36, label %if.then38, label %if.end42, !dbg !5989

if.then38:                                        ; preds = %sw.bb34
  %32 = load float, float* %red, align 4, !dbg !5990
  %call39 = call float @EncodePixelGamma(float %32), !dbg !5992
  store float %call39, float* %red, align 4, !dbg !5993
  %33 = load float, float* %green, align 4, !dbg !5994
  %call40 = call float @EncodePixelGamma(float %33), !dbg !5995
  store float %call40, float* %green, align 4, !dbg !5996
  %34 = load float, float* %blue, align 4, !dbg !5997
  %call41 = call float @EncodePixelGamma(float %34), !dbg !5998
  store float %call41, float* %blue, align 4, !dbg !5999
  br label %if.end42, !dbg !6000

if.end42:                                         ; preds = %if.then38, %sw.bb34
  %35 = load float, float* %red, align 4, !dbg !6001
  %conv43 = fpext float %35 to double, !dbg !6001
  %mul44 = fmul double 2.988390e-01, %conv43, !dbg !6002
  %36 = load float, float* %green, align 4, !dbg !6003
  %conv45 = fpext float %36 to double, !dbg !6003
  %mul46 = fmul double 5.868110e-01, %conv45, !dbg !6004
  %add47 = fadd double %mul44, %mul46, !dbg !6005
  %37 = load float, float* %blue, align 4, !dbg !6006
  %conv48 = fpext float %37 to double, !dbg !6006
  %mul49 = fmul double 1.143500e-01, %conv48, !dbg !6007
  %add50 = fadd double %add47, %mul49, !dbg !6008
  %conv51 = fptrunc double %add50 to float, !dbg !6009
  store float %conv51, float* %intensity, align 4, !dbg !6010
  br label %sw.epilog, !dbg !6011

sw.bb52:                                          ; preds = %if.end
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6012
  %colorspace53 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 1, !dbg !6015
  %39 = load i32, i32* %colorspace53, align 4, !dbg !6015
  %cmp54 = icmp eq i32 %39, 13, !dbg !6016
  br i1 %cmp54, label %if.then56, label %if.end60, !dbg !6017

if.then56:                                        ; preds = %sw.bb52
  %40 = load float, float* %red, align 4, !dbg !6018
  %call57 = call float @DecodePixelGamma(float %40), !dbg !6020
  store float %call57, float* %red, align 4, !dbg !6021
  %41 = load float, float* %green, align 4, !dbg !6022
  %call58 = call float @DecodePixelGamma(float %41), !dbg !6023
  store float %call58, float* %green, align 4, !dbg !6024
  %42 = load float, float* %blue, align 4, !dbg !6025
  %call59 = call float @DecodePixelGamma(float %42), !dbg !6026
  store float %call59, float* %blue, align 4, !dbg !6027
  br label %if.end60, !dbg !6028

if.end60:                                         ; preds = %if.then56, %sw.bb52
  %43 = load float, float* %red, align 4, !dbg !6029
  %conv61 = fpext float %43 to double, !dbg !6029
  %mul62 = fmul double 2.988390e-01, %conv61, !dbg !6030
  %44 = load float, float* %green, align 4, !dbg !6031
  %conv63 = fpext float %44 to double, !dbg !6031
  %mul64 = fmul double 5.868110e-01, %conv63, !dbg !6032
  %add65 = fadd double %mul62, %mul64, !dbg !6033
  %45 = load float, float* %blue, align 4, !dbg !6034
  %conv66 = fpext float %45 to double, !dbg !6034
  %mul67 = fmul double 1.143500e-01, %conv66, !dbg !6035
  %add68 = fadd double %add65, %mul67, !dbg !6036
  %conv69 = fptrunc double %add68 to float, !dbg !6037
  store float %conv69, float* %intensity, align 4, !dbg !6038
  br label %sw.epilog, !dbg !6039

sw.bb70:                                          ; preds = %if.end
  br label %sw.default, !dbg !6040

sw.default:                                       ; preds = %if.end, %sw.bb70
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6041
  %colorspace71 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 1, !dbg !6044
  %47 = load i32, i32* %colorspace71, align 4, !dbg !6044
  %cmp72 = icmp eq i32 %47, 1, !dbg !6045
  br i1 %cmp72, label %if.then74, label %if.end78, !dbg !6046

if.then74:                                        ; preds = %sw.default
  %48 = load float, float* %red, align 4, !dbg !6047
  %call75 = call float @EncodePixelGamma(float %48), !dbg !6049
  store float %call75, float* %red, align 4, !dbg !6050
  %49 = load float, float* %green, align 4, !dbg !6051
  %call76 = call float @EncodePixelGamma(float %49), !dbg !6052
  store float %call76, float* %green, align 4, !dbg !6053
  %50 = load float, float* %blue, align 4, !dbg !6054
  %call77 = call float @EncodePixelGamma(float %50), !dbg !6055
  store float %call77, float* %blue, align 4, !dbg !6056
  br label %if.end78, !dbg !6057

if.end78:                                         ; preds = %if.then74, %sw.default
  %51 = load float, float* %red, align 4, !dbg !6058
  %conv79 = fpext float %51 to double, !dbg !6058
  %mul80 = fmul double 2.126560e-01, %conv79, !dbg !6059
  %52 = load float, float* %green, align 4, !dbg !6060
  %conv81 = fpext float %52 to double, !dbg !6060
  %mul82 = fmul double 0x3FE6E29307AF20EA, %conv81, !dbg !6061
  %add83 = fadd double %mul80, %mul82, !dbg !6062
  %53 = load float, float* %blue, align 4, !dbg !6063
  %conv84 = fpext float %53 to double, !dbg !6063
  %mul85 = fmul double 7.218600e-02, %conv84, !dbg !6064
  %add86 = fadd double %add83, %mul85, !dbg !6065
  %conv87 = fptrunc double %add86 to float, !dbg !6066
  store float %conv87, float* %intensity, align 4, !dbg !6067
  br label %sw.epilog, !dbg !6068

sw.bb88:                                          ; preds = %if.end
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6069
  %colorspace89 = getelementptr inbounds %struct._Image, %struct._Image* %54, i32 0, i32 1, !dbg !6072
  %55 = load i32, i32* %colorspace89, align 4, !dbg !6072
  %cmp90 = icmp eq i32 %55, 13, !dbg !6073
  br i1 %cmp90, label %if.then92, label %if.end96, !dbg !6074

if.then92:                                        ; preds = %sw.bb88
  %56 = load float, float* %red, align 4, !dbg !6075
  %call93 = call float @DecodePixelGamma(float %56), !dbg !6077
  store float %call93, float* %red, align 4, !dbg !6078
  %57 = load float, float* %green, align 4, !dbg !6079
  %call94 = call float @DecodePixelGamma(float %57), !dbg !6080
  store float %call94, float* %green, align 4, !dbg !6081
  %58 = load float, float* %blue, align 4, !dbg !6082
  %call95 = call float @DecodePixelGamma(float %58), !dbg !6083
  store float %call95, float* %blue, align 4, !dbg !6084
  br label %if.end96, !dbg !6085

if.end96:                                         ; preds = %if.then92, %sw.bb88
  %59 = load float, float* %red, align 4, !dbg !6086
  %conv97 = fpext float %59 to double, !dbg !6086
  %mul98 = fmul double 2.126560e-01, %conv97, !dbg !6087
  %60 = load float, float* %green, align 4, !dbg !6088
  %conv99 = fpext float %60 to double, !dbg !6088
  %mul100 = fmul double 0x3FE6E29307AF20EA, %conv99, !dbg !6089
  %add101 = fadd double %mul98, %mul100, !dbg !6090
  %61 = load float, float* %blue, align 4, !dbg !6091
  %conv102 = fpext float %61 to double, !dbg !6091
  %mul103 = fmul double 7.218600e-02, %conv102, !dbg !6092
  %add104 = fadd double %add101, %mul103, !dbg !6093
  %conv105 = fptrunc double %add104 to float, !dbg !6094
  store float %conv105, float* %intensity, align 4, !dbg !6095
  br label %sw.epilog, !dbg !6096

sw.bb106:                                         ; preds = %if.end
  %62 = load float, float* %red, align 4, !dbg !6097
  %conv107 = fpext float %62 to double, !dbg !6099
  %63 = load float, float* %red, align 4, !dbg !6100
  %conv108 = fpext float %63 to double, !dbg !6100
  %mul109 = fmul double %conv107, %conv108, !dbg !6101
  %64 = load float, float* %green, align 4, !dbg !6102
  %65 = load float, float* %green, align 4, !dbg !6103
  %mul110 = fmul float %64, %65, !dbg !6104
  %conv111 = fpext float %mul110 to double, !dbg !6102
  %add112 = fadd double %mul109, %conv111, !dbg !6105
  %66 = load float, float* %blue, align 4, !dbg !6106
  %67 = load float, float* %blue, align 4, !dbg !6107
  %mul113 = fmul float %66, %67, !dbg !6108
  %conv114 = fpext float %mul113 to double, !dbg !6106
  %add115 = fadd double %add112, %conv114, !dbg !6109
  %call116 = call double @sqrt(double %add115) #12, !dbg !6110
  %call117 = call double @sqrt(double 3.000000e+00) #12, !dbg !6111
  %div118 = fdiv double %call116, %call117, !dbg !6112
  %conv119 = fptrunc double %div118 to float, !dbg !6113
  store float %conv119, float* %intensity, align 4, !dbg !6114
  br label %sw.epilog, !dbg !6115

sw.epilog:                                        ; preds = %sw.bb106, %if.end96, %if.end78, %if.end60, %if.end42, %sw.bb23, %sw.bb14, %sw.bb12, %sw.bb
  %68 = load float, float* %intensity, align 4, !dbg !6116
  store float %68, float* %retval, align 4, !dbg !6117
  br label %return, !dbg !6117

return:                                           ; preds = %sw.epilog, %if.then
  %69 = load float, float* %retval, align 4, !dbg !6118
  ret float %69, !dbg !6118
}

; Function Attrs: noinline nounwind uwtable
define internal float @MagickMax(float %x, float %y) #0 !dbg !6119 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6122, metadata !DIExpression()), !dbg !6123
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !6124, metadata !DIExpression()), !dbg !6125
  %0 = load float, float* %x.addr, align 4, !dbg !6126
  %1 = load float, float* %y.addr, align 4, !dbg !6128
  %cmp = fcmp ogt float %0, %1, !dbg !6129
  br i1 %cmp, label %if.then, label %if.end, !dbg !6130

if.then:                                          ; preds = %entry
  %2 = load float, float* %x.addr, align 4, !dbg !6131
  store float %2, float* %retval, align 4, !dbg !6132
  br label %return, !dbg !6132

if.end:                                           ; preds = %entry
  %3 = load float, float* %y.addr, align 4, !dbg !6133
  store float %3, float* %retval, align 4, !dbg !6134
  br label %return, !dbg !6134

return:                                           ; preds = %if.end, %if.then
  %4 = load float, float* %retval, align 4, !dbg !6135
  ret float %4, !dbg !6135
}

; Function Attrs: noinline nounwind uwtable
define internal float @MagickMin(float %x, float %y) #0 !dbg !6136 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6137, metadata !DIExpression()), !dbg !6138
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !6139, metadata !DIExpression()), !dbg !6140
  %0 = load float, float* %x.addr, align 4, !dbg !6141
  %1 = load float, float* %y.addr, align 4, !dbg !6143
  %cmp = fcmp olt float %0, %1, !dbg !6144
  br i1 %cmp, label %if.then, label %if.end, !dbg !6145

if.then:                                          ; preds = %entry
  %2 = load float, float* %x.addr, align 4, !dbg !6146
  store float %2, float* %retval, align 4, !dbg !6147
  br label %return, !dbg !6147

if.end:                                           ; preds = %entry
  %3 = load float, float* %y.addr, align 4, !dbg !6148
  store float %3, float* %retval, align 4, !dbg !6149
  br label %return, !dbg !6149

return:                                           ; preds = %if.end, %if.then
  %4 = load float, float* %retval, align 4, !dbg !6150
  ret float %4, !dbg !6150
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #8

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ImportImagePixels(%struct._Image* %image, i64 %x, i64 %y, i64 %width, i64 %height, i8* %map, i32 %type, i8* %pixels) #0 !dbg !6151 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %map.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %quantum_map = alloca i32*, align 8
  %roi = alloca %struct._RectangleInfo, align 8
  %i = alloca i64, align 8
  %length = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6156, metadata !DIExpression()), !dbg !6157
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !6158, metadata !DIExpression()), !dbg !6159
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !6160, metadata !DIExpression()), !dbg !6161
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6162, metadata !DIExpression()), !dbg !6163
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !6164, metadata !DIExpression()), !dbg !6165
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6168, metadata !DIExpression()), !dbg !6169
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !6170, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !6172, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.declare(metadata i32** %quantum_map, metadata !6174, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %roi, metadata !6176, metadata !DIExpression()), !dbg !6177
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6178, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.declare(metadata i64* %length, metadata !6180, metadata !DIExpression()), !dbg !6181
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6182
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !6184
  %1 = load i32, i32* %debug, align 8, !dbg !6184
  %cmp = icmp ne i32 %1, 0, !dbg !6185
  br i1 %cmp, label %if.then, label %if.end, !dbg !6186

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6187
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !6188
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6187
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3962, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !6189
  br label %if.end, !dbg !6190

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %map.addr, align 8, !dbg !6191
  %call1 = call i64 @strlen(i8* %3) #13, !dbg !6192
  store i64 %call1, i64* %length, align 8, !dbg !6193
  %4 = load i64, i64* %length, align 8, !dbg !6194
  %call2 = call i8* @AcquireQuantumMemory(i64 %4, i64 4) #9, !dbg !6195
  %5 = bitcast i8* %call2 to i32*, !dbg !6196
  store i32* %5, i32** %quantum_map, align 8, !dbg !6197
  %6 = load i32*, i32** %quantum_map, align 8, !dbg !6198
  %cmp3 = icmp eq i32* %6, null, !dbg !6200
  br i1 %cmp3, label %if.then4, label %if.end12, !dbg !6201

if.then4:                                         ; preds = %if.end
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6202
  %cmp5 = icmp ne %struct._Image* %7, null, !dbg !6202
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !6205

if.then6:                                         ; preds = %if.then4
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6202
  %exception7 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 58, !dbg !6202
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6202
  %filename8 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 53, !dbg !6202
  %arraydecay9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename8, i64 0, i64 0, !dbg !6202
  %call10 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3967, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay9), !dbg !6202
  br label %if.end11, !dbg !6202

if.end11:                                         ; preds = %if.then6, %if.then4
  store i32 0, i32* %retval, align 4, !dbg !6205
  br label %return, !dbg !6205

if.end12:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !6206
  br label %for.cond, !dbg !6208

for.cond:                                         ; preds = %for.inc, %if.end12
  %10 = load i64, i64* %i, align 8, !dbg !6209
  %11 = load i64, i64* %length, align 8, !dbg !6211
  %cmp13 = icmp slt i64 %10, %11, !dbg !6212
  br i1 %cmp13, label %for.body, label %for.end, !dbg !6213

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %map.addr, align 8, !dbg !6214
  %13 = load i64, i64* %i, align 8, !dbg !6216
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !6214
  %14 = load i8, i8* %arrayidx, align 1, !dbg !6214
  %conv = sext i8 %14 to i32, !dbg !6214
  switch i32 %conv, label %sw.default [
    i32 97, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb15
    i32 98, label %sw.bb15
    i32 67, label %sw.bb17
    i32 99, label %sw.bb17
    i32 103, label %sw.bb20
    i32 71, label %sw.bb20
    i32 75, label %sw.bb22
    i32 107, label %sw.bb22
    i32 73, label %sw.bb25
    i32 105, label %sw.bb25
    i32 109, label %sw.bb28
    i32 77, label %sw.bb28
    i32 79, label %sw.bb31
    i32 111, label %sw.bb31
    i32 80, label %sw.bb34
    i32 112, label %sw.bb34
    i32 82, label %sw.bb36
    i32 114, label %sw.bb36
    i32 89, label %sw.bb38
    i32 121, label %sw.bb38
  ], !dbg !6217

sw.bb:                                            ; preds = %for.body, %for.body
  %15 = load i32*, i32** %quantum_map, align 8, !dbg !6218
  %16 = load i64, i64* %i, align 8, !dbg !6221
  %arrayidx14 = getelementptr inbounds i32, i32* %15, i64 %16, !dbg !6218
  store i32 1, i32* %arrayidx14, align 4, !dbg !6222
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6223
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 6, !dbg !6224
  store i32 1, i32* %matte, align 8, !dbg !6225
  br label %sw.epilog, !dbg !6226

sw.bb15:                                          ; preds = %for.body, %for.body
  %18 = load i32*, i32** %quantum_map, align 8, !dbg !6227
  %19 = load i64, i64* %i, align 8, !dbg !6229
  %arrayidx16 = getelementptr inbounds i32, i32* %18, i64 %19, !dbg !6227
  store i32 3, i32* %arrayidx16, align 4, !dbg !6230
  br label %sw.epilog, !dbg !6231

sw.bb17:                                          ; preds = %for.body, %for.body
  %20 = load i32*, i32** %quantum_map, align 8, !dbg !6232
  %21 = load i64, i64* %i, align 8, !dbg !6234
  %arrayidx18 = getelementptr inbounds i32, i32* %20, i64 %21, !dbg !6232
  store i32 6, i32* %arrayidx18, align 4, !dbg !6235
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6236
  %call19 = call i32 @SetImageColorspace(%struct._Image* %22, i32 12), !dbg !6237
  br label %sw.epilog, !dbg !6238

sw.bb20:                                          ; preds = %for.body, %for.body
  %23 = load i32*, i32** %quantum_map, align 8, !dbg !6239
  %24 = load i64, i64* %i, align 8, !dbg !6241
  %arrayidx21 = getelementptr inbounds i32, i32* %23, i64 %24, !dbg !6239
  store i32 9, i32* %arrayidx21, align 4, !dbg !6242
  br label %sw.epilog, !dbg !6243

sw.bb22:                                          ; preds = %for.body, %for.body
  %25 = load i32*, i32** %quantum_map, align 8, !dbg !6244
  %26 = load i64, i64* %i, align 8, !dbg !6246
  %arrayidx23 = getelementptr inbounds i32, i32* %25, i64 %26, !dbg !6244
  store i32 2, i32* %arrayidx23, align 4, !dbg !6247
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6248
  %call24 = call i32 @SetImageColorspace(%struct._Image* %27, i32 12), !dbg !6249
  br label %sw.epilog, !dbg !6250

sw.bb25:                                          ; preds = %for.body, %for.body
  %28 = load i32*, i32** %quantum_map, align 8, !dbg !6251
  %29 = load i64, i64* %i, align 8, !dbg !6253
  %arrayidx26 = getelementptr inbounds i32, i32* %28, i64 %29, !dbg !6251
  store i32 11, i32* %arrayidx26, align 4, !dbg !6254
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6255
  %call27 = call i32 @SetImageColorspace(%struct._Image* %30, i32 2), !dbg !6256
  br label %sw.epilog, !dbg !6257

sw.bb28:                                          ; preds = %for.body, %for.body
  %31 = load i32*, i32** %quantum_map, align 8, !dbg !6258
  %32 = load i64, i64* %i, align 8, !dbg !6260
  %arrayidx29 = getelementptr inbounds i32, i32* %31, i64 %32, !dbg !6258
  store i32 12, i32* %arrayidx29, align 4, !dbg !6261
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6262
  %call30 = call i32 @SetImageColorspace(%struct._Image* %33, i32 12), !dbg !6263
  br label %sw.epilog, !dbg !6264

sw.bb31:                                          ; preds = %for.body, %for.body
  %34 = load i32*, i32** %quantum_map, align 8, !dbg !6265
  %35 = load i64, i64* %i, align 8, !dbg !6267
  %arrayidx32 = getelementptr inbounds i32, i32* %34, i64 %35, !dbg !6265
  store i32 13, i32* %arrayidx32, align 4, !dbg !6268
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6269
  %matte33 = getelementptr inbounds %struct._Image, %struct._Image* %36, i32 0, i32 6, !dbg !6270
  store i32 1, i32* %matte33, align 8, !dbg !6271
  br label %sw.epilog, !dbg !6272

sw.bb34:                                          ; preds = %for.body, %for.body
  %37 = load i32*, i32** %quantum_map, align 8, !dbg !6273
  %38 = load i64, i64* %i, align 8, !dbg !6275
  %arrayidx35 = getelementptr inbounds i32, i32* %37, i64 %38, !dbg !6273
  store i32 0, i32* %arrayidx35, align 4, !dbg !6276
  br label %sw.epilog, !dbg !6277

sw.bb36:                                          ; preds = %for.body, %for.body
  %39 = load i32*, i32** %quantum_map, align 8, !dbg !6278
  %40 = load i64, i64* %i, align 8, !dbg !6280
  %arrayidx37 = getelementptr inbounds i32, i32* %39, i64 %40, !dbg !6278
  store i32 14, i32* %arrayidx37, align 4, !dbg !6281
  br label %sw.epilog, !dbg !6282

sw.bb38:                                          ; preds = %for.body, %for.body
  %41 = load i32*, i32** %quantum_map, align 8, !dbg !6283
  %42 = load i64, i64* %i, align 8, !dbg !6285
  %arrayidx39 = getelementptr inbounds i32, i32* %41, i64 %42, !dbg !6283
  store i32 19, i32* %arrayidx39, align 4, !dbg !6286
  %43 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6287
  %call40 = call i32 @SetImageColorspace(%struct._Image* %43, i32 12), !dbg !6288
  br label %sw.epilog, !dbg !6289

sw.default:                                       ; preds = %for.body
  %44 = load i32*, i32** %quantum_map, align 8, !dbg !6290
  %45 = bitcast i32* %44 to i8*, !dbg !6290
  %call41 = call i8* @RelinquishMagickMemory(i8* %45), !dbg !6292
  %46 = bitcast i8* %call41 to i32*, !dbg !6293
  store i32* %46, i32** %quantum_map, align 8, !dbg !6294
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6295
  %exception42 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 58, !dbg !6296
  %48 = load i8*, i8** %map.addr, align 8, !dbg !6297
  %call43 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception42, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4048, i32 410, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %48), !dbg !6298
  store i32 0, i32* %retval, align 4, !dbg !6299
  br label %return, !dbg !6299

sw.epilog:                                        ; preds = %sw.bb38, %sw.bb36, %sw.bb34, %sw.bb31, %sw.bb28, %sw.bb25, %sw.bb22, %sw.bb20, %sw.bb17, %sw.bb15, %sw.bb
  br label %for.inc, !dbg !6300

for.inc:                                          ; preds = %sw.epilog
  %49 = load i64, i64* %i, align 8, !dbg !6301
  %inc = add nsw i64 %49, 1, !dbg !6301
  store i64 %inc, i64* %i, align 8, !dbg !6301
  br label %for.cond, !dbg !6302, !llvm.loop !6303

for.end:                                          ; preds = %for.cond
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6305
  %call44 = call i32 @SetImageStorageClass(%struct._Image* %50, i32 1), !dbg !6307
  %cmp45 = icmp eq i32 %call44, 0, !dbg !6308
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !6309

if.then47:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !6310
  br label %return, !dbg !6310

if.end48:                                         ; preds = %for.end
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6311
  %exception49 = getelementptr inbounds %struct._Image, %struct._Image* %51, i32 0, i32 58, !dbg !6312
  store %struct._ExceptionInfo* %exception49, %struct._ExceptionInfo** %exception, align 8, !dbg !6313
  %52 = load i64, i64* %width.addr, align 8, !dbg !6314
  %width50 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %roi, i32 0, i32 0, !dbg !6315
  store i64 %52, i64* %width50, align 8, !dbg !6316
  %53 = load i64, i64* %height.addr, align 8, !dbg !6317
  %height51 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %roi, i32 0, i32 1, !dbg !6318
  store i64 %53, i64* %height51, align 8, !dbg !6319
  %54 = load i64, i64* %x.addr, align 8, !dbg !6320
  %x52 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %roi, i32 0, i32 2, !dbg !6321
  store i64 %54, i64* %x52, align 8, !dbg !6322
  %55 = load i64, i64* %y.addr, align 8, !dbg !6323
  %y53 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %roi, i32 0, i32 3, !dbg !6324
  store i64 %55, i64* %y53, align 8, !dbg !6325
  %56 = load i32, i32* %type.addr, align 4, !dbg !6326
  switch i32 %56, label %sw.default61 [
    i32 1, label %sw.bb54
    i32 2, label %sw.bb55
    i32 3, label %sw.bb56
    i32 4, label %sw.bb57
    i32 5, label %sw.bb58
    i32 6, label %sw.bb59
    i32 7, label %sw.bb60
  ], !dbg !6327

sw.bb54:                                          ; preds = %if.end48
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6328
  %58 = load i8*, i8** %map.addr, align 8, !dbg !6331
  %59 = load i32*, i32** %quantum_map, align 8, !dbg !6332
  %60 = load i8*, i8** %pixels.addr, align 8, !dbg !6333
  %61 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6334
  call void @ImportCharPixel(%struct._Image* %57, %struct._RectangleInfo* %roi, i8* %58, i32* %59, i8* %60, %struct._ExceptionInfo* %61), !dbg !6335
  br label %sw.epilog65, !dbg !6336

sw.bb55:                                          ; preds = %if.end48
  %62 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6337
  %63 = load i8*, i8** %map.addr, align 8, !dbg !6339
  %64 = load i32*, i32** %quantum_map, align 8, !dbg !6340
  %65 = load i8*, i8** %pixels.addr, align 8, !dbg !6341
  %66 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6342
  call void @ImportDoublePixel(%struct._Image* %62, %struct._RectangleInfo* %roi, i8* %63, i32* %64, i8* %65, %struct._ExceptionInfo* %66), !dbg !6343
  br label %sw.epilog65, !dbg !6344

sw.bb56:                                          ; preds = %if.end48
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6345
  %68 = load i8*, i8** %map.addr, align 8, !dbg !6347
  %69 = load i32*, i32** %quantum_map, align 8, !dbg !6348
  %70 = load i8*, i8** %pixels.addr, align 8, !dbg !6349
  %71 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6350
  call void @ImportFloatPixel(%struct._Image* %67, %struct._RectangleInfo* %roi, i8* %68, i32* %69, i8* %70, %struct._ExceptionInfo* %71), !dbg !6351
  br label %sw.epilog65, !dbg !6352

sw.bb57:                                          ; preds = %if.end48
  %72 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6353
  %73 = load i8*, i8** %map.addr, align 8, !dbg !6355
  %74 = load i32*, i32** %quantum_map, align 8, !dbg !6356
  %75 = load i8*, i8** %pixels.addr, align 8, !dbg !6357
  %76 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6358
  call void @ImportIntegerPixel(%struct._Image* %72, %struct._RectangleInfo* %roi, i8* %73, i32* %74, i8* %75, %struct._ExceptionInfo* %76), !dbg !6359
  br label %sw.epilog65, !dbg !6360

sw.bb58:                                          ; preds = %if.end48
  %77 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6361
  %78 = load i8*, i8** %map.addr, align 8, !dbg !6363
  %79 = load i32*, i32** %quantum_map, align 8, !dbg !6364
  %80 = load i8*, i8** %pixels.addr, align 8, !dbg !6365
  %81 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6366
  call void @ImportLongPixel(%struct._Image* %77, %struct._RectangleInfo* %roi, i8* %78, i32* %79, i8* %80, %struct._ExceptionInfo* %81), !dbg !6367
  br label %sw.epilog65, !dbg !6368

sw.bb59:                                          ; preds = %if.end48
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6369
  %83 = load i8*, i8** %map.addr, align 8, !dbg !6371
  %84 = load i32*, i32** %quantum_map, align 8, !dbg !6372
  %85 = load i8*, i8** %pixels.addr, align 8, !dbg !6373
  %86 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6374
  call void @ImportQuantumPixel(%struct._Image* %82, %struct._RectangleInfo* %roi, i8* %83, i32* %84, i8* %85, %struct._ExceptionInfo* %86), !dbg !6375
  br label %sw.epilog65, !dbg !6376

sw.bb60:                                          ; preds = %if.end48
  %87 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6377
  %88 = load i8*, i8** %map.addr, align 8, !dbg !6379
  %89 = load i32*, i32** %quantum_map, align 8, !dbg !6380
  %90 = load i8*, i8** %pixels.addr, align 8, !dbg !6381
  %91 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6382
  call void @ImportShortPixel(%struct._Image* %87, %struct._RectangleInfo* %roi, i8* %88, i32* %89, i8* %90, %struct._ExceptionInfo* %91), !dbg !6383
  br label %sw.epilog65, !dbg !6384

sw.default61:                                     ; preds = %if.end48
  %92 = load i32*, i32** %quantum_map, align 8, !dbg !6385
  %93 = bitcast i32* %92 to i8*, !dbg !6385
  %call62 = call i8* @RelinquishMagickMemory(i8* %93), !dbg !6387
  %94 = bitcast i8* %call62 to i32*, !dbg !6388
  store i32* %94, i32** %quantum_map, align 8, !dbg !6389
  %95 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6390
  %exception63 = getelementptr inbounds %struct._Image, %struct._Image* %95, i32 0, i32 58, !dbg !6391
  %96 = load i32, i32* %type.addr, align 4, !dbg !6392
  %call64 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception63, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4104, i32 410, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i32 %96), !dbg !6393
  br label %sw.epilog65, !dbg !6394

sw.epilog65:                                      ; preds = %sw.default61, %sw.bb60, %sw.bb59, %sw.bb58, %sw.bb57, %sw.bb56, %sw.bb55, %sw.bb54
  %97 = load i32*, i32** %quantum_map, align 8, !dbg !6395
  %98 = bitcast i32* %97 to i8*, !dbg !6395
  %call66 = call i8* @RelinquishMagickMemory(i8* %98), !dbg !6396
  %99 = bitcast i8* %call66 to i32*, !dbg !6397
  store i32* %99, i32** %quantum_map, align 8, !dbg !6398
  store i32 1, i32* %retval, align 4, !dbg !6399
  br label %return, !dbg !6399

return:                                           ; preds = %sw.epilog65, %if.then47, %sw.default, %if.end11
  %100 = load i32, i32* %retval, align 4, !dbg !6400
  ret i32 %100, !dbg !6400
}

declare dso_local i32 @SetImageColorspace(%struct._Image*, i32) #3

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ImportCharPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !6401 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %p = alloca i8*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6404, metadata !DIExpression()), !dbg !6405
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !6406, metadata !DIExpression()), !dbg !6407
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !6408, metadata !DIExpression()), !dbg !6409
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !6410, metadata !DIExpression()), !dbg !6411
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !6412, metadata !DIExpression()), !dbg !6413
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6414, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6416, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !6419, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !6422, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6425, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.declare(metadata i64* %length, metadata !6427, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.declare(metadata i64* %y, metadata !6429, metadata !DIExpression()), !dbg !6430
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !6431
  store i8* %0, i8** %p, align 8, !dbg !6432
  %1 = load i8*, i8** %map.addr, align 8, !dbg !6433
  %call = call i32 @LocaleCompare(i8* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !6435
  %cmp = icmp eq i32 %call, 0, !dbg !6436
  br i1 %cmp, label %if.then, label %if.end24, !dbg !6437

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !6438
  br label %for.cond, !dbg !6441

for.cond:                                         ; preds = %for.inc21, %if.then
  %2 = load i64, i64* %y, align 8, !dbg !6442
  %3 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6444
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %3, i32 0, i32 1, !dbg !6445
  %4 = load i64, i64* %height, align 8, !dbg !6445
  %cmp1 = icmp slt i64 %2, %4, !dbg !6446
  br i1 %cmp1, label %for.body, label %for.end23, !dbg !6447

for.body:                                         ; preds = %for.cond
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6448
  %6 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6450
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %6, i32 0, i32 2, !dbg !6451
  %7 = load i64, i64* %x2, align 8, !dbg !6451
  %8 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6452
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %8, i32 0, i32 3, !dbg !6453
  %9 = load i64, i64* %y3, align 8, !dbg !6453
  %10 = load i64, i64* %y, align 8, !dbg !6454
  %add = add nsw i64 %9, %10, !dbg !6455
  %11 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6456
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %11, i32 0, i32 0, !dbg !6457
  %12 = load i64, i64* %width, align 8, !dbg !6457
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6458
  %call4 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %5, i64 %7, i64 %add, i64 %12, i64 1, %struct._ExceptionInfo* %13), !dbg !6459
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %q, align 8, !dbg !6460
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6461
  %cmp5 = icmp eq %struct._PixelPacket* %14, null, !dbg !6463
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !6464

if.then6:                                         ; preds = %for.body
  br label %for.end23, !dbg !6465

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !6466
  br label %for.cond7, !dbg !6468

for.cond7:                                        ; preds = %for.inc, %if.end
  %15 = load i64, i64* %x, align 8, !dbg !6469
  %16 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6471
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %16, i32 0, i32 0, !dbg !6472
  %17 = load i64, i64* %width8, align 8, !dbg !6472
  %cmp9 = icmp slt i64 %15, %17, !dbg !6473
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !6474

for.body10:                                       ; preds = %for.cond7
  %18 = load i8*, i8** %p, align 8, !dbg !6475
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6475
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6475
  %19 = load i8, i8* %18, align 1, !dbg !6475
  %call11 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %19), !dbg !6475
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6475
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 0, i32 0, !dbg !6475
  store i16 %call11, i16* %blue, align 2, !dbg !6475
  %21 = load i8*, i8** %p, align 8, !dbg !6477
  %incdec.ptr12 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !6477
  store i8* %incdec.ptr12, i8** %p, align 8, !dbg !6477
  %22 = load i8, i8* %21, align 1, !dbg !6477
  %call13 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %22), !dbg !6477
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6477
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 0, i32 1, !dbg !6477
  store i16 %call13, i16* %green, align 2, !dbg !6477
  %24 = load i8*, i8** %p, align 8, !dbg !6478
  %incdec.ptr14 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !6478
  store i8* %incdec.ptr14, i8** %p, align 8, !dbg !6478
  %25 = load i8, i8* %24, align 1, !dbg !6478
  %call15 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %25), !dbg !6478
  %26 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6478
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %26, i32 0, i32 2, !dbg !6478
  store i16 %call15, i16* %red, align 2, !dbg !6478
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6479
  %incdec.ptr16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 1, !dbg !6479
  store %struct._PixelPacket* %incdec.ptr16, %struct._PixelPacket** %q, align 8, !dbg !6479
  br label %for.inc, !dbg !6480

for.inc:                                          ; preds = %for.body10
  %28 = load i64, i64* %x, align 8, !dbg !6481
  %inc = add nsw i64 %28, 1, !dbg !6481
  store i64 %inc, i64* %x, align 8, !dbg !6481
  br label %for.cond7, !dbg !6482, !llvm.loop !6483

for.end:                                          ; preds = %for.cond7
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6485
  %30 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6487
  %call17 = call i32 @SyncAuthenticPixels(%struct._Image* %29, %struct._ExceptionInfo* %30), !dbg !6488
  %cmp18 = icmp eq i32 %call17, 0, !dbg !6489
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6490

if.then19:                                        ; preds = %for.end
  br label %for.end23, !dbg !6491

if.end20:                                         ; preds = %for.end
  br label %for.inc21, !dbg !6492

for.inc21:                                        ; preds = %if.end20
  %31 = load i64, i64* %y, align 8, !dbg !6493
  %inc22 = add nsw i64 %31, 1, !dbg !6493
  store i64 %inc22, i64* %y, align 8, !dbg !6493
  br label %for.cond, !dbg !6494, !llvm.loop !6495

for.end23:                                        ; preds = %if.then19, %if.then6, %for.cond
  br label %for.end467, !dbg !6497

if.end24:                                         ; preds = %entry
  %32 = load i8*, i8** %map.addr, align 8, !dbg !6498
  %call25 = call i32 @LocaleCompare(i8* %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !6500
  %cmp26 = icmp eq i32 %call25, 0, !dbg !6501
  br i1 %cmp26, label %if.then27, label %if.end68, !dbg !6502

if.then27:                                        ; preds = %if.end24
  store i64 0, i64* %y, align 8, !dbg !6503
  br label %for.cond28, !dbg !6506

for.cond28:                                       ; preds = %for.inc65, %if.then27
  %33 = load i64, i64* %y, align 8, !dbg !6507
  %34 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6509
  %height29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %34, i32 0, i32 1, !dbg !6510
  %35 = load i64, i64* %height29, align 8, !dbg !6510
  %cmp30 = icmp slt i64 %33, %35, !dbg !6511
  br i1 %cmp30, label %for.body31, label %for.end67, !dbg !6512

for.body31:                                       ; preds = %for.cond28
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6513
  %37 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6515
  %x32 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %37, i32 0, i32 2, !dbg !6516
  %38 = load i64, i64* %x32, align 8, !dbg !6516
  %39 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6517
  %y33 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %39, i32 0, i32 3, !dbg !6518
  %40 = load i64, i64* %y33, align 8, !dbg !6518
  %41 = load i64, i64* %y, align 8, !dbg !6519
  %add34 = add nsw i64 %40, %41, !dbg !6520
  %42 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6521
  %width35 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %42, i32 0, i32 0, !dbg !6522
  %43 = load i64, i64* %width35, align 8, !dbg !6522
  %44 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6523
  %call36 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %36, i64 %38, i64 %add34, i64 %43, i64 1, %struct._ExceptionInfo* %44), !dbg !6524
  store %struct._PixelPacket* %call36, %struct._PixelPacket** %q, align 8, !dbg !6525
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6526
  %cmp37 = icmp eq %struct._PixelPacket* %45, null, !dbg !6528
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !6529

if.then38:                                        ; preds = %for.body31
  br label %for.end67, !dbg !6530

if.end39:                                         ; preds = %for.body31
  store i64 0, i64* %x, align 8, !dbg !6531
  br label %for.cond40, !dbg !6533

for.cond40:                                       ; preds = %for.inc57, %if.end39
  %46 = load i64, i64* %x, align 8, !dbg !6534
  %47 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6536
  %width41 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %47, i32 0, i32 0, !dbg !6537
  %48 = load i64, i64* %width41, align 8, !dbg !6537
  %cmp42 = icmp slt i64 %46, %48, !dbg !6538
  br i1 %cmp42, label %for.body43, label %for.end59, !dbg !6539

for.body43:                                       ; preds = %for.cond40
  %49 = load i8*, i8** %p, align 8, !dbg !6540
  %incdec.ptr44 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !6540
  store i8* %incdec.ptr44, i8** %p, align 8, !dbg !6540
  %50 = load i8, i8* %49, align 1, !dbg !6540
  %call45 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %50), !dbg !6540
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6540
  %blue46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 0, i32 0, !dbg !6540
  store i16 %call45, i16* %blue46, align 2, !dbg !6540
  %52 = load i8*, i8** %p, align 8, !dbg !6542
  %incdec.ptr47 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !6542
  store i8* %incdec.ptr47, i8** %p, align 8, !dbg !6542
  %53 = load i8, i8* %52, align 1, !dbg !6542
  %call48 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %53), !dbg !6542
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6542
  %green49 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 1, !dbg !6542
  store i16 %call48, i16* %green49, align 2, !dbg !6542
  %55 = load i8*, i8** %p, align 8, !dbg !6543
  %incdec.ptr50 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !6543
  store i8* %incdec.ptr50, i8** %p, align 8, !dbg !6543
  %56 = load i8, i8* %55, align 1, !dbg !6543
  %call51 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %56), !dbg !6543
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6543
  %red52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 2, !dbg !6543
  store i16 %call51, i16* %red52, align 2, !dbg !6543
  %58 = load i8*, i8** %p, align 8, !dbg !6544
  %incdec.ptr53 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !6544
  store i8* %incdec.ptr53, i8** %p, align 8, !dbg !6544
  %59 = load i8, i8* %58, align 1, !dbg !6544
  %call54 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %59), !dbg !6544
  %conv = zext i16 %call54 to i32, !dbg !6544
  %sub = sub nsw i32 65535, %conv, !dbg !6544
  %conv55 = trunc i32 %sub to i16, !dbg !6544
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6544
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 3, !dbg !6544
  store i16 %conv55, i16* %opacity, align 2, !dbg !6544
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6545
  %incdec.ptr56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 1, !dbg !6545
  store %struct._PixelPacket* %incdec.ptr56, %struct._PixelPacket** %q, align 8, !dbg !6545
  br label %for.inc57, !dbg !6546

for.inc57:                                        ; preds = %for.body43
  %62 = load i64, i64* %x, align 8, !dbg !6547
  %inc58 = add nsw i64 %62, 1, !dbg !6547
  store i64 %inc58, i64* %x, align 8, !dbg !6547
  br label %for.cond40, !dbg !6548, !llvm.loop !6549

for.end59:                                        ; preds = %for.cond40
  %63 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6551
  %64 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6553
  %call60 = call i32 @SyncAuthenticPixels(%struct._Image* %63, %struct._ExceptionInfo* %64), !dbg !6554
  %cmp61 = icmp eq i32 %call60, 0, !dbg !6555
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !6556

if.then63:                                        ; preds = %for.end59
  br label %for.end67, !dbg !6557

if.end64:                                         ; preds = %for.end59
  br label %for.inc65, !dbg !6558

for.inc65:                                        ; preds = %if.end64
  %65 = load i64, i64* %y, align 8, !dbg !6559
  %inc66 = add nsw i64 %65, 1, !dbg !6559
  store i64 %inc66, i64* %y, align 8, !dbg !6559
  br label %for.cond28, !dbg !6560, !llvm.loop !6561

for.end67:                                        ; preds = %if.then63, %if.then38, %for.cond28
  br label %for.end467, !dbg !6563

if.end68:                                         ; preds = %if.end24
  %66 = load i8*, i8** %map.addr, align 8, !dbg !6564
  %call69 = call i32 @LocaleCompare(i8* %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)), !dbg !6566
  %cmp70 = icmp eq i32 %call69, 0, !dbg !6567
  br i1 %cmp70, label %if.then72, label %if.end116, !dbg !6568

if.then72:                                        ; preds = %if.end68
  store i64 0, i64* %y, align 8, !dbg !6569
  br label %for.cond73, !dbg !6572

for.cond73:                                       ; preds = %for.inc113, %if.then72
  %67 = load i64, i64* %y, align 8, !dbg !6573
  %68 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6575
  %height74 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %68, i32 0, i32 1, !dbg !6576
  %69 = load i64, i64* %height74, align 8, !dbg !6576
  %cmp75 = icmp slt i64 %67, %69, !dbg !6577
  br i1 %cmp75, label %for.body77, label %for.end115, !dbg !6578

for.body77:                                       ; preds = %for.cond73
  %70 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6579
  %71 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6581
  %x78 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %71, i32 0, i32 2, !dbg !6582
  %72 = load i64, i64* %x78, align 8, !dbg !6582
  %73 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6583
  %y79 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %73, i32 0, i32 3, !dbg !6584
  %74 = load i64, i64* %y79, align 8, !dbg !6584
  %75 = load i64, i64* %y, align 8, !dbg !6585
  %add80 = add nsw i64 %74, %75, !dbg !6586
  %76 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6587
  %width81 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %76, i32 0, i32 0, !dbg !6588
  %77 = load i64, i64* %width81, align 8, !dbg !6588
  %78 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6589
  %call82 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %70, i64 %72, i64 %add80, i64 %77, i64 1, %struct._ExceptionInfo* %78), !dbg !6590
  store %struct._PixelPacket* %call82, %struct._PixelPacket** %q, align 8, !dbg !6591
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6592
  %cmp83 = icmp eq %struct._PixelPacket* %79, null, !dbg !6594
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !6595

if.then85:                                        ; preds = %for.body77
  br label %for.end115, !dbg !6596

if.end86:                                         ; preds = %for.body77
  store i64 0, i64* %x, align 8, !dbg !6597
  br label %for.cond87, !dbg !6599

for.cond87:                                       ; preds = %for.inc105, %if.end86
  %80 = load i64, i64* %x, align 8, !dbg !6600
  %81 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6602
  %width88 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %81, i32 0, i32 0, !dbg !6603
  %82 = load i64, i64* %width88, align 8, !dbg !6603
  %cmp89 = icmp slt i64 %80, %82, !dbg !6604
  br i1 %cmp89, label %for.body91, label %for.end107, !dbg !6605

for.body91:                                       ; preds = %for.cond87
  %83 = load i8*, i8** %p, align 8, !dbg !6606
  %incdec.ptr92 = getelementptr inbounds i8, i8* %83, i32 1, !dbg !6606
  store i8* %incdec.ptr92, i8** %p, align 8, !dbg !6606
  %84 = load i8, i8* %83, align 1, !dbg !6606
  %call93 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %84), !dbg !6606
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6606
  %blue94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 0, !dbg !6606
  store i16 %call93, i16* %blue94, align 2, !dbg !6606
  %86 = load i8*, i8** %p, align 8, !dbg !6608
  %incdec.ptr95 = getelementptr inbounds i8, i8* %86, i32 1, !dbg !6608
  store i8* %incdec.ptr95, i8** %p, align 8, !dbg !6608
  %87 = load i8, i8* %86, align 1, !dbg !6608
  %call96 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %87), !dbg !6608
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6608
  %green97 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 1, !dbg !6608
  store i16 %call96, i16* %green97, align 2, !dbg !6608
  %89 = load i8*, i8** %p, align 8, !dbg !6609
  %incdec.ptr98 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !6609
  store i8* %incdec.ptr98, i8** %p, align 8, !dbg !6609
  %90 = load i8, i8* %89, align 1, !dbg !6609
  %call99 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %90), !dbg !6609
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6609
  %red100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i32 0, i32 2, !dbg !6609
  store i16 %call99, i16* %red100, align 2, !dbg !6609
  %92 = load i8*, i8** %p, align 8, !dbg !6610
  %incdec.ptr101 = getelementptr inbounds i8, i8* %92, i32 1, !dbg !6610
  store i8* %incdec.ptr101, i8** %p, align 8, !dbg !6610
  %93 = load i8, i8* %92, align 1, !dbg !6610
  %call102 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %93), !dbg !6610
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6610
  %opacity103 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 0, i32 3, !dbg !6610
  store i16 %call102, i16* %opacity103, align 2, !dbg !6610
  %95 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6611
  %incdec.ptr104 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %95, i32 1, !dbg !6611
  store %struct._PixelPacket* %incdec.ptr104, %struct._PixelPacket** %q, align 8, !dbg !6611
  br label %for.inc105, !dbg !6612

for.inc105:                                       ; preds = %for.body91
  %96 = load i64, i64* %x, align 8, !dbg !6613
  %inc106 = add nsw i64 %96, 1, !dbg !6613
  store i64 %inc106, i64* %x, align 8, !dbg !6613
  br label %for.cond87, !dbg !6614, !llvm.loop !6615

for.end107:                                       ; preds = %for.cond87
  %97 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6617
  %98 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6619
  %call108 = call i32 @SyncAuthenticPixels(%struct._Image* %97, %struct._ExceptionInfo* %98), !dbg !6620
  %cmp109 = icmp eq i32 %call108, 0, !dbg !6621
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !6622

if.then111:                                       ; preds = %for.end107
  br label %for.end115, !dbg !6623

if.end112:                                        ; preds = %for.end107
  br label %for.inc113, !dbg !6624

for.inc113:                                       ; preds = %if.end112
  %99 = load i64, i64* %y, align 8, !dbg !6625
  %inc114 = add nsw i64 %99, 1, !dbg !6625
  store i64 %inc114, i64* %y, align 8, !dbg !6625
  br label %for.cond73, !dbg !6626, !llvm.loop !6627

for.end115:                                       ; preds = %if.then111, %if.then85, %for.cond73
  br label %for.end467, !dbg !6629

if.end116:                                        ; preds = %if.end68
  %100 = load i8*, i8** %map.addr, align 8, !dbg !6630
  %call117 = call i32 @LocaleCompare(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !6632
  %cmp118 = icmp eq i32 %call117, 0, !dbg !6633
  br i1 %cmp118, label %if.then120, label %if.end162, !dbg !6634

if.then120:                                       ; preds = %if.end116
  store i64 0, i64* %y, align 8, !dbg !6635
  br label %for.cond121, !dbg !6638

for.cond121:                                      ; preds = %for.inc159, %if.then120
  %101 = load i64, i64* %y, align 8, !dbg !6639
  %102 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6641
  %height122 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %102, i32 0, i32 1, !dbg !6642
  %103 = load i64, i64* %height122, align 8, !dbg !6642
  %cmp123 = icmp slt i64 %101, %103, !dbg !6643
  br i1 %cmp123, label %for.body125, label %for.end161, !dbg !6644

for.body125:                                      ; preds = %for.cond121
  %104 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6645
  %105 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6647
  %x126 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %105, i32 0, i32 2, !dbg !6648
  %106 = load i64, i64* %x126, align 8, !dbg !6648
  %107 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6649
  %y127 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %107, i32 0, i32 3, !dbg !6650
  %108 = load i64, i64* %y127, align 8, !dbg !6650
  %109 = load i64, i64* %y, align 8, !dbg !6651
  %add128 = add nsw i64 %108, %109, !dbg !6652
  %110 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6653
  %width129 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %110, i32 0, i32 0, !dbg !6654
  %111 = load i64, i64* %width129, align 8, !dbg !6654
  %112 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6655
  %call130 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %104, i64 %106, i64 %add128, i64 %111, i64 1, %struct._ExceptionInfo* %112), !dbg !6656
  store %struct._PixelPacket* %call130, %struct._PixelPacket** %q, align 8, !dbg !6657
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6658
  %cmp131 = icmp eq %struct._PixelPacket* %113, null, !dbg !6660
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !6661

if.then133:                                       ; preds = %for.body125
  br label %for.end161, !dbg !6662

if.end134:                                        ; preds = %for.body125
  store i64 0, i64* %x, align 8, !dbg !6663
  br label %for.cond135, !dbg !6665

for.cond135:                                      ; preds = %for.inc151, %if.end134
  %114 = load i64, i64* %x, align 8, !dbg !6666
  %115 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6668
  %width136 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %115, i32 0, i32 0, !dbg !6669
  %116 = load i64, i64* %width136, align 8, !dbg !6669
  %cmp137 = icmp slt i64 %114, %116, !dbg !6670
  br i1 %cmp137, label %for.body139, label %for.end153, !dbg !6671

for.body139:                                      ; preds = %for.cond135
  %117 = load i8*, i8** %p, align 8, !dbg !6672
  %incdec.ptr140 = getelementptr inbounds i8, i8* %117, i32 1, !dbg !6672
  store i8* %incdec.ptr140, i8** %p, align 8, !dbg !6672
  %118 = load i8, i8* %117, align 1, !dbg !6672
  %call141 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %118), !dbg !6672
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6672
  %blue142 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 0, !dbg !6672
  store i16 %call141, i16* %blue142, align 2, !dbg !6672
  %120 = load i8*, i8** %p, align 8, !dbg !6674
  %incdec.ptr143 = getelementptr inbounds i8, i8* %120, i32 1, !dbg !6674
  store i8* %incdec.ptr143, i8** %p, align 8, !dbg !6674
  %121 = load i8, i8* %120, align 1, !dbg !6674
  %call144 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %121), !dbg !6674
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6674
  %green145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 1, !dbg !6674
  store i16 %call144, i16* %green145, align 2, !dbg !6674
  %123 = load i8*, i8** %p, align 8, !dbg !6675
  %incdec.ptr146 = getelementptr inbounds i8, i8* %123, i32 1, !dbg !6675
  store i8* %incdec.ptr146, i8** %p, align 8, !dbg !6675
  %124 = load i8, i8* %123, align 1, !dbg !6675
  %call147 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %124), !dbg !6675
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6675
  %red148 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 0, i32 2, !dbg !6675
  store i16 %call147, i16* %red148, align 2, !dbg !6675
  %126 = load i8*, i8** %p, align 8, !dbg !6676
  %incdec.ptr149 = getelementptr inbounds i8, i8* %126, i32 1, !dbg !6676
  store i8* %incdec.ptr149, i8** %p, align 8, !dbg !6676
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6677
  %incdec.ptr150 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %127, i32 1, !dbg !6677
  store %struct._PixelPacket* %incdec.ptr150, %struct._PixelPacket** %q, align 8, !dbg !6677
  br label %for.inc151, !dbg !6678

for.inc151:                                       ; preds = %for.body139
  %128 = load i64, i64* %x, align 8, !dbg !6679
  %inc152 = add nsw i64 %128, 1, !dbg !6679
  store i64 %inc152, i64* %x, align 8, !dbg !6679
  br label %for.cond135, !dbg !6680, !llvm.loop !6681

for.end153:                                       ; preds = %for.cond135
  %129 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6683
  %130 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6685
  %call154 = call i32 @SyncAuthenticPixels(%struct._Image* %129, %struct._ExceptionInfo* %130), !dbg !6686
  %cmp155 = icmp eq i32 %call154, 0, !dbg !6687
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !6688

if.then157:                                       ; preds = %for.end153
  br label %for.end161, !dbg !6689

if.end158:                                        ; preds = %for.end153
  br label %for.inc159, !dbg !6690

for.inc159:                                       ; preds = %if.end158
  %131 = load i64, i64* %y, align 8, !dbg !6691
  %inc160 = add nsw i64 %131, 1, !dbg !6691
  store i64 %inc160, i64* %y, align 8, !dbg !6691
  br label %for.cond121, !dbg !6692, !llvm.loop !6693

for.end161:                                       ; preds = %if.then157, %if.then133, %for.cond121
  br label %for.end467, !dbg !6695

if.end162:                                        ; preds = %if.end116
  %132 = load i8*, i8** %map.addr, align 8, !dbg !6696
  %call163 = call i32 @LocaleCompare(i8* %132, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !6698
  %cmp164 = icmp eq i32 %call163, 0, !dbg !6699
  br i1 %cmp164, label %if.then166, label %if.end205, !dbg !6700

if.then166:                                       ; preds = %if.end162
  store i64 0, i64* %y, align 8, !dbg !6701
  br label %for.cond167, !dbg !6704

for.cond167:                                      ; preds = %for.inc202, %if.then166
  %133 = load i64, i64* %y, align 8, !dbg !6705
  %134 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6707
  %height168 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %134, i32 0, i32 1, !dbg !6708
  %135 = load i64, i64* %height168, align 8, !dbg !6708
  %cmp169 = icmp slt i64 %133, %135, !dbg !6709
  br i1 %cmp169, label %for.body171, label %for.end204, !dbg !6710

for.body171:                                      ; preds = %for.cond167
  %136 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6711
  %137 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6713
  %x172 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %137, i32 0, i32 2, !dbg !6714
  %138 = load i64, i64* %x172, align 8, !dbg !6714
  %139 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6715
  %y173 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %139, i32 0, i32 3, !dbg !6716
  %140 = load i64, i64* %y173, align 8, !dbg !6716
  %141 = load i64, i64* %y, align 8, !dbg !6717
  %add174 = add nsw i64 %140, %141, !dbg !6718
  %142 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6719
  %width175 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %142, i32 0, i32 0, !dbg !6720
  %143 = load i64, i64* %width175, align 8, !dbg !6720
  %144 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6721
  %call176 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %136, i64 %138, i64 %add174, i64 %143, i64 1, %struct._ExceptionInfo* %144), !dbg !6722
  store %struct._PixelPacket* %call176, %struct._PixelPacket** %q, align 8, !dbg !6723
  %145 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6724
  %cmp177 = icmp eq %struct._PixelPacket* %145, null, !dbg !6726
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !6727

if.then179:                                       ; preds = %for.body171
  br label %for.end204, !dbg !6728

if.end180:                                        ; preds = %for.body171
  store i64 0, i64* %x, align 8, !dbg !6729
  br label %for.cond181, !dbg !6731

for.cond181:                                      ; preds = %for.inc194, %if.end180
  %146 = load i64, i64* %x, align 8, !dbg !6732
  %147 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6734
  %width182 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %147, i32 0, i32 0, !dbg !6735
  %148 = load i64, i64* %width182, align 8, !dbg !6735
  %cmp183 = icmp slt i64 %146, %148, !dbg !6736
  br i1 %cmp183, label %for.body185, label %for.end196, !dbg !6737

for.body185:                                      ; preds = %for.cond181
  %149 = load i8*, i8** %p, align 8, !dbg !6738
  %incdec.ptr186 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !6738
  store i8* %incdec.ptr186, i8** %p, align 8, !dbg !6738
  %150 = load i8, i8* %149, align 1, !dbg !6738
  %call187 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %150), !dbg !6738
  %151 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6738
  %red188 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %151, i32 0, i32 2, !dbg !6738
  store i16 %call187, i16* %red188, align 2, !dbg !6738
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6740
  %red189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 0, i32 2, !dbg !6740
  %153 = load i16, i16* %red189, align 2, !dbg !6740
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6740
  %green190 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %154, i32 0, i32 1, !dbg !6740
  store i16 %153, i16* %green190, align 2, !dbg !6740
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6741
  %red191 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %155, i32 0, i32 2, !dbg !6741
  %156 = load i16, i16* %red191, align 2, !dbg !6741
  %157 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6741
  %blue192 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %157, i32 0, i32 0, !dbg !6741
  store i16 %156, i16* %blue192, align 2, !dbg !6741
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6742
  %incdec.ptr193 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %158, i32 1, !dbg !6742
  store %struct._PixelPacket* %incdec.ptr193, %struct._PixelPacket** %q, align 8, !dbg !6742
  br label %for.inc194, !dbg !6743

for.inc194:                                       ; preds = %for.body185
  %159 = load i64, i64* %x, align 8, !dbg !6744
  %inc195 = add nsw i64 %159, 1, !dbg !6744
  store i64 %inc195, i64* %x, align 8, !dbg !6744
  br label %for.cond181, !dbg !6745, !llvm.loop !6746

for.end196:                                       ; preds = %for.cond181
  %160 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6748
  %161 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6750
  %call197 = call i32 @SyncAuthenticPixels(%struct._Image* %160, %struct._ExceptionInfo* %161), !dbg !6751
  %cmp198 = icmp eq i32 %call197, 0, !dbg !6752
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !6753

if.then200:                                       ; preds = %for.end196
  br label %for.end204, !dbg !6754

if.end201:                                        ; preds = %for.end196
  br label %for.inc202, !dbg !6755

for.inc202:                                       ; preds = %if.end201
  %162 = load i64, i64* %y, align 8, !dbg !6756
  %inc203 = add nsw i64 %162, 1, !dbg !6756
  store i64 %inc203, i64* %y, align 8, !dbg !6756
  br label %for.cond167, !dbg !6757, !llvm.loop !6758

for.end204:                                       ; preds = %if.then200, %if.then179, %for.cond167
  br label %for.end467, !dbg !6760

if.end205:                                        ; preds = %if.end162
  %163 = load i8*, i8** %map.addr, align 8, !dbg !6761
  %call206 = call i32 @LocaleCompare(i8* %163, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !6763
  %cmp207 = icmp eq i32 %call206, 0, !dbg !6764
  br i1 %cmp207, label %if.then209, label %if.end250, !dbg !6765

if.then209:                                       ; preds = %if.end205
  store i64 0, i64* %y, align 8, !dbg !6766
  br label %for.cond210, !dbg !6769

for.cond210:                                      ; preds = %for.inc247, %if.then209
  %164 = load i64, i64* %y, align 8, !dbg !6770
  %165 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6772
  %height211 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %165, i32 0, i32 1, !dbg !6773
  %166 = load i64, i64* %height211, align 8, !dbg !6773
  %cmp212 = icmp slt i64 %164, %166, !dbg !6774
  br i1 %cmp212, label %for.body214, label %for.end249, !dbg !6775

for.body214:                                      ; preds = %for.cond210
  %167 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6776
  %168 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6778
  %x215 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %168, i32 0, i32 2, !dbg !6779
  %169 = load i64, i64* %x215, align 8, !dbg !6779
  %170 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6780
  %y216 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %170, i32 0, i32 3, !dbg !6781
  %171 = load i64, i64* %y216, align 8, !dbg !6781
  %172 = load i64, i64* %y, align 8, !dbg !6782
  %add217 = add nsw i64 %171, %172, !dbg !6783
  %173 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6784
  %width218 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %173, i32 0, i32 0, !dbg !6785
  %174 = load i64, i64* %width218, align 8, !dbg !6785
  %175 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6786
  %call219 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %167, i64 %169, i64 %add217, i64 %174, i64 1, %struct._ExceptionInfo* %175), !dbg !6787
  store %struct._PixelPacket* %call219, %struct._PixelPacket** %q, align 8, !dbg !6788
  %176 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6789
  %cmp220 = icmp eq %struct._PixelPacket* %176, null, !dbg !6791
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !6792

if.then222:                                       ; preds = %for.body214
  br label %for.end249, !dbg !6793

if.end223:                                        ; preds = %for.body214
  store i64 0, i64* %x, align 8, !dbg !6794
  br label %for.cond224, !dbg !6796

for.cond224:                                      ; preds = %for.inc239, %if.end223
  %177 = load i64, i64* %x, align 8, !dbg !6797
  %178 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6799
  %width225 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %178, i32 0, i32 0, !dbg !6800
  %179 = load i64, i64* %width225, align 8, !dbg !6800
  %cmp226 = icmp slt i64 %177, %179, !dbg !6801
  br i1 %cmp226, label %for.body228, label %for.end241, !dbg !6802

for.body228:                                      ; preds = %for.cond224
  %180 = load i8*, i8** %p, align 8, !dbg !6803
  %incdec.ptr229 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !6803
  store i8* %incdec.ptr229, i8** %p, align 8, !dbg !6803
  %181 = load i8, i8* %180, align 1, !dbg !6803
  %call230 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %181), !dbg !6803
  %182 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6803
  %red231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %182, i32 0, i32 2, !dbg !6803
  store i16 %call230, i16* %red231, align 2, !dbg !6803
  %183 = load i8*, i8** %p, align 8, !dbg !6805
  %incdec.ptr232 = getelementptr inbounds i8, i8* %183, i32 1, !dbg !6805
  store i8* %incdec.ptr232, i8** %p, align 8, !dbg !6805
  %184 = load i8, i8* %183, align 1, !dbg !6805
  %call233 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %184), !dbg !6805
  %185 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6805
  %green234 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %185, i32 0, i32 1, !dbg !6805
  store i16 %call233, i16* %green234, align 2, !dbg !6805
  %186 = load i8*, i8** %p, align 8, !dbg !6806
  %incdec.ptr235 = getelementptr inbounds i8, i8* %186, i32 1, !dbg !6806
  store i8* %incdec.ptr235, i8** %p, align 8, !dbg !6806
  %187 = load i8, i8* %186, align 1, !dbg !6806
  %call236 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %187), !dbg !6806
  %188 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6806
  %blue237 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %188, i32 0, i32 0, !dbg !6806
  store i16 %call236, i16* %blue237, align 2, !dbg !6806
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6807
  %incdec.ptr238 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %189, i32 1, !dbg !6807
  store %struct._PixelPacket* %incdec.ptr238, %struct._PixelPacket** %q, align 8, !dbg !6807
  br label %for.inc239, !dbg !6808

for.inc239:                                       ; preds = %for.body228
  %190 = load i64, i64* %x, align 8, !dbg !6809
  %inc240 = add nsw i64 %190, 1, !dbg !6809
  store i64 %inc240, i64* %x, align 8, !dbg !6809
  br label %for.cond224, !dbg !6810, !llvm.loop !6811

for.end241:                                       ; preds = %for.cond224
  %191 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6813
  %192 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6815
  %call242 = call i32 @SyncAuthenticPixels(%struct._Image* %191, %struct._ExceptionInfo* %192), !dbg !6816
  %cmp243 = icmp eq i32 %call242, 0, !dbg !6817
  br i1 %cmp243, label %if.then245, label %if.end246, !dbg !6818

if.then245:                                       ; preds = %for.end241
  br label %for.end249, !dbg !6819

if.end246:                                        ; preds = %for.end241
  br label %for.inc247, !dbg !6820

for.inc247:                                       ; preds = %if.end246
  %193 = load i64, i64* %y, align 8, !dbg !6821
  %inc248 = add nsw i64 %193, 1, !dbg !6821
  store i64 %inc248, i64* %y, align 8, !dbg !6821
  br label %for.cond210, !dbg !6822, !llvm.loop !6823

for.end249:                                       ; preds = %if.then245, %if.then222, %for.cond210
  br label %for.end467, !dbg !6825

if.end250:                                        ; preds = %if.end205
  %194 = load i8*, i8** %map.addr, align 8, !dbg !6826
  %call251 = call i32 @LocaleCompare(i8* %194, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !6828
  %cmp252 = icmp eq i32 %call251, 0, !dbg !6829
  br i1 %cmp252, label %if.then254, label %if.end301, !dbg !6830

if.then254:                                       ; preds = %if.end250
  store i64 0, i64* %y, align 8, !dbg !6831
  br label %for.cond255, !dbg !6834

for.cond255:                                      ; preds = %for.inc298, %if.then254
  %195 = load i64, i64* %y, align 8, !dbg !6835
  %196 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6837
  %height256 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %196, i32 0, i32 1, !dbg !6838
  %197 = load i64, i64* %height256, align 8, !dbg !6838
  %cmp257 = icmp slt i64 %195, %197, !dbg !6839
  br i1 %cmp257, label %for.body259, label %for.end300, !dbg !6840

for.body259:                                      ; preds = %for.cond255
  %198 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6841
  %199 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6843
  %x260 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %199, i32 0, i32 2, !dbg !6844
  %200 = load i64, i64* %x260, align 8, !dbg !6844
  %201 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6845
  %y261 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %201, i32 0, i32 3, !dbg !6846
  %202 = load i64, i64* %y261, align 8, !dbg !6846
  %203 = load i64, i64* %y, align 8, !dbg !6847
  %add262 = add nsw i64 %202, %203, !dbg !6848
  %204 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6849
  %width263 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %204, i32 0, i32 0, !dbg !6850
  %205 = load i64, i64* %width263, align 8, !dbg !6850
  %206 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6851
  %call264 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %198, i64 %200, i64 %add262, i64 %205, i64 1, %struct._ExceptionInfo* %206), !dbg !6852
  store %struct._PixelPacket* %call264, %struct._PixelPacket** %q, align 8, !dbg !6853
  %207 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6854
  %cmp265 = icmp eq %struct._PixelPacket* %207, null, !dbg !6856
  br i1 %cmp265, label %if.then267, label %if.end268, !dbg !6857

if.then267:                                       ; preds = %for.body259
  br label %for.end300, !dbg !6858

if.end268:                                        ; preds = %for.body259
  store i64 0, i64* %x, align 8, !dbg !6859
  br label %for.cond269, !dbg !6861

for.cond269:                                      ; preds = %for.inc290, %if.end268
  %208 = load i64, i64* %x, align 8, !dbg !6862
  %209 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6864
  %width270 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %209, i32 0, i32 0, !dbg !6865
  %210 = load i64, i64* %width270, align 8, !dbg !6865
  %cmp271 = icmp slt i64 %208, %210, !dbg !6866
  br i1 %cmp271, label %for.body273, label %for.end292, !dbg !6867

for.body273:                                      ; preds = %for.cond269
  %211 = load i8*, i8** %p, align 8, !dbg !6868
  %incdec.ptr274 = getelementptr inbounds i8, i8* %211, i32 1, !dbg !6868
  store i8* %incdec.ptr274, i8** %p, align 8, !dbg !6868
  %212 = load i8, i8* %211, align 1, !dbg !6868
  %call275 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %212), !dbg !6868
  %213 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6868
  %red276 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %213, i32 0, i32 2, !dbg !6868
  store i16 %call275, i16* %red276, align 2, !dbg !6868
  %214 = load i8*, i8** %p, align 8, !dbg !6870
  %incdec.ptr277 = getelementptr inbounds i8, i8* %214, i32 1, !dbg !6870
  store i8* %incdec.ptr277, i8** %p, align 8, !dbg !6870
  %215 = load i8, i8* %214, align 1, !dbg !6870
  %call278 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %215), !dbg !6870
  %216 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6870
  %green279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %216, i32 0, i32 1, !dbg !6870
  store i16 %call278, i16* %green279, align 2, !dbg !6870
  %217 = load i8*, i8** %p, align 8, !dbg !6871
  %incdec.ptr280 = getelementptr inbounds i8, i8* %217, i32 1, !dbg !6871
  store i8* %incdec.ptr280, i8** %p, align 8, !dbg !6871
  %218 = load i8, i8* %217, align 1, !dbg !6871
  %call281 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %218), !dbg !6871
  %219 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6871
  %blue282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %219, i32 0, i32 0, !dbg !6871
  store i16 %call281, i16* %blue282, align 2, !dbg !6871
  %220 = load i8*, i8** %p, align 8, !dbg !6872
  %incdec.ptr283 = getelementptr inbounds i8, i8* %220, i32 1, !dbg !6872
  store i8* %incdec.ptr283, i8** %p, align 8, !dbg !6872
  %221 = load i8, i8* %220, align 1, !dbg !6872
  %call284 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %221), !dbg !6872
  %conv285 = zext i16 %call284 to i32, !dbg !6872
  %sub286 = sub nsw i32 65535, %conv285, !dbg !6872
  %conv287 = trunc i32 %sub286 to i16, !dbg !6872
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6872
  %opacity288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 0, i32 3, !dbg !6872
  store i16 %conv287, i16* %opacity288, align 2, !dbg !6872
  %223 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6873
  %incdec.ptr289 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %223, i32 1, !dbg !6873
  store %struct._PixelPacket* %incdec.ptr289, %struct._PixelPacket** %q, align 8, !dbg !6873
  br label %for.inc290, !dbg !6874

for.inc290:                                       ; preds = %for.body273
  %224 = load i64, i64* %x, align 8, !dbg !6875
  %inc291 = add nsw i64 %224, 1, !dbg !6875
  store i64 %inc291, i64* %x, align 8, !dbg !6875
  br label %for.cond269, !dbg !6876, !llvm.loop !6877

for.end292:                                       ; preds = %for.cond269
  %225 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6879
  %226 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6881
  %call293 = call i32 @SyncAuthenticPixels(%struct._Image* %225, %struct._ExceptionInfo* %226), !dbg !6882
  %cmp294 = icmp eq i32 %call293, 0, !dbg !6883
  br i1 %cmp294, label %if.then296, label %if.end297, !dbg !6884

if.then296:                                       ; preds = %for.end292
  br label %for.end300, !dbg !6885

if.end297:                                        ; preds = %for.end292
  br label %for.inc298, !dbg !6886

for.inc298:                                       ; preds = %if.end297
  %227 = load i64, i64* %y, align 8, !dbg !6887
  %inc299 = add nsw i64 %227, 1, !dbg !6887
  store i64 %inc299, i64* %y, align 8, !dbg !6887
  br label %for.cond255, !dbg !6888, !llvm.loop !6889

for.end300:                                       ; preds = %if.then296, %if.then267, %for.cond255
  br label %for.end467, !dbg !6891

if.end301:                                        ; preds = %if.end250
  %228 = load i8*, i8** %map.addr, align 8, !dbg !6892
  %call302 = call i32 @LocaleCompare(i8* %228, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0)), !dbg !6894
  %cmp303 = icmp eq i32 %call302, 0, !dbg !6895
  br i1 %cmp303, label %if.then305, label %if.end349, !dbg !6896

if.then305:                                       ; preds = %if.end301
  store i64 0, i64* %y, align 8, !dbg !6897
  br label %for.cond306, !dbg !6900

for.cond306:                                      ; preds = %for.inc346, %if.then305
  %229 = load i64, i64* %y, align 8, !dbg !6901
  %230 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6903
  %height307 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %230, i32 0, i32 1, !dbg !6904
  %231 = load i64, i64* %height307, align 8, !dbg !6904
  %cmp308 = icmp slt i64 %229, %231, !dbg !6905
  br i1 %cmp308, label %for.body310, label %for.end348, !dbg !6906

for.body310:                                      ; preds = %for.cond306
  %232 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6907
  %233 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6909
  %x311 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %233, i32 0, i32 2, !dbg !6910
  %234 = load i64, i64* %x311, align 8, !dbg !6910
  %235 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6911
  %y312 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %235, i32 0, i32 3, !dbg !6912
  %236 = load i64, i64* %y312, align 8, !dbg !6912
  %237 = load i64, i64* %y, align 8, !dbg !6913
  %add313 = add nsw i64 %236, %237, !dbg !6914
  %238 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6915
  %width314 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %238, i32 0, i32 0, !dbg !6916
  %239 = load i64, i64* %width314, align 8, !dbg !6916
  %240 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6917
  %call315 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %232, i64 %234, i64 %add313, i64 %239, i64 1, %struct._ExceptionInfo* %240), !dbg !6918
  store %struct._PixelPacket* %call315, %struct._PixelPacket** %q, align 8, !dbg !6919
  %241 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6920
  %cmp316 = icmp eq %struct._PixelPacket* %241, null, !dbg !6922
  br i1 %cmp316, label %if.then318, label %if.end319, !dbg !6923

if.then318:                                       ; preds = %for.body310
  br label %for.end348, !dbg !6924

if.end319:                                        ; preds = %for.body310
  store i64 0, i64* %x, align 8, !dbg !6925
  br label %for.cond320, !dbg !6927

for.cond320:                                      ; preds = %for.inc338, %if.end319
  %242 = load i64, i64* %x, align 8, !dbg !6928
  %243 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6930
  %width321 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %243, i32 0, i32 0, !dbg !6931
  %244 = load i64, i64* %width321, align 8, !dbg !6931
  %cmp322 = icmp slt i64 %242, %244, !dbg !6932
  br i1 %cmp322, label %for.body324, label %for.end340, !dbg !6933

for.body324:                                      ; preds = %for.cond320
  %245 = load i8*, i8** %p, align 8, !dbg !6934
  %incdec.ptr325 = getelementptr inbounds i8, i8* %245, i32 1, !dbg !6934
  store i8* %incdec.ptr325, i8** %p, align 8, !dbg !6934
  %246 = load i8, i8* %245, align 1, !dbg !6934
  %call326 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %246), !dbg !6934
  %247 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6934
  %red327 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %247, i32 0, i32 2, !dbg !6934
  store i16 %call326, i16* %red327, align 2, !dbg !6934
  %248 = load i8*, i8** %p, align 8, !dbg !6936
  %incdec.ptr328 = getelementptr inbounds i8, i8* %248, i32 1, !dbg !6936
  store i8* %incdec.ptr328, i8** %p, align 8, !dbg !6936
  %249 = load i8, i8* %248, align 1, !dbg !6936
  %call329 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %249), !dbg !6936
  %250 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6936
  %green330 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %250, i32 0, i32 1, !dbg !6936
  store i16 %call329, i16* %green330, align 2, !dbg !6936
  %251 = load i8*, i8** %p, align 8, !dbg !6937
  %incdec.ptr331 = getelementptr inbounds i8, i8* %251, i32 1, !dbg !6937
  store i8* %incdec.ptr331, i8** %p, align 8, !dbg !6937
  %252 = load i8, i8* %251, align 1, !dbg !6937
  %call332 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %252), !dbg !6937
  %253 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6937
  %blue333 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %253, i32 0, i32 0, !dbg !6937
  store i16 %call332, i16* %blue333, align 2, !dbg !6937
  %254 = load i8*, i8** %p, align 8, !dbg !6938
  %incdec.ptr334 = getelementptr inbounds i8, i8* %254, i32 1, !dbg !6938
  store i8* %incdec.ptr334, i8** %p, align 8, !dbg !6938
  %255 = load i8, i8* %254, align 1, !dbg !6938
  %call335 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %255), !dbg !6938
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6938
  %opacity336 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i32 0, i32 3, !dbg !6938
  store i16 %call335, i16* %opacity336, align 2, !dbg !6938
  %257 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6939
  %incdec.ptr337 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %257, i32 1, !dbg !6939
  store %struct._PixelPacket* %incdec.ptr337, %struct._PixelPacket** %q, align 8, !dbg !6939
  br label %for.inc338, !dbg !6940

for.inc338:                                       ; preds = %for.body324
  %258 = load i64, i64* %x, align 8, !dbg !6941
  %inc339 = add nsw i64 %258, 1, !dbg !6941
  store i64 %inc339, i64* %x, align 8, !dbg !6941
  br label %for.cond320, !dbg !6942, !llvm.loop !6943

for.end340:                                       ; preds = %for.cond320
  %259 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6945
  %260 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6947
  %call341 = call i32 @SyncAuthenticPixels(%struct._Image* %259, %struct._ExceptionInfo* %260), !dbg !6948
  %cmp342 = icmp eq i32 %call341, 0, !dbg !6949
  br i1 %cmp342, label %if.then344, label %if.end345, !dbg !6950

if.then344:                                       ; preds = %for.end340
  br label %for.end348, !dbg !6951

if.end345:                                        ; preds = %for.end340
  br label %for.inc346, !dbg !6952

for.inc346:                                       ; preds = %if.end345
  %261 = load i64, i64* %y, align 8, !dbg !6953
  %inc347 = add nsw i64 %261, 1, !dbg !6953
  store i64 %inc347, i64* %y, align 8, !dbg !6953
  br label %for.cond306, !dbg !6954, !llvm.loop !6955

for.end348:                                       ; preds = %if.then344, %if.then318, %for.cond306
  br label %for.end467, !dbg !6957

if.end349:                                        ; preds = %if.end301
  %262 = load i8*, i8** %map.addr, align 8, !dbg !6958
  %call350 = call i32 @LocaleCompare(i8* %262, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !6960
  %cmp351 = icmp eq i32 %call350, 0, !dbg !6961
  br i1 %cmp351, label %if.then353, label %if.end395, !dbg !6962

if.then353:                                       ; preds = %if.end349
  store i64 0, i64* %y, align 8, !dbg !6963
  br label %for.cond354, !dbg !6966

for.cond354:                                      ; preds = %for.inc392, %if.then353
  %263 = load i64, i64* %y, align 8, !dbg !6967
  %264 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6969
  %height355 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %264, i32 0, i32 1, !dbg !6970
  %265 = load i64, i64* %height355, align 8, !dbg !6970
  %cmp356 = icmp slt i64 %263, %265, !dbg !6971
  br i1 %cmp356, label %for.body358, label %for.end394, !dbg !6972

for.body358:                                      ; preds = %for.cond354
  %266 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6973
  %267 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6975
  %x359 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %267, i32 0, i32 2, !dbg !6976
  %268 = load i64, i64* %x359, align 8, !dbg !6976
  %269 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6977
  %y360 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %269, i32 0, i32 3, !dbg !6978
  %270 = load i64, i64* %y360, align 8, !dbg !6978
  %271 = load i64, i64* %y, align 8, !dbg !6979
  %add361 = add nsw i64 %270, %271, !dbg !6980
  %272 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6981
  %width362 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %272, i32 0, i32 0, !dbg !6982
  %273 = load i64, i64* %width362, align 8, !dbg !6982
  %274 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6983
  %call363 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %266, i64 %268, i64 %add361, i64 %273, i64 1, %struct._ExceptionInfo* %274), !dbg !6984
  store %struct._PixelPacket* %call363, %struct._PixelPacket** %q, align 8, !dbg !6985
  %275 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6986
  %cmp364 = icmp eq %struct._PixelPacket* %275, null, !dbg !6988
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !6989

if.then366:                                       ; preds = %for.body358
  br label %for.end394, !dbg !6990

if.end367:                                        ; preds = %for.body358
  store i64 0, i64* %x, align 8, !dbg !6991
  br label %for.cond368, !dbg !6993

for.cond368:                                      ; preds = %for.inc384, %if.end367
  %276 = load i64, i64* %x, align 8, !dbg !6994
  %277 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !6996
  %width369 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %277, i32 0, i32 0, !dbg !6997
  %278 = load i64, i64* %width369, align 8, !dbg !6997
  %cmp370 = icmp slt i64 %276, %278, !dbg !6998
  br i1 %cmp370, label %for.body372, label %for.end386, !dbg !6999

for.body372:                                      ; preds = %for.cond368
  %279 = load i8*, i8** %p, align 8, !dbg !7000
  %incdec.ptr373 = getelementptr inbounds i8, i8* %279, i32 1, !dbg !7000
  store i8* %incdec.ptr373, i8** %p, align 8, !dbg !7000
  %280 = load i8, i8* %279, align 1, !dbg !7000
  %call374 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %280), !dbg !7000
  %281 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7000
  %red375 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %281, i32 0, i32 2, !dbg !7000
  store i16 %call374, i16* %red375, align 2, !dbg !7000
  %282 = load i8*, i8** %p, align 8, !dbg !7002
  %incdec.ptr376 = getelementptr inbounds i8, i8* %282, i32 1, !dbg !7002
  store i8* %incdec.ptr376, i8** %p, align 8, !dbg !7002
  %283 = load i8, i8* %282, align 1, !dbg !7002
  %call377 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %283), !dbg !7002
  %284 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7002
  %green378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %284, i32 0, i32 1, !dbg !7002
  store i16 %call377, i16* %green378, align 2, !dbg !7002
  %285 = load i8*, i8** %p, align 8, !dbg !7003
  %incdec.ptr379 = getelementptr inbounds i8, i8* %285, i32 1, !dbg !7003
  store i8* %incdec.ptr379, i8** %p, align 8, !dbg !7003
  %286 = load i8, i8* %285, align 1, !dbg !7003
  %call380 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %286), !dbg !7003
  %287 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7003
  %blue381 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %287, i32 0, i32 0, !dbg !7003
  store i16 %call380, i16* %blue381, align 2, !dbg !7003
  %288 = load i8*, i8** %p, align 8, !dbg !7004
  %incdec.ptr382 = getelementptr inbounds i8, i8* %288, i32 1, !dbg !7004
  store i8* %incdec.ptr382, i8** %p, align 8, !dbg !7004
  %289 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7005
  %incdec.ptr383 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %289, i32 1, !dbg !7005
  store %struct._PixelPacket* %incdec.ptr383, %struct._PixelPacket** %q, align 8, !dbg !7005
  br label %for.inc384, !dbg !7006

for.inc384:                                       ; preds = %for.body372
  %290 = load i64, i64* %x, align 8, !dbg !7007
  %inc385 = add nsw i64 %290, 1, !dbg !7007
  store i64 %inc385, i64* %x, align 8, !dbg !7007
  br label %for.cond368, !dbg !7008, !llvm.loop !7009

for.end386:                                       ; preds = %for.cond368
  %291 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7011
  %292 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7013
  %call387 = call i32 @SyncAuthenticPixels(%struct._Image* %291, %struct._ExceptionInfo* %292), !dbg !7014
  %cmp388 = icmp eq i32 %call387, 0, !dbg !7015
  br i1 %cmp388, label %if.then390, label %if.end391, !dbg !7016

if.then390:                                       ; preds = %for.end386
  br label %for.end394, !dbg !7017

if.end391:                                        ; preds = %for.end386
  br label %for.inc392, !dbg !7018

for.inc392:                                       ; preds = %if.end391
  %293 = load i64, i64* %y, align 8, !dbg !7019
  %inc393 = add nsw i64 %293, 1, !dbg !7019
  store i64 %inc393, i64* %y, align 8, !dbg !7019
  br label %for.cond354, !dbg !7020, !llvm.loop !7021

for.end394:                                       ; preds = %if.then390, %if.then366, %for.cond354
  br label %for.end467, !dbg !7023

if.end395:                                        ; preds = %if.end349
  %294 = load i8*, i8** %map.addr, align 8, !dbg !7024
  %call396 = call i64 @strlen(i8* %294) #13, !dbg !7025
  store i64 %call396, i64* %length, align 8, !dbg !7026
  store i64 0, i64* %y, align 8, !dbg !7027
  br label %for.cond397, !dbg !7029

for.cond397:                                      ; preds = %for.inc465, %if.end395
  %295 = load i64, i64* %y, align 8, !dbg !7030
  %296 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7032
  %height398 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %296, i32 0, i32 1, !dbg !7033
  %297 = load i64, i64* %height398, align 8, !dbg !7033
  %cmp399 = icmp slt i64 %295, %297, !dbg !7034
  br i1 %cmp399, label %for.body401, label %for.end467, !dbg !7035

for.body401:                                      ; preds = %for.cond397
  %298 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7036
  %299 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7038
  %x402 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %299, i32 0, i32 2, !dbg !7039
  %300 = load i64, i64* %x402, align 8, !dbg !7039
  %301 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7040
  %y403 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %301, i32 0, i32 3, !dbg !7041
  %302 = load i64, i64* %y403, align 8, !dbg !7041
  %303 = load i64, i64* %y, align 8, !dbg !7042
  %add404 = add nsw i64 %302, %303, !dbg !7043
  %304 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7044
  %width405 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %304, i32 0, i32 0, !dbg !7045
  %305 = load i64, i64* %width405, align 8, !dbg !7045
  %306 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7046
  %call406 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %298, i64 %300, i64 %add404, i64 %305, i64 1, %struct._ExceptionInfo* %306), !dbg !7047
  store %struct._PixelPacket* %call406, %struct._PixelPacket** %q, align 8, !dbg !7048
  %307 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7049
  %cmp407 = icmp eq %struct._PixelPacket* %307, null, !dbg !7051
  br i1 %cmp407, label %if.then409, label %if.end410, !dbg !7052

if.then409:                                       ; preds = %for.body401
  br label %for.end467, !dbg !7053

if.end410:                                        ; preds = %for.body401
  %308 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7054
  %call411 = call i16* @GetAuthenticIndexQueue(%struct._Image* %308), !dbg !7055
  store i16* %call411, i16** %indexes, align 8, !dbg !7056
  store i64 0, i64* %x, align 8, !dbg !7057
  br label %for.cond412, !dbg !7059

for.cond412:                                      ; preds = %for.inc457, %if.end410
  %309 = load i64, i64* %x, align 8, !dbg !7060
  %310 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7062
  %width413 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %310, i32 0, i32 0, !dbg !7063
  %311 = load i64, i64* %width413, align 8, !dbg !7063
  %cmp414 = icmp slt i64 %309, %311, !dbg !7064
  br i1 %cmp414, label %for.body416, label %for.end459, !dbg !7065

for.body416:                                      ; preds = %for.cond412
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7066, metadata !DIExpression()), !dbg !7068
  store i64 0, i64* %i, align 8, !dbg !7069
  br label %for.cond417, !dbg !7071

for.cond417:                                      ; preds = %for.inc453, %for.body416
  %312 = load i64, i64* %i, align 8, !dbg !7072
  %313 = load i64, i64* %length, align 8, !dbg !7074
  %cmp418 = icmp slt i64 %312, %313, !dbg !7075
  br i1 %cmp418, label %for.body420, label %for.end455, !dbg !7076

for.body420:                                      ; preds = %for.cond417
  %314 = load i32*, i32** %quantum_map.addr, align 8, !dbg !7077
  %315 = load i64, i64* %i, align 8, !dbg !7079
  %arrayidx = getelementptr inbounds i32, i32* %314, i64 %315, !dbg !7077
  %316 = load i32, i32* %arrayidx, align 4, !dbg !7077
  switch i32 %316, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb423
    i32 12, label %sw.bb423
    i32 3, label %sw.bb426
    i32 19, label %sw.bb426
    i32 1, label %sw.bb429
    i32 13, label %sw.bb435
    i32 2, label %sw.bb438
    i32 11, label %sw.bb445
  ], !dbg !7080

sw.bb:                                            ; preds = %for.body420, %for.body420
  %317 = load i8*, i8** %p, align 8, !dbg !7081
  %318 = load i8, i8* %317, align 1, !dbg !7081
  %call421 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %318), !dbg !7081
  %319 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7081
  %red422 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %319, i32 0, i32 2, !dbg !7081
  store i16 %call421, i16* %red422, align 2, !dbg !7081
  br label %sw.epilog, !dbg !7084

sw.bb423:                                         ; preds = %for.body420, %for.body420
  %320 = load i8*, i8** %p, align 8, !dbg !7085
  %321 = load i8, i8* %320, align 1, !dbg !7085
  %call424 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %321), !dbg !7085
  %322 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7085
  %green425 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %322, i32 0, i32 1, !dbg !7085
  store i16 %call424, i16* %green425, align 2, !dbg !7085
  br label %sw.epilog, !dbg !7087

sw.bb426:                                         ; preds = %for.body420, %for.body420
  %323 = load i8*, i8** %p, align 8, !dbg !7088
  %324 = load i8, i8* %323, align 1, !dbg !7088
  %call427 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %324), !dbg !7088
  %325 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7088
  %blue428 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %325, i32 0, i32 0, !dbg !7088
  store i16 %call427, i16* %blue428, align 2, !dbg !7088
  br label %sw.epilog, !dbg !7090

sw.bb429:                                         ; preds = %for.body420
  %326 = load i8*, i8** %p, align 8, !dbg !7091
  %327 = load i8, i8* %326, align 1, !dbg !7091
  %call430 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %327), !dbg !7091
  %conv431 = zext i16 %call430 to i32, !dbg !7091
  %sub432 = sub nsw i32 65535, %conv431, !dbg !7091
  %conv433 = trunc i32 %sub432 to i16, !dbg !7091
  %328 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7091
  %opacity434 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %328, i32 0, i32 3, !dbg !7091
  store i16 %conv433, i16* %opacity434, align 2, !dbg !7091
  br label %sw.epilog, !dbg !7093

sw.bb435:                                         ; preds = %for.body420
  %329 = load i8*, i8** %p, align 8, !dbg !7094
  %330 = load i8, i8* %329, align 1, !dbg !7094
  %call436 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %330), !dbg !7094
  %331 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7094
  %opacity437 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %331, i32 0, i32 3, !dbg !7094
  store i16 %call436, i16* %opacity437, align 2, !dbg !7094
  br label %sw.epilog, !dbg !7096

sw.bb438:                                         ; preds = %for.body420
  %332 = load i16*, i16** %indexes, align 8, !dbg !7097
  %333 = load i64, i64* %x, align 8, !dbg !7097
  %add.ptr = getelementptr inbounds i16, i16* %332, i64 %333, !dbg !7097
  %cmp439 = icmp ne i16* %add.ptr, null, !dbg !7097
  br i1 %cmp439, label %if.then441, label %if.end444, !dbg !7101

if.then441:                                       ; preds = %sw.bb438
  %334 = load i8*, i8** %p, align 8, !dbg !7097
  %335 = load i8, i8* %334, align 1, !dbg !7097
  %call442 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %335), !dbg !7097
  %336 = load i16*, i16** %indexes, align 8, !dbg !7097
  %337 = load i64, i64* %x, align 8, !dbg !7097
  %add.ptr443 = getelementptr inbounds i16, i16* %336, i64 %337, !dbg !7097
  store i16 %call442, i16* %add.ptr443, align 2, !dbg !7097
  br label %if.end444, !dbg !7097

if.end444:                                        ; preds = %if.then441, %sw.bb438
  br label %sw.epilog, !dbg !7102

sw.bb445:                                         ; preds = %for.body420
  %338 = load i8*, i8** %p, align 8, !dbg !7103
  %339 = load i8, i8* %338, align 1, !dbg !7103
  %call446 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %339), !dbg !7103
  %340 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7103
  %red447 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %340, i32 0, i32 2, !dbg !7103
  store i16 %call446, i16* %red447, align 2, !dbg !7103
  %341 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7105
  %red448 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %341, i32 0, i32 2, !dbg !7105
  %342 = load i16, i16* %red448, align 2, !dbg !7105
  %343 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7105
  %green449 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %343, i32 0, i32 1, !dbg !7105
  store i16 %342, i16* %green449, align 2, !dbg !7105
  %344 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7106
  %red450 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %344, i32 0, i32 2, !dbg !7106
  %345 = load i16, i16* %red450, align 2, !dbg !7106
  %346 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7106
  %blue451 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %346, i32 0, i32 0, !dbg !7106
  store i16 %345, i16* %blue451, align 2, !dbg !7106
  br label %sw.epilog, !dbg !7107

sw.default:                                       ; preds = %for.body420
  br label %sw.epilog, !dbg !7108

sw.epilog:                                        ; preds = %sw.default, %sw.bb445, %if.end444, %sw.bb435, %sw.bb429, %sw.bb426, %sw.bb423, %sw.bb
  %347 = load i8*, i8** %p, align 8, !dbg !7109
  %incdec.ptr452 = getelementptr inbounds i8, i8* %347, i32 1, !dbg !7109
  store i8* %incdec.ptr452, i8** %p, align 8, !dbg !7109
  br label %for.inc453, !dbg !7110

for.inc453:                                       ; preds = %sw.epilog
  %348 = load i64, i64* %i, align 8, !dbg !7111
  %inc454 = add nsw i64 %348, 1, !dbg !7111
  store i64 %inc454, i64* %i, align 8, !dbg !7111
  br label %for.cond417, !dbg !7112, !llvm.loop !7113

for.end455:                                       ; preds = %for.cond417
  %349 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7115
  %incdec.ptr456 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %349, i32 1, !dbg !7115
  store %struct._PixelPacket* %incdec.ptr456, %struct._PixelPacket** %q, align 8, !dbg !7115
  br label %for.inc457, !dbg !7116

for.inc457:                                       ; preds = %for.end455
  %350 = load i64, i64* %x, align 8, !dbg !7117
  %inc458 = add nsw i64 %350, 1, !dbg !7117
  store i64 %inc458, i64* %x, align 8, !dbg !7117
  br label %for.cond412, !dbg !7118, !llvm.loop !7119

for.end459:                                       ; preds = %for.cond412
  %351 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7121
  %352 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7123
  %call460 = call i32 @SyncAuthenticPixels(%struct._Image* %351, %struct._ExceptionInfo* %352), !dbg !7124
  %cmp461 = icmp eq i32 %call460, 0, !dbg !7125
  br i1 %cmp461, label %if.then463, label %if.end464, !dbg !7126

if.then463:                                       ; preds = %for.end459
  br label %for.end467, !dbg !7127

if.end464:                                        ; preds = %for.end459
  br label %for.inc465, !dbg !7128

for.inc465:                                       ; preds = %if.end464
  %353 = load i64, i64* %y, align 8, !dbg !7129
  %inc466 = add nsw i64 %353, 1, !dbg !7129
  store i64 %inc466, i64* %y, align 8, !dbg !7129
  br label %for.cond397, !dbg !7130, !llvm.loop !7131

for.end467:                                       ; preds = %for.end23, %for.end67, %for.end115, %for.end161, %for.end204, %for.end249, %for.end300, %for.end348, %for.end394, %if.then463, %if.then409, %for.cond397
  ret void, !dbg !7133
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportDoublePixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !7134 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %p = alloca double*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7135, metadata !DIExpression()), !dbg !7136
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !7141, metadata !DIExpression()), !dbg !7142
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !7143, metadata !DIExpression()), !dbg !7144
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7145, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.declare(metadata double** %p, metadata !7147, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !7150, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7152, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7154, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.declare(metadata i64* %length, metadata !7156, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7158, metadata !DIExpression()), !dbg !7159
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !7160
  %1 = bitcast i8* %0 to double*, !dbg !7161
  store double* %1, double** %p, align 8, !dbg !7162
  %2 = load i8*, i8** %map.addr, align 8, !dbg !7163
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !7165
  %cmp = icmp eq i32 %call, 0, !dbg !7166
  br i1 %cmp, label %if.then, label %if.end29, !dbg !7167

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !7168
  br label %for.cond, !dbg !7171

for.cond:                                         ; preds = %for.inc26, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !7172
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7174
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !7175
  %5 = load i64, i64* %height, align 8, !dbg !7175
  %cmp1 = icmp slt i64 %3, %5, !dbg !7176
  br i1 %cmp1, label %for.body, label %for.end28, !dbg !7177

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7178
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7180
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !7181
  %8 = load i64, i64* %x2, align 8, !dbg !7181
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7182
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !7183
  %10 = load i64, i64* %y3, align 8, !dbg !7183
  %11 = load i64, i64* %y, align 8, !dbg !7184
  %add = add nsw i64 %10, %11, !dbg !7185
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7186
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !7187
  %13 = load i64, i64* %width, align 8, !dbg !7187
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7188
  %call4 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !7189
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %q, align 8, !dbg !7190
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7191
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !7193
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !7194

if.then6:                                         ; preds = %for.body
  br label %for.end28, !dbg !7195

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !7196
  br label %for.cond7, !dbg !7198

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !7199
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7201
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !7202
  %18 = load i64, i64* %width8, align 8, !dbg !7202
  %cmp9 = icmp slt i64 %16, %18, !dbg !7203
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !7204

for.body10:                                       ; preds = %for.cond7
  %19 = load double*, double** %p, align 8, !dbg !7205
  %20 = load double, double* %19, align 8, !dbg !7205
  %mul = fmul double 6.553500e+04, %20, !dbg !7205
  %conv = fptrunc double %mul to float, !dbg !7205
  %call11 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !7205
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7205
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i32 0, i32 0, !dbg !7205
  store i16 %call11, i16* %blue, align 2, !dbg !7205
  %22 = load double*, double** %p, align 8, !dbg !7207
  %incdec.ptr = getelementptr inbounds double, double* %22, i32 1, !dbg !7207
  store double* %incdec.ptr, double** %p, align 8, !dbg !7207
  %23 = load double*, double** %p, align 8, !dbg !7208
  %24 = load double, double* %23, align 8, !dbg !7208
  %mul12 = fmul double 6.553500e+04, %24, !dbg !7208
  %conv13 = fptrunc double %mul12 to float, !dbg !7208
  %call14 = call zeroext i16 @ClampToQuantum(float %conv13), !dbg !7208
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7208
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 1, !dbg !7208
  store i16 %call14, i16* %green, align 2, !dbg !7208
  %26 = load double*, double** %p, align 8, !dbg !7209
  %incdec.ptr15 = getelementptr inbounds double, double* %26, i32 1, !dbg !7209
  store double* %incdec.ptr15, double** %p, align 8, !dbg !7209
  %27 = load double*, double** %p, align 8, !dbg !7210
  %28 = load double, double* %27, align 8, !dbg !7210
  %mul16 = fmul double 6.553500e+04, %28, !dbg !7210
  %conv17 = fptrunc double %mul16 to float, !dbg !7210
  %call18 = call zeroext i16 @ClampToQuantum(float %conv17), !dbg !7210
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7210
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %29, i32 0, i32 2, !dbg !7210
  store i16 %call18, i16* %red, align 2, !dbg !7210
  %30 = load double*, double** %p, align 8, !dbg !7211
  %incdec.ptr19 = getelementptr inbounds double, double* %30, i32 1, !dbg !7211
  store double* %incdec.ptr19, double** %p, align 8, !dbg !7211
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7212
  %incdec.ptr20 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i32 1, !dbg !7212
  store %struct._PixelPacket* %incdec.ptr20, %struct._PixelPacket** %q, align 8, !dbg !7212
  br label %for.inc, !dbg !7213

for.inc:                                          ; preds = %for.body10
  %32 = load i64, i64* %x, align 8, !dbg !7214
  %inc = add nsw i64 %32, 1, !dbg !7214
  store i64 %inc, i64* %x, align 8, !dbg !7214
  br label %for.cond7, !dbg !7215, !llvm.loop !7216

for.end:                                          ; preds = %for.cond7
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7218
  %34 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7220
  %call21 = call i32 @SyncAuthenticPixels(%struct._Image* %33, %struct._ExceptionInfo* %34), !dbg !7221
  %cmp22 = icmp eq i32 %call21, 0, !dbg !7222
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !7223

if.then24:                                        ; preds = %for.end
  br label %for.end28, !dbg !7224

if.end25:                                         ; preds = %for.end
  br label %for.inc26, !dbg !7225

for.inc26:                                        ; preds = %if.end25
  %35 = load i64, i64* %y, align 8, !dbg !7226
  %inc27 = add nsw i64 %35, 1, !dbg !7226
  store i64 %inc27, i64* %y, align 8, !dbg !7226
  br label %for.cond, !dbg !7227, !llvm.loop !7228

for.end28:                                        ; preds = %if.then24, %if.then6, %for.cond
  br label %for.end430, !dbg !7230

if.end29:                                         ; preds = %entry
  %36 = load i8*, i8** %map.addr, align 8, !dbg !7231
  %call30 = call i32 @LocaleCompare(i8* %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !7233
  %cmp31 = icmp eq i32 %call30, 0, !dbg !7234
  br i1 %cmp31, label %if.then33, label %if.end86, !dbg !7235

if.then33:                                        ; preds = %if.end29
  store i64 0, i64* %y, align 8, !dbg !7236
  br label %for.cond34, !dbg !7239

for.cond34:                                       ; preds = %for.inc83, %if.then33
  %37 = load i64, i64* %y, align 8, !dbg !7240
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7242
  %height35 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 1, !dbg !7243
  %39 = load i64, i64* %height35, align 8, !dbg !7243
  %cmp36 = icmp slt i64 %37, %39, !dbg !7244
  br i1 %cmp36, label %for.body38, label %for.end85, !dbg !7245

for.body38:                                       ; preds = %for.cond34
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7246
  %41 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7248
  %x39 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %41, i32 0, i32 2, !dbg !7249
  %42 = load i64, i64* %x39, align 8, !dbg !7249
  %43 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7250
  %y40 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %43, i32 0, i32 3, !dbg !7251
  %44 = load i64, i64* %y40, align 8, !dbg !7251
  %45 = load i64, i64* %y, align 8, !dbg !7252
  %add41 = add nsw i64 %44, %45, !dbg !7253
  %46 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7254
  %width42 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %46, i32 0, i32 0, !dbg !7255
  %47 = load i64, i64* %width42, align 8, !dbg !7255
  %48 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7256
  %call43 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %40, i64 %42, i64 %add41, i64 %47, i64 1, %struct._ExceptionInfo* %48), !dbg !7257
  store %struct._PixelPacket* %call43, %struct._PixelPacket** %q, align 8, !dbg !7258
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7259
  %cmp44 = icmp eq %struct._PixelPacket* %49, null, !dbg !7261
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !7262

if.then46:                                        ; preds = %for.body38
  br label %for.end85, !dbg !7263

if.end47:                                         ; preds = %for.body38
  store i64 0, i64* %x, align 8, !dbg !7264
  br label %for.cond48, !dbg !7266

for.cond48:                                       ; preds = %for.inc75, %if.end47
  %50 = load i64, i64* %x, align 8, !dbg !7267
  %51 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7269
  %width49 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %51, i32 0, i32 0, !dbg !7270
  %52 = load i64, i64* %width49, align 8, !dbg !7270
  %cmp50 = icmp slt i64 %50, %52, !dbg !7271
  br i1 %cmp50, label %for.body52, label %for.end77, !dbg !7272

for.body52:                                       ; preds = %for.cond48
  %53 = load double*, double** %p, align 8, !dbg !7273
  %54 = load double, double* %53, align 8, !dbg !7273
  %mul53 = fmul double 6.553500e+04, %54, !dbg !7273
  %conv54 = fptrunc double %mul53 to float, !dbg !7273
  %call55 = call zeroext i16 @ClampToQuantum(float %conv54), !dbg !7273
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7273
  %blue56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 0, !dbg !7273
  store i16 %call55, i16* %blue56, align 2, !dbg !7273
  %56 = load double*, double** %p, align 8, !dbg !7275
  %incdec.ptr57 = getelementptr inbounds double, double* %56, i32 1, !dbg !7275
  store double* %incdec.ptr57, double** %p, align 8, !dbg !7275
  %57 = load double*, double** %p, align 8, !dbg !7276
  %58 = load double, double* %57, align 8, !dbg !7276
  %mul58 = fmul double 6.553500e+04, %58, !dbg !7276
  %conv59 = fptrunc double %mul58 to float, !dbg !7276
  %call60 = call zeroext i16 @ClampToQuantum(float %conv59), !dbg !7276
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7276
  %green61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %59, i32 0, i32 1, !dbg !7276
  store i16 %call60, i16* %green61, align 2, !dbg !7276
  %60 = load double*, double** %p, align 8, !dbg !7277
  %incdec.ptr62 = getelementptr inbounds double, double* %60, i32 1, !dbg !7277
  store double* %incdec.ptr62, double** %p, align 8, !dbg !7277
  %61 = load double*, double** %p, align 8, !dbg !7278
  %62 = load double, double* %61, align 8, !dbg !7278
  %mul63 = fmul double 6.553500e+04, %62, !dbg !7278
  %conv64 = fptrunc double %mul63 to float, !dbg !7278
  %call65 = call zeroext i16 @ClampToQuantum(float %conv64), !dbg !7278
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7278
  %red66 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 2, !dbg !7278
  store i16 %call65, i16* %red66, align 2, !dbg !7278
  %64 = load double*, double** %p, align 8, !dbg !7279
  %incdec.ptr67 = getelementptr inbounds double, double* %64, i32 1, !dbg !7279
  store double* %incdec.ptr67, double** %p, align 8, !dbg !7279
  %65 = load double*, double** %p, align 8, !dbg !7280
  %66 = load double, double* %65, align 8, !dbg !7281
  %mul68 = fmul double 6.553500e+04, %66, !dbg !7282
  %conv69 = fptrunc double %mul68 to float, !dbg !7283
  %call70 = call zeroext i16 @ClampToQuantum(float %conv69), !dbg !7284
  %conv71 = zext i16 %call70 to i32, !dbg !7284
  %sub = sub nsw i32 65535, %conv71, !dbg !7285
  %conv72 = trunc i32 %sub to i16, !dbg !7286
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7287
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 3, !dbg !7288
  store i16 %conv72, i16* %opacity, align 2, !dbg !7289
  %68 = load double*, double** %p, align 8, !dbg !7290
  %incdec.ptr73 = getelementptr inbounds double, double* %68, i32 1, !dbg !7290
  store double* %incdec.ptr73, double** %p, align 8, !dbg !7290
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7291
  %incdec.ptr74 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 1, !dbg !7291
  store %struct._PixelPacket* %incdec.ptr74, %struct._PixelPacket** %q, align 8, !dbg !7291
  br label %for.inc75, !dbg !7292

for.inc75:                                        ; preds = %for.body52
  %70 = load i64, i64* %x, align 8, !dbg !7293
  %inc76 = add nsw i64 %70, 1, !dbg !7293
  store i64 %inc76, i64* %x, align 8, !dbg !7293
  br label %for.cond48, !dbg !7294, !llvm.loop !7295

for.end77:                                        ; preds = %for.cond48
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7297
  %72 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7299
  %call78 = call i32 @SyncAuthenticPixels(%struct._Image* %71, %struct._ExceptionInfo* %72), !dbg !7300
  %cmp79 = icmp eq i32 %call78, 0, !dbg !7301
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !7302

if.then81:                                        ; preds = %for.end77
  br label %for.end85, !dbg !7303

if.end82:                                         ; preds = %for.end77
  br label %for.inc83, !dbg !7304

for.inc83:                                        ; preds = %if.end82
  %73 = load i64, i64* %y, align 8, !dbg !7305
  %inc84 = add nsw i64 %73, 1, !dbg !7305
  store i64 %inc84, i64* %y, align 8, !dbg !7305
  br label %for.cond34, !dbg !7306, !llvm.loop !7307

for.end85:                                        ; preds = %if.then81, %if.then46, %for.cond34
  br label %for.end430, !dbg !7309

if.end86:                                         ; preds = %if.end29
  %74 = load i8*, i8** %map.addr, align 8, !dbg !7310
  %call87 = call i32 @LocaleCompare(i8* %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !7312
  %cmp88 = icmp eq i32 %call87, 0, !dbg !7313
  br i1 %cmp88, label %if.then90, label %if.end138, !dbg !7314

if.then90:                                        ; preds = %if.end86
  store i64 0, i64* %y, align 8, !dbg !7315
  br label %for.cond91, !dbg !7318

for.cond91:                                       ; preds = %for.inc135, %if.then90
  %75 = load i64, i64* %y, align 8, !dbg !7319
  %76 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7321
  %height92 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %76, i32 0, i32 1, !dbg !7322
  %77 = load i64, i64* %height92, align 8, !dbg !7322
  %cmp93 = icmp slt i64 %75, %77, !dbg !7323
  br i1 %cmp93, label %for.body95, label %for.end137, !dbg !7324

for.body95:                                       ; preds = %for.cond91
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7325
  %79 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7327
  %x96 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %79, i32 0, i32 2, !dbg !7328
  %80 = load i64, i64* %x96, align 8, !dbg !7328
  %81 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7329
  %y97 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %81, i32 0, i32 3, !dbg !7330
  %82 = load i64, i64* %y97, align 8, !dbg !7330
  %83 = load i64, i64* %y, align 8, !dbg !7331
  %add98 = add nsw i64 %82, %83, !dbg !7332
  %84 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7333
  %width99 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %84, i32 0, i32 0, !dbg !7334
  %85 = load i64, i64* %width99, align 8, !dbg !7334
  %86 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7335
  %call100 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %78, i64 %80, i64 %add98, i64 %85, i64 1, %struct._ExceptionInfo* %86), !dbg !7336
  store %struct._PixelPacket* %call100, %struct._PixelPacket** %q, align 8, !dbg !7337
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7338
  %cmp101 = icmp eq %struct._PixelPacket* %87, null, !dbg !7340
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !7341

if.then103:                                       ; preds = %for.body95
  br label %for.end137, !dbg !7342

if.end104:                                        ; preds = %for.body95
  store i64 0, i64* %x, align 8, !dbg !7343
  br label %for.cond105, !dbg !7345

for.cond105:                                      ; preds = %for.inc127, %if.end104
  %88 = load i64, i64* %x, align 8, !dbg !7346
  %89 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7348
  %width106 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %89, i32 0, i32 0, !dbg !7349
  %90 = load i64, i64* %width106, align 8, !dbg !7349
  %cmp107 = icmp slt i64 %88, %90, !dbg !7350
  br i1 %cmp107, label %for.body109, label %for.end129, !dbg !7351

for.body109:                                      ; preds = %for.cond105
  %91 = load double*, double** %p, align 8, !dbg !7352
  %92 = load double, double* %91, align 8, !dbg !7352
  %mul110 = fmul double 6.553500e+04, %92, !dbg !7352
  %conv111 = fptrunc double %mul110 to float, !dbg !7352
  %call112 = call zeroext i16 @ClampToQuantum(float %conv111), !dbg !7352
  %93 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7352
  %blue113 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %93, i32 0, i32 0, !dbg !7352
  store i16 %call112, i16* %blue113, align 2, !dbg !7352
  %94 = load double*, double** %p, align 8, !dbg !7354
  %incdec.ptr114 = getelementptr inbounds double, double* %94, i32 1, !dbg !7354
  store double* %incdec.ptr114, double** %p, align 8, !dbg !7354
  %95 = load double*, double** %p, align 8, !dbg !7355
  %96 = load double, double* %95, align 8, !dbg !7355
  %mul115 = fmul double 6.553500e+04, %96, !dbg !7355
  %conv116 = fptrunc double %mul115 to float, !dbg !7355
  %call117 = call zeroext i16 @ClampToQuantum(float %conv116), !dbg !7355
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7355
  %green118 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 1, !dbg !7355
  store i16 %call117, i16* %green118, align 2, !dbg !7355
  %98 = load double*, double** %p, align 8, !dbg !7356
  %incdec.ptr119 = getelementptr inbounds double, double* %98, i32 1, !dbg !7356
  store double* %incdec.ptr119, double** %p, align 8, !dbg !7356
  %99 = load double*, double** %p, align 8, !dbg !7357
  %100 = load double, double* %99, align 8, !dbg !7357
  %mul120 = fmul double 6.553500e+04, %100, !dbg !7357
  %conv121 = fptrunc double %mul120 to float, !dbg !7357
  %call122 = call zeroext i16 @ClampToQuantum(float %conv121), !dbg !7357
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7357
  %red123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 2, !dbg !7357
  store i16 %call122, i16* %red123, align 2, !dbg !7357
  %102 = load double*, double** %p, align 8, !dbg !7358
  %incdec.ptr124 = getelementptr inbounds double, double* %102, i32 1, !dbg !7358
  store double* %incdec.ptr124, double** %p, align 8, !dbg !7358
  %103 = load double*, double** %p, align 8, !dbg !7359
  %incdec.ptr125 = getelementptr inbounds double, double* %103, i32 1, !dbg !7359
  store double* %incdec.ptr125, double** %p, align 8, !dbg !7359
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7360
  %incdec.ptr126 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 1, !dbg !7360
  store %struct._PixelPacket* %incdec.ptr126, %struct._PixelPacket** %q, align 8, !dbg !7360
  br label %for.inc127, !dbg !7361

for.inc127:                                       ; preds = %for.body109
  %105 = load i64, i64* %x, align 8, !dbg !7362
  %inc128 = add nsw i64 %105, 1, !dbg !7362
  store i64 %inc128, i64* %x, align 8, !dbg !7362
  br label %for.cond105, !dbg !7363, !llvm.loop !7364

for.end129:                                       ; preds = %for.cond105
  %106 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7366
  %107 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7368
  %call130 = call i32 @SyncAuthenticPixels(%struct._Image* %106, %struct._ExceptionInfo* %107), !dbg !7369
  %cmp131 = icmp eq i32 %call130, 0, !dbg !7370
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !7371

if.then133:                                       ; preds = %for.end129
  br label %for.end137, !dbg !7372

if.end134:                                        ; preds = %for.end129
  br label %for.inc135, !dbg !7373

for.inc135:                                       ; preds = %if.end134
  %108 = load i64, i64* %y, align 8, !dbg !7374
  %inc136 = add nsw i64 %108, 1, !dbg !7374
  store i64 %inc136, i64* %y, align 8, !dbg !7374
  br label %for.cond91, !dbg !7375, !llvm.loop !7376

for.end137:                                       ; preds = %if.then133, %if.then103, %for.cond91
  br label %for.end430, !dbg !7378

if.end138:                                        ; preds = %if.end86
  %109 = load i8*, i8** %map.addr, align 8, !dbg !7379
  %call139 = call i32 @LocaleCompare(i8* %109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !7381
  %cmp140 = icmp eq i32 %call139, 0, !dbg !7382
  br i1 %cmp140, label %if.then142, label %if.end183, !dbg !7383

if.then142:                                       ; preds = %if.end138
  store i64 0, i64* %y, align 8, !dbg !7384
  br label %for.cond143, !dbg !7387

for.cond143:                                      ; preds = %for.inc180, %if.then142
  %110 = load i64, i64* %y, align 8, !dbg !7388
  %111 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7390
  %height144 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %111, i32 0, i32 1, !dbg !7391
  %112 = load i64, i64* %height144, align 8, !dbg !7391
  %cmp145 = icmp slt i64 %110, %112, !dbg !7392
  br i1 %cmp145, label %for.body147, label %for.end182, !dbg !7393

for.body147:                                      ; preds = %for.cond143
  %113 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7394
  %114 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7396
  %x148 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %114, i32 0, i32 2, !dbg !7397
  %115 = load i64, i64* %x148, align 8, !dbg !7397
  %116 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7398
  %y149 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %116, i32 0, i32 3, !dbg !7399
  %117 = load i64, i64* %y149, align 8, !dbg !7399
  %118 = load i64, i64* %y, align 8, !dbg !7400
  %add150 = add nsw i64 %117, %118, !dbg !7401
  %119 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7402
  %width151 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %119, i32 0, i32 0, !dbg !7403
  %120 = load i64, i64* %width151, align 8, !dbg !7403
  %121 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7404
  %call152 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %113, i64 %115, i64 %add150, i64 %120, i64 1, %struct._ExceptionInfo* %121), !dbg !7405
  store %struct._PixelPacket* %call152, %struct._PixelPacket** %q, align 8, !dbg !7406
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7407
  %cmp153 = icmp eq %struct._PixelPacket* %122, null, !dbg !7409
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !7410

if.then155:                                       ; preds = %for.body147
  br label %for.end182, !dbg !7411

if.end156:                                        ; preds = %for.body147
  store i64 0, i64* %x, align 8, !dbg !7412
  br label %for.cond157, !dbg !7414

for.cond157:                                      ; preds = %for.inc172, %if.end156
  %123 = load i64, i64* %x, align 8, !dbg !7415
  %124 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7417
  %width158 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %124, i32 0, i32 0, !dbg !7418
  %125 = load i64, i64* %width158, align 8, !dbg !7418
  %cmp159 = icmp slt i64 %123, %125, !dbg !7419
  br i1 %cmp159, label %for.body161, label %for.end174, !dbg !7420

for.body161:                                      ; preds = %for.cond157
  %126 = load double*, double** %p, align 8, !dbg !7421
  %127 = load double, double* %126, align 8, !dbg !7421
  %mul162 = fmul double 6.553500e+04, %127, !dbg !7421
  %conv163 = fptrunc double %mul162 to float, !dbg !7421
  %call164 = call zeroext i16 @ClampToQuantum(float %conv163), !dbg !7421
  %128 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7421
  %red165 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %128, i32 0, i32 2, !dbg !7421
  store i16 %call164, i16* %red165, align 2, !dbg !7421
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7423
  %red166 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i32 0, i32 2, !dbg !7423
  %130 = load i16, i16* %red166, align 2, !dbg !7423
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7423
  %green167 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %131, i32 0, i32 1, !dbg !7423
  store i16 %130, i16* %green167, align 2, !dbg !7423
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7424
  %red168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 2, !dbg !7424
  %133 = load i16, i16* %red168, align 2, !dbg !7424
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7424
  %blue169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %134, i32 0, i32 0, !dbg !7424
  store i16 %133, i16* %blue169, align 2, !dbg !7424
  %135 = load double*, double** %p, align 8, !dbg !7425
  %incdec.ptr170 = getelementptr inbounds double, double* %135, i32 1, !dbg !7425
  store double* %incdec.ptr170, double** %p, align 8, !dbg !7425
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7426
  %incdec.ptr171 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 1, !dbg !7426
  store %struct._PixelPacket* %incdec.ptr171, %struct._PixelPacket** %q, align 8, !dbg !7426
  br label %for.inc172, !dbg !7427

for.inc172:                                       ; preds = %for.body161
  %137 = load i64, i64* %x, align 8, !dbg !7428
  %inc173 = add nsw i64 %137, 1, !dbg !7428
  store i64 %inc173, i64* %x, align 8, !dbg !7428
  br label %for.cond157, !dbg !7429, !llvm.loop !7430

for.end174:                                       ; preds = %for.cond157
  %138 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7432
  %139 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7434
  %call175 = call i32 @SyncAuthenticPixels(%struct._Image* %138, %struct._ExceptionInfo* %139), !dbg !7435
  %cmp176 = icmp eq i32 %call175, 0, !dbg !7436
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !7437

if.then178:                                       ; preds = %for.end174
  br label %for.end182, !dbg !7438

if.end179:                                        ; preds = %for.end174
  br label %for.inc180, !dbg !7439

for.inc180:                                       ; preds = %if.end179
  %140 = load i64, i64* %y, align 8, !dbg !7440
  %inc181 = add nsw i64 %140, 1, !dbg !7440
  store i64 %inc181, i64* %y, align 8, !dbg !7440
  br label %for.cond143, !dbg !7441, !llvm.loop !7442

for.end182:                                       ; preds = %if.then178, %if.then155, %for.cond143
  br label %for.end430, !dbg !7444

if.end183:                                        ; preds = %if.end138
  %141 = load i8*, i8** %map.addr, align 8, !dbg !7445
  %call184 = call i32 @LocaleCompare(i8* %141, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !7447
  %cmp185 = icmp eq i32 %call184, 0, !dbg !7448
  br i1 %cmp185, label %if.then187, label %if.end234, !dbg !7449

if.then187:                                       ; preds = %if.end183
  store i64 0, i64* %y, align 8, !dbg !7450
  br label %for.cond188, !dbg !7453

for.cond188:                                      ; preds = %for.inc231, %if.then187
  %142 = load i64, i64* %y, align 8, !dbg !7454
  %143 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7456
  %height189 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %143, i32 0, i32 1, !dbg !7457
  %144 = load i64, i64* %height189, align 8, !dbg !7457
  %cmp190 = icmp slt i64 %142, %144, !dbg !7458
  br i1 %cmp190, label %for.body192, label %for.end233, !dbg !7459

for.body192:                                      ; preds = %for.cond188
  %145 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7460
  %146 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7462
  %x193 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %146, i32 0, i32 2, !dbg !7463
  %147 = load i64, i64* %x193, align 8, !dbg !7463
  %148 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7464
  %y194 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %148, i32 0, i32 3, !dbg !7465
  %149 = load i64, i64* %y194, align 8, !dbg !7465
  %150 = load i64, i64* %y, align 8, !dbg !7466
  %add195 = add nsw i64 %149, %150, !dbg !7467
  %151 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7468
  %width196 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %151, i32 0, i32 0, !dbg !7469
  %152 = load i64, i64* %width196, align 8, !dbg !7469
  %153 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7470
  %call197 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %145, i64 %147, i64 %add195, i64 %152, i64 1, %struct._ExceptionInfo* %153), !dbg !7471
  store %struct._PixelPacket* %call197, %struct._PixelPacket** %q, align 8, !dbg !7472
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7473
  %cmp198 = icmp eq %struct._PixelPacket* %154, null, !dbg !7475
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !7476

if.then200:                                       ; preds = %for.body192
  br label %for.end233, !dbg !7477

if.end201:                                        ; preds = %for.body192
  store i64 0, i64* %x, align 8, !dbg !7478
  br label %for.cond202, !dbg !7480

for.cond202:                                      ; preds = %for.inc223, %if.end201
  %155 = load i64, i64* %x, align 8, !dbg !7481
  %156 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7483
  %width203 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %156, i32 0, i32 0, !dbg !7484
  %157 = load i64, i64* %width203, align 8, !dbg !7484
  %cmp204 = icmp slt i64 %155, %157, !dbg !7485
  br i1 %cmp204, label %for.body206, label %for.end225, !dbg !7486

for.body206:                                      ; preds = %for.cond202
  %158 = load double*, double** %p, align 8, !dbg !7487
  %159 = load double, double* %158, align 8, !dbg !7487
  %mul207 = fmul double 6.553500e+04, %159, !dbg !7487
  %conv208 = fptrunc double %mul207 to float, !dbg !7487
  %call209 = call zeroext i16 @ClampToQuantum(float %conv208), !dbg !7487
  %160 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7487
  %red210 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %160, i32 0, i32 2, !dbg !7487
  store i16 %call209, i16* %red210, align 2, !dbg !7487
  %161 = load double*, double** %p, align 8, !dbg !7489
  %incdec.ptr211 = getelementptr inbounds double, double* %161, i32 1, !dbg !7489
  store double* %incdec.ptr211, double** %p, align 8, !dbg !7489
  %162 = load double*, double** %p, align 8, !dbg !7490
  %163 = load double, double* %162, align 8, !dbg !7490
  %mul212 = fmul double 6.553500e+04, %163, !dbg !7490
  %conv213 = fptrunc double %mul212 to float, !dbg !7490
  %call214 = call zeroext i16 @ClampToQuantum(float %conv213), !dbg !7490
  %164 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7490
  %green215 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %164, i32 0, i32 1, !dbg !7490
  store i16 %call214, i16* %green215, align 2, !dbg !7490
  %165 = load double*, double** %p, align 8, !dbg !7491
  %incdec.ptr216 = getelementptr inbounds double, double* %165, i32 1, !dbg !7491
  store double* %incdec.ptr216, double** %p, align 8, !dbg !7491
  %166 = load double*, double** %p, align 8, !dbg !7492
  %167 = load double, double* %166, align 8, !dbg !7492
  %mul217 = fmul double 6.553500e+04, %167, !dbg !7492
  %conv218 = fptrunc double %mul217 to float, !dbg !7492
  %call219 = call zeroext i16 @ClampToQuantum(float %conv218), !dbg !7492
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7492
  %blue220 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 0, !dbg !7492
  store i16 %call219, i16* %blue220, align 2, !dbg !7492
  %169 = load double*, double** %p, align 8, !dbg !7493
  %incdec.ptr221 = getelementptr inbounds double, double* %169, i32 1, !dbg !7493
  store double* %incdec.ptr221, double** %p, align 8, !dbg !7493
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7494
  %incdec.ptr222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i32 1, !dbg !7494
  store %struct._PixelPacket* %incdec.ptr222, %struct._PixelPacket** %q, align 8, !dbg !7494
  br label %for.inc223, !dbg !7495

for.inc223:                                       ; preds = %for.body206
  %171 = load i64, i64* %x, align 8, !dbg !7496
  %inc224 = add nsw i64 %171, 1, !dbg !7496
  store i64 %inc224, i64* %x, align 8, !dbg !7496
  br label %for.cond202, !dbg !7497, !llvm.loop !7498

for.end225:                                       ; preds = %for.cond202
  %172 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7500
  %173 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7502
  %call226 = call i32 @SyncAuthenticPixels(%struct._Image* %172, %struct._ExceptionInfo* %173), !dbg !7503
  %cmp227 = icmp eq i32 %call226, 0, !dbg !7504
  br i1 %cmp227, label %if.then229, label %if.end230, !dbg !7505

if.then229:                                       ; preds = %for.end225
  br label %for.end233, !dbg !7506

if.end230:                                        ; preds = %for.end225
  br label %for.inc231, !dbg !7507

for.inc231:                                       ; preds = %if.end230
  %174 = load i64, i64* %y, align 8, !dbg !7508
  %inc232 = add nsw i64 %174, 1, !dbg !7508
  store i64 %inc232, i64* %y, align 8, !dbg !7508
  br label %for.cond188, !dbg !7509, !llvm.loop !7510

for.end233:                                       ; preds = %if.then229, %if.then200, %for.cond188
  br label %for.end430, !dbg !7512

if.end234:                                        ; preds = %if.end183
  %175 = load i8*, i8** %map.addr, align 8, !dbg !7513
  %call235 = call i32 @LocaleCompare(i8* %175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !7515
  %cmp236 = icmp eq i32 %call235, 0, !dbg !7516
  br i1 %cmp236, label %if.then238, label %if.end293, !dbg !7517

if.then238:                                       ; preds = %if.end234
  store i64 0, i64* %y, align 8, !dbg !7518
  br label %for.cond239, !dbg !7521

for.cond239:                                      ; preds = %for.inc290, %if.then238
  %176 = load i64, i64* %y, align 8, !dbg !7522
  %177 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7524
  %height240 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %177, i32 0, i32 1, !dbg !7525
  %178 = load i64, i64* %height240, align 8, !dbg !7525
  %cmp241 = icmp slt i64 %176, %178, !dbg !7526
  br i1 %cmp241, label %for.body243, label %for.end292, !dbg !7527

for.body243:                                      ; preds = %for.cond239
  %179 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7528
  %180 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7530
  %x244 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %180, i32 0, i32 2, !dbg !7531
  %181 = load i64, i64* %x244, align 8, !dbg !7531
  %182 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7532
  %y245 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %182, i32 0, i32 3, !dbg !7533
  %183 = load i64, i64* %y245, align 8, !dbg !7533
  %184 = load i64, i64* %y, align 8, !dbg !7534
  %add246 = add nsw i64 %183, %184, !dbg !7535
  %185 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7536
  %width247 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %185, i32 0, i32 0, !dbg !7537
  %186 = load i64, i64* %width247, align 8, !dbg !7537
  %187 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7538
  %call248 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %179, i64 %181, i64 %add246, i64 %186, i64 1, %struct._ExceptionInfo* %187), !dbg !7539
  store %struct._PixelPacket* %call248, %struct._PixelPacket** %q, align 8, !dbg !7540
  %188 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7541
  %cmp249 = icmp eq %struct._PixelPacket* %188, null, !dbg !7543
  br i1 %cmp249, label %if.then251, label %if.end252, !dbg !7544

if.then251:                                       ; preds = %for.body243
  br label %for.end292, !dbg !7545

if.end252:                                        ; preds = %for.body243
  store i64 0, i64* %x, align 8, !dbg !7546
  br label %for.cond253, !dbg !7548

for.cond253:                                      ; preds = %for.inc282, %if.end252
  %189 = load i64, i64* %x, align 8, !dbg !7549
  %190 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7551
  %width254 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %190, i32 0, i32 0, !dbg !7552
  %191 = load i64, i64* %width254, align 8, !dbg !7552
  %cmp255 = icmp slt i64 %189, %191, !dbg !7553
  br i1 %cmp255, label %for.body257, label %for.end284, !dbg !7554

for.body257:                                      ; preds = %for.cond253
  %192 = load double*, double** %p, align 8, !dbg !7555
  %193 = load double, double* %192, align 8, !dbg !7555
  %mul258 = fmul double 6.553500e+04, %193, !dbg !7555
  %conv259 = fptrunc double %mul258 to float, !dbg !7555
  %call260 = call zeroext i16 @ClampToQuantum(float %conv259), !dbg !7555
  %194 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7555
  %red261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %194, i32 0, i32 2, !dbg !7555
  store i16 %call260, i16* %red261, align 2, !dbg !7555
  %195 = load double*, double** %p, align 8, !dbg !7557
  %incdec.ptr262 = getelementptr inbounds double, double* %195, i32 1, !dbg !7557
  store double* %incdec.ptr262, double** %p, align 8, !dbg !7557
  %196 = load double*, double** %p, align 8, !dbg !7558
  %197 = load double, double* %196, align 8, !dbg !7558
  %mul263 = fmul double 6.553500e+04, %197, !dbg !7558
  %conv264 = fptrunc double %mul263 to float, !dbg !7558
  %call265 = call zeroext i16 @ClampToQuantum(float %conv264), !dbg !7558
  %198 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7558
  %green266 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %198, i32 0, i32 1, !dbg !7558
  store i16 %call265, i16* %green266, align 2, !dbg !7558
  %199 = load double*, double** %p, align 8, !dbg !7559
  %incdec.ptr267 = getelementptr inbounds double, double* %199, i32 1, !dbg !7559
  store double* %incdec.ptr267, double** %p, align 8, !dbg !7559
  %200 = load double*, double** %p, align 8, !dbg !7560
  %201 = load double, double* %200, align 8, !dbg !7560
  %mul268 = fmul double 6.553500e+04, %201, !dbg !7560
  %conv269 = fptrunc double %mul268 to float, !dbg !7560
  %call270 = call zeroext i16 @ClampToQuantum(float %conv269), !dbg !7560
  %202 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7560
  %blue271 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %202, i32 0, i32 0, !dbg !7560
  store i16 %call270, i16* %blue271, align 2, !dbg !7560
  %203 = load double*, double** %p, align 8, !dbg !7561
  %incdec.ptr272 = getelementptr inbounds double, double* %203, i32 1, !dbg !7561
  store double* %incdec.ptr272, double** %p, align 8, !dbg !7561
  %204 = load double*, double** %p, align 8, !dbg !7562
  %205 = load double, double* %204, align 8, !dbg !7562
  %mul273 = fmul double 6.553500e+04, %205, !dbg !7562
  %conv274 = fptrunc double %mul273 to float, !dbg !7562
  %call275 = call zeroext i16 @ClampToQuantum(float %conv274), !dbg !7562
  %conv276 = zext i16 %call275 to i32, !dbg !7562
  %sub277 = sub nsw i32 65535, %conv276, !dbg !7562
  %conv278 = trunc i32 %sub277 to i16, !dbg !7562
  %206 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7562
  %opacity279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %206, i32 0, i32 3, !dbg !7562
  store i16 %conv278, i16* %opacity279, align 2, !dbg !7562
  %207 = load double*, double** %p, align 8, !dbg !7563
  %incdec.ptr280 = getelementptr inbounds double, double* %207, i32 1, !dbg !7563
  store double* %incdec.ptr280, double** %p, align 8, !dbg !7563
  %208 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7564
  %incdec.ptr281 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %208, i32 1, !dbg !7564
  store %struct._PixelPacket* %incdec.ptr281, %struct._PixelPacket** %q, align 8, !dbg !7564
  br label %for.inc282, !dbg !7565

for.inc282:                                       ; preds = %for.body257
  %209 = load i64, i64* %x, align 8, !dbg !7566
  %inc283 = add nsw i64 %209, 1, !dbg !7566
  store i64 %inc283, i64* %x, align 8, !dbg !7566
  br label %for.cond253, !dbg !7567, !llvm.loop !7568

for.end284:                                       ; preds = %for.cond253
  %210 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7570
  %211 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7572
  %call285 = call i32 @SyncAuthenticPixels(%struct._Image* %210, %struct._ExceptionInfo* %211), !dbg !7573
  %cmp286 = icmp eq i32 %call285, 0, !dbg !7574
  br i1 %cmp286, label %if.then288, label %if.end289, !dbg !7575

if.then288:                                       ; preds = %for.end284
  br label %for.end292, !dbg !7576

if.end289:                                        ; preds = %for.end284
  br label %for.inc290, !dbg !7577

for.inc290:                                       ; preds = %if.end289
  %212 = load i64, i64* %y, align 8, !dbg !7578
  %inc291 = add nsw i64 %212, 1, !dbg !7578
  store i64 %inc291, i64* %y, align 8, !dbg !7578
  br label %for.cond239, !dbg !7579, !llvm.loop !7580

for.end292:                                       ; preds = %if.then288, %if.then251, %for.cond239
  br label %for.end430, !dbg !7582

if.end293:                                        ; preds = %if.end234
  %213 = load i8*, i8** %map.addr, align 8, !dbg !7583
  %call294 = call i32 @LocaleCompare(i8* %213, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !7585
  %cmp295 = icmp eq i32 %call294, 0, !dbg !7586
  br i1 %cmp295, label %if.then297, label %if.end344, !dbg !7587

if.then297:                                       ; preds = %if.end293
  store i64 0, i64* %y, align 8, !dbg !7588
  br label %for.cond298, !dbg !7591

for.cond298:                                      ; preds = %for.inc341, %if.then297
  %214 = load i64, i64* %y, align 8, !dbg !7592
  %215 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7594
  %height299 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %215, i32 0, i32 1, !dbg !7595
  %216 = load i64, i64* %height299, align 8, !dbg !7595
  %cmp300 = icmp slt i64 %214, %216, !dbg !7596
  br i1 %cmp300, label %for.body302, label %for.end343, !dbg !7597

for.body302:                                      ; preds = %for.cond298
  %217 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7598
  %218 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7600
  %x303 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %218, i32 0, i32 2, !dbg !7601
  %219 = load i64, i64* %x303, align 8, !dbg !7601
  %220 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7602
  %y304 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %220, i32 0, i32 3, !dbg !7603
  %221 = load i64, i64* %y304, align 8, !dbg !7603
  %222 = load i64, i64* %y, align 8, !dbg !7604
  %add305 = add nsw i64 %221, %222, !dbg !7605
  %223 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7606
  %width306 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %223, i32 0, i32 0, !dbg !7607
  %224 = load i64, i64* %width306, align 8, !dbg !7607
  %225 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7608
  %call307 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %217, i64 %219, i64 %add305, i64 %224, i64 1, %struct._ExceptionInfo* %225), !dbg !7609
  store %struct._PixelPacket* %call307, %struct._PixelPacket** %q, align 8, !dbg !7610
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7611
  %cmp308 = icmp eq %struct._PixelPacket* %226, null, !dbg !7613
  br i1 %cmp308, label %if.then310, label %if.end311, !dbg !7614

if.then310:                                       ; preds = %for.body302
  br label %for.end343, !dbg !7615

if.end311:                                        ; preds = %for.body302
  store i64 0, i64* %x, align 8, !dbg !7616
  br label %for.cond312, !dbg !7618

for.cond312:                                      ; preds = %for.inc333, %if.end311
  %227 = load i64, i64* %x, align 8, !dbg !7619
  %228 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7621
  %width313 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %228, i32 0, i32 0, !dbg !7622
  %229 = load i64, i64* %width313, align 8, !dbg !7622
  %cmp314 = icmp slt i64 %227, %229, !dbg !7623
  br i1 %cmp314, label %for.body316, label %for.end335, !dbg !7624

for.body316:                                      ; preds = %for.cond312
  %230 = load double*, double** %p, align 8, !dbg !7625
  %231 = load double, double* %230, align 8, !dbg !7625
  %mul317 = fmul double 6.553500e+04, %231, !dbg !7625
  %conv318 = fptrunc double %mul317 to float, !dbg !7625
  %call319 = call zeroext i16 @ClampToQuantum(float %conv318), !dbg !7625
  %232 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7625
  %red320 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %232, i32 0, i32 2, !dbg !7625
  store i16 %call319, i16* %red320, align 2, !dbg !7625
  %233 = load double*, double** %p, align 8, !dbg !7627
  %incdec.ptr321 = getelementptr inbounds double, double* %233, i32 1, !dbg !7627
  store double* %incdec.ptr321, double** %p, align 8, !dbg !7627
  %234 = load double*, double** %p, align 8, !dbg !7628
  %235 = load double, double* %234, align 8, !dbg !7628
  %mul322 = fmul double 6.553500e+04, %235, !dbg !7628
  %conv323 = fptrunc double %mul322 to float, !dbg !7628
  %call324 = call zeroext i16 @ClampToQuantum(float %conv323), !dbg !7628
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7628
  %green325 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 0, i32 1, !dbg !7628
  store i16 %call324, i16* %green325, align 2, !dbg !7628
  %237 = load double*, double** %p, align 8, !dbg !7629
  %incdec.ptr326 = getelementptr inbounds double, double* %237, i32 1, !dbg !7629
  store double* %incdec.ptr326, double** %p, align 8, !dbg !7629
  %238 = load double*, double** %p, align 8, !dbg !7630
  %239 = load double, double* %238, align 8, !dbg !7630
  %mul327 = fmul double 6.553500e+04, %239, !dbg !7630
  %conv328 = fptrunc double %mul327 to float, !dbg !7630
  %call329 = call zeroext i16 @ClampToQuantum(float %conv328), !dbg !7630
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7630
  %blue330 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 0, !dbg !7630
  store i16 %call329, i16* %blue330, align 2, !dbg !7630
  %241 = load double*, double** %p, align 8, !dbg !7631
  %incdec.ptr331 = getelementptr inbounds double, double* %241, i32 1, !dbg !7631
  store double* %incdec.ptr331, double** %p, align 8, !dbg !7631
  %242 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7632
  %incdec.ptr332 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %242, i32 1, !dbg !7632
  store %struct._PixelPacket* %incdec.ptr332, %struct._PixelPacket** %q, align 8, !dbg !7632
  br label %for.inc333, !dbg !7633

for.inc333:                                       ; preds = %for.body316
  %243 = load i64, i64* %x, align 8, !dbg !7634
  %inc334 = add nsw i64 %243, 1, !dbg !7634
  store i64 %inc334, i64* %x, align 8, !dbg !7634
  br label %for.cond312, !dbg !7635, !llvm.loop !7636

for.end335:                                       ; preds = %for.cond312
  %244 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7638
  %245 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7640
  %call336 = call i32 @SyncAuthenticPixels(%struct._Image* %244, %struct._ExceptionInfo* %245), !dbg !7641
  %cmp337 = icmp eq i32 %call336, 0, !dbg !7642
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !7643

if.then339:                                       ; preds = %for.end335
  br label %for.end343, !dbg !7644

if.end340:                                        ; preds = %for.end335
  br label %for.inc341, !dbg !7645

for.inc341:                                       ; preds = %if.end340
  %246 = load i64, i64* %y, align 8, !dbg !7646
  %inc342 = add nsw i64 %246, 1, !dbg !7646
  store i64 %inc342, i64* %y, align 8, !dbg !7646
  br label %for.cond298, !dbg !7647, !llvm.loop !7648

for.end343:                                       ; preds = %if.then339, %if.then310, %for.cond298
  br label %for.end430, !dbg !7650

if.end344:                                        ; preds = %if.end293
  %247 = load i8*, i8** %map.addr, align 8, !dbg !7651
  %call345 = call i64 @strlen(i8* %247) #13, !dbg !7652
  store i64 %call345, i64* %length, align 8, !dbg !7653
  store i64 0, i64* %y, align 8, !dbg !7654
  br label %for.cond346, !dbg !7656

for.cond346:                                      ; preds = %for.inc428, %if.end344
  %248 = load i64, i64* %y, align 8, !dbg !7657
  %249 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7659
  %height347 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %249, i32 0, i32 1, !dbg !7660
  %250 = load i64, i64* %height347, align 8, !dbg !7660
  %cmp348 = icmp slt i64 %248, %250, !dbg !7661
  br i1 %cmp348, label %for.body350, label %for.end430, !dbg !7662

for.body350:                                      ; preds = %for.cond346
  %251 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7663
  %252 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7665
  %x351 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %252, i32 0, i32 2, !dbg !7666
  %253 = load i64, i64* %x351, align 8, !dbg !7666
  %254 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7667
  %y352 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %254, i32 0, i32 3, !dbg !7668
  %255 = load i64, i64* %y352, align 8, !dbg !7668
  %256 = load i64, i64* %y, align 8, !dbg !7669
  %add353 = add nsw i64 %255, %256, !dbg !7670
  %257 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7671
  %width354 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %257, i32 0, i32 0, !dbg !7672
  %258 = load i64, i64* %width354, align 8, !dbg !7672
  %259 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7673
  %call355 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %251, i64 %253, i64 %add353, i64 %258, i64 1, %struct._ExceptionInfo* %259), !dbg !7674
  store %struct._PixelPacket* %call355, %struct._PixelPacket** %q, align 8, !dbg !7675
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7676
  %cmp356 = icmp eq %struct._PixelPacket* %260, null, !dbg !7678
  br i1 %cmp356, label %if.then358, label %if.end359, !dbg !7679

if.then358:                                       ; preds = %for.body350
  br label %for.end430, !dbg !7680

if.end359:                                        ; preds = %for.body350
  %261 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7681
  %call360 = call i16* @GetAuthenticIndexQueue(%struct._Image* %261), !dbg !7682
  store i16* %call360, i16** %indexes, align 8, !dbg !7683
  store i64 0, i64* %x, align 8, !dbg !7684
  br label %for.cond361, !dbg !7686

for.cond361:                                      ; preds = %for.inc420, %if.end359
  %262 = load i64, i64* %x, align 8, !dbg !7687
  %263 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7689
  %width362 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %263, i32 0, i32 0, !dbg !7690
  %264 = load i64, i64* %width362, align 8, !dbg !7690
  %cmp363 = icmp slt i64 %262, %264, !dbg !7691
  br i1 %cmp363, label %for.body365, label %for.end422, !dbg !7692

for.body365:                                      ; preds = %for.cond361
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7693, metadata !DIExpression()), !dbg !7695
  store i64 0, i64* %i, align 8, !dbg !7696
  br label %for.cond366, !dbg !7698

for.cond366:                                      ; preds = %for.inc416, %for.body365
  %265 = load i64, i64* %i, align 8, !dbg !7699
  %266 = load i64, i64* %length, align 8, !dbg !7701
  %cmp367 = icmp slt i64 %265, %266, !dbg !7702
  br i1 %cmp367, label %for.body369, label %for.end418, !dbg !7703

for.body369:                                      ; preds = %for.cond366
  %267 = load i32*, i32** %quantum_map.addr, align 8, !dbg !7704
  %268 = load i64, i64* %i, align 8, !dbg !7706
  %arrayidx = getelementptr inbounds i32, i32* %267, i64 %268, !dbg !7704
  %269 = load i32, i32* %arrayidx, align 4, !dbg !7704
  switch i32 %269, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb374
    i32 12, label %sw.bb374
    i32 3, label %sw.bb379
    i32 19, label %sw.bb379
    i32 1, label %sw.bb384
    i32 13, label %sw.bb392
    i32 2, label %sw.bb397
    i32 11, label %sw.bb406
  ], !dbg !7707

sw.bb:                                            ; preds = %for.body369, %for.body369
  %270 = load double*, double** %p, align 8, !dbg !7708
  %271 = load double, double* %270, align 8, !dbg !7708
  %mul370 = fmul double 6.553500e+04, %271, !dbg !7708
  %conv371 = fptrunc double %mul370 to float, !dbg !7708
  %call372 = call zeroext i16 @ClampToQuantum(float %conv371), !dbg !7708
  %272 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7708
  %red373 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %272, i32 0, i32 2, !dbg !7708
  store i16 %call372, i16* %red373, align 2, !dbg !7708
  br label %sw.epilog, !dbg !7711

sw.bb374:                                         ; preds = %for.body369, %for.body369
  %273 = load double*, double** %p, align 8, !dbg !7712
  %274 = load double, double* %273, align 8, !dbg !7712
  %mul375 = fmul double 6.553500e+04, %274, !dbg !7712
  %conv376 = fptrunc double %mul375 to float, !dbg !7712
  %call377 = call zeroext i16 @ClampToQuantum(float %conv376), !dbg !7712
  %275 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7712
  %green378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %275, i32 0, i32 1, !dbg !7712
  store i16 %call377, i16* %green378, align 2, !dbg !7712
  br label %sw.epilog, !dbg !7714

sw.bb379:                                         ; preds = %for.body369, %for.body369
  %276 = load double*, double** %p, align 8, !dbg !7715
  %277 = load double, double* %276, align 8, !dbg !7715
  %mul380 = fmul double 6.553500e+04, %277, !dbg !7715
  %conv381 = fptrunc double %mul380 to float, !dbg !7715
  %call382 = call zeroext i16 @ClampToQuantum(float %conv381), !dbg !7715
  %278 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7715
  %blue383 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %278, i32 0, i32 0, !dbg !7715
  store i16 %call382, i16* %blue383, align 2, !dbg !7715
  br label %sw.epilog, !dbg !7717

sw.bb384:                                         ; preds = %for.body369
  %279 = load double*, double** %p, align 8, !dbg !7718
  %280 = load double, double* %279, align 8, !dbg !7718
  %mul385 = fmul double 6.553500e+04, %280, !dbg !7718
  %conv386 = fptrunc double %mul385 to float, !dbg !7718
  %call387 = call zeroext i16 @ClampToQuantum(float %conv386), !dbg !7718
  %conv388 = zext i16 %call387 to i32, !dbg !7718
  %sub389 = sub nsw i32 65535, %conv388, !dbg !7718
  %conv390 = trunc i32 %sub389 to i16, !dbg !7718
  %281 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7718
  %opacity391 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %281, i32 0, i32 3, !dbg !7718
  store i16 %conv390, i16* %opacity391, align 2, !dbg !7718
  br label %sw.epilog, !dbg !7720

sw.bb392:                                         ; preds = %for.body369
  %282 = load double*, double** %p, align 8, !dbg !7721
  %283 = load double, double* %282, align 8, !dbg !7721
  %mul393 = fmul double 6.553500e+04, %283, !dbg !7721
  %conv394 = fptrunc double %mul393 to float, !dbg !7721
  %call395 = call zeroext i16 @ClampToQuantum(float %conv394), !dbg !7721
  %284 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7721
  %opacity396 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %284, i32 0, i32 3, !dbg !7721
  store i16 %call395, i16* %opacity396, align 2, !dbg !7721
  br label %sw.epilog, !dbg !7723

sw.bb397:                                         ; preds = %for.body369
  %285 = load i16*, i16** %indexes, align 8, !dbg !7724
  %286 = load i64, i64* %x, align 8, !dbg !7724
  %add.ptr = getelementptr inbounds i16, i16* %285, i64 %286, !dbg !7724
  %cmp398 = icmp ne i16* %add.ptr, null, !dbg !7724
  br i1 %cmp398, label %if.then400, label %if.end405, !dbg !7728

if.then400:                                       ; preds = %sw.bb397
  %287 = load double*, double** %p, align 8, !dbg !7724
  %288 = load double, double* %287, align 8, !dbg !7724
  %mul401 = fmul double 6.553500e+04, %288, !dbg !7724
  %conv402 = fptrunc double %mul401 to float, !dbg !7724
  %call403 = call zeroext i16 @ClampToQuantum(float %conv402), !dbg !7724
  %289 = load i16*, i16** %indexes, align 8, !dbg !7724
  %290 = load i64, i64* %x, align 8, !dbg !7724
  %add.ptr404 = getelementptr inbounds i16, i16* %289, i64 %290, !dbg !7724
  store i16 %call403, i16* %add.ptr404, align 2, !dbg !7724
  br label %if.end405, !dbg !7724

if.end405:                                        ; preds = %if.then400, %sw.bb397
  br label %sw.epilog, !dbg !7729

sw.bb406:                                         ; preds = %for.body369
  %291 = load double*, double** %p, align 8, !dbg !7730
  %292 = load double, double* %291, align 8, !dbg !7730
  %mul407 = fmul double 6.553500e+04, %292, !dbg !7730
  %conv408 = fptrunc double %mul407 to float, !dbg !7730
  %call409 = call zeroext i16 @ClampToQuantum(float %conv408), !dbg !7730
  %293 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7730
  %red410 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %293, i32 0, i32 2, !dbg !7730
  store i16 %call409, i16* %red410, align 2, !dbg !7730
  %294 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7732
  %red411 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %294, i32 0, i32 2, !dbg !7732
  %295 = load i16, i16* %red411, align 2, !dbg !7732
  %296 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7732
  %green412 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %296, i32 0, i32 1, !dbg !7732
  store i16 %295, i16* %green412, align 2, !dbg !7732
  %297 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7733
  %red413 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %297, i32 0, i32 2, !dbg !7733
  %298 = load i16, i16* %red413, align 2, !dbg !7733
  %299 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7733
  %blue414 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %299, i32 0, i32 0, !dbg !7733
  store i16 %298, i16* %blue414, align 2, !dbg !7733
  br label %sw.epilog, !dbg !7734

sw.default:                                       ; preds = %for.body369
  br label %sw.epilog, !dbg !7735

sw.epilog:                                        ; preds = %sw.default, %sw.bb406, %if.end405, %sw.bb392, %sw.bb384, %sw.bb379, %sw.bb374, %sw.bb
  %300 = load double*, double** %p, align 8, !dbg !7736
  %incdec.ptr415 = getelementptr inbounds double, double* %300, i32 1, !dbg !7736
  store double* %incdec.ptr415, double** %p, align 8, !dbg !7736
  br label %for.inc416, !dbg !7737

for.inc416:                                       ; preds = %sw.epilog
  %301 = load i64, i64* %i, align 8, !dbg !7738
  %inc417 = add nsw i64 %301, 1, !dbg !7738
  store i64 %inc417, i64* %i, align 8, !dbg !7738
  br label %for.cond366, !dbg !7739, !llvm.loop !7740

for.end418:                                       ; preds = %for.cond366
  %302 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7742
  %incdec.ptr419 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %302, i32 1, !dbg !7742
  store %struct._PixelPacket* %incdec.ptr419, %struct._PixelPacket** %q, align 8, !dbg !7742
  br label %for.inc420, !dbg !7743

for.inc420:                                       ; preds = %for.end418
  %303 = load i64, i64* %x, align 8, !dbg !7744
  %inc421 = add nsw i64 %303, 1, !dbg !7744
  store i64 %inc421, i64* %x, align 8, !dbg !7744
  br label %for.cond361, !dbg !7745, !llvm.loop !7746

for.end422:                                       ; preds = %for.cond361
  %304 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7748
  %305 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7750
  %call423 = call i32 @SyncAuthenticPixels(%struct._Image* %304, %struct._ExceptionInfo* %305), !dbg !7751
  %cmp424 = icmp eq i32 %call423, 0, !dbg !7752
  br i1 %cmp424, label %if.then426, label %if.end427, !dbg !7753

if.then426:                                       ; preds = %for.end422
  br label %for.end430, !dbg !7754

if.end427:                                        ; preds = %for.end422
  br label %for.inc428, !dbg !7755

for.inc428:                                       ; preds = %if.end427
  %306 = load i64, i64* %y, align 8, !dbg !7756
  %inc429 = add nsw i64 %306, 1, !dbg !7756
  store i64 %inc429, i64* %y, align 8, !dbg !7756
  br label %for.cond346, !dbg !7757, !llvm.loop !7758

for.end430:                                       ; preds = %for.end28, %for.end85, %for.end137, %for.end182, %for.end233, %for.end292, %for.end343, %if.then426, %if.then358, %for.cond346
  ret void, !dbg !7760
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportFloatPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !7761 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %p = alloca float*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7762, metadata !DIExpression()), !dbg !7763
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !7768, metadata !DIExpression()), !dbg !7769
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.declare(metadata float** %p, metadata !7774, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !7777, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7779, metadata !DIExpression()), !dbg !7780
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7781, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.declare(metadata i64* %length, metadata !7783, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7785, metadata !DIExpression()), !dbg !7786
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !7787
  %1 = bitcast i8* %0 to float*, !dbg !7788
  store float* %1, float** %p, align 8, !dbg !7789
  %2 = load i8*, i8** %map.addr, align 8, !dbg !7790
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !7792
  %cmp = icmp eq i32 %call, 0, !dbg !7793
  br i1 %cmp, label %if.then, label %if.end26, !dbg !7794

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !7795
  br label %for.cond, !dbg !7798

for.cond:                                         ; preds = %for.inc23, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !7799
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7801
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !7802
  %5 = load i64, i64* %height, align 8, !dbg !7802
  %cmp1 = icmp slt i64 %3, %5, !dbg !7803
  br i1 %cmp1, label %for.body, label %for.end25, !dbg !7804

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7805
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7807
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !7808
  %8 = load i64, i64* %x2, align 8, !dbg !7808
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7809
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !7810
  %10 = load i64, i64* %y3, align 8, !dbg !7810
  %11 = load i64, i64* %y, align 8, !dbg !7811
  %add = add nsw i64 %10, %11, !dbg !7812
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7813
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !7814
  %13 = load i64, i64* %width, align 8, !dbg !7814
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7815
  %call4 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !7816
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %q, align 8, !dbg !7817
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7818
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !7820
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !7821

if.then6:                                         ; preds = %for.body
  br label %for.end25, !dbg !7822

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !7823
  br label %for.cond7, !dbg !7825

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !7826
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7828
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !7829
  %18 = load i64, i64* %width8, align 8, !dbg !7829
  %cmp9 = icmp slt i64 %16, %18, !dbg !7830
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !7831

for.body10:                                       ; preds = %for.cond7
  %19 = load float*, float** %p, align 8, !dbg !7832
  %20 = load float, float* %19, align 4, !dbg !7832
  %mul = fmul float 6.553500e+04, %20, !dbg !7832
  %call11 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !7832
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7832
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i32 0, i32 0, !dbg !7832
  store i16 %call11, i16* %blue, align 2, !dbg !7832
  %22 = load float*, float** %p, align 8, !dbg !7834
  %incdec.ptr = getelementptr inbounds float, float* %22, i32 1, !dbg !7834
  store float* %incdec.ptr, float** %p, align 8, !dbg !7834
  %23 = load float*, float** %p, align 8, !dbg !7835
  %24 = load float, float* %23, align 4, !dbg !7835
  %mul12 = fmul float 6.553500e+04, %24, !dbg !7835
  %call13 = call zeroext i16 @ClampToQuantum(float %mul12), !dbg !7835
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7835
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 1, !dbg !7835
  store i16 %call13, i16* %green, align 2, !dbg !7835
  %26 = load float*, float** %p, align 8, !dbg !7836
  %incdec.ptr14 = getelementptr inbounds float, float* %26, i32 1, !dbg !7836
  store float* %incdec.ptr14, float** %p, align 8, !dbg !7836
  %27 = load float*, float** %p, align 8, !dbg !7837
  %28 = load float, float* %27, align 4, !dbg !7837
  %mul15 = fmul float 6.553500e+04, %28, !dbg !7837
  %call16 = call zeroext i16 @ClampToQuantum(float %mul15), !dbg !7837
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7837
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %29, i32 0, i32 2, !dbg !7837
  store i16 %call16, i16* %red, align 2, !dbg !7837
  %30 = load float*, float** %p, align 8, !dbg !7838
  %incdec.ptr17 = getelementptr inbounds float, float* %30, i32 1, !dbg !7838
  store float* %incdec.ptr17, float** %p, align 8, !dbg !7838
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7839
  %incdec.ptr18 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i32 1, !dbg !7839
  store %struct._PixelPacket* %incdec.ptr18, %struct._PixelPacket** %q, align 8, !dbg !7839
  br label %for.inc, !dbg !7840

for.inc:                                          ; preds = %for.body10
  %32 = load i64, i64* %x, align 8, !dbg !7841
  %inc = add nsw i64 %32, 1, !dbg !7841
  store i64 %inc, i64* %x, align 8, !dbg !7841
  br label %for.cond7, !dbg !7842, !llvm.loop !7843

for.end:                                          ; preds = %for.cond7
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7845
  %34 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7847
  %call19 = call i32 @SyncAuthenticPixels(%struct._Image* %33, %struct._ExceptionInfo* %34), !dbg !7848
  %cmp20 = icmp eq i32 %call19, 0, !dbg !7849
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !7850

if.then21:                                        ; preds = %for.end
  br label %for.end25, !dbg !7851

if.end22:                                         ; preds = %for.end
  br label %for.inc23, !dbg !7852

for.inc23:                                        ; preds = %if.end22
  %35 = load i64, i64* %y, align 8, !dbg !7853
  %inc24 = add nsw i64 %35, 1, !dbg !7853
  store i64 %inc24, i64* %y, align 8, !dbg !7853
  br label %for.cond, !dbg !7854, !llvm.loop !7855

for.end25:                                        ; preds = %if.then21, %if.then6, %for.cond
  br label %for.end397, !dbg !7857

if.end26:                                         ; preds = %entry
  %36 = load i8*, i8** %map.addr, align 8, !dbg !7858
  %call27 = call i32 @LocaleCompare(i8* %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !7860
  %cmp28 = icmp eq i32 %call27, 0, !dbg !7861
  br i1 %cmp28, label %if.then29, label %if.end74, !dbg !7862

if.then29:                                        ; preds = %if.end26
  store i64 0, i64* %y, align 8, !dbg !7863
  br label %for.cond30, !dbg !7866

for.cond30:                                       ; preds = %for.inc71, %if.then29
  %37 = load i64, i64* %y, align 8, !dbg !7867
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7869
  %height31 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 1, !dbg !7870
  %39 = load i64, i64* %height31, align 8, !dbg !7870
  %cmp32 = icmp slt i64 %37, %39, !dbg !7871
  br i1 %cmp32, label %for.body33, label %for.end73, !dbg !7872

for.body33:                                       ; preds = %for.cond30
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7873
  %41 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7875
  %x34 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %41, i32 0, i32 2, !dbg !7876
  %42 = load i64, i64* %x34, align 8, !dbg !7876
  %43 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7877
  %y35 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %43, i32 0, i32 3, !dbg !7878
  %44 = load i64, i64* %y35, align 8, !dbg !7878
  %45 = load i64, i64* %y, align 8, !dbg !7879
  %add36 = add nsw i64 %44, %45, !dbg !7880
  %46 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7881
  %width37 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %46, i32 0, i32 0, !dbg !7882
  %47 = load i64, i64* %width37, align 8, !dbg !7882
  %48 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7883
  %call38 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %40, i64 %42, i64 %add36, i64 %47, i64 1, %struct._ExceptionInfo* %48), !dbg !7884
  store %struct._PixelPacket* %call38, %struct._PixelPacket** %q, align 8, !dbg !7885
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7886
  %cmp39 = icmp eq %struct._PixelPacket* %49, null, !dbg !7888
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !7889

if.then40:                                        ; preds = %for.body33
  br label %for.end73, !dbg !7890

if.end41:                                         ; preds = %for.body33
  store i64 0, i64* %x, align 8, !dbg !7891
  br label %for.cond42, !dbg !7893

for.cond42:                                       ; preds = %for.inc63, %if.end41
  %50 = load i64, i64* %x, align 8, !dbg !7894
  %51 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7896
  %width43 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %51, i32 0, i32 0, !dbg !7897
  %52 = load i64, i64* %width43, align 8, !dbg !7897
  %cmp44 = icmp slt i64 %50, %52, !dbg !7898
  br i1 %cmp44, label %for.body45, label %for.end65, !dbg !7899

for.body45:                                       ; preds = %for.cond42
  %53 = load float*, float** %p, align 8, !dbg !7900
  %54 = load float, float* %53, align 4, !dbg !7900
  %mul46 = fmul float 6.553500e+04, %54, !dbg !7900
  %call47 = call zeroext i16 @ClampToQuantum(float %mul46), !dbg !7900
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7900
  %blue48 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 0, !dbg !7900
  store i16 %call47, i16* %blue48, align 2, !dbg !7900
  %56 = load float*, float** %p, align 8, !dbg !7902
  %incdec.ptr49 = getelementptr inbounds float, float* %56, i32 1, !dbg !7902
  store float* %incdec.ptr49, float** %p, align 8, !dbg !7902
  %57 = load float*, float** %p, align 8, !dbg !7903
  %58 = load float, float* %57, align 4, !dbg !7903
  %mul50 = fmul float 6.553500e+04, %58, !dbg !7903
  %call51 = call zeroext i16 @ClampToQuantum(float %mul50), !dbg !7903
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7903
  %green52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %59, i32 0, i32 1, !dbg !7903
  store i16 %call51, i16* %green52, align 2, !dbg !7903
  %60 = load float*, float** %p, align 8, !dbg !7904
  %incdec.ptr53 = getelementptr inbounds float, float* %60, i32 1, !dbg !7904
  store float* %incdec.ptr53, float** %p, align 8, !dbg !7904
  %61 = load float*, float** %p, align 8, !dbg !7905
  %62 = load float, float* %61, align 4, !dbg !7905
  %mul54 = fmul float 6.553500e+04, %62, !dbg !7905
  %call55 = call zeroext i16 @ClampToQuantum(float %mul54), !dbg !7905
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7905
  %red56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 2, !dbg !7905
  store i16 %call55, i16* %red56, align 2, !dbg !7905
  %64 = load float*, float** %p, align 8, !dbg !7906
  %incdec.ptr57 = getelementptr inbounds float, float* %64, i32 1, !dbg !7906
  store float* %incdec.ptr57, float** %p, align 8, !dbg !7906
  %65 = load float*, float** %p, align 8, !dbg !7907
  %66 = load float, float* %65, align 4, !dbg !7907
  %mul58 = fmul float 6.553500e+04, %66, !dbg !7907
  %call59 = call zeroext i16 @ClampToQuantum(float %mul58), !dbg !7907
  %conv = zext i16 %call59 to i32, !dbg !7907
  %sub = sub nsw i32 65535, %conv, !dbg !7907
  %conv60 = trunc i32 %sub to i16, !dbg !7907
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7907
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 3, !dbg !7907
  store i16 %conv60, i16* %opacity, align 2, !dbg !7907
  %68 = load float*, float** %p, align 8, !dbg !7908
  %incdec.ptr61 = getelementptr inbounds float, float* %68, i32 1, !dbg !7908
  store float* %incdec.ptr61, float** %p, align 8, !dbg !7908
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7909
  %incdec.ptr62 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 1, !dbg !7909
  store %struct._PixelPacket* %incdec.ptr62, %struct._PixelPacket** %q, align 8, !dbg !7909
  br label %for.inc63, !dbg !7910

for.inc63:                                        ; preds = %for.body45
  %70 = load i64, i64* %x, align 8, !dbg !7911
  %inc64 = add nsw i64 %70, 1, !dbg !7911
  store i64 %inc64, i64* %x, align 8, !dbg !7911
  br label %for.cond42, !dbg !7912, !llvm.loop !7913

for.end65:                                        ; preds = %for.cond42
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7915
  %72 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7917
  %call66 = call i32 @SyncAuthenticPixels(%struct._Image* %71, %struct._ExceptionInfo* %72), !dbg !7918
  %cmp67 = icmp eq i32 %call66, 0, !dbg !7919
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !7920

if.then69:                                        ; preds = %for.end65
  br label %for.end73, !dbg !7921

if.end70:                                         ; preds = %for.end65
  br label %for.inc71, !dbg !7922

for.inc71:                                        ; preds = %if.end70
  %73 = load i64, i64* %y, align 8, !dbg !7923
  %inc72 = add nsw i64 %73, 1, !dbg !7923
  store i64 %inc72, i64* %y, align 8, !dbg !7923
  br label %for.cond30, !dbg !7924, !llvm.loop !7925

for.end73:                                        ; preds = %if.then69, %if.then40, %for.cond30
  br label %for.end397, !dbg !7927

if.end74:                                         ; preds = %if.end26
  %74 = load i8*, i8** %map.addr, align 8, !dbg !7928
  %call75 = call i32 @LocaleCompare(i8* %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !7930
  %cmp76 = icmp eq i32 %call75, 0, !dbg !7931
  br i1 %cmp76, label %if.then78, label %if.end123, !dbg !7932

if.then78:                                        ; preds = %if.end74
  store i64 0, i64* %y, align 8, !dbg !7933
  br label %for.cond79, !dbg !7936

for.cond79:                                       ; preds = %for.inc120, %if.then78
  %75 = load i64, i64* %y, align 8, !dbg !7937
  %76 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7939
  %height80 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %76, i32 0, i32 1, !dbg !7940
  %77 = load i64, i64* %height80, align 8, !dbg !7940
  %cmp81 = icmp slt i64 %75, %77, !dbg !7941
  br i1 %cmp81, label %for.body83, label %for.end122, !dbg !7942

for.body83:                                       ; preds = %for.cond79
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7943
  %79 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7945
  %x84 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %79, i32 0, i32 2, !dbg !7946
  %80 = load i64, i64* %x84, align 8, !dbg !7946
  %81 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7947
  %y85 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %81, i32 0, i32 3, !dbg !7948
  %82 = load i64, i64* %y85, align 8, !dbg !7948
  %83 = load i64, i64* %y, align 8, !dbg !7949
  %add86 = add nsw i64 %82, %83, !dbg !7950
  %84 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7951
  %width87 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %84, i32 0, i32 0, !dbg !7952
  %85 = load i64, i64* %width87, align 8, !dbg !7952
  %86 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7953
  %call88 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %78, i64 %80, i64 %add86, i64 %85, i64 1, %struct._ExceptionInfo* %86), !dbg !7954
  store %struct._PixelPacket* %call88, %struct._PixelPacket** %q, align 8, !dbg !7955
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7956
  %cmp89 = icmp eq %struct._PixelPacket* %87, null, !dbg !7958
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !7959

if.then91:                                        ; preds = %for.body83
  br label %for.end122, !dbg !7960

if.end92:                                         ; preds = %for.body83
  store i64 0, i64* %x, align 8, !dbg !7961
  br label %for.cond93, !dbg !7963

for.cond93:                                       ; preds = %for.inc112, %if.end92
  %88 = load i64, i64* %x, align 8, !dbg !7964
  %89 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !7966
  %width94 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %89, i32 0, i32 0, !dbg !7967
  %90 = load i64, i64* %width94, align 8, !dbg !7967
  %cmp95 = icmp slt i64 %88, %90, !dbg !7968
  br i1 %cmp95, label %for.body97, label %for.end114, !dbg !7969

for.body97:                                       ; preds = %for.cond93
  %91 = load float*, float** %p, align 8, !dbg !7970
  %92 = load float, float* %91, align 4, !dbg !7970
  %mul98 = fmul float 6.553500e+04, %92, !dbg !7970
  %call99 = call zeroext i16 @ClampToQuantum(float %mul98), !dbg !7970
  %93 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7970
  %blue100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %93, i32 0, i32 0, !dbg !7970
  store i16 %call99, i16* %blue100, align 2, !dbg !7970
  %94 = load float*, float** %p, align 8, !dbg !7972
  %incdec.ptr101 = getelementptr inbounds float, float* %94, i32 1, !dbg !7972
  store float* %incdec.ptr101, float** %p, align 8, !dbg !7972
  %95 = load float*, float** %p, align 8, !dbg !7973
  %96 = load float, float* %95, align 4, !dbg !7973
  %mul102 = fmul float 6.553500e+04, %96, !dbg !7973
  %call103 = call zeroext i16 @ClampToQuantum(float %mul102), !dbg !7973
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7973
  %green104 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 1, !dbg !7973
  store i16 %call103, i16* %green104, align 2, !dbg !7973
  %98 = load float*, float** %p, align 8, !dbg !7974
  %incdec.ptr105 = getelementptr inbounds float, float* %98, i32 1, !dbg !7974
  store float* %incdec.ptr105, float** %p, align 8, !dbg !7974
  %99 = load float*, float** %p, align 8, !dbg !7975
  %100 = load float, float* %99, align 4, !dbg !7975
  %mul106 = fmul float 6.553500e+04, %100, !dbg !7975
  %call107 = call zeroext i16 @ClampToQuantum(float %mul106), !dbg !7975
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7975
  %red108 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 2, !dbg !7975
  store i16 %call107, i16* %red108, align 2, !dbg !7975
  %102 = load float*, float** %p, align 8, !dbg !7976
  %incdec.ptr109 = getelementptr inbounds float, float* %102, i32 1, !dbg !7976
  store float* %incdec.ptr109, float** %p, align 8, !dbg !7976
  %103 = load float*, float** %p, align 8, !dbg !7977
  %incdec.ptr110 = getelementptr inbounds float, float* %103, i32 1, !dbg !7977
  store float* %incdec.ptr110, float** %p, align 8, !dbg !7977
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7978
  %incdec.ptr111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 1, !dbg !7978
  store %struct._PixelPacket* %incdec.ptr111, %struct._PixelPacket** %q, align 8, !dbg !7978
  br label %for.inc112, !dbg !7979

for.inc112:                                       ; preds = %for.body97
  %105 = load i64, i64* %x, align 8, !dbg !7980
  %inc113 = add nsw i64 %105, 1, !dbg !7980
  store i64 %inc113, i64* %x, align 8, !dbg !7980
  br label %for.cond93, !dbg !7981, !llvm.loop !7982

for.end114:                                       ; preds = %for.cond93
  %106 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7984
  %107 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7986
  %call115 = call i32 @SyncAuthenticPixels(%struct._Image* %106, %struct._ExceptionInfo* %107), !dbg !7987
  %cmp116 = icmp eq i32 %call115, 0, !dbg !7988
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !7989

if.then118:                                       ; preds = %for.end114
  br label %for.end122, !dbg !7990

if.end119:                                        ; preds = %for.end114
  br label %for.inc120, !dbg !7991

for.inc120:                                       ; preds = %if.end119
  %108 = load i64, i64* %y, align 8, !dbg !7992
  %inc121 = add nsw i64 %108, 1, !dbg !7992
  store i64 %inc121, i64* %y, align 8, !dbg !7992
  br label %for.cond79, !dbg !7993, !llvm.loop !7994

for.end122:                                       ; preds = %if.then118, %if.then91, %for.cond79
  br label %for.end397, !dbg !7996

if.end123:                                        ; preds = %if.end74
  %109 = load i8*, i8** %map.addr, align 8, !dbg !7997
  %call124 = call i32 @LocaleCompare(i8* %109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !7999
  %cmp125 = icmp eq i32 %call124, 0, !dbg !8000
  br i1 %cmp125, label %if.then127, label %if.end167, !dbg !8001

if.then127:                                       ; preds = %if.end123
  store i64 0, i64* %y, align 8, !dbg !8002
  br label %for.cond128, !dbg !8005

for.cond128:                                      ; preds = %for.inc164, %if.then127
  %110 = load i64, i64* %y, align 8, !dbg !8006
  %111 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8008
  %height129 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %111, i32 0, i32 1, !dbg !8009
  %112 = load i64, i64* %height129, align 8, !dbg !8009
  %cmp130 = icmp slt i64 %110, %112, !dbg !8010
  br i1 %cmp130, label %for.body132, label %for.end166, !dbg !8011

for.body132:                                      ; preds = %for.cond128
  %113 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8012
  %114 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8014
  %x133 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %114, i32 0, i32 2, !dbg !8015
  %115 = load i64, i64* %x133, align 8, !dbg !8015
  %116 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8016
  %y134 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %116, i32 0, i32 3, !dbg !8017
  %117 = load i64, i64* %y134, align 8, !dbg !8017
  %118 = load i64, i64* %y, align 8, !dbg !8018
  %add135 = add nsw i64 %117, %118, !dbg !8019
  %119 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8020
  %width136 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %119, i32 0, i32 0, !dbg !8021
  %120 = load i64, i64* %width136, align 8, !dbg !8021
  %121 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8022
  %call137 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %113, i64 %115, i64 %add135, i64 %120, i64 1, %struct._ExceptionInfo* %121), !dbg !8023
  store %struct._PixelPacket* %call137, %struct._PixelPacket** %q, align 8, !dbg !8024
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8025
  %cmp138 = icmp eq %struct._PixelPacket* %122, null, !dbg !8027
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !8028

if.then140:                                       ; preds = %for.body132
  br label %for.end166, !dbg !8029

if.end141:                                        ; preds = %for.body132
  store i64 0, i64* %x, align 8, !dbg !8030
  br label %for.cond142, !dbg !8032

for.cond142:                                      ; preds = %for.inc156, %if.end141
  %123 = load i64, i64* %x, align 8, !dbg !8033
  %124 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8035
  %width143 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %124, i32 0, i32 0, !dbg !8036
  %125 = load i64, i64* %width143, align 8, !dbg !8036
  %cmp144 = icmp slt i64 %123, %125, !dbg !8037
  br i1 %cmp144, label %for.body146, label %for.end158, !dbg !8038

for.body146:                                      ; preds = %for.cond142
  %126 = load float*, float** %p, align 8, !dbg !8039
  %127 = load float, float* %126, align 4, !dbg !8039
  %mul147 = fmul float 6.553500e+04, %127, !dbg !8039
  %call148 = call zeroext i16 @ClampToQuantum(float %mul147), !dbg !8039
  %128 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8039
  %red149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %128, i32 0, i32 2, !dbg !8039
  store i16 %call148, i16* %red149, align 2, !dbg !8039
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8041
  %red150 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i32 0, i32 2, !dbg !8041
  %130 = load i16, i16* %red150, align 2, !dbg !8041
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8041
  %green151 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %131, i32 0, i32 1, !dbg !8041
  store i16 %130, i16* %green151, align 2, !dbg !8041
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8042
  %red152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 2, !dbg !8042
  %133 = load i16, i16* %red152, align 2, !dbg !8042
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8042
  %blue153 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %134, i32 0, i32 0, !dbg !8042
  store i16 %133, i16* %blue153, align 2, !dbg !8042
  %135 = load float*, float** %p, align 8, !dbg !8043
  %incdec.ptr154 = getelementptr inbounds float, float* %135, i32 1, !dbg !8043
  store float* %incdec.ptr154, float** %p, align 8, !dbg !8043
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8044
  %incdec.ptr155 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 1, !dbg !8044
  store %struct._PixelPacket* %incdec.ptr155, %struct._PixelPacket** %q, align 8, !dbg !8044
  br label %for.inc156, !dbg !8045

for.inc156:                                       ; preds = %for.body146
  %137 = load i64, i64* %x, align 8, !dbg !8046
  %inc157 = add nsw i64 %137, 1, !dbg !8046
  store i64 %inc157, i64* %x, align 8, !dbg !8046
  br label %for.cond142, !dbg !8047, !llvm.loop !8048

for.end158:                                       ; preds = %for.cond142
  %138 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8050
  %139 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8052
  %call159 = call i32 @SyncAuthenticPixels(%struct._Image* %138, %struct._ExceptionInfo* %139), !dbg !8053
  %cmp160 = icmp eq i32 %call159, 0, !dbg !8054
  br i1 %cmp160, label %if.then162, label %if.end163, !dbg !8055

if.then162:                                       ; preds = %for.end158
  br label %for.end166, !dbg !8056

if.end163:                                        ; preds = %for.end158
  br label %for.inc164, !dbg !8057

for.inc164:                                       ; preds = %if.end163
  %140 = load i64, i64* %y, align 8, !dbg !8058
  %inc165 = add nsw i64 %140, 1, !dbg !8058
  store i64 %inc165, i64* %y, align 8, !dbg !8058
  br label %for.cond128, !dbg !8059, !llvm.loop !8060

for.end166:                                       ; preds = %if.then162, %if.then140, %for.cond128
  br label %for.end397, !dbg !8062

if.end167:                                        ; preds = %if.end123
  %141 = load i8*, i8** %map.addr, align 8, !dbg !8063
  %call168 = call i32 @LocaleCompare(i8* %141, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !8065
  %cmp169 = icmp eq i32 %call168, 0, !dbg !8066
  br i1 %cmp169, label %if.then171, label %if.end215, !dbg !8067

if.then171:                                       ; preds = %if.end167
  store i64 0, i64* %y, align 8, !dbg !8068
  br label %for.cond172, !dbg !8071

for.cond172:                                      ; preds = %for.inc212, %if.then171
  %142 = load i64, i64* %y, align 8, !dbg !8072
  %143 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8074
  %height173 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %143, i32 0, i32 1, !dbg !8075
  %144 = load i64, i64* %height173, align 8, !dbg !8075
  %cmp174 = icmp slt i64 %142, %144, !dbg !8076
  br i1 %cmp174, label %for.body176, label %for.end214, !dbg !8077

for.body176:                                      ; preds = %for.cond172
  %145 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8078
  %146 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8080
  %x177 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %146, i32 0, i32 2, !dbg !8081
  %147 = load i64, i64* %x177, align 8, !dbg !8081
  %148 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8082
  %y178 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %148, i32 0, i32 3, !dbg !8083
  %149 = load i64, i64* %y178, align 8, !dbg !8083
  %150 = load i64, i64* %y, align 8, !dbg !8084
  %add179 = add nsw i64 %149, %150, !dbg !8085
  %151 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8086
  %width180 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %151, i32 0, i32 0, !dbg !8087
  %152 = load i64, i64* %width180, align 8, !dbg !8087
  %153 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8088
  %call181 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %145, i64 %147, i64 %add179, i64 %152, i64 1, %struct._ExceptionInfo* %153), !dbg !8089
  store %struct._PixelPacket* %call181, %struct._PixelPacket** %q, align 8, !dbg !8090
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8091
  %cmp182 = icmp eq %struct._PixelPacket* %154, null, !dbg !8093
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !8094

if.then184:                                       ; preds = %for.body176
  br label %for.end214, !dbg !8095

if.end185:                                        ; preds = %for.body176
  store i64 0, i64* %x, align 8, !dbg !8096
  br label %for.cond186, !dbg !8098

for.cond186:                                      ; preds = %for.inc204, %if.end185
  %155 = load i64, i64* %x, align 8, !dbg !8099
  %156 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8101
  %width187 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %156, i32 0, i32 0, !dbg !8102
  %157 = load i64, i64* %width187, align 8, !dbg !8102
  %cmp188 = icmp slt i64 %155, %157, !dbg !8103
  br i1 %cmp188, label %for.body190, label %for.end206, !dbg !8104

for.body190:                                      ; preds = %for.cond186
  %158 = load float*, float** %p, align 8, !dbg !8105
  %159 = load float, float* %158, align 4, !dbg !8105
  %mul191 = fmul float 6.553500e+04, %159, !dbg !8105
  %call192 = call zeroext i16 @ClampToQuantum(float %mul191), !dbg !8105
  %160 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8105
  %red193 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %160, i32 0, i32 2, !dbg !8105
  store i16 %call192, i16* %red193, align 2, !dbg !8105
  %161 = load float*, float** %p, align 8, !dbg !8107
  %incdec.ptr194 = getelementptr inbounds float, float* %161, i32 1, !dbg !8107
  store float* %incdec.ptr194, float** %p, align 8, !dbg !8107
  %162 = load float*, float** %p, align 8, !dbg !8108
  %163 = load float, float* %162, align 4, !dbg !8108
  %mul195 = fmul float 6.553500e+04, %163, !dbg !8108
  %call196 = call zeroext i16 @ClampToQuantum(float %mul195), !dbg !8108
  %164 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8108
  %green197 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %164, i32 0, i32 1, !dbg !8108
  store i16 %call196, i16* %green197, align 2, !dbg !8108
  %165 = load float*, float** %p, align 8, !dbg !8109
  %incdec.ptr198 = getelementptr inbounds float, float* %165, i32 1, !dbg !8109
  store float* %incdec.ptr198, float** %p, align 8, !dbg !8109
  %166 = load float*, float** %p, align 8, !dbg !8110
  %167 = load float, float* %166, align 4, !dbg !8110
  %mul199 = fmul float 6.553500e+04, %167, !dbg !8110
  %call200 = call zeroext i16 @ClampToQuantum(float %mul199), !dbg !8110
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8110
  %blue201 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 0, !dbg !8110
  store i16 %call200, i16* %blue201, align 2, !dbg !8110
  %169 = load float*, float** %p, align 8, !dbg !8111
  %incdec.ptr202 = getelementptr inbounds float, float* %169, i32 1, !dbg !8111
  store float* %incdec.ptr202, float** %p, align 8, !dbg !8111
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8112
  %incdec.ptr203 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i32 1, !dbg !8112
  store %struct._PixelPacket* %incdec.ptr203, %struct._PixelPacket** %q, align 8, !dbg !8112
  br label %for.inc204, !dbg !8113

for.inc204:                                       ; preds = %for.body190
  %171 = load i64, i64* %x, align 8, !dbg !8114
  %inc205 = add nsw i64 %171, 1, !dbg !8114
  store i64 %inc205, i64* %x, align 8, !dbg !8114
  br label %for.cond186, !dbg !8115, !llvm.loop !8116

for.end206:                                       ; preds = %for.cond186
  %172 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8118
  %173 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8120
  %call207 = call i32 @SyncAuthenticPixels(%struct._Image* %172, %struct._ExceptionInfo* %173), !dbg !8121
  %cmp208 = icmp eq i32 %call207, 0, !dbg !8122
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !8123

if.then210:                                       ; preds = %for.end206
  br label %for.end214, !dbg !8124

if.end211:                                        ; preds = %for.end206
  br label %for.inc212, !dbg !8125

for.inc212:                                       ; preds = %if.end211
  %174 = load i64, i64* %y, align 8, !dbg !8126
  %inc213 = add nsw i64 %174, 1, !dbg !8126
  store i64 %inc213, i64* %y, align 8, !dbg !8126
  br label %for.cond172, !dbg !8127, !llvm.loop !8128

for.end214:                                       ; preds = %if.then210, %if.then184, %for.cond172
  br label %for.end397, !dbg !8130

if.end215:                                        ; preds = %if.end167
  %175 = load i8*, i8** %map.addr, align 8, !dbg !8131
  %call216 = call i32 @LocaleCompare(i8* %175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !8133
  %cmp217 = icmp eq i32 %call216, 0, !dbg !8134
  br i1 %cmp217, label %if.then219, label %if.end270, !dbg !8135

if.then219:                                       ; preds = %if.end215
  store i64 0, i64* %y, align 8, !dbg !8136
  br label %for.cond220, !dbg !8139

for.cond220:                                      ; preds = %for.inc267, %if.then219
  %176 = load i64, i64* %y, align 8, !dbg !8140
  %177 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8142
  %height221 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %177, i32 0, i32 1, !dbg !8143
  %178 = load i64, i64* %height221, align 8, !dbg !8143
  %cmp222 = icmp slt i64 %176, %178, !dbg !8144
  br i1 %cmp222, label %for.body224, label %for.end269, !dbg !8145

for.body224:                                      ; preds = %for.cond220
  %179 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8146
  %180 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8148
  %x225 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %180, i32 0, i32 2, !dbg !8149
  %181 = load i64, i64* %x225, align 8, !dbg !8149
  %182 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8150
  %y226 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %182, i32 0, i32 3, !dbg !8151
  %183 = load i64, i64* %y226, align 8, !dbg !8151
  %184 = load i64, i64* %y, align 8, !dbg !8152
  %add227 = add nsw i64 %183, %184, !dbg !8153
  %185 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8154
  %width228 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %185, i32 0, i32 0, !dbg !8155
  %186 = load i64, i64* %width228, align 8, !dbg !8155
  %187 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8156
  %call229 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %179, i64 %181, i64 %add227, i64 %186, i64 1, %struct._ExceptionInfo* %187), !dbg !8157
  store %struct._PixelPacket* %call229, %struct._PixelPacket** %q, align 8, !dbg !8158
  %188 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8159
  %cmp230 = icmp eq %struct._PixelPacket* %188, null, !dbg !8161
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !8162

if.then232:                                       ; preds = %for.body224
  br label %for.end269, !dbg !8163

if.end233:                                        ; preds = %for.body224
  store i64 0, i64* %x, align 8, !dbg !8164
  br label %for.cond234, !dbg !8166

for.cond234:                                      ; preds = %for.inc259, %if.end233
  %189 = load i64, i64* %x, align 8, !dbg !8167
  %190 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8169
  %width235 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %190, i32 0, i32 0, !dbg !8170
  %191 = load i64, i64* %width235, align 8, !dbg !8170
  %cmp236 = icmp slt i64 %189, %191, !dbg !8171
  br i1 %cmp236, label %for.body238, label %for.end261, !dbg !8172

for.body238:                                      ; preds = %for.cond234
  %192 = load float*, float** %p, align 8, !dbg !8173
  %193 = load float, float* %192, align 4, !dbg !8173
  %mul239 = fmul float 6.553500e+04, %193, !dbg !8173
  %call240 = call zeroext i16 @ClampToQuantum(float %mul239), !dbg !8173
  %194 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8173
  %red241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %194, i32 0, i32 2, !dbg !8173
  store i16 %call240, i16* %red241, align 2, !dbg !8173
  %195 = load float*, float** %p, align 8, !dbg !8175
  %incdec.ptr242 = getelementptr inbounds float, float* %195, i32 1, !dbg !8175
  store float* %incdec.ptr242, float** %p, align 8, !dbg !8175
  %196 = load float*, float** %p, align 8, !dbg !8176
  %197 = load float, float* %196, align 4, !dbg !8176
  %mul243 = fmul float 6.553500e+04, %197, !dbg !8176
  %call244 = call zeroext i16 @ClampToQuantum(float %mul243), !dbg !8176
  %198 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8176
  %green245 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %198, i32 0, i32 1, !dbg !8176
  store i16 %call244, i16* %green245, align 2, !dbg !8176
  %199 = load float*, float** %p, align 8, !dbg !8177
  %incdec.ptr246 = getelementptr inbounds float, float* %199, i32 1, !dbg !8177
  store float* %incdec.ptr246, float** %p, align 8, !dbg !8177
  %200 = load float*, float** %p, align 8, !dbg !8178
  %201 = load float, float* %200, align 4, !dbg !8178
  %mul247 = fmul float 6.553500e+04, %201, !dbg !8178
  %call248 = call zeroext i16 @ClampToQuantum(float %mul247), !dbg !8178
  %202 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8178
  %blue249 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %202, i32 0, i32 0, !dbg !8178
  store i16 %call248, i16* %blue249, align 2, !dbg !8178
  %203 = load float*, float** %p, align 8, !dbg !8179
  %incdec.ptr250 = getelementptr inbounds float, float* %203, i32 1, !dbg !8179
  store float* %incdec.ptr250, float** %p, align 8, !dbg !8179
  %204 = load float*, float** %p, align 8, !dbg !8180
  %205 = load float, float* %204, align 4, !dbg !8180
  %mul251 = fmul float 6.553500e+04, %205, !dbg !8180
  %call252 = call zeroext i16 @ClampToQuantum(float %mul251), !dbg !8180
  %conv253 = zext i16 %call252 to i32, !dbg !8180
  %sub254 = sub nsw i32 65535, %conv253, !dbg !8180
  %conv255 = trunc i32 %sub254 to i16, !dbg !8180
  %206 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8180
  %opacity256 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %206, i32 0, i32 3, !dbg !8180
  store i16 %conv255, i16* %opacity256, align 2, !dbg !8180
  %207 = load float*, float** %p, align 8, !dbg !8181
  %incdec.ptr257 = getelementptr inbounds float, float* %207, i32 1, !dbg !8181
  store float* %incdec.ptr257, float** %p, align 8, !dbg !8181
  %208 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8182
  %incdec.ptr258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %208, i32 1, !dbg !8182
  store %struct._PixelPacket* %incdec.ptr258, %struct._PixelPacket** %q, align 8, !dbg !8182
  br label %for.inc259, !dbg !8183

for.inc259:                                       ; preds = %for.body238
  %209 = load i64, i64* %x, align 8, !dbg !8184
  %inc260 = add nsw i64 %209, 1, !dbg !8184
  store i64 %inc260, i64* %x, align 8, !dbg !8184
  br label %for.cond234, !dbg !8185, !llvm.loop !8186

for.end261:                                       ; preds = %for.cond234
  %210 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8188
  %211 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8190
  %call262 = call i32 @SyncAuthenticPixels(%struct._Image* %210, %struct._ExceptionInfo* %211), !dbg !8191
  %cmp263 = icmp eq i32 %call262, 0, !dbg !8192
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !8193

if.then265:                                       ; preds = %for.end261
  br label %for.end269, !dbg !8194

if.end266:                                        ; preds = %for.end261
  br label %for.inc267, !dbg !8195

for.inc267:                                       ; preds = %if.end266
  %212 = load i64, i64* %y, align 8, !dbg !8196
  %inc268 = add nsw i64 %212, 1, !dbg !8196
  store i64 %inc268, i64* %y, align 8, !dbg !8196
  br label %for.cond220, !dbg !8197, !llvm.loop !8198

for.end269:                                       ; preds = %if.then265, %if.then232, %for.cond220
  br label %for.end397, !dbg !8200

if.end270:                                        ; preds = %if.end215
  %213 = load i8*, i8** %map.addr, align 8, !dbg !8201
  %call271 = call i32 @LocaleCompare(i8* %213, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !8203
  %cmp272 = icmp eq i32 %call271, 0, !dbg !8204
  br i1 %cmp272, label %if.then274, label %if.end318, !dbg !8205

if.then274:                                       ; preds = %if.end270
  store i64 0, i64* %y, align 8, !dbg !8206
  br label %for.cond275, !dbg !8209

for.cond275:                                      ; preds = %for.inc315, %if.then274
  %214 = load i64, i64* %y, align 8, !dbg !8210
  %215 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8212
  %height276 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %215, i32 0, i32 1, !dbg !8213
  %216 = load i64, i64* %height276, align 8, !dbg !8213
  %cmp277 = icmp slt i64 %214, %216, !dbg !8214
  br i1 %cmp277, label %for.body279, label %for.end317, !dbg !8215

for.body279:                                      ; preds = %for.cond275
  %217 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8216
  %218 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8218
  %x280 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %218, i32 0, i32 2, !dbg !8219
  %219 = load i64, i64* %x280, align 8, !dbg !8219
  %220 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8220
  %y281 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %220, i32 0, i32 3, !dbg !8221
  %221 = load i64, i64* %y281, align 8, !dbg !8221
  %222 = load i64, i64* %y, align 8, !dbg !8222
  %add282 = add nsw i64 %221, %222, !dbg !8223
  %223 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8224
  %width283 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %223, i32 0, i32 0, !dbg !8225
  %224 = load i64, i64* %width283, align 8, !dbg !8225
  %225 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8226
  %call284 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %217, i64 %219, i64 %add282, i64 %224, i64 1, %struct._ExceptionInfo* %225), !dbg !8227
  store %struct._PixelPacket* %call284, %struct._PixelPacket** %q, align 8, !dbg !8228
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8229
  %cmp285 = icmp eq %struct._PixelPacket* %226, null, !dbg !8231
  br i1 %cmp285, label %if.then287, label %if.end288, !dbg !8232

if.then287:                                       ; preds = %for.body279
  br label %for.end317, !dbg !8233

if.end288:                                        ; preds = %for.body279
  store i64 0, i64* %x, align 8, !dbg !8234
  br label %for.cond289, !dbg !8236

for.cond289:                                      ; preds = %for.inc307, %if.end288
  %227 = load i64, i64* %x, align 8, !dbg !8237
  %228 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8239
  %width290 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %228, i32 0, i32 0, !dbg !8240
  %229 = load i64, i64* %width290, align 8, !dbg !8240
  %cmp291 = icmp slt i64 %227, %229, !dbg !8241
  br i1 %cmp291, label %for.body293, label %for.end309, !dbg !8242

for.body293:                                      ; preds = %for.cond289
  %230 = load float*, float** %p, align 8, !dbg !8243
  %231 = load float, float* %230, align 4, !dbg !8243
  %mul294 = fmul float 6.553500e+04, %231, !dbg !8243
  %call295 = call zeroext i16 @ClampToQuantum(float %mul294), !dbg !8243
  %232 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8243
  %red296 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %232, i32 0, i32 2, !dbg !8243
  store i16 %call295, i16* %red296, align 2, !dbg !8243
  %233 = load float*, float** %p, align 8, !dbg !8245
  %incdec.ptr297 = getelementptr inbounds float, float* %233, i32 1, !dbg !8245
  store float* %incdec.ptr297, float** %p, align 8, !dbg !8245
  %234 = load float*, float** %p, align 8, !dbg !8246
  %235 = load float, float* %234, align 4, !dbg !8246
  %mul298 = fmul float 6.553500e+04, %235, !dbg !8246
  %call299 = call zeroext i16 @ClampToQuantum(float %mul298), !dbg !8246
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8246
  %green300 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 0, i32 1, !dbg !8246
  store i16 %call299, i16* %green300, align 2, !dbg !8246
  %237 = load float*, float** %p, align 8, !dbg !8247
  %incdec.ptr301 = getelementptr inbounds float, float* %237, i32 1, !dbg !8247
  store float* %incdec.ptr301, float** %p, align 8, !dbg !8247
  %238 = load float*, float** %p, align 8, !dbg !8248
  %239 = load float, float* %238, align 4, !dbg !8248
  %mul302 = fmul float 6.553500e+04, %239, !dbg !8248
  %call303 = call zeroext i16 @ClampToQuantum(float %mul302), !dbg !8248
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8248
  %blue304 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 0, !dbg !8248
  store i16 %call303, i16* %blue304, align 2, !dbg !8248
  %241 = load float*, float** %p, align 8, !dbg !8249
  %incdec.ptr305 = getelementptr inbounds float, float* %241, i32 1, !dbg !8249
  store float* %incdec.ptr305, float** %p, align 8, !dbg !8249
  %242 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8250
  %incdec.ptr306 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %242, i32 1, !dbg !8250
  store %struct._PixelPacket* %incdec.ptr306, %struct._PixelPacket** %q, align 8, !dbg !8250
  br label %for.inc307, !dbg !8251

for.inc307:                                       ; preds = %for.body293
  %243 = load i64, i64* %x, align 8, !dbg !8252
  %inc308 = add nsw i64 %243, 1, !dbg !8252
  store i64 %inc308, i64* %x, align 8, !dbg !8252
  br label %for.cond289, !dbg !8253, !llvm.loop !8254

for.end309:                                       ; preds = %for.cond289
  %244 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8256
  %245 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8258
  %call310 = call i32 @SyncAuthenticPixels(%struct._Image* %244, %struct._ExceptionInfo* %245), !dbg !8259
  %cmp311 = icmp eq i32 %call310, 0, !dbg !8260
  br i1 %cmp311, label %if.then313, label %if.end314, !dbg !8261

if.then313:                                       ; preds = %for.end309
  br label %for.end317, !dbg !8262

if.end314:                                        ; preds = %for.end309
  br label %for.inc315, !dbg !8263

for.inc315:                                       ; preds = %if.end314
  %246 = load i64, i64* %y, align 8, !dbg !8264
  %inc316 = add nsw i64 %246, 1, !dbg !8264
  store i64 %inc316, i64* %y, align 8, !dbg !8264
  br label %for.cond275, !dbg !8265, !llvm.loop !8266

for.end317:                                       ; preds = %if.then313, %if.then287, %for.cond275
  br label %for.end397, !dbg !8268

if.end318:                                        ; preds = %if.end270
  %247 = load i8*, i8** %map.addr, align 8, !dbg !8269
  %call319 = call i64 @strlen(i8* %247) #13, !dbg !8270
  store i64 %call319, i64* %length, align 8, !dbg !8271
  store i64 0, i64* %y, align 8, !dbg !8272
  br label %for.cond320, !dbg !8274

for.cond320:                                      ; preds = %for.inc395, %if.end318
  %248 = load i64, i64* %y, align 8, !dbg !8275
  %249 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8277
  %height321 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %249, i32 0, i32 1, !dbg !8278
  %250 = load i64, i64* %height321, align 8, !dbg !8278
  %cmp322 = icmp slt i64 %248, %250, !dbg !8279
  br i1 %cmp322, label %for.body324, label %for.end397, !dbg !8280

for.body324:                                      ; preds = %for.cond320
  %251 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8281
  %252 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8283
  %x325 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %252, i32 0, i32 2, !dbg !8284
  %253 = load i64, i64* %x325, align 8, !dbg !8284
  %254 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8285
  %y326 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %254, i32 0, i32 3, !dbg !8286
  %255 = load i64, i64* %y326, align 8, !dbg !8286
  %256 = load i64, i64* %y, align 8, !dbg !8287
  %add327 = add nsw i64 %255, %256, !dbg !8288
  %257 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8289
  %width328 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %257, i32 0, i32 0, !dbg !8290
  %258 = load i64, i64* %width328, align 8, !dbg !8290
  %259 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8291
  %call329 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %251, i64 %253, i64 %add327, i64 %258, i64 1, %struct._ExceptionInfo* %259), !dbg !8292
  store %struct._PixelPacket* %call329, %struct._PixelPacket** %q, align 8, !dbg !8293
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8294
  %cmp330 = icmp eq %struct._PixelPacket* %260, null, !dbg !8296
  br i1 %cmp330, label %if.then332, label %if.end333, !dbg !8297

if.then332:                                       ; preds = %for.body324
  br label %for.end397, !dbg !8298

if.end333:                                        ; preds = %for.body324
  %261 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8299
  %call334 = call i16* @GetAuthenticIndexQueue(%struct._Image* %261), !dbg !8300
  store i16* %call334, i16** %indexes, align 8, !dbg !8301
  store i64 0, i64* %x, align 8, !dbg !8302
  br label %for.cond335, !dbg !8304

for.cond335:                                      ; preds = %for.inc387, %if.end333
  %262 = load i64, i64* %x, align 8, !dbg !8305
  %263 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8307
  %width336 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %263, i32 0, i32 0, !dbg !8308
  %264 = load i64, i64* %width336, align 8, !dbg !8308
  %cmp337 = icmp slt i64 %262, %264, !dbg !8309
  br i1 %cmp337, label %for.body339, label %for.end389, !dbg !8310

for.body339:                                      ; preds = %for.cond335
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8311, metadata !DIExpression()), !dbg !8313
  store i64 0, i64* %i, align 8, !dbg !8314
  br label %for.cond340, !dbg !8316

for.cond340:                                      ; preds = %for.inc383, %for.body339
  %265 = load i64, i64* %i, align 8, !dbg !8317
  %266 = load i64, i64* %length, align 8, !dbg !8319
  %cmp341 = icmp slt i64 %265, %266, !dbg !8320
  br i1 %cmp341, label %for.body343, label %for.end385, !dbg !8321

for.body343:                                      ; preds = %for.cond340
  %267 = load i32*, i32** %quantum_map.addr, align 8, !dbg !8322
  %268 = load i64, i64* %i, align 8, !dbg !8324
  %arrayidx = getelementptr inbounds i32, i32* %267, i64 %268, !dbg !8322
  %269 = load i32, i32* %arrayidx, align 4, !dbg !8322
  switch i32 %269, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb347
    i32 12, label %sw.bb347
    i32 3, label %sw.bb351
    i32 19, label %sw.bb351
    i32 1, label %sw.bb355
    i32 13, label %sw.bb362
    i32 2, label %sw.bb366
    i32 11, label %sw.bb374
  ], !dbg !8325

sw.bb:                                            ; preds = %for.body343, %for.body343
  %270 = load float*, float** %p, align 8, !dbg !8326
  %271 = load float, float* %270, align 4, !dbg !8326
  %mul344 = fmul float 6.553500e+04, %271, !dbg !8326
  %call345 = call zeroext i16 @ClampToQuantum(float %mul344), !dbg !8326
  %272 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8326
  %red346 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %272, i32 0, i32 2, !dbg !8326
  store i16 %call345, i16* %red346, align 2, !dbg !8326
  br label %sw.epilog, !dbg !8329

sw.bb347:                                         ; preds = %for.body343, %for.body343
  %273 = load float*, float** %p, align 8, !dbg !8330
  %274 = load float, float* %273, align 4, !dbg !8330
  %mul348 = fmul float 6.553500e+04, %274, !dbg !8330
  %call349 = call zeroext i16 @ClampToQuantum(float %mul348), !dbg !8330
  %275 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8330
  %green350 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %275, i32 0, i32 1, !dbg !8330
  store i16 %call349, i16* %green350, align 2, !dbg !8330
  br label %sw.epilog, !dbg !8332

sw.bb351:                                         ; preds = %for.body343, %for.body343
  %276 = load float*, float** %p, align 8, !dbg !8333
  %277 = load float, float* %276, align 4, !dbg !8333
  %mul352 = fmul float 6.553500e+04, %277, !dbg !8333
  %call353 = call zeroext i16 @ClampToQuantum(float %mul352), !dbg !8333
  %278 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8333
  %blue354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %278, i32 0, i32 0, !dbg !8333
  store i16 %call353, i16* %blue354, align 2, !dbg !8333
  br label %sw.epilog, !dbg !8335

sw.bb355:                                         ; preds = %for.body343
  %279 = load float*, float** %p, align 8, !dbg !8336
  %280 = load float, float* %279, align 4, !dbg !8336
  %mul356 = fmul float 6.553500e+04, %280, !dbg !8336
  %call357 = call zeroext i16 @ClampToQuantum(float %mul356), !dbg !8336
  %conv358 = zext i16 %call357 to i32, !dbg !8336
  %sub359 = sub nsw i32 65535, %conv358, !dbg !8336
  %conv360 = trunc i32 %sub359 to i16, !dbg !8336
  %281 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8336
  %opacity361 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %281, i32 0, i32 3, !dbg !8336
  store i16 %conv360, i16* %opacity361, align 2, !dbg !8336
  br label %sw.epilog, !dbg !8338

sw.bb362:                                         ; preds = %for.body343
  %282 = load float*, float** %p, align 8, !dbg !8339
  %283 = load float, float* %282, align 4, !dbg !8339
  %mul363 = fmul float 6.553500e+04, %283, !dbg !8339
  %call364 = call zeroext i16 @ClampToQuantum(float %mul363), !dbg !8339
  %284 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8339
  %opacity365 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %284, i32 0, i32 3, !dbg !8339
  store i16 %call364, i16* %opacity365, align 2, !dbg !8339
  br label %sw.epilog, !dbg !8341

sw.bb366:                                         ; preds = %for.body343
  %285 = load i16*, i16** %indexes, align 8, !dbg !8342
  %286 = load i64, i64* %x, align 8, !dbg !8342
  %add.ptr = getelementptr inbounds i16, i16* %285, i64 %286, !dbg !8342
  %cmp367 = icmp ne i16* %add.ptr, null, !dbg !8342
  br i1 %cmp367, label %if.then369, label %if.end373, !dbg !8346

if.then369:                                       ; preds = %sw.bb366
  %287 = load float*, float** %p, align 8, !dbg !8342
  %288 = load float, float* %287, align 4, !dbg !8342
  %mul370 = fmul float 6.553500e+04, %288, !dbg !8342
  %call371 = call zeroext i16 @ClampToQuantum(float %mul370), !dbg !8342
  %289 = load i16*, i16** %indexes, align 8, !dbg !8342
  %290 = load i64, i64* %x, align 8, !dbg !8342
  %add.ptr372 = getelementptr inbounds i16, i16* %289, i64 %290, !dbg !8342
  store i16 %call371, i16* %add.ptr372, align 2, !dbg !8342
  br label %if.end373, !dbg !8342

if.end373:                                        ; preds = %if.then369, %sw.bb366
  br label %sw.epilog, !dbg !8347

sw.bb374:                                         ; preds = %for.body343
  %291 = load float*, float** %p, align 8, !dbg !8348
  %292 = load float, float* %291, align 4, !dbg !8348
  %mul375 = fmul float 6.553500e+04, %292, !dbg !8348
  %call376 = call zeroext i16 @ClampToQuantum(float %mul375), !dbg !8348
  %293 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8348
  %red377 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %293, i32 0, i32 2, !dbg !8348
  store i16 %call376, i16* %red377, align 2, !dbg !8348
  %294 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8350
  %red378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %294, i32 0, i32 2, !dbg !8350
  %295 = load i16, i16* %red378, align 2, !dbg !8350
  %296 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8350
  %green379 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %296, i32 0, i32 1, !dbg !8350
  store i16 %295, i16* %green379, align 2, !dbg !8350
  %297 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8351
  %red380 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %297, i32 0, i32 2, !dbg !8351
  %298 = load i16, i16* %red380, align 2, !dbg !8351
  %299 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8351
  %blue381 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %299, i32 0, i32 0, !dbg !8351
  store i16 %298, i16* %blue381, align 2, !dbg !8351
  br label %sw.epilog, !dbg !8352

sw.default:                                       ; preds = %for.body343
  br label %sw.epilog, !dbg !8353

sw.epilog:                                        ; preds = %sw.default, %sw.bb374, %if.end373, %sw.bb362, %sw.bb355, %sw.bb351, %sw.bb347, %sw.bb
  %300 = load float*, float** %p, align 8, !dbg !8354
  %incdec.ptr382 = getelementptr inbounds float, float* %300, i32 1, !dbg !8354
  store float* %incdec.ptr382, float** %p, align 8, !dbg !8354
  br label %for.inc383, !dbg !8355

for.inc383:                                       ; preds = %sw.epilog
  %301 = load i64, i64* %i, align 8, !dbg !8356
  %inc384 = add nsw i64 %301, 1, !dbg !8356
  store i64 %inc384, i64* %i, align 8, !dbg !8356
  br label %for.cond340, !dbg !8357, !llvm.loop !8358

for.end385:                                       ; preds = %for.cond340
  %302 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8360
  %incdec.ptr386 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %302, i32 1, !dbg !8360
  store %struct._PixelPacket* %incdec.ptr386, %struct._PixelPacket** %q, align 8, !dbg !8360
  br label %for.inc387, !dbg !8361

for.inc387:                                       ; preds = %for.end385
  %303 = load i64, i64* %x, align 8, !dbg !8362
  %inc388 = add nsw i64 %303, 1, !dbg !8362
  store i64 %inc388, i64* %x, align 8, !dbg !8362
  br label %for.cond335, !dbg !8363, !llvm.loop !8364

for.end389:                                       ; preds = %for.cond335
  %304 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8366
  %305 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8368
  %call390 = call i32 @SyncAuthenticPixels(%struct._Image* %304, %struct._ExceptionInfo* %305), !dbg !8369
  %cmp391 = icmp eq i32 %call390, 0, !dbg !8370
  br i1 %cmp391, label %if.then393, label %if.end394, !dbg !8371

if.then393:                                       ; preds = %for.end389
  br label %for.end397, !dbg !8372

if.end394:                                        ; preds = %for.end389
  br label %for.inc395, !dbg !8373

for.inc395:                                       ; preds = %if.end394
  %306 = load i64, i64* %y, align 8, !dbg !8374
  %inc396 = add nsw i64 %306, 1, !dbg !8374
  store i64 %inc396, i64* %y, align 8, !dbg !8374
  br label %for.cond320, !dbg !8375, !llvm.loop !8376

for.end397:                                       ; preds = %for.end25, %for.end73, %for.end122, %for.end166, %for.end214, %for.end269, %for.end317, %if.then393, %if.then332, %for.cond320
  ret void, !dbg !8378
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportIntegerPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !8379 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %p = alloca i32*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8380, metadata !DIExpression()), !dbg !8381
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !8382, metadata !DIExpression()), !dbg !8383
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !8384, metadata !DIExpression()), !dbg !8385
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !8386, metadata !DIExpression()), !dbg !8387
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !8388, metadata !DIExpression()), !dbg !8389
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8390, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.declare(metadata i32** %p, metadata !8392, metadata !DIExpression()), !dbg !8394
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !8395, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !8397, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8399, metadata !DIExpression()), !dbg !8400
  call void @llvm.dbg.declare(metadata i64* %length, metadata !8401, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8403, metadata !DIExpression()), !dbg !8404
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !8405
  %1 = bitcast i8* %0 to i32*, !dbg !8406
  store i32* %1, i32** %p, align 8, !dbg !8407
  %2 = load i8*, i8** %map.addr, align 8, !dbg !8408
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !8410
  %cmp = icmp eq i32 %call, 0, !dbg !8411
  br i1 %cmp, label %if.then, label %if.end24, !dbg !8412

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !8413
  br label %for.cond, !dbg !8416

for.cond:                                         ; preds = %for.inc21, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !8417
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8419
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !8420
  %5 = load i64, i64* %height, align 8, !dbg !8420
  %cmp1 = icmp slt i64 %3, %5, !dbg !8421
  br i1 %cmp1, label %for.body, label %for.end23, !dbg !8422

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8423
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8425
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !8426
  %8 = load i64, i64* %x2, align 8, !dbg !8426
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8427
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !8428
  %10 = load i64, i64* %y3, align 8, !dbg !8428
  %11 = load i64, i64* %y, align 8, !dbg !8429
  %add = add nsw i64 %10, %11, !dbg !8430
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8431
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !8432
  %13 = load i64, i64* %width, align 8, !dbg !8432
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8433
  %call4 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !8434
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %q, align 8, !dbg !8435
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8436
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !8438
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8439

if.then6:                                         ; preds = %for.body
  br label %for.end23, !dbg !8440

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !8441
  br label %for.cond7, !dbg !8443

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !8444
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8446
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !8447
  %18 = load i64, i64* %width8, align 8, !dbg !8447
  %cmp9 = icmp slt i64 %16, %18, !dbg !8448
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !8449

for.body10:                                       ; preds = %for.cond7
  %19 = load i32*, i32** %p, align 8, !dbg !8450
  %incdec.ptr = getelementptr inbounds i32, i32* %19, i32 1, !dbg !8450
  store i32* %incdec.ptr, i32** %p, align 8, !dbg !8450
  %20 = load i32, i32* %19, align 4, !dbg !8450
  %call11 = call zeroext i16 @ScaleLongToQuantum(i32 %20), !dbg !8450
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8450
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i32 0, i32 0, !dbg !8450
  store i16 %call11, i16* %blue, align 2, !dbg !8450
  %22 = load i32*, i32** %p, align 8, !dbg !8452
  %incdec.ptr12 = getelementptr inbounds i32, i32* %22, i32 1, !dbg !8452
  store i32* %incdec.ptr12, i32** %p, align 8, !dbg !8452
  %23 = load i32, i32* %22, align 4, !dbg !8452
  %call13 = call zeroext i16 @ScaleLongToQuantum(i32 %23), !dbg !8452
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8452
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 1, !dbg !8452
  store i16 %call13, i16* %green, align 2, !dbg !8452
  %25 = load i32*, i32** %p, align 8, !dbg !8453
  %incdec.ptr14 = getelementptr inbounds i32, i32* %25, i32 1, !dbg !8453
  store i32* %incdec.ptr14, i32** %p, align 8, !dbg !8453
  %26 = load i32, i32* %25, align 4, !dbg !8453
  %call15 = call zeroext i16 @ScaleLongToQuantum(i32 %26), !dbg !8453
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8453
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 2, !dbg !8453
  store i16 %call15, i16* %red, align 2, !dbg !8453
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8454
  %incdec.ptr16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !8454
  store %struct._PixelPacket* %incdec.ptr16, %struct._PixelPacket** %q, align 8, !dbg !8454
  br label %for.inc, !dbg !8455

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !8456
  %inc = add nsw i64 %29, 1, !dbg !8456
  store i64 %inc, i64* %x, align 8, !dbg !8456
  br label %for.cond7, !dbg !8457, !llvm.loop !8458

for.end:                                          ; preds = %for.cond7
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8460
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8462
  %call17 = call i32 @SyncAuthenticPixels(%struct._Image* %30, %struct._ExceptionInfo* %31), !dbg !8463
  %cmp18 = icmp eq i32 %call17, 0, !dbg !8464
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !8465

if.then19:                                        ; preds = %for.end
  br label %for.end23, !dbg !8466

if.end20:                                         ; preds = %for.end
  br label %for.inc21, !dbg !8467

for.inc21:                                        ; preds = %if.end20
  %32 = load i64, i64* %y, align 8, !dbg !8468
  %inc22 = add nsw i64 %32, 1, !dbg !8468
  store i64 %inc22, i64* %y, align 8, !dbg !8468
  br label %for.cond, !dbg !8469, !llvm.loop !8470

for.end23:                                        ; preds = %if.then19, %if.then6, %for.cond
  br label %for.end371, !dbg !8472

if.end24:                                         ; preds = %entry
  %33 = load i8*, i8** %map.addr, align 8, !dbg !8473
  %call25 = call i32 @LocaleCompare(i8* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !8475
  %cmp26 = icmp eq i32 %call25, 0, !dbg !8476
  br i1 %cmp26, label %if.then27, label %if.end68, !dbg !8477

if.then27:                                        ; preds = %if.end24
  store i64 0, i64* %y, align 8, !dbg !8478
  br label %for.cond28, !dbg !8481

for.cond28:                                       ; preds = %for.inc65, %if.then27
  %34 = load i64, i64* %y, align 8, !dbg !8482
  %35 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8484
  %height29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %35, i32 0, i32 1, !dbg !8485
  %36 = load i64, i64* %height29, align 8, !dbg !8485
  %cmp30 = icmp slt i64 %34, %36, !dbg !8486
  br i1 %cmp30, label %for.body31, label %for.end67, !dbg !8487

for.body31:                                       ; preds = %for.cond28
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8488
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8490
  %x32 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 2, !dbg !8491
  %39 = load i64, i64* %x32, align 8, !dbg !8491
  %40 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8492
  %y33 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %40, i32 0, i32 3, !dbg !8493
  %41 = load i64, i64* %y33, align 8, !dbg !8493
  %42 = load i64, i64* %y, align 8, !dbg !8494
  %add34 = add nsw i64 %41, %42, !dbg !8495
  %43 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8496
  %width35 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %43, i32 0, i32 0, !dbg !8497
  %44 = load i64, i64* %width35, align 8, !dbg !8497
  %45 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8498
  %call36 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %37, i64 %39, i64 %add34, i64 %44, i64 1, %struct._ExceptionInfo* %45), !dbg !8499
  store %struct._PixelPacket* %call36, %struct._PixelPacket** %q, align 8, !dbg !8500
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8501
  %cmp37 = icmp eq %struct._PixelPacket* %46, null, !dbg !8503
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !8504

if.then38:                                        ; preds = %for.body31
  br label %for.end67, !dbg !8505

if.end39:                                         ; preds = %for.body31
  store i64 0, i64* %x, align 8, !dbg !8506
  br label %for.cond40, !dbg !8508

for.cond40:                                       ; preds = %for.inc57, %if.end39
  %47 = load i64, i64* %x, align 8, !dbg !8509
  %48 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8511
  %width41 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %48, i32 0, i32 0, !dbg !8512
  %49 = load i64, i64* %width41, align 8, !dbg !8512
  %cmp42 = icmp slt i64 %47, %49, !dbg !8513
  br i1 %cmp42, label %for.body43, label %for.end59, !dbg !8514

for.body43:                                       ; preds = %for.cond40
  %50 = load i32*, i32** %p, align 8, !dbg !8515
  %incdec.ptr44 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !8515
  store i32* %incdec.ptr44, i32** %p, align 8, !dbg !8515
  %51 = load i32, i32* %50, align 4, !dbg !8515
  %call45 = call zeroext i16 @ScaleLongToQuantum(i32 %51), !dbg !8515
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8515
  %blue46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 0, !dbg !8515
  store i16 %call45, i16* %blue46, align 2, !dbg !8515
  %53 = load i32*, i32** %p, align 8, !dbg !8517
  %incdec.ptr47 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !8517
  store i32* %incdec.ptr47, i32** %p, align 8, !dbg !8517
  %54 = load i32, i32* %53, align 4, !dbg !8517
  %call48 = call zeroext i16 @ScaleLongToQuantum(i32 %54), !dbg !8517
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8517
  %green49 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 1, !dbg !8517
  store i16 %call48, i16* %green49, align 2, !dbg !8517
  %56 = load i32*, i32** %p, align 8, !dbg !8518
  %incdec.ptr50 = getelementptr inbounds i32, i32* %56, i32 1, !dbg !8518
  store i32* %incdec.ptr50, i32** %p, align 8, !dbg !8518
  %57 = load i32, i32* %56, align 4, !dbg !8518
  %call51 = call zeroext i16 @ScaleLongToQuantum(i32 %57), !dbg !8518
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8518
  %red52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 2, !dbg !8518
  store i16 %call51, i16* %red52, align 2, !dbg !8518
  %59 = load i32*, i32** %p, align 8, !dbg !8519
  %incdec.ptr53 = getelementptr inbounds i32, i32* %59, i32 1, !dbg !8519
  store i32* %incdec.ptr53, i32** %p, align 8, !dbg !8519
  %60 = load i32, i32* %59, align 4, !dbg !8519
  %call54 = call zeroext i16 @ScaleLongToQuantum(i32 %60), !dbg !8519
  %conv = zext i16 %call54 to i32, !dbg !8519
  %sub = sub nsw i32 65535, %conv, !dbg !8519
  %conv55 = trunc i32 %sub to i16, !dbg !8519
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8519
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 3, !dbg !8519
  store i16 %conv55, i16* %opacity, align 2, !dbg !8519
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8520
  %incdec.ptr56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !8520
  store %struct._PixelPacket* %incdec.ptr56, %struct._PixelPacket** %q, align 8, !dbg !8520
  br label %for.inc57, !dbg !8521

for.inc57:                                        ; preds = %for.body43
  %63 = load i64, i64* %x, align 8, !dbg !8522
  %inc58 = add nsw i64 %63, 1, !dbg !8522
  store i64 %inc58, i64* %x, align 8, !dbg !8522
  br label %for.cond40, !dbg !8523, !llvm.loop !8524

for.end59:                                        ; preds = %for.cond40
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8526
  %65 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8528
  %call60 = call i32 @SyncAuthenticPixels(%struct._Image* %64, %struct._ExceptionInfo* %65), !dbg !8529
  %cmp61 = icmp eq i32 %call60, 0, !dbg !8530
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !8531

if.then63:                                        ; preds = %for.end59
  br label %for.end67, !dbg !8532

if.end64:                                         ; preds = %for.end59
  br label %for.inc65, !dbg !8533

for.inc65:                                        ; preds = %if.end64
  %66 = load i64, i64* %y, align 8, !dbg !8534
  %inc66 = add nsw i64 %66, 1, !dbg !8534
  store i64 %inc66, i64* %y, align 8, !dbg !8534
  br label %for.cond28, !dbg !8535, !llvm.loop !8536

for.end67:                                        ; preds = %if.then63, %if.then38, %for.cond28
  br label %for.end371, !dbg !8538

if.end68:                                         ; preds = %if.end24
  %67 = load i8*, i8** %map.addr, align 8, !dbg !8539
  %call69 = call i32 @LocaleCompare(i8* %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !8541
  %cmp70 = icmp eq i32 %call69, 0, !dbg !8542
  br i1 %cmp70, label %if.then72, label %if.end114, !dbg !8543

if.then72:                                        ; preds = %if.end68
  store i64 0, i64* %y, align 8, !dbg !8544
  br label %for.cond73, !dbg !8547

for.cond73:                                       ; preds = %for.inc111, %if.then72
  %68 = load i64, i64* %y, align 8, !dbg !8548
  %69 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8550
  %height74 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %69, i32 0, i32 1, !dbg !8551
  %70 = load i64, i64* %height74, align 8, !dbg !8551
  %cmp75 = icmp slt i64 %68, %70, !dbg !8552
  br i1 %cmp75, label %for.body77, label %for.end113, !dbg !8553

for.body77:                                       ; preds = %for.cond73
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8554
  %72 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8556
  %x78 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %72, i32 0, i32 2, !dbg !8557
  %73 = load i64, i64* %x78, align 8, !dbg !8557
  %74 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8558
  %y79 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %74, i32 0, i32 3, !dbg !8559
  %75 = load i64, i64* %y79, align 8, !dbg !8559
  %76 = load i64, i64* %y, align 8, !dbg !8560
  %add80 = add nsw i64 %75, %76, !dbg !8561
  %77 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8562
  %width81 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %77, i32 0, i32 0, !dbg !8563
  %78 = load i64, i64* %width81, align 8, !dbg !8563
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8564
  %call82 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %71, i64 %73, i64 %add80, i64 %78, i64 1, %struct._ExceptionInfo* %79), !dbg !8565
  store %struct._PixelPacket* %call82, %struct._PixelPacket** %q, align 8, !dbg !8566
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8567
  %cmp83 = icmp eq %struct._PixelPacket* %80, null, !dbg !8569
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !8570

if.then85:                                        ; preds = %for.body77
  br label %for.end113, !dbg !8571

if.end86:                                         ; preds = %for.body77
  store i64 0, i64* %x, align 8, !dbg !8572
  br label %for.cond87, !dbg !8574

for.cond87:                                       ; preds = %for.inc103, %if.end86
  %81 = load i64, i64* %x, align 8, !dbg !8575
  %82 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8577
  %width88 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %82, i32 0, i32 0, !dbg !8578
  %83 = load i64, i64* %width88, align 8, !dbg !8578
  %cmp89 = icmp slt i64 %81, %83, !dbg !8579
  br i1 %cmp89, label %for.body91, label %for.end105, !dbg !8580

for.body91:                                       ; preds = %for.cond87
  %84 = load i32*, i32** %p, align 8, !dbg !8581
  %incdec.ptr92 = getelementptr inbounds i32, i32* %84, i32 1, !dbg !8581
  store i32* %incdec.ptr92, i32** %p, align 8, !dbg !8581
  %85 = load i32, i32* %84, align 4, !dbg !8581
  %call93 = call zeroext i16 @ScaleLongToQuantum(i32 %85), !dbg !8581
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8581
  %blue94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 0, !dbg !8581
  store i16 %call93, i16* %blue94, align 2, !dbg !8581
  %87 = load i32*, i32** %p, align 8, !dbg !8583
  %incdec.ptr95 = getelementptr inbounds i32, i32* %87, i32 1, !dbg !8583
  store i32* %incdec.ptr95, i32** %p, align 8, !dbg !8583
  %88 = load i32, i32* %87, align 4, !dbg !8583
  %call96 = call zeroext i16 @ScaleLongToQuantum(i32 %88), !dbg !8583
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8583
  %green97 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 0, i32 1, !dbg !8583
  store i16 %call96, i16* %green97, align 2, !dbg !8583
  %90 = load i32*, i32** %p, align 8, !dbg !8584
  %incdec.ptr98 = getelementptr inbounds i32, i32* %90, i32 1, !dbg !8584
  store i32* %incdec.ptr98, i32** %p, align 8, !dbg !8584
  %91 = load i32, i32* %90, align 4, !dbg !8584
  %call99 = call zeroext i16 @ScaleLongToQuantum(i32 %91), !dbg !8584
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8584
  %red100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 2, !dbg !8584
  store i16 %call99, i16* %red100, align 2, !dbg !8584
  %93 = load i32*, i32** %p, align 8, !dbg !8585
  %incdec.ptr101 = getelementptr inbounds i32, i32* %93, i32 1, !dbg !8585
  store i32* %incdec.ptr101, i32** %p, align 8, !dbg !8585
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8586
  %incdec.ptr102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 1, !dbg !8586
  store %struct._PixelPacket* %incdec.ptr102, %struct._PixelPacket** %q, align 8, !dbg !8586
  br label %for.inc103, !dbg !8587

for.inc103:                                       ; preds = %for.body91
  %95 = load i64, i64* %x, align 8, !dbg !8588
  %inc104 = add nsw i64 %95, 1, !dbg !8588
  store i64 %inc104, i64* %x, align 8, !dbg !8588
  br label %for.cond87, !dbg !8589, !llvm.loop !8590

for.end105:                                       ; preds = %for.cond87
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8592
  %97 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8594
  %call106 = call i32 @SyncAuthenticPixels(%struct._Image* %96, %struct._ExceptionInfo* %97), !dbg !8595
  %cmp107 = icmp eq i32 %call106, 0, !dbg !8596
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !8597

if.then109:                                       ; preds = %for.end105
  br label %for.end113, !dbg !8598

if.end110:                                        ; preds = %for.end105
  br label %for.inc111, !dbg !8599

for.inc111:                                       ; preds = %if.end110
  %98 = load i64, i64* %y, align 8, !dbg !8600
  %inc112 = add nsw i64 %98, 1, !dbg !8600
  store i64 %inc112, i64* %y, align 8, !dbg !8600
  br label %for.cond73, !dbg !8601, !llvm.loop !8602

for.end113:                                       ; preds = %if.then109, %if.then85, %for.cond73
  br label %for.end371, !dbg !8604

if.end114:                                        ; preds = %if.end68
  %99 = load i8*, i8** %map.addr, align 8, !dbg !8605
  %call115 = call i32 @LocaleCompare(i8* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !8607
  %cmp116 = icmp eq i32 %call115, 0, !dbg !8608
  br i1 %cmp116, label %if.then118, label %if.end157, !dbg !8609

if.then118:                                       ; preds = %if.end114
  store i64 0, i64* %y, align 8, !dbg !8610
  br label %for.cond119, !dbg !8613

for.cond119:                                      ; preds = %for.inc154, %if.then118
  %100 = load i64, i64* %y, align 8, !dbg !8614
  %101 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8616
  %height120 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %101, i32 0, i32 1, !dbg !8617
  %102 = load i64, i64* %height120, align 8, !dbg !8617
  %cmp121 = icmp slt i64 %100, %102, !dbg !8618
  br i1 %cmp121, label %for.body123, label %for.end156, !dbg !8619

for.body123:                                      ; preds = %for.cond119
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8620
  %104 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8622
  %x124 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %104, i32 0, i32 2, !dbg !8623
  %105 = load i64, i64* %x124, align 8, !dbg !8623
  %106 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8624
  %y125 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %106, i32 0, i32 3, !dbg !8625
  %107 = load i64, i64* %y125, align 8, !dbg !8625
  %108 = load i64, i64* %y, align 8, !dbg !8626
  %add126 = add nsw i64 %107, %108, !dbg !8627
  %109 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8628
  %width127 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %109, i32 0, i32 0, !dbg !8629
  %110 = load i64, i64* %width127, align 8, !dbg !8629
  %111 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8630
  %call128 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %103, i64 %105, i64 %add126, i64 %110, i64 1, %struct._ExceptionInfo* %111), !dbg !8631
  store %struct._PixelPacket* %call128, %struct._PixelPacket** %q, align 8, !dbg !8632
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8633
  %cmp129 = icmp eq %struct._PixelPacket* %112, null, !dbg !8635
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !8636

if.then131:                                       ; preds = %for.body123
  br label %for.end156, !dbg !8637

if.end132:                                        ; preds = %for.body123
  store i64 0, i64* %x, align 8, !dbg !8638
  br label %for.cond133, !dbg !8640

for.cond133:                                      ; preds = %for.inc146, %if.end132
  %113 = load i64, i64* %x, align 8, !dbg !8641
  %114 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8643
  %width134 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %114, i32 0, i32 0, !dbg !8644
  %115 = load i64, i64* %width134, align 8, !dbg !8644
  %cmp135 = icmp slt i64 %113, %115, !dbg !8645
  br i1 %cmp135, label %for.body137, label %for.end148, !dbg !8646

for.body137:                                      ; preds = %for.cond133
  %116 = load i32*, i32** %p, align 8, !dbg !8647
  %incdec.ptr138 = getelementptr inbounds i32, i32* %116, i32 1, !dbg !8647
  store i32* %incdec.ptr138, i32** %p, align 8, !dbg !8647
  %117 = load i32, i32* %116, align 4, !dbg !8647
  %call139 = call zeroext i16 @ScaleLongToQuantum(i32 %117), !dbg !8647
  %118 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8647
  %red140 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %118, i32 0, i32 2, !dbg !8647
  store i16 %call139, i16* %red140, align 2, !dbg !8647
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8649
  %red141 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 2, !dbg !8649
  %120 = load i16, i16* %red141, align 2, !dbg !8649
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8649
  %green142 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i32 0, i32 1, !dbg !8649
  store i16 %120, i16* %green142, align 2, !dbg !8649
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8650
  %red143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 2, !dbg !8650
  %123 = load i16, i16* %red143, align 2, !dbg !8650
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8650
  %blue144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 0, i32 0, !dbg !8650
  store i16 %123, i16* %blue144, align 2, !dbg !8650
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8651
  %incdec.ptr145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 1, !dbg !8651
  store %struct._PixelPacket* %incdec.ptr145, %struct._PixelPacket** %q, align 8, !dbg !8651
  br label %for.inc146, !dbg !8652

for.inc146:                                       ; preds = %for.body137
  %126 = load i64, i64* %x, align 8, !dbg !8653
  %inc147 = add nsw i64 %126, 1, !dbg !8653
  store i64 %inc147, i64* %x, align 8, !dbg !8653
  br label %for.cond133, !dbg !8654, !llvm.loop !8655

for.end148:                                       ; preds = %for.cond133
  %127 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8657
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8659
  %call149 = call i32 @SyncAuthenticPixels(%struct._Image* %127, %struct._ExceptionInfo* %128), !dbg !8660
  %cmp150 = icmp eq i32 %call149, 0, !dbg !8661
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !8662

if.then152:                                       ; preds = %for.end148
  br label %for.end156, !dbg !8663

if.end153:                                        ; preds = %for.end148
  br label %for.inc154, !dbg !8664

for.inc154:                                       ; preds = %if.end153
  %129 = load i64, i64* %y, align 8, !dbg !8665
  %inc155 = add nsw i64 %129, 1, !dbg !8665
  store i64 %inc155, i64* %y, align 8, !dbg !8665
  br label %for.cond119, !dbg !8666, !llvm.loop !8667

for.end156:                                       ; preds = %if.then152, %if.then131, %for.cond119
  br label %for.end371, !dbg !8669

if.end157:                                        ; preds = %if.end114
  %130 = load i8*, i8** %map.addr, align 8, !dbg !8670
  %call158 = call i32 @LocaleCompare(i8* %130, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !8672
  %cmp159 = icmp eq i32 %call158, 0, !dbg !8673
  br i1 %cmp159, label %if.then161, label %if.end202, !dbg !8674

if.then161:                                       ; preds = %if.end157
  store i64 0, i64* %y, align 8, !dbg !8675
  br label %for.cond162, !dbg !8678

for.cond162:                                      ; preds = %for.inc199, %if.then161
  %131 = load i64, i64* %y, align 8, !dbg !8679
  %132 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8681
  %height163 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %132, i32 0, i32 1, !dbg !8682
  %133 = load i64, i64* %height163, align 8, !dbg !8682
  %cmp164 = icmp slt i64 %131, %133, !dbg !8683
  br i1 %cmp164, label %for.body166, label %for.end201, !dbg !8684

for.body166:                                      ; preds = %for.cond162
  %134 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8685
  %135 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8687
  %x167 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %135, i32 0, i32 2, !dbg !8688
  %136 = load i64, i64* %x167, align 8, !dbg !8688
  %137 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8689
  %y168 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %137, i32 0, i32 3, !dbg !8690
  %138 = load i64, i64* %y168, align 8, !dbg !8690
  %139 = load i64, i64* %y, align 8, !dbg !8691
  %add169 = add nsw i64 %138, %139, !dbg !8692
  %140 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8693
  %width170 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %140, i32 0, i32 0, !dbg !8694
  %141 = load i64, i64* %width170, align 8, !dbg !8694
  %142 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8695
  %call171 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %134, i64 %136, i64 %add169, i64 %141, i64 1, %struct._ExceptionInfo* %142), !dbg !8696
  store %struct._PixelPacket* %call171, %struct._PixelPacket** %q, align 8, !dbg !8697
  %143 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8698
  %cmp172 = icmp eq %struct._PixelPacket* %143, null, !dbg !8700
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !8701

if.then174:                                       ; preds = %for.body166
  br label %for.end201, !dbg !8702

if.end175:                                        ; preds = %for.body166
  store i64 0, i64* %x, align 8, !dbg !8703
  br label %for.cond176, !dbg !8705

for.cond176:                                      ; preds = %for.inc191, %if.end175
  %144 = load i64, i64* %x, align 8, !dbg !8706
  %145 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8708
  %width177 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %145, i32 0, i32 0, !dbg !8709
  %146 = load i64, i64* %width177, align 8, !dbg !8709
  %cmp178 = icmp slt i64 %144, %146, !dbg !8710
  br i1 %cmp178, label %for.body180, label %for.end193, !dbg !8711

for.body180:                                      ; preds = %for.cond176
  %147 = load i32*, i32** %p, align 8, !dbg !8712
  %incdec.ptr181 = getelementptr inbounds i32, i32* %147, i32 1, !dbg !8712
  store i32* %incdec.ptr181, i32** %p, align 8, !dbg !8712
  %148 = load i32, i32* %147, align 4, !dbg !8712
  %call182 = call zeroext i16 @ScaleLongToQuantum(i32 %148), !dbg !8712
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8712
  %red183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 0, i32 2, !dbg !8712
  store i16 %call182, i16* %red183, align 2, !dbg !8712
  %150 = load i32*, i32** %p, align 8, !dbg !8714
  %incdec.ptr184 = getelementptr inbounds i32, i32* %150, i32 1, !dbg !8714
  store i32* %incdec.ptr184, i32** %p, align 8, !dbg !8714
  %151 = load i32, i32* %150, align 4, !dbg !8714
  %call185 = call zeroext i16 @ScaleLongToQuantum(i32 %151), !dbg !8714
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8714
  %green186 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 0, i32 1, !dbg !8714
  store i16 %call185, i16* %green186, align 2, !dbg !8714
  %153 = load i32*, i32** %p, align 8, !dbg !8715
  %incdec.ptr187 = getelementptr inbounds i32, i32* %153, i32 1, !dbg !8715
  store i32* %incdec.ptr187, i32** %p, align 8, !dbg !8715
  %154 = load i32, i32* %153, align 4, !dbg !8715
  %call188 = call zeroext i16 @ScaleLongToQuantum(i32 %154), !dbg !8715
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8715
  %blue189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %155, i32 0, i32 0, !dbg !8715
  store i16 %call188, i16* %blue189, align 2, !dbg !8715
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8716
  %incdec.ptr190 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 1, !dbg !8716
  store %struct._PixelPacket* %incdec.ptr190, %struct._PixelPacket** %q, align 8, !dbg !8716
  br label %for.inc191, !dbg !8717

for.inc191:                                       ; preds = %for.body180
  %157 = load i64, i64* %x, align 8, !dbg !8718
  %inc192 = add nsw i64 %157, 1, !dbg !8718
  store i64 %inc192, i64* %x, align 8, !dbg !8718
  br label %for.cond176, !dbg !8719, !llvm.loop !8720

for.end193:                                       ; preds = %for.cond176
  %158 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8722
  %159 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8724
  %call194 = call i32 @SyncAuthenticPixels(%struct._Image* %158, %struct._ExceptionInfo* %159), !dbg !8725
  %cmp195 = icmp eq i32 %call194, 0, !dbg !8726
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !8727

if.then197:                                       ; preds = %for.end193
  br label %for.end201, !dbg !8728

if.end198:                                        ; preds = %for.end193
  br label %for.inc199, !dbg !8729

for.inc199:                                       ; preds = %if.end198
  %160 = load i64, i64* %y, align 8, !dbg !8730
  %inc200 = add nsw i64 %160, 1, !dbg !8730
  store i64 %inc200, i64* %y, align 8, !dbg !8730
  br label %for.cond162, !dbg !8731, !llvm.loop !8732

for.end201:                                       ; preds = %if.then197, %if.then174, %for.cond162
  br label %for.end371, !dbg !8734

if.end202:                                        ; preds = %if.end157
  %161 = load i8*, i8** %map.addr, align 8, !dbg !8735
  %call203 = call i32 @LocaleCompare(i8* %161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !8737
  %cmp204 = icmp eq i32 %call203, 0, !dbg !8738
  br i1 %cmp204, label %if.then206, label %if.end253, !dbg !8739

if.then206:                                       ; preds = %if.end202
  store i64 0, i64* %y, align 8, !dbg !8740
  br label %for.cond207, !dbg !8743

for.cond207:                                      ; preds = %for.inc250, %if.then206
  %162 = load i64, i64* %y, align 8, !dbg !8744
  %163 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8746
  %height208 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %163, i32 0, i32 1, !dbg !8747
  %164 = load i64, i64* %height208, align 8, !dbg !8747
  %cmp209 = icmp slt i64 %162, %164, !dbg !8748
  br i1 %cmp209, label %for.body211, label %for.end252, !dbg !8749

for.body211:                                      ; preds = %for.cond207
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8750
  %166 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8752
  %x212 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %166, i32 0, i32 2, !dbg !8753
  %167 = load i64, i64* %x212, align 8, !dbg !8753
  %168 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8754
  %y213 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %168, i32 0, i32 3, !dbg !8755
  %169 = load i64, i64* %y213, align 8, !dbg !8755
  %170 = load i64, i64* %y, align 8, !dbg !8756
  %add214 = add nsw i64 %169, %170, !dbg !8757
  %171 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8758
  %width215 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %171, i32 0, i32 0, !dbg !8759
  %172 = load i64, i64* %width215, align 8, !dbg !8759
  %173 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8760
  %call216 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %165, i64 %167, i64 %add214, i64 %172, i64 1, %struct._ExceptionInfo* %173), !dbg !8761
  store %struct._PixelPacket* %call216, %struct._PixelPacket** %q, align 8, !dbg !8762
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8763
  %cmp217 = icmp eq %struct._PixelPacket* %174, null, !dbg !8765
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !8766

if.then219:                                       ; preds = %for.body211
  br label %for.end252, !dbg !8767

if.end220:                                        ; preds = %for.body211
  store i64 0, i64* %x, align 8, !dbg !8768
  br label %for.cond221, !dbg !8770

for.cond221:                                      ; preds = %for.inc242, %if.end220
  %175 = load i64, i64* %x, align 8, !dbg !8771
  %176 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8773
  %width222 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %176, i32 0, i32 0, !dbg !8774
  %177 = load i64, i64* %width222, align 8, !dbg !8774
  %cmp223 = icmp slt i64 %175, %177, !dbg !8775
  br i1 %cmp223, label %for.body225, label %for.end244, !dbg !8776

for.body225:                                      ; preds = %for.cond221
  %178 = load i32*, i32** %p, align 8, !dbg !8777
  %incdec.ptr226 = getelementptr inbounds i32, i32* %178, i32 1, !dbg !8777
  store i32* %incdec.ptr226, i32** %p, align 8, !dbg !8777
  %179 = load i32, i32* %178, align 4, !dbg !8777
  %call227 = call zeroext i16 @ScaleLongToQuantum(i32 %179), !dbg !8777
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8777
  %red228 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 2, !dbg !8777
  store i16 %call227, i16* %red228, align 2, !dbg !8777
  %181 = load i32*, i32** %p, align 8, !dbg !8779
  %incdec.ptr229 = getelementptr inbounds i32, i32* %181, i32 1, !dbg !8779
  store i32* %incdec.ptr229, i32** %p, align 8, !dbg !8779
  %182 = load i32, i32* %181, align 4, !dbg !8779
  %call230 = call zeroext i16 @ScaleLongToQuantum(i32 %182), !dbg !8779
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8779
  %green231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 0, i32 1, !dbg !8779
  store i16 %call230, i16* %green231, align 2, !dbg !8779
  %184 = load i32*, i32** %p, align 8, !dbg !8780
  %incdec.ptr232 = getelementptr inbounds i32, i32* %184, i32 1, !dbg !8780
  store i32* %incdec.ptr232, i32** %p, align 8, !dbg !8780
  %185 = load i32, i32* %184, align 4, !dbg !8780
  %call233 = call zeroext i16 @ScaleLongToQuantum(i32 %185), !dbg !8780
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8780
  %blue234 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 0, !dbg !8780
  store i16 %call233, i16* %blue234, align 2, !dbg !8780
  %187 = load i32*, i32** %p, align 8, !dbg !8781
  %incdec.ptr235 = getelementptr inbounds i32, i32* %187, i32 1, !dbg !8781
  store i32* %incdec.ptr235, i32** %p, align 8, !dbg !8781
  %188 = load i32, i32* %187, align 4, !dbg !8781
  %call236 = call zeroext i16 @ScaleLongToQuantum(i32 %188), !dbg !8781
  %conv237 = zext i16 %call236 to i32, !dbg !8781
  %sub238 = sub nsw i32 65535, %conv237, !dbg !8781
  %conv239 = trunc i32 %sub238 to i16, !dbg !8781
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8781
  %opacity240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %189, i32 0, i32 3, !dbg !8781
  store i16 %conv239, i16* %opacity240, align 2, !dbg !8781
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8782
  %incdec.ptr241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i32 1, !dbg !8782
  store %struct._PixelPacket* %incdec.ptr241, %struct._PixelPacket** %q, align 8, !dbg !8782
  br label %for.inc242, !dbg !8783

for.inc242:                                       ; preds = %for.body225
  %191 = load i64, i64* %x, align 8, !dbg !8784
  %inc243 = add nsw i64 %191, 1, !dbg !8784
  store i64 %inc243, i64* %x, align 8, !dbg !8784
  br label %for.cond221, !dbg !8785, !llvm.loop !8786

for.end244:                                       ; preds = %for.cond221
  %192 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8788
  %193 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8790
  %call245 = call i32 @SyncAuthenticPixels(%struct._Image* %192, %struct._ExceptionInfo* %193), !dbg !8791
  %cmp246 = icmp eq i32 %call245, 0, !dbg !8792
  br i1 %cmp246, label %if.then248, label %if.end249, !dbg !8793

if.then248:                                       ; preds = %for.end244
  br label %for.end252, !dbg !8794

if.end249:                                        ; preds = %for.end244
  br label %for.inc250, !dbg !8795

for.inc250:                                       ; preds = %if.end249
  %194 = load i64, i64* %y, align 8, !dbg !8796
  %inc251 = add nsw i64 %194, 1, !dbg !8796
  store i64 %inc251, i64* %y, align 8, !dbg !8796
  br label %for.cond207, !dbg !8797, !llvm.loop !8798

for.end252:                                       ; preds = %if.then248, %if.then219, %for.cond207
  br label %for.end371, !dbg !8800

if.end253:                                        ; preds = %if.end202
  %195 = load i8*, i8** %map.addr, align 8, !dbg !8801
  %call254 = call i32 @LocaleCompare(i8* %195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !8803
  %cmp255 = icmp eq i32 %call254, 0, !dbg !8804
  br i1 %cmp255, label %if.then257, label %if.end299, !dbg !8805

if.then257:                                       ; preds = %if.end253
  store i64 0, i64* %y, align 8, !dbg !8806
  br label %for.cond258, !dbg !8809

for.cond258:                                      ; preds = %for.inc296, %if.then257
  %196 = load i64, i64* %y, align 8, !dbg !8810
  %197 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8812
  %height259 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %197, i32 0, i32 1, !dbg !8813
  %198 = load i64, i64* %height259, align 8, !dbg !8813
  %cmp260 = icmp slt i64 %196, %198, !dbg !8814
  br i1 %cmp260, label %for.body262, label %for.end298, !dbg !8815

for.body262:                                      ; preds = %for.cond258
  %199 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8816
  %200 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8818
  %x263 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %200, i32 0, i32 2, !dbg !8819
  %201 = load i64, i64* %x263, align 8, !dbg !8819
  %202 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8820
  %y264 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %202, i32 0, i32 3, !dbg !8821
  %203 = load i64, i64* %y264, align 8, !dbg !8821
  %204 = load i64, i64* %y, align 8, !dbg !8822
  %add265 = add nsw i64 %203, %204, !dbg !8823
  %205 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8824
  %width266 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %205, i32 0, i32 0, !dbg !8825
  %206 = load i64, i64* %width266, align 8, !dbg !8825
  %207 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8826
  %call267 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %199, i64 %201, i64 %add265, i64 %206, i64 1, %struct._ExceptionInfo* %207), !dbg !8827
  store %struct._PixelPacket* %call267, %struct._PixelPacket** %q, align 8, !dbg !8828
  %208 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8829
  %cmp268 = icmp eq %struct._PixelPacket* %208, null, !dbg !8831
  br i1 %cmp268, label %if.then270, label %if.end271, !dbg !8832

if.then270:                                       ; preds = %for.body262
  br label %for.end298, !dbg !8833

if.end271:                                        ; preds = %for.body262
  store i64 0, i64* %x, align 8, !dbg !8834
  br label %for.cond272, !dbg !8836

for.cond272:                                      ; preds = %for.inc288, %if.end271
  %209 = load i64, i64* %x, align 8, !dbg !8837
  %210 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8839
  %width273 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %210, i32 0, i32 0, !dbg !8840
  %211 = load i64, i64* %width273, align 8, !dbg !8840
  %cmp274 = icmp slt i64 %209, %211, !dbg !8841
  br i1 %cmp274, label %for.body276, label %for.end290, !dbg !8842

for.body276:                                      ; preds = %for.cond272
  %212 = load i32*, i32** %p, align 8, !dbg !8843
  %incdec.ptr277 = getelementptr inbounds i32, i32* %212, i32 1, !dbg !8843
  store i32* %incdec.ptr277, i32** %p, align 8, !dbg !8843
  %213 = load i32, i32* %212, align 4, !dbg !8843
  %call278 = call zeroext i16 @ScaleLongToQuantum(i32 %213), !dbg !8843
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8843
  %red279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 0, i32 2, !dbg !8843
  store i16 %call278, i16* %red279, align 2, !dbg !8843
  %215 = load i32*, i32** %p, align 8, !dbg !8845
  %incdec.ptr280 = getelementptr inbounds i32, i32* %215, i32 1, !dbg !8845
  store i32* %incdec.ptr280, i32** %p, align 8, !dbg !8845
  %216 = load i32, i32* %215, align 4, !dbg !8845
  %call281 = call zeroext i16 @ScaleLongToQuantum(i32 %216), !dbg !8845
  %217 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8845
  %green282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %217, i32 0, i32 1, !dbg !8845
  store i16 %call281, i16* %green282, align 2, !dbg !8845
  %218 = load i32*, i32** %p, align 8, !dbg !8846
  %incdec.ptr283 = getelementptr inbounds i32, i32* %218, i32 1, !dbg !8846
  store i32* %incdec.ptr283, i32** %p, align 8, !dbg !8846
  %219 = load i32, i32* %218, align 4, !dbg !8846
  %call284 = call zeroext i16 @ScaleLongToQuantum(i32 %219), !dbg !8846
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8846
  %blue285 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 0, !dbg !8846
  store i16 %call284, i16* %blue285, align 2, !dbg !8846
  %221 = load i32*, i32** %p, align 8, !dbg !8847
  %incdec.ptr286 = getelementptr inbounds i32, i32* %221, i32 1, !dbg !8847
  store i32* %incdec.ptr286, i32** %p, align 8, !dbg !8847
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8848
  %incdec.ptr287 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 1, !dbg !8848
  store %struct._PixelPacket* %incdec.ptr287, %struct._PixelPacket** %q, align 8, !dbg !8848
  br label %for.inc288, !dbg !8849

for.inc288:                                       ; preds = %for.body276
  %223 = load i64, i64* %x, align 8, !dbg !8850
  %inc289 = add nsw i64 %223, 1, !dbg !8850
  store i64 %inc289, i64* %x, align 8, !dbg !8850
  br label %for.cond272, !dbg !8851, !llvm.loop !8852

for.end290:                                       ; preds = %for.cond272
  %224 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8854
  %225 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8856
  %call291 = call i32 @SyncAuthenticPixels(%struct._Image* %224, %struct._ExceptionInfo* %225), !dbg !8857
  %cmp292 = icmp eq i32 %call291, 0, !dbg !8858
  br i1 %cmp292, label %if.then294, label %if.end295, !dbg !8859

if.then294:                                       ; preds = %for.end290
  br label %for.end298, !dbg !8860

if.end295:                                        ; preds = %for.end290
  br label %for.inc296, !dbg !8861

for.inc296:                                       ; preds = %if.end295
  %226 = load i64, i64* %y, align 8, !dbg !8862
  %inc297 = add nsw i64 %226, 1, !dbg !8862
  store i64 %inc297, i64* %y, align 8, !dbg !8862
  br label %for.cond258, !dbg !8863, !llvm.loop !8864

for.end298:                                       ; preds = %if.then294, %if.then270, %for.cond258
  br label %for.end371, !dbg !8866

if.end299:                                        ; preds = %if.end253
  %227 = load i8*, i8** %map.addr, align 8, !dbg !8867
  %call300 = call i64 @strlen(i8* %227) #13, !dbg !8868
  store i64 %call300, i64* %length, align 8, !dbg !8869
  store i64 0, i64* %y, align 8, !dbg !8870
  br label %for.cond301, !dbg !8872

for.cond301:                                      ; preds = %for.inc369, %if.end299
  %228 = load i64, i64* %y, align 8, !dbg !8873
  %229 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8875
  %height302 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %229, i32 0, i32 1, !dbg !8876
  %230 = load i64, i64* %height302, align 8, !dbg !8876
  %cmp303 = icmp slt i64 %228, %230, !dbg !8877
  br i1 %cmp303, label %for.body305, label %for.end371, !dbg !8878

for.body305:                                      ; preds = %for.cond301
  %231 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8879
  %232 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8881
  %x306 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %232, i32 0, i32 2, !dbg !8882
  %233 = load i64, i64* %x306, align 8, !dbg !8882
  %234 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8883
  %y307 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %234, i32 0, i32 3, !dbg !8884
  %235 = load i64, i64* %y307, align 8, !dbg !8884
  %236 = load i64, i64* %y, align 8, !dbg !8885
  %add308 = add nsw i64 %235, %236, !dbg !8886
  %237 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8887
  %width309 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %237, i32 0, i32 0, !dbg !8888
  %238 = load i64, i64* %width309, align 8, !dbg !8888
  %239 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8889
  %call310 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %231, i64 %233, i64 %add308, i64 %238, i64 1, %struct._ExceptionInfo* %239), !dbg !8890
  store %struct._PixelPacket* %call310, %struct._PixelPacket** %q, align 8, !dbg !8891
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8892
  %cmp311 = icmp eq %struct._PixelPacket* %240, null, !dbg !8894
  br i1 %cmp311, label %if.then313, label %if.end314, !dbg !8895

if.then313:                                       ; preds = %for.body305
  br label %for.end371, !dbg !8896

if.end314:                                        ; preds = %for.body305
  %241 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8897
  %call315 = call i16* @GetAuthenticIndexQueue(%struct._Image* %241), !dbg !8898
  store i16* %call315, i16** %indexes, align 8, !dbg !8899
  store i64 0, i64* %x, align 8, !dbg !8900
  br label %for.cond316, !dbg !8902

for.cond316:                                      ; preds = %for.inc361, %if.end314
  %242 = load i64, i64* %x, align 8, !dbg !8903
  %243 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !8905
  %width317 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %243, i32 0, i32 0, !dbg !8906
  %244 = load i64, i64* %width317, align 8, !dbg !8906
  %cmp318 = icmp slt i64 %242, %244, !dbg !8907
  br i1 %cmp318, label %for.body320, label %for.end363, !dbg !8908

for.body320:                                      ; preds = %for.cond316
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8909, metadata !DIExpression()), !dbg !8911
  store i64 0, i64* %i, align 8, !dbg !8912
  br label %for.cond321, !dbg !8914

for.cond321:                                      ; preds = %for.inc357, %for.body320
  %245 = load i64, i64* %i, align 8, !dbg !8915
  %246 = load i64, i64* %length, align 8, !dbg !8917
  %cmp322 = icmp slt i64 %245, %246, !dbg !8918
  br i1 %cmp322, label %for.body324, label %for.end359, !dbg !8919

for.body324:                                      ; preds = %for.cond321
  %247 = load i32*, i32** %quantum_map.addr, align 8, !dbg !8920
  %248 = load i64, i64* %i, align 8, !dbg !8922
  %arrayidx = getelementptr inbounds i32, i32* %247, i64 %248, !dbg !8920
  %249 = load i32, i32* %arrayidx, align 4, !dbg !8920
  switch i32 %249, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb327
    i32 12, label %sw.bb327
    i32 3, label %sw.bb330
    i32 19, label %sw.bb330
    i32 1, label %sw.bb333
    i32 13, label %sw.bb339
    i32 2, label %sw.bb342
    i32 11, label %sw.bb349
  ], !dbg !8923

sw.bb:                                            ; preds = %for.body324, %for.body324
  %250 = load i32*, i32** %p, align 8, !dbg !8924
  %251 = load i32, i32* %250, align 4, !dbg !8924
  %call325 = call zeroext i16 @ScaleLongToQuantum(i32 %251), !dbg !8924
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8924
  %red326 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 2, !dbg !8924
  store i16 %call325, i16* %red326, align 2, !dbg !8924
  br label %sw.epilog, !dbg !8927

sw.bb327:                                         ; preds = %for.body324, %for.body324
  %253 = load i32*, i32** %p, align 8, !dbg !8928
  %254 = load i32, i32* %253, align 4, !dbg !8928
  %call328 = call zeroext i16 @ScaleLongToQuantum(i32 %254), !dbg !8928
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8928
  %green329 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %255, i32 0, i32 1, !dbg !8928
  store i16 %call328, i16* %green329, align 2, !dbg !8928
  br label %sw.epilog, !dbg !8930

sw.bb330:                                         ; preds = %for.body324, %for.body324
  %256 = load i32*, i32** %p, align 8, !dbg !8931
  %257 = load i32, i32* %256, align 4, !dbg !8931
  %call331 = call zeroext i16 @ScaleLongToQuantum(i32 %257), !dbg !8931
  %258 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8931
  %blue332 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %258, i32 0, i32 0, !dbg !8931
  store i16 %call331, i16* %blue332, align 2, !dbg !8931
  br label %sw.epilog, !dbg !8933

sw.bb333:                                         ; preds = %for.body324
  %259 = load i32*, i32** %p, align 8, !dbg !8934
  %260 = load i32, i32* %259, align 4, !dbg !8934
  %call334 = call zeroext i16 @ScaleLongToQuantum(i32 %260), !dbg !8934
  %conv335 = zext i16 %call334 to i32, !dbg !8934
  %sub336 = sub nsw i32 65535, %conv335, !dbg !8934
  %conv337 = trunc i32 %sub336 to i16, !dbg !8934
  %261 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8934
  %opacity338 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %261, i32 0, i32 3, !dbg !8934
  store i16 %conv337, i16* %opacity338, align 2, !dbg !8934
  br label %sw.epilog, !dbg !8936

sw.bb339:                                         ; preds = %for.body324
  %262 = load i32*, i32** %p, align 8, !dbg !8937
  %263 = load i32, i32* %262, align 4, !dbg !8937
  %call340 = call zeroext i16 @ScaleLongToQuantum(i32 %263), !dbg !8937
  %264 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8937
  %opacity341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %264, i32 0, i32 3, !dbg !8937
  store i16 %call340, i16* %opacity341, align 2, !dbg !8937
  br label %sw.epilog, !dbg !8939

sw.bb342:                                         ; preds = %for.body324
  %265 = load i16*, i16** %indexes, align 8, !dbg !8940
  %266 = load i64, i64* %x, align 8, !dbg !8940
  %add.ptr = getelementptr inbounds i16, i16* %265, i64 %266, !dbg !8940
  %cmp343 = icmp ne i16* %add.ptr, null, !dbg !8940
  br i1 %cmp343, label %if.then345, label %if.end348, !dbg !8944

if.then345:                                       ; preds = %sw.bb342
  %267 = load i32*, i32** %p, align 8, !dbg !8940
  %268 = load i32, i32* %267, align 4, !dbg !8940
  %call346 = call zeroext i16 @ScaleLongToQuantum(i32 %268), !dbg !8940
  %269 = load i16*, i16** %indexes, align 8, !dbg !8940
  %270 = load i64, i64* %x, align 8, !dbg !8940
  %add.ptr347 = getelementptr inbounds i16, i16* %269, i64 %270, !dbg !8940
  store i16 %call346, i16* %add.ptr347, align 2, !dbg !8940
  br label %if.end348, !dbg !8940

if.end348:                                        ; preds = %if.then345, %sw.bb342
  br label %sw.epilog, !dbg !8945

sw.bb349:                                         ; preds = %for.body324
  %271 = load i32*, i32** %p, align 8, !dbg !8946
  %272 = load i32, i32* %271, align 4, !dbg !8946
  %call350 = call zeroext i16 @ScaleLongToQuantum(i32 %272), !dbg !8946
  %273 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8946
  %red351 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %273, i32 0, i32 2, !dbg !8946
  store i16 %call350, i16* %red351, align 2, !dbg !8946
  %274 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8948
  %red352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %274, i32 0, i32 2, !dbg !8948
  %275 = load i16, i16* %red352, align 2, !dbg !8948
  %276 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8948
  %green353 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %276, i32 0, i32 1, !dbg !8948
  store i16 %275, i16* %green353, align 2, !dbg !8948
  %277 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8949
  %red354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %277, i32 0, i32 2, !dbg !8949
  %278 = load i16, i16* %red354, align 2, !dbg !8949
  %279 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8949
  %blue355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %279, i32 0, i32 0, !dbg !8949
  store i16 %278, i16* %blue355, align 2, !dbg !8949
  br label %sw.epilog, !dbg !8950

sw.default:                                       ; preds = %for.body324
  br label %sw.epilog, !dbg !8951

sw.epilog:                                        ; preds = %sw.default, %sw.bb349, %if.end348, %sw.bb339, %sw.bb333, %sw.bb330, %sw.bb327, %sw.bb
  %280 = load i32*, i32** %p, align 8, !dbg !8952
  %incdec.ptr356 = getelementptr inbounds i32, i32* %280, i32 1, !dbg !8952
  store i32* %incdec.ptr356, i32** %p, align 8, !dbg !8952
  br label %for.inc357, !dbg !8953

for.inc357:                                       ; preds = %sw.epilog
  %281 = load i64, i64* %i, align 8, !dbg !8954
  %inc358 = add nsw i64 %281, 1, !dbg !8954
  store i64 %inc358, i64* %i, align 8, !dbg !8954
  br label %for.cond321, !dbg !8955, !llvm.loop !8956

for.end359:                                       ; preds = %for.cond321
  %282 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8958
  %incdec.ptr360 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %282, i32 1, !dbg !8958
  store %struct._PixelPacket* %incdec.ptr360, %struct._PixelPacket** %q, align 8, !dbg !8958
  br label %for.inc361, !dbg !8959

for.inc361:                                       ; preds = %for.end359
  %283 = load i64, i64* %x, align 8, !dbg !8960
  %inc362 = add nsw i64 %283, 1, !dbg !8960
  store i64 %inc362, i64* %x, align 8, !dbg !8960
  br label %for.cond316, !dbg !8961, !llvm.loop !8962

for.end363:                                       ; preds = %for.cond316
  %284 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8964
  %285 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8966
  %call364 = call i32 @SyncAuthenticPixels(%struct._Image* %284, %struct._ExceptionInfo* %285), !dbg !8967
  %cmp365 = icmp eq i32 %call364, 0, !dbg !8968
  br i1 %cmp365, label %if.then367, label %if.end368, !dbg !8969

if.then367:                                       ; preds = %for.end363
  br label %for.end371, !dbg !8970

if.end368:                                        ; preds = %for.end363
  br label %for.inc369, !dbg !8971

for.inc369:                                       ; preds = %if.end368
  %286 = load i64, i64* %y, align 8, !dbg !8972
  %inc370 = add nsw i64 %286, 1, !dbg !8972
  store i64 %inc370, i64* %y, align 8, !dbg !8972
  br label %for.cond301, !dbg !8973, !llvm.loop !8974

for.end371:                                       ; preds = %for.end23, %for.end67, %for.end113, %for.end156, %for.end201, %for.end252, %for.end298, %if.then367, %if.then313, %for.cond301
  ret void, !dbg !8976
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportLongPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !8977 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %p = alloca i32*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8978, metadata !DIExpression()), !dbg !8979
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !8980, metadata !DIExpression()), !dbg !8981
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !8982, metadata !DIExpression()), !dbg !8983
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !8984, metadata !DIExpression()), !dbg !8985
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !8986, metadata !DIExpression()), !dbg !8987
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8988, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.declare(metadata i32** %p, metadata !8990, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !8992, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !8994, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8996, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.declare(metadata i64* %length, metadata !8998, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9000, metadata !DIExpression()), !dbg !9001
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !9002
  %1 = bitcast i8* %0 to i32*, !dbg !9003
  store i32* %1, i32** %p, align 8, !dbg !9004
  %2 = load i8*, i8** %map.addr, align 8, !dbg !9005
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !9007
  %cmp = icmp eq i32 %call, 0, !dbg !9008
  br i1 %cmp, label %if.then, label %if.end24, !dbg !9009

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !9010
  br label %for.cond, !dbg !9013

for.cond:                                         ; preds = %for.inc21, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !9014
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9016
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !9017
  %5 = load i64, i64* %height, align 8, !dbg !9017
  %cmp1 = icmp slt i64 %3, %5, !dbg !9018
  br i1 %cmp1, label %for.body, label %for.end23, !dbg !9019

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9020
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9022
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !9023
  %8 = load i64, i64* %x2, align 8, !dbg !9023
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9024
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !9025
  %10 = load i64, i64* %y3, align 8, !dbg !9025
  %11 = load i64, i64* %y, align 8, !dbg !9026
  %add = add nsw i64 %10, %11, !dbg !9027
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9028
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !9029
  %13 = load i64, i64* %width, align 8, !dbg !9029
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9030
  %call4 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !9031
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %q, align 8, !dbg !9032
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9033
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !9035
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !9036

if.then6:                                         ; preds = %for.body
  br label %for.end23, !dbg !9037

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !9038
  br label %for.cond7, !dbg !9040

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !9041
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9043
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !9044
  %18 = load i64, i64* %width8, align 8, !dbg !9044
  %cmp9 = icmp slt i64 %16, %18, !dbg !9045
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !9046

for.body10:                                       ; preds = %for.cond7
  %19 = load i32*, i32** %p, align 8, !dbg !9047
  %incdec.ptr = getelementptr inbounds i32, i32* %19, i32 1, !dbg !9047
  store i32* %incdec.ptr, i32** %p, align 8, !dbg !9047
  %20 = load i32, i32* %19, align 4, !dbg !9047
  %call11 = call zeroext i16 @ScaleLongToQuantum(i32 %20), !dbg !9047
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9047
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i32 0, i32 0, !dbg !9047
  store i16 %call11, i16* %blue, align 2, !dbg !9047
  %22 = load i32*, i32** %p, align 8, !dbg !9049
  %incdec.ptr12 = getelementptr inbounds i32, i32* %22, i32 1, !dbg !9049
  store i32* %incdec.ptr12, i32** %p, align 8, !dbg !9049
  %23 = load i32, i32* %22, align 4, !dbg !9049
  %call13 = call zeroext i16 @ScaleLongToQuantum(i32 %23), !dbg !9049
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9049
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 1, !dbg !9049
  store i16 %call13, i16* %green, align 2, !dbg !9049
  %25 = load i32*, i32** %p, align 8, !dbg !9050
  %incdec.ptr14 = getelementptr inbounds i32, i32* %25, i32 1, !dbg !9050
  store i32* %incdec.ptr14, i32** %p, align 8, !dbg !9050
  %26 = load i32, i32* %25, align 4, !dbg !9050
  %call15 = call zeroext i16 @ScaleLongToQuantum(i32 %26), !dbg !9050
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9050
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 2, !dbg !9050
  store i16 %call15, i16* %red, align 2, !dbg !9050
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9051
  %incdec.ptr16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !9051
  store %struct._PixelPacket* %incdec.ptr16, %struct._PixelPacket** %q, align 8, !dbg !9051
  br label %for.inc, !dbg !9052

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !9053
  %inc = add nsw i64 %29, 1, !dbg !9053
  store i64 %inc, i64* %x, align 8, !dbg !9053
  br label %for.cond7, !dbg !9054, !llvm.loop !9055

for.end:                                          ; preds = %for.cond7
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9057
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9059
  %call17 = call i32 @SyncAuthenticPixels(%struct._Image* %30, %struct._ExceptionInfo* %31), !dbg !9060
  %cmp18 = icmp eq i32 %call17, 0, !dbg !9061
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !9062

if.then19:                                        ; preds = %for.end
  br label %for.end23, !dbg !9063

if.end20:                                         ; preds = %for.end
  br label %for.inc21, !dbg !9064

for.inc21:                                        ; preds = %if.end20
  %32 = load i64, i64* %y, align 8, !dbg !9065
  %inc22 = add nsw i64 %32, 1, !dbg !9065
  store i64 %inc22, i64* %y, align 8, !dbg !9065
  br label %for.cond, !dbg !9066, !llvm.loop !9067

for.end23:                                        ; preds = %if.then19, %if.then6, %for.cond
  br label %for.end371, !dbg !9069

if.end24:                                         ; preds = %entry
  %33 = load i8*, i8** %map.addr, align 8, !dbg !9070
  %call25 = call i32 @LocaleCompare(i8* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !9072
  %cmp26 = icmp eq i32 %call25, 0, !dbg !9073
  br i1 %cmp26, label %if.then27, label %if.end68, !dbg !9074

if.then27:                                        ; preds = %if.end24
  store i64 0, i64* %y, align 8, !dbg !9075
  br label %for.cond28, !dbg !9078

for.cond28:                                       ; preds = %for.inc65, %if.then27
  %34 = load i64, i64* %y, align 8, !dbg !9079
  %35 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9081
  %height29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %35, i32 0, i32 1, !dbg !9082
  %36 = load i64, i64* %height29, align 8, !dbg !9082
  %cmp30 = icmp slt i64 %34, %36, !dbg !9083
  br i1 %cmp30, label %for.body31, label %for.end67, !dbg !9084

for.body31:                                       ; preds = %for.cond28
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9085
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9087
  %x32 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 2, !dbg !9088
  %39 = load i64, i64* %x32, align 8, !dbg !9088
  %40 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9089
  %y33 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %40, i32 0, i32 3, !dbg !9090
  %41 = load i64, i64* %y33, align 8, !dbg !9090
  %42 = load i64, i64* %y, align 8, !dbg !9091
  %add34 = add nsw i64 %41, %42, !dbg !9092
  %43 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9093
  %width35 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %43, i32 0, i32 0, !dbg !9094
  %44 = load i64, i64* %width35, align 8, !dbg !9094
  %45 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9095
  %call36 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %37, i64 %39, i64 %add34, i64 %44, i64 1, %struct._ExceptionInfo* %45), !dbg !9096
  store %struct._PixelPacket* %call36, %struct._PixelPacket** %q, align 8, !dbg !9097
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9098
  %cmp37 = icmp eq %struct._PixelPacket* %46, null, !dbg !9100
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !9101

if.then38:                                        ; preds = %for.body31
  br label %for.end67, !dbg !9102

if.end39:                                         ; preds = %for.body31
  store i64 0, i64* %x, align 8, !dbg !9103
  br label %for.cond40, !dbg !9105

for.cond40:                                       ; preds = %for.inc57, %if.end39
  %47 = load i64, i64* %x, align 8, !dbg !9106
  %48 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9108
  %width41 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %48, i32 0, i32 0, !dbg !9109
  %49 = load i64, i64* %width41, align 8, !dbg !9109
  %cmp42 = icmp slt i64 %47, %49, !dbg !9110
  br i1 %cmp42, label %for.body43, label %for.end59, !dbg !9111

for.body43:                                       ; preds = %for.cond40
  %50 = load i32*, i32** %p, align 8, !dbg !9112
  %incdec.ptr44 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !9112
  store i32* %incdec.ptr44, i32** %p, align 8, !dbg !9112
  %51 = load i32, i32* %50, align 4, !dbg !9112
  %call45 = call zeroext i16 @ScaleLongToQuantum(i32 %51), !dbg !9112
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9112
  %blue46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 0, !dbg !9112
  store i16 %call45, i16* %blue46, align 2, !dbg !9112
  %53 = load i32*, i32** %p, align 8, !dbg !9114
  %incdec.ptr47 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !9114
  store i32* %incdec.ptr47, i32** %p, align 8, !dbg !9114
  %54 = load i32, i32* %53, align 4, !dbg !9114
  %call48 = call zeroext i16 @ScaleLongToQuantum(i32 %54), !dbg !9114
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9114
  %green49 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 1, !dbg !9114
  store i16 %call48, i16* %green49, align 2, !dbg !9114
  %56 = load i32*, i32** %p, align 8, !dbg !9115
  %incdec.ptr50 = getelementptr inbounds i32, i32* %56, i32 1, !dbg !9115
  store i32* %incdec.ptr50, i32** %p, align 8, !dbg !9115
  %57 = load i32, i32* %56, align 4, !dbg !9115
  %call51 = call zeroext i16 @ScaleLongToQuantum(i32 %57), !dbg !9115
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9115
  %red52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 2, !dbg !9115
  store i16 %call51, i16* %red52, align 2, !dbg !9115
  %59 = load i32*, i32** %p, align 8, !dbg !9116
  %incdec.ptr53 = getelementptr inbounds i32, i32* %59, i32 1, !dbg !9116
  store i32* %incdec.ptr53, i32** %p, align 8, !dbg !9116
  %60 = load i32, i32* %59, align 4, !dbg !9116
  %call54 = call zeroext i16 @ScaleLongToQuantum(i32 %60), !dbg !9116
  %conv = zext i16 %call54 to i32, !dbg !9116
  %sub = sub nsw i32 65535, %conv, !dbg !9116
  %conv55 = trunc i32 %sub to i16, !dbg !9116
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9116
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 3, !dbg !9116
  store i16 %conv55, i16* %opacity, align 2, !dbg !9116
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9117
  %incdec.ptr56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !9117
  store %struct._PixelPacket* %incdec.ptr56, %struct._PixelPacket** %q, align 8, !dbg !9117
  br label %for.inc57, !dbg !9118

for.inc57:                                        ; preds = %for.body43
  %63 = load i64, i64* %x, align 8, !dbg !9119
  %inc58 = add nsw i64 %63, 1, !dbg !9119
  store i64 %inc58, i64* %x, align 8, !dbg !9119
  br label %for.cond40, !dbg !9120, !llvm.loop !9121

for.end59:                                        ; preds = %for.cond40
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9123
  %65 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9125
  %call60 = call i32 @SyncAuthenticPixels(%struct._Image* %64, %struct._ExceptionInfo* %65), !dbg !9126
  %cmp61 = icmp eq i32 %call60, 0, !dbg !9127
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !9128

if.then63:                                        ; preds = %for.end59
  br label %for.end67, !dbg !9129

if.end64:                                         ; preds = %for.end59
  br label %for.inc65, !dbg !9130

for.inc65:                                        ; preds = %if.end64
  %66 = load i64, i64* %y, align 8, !dbg !9131
  %inc66 = add nsw i64 %66, 1, !dbg !9131
  store i64 %inc66, i64* %y, align 8, !dbg !9131
  br label %for.cond28, !dbg !9132, !llvm.loop !9133

for.end67:                                        ; preds = %if.then63, %if.then38, %for.cond28
  br label %for.end371, !dbg !9135

if.end68:                                         ; preds = %if.end24
  %67 = load i8*, i8** %map.addr, align 8, !dbg !9136
  %call69 = call i32 @LocaleCompare(i8* %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !9138
  %cmp70 = icmp eq i32 %call69, 0, !dbg !9139
  br i1 %cmp70, label %if.then72, label %if.end114, !dbg !9140

if.then72:                                        ; preds = %if.end68
  store i64 0, i64* %y, align 8, !dbg !9141
  br label %for.cond73, !dbg !9144

for.cond73:                                       ; preds = %for.inc111, %if.then72
  %68 = load i64, i64* %y, align 8, !dbg !9145
  %69 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9147
  %height74 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %69, i32 0, i32 1, !dbg !9148
  %70 = load i64, i64* %height74, align 8, !dbg !9148
  %cmp75 = icmp slt i64 %68, %70, !dbg !9149
  br i1 %cmp75, label %for.body77, label %for.end113, !dbg !9150

for.body77:                                       ; preds = %for.cond73
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9151
  %72 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9153
  %x78 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %72, i32 0, i32 2, !dbg !9154
  %73 = load i64, i64* %x78, align 8, !dbg !9154
  %74 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9155
  %y79 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %74, i32 0, i32 3, !dbg !9156
  %75 = load i64, i64* %y79, align 8, !dbg !9156
  %76 = load i64, i64* %y, align 8, !dbg !9157
  %add80 = add nsw i64 %75, %76, !dbg !9158
  %77 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9159
  %width81 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %77, i32 0, i32 0, !dbg !9160
  %78 = load i64, i64* %width81, align 8, !dbg !9160
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9161
  %call82 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %71, i64 %73, i64 %add80, i64 %78, i64 1, %struct._ExceptionInfo* %79), !dbg !9162
  store %struct._PixelPacket* %call82, %struct._PixelPacket** %q, align 8, !dbg !9163
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9164
  %cmp83 = icmp eq %struct._PixelPacket* %80, null, !dbg !9166
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !9167

if.then85:                                        ; preds = %for.body77
  br label %for.end113, !dbg !9168

if.end86:                                         ; preds = %for.body77
  store i64 0, i64* %x, align 8, !dbg !9169
  br label %for.cond87, !dbg !9171

for.cond87:                                       ; preds = %for.inc103, %if.end86
  %81 = load i64, i64* %x, align 8, !dbg !9172
  %82 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9174
  %width88 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %82, i32 0, i32 0, !dbg !9175
  %83 = load i64, i64* %width88, align 8, !dbg !9175
  %cmp89 = icmp slt i64 %81, %83, !dbg !9176
  br i1 %cmp89, label %for.body91, label %for.end105, !dbg !9177

for.body91:                                       ; preds = %for.cond87
  %84 = load i32*, i32** %p, align 8, !dbg !9178
  %incdec.ptr92 = getelementptr inbounds i32, i32* %84, i32 1, !dbg !9178
  store i32* %incdec.ptr92, i32** %p, align 8, !dbg !9178
  %85 = load i32, i32* %84, align 4, !dbg !9178
  %call93 = call zeroext i16 @ScaleLongToQuantum(i32 %85), !dbg !9178
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9178
  %blue94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 0, !dbg !9178
  store i16 %call93, i16* %blue94, align 2, !dbg !9178
  %87 = load i32*, i32** %p, align 8, !dbg !9180
  %incdec.ptr95 = getelementptr inbounds i32, i32* %87, i32 1, !dbg !9180
  store i32* %incdec.ptr95, i32** %p, align 8, !dbg !9180
  %88 = load i32, i32* %87, align 4, !dbg !9180
  %call96 = call zeroext i16 @ScaleLongToQuantum(i32 %88), !dbg !9180
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9180
  %green97 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 0, i32 1, !dbg !9180
  store i16 %call96, i16* %green97, align 2, !dbg !9180
  %90 = load i32*, i32** %p, align 8, !dbg !9181
  %incdec.ptr98 = getelementptr inbounds i32, i32* %90, i32 1, !dbg !9181
  store i32* %incdec.ptr98, i32** %p, align 8, !dbg !9181
  %91 = load i32, i32* %90, align 4, !dbg !9181
  %call99 = call zeroext i16 @ScaleLongToQuantum(i32 %91), !dbg !9181
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9181
  %red100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 2, !dbg !9181
  store i16 %call99, i16* %red100, align 2, !dbg !9181
  %93 = load i32*, i32** %p, align 8, !dbg !9182
  %incdec.ptr101 = getelementptr inbounds i32, i32* %93, i32 1, !dbg !9182
  store i32* %incdec.ptr101, i32** %p, align 8, !dbg !9182
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9183
  %incdec.ptr102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 1, !dbg !9183
  store %struct._PixelPacket* %incdec.ptr102, %struct._PixelPacket** %q, align 8, !dbg !9183
  br label %for.inc103, !dbg !9184

for.inc103:                                       ; preds = %for.body91
  %95 = load i64, i64* %x, align 8, !dbg !9185
  %inc104 = add nsw i64 %95, 1, !dbg !9185
  store i64 %inc104, i64* %x, align 8, !dbg !9185
  br label %for.cond87, !dbg !9186, !llvm.loop !9187

for.end105:                                       ; preds = %for.cond87
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9189
  %97 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9191
  %call106 = call i32 @SyncAuthenticPixels(%struct._Image* %96, %struct._ExceptionInfo* %97), !dbg !9192
  %cmp107 = icmp eq i32 %call106, 0, !dbg !9193
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !9194

if.then109:                                       ; preds = %for.end105
  br label %for.end113, !dbg !9195

if.end110:                                        ; preds = %for.end105
  br label %for.inc111, !dbg !9196

for.inc111:                                       ; preds = %if.end110
  %98 = load i64, i64* %y, align 8, !dbg !9197
  %inc112 = add nsw i64 %98, 1, !dbg !9197
  store i64 %inc112, i64* %y, align 8, !dbg !9197
  br label %for.cond73, !dbg !9198, !llvm.loop !9199

for.end113:                                       ; preds = %if.then109, %if.then85, %for.cond73
  br label %for.end371, !dbg !9201

if.end114:                                        ; preds = %if.end68
  %99 = load i8*, i8** %map.addr, align 8, !dbg !9202
  %call115 = call i32 @LocaleCompare(i8* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !9204
  %cmp116 = icmp eq i32 %call115, 0, !dbg !9205
  br i1 %cmp116, label %if.then118, label %if.end157, !dbg !9206

if.then118:                                       ; preds = %if.end114
  store i64 0, i64* %y, align 8, !dbg !9207
  br label %for.cond119, !dbg !9210

for.cond119:                                      ; preds = %for.inc154, %if.then118
  %100 = load i64, i64* %y, align 8, !dbg !9211
  %101 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9213
  %height120 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %101, i32 0, i32 1, !dbg !9214
  %102 = load i64, i64* %height120, align 8, !dbg !9214
  %cmp121 = icmp slt i64 %100, %102, !dbg !9215
  br i1 %cmp121, label %for.body123, label %for.end156, !dbg !9216

for.body123:                                      ; preds = %for.cond119
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9217
  %104 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9219
  %x124 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %104, i32 0, i32 2, !dbg !9220
  %105 = load i64, i64* %x124, align 8, !dbg !9220
  %106 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9221
  %y125 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %106, i32 0, i32 3, !dbg !9222
  %107 = load i64, i64* %y125, align 8, !dbg !9222
  %108 = load i64, i64* %y, align 8, !dbg !9223
  %add126 = add nsw i64 %107, %108, !dbg !9224
  %109 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9225
  %width127 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %109, i32 0, i32 0, !dbg !9226
  %110 = load i64, i64* %width127, align 8, !dbg !9226
  %111 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9227
  %call128 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %103, i64 %105, i64 %add126, i64 %110, i64 1, %struct._ExceptionInfo* %111), !dbg !9228
  store %struct._PixelPacket* %call128, %struct._PixelPacket** %q, align 8, !dbg !9229
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9230
  %cmp129 = icmp eq %struct._PixelPacket* %112, null, !dbg !9232
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !9233

if.then131:                                       ; preds = %for.body123
  br label %for.end156, !dbg !9234

if.end132:                                        ; preds = %for.body123
  store i64 0, i64* %x, align 8, !dbg !9235
  br label %for.cond133, !dbg !9237

for.cond133:                                      ; preds = %for.inc146, %if.end132
  %113 = load i64, i64* %x, align 8, !dbg !9238
  %114 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9240
  %width134 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %114, i32 0, i32 0, !dbg !9241
  %115 = load i64, i64* %width134, align 8, !dbg !9241
  %cmp135 = icmp slt i64 %113, %115, !dbg !9242
  br i1 %cmp135, label %for.body137, label %for.end148, !dbg !9243

for.body137:                                      ; preds = %for.cond133
  %116 = load i32*, i32** %p, align 8, !dbg !9244
  %incdec.ptr138 = getelementptr inbounds i32, i32* %116, i32 1, !dbg !9244
  store i32* %incdec.ptr138, i32** %p, align 8, !dbg !9244
  %117 = load i32, i32* %116, align 4, !dbg !9244
  %call139 = call zeroext i16 @ScaleLongToQuantum(i32 %117), !dbg !9244
  %118 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9244
  %red140 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %118, i32 0, i32 2, !dbg !9244
  store i16 %call139, i16* %red140, align 2, !dbg !9244
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9246
  %red141 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 2, !dbg !9246
  %120 = load i16, i16* %red141, align 2, !dbg !9246
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9246
  %green142 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i32 0, i32 1, !dbg !9246
  store i16 %120, i16* %green142, align 2, !dbg !9246
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9247
  %red143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 2, !dbg !9247
  %123 = load i16, i16* %red143, align 2, !dbg !9247
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9247
  %blue144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 0, i32 0, !dbg !9247
  store i16 %123, i16* %blue144, align 2, !dbg !9247
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9248
  %incdec.ptr145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 1, !dbg !9248
  store %struct._PixelPacket* %incdec.ptr145, %struct._PixelPacket** %q, align 8, !dbg !9248
  br label %for.inc146, !dbg !9249

for.inc146:                                       ; preds = %for.body137
  %126 = load i64, i64* %x, align 8, !dbg !9250
  %inc147 = add nsw i64 %126, 1, !dbg !9250
  store i64 %inc147, i64* %x, align 8, !dbg !9250
  br label %for.cond133, !dbg !9251, !llvm.loop !9252

for.end148:                                       ; preds = %for.cond133
  %127 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9254
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9256
  %call149 = call i32 @SyncAuthenticPixels(%struct._Image* %127, %struct._ExceptionInfo* %128), !dbg !9257
  %cmp150 = icmp eq i32 %call149, 0, !dbg !9258
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !9259

if.then152:                                       ; preds = %for.end148
  br label %for.end156, !dbg !9260

if.end153:                                        ; preds = %for.end148
  br label %for.inc154, !dbg !9261

for.inc154:                                       ; preds = %if.end153
  %129 = load i64, i64* %y, align 8, !dbg !9262
  %inc155 = add nsw i64 %129, 1, !dbg !9262
  store i64 %inc155, i64* %y, align 8, !dbg !9262
  br label %for.cond119, !dbg !9263, !llvm.loop !9264

for.end156:                                       ; preds = %if.then152, %if.then131, %for.cond119
  br label %for.end371, !dbg !9266

if.end157:                                        ; preds = %if.end114
  %130 = load i8*, i8** %map.addr, align 8, !dbg !9267
  %call158 = call i32 @LocaleCompare(i8* %130, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !9269
  %cmp159 = icmp eq i32 %call158, 0, !dbg !9270
  br i1 %cmp159, label %if.then161, label %if.end202, !dbg !9271

if.then161:                                       ; preds = %if.end157
  store i64 0, i64* %y, align 8, !dbg !9272
  br label %for.cond162, !dbg !9275

for.cond162:                                      ; preds = %for.inc199, %if.then161
  %131 = load i64, i64* %y, align 8, !dbg !9276
  %132 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9278
  %height163 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %132, i32 0, i32 1, !dbg !9279
  %133 = load i64, i64* %height163, align 8, !dbg !9279
  %cmp164 = icmp slt i64 %131, %133, !dbg !9280
  br i1 %cmp164, label %for.body166, label %for.end201, !dbg !9281

for.body166:                                      ; preds = %for.cond162
  %134 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9282
  %135 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9284
  %x167 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %135, i32 0, i32 2, !dbg !9285
  %136 = load i64, i64* %x167, align 8, !dbg !9285
  %137 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9286
  %y168 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %137, i32 0, i32 3, !dbg !9287
  %138 = load i64, i64* %y168, align 8, !dbg !9287
  %139 = load i64, i64* %y, align 8, !dbg !9288
  %add169 = add nsw i64 %138, %139, !dbg !9289
  %140 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9290
  %width170 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %140, i32 0, i32 0, !dbg !9291
  %141 = load i64, i64* %width170, align 8, !dbg !9291
  %142 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9292
  %call171 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %134, i64 %136, i64 %add169, i64 %141, i64 1, %struct._ExceptionInfo* %142), !dbg !9293
  store %struct._PixelPacket* %call171, %struct._PixelPacket** %q, align 8, !dbg !9294
  %143 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9295
  %cmp172 = icmp eq %struct._PixelPacket* %143, null, !dbg !9297
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !9298

if.then174:                                       ; preds = %for.body166
  br label %for.end201, !dbg !9299

if.end175:                                        ; preds = %for.body166
  store i64 0, i64* %x, align 8, !dbg !9300
  br label %for.cond176, !dbg !9302

for.cond176:                                      ; preds = %for.inc191, %if.end175
  %144 = load i64, i64* %x, align 8, !dbg !9303
  %145 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9305
  %width177 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %145, i32 0, i32 0, !dbg !9306
  %146 = load i64, i64* %width177, align 8, !dbg !9306
  %cmp178 = icmp slt i64 %144, %146, !dbg !9307
  br i1 %cmp178, label %for.body180, label %for.end193, !dbg !9308

for.body180:                                      ; preds = %for.cond176
  %147 = load i32*, i32** %p, align 8, !dbg !9309
  %incdec.ptr181 = getelementptr inbounds i32, i32* %147, i32 1, !dbg !9309
  store i32* %incdec.ptr181, i32** %p, align 8, !dbg !9309
  %148 = load i32, i32* %147, align 4, !dbg !9309
  %call182 = call zeroext i16 @ScaleLongToQuantum(i32 %148), !dbg !9309
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9309
  %red183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 0, i32 2, !dbg !9309
  store i16 %call182, i16* %red183, align 2, !dbg !9309
  %150 = load i32*, i32** %p, align 8, !dbg !9311
  %incdec.ptr184 = getelementptr inbounds i32, i32* %150, i32 1, !dbg !9311
  store i32* %incdec.ptr184, i32** %p, align 8, !dbg !9311
  %151 = load i32, i32* %150, align 4, !dbg !9311
  %call185 = call zeroext i16 @ScaleLongToQuantum(i32 %151), !dbg !9311
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9311
  %green186 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 0, i32 1, !dbg !9311
  store i16 %call185, i16* %green186, align 2, !dbg !9311
  %153 = load i32*, i32** %p, align 8, !dbg !9312
  %incdec.ptr187 = getelementptr inbounds i32, i32* %153, i32 1, !dbg !9312
  store i32* %incdec.ptr187, i32** %p, align 8, !dbg !9312
  %154 = load i32, i32* %153, align 4, !dbg !9312
  %call188 = call zeroext i16 @ScaleLongToQuantum(i32 %154), !dbg !9312
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9312
  %blue189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %155, i32 0, i32 0, !dbg !9312
  store i16 %call188, i16* %blue189, align 2, !dbg !9312
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9313
  %incdec.ptr190 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 1, !dbg !9313
  store %struct._PixelPacket* %incdec.ptr190, %struct._PixelPacket** %q, align 8, !dbg !9313
  br label %for.inc191, !dbg !9314

for.inc191:                                       ; preds = %for.body180
  %157 = load i64, i64* %x, align 8, !dbg !9315
  %inc192 = add nsw i64 %157, 1, !dbg !9315
  store i64 %inc192, i64* %x, align 8, !dbg !9315
  br label %for.cond176, !dbg !9316, !llvm.loop !9317

for.end193:                                       ; preds = %for.cond176
  %158 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9319
  %159 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9321
  %call194 = call i32 @SyncAuthenticPixels(%struct._Image* %158, %struct._ExceptionInfo* %159), !dbg !9322
  %cmp195 = icmp eq i32 %call194, 0, !dbg !9323
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !9324

if.then197:                                       ; preds = %for.end193
  br label %for.end201, !dbg !9325

if.end198:                                        ; preds = %for.end193
  br label %for.inc199, !dbg !9326

for.inc199:                                       ; preds = %if.end198
  %160 = load i64, i64* %y, align 8, !dbg !9327
  %inc200 = add nsw i64 %160, 1, !dbg !9327
  store i64 %inc200, i64* %y, align 8, !dbg !9327
  br label %for.cond162, !dbg !9328, !llvm.loop !9329

for.end201:                                       ; preds = %if.then197, %if.then174, %for.cond162
  br label %for.end371, !dbg !9331

if.end202:                                        ; preds = %if.end157
  %161 = load i8*, i8** %map.addr, align 8, !dbg !9332
  %call203 = call i32 @LocaleCompare(i8* %161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !9334
  %cmp204 = icmp eq i32 %call203, 0, !dbg !9335
  br i1 %cmp204, label %if.then206, label %if.end253, !dbg !9336

if.then206:                                       ; preds = %if.end202
  store i64 0, i64* %y, align 8, !dbg !9337
  br label %for.cond207, !dbg !9340

for.cond207:                                      ; preds = %for.inc250, %if.then206
  %162 = load i64, i64* %y, align 8, !dbg !9341
  %163 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9343
  %height208 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %163, i32 0, i32 1, !dbg !9344
  %164 = load i64, i64* %height208, align 8, !dbg !9344
  %cmp209 = icmp slt i64 %162, %164, !dbg !9345
  br i1 %cmp209, label %for.body211, label %for.end252, !dbg !9346

for.body211:                                      ; preds = %for.cond207
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9347
  %166 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9349
  %x212 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %166, i32 0, i32 2, !dbg !9350
  %167 = load i64, i64* %x212, align 8, !dbg !9350
  %168 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9351
  %y213 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %168, i32 0, i32 3, !dbg !9352
  %169 = load i64, i64* %y213, align 8, !dbg !9352
  %170 = load i64, i64* %y, align 8, !dbg !9353
  %add214 = add nsw i64 %169, %170, !dbg !9354
  %171 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9355
  %width215 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %171, i32 0, i32 0, !dbg !9356
  %172 = load i64, i64* %width215, align 8, !dbg !9356
  %173 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9357
  %call216 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %165, i64 %167, i64 %add214, i64 %172, i64 1, %struct._ExceptionInfo* %173), !dbg !9358
  store %struct._PixelPacket* %call216, %struct._PixelPacket** %q, align 8, !dbg !9359
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9360
  %cmp217 = icmp eq %struct._PixelPacket* %174, null, !dbg !9362
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !9363

if.then219:                                       ; preds = %for.body211
  br label %for.end252, !dbg !9364

if.end220:                                        ; preds = %for.body211
  store i64 0, i64* %x, align 8, !dbg !9365
  br label %for.cond221, !dbg !9367

for.cond221:                                      ; preds = %for.inc242, %if.end220
  %175 = load i64, i64* %x, align 8, !dbg !9368
  %176 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9370
  %width222 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %176, i32 0, i32 0, !dbg !9371
  %177 = load i64, i64* %width222, align 8, !dbg !9371
  %cmp223 = icmp slt i64 %175, %177, !dbg !9372
  br i1 %cmp223, label %for.body225, label %for.end244, !dbg !9373

for.body225:                                      ; preds = %for.cond221
  %178 = load i32*, i32** %p, align 8, !dbg !9374
  %incdec.ptr226 = getelementptr inbounds i32, i32* %178, i32 1, !dbg !9374
  store i32* %incdec.ptr226, i32** %p, align 8, !dbg !9374
  %179 = load i32, i32* %178, align 4, !dbg !9374
  %call227 = call zeroext i16 @ScaleLongToQuantum(i32 %179), !dbg !9374
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9374
  %red228 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 2, !dbg !9374
  store i16 %call227, i16* %red228, align 2, !dbg !9374
  %181 = load i32*, i32** %p, align 8, !dbg !9376
  %incdec.ptr229 = getelementptr inbounds i32, i32* %181, i32 1, !dbg !9376
  store i32* %incdec.ptr229, i32** %p, align 8, !dbg !9376
  %182 = load i32, i32* %181, align 4, !dbg !9376
  %call230 = call zeroext i16 @ScaleLongToQuantum(i32 %182), !dbg !9376
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9376
  %green231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 0, i32 1, !dbg !9376
  store i16 %call230, i16* %green231, align 2, !dbg !9376
  %184 = load i32*, i32** %p, align 8, !dbg !9377
  %incdec.ptr232 = getelementptr inbounds i32, i32* %184, i32 1, !dbg !9377
  store i32* %incdec.ptr232, i32** %p, align 8, !dbg !9377
  %185 = load i32, i32* %184, align 4, !dbg !9377
  %call233 = call zeroext i16 @ScaleLongToQuantum(i32 %185), !dbg !9377
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9377
  %blue234 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 0, !dbg !9377
  store i16 %call233, i16* %blue234, align 2, !dbg !9377
  %187 = load i32*, i32** %p, align 8, !dbg !9378
  %incdec.ptr235 = getelementptr inbounds i32, i32* %187, i32 1, !dbg !9378
  store i32* %incdec.ptr235, i32** %p, align 8, !dbg !9378
  %188 = load i32, i32* %187, align 4, !dbg !9378
  %call236 = call zeroext i16 @ScaleLongToQuantum(i32 %188), !dbg !9378
  %conv237 = zext i16 %call236 to i32, !dbg !9378
  %sub238 = sub nsw i32 65535, %conv237, !dbg !9378
  %conv239 = trunc i32 %sub238 to i16, !dbg !9378
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9378
  %opacity240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %189, i32 0, i32 3, !dbg !9378
  store i16 %conv239, i16* %opacity240, align 2, !dbg !9378
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9379
  %incdec.ptr241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i32 1, !dbg !9379
  store %struct._PixelPacket* %incdec.ptr241, %struct._PixelPacket** %q, align 8, !dbg !9379
  br label %for.inc242, !dbg !9380

for.inc242:                                       ; preds = %for.body225
  %191 = load i64, i64* %x, align 8, !dbg !9381
  %inc243 = add nsw i64 %191, 1, !dbg !9381
  store i64 %inc243, i64* %x, align 8, !dbg !9381
  br label %for.cond221, !dbg !9382, !llvm.loop !9383

for.end244:                                       ; preds = %for.cond221
  %192 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9385
  %193 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9387
  %call245 = call i32 @SyncAuthenticPixels(%struct._Image* %192, %struct._ExceptionInfo* %193), !dbg !9388
  %cmp246 = icmp eq i32 %call245, 0, !dbg !9389
  br i1 %cmp246, label %if.then248, label %if.end249, !dbg !9390

if.then248:                                       ; preds = %for.end244
  br label %for.end252, !dbg !9391

if.end249:                                        ; preds = %for.end244
  br label %for.inc250, !dbg !9392

for.inc250:                                       ; preds = %if.end249
  %194 = load i64, i64* %y, align 8, !dbg !9393
  %inc251 = add nsw i64 %194, 1, !dbg !9393
  store i64 %inc251, i64* %y, align 8, !dbg !9393
  br label %for.cond207, !dbg !9394, !llvm.loop !9395

for.end252:                                       ; preds = %if.then248, %if.then219, %for.cond207
  br label %for.end371, !dbg !9397

if.end253:                                        ; preds = %if.end202
  %195 = load i8*, i8** %map.addr, align 8, !dbg !9398
  %call254 = call i32 @LocaleCompare(i8* %195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !9400
  %cmp255 = icmp eq i32 %call254, 0, !dbg !9401
  br i1 %cmp255, label %if.then257, label %if.end299, !dbg !9402

if.then257:                                       ; preds = %if.end253
  store i64 0, i64* %y, align 8, !dbg !9403
  br label %for.cond258, !dbg !9406

for.cond258:                                      ; preds = %for.inc296, %if.then257
  %196 = load i64, i64* %y, align 8, !dbg !9407
  %197 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9409
  %height259 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %197, i32 0, i32 1, !dbg !9410
  %198 = load i64, i64* %height259, align 8, !dbg !9410
  %cmp260 = icmp slt i64 %196, %198, !dbg !9411
  br i1 %cmp260, label %for.body262, label %for.end298, !dbg !9412

for.body262:                                      ; preds = %for.cond258
  %199 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9413
  %200 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9415
  %x263 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %200, i32 0, i32 2, !dbg !9416
  %201 = load i64, i64* %x263, align 8, !dbg !9416
  %202 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9417
  %y264 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %202, i32 0, i32 3, !dbg !9418
  %203 = load i64, i64* %y264, align 8, !dbg !9418
  %204 = load i64, i64* %y, align 8, !dbg !9419
  %add265 = add nsw i64 %203, %204, !dbg !9420
  %205 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9421
  %width266 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %205, i32 0, i32 0, !dbg !9422
  %206 = load i64, i64* %width266, align 8, !dbg !9422
  %207 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9423
  %call267 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %199, i64 %201, i64 %add265, i64 %206, i64 1, %struct._ExceptionInfo* %207), !dbg !9424
  store %struct._PixelPacket* %call267, %struct._PixelPacket** %q, align 8, !dbg !9425
  %208 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9426
  %cmp268 = icmp eq %struct._PixelPacket* %208, null, !dbg !9428
  br i1 %cmp268, label %if.then270, label %if.end271, !dbg !9429

if.then270:                                       ; preds = %for.body262
  br label %for.end298, !dbg !9430

if.end271:                                        ; preds = %for.body262
  store i64 0, i64* %x, align 8, !dbg !9431
  br label %for.cond272, !dbg !9433

for.cond272:                                      ; preds = %for.inc288, %if.end271
  %209 = load i64, i64* %x, align 8, !dbg !9434
  %210 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9436
  %width273 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %210, i32 0, i32 0, !dbg !9437
  %211 = load i64, i64* %width273, align 8, !dbg !9437
  %cmp274 = icmp slt i64 %209, %211, !dbg !9438
  br i1 %cmp274, label %for.body276, label %for.end290, !dbg !9439

for.body276:                                      ; preds = %for.cond272
  %212 = load i32*, i32** %p, align 8, !dbg !9440
  %incdec.ptr277 = getelementptr inbounds i32, i32* %212, i32 1, !dbg !9440
  store i32* %incdec.ptr277, i32** %p, align 8, !dbg !9440
  %213 = load i32, i32* %212, align 4, !dbg !9440
  %call278 = call zeroext i16 @ScaleLongToQuantum(i32 %213), !dbg !9440
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9440
  %red279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 0, i32 2, !dbg !9440
  store i16 %call278, i16* %red279, align 2, !dbg !9440
  %215 = load i32*, i32** %p, align 8, !dbg !9442
  %incdec.ptr280 = getelementptr inbounds i32, i32* %215, i32 1, !dbg !9442
  store i32* %incdec.ptr280, i32** %p, align 8, !dbg !9442
  %216 = load i32, i32* %215, align 4, !dbg !9442
  %call281 = call zeroext i16 @ScaleLongToQuantum(i32 %216), !dbg !9442
  %217 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9442
  %green282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %217, i32 0, i32 1, !dbg !9442
  store i16 %call281, i16* %green282, align 2, !dbg !9442
  %218 = load i32*, i32** %p, align 8, !dbg !9443
  %incdec.ptr283 = getelementptr inbounds i32, i32* %218, i32 1, !dbg !9443
  store i32* %incdec.ptr283, i32** %p, align 8, !dbg !9443
  %219 = load i32, i32* %218, align 4, !dbg !9443
  %call284 = call zeroext i16 @ScaleLongToQuantum(i32 %219), !dbg !9443
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9443
  %blue285 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 0, !dbg !9443
  store i16 %call284, i16* %blue285, align 2, !dbg !9443
  %221 = load i32*, i32** %p, align 8, !dbg !9444
  %incdec.ptr286 = getelementptr inbounds i32, i32* %221, i32 1, !dbg !9444
  store i32* %incdec.ptr286, i32** %p, align 8, !dbg !9444
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9445
  %incdec.ptr287 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 1, !dbg !9445
  store %struct._PixelPacket* %incdec.ptr287, %struct._PixelPacket** %q, align 8, !dbg !9445
  br label %for.inc288, !dbg !9446

for.inc288:                                       ; preds = %for.body276
  %223 = load i64, i64* %x, align 8, !dbg !9447
  %inc289 = add nsw i64 %223, 1, !dbg !9447
  store i64 %inc289, i64* %x, align 8, !dbg !9447
  br label %for.cond272, !dbg !9448, !llvm.loop !9449

for.end290:                                       ; preds = %for.cond272
  %224 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9451
  %225 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9453
  %call291 = call i32 @SyncAuthenticPixels(%struct._Image* %224, %struct._ExceptionInfo* %225), !dbg !9454
  %cmp292 = icmp eq i32 %call291, 0, !dbg !9455
  br i1 %cmp292, label %if.then294, label %if.end295, !dbg !9456

if.then294:                                       ; preds = %for.end290
  br label %for.end298, !dbg !9457

if.end295:                                        ; preds = %for.end290
  br label %for.inc296, !dbg !9458

for.inc296:                                       ; preds = %if.end295
  %226 = load i64, i64* %y, align 8, !dbg !9459
  %inc297 = add nsw i64 %226, 1, !dbg !9459
  store i64 %inc297, i64* %y, align 8, !dbg !9459
  br label %for.cond258, !dbg !9460, !llvm.loop !9461

for.end298:                                       ; preds = %if.then294, %if.then270, %for.cond258
  br label %for.end371, !dbg !9463

if.end299:                                        ; preds = %if.end253
  %227 = load i8*, i8** %map.addr, align 8, !dbg !9464
  %call300 = call i64 @strlen(i8* %227) #13, !dbg !9465
  store i64 %call300, i64* %length, align 8, !dbg !9466
  store i64 0, i64* %y, align 8, !dbg !9467
  br label %for.cond301, !dbg !9469

for.cond301:                                      ; preds = %for.inc369, %if.end299
  %228 = load i64, i64* %y, align 8, !dbg !9470
  %229 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9472
  %height302 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %229, i32 0, i32 1, !dbg !9473
  %230 = load i64, i64* %height302, align 8, !dbg !9473
  %cmp303 = icmp slt i64 %228, %230, !dbg !9474
  br i1 %cmp303, label %for.body305, label %for.end371, !dbg !9475

for.body305:                                      ; preds = %for.cond301
  %231 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9476
  %232 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9478
  %x306 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %232, i32 0, i32 2, !dbg !9479
  %233 = load i64, i64* %x306, align 8, !dbg !9479
  %234 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9480
  %y307 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %234, i32 0, i32 3, !dbg !9481
  %235 = load i64, i64* %y307, align 8, !dbg !9481
  %236 = load i64, i64* %y, align 8, !dbg !9482
  %add308 = add nsw i64 %235, %236, !dbg !9483
  %237 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9484
  %width309 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %237, i32 0, i32 0, !dbg !9485
  %238 = load i64, i64* %width309, align 8, !dbg !9485
  %239 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9486
  %call310 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %231, i64 %233, i64 %add308, i64 %238, i64 1, %struct._ExceptionInfo* %239), !dbg !9487
  store %struct._PixelPacket* %call310, %struct._PixelPacket** %q, align 8, !dbg !9488
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9489
  %cmp311 = icmp eq %struct._PixelPacket* %240, null, !dbg !9491
  br i1 %cmp311, label %if.then313, label %if.end314, !dbg !9492

if.then313:                                       ; preds = %for.body305
  br label %for.end371, !dbg !9493

if.end314:                                        ; preds = %for.body305
  %241 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9494
  %call315 = call i16* @GetAuthenticIndexQueue(%struct._Image* %241), !dbg !9495
  store i16* %call315, i16** %indexes, align 8, !dbg !9496
  store i64 0, i64* %x, align 8, !dbg !9497
  br label %for.cond316, !dbg !9499

for.cond316:                                      ; preds = %for.inc361, %if.end314
  %242 = load i64, i64* %x, align 8, !dbg !9500
  %243 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9502
  %width317 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %243, i32 0, i32 0, !dbg !9503
  %244 = load i64, i64* %width317, align 8, !dbg !9503
  %cmp318 = icmp slt i64 %242, %244, !dbg !9504
  br i1 %cmp318, label %for.body320, label %for.end363, !dbg !9505

for.body320:                                      ; preds = %for.cond316
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9506, metadata !DIExpression()), !dbg !9508
  store i64 0, i64* %i, align 8, !dbg !9509
  br label %for.cond321, !dbg !9511

for.cond321:                                      ; preds = %for.inc357, %for.body320
  %245 = load i64, i64* %i, align 8, !dbg !9512
  %246 = load i64, i64* %length, align 8, !dbg !9514
  %cmp322 = icmp slt i64 %245, %246, !dbg !9515
  br i1 %cmp322, label %for.body324, label %for.end359, !dbg !9516

for.body324:                                      ; preds = %for.cond321
  %247 = load i32*, i32** %quantum_map.addr, align 8, !dbg !9517
  %248 = load i64, i64* %i, align 8, !dbg !9519
  %arrayidx = getelementptr inbounds i32, i32* %247, i64 %248, !dbg !9517
  %249 = load i32, i32* %arrayidx, align 4, !dbg !9517
  switch i32 %249, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb327
    i32 12, label %sw.bb327
    i32 3, label %sw.bb330
    i32 19, label %sw.bb330
    i32 1, label %sw.bb333
    i32 13, label %sw.bb339
    i32 2, label %sw.bb342
    i32 11, label %sw.bb349
  ], !dbg !9520

sw.bb:                                            ; preds = %for.body324, %for.body324
  %250 = load i32*, i32** %p, align 8, !dbg !9521
  %251 = load i32, i32* %250, align 4, !dbg !9521
  %call325 = call zeroext i16 @ScaleLongToQuantum(i32 %251), !dbg !9521
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9521
  %red326 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 2, !dbg !9521
  store i16 %call325, i16* %red326, align 2, !dbg !9521
  br label %sw.epilog, !dbg !9524

sw.bb327:                                         ; preds = %for.body324, %for.body324
  %253 = load i32*, i32** %p, align 8, !dbg !9525
  %254 = load i32, i32* %253, align 4, !dbg !9525
  %call328 = call zeroext i16 @ScaleLongToQuantum(i32 %254), !dbg !9525
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9525
  %green329 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %255, i32 0, i32 1, !dbg !9525
  store i16 %call328, i16* %green329, align 2, !dbg !9525
  br label %sw.epilog, !dbg !9527

sw.bb330:                                         ; preds = %for.body324, %for.body324
  %256 = load i32*, i32** %p, align 8, !dbg !9528
  %257 = load i32, i32* %256, align 4, !dbg !9528
  %call331 = call zeroext i16 @ScaleLongToQuantum(i32 %257), !dbg !9528
  %258 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9528
  %blue332 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %258, i32 0, i32 0, !dbg !9528
  store i16 %call331, i16* %blue332, align 2, !dbg !9528
  br label %sw.epilog, !dbg !9530

sw.bb333:                                         ; preds = %for.body324
  %259 = load i32*, i32** %p, align 8, !dbg !9531
  %260 = load i32, i32* %259, align 4, !dbg !9531
  %call334 = call zeroext i16 @ScaleLongToQuantum(i32 %260), !dbg !9531
  %conv335 = zext i16 %call334 to i32, !dbg !9531
  %sub336 = sub nsw i32 65535, %conv335, !dbg !9531
  %conv337 = trunc i32 %sub336 to i16, !dbg !9531
  %261 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9531
  %opacity338 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %261, i32 0, i32 3, !dbg !9531
  store i16 %conv337, i16* %opacity338, align 2, !dbg !9531
  br label %sw.epilog, !dbg !9533

sw.bb339:                                         ; preds = %for.body324
  %262 = load i32*, i32** %p, align 8, !dbg !9534
  %263 = load i32, i32* %262, align 4, !dbg !9534
  %call340 = call zeroext i16 @ScaleLongToQuantum(i32 %263), !dbg !9534
  %264 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9534
  %opacity341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %264, i32 0, i32 3, !dbg !9534
  store i16 %call340, i16* %opacity341, align 2, !dbg !9534
  br label %sw.epilog, !dbg !9536

sw.bb342:                                         ; preds = %for.body324
  %265 = load i16*, i16** %indexes, align 8, !dbg !9537
  %266 = load i64, i64* %x, align 8, !dbg !9537
  %add.ptr = getelementptr inbounds i16, i16* %265, i64 %266, !dbg !9537
  %cmp343 = icmp ne i16* %add.ptr, null, !dbg !9537
  br i1 %cmp343, label %if.then345, label %if.end348, !dbg !9541

if.then345:                                       ; preds = %sw.bb342
  %267 = load i32*, i32** %p, align 8, !dbg !9537
  %268 = load i32, i32* %267, align 4, !dbg !9537
  %call346 = call zeroext i16 @ScaleLongToQuantum(i32 %268), !dbg !9537
  %269 = load i16*, i16** %indexes, align 8, !dbg !9537
  %270 = load i64, i64* %x, align 8, !dbg !9537
  %add.ptr347 = getelementptr inbounds i16, i16* %269, i64 %270, !dbg !9537
  store i16 %call346, i16* %add.ptr347, align 2, !dbg !9537
  br label %if.end348, !dbg !9537

if.end348:                                        ; preds = %if.then345, %sw.bb342
  br label %sw.epilog, !dbg !9542

sw.bb349:                                         ; preds = %for.body324
  %271 = load i32*, i32** %p, align 8, !dbg !9543
  %272 = load i32, i32* %271, align 4, !dbg !9543
  %call350 = call zeroext i16 @ScaleLongToQuantum(i32 %272), !dbg !9543
  %273 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9543
  %red351 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %273, i32 0, i32 2, !dbg !9543
  store i16 %call350, i16* %red351, align 2, !dbg !9543
  %274 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9545
  %red352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %274, i32 0, i32 2, !dbg !9545
  %275 = load i16, i16* %red352, align 2, !dbg !9545
  %276 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9545
  %green353 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %276, i32 0, i32 1, !dbg !9545
  store i16 %275, i16* %green353, align 2, !dbg !9545
  %277 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9546
  %red354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %277, i32 0, i32 2, !dbg !9546
  %278 = load i16, i16* %red354, align 2, !dbg !9546
  %279 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9546
  %blue355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %279, i32 0, i32 0, !dbg !9546
  store i16 %278, i16* %blue355, align 2, !dbg !9546
  br label %sw.epilog, !dbg !9547

sw.default:                                       ; preds = %for.body324
  br label %sw.epilog, !dbg !9548

sw.epilog:                                        ; preds = %sw.default, %sw.bb349, %if.end348, %sw.bb339, %sw.bb333, %sw.bb330, %sw.bb327, %sw.bb
  %280 = load i32*, i32** %p, align 8, !dbg !9549
  %incdec.ptr356 = getelementptr inbounds i32, i32* %280, i32 1, !dbg !9549
  store i32* %incdec.ptr356, i32** %p, align 8, !dbg !9549
  br label %for.inc357, !dbg !9550

for.inc357:                                       ; preds = %sw.epilog
  %281 = load i64, i64* %i, align 8, !dbg !9551
  %inc358 = add nsw i64 %281, 1, !dbg !9551
  store i64 %inc358, i64* %i, align 8, !dbg !9551
  br label %for.cond321, !dbg !9552, !llvm.loop !9553

for.end359:                                       ; preds = %for.cond321
  %282 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9555
  %incdec.ptr360 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %282, i32 1, !dbg !9555
  store %struct._PixelPacket* %incdec.ptr360, %struct._PixelPacket** %q, align 8, !dbg !9555
  br label %for.inc361, !dbg !9556

for.inc361:                                       ; preds = %for.end359
  %283 = load i64, i64* %x, align 8, !dbg !9557
  %inc362 = add nsw i64 %283, 1, !dbg !9557
  store i64 %inc362, i64* %x, align 8, !dbg !9557
  br label %for.cond316, !dbg !9558, !llvm.loop !9559

for.end363:                                       ; preds = %for.cond316
  %284 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9561
  %285 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9563
  %call364 = call i32 @SyncAuthenticPixels(%struct._Image* %284, %struct._ExceptionInfo* %285), !dbg !9564
  %cmp365 = icmp eq i32 %call364, 0, !dbg !9565
  br i1 %cmp365, label %if.then367, label %if.end368, !dbg !9566

if.then367:                                       ; preds = %for.end363
  br label %for.end371, !dbg !9567

if.end368:                                        ; preds = %for.end363
  br label %for.inc369, !dbg !9568

for.inc369:                                       ; preds = %if.end368
  %286 = load i64, i64* %y, align 8, !dbg !9569
  %inc370 = add nsw i64 %286, 1, !dbg !9569
  store i64 %inc370, i64* %y, align 8, !dbg !9569
  br label %for.cond301, !dbg !9570, !llvm.loop !9571

for.end371:                                       ; preds = %for.end23, %for.end67, %for.end113, %for.end156, %for.end201, %for.end252, %for.end298, %if.then367, %if.then313, %for.cond301
  ret void, !dbg !9573
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportQuantumPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !9574 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %p = alloca i16*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9575, metadata !DIExpression()), !dbg !9576
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !9577, metadata !DIExpression()), !dbg !9578
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !9579, metadata !DIExpression()), !dbg !9580
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !9581, metadata !DIExpression()), !dbg !9582
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !9583, metadata !DIExpression()), !dbg !9584
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !9585, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.declare(metadata i16** %p, metadata !9587, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !9590, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !9592, metadata !DIExpression()), !dbg !9593
  call void @llvm.dbg.declare(metadata i64* %x, metadata !9594, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.declare(metadata i64* %length, metadata !9596, metadata !DIExpression()), !dbg !9597
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9598, metadata !DIExpression()), !dbg !9599
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !9600
  %1 = bitcast i8* %0 to i16*, !dbg !9601
  store i16* %1, i16** %p, align 8, !dbg !9602
  %2 = load i8*, i8** %map.addr, align 8, !dbg !9603
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !9605
  %cmp = icmp eq i32 %call, 0, !dbg !9606
  br i1 %cmp, label %if.then, label %if.end21, !dbg !9607

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !9608
  br label %for.cond, !dbg !9611

for.cond:                                         ; preds = %for.inc18, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !9612
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9614
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !9615
  %5 = load i64, i64* %height, align 8, !dbg !9615
  %cmp1 = icmp slt i64 %3, %5, !dbg !9616
  br i1 %cmp1, label %for.body, label %for.end20, !dbg !9617

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9618
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9620
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !9621
  %8 = load i64, i64* %x2, align 8, !dbg !9621
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9622
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !9623
  %10 = load i64, i64* %y3, align 8, !dbg !9623
  %11 = load i64, i64* %y, align 8, !dbg !9624
  %add = add nsw i64 %10, %11, !dbg !9625
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9626
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !9627
  %13 = load i64, i64* %width, align 8, !dbg !9627
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9628
  %call4 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !9629
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %q, align 8, !dbg !9630
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9631
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !9633
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !9634

if.then6:                                         ; preds = %for.body
  br label %for.end20, !dbg !9635

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !9636
  br label %for.cond7, !dbg !9638

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !9639
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9641
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !9642
  %18 = load i64, i64* %width8, align 8, !dbg !9642
  %cmp9 = icmp slt i64 %16, %18, !dbg !9643
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !9644

for.body10:                                       ; preds = %for.cond7
  %19 = load i16*, i16** %p, align 8, !dbg !9645
  %incdec.ptr = getelementptr inbounds i16, i16* %19, i32 1, !dbg !9645
  store i16* %incdec.ptr, i16** %p, align 8, !dbg !9645
  %20 = load i16, i16* %19, align 2, !dbg !9645
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9645
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i32 0, i32 0, !dbg !9645
  store i16 %20, i16* %blue, align 2, !dbg !9645
  %22 = load i16*, i16** %p, align 8, !dbg !9647
  %incdec.ptr11 = getelementptr inbounds i16, i16* %22, i32 1, !dbg !9647
  store i16* %incdec.ptr11, i16** %p, align 8, !dbg !9647
  %23 = load i16, i16* %22, align 2, !dbg !9647
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9647
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 1, !dbg !9647
  store i16 %23, i16* %green, align 2, !dbg !9647
  %25 = load i16*, i16** %p, align 8, !dbg !9648
  %incdec.ptr12 = getelementptr inbounds i16, i16* %25, i32 1, !dbg !9648
  store i16* %incdec.ptr12, i16** %p, align 8, !dbg !9648
  %26 = load i16, i16* %25, align 2, !dbg !9648
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9648
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 2, !dbg !9648
  store i16 %26, i16* %red, align 2, !dbg !9648
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9649
  %incdec.ptr13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !9649
  store %struct._PixelPacket* %incdec.ptr13, %struct._PixelPacket** %q, align 8, !dbg !9649
  br label %for.inc, !dbg !9650

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !9651
  %inc = add nsw i64 %29, 1, !dbg !9651
  store i64 %inc, i64* %x, align 8, !dbg !9651
  br label %for.cond7, !dbg !9652, !llvm.loop !9653

for.end:                                          ; preds = %for.cond7
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9655
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9657
  %call14 = call i32 @SyncAuthenticPixels(%struct._Image* %30, %struct._ExceptionInfo* %31), !dbg !9658
  %cmp15 = icmp eq i32 %call14, 0, !dbg !9659
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !9660

if.then16:                                        ; preds = %for.end
  br label %for.end20, !dbg !9661

if.end17:                                         ; preds = %for.end
  br label %for.inc18, !dbg !9662

for.inc18:                                        ; preds = %if.end17
  %32 = load i64, i64* %y, align 8, !dbg !9663
  %inc19 = add nsw i64 %32, 1, !dbg !9663
  store i64 %inc19, i64* %y, align 8, !dbg !9663
  br label %for.cond, !dbg !9664, !llvm.loop !9665

for.end20:                                        ; preds = %if.then16, %if.then6, %for.cond
  br label %for.end343, !dbg !9667

if.end21:                                         ; preds = %entry
  %33 = load i8*, i8** %map.addr, align 8, !dbg !9668
  %call22 = call i32 @LocaleCompare(i8* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !9670
  %cmp23 = icmp eq i32 %call22, 0, !dbg !9671
  br i1 %cmp23, label %if.then24, label %if.end61, !dbg !9672

if.then24:                                        ; preds = %if.end21
  store i64 0, i64* %y, align 8, !dbg !9673
  br label %for.cond25, !dbg !9676

for.cond25:                                       ; preds = %for.inc58, %if.then24
  %34 = load i64, i64* %y, align 8, !dbg !9677
  %35 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9679
  %height26 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %35, i32 0, i32 1, !dbg !9680
  %36 = load i64, i64* %height26, align 8, !dbg !9680
  %cmp27 = icmp slt i64 %34, %36, !dbg !9681
  br i1 %cmp27, label %for.body28, label %for.end60, !dbg !9682

for.body28:                                       ; preds = %for.cond25
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9683
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9685
  %x29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 2, !dbg !9686
  %39 = load i64, i64* %x29, align 8, !dbg !9686
  %40 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9687
  %y30 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %40, i32 0, i32 3, !dbg !9688
  %41 = load i64, i64* %y30, align 8, !dbg !9688
  %42 = load i64, i64* %y, align 8, !dbg !9689
  %add31 = add nsw i64 %41, %42, !dbg !9690
  %43 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9691
  %width32 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %43, i32 0, i32 0, !dbg !9692
  %44 = load i64, i64* %width32, align 8, !dbg !9692
  %45 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9693
  %call33 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %37, i64 %39, i64 %add31, i64 %44, i64 1, %struct._ExceptionInfo* %45), !dbg !9694
  store %struct._PixelPacket* %call33, %struct._PixelPacket** %q, align 8, !dbg !9695
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9696
  %cmp34 = icmp eq %struct._PixelPacket* %46, null, !dbg !9698
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !9699

if.then35:                                        ; preds = %for.body28
  br label %for.end60, !dbg !9700

if.end36:                                         ; preds = %for.body28
  store i64 0, i64* %x, align 8, !dbg !9701
  br label %for.cond37, !dbg !9703

for.cond37:                                       ; preds = %for.inc50, %if.end36
  %47 = load i64, i64* %x, align 8, !dbg !9704
  %48 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9706
  %width38 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %48, i32 0, i32 0, !dbg !9707
  %49 = load i64, i64* %width38, align 8, !dbg !9707
  %cmp39 = icmp slt i64 %47, %49, !dbg !9708
  br i1 %cmp39, label %for.body40, label %for.end52, !dbg !9709

for.body40:                                       ; preds = %for.cond37
  %50 = load i16*, i16** %p, align 8, !dbg !9710
  %incdec.ptr41 = getelementptr inbounds i16, i16* %50, i32 1, !dbg !9710
  store i16* %incdec.ptr41, i16** %p, align 8, !dbg !9710
  %51 = load i16, i16* %50, align 2, !dbg !9710
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9710
  %blue42 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 0, !dbg !9710
  store i16 %51, i16* %blue42, align 2, !dbg !9710
  %53 = load i16*, i16** %p, align 8, !dbg !9712
  %incdec.ptr43 = getelementptr inbounds i16, i16* %53, i32 1, !dbg !9712
  store i16* %incdec.ptr43, i16** %p, align 8, !dbg !9712
  %54 = load i16, i16* %53, align 2, !dbg !9712
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9712
  %green44 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 1, !dbg !9712
  store i16 %54, i16* %green44, align 2, !dbg !9712
  %56 = load i16*, i16** %p, align 8, !dbg !9713
  %incdec.ptr45 = getelementptr inbounds i16, i16* %56, i32 1, !dbg !9713
  store i16* %incdec.ptr45, i16** %p, align 8, !dbg !9713
  %57 = load i16, i16* %56, align 2, !dbg !9713
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9713
  %red46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 2, !dbg !9713
  store i16 %57, i16* %red46, align 2, !dbg !9713
  %59 = load i16*, i16** %p, align 8, !dbg !9714
  %incdec.ptr47 = getelementptr inbounds i16, i16* %59, i32 1, !dbg !9714
  store i16* %incdec.ptr47, i16** %p, align 8, !dbg !9714
  %60 = load i16, i16* %59, align 2, !dbg !9714
  %conv = zext i16 %60 to i32, !dbg !9714
  %sub = sub nsw i32 65535, %conv, !dbg !9714
  %conv48 = trunc i32 %sub to i16, !dbg !9714
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9714
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 3, !dbg !9714
  store i16 %conv48, i16* %opacity, align 2, !dbg !9714
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9715
  %incdec.ptr49 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !9715
  store %struct._PixelPacket* %incdec.ptr49, %struct._PixelPacket** %q, align 8, !dbg !9715
  br label %for.inc50, !dbg !9716

for.inc50:                                        ; preds = %for.body40
  %63 = load i64, i64* %x, align 8, !dbg !9717
  %inc51 = add nsw i64 %63, 1, !dbg !9717
  store i64 %inc51, i64* %x, align 8, !dbg !9717
  br label %for.cond37, !dbg !9718, !llvm.loop !9719

for.end52:                                        ; preds = %for.cond37
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9721
  %65 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9723
  %call53 = call i32 @SyncAuthenticPixels(%struct._Image* %64, %struct._ExceptionInfo* %65), !dbg !9724
  %cmp54 = icmp eq i32 %call53, 0, !dbg !9725
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !9726

if.then56:                                        ; preds = %for.end52
  br label %for.end60, !dbg !9727

if.end57:                                         ; preds = %for.end52
  br label %for.inc58, !dbg !9728

for.inc58:                                        ; preds = %if.end57
  %66 = load i64, i64* %y, align 8, !dbg !9729
  %inc59 = add nsw i64 %66, 1, !dbg !9729
  store i64 %inc59, i64* %y, align 8, !dbg !9729
  br label %for.cond25, !dbg !9730, !llvm.loop !9731

for.end60:                                        ; preds = %if.then56, %if.then35, %for.cond25
  br label %for.end343, !dbg !9733

if.end61:                                         ; preds = %if.end21
  %67 = load i8*, i8** %map.addr, align 8, !dbg !9734
  %call62 = call i32 @LocaleCompare(i8* %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !9736
  %cmp63 = icmp eq i32 %call62, 0, !dbg !9737
  br i1 %cmp63, label %if.then65, label %if.end104, !dbg !9738

if.then65:                                        ; preds = %if.end61
  store i64 0, i64* %y, align 8, !dbg !9739
  br label %for.cond66, !dbg !9742

for.cond66:                                       ; preds = %for.inc101, %if.then65
  %68 = load i64, i64* %y, align 8, !dbg !9743
  %69 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9745
  %height67 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %69, i32 0, i32 1, !dbg !9746
  %70 = load i64, i64* %height67, align 8, !dbg !9746
  %cmp68 = icmp slt i64 %68, %70, !dbg !9747
  br i1 %cmp68, label %for.body70, label %for.end103, !dbg !9748

for.body70:                                       ; preds = %for.cond66
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9749
  %72 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9751
  %x71 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %72, i32 0, i32 2, !dbg !9752
  %73 = load i64, i64* %x71, align 8, !dbg !9752
  %74 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9753
  %y72 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %74, i32 0, i32 3, !dbg !9754
  %75 = load i64, i64* %y72, align 8, !dbg !9754
  %76 = load i64, i64* %y, align 8, !dbg !9755
  %add73 = add nsw i64 %75, %76, !dbg !9756
  %77 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9757
  %width74 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %77, i32 0, i32 0, !dbg !9758
  %78 = load i64, i64* %width74, align 8, !dbg !9758
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9759
  %call75 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %71, i64 %73, i64 %add73, i64 %78, i64 1, %struct._ExceptionInfo* %79), !dbg !9760
  store %struct._PixelPacket* %call75, %struct._PixelPacket** %q, align 8, !dbg !9761
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9762
  %cmp76 = icmp eq %struct._PixelPacket* %80, null, !dbg !9764
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !9765

if.then78:                                        ; preds = %for.body70
  br label %for.end103, !dbg !9766

if.end79:                                         ; preds = %for.body70
  store i64 0, i64* %x, align 8, !dbg !9767
  br label %for.cond80, !dbg !9769

for.cond80:                                       ; preds = %for.inc93, %if.end79
  %81 = load i64, i64* %x, align 8, !dbg !9770
  %82 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9772
  %width81 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %82, i32 0, i32 0, !dbg !9773
  %83 = load i64, i64* %width81, align 8, !dbg !9773
  %cmp82 = icmp slt i64 %81, %83, !dbg !9774
  br i1 %cmp82, label %for.body84, label %for.end95, !dbg !9775

for.body84:                                       ; preds = %for.cond80
  %84 = load i16*, i16** %p, align 8, !dbg !9776
  %incdec.ptr85 = getelementptr inbounds i16, i16* %84, i32 1, !dbg !9776
  store i16* %incdec.ptr85, i16** %p, align 8, !dbg !9776
  %85 = load i16, i16* %84, align 2, !dbg !9776
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9776
  %blue86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 0, !dbg !9776
  store i16 %85, i16* %blue86, align 2, !dbg !9776
  %87 = load i16*, i16** %p, align 8, !dbg !9778
  %incdec.ptr87 = getelementptr inbounds i16, i16* %87, i32 1, !dbg !9778
  store i16* %incdec.ptr87, i16** %p, align 8, !dbg !9778
  %88 = load i16, i16* %87, align 2, !dbg !9778
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9778
  %green88 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 0, i32 1, !dbg !9778
  store i16 %88, i16* %green88, align 2, !dbg !9778
  %90 = load i16*, i16** %p, align 8, !dbg !9779
  %incdec.ptr89 = getelementptr inbounds i16, i16* %90, i32 1, !dbg !9779
  store i16* %incdec.ptr89, i16** %p, align 8, !dbg !9779
  %91 = load i16, i16* %90, align 2, !dbg !9779
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9779
  %red90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 2, !dbg !9779
  store i16 %91, i16* %red90, align 2, !dbg !9779
  %93 = load i16*, i16** %p, align 8, !dbg !9780
  %incdec.ptr91 = getelementptr inbounds i16, i16* %93, i32 1, !dbg !9780
  store i16* %incdec.ptr91, i16** %p, align 8, !dbg !9780
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9781
  %incdec.ptr92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 1, !dbg !9781
  store %struct._PixelPacket* %incdec.ptr92, %struct._PixelPacket** %q, align 8, !dbg !9781
  br label %for.inc93, !dbg !9782

for.inc93:                                        ; preds = %for.body84
  %95 = load i64, i64* %x, align 8, !dbg !9783
  %inc94 = add nsw i64 %95, 1, !dbg !9783
  store i64 %inc94, i64* %x, align 8, !dbg !9783
  br label %for.cond80, !dbg !9784, !llvm.loop !9785

for.end95:                                        ; preds = %for.cond80
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9787
  %97 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9789
  %call96 = call i32 @SyncAuthenticPixels(%struct._Image* %96, %struct._ExceptionInfo* %97), !dbg !9790
  %cmp97 = icmp eq i32 %call96, 0, !dbg !9791
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !9792

if.then99:                                        ; preds = %for.end95
  br label %for.end103, !dbg !9793

if.end100:                                        ; preds = %for.end95
  br label %for.inc101, !dbg !9794

for.inc101:                                       ; preds = %if.end100
  %98 = load i64, i64* %y, align 8, !dbg !9795
  %inc102 = add nsw i64 %98, 1, !dbg !9795
  store i64 %inc102, i64* %y, align 8, !dbg !9795
  br label %for.cond66, !dbg !9796, !llvm.loop !9797

for.end103:                                       ; preds = %if.then99, %if.then78, %for.cond66
  br label %for.end343, !dbg !9799

if.end104:                                        ; preds = %if.end61
  %99 = load i8*, i8** %map.addr, align 8, !dbg !9800
  %call105 = call i32 @LocaleCompare(i8* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !9802
  %cmp106 = icmp eq i32 %call105, 0, !dbg !9803
  br i1 %cmp106, label %if.then108, label %if.end146, !dbg !9804

if.then108:                                       ; preds = %if.end104
  store i64 0, i64* %y, align 8, !dbg !9805
  br label %for.cond109, !dbg !9808

for.cond109:                                      ; preds = %for.inc143, %if.then108
  %100 = load i64, i64* %y, align 8, !dbg !9809
  %101 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9811
  %height110 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %101, i32 0, i32 1, !dbg !9812
  %102 = load i64, i64* %height110, align 8, !dbg !9812
  %cmp111 = icmp slt i64 %100, %102, !dbg !9813
  br i1 %cmp111, label %for.body113, label %for.end145, !dbg !9814

for.body113:                                      ; preds = %for.cond109
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9815
  %104 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9817
  %x114 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %104, i32 0, i32 2, !dbg !9818
  %105 = load i64, i64* %x114, align 8, !dbg !9818
  %106 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9819
  %y115 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %106, i32 0, i32 3, !dbg !9820
  %107 = load i64, i64* %y115, align 8, !dbg !9820
  %108 = load i64, i64* %y, align 8, !dbg !9821
  %add116 = add nsw i64 %107, %108, !dbg !9822
  %109 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9823
  %width117 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %109, i32 0, i32 0, !dbg !9824
  %110 = load i64, i64* %width117, align 8, !dbg !9824
  %111 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9825
  %call118 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %103, i64 %105, i64 %add116, i64 %110, i64 1, %struct._ExceptionInfo* %111), !dbg !9826
  store %struct._PixelPacket* %call118, %struct._PixelPacket** %q, align 8, !dbg !9827
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9828
  %cmp119 = icmp eq %struct._PixelPacket* %112, null, !dbg !9830
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !9831

if.then121:                                       ; preds = %for.body113
  br label %for.end145, !dbg !9832

if.end122:                                        ; preds = %for.body113
  store i64 0, i64* %x, align 8, !dbg !9833
  br label %for.cond123, !dbg !9835

for.cond123:                                      ; preds = %for.inc135, %if.end122
  %113 = load i64, i64* %x, align 8, !dbg !9836
  %114 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9838
  %width124 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %114, i32 0, i32 0, !dbg !9839
  %115 = load i64, i64* %width124, align 8, !dbg !9839
  %cmp125 = icmp slt i64 %113, %115, !dbg !9840
  br i1 %cmp125, label %for.body127, label %for.end137, !dbg !9841

for.body127:                                      ; preds = %for.cond123
  %116 = load i16*, i16** %p, align 8, !dbg !9842
  %incdec.ptr128 = getelementptr inbounds i16, i16* %116, i32 1, !dbg !9842
  store i16* %incdec.ptr128, i16** %p, align 8, !dbg !9842
  %117 = load i16, i16* %116, align 2, !dbg !9842
  %118 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9842
  %red129 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %118, i32 0, i32 2, !dbg !9842
  store i16 %117, i16* %red129, align 2, !dbg !9842
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9844
  %red130 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 2, !dbg !9844
  %120 = load i16, i16* %red130, align 2, !dbg !9844
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9844
  %green131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i32 0, i32 1, !dbg !9844
  store i16 %120, i16* %green131, align 2, !dbg !9844
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9845
  %red132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 2, !dbg !9845
  %123 = load i16, i16* %red132, align 2, !dbg !9845
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9845
  %blue133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 0, i32 0, !dbg !9845
  store i16 %123, i16* %blue133, align 2, !dbg !9845
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9846
  %incdec.ptr134 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 1, !dbg !9846
  store %struct._PixelPacket* %incdec.ptr134, %struct._PixelPacket** %q, align 8, !dbg !9846
  br label %for.inc135, !dbg !9847

for.inc135:                                       ; preds = %for.body127
  %126 = load i64, i64* %x, align 8, !dbg !9848
  %inc136 = add nsw i64 %126, 1, !dbg !9848
  store i64 %inc136, i64* %x, align 8, !dbg !9848
  br label %for.cond123, !dbg !9849, !llvm.loop !9850

for.end137:                                       ; preds = %for.cond123
  %127 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9852
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9854
  %call138 = call i32 @SyncAuthenticPixels(%struct._Image* %127, %struct._ExceptionInfo* %128), !dbg !9855
  %cmp139 = icmp eq i32 %call138, 0, !dbg !9856
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !9857

if.then141:                                       ; preds = %for.end137
  br label %for.end145, !dbg !9858

if.end142:                                        ; preds = %for.end137
  br label %for.inc143, !dbg !9859

for.inc143:                                       ; preds = %if.end142
  %129 = load i64, i64* %y, align 8, !dbg !9860
  %inc144 = add nsw i64 %129, 1, !dbg !9860
  store i64 %inc144, i64* %y, align 8, !dbg !9860
  br label %for.cond109, !dbg !9861, !llvm.loop !9862

for.end145:                                       ; preds = %if.then141, %if.then121, %for.cond109
  br label %for.end343, !dbg !9864

if.end146:                                        ; preds = %if.end104
  %130 = load i8*, i8** %map.addr, align 8, !dbg !9865
  %call147 = call i32 @LocaleCompare(i8* %130, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !9867
  %cmp148 = icmp eq i32 %call147, 0, !dbg !9868
  br i1 %cmp148, label %if.then150, label %if.end188, !dbg !9869

if.then150:                                       ; preds = %if.end146
  store i64 0, i64* %y, align 8, !dbg !9870
  br label %for.cond151, !dbg !9873

for.cond151:                                      ; preds = %for.inc185, %if.then150
  %131 = load i64, i64* %y, align 8, !dbg !9874
  %132 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9876
  %height152 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %132, i32 0, i32 1, !dbg !9877
  %133 = load i64, i64* %height152, align 8, !dbg !9877
  %cmp153 = icmp slt i64 %131, %133, !dbg !9878
  br i1 %cmp153, label %for.body155, label %for.end187, !dbg !9879

for.body155:                                      ; preds = %for.cond151
  %134 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9880
  %135 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9882
  %x156 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %135, i32 0, i32 2, !dbg !9883
  %136 = load i64, i64* %x156, align 8, !dbg !9883
  %137 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9884
  %y157 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %137, i32 0, i32 3, !dbg !9885
  %138 = load i64, i64* %y157, align 8, !dbg !9885
  %139 = load i64, i64* %y, align 8, !dbg !9886
  %add158 = add nsw i64 %138, %139, !dbg !9887
  %140 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9888
  %width159 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %140, i32 0, i32 0, !dbg !9889
  %141 = load i64, i64* %width159, align 8, !dbg !9889
  %142 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9890
  %call160 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %134, i64 %136, i64 %add158, i64 %141, i64 1, %struct._ExceptionInfo* %142), !dbg !9891
  store %struct._PixelPacket* %call160, %struct._PixelPacket** %q, align 8, !dbg !9892
  %143 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9893
  %cmp161 = icmp eq %struct._PixelPacket* %143, null, !dbg !9895
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !9896

if.then163:                                       ; preds = %for.body155
  br label %for.end187, !dbg !9897

if.end164:                                        ; preds = %for.body155
  store i64 0, i64* %x, align 8, !dbg !9898
  br label %for.cond165, !dbg !9900

for.cond165:                                      ; preds = %for.inc177, %if.end164
  %144 = load i64, i64* %x, align 8, !dbg !9901
  %145 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9903
  %width166 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %145, i32 0, i32 0, !dbg !9904
  %146 = load i64, i64* %width166, align 8, !dbg !9904
  %cmp167 = icmp slt i64 %144, %146, !dbg !9905
  br i1 %cmp167, label %for.body169, label %for.end179, !dbg !9906

for.body169:                                      ; preds = %for.cond165
  %147 = load i16*, i16** %p, align 8, !dbg !9907
  %incdec.ptr170 = getelementptr inbounds i16, i16* %147, i32 1, !dbg !9907
  store i16* %incdec.ptr170, i16** %p, align 8, !dbg !9907
  %148 = load i16, i16* %147, align 2, !dbg !9907
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9907
  %red171 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 0, i32 2, !dbg !9907
  store i16 %148, i16* %red171, align 2, !dbg !9907
  %150 = load i16*, i16** %p, align 8, !dbg !9909
  %incdec.ptr172 = getelementptr inbounds i16, i16* %150, i32 1, !dbg !9909
  store i16* %incdec.ptr172, i16** %p, align 8, !dbg !9909
  %151 = load i16, i16* %150, align 2, !dbg !9909
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9909
  %green173 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 0, i32 1, !dbg !9909
  store i16 %151, i16* %green173, align 2, !dbg !9909
  %153 = load i16*, i16** %p, align 8, !dbg !9910
  %incdec.ptr174 = getelementptr inbounds i16, i16* %153, i32 1, !dbg !9910
  store i16* %incdec.ptr174, i16** %p, align 8, !dbg !9910
  %154 = load i16, i16* %153, align 2, !dbg !9910
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9910
  %blue175 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %155, i32 0, i32 0, !dbg !9910
  store i16 %154, i16* %blue175, align 2, !dbg !9910
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9911
  %incdec.ptr176 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 1, !dbg !9911
  store %struct._PixelPacket* %incdec.ptr176, %struct._PixelPacket** %q, align 8, !dbg !9911
  br label %for.inc177, !dbg !9912

for.inc177:                                       ; preds = %for.body169
  %157 = load i64, i64* %x, align 8, !dbg !9913
  %inc178 = add nsw i64 %157, 1, !dbg !9913
  store i64 %inc178, i64* %x, align 8, !dbg !9913
  br label %for.cond165, !dbg !9914, !llvm.loop !9915

for.end179:                                       ; preds = %for.cond165
  %158 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9917
  %159 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9919
  %call180 = call i32 @SyncAuthenticPixels(%struct._Image* %158, %struct._ExceptionInfo* %159), !dbg !9920
  %cmp181 = icmp eq i32 %call180, 0, !dbg !9921
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !9922

if.then183:                                       ; preds = %for.end179
  br label %for.end187, !dbg !9923

if.end184:                                        ; preds = %for.end179
  br label %for.inc185, !dbg !9924

for.inc185:                                       ; preds = %if.end184
  %160 = load i64, i64* %y, align 8, !dbg !9925
  %inc186 = add nsw i64 %160, 1, !dbg !9925
  store i64 %inc186, i64* %y, align 8, !dbg !9925
  br label %for.cond151, !dbg !9926, !llvm.loop !9927

for.end187:                                       ; preds = %if.then183, %if.then163, %for.cond151
  br label %for.end343, !dbg !9929

if.end188:                                        ; preds = %if.end146
  %161 = load i8*, i8** %map.addr, align 8, !dbg !9930
  %call189 = call i32 @LocaleCompare(i8* %161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !9932
  %cmp190 = icmp eq i32 %call189, 0, !dbg !9933
  br i1 %cmp190, label %if.then192, label %if.end235, !dbg !9934

if.then192:                                       ; preds = %if.end188
  store i64 0, i64* %y, align 8, !dbg !9935
  br label %for.cond193, !dbg !9938

for.cond193:                                      ; preds = %for.inc232, %if.then192
  %162 = load i64, i64* %y, align 8, !dbg !9939
  %163 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9941
  %height194 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %163, i32 0, i32 1, !dbg !9942
  %164 = load i64, i64* %height194, align 8, !dbg !9942
  %cmp195 = icmp slt i64 %162, %164, !dbg !9943
  br i1 %cmp195, label %for.body197, label %for.end234, !dbg !9944

for.body197:                                      ; preds = %for.cond193
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9945
  %166 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9947
  %x198 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %166, i32 0, i32 2, !dbg !9948
  %167 = load i64, i64* %x198, align 8, !dbg !9948
  %168 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9949
  %y199 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %168, i32 0, i32 3, !dbg !9950
  %169 = load i64, i64* %y199, align 8, !dbg !9950
  %170 = load i64, i64* %y, align 8, !dbg !9951
  %add200 = add nsw i64 %169, %170, !dbg !9952
  %171 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9953
  %width201 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %171, i32 0, i32 0, !dbg !9954
  %172 = load i64, i64* %width201, align 8, !dbg !9954
  %173 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9955
  %call202 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %165, i64 %167, i64 %add200, i64 %172, i64 1, %struct._ExceptionInfo* %173), !dbg !9956
  store %struct._PixelPacket* %call202, %struct._PixelPacket** %q, align 8, !dbg !9957
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9958
  %cmp203 = icmp eq %struct._PixelPacket* %174, null, !dbg !9960
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !9961

if.then205:                                       ; preds = %for.body197
  br label %for.end234, !dbg !9962

if.end206:                                        ; preds = %for.body197
  store i64 0, i64* %x, align 8, !dbg !9963
  br label %for.cond207, !dbg !9965

for.cond207:                                      ; preds = %for.inc224, %if.end206
  %175 = load i64, i64* %x, align 8, !dbg !9966
  %176 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !9968
  %width208 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %176, i32 0, i32 0, !dbg !9969
  %177 = load i64, i64* %width208, align 8, !dbg !9969
  %cmp209 = icmp slt i64 %175, %177, !dbg !9970
  br i1 %cmp209, label %for.body211, label %for.end226, !dbg !9971

for.body211:                                      ; preds = %for.cond207
  %178 = load i16*, i16** %p, align 8, !dbg !9972
  %incdec.ptr212 = getelementptr inbounds i16, i16* %178, i32 1, !dbg !9972
  store i16* %incdec.ptr212, i16** %p, align 8, !dbg !9972
  %179 = load i16, i16* %178, align 2, !dbg !9972
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9972
  %red213 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 2, !dbg !9972
  store i16 %179, i16* %red213, align 2, !dbg !9972
  %181 = load i16*, i16** %p, align 8, !dbg !9974
  %incdec.ptr214 = getelementptr inbounds i16, i16* %181, i32 1, !dbg !9974
  store i16* %incdec.ptr214, i16** %p, align 8, !dbg !9974
  %182 = load i16, i16* %181, align 2, !dbg !9974
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9974
  %green215 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 0, i32 1, !dbg !9974
  store i16 %182, i16* %green215, align 2, !dbg !9974
  %184 = load i16*, i16** %p, align 8, !dbg !9975
  %incdec.ptr216 = getelementptr inbounds i16, i16* %184, i32 1, !dbg !9975
  store i16* %incdec.ptr216, i16** %p, align 8, !dbg !9975
  %185 = load i16, i16* %184, align 2, !dbg !9975
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9975
  %blue217 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 0, !dbg !9975
  store i16 %185, i16* %blue217, align 2, !dbg !9975
  %187 = load i16*, i16** %p, align 8, !dbg !9976
  %incdec.ptr218 = getelementptr inbounds i16, i16* %187, i32 1, !dbg !9976
  store i16* %incdec.ptr218, i16** %p, align 8, !dbg !9976
  %188 = load i16, i16* %187, align 2, !dbg !9976
  %conv219 = zext i16 %188 to i32, !dbg !9976
  %sub220 = sub nsw i32 65535, %conv219, !dbg !9976
  %conv221 = trunc i32 %sub220 to i16, !dbg !9976
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9976
  %opacity222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %189, i32 0, i32 3, !dbg !9976
  store i16 %conv221, i16* %opacity222, align 2, !dbg !9976
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9977
  %incdec.ptr223 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i32 1, !dbg !9977
  store %struct._PixelPacket* %incdec.ptr223, %struct._PixelPacket** %q, align 8, !dbg !9977
  br label %for.inc224, !dbg !9978

for.inc224:                                       ; preds = %for.body211
  %191 = load i64, i64* %x, align 8, !dbg !9979
  %inc225 = add nsw i64 %191, 1, !dbg !9979
  store i64 %inc225, i64* %x, align 8, !dbg !9979
  br label %for.cond207, !dbg !9980, !llvm.loop !9981

for.end226:                                       ; preds = %for.cond207
  %192 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9983
  %193 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9985
  %call227 = call i32 @SyncAuthenticPixels(%struct._Image* %192, %struct._ExceptionInfo* %193), !dbg !9986
  %cmp228 = icmp eq i32 %call227, 0, !dbg !9987
  br i1 %cmp228, label %if.then230, label %if.end231, !dbg !9988

if.then230:                                       ; preds = %for.end226
  br label %for.end234, !dbg !9989

if.end231:                                        ; preds = %for.end226
  br label %for.inc232, !dbg !9990

for.inc232:                                       ; preds = %if.end231
  %194 = load i64, i64* %y, align 8, !dbg !9991
  %inc233 = add nsw i64 %194, 1, !dbg !9991
  store i64 %inc233, i64* %y, align 8, !dbg !9991
  br label %for.cond193, !dbg !9992, !llvm.loop !9993

for.end234:                                       ; preds = %if.then230, %if.then205, %for.cond193
  br label %for.end343, !dbg !9995

if.end235:                                        ; preds = %if.end188
  %195 = load i8*, i8** %map.addr, align 8, !dbg !9996
  %call236 = call i32 @LocaleCompare(i8* %195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !9998
  %cmp237 = icmp eq i32 %call236, 0, !dbg !9999
  br i1 %cmp237, label %if.then239, label %if.end278, !dbg !10000

if.then239:                                       ; preds = %if.end235
  store i64 0, i64* %y, align 8, !dbg !10001
  br label %for.cond240, !dbg !10004

for.cond240:                                      ; preds = %for.inc275, %if.then239
  %196 = load i64, i64* %y, align 8, !dbg !10005
  %197 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10007
  %height241 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %197, i32 0, i32 1, !dbg !10008
  %198 = load i64, i64* %height241, align 8, !dbg !10008
  %cmp242 = icmp slt i64 %196, %198, !dbg !10009
  br i1 %cmp242, label %for.body244, label %for.end277, !dbg !10010

for.body244:                                      ; preds = %for.cond240
  %199 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10011
  %200 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10013
  %x245 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %200, i32 0, i32 2, !dbg !10014
  %201 = load i64, i64* %x245, align 8, !dbg !10014
  %202 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10015
  %y246 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %202, i32 0, i32 3, !dbg !10016
  %203 = load i64, i64* %y246, align 8, !dbg !10016
  %204 = load i64, i64* %y, align 8, !dbg !10017
  %add247 = add nsw i64 %203, %204, !dbg !10018
  %205 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10019
  %width248 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %205, i32 0, i32 0, !dbg !10020
  %206 = load i64, i64* %width248, align 8, !dbg !10020
  %207 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10021
  %call249 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %199, i64 %201, i64 %add247, i64 %206, i64 1, %struct._ExceptionInfo* %207), !dbg !10022
  store %struct._PixelPacket* %call249, %struct._PixelPacket** %q, align 8, !dbg !10023
  %208 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10024
  %cmp250 = icmp eq %struct._PixelPacket* %208, null, !dbg !10026
  br i1 %cmp250, label %if.then252, label %if.end253, !dbg !10027

if.then252:                                       ; preds = %for.body244
  br label %for.end277, !dbg !10028

if.end253:                                        ; preds = %for.body244
  store i64 0, i64* %x, align 8, !dbg !10029
  br label %for.cond254, !dbg !10031

for.cond254:                                      ; preds = %for.inc267, %if.end253
  %209 = load i64, i64* %x, align 8, !dbg !10032
  %210 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10034
  %width255 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %210, i32 0, i32 0, !dbg !10035
  %211 = load i64, i64* %width255, align 8, !dbg !10035
  %cmp256 = icmp slt i64 %209, %211, !dbg !10036
  br i1 %cmp256, label %for.body258, label %for.end269, !dbg !10037

for.body258:                                      ; preds = %for.cond254
  %212 = load i16*, i16** %p, align 8, !dbg !10038
  %incdec.ptr259 = getelementptr inbounds i16, i16* %212, i32 1, !dbg !10038
  store i16* %incdec.ptr259, i16** %p, align 8, !dbg !10038
  %213 = load i16, i16* %212, align 2, !dbg !10038
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10038
  %red260 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 0, i32 2, !dbg !10038
  store i16 %213, i16* %red260, align 2, !dbg !10038
  %215 = load i16*, i16** %p, align 8, !dbg !10040
  %incdec.ptr261 = getelementptr inbounds i16, i16* %215, i32 1, !dbg !10040
  store i16* %incdec.ptr261, i16** %p, align 8, !dbg !10040
  %216 = load i16, i16* %215, align 2, !dbg !10040
  %217 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10040
  %green262 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %217, i32 0, i32 1, !dbg !10040
  store i16 %216, i16* %green262, align 2, !dbg !10040
  %218 = load i16*, i16** %p, align 8, !dbg !10041
  %incdec.ptr263 = getelementptr inbounds i16, i16* %218, i32 1, !dbg !10041
  store i16* %incdec.ptr263, i16** %p, align 8, !dbg !10041
  %219 = load i16, i16* %218, align 2, !dbg !10041
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10041
  %blue264 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 0, !dbg !10041
  store i16 %219, i16* %blue264, align 2, !dbg !10041
  %221 = load i16*, i16** %p, align 8, !dbg !10042
  %incdec.ptr265 = getelementptr inbounds i16, i16* %221, i32 1, !dbg !10042
  store i16* %incdec.ptr265, i16** %p, align 8, !dbg !10042
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10043
  %incdec.ptr266 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 1, !dbg !10043
  store %struct._PixelPacket* %incdec.ptr266, %struct._PixelPacket** %q, align 8, !dbg !10043
  br label %for.inc267, !dbg !10044

for.inc267:                                       ; preds = %for.body258
  %223 = load i64, i64* %x, align 8, !dbg !10045
  %inc268 = add nsw i64 %223, 1, !dbg !10045
  store i64 %inc268, i64* %x, align 8, !dbg !10045
  br label %for.cond254, !dbg !10046, !llvm.loop !10047

for.end269:                                       ; preds = %for.cond254
  %224 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10049
  %225 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10051
  %call270 = call i32 @SyncAuthenticPixels(%struct._Image* %224, %struct._ExceptionInfo* %225), !dbg !10052
  %cmp271 = icmp eq i32 %call270, 0, !dbg !10053
  br i1 %cmp271, label %if.then273, label %if.end274, !dbg !10054

if.then273:                                       ; preds = %for.end269
  br label %for.end277, !dbg !10055

if.end274:                                        ; preds = %for.end269
  br label %for.inc275, !dbg !10056

for.inc275:                                       ; preds = %if.end274
  %226 = load i64, i64* %y, align 8, !dbg !10057
  %inc276 = add nsw i64 %226, 1, !dbg !10057
  store i64 %inc276, i64* %y, align 8, !dbg !10057
  br label %for.cond240, !dbg !10058, !llvm.loop !10059

for.end277:                                       ; preds = %if.then273, %if.then252, %for.cond240
  br label %for.end343, !dbg !10061

if.end278:                                        ; preds = %if.end235
  %227 = load i8*, i8** %map.addr, align 8, !dbg !10062
  %call279 = call i64 @strlen(i8* %227) #13, !dbg !10063
  store i64 %call279, i64* %length, align 8, !dbg !10064
  store i64 0, i64* %y, align 8, !dbg !10065
  br label %for.cond280, !dbg !10067

for.cond280:                                      ; preds = %for.inc341, %if.end278
  %228 = load i64, i64* %y, align 8, !dbg !10068
  %229 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10070
  %height281 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %229, i32 0, i32 1, !dbg !10071
  %230 = load i64, i64* %height281, align 8, !dbg !10071
  %cmp282 = icmp slt i64 %228, %230, !dbg !10072
  br i1 %cmp282, label %for.body284, label %for.end343, !dbg !10073

for.body284:                                      ; preds = %for.cond280
  %231 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10074
  %232 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10076
  %x285 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %232, i32 0, i32 2, !dbg !10077
  %233 = load i64, i64* %x285, align 8, !dbg !10077
  %234 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10078
  %y286 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %234, i32 0, i32 3, !dbg !10079
  %235 = load i64, i64* %y286, align 8, !dbg !10079
  %236 = load i64, i64* %y, align 8, !dbg !10080
  %add287 = add nsw i64 %235, %236, !dbg !10081
  %237 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10082
  %width288 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %237, i32 0, i32 0, !dbg !10083
  %238 = load i64, i64* %width288, align 8, !dbg !10083
  %239 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10084
  %call289 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %231, i64 %233, i64 %add287, i64 %238, i64 1, %struct._ExceptionInfo* %239), !dbg !10085
  store %struct._PixelPacket* %call289, %struct._PixelPacket** %q, align 8, !dbg !10086
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10087
  %cmp290 = icmp eq %struct._PixelPacket* %240, null, !dbg !10089
  br i1 %cmp290, label %if.then292, label %if.end293, !dbg !10090

if.then292:                                       ; preds = %for.body284
  br label %for.end343, !dbg !10091

if.end293:                                        ; preds = %for.body284
  %241 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10092
  %call294 = call i16* @GetAuthenticIndexQueue(%struct._Image* %241), !dbg !10093
  store i16* %call294, i16** %indexes, align 8, !dbg !10094
  store i64 0, i64* %x, align 8, !dbg !10095
  br label %for.cond295, !dbg !10097

for.cond295:                                      ; preds = %for.inc333, %if.end293
  %242 = load i64, i64* %x, align 8, !dbg !10098
  %243 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10100
  %width296 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %243, i32 0, i32 0, !dbg !10101
  %244 = load i64, i64* %width296, align 8, !dbg !10101
  %cmp297 = icmp slt i64 %242, %244, !dbg !10102
  br i1 %cmp297, label %for.body299, label %for.end335, !dbg !10103

for.body299:                                      ; preds = %for.cond295
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10104, metadata !DIExpression()), !dbg !10106
  store i64 0, i64* %i, align 8, !dbg !10107
  br label %for.cond300, !dbg !10109

for.cond300:                                      ; preds = %for.inc329, %for.body299
  %245 = load i64, i64* %i, align 8, !dbg !10110
  %246 = load i64, i64* %length, align 8, !dbg !10112
  %cmp301 = icmp slt i64 %245, %246, !dbg !10113
  br i1 %cmp301, label %for.body303, label %for.end331, !dbg !10114

for.body303:                                      ; preds = %for.cond300
  %247 = load i32*, i32** %quantum_map.addr, align 8, !dbg !10115
  %248 = load i64, i64* %i, align 8, !dbg !10117
  %arrayidx = getelementptr inbounds i32, i32* %247, i64 %248, !dbg !10115
  %249 = load i32, i32* %arrayidx, align 4, !dbg !10115
  switch i32 %249, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb305
    i32 12, label %sw.bb305
    i32 3, label %sw.bb307
    i32 19, label %sw.bb307
    i32 1, label %sw.bb309
    i32 13, label %sw.bb314
    i32 2, label %sw.bb316
    i32 11, label %sw.bb322
  ], !dbg !10118

sw.bb:                                            ; preds = %for.body303, %for.body303
  %250 = load i16*, i16** %p, align 8, !dbg !10119
  %251 = load i16, i16* %250, align 2, !dbg !10119
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10119
  %red304 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 2, !dbg !10119
  store i16 %251, i16* %red304, align 2, !dbg !10119
  br label %sw.epilog, !dbg !10122

sw.bb305:                                         ; preds = %for.body303, %for.body303
  %253 = load i16*, i16** %p, align 8, !dbg !10123
  %254 = load i16, i16* %253, align 2, !dbg !10123
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10123
  %green306 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %255, i32 0, i32 1, !dbg !10123
  store i16 %254, i16* %green306, align 2, !dbg !10123
  br label %sw.epilog, !dbg !10125

sw.bb307:                                         ; preds = %for.body303, %for.body303
  %256 = load i16*, i16** %p, align 8, !dbg !10126
  %257 = load i16, i16* %256, align 2, !dbg !10126
  %258 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10126
  %blue308 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %258, i32 0, i32 0, !dbg !10126
  store i16 %257, i16* %blue308, align 2, !dbg !10126
  br label %sw.epilog, !dbg !10128

sw.bb309:                                         ; preds = %for.body303
  %259 = load i16*, i16** %p, align 8, !dbg !10129
  %260 = load i16, i16* %259, align 2, !dbg !10129
  %conv310 = zext i16 %260 to i32, !dbg !10129
  %sub311 = sub nsw i32 65535, %conv310, !dbg !10129
  %conv312 = trunc i32 %sub311 to i16, !dbg !10129
  %261 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10129
  %opacity313 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %261, i32 0, i32 3, !dbg !10129
  store i16 %conv312, i16* %opacity313, align 2, !dbg !10129
  br label %sw.epilog, !dbg !10131

sw.bb314:                                         ; preds = %for.body303
  %262 = load i16*, i16** %p, align 8, !dbg !10132
  %263 = load i16, i16* %262, align 2, !dbg !10132
  %264 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10132
  %opacity315 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %264, i32 0, i32 3, !dbg !10132
  store i16 %263, i16* %opacity315, align 2, !dbg !10132
  br label %sw.epilog, !dbg !10134

sw.bb316:                                         ; preds = %for.body303
  %265 = load i16*, i16** %indexes, align 8, !dbg !10135
  %266 = load i64, i64* %x, align 8, !dbg !10135
  %add.ptr = getelementptr inbounds i16, i16* %265, i64 %266, !dbg !10135
  %cmp317 = icmp ne i16* %add.ptr, null, !dbg !10135
  br i1 %cmp317, label %if.then319, label %if.end321, !dbg !10139

if.then319:                                       ; preds = %sw.bb316
  %267 = load i16*, i16** %p, align 8, !dbg !10135
  %268 = load i16, i16* %267, align 2, !dbg !10135
  %269 = load i16*, i16** %indexes, align 8, !dbg !10135
  %270 = load i64, i64* %x, align 8, !dbg !10135
  %add.ptr320 = getelementptr inbounds i16, i16* %269, i64 %270, !dbg !10135
  store i16 %268, i16* %add.ptr320, align 2, !dbg !10135
  br label %if.end321, !dbg !10135

if.end321:                                        ; preds = %if.then319, %sw.bb316
  br label %sw.epilog, !dbg !10140

sw.bb322:                                         ; preds = %for.body303
  %271 = load i16*, i16** %p, align 8, !dbg !10141
  %272 = load i16, i16* %271, align 2, !dbg !10141
  %273 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10141
  %red323 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %273, i32 0, i32 2, !dbg !10141
  store i16 %272, i16* %red323, align 2, !dbg !10141
  %274 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10143
  %red324 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %274, i32 0, i32 2, !dbg !10143
  %275 = load i16, i16* %red324, align 2, !dbg !10143
  %276 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10143
  %green325 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %276, i32 0, i32 1, !dbg !10143
  store i16 %275, i16* %green325, align 2, !dbg !10143
  %277 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10144
  %red326 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %277, i32 0, i32 2, !dbg !10144
  %278 = load i16, i16* %red326, align 2, !dbg !10144
  %279 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10144
  %blue327 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %279, i32 0, i32 0, !dbg !10144
  store i16 %278, i16* %blue327, align 2, !dbg !10144
  br label %sw.epilog, !dbg !10145

sw.default:                                       ; preds = %for.body303
  br label %sw.epilog, !dbg !10146

sw.epilog:                                        ; preds = %sw.default, %sw.bb322, %if.end321, %sw.bb314, %sw.bb309, %sw.bb307, %sw.bb305, %sw.bb
  %280 = load i16*, i16** %p, align 8, !dbg !10147
  %incdec.ptr328 = getelementptr inbounds i16, i16* %280, i32 1, !dbg !10147
  store i16* %incdec.ptr328, i16** %p, align 8, !dbg !10147
  br label %for.inc329, !dbg !10148

for.inc329:                                       ; preds = %sw.epilog
  %281 = load i64, i64* %i, align 8, !dbg !10149
  %inc330 = add nsw i64 %281, 1, !dbg !10149
  store i64 %inc330, i64* %i, align 8, !dbg !10149
  br label %for.cond300, !dbg !10150, !llvm.loop !10151

for.end331:                                       ; preds = %for.cond300
  %282 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10153
  %incdec.ptr332 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %282, i32 1, !dbg !10153
  store %struct._PixelPacket* %incdec.ptr332, %struct._PixelPacket** %q, align 8, !dbg !10153
  br label %for.inc333, !dbg !10154

for.inc333:                                       ; preds = %for.end331
  %283 = load i64, i64* %x, align 8, !dbg !10155
  %inc334 = add nsw i64 %283, 1, !dbg !10155
  store i64 %inc334, i64* %x, align 8, !dbg !10155
  br label %for.cond295, !dbg !10156, !llvm.loop !10157

for.end335:                                       ; preds = %for.cond295
  %284 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10159
  %285 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10161
  %call336 = call i32 @SyncAuthenticPixels(%struct._Image* %284, %struct._ExceptionInfo* %285), !dbg !10162
  %cmp337 = icmp eq i32 %call336, 0, !dbg !10163
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !10164

if.then339:                                       ; preds = %for.end335
  br label %for.end343, !dbg !10165

if.end340:                                        ; preds = %for.end335
  br label %for.inc341, !dbg !10166

for.inc341:                                       ; preds = %if.end340
  %286 = load i64, i64* %y, align 8, !dbg !10167
  %inc342 = add nsw i64 %286, 1, !dbg !10167
  store i64 %inc342, i64* %y, align 8, !dbg !10167
  br label %for.cond280, !dbg !10168, !llvm.loop !10169

for.end343:                                       ; preds = %for.end20, %for.end60, %for.end103, %for.end145, %for.end187, %for.end234, %for.end277, %if.then339, %if.then292, %for.cond280
  ret void, !dbg !10171
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportShortPixel(%struct._Image* %image, %struct._RectangleInfo* %roi, i8* noalias %map, i32* %quantum_map, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !10172 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %roi.addr = alloca %struct._RectangleInfo*, align 8
  %map.addr = alloca i8*, align 8
  %quantum_map.addr = alloca i32*, align 8
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %p = alloca i16*, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  store %struct._RectangleInfo* %roi, %struct._RectangleInfo** %roi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %roi.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !10177, metadata !DIExpression()), !dbg !10178
  store i32* %quantum_map, i32** %quantum_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum_map.addr, metadata !10179, metadata !DIExpression()), !dbg !10180
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !10181, metadata !DIExpression()), !dbg !10182
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !10183, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.declare(metadata i16** %p, metadata !10185, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !10188, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !10190, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.declare(metadata i64* %x, metadata !10192, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10194, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.declare(metadata i64* %y, metadata !10196, metadata !DIExpression()), !dbg !10197
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !10198
  %1 = bitcast i8* %0 to i16*, !dbg !10199
  store i16* %1, i16** %p, align 8, !dbg !10200
  %2 = load i8*, i8** %map.addr, align 8, !dbg !10201
  %call = call i32 @LocaleCompare(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !10203
  %cmp = icmp eq i32 %call, 0, !dbg !10204
  br i1 %cmp, label %if.then, label %if.end24, !dbg !10205

if.then:                                          ; preds = %entry
  store i64 0, i64* %y, align 8, !dbg !10206
  br label %for.cond, !dbg !10209

for.cond:                                         ; preds = %for.inc21, %if.then
  %3 = load i64, i64* %y, align 8, !dbg !10210
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10212
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 1, !dbg !10213
  %5 = load i64, i64* %height, align 8, !dbg !10213
  %cmp1 = icmp slt i64 %3, %5, !dbg !10214
  br i1 %cmp1, label %for.body, label %for.end23, !dbg !10215

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10216
  %7 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10218
  %x2 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %7, i32 0, i32 2, !dbg !10219
  %8 = load i64, i64* %x2, align 8, !dbg !10219
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10220
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %9, i32 0, i32 3, !dbg !10221
  %10 = load i64, i64* %y3, align 8, !dbg !10221
  %11 = load i64, i64* %y, align 8, !dbg !10222
  %add = add nsw i64 %10, %11, !dbg !10223
  %12 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10224
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %12, i32 0, i32 0, !dbg !10225
  %13 = load i64, i64* %width, align 8, !dbg !10225
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10226
  %call4 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %6, i64 %8, i64 %add, i64 %13, i64 1, %struct._ExceptionInfo* %14), !dbg !10227
  store %struct._PixelPacket* %call4, %struct._PixelPacket** %q, align 8, !dbg !10228
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10229
  %cmp5 = icmp eq %struct._PixelPacket* %15, null, !dbg !10231
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !10232

if.then6:                                         ; preds = %for.body
  br label %for.end23, !dbg !10233

if.end:                                           ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !10234
  br label %for.cond7, !dbg !10236

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i64, i64* %x, align 8, !dbg !10237
  %17 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10239
  %width8 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %17, i32 0, i32 0, !dbg !10240
  %18 = load i64, i64* %width8, align 8, !dbg !10240
  %cmp9 = icmp slt i64 %16, %18, !dbg !10241
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !10242

for.body10:                                       ; preds = %for.cond7
  %19 = load i16*, i16** %p, align 8, !dbg !10243
  %incdec.ptr = getelementptr inbounds i16, i16* %19, i32 1, !dbg !10243
  store i16* %incdec.ptr, i16** %p, align 8, !dbg !10243
  %20 = load i16, i16* %19, align 2, !dbg !10243
  %call11 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %20), !dbg !10243
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10243
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i32 0, i32 0, !dbg !10243
  store i16 %call11, i16* %blue, align 2, !dbg !10243
  %22 = load i16*, i16** %p, align 8, !dbg !10245
  %incdec.ptr12 = getelementptr inbounds i16, i16* %22, i32 1, !dbg !10245
  store i16* %incdec.ptr12, i16** %p, align 8, !dbg !10245
  %23 = load i16, i16* %22, align 2, !dbg !10245
  %call13 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %23), !dbg !10245
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10245
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 1, !dbg !10245
  store i16 %call13, i16* %green, align 2, !dbg !10245
  %25 = load i16*, i16** %p, align 8, !dbg !10246
  %incdec.ptr14 = getelementptr inbounds i16, i16* %25, i32 1, !dbg !10246
  store i16* %incdec.ptr14, i16** %p, align 8, !dbg !10246
  %26 = load i16, i16* %25, align 2, !dbg !10246
  %call15 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %26), !dbg !10246
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10246
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 2, !dbg !10246
  store i16 %call15, i16* %red, align 2, !dbg !10246
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10247
  %incdec.ptr16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 1, !dbg !10247
  store %struct._PixelPacket* %incdec.ptr16, %struct._PixelPacket** %q, align 8, !dbg !10247
  br label %for.inc, !dbg !10248

for.inc:                                          ; preds = %for.body10
  %29 = load i64, i64* %x, align 8, !dbg !10249
  %inc = add nsw i64 %29, 1, !dbg !10249
  store i64 %inc, i64* %x, align 8, !dbg !10249
  br label %for.cond7, !dbg !10250, !llvm.loop !10251

for.end:                                          ; preds = %for.cond7
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10253
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10255
  %call17 = call i32 @SyncAuthenticPixels(%struct._Image* %30, %struct._ExceptionInfo* %31), !dbg !10256
  %cmp18 = icmp eq i32 %call17, 0, !dbg !10257
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10258

if.then19:                                        ; preds = %for.end
  br label %for.end23, !dbg !10259

if.end20:                                         ; preds = %for.end
  br label %for.inc21, !dbg !10260

for.inc21:                                        ; preds = %if.end20
  %32 = load i64, i64* %y, align 8, !dbg !10261
  %inc22 = add nsw i64 %32, 1, !dbg !10261
  store i64 %inc22, i64* %y, align 8, !dbg !10261
  br label %for.cond, !dbg !10262, !llvm.loop !10263

for.end23:                                        ; preds = %if.then19, %if.then6, %for.cond
  br label %for.end371, !dbg !10265

if.end24:                                         ; preds = %entry
  %33 = load i8*, i8** %map.addr, align 8, !dbg !10266
  %call25 = call i32 @LocaleCompare(i8* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)), !dbg !10268
  %cmp26 = icmp eq i32 %call25, 0, !dbg !10269
  br i1 %cmp26, label %if.then27, label %if.end68, !dbg !10270

if.then27:                                        ; preds = %if.end24
  store i64 0, i64* %y, align 8, !dbg !10271
  br label %for.cond28, !dbg !10274

for.cond28:                                       ; preds = %for.inc65, %if.then27
  %34 = load i64, i64* %y, align 8, !dbg !10275
  %35 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10277
  %height29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %35, i32 0, i32 1, !dbg !10278
  %36 = load i64, i64* %height29, align 8, !dbg !10278
  %cmp30 = icmp slt i64 %34, %36, !dbg !10279
  br i1 %cmp30, label %for.body31, label %for.end67, !dbg !10280

for.body31:                                       ; preds = %for.cond28
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10281
  %38 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10283
  %x32 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %38, i32 0, i32 2, !dbg !10284
  %39 = load i64, i64* %x32, align 8, !dbg !10284
  %40 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10285
  %y33 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %40, i32 0, i32 3, !dbg !10286
  %41 = load i64, i64* %y33, align 8, !dbg !10286
  %42 = load i64, i64* %y, align 8, !dbg !10287
  %add34 = add nsw i64 %41, %42, !dbg !10288
  %43 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10289
  %width35 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %43, i32 0, i32 0, !dbg !10290
  %44 = load i64, i64* %width35, align 8, !dbg !10290
  %45 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10291
  %call36 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %37, i64 %39, i64 %add34, i64 %44, i64 1, %struct._ExceptionInfo* %45), !dbg !10292
  store %struct._PixelPacket* %call36, %struct._PixelPacket** %q, align 8, !dbg !10293
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10294
  %cmp37 = icmp eq %struct._PixelPacket* %46, null, !dbg !10296
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !10297

if.then38:                                        ; preds = %for.body31
  br label %for.end67, !dbg !10298

if.end39:                                         ; preds = %for.body31
  store i64 0, i64* %x, align 8, !dbg !10299
  br label %for.cond40, !dbg !10301

for.cond40:                                       ; preds = %for.inc57, %if.end39
  %47 = load i64, i64* %x, align 8, !dbg !10302
  %48 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10304
  %width41 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %48, i32 0, i32 0, !dbg !10305
  %49 = load i64, i64* %width41, align 8, !dbg !10305
  %cmp42 = icmp slt i64 %47, %49, !dbg !10306
  br i1 %cmp42, label %for.body43, label %for.end59, !dbg !10307

for.body43:                                       ; preds = %for.cond40
  %50 = load i16*, i16** %p, align 8, !dbg !10308
  %incdec.ptr44 = getelementptr inbounds i16, i16* %50, i32 1, !dbg !10308
  store i16* %incdec.ptr44, i16** %p, align 8, !dbg !10308
  %51 = load i16, i16* %50, align 2, !dbg !10308
  %call45 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %51), !dbg !10308
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10308
  %blue46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 0, !dbg !10308
  store i16 %call45, i16* %blue46, align 2, !dbg !10308
  %53 = load i16*, i16** %p, align 8, !dbg !10310
  %incdec.ptr47 = getelementptr inbounds i16, i16* %53, i32 1, !dbg !10310
  store i16* %incdec.ptr47, i16** %p, align 8, !dbg !10310
  %54 = load i16, i16* %53, align 2, !dbg !10310
  %call48 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %54), !dbg !10310
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10310
  %green49 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 1, !dbg !10310
  store i16 %call48, i16* %green49, align 2, !dbg !10310
  %56 = load i16*, i16** %p, align 8, !dbg !10311
  %incdec.ptr50 = getelementptr inbounds i16, i16* %56, i32 1, !dbg !10311
  store i16* %incdec.ptr50, i16** %p, align 8, !dbg !10311
  %57 = load i16, i16* %56, align 2, !dbg !10311
  %call51 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %57), !dbg !10311
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10311
  %red52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 2, !dbg !10311
  store i16 %call51, i16* %red52, align 2, !dbg !10311
  %59 = load i16*, i16** %p, align 8, !dbg !10312
  %incdec.ptr53 = getelementptr inbounds i16, i16* %59, i32 1, !dbg !10312
  store i16* %incdec.ptr53, i16** %p, align 8, !dbg !10312
  %60 = load i16, i16* %59, align 2, !dbg !10312
  %call54 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %60), !dbg !10312
  %conv = zext i16 %call54 to i32, !dbg !10312
  %sub = sub nsw i32 65535, %conv, !dbg !10312
  %conv55 = trunc i32 %sub to i16, !dbg !10312
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10312
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 3, !dbg !10312
  store i16 %conv55, i16* %opacity, align 2, !dbg !10312
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10313
  %incdec.ptr56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !10313
  store %struct._PixelPacket* %incdec.ptr56, %struct._PixelPacket** %q, align 8, !dbg !10313
  br label %for.inc57, !dbg !10314

for.inc57:                                        ; preds = %for.body43
  %63 = load i64, i64* %x, align 8, !dbg !10315
  %inc58 = add nsw i64 %63, 1, !dbg !10315
  store i64 %inc58, i64* %x, align 8, !dbg !10315
  br label %for.cond40, !dbg !10316, !llvm.loop !10317

for.end59:                                        ; preds = %for.cond40
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10319
  %65 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10321
  %call60 = call i32 @SyncAuthenticPixels(%struct._Image* %64, %struct._ExceptionInfo* %65), !dbg !10322
  %cmp61 = icmp eq i32 %call60, 0, !dbg !10323
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !10324

if.then63:                                        ; preds = %for.end59
  br label %for.end67, !dbg !10325

if.end64:                                         ; preds = %for.end59
  br label %for.inc65, !dbg !10326

for.inc65:                                        ; preds = %if.end64
  %66 = load i64, i64* %y, align 8, !dbg !10327
  %inc66 = add nsw i64 %66, 1, !dbg !10327
  store i64 %inc66, i64* %y, align 8, !dbg !10327
  br label %for.cond28, !dbg !10328, !llvm.loop !10329

for.end67:                                        ; preds = %if.then63, %if.then38, %for.cond28
  br label %for.end371, !dbg !10331

if.end68:                                         ; preds = %if.end24
  %67 = load i8*, i8** %map.addr, align 8, !dbg !10332
  %call69 = call i32 @LocaleCompare(i8* %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)), !dbg !10334
  %cmp70 = icmp eq i32 %call69, 0, !dbg !10335
  br i1 %cmp70, label %if.then72, label %if.end114, !dbg !10336

if.then72:                                        ; preds = %if.end68
  store i64 0, i64* %y, align 8, !dbg !10337
  br label %for.cond73, !dbg !10340

for.cond73:                                       ; preds = %for.inc111, %if.then72
  %68 = load i64, i64* %y, align 8, !dbg !10341
  %69 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10343
  %height74 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %69, i32 0, i32 1, !dbg !10344
  %70 = load i64, i64* %height74, align 8, !dbg !10344
  %cmp75 = icmp slt i64 %68, %70, !dbg !10345
  br i1 %cmp75, label %for.body77, label %for.end113, !dbg !10346

for.body77:                                       ; preds = %for.cond73
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10347
  %72 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10349
  %x78 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %72, i32 0, i32 2, !dbg !10350
  %73 = load i64, i64* %x78, align 8, !dbg !10350
  %74 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10351
  %y79 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %74, i32 0, i32 3, !dbg !10352
  %75 = load i64, i64* %y79, align 8, !dbg !10352
  %76 = load i64, i64* %y, align 8, !dbg !10353
  %add80 = add nsw i64 %75, %76, !dbg !10354
  %77 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10355
  %width81 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %77, i32 0, i32 0, !dbg !10356
  %78 = load i64, i64* %width81, align 8, !dbg !10356
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10357
  %call82 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %71, i64 %73, i64 %add80, i64 %78, i64 1, %struct._ExceptionInfo* %79), !dbg !10358
  store %struct._PixelPacket* %call82, %struct._PixelPacket** %q, align 8, !dbg !10359
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10360
  %cmp83 = icmp eq %struct._PixelPacket* %80, null, !dbg !10362
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !10363

if.then85:                                        ; preds = %for.body77
  br label %for.end113, !dbg !10364

if.end86:                                         ; preds = %for.body77
  store i64 0, i64* %x, align 8, !dbg !10365
  br label %for.cond87, !dbg !10367

for.cond87:                                       ; preds = %for.inc103, %if.end86
  %81 = load i64, i64* %x, align 8, !dbg !10368
  %82 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10370
  %width88 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %82, i32 0, i32 0, !dbg !10371
  %83 = load i64, i64* %width88, align 8, !dbg !10371
  %cmp89 = icmp slt i64 %81, %83, !dbg !10372
  br i1 %cmp89, label %for.body91, label %for.end105, !dbg !10373

for.body91:                                       ; preds = %for.cond87
  %84 = load i16*, i16** %p, align 8, !dbg !10374
  %incdec.ptr92 = getelementptr inbounds i16, i16* %84, i32 1, !dbg !10374
  store i16* %incdec.ptr92, i16** %p, align 8, !dbg !10374
  %85 = load i16, i16* %84, align 2, !dbg !10374
  %call93 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %85), !dbg !10374
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10374
  %blue94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 0, !dbg !10374
  store i16 %call93, i16* %blue94, align 2, !dbg !10374
  %87 = load i16*, i16** %p, align 8, !dbg !10376
  %incdec.ptr95 = getelementptr inbounds i16, i16* %87, i32 1, !dbg !10376
  store i16* %incdec.ptr95, i16** %p, align 8, !dbg !10376
  %88 = load i16, i16* %87, align 2, !dbg !10376
  %call96 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %88), !dbg !10376
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10376
  %green97 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 0, i32 1, !dbg !10376
  store i16 %call96, i16* %green97, align 2, !dbg !10376
  %90 = load i16*, i16** %p, align 8, !dbg !10377
  %incdec.ptr98 = getelementptr inbounds i16, i16* %90, i32 1, !dbg !10377
  store i16* %incdec.ptr98, i16** %p, align 8, !dbg !10377
  %91 = load i16, i16* %90, align 2, !dbg !10377
  %call99 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %91), !dbg !10377
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10377
  %red100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 2, !dbg !10377
  store i16 %call99, i16* %red100, align 2, !dbg !10377
  %93 = load i16*, i16** %p, align 8, !dbg !10378
  %incdec.ptr101 = getelementptr inbounds i16, i16* %93, i32 1, !dbg !10378
  store i16* %incdec.ptr101, i16** %p, align 8, !dbg !10378
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10379
  %incdec.ptr102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 1, !dbg !10379
  store %struct._PixelPacket* %incdec.ptr102, %struct._PixelPacket** %q, align 8, !dbg !10379
  br label %for.inc103, !dbg !10380

for.inc103:                                       ; preds = %for.body91
  %95 = load i64, i64* %x, align 8, !dbg !10381
  %inc104 = add nsw i64 %95, 1, !dbg !10381
  store i64 %inc104, i64* %x, align 8, !dbg !10381
  br label %for.cond87, !dbg !10382, !llvm.loop !10383

for.end105:                                       ; preds = %for.cond87
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10385
  %97 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10387
  %call106 = call i32 @SyncAuthenticPixels(%struct._Image* %96, %struct._ExceptionInfo* %97), !dbg !10388
  %cmp107 = icmp eq i32 %call106, 0, !dbg !10389
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !10390

if.then109:                                       ; preds = %for.end105
  br label %for.end113, !dbg !10391

if.end110:                                        ; preds = %for.end105
  br label %for.inc111, !dbg !10392

for.inc111:                                       ; preds = %if.end110
  %98 = load i64, i64* %y, align 8, !dbg !10393
  %inc112 = add nsw i64 %98, 1, !dbg !10393
  store i64 %inc112, i64* %y, align 8, !dbg !10393
  br label %for.cond73, !dbg !10394, !llvm.loop !10395

for.end113:                                       ; preds = %if.then109, %if.then85, %for.cond73
  br label %for.end371, !dbg !10397

if.end114:                                        ; preds = %if.end68
  %99 = load i8*, i8** %map.addr, align 8, !dbg !10398
  %call115 = call i32 @LocaleCompare(i8* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)), !dbg !10400
  %cmp116 = icmp eq i32 %call115, 0, !dbg !10401
  br i1 %cmp116, label %if.then118, label %if.end157, !dbg !10402

if.then118:                                       ; preds = %if.end114
  store i64 0, i64* %y, align 8, !dbg !10403
  br label %for.cond119, !dbg !10406

for.cond119:                                      ; preds = %for.inc154, %if.then118
  %100 = load i64, i64* %y, align 8, !dbg !10407
  %101 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10409
  %height120 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %101, i32 0, i32 1, !dbg !10410
  %102 = load i64, i64* %height120, align 8, !dbg !10410
  %cmp121 = icmp slt i64 %100, %102, !dbg !10411
  br i1 %cmp121, label %for.body123, label %for.end156, !dbg !10412

for.body123:                                      ; preds = %for.cond119
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10413
  %104 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10415
  %x124 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %104, i32 0, i32 2, !dbg !10416
  %105 = load i64, i64* %x124, align 8, !dbg !10416
  %106 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10417
  %y125 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %106, i32 0, i32 3, !dbg !10418
  %107 = load i64, i64* %y125, align 8, !dbg !10418
  %108 = load i64, i64* %y, align 8, !dbg !10419
  %add126 = add nsw i64 %107, %108, !dbg !10420
  %109 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10421
  %width127 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %109, i32 0, i32 0, !dbg !10422
  %110 = load i64, i64* %width127, align 8, !dbg !10422
  %111 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10423
  %call128 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %103, i64 %105, i64 %add126, i64 %110, i64 1, %struct._ExceptionInfo* %111), !dbg !10424
  store %struct._PixelPacket* %call128, %struct._PixelPacket** %q, align 8, !dbg !10425
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10426
  %cmp129 = icmp eq %struct._PixelPacket* %112, null, !dbg !10428
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !10429

if.then131:                                       ; preds = %for.body123
  br label %for.end156, !dbg !10430

if.end132:                                        ; preds = %for.body123
  store i64 0, i64* %x, align 8, !dbg !10431
  br label %for.cond133, !dbg !10433

for.cond133:                                      ; preds = %for.inc146, %if.end132
  %113 = load i64, i64* %x, align 8, !dbg !10434
  %114 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10436
  %width134 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %114, i32 0, i32 0, !dbg !10437
  %115 = load i64, i64* %width134, align 8, !dbg !10437
  %cmp135 = icmp slt i64 %113, %115, !dbg !10438
  br i1 %cmp135, label %for.body137, label %for.end148, !dbg !10439

for.body137:                                      ; preds = %for.cond133
  %116 = load i16*, i16** %p, align 8, !dbg !10440
  %incdec.ptr138 = getelementptr inbounds i16, i16* %116, i32 1, !dbg !10440
  store i16* %incdec.ptr138, i16** %p, align 8, !dbg !10440
  %117 = load i16, i16* %116, align 2, !dbg !10440
  %call139 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %117), !dbg !10440
  %118 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10440
  %red140 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %118, i32 0, i32 2, !dbg !10440
  store i16 %call139, i16* %red140, align 2, !dbg !10440
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10442
  %red141 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 2, !dbg !10442
  %120 = load i16, i16* %red141, align 2, !dbg !10442
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10442
  %green142 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i32 0, i32 1, !dbg !10442
  store i16 %120, i16* %green142, align 2, !dbg !10442
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10443
  %red143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 2, !dbg !10443
  %123 = load i16, i16* %red143, align 2, !dbg !10443
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10443
  %blue144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 0, i32 0, !dbg !10443
  store i16 %123, i16* %blue144, align 2, !dbg !10443
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10444
  %incdec.ptr145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 1, !dbg !10444
  store %struct._PixelPacket* %incdec.ptr145, %struct._PixelPacket** %q, align 8, !dbg !10444
  br label %for.inc146, !dbg !10445

for.inc146:                                       ; preds = %for.body137
  %126 = load i64, i64* %x, align 8, !dbg !10446
  %inc147 = add nsw i64 %126, 1, !dbg !10446
  store i64 %inc147, i64* %x, align 8, !dbg !10446
  br label %for.cond133, !dbg !10447, !llvm.loop !10448

for.end148:                                       ; preds = %for.cond133
  %127 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10450
  %128 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10452
  %call149 = call i32 @SyncAuthenticPixels(%struct._Image* %127, %struct._ExceptionInfo* %128), !dbg !10453
  %cmp150 = icmp eq i32 %call149, 0, !dbg !10454
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !10455

if.then152:                                       ; preds = %for.end148
  br label %for.end156, !dbg !10456

if.end153:                                        ; preds = %for.end148
  br label %for.inc154, !dbg !10457

for.inc154:                                       ; preds = %if.end153
  %129 = load i64, i64* %y, align 8, !dbg !10458
  %inc155 = add nsw i64 %129, 1, !dbg !10458
  store i64 %inc155, i64* %y, align 8, !dbg !10458
  br label %for.cond119, !dbg !10459, !llvm.loop !10460

for.end156:                                       ; preds = %if.then152, %if.then131, %for.cond119
  br label %for.end371, !dbg !10462

if.end157:                                        ; preds = %if.end114
  %130 = load i8*, i8** %map.addr, align 8, !dbg !10463
  %call158 = call i32 @LocaleCompare(i8* %130, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)), !dbg !10465
  %cmp159 = icmp eq i32 %call158, 0, !dbg !10466
  br i1 %cmp159, label %if.then161, label %if.end202, !dbg !10467

if.then161:                                       ; preds = %if.end157
  store i64 0, i64* %y, align 8, !dbg !10468
  br label %for.cond162, !dbg !10471

for.cond162:                                      ; preds = %for.inc199, %if.then161
  %131 = load i64, i64* %y, align 8, !dbg !10472
  %132 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10474
  %height163 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %132, i32 0, i32 1, !dbg !10475
  %133 = load i64, i64* %height163, align 8, !dbg !10475
  %cmp164 = icmp slt i64 %131, %133, !dbg !10476
  br i1 %cmp164, label %for.body166, label %for.end201, !dbg !10477

for.body166:                                      ; preds = %for.cond162
  %134 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10478
  %135 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10480
  %x167 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %135, i32 0, i32 2, !dbg !10481
  %136 = load i64, i64* %x167, align 8, !dbg !10481
  %137 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10482
  %y168 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %137, i32 0, i32 3, !dbg !10483
  %138 = load i64, i64* %y168, align 8, !dbg !10483
  %139 = load i64, i64* %y, align 8, !dbg !10484
  %add169 = add nsw i64 %138, %139, !dbg !10485
  %140 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10486
  %width170 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %140, i32 0, i32 0, !dbg !10487
  %141 = load i64, i64* %width170, align 8, !dbg !10487
  %142 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10488
  %call171 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %134, i64 %136, i64 %add169, i64 %141, i64 1, %struct._ExceptionInfo* %142), !dbg !10489
  store %struct._PixelPacket* %call171, %struct._PixelPacket** %q, align 8, !dbg !10490
  %143 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10491
  %cmp172 = icmp eq %struct._PixelPacket* %143, null, !dbg !10493
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !10494

if.then174:                                       ; preds = %for.body166
  br label %for.end201, !dbg !10495

if.end175:                                        ; preds = %for.body166
  store i64 0, i64* %x, align 8, !dbg !10496
  br label %for.cond176, !dbg !10498

for.cond176:                                      ; preds = %for.inc191, %if.end175
  %144 = load i64, i64* %x, align 8, !dbg !10499
  %145 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10501
  %width177 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %145, i32 0, i32 0, !dbg !10502
  %146 = load i64, i64* %width177, align 8, !dbg !10502
  %cmp178 = icmp slt i64 %144, %146, !dbg !10503
  br i1 %cmp178, label %for.body180, label %for.end193, !dbg !10504

for.body180:                                      ; preds = %for.cond176
  %147 = load i16*, i16** %p, align 8, !dbg !10505
  %incdec.ptr181 = getelementptr inbounds i16, i16* %147, i32 1, !dbg !10505
  store i16* %incdec.ptr181, i16** %p, align 8, !dbg !10505
  %148 = load i16, i16* %147, align 2, !dbg !10505
  %call182 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %148), !dbg !10505
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10505
  %red183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 0, i32 2, !dbg !10505
  store i16 %call182, i16* %red183, align 2, !dbg !10505
  %150 = load i16*, i16** %p, align 8, !dbg !10507
  %incdec.ptr184 = getelementptr inbounds i16, i16* %150, i32 1, !dbg !10507
  store i16* %incdec.ptr184, i16** %p, align 8, !dbg !10507
  %151 = load i16, i16* %150, align 2, !dbg !10507
  %call185 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %151), !dbg !10507
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10507
  %green186 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 0, i32 1, !dbg !10507
  store i16 %call185, i16* %green186, align 2, !dbg !10507
  %153 = load i16*, i16** %p, align 8, !dbg !10508
  %incdec.ptr187 = getelementptr inbounds i16, i16* %153, i32 1, !dbg !10508
  store i16* %incdec.ptr187, i16** %p, align 8, !dbg !10508
  %154 = load i16, i16* %153, align 2, !dbg !10508
  %call188 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %154), !dbg !10508
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10508
  %blue189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %155, i32 0, i32 0, !dbg !10508
  store i16 %call188, i16* %blue189, align 2, !dbg !10508
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10509
  %incdec.ptr190 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 1, !dbg !10509
  store %struct._PixelPacket* %incdec.ptr190, %struct._PixelPacket** %q, align 8, !dbg !10509
  br label %for.inc191, !dbg !10510

for.inc191:                                       ; preds = %for.body180
  %157 = load i64, i64* %x, align 8, !dbg !10511
  %inc192 = add nsw i64 %157, 1, !dbg !10511
  store i64 %inc192, i64* %x, align 8, !dbg !10511
  br label %for.cond176, !dbg !10512, !llvm.loop !10513

for.end193:                                       ; preds = %for.cond176
  %158 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10515
  %159 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10517
  %call194 = call i32 @SyncAuthenticPixels(%struct._Image* %158, %struct._ExceptionInfo* %159), !dbg !10518
  %cmp195 = icmp eq i32 %call194, 0, !dbg !10519
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !10520

if.then197:                                       ; preds = %for.end193
  br label %for.end201, !dbg !10521

if.end198:                                        ; preds = %for.end193
  br label %for.inc199, !dbg !10522

for.inc199:                                       ; preds = %if.end198
  %160 = load i64, i64* %y, align 8, !dbg !10523
  %inc200 = add nsw i64 %160, 1, !dbg !10523
  store i64 %inc200, i64* %y, align 8, !dbg !10523
  br label %for.cond162, !dbg !10524, !llvm.loop !10525

for.end201:                                       ; preds = %if.then197, %if.then174, %for.cond162
  br label %for.end371, !dbg !10527

if.end202:                                        ; preds = %if.end157
  %161 = load i8*, i8** %map.addr, align 8, !dbg !10528
  %call203 = call i32 @LocaleCompare(i8* %161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)), !dbg !10530
  %cmp204 = icmp eq i32 %call203, 0, !dbg !10531
  br i1 %cmp204, label %if.then206, label %if.end253, !dbg !10532

if.then206:                                       ; preds = %if.end202
  store i64 0, i64* %y, align 8, !dbg !10533
  br label %for.cond207, !dbg !10536

for.cond207:                                      ; preds = %for.inc250, %if.then206
  %162 = load i64, i64* %y, align 8, !dbg !10537
  %163 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10539
  %height208 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %163, i32 0, i32 1, !dbg !10540
  %164 = load i64, i64* %height208, align 8, !dbg !10540
  %cmp209 = icmp slt i64 %162, %164, !dbg !10541
  br i1 %cmp209, label %for.body211, label %for.end252, !dbg !10542

for.body211:                                      ; preds = %for.cond207
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10543
  %166 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10545
  %x212 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %166, i32 0, i32 2, !dbg !10546
  %167 = load i64, i64* %x212, align 8, !dbg !10546
  %168 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10547
  %y213 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %168, i32 0, i32 3, !dbg !10548
  %169 = load i64, i64* %y213, align 8, !dbg !10548
  %170 = load i64, i64* %y, align 8, !dbg !10549
  %add214 = add nsw i64 %169, %170, !dbg !10550
  %171 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10551
  %width215 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %171, i32 0, i32 0, !dbg !10552
  %172 = load i64, i64* %width215, align 8, !dbg !10552
  %173 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10553
  %call216 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %165, i64 %167, i64 %add214, i64 %172, i64 1, %struct._ExceptionInfo* %173), !dbg !10554
  store %struct._PixelPacket* %call216, %struct._PixelPacket** %q, align 8, !dbg !10555
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10556
  %cmp217 = icmp eq %struct._PixelPacket* %174, null, !dbg !10558
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !10559

if.then219:                                       ; preds = %for.body211
  br label %for.end252, !dbg !10560

if.end220:                                        ; preds = %for.body211
  store i64 0, i64* %x, align 8, !dbg !10561
  br label %for.cond221, !dbg !10563

for.cond221:                                      ; preds = %for.inc242, %if.end220
  %175 = load i64, i64* %x, align 8, !dbg !10564
  %176 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10566
  %width222 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %176, i32 0, i32 0, !dbg !10567
  %177 = load i64, i64* %width222, align 8, !dbg !10567
  %cmp223 = icmp slt i64 %175, %177, !dbg !10568
  br i1 %cmp223, label %for.body225, label %for.end244, !dbg !10569

for.body225:                                      ; preds = %for.cond221
  %178 = load i16*, i16** %p, align 8, !dbg !10570
  %incdec.ptr226 = getelementptr inbounds i16, i16* %178, i32 1, !dbg !10570
  store i16* %incdec.ptr226, i16** %p, align 8, !dbg !10570
  %179 = load i16, i16* %178, align 2, !dbg !10570
  %call227 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %179), !dbg !10570
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10570
  %red228 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 2, !dbg !10570
  store i16 %call227, i16* %red228, align 2, !dbg !10570
  %181 = load i16*, i16** %p, align 8, !dbg !10572
  %incdec.ptr229 = getelementptr inbounds i16, i16* %181, i32 1, !dbg !10572
  store i16* %incdec.ptr229, i16** %p, align 8, !dbg !10572
  %182 = load i16, i16* %181, align 2, !dbg !10572
  %call230 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %182), !dbg !10572
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10572
  %green231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 0, i32 1, !dbg !10572
  store i16 %call230, i16* %green231, align 2, !dbg !10572
  %184 = load i16*, i16** %p, align 8, !dbg !10573
  %incdec.ptr232 = getelementptr inbounds i16, i16* %184, i32 1, !dbg !10573
  store i16* %incdec.ptr232, i16** %p, align 8, !dbg !10573
  %185 = load i16, i16* %184, align 2, !dbg !10573
  %call233 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %185), !dbg !10573
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10573
  %blue234 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 0, !dbg !10573
  store i16 %call233, i16* %blue234, align 2, !dbg !10573
  %187 = load i16*, i16** %p, align 8, !dbg !10574
  %incdec.ptr235 = getelementptr inbounds i16, i16* %187, i32 1, !dbg !10574
  store i16* %incdec.ptr235, i16** %p, align 8, !dbg !10574
  %188 = load i16, i16* %187, align 2, !dbg !10574
  %call236 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %188), !dbg !10574
  %conv237 = zext i16 %call236 to i32, !dbg !10574
  %sub238 = sub nsw i32 65535, %conv237, !dbg !10574
  %conv239 = trunc i32 %sub238 to i16, !dbg !10574
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10574
  %opacity240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %189, i32 0, i32 3, !dbg !10574
  store i16 %conv239, i16* %opacity240, align 2, !dbg !10574
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10575
  %incdec.ptr241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i32 1, !dbg !10575
  store %struct._PixelPacket* %incdec.ptr241, %struct._PixelPacket** %q, align 8, !dbg !10575
  br label %for.inc242, !dbg !10576

for.inc242:                                       ; preds = %for.body225
  %191 = load i64, i64* %x, align 8, !dbg !10577
  %inc243 = add nsw i64 %191, 1, !dbg !10577
  store i64 %inc243, i64* %x, align 8, !dbg !10577
  br label %for.cond221, !dbg !10578, !llvm.loop !10579

for.end244:                                       ; preds = %for.cond221
  %192 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10581
  %193 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10583
  %call245 = call i32 @SyncAuthenticPixels(%struct._Image* %192, %struct._ExceptionInfo* %193), !dbg !10584
  %cmp246 = icmp eq i32 %call245, 0, !dbg !10585
  br i1 %cmp246, label %if.then248, label %if.end249, !dbg !10586

if.then248:                                       ; preds = %for.end244
  br label %for.end252, !dbg !10587

if.end249:                                        ; preds = %for.end244
  br label %for.inc250, !dbg !10588

for.inc250:                                       ; preds = %if.end249
  %194 = load i64, i64* %y, align 8, !dbg !10589
  %inc251 = add nsw i64 %194, 1, !dbg !10589
  store i64 %inc251, i64* %y, align 8, !dbg !10589
  br label %for.cond207, !dbg !10590, !llvm.loop !10591

for.end252:                                       ; preds = %if.then248, %if.then219, %for.cond207
  br label %for.end371, !dbg !10593

if.end253:                                        ; preds = %if.end202
  %195 = load i8*, i8** %map.addr, align 8, !dbg !10594
  %call254 = call i32 @LocaleCompare(i8* %195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !10596
  %cmp255 = icmp eq i32 %call254, 0, !dbg !10597
  br i1 %cmp255, label %if.then257, label %if.end299, !dbg !10598

if.then257:                                       ; preds = %if.end253
  store i64 0, i64* %y, align 8, !dbg !10599
  br label %for.cond258, !dbg !10602

for.cond258:                                      ; preds = %for.inc296, %if.then257
  %196 = load i64, i64* %y, align 8, !dbg !10603
  %197 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10605
  %height259 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %197, i32 0, i32 1, !dbg !10606
  %198 = load i64, i64* %height259, align 8, !dbg !10606
  %cmp260 = icmp slt i64 %196, %198, !dbg !10607
  br i1 %cmp260, label %for.body262, label %for.end298, !dbg !10608

for.body262:                                      ; preds = %for.cond258
  %199 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10609
  %200 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10611
  %x263 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %200, i32 0, i32 2, !dbg !10612
  %201 = load i64, i64* %x263, align 8, !dbg !10612
  %202 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10613
  %y264 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %202, i32 0, i32 3, !dbg !10614
  %203 = load i64, i64* %y264, align 8, !dbg !10614
  %204 = load i64, i64* %y, align 8, !dbg !10615
  %add265 = add nsw i64 %203, %204, !dbg !10616
  %205 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10617
  %width266 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %205, i32 0, i32 0, !dbg !10618
  %206 = load i64, i64* %width266, align 8, !dbg !10618
  %207 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10619
  %call267 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %199, i64 %201, i64 %add265, i64 %206, i64 1, %struct._ExceptionInfo* %207), !dbg !10620
  store %struct._PixelPacket* %call267, %struct._PixelPacket** %q, align 8, !dbg !10621
  %208 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10622
  %cmp268 = icmp eq %struct._PixelPacket* %208, null, !dbg !10624
  br i1 %cmp268, label %if.then270, label %if.end271, !dbg !10625

if.then270:                                       ; preds = %for.body262
  br label %for.end298, !dbg !10626

if.end271:                                        ; preds = %for.body262
  store i64 0, i64* %x, align 8, !dbg !10627
  br label %for.cond272, !dbg !10629

for.cond272:                                      ; preds = %for.inc288, %if.end271
  %209 = load i64, i64* %x, align 8, !dbg !10630
  %210 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10632
  %width273 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %210, i32 0, i32 0, !dbg !10633
  %211 = load i64, i64* %width273, align 8, !dbg !10633
  %cmp274 = icmp slt i64 %209, %211, !dbg !10634
  br i1 %cmp274, label %for.body276, label %for.end290, !dbg !10635

for.body276:                                      ; preds = %for.cond272
  %212 = load i16*, i16** %p, align 8, !dbg !10636
  %incdec.ptr277 = getelementptr inbounds i16, i16* %212, i32 1, !dbg !10636
  store i16* %incdec.ptr277, i16** %p, align 8, !dbg !10636
  %213 = load i16, i16* %212, align 2, !dbg !10636
  %call278 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %213), !dbg !10636
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10636
  %red279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 0, i32 2, !dbg !10636
  store i16 %call278, i16* %red279, align 2, !dbg !10636
  %215 = load i16*, i16** %p, align 8, !dbg !10638
  %incdec.ptr280 = getelementptr inbounds i16, i16* %215, i32 1, !dbg !10638
  store i16* %incdec.ptr280, i16** %p, align 8, !dbg !10638
  %216 = load i16, i16* %215, align 2, !dbg !10638
  %call281 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %216), !dbg !10638
  %217 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10638
  %green282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %217, i32 0, i32 1, !dbg !10638
  store i16 %call281, i16* %green282, align 2, !dbg !10638
  %218 = load i16*, i16** %p, align 8, !dbg !10639
  %incdec.ptr283 = getelementptr inbounds i16, i16* %218, i32 1, !dbg !10639
  store i16* %incdec.ptr283, i16** %p, align 8, !dbg !10639
  %219 = load i16, i16* %218, align 2, !dbg !10639
  %call284 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %219), !dbg !10639
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10639
  %blue285 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 0, !dbg !10639
  store i16 %call284, i16* %blue285, align 2, !dbg !10639
  %221 = load i16*, i16** %p, align 8, !dbg !10640
  %incdec.ptr286 = getelementptr inbounds i16, i16* %221, i32 1, !dbg !10640
  store i16* %incdec.ptr286, i16** %p, align 8, !dbg !10640
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10641
  %incdec.ptr287 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 1, !dbg !10641
  store %struct._PixelPacket* %incdec.ptr287, %struct._PixelPacket** %q, align 8, !dbg !10641
  br label %for.inc288, !dbg !10642

for.inc288:                                       ; preds = %for.body276
  %223 = load i64, i64* %x, align 8, !dbg !10643
  %inc289 = add nsw i64 %223, 1, !dbg !10643
  store i64 %inc289, i64* %x, align 8, !dbg !10643
  br label %for.cond272, !dbg !10644, !llvm.loop !10645

for.end290:                                       ; preds = %for.cond272
  %224 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10647
  %225 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10649
  %call291 = call i32 @SyncAuthenticPixels(%struct._Image* %224, %struct._ExceptionInfo* %225), !dbg !10650
  %cmp292 = icmp eq i32 %call291, 0, !dbg !10651
  br i1 %cmp292, label %if.then294, label %if.end295, !dbg !10652

if.then294:                                       ; preds = %for.end290
  br label %for.end298, !dbg !10653

if.end295:                                        ; preds = %for.end290
  br label %for.inc296, !dbg !10654

for.inc296:                                       ; preds = %if.end295
  %226 = load i64, i64* %y, align 8, !dbg !10655
  %inc297 = add nsw i64 %226, 1, !dbg !10655
  store i64 %inc297, i64* %y, align 8, !dbg !10655
  br label %for.cond258, !dbg !10656, !llvm.loop !10657

for.end298:                                       ; preds = %if.then294, %if.then270, %for.cond258
  br label %for.end371, !dbg !10659

if.end299:                                        ; preds = %if.end253
  %227 = load i8*, i8** %map.addr, align 8, !dbg !10660
  %call300 = call i64 @strlen(i8* %227) #13, !dbg !10661
  store i64 %call300, i64* %length, align 8, !dbg !10662
  store i64 0, i64* %y, align 8, !dbg !10663
  br label %for.cond301, !dbg !10665

for.cond301:                                      ; preds = %for.inc369, %if.end299
  %228 = load i64, i64* %y, align 8, !dbg !10666
  %229 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10668
  %height302 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %229, i32 0, i32 1, !dbg !10669
  %230 = load i64, i64* %height302, align 8, !dbg !10669
  %cmp303 = icmp slt i64 %228, %230, !dbg !10670
  br i1 %cmp303, label %for.body305, label %for.end371, !dbg !10671

for.body305:                                      ; preds = %for.cond301
  %231 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10672
  %232 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10674
  %x306 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %232, i32 0, i32 2, !dbg !10675
  %233 = load i64, i64* %x306, align 8, !dbg !10675
  %234 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10676
  %y307 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %234, i32 0, i32 3, !dbg !10677
  %235 = load i64, i64* %y307, align 8, !dbg !10677
  %236 = load i64, i64* %y, align 8, !dbg !10678
  %add308 = add nsw i64 %235, %236, !dbg !10679
  %237 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10680
  %width309 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %237, i32 0, i32 0, !dbg !10681
  %238 = load i64, i64* %width309, align 8, !dbg !10681
  %239 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10682
  %call310 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %231, i64 %233, i64 %add308, i64 %238, i64 1, %struct._ExceptionInfo* %239), !dbg !10683
  store %struct._PixelPacket* %call310, %struct._PixelPacket** %q, align 8, !dbg !10684
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10685
  %cmp311 = icmp eq %struct._PixelPacket* %240, null, !dbg !10687
  br i1 %cmp311, label %if.then313, label %if.end314, !dbg !10688

if.then313:                                       ; preds = %for.body305
  br label %for.end371, !dbg !10689

if.end314:                                        ; preds = %for.body305
  %241 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10690
  %call315 = call i16* @GetAuthenticIndexQueue(%struct._Image* %241), !dbg !10691
  store i16* %call315, i16** %indexes, align 8, !dbg !10692
  store i64 0, i64* %x, align 8, !dbg !10693
  br label %for.cond316, !dbg !10695

for.cond316:                                      ; preds = %for.inc361, %if.end314
  %242 = load i64, i64* %x, align 8, !dbg !10696
  %243 = load %struct._RectangleInfo*, %struct._RectangleInfo** %roi.addr, align 8, !dbg !10698
  %width317 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %243, i32 0, i32 0, !dbg !10699
  %244 = load i64, i64* %width317, align 8, !dbg !10699
  %cmp318 = icmp slt i64 %242, %244, !dbg !10700
  br i1 %cmp318, label %for.body320, label %for.end363, !dbg !10701

for.body320:                                      ; preds = %for.cond316
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10702, metadata !DIExpression()), !dbg !10704
  store i64 0, i64* %i, align 8, !dbg !10705
  br label %for.cond321, !dbg !10707

for.cond321:                                      ; preds = %for.inc357, %for.body320
  %245 = load i64, i64* %i, align 8, !dbg !10708
  %246 = load i64, i64* %length, align 8, !dbg !10710
  %cmp322 = icmp slt i64 %245, %246, !dbg !10711
  br i1 %cmp322, label %for.body324, label %for.end359, !dbg !10712

for.body324:                                      ; preds = %for.cond321
  %247 = load i32*, i32** %quantum_map.addr, align 8, !dbg !10713
  %248 = load i64, i64* %i, align 8, !dbg !10715
  %arrayidx = getelementptr inbounds i32, i32* %247, i64 %248, !dbg !10713
  %249 = load i32, i32* %arrayidx, align 4, !dbg !10713
  switch i32 %249, label %sw.default [
    i32 14, label %sw.bb
    i32 6, label %sw.bb
    i32 9, label %sw.bb327
    i32 12, label %sw.bb327
    i32 3, label %sw.bb330
    i32 19, label %sw.bb330
    i32 1, label %sw.bb333
    i32 13, label %sw.bb339
    i32 2, label %sw.bb342
    i32 11, label %sw.bb349
  ], !dbg !10716

sw.bb:                                            ; preds = %for.body324, %for.body324
  %250 = load i16*, i16** %p, align 8, !dbg !10717
  %251 = load i16, i16* %250, align 2, !dbg !10717
  %call325 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %251), !dbg !10717
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10717
  %red326 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 2, !dbg !10717
  store i16 %call325, i16* %red326, align 2, !dbg !10717
  br label %sw.epilog, !dbg !10720

sw.bb327:                                         ; preds = %for.body324, %for.body324
  %253 = load i16*, i16** %p, align 8, !dbg !10721
  %254 = load i16, i16* %253, align 2, !dbg !10721
  %call328 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %254), !dbg !10721
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10721
  %green329 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %255, i32 0, i32 1, !dbg !10721
  store i16 %call328, i16* %green329, align 2, !dbg !10721
  br label %sw.epilog, !dbg !10723

sw.bb330:                                         ; preds = %for.body324, %for.body324
  %256 = load i16*, i16** %p, align 8, !dbg !10724
  %257 = load i16, i16* %256, align 2, !dbg !10724
  %call331 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %257), !dbg !10724
  %258 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10724
  %blue332 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %258, i32 0, i32 0, !dbg !10724
  store i16 %call331, i16* %blue332, align 2, !dbg !10724
  br label %sw.epilog, !dbg !10726

sw.bb333:                                         ; preds = %for.body324
  %259 = load i16*, i16** %p, align 8, !dbg !10727
  %260 = load i16, i16* %259, align 2, !dbg !10727
  %call334 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %260), !dbg !10727
  %conv335 = zext i16 %call334 to i32, !dbg !10727
  %sub336 = sub nsw i32 65535, %conv335, !dbg !10727
  %conv337 = trunc i32 %sub336 to i16, !dbg !10727
  %261 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10727
  %opacity338 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %261, i32 0, i32 3, !dbg !10727
  store i16 %conv337, i16* %opacity338, align 2, !dbg !10727
  br label %sw.epilog, !dbg !10729

sw.bb339:                                         ; preds = %for.body324
  %262 = load i16*, i16** %p, align 8, !dbg !10730
  %263 = load i16, i16* %262, align 2, !dbg !10730
  %call340 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %263), !dbg !10730
  %264 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10730
  %opacity341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %264, i32 0, i32 3, !dbg !10730
  store i16 %call340, i16* %opacity341, align 2, !dbg !10730
  br label %sw.epilog, !dbg !10732

sw.bb342:                                         ; preds = %for.body324
  %265 = load i16*, i16** %indexes, align 8, !dbg !10733
  %266 = load i64, i64* %x, align 8, !dbg !10733
  %add.ptr = getelementptr inbounds i16, i16* %265, i64 %266, !dbg !10733
  %cmp343 = icmp ne i16* %add.ptr, null, !dbg !10733
  br i1 %cmp343, label %if.then345, label %if.end348, !dbg !10737

if.then345:                                       ; preds = %sw.bb342
  %267 = load i16*, i16** %p, align 8, !dbg !10733
  %268 = load i16, i16* %267, align 2, !dbg !10733
  %call346 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %268), !dbg !10733
  %269 = load i16*, i16** %indexes, align 8, !dbg !10733
  %270 = load i64, i64* %x, align 8, !dbg !10733
  %add.ptr347 = getelementptr inbounds i16, i16* %269, i64 %270, !dbg !10733
  store i16 %call346, i16* %add.ptr347, align 2, !dbg !10733
  br label %if.end348, !dbg !10733

if.end348:                                        ; preds = %if.then345, %sw.bb342
  br label %sw.epilog, !dbg !10738

sw.bb349:                                         ; preds = %for.body324
  %271 = load i16*, i16** %p, align 8, !dbg !10739
  %272 = load i16, i16* %271, align 2, !dbg !10739
  %call350 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %272), !dbg !10739
  %273 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10739
  %red351 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %273, i32 0, i32 2, !dbg !10739
  store i16 %call350, i16* %red351, align 2, !dbg !10739
  %274 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10741
  %red352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %274, i32 0, i32 2, !dbg !10741
  %275 = load i16, i16* %red352, align 2, !dbg !10741
  %276 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10741
  %green353 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %276, i32 0, i32 1, !dbg !10741
  store i16 %275, i16* %green353, align 2, !dbg !10741
  %277 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10742
  %red354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %277, i32 0, i32 2, !dbg !10742
  %278 = load i16, i16* %red354, align 2, !dbg !10742
  %279 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10742
  %blue355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %279, i32 0, i32 0, !dbg !10742
  store i16 %278, i16* %blue355, align 2, !dbg !10742
  br label %sw.epilog, !dbg !10743

sw.default:                                       ; preds = %for.body324
  br label %sw.epilog, !dbg !10744

sw.epilog:                                        ; preds = %sw.default, %sw.bb349, %if.end348, %sw.bb339, %sw.bb333, %sw.bb330, %sw.bb327, %sw.bb
  %280 = load i16*, i16** %p, align 8, !dbg !10745
  %incdec.ptr356 = getelementptr inbounds i16, i16* %280, i32 1, !dbg !10745
  store i16* %incdec.ptr356, i16** %p, align 8, !dbg !10745
  br label %for.inc357, !dbg !10746

for.inc357:                                       ; preds = %sw.epilog
  %281 = load i64, i64* %i, align 8, !dbg !10747
  %inc358 = add nsw i64 %281, 1, !dbg !10747
  store i64 %inc358, i64* %i, align 8, !dbg !10747
  br label %for.cond321, !dbg !10748, !llvm.loop !10749

for.end359:                                       ; preds = %for.cond321
  %282 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10751
  %incdec.ptr360 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %282, i32 1, !dbg !10751
  store %struct._PixelPacket* %incdec.ptr360, %struct._PixelPacket** %q, align 8, !dbg !10751
  br label %for.inc361, !dbg !10752

for.inc361:                                       ; preds = %for.end359
  %283 = load i64, i64* %x, align 8, !dbg !10753
  %inc362 = add nsw i64 %283, 1, !dbg !10753
  store i64 %inc362, i64* %x, align 8, !dbg !10753
  br label %for.cond316, !dbg !10754, !llvm.loop !10755

for.end363:                                       ; preds = %for.cond316
  %284 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10757
  %285 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10759
  %call364 = call i32 @SyncAuthenticPixels(%struct._Image* %284, %struct._ExceptionInfo* %285), !dbg !10760
  %cmp365 = icmp eq i32 %call364, 0, !dbg !10761
  br i1 %cmp365, label %if.then367, label %if.end368, !dbg !10762

if.then367:                                       ; preds = %for.end363
  br label %for.end371, !dbg !10763

if.end368:                                        ; preds = %for.end363
  br label %for.inc369, !dbg !10764

for.inc369:                                       ; preds = %if.end368
  %286 = load i64, i64* %y, align 8, !dbg !10765
  %inc370 = add nsw i64 %286, 1, !dbg !10765
  store i64 %inc370, i64* %y, align 8, !dbg !10765
  br label %for.cond301, !dbg !10766, !llvm.loop !10767

for.end371:                                       ; preds = %for.end23, %for.end67, %for.end113, %for.end156, %for.end201, %for.end252, %for.end298, %if.then367, %if.then313, %for.cond301
  ret void, !dbg !10769
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @InterpolateMagickPixelPacket(%struct._Image* %image, %struct._CacheView* %image_view, i32 %method, double %x, double %y, %struct._MagickPixelPacket* %pixel, %struct._ExceptionInfo* %exception) #0 !dbg !10770 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %image_view.addr = alloca %struct._CacheView*, align 8
  %method.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %gamma = alloca double, align 8
  %status = alloca i32, align 4
  %pixels = alloca [16 x %struct._MagickPixelPacket], align 16
  %alpha = alloca [16 x float], align 16
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %i = alloca i64, align 8
  %x_offset = alloca i64, align 8
  %y_offset = alloca i64, align 8
  %interpolate = alloca i32, align 4
  %count = alloca i64, align 8
  %index94 = alloca i16, align 2
  %delta = alloca %struct._PointInfo, align 8
  %epsilon = alloca %struct._PointInfo, align 8
  %cx = alloca [4 x float], align 16
  %cy = alloca [4 x float], align 16
  %filter_view = alloca %struct._CacheView*, align 8
  %excerpt_image = alloca %struct._Image*, align 8
  %filter_image = alloca %struct._Image*, align 8
  %geometry = alloca %struct._RectangleInfo, align 8
  %delta901 = alloca %struct._PointInfo, align 8
  %luma = alloca %struct._PointInfo, align 8
  %cx1325 = alloca [4 x float], align 16
  %cy1326 = alloca [4 x float], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !10779, metadata !DIExpression()), !dbg !10780
  store %struct._CacheView* %image_view, %struct._CacheView** %image_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view.addr, metadata !10781, metadata !DIExpression()), !dbg !10782
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !10783, metadata !DIExpression()), !dbg !10784
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !10785, metadata !DIExpression()), !dbg !10786
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !10787, metadata !DIExpression()), !dbg !10788
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !10789, metadata !DIExpression()), !dbg !10790
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !10791, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !10793, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10795, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.declare(metadata [16 x %struct._MagickPixelPacket]* %pixels, metadata !10797, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.declare(metadata [16 x float]* %alpha, metadata !10802, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !10805, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !10807, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10809, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.declare(metadata i64* %x_offset, metadata !10811, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata i64* %y_offset, metadata !10813, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.declare(metadata i32* %interpolate, metadata !10815, metadata !DIExpression()), !dbg !10816
  store i32 1, i32* %status, align 4, !dbg !10817
  %0 = load double, double* %x.addr, align 8, !dbg !10818
  %1 = call double @llvm.floor.f64(double %0), !dbg !10819
  %conv = fptosi double %1 to i64, !dbg !10820
  store i64 %conv, i64* %x_offset, align 8, !dbg !10821
  %2 = load double, double* %y.addr, align 8, !dbg !10822
  %3 = call double @llvm.floor.f64(double %2), !dbg !10823
  %conv1 = fptosi double %3 to i64, !dbg !10824
  store i64 %conv1, i64* %y_offset, align 8, !dbg !10825
  %4 = load i32, i32* %method.addr, align 4, !dbg !10826
  store i32 %4, i32* %interpolate, align 4, !dbg !10827
  %5 = load i32, i32* %interpolate, align 4, !dbg !10828
  %cmp = icmp eq i32 %5, 0, !dbg !10830
  br i1 %cmp, label %if.then, label %if.end, !dbg !10831

if.then:                                          ; preds = %entry
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10832
  %interpolate3 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 70, !dbg !10833
  %7 = load i32, i32* %interpolate3, align 8, !dbg !10833
  store i32 %7, i32* %interpolate, align 4, !dbg !10834
  br label %if.end, !dbg !10835

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %interpolate, align 4, !dbg !10836
  switch i32 %8, label %sw.default [
    i32 1, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 12, label %sw.bb93
    i32 3, label %sw.bb95
    i32 11, label %sw.bb326
    i32 13, label %sw.bb486
    i32 2, label %sw.bb486
    i32 4, label %sw.bb868
    i32 5, label %sw.bb893
    i32 6, label %sw.bb900
    i32 7, label %sw.bb1313
    i32 8, label %sw.bb1324
  ], !dbg !10837

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  call void @llvm.dbg.declare(metadata i64* %count, metadata !10838, metadata !DIExpression()), !dbg !10841
  store i64 2, i64* %count, align 8, !dbg !10842
  %9 = load i32, i32* %interpolate, align 4, !dbg !10843
  %cmp4 = icmp eq i32 %9, 9, !dbg !10845
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !10846

if.then6:                                         ; preds = %sw.bb
  store i64 3, i64* %count, align 8, !dbg !10847
  %10 = load double, double* %x.addr, align 8, !dbg !10849
  %add = fadd double %10, 5.000000e-01, !dbg !10850
  %11 = call double @llvm.floor.f64(double %add), !dbg !10851
  %sub = fsub double %11, 1.000000e+00, !dbg !10852
  %conv7 = fptosi double %sub to i64, !dbg !10853
  store i64 %conv7, i64* %x_offset, align 8, !dbg !10854
  %12 = load double, double* %y.addr, align 8, !dbg !10855
  %add8 = fadd double %12, 5.000000e-01, !dbg !10856
  %13 = call double @llvm.floor.f64(double %add8), !dbg !10857
  %sub9 = fsub double %13, 1.000000e+00, !dbg !10858
  %conv10 = fptosi double %sub9 to i64, !dbg !10859
  store i64 %conv10, i64* %y_offset, align 8, !dbg !10860
  br label %if.end16, !dbg !10861

if.else:                                          ; preds = %sw.bb
  %14 = load i32, i32* %interpolate, align 4, !dbg !10862
  %cmp11 = icmp eq i32 %14, 10, !dbg !10864
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !10865

if.then13:                                        ; preds = %if.else
  store i64 4, i64* %count, align 8, !dbg !10866
  %15 = load i64, i64* %x_offset, align 8, !dbg !10868
  %dec = add nsw i64 %15, -1, !dbg !10868
  store i64 %dec, i64* %x_offset, align 8, !dbg !10868
  %16 = load i64, i64* %y_offset, align 8, !dbg !10869
  %dec14 = add nsw i64 %16, -1, !dbg !10869
  store i64 %dec14, i64* %y_offset, align 8, !dbg !10869
  br label %if.end15, !dbg !10870

if.end15:                                         ; preds = %if.then13, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then6
  %17 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !10871
  %18 = load i64, i64* %x_offset, align 8, !dbg !10872
  %19 = load i64, i64* %y_offset, align 8, !dbg !10873
  %20 = load i64, i64* %count, align 8, !dbg !10874
  %21 = load i64, i64* %count, align 8, !dbg !10875
  %22 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !10876
  %call = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %17, i64 %18, i64 %19, i64 %20, i64 %21, %struct._ExceptionInfo* %22), !dbg !10877
  store %struct._PixelPacket* %call, %struct._PixelPacket** %p, align 8, !dbg !10878
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !10879
  %cmp17 = icmp eq %struct._PixelPacket* %23, null, !dbg !10881
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !10882

if.then19:                                        ; preds = %if.end16
  store i32 0, i32* %status, align 4, !dbg !10883
  br label %sw.epilog, !dbg !10885

if.end20:                                         ; preds = %if.end16
  %24 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !10886
  %call21 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %24), !dbg !10887
  store i16* %call21, i16** %indexes, align 8, !dbg !10888
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10889
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 5, !dbg !10890
  store float 0.000000e+00, float* %red, align 8, !dbg !10891
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10892
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 6, !dbg !10893
  store float 0.000000e+00, float* %green, align 4, !dbg !10894
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10895
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 7, !dbg !10896
  store float 0.000000e+00, float* %blue, align 8, !dbg !10897
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10898
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 8, !dbg !10899
  store float 0.000000e+00, float* %opacity, align 4, !dbg !10900
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10901
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 9, !dbg !10902
  store float 0.000000e+00, float* %index, align 8, !dbg !10903
  %30 = load i64, i64* %count, align 8, !dbg !10904
  %31 = load i64, i64* %count, align 8, !dbg !10905
  %mul = mul nsw i64 %31, %30, !dbg !10905
  store i64 %mul, i64* %count, align 8, !dbg !10905
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10906
  %arraydecay = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !10907
  call void @GetMagickPixelPacket(%struct._Image* %32, %struct._MagickPixelPacket* %arraydecay), !dbg !10908
  store i64 0, i64* %i, align 8, !dbg !10909
  br label %for.cond, !dbg !10911

for.cond:                                         ; preds = %for.inc, %if.end20
  %33 = load i64, i64* %i, align 8, !dbg !10912
  %34 = load i64, i64* %count, align 8, !dbg !10914
  %cmp22 = icmp slt i64 %33, %34, !dbg !10915
  br i1 %cmp22, label %for.body, label %for.end, !dbg !10916

for.body:                                         ; preds = %for.cond
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10917
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !10919
  %37 = load i64, i64* %i, align 8, !dbg !10920
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i64 %37, !dbg !10921
  %38 = load i16*, i16** %indexes, align 8, !dbg !10922
  %39 = load i64, i64* %i, align 8, !dbg !10923
  %add.ptr24 = getelementptr inbounds i16, i16* %38, i64 %39, !dbg !10924
  %arraydecay25 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !10925
  %arraydecay26 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !10926
  call void @AlphaBlendMagickPixelPacket(%struct._Image* %35, %struct._PixelPacket* %add.ptr, i16* %add.ptr24, %struct._MagickPixelPacket* %arraydecay25, float* %arraydecay26), !dbg !10927
  %arrayidx = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !10928
  %40 = load float, float* %arrayidx, align 16, !dbg !10928
  %conv27 = fpext float %40 to double, !dbg !10928
  %cmp28 = fcmp olt double %conv27, 0.000000e+00, !dbg !10930
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !10931

if.then30:                                        ; preds = %for.body
  store double 0.000000e+00, double* %gamma, align 8, !dbg !10932
  br label %if.end35, !dbg !10933

if.else31:                                        ; preds = %for.body
  %arrayidx32 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !10934
  %41 = load float, float* %arrayidx32, align 16, !dbg !10934
  %conv33 = fpext float %41 to double, !dbg !10934
  %call34 = call double @PerceptibleReciprocal(double %conv33), !dbg !10935
  store double %call34, double* %gamma, align 8, !dbg !10936
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then30
  %42 = load double, double* %gamma, align 8, !dbg !10937
  %arrayidx36 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !10938
  %red37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx36, i32 0, i32 5, !dbg !10939
  %43 = load float, float* %red37, align 16, !dbg !10939
  %conv38 = fpext float %43 to double, !dbg !10938
  %mul39 = fmul double %42, %conv38, !dbg !10940
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10941
  %red40 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 5, !dbg !10942
  %45 = load float, float* %red40, align 8, !dbg !10943
  %conv41 = fpext float %45 to double, !dbg !10943
  %add42 = fadd double %conv41, %mul39, !dbg !10943
  %conv43 = fptrunc double %add42 to float, !dbg !10943
  store float %conv43, float* %red40, align 8, !dbg !10943
  %46 = load double, double* %gamma, align 8, !dbg !10944
  %arrayidx44 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !10945
  %green45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx44, i32 0, i32 6, !dbg !10946
  %47 = load float, float* %green45, align 4, !dbg !10946
  %conv46 = fpext float %47 to double, !dbg !10945
  %mul47 = fmul double %46, %conv46, !dbg !10947
  %48 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10948
  %green48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %48, i32 0, i32 6, !dbg !10949
  %49 = load float, float* %green48, align 4, !dbg !10950
  %conv49 = fpext float %49 to double, !dbg !10950
  %add50 = fadd double %conv49, %mul47, !dbg !10950
  %conv51 = fptrunc double %add50 to float, !dbg !10950
  store float %conv51, float* %green48, align 4, !dbg !10950
  %50 = load double, double* %gamma, align 8, !dbg !10951
  %arrayidx52 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !10952
  %blue53 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx52, i32 0, i32 7, !dbg !10953
  %51 = load float, float* %blue53, align 8, !dbg !10953
  %conv54 = fpext float %51 to double, !dbg !10952
  %mul55 = fmul double %50, %conv54, !dbg !10954
  %52 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10955
  %blue56 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %52, i32 0, i32 7, !dbg !10956
  %53 = load float, float* %blue56, align 8, !dbg !10957
  %conv57 = fpext float %53 to double, !dbg !10957
  %add58 = fadd double %conv57, %mul55, !dbg !10957
  %conv59 = fptrunc double %add58 to float, !dbg !10957
  store float %conv59, float* %blue56, align 8, !dbg !10957
  %54 = load double, double* %gamma, align 8, !dbg !10958
  %arrayidx60 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !10959
  %index61 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx60, i32 0, i32 9, !dbg !10960
  %55 = load float, float* %index61, align 16, !dbg !10960
  %conv62 = fpext float %55 to double, !dbg !10959
  %mul63 = fmul double %54, %conv62, !dbg !10961
  %56 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10962
  %index64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %56, i32 0, i32 9, !dbg !10963
  %57 = load float, float* %index64, align 8, !dbg !10964
  %conv65 = fpext float %57 to double, !dbg !10964
  %add66 = fadd double %conv65, %mul63, !dbg !10964
  %conv67 = fptrunc double %add66 to float, !dbg !10964
  store float %conv67, float* %index64, align 8, !dbg !10964
  %arrayidx68 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !10965
  %opacity69 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx68, i32 0, i32 8, !dbg !10966
  %58 = load float, float* %opacity69, align 4, !dbg !10966
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10967
  %opacity70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 8, !dbg !10968
  %60 = load float, float* %opacity70, align 4, !dbg !10969
  %add71 = fadd float %60, %58, !dbg !10969
  store float %add71, float* %opacity70, align 4, !dbg !10969
  br label %for.inc, !dbg !10970

for.inc:                                          ; preds = %if.end35
  %61 = load i64, i64* %i, align 8, !dbg !10971
  %inc = add nsw i64 %61, 1, !dbg !10971
  store i64 %inc, i64* %i, align 8, !dbg !10971
  br label %for.cond, !dbg !10972, !llvm.loop !10973

for.end:                                          ; preds = %for.cond
  %62 = load i64, i64* %count, align 8, !dbg !10975
  %conv72 = sitofp i64 %62 to double, !dbg !10975
  %div = fdiv double 1.000000e+00, %conv72, !dbg !10976
  store double %div, double* %gamma, align 8, !dbg !10977
  %63 = load double, double* %gamma, align 8, !dbg !10978
  %64 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10979
  %red73 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %64, i32 0, i32 5, !dbg !10980
  %65 = load float, float* %red73, align 8, !dbg !10981
  %conv74 = fpext float %65 to double, !dbg !10981
  %mul75 = fmul double %conv74, %63, !dbg !10981
  %conv76 = fptrunc double %mul75 to float, !dbg !10981
  store float %conv76, float* %red73, align 8, !dbg !10981
  %66 = load double, double* %gamma, align 8, !dbg !10982
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10983
  %green77 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i32 0, i32 6, !dbg !10984
  %68 = load float, float* %green77, align 4, !dbg !10985
  %conv78 = fpext float %68 to double, !dbg !10985
  %mul79 = fmul double %conv78, %66, !dbg !10985
  %conv80 = fptrunc double %mul79 to float, !dbg !10985
  store float %conv80, float* %green77, align 4, !dbg !10985
  %69 = load double, double* %gamma, align 8, !dbg !10986
  %70 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10987
  %blue81 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %70, i32 0, i32 7, !dbg !10988
  %71 = load float, float* %blue81, align 8, !dbg !10989
  %conv82 = fpext float %71 to double, !dbg !10989
  %mul83 = fmul double %conv82, %69, !dbg !10989
  %conv84 = fptrunc double %mul83 to float, !dbg !10989
  store float %conv84, float* %blue81, align 8, !dbg !10989
  %72 = load double, double* %gamma, align 8, !dbg !10990
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10991
  %index85 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i32 0, i32 9, !dbg !10992
  %74 = load float, float* %index85, align 8, !dbg !10993
  %conv86 = fpext float %74 to double, !dbg !10993
  %mul87 = fmul double %conv86, %72, !dbg !10993
  %conv88 = fptrunc double %mul87 to float, !dbg !10993
  store float %conv88, float* %index85, align 8, !dbg !10993
  %75 = load double, double* %gamma, align 8, !dbg !10994
  %76 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !10995
  %opacity89 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %76, i32 0, i32 8, !dbg !10996
  %77 = load float, float* %opacity89, align 4, !dbg !10997
  %conv90 = fpext float %77 to double, !dbg !10997
  %mul91 = fmul double %conv90, %75, !dbg !10997
  %conv92 = fptrunc double %mul91 to float, !dbg !10997
  store float %conv92, float* %opacity89, align 4, !dbg !10997
  br label %sw.epilog, !dbg !10998

sw.bb93:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %index94, metadata !10999, metadata !DIExpression()), !dbg !11001
  store i16 0, i16* %index94, align 2, !dbg !11002
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11003
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11004
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %79, i32 0, i32 12, !dbg !11005
  %80 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11006
  call void @SetMagickPixelPacket(%struct._Image* %78, %struct._PixelPacket* %background_color, i16* %index94, %struct._MagickPixelPacket* %80), !dbg !11007
  br label %sw.epilog, !dbg !11008

sw.bb95:                                          ; preds = %if.end
  br label %sw.default, !dbg !11009

sw.default:                                       ; preds = %if.end, %sw.bb95
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %delta, metadata !11010, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %epsilon, metadata !11019, metadata !DIExpression()), !dbg !11020
  %81 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !11021
  %82 = load i64, i64* %x_offset, align 8, !dbg !11022
  %83 = load i64, i64* %y_offset, align 8, !dbg !11023
  %84 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11024
  %call96 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %81, i64 %82, i64 %83, i64 2, i64 2, %struct._ExceptionInfo* %84), !dbg !11025
  store %struct._PixelPacket* %call96, %struct._PixelPacket** %p, align 8, !dbg !11026
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !11027
  %cmp97 = icmp eq %struct._PixelPacket* %85, null, !dbg !11029
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !11030

if.then99:                                        ; preds = %sw.default
  store i32 0, i32* %status, align 4, !dbg !11031
  br label %sw.epilog, !dbg !11033

if.end100:                                        ; preds = %sw.default
  %86 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !11034
  %call101 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %86), !dbg !11035
  store i16* %call101, i16** %indexes, align 8, !dbg !11036
  store i64 0, i64* %i, align 8, !dbg !11037
  br label %for.cond102, !dbg !11039

for.cond102:                                      ; preds = %for.inc114, %if.end100
  %87 = load i64, i64* %i, align 8, !dbg !11040
  %cmp103 = icmp slt i64 %87, 4, !dbg !11042
  br i1 %cmp103, label %for.body105, label %for.end116, !dbg !11043

for.body105:                                      ; preds = %for.cond102
  %88 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11044
  %arraydecay106 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11046
  %89 = load i64, i64* %i, align 8, !dbg !11047
  %add.ptr107 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay106, i64 %89, !dbg !11048
  call void @GetMagickPixelPacket(%struct._Image* %88, %struct._MagickPixelPacket* %add.ptr107), !dbg !11049
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11050
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !11051
  %92 = load i64, i64* %i, align 8, !dbg !11052
  %add.ptr108 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i64 %92, !dbg !11053
  %93 = load i16*, i16** %indexes, align 8, !dbg !11054
  %94 = load i64, i64* %i, align 8, !dbg !11055
  %add.ptr109 = getelementptr inbounds i16, i16* %93, i64 %94, !dbg !11056
  %arraydecay110 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11057
  %95 = load i64, i64* %i, align 8, !dbg !11058
  %add.ptr111 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay110, i64 %95, !dbg !11059
  %arraydecay112 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11060
  %96 = load i64, i64* %i, align 8, !dbg !11061
  %add.ptr113 = getelementptr inbounds float, float* %arraydecay112, i64 %96, !dbg !11062
  call void @AlphaBlendMagickPixelPacket(%struct._Image* %90, %struct._PixelPacket* %add.ptr108, i16* %add.ptr109, %struct._MagickPixelPacket* %add.ptr111, float* %add.ptr113), !dbg !11063
  br label %for.inc114, !dbg !11064

for.inc114:                                       ; preds = %for.body105
  %97 = load i64, i64* %i, align 8, !dbg !11065
  %inc115 = add nsw i64 %97, 1, !dbg !11065
  store i64 %inc115, i64* %i, align 8, !dbg !11065
  br label %for.cond102, !dbg !11066, !llvm.loop !11067

for.end116:                                       ; preds = %for.cond102
  %98 = load double, double* %x.addr, align 8, !dbg !11069
  %99 = load i64, i64* %x_offset, align 8, !dbg !11070
  %conv117 = sitofp i64 %99 to double, !dbg !11070
  %sub118 = fsub double %98, %conv117, !dbg !11071
  %x119 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11072
  store double %sub118, double* %x119, align 8, !dbg !11073
  %100 = load double, double* %y.addr, align 8, !dbg !11074
  %101 = load i64, i64* %y_offset, align 8, !dbg !11075
  %conv120 = sitofp i64 %101 to double, !dbg !11075
  %sub121 = fsub double %100, %conv120, !dbg !11076
  %y122 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !11077
  store double %sub121, double* %y122, align 8, !dbg !11078
  %x123 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11079
  %102 = load double, double* %x123, align 8, !dbg !11079
  %sub124 = fsub double 1.000000e+00, %102, !dbg !11080
  %x125 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11081
  store double %sub124, double* %x125, align 8, !dbg !11082
  %y126 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !11083
  %103 = load double, double* %y126, align 8, !dbg !11083
  %sub127 = fsub double 1.000000e+00, %103, !dbg !11084
  %y128 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 1, !dbg !11085
  store double %sub127, double* %y128, align 8, !dbg !11086
  %y129 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 1, !dbg !11087
  %104 = load double, double* %y129, align 8, !dbg !11087
  %x130 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11088
  %105 = load double, double* %x130, align 8, !dbg !11088
  %arrayidx131 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11089
  %106 = load float, float* %arrayidx131, align 16, !dbg !11089
  %conv132 = fpext float %106 to double, !dbg !11089
  %mul133 = fmul double %105, %conv132, !dbg !11090
  %x134 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11091
  %107 = load double, double* %x134, align 8, !dbg !11091
  %arrayidx135 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 1, !dbg !11092
  %108 = load float, float* %arrayidx135, align 4, !dbg !11092
  %conv136 = fpext float %108 to double, !dbg !11092
  %mul137 = fmul double %107, %conv136, !dbg !11093
  %add138 = fadd double %mul133, %mul137, !dbg !11094
  %mul139 = fmul double %104, %add138, !dbg !11095
  %y140 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !11096
  %109 = load double, double* %y140, align 8, !dbg !11096
  %x141 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11097
  %110 = load double, double* %x141, align 8, !dbg !11097
  %arrayidx142 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 2, !dbg !11098
  %111 = load float, float* %arrayidx142, align 8, !dbg !11098
  %conv143 = fpext float %111 to double, !dbg !11098
  %mul144 = fmul double %110, %conv143, !dbg !11099
  %x145 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11100
  %112 = load double, double* %x145, align 8, !dbg !11100
  %arrayidx146 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 3, !dbg !11101
  %113 = load float, float* %arrayidx146, align 4, !dbg !11101
  %conv147 = fpext float %113 to double, !dbg !11101
  %mul148 = fmul double %112, %conv147, !dbg !11102
  %add149 = fadd double %mul144, %mul148, !dbg !11103
  %mul150 = fmul double %109, %add149, !dbg !11104
  %add151 = fadd double %mul139, %mul150, !dbg !11105
  store double %add151, double* %gamma, align 8, !dbg !11106
  %114 = load double, double* %gamma, align 8, !dbg !11107
  %cmp152 = fcmp olt double %114, 0.000000e+00, !dbg !11109
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !11110

if.then154:                                       ; preds = %for.end116
  store double 0.000000e+00, double* %gamma, align 8, !dbg !11111
  br label %if.end155, !dbg !11112

if.end155:                                        ; preds = %if.then154, %for.end116
  %115 = load double, double* %gamma, align 8, !dbg !11113
  %call156 = call double @PerceptibleReciprocal(double %115), !dbg !11114
  store double %call156, double* %gamma, align 8, !dbg !11115
  %116 = load double, double* %gamma, align 8, !dbg !11116
  %y157 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 1, !dbg !11117
  %117 = load double, double* %y157, align 8, !dbg !11117
  %x158 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11118
  %118 = load double, double* %x158, align 8, !dbg !11118
  %arrayidx159 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11119
  %red160 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx159, i32 0, i32 5, !dbg !11120
  %119 = load float, float* %red160, align 16, !dbg !11120
  %conv161 = fpext float %119 to double, !dbg !11119
  %mul162 = fmul double %118, %conv161, !dbg !11121
  %x163 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11122
  %120 = load double, double* %x163, align 8, !dbg !11122
  %arrayidx164 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11123
  %red165 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx164, i32 0, i32 5, !dbg !11124
  %121 = load float, float* %red165, align 8, !dbg !11124
  %conv166 = fpext float %121 to double, !dbg !11123
  %mul167 = fmul double %120, %conv166, !dbg !11125
  %add168 = fadd double %mul162, %mul167, !dbg !11126
  %mul169 = fmul double %117, %add168, !dbg !11127
  %y170 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !11128
  %122 = load double, double* %y170, align 8, !dbg !11128
  %x171 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11129
  %123 = load double, double* %x171, align 8, !dbg !11129
  %arrayidx172 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !11130
  %red173 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx172, i32 0, i32 5, !dbg !11131
  %124 = load float, float* %red173, align 16, !dbg !11131
  %conv174 = fpext float %124 to double, !dbg !11130
  %mul175 = fmul double %123, %conv174, !dbg !11132
  %x176 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11133
  %125 = load double, double* %x176, align 8, !dbg !11133
  %arrayidx177 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !11134
  %red178 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx177, i32 0, i32 5, !dbg !11135
  %126 = load float, float* %red178, align 8, !dbg !11135
  %conv179 = fpext float %126 to double, !dbg !11134
  %mul180 = fmul double %125, %conv179, !dbg !11136
  %add181 = fadd double %mul175, %mul180, !dbg !11137
  %mul182 = fmul double %122, %add181, !dbg !11138
  %add183 = fadd double %mul169, %mul182, !dbg !11139
  %mul184 = fmul double %116, %add183, !dbg !11140
  %conv185 = fptrunc double %mul184 to float, !dbg !11116
  %127 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11141
  %red186 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %127, i32 0, i32 5, !dbg !11142
  store float %conv185, float* %red186, align 8, !dbg !11143
  %128 = load double, double* %gamma, align 8, !dbg !11144
  %y187 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 1, !dbg !11145
  %129 = load double, double* %y187, align 8, !dbg !11145
  %x188 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11146
  %130 = load double, double* %x188, align 8, !dbg !11146
  %arrayidx189 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11147
  %green190 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx189, i32 0, i32 6, !dbg !11148
  %131 = load float, float* %green190, align 4, !dbg !11148
  %conv191 = fpext float %131 to double, !dbg !11147
  %mul192 = fmul double %130, %conv191, !dbg !11149
  %x193 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11150
  %132 = load double, double* %x193, align 8, !dbg !11150
  %arrayidx194 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11151
  %green195 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx194, i32 0, i32 6, !dbg !11152
  %133 = load float, float* %green195, align 4, !dbg !11152
  %conv196 = fpext float %133 to double, !dbg !11151
  %mul197 = fmul double %132, %conv196, !dbg !11153
  %add198 = fadd double %mul192, %mul197, !dbg !11154
  %mul199 = fmul double %129, %add198, !dbg !11155
  %y200 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !11156
  %134 = load double, double* %y200, align 8, !dbg !11156
  %x201 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11157
  %135 = load double, double* %x201, align 8, !dbg !11157
  %arrayidx202 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !11158
  %green203 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx202, i32 0, i32 6, !dbg !11159
  %136 = load float, float* %green203, align 4, !dbg !11159
  %conv204 = fpext float %136 to double, !dbg !11158
  %mul205 = fmul double %135, %conv204, !dbg !11160
  %x206 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11161
  %137 = load double, double* %x206, align 8, !dbg !11161
  %arrayidx207 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !11162
  %green208 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx207, i32 0, i32 6, !dbg !11163
  %138 = load float, float* %green208, align 4, !dbg !11163
  %conv209 = fpext float %138 to double, !dbg !11162
  %mul210 = fmul double %137, %conv209, !dbg !11164
  %add211 = fadd double %mul205, %mul210, !dbg !11165
  %mul212 = fmul double %134, %add211, !dbg !11166
  %add213 = fadd double %mul199, %mul212, !dbg !11167
  %mul214 = fmul double %128, %add213, !dbg !11168
  %conv215 = fptrunc double %mul214 to float, !dbg !11144
  %139 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11169
  %green216 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %139, i32 0, i32 6, !dbg !11170
  store float %conv215, float* %green216, align 4, !dbg !11171
  %140 = load double, double* %gamma, align 8, !dbg !11172
  %y217 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 1, !dbg !11173
  %141 = load double, double* %y217, align 8, !dbg !11173
  %x218 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11174
  %142 = load double, double* %x218, align 8, !dbg !11174
  %arrayidx219 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11175
  %blue220 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx219, i32 0, i32 7, !dbg !11176
  %143 = load float, float* %blue220, align 8, !dbg !11176
  %conv221 = fpext float %143 to double, !dbg !11175
  %mul222 = fmul double %142, %conv221, !dbg !11177
  %x223 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11178
  %144 = load double, double* %x223, align 8, !dbg !11178
  %arrayidx224 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11179
  %blue225 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx224, i32 0, i32 7, !dbg !11180
  %145 = load float, float* %blue225, align 8, !dbg !11180
  %conv226 = fpext float %145 to double, !dbg !11179
  %mul227 = fmul double %144, %conv226, !dbg !11181
  %add228 = fadd double %mul222, %mul227, !dbg !11182
  %mul229 = fmul double %141, %add228, !dbg !11183
  %y230 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !11184
  %146 = load double, double* %y230, align 8, !dbg !11184
  %x231 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11185
  %147 = load double, double* %x231, align 8, !dbg !11185
  %arrayidx232 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !11186
  %blue233 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx232, i32 0, i32 7, !dbg !11187
  %148 = load float, float* %blue233, align 8, !dbg !11187
  %conv234 = fpext float %148 to double, !dbg !11186
  %mul235 = fmul double %147, %conv234, !dbg !11188
  %x236 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11189
  %149 = load double, double* %x236, align 8, !dbg !11189
  %arrayidx237 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !11190
  %blue238 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx237, i32 0, i32 7, !dbg !11191
  %150 = load float, float* %blue238, align 8, !dbg !11191
  %conv239 = fpext float %150 to double, !dbg !11190
  %mul240 = fmul double %149, %conv239, !dbg !11192
  %add241 = fadd double %mul235, %mul240, !dbg !11193
  %mul242 = fmul double %146, %add241, !dbg !11194
  %add243 = fadd double %mul229, %mul242, !dbg !11195
  %mul244 = fmul double %140, %add243, !dbg !11196
  %conv245 = fptrunc double %mul244 to float, !dbg !11172
  %151 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11197
  %blue246 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %151, i32 0, i32 7, !dbg !11198
  store float %conv245, float* %blue246, align 8, !dbg !11199
  %152 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11200
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %152, i32 0, i32 1, !dbg !11202
  %153 = load i32, i32* %colorspace, align 4, !dbg !11202
  %cmp247 = icmp eq i32 %153, 12, !dbg !11203
  br i1 %cmp247, label %if.then249, label %if.end280, !dbg !11204

if.then249:                                       ; preds = %if.end155
  %154 = load double, double* %gamma, align 8, !dbg !11205
  %y250 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 1, !dbg !11206
  %155 = load double, double* %y250, align 8, !dbg !11206
  %x251 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11207
  %156 = load double, double* %x251, align 8, !dbg !11207
  %arrayidx252 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11208
  %index253 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx252, i32 0, i32 9, !dbg !11209
  %157 = load float, float* %index253, align 16, !dbg !11209
  %conv254 = fpext float %157 to double, !dbg !11208
  %mul255 = fmul double %156, %conv254, !dbg !11210
  %x256 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11211
  %158 = load double, double* %x256, align 8, !dbg !11211
  %arrayidx257 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11212
  %index258 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx257, i32 0, i32 9, !dbg !11213
  %159 = load float, float* %index258, align 8, !dbg !11213
  %conv259 = fpext float %159 to double, !dbg !11212
  %mul260 = fmul double %158, %conv259, !dbg !11214
  %add261 = fadd double %mul255, %mul260, !dbg !11215
  %mul262 = fmul double %155, %add261, !dbg !11216
  %y263 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !11217
  %160 = load double, double* %y263, align 8, !dbg !11217
  %x264 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11218
  %161 = load double, double* %x264, align 8, !dbg !11218
  %arrayidx265 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !11219
  %index266 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx265, i32 0, i32 9, !dbg !11220
  %162 = load float, float* %index266, align 16, !dbg !11220
  %conv267 = fpext float %162 to double, !dbg !11219
  %mul268 = fmul double %161, %conv267, !dbg !11221
  %x269 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11222
  %163 = load double, double* %x269, align 8, !dbg !11222
  %arrayidx270 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !11223
  %index271 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx270, i32 0, i32 9, !dbg !11224
  %164 = load float, float* %index271, align 8, !dbg !11224
  %conv272 = fpext float %164 to double, !dbg !11223
  %mul273 = fmul double %163, %conv272, !dbg !11225
  %add274 = fadd double %mul268, %mul273, !dbg !11226
  %mul275 = fmul double %160, %add274, !dbg !11227
  %add276 = fadd double %mul262, %mul275, !dbg !11228
  %mul277 = fmul double %154, %add276, !dbg !11229
  %conv278 = fptrunc double %mul277 to float, !dbg !11205
  %165 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11230
  %index279 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %165, i32 0, i32 9, !dbg !11231
  store float %conv278, float* %index279, align 8, !dbg !11232
  br label %if.end280, !dbg !11230

if.end280:                                        ; preds = %if.then249, %if.end155
  %y281 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 1, !dbg !11233
  %166 = load double, double* %y281, align 8, !dbg !11233
  %x282 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11234
  %167 = load double, double* %x282, align 8, !dbg !11234
  %x283 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11235
  %168 = load double, double* %x283, align 8, !dbg !11235
  %add284 = fadd double %167, %168, !dbg !11236
  %mul285 = fmul double %166, %add284, !dbg !11237
  %y286 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !11238
  %169 = load double, double* %y286, align 8, !dbg !11238
  %x287 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11239
  %170 = load double, double* %x287, align 8, !dbg !11239
  %x288 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11240
  %171 = load double, double* %x288, align 8, !dbg !11240
  %add289 = fadd double %170, %171, !dbg !11241
  %mul290 = fmul double %169, %add289, !dbg !11242
  %add291 = fadd double %mul285, %mul290, !dbg !11243
  store double %add291, double* %gamma, align 8, !dbg !11244
  %172 = load double, double* %gamma, align 8, !dbg !11245
  %cmp292 = fcmp olt double %172, 0.000000e+00, !dbg !11247
  br i1 %cmp292, label %if.then294, label %if.end295, !dbg !11248

if.then294:                                       ; preds = %if.end280
  store double 0.000000e+00, double* %gamma, align 8, !dbg !11249
  br label %if.end295, !dbg !11250

if.end295:                                        ; preds = %if.then294, %if.end280
  %173 = load double, double* %gamma, align 8, !dbg !11251
  %call296 = call double @PerceptibleReciprocal(double %173), !dbg !11252
  store double %call296, double* %gamma, align 8, !dbg !11253
  %y297 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 1, !dbg !11254
  %174 = load double, double* %y297, align 8, !dbg !11254
  %x298 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11255
  %175 = load double, double* %x298, align 8, !dbg !11255
  %arrayidx299 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11256
  %opacity300 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx299, i32 0, i32 8, !dbg !11257
  %176 = load float, float* %opacity300, align 4, !dbg !11257
  %conv301 = fpext float %176 to double, !dbg !11256
  %mul302 = fmul double %175, %conv301, !dbg !11258
  %x303 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11259
  %177 = load double, double* %x303, align 8, !dbg !11259
  %arrayidx304 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11260
  %opacity305 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx304, i32 0, i32 8, !dbg !11261
  %178 = load float, float* %opacity305, align 4, !dbg !11261
  %conv306 = fpext float %178 to double, !dbg !11260
  %mul307 = fmul double %177, %conv306, !dbg !11262
  %add308 = fadd double %mul302, %mul307, !dbg !11263
  %mul309 = fmul double %174, %add308, !dbg !11264
  %y310 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !11265
  %179 = load double, double* %y310, align 8, !dbg !11265
  %x311 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %epsilon, i32 0, i32 0, !dbg !11266
  %180 = load double, double* %x311, align 8, !dbg !11266
  %arrayidx312 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !11267
  %opacity313 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx312, i32 0, i32 8, !dbg !11268
  %181 = load float, float* %opacity313, align 4, !dbg !11268
  %conv314 = fpext float %181 to double, !dbg !11267
  %mul315 = fmul double %180, %conv314, !dbg !11269
  %x316 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !11270
  %182 = load double, double* %x316, align 8, !dbg !11270
  %arrayidx317 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !11271
  %opacity318 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx317, i32 0, i32 8, !dbg !11272
  %183 = load float, float* %opacity318, align 4, !dbg !11272
  %conv319 = fpext float %183 to double, !dbg !11271
  %mul320 = fmul double %182, %conv319, !dbg !11273
  %add321 = fadd double %mul315, %mul320, !dbg !11274
  %mul322 = fmul double %179, %add321, !dbg !11275
  %add323 = fadd double %mul309, %mul322, !dbg !11276
  %conv324 = fptrunc double %add323 to float, !dbg !11277
  %184 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11278
  %opacity325 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %184, i32 0, i32 8, !dbg !11279
  store float %conv324, float* %opacity325, align 4, !dbg !11280
  br label %sw.epilog, !dbg !11281

sw.bb326:                                         ; preds = %if.end
  %185 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !11282
  %186 = load i64, i64* %x_offset, align 8, !dbg !11284
  %187 = load i64, i64* %y_offset, align 8, !dbg !11285
  %188 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11286
  %call327 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %185, i64 %186, i64 %187, i64 2, i64 2, %struct._ExceptionInfo* %188), !dbg !11287
  store %struct._PixelPacket* %call327, %struct._PixelPacket** %p, align 8, !dbg !11288
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !11289
  %cmp328 = icmp eq %struct._PixelPacket* %189, null, !dbg !11291
  br i1 %cmp328, label %if.then330, label %if.end331, !dbg !11292

if.then330:                                       ; preds = %sw.bb326
  store i32 0, i32* %status, align 4, !dbg !11293
  br label %sw.epilog, !dbg !11295

if.end331:                                        ; preds = %sw.bb326
  %190 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !11296
  %call332 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %190), !dbg !11297
  store i16* %call332, i16** %indexes, align 8, !dbg !11298
  store i64 0, i64* %i, align 8, !dbg !11299
  br label %for.cond333, !dbg !11301

for.cond333:                                      ; preds = %for.inc345, %if.end331
  %191 = load i64, i64* %i, align 8, !dbg !11302
  %cmp334 = icmp slt i64 %191, 4, !dbg !11304
  br i1 %cmp334, label %for.body336, label %for.end347, !dbg !11305

for.body336:                                      ; preds = %for.cond333
  %192 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11306
  %arraydecay337 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11308
  %193 = load i64, i64* %i, align 8, !dbg !11309
  %add.ptr338 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay337, i64 %193, !dbg !11310
  call void @GetMagickPixelPacket(%struct._Image* %192, %struct._MagickPixelPacket* %add.ptr338), !dbg !11311
  %194 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11312
  %195 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !11313
  %196 = load i64, i64* %i, align 8, !dbg !11314
  %add.ptr339 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %195, i64 %196, !dbg !11315
  %197 = load i16*, i16** %indexes, align 8, !dbg !11316
  %198 = load i64, i64* %i, align 8, !dbg !11317
  %add.ptr340 = getelementptr inbounds i16, i16* %197, i64 %198, !dbg !11318
  %arraydecay341 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11319
  %199 = load i64, i64* %i, align 8, !dbg !11320
  %add.ptr342 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay341, i64 %199, !dbg !11321
  %arraydecay343 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11322
  %200 = load i64, i64* %i, align 8, !dbg !11323
  %add.ptr344 = getelementptr inbounds float, float* %arraydecay343, i64 %200, !dbg !11324
  call void @AlphaBlendMagickPixelPacket(%struct._Image* %194, %struct._PixelPacket* %add.ptr339, i16* %add.ptr340, %struct._MagickPixelPacket* %add.ptr342, float* %add.ptr344), !dbg !11325
  br label %for.inc345, !dbg !11326

for.inc345:                                       ; preds = %for.body336
  %201 = load i64, i64* %i, align 8, !dbg !11327
  %inc346 = add nsw i64 %201, 1, !dbg !11327
  store i64 %inc346, i64* %i, align 8, !dbg !11327
  br label %for.cond333, !dbg !11328, !llvm.loop !11329

for.end347:                                       ; preds = %for.cond333
  store double 1.000000e+00, double* %gamma, align 8, !dbg !11331
  store i64 0, i64* %i, align 8, !dbg !11332
  br label %for.cond348, !dbg !11334

for.cond348:                                      ; preds = %for.inc405, %for.end347
  %202 = load i64, i64* %i, align 8, !dbg !11335
  %cmp349 = icmp sle i64 %202, 1, !dbg !11337
  br i1 %cmp349, label %for.body351, label %for.end407, !dbg !11338

for.body351:                                      ; preds = %for.cond348
  %203 = load double, double* %y.addr, align 8, !dbg !11339
  %204 = load i64, i64* %y_offset, align 8, !dbg !11342
  %conv352 = sitofp i64 %204 to double, !dbg !11342
  %sub353 = fsub double %203, %conv352, !dbg !11343
  %cmp354 = fcmp oge double %sub353, 7.500000e-01, !dbg !11344
  br i1 %cmp354, label %if.then356, label %if.else363, !dbg !11345

if.then356:                                       ; preds = %for.body351
  %205 = load i64, i64* %i, align 8, !dbg !11346
  %add357 = add nsw i64 %205, 2, !dbg !11348
  %arrayidx358 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %add357, !dbg !11349
  %206 = load float, float* %arrayidx358, align 4, !dbg !11349
  %207 = load i64, i64* %i, align 8, !dbg !11350
  %arrayidx359 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %207, !dbg !11351
  store float %206, float* %arrayidx359, align 4, !dbg !11352
  %208 = load i64, i64* %i, align 8, !dbg !11353
  %arrayidx360 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %208, !dbg !11354
  %209 = load i64, i64* %i, align 8, !dbg !11355
  %add361 = add nsw i64 %209, 2, !dbg !11356
  %arrayidx362 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %add361, !dbg !11357
  %210 = bitcast %struct._MagickPixelPacket* %arrayidx360 to i8*, !dbg !11357
  %211 = bitcast %struct._MagickPixelPacket* %arrayidx362 to i8*, !dbg !11357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %211, i64 56, i1 false), !dbg !11357
  br label %if.end404, !dbg !11358

if.else363:                                       ; preds = %for.body351
  %212 = load double, double* %y.addr, align 8, !dbg !11359
  %213 = load i64, i64* %y_offset, align 8, !dbg !11361
  %conv364 = sitofp i64 %213 to double, !dbg !11361
  %sub365 = fsub double %212, %conv364, !dbg !11362
  %cmp366 = fcmp ogt double %sub365, 2.500000e-01, !dbg !11363
  br i1 %cmp366, label %if.then368, label %if.end403, !dbg !11364

if.then368:                                       ; preds = %if.else363
  store double 2.000000e+00, double* %gamma, align 8, !dbg !11365
  %214 = load i64, i64* %i, align 8, !dbg !11367
  %add369 = add nsw i64 %214, 2, !dbg !11368
  %arrayidx370 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %add369, !dbg !11369
  %215 = load float, float* %arrayidx370, align 4, !dbg !11369
  %216 = load i64, i64* %i, align 8, !dbg !11370
  %arrayidx371 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %216, !dbg !11371
  %217 = load float, float* %arrayidx371, align 4, !dbg !11372
  %add372 = fadd float %217, %215, !dbg !11372
  store float %add372, float* %arrayidx371, align 4, !dbg !11372
  %218 = load i64, i64* %i, align 8, !dbg !11373
  %add373 = add nsw i64 %218, 2, !dbg !11374
  %arrayidx374 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %add373, !dbg !11375
  %red375 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx374, i32 0, i32 5, !dbg !11376
  %219 = load float, float* %red375, align 8, !dbg !11376
  %220 = load i64, i64* %i, align 8, !dbg !11377
  %arrayidx376 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %220, !dbg !11378
  %red377 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx376, i32 0, i32 5, !dbg !11379
  %221 = load float, float* %red377, align 8, !dbg !11380
  %add378 = fadd float %221, %219, !dbg !11380
  store float %add378, float* %red377, align 8, !dbg !11380
  %222 = load i64, i64* %i, align 8, !dbg !11381
  %add379 = add nsw i64 %222, 2, !dbg !11382
  %arrayidx380 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %add379, !dbg !11383
  %green381 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx380, i32 0, i32 6, !dbg !11384
  %223 = load float, float* %green381, align 4, !dbg !11384
  %224 = load i64, i64* %i, align 8, !dbg !11385
  %arrayidx382 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %224, !dbg !11386
  %green383 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx382, i32 0, i32 6, !dbg !11387
  %225 = load float, float* %green383, align 4, !dbg !11388
  %add384 = fadd float %225, %223, !dbg !11388
  store float %add384, float* %green383, align 4, !dbg !11388
  %226 = load i64, i64* %i, align 8, !dbg !11389
  %add385 = add nsw i64 %226, 2, !dbg !11390
  %arrayidx386 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %add385, !dbg !11391
  %blue387 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx386, i32 0, i32 7, !dbg !11392
  %227 = load float, float* %blue387, align 8, !dbg !11392
  %228 = load i64, i64* %i, align 8, !dbg !11393
  %arrayidx388 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %228, !dbg !11394
  %blue389 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx388, i32 0, i32 7, !dbg !11395
  %229 = load float, float* %blue389, align 8, !dbg !11396
  %add390 = fadd float %229, %227, !dbg !11396
  store float %add390, float* %blue389, align 8, !dbg !11396
  %230 = load i64, i64* %i, align 8, !dbg !11397
  %add391 = add nsw i64 %230, 2, !dbg !11398
  %arrayidx392 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %add391, !dbg !11399
  %opacity393 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx392, i32 0, i32 8, !dbg !11400
  %231 = load float, float* %opacity393, align 4, !dbg !11400
  %232 = load i64, i64* %i, align 8, !dbg !11401
  %arrayidx394 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %232, !dbg !11402
  %opacity395 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx394, i32 0, i32 8, !dbg !11403
  %233 = load float, float* %opacity395, align 4, !dbg !11404
  %add396 = fadd float %233, %231, !dbg !11404
  store float %add396, float* %opacity395, align 4, !dbg !11404
  %234 = load i64, i64* %i, align 8, !dbg !11405
  %add397 = add nsw i64 %234, 2, !dbg !11406
  %arrayidx398 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %add397, !dbg !11407
  %index399 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx398, i32 0, i32 9, !dbg !11408
  %235 = load float, float* %index399, align 8, !dbg !11408
  %236 = load i64, i64* %i, align 8, !dbg !11409
  %arrayidx400 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %236, !dbg !11410
  %index401 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx400, i32 0, i32 9, !dbg !11411
  %237 = load float, float* %index401, align 8, !dbg !11412
  %add402 = fadd float %237, %235, !dbg !11412
  store float %add402, float* %index401, align 8, !dbg !11412
  br label %if.end403, !dbg !11413

if.end403:                                        ; preds = %if.then368, %if.else363
  br label %if.end404

if.end404:                                        ; preds = %if.end403, %if.then356
  br label %for.inc405, !dbg !11414

for.inc405:                                       ; preds = %if.end404
  %238 = load i64, i64* %i, align 8, !dbg !11415
  %inc406 = add nsw i64 %238, 1, !dbg !11415
  store i64 %inc406, i64* %i, align 8, !dbg !11415
  br label %for.cond348, !dbg !11416, !llvm.loop !11417

for.end407:                                       ; preds = %for.cond348
  %239 = load double, double* %x.addr, align 8, !dbg !11419
  %240 = load i64, i64* %x_offset, align 8, !dbg !11421
  %conv408 = sitofp i64 %240 to double, !dbg !11421
  %sub409 = fsub double %239, %conv408, !dbg !11422
  %cmp410 = fcmp oge double %sub409, 7.500000e-01, !dbg !11423
  br i1 %cmp410, label %if.then412, label %if.else417, !dbg !11424

if.then412:                                       ; preds = %for.end407
  %arrayidx413 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 1, !dbg !11425
  %241 = load float, float* %arrayidx413, align 4, !dbg !11425
  %arrayidx414 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11427
  store float %241, float* %arrayidx414, align 16, !dbg !11428
  %arrayidx415 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11429
  %arrayidx416 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11430
  %242 = bitcast %struct._MagickPixelPacket* %arrayidx415 to i8*, !dbg !11430
  %243 = bitcast %struct._MagickPixelPacket* %arrayidx416 to i8*, !dbg !11430
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %242, i8* align 8 %243, i64 56, i1 false), !dbg !11430
  br label %if.end453, !dbg !11431

if.else417:                                       ; preds = %for.end407
  %244 = load double, double* %x.addr, align 8, !dbg !11432
  %245 = load i64, i64* %x_offset, align 8, !dbg !11434
  %conv418 = sitofp i64 %245 to double, !dbg !11434
  %sub419 = fsub double %244, %conv418, !dbg !11435
  %cmp420 = fcmp ogt double %sub419, 2.500000e-01, !dbg !11436
  br i1 %cmp420, label %if.then422, label %if.end452, !dbg !11437

if.then422:                                       ; preds = %if.else417
  %246 = load double, double* %gamma, align 8, !dbg !11438
  %mul423 = fmul double %246, 2.000000e+00, !dbg !11438
  store double %mul423, double* %gamma, align 8, !dbg !11438
  %arrayidx424 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 1, !dbg !11440
  %247 = load float, float* %arrayidx424, align 4, !dbg !11440
  %arrayidx425 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11441
  %248 = load float, float* %arrayidx425, align 16, !dbg !11442
  %add426 = fadd float %248, %247, !dbg !11442
  store float %add426, float* %arrayidx425, align 16, !dbg !11442
  %arrayidx427 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11443
  %red428 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx427, i32 0, i32 5, !dbg !11444
  %249 = load float, float* %red428, align 8, !dbg !11444
  %arrayidx429 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11445
  %red430 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx429, i32 0, i32 5, !dbg !11446
  %250 = load float, float* %red430, align 16, !dbg !11447
  %add431 = fadd float %250, %249, !dbg !11447
  store float %add431, float* %red430, align 16, !dbg !11447
  %arrayidx432 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11448
  %green433 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx432, i32 0, i32 6, !dbg !11449
  %251 = load float, float* %green433, align 4, !dbg !11449
  %arrayidx434 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11450
  %green435 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx434, i32 0, i32 6, !dbg !11451
  %252 = load float, float* %green435, align 4, !dbg !11452
  %add436 = fadd float %252, %251, !dbg !11452
  store float %add436, float* %green435, align 4, !dbg !11452
  %arrayidx437 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11453
  %blue438 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx437, i32 0, i32 7, !dbg !11454
  %253 = load float, float* %blue438, align 8, !dbg !11454
  %arrayidx439 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11455
  %blue440 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx439, i32 0, i32 7, !dbg !11456
  %254 = load float, float* %blue440, align 8, !dbg !11457
  %add441 = fadd float %254, %253, !dbg !11457
  store float %add441, float* %blue440, align 8, !dbg !11457
  %arrayidx442 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11458
  %opacity443 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx442, i32 0, i32 8, !dbg !11459
  %255 = load float, float* %opacity443, align 4, !dbg !11459
  %arrayidx444 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11460
  %opacity445 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx444, i32 0, i32 8, !dbg !11461
  %256 = load float, float* %opacity445, align 4, !dbg !11462
  %add446 = fadd float %256, %255, !dbg !11462
  store float %add446, float* %opacity445, align 4, !dbg !11462
  %arrayidx447 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11463
  %index448 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx447, i32 0, i32 9, !dbg !11464
  %257 = load float, float* %index448, align 8, !dbg !11464
  %arrayidx449 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11465
  %index450 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx449, i32 0, i32 9, !dbg !11466
  %258 = load float, float* %index450, align 16, !dbg !11467
  %add451 = fadd float %258, %257, !dbg !11467
  store float %add451, float* %index450, align 16, !dbg !11467
  br label %if.end452, !dbg !11468

if.end452:                                        ; preds = %if.then422, %if.else417
  br label %if.end453

if.end453:                                        ; preds = %if.end452, %if.then412
  %259 = load double, double* %gamma, align 8, !dbg !11469
  %div454 = fdiv double 1.000000e+00, %259, !dbg !11470
  store double %div454, double* %gamma, align 8, !dbg !11471
  %arrayidx455 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11472
  %260 = load float, float* %arrayidx455, align 16, !dbg !11472
  %conv456 = fpext float %260 to double, !dbg !11472
  %call457 = call double @PerceptibleReciprocal(double %conv456), !dbg !11473
  %conv458 = fptrunc double %call457 to float, !dbg !11473
  %arrayidx459 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11474
  store float %conv458, float* %arrayidx459, align 16, !dbg !11475
  %arrayidx460 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11476
  %261 = load float, float* %arrayidx460, align 16, !dbg !11476
  %arrayidx461 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11477
  %red462 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx461, i32 0, i32 5, !dbg !11478
  %262 = load float, float* %red462, align 16, !dbg !11478
  %mul463 = fmul float %261, %262, !dbg !11479
  %263 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11480
  %red464 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %263, i32 0, i32 5, !dbg !11481
  store float %mul463, float* %red464, align 8, !dbg !11482
  %arrayidx465 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11483
  %264 = load float, float* %arrayidx465, align 16, !dbg !11483
  %arrayidx466 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11484
  %green467 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx466, i32 0, i32 6, !dbg !11485
  %265 = load float, float* %green467, align 4, !dbg !11485
  %mul468 = fmul float %264, %265, !dbg !11486
  %266 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11487
  %green469 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %266, i32 0, i32 6, !dbg !11488
  store float %mul468, float* %green469, align 4, !dbg !11489
  %arrayidx470 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11490
  %267 = load float, float* %arrayidx470, align 16, !dbg !11490
  %arrayidx471 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11491
  %blue472 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx471, i32 0, i32 7, !dbg !11492
  %268 = load float, float* %blue472, align 8, !dbg !11492
  %mul473 = fmul float %267, %268, !dbg !11493
  %269 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11494
  %blue474 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %269, i32 0, i32 7, !dbg !11495
  store float %mul473, float* %blue474, align 8, !dbg !11496
  %arrayidx475 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11497
  %270 = load float, float* %arrayidx475, align 16, !dbg !11497
  %arrayidx476 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11498
  %index477 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx476, i32 0, i32 9, !dbg !11499
  %271 = load float, float* %index477, align 16, !dbg !11499
  %mul478 = fmul float %270, %271, !dbg !11500
  %272 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11501
  %index479 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %272, i32 0, i32 9, !dbg !11502
  store float %mul478, float* %index479, align 8, !dbg !11503
  %273 = load double, double* %gamma, align 8, !dbg !11504
  %arrayidx480 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11505
  %opacity481 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx480, i32 0, i32 8, !dbg !11506
  %274 = load float, float* %opacity481, align 4, !dbg !11506
  %conv482 = fpext float %274 to double, !dbg !11505
  %mul483 = fmul double %273, %conv482, !dbg !11507
  %conv484 = fptrunc double %mul483 to float, !dbg !11504
  %275 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11508
  %opacity485 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %275, i32 0, i32 8, !dbg !11509
  store float %conv484, float* %opacity485, align 4, !dbg !11510
  br label %sw.epilog, !dbg !11511

sw.bb486:                                         ; preds = %if.end, %if.end
  call void @llvm.dbg.declare(metadata [4 x float]* %cx, metadata !11512, metadata !DIExpression()), !dbg !11517
  call void @llvm.dbg.declare(metadata [4 x float]* %cy, metadata !11518, metadata !DIExpression()), !dbg !11519
  %276 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !11520
  %277 = load i64, i64* %x_offset, align 8, !dbg !11521
  %sub487 = sub nsw i64 %277, 1, !dbg !11522
  %278 = load i64, i64* %y_offset, align 8, !dbg !11523
  %sub488 = sub nsw i64 %278, 1, !dbg !11524
  %279 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11525
  %call489 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %276, i64 %sub487, i64 %sub488, i64 4, i64 4, %struct._ExceptionInfo* %279), !dbg !11526
  store %struct._PixelPacket* %call489, %struct._PixelPacket** %p, align 8, !dbg !11527
  %280 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !11528
  %cmp490 = icmp eq %struct._PixelPacket* %280, null, !dbg !11530
  br i1 %cmp490, label %if.then492, label %if.end493, !dbg !11531

if.then492:                                       ; preds = %sw.bb486
  store i32 0, i32* %status, align 4, !dbg !11532
  br label %sw.epilog, !dbg !11534

if.end493:                                        ; preds = %sw.bb486
  %281 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !11535
  %call494 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %281), !dbg !11536
  store i16* %call494, i16** %indexes, align 8, !dbg !11537
  store i64 0, i64* %i, align 8, !dbg !11538
  br label %for.cond495, !dbg !11540

for.cond495:                                      ; preds = %for.inc507, %if.end493
  %282 = load i64, i64* %i, align 8, !dbg !11541
  %cmp496 = icmp slt i64 %282, 16, !dbg !11543
  br i1 %cmp496, label %for.body498, label %for.end509, !dbg !11544

for.body498:                                      ; preds = %for.cond495
  %283 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11545
  %arraydecay499 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11547
  %284 = load i64, i64* %i, align 8, !dbg !11548
  %add.ptr500 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay499, i64 %284, !dbg !11549
  call void @GetMagickPixelPacket(%struct._Image* %283, %struct._MagickPixelPacket* %add.ptr500), !dbg !11550
  %285 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11551
  %286 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !11552
  %287 = load i64, i64* %i, align 8, !dbg !11553
  %add.ptr501 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %286, i64 %287, !dbg !11554
  %288 = load i16*, i16** %indexes, align 8, !dbg !11555
  %289 = load i64, i64* %i, align 8, !dbg !11556
  %add.ptr502 = getelementptr inbounds i16, i16* %288, i64 %289, !dbg !11557
  %arraydecay503 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11558
  %290 = load i64, i64* %i, align 8, !dbg !11559
  %add.ptr504 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay503, i64 %290, !dbg !11560
  %arraydecay505 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !11561
  %291 = load i64, i64* %i, align 8, !dbg !11562
  %add.ptr506 = getelementptr inbounds float, float* %arraydecay505, i64 %291, !dbg !11563
  call void @AlphaBlendMagickPixelPacket(%struct._Image* %285, %struct._PixelPacket* %add.ptr501, i16* %add.ptr502, %struct._MagickPixelPacket* %add.ptr504, float* %add.ptr506), !dbg !11564
  br label %for.inc507, !dbg !11565

for.inc507:                                       ; preds = %for.body498
  %292 = load i64, i64* %i, align 8, !dbg !11566
  %inc508 = add nsw i64 %292, 1, !dbg !11566
  store i64 %inc508, i64* %i, align 8, !dbg !11566
  br label %for.cond495, !dbg !11567, !llvm.loop !11568

for.end509:                                       ; preds = %for.cond495
  %293 = load double, double* %x.addr, align 8, !dbg !11570
  %294 = load i64, i64* %x_offset, align 8, !dbg !11571
  %conv510 = sitofp i64 %294 to double, !dbg !11571
  %sub511 = fsub double %293, %conv510, !dbg !11572
  %conv512 = fptrunc double %sub511 to float, !dbg !11573
  call void @CatromWeights(float %conv512, [4 x float]* %cx), !dbg !11574
  %295 = load double, double* %y.addr, align 8, !dbg !11575
  %296 = load i64, i64* %y_offset, align 8, !dbg !11576
  %conv513 = sitofp i64 %296 to double, !dbg !11576
  %sub514 = fsub double %295, %conv513, !dbg !11577
  %conv515 = fptrunc double %sub514 to float, !dbg !11578
  call void @CatromWeights(float %conv515, [4 x float]* %cy), !dbg !11579
  %arrayidx516 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 0, !dbg !11580
  %297 = load float, float* %arrayidx516, align 16, !dbg !11580
  %arrayidx517 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11581
  %298 = load float, float* %arrayidx517, align 16, !dbg !11581
  %arrayidx518 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11582
  %red519 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx518, i32 0, i32 5, !dbg !11583
  %299 = load float, float* %red519, align 16, !dbg !11583
  %mul520 = fmul float %298, %299, !dbg !11584
  %arrayidx521 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11585
  %300 = load float, float* %arrayidx521, align 4, !dbg !11585
  %arrayidx522 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11586
  %red523 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx522, i32 0, i32 5, !dbg !11587
  %301 = load float, float* %red523, align 8, !dbg !11587
  %mul524 = fmul float %300, %301, !dbg !11588
  %add525 = fadd float %mul520, %mul524, !dbg !11589
  %arrayidx526 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11590
  %302 = load float, float* %arrayidx526, align 8, !dbg !11590
  %arrayidx527 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !11591
  %red528 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx527, i32 0, i32 5, !dbg !11592
  %303 = load float, float* %red528, align 16, !dbg !11592
  %mul529 = fmul float %302, %303, !dbg !11593
  %add530 = fadd float %add525, %mul529, !dbg !11594
  %arrayidx531 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11595
  %304 = load float, float* %arrayidx531, align 4, !dbg !11595
  %arrayidx532 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !11596
  %red533 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx532, i32 0, i32 5, !dbg !11597
  %305 = load float, float* %red533, align 8, !dbg !11597
  %mul534 = fmul float %304, %305, !dbg !11598
  %add535 = fadd float %add530, %mul534, !dbg !11599
  %mul536 = fmul float %297, %add535, !dbg !11600
  %arrayidx537 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 1, !dbg !11601
  %306 = load float, float* %arrayidx537, align 4, !dbg !11601
  %arrayidx538 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11602
  %307 = load float, float* %arrayidx538, align 16, !dbg !11602
  %arrayidx539 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 4, !dbg !11603
  %red540 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx539, i32 0, i32 5, !dbg !11604
  %308 = load float, float* %red540, align 16, !dbg !11604
  %mul541 = fmul float %307, %308, !dbg !11605
  %arrayidx542 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11606
  %309 = load float, float* %arrayidx542, align 4, !dbg !11606
  %arrayidx543 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 5, !dbg !11607
  %red544 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx543, i32 0, i32 5, !dbg !11608
  %310 = load float, float* %red544, align 8, !dbg !11608
  %mul545 = fmul float %309, %310, !dbg !11609
  %add546 = fadd float %mul541, %mul545, !dbg !11610
  %arrayidx547 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11611
  %311 = load float, float* %arrayidx547, align 8, !dbg !11611
  %arrayidx548 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 6, !dbg !11612
  %red549 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx548, i32 0, i32 5, !dbg !11613
  %312 = load float, float* %red549, align 16, !dbg !11613
  %mul550 = fmul float %311, %312, !dbg !11614
  %add551 = fadd float %add546, %mul550, !dbg !11615
  %arrayidx552 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11616
  %313 = load float, float* %arrayidx552, align 4, !dbg !11616
  %arrayidx553 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 7, !dbg !11617
  %red554 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx553, i32 0, i32 5, !dbg !11618
  %314 = load float, float* %red554, align 8, !dbg !11618
  %mul555 = fmul float %313, %314, !dbg !11619
  %add556 = fadd float %add551, %mul555, !dbg !11620
  %mul557 = fmul float %306, %add556, !dbg !11621
  %add558 = fadd float %mul536, %mul557, !dbg !11622
  %arrayidx559 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 2, !dbg !11623
  %315 = load float, float* %arrayidx559, align 8, !dbg !11623
  %arrayidx560 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11624
  %316 = load float, float* %arrayidx560, align 16, !dbg !11624
  %arrayidx561 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 8, !dbg !11625
  %red562 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx561, i32 0, i32 5, !dbg !11626
  %317 = load float, float* %red562, align 16, !dbg !11626
  %mul563 = fmul float %316, %317, !dbg !11627
  %arrayidx564 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11628
  %318 = load float, float* %arrayidx564, align 4, !dbg !11628
  %arrayidx565 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 9, !dbg !11629
  %red566 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx565, i32 0, i32 5, !dbg !11630
  %319 = load float, float* %red566, align 8, !dbg !11630
  %mul567 = fmul float %318, %319, !dbg !11631
  %add568 = fadd float %mul563, %mul567, !dbg !11632
  %arrayidx569 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11633
  %320 = load float, float* %arrayidx569, align 8, !dbg !11633
  %arrayidx570 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 10, !dbg !11634
  %red571 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx570, i32 0, i32 5, !dbg !11635
  %321 = load float, float* %red571, align 16, !dbg !11635
  %mul572 = fmul float %320, %321, !dbg !11636
  %add573 = fadd float %add568, %mul572, !dbg !11637
  %arrayidx574 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11638
  %322 = load float, float* %arrayidx574, align 4, !dbg !11638
  %arrayidx575 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 11, !dbg !11639
  %red576 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx575, i32 0, i32 5, !dbg !11640
  %323 = load float, float* %red576, align 8, !dbg !11640
  %mul577 = fmul float %322, %323, !dbg !11641
  %add578 = fadd float %add573, %mul577, !dbg !11642
  %mul579 = fmul float %315, %add578, !dbg !11643
  %add580 = fadd float %add558, %mul579, !dbg !11644
  %arrayidx581 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 3, !dbg !11645
  %324 = load float, float* %arrayidx581, align 4, !dbg !11645
  %arrayidx582 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11646
  %325 = load float, float* %arrayidx582, align 16, !dbg !11646
  %arrayidx583 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 12, !dbg !11647
  %red584 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx583, i32 0, i32 5, !dbg !11648
  %326 = load float, float* %red584, align 16, !dbg !11648
  %mul585 = fmul float %325, %326, !dbg !11649
  %arrayidx586 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11650
  %327 = load float, float* %arrayidx586, align 4, !dbg !11650
  %arrayidx587 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 13, !dbg !11651
  %red588 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx587, i32 0, i32 5, !dbg !11652
  %328 = load float, float* %red588, align 8, !dbg !11652
  %mul589 = fmul float %327, %328, !dbg !11653
  %add590 = fadd float %mul585, %mul589, !dbg !11654
  %arrayidx591 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11655
  %329 = load float, float* %arrayidx591, align 8, !dbg !11655
  %arrayidx592 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 14, !dbg !11656
  %red593 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx592, i32 0, i32 5, !dbg !11657
  %330 = load float, float* %red593, align 16, !dbg !11657
  %mul594 = fmul float %329, %330, !dbg !11658
  %add595 = fadd float %add590, %mul594, !dbg !11659
  %arrayidx596 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11660
  %331 = load float, float* %arrayidx596, align 4, !dbg !11660
  %arrayidx597 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 15, !dbg !11661
  %red598 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx597, i32 0, i32 5, !dbg !11662
  %332 = load float, float* %red598, align 8, !dbg !11662
  %mul599 = fmul float %331, %332, !dbg !11663
  %add600 = fadd float %add595, %mul599, !dbg !11664
  %mul601 = fmul float %324, %add600, !dbg !11665
  %add602 = fadd float %add580, %mul601, !dbg !11666
  %333 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11667
  %red603 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %333, i32 0, i32 5, !dbg !11668
  store float %add602, float* %red603, align 8, !dbg !11669
  %arrayidx604 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 0, !dbg !11670
  %334 = load float, float* %arrayidx604, align 16, !dbg !11670
  %arrayidx605 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11671
  %335 = load float, float* %arrayidx605, align 16, !dbg !11671
  %arrayidx606 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11672
  %green607 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx606, i32 0, i32 6, !dbg !11673
  %336 = load float, float* %green607, align 4, !dbg !11673
  %mul608 = fmul float %335, %336, !dbg !11674
  %arrayidx609 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11675
  %337 = load float, float* %arrayidx609, align 4, !dbg !11675
  %arrayidx610 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11676
  %green611 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx610, i32 0, i32 6, !dbg !11677
  %338 = load float, float* %green611, align 4, !dbg !11677
  %mul612 = fmul float %337, %338, !dbg !11678
  %add613 = fadd float %mul608, %mul612, !dbg !11679
  %arrayidx614 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11680
  %339 = load float, float* %arrayidx614, align 8, !dbg !11680
  %arrayidx615 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !11681
  %green616 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx615, i32 0, i32 6, !dbg !11682
  %340 = load float, float* %green616, align 4, !dbg !11682
  %mul617 = fmul float %339, %340, !dbg !11683
  %add618 = fadd float %add613, %mul617, !dbg !11684
  %arrayidx619 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11685
  %341 = load float, float* %arrayidx619, align 4, !dbg !11685
  %arrayidx620 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !11686
  %green621 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx620, i32 0, i32 6, !dbg !11687
  %342 = load float, float* %green621, align 4, !dbg !11687
  %mul622 = fmul float %341, %342, !dbg !11688
  %add623 = fadd float %add618, %mul622, !dbg !11689
  %mul624 = fmul float %334, %add623, !dbg !11690
  %arrayidx625 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 1, !dbg !11691
  %343 = load float, float* %arrayidx625, align 4, !dbg !11691
  %arrayidx626 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11692
  %344 = load float, float* %arrayidx626, align 16, !dbg !11692
  %arrayidx627 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 4, !dbg !11693
  %green628 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx627, i32 0, i32 6, !dbg !11694
  %345 = load float, float* %green628, align 4, !dbg !11694
  %mul629 = fmul float %344, %345, !dbg !11695
  %arrayidx630 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11696
  %346 = load float, float* %arrayidx630, align 4, !dbg !11696
  %arrayidx631 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 5, !dbg !11697
  %green632 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx631, i32 0, i32 6, !dbg !11698
  %347 = load float, float* %green632, align 4, !dbg !11698
  %mul633 = fmul float %346, %347, !dbg !11699
  %add634 = fadd float %mul629, %mul633, !dbg !11700
  %arrayidx635 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11701
  %348 = load float, float* %arrayidx635, align 8, !dbg !11701
  %arrayidx636 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 6, !dbg !11702
  %green637 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx636, i32 0, i32 6, !dbg !11703
  %349 = load float, float* %green637, align 4, !dbg !11703
  %mul638 = fmul float %348, %349, !dbg !11704
  %add639 = fadd float %add634, %mul638, !dbg !11705
  %arrayidx640 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11706
  %350 = load float, float* %arrayidx640, align 4, !dbg !11706
  %arrayidx641 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 7, !dbg !11707
  %green642 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx641, i32 0, i32 6, !dbg !11708
  %351 = load float, float* %green642, align 4, !dbg !11708
  %mul643 = fmul float %350, %351, !dbg !11709
  %add644 = fadd float %add639, %mul643, !dbg !11710
  %mul645 = fmul float %343, %add644, !dbg !11711
  %add646 = fadd float %mul624, %mul645, !dbg !11712
  %arrayidx647 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 2, !dbg !11713
  %352 = load float, float* %arrayidx647, align 8, !dbg !11713
  %arrayidx648 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11714
  %353 = load float, float* %arrayidx648, align 16, !dbg !11714
  %arrayidx649 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 8, !dbg !11715
  %green650 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx649, i32 0, i32 6, !dbg !11716
  %354 = load float, float* %green650, align 4, !dbg !11716
  %mul651 = fmul float %353, %354, !dbg !11717
  %arrayidx652 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11718
  %355 = load float, float* %arrayidx652, align 4, !dbg !11718
  %arrayidx653 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 9, !dbg !11719
  %green654 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx653, i32 0, i32 6, !dbg !11720
  %356 = load float, float* %green654, align 4, !dbg !11720
  %mul655 = fmul float %355, %356, !dbg !11721
  %add656 = fadd float %mul651, %mul655, !dbg !11722
  %arrayidx657 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11723
  %357 = load float, float* %arrayidx657, align 8, !dbg !11723
  %arrayidx658 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 10, !dbg !11724
  %green659 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx658, i32 0, i32 6, !dbg !11725
  %358 = load float, float* %green659, align 4, !dbg !11725
  %mul660 = fmul float %357, %358, !dbg !11726
  %add661 = fadd float %add656, %mul660, !dbg !11727
  %arrayidx662 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11728
  %359 = load float, float* %arrayidx662, align 4, !dbg !11728
  %arrayidx663 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 11, !dbg !11729
  %green664 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx663, i32 0, i32 6, !dbg !11730
  %360 = load float, float* %green664, align 4, !dbg !11730
  %mul665 = fmul float %359, %360, !dbg !11731
  %add666 = fadd float %add661, %mul665, !dbg !11732
  %mul667 = fmul float %352, %add666, !dbg !11733
  %add668 = fadd float %add646, %mul667, !dbg !11734
  %arrayidx669 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 3, !dbg !11735
  %361 = load float, float* %arrayidx669, align 4, !dbg !11735
  %arrayidx670 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11736
  %362 = load float, float* %arrayidx670, align 16, !dbg !11736
  %arrayidx671 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 12, !dbg !11737
  %green672 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx671, i32 0, i32 6, !dbg !11738
  %363 = load float, float* %green672, align 4, !dbg !11738
  %mul673 = fmul float %362, %363, !dbg !11739
  %arrayidx674 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11740
  %364 = load float, float* %arrayidx674, align 4, !dbg !11740
  %arrayidx675 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 13, !dbg !11741
  %green676 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx675, i32 0, i32 6, !dbg !11742
  %365 = load float, float* %green676, align 4, !dbg !11742
  %mul677 = fmul float %364, %365, !dbg !11743
  %add678 = fadd float %mul673, %mul677, !dbg !11744
  %arrayidx679 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11745
  %366 = load float, float* %arrayidx679, align 8, !dbg !11745
  %arrayidx680 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 14, !dbg !11746
  %green681 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx680, i32 0, i32 6, !dbg !11747
  %367 = load float, float* %green681, align 4, !dbg !11747
  %mul682 = fmul float %366, %367, !dbg !11748
  %add683 = fadd float %add678, %mul682, !dbg !11749
  %arrayidx684 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11750
  %368 = load float, float* %arrayidx684, align 4, !dbg !11750
  %arrayidx685 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 15, !dbg !11751
  %green686 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx685, i32 0, i32 6, !dbg !11752
  %369 = load float, float* %green686, align 4, !dbg !11752
  %mul687 = fmul float %368, %369, !dbg !11753
  %add688 = fadd float %add683, %mul687, !dbg !11754
  %mul689 = fmul float %361, %add688, !dbg !11755
  %add690 = fadd float %add668, %mul689, !dbg !11756
  %370 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11757
  %green691 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %370, i32 0, i32 6, !dbg !11758
  store float %add690, float* %green691, align 4, !dbg !11759
  %arrayidx692 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 0, !dbg !11760
  %371 = load float, float* %arrayidx692, align 16, !dbg !11760
  %arrayidx693 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11761
  %372 = load float, float* %arrayidx693, align 16, !dbg !11761
  %arrayidx694 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11762
  %blue695 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx694, i32 0, i32 7, !dbg !11763
  %373 = load float, float* %blue695, align 8, !dbg !11763
  %mul696 = fmul float %372, %373, !dbg !11764
  %arrayidx697 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11765
  %374 = load float, float* %arrayidx697, align 4, !dbg !11765
  %arrayidx698 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11766
  %blue699 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx698, i32 0, i32 7, !dbg !11767
  %375 = load float, float* %blue699, align 8, !dbg !11767
  %mul700 = fmul float %374, %375, !dbg !11768
  %add701 = fadd float %mul696, %mul700, !dbg !11769
  %arrayidx702 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11770
  %376 = load float, float* %arrayidx702, align 8, !dbg !11770
  %arrayidx703 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !11771
  %blue704 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx703, i32 0, i32 7, !dbg !11772
  %377 = load float, float* %blue704, align 8, !dbg !11772
  %mul705 = fmul float %376, %377, !dbg !11773
  %add706 = fadd float %add701, %mul705, !dbg !11774
  %arrayidx707 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11775
  %378 = load float, float* %arrayidx707, align 4, !dbg !11775
  %arrayidx708 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !11776
  %blue709 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx708, i32 0, i32 7, !dbg !11777
  %379 = load float, float* %blue709, align 8, !dbg !11777
  %mul710 = fmul float %378, %379, !dbg !11778
  %add711 = fadd float %add706, %mul710, !dbg !11779
  %mul712 = fmul float %371, %add711, !dbg !11780
  %arrayidx713 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 1, !dbg !11781
  %380 = load float, float* %arrayidx713, align 4, !dbg !11781
  %arrayidx714 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11782
  %381 = load float, float* %arrayidx714, align 16, !dbg !11782
  %arrayidx715 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 4, !dbg !11783
  %blue716 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx715, i32 0, i32 7, !dbg !11784
  %382 = load float, float* %blue716, align 8, !dbg !11784
  %mul717 = fmul float %381, %382, !dbg !11785
  %arrayidx718 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11786
  %383 = load float, float* %arrayidx718, align 4, !dbg !11786
  %arrayidx719 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 5, !dbg !11787
  %blue720 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx719, i32 0, i32 7, !dbg !11788
  %384 = load float, float* %blue720, align 8, !dbg !11788
  %mul721 = fmul float %383, %384, !dbg !11789
  %add722 = fadd float %mul717, %mul721, !dbg !11790
  %arrayidx723 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11791
  %385 = load float, float* %arrayidx723, align 8, !dbg !11791
  %arrayidx724 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 6, !dbg !11792
  %blue725 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx724, i32 0, i32 7, !dbg !11793
  %386 = load float, float* %blue725, align 8, !dbg !11793
  %mul726 = fmul float %385, %386, !dbg !11794
  %add727 = fadd float %add722, %mul726, !dbg !11795
  %arrayidx728 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11796
  %387 = load float, float* %arrayidx728, align 4, !dbg !11796
  %arrayidx729 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 7, !dbg !11797
  %blue730 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx729, i32 0, i32 7, !dbg !11798
  %388 = load float, float* %blue730, align 8, !dbg !11798
  %mul731 = fmul float %387, %388, !dbg !11799
  %add732 = fadd float %add727, %mul731, !dbg !11800
  %mul733 = fmul float %380, %add732, !dbg !11801
  %add734 = fadd float %mul712, %mul733, !dbg !11802
  %arrayidx735 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 2, !dbg !11803
  %389 = load float, float* %arrayidx735, align 8, !dbg !11803
  %arrayidx736 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11804
  %390 = load float, float* %arrayidx736, align 16, !dbg !11804
  %arrayidx737 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 8, !dbg !11805
  %blue738 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx737, i32 0, i32 7, !dbg !11806
  %391 = load float, float* %blue738, align 8, !dbg !11806
  %mul739 = fmul float %390, %391, !dbg !11807
  %arrayidx740 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11808
  %392 = load float, float* %arrayidx740, align 4, !dbg !11808
  %arrayidx741 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 9, !dbg !11809
  %blue742 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx741, i32 0, i32 7, !dbg !11810
  %393 = load float, float* %blue742, align 8, !dbg !11810
  %mul743 = fmul float %392, %393, !dbg !11811
  %add744 = fadd float %mul739, %mul743, !dbg !11812
  %arrayidx745 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11813
  %394 = load float, float* %arrayidx745, align 8, !dbg !11813
  %arrayidx746 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 10, !dbg !11814
  %blue747 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx746, i32 0, i32 7, !dbg !11815
  %395 = load float, float* %blue747, align 8, !dbg !11815
  %mul748 = fmul float %394, %395, !dbg !11816
  %add749 = fadd float %add744, %mul748, !dbg !11817
  %arrayidx750 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11818
  %396 = load float, float* %arrayidx750, align 4, !dbg !11818
  %arrayidx751 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 11, !dbg !11819
  %blue752 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx751, i32 0, i32 7, !dbg !11820
  %397 = load float, float* %blue752, align 8, !dbg !11820
  %mul753 = fmul float %396, %397, !dbg !11821
  %add754 = fadd float %add749, %mul753, !dbg !11822
  %mul755 = fmul float %389, %add754, !dbg !11823
  %add756 = fadd float %add734, %mul755, !dbg !11824
  %arrayidx757 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 3, !dbg !11825
  %398 = load float, float* %arrayidx757, align 4, !dbg !11825
  %arrayidx758 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11826
  %399 = load float, float* %arrayidx758, align 16, !dbg !11826
  %arrayidx759 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 12, !dbg !11827
  %blue760 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx759, i32 0, i32 7, !dbg !11828
  %400 = load float, float* %blue760, align 8, !dbg !11828
  %mul761 = fmul float %399, %400, !dbg !11829
  %arrayidx762 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11830
  %401 = load float, float* %arrayidx762, align 4, !dbg !11830
  %arrayidx763 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 13, !dbg !11831
  %blue764 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx763, i32 0, i32 7, !dbg !11832
  %402 = load float, float* %blue764, align 8, !dbg !11832
  %mul765 = fmul float %401, %402, !dbg !11833
  %add766 = fadd float %mul761, %mul765, !dbg !11834
  %arrayidx767 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11835
  %403 = load float, float* %arrayidx767, align 8, !dbg !11835
  %arrayidx768 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 14, !dbg !11836
  %blue769 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx768, i32 0, i32 7, !dbg !11837
  %404 = load float, float* %blue769, align 8, !dbg !11837
  %mul770 = fmul float %403, %404, !dbg !11838
  %add771 = fadd float %add766, %mul770, !dbg !11839
  %arrayidx772 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11840
  %405 = load float, float* %arrayidx772, align 4, !dbg !11840
  %arrayidx773 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 15, !dbg !11841
  %blue774 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx773, i32 0, i32 7, !dbg !11842
  %406 = load float, float* %blue774, align 8, !dbg !11842
  %mul775 = fmul float %405, %406, !dbg !11843
  %add776 = fadd float %add771, %mul775, !dbg !11844
  %mul777 = fmul float %398, %add776, !dbg !11845
  %add778 = fadd float %add756, %mul777, !dbg !11846
  %407 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11847
  %blue779 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %407, i32 0, i32 7, !dbg !11848
  store float %add778, float* %blue779, align 8, !dbg !11849
  %arrayidx780 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 0, !dbg !11850
  %408 = load float, float* %arrayidx780, align 16, !dbg !11850
  %arrayidx781 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11851
  %409 = load float, float* %arrayidx781, align 16, !dbg !11851
  %arrayidx782 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !11852
  %opacity783 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx782, i32 0, i32 8, !dbg !11853
  %410 = load float, float* %opacity783, align 4, !dbg !11853
  %mul784 = fmul float %409, %410, !dbg !11854
  %arrayidx785 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11855
  %411 = load float, float* %arrayidx785, align 4, !dbg !11855
  %arrayidx786 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !11856
  %opacity787 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx786, i32 0, i32 8, !dbg !11857
  %412 = load float, float* %opacity787, align 4, !dbg !11857
  %mul788 = fmul float %411, %412, !dbg !11858
  %add789 = fadd float %mul784, %mul788, !dbg !11859
  %arrayidx790 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11860
  %413 = load float, float* %arrayidx790, align 8, !dbg !11860
  %arrayidx791 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !11861
  %opacity792 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx791, i32 0, i32 8, !dbg !11862
  %414 = load float, float* %opacity792, align 4, !dbg !11862
  %mul793 = fmul float %413, %414, !dbg !11863
  %add794 = fadd float %add789, %mul793, !dbg !11864
  %arrayidx795 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11865
  %415 = load float, float* %arrayidx795, align 4, !dbg !11865
  %arrayidx796 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !11866
  %opacity797 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx796, i32 0, i32 8, !dbg !11867
  %416 = load float, float* %opacity797, align 4, !dbg !11867
  %mul798 = fmul float %415, %416, !dbg !11868
  %add799 = fadd float %add794, %mul798, !dbg !11869
  %mul800 = fmul float %408, %add799, !dbg !11870
  %arrayidx801 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 1, !dbg !11871
  %417 = load float, float* %arrayidx801, align 4, !dbg !11871
  %arrayidx802 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11872
  %418 = load float, float* %arrayidx802, align 16, !dbg !11872
  %arrayidx803 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 4, !dbg !11873
  %opacity804 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx803, i32 0, i32 8, !dbg !11874
  %419 = load float, float* %opacity804, align 4, !dbg !11874
  %mul805 = fmul float %418, %419, !dbg !11875
  %arrayidx806 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11876
  %420 = load float, float* %arrayidx806, align 4, !dbg !11876
  %arrayidx807 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 5, !dbg !11877
  %opacity808 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx807, i32 0, i32 8, !dbg !11878
  %421 = load float, float* %opacity808, align 4, !dbg !11878
  %mul809 = fmul float %420, %421, !dbg !11879
  %add810 = fadd float %mul805, %mul809, !dbg !11880
  %arrayidx811 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11881
  %422 = load float, float* %arrayidx811, align 8, !dbg !11881
  %arrayidx812 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 6, !dbg !11882
  %opacity813 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx812, i32 0, i32 8, !dbg !11883
  %423 = load float, float* %opacity813, align 4, !dbg !11883
  %mul814 = fmul float %422, %423, !dbg !11884
  %add815 = fadd float %add810, %mul814, !dbg !11885
  %arrayidx816 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11886
  %424 = load float, float* %arrayidx816, align 4, !dbg !11886
  %arrayidx817 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 7, !dbg !11887
  %opacity818 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx817, i32 0, i32 8, !dbg !11888
  %425 = load float, float* %opacity818, align 4, !dbg !11888
  %mul819 = fmul float %424, %425, !dbg !11889
  %add820 = fadd float %add815, %mul819, !dbg !11890
  %mul821 = fmul float %417, %add820, !dbg !11891
  %add822 = fadd float %mul800, %mul821, !dbg !11892
  %arrayidx823 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 2, !dbg !11893
  %426 = load float, float* %arrayidx823, align 8, !dbg !11893
  %arrayidx824 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11894
  %427 = load float, float* %arrayidx824, align 16, !dbg !11894
  %arrayidx825 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 8, !dbg !11895
  %opacity826 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx825, i32 0, i32 8, !dbg !11896
  %428 = load float, float* %opacity826, align 4, !dbg !11896
  %mul827 = fmul float %427, %428, !dbg !11897
  %arrayidx828 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11898
  %429 = load float, float* %arrayidx828, align 4, !dbg !11898
  %arrayidx829 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 9, !dbg !11899
  %opacity830 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx829, i32 0, i32 8, !dbg !11900
  %430 = load float, float* %opacity830, align 4, !dbg !11900
  %mul831 = fmul float %429, %430, !dbg !11901
  %add832 = fadd float %mul827, %mul831, !dbg !11902
  %arrayidx833 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11903
  %431 = load float, float* %arrayidx833, align 8, !dbg !11903
  %arrayidx834 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 10, !dbg !11904
  %opacity835 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx834, i32 0, i32 8, !dbg !11905
  %432 = load float, float* %opacity835, align 4, !dbg !11905
  %mul836 = fmul float %431, %432, !dbg !11906
  %add837 = fadd float %add832, %mul836, !dbg !11907
  %arrayidx838 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11908
  %433 = load float, float* %arrayidx838, align 4, !dbg !11908
  %arrayidx839 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 11, !dbg !11909
  %opacity840 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx839, i32 0, i32 8, !dbg !11910
  %434 = load float, float* %opacity840, align 4, !dbg !11910
  %mul841 = fmul float %433, %434, !dbg !11911
  %add842 = fadd float %add837, %mul841, !dbg !11912
  %mul843 = fmul float %426, %add842, !dbg !11913
  %add844 = fadd float %add822, %mul843, !dbg !11914
  %arrayidx845 = getelementptr inbounds [4 x float], [4 x float]* %cy, i64 0, i64 3, !dbg !11915
  %435 = load float, float* %arrayidx845, align 4, !dbg !11915
  %arrayidx846 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 0, !dbg !11916
  %436 = load float, float* %arrayidx846, align 16, !dbg !11916
  %arrayidx847 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 12, !dbg !11917
  %opacity848 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx847, i32 0, i32 8, !dbg !11918
  %437 = load float, float* %opacity848, align 4, !dbg !11918
  %mul849 = fmul float %436, %437, !dbg !11919
  %arrayidx850 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 1, !dbg !11920
  %438 = load float, float* %arrayidx850, align 4, !dbg !11920
  %arrayidx851 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 13, !dbg !11921
  %opacity852 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx851, i32 0, i32 8, !dbg !11922
  %439 = load float, float* %opacity852, align 4, !dbg !11922
  %mul853 = fmul float %438, %439, !dbg !11923
  %add854 = fadd float %mul849, %mul853, !dbg !11924
  %arrayidx855 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 2, !dbg !11925
  %440 = load float, float* %arrayidx855, align 8, !dbg !11925
  %arrayidx856 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 14, !dbg !11926
  %opacity857 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx856, i32 0, i32 8, !dbg !11927
  %441 = load float, float* %opacity857, align 4, !dbg !11927
  %mul858 = fmul float %440, %441, !dbg !11928
  %add859 = fadd float %add854, %mul858, !dbg !11929
  %arrayidx860 = getelementptr inbounds [4 x float], [4 x float]* %cx, i64 0, i64 3, !dbg !11930
  %442 = load float, float* %arrayidx860, align 4, !dbg !11930
  %arrayidx861 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 15, !dbg !11931
  %opacity862 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx861, i32 0, i32 8, !dbg !11932
  %443 = load float, float* %opacity862, align 4, !dbg !11932
  %mul863 = fmul float %442, %443, !dbg !11933
  %add864 = fadd float %add859, %mul863, !dbg !11934
  %mul865 = fmul float %435, %add864, !dbg !11935
  %add866 = fadd float %add844, %mul865, !dbg !11936
  %444 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !11937
  %opacity867 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %444, i32 0, i32 8, !dbg !11938
  store float %add866, float* %opacity867, align 4, !dbg !11939
  br label %sw.epilog, !dbg !11940

sw.bb868:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._CacheView** %filter_view, metadata !11941, metadata !DIExpression()), !dbg !11944
  call void @llvm.dbg.declare(metadata %struct._Image** %excerpt_image, metadata !11945, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.declare(metadata %struct._Image** %filter_image, metadata !11947, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %geometry, metadata !11949, metadata !DIExpression()), !dbg !11950
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !11951
  store i64 4, i64* %width, align 8, !dbg !11952
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !11953
  store i64 4, i64* %height, align 8, !dbg !11954
  %445 = load i64, i64* %x_offset, align 8, !dbg !11955
  %sub869 = sub nsw i64 %445, 1, !dbg !11956
  %x870 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !11957
  store i64 %sub869, i64* %x870, align 8, !dbg !11958
  %446 = load i64, i64* %y_offset, align 8, !dbg !11959
  %sub871 = sub nsw i64 %446, 1, !dbg !11960
  %y872 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !11961
  store i64 %sub871, i64* %y872, align 8, !dbg !11962
  %447 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11963
  %448 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11964
  %call873 = call %struct._Image* @ExcerptImage(%struct._Image* %447, %struct._RectangleInfo* %geometry, %struct._ExceptionInfo* %448), !dbg !11965
  store %struct._Image* %call873, %struct._Image** %excerpt_image, align 8, !dbg !11966
  %449 = load %struct._Image*, %struct._Image** %excerpt_image, align 8, !dbg !11967
  %cmp874 = icmp eq %struct._Image* %449, null, !dbg !11969
  br i1 %cmp874, label %if.then876, label %if.end877, !dbg !11970

if.then876:                                       ; preds = %sw.bb868
  store i32 0, i32* %status, align 4, !dbg !11971
  br label %sw.epilog, !dbg !11973

if.end877:                                        ; preds = %sw.bb868
  %450 = load %struct._Image*, %struct._Image** %excerpt_image, align 8, !dbg !11974
  %451 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11975
  %filter = getelementptr inbounds %struct._Image, %struct._Image* %451, i32 0, i32 32, !dbg !11976
  %452 = load i32, i32* %filter, align 8, !dbg !11976
  %453 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11977
  %blur = getelementptr inbounds %struct._Image, %struct._Image* %453, i32 0, i32 30, !dbg !11978
  %454 = load double, double* %blur, align 8, !dbg !11978
  %455 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11979
  %call878 = call %struct._Image* @ResizeImage(%struct._Image* %450, i64 1, i64 1, i32 %452, double %454, %struct._ExceptionInfo* %455), !dbg !11980
  store %struct._Image* %call878, %struct._Image** %filter_image, align 8, !dbg !11981
  %456 = load %struct._Image*, %struct._Image** %excerpt_image, align 8, !dbg !11982
  %call879 = call %struct._Image* @DestroyImage(%struct._Image* %456), !dbg !11983
  store %struct._Image* %call879, %struct._Image** %excerpt_image, align 8, !dbg !11984
  %457 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !11985
  %cmp880 = icmp eq %struct._Image* %457, null, !dbg !11987
  br i1 %cmp880, label %if.then882, label %if.end883, !dbg !11988

if.then882:                                       ; preds = %if.end877
  br label %sw.epilog, !dbg !11989

if.end883:                                        ; preds = %if.end877
  %458 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !11990
  %459 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11991
  %call884 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %458, %struct._ExceptionInfo* %459), !dbg !11992
  store %struct._CacheView* %call884, %struct._CacheView** %filter_view, align 8, !dbg !11993
  %460 = load %struct._CacheView*, %struct._CacheView** %filter_view, align 8, !dbg !11994
  %461 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !11995
  %call885 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %460, i64 0, i64 0, i64 1, i64 1, %struct._ExceptionInfo* %461), !dbg !11996
  store %struct._PixelPacket* %call885, %struct._PixelPacket** %p, align 8, !dbg !11997
  %462 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !11998
  %cmp886 = icmp ne %struct._PixelPacket* %462, null, !dbg !12000
  br i1 %cmp886, label %if.then888, label %if.end890, !dbg !12001

if.then888:                                       ; preds = %if.end883
  %463 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !12002
  %call889 = call i16* @GetVirtualIndexQueue(%struct._Image* %463), !dbg !12004
  store i16* %call889, i16** %indexes, align 8, !dbg !12005
  %464 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12006
  %465 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !12007
  %466 = load i16*, i16** %indexes, align 8, !dbg !12008
  %467 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12009
  call void @SetMagickPixelPacket(%struct._Image* %464, %struct._PixelPacket* %465, i16* %466, %struct._MagickPixelPacket* %467), !dbg !12010
  br label %if.end890, !dbg !12011

if.end890:                                        ; preds = %if.then888, %if.end883
  %468 = load %struct._CacheView*, %struct._CacheView** %filter_view, align 8, !dbg !12012
  %call891 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %468), !dbg !12013
  store %struct._CacheView* %call891, %struct._CacheView** %filter_view, align 8, !dbg !12014
  %469 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !12015
  %call892 = call %struct._Image* @DestroyImage(%struct._Image* %469), !dbg !12016
  store %struct._Image* %call892, %struct._Image** %filter_image, align 8, !dbg !12017
  br label %sw.epilog, !dbg !12018

sw.bb893:                                         ; preds = %if.end
  %470 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !12019
  %471 = load i64, i64* %x_offset, align 8, !dbg !12021
  %472 = load i64, i64* %y_offset, align 8, !dbg !12022
  %473 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !12023
  %call894 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %470, i64 %471, i64 %472, i64 1, i64 1, %struct._ExceptionInfo* %473), !dbg !12024
  store %struct._PixelPacket* %call894, %struct._PixelPacket** %p, align 8, !dbg !12025
  %474 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !12026
  %cmp895 = icmp eq %struct._PixelPacket* %474, null, !dbg !12028
  br i1 %cmp895, label %if.then897, label %if.end898, !dbg !12029

if.then897:                                       ; preds = %sw.bb893
  store i32 0, i32* %status, align 4, !dbg !12030
  br label %sw.epilog, !dbg !12032

if.end898:                                        ; preds = %sw.bb893
  %475 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !12033
  %call899 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %475), !dbg !12034
  store i16* %call899, i16** %indexes, align 8, !dbg !12035
  %476 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12036
  %477 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !12037
  %478 = load i16*, i16** %indexes, align 8, !dbg !12038
  %479 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12039
  call void @SetMagickPixelPacket(%struct._Image* %476, %struct._PixelPacket* %477, i16* %478, %struct._MagickPixelPacket* %479), !dbg !12040
  br label %sw.epilog, !dbg !12041

sw.bb900:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %delta901, metadata !12042, metadata !DIExpression()), !dbg !12044
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %luma, metadata !12045, metadata !DIExpression()), !dbg !12046
  %480 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !12047
  %481 = load i64, i64* %x_offset, align 8, !dbg !12048
  %482 = load i64, i64* %y_offset, align 8, !dbg !12049
  %483 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !12050
  %call902 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %480, i64 %481, i64 %482, i64 2, i64 2, %struct._ExceptionInfo* %483), !dbg !12051
  store %struct._PixelPacket* %call902, %struct._PixelPacket** %p, align 8, !dbg !12052
  %484 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !12053
  %cmp903 = icmp eq %struct._PixelPacket* %484, null, !dbg !12055
  br i1 %cmp903, label %if.then905, label %if.end906, !dbg !12056

if.then905:                                       ; preds = %sw.bb900
  store i32 0, i32* %status, align 4, !dbg !12057
  br label %sw.epilog, !dbg !12059

if.end906:                                        ; preds = %sw.bb900
  %485 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !12060
  %call907 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %485), !dbg !12061
  store i16* %call907, i16** %indexes, align 8, !dbg !12062
  store i64 0, i64* %i, align 8, !dbg !12063
  br label %for.cond908, !dbg !12065

for.cond908:                                      ; preds = %for.inc920, %if.end906
  %486 = load i64, i64* %i, align 8, !dbg !12066
  %cmp909 = icmp slt i64 %486, 4, !dbg !12068
  br i1 %cmp909, label %for.body911, label %for.end922, !dbg !12069

for.body911:                                      ; preds = %for.cond908
  %487 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12070
  %arraydecay912 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12072
  %488 = load i64, i64* %i, align 8, !dbg !12073
  %add.ptr913 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay912, i64 %488, !dbg !12074
  call void @GetMagickPixelPacket(%struct._Image* %487, %struct._MagickPixelPacket* %add.ptr913), !dbg !12075
  %489 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12076
  %490 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !12077
  %491 = load i64, i64* %i, align 8, !dbg !12078
  %add.ptr914 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %490, i64 %491, !dbg !12079
  %492 = load i16*, i16** %indexes, align 8, !dbg !12080
  %493 = load i64, i64* %i, align 8, !dbg !12081
  %add.ptr915 = getelementptr inbounds i16, i16* %492, i64 %493, !dbg !12082
  %arraydecay916 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12083
  %494 = load i64, i64* %i, align 8, !dbg !12084
  %add.ptr917 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay916, i64 %494, !dbg !12085
  %arraydecay918 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !12086
  %495 = load i64, i64* %i, align 8, !dbg !12087
  %add.ptr919 = getelementptr inbounds float, float* %arraydecay918, i64 %495, !dbg !12088
  call void @AlphaBlendMagickPixelPacket(%struct._Image* %489, %struct._PixelPacket* %add.ptr914, i16* %add.ptr915, %struct._MagickPixelPacket* %add.ptr917, float* %add.ptr919), !dbg !12089
  br label %for.inc920, !dbg !12090

for.inc920:                                       ; preds = %for.body911
  %496 = load i64, i64* %i, align 8, !dbg !12091
  %inc921 = add nsw i64 %496, 1, !dbg !12091
  store i64 %inc921, i64* %i, align 8, !dbg !12091
  br label %for.cond908, !dbg !12092, !llvm.loop !12093

for.end922:                                       ; preds = %for.cond908
  %497 = load double, double* %x.addr, align 8, !dbg !12095
  %498 = load i64, i64* %x_offset, align 8, !dbg !12096
  %conv923 = sitofp i64 %498 to double, !dbg !12096
  %sub924 = fsub double %497, %conv923, !dbg !12097
  %x925 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 0, !dbg !12098
  store double %sub924, double* %x925, align 8, !dbg !12099
  %499 = load double, double* %y.addr, align 8, !dbg !12100
  %500 = load i64, i64* %y_offset, align 8, !dbg !12101
  %conv926 = sitofp i64 %500 to double, !dbg !12101
  %sub927 = fsub double %499, %conv926, !dbg !12102
  %y928 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 1, !dbg !12103
  store double %sub927, double* %y928, align 8, !dbg !12104
  %arraydecay929 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12105
  %add.ptr930 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay929, i64 0, !dbg !12106
  %call931 = call float @MagickPixelLuma(%struct._MagickPixelPacket* %add.ptr930), !dbg !12107
  %arraydecay932 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12108
  %add.ptr933 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay932, i64 3, !dbg !12109
  %call934 = call float @MagickPixelLuma(%struct._MagickPixelPacket* %add.ptr933), !dbg !12110
  %sub935 = fsub float %call931, %call934, !dbg !12111
  %conv936 = fpext float %sub935 to double, !dbg !12107
  %501 = call double @llvm.fabs.f64(double %conv936), !dbg !12112
  %x937 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %luma, i32 0, i32 0, !dbg !12113
  store double %501, double* %x937, align 8, !dbg !12114
  %arraydecay938 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12115
  %add.ptr939 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay938, i64 1, !dbg !12116
  %call940 = call float @MagickPixelLuma(%struct._MagickPixelPacket* %add.ptr939), !dbg !12117
  %arraydecay941 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12118
  %add.ptr942 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay941, i64 2, !dbg !12119
  %call943 = call float @MagickPixelLuma(%struct._MagickPixelPacket* %add.ptr942), !dbg !12120
  %sub944 = fsub float %call940, %call943, !dbg !12121
  %conv945 = fpext float %sub944 to double, !dbg !12117
  %502 = call double @llvm.fabs.f64(double %conv945), !dbg !12122
  %y946 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %luma, i32 0, i32 1, !dbg !12123
  store double %502, double* %y946, align 8, !dbg !12124
  %x947 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %luma, i32 0, i32 0, !dbg !12125
  %503 = load double, double* %x947, align 8, !dbg !12125
  %y948 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %luma, i32 0, i32 1, !dbg !12127
  %504 = load double, double* %y948, align 8, !dbg !12127
  %cmp949 = fcmp olt double %503, %504, !dbg !12128
  br i1 %cmp949, label %if.then951, label %if.else1131, !dbg !12129

if.then951:                                       ; preds = %for.end922
  %x952 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 0, !dbg !12130
  %505 = load double, double* %x952, align 8, !dbg !12130
  %y953 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 1, !dbg !12133
  %506 = load double, double* %y953, align 8, !dbg !12133
  %cmp954 = fcmp ole double %505, %506, !dbg !12134
  br i1 %cmp954, label %if.then956, label %if.else1043, !dbg !12135

if.then956:                                       ; preds = %if.then951
  %y957 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 1, !dbg !12136
  %507 = load double, double* %y957, align 8, !dbg !12136
  %sub958 = fsub double 1.000000e+00, %507, !dbg !12138
  %y959 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 1, !dbg !12139
  store double %sub958, double* %y959, align 8, !dbg !12140
  %arrayidx960 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 2, !dbg !12141
  %508 = load float, float* %arrayidx960, align 8, !dbg !12141
  %conv961 = fpext float %508 to double, !dbg !12141
  %arrayidx962 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 3, !dbg !12142
  %509 = load float, float* %arrayidx962, align 4, !dbg !12142
  %conv963 = fpext float %509 to double, !dbg !12142
  %arrayidx964 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !12143
  %510 = load float, float* %arrayidx964, align 16, !dbg !12143
  %conv965 = fpext float %510 to double, !dbg !12143
  %call966 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv961, double %conv963, double %conv965), !dbg !12144
  store double %call966, double* %gamma, align 8, !dbg !12145
  %511 = load double, double* %gamma, align 8, !dbg !12146
  %cmp967 = fcmp olt double %511, 0.000000e+00, !dbg !12148
  br i1 %cmp967, label %if.then969, label %if.end970, !dbg !12149

if.then969:                                       ; preds = %if.then956
  store double 0.000000e+00, double* %gamma, align 8, !dbg !12150
  br label %if.end970, !dbg !12151

if.end970:                                        ; preds = %if.then969, %if.then956
  %512 = load double, double* %gamma, align 8, !dbg !12152
  %call971 = call double @PerceptibleReciprocal(double %512), !dbg !12153
  store double %call971, double* %gamma, align 8, !dbg !12154
  %513 = load double, double* %gamma, align 8, !dbg !12155
  %arrayidx972 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12156
  %red973 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx972, i32 0, i32 5, !dbg !12157
  %514 = load float, float* %red973, align 16, !dbg !12157
  %conv974 = fpext float %514 to double, !dbg !12156
  %arrayidx975 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12158
  %red976 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx975, i32 0, i32 5, !dbg !12159
  %515 = load float, float* %red976, align 8, !dbg !12159
  %conv977 = fpext float %515 to double, !dbg !12158
  %arrayidx978 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12160
  %red979 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx978, i32 0, i32 5, !dbg !12161
  %516 = load float, float* %red979, align 16, !dbg !12161
  %conv980 = fpext float %516 to double, !dbg !12160
  %call981 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv974, double %conv977, double %conv980), !dbg !12162
  %mul982 = fmul double %513, %call981, !dbg !12163
  %conv983 = fptrunc double %mul982 to float, !dbg !12155
  %517 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12164
  %red984 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %517, i32 0, i32 5, !dbg !12165
  store float %conv983, float* %red984, align 8, !dbg !12166
  %518 = load double, double* %gamma, align 8, !dbg !12167
  %arrayidx985 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12168
  %green986 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx985, i32 0, i32 6, !dbg !12169
  %519 = load float, float* %green986, align 4, !dbg !12169
  %conv987 = fpext float %519 to double, !dbg !12168
  %arrayidx988 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12170
  %green989 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx988, i32 0, i32 6, !dbg !12171
  %520 = load float, float* %green989, align 4, !dbg !12171
  %conv990 = fpext float %520 to double, !dbg !12170
  %arrayidx991 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12172
  %green992 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx991, i32 0, i32 6, !dbg !12173
  %521 = load float, float* %green992, align 4, !dbg !12173
  %conv993 = fpext float %521 to double, !dbg !12172
  %call994 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv987, double %conv990, double %conv993), !dbg !12174
  %mul995 = fmul double %518, %call994, !dbg !12175
  %conv996 = fptrunc double %mul995 to float, !dbg !12167
  %522 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12176
  %green997 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %522, i32 0, i32 6, !dbg !12177
  store float %conv996, float* %green997, align 4, !dbg !12178
  %523 = load double, double* %gamma, align 8, !dbg !12179
  %arrayidx998 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12180
  %blue999 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx998, i32 0, i32 7, !dbg !12181
  %524 = load float, float* %blue999, align 8, !dbg !12181
  %conv1000 = fpext float %524 to double, !dbg !12180
  %arrayidx1001 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12182
  %blue1002 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1001, i32 0, i32 7, !dbg !12183
  %525 = load float, float* %blue1002, align 8, !dbg !12183
  %conv1003 = fpext float %525 to double, !dbg !12182
  %arrayidx1004 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12184
  %blue1005 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1004, i32 0, i32 7, !dbg !12185
  %526 = load float, float* %blue1005, align 8, !dbg !12185
  %conv1006 = fpext float %526 to double, !dbg !12184
  %call1007 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1000, double %conv1003, double %conv1006), !dbg !12186
  %mul1008 = fmul double %523, %call1007, !dbg !12187
  %conv1009 = fptrunc double %mul1008 to float, !dbg !12179
  %527 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12188
  %blue1010 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %527, i32 0, i32 7, !dbg !12189
  store float %conv1009, float* %blue1010, align 8, !dbg !12190
  %528 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12191
  %colorspace1011 = getelementptr inbounds %struct._Image, %struct._Image* %528, i32 0, i32 1, !dbg !12193
  %529 = load i32, i32* %colorspace1011, align 4, !dbg !12193
  %cmp1012 = icmp eq i32 %529, 12, !dbg !12194
  br i1 %cmp1012, label %if.then1014, label %if.end1028, !dbg !12195

if.then1014:                                      ; preds = %if.end970
  %530 = load double, double* %gamma, align 8, !dbg !12196
  %arrayidx1015 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12197
  %index1016 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1015, i32 0, i32 9, !dbg !12198
  %531 = load float, float* %index1016, align 16, !dbg !12198
  %conv1017 = fpext float %531 to double, !dbg !12197
  %arrayidx1018 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12199
  %index1019 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1018, i32 0, i32 9, !dbg !12200
  %532 = load float, float* %index1019, align 8, !dbg !12200
  %conv1020 = fpext float %532 to double, !dbg !12199
  %arrayidx1021 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12201
  %index1022 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1021, i32 0, i32 9, !dbg !12202
  %533 = load float, float* %index1022, align 16, !dbg !12202
  %conv1023 = fpext float %533 to double, !dbg !12201
  %call1024 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1017, double %conv1020, double %conv1023), !dbg !12203
  %mul1025 = fmul double %530, %call1024, !dbg !12204
  %conv1026 = fptrunc double %mul1025 to float, !dbg !12196
  %534 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12205
  %index1027 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %534, i32 0, i32 9, !dbg !12206
  store float %conv1026, float* %index1027, align 8, !dbg !12207
  br label %if.end1028, !dbg !12205

if.end1028:                                       ; preds = %if.then1014, %if.end970
  %call1029 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00), !dbg !12208
  store double %call1029, double* %gamma, align 8, !dbg !12209
  %535 = load double, double* %gamma, align 8, !dbg !12210
  %arrayidx1030 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12211
  %opacity1031 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1030, i32 0, i32 8, !dbg !12212
  %536 = load float, float* %opacity1031, align 4, !dbg !12212
  %conv1032 = fpext float %536 to double, !dbg !12211
  %arrayidx1033 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12213
  %opacity1034 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1033, i32 0, i32 8, !dbg !12214
  %537 = load float, float* %opacity1034, align 4, !dbg !12214
  %conv1035 = fpext float %537 to double, !dbg !12213
  %arrayidx1036 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12215
  %opacity1037 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1036, i32 0, i32 8, !dbg !12216
  %538 = load float, float* %opacity1037, align 4, !dbg !12216
  %conv1038 = fpext float %538 to double, !dbg !12215
  %call1039 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1032, double %conv1035, double %conv1038), !dbg !12217
  %mul1040 = fmul double %535, %call1039, !dbg !12218
  %conv1041 = fptrunc double %mul1040 to float, !dbg !12210
  %539 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12219
  %opacity1042 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %539, i32 0, i32 8, !dbg !12220
  store float %conv1041, float* %opacity1042, align 4, !dbg !12221
  br label %if.end1130, !dbg !12222

if.else1043:                                      ; preds = %if.then951
  %x1044 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 0, !dbg !12223
  %540 = load double, double* %x1044, align 8, !dbg !12223
  %sub1045 = fsub double 1.000000e+00, %540, !dbg !12225
  %x1046 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 0, !dbg !12226
  store double %sub1045, double* %x1046, align 8, !dbg !12227
  %arrayidx1047 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 1, !dbg !12228
  %541 = load float, float* %arrayidx1047, align 4, !dbg !12228
  %conv1048 = fpext float %541 to double, !dbg !12228
  %arrayidx1049 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !12229
  %542 = load float, float* %arrayidx1049, align 16, !dbg !12229
  %conv1050 = fpext float %542 to double, !dbg !12229
  %arrayidx1051 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 3, !dbg !12230
  %543 = load float, float* %arrayidx1051, align 4, !dbg !12230
  %conv1052 = fpext float %543 to double, !dbg !12230
  %call1053 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1048, double %conv1050, double %conv1052), !dbg !12231
  store double %call1053, double* %gamma, align 8, !dbg !12232
  %544 = load double, double* %gamma, align 8, !dbg !12233
  %cmp1054 = fcmp olt double %544, 0.000000e+00, !dbg !12235
  br i1 %cmp1054, label %if.then1056, label %if.end1057, !dbg !12236

if.then1056:                                      ; preds = %if.else1043
  store double 0.000000e+00, double* %gamma, align 8, !dbg !12237
  br label %if.end1057, !dbg !12238

if.end1057:                                       ; preds = %if.then1056, %if.else1043
  %545 = load double, double* %gamma, align 8, !dbg !12239
  %call1058 = call double @PerceptibleReciprocal(double %545), !dbg !12240
  store double %call1058, double* %gamma, align 8, !dbg !12241
  %546 = load double, double* %gamma, align 8, !dbg !12242
  %arrayidx1059 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12243
  %red1060 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1059, i32 0, i32 5, !dbg !12244
  %547 = load float, float* %red1060, align 8, !dbg !12244
  %conv1061 = fpext float %547 to double, !dbg !12243
  %arrayidx1062 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12245
  %red1063 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1062, i32 0, i32 5, !dbg !12246
  %548 = load float, float* %red1063, align 16, !dbg !12246
  %conv1064 = fpext float %548 to double, !dbg !12245
  %arrayidx1065 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12247
  %red1066 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1065, i32 0, i32 5, !dbg !12248
  %549 = load float, float* %red1066, align 8, !dbg !12248
  %conv1067 = fpext float %549 to double, !dbg !12247
  %call1068 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1061, double %conv1064, double %conv1067), !dbg !12249
  %mul1069 = fmul double %546, %call1068, !dbg !12250
  %conv1070 = fptrunc double %mul1069 to float, !dbg !12242
  %550 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12251
  %red1071 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %550, i32 0, i32 5, !dbg !12252
  store float %conv1070, float* %red1071, align 8, !dbg !12253
  %551 = load double, double* %gamma, align 8, !dbg !12254
  %arrayidx1072 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12255
  %green1073 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1072, i32 0, i32 6, !dbg !12256
  %552 = load float, float* %green1073, align 4, !dbg !12256
  %conv1074 = fpext float %552 to double, !dbg !12255
  %arrayidx1075 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12257
  %green1076 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1075, i32 0, i32 6, !dbg !12258
  %553 = load float, float* %green1076, align 4, !dbg !12258
  %conv1077 = fpext float %553 to double, !dbg !12257
  %arrayidx1078 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12259
  %green1079 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1078, i32 0, i32 6, !dbg !12260
  %554 = load float, float* %green1079, align 4, !dbg !12260
  %conv1080 = fpext float %554 to double, !dbg !12259
  %call1081 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1074, double %conv1077, double %conv1080), !dbg !12261
  %mul1082 = fmul double %551, %call1081, !dbg !12262
  %conv1083 = fptrunc double %mul1082 to float, !dbg !12254
  %555 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12263
  %green1084 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %555, i32 0, i32 6, !dbg !12264
  store float %conv1083, float* %green1084, align 4, !dbg !12265
  %556 = load double, double* %gamma, align 8, !dbg !12266
  %arrayidx1085 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12267
  %blue1086 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1085, i32 0, i32 7, !dbg !12268
  %557 = load float, float* %blue1086, align 8, !dbg !12268
  %conv1087 = fpext float %557 to double, !dbg !12267
  %arrayidx1088 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12269
  %blue1089 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1088, i32 0, i32 7, !dbg !12270
  %558 = load float, float* %blue1089, align 8, !dbg !12270
  %conv1090 = fpext float %558 to double, !dbg !12269
  %arrayidx1091 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12271
  %blue1092 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1091, i32 0, i32 7, !dbg !12272
  %559 = load float, float* %blue1092, align 8, !dbg !12272
  %conv1093 = fpext float %559 to double, !dbg !12271
  %call1094 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1087, double %conv1090, double %conv1093), !dbg !12273
  %mul1095 = fmul double %556, %call1094, !dbg !12274
  %conv1096 = fptrunc double %mul1095 to float, !dbg !12266
  %560 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12275
  %blue1097 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %560, i32 0, i32 7, !dbg !12276
  store float %conv1096, float* %blue1097, align 8, !dbg !12277
  %561 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12278
  %colorspace1098 = getelementptr inbounds %struct._Image, %struct._Image* %561, i32 0, i32 1, !dbg !12280
  %562 = load i32, i32* %colorspace1098, align 4, !dbg !12280
  %cmp1099 = icmp eq i32 %562, 12, !dbg !12281
  br i1 %cmp1099, label %if.then1101, label %if.end1115, !dbg !12282

if.then1101:                                      ; preds = %if.end1057
  %563 = load double, double* %gamma, align 8, !dbg !12283
  %arrayidx1102 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12284
  %index1103 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1102, i32 0, i32 9, !dbg !12285
  %564 = load float, float* %index1103, align 8, !dbg !12285
  %conv1104 = fpext float %564 to double, !dbg !12284
  %arrayidx1105 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12286
  %index1106 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1105, i32 0, i32 9, !dbg !12287
  %565 = load float, float* %index1106, align 16, !dbg !12287
  %conv1107 = fpext float %565 to double, !dbg !12286
  %arrayidx1108 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12288
  %index1109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1108, i32 0, i32 9, !dbg !12289
  %566 = load float, float* %index1109, align 8, !dbg !12289
  %conv1110 = fpext float %566 to double, !dbg !12288
  %call1111 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1104, double %conv1107, double %conv1110), !dbg !12290
  %mul1112 = fmul double %563, %call1111, !dbg !12291
  %conv1113 = fptrunc double %mul1112 to float, !dbg !12283
  %567 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12292
  %index1114 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %567, i32 0, i32 9, !dbg !12293
  store float %conv1113, float* %index1114, align 8, !dbg !12294
  br label %if.end1115, !dbg !12292

if.end1115:                                       ; preds = %if.then1101, %if.end1057
  %call1116 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00), !dbg !12295
  store double %call1116, double* %gamma, align 8, !dbg !12296
  %568 = load double, double* %gamma, align 8, !dbg !12297
  %arrayidx1117 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12298
  %opacity1118 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1117, i32 0, i32 8, !dbg !12299
  %569 = load float, float* %opacity1118, align 4, !dbg !12299
  %conv1119 = fpext float %569 to double, !dbg !12298
  %arrayidx1120 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12300
  %opacity1121 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1120, i32 0, i32 8, !dbg !12301
  %570 = load float, float* %opacity1121, align 4, !dbg !12301
  %conv1122 = fpext float %570 to double, !dbg !12300
  %arrayidx1123 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12302
  %opacity1124 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1123, i32 0, i32 8, !dbg !12303
  %571 = load float, float* %opacity1124, align 4, !dbg !12303
  %conv1125 = fpext float %571 to double, !dbg !12302
  %call1126 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1119, double %conv1122, double %conv1125), !dbg !12304
  %mul1127 = fmul double %568, %call1126, !dbg !12305
  %conv1128 = fptrunc double %mul1127 to float, !dbg !12297
  %572 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12306
  %opacity1129 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %572, i32 0, i32 8, !dbg !12307
  store float %conv1128, float* %opacity1129, align 4, !dbg !12308
  br label %if.end1130

if.end1130:                                       ; preds = %if.end1115, %if.end1028
  br label %if.end1312, !dbg !12309

if.else1131:                                      ; preds = %for.end922
  %x1132 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 0, !dbg !12310
  %573 = load double, double* %x1132, align 8, !dbg !12310
  %y1133 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 1, !dbg !12313
  %574 = load double, double* %y1133, align 8, !dbg !12313
  %sub1134 = fsub double 1.000000e+00, %574, !dbg !12314
  %cmp1135 = fcmp ole double %573, %sub1134, !dbg !12315
  br i1 %cmp1135, label %if.then1137, label %if.else1221, !dbg !12316

if.then1137:                                      ; preds = %if.else1131
  %arrayidx1138 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !12317
  %575 = load float, float* %arrayidx1138, align 16, !dbg !12317
  %conv1139 = fpext float %575 to double, !dbg !12317
  %arrayidx1140 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 1, !dbg !12319
  %576 = load float, float* %arrayidx1140, align 4, !dbg !12319
  %conv1141 = fpext float %576 to double, !dbg !12319
  %arrayidx1142 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 2, !dbg !12320
  %577 = load float, float* %arrayidx1142, align 8, !dbg !12320
  %conv1143 = fpext float %577 to double, !dbg !12320
  %call1144 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1139, double %conv1141, double %conv1143), !dbg !12321
  store double %call1144, double* %gamma, align 8, !dbg !12322
  %578 = load double, double* %gamma, align 8, !dbg !12323
  %cmp1145 = fcmp olt double %578, 0.000000e+00, !dbg !12325
  br i1 %cmp1145, label %if.then1147, label %if.end1148, !dbg !12326

if.then1147:                                      ; preds = %if.then1137
  store double 0.000000e+00, double* %gamma, align 8, !dbg !12327
  br label %if.end1148, !dbg !12328

if.end1148:                                       ; preds = %if.then1147, %if.then1137
  %579 = load double, double* %gamma, align 8, !dbg !12329
  %call1149 = call double @PerceptibleReciprocal(double %579), !dbg !12330
  store double %call1149, double* %gamma, align 8, !dbg !12331
  %580 = load double, double* %gamma, align 8, !dbg !12332
  %arrayidx1150 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12333
  %red1151 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1150, i32 0, i32 5, !dbg !12334
  %581 = load float, float* %red1151, align 16, !dbg !12334
  %conv1152 = fpext float %581 to double, !dbg !12333
  %arrayidx1153 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12335
  %red1154 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1153, i32 0, i32 5, !dbg !12336
  %582 = load float, float* %red1154, align 8, !dbg !12336
  %conv1155 = fpext float %582 to double, !dbg !12335
  %arrayidx1156 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12337
  %red1157 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1156, i32 0, i32 5, !dbg !12338
  %583 = load float, float* %red1157, align 16, !dbg !12338
  %conv1158 = fpext float %583 to double, !dbg !12337
  %call1159 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1152, double %conv1155, double %conv1158), !dbg !12339
  %mul1160 = fmul double %580, %call1159, !dbg !12340
  %conv1161 = fptrunc double %mul1160 to float, !dbg !12332
  %584 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12341
  %red1162 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %584, i32 0, i32 5, !dbg !12342
  store float %conv1161, float* %red1162, align 8, !dbg !12343
  %585 = load double, double* %gamma, align 8, !dbg !12344
  %arrayidx1163 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12345
  %green1164 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1163, i32 0, i32 6, !dbg !12346
  %586 = load float, float* %green1164, align 4, !dbg !12346
  %conv1165 = fpext float %586 to double, !dbg !12345
  %arrayidx1166 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12347
  %green1167 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1166, i32 0, i32 6, !dbg !12348
  %587 = load float, float* %green1167, align 4, !dbg !12348
  %conv1168 = fpext float %587 to double, !dbg !12347
  %arrayidx1169 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12349
  %green1170 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1169, i32 0, i32 6, !dbg !12350
  %588 = load float, float* %green1170, align 4, !dbg !12350
  %conv1171 = fpext float %588 to double, !dbg !12349
  %call1172 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1165, double %conv1168, double %conv1171), !dbg !12351
  %mul1173 = fmul double %585, %call1172, !dbg !12352
  %conv1174 = fptrunc double %mul1173 to float, !dbg !12344
  %589 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12353
  %green1175 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %589, i32 0, i32 6, !dbg !12354
  store float %conv1174, float* %green1175, align 4, !dbg !12355
  %590 = load double, double* %gamma, align 8, !dbg !12356
  %arrayidx1176 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12357
  %blue1177 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1176, i32 0, i32 7, !dbg !12358
  %591 = load float, float* %blue1177, align 8, !dbg !12358
  %conv1178 = fpext float %591 to double, !dbg !12357
  %arrayidx1179 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12359
  %blue1180 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1179, i32 0, i32 7, !dbg !12360
  %592 = load float, float* %blue1180, align 8, !dbg !12360
  %conv1181 = fpext float %592 to double, !dbg !12359
  %arrayidx1182 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12361
  %blue1183 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1182, i32 0, i32 7, !dbg !12362
  %593 = load float, float* %blue1183, align 8, !dbg !12362
  %conv1184 = fpext float %593 to double, !dbg !12361
  %call1185 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1178, double %conv1181, double %conv1184), !dbg !12363
  %mul1186 = fmul double %590, %call1185, !dbg !12364
  %conv1187 = fptrunc double %mul1186 to float, !dbg !12356
  %594 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12365
  %blue1188 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %594, i32 0, i32 7, !dbg !12366
  store float %conv1187, float* %blue1188, align 8, !dbg !12367
  %595 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12368
  %colorspace1189 = getelementptr inbounds %struct._Image, %struct._Image* %595, i32 0, i32 1, !dbg !12370
  %596 = load i32, i32* %colorspace1189, align 4, !dbg !12370
  %cmp1190 = icmp eq i32 %596, 12, !dbg !12371
  br i1 %cmp1190, label %if.then1192, label %if.end1206, !dbg !12372

if.then1192:                                      ; preds = %if.end1148
  %597 = load double, double* %gamma, align 8, !dbg !12373
  %arrayidx1193 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12374
  %index1194 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1193, i32 0, i32 9, !dbg !12375
  %598 = load float, float* %index1194, align 16, !dbg !12375
  %conv1195 = fpext float %598 to double, !dbg !12374
  %arrayidx1196 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12376
  %index1197 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1196, i32 0, i32 9, !dbg !12377
  %599 = load float, float* %index1197, align 8, !dbg !12377
  %conv1198 = fpext float %599 to double, !dbg !12376
  %arrayidx1199 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12378
  %index1200 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1199, i32 0, i32 9, !dbg !12379
  %600 = load float, float* %index1200, align 16, !dbg !12379
  %conv1201 = fpext float %600 to double, !dbg !12378
  %call1202 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1195, double %conv1198, double %conv1201), !dbg !12380
  %mul1203 = fmul double %597, %call1202, !dbg !12381
  %conv1204 = fptrunc double %mul1203 to float, !dbg !12373
  %601 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12382
  %index1205 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %601, i32 0, i32 9, !dbg !12383
  store float %conv1204, float* %index1205, align 8, !dbg !12384
  br label %if.end1206, !dbg !12382

if.end1206:                                       ; preds = %if.then1192, %if.end1148
  %call1207 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00), !dbg !12385
  store double %call1207, double* %gamma, align 8, !dbg !12386
  %602 = load double, double* %gamma, align 8, !dbg !12387
  %arrayidx1208 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12388
  %opacity1209 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1208, i32 0, i32 8, !dbg !12389
  %603 = load float, float* %opacity1209, align 4, !dbg !12389
  %conv1210 = fpext float %603 to double, !dbg !12388
  %arrayidx1211 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12390
  %opacity1212 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1211, i32 0, i32 8, !dbg !12391
  %604 = load float, float* %opacity1212, align 4, !dbg !12391
  %conv1213 = fpext float %604 to double, !dbg !12390
  %arrayidx1214 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12392
  %opacity1215 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1214, i32 0, i32 8, !dbg !12393
  %605 = load float, float* %opacity1215, align 4, !dbg !12393
  %conv1216 = fpext float %605 to double, !dbg !12392
  %call1217 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1210, double %conv1213, double %conv1216), !dbg !12394
  %mul1218 = fmul double %602, %call1217, !dbg !12395
  %conv1219 = fptrunc double %mul1218 to float, !dbg !12387
  %606 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12396
  %opacity1220 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %606, i32 0, i32 8, !dbg !12397
  store float %conv1219, float* %opacity1220, align 4, !dbg !12398
  br label %if.end1311, !dbg !12399

if.else1221:                                      ; preds = %if.else1131
  %x1222 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 0, !dbg !12400
  %607 = load double, double* %x1222, align 8, !dbg !12400
  %sub1223 = fsub double 1.000000e+00, %607, !dbg !12402
  %x1224 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 0, !dbg !12403
  store double %sub1223, double* %x1224, align 8, !dbg !12404
  %y1225 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 1, !dbg !12405
  %608 = load double, double* %y1225, align 8, !dbg !12405
  %sub1226 = fsub double 1.000000e+00, %608, !dbg !12406
  %y1227 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta901, i32 0, i32 1, !dbg !12407
  store double %sub1226, double* %y1227, align 8, !dbg !12408
  %arrayidx1228 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 3, !dbg !12409
  %609 = load float, float* %arrayidx1228, align 4, !dbg !12409
  %conv1229 = fpext float %609 to double, !dbg !12409
  %arrayidx1230 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 2, !dbg !12410
  %610 = load float, float* %arrayidx1230, align 8, !dbg !12410
  %conv1231 = fpext float %610 to double, !dbg !12410
  %arrayidx1232 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 1, !dbg !12411
  %611 = load float, float* %arrayidx1232, align 4, !dbg !12411
  %conv1233 = fpext float %611 to double, !dbg !12411
  %call1234 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1229, double %conv1231, double %conv1233), !dbg !12412
  store double %call1234, double* %gamma, align 8, !dbg !12413
  %612 = load double, double* %gamma, align 8, !dbg !12414
  %cmp1235 = fcmp olt double %612, 0.000000e+00, !dbg !12416
  br i1 %cmp1235, label %if.then1237, label %if.end1238, !dbg !12417

if.then1237:                                      ; preds = %if.else1221
  store double 0.000000e+00, double* %gamma, align 8, !dbg !12418
  br label %if.end1238, !dbg !12419

if.end1238:                                       ; preds = %if.then1237, %if.else1221
  %613 = load double, double* %gamma, align 8, !dbg !12420
  %call1239 = call double @PerceptibleReciprocal(double %613), !dbg !12421
  store double %call1239, double* %gamma, align 8, !dbg !12422
  %614 = load double, double* %gamma, align 8, !dbg !12423
  %arrayidx1240 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12424
  %red1241 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1240, i32 0, i32 5, !dbg !12425
  %615 = load float, float* %red1241, align 8, !dbg !12425
  %conv1242 = fpext float %615 to double, !dbg !12424
  %arrayidx1243 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12426
  %red1244 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1243, i32 0, i32 5, !dbg !12427
  %616 = load float, float* %red1244, align 16, !dbg !12427
  %conv1245 = fpext float %616 to double, !dbg !12426
  %arrayidx1246 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12428
  %red1247 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1246, i32 0, i32 5, !dbg !12429
  %617 = load float, float* %red1247, align 8, !dbg !12429
  %conv1248 = fpext float %617 to double, !dbg !12428
  %call1249 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1242, double %conv1245, double %conv1248), !dbg !12430
  %mul1250 = fmul double %614, %call1249, !dbg !12431
  %conv1251 = fptrunc double %mul1250 to float, !dbg !12423
  %618 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12432
  %red1252 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %618, i32 0, i32 5, !dbg !12433
  store float %conv1251, float* %red1252, align 8, !dbg !12434
  %619 = load double, double* %gamma, align 8, !dbg !12435
  %arrayidx1253 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12436
  %green1254 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1253, i32 0, i32 6, !dbg !12437
  %620 = load float, float* %green1254, align 4, !dbg !12437
  %conv1255 = fpext float %620 to double, !dbg !12436
  %arrayidx1256 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12438
  %green1257 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1256, i32 0, i32 6, !dbg !12439
  %621 = load float, float* %green1257, align 4, !dbg !12439
  %conv1258 = fpext float %621 to double, !dbg !12438
  %arrayidx1259 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12440
  %green1260 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1259, i32 0, i32 6, !dbg !12441
  %622 = load float, float* %green1260, align 4, !dbg !12441
  %conv1261 = fpext float %622 to double, !dbg !12440
  %call1262 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1255, double %conv1258, double %conv1261), !dbg !12442
  %mul1263 = fmul double %619, %call1262, !dbg !12443
  %conv1264 = fptrunc double %mul1263 to float, !dbg !12435
  %623 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12444
  %green1265 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %623, i32 0, i32 6, !dbg !12445
  store float %conv1264, float* %green1265, align 4, !dbg !12446
  %624 = load double, double* %gamma, align 8, !dbg !12447
  %arrayidx1266 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12448
  %blue1267 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1266, i32 0, i32 7, !dbg !12449
  %625 = load float, float* %blue1267, align 8, !dbg !12449
  %conv1268 = fpext float %625 to double, !dbg !12448
  %arrayidx1269 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12450
  %blue1270 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1269, i32 0, i32 7, !dbg !12451
  %626 = load float, float* %blue1270, align 8, !dbg !12451
  %conv1271 = fpext float %626 to double, !dbg !12450
  %arrayidx1272 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12452
  %blue1273 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1272, i32 0, i32 7, !dbg !12453
  %627 = load float, float* %blue1273, align 8, !dbg !12453
  %conv1274 = fpext float %627 to double, !dbg !12452
  %call1275 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1268, double %conv1271, double %conv1274), !dbg !12454
  %mul1276 = fmul double %624, %call1275, !dbg !12455
  %conv1277 = fptrunc double %mul1276 to float, !dbg !12447
  %628 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12456
  %blue1278 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %628, i32 0, i32 7, !dbg !12457
  store float %conv1277, float* %blue1278, align 8, !dbg !12458
  %629 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12459
  %colorspace1279 = getelementptr inbounds %struct._Image, %struct._Image* %629, i32 0, i32 1, !dbg !12461
  %630 = load i32, i32* %colorspace1279, align 4, !dbg !12461
  %cmp1280 = icmp eq i32 %630, 12, !dbg !12462
  br i1 %cmp1280, label %if.then1282, label %if.end1296, !dbg !12463

if.then1282:                                      ; preds = %if.end1238
  %631 = load double, double* %gamma, align 8, !dbg !12464
  %arrayidx1283 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12465
  %index1284 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1283, i32 0, i32 9, !dbg !12466
  %632 = load float, float* %index1284, align 8, !dbg !12466
  %conv1285 = fpext float %632 to double, !dbg !12465
  %arrayidx1286 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12467
  %index1287 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1286, i32 0, i32 9, !dbg !12468
  %633 = load float, float* %index1287, align 16, !dbg !12468
  %conv1288 = fpext float %633 to double, !dbg !12467
  %arrayidx1289 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12469
  %index1290 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1289, i32 0, i32 9, !dbg !12470
  %634 = load float, float* %index1290, align 8, !dbg !12470
  %conv1291 = fpext float %634 to double, !dbg !12469
  %call1292 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1285, double %conv1288, double %conv1291), !dbg !12471
  %mul1293 = fmul double %631, %call1292, !dbg !12472
  %conv1294 = fptrunc double %mul1293 to float, !dbg !12464
  %635 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12473
  %index1295 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %635, i32 0, i32 9, !dbg !12474
  store float %conv1294, float* %index1295, align 8, !dbg !12475
  br label %if.end1296, !dbg !12473

if.end1296:                                       ; preds = %if.then1282, %if.end1238
  %call1297 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00), !dbg !12476
  store double %call1297, double* %gamma, align 8, !dbg !12477
  %636 = load double, double* %gamma, align 8, !dbg !12478
  %arrayidx1298 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12479
  %opacity1299 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1298, i32 0, i32 8, !dbg !12480
  %637 = load float, float* %opacity1299, align 4, !dbg !12480
  %conv1300 = fpext float %637 to double, !dbg !12479
  %arrayidx1301 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12481
  %opacity1302 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1301, i32 0, i32 8, !dbg !12482
  %638 = load float, float* %opacity1302, align 4, !dbg !12482
  %conv1303 = fpext float %638 to double, !dbg !12481
  %arrayidx1304 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12483
  %opacity1305 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1304, i32 0, i32 8, !dbg !12484
  %639 = load float, float* %opacity1305, align 4, !dbg !12484
  %conv1306 = fpext float %639 to double, !dbg !12483
  %call1307 = call double @MeshInterpolate(%struct._PointInfo* %delta901, double %conv1300, double %conv1303, double %conv1306), !dbg !12485
  %mul1308 = fmul double %636, %call1307, !dbg !12486
  %conv1309 = fptrunc double %mul1308 to float, !dbg !12478
  %640 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12487
  %opacity1310 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %640, i32 0, i32 8, !dbg !12488
  store float %conv1309, float* %opacity1310, align 4, !dbg !12489
  br label %if.end1311

if.end1311:                                       ; preds = %if.end1296, %if.end1206
  br label %if.end1312

if.end1312:                                       ; preds = %if.end1311, %if.end1130
  br label %sw.epilog, !dbg !12490

sw.bb1313:                                        ; preds = %if.end
  %641 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !12491
  %642 = load double, double* %x.addr, align 8, !dbg !12493
  %add1314 = fadd double %642, 5.000000e-01, !dbg !12494
  %643 = call double @llvm.floor.f64(double %add1314), !dbg !12495
  %conv1315 = fptosi double %643 to i64, !dbg !12496
  %644 = load double, double* %y.addr, align 8, !dbg !12497
  %add1316 = fadd double %644, 5.000000e-01, !dbg !12498
  %645 = call double @llvm.floor.f64(double %add1316), !dbg !12499
  %conv1317 = fptosi double %645 to i64, !dbg !12500
  %646 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !12501
  %call1318 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %641, i64 %conv1315, i64 %conv1317, i64 1, i64 1, %struct._ExceptionInfo* %646), !dbg !12502
  store %struct._PixelPacket* %call1318, %struct._PixelPacket** %p, align 8, !dbg !12503
  %647 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !12504
  %cmp1319 = icmp eq %struct._PixelPacket* %647, null, !dbg !12506
  br i1 %cmp1319, label %if.then1321, label %if.end1322, !dbg !12507

if.then1321:                                      ; preds = %sw.bb1313
  store i32 0, i32* %status, align 4, !dbg !12508
  br label %sw.epilog, !dbg !12510

if.end1322:                                       ; preds = %sw.bb1313
  %648 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !12511
  %call1323 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %648), !dbg !12512
  store i16* %call1323, i16** %indexes, align 8, !dbg !12513
  %649 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12514
  %650 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !12515
  %651 = load i16*, i16** %indexes, align 8, !dbg !12516
  %652 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12517
  call void @SetMagickPixelPacket(%struct._Image* %649, %struct._PixelPacket* %650, i16* %651, %struct._MagickPixelPacket* %652), !dbg !12518
  br label %sw.epilog, !dbg !12519

sw.bb1324:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata [4 x float]* %cx1325, metadata !12520, metadata !DIExpression()), !dbg !12522
  call void @llvm.dbg.declare(metadata [4 x float]* %cy1326, metadata !12523, metadata !DIExpression()), !dbg !12524
  %653 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !12525
  %654 = load i64, i64* %x_offset, align 8, !dbg !12526
  %sub1327 = sub nsw i64 %654, 1, !dbg !12527
  %655 = load i64, i64* %y_offset, align 8, !dbg !12528
  %sub1328 = sub nsw i64 %655, 1, !dbg !12529
  %656 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !12530
  %call1329 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %653, i64 %sub1327, i64 %sub1328, i64 4, i64 4, %struct._ExceptionInfo* %656), !dbg !12531
  store %struct._PixelPacket* %call1329, %struct._PixelPacket** %p, align 8, !dbg !12532
  %657 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !12533
  %cmp1330 = icmp eq %struct._PixelPacket* %657, null, !dbg !12535
  br i1 %cmp1330, label %if.then1332, label %if.end1333, !dbg !12536

if.then1332:                                      ; preds = %sw.bb1324
  store i32 0, i32* %status, align 4, !dbg !12537
  br label %sw.epilog, !dbg !12539

if.end1333:                                       ; preds = %sw.bb1324
  %658 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !12540
  %call1334 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %658), !dbg !12541
  store i16* %call1334, i16** %indexes, align 8, !dbg !12542
  store i64 0, i64* %i, align 8, !dbg !12543
  br label %for.cond1335, !dbg !12545

for.cond1335:                                     ; preds = %for.inc1347, %if.end1333
  %659 = load i64, i64* %i, align 8, !dbg !12546
  %cmp1336 = icmp slt i64 %659, 16, !dbg !12548
  br i1 %cmp1336, label %for.body1338, label %for.end1349, !dbg !12549

for.body1338:                                     ; preds = %for.cond1335
  %660 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12550
  %arraydecay1339 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12552
  %661 = load i64, i64* %i, align 8, !dbg !12553
  %add.ptr1340 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay1339, i64 %661, !dbg !12554
  call void @GetMagickPixelPacket(%struct._Image* %660, %struct._MagickPixelPacket* %add.ptr1340), !dbg !12555
  %662 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12556
  %663 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !12557
  %664 = load i64, i64* %i, align 8, !dbg !12558
  %add.ptr1341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %663, i64 %664, !dbg !12559
  %665 = load i16*, i16** %indexes, align 8, !dbg !12560
  %666 = load i64, i64* %i, align 8, !dbg !12561
  %add.ptr1342 = getelementptr inbounds i16, i16* %665, i64 %666, !dbg !12562
  %arraydecay1343 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12563
  %667 = load i64, i64* %i, align 8, !dbg !12564
  %add.ptr1344 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay1343, i64 %667, !dbg !12565
  %arraydecay1345 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 0, !dbg !12566
  %668 = load i64, i64* %i, align 8, !dbg !12567
  %add.ptr1346 = getelementptr inbounds float, float* %arraydecay1345, i64 %668, !dbg !12568
  call void @AlphaBlendMagickPixelPacket(%struct._Image* %662, %struct._PixelPacket* %add.ptr1341, i16* %add.ptr1342, %struct._MagickPixelPacket* %add.ptr1344, float* %add.ptr1346), !dbg !12569
  br label %for.inc1347, !dbg !12570

for.inc1347:                                      ; preds = %for.body1338
  %669 = load i64, i64* %i, align 8, !dbg !12571
  %inc1348 = add nsw i64 %669, 1, !dbg !12571
  store i64 %inc1348, i64* %i, align 8, !dbg !12571
  br label %for.cond1335, !dbg !12572, !llvm.loop !12573

for.end1349:                                      ; preds = %for.cond1335
  %670 = load double, double* %x.addr, align 8, !dbg !12575
  %671 = load i64, i64* %x_offset, align 8, !dbg !12576
  %conv1350 = sitofp i64 %671 to double, !dbg !12576
  %sub1351 = fsub double %670, %conv1350, !dbg !12577
  %conv1352 = fptrunc double %sub1351 to float, !dbg !12578
  call void @SplineWeights(float %conv1352, [4 x float]* %cx1325), !dbg !12579
  %672 = load double, double* %y.addr, align 8, !dbg !12580
  %673 = load i64, i64* %y_offset, align 8, !dbg !12581
  %conv1353 = sitofp i64 %673 to double, !dbg !12581
  %sub1354 = fsub double %672, %conv1353, !dbg !12582
  %conv1355 = fptrunc double %sub1354 to float, !dbg !12583
  call void @SplineWeights(float %conv1355, [4 x float]* %cy1326), !dbg !12584
  %arrayidx1356 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 0, !dbg !12585
  %674 = load float, float* %arrayidx1356, align 16, !dbg !12585
  %arrayidx1357 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12586
  %675 = load float, float* %arrayidx1357, align 16, !dbg !12586
  %arrayidx1358 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12587
  %red1359 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1358, i32 0, i32 5, !dbg !12588
  %676 = load float, float* %red1359, align 16, !dbg !12588
  %mul1360 = fmul float %675, %676, !dbg !12589
  %arrayidx1361 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12590
  %677 = load float, float* %arrayidx1361, align 4, !dbg !12590
  %arrayidx1362 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12591
  %red1363 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1362, i32 0, i32 5, !dbg !12592
  %678 = load float, float* %red1363, align 8, !dbg !12592
  %mul1364 = fmul float %677, %678, !dbg !12593
  %add1365 = fadd float %mul1360, %mul1364, !dbg !12594
  %arrayidx1366 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12595
  %679 = load float, float* %arrayidx1366, align 8, !dbg !12595
  %arrayidx1367 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12596
  %red1368 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1367, i32 0, i32 5, !dbg !12597
  %680 = load float, float* %red1368, align 16, !dbg !12597
  %mul1369 = fmul float %679, %680, !dbg !12598
  %add1370 = fadd float %add1365, %mul1369, !dbg !12599
  %arrayidx1371 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12600
  %681 = load float, float* %arrayidx1371, align 4, !dbg !12600
  %arrayidx1372 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12601
  %red1373 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1372, i32 0, i32 5, !dbg !12602
  %682 = load float, float* %red1373, align 8, !dbg !12602
  %mul1374 = fmul float %681, %682, !dbg !12603
  %add1375 = fadd float %add1370, %mul1374, !dbg !12604
  %mul1376 = fmul float %674, %add1375, !dbg !12605
  %arrayidx1377 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 1, !dbg !12606
  %683 = load float, float* %arrayidx1377, align 4, !dbg !12606
  %arrayidx1378 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12607
  %684 = load float, float* %arrayidx1378, align 16, !dbg !12607
  %arrayidx1379 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 4, !dbg !12608
  %red1380 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1379, i32 0, i32 5, !dbg !12609
  %685 = load float, float* %red1380, align 16, !dbg !12609
  %mul1381 = fmul float %684, %685, !dbg !12610
  %arrayidx1382 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12611
  %686 = load float, float* %arrayidx1382, align 4, !dbg !12611
  %arrayidx1383 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 5, !dbg !12612
  %red1384 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1383, i32 0, i32 5, !dbg !12613
  %687 = load float, float* %red1384, align 8, !dbg !12613
  %mul1385 = fmul float %686, %687, !dbg !12614
  %add1386 = fadd float %mul1381, %mul1385, !dbg !12615
  %arrayidx1387 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12616
  %688 = load float, float* %arrayidx1387, align 8, !dbg !12616
  %arrayidx1388 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 6, !dbg !12617
  %red1389 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1388, i32 0, i32 5, !dbg !12618
  %689 = load float, float* %red1389, align 16, !dbg !12618
  %mul1390 = fmul float %688, %689, !dbg !12619
  %add1391 = fadd float %add1386, %mul1390, !dbg !12620
  %arrayidx1392 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12621
  %690 = load float, float* %arrayidx1392, align 4, !dbg !12621
  %arrayidx1393 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 7, !dbg !12622
  %red1394 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1393, i32 0, i32 5, !dbg !12623
  %691 = load float, float* %red1394, align 8, !dbg !12623
  %mul1395 = fmul float %690, %691, !dbg !12624
  %add1396 = fadd float %add1391, %mul1395, !dbg !12625
  %mul1397 = fmul float %683, %add1396, !dbg !12626
  %add1398 = fadd float %mul1376, %mul1397, !dbg !12627
  %arrayidx1399 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 2, !dbg !12628
  %692 = load float, float* %arrayidx1399, align 8, !dbg !12628
  %arrayidx1400 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12629
  %693 = load float, float* %arrayidx1400, align 16, !dbg !12629
  %arrayidx1401 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 8, !dbg !12630
  %red1402 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1401, i32 0, i32 5, !dbg !12631
  %694 = load float, float* %red1402, align 16, !dbg !12631
  %mul1403 = fmul float %693, %694, !dbg !12632
  %arrayidx1404 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12633
  %695 = load float, float* %arrayidx1404, align 4, !dbg !12633
  %arrayidx1405 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 9, !dbg !12634
  %red1406 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1405, i32 0, i32 5, !dbg !12635
  %696 = load float, float* %red1406, align 8, !dbg !12635
  %mul1407 = fmul float %695, %696, !dbg !12636
  %add1408 = fadd float %mul1403, %mul1407, !dbg !12637
  %arrayidx1409 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12638
  %697 = load float, float* %arrayidx1409, align 8, !dbg !12638
  %arrayidx1410 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 10, !dbg !12639
  %red1411 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1410, i32 0, i32 5, !dbg !12640
  %698 = load float, float* %red1411, align 16, !dbg !12640
  %mul1412 = fmul float %697, %698, !dbg !12641
  %add1413 = fadd float %add1408, %mul1412, !dbg !12642
  %arrayidx1414 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12643
  %699 = load float, float* %arrayidx1414, align 4, !dbg !12643
  %arrayidx1415 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 11, !dbg !12644
  %red1416 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1415, i32 0, i32 5, !dbg !12645
  %700 = load float, float* %red1416, align 8, !dbg !12645
  %mul1417 = fmul float %699, %700, !dbg !12646
  %add1418 = fadd float %add1413, %mul1417, !dbg !12647
  %mul1419 = fmul float %692, %add1418, !dbg !12648
  %add1420 = fadd float %add1398, %mul1419, !dbg !12649
  %arrayidx1421 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 3, !dbg !12650
  %701 = load float, float* %arrayidx1421, align 4, !dbg !12650
  %arrayidx1422 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12651
  %702 = load float, float* %arrayidx1422, align 16, !dbg !12651
  %arrayidx1423 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 12, !dbg !12652
  %red1424 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1423, i32 0, i32 5, !dbg !12653
  %703 = load float, float* %red1424, align 16, !dbg !12653
  %mul1425 = fmul float %702, %703, !dbg !12654
  %arrayidx1426 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12655
  %704 = load float, float* %arrayidx1426, align 4, !dbg !12655
  %arrayidx1427 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 13, !dbg !12656
  %red1428 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1427, i32 0, i32 5, !dbg !12657
  %705 = load float, float* %red1428, align 8, !dbg !12657
  %mul1429 = fmul float %704, %705, !dbg !12658
  %add1430 = fadd float %mul1425, %mul1429, !dbg !12659
  %arrayidx1431 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12660
  %706 = load float, float* %arrayidx1431, align 8, !dbg !12660
  %arrayidx1432 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 14, !dbg !12661
  %red1433 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1432, i32 0, i32 5, !dbg !12662
  %707 = load float, float* %red1433, align 16, !dbg !12662
  %mul1434 = fmul float %706, %707, !dbg !12663
  %add1435 = fadd float %add1430, %mul1434, !dbg !12664
  %arrayidx1436 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12665
  %708 = load float, float* %arrayidx1436, align 4, !dbg !12665
  %arrayidx1437 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 15, !dbg !12666
  %red1438 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1437, i32 0, i32 5, !dbg !12667
  %709 = load float, float* %red1438, align 8, !dbg !12667
  %mul1439 = fmul float %708, %709, !dbg !12668
  %add1440 = fadd float %add1435, %mul1439, !dbg !12669
  %mul1441 = fmul float %701, %add1440, !dbg !12670
  %add1442 = fadd float %add1420, %mul1441, !dbg !12671
  %710 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12672
  %red1443 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %710, i32 0, i32 5, !dbg !12673
  store float %add1442, float* %red1443, align 8, !dbg !12674
  %arrayidx1444 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 0, !dbg !12675
  %711 = load float, float* %arrayidx1444, align 16, !dbg !12675
  %arrayidx1445 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12676
  %712 = load float, float* %arrayidx1445, align 16, !dbg !12676
  %arrayidx1446 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12677
  %green1447 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1446, i32 0, i32 6, !dbg !12678
  %713 = load float, float* %green1447, align 4, !dbg !12678
  %mul1448 = fmul float %712, %713, !dbg !12679
  %arrayidx1449 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12680
  %714 = load float, float* %arrayidx1449, align 4, !dbg !12680
  %arrayidx1450 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12681
  %green1451 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1450, i32 0, i32 6, !dbg !12682
  %715 = load float, float* %green1451, align 4, !dbg !12682
  %mul1452 = fmul float %714, %715, !dbg !12683
  %add1453 = fadd float %mul1448, %mul1452, !dbg !12684
  %arrayidx1454 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12685
  %716 = load float, float* %arrayidx1454, align 8, !dbg !12685
  %arrayidx1455 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12686
  %green1456 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1455, i32 0, i32 6, !dbg !12687
  %717 = load float, float* %green1456, align 4, !dbg !12687
  %mul1457 = fmul float %716, %717, !dbg !12688
  %add1458 = fadd float %add1453, %mul1457, !dbg !12689
  %arrayidx1459 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12690
  %718 = load float, float* %arrayidx1459, align 4, !dbg !12690
  %arrayidx1460 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12691
  %green1461 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1460, i32 0, i32 6, !dbg !12692
  %719 = load float, float* %green1461, align 4, !dbg !12692
  %mul1462 = fmul float %718, %719, !dbg !12693
  %add1463 = fadd float %add1458, %mul1462, !dbg !12694
  %mul1464 = fmul float %711, %add1463, !dbg !12695
  %arrayidx1465 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 1, !dbg !12696
  %720 = load float, float* %arrayidx1465, align 4, !dbg !12696
  %arrayidx1466 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12697
  %721 = load float, float* %arrayidx1466, align 16, !dbg !12697
  %arrayidx1467 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 4, !dbg !12698
  %green1468 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1467, i32 0, i32 6, !dbg !12699
  %722 = load float, float* %green1468, align 4, !dbg !12699
  %mul1469 = fmul float %721, %722, !dbg !12700
  %arrayidx1470 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12701
  %723 = load float, float* %arrayidx1470, align 4, !dbg !12701
  %arrayidx1471 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 5, !dbg !12702
  %green1472 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1471, i32 0, i32 6, !dbg !12703
  %724 = load float, float* %green1472, align 4, !dbg !12703
  %mul1473 = fmul float %723, %724, !dbg !12704
  %add1474 = fadd float %mul1469, %mul1473, !dbg !12705
  %arrayidx1475 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12706
  %725 = load float, float* %arrayidx1475, align 8, !dbg !12706
  %arrayidx1476 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 6, !dbg !12707
  %green1477 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1476, i32 0, i32 6, !dbg !12708
  %726 = load float, float* %green1477, align 4, !dbg !12708
  %mul1478 = fmul float %725, %726, !dbg !12709
  %add1479 = fadd float %add1474, %mul1478, !dbg !12710
  %arrayidx1480 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12711
  %727 = load float, float* %arrayidx1480, align 4, !dbg !12711
  %arrayidx1481 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 7, !dbg !12712
  %green1482 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1481, i32 0, i32 6, !dbg !12713
  %728 = load float, float* %green1482, align 4, !dbg !12713
  %mul1483 = fmul float %727, %728, !dbg !12714
  %add1484 = fadd float %add1479, %mul1483, !dbg !12715
  %mul1485 = fmul float %720, %add1484, !dbg !12716
  %add1486 = fadd float %mul1464, %mul1485, !dbg !12717
  %arrayidx1487 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 2, !dbg !12718
  %729 = load float, float* %arrayidx1487, align 8, !dbg !12718
  %arrayidx1488 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12719
  %730 = load float, float* %arrayidx1488, align 16, !dbg !12719
  %arrayidx1489 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 8, !dbg !12720
  %green1490 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1489, i32 0, i32 6, !dbg !12721
  %731 = load float, float* %green1490, align 4, !dbg !12721
  %mul1491 = fmul float %730, %731, !dbg !12722
  %arrayidx1492 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12723
  %732 = load float, float* %arrayidx1492, align 4, !dbg !12723
  %arrayidx1493 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 9, !dbg !12724
  %green1494 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1493, i32 0, i32 6, !dbg !12725
  %733 = load float, float* %green1494, align 4, !dbg !12725
  %mul1495 = fmul float %732, %733, !dbg !12726
  %add1496 = fadd float %mul1491, %mul1495, !dbg !12727
  %arrayidx1497 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12728
  %734 = load float, float* %arrayidx1497, align 8, !dbg !12728
  %arrayidx1498 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 10, !dbg !12729
  %green1499 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1498, i32 0, i32 6, !dbg !12730
  %735 = load float, float* %green1499, align 4, !dbg !12730
  %mul1500 = fmul float %734, %735, !dbg !12731
  %add1501 = fadd float %add1496, %mul1500, !dbg !12732
  %arrayidx1502 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12733
  %736 = load float, float* %arrayidx1502, align 4, !dbg !12733
  %arrayidx1503 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 11, !dbg !12734
  %green1504 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1503, i32 0, i32 6, !dbg !12735
  %737 = load float, float* %green1504, align 4, !dbg !12735
  %mul1505 = fmul float %736, %737, !dbg !12736
  %add1506 = fadd float %add1501, %mul1505, !dbg !12737
  %mul1507 = fmul float %729, %add1506, !dbg !12738
  %add1508 = fadd float %add1486, %mul1507, !dbg !12739
  %arrayidx1509 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 3, !dbg !12740
  %738 = load float, float* %arrayidx1509, align 4, !dbg !12740
  %arrayidx1510 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12741
  %739 = load float, float* %arrayidx1510, align 16, !dbg !12741
  %arrayidx1511 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 12, !dbg !12742
  %green1512 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1511, i32 0, i32 6, !dbg !12743
  %740 = load float, float* %green1512, align 4, !dbg !12743
  %mul1513 = fmul float %739, %740, !dbg !12744
  %arrayidx1514 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12745
  %741 = load float, float* %arrayidx1514, align 4, !dbg !12745
  %arrayidx1515 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 13, !dbg !12746
  %green1516 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1515, i32 0, i32 6, !dbg !12747
  %742 = load float, float* %green1516, align 4, !dbg !12747
  %mul1517 = fmul float %741, %742, !dbg !12748
  %add1518 = fadd float %mul1513, %mul1517, !dbg !12749
  %arrayidx1519 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12750
  %743 = load float, float* %arrayidx1519, align 8, !dbg !12750
  %arrayidx1520 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 14, !dbg !12751
  %green1521 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1520, i32 0, i32 6, !dbg !12752
  %744 = load float, float* %green1521, align 4, !dbg !12752
  %mul1522 = fmul float %743, %744, !dbg !12753
  %add1523 = fadd float %add1518, %mul1522, !dbg !12754
  %arrayidx1524 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12755
  %745 = load float, float* %arrayidx1524, align 4, !dbg !12755
  %arrayidx1525 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 15, !dbg !12756
  %green1526 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1525, i32 0, i32 6, !dbg !12757
  %746 = load float, float* %green1526, align 4, !dbg !12757
  %mul1527 = fmul float %745, %746, !dbg !12758
  %add1528 = fadd float %add1523, %mul1527, !dbg !12759
  %mul1529 = fmul float %738, %add1528, !dbg !12760
  %add1530 = fadd float %add1508, %mul1529, !dbg !12761
  %747 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12762
  %green1531 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %747, i32 0, i32 6, !dbg !12763
  store float %add1530, float* %green1531, align 4, !dbg !12764
  %arrayidx1532 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 0, !dbg !12765
  %748 = load float, float* %arrayidx1532, align 16, !dbg !12765
  %arrayidx1533 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12766
  %749 = load float, float* %arrayidx1533, align 16, !dbg !12766
  %arrayidx1534 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12767
  %blue1535 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1534, i32 0, i32 7, !dbg !12768
  %750 = load float, float* %blue1535, align 8, !dbg !12768
  %mul1536 = fmul float %749, %750, !dbg !12769
  %arrayidx1537 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12770
  %751 = load float, float* %arrayidx1537, align 4, !dbg !12770
  %arrayidx1538 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12771
  %blue1539 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1538, i32 0, i32 7, !dbg !12772
  %752 = load float, float* %blue1539, align 8, !dbg !12772
  %mul1540 = fmul float %751, %752, !dbg !12773
  %add1541 = fadd float %mul1536, %mul1540, !dbg !12774
  %arrayidx1542 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12775
  %753 = load float, float* %arrayidx1542, align 8, !dbg !12775
  %arrayidx1543 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12776
  %blue1544 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1543, i32 0, i32 7, !dbg !12777
  %754 = load float, float* %blue1544, align 8, !dbg !12777
  %mul1545 = fmul float %753, %754, !dbg !12778
  %add1546 = fadd float %add1541, %mul1545, !dbg !12779
  %arrayidx1547 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12780
  %755 = load float, float* %arrayidx1547, align 4, !dbg !12780
  %arrayidx1548 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12781
  %blue1549 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1548, i32 0, i32 7, !dbg !12782
  %756 = load float, float* %blue1549, align 8, !dbg !12782
  %mul1550 = fmul float %755, %756, !dbg !12783
  %add1551 = fadd float %add1546, %mul1550, !dbg !12784
  %mul1552 = fmul float %748, %add1551, !dbg !12785
  %arrayidx1553 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 1, !dbg !12786
  %757 = load float, float* %arrayidx1553, align 4, !dbg !12786
  %arrayidx1554 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12787
  %758 = load float, float* %arrayidx1554, align 16, !dbg !12787
  %arrayidx1555 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 4, !dbg !12788
  %blue1556 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1555, i32 0, i32 7, !dbg !12789
  %759 = load float, float* %blue1556, align 8, !dbg !12789
  %mul1557 = fmul float %758, %759, !dbg !12790
  %arrayidx1558 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12791
  %760 = load float, float* %arrayidx1558, align 4, !dbg !12791
  %arrayidx1559 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 5, !dbg !12792
  %blue1560 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1559, i32 0, i32 7, !dbg !12793
  %761 = load float, float* %blue1560, align 8, !dbg !12793
  %mul1561 = fmul float %760, %761, !dbg !12794
  %add1562 = fadd float %mul1557, %mul1561, !dbg !12795
  %arrayidx1563 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12796
  %762 = load float, float* %arrayidx1563, align 8, !dbg !12796
  %arrayidx1564 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 6, !dbg !12797
  %blue1565 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1564, i32 0, i32 7, !dbg !12798
  %763 = load float, float* %blue1565, align 8, !dbg !12798
  %mul1566 = fmul float %762, %763, !dbg !12799
  %add1567 = fadd float %add1562, %mul1566, !dbg !12800
  %arrayidx1568 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12801
  %764 = load float, float* %arrayidx1568, align 4, !dbg !12801
  %arrayidx1569 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 7, !dbg !12802
  %blue1570 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1569, i32 0, i32 7, !dbg !12803
  %765 = load float, float* %blue1570, align 8, !dbg !12803
  %mul1571 = fmul float %764, %765, !dbg !12804
  %add1572 = fadd float %add1567, %mul1571, !dbg !12805
  %mul1573 = fmul float %757, %add1572, !dbg !12806
  %add1574 = fadd float %mul1552, %mul1573, !dbg !12807
  %arrayidx1575 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 2, !dbg !12808
  %766 = load float, float* %arrayidx1575, align 8, !dbg !12808
  %arrayidx1576 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12809
  %767 = load float, float* %arrayidx1576, align 16, !dbg !12809
  %arrayidx1577 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 8, !dbg !12810
  %blue1578 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1577, i32 0, i32 7, !dbg !12811
  %768 = load float, float* %blue1578, align 8, !dbg !12811
  %mul1579 = fmul float %767, %768, !dbg !12812
  %arrayidx1580 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12813
  %769 = load float, float* %arrayidx1580, align 4, !dbg !12813
  %arrayidx1581 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 9, !dbg !12814
  %blue1582 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1581, i32 0, i32 7, !dbg !12815
  %770 = load float, float* %blue1582, align 8, !dbg !12815
  %mul1583 = fmul float %769, %770, !dbg !12816
  %add1584 = fadd float %mul1579, %mul1583, !dbg !12817
  %arrayidx1585 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12818
  %771 = load float, float* %arrayidx1585, align 8, !dbg !12818
  %arrayidx1586 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 10, !dbg !12819
  %blue1587 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1586, i32 0, i32 7, !dbg !12820
  %772 = load float, float* %blue1587, align 8, !dbg !12820
  %mul1588 = fmul float %771, %772, !dbg !12821
  %add1589 = fadd float %add1584, %mul1588, !dbg !12822
  %arrayidx1590 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12823
  %773 = load float, float* %arrayidx1590, align 4, !dbg !12823
  %arrayidx1591 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 11, !dbg !12824
  %blue1592 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1591, i32 0, i32 7, !dbg !12825
  %774 = load float, float* %blue1592, align 8, !dbg !12825
  %mul1593 = fmul float %773, %774, !dbg !12826
  %add1594 = fadd float %add1589, %mul1593, !dbg !12827
  %mul1595 = fmul float %766, %add1594, !dbg !12828
  %add1596 = fadd float %add1574, %mul1595, !dbg !12829
  %arrayidx1597 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 3, !dbg !12830
  %775 = load float, float* %arrayidx1597, align 4, !dbg !12830
  %arrayidx1598 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12831
  %776 = load float, float* %arrayidx1598, align 16, !dbg !12831
  %arrayidx1599 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 12, !dbg !12832
  %blue1600 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1599, i32 0, i32 7, !dbg !12833
  %777 = load float, float* %blue1600, align 8, !dbg !12833
  %mul1601 = fmul float %776, %777, !dbg !12834
  %arrayidx1602 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12835
  %778 = load float, float* %arrayidx1602, align 4, !dbg !12835
  %arrayidx1603 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 13, !dbg !12836
  %blue1604 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1603, i32 0, i32 7, !dbg !12837
  %779 = load float, float* %blue1604, align 8, !dbg !12837
  %mul1605 = fmul float %778, %779, !dbg !12838
  %add1606 = fadd float %mul1601, %mul1605, !dbg !12839
  %arrayidx1607 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12840
  %780 = load float, float* %arrayidx1607, align 8, !dbg !12840
  %arrayidx1608 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 14, !dbg !12841
  %blue1609 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1608, i32 0, i32 7, !dbg !12842
  %781 = load float, float* %blue1609, align 8, !dbg !12842
  %mul1610 = fmul float %780, %781, !dbg !12843
  %add1611 = fadd float %add1606, %mul1610, !dbg !12844
  %arrayidx1612 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12845
  %782 = load float, float* %arrayidx1612, align 4, !dbg !12845
  %arrayidx1613 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 15, !dbg !12846
  %blue1614 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1613, i32 0, i32 7, !dbg !12847
  %783 = load float, float* %blue1614, align 8, !dbg !12847
  %mul1615 = fmul float %782, %783, !dbg !12848
  %add1616 = fadd float %add1611, %mul1615, !dbg !12849
  %mul1617 = fmul float %775, %add1616, !dbg !12850
  %add1618 = fadd float %add1596, %mul1617, !dbg !12851
  %784 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12852
  %blue1619 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %784, i32 0, i32 7, !dbg !12853
  store float %add1618, float* %blue1619, align 8, !dbg !12854
  %arrayidx1620 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 0, !dbg !12855
  %785 = load float, float* %arrayidx1620, align 16, !dbg !12855
  %arrayidx1621 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12856
  %786 = load float, float* %arrayidx1621, align 16, !dbg !12856
  %arrayidx1622 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !12857
  %opacity1623 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1622, i32 0, i32 8, !dbg !12858
  %787 = load float, float* %opacity1623, align 4, !dbg !12858
  %mul1624 = fmul float %786, %787, !dbg !12859
  %arrayidx1625 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12860
  %788 = load float, float* %arrayidx1625, align 4, !dbg !12860
  %arrayidx1626 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 1, !dbg !12861
  %opacity1627 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1626, i32 0, i32 8, !dbg !12862
  %789 = load float, float* %opacity1627, align 4, !dbg !12862
  %mul1628 = fmul float %788, %789, !dbg !12863
  %add1629 = fadd float %mul1624, %mul1628, !dbg !12864
  %arrayidx1630 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12865
  %790 = load float, float* %arrayidx1630, align 8, !dbg !12865
  %arrayidx1631 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 2, !dbg !12866
  %opacity1632 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1631, i32 0, i32 8, !dbg !12867
  %791 = load float, float* %opacity1632, align 4, !dbg !12867
  %mul1633 = fmul float %790, %791, !dbg !12868
  %add1634 = fadd float %add1629, %mul1633, !dbg !12869
  %arrayidx1635 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12870
  %792 = load float, float* %arrayidx1635, align 4, !dbg !12870
  %arrayidx1636 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 3, !dbg !12871
  %opacity1637 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1636, i32 0, i32 8, !dbg !12872
  %793 = load float, float* %opacity1637, align 4, !dbg !12872
  %mul1638 = fmul float %792, %793, !dbg !12873
  %add1639 = fadd float %add1634, %mul1638, !dbg !12874
  %mul1640 = fmul float %785, %add1639, !dbg !12875
  %arrayidx1641 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 1, !dbg !12876
  %794 = load float, float* %arrayidx1641, align 4, !dbg !12876
  %arrayidx1642 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12877
  %795 = load float, float* %arrayidx1642, align 16, !dbg !12877
  %arrayidx1643 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 4, !dbg !12878
  %opacity1644 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1643, i32 0, i32 8, !dbg !12879
  %796 = load float, float* %opacity1644, align 4, !dbg !12879
  %mul1645 = fmul float %795, %796, !dbg !12880
  %arrayidx1646 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12881
  %797 = load float, float* %arrayidx1646, align 4, !dbg !12881
  %arrayidx1647 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 5, !dbg !12882
  %opacity1648 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1647, i32 0, i32 8, !dbg !12883
  %798 = load float, float* %opacity1648, align 4, !dbg !12883
  %mul1649 = fmul float %797, %798, !dbg !12884
  %add1650 = fadd float %mul1645, %mul1649, !dbg !12885
  %arrayidx1651 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12886
  %799 = load float, float* %arrayidx1651, align 8, !dbg !12886
  %arrayidx1652 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 6, !dbg !12887
  %opacity1653 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1652, i32 0, i32 8, !dbg !12888
  %800 = load float, float* %opacity1653, align 4, !dbg !12888
  %mul1654 = fmul float %799, %800, !dbg !12889
  %add1655 = fadd float %add1650, %mul1654, !dbg !12890
  %arrayidx1656 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12891
  %801 = load float, float* %arrayidx1656, align 4, !dbg !12891
  %arrayidx1657 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 7, !dbg !12892
  %opacity1658 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1657, i32 0, i32 8, !dbg !12893
  %802 = load float, float* %opacity1658, align 4, !dbg !12893
  %mul1659 = fmul float %801, %802, !dbg !12894
  %add1660 = fadd float %add1655, %mul1659, !dbg !12895
  %mul1661 = fmul float %794, %add1660, !dbg !12896
  %add1662 = fadd float %mul1640, %mul1661, !dbg !12897
  %arrayidx1663 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 2, !dbg !12898
  %803 = load float, float* %arrayidx1663, align 8, !dbg !12898
  %arrayidx1664 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12899
  %804 = load float, float* %arrayidx1664, align 16, !dbg !12899
  %arrayidx1665 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 8, !dbg !12900
  %opacity1666 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1665, i32 0, i32 8, !dbg !12901
  %805 = load float, float* %opacity1666, align 4, !dbg !12901
  %mul1667 = fmul float %804, %805, !dbg !12902
  %arrayidx1668 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12903
  %806 = load float, float* %arrayidx1668, align 4, !dbg !12903
  %arrayidx1669 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 9, !dbg !12904
  %opacity1670 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1669, i32 0, i32 8, !dbg !12905
  %807 = load float, float* %opacity1670, align 4, !dbg !12905
  %mul1671 = fmul float %806, %807, !dbg !12906
  %add1672 = fadd float %mul1667, %mul1671, !dbg !12907
  %arrayidx1673 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12908
  %808 = load float, float* %arrayidx1673, align 8, !dbg !12908
  %arrayidx1674 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 10, !dbg !12909
  %opacity1675 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1674, i32 0, i32 8, !dbg !12910
  %809 = load float, float* %opacity1675, align 4, !dbg !12910
  %mul1676 = fmul float %808, %809, !dbg !12911
  %add1677 = fadd float %add1672, %mul1676, !dbg !12912
  %arrayidx1678 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12913
  %810 = load float, float* %arrayidx1678, align 4, !dbg !12913
  %arrayidx1679 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 11, !dbg !12914
  %opacity1680 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1679, i32 0, i32 8, !dbg !12915
  %811 = load float, float* %opacity1680, align 4, !dbg !12915
  %mul1681 = fmul float %810, %811, !dbg !12916
  %add1682 = fadd float %add1677, %mul1681, !dbg !12917
  %mul1683 = fmul float %803, %add1682, !dbg !12918
  %add1684 = fadd float %add1662, %mul1683, !dbg !12919
  %arrayidx1685 = getelementptr inbounds [4 x float], [4 x float]* %cy1326, i64 0, i64 3, !dbg !12920
  %812 = load float, float* %arrayidx1685, align 4, !dbg !12920
  %arrayidx1686 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 0, !dbg !12921
  %813 = load float, float* %arrayidx1686, align 16, !dbg !12921
  %arrayidx1687 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 12, !dbg !12922
  %opacity1688 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1687, i32 0, i32 8, !dbg !12923
  %814 = load float, float* %opacity1688, align 4, !dbg !12923
  %mul1689 = fmul float %813, %814, !dbg !12924
  %arrayidx1690 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 1, !dbg !12925
  %815 = load float, float* %arrayidx1690, align 4, !dbg !12925
  %arrayidx1691 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 13, !dbg !12926
  %opacity1692 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1691, i32 0, i32 8, !dbg !12927
  %816 = load float, float* %opacity1692, align 4, !dbg !12927
  %mul1693 = fmul float %815, %816, !dbg !12928
  %add1694 = fadd float %mul1689, %mul1693, !dbg !12929
  %arrayidx1695 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 2, !dbg !12930
  %817 = load float, float* %arrayidx1695, align 8, !dbg !12930
  %arrayidx1696 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 14, !dbg !12931
  %opacity1697 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1696, i32 0, i32 8, !dbg !12932
  %818 = load float, float* %opacity1697, align 4, !dbg !12932
  %mul1698 = fmul float %817, %818, !dbg !12933
  %add1699 = fadd float %add1694, %mul1698, !dbg !12934
  %arrayidx1700 = getelementptr inbounds [4 x float], [4 x float]* %cx1325, i64 0, i64 3, !dbg !12935
  %819 = load float, float* %arrayidx1700, align 4, !dbg !12935
  %arrayidx1701 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 15, !dbg !12936
  %opacity1702 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1701, i32 0, i32 8, !dbg !12937
  %820 = load float, float* %opacity1702, align 4, !dbg !12937
  %mul1703 = fmul float %819, %820, !dbg !12938
  %add1704 = fadd float %add1699, %mul1703, !dbg !12939
  %mul1705 = fmul float %812, %add1704, !dbg !12940
  %add1706 = fadd float %add1684, %mul1705, !dbg !12941
  %821 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12942
  %opacity1707 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %821, i32 0, i32 8, !dbg !12943
  store float %add1706, float* %opacity1707, align 4, !dbg !12944
  br label %sw.epilog, !dbg !12945

sw.epilog:                                        ; preds = %for.end1349, %if.then1332, %if.end1322, %if.then1321, %if.end1312, %if.then905, %if.end898, %if.then897, %if.end890, %if.then882, %if.then876, %for.end509, %if.then492, %if.end453, %if.then330, %if.end295, %if.then99, %sw.bb93, %for.end, %if.then19
  %822 = load i32, i32* %status, align 4, !dbg !12946
  ret i32 %822, !dbg !12947
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @AlphaBlendMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %indexes, %struct._MagickPixelPacket* %pixel, float* %alpha) #0 !dbg !12948 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !12952, metadata !DIExpression()), !dbg !12953
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !12954, metadata !DIExpression()), !dbg !12955
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !12956, metadata !DIExpression()), !dbg !12957
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !12958, metadata !DIExpression()), !dbg !12959
  store float* %alpha, float** %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata float** %alpha.addr, metadata !12960, metadata !DIExpression()), !dbg !12961
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12962
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 6, !dbg !12964
  %1 = load i32, i32* %matte, align 8, !dbg !12964
  %cmp = icmp eq i32 %1, 0, !dbg !12965
  br i1 %cmp, label %if.then, label %if.end20, !dbg !12966

if.then:                                          ; preds = %entry
  %2 = load float*, float** %alpha.addr, align 8, !dbg !12967
  store float 1.000000e+00, float* %2, align 4, !dbg !12969
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !12970
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 2, !dbg !12970
  %4 = load i16, i16* %red, align 2, !dbg !12970
  %conv = uitofp i16 %4 to float, !dbg !12971
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12972
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 5, !dbg !12973
  store float %conv, float* %red1, align 8, !dbg !12974
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !12975
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 1, !dbg !12975
  %7 = load i16, i16* %green, align 2, !dbg !12975
  %conv2 = uitofp i16 %7 to float, !dbg !12976
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12977
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 6, !dbg !12978
  store float %conv2, float* %green3, align 4, !dbg !12979
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !12980
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 0, !dbg !12980
  %10 = load i16, i16* %blue, align 2, !dbg !12980
  %conv4 = uitofp i16 %10 to float, !dbg !12981
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12982
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 7, !dbg !12983
  store float %conv4, float* %blue5, align 8, !dbg !12984
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !12985
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 3, !dbg !12985
  %13 = load i16, i16* %opacity, align 2, !dbg !12985
  %conv6 = uitofp i16 %13 to float, !dbg !12986
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12987
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 8, !dbg !12988
  store float %conv6, float* %opacity7, align 4, !dbg !12989
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !12990
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 9, !dbg !12991
  store float 0.000000e+00, float* %index, align 8, !dbg !12992
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12993
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 1, !dbg !12995
  %17 = load i32, i32* %colorspace, align 4, !dbg !12995
  %cmp8 = icmp eq i32 %17, 12, !dbg !12996
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false, !dbg !12997

lor.lhs.false:                                    ; preds = %if.then
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12998
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 0, !dbg !12999
  %19 = load i32, i32* %storage_class, align 8, !dbg !12999
  %cmp10 = icmp eq i32 %19, 2, !dbg !13000
  br i1 %cmp10, label %land.lhs.true, label %if.end, !dbg !13001

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then
  %20 = load i16*, i16** %indexes.addr, align 8, !dbg !13002
  %cmp12 = icmp ne i16* %20, null, !dbg !13003
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !13004

if.then14:                                        ; preds = %land.lhs.true
  %21 = load i16*, i16** %indexes.addr, align 8, !dbg !13005
  %cmp15 = icmp eq i16* %21, null, !dbg !13005
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !13005

cond.true:                                        ; preds = %if.then14
  br label %cond.end, !dbg !13005

cond.false:                                       ; preds = %if.then14
  %22 = load i16*, i16** %indexes.addr, align 8, !dbg !13005
  %23 = load i16, i16* %22, align 2, !dbg !13005
  %conv17 = zext i16 %23 to i32, !dbg !13005
  br label %cond.end, !dbg !13005

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv17, %cond.false ], !dbg !13005
  %conv18 = sitofp i32 %cond to float, !dbg !13006
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13007
  %index19 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 9, !dbg !13008
  store float %conv18, float* %index19, align 8, !dbg !13009
  br label %if.end, !dbg !13007

if.end:                                           ; preds = %cond.end, %land.lhs.true, %lor.lhs.false
  br label %if.end65, !dbg !13010

if.end20:                                         ; preds = %entry
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !13011
  %opacity21 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 3, !dbg !13011
  %26 = load i16, i16* %opacity21, align 2, !dbg !13011
  %conv22 = zext i16 %26 to i32, !dbg !13011
  %sub = sub nsw i32 65535, %conv22, !dbg !13011
  %conv23 = sitofp i32 %sub to double, !dbg !13011
  %mul = fmul double 0x3EF0001000100010, %conv23, !dbg !13012
  %conv24 = fptrunc double %mul to float, !dbg !13013
  %27 = load float*, float** %alpha.addr, align 8, !dbg !13014
  store float %conv24, float* %27, align 4, !dbg !13015
  %28 = load float*, float** %alpha.addr, align 8, !dbg !13016
  %29 = load float, float* %28, align 4, !dbg !13017
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !13018
  %red25 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 2, !dbg !13018
  %31 = load i16, i16* %red25, align 2, !dbg !13018
  %conv26 = zext i16 %31 to i32, !dbg !13018
  %conv27 = sitofp i32 %conv26 to float, !dbg !13018
  %mul28 = fmul float %29, %conv27, !dbg !13019
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13020
  %red29 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 5, !dbg !13021
  store float %mul28, float* %red29, align 8, !dbg !13022
  %33 = load float*, float** %alpha.addr, align 8, !dbg !13023
  %34 = load float, float* %33, align 4, !dbg !13024
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !13025
  %green30 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i32 0, i32 1, !dbg !13025
  %36 = load i16, i16* %green30, align 2, !dbg !13025
  %conv31 = zext i16 %36 to i32, !dbg !13025
  %conv32 = sitofp i32 %conv31 to float, !dbg !13025
  %mul33 = fmul float %34, %conv32, !dbg !13026
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13027
  %green34 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %37, i32 0, i32 6, !dbg !13028
  store float %mul33, float* %green34, align 4, !dbg !13029
  %38 = load float*, float** %alpha.addr, align 8, !dbg !13030
  %39 = load float, float* %38, align 4, !dbg !13031
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !13032
  %blue35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i32 0, i32 0, !dbg !13032
  %41 = load i16, i16* %blue35, align 2, !dbg !13032
  %conv36 = zext i16 %41 to i32, !dbg !13032
  %conv37 = sitofp i32 %conv36 to float, !dbg !13032
  %mul38 = fmul float %39, %conv37, !dbg !13033
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13034
  %blue39 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 7, !dbg !13035
  store float %mul38, float* %blue39, align 8, !dbg !13036
  %43 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !13037
  %opacity40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %43, i32 0, i32 3, !dbg !13037
  %44 = load i16, i16* %opacity40, align 2, !dbg !13037
  %conv41 = uitofp i16 %44 to float, !dbg !13038
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13039
  %opacity42 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 8, !dbg !13040
  store float %conv41, float* %opacity42, align 4, !dbg !13041
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13042
  %index43 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 9, !dbg !13043
  store float 0.000000e+00, float* %index43, align 8, !dbg !13044
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !13045
  %colorspace44 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 1, !dbg !13047
  %48 = load i32, i32* %colorspace44, align 4, !dbg !13047
  %cmp45 = icmp eq i32 %48, 12, !dbg !13048
  br i1 %cmp45, label %land.lhs.true51, label %lor.lhs.false47, !dbg !13049

lor.lhs.false47:                                  ; preds = %if.end20
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !13050
  %storage_class48 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 0, !dbg !13051
  %50 = load i32, i32* %storage_class48, align 8, !dbg !13051
  %cmp49 = icmp eq i32 %50, 2, !dbg !13052
  br i1 %cmp49, label %land.lhs.true51, label %if.end65, !dbg !13053

land.lhs.true51:                                  ; preds = %lor.lhs.false47, %if.end20
  %51 = load i16*, i16** %indexes.addr, align 8, !dbg !13054
  %cmp52 = icmp ne i16* %51, null, !dbg !13055
  br i1 %cmp52, label %if.then54, label %if.end65, !dbg !13056

if.then54:                                        ; preds = %land.lhs.true51
  %52 = load float*, float** %alpha.addr, align 8, !dbg !13057
  %53 = load float, float* %52, align 4, !dbg !13058
  %54 = load i16*, i16** %indexes.addr, align 8, !dbg !13059
  %cmp55 = icmp eq i16* %54, null, !dbg !13059
  br i1 %cmp55, label %cond.true57, label %cond.false58, !dbg !13059

cond.true57:                                      ; preds = %if.then54
  br label %cond.end60, !dbg !13059

cond.false58:                                     ; preds = %if.then54
  %55 = load i16*, i16** %indexes.addr, align 8, !dbg !13059
  %56 = load i16, i16* %55, align 2, !dbg !13059
  %conv59 = zext i16 %56 to i32, !dbg !13059
  br label %cond.end60, !dbg !13059

cond.end60:                                       ; preds = %cond.false58, %cond.true57
  %cond61 = phi i32 [ 0, %cond.true57 ], [ %conv59, %cond.false58 ], !dbg !13059
  %conv62 = sitofp i32 %cond61 to float, !dbg !13059
  %mul63 = fmul float %53, %conv62, !dbg !13060
  %57 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13061
  %index64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %57, i32 0, i32 9, !dbg !13062
  store float %mul63, float* %index64, align 8, !dbg !13063
  br label %if.end65, !dbg !13061

if.end65:                                         ; preds = %if.end, %cond.end60, %land.lhs.true51, %lor.lhs.false47
  ret void, !dbg !13064
}

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !13065 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !13067, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.declare(metadata double* %sign, metadata !13069, metadata !DIExpression()), !dbg !13070
  %0 = load double, double* %x.addr, align 8, !dbg !13071
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !13072
  %1 = zext i1 %cmp to i64, !dbg !13071
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !13071
  store double %cond, double* %sign, align 8, !dbg !13073
  %2 = load double, double* %sign, align 8, !dbg !13074
  %3 = load double, double* %x.addr, align 8, !dbg !13076
  %mul = fmul double %2, %3, !dbg !13077
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !13078
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13079

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !13080
  %div = fdiv double 1.000000e+00, %4, !dbg !13081
  store double %div, double* %retval, align 8, !dbg !13082
  br label %return, !dbg !13082

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !13083
  %div2 = fdiv double %5, 1.000000e-15, !dbg !13084
  store double %div2, double* %retval, align 8, !dbg !13085
  br label %return, !dbg !13085

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !13086
  ret double %6, !dbg !13086
}

; Function Attrs: noinline nounwind uwtable
define internal void @SetMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %index, %struct._MagickPixelPacket* %pixel) #0 !dbg !13087 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !13090, metadata !DIExpression()), !dbg !13091
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !13092, metadata !DIExpression()), !dbg !13093
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !13094, metadata !DIExpression()), !dbg !13095
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !13096, metadata !DIExpression()), !dbg !13097
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !13098
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !13098
  %1 = load i16, i16* %red, align 2, !dbg !13098
  %conv = uitofp i16 %1 to float, !dbg !13099
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13100
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !13101
  store float %conv, float* %red1, align 8, !dbg !13102
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !13103
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 1, !dbg !13103
  %4 = load i16, i16* %green, align 2, !dbg !13103
  %conv2 = uitofp i16 %4 to float, !dbg !13104
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13105
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 6, !dbg !13106
  store float %conv2, float* %green3, align 4, !dbg !13107
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !13108
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !13108
  %7 = load i16, i16* %blue, align 2, !dbg !13108
  %conv4 = uitofp i16 %7 to float, !dbg !13109
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13110
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !13111
  store float %conv4, float* %blue5, align 8, !dbg !13112
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !13113
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 3, !dbg !13113
  %10 = load i16, i16* %opacity, align 2, !dbg !13113
  %conv6 = uitofp i16 %10 to float, !dbg !13114
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13115
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 8, !dbg !13116
  store float %conv6, float* %opacity7, align 4, !dbg !13117
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !13118
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !13120
  %13 = load i32, i32* %colorspace, align 4, !dbg !13120
  %cmp = icmp eq i32 %13, 12, !dbg !13121
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13122

land.lhs.true:                                    ; preds = %entry
  %14 = load i16*, i16** %index.addr, align 8, !dbg !13123
  %cmp9 = icmp ne i16* %14, null, !dbg !13124
  br i1 %cmp9, label %if.then, label %if.end, !dbg !13125

if.then:                                          ; preds = %land.lhs.true
  %15 = load i16*, i16** %index.addr, align 8, !dbg !13126
  %cmp11 = icmp eq i16* %15, null, !dbg !13126
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !13126

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !13126

cond.false:                                       ; preds = %if.then
  %16 = load i16*, i16** %index.addr, align 8, !dbg !13126
  %17 = load i16, i16* %16, align 2, !dbg !13126
  %conv13 = zext i16 %17 to i32, !dbg !13126
  br label %cond.end, !dbg !13126

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv13, %cond.false ], !dbg !13126
  %conv14 = sitofp i32 %cond to float, !dbg !13127
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13128
  %index15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 9, !dbg !13129
  store float %conv14, float* %index15, align 8, !dbg !13130
  br label %if.end, !dbg !13128

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !13131
}

; Function Attrs: noinline nounwind uwtable
define internal void @CatromWeights(float %x, [4 x float]* %weights) #0 !dbg !13132 {
entry:
  %x.addr = alloca float, align 4
  %weights.addr = alloca [4 x float]*, align 8
  %alpha = alloca float, align 4
  %beta = alloca float, align 4
  %gamma = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !13136, metadata !DIExpression()), !dbg !13137
  store [4 x float]* %weights, [4 x float]** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %weights.addr, metadata !13138, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !13140, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.declare(metadata float* %beta, metadata !13142, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !13144, metadata !DIExpression()), !dbg !13145
  %0 = load float, float* %x.addr, align 4, !dbg !13146
  %sub = fsub float 1.000000e+00, %0, !dbg !13147
  store float %sub, float* %alpha, align 4, !dbg !13148
  %1 = load float, float* %x.addr, align 4, !dbg !13149
  %mul = fmul float -5.000000e-01, %1, !dbg !13150
  %2 = load float, float* %alpha, align 4, !dbg !13151
  %mul1 = fmul float %mul, %2, !dbg !13152
  store float %mul1, float* %beta, align 4, !dbg !13153
  %3 = load float, float* %alpha, align 4, !dbg !13154
  %4 = load float, float* %beta, align 4, !dbg !13155
  %mul2 = fmul float %3, %4, !dbg !13156
  %5 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13157
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0, !dbg !13158
  store float %mul2, float* %arrayidx, align 4, !dbg !13159
  %6 = load float, float* %x.addr, align 4, !dbg !13160
  %7 = load float, float* %beta, align 4, !dbg !13161
  %mul3 = fmul float %6, %7, !dbg !13162
  %8 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13163
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 3, !dbg !13164
  store float %mul3, float* %arrayidx4, align 4, !dbg !13165
  %9 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13166
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 3, !dbg !13167
  %10 = load float, float* %arrayidx5, align 4, !dbg !13167
  %11 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13168
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i64 0, !dbg !13169
  %12 = load float, float* %arrayidx6, align 4, !dbg !13169
  %sub7 = fsub float %10, %12, !dbg !13170
  store float %sub7, float* %gamma, align 4, !dbg !13171
  %13 = load float, float* %alpha, align 4, !dbg !13172
  %14 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13173
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %14, i64 0, i64 0, !dbg !13174
  %15 = load float, float* %arrayidx8, align 4, !dbg !13174
  %sub9 = fsub float %13, %15, !dbg !13175
  %16 = load float, float* %gamma, align 4, !dbg !13176
  %add = fadd float %sub9, %16, !dbg !13177
  %17 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13178
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %17, i64 0, i64 1, !dbg !13179
  store float %add, float* %arrayidx10, align 4, !dbg !13180
  %18 = load float, float* %x.addr, align 4, !dbg !13181
  %19 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13182
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %19, i64 0, i64 3, !dbg !13183
  %20 = load float, float* %arrayidx11, align 4, !dbg !13183
  %sub12 = fsub float %18, %20, !dbg !13184
  %21 = load float, float* %gamma, align 4, !dbg !13185
  %sub13 = fsub float %sub12, %21, !dbg !13186
  %22 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13187
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %22, i64 0, i64 2, !dbg !13188
  store float %sub13, float* %arrayidx14, align 4, !dbg !13189
  ret void, !dbg !13190
}

declare dso_local %struct._Image* @ExcerptImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @ResizeImage(%struct._Image*, i64, i64, i32, double, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #3

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local i16* @GetVirtualIndexQueue(%struct._Image*) #3

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @MagickPixelLuma(%struct._MagickPixelPacket* %pixel) #0 !dbg !13191 {
entry:
  %retval = alloca float, align 4
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %blue = alloca float, align 4
  %green = alloca float, align 4
  %red = alloca float, align 4
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !13195, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.declare(metadata float* %blue, metadata !13197, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.declare(metadata float* %green, metadata !13199, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.declare(metadata float* %red, metadata !13201, metadata !DIExpression()), !dbg !13202
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13203
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !13205
  %1 = load i32, i32* %colorspace, align 4, !dbg !13205
  %cmp = icmp eq i32 %1, 2, !dbg !13206
  br i1 %cmp, label %if.then, label %if.end, !dbg !13207

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13208
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !13209
  %3 = load float, float* %red1, align 8, !dbg !13209
  store float %3, float* %retval, align 4, !dbg !13210
  br label %return, !dbg !13210

if.end:                                           ; preds = %entry
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13211
  %colorspace2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 1, !dbg !13213
  %5 = load i32, i32* %colorspace2, align 4, !dbg !13213
  %cmp3 = icmp eq i32 %5, 13, !dbg !13214
  br i1 %cmp3, label %if.then4, label %if.end14, !dbg !13215

if.then4:                                         ; preds = %if.end
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13216
  %red5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 5, !dbg !13217
  %7 = load float, float* %red5, align 8, !dbg !13217
  %conv = fpext float %7 to double, !dbg !13216
  %mul = fmul double 2.126560e-01, %conv, !dbg !13218
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13219
  %green6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 6, !dbg !13220
  %9 = load float, float* %green6, align 4, !dbg !13220
  %conv7 = fpext float %9 to double, !dbg !13219
  %mul8 = fmul double 0x3FE6E29307AF20EA, %conv7, !dbg !13221
  %add = fadd double %mul, %mul8, !dbg !13222
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13223
  %blue9 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 7, !dbg !13224
  %11 = load float, float* %blue9, align 8, !dbg !13224
  %conv10 = fpext float %11 to double, !dbg !13223
  %mul11 = fmul double 7.218600e-02, %conv10, !dbg !13225
  %add12 = fadd double %add, %mul11, !dbg !13226
  %conv13 = fptrunc double %add12 to float, !dbg !13227
  store float %conv13, float* %retval, align 4, !dbg !13228
  br label %return, !dbg !13228

if.end14:                                         ; preds = %if.end
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13229
  %red15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !13230
  %13 = load float, float* %red15, align 8, !dbg !13230
  %call = call float @EncodePixelGamma(float %13), !dbg !13231
  store float %call, float* %red, align 4, !dbg !13232
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13233
  %green16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 6, !dbg !13234
  %15 = load float, float* %green16, align 4, !dbg !13234
  %call17 = call float @EncodePixelGamma(float %15), !dbg !13235
  store float %call17, float* %green, align 4, !dbg !13236
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !13237
  %blue18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %16, i32 0, i32 7, !dbg !13238
  %17 = load float, float* %blue18, align 8, !dbg !13238
  %call19 = call float @EncodePixelGamma(float %17), !dbg !13239
  store float %call19, float* %blue, align 4, !dbg !13240
  %18 = load float, float* %red, align 4, !dbg !13241
  %conv20 = fpext float %18 to double, !dbg !13241
  %mul21 = fmul double 2.126560e-01, %conv20, !dbg !13242
  %19 = load float, float* %green, align 4, !dbg !13243
  %conv22 = fpext float %19 to double, !dbg !13243
  %mul23 = fmul double 0x3FE6E29307AF20EA, %conv22, !dbg !13244
  %add24 = fadd double %mul21, %mul23, !dbg !13245
  %20 = load float, float* %blue, align 4, !dbg !13246
  %conv25 = fpext float %20 to double, !dbg !13246
  %mul26 = fmul double 7.218600e-02, %conv25, !dbg !13247
  %add27 = fadd double %add24, %mul26, !dbg !13248
  %conv28 = fptrunc double %add27 to float, !dbg !13249
  store float %conv28, float* %retval, align 4, !dbg !13250
  br label %return, !dbg !13250

return:                                           ; preds = %if.end14, %if.then4, %if.then
  %21 = load float, float* %retval, align 4, !dbg !13251
  ret float %21, !dbg !13251
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal double @MeshInterpolate(%struct._PointInfo* %delta, double %p, double %x, double %y) #0 !dbg !13252 {
entry:
  %delta.addr = alloca %struct._PointInfo*, align 8
  %p.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._PointInfo* %delta, %struct._PointInfo** %delta.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %delta.addr, metadata !13257, metadata !DIExpression()), !dbg !13258
  store double %p, double* %p.addr, align 8
  call void @llvm.dbg.declare(metadata double* %p.addr, metadata !13259, metadata !DIExpression()), !dbg !13260
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !13261, metadata !DIExpression()), !dbg !13262
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !13263, metadata !DIExpression()), !dbg !13264
  %0 = load %struct._PointInfo*, %struct._PointInfo** %delta.addr, align 8, !dbg !13265
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %0, i32 0, i32 0, !dbg !13266
  %1 = load double, double* %x1, align 8, !dbg !13266
  %2 = load double, double* %x.addr, align 8, !dbg !13267
  %mul = fmul double %1, %2, !dbg !13268
  %3 = load %struct._PointInfo*, %struct._PointInfo** %delta.addr, align 8, !dbg !13269
  %y2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %3, i32 0, i32 1, !dbg !13270
  %4 = load double, double* %y2, align 8, !dbg !13270
  %5 = load double, double* %y.addr, align 8, !dbg !13271
  %mul3 = fmul double %4, %5, !dbg !13272
  %add = fadd double %mul, %mul3, !dbg !13273
  %6 = load %struct._PointInfo*, %struct._PointInfo** %delta.addr, align 8, !dbg !13274
  %x4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %6, i32 0, i32 0, !dbg !13275
  %7 = load double, double* %x4, align 8, !dbg !13275
  %sub = fsub double 1.000000e+00, %7, !dbg !13276
  %8 = load %struct._PointInfo*, %struct._PointInfo** %delta.addr, align 8, !dbg !13277
  %y5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %8, i32 0, i32 1, !dbg !13278
  %9 = load double, double* %y5, align 8, !dbg !13278
  %sub6 = fsub double %sub, %9, !dbg !13279
  %10 = load double, double* %p.addr, align 8, !dbg !13280
  %mul7 = fmul double %sub6, %10, !dbg !13281
  %add8 = fadd double %add, %mul7, !dbg !13282
  ret double %add8, !dbg !13283
}

; Function Attrs: noinline nounwind uwtable
define internal void @SplineWeights(float %x, [4 x float]* %weights) #0 !dbg !13284 {
entry:
  %x.addr = alloca float, align 4
  %weights.addr = alloca [4 x float]*, align 8
  %alpha = alloca float, align 4
  %beta = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !13285, metadata !DIExpression()), !dbg !13286
  store [4 x float]* %weights, [4 x float]** %weights.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %weights.addr, metadata !13287, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !13289, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.declare(metadata float* %beta, metadata !13291, metadata !DIExpression()), !dbg !13292
  %0 = load float, float* %x.addr, align 4, !dbg !13293
  %sub = fsub float 1.000000e+00, %0, !dbg !13294
  store float %sub, float* %alpha, align 4, !dbg !13295
  %1 = load float, float* %x.addr, align 4, !dbg !13296
  %mul = fmul float 0x3FC5555560000000, %1, !dbg !13297
  %2 = load float, float* %x.addr, align 4, !dbg !13298
  %mul1 = fmul float %mul, %2, !dbg !13299
  %3 = load float, float* %x.addr, align 4, !dbg !13300
  %mul2 = fmul float %mul1, %3, !dbg !13301
  %4 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13302
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3, !dbg !13303
  store float %mul2, float* %arrayidx, align 4, !dbg !13304
  %5 = load float, float* %alpha, align 4, !dbg !13305
  %mul3 = fmul float 0x3FC5555560000000, %5, !dbg !13306
  %6 = load float, float* %alpha, align 4, !dbg !13307
  %mul4 = fmul float %mul3, %6, !dbg !13308
  %7 = load float, float* %alpha, align 4, !dbg !13309
  %mul5 = fmul float %mul4, %7, !dbg !13310
  %8 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13311
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 0, !dbg !13312
  store float %mul5, float* %arrayidx6, align 4, !dbg !13313
  %9 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13314
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 0, i64 3, !dbg !13315
  %10 = load float, float* %arrayidx7, align 4, !dbg !13315
  %11 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13316
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 0, i64 0, !dbg !13317
  %12 = load float, float* %arrayidx8, align 4, !dbg !13317
  %sub9 = fsub float %10, %12, !dbg !13318
  store float %sub9, float* %beta, align 4, !dbg !13319
  %13 = load float, float* %alpha, align 4, !dbg !13320
  %14 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13321
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %14, i64 0, i64 0, !dbg !13322
  %15 = load float, float* %arrayidx10, align 4, !dbg !13322
  %sub11 = fsub float %13, %15, !dbg !13323
  %16 = load float, float* %beta, align 4, !dbg !13324
  %add = fadd float %sub11, %16, !dbg !13325
  %17 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13326
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %17, i64 0, i64 1, !dbg !13327
  store float %add, float* %arrayidx12, align 4, !dbg !13328
  %18 = load float, float* %x.addr, align 4, !dbg !13329
  %19 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13330
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %19, i64 0, i64 3, !dbg !13331
  %20 = load float, float* %arrayidx13, align 4, !dbg !13331
  %sub14 = fsub float %18, %20, !dbg !13332
  %21 = load float, float* %beta, align 4, !dbg !13333
  %sub15 = fsub float %sub14, %21, !dbg !13334
  %22 = load [4 x float]*, [4 x float]** %weights.addr, align 8, !dbg !13335
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %22, i64 0, i64 2, !dbg !13336
  store float %sub15, float* %arrayidx16, align 4, !dbg !13337
  ret void, !dbg !13338
}

; Function Attrs: nounwind
declare dso_local double @frexp(double, i32*) #8

; Function Attrs: nounwind readnone
declare dso_local i64 @div(i32, i32) #4

; Function Attrs: nounwind
declare dso_local double @ldexp(double, i32) #8

declare dso_local i32 @LocaleCompare(i8*, i8*) #3

declare dso_local %struct._PixelPacket* @GetVirtualPixels(%struct._Image*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ScaleQuantumToChar(i16 zeroext %quantum) #0 !dbg !13339 {
entry:
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !13342, metadata !DIExpression()), !dbg !13343
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !13344
  %conv = zext i16 %0 to i64, !dbg !13344
  %add = add i64 %conv, 128, !dbg !13345
  %1 = load i16, i16* %quantum.addr, align 2, !dbg !13346
  %conv1 = zext i16 %1 to i64, !dbg !13346
  %add2 = add i64 %conv1, 128, !dbg !13347
  %shr = lshr i64 %add2, 8, !dbg !13348
  %sub = sub i64 %add, %shr, !dbg !13349
  %shr3 = lshr i64 %sub, 8, !dbg !13350
  %conv4 = trunc i64 %shr3 to i8, !dbg !13351
  ret i8 %conv4, !dbg !13352
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !13353 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !13356, metadata !DIExpression()), !dbg !13357
  %0 = load float, float* %value.addr, align 4, !dbg !13358
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !13360
  br i1 %cmp, label %if.then, label %if.end, !dbg !13361

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !13362
  br label %return, !dbg !13362

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !13363
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !13365
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !13366

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !13367
  br label %return, !dbg !13367

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !13368
  %add = fadd float %2, 5.000000e-01, !dbg !13369
  %conv = fptoui float %add to i16, !dbg !13370
  store i16 %conv, i16* %retval, align 2, !dbg !13371
  br label %return, !dbg !13371

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !13372
  ret i16 %3, !dbg !13372
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ScaleQuantumToLong(i16 zeroext %quantum) #0 !dbg !13373 {
entry:
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !13377, metadata !DIExpression()), !dbg !13378
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !13379
  %conv = zext i16 %0 to i64, !dbg !13379
  %mul = mul i64 65537, %conv, !dbg !13380
  %conv1 = trunc i64 %mul to i32, !dbg !13381
  ret i32 %conv1, !dbg !13382
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleQuantumToShort(i16 zeroext %quantum) #0 !dbg !13383 {
entry:
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !13388
  ret i16 %0, !dbg !13389
}

declare dso_local %struct._PixelPacket* @GetAuthenticPixels(%struct._Image*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleCharToQuantum(i8 zeroext %value) #0 !dbg !13390 {
entry:
  %value.addr = alloca i8, align 1
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !13393, metadata !DIExpression()), !dbg !13394
  %0 = load i8, i8* %value.addr, align 1, !dbg !13395
  %conv = zext i8 %0 to i32, !dbg !13395
  %mul = mul i32 257, %conv, !dbg !13396
  %conv1 = trunc i32 %mul to i16, !dbg !13397
  ret i16 %conv1, !dbg !13398
}

declare dso_local i32 @SyncAuthenticPixels(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local i16* @GetAuthenticIndexQueue(%struct._Image*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleLongToQuantum(i32 %value) #0 !dbg !13399 {
entry:
  %value.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !13402, metadata !DIExpression()), !dbg !13403
  %0 = load i32, i32* %value.addr, align 4, !dbg !13404
  %conv = zext i32 %0 to i64, !dbg !13404
  %add = add i64 %conv, 32768, !dbg !13405
  %div = udiv i64 %add, 65537, !dbg !13406
  %conv1 = trunc i64 %div to i16, !dbg !13407
  ret i16 %conv1, !dbg !13408
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleShortToQuantum(i16 zeroext %value) #0 !dbg !13409 {
entry:
  %value.addr = alloca i16, align 2
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !13412, metadata !DIExpression()), !dbg !13413
  %0 = load i16, i16* %value.addr, align 2, !dbg !13414
  ret i16 %0, !dbg !13415
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { allocsize(0,1) }
attributes #10 = { nounwind readnone }
attributes #11 = { noreturn }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.dbg.cu = !{!8}
!llvm.module.flags = !{!723, !724, !725}
!llvm.ident = !{!726}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "coefficient", scope: !2, file: !3, line: 141, type: !715, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "DecodeGamma", scope: !3, file: !3, line: 129, type: !4, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!3 = !DIFile(filename: "magick/pixel.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !7}
!6 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!7 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!8 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !9, retainedTypes: !441, globals: !705, splitDebugInlining: false, nameTableKind: None)
!9 = !{!10, !17, !54, !58, !131, !156, !168, !176, !181, !216, !226, !232, !247, !318, !326, !332, !349, !363, !375, !386, !416}
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11, line: 204, baseType: !12, size: 32, elements: !13)
!11 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !18, line: 25, baseType: !12, size: 32, elements: !19)
!18 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53}
!20 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!24 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!25 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!26 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!27 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!28 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!29 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!30 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!31 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!32 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!33 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!34 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!35 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!36 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!37 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!38 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!39 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!40 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!41 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!42 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!43 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!44 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!45 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!46 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!47 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!48 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!49 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!50 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!51 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!52 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!53 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11, line: 211, baseType: !12, size: 32, elements: !55)
!55 = !{!56, !57}
!56 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !59, line: 28, baseType: !12, size: 32, elements: !60)
!59 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!60 = !{!61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130}
!61 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!63 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!64 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!65 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!66 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!67 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!68 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!69 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!70 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!71 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!72 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!73 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!74 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!75 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!76 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!77 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!78 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!79 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!80 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!81 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!82 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!83 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!84 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!85 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!86 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!87 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!88 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!89 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!90 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!91 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!92 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!93 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!94 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!95 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!96 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!97 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!98 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!99 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!100 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!101 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!102 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!103 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!104 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!105 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!106 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!107 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!108 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!109 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!110 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!111 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!112 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!113 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!114 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!115 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!116 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!117 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!118 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!119 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!120 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!121 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!122 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!123 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!124 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!125 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!126 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!127 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!128 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!129 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!130 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !132, line: 25, baseType: !12, size: 32, elements: !133)
!132 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!133 = !{!134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155}
!134 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!137 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!138 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!139 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!140 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!141 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!142 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!143 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!144 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!145 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!146 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!147 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!148 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!149 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!150 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!151 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!152 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!153 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!154 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!155 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !157, line: 75, baseType: !12, size: 32, elements: !158)
!157 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!158 = !{!159, !160, !161, !162, !163, !164, !165, !166, !167}
!159 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!160 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!161 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!162 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!163 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!164 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!165 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!166 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!167 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !169, line: 42, baseType: !12, size: 32, elements: !170)
!169 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !157, line: 88, baseType: !12, size: 32, elements: !177)
!177 = !{!178, !179, !180}
!178 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !182, line: 32, baseType: !12, size: 32, elements: !183)
!182 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!183 = !{!184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215}
!184 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!190 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!191 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!192 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!193 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!194 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!195 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!196 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!197 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!198 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!199 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!200 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!201 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!202 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!203 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!204 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!205 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!206 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!207 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!208 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!209 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!210 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!211 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!212 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!213 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!214 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!215 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !157, line: 63, baseType: !12, size: 32, elements: !217)
!217 = !{!218, !219, !220, !221, !222, !223, !224, !225}
!218 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!219 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!220 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!221 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!222 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!223 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!224 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!225 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !227, line: 30, baseType: !12, size: 32, elements: !228)
!227 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!228 = !{!229, !230, !231}
!229 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!230 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!231 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !233, line: 77, baseType: !12, size: 32, elements: !234)
!233 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!234 = !{!235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246}
!235 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!236 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!237 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!242 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!243 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!244 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!245 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!246 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !248, line: 25, baseType: !12, size: 32, elements: !249)
!248 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!249 = !{!250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!250 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!251 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!252 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!253 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!254 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!255 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!256 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!257 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!258 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!259 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!260 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!261 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!262 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!263 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!264 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!265 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!266 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!267 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!268 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!269 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!270 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!271 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!272 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!273 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!274 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!275 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!276 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!277 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!278 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!279 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!280 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!281 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!282 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!283 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!284 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!285 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!286 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!287 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!288 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!289 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!290 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!291 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!292 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!293 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!294 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!295 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!296 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!297 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!298 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!299 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!300 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!301 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!302 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!303 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!304 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!305 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!306 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!307 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!308 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!309 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!310 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!311 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!312 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!313 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!314 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!315 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!316 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!317 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 25, baseType: !12, size: 32, elements: !320)
!319 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!320 = !{!321, !322, !323, !324, !325}
!321 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!322 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!323 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!324 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!325 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!326 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !327, line: 25, baseType: !12, size: 32, elements: !328)
!327 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!328 = !{!329, !330, !331}
!329 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!330 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!331 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !333, line: 31, baseType: !12, size: 32, elements: !334)
!333 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!334 = !{!335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348}
!335 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!336 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!337 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!338 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!339 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!340 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!341 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!342 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!343 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!344 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!345 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!346 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!347 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!348 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!349 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !157, line: 47, baseType: !12, size: 32, elements: !350)
!350 = !{!351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362}
!351 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!352 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!353 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!354 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!356 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!357 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!358 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!359 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!360 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!361 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!362 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!363 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !333, line: 67, baseType: !12, size: 32, elements: !364)
!364 = !{!365, !366, !367, !368, !369, !370, !371, !372, !373, !374}
!365 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!366 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!367 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!368 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!369 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!370 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!371 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!372 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!373 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!374 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!375 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !376, line: 25, baseType: !12, size: 32, elements: !377)
!376 = !DIFile(filename: "./magick/constitute.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!377 = !{!378, !379, !380, !381, !382, !383, !384, !385}
!378 = !DIEnumerator(name: "UndefinedPixel", value: 0, isUnsigned: true)
!379 = !DIEnumerator(name: "CharPixel", value: 1, isUnsigned: true)
!380 = !DIEnumerator(name: "DoublePixel", value: 2, isUnsigned: true)
!381 = !DIEnumerator(name: "FloatPixel", value: 3, isUnsigned: true)
!382 = !DIEnumerator(name: "IntegerPixel", value: 4, isUnsigned: true)
!383 = !DIEnumerator(name: "LongPixel", value: 5, isUnsigned: true)
!384 = !DIEnumerator(name: "QuantumPixel", value: 6, isUnsigned: true)
!385 = !DIEnumerator(name: "ShortPixel", value: 7, isUnsigned: true)
!386 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !227, line: 52, baseType: !12, size: 32, elements: !387)
!387 = !{!388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415}
!388 = !DIEnumerator(name: "UndefinedQuantum", value: 0, isUnsigned: true)
!389 = !DIEnumerator(name: "AlphaQuantum", value: 1, isUnsigned: true)
!390 = !DIEnumerator(name: "BlackQuantum", value: 2, isUnsigned: true)
!391 = !DIEnumerator(name: "BlueQuantum", value: 3, isUnsigned: true)
!392 = !DIEnumerator(name: "CMYKAQuantum", value: 4, isUnsigned: true)
!393 = !DIEnumerator(name: "CMYKQuantum", value: 5, isUnsigned: true)
!394 = !DIEnumerator(name: "CyanQuantum", value: 6, isUnsigned: true)
!395 = !DIEnumerator(name: "GrayAlphaQuantum", value: 7, isUnsigned: true)
!396 = !DIEnumerator(name: "GrayQuantum", value: 8, isUnsigned: true)
!397 = !DIEnumerator(name: "GreenQuantum", value: 9, isUnsigned: true)
!398 = !DIEnumerator(name: "IndexAlphaQuantum", value: 10, isUnsigned: true)
!399 = !DIEnumerator(name: "IndexQuantum", value: 11, isUnsigned: true)
!400 = !DIEnumerator(name: "MagentaQuantum", value: 12, isUnsigned: true)
!401 = !DIEnumerator(name: "OpacityQuantum", value: 13, isUnsigned: true)
!402 = !DIEnumerator(name: "RedQuantum", value: 14, isUnsigned: true)
!403 = !DIEnumerator(name: "RGBAQuantum", value: 15, isUnsigned: true)
!404 = !DIEnumerator(name: "BGRAQuantum", value: 16, isUnsigned: true)
!405 = !DIEnumerator(name: "RGBOQuantum", value: 17, isUnsigned: true)
!406 = !DIEnumerator(name: "RGBQuantum", value: 18, isUnsigned: true)
!407 = !DIEnumerator(name: "YellowQuantum", value: 19, isUnsigned: true)
!408 = !DIEnumerator(name: "GrayPadQuantum", value: 20, isUnsigned: true)
!409 = !DIEnumerator(name: "RGBPadQuantum", value: 21, isUnsigned: true)
!410 = !DIEnumerator(name: "CbYCrYQuantum", value: 22, isUnsigned: true)
!411 = !DIEnumerator(name: "CbYCrQuantum", value: 23, isUnsigned: true)
!412 = !DIEnumerator(name: "CbYCrAQuantum", value: 24, isUnsigned: true)
!413 = !DIEnumerator(name: "CMYKOQuantum", value: 25, isUnsigned: true)
!414 = !DIEnumerator(name: "BGRQuantum", value: 26, isUnsigned: true)
!415 = !DIEnumerator(name: "BGROQuantum", value: 27, isUnsigned: true)
!416 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !417, line: 34, baseType: !12, size: 32, elements: !418)
!417 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!418 = !{!419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440}
!419 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!420 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!421 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!422 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!423 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!424 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!425 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!426 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!427 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!428 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!429 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!430 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!431 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!432 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!433 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!434 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!435 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!436 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!437 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!438 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!439 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!440 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!441 = !{!442, !464, !456, !465, !466, !458, !6, !468, !470, !475, !681, !454, !683, !649, !685, !650, !688, !689, !459, !690, !12, !691, !692, !467, !693, !493, !695, !687, !696, !697, !699, !600, !701, !703}
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !333, line: 127, baseType: !444)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !333, line: 104, size: 448, elements: !445)
!445 = !{!446, !448, !450, !452, !453, !457, !460, !461, !462, !463}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !444, file: !333, line: 107, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !11, line: 209, baseType: !10)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !444, file: !333, line: 110, baseType: !449, size: 32, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !18, line: 61, baseType: !17)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !444, file: !333, line: 113, baseType: !451, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !11, line: 215, baseType: !54)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !444, file: !333, line: 116, baseType: !6, size: 64, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !444, file: !333, line: 119, baseType: !454, size: 64, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !455, line: 46, baseType: !456)
!455 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!456 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !444, file: !333, line: 122, baseType: !458, size: 32, offset: 256)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !11, line: 78, baseType: !459)
!459 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !444, file: !333, line: 123, baseType: !458, size: 32, offset: 288)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !444, file: !333, line: 124, baseType: !458, size: 32, offset: 320)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !444, file: !333, line: 125, baseType: !458, size: 32, offset: 352)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !444, file: !333, line: 126, baseType: !458, size: 32, offset: 384)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!465 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !11, line: 93, baseType: !467)
!467 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumType", file: !227, line: 82, baseType: !386)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !471, line: 77, baseType: !472)
!471 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !473, line: 193, baseType: !474)
!473 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!474 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !11, line: 221, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !157, line: 150, size: 105920, elements: !478)
!478 = !{!479, !480, !481, !483, !484, !486, !487, !488, !489, !490, !491, !492, !501, !502, !503, !504, !505, !519, !521, !522, !524, !527, !528, !529, !530, !531, !532, !540, !541, !542, !543, !544, !545, !547, !549, !551, !553, !555, !557, !559, !560, !561, !562, !563, !564, !565, !573, !588, !602, !603, !604, !605, !609, !613, !617, !618, !619, !620, !621, !638, !639, !641, !642, !652, !653, !655, !656, !657, !658, !659, !660, !662, !663, !664, !665, !666, !667, !668, !670, !671, !672, !673, !674, !678, !680}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !477, file: !157, line: 153, baseType: !447, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !477, file: !157, line: 156, baseType: !449, size: 32, offset: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !477, file: !157, line: 159, baseType: !482, size: 32, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !132, line: 49, baseType: !131)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !477, file: !157, line: 162, baseType: !454, size: 64, offset: 128)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !477, file: !157, line: 165, baseType: !485, size: 32, offset: 192)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !157, line: 86, baseType: !156)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !477, file: !157, line: 168, baseType: !451, size: 32, offset: 224)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !477, file: !157, line: 169, baseType: !451, size: 32, offset: 256)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !477, file: !157, line: 172, baseType: !454, size: 64, offset: 320)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !477, file: !157, line: 173, baseType: !454, size: 64, offset: 384)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !477, file: !157, line: 174, baseType: !454, size: 64, offset: 448)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !477, file: !157, line: 175, baseType: !454, size: 64, offset: 512)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !477, file: !157, line: 178, baseType: !493, size: 64, offset: 576)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !333, line: 148, baseType: !495)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !333, line: 131, size: 64, elements: !496)
!496 = !{!497, !498, !499, !500}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !495, file: !333, line: 143, baseType: !466, size: 16)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !495, file: !333, line: 144, baseType: !466, size: 16, offset: 16)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !495, file: !333, line: 145, baseType: !466, size: 16, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !495, file: !333, line: 146, baseType: !466, size: 16, offset: 48)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !477, file: !157, line: 179, baseType: !494, size: 64, offset: 640)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !477, file: !157, line: 180, baseType: !494, size: 64, offset: 704)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !477, file: !157, line: 181, baseType: !494, size: 64, offset: 768)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !477, file: !157, line: 184, baseType: !6, size: 64, offset: 832)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !477, file: !157, line: 187, baseType: !506, size: 768, offset: 896)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !157, line: 128, baseType: !507)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !157, line: 121, size: 768, elements: !508)
!508 = !{!509, !516, !517, !518}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !507, file: !157, line: 124, baseType: !510, size: 192)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !157, line: 101, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !157, line: 95, size: 192, elements: !512)
!512 = !{!513, !514, !515}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !511, file: !157, line: 98, baseType: !6, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !511, file: !157, line: 99, baseType: !6, size: 64, offset: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !511, file: !157, line: 100, baseType: !6, size: 64, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !507, file: !157, line: 125, baseType: !510, size: 192, offset: 192)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !507, file: !157, line: 126, baseType: !510, size: 192, offset: 384)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !507, file: !157, line: 127, baseType: !510, size: 192, offset: 576)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !477, file: !157, line: 190, baseType: !520, size: 32, offset: 1664)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !169, line: 49, baseType: !168)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !477, file: !157, line: 193, baseType: !464, size: 64, offset: 1728)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !477, file: !157, line: 196, baseType: !523, size: 32, offset: 1792)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !157, line: 93, baseType: !176)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !477, file: !157, line: 199, baseType: !525, size: 64, offset: 1856)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !477, file: !157, line: 200, baseType: !525, size: 64, offset: 1920)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !477, file: !157, line: 201, baseType: !525, size: 64, offset: 1984)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !477, file: !157, line: 204, baseType: !470, size: 64, offset: 2048)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !477, file: !157, line: 207, baseType: !6, size: 64, offset: 2112)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !477, file: !157, line: 208, baseType: !6, size: 64, offset: 2176)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !477, file: !157, line: 211, baseType: !533, size: 256, offset: 2240)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !233, line: 130, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !233, line: 121, size: 256, elements: !535)
!535 = !{!536, !537, !538, !539}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !534, file: !233, line: 124, baseType: !454, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !534, file: !233, line: 125, baseType: !454, size: 64, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !534, file: !233, line: 128, baseType: !470, size: 64, offset: 128)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !534, file: !233, line: 129, baseType: !470, size: 64, offset: 192)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !477, file: !157, line: 212, baseType: !533, size: 256, offset: 2496)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !477, file: !157, line: 213, baseType: !533, size: 256, offset: 2752)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !477, file: !157, line: 216, baseType: !6, size: 64, offset: 3008)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !477, file: !157, line: 217, baseType: !6, size: 64, offset: 3072)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !477, file: !157, line: 218, baseType: !6, size: 64, offset: 3136)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !477, file: !157, line: 221, baseType: !546, size: 32, offset: 3200)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !182, line: 66, baseType: !181)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !477, file: !157, line: 224, baseType: !548, size: 32, offset: 3232)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !157, line: 73, baseType: !216)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !477, file: !157, line: 227, baseType: !550, size: 32, offset: 3264)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !227, line: 35, baseType: !226)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !477, file: !157, line: 230, baseType: !552, size: 32, offset: 3296)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !233, line: 91, baseType: !232)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !477, file: !157, line: 233, baseType: !554, size: 32, offset: 3328)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !248, line: 99, baseType: !247)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !477, file: !157, line: 236, baseType: !556, size: 32, offset: 3360)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !319, line: 32, baseType: !318)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !477, file: !157, line: 239, baseType: !558, size: 64, offset: 3392)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !477, file: !157, line: 242, baseType: !454, size: 64, offset: 3456)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !477, file: !157, line: 243, baseType: !454, size: 64, offset: 3520)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !477, file: !157, line: 246, baseType: !470, size: 64, offset: 3584)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !477, file: !157, line: 249, baseType: !454, size: 64, offset: 3648)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !477, file: !157, line: 250, baseType: !454, size: 64, offset: 3712)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !477, file: !157, line: 253, baseType: !470, size: 64, offset: 3776)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !477, file: !157, line: 256, baseType: !566, size: 192, offset: 3840)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !567, line: 68, baseType: !568)
!567 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !567, line: 62, size: 192, elements: !569)
!569 = !{!570, !571, !572}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !568, file: !567, line: 65, baseType: !6, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !568, file: !567, line: 66, baseType: !6, size: 64, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !568, file: !567, line: 67, baseType: !6, size: 64, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !477, file: !157, line: 259, baseType: !574, size: 512, offset: 4032)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !327, line: 51, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !327, line: 40, size: 512, elements: !576)
!576 = !{!577, !584, !585, !587}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !575, file: !327, line: 43, baseType: !578, size: 192)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !327, line: 38, baseType: !579)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !327, line: 32, size: 192, elements: !580)
!580 = !{!581, !582, !583}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !579, file: !327, line: 35, baseType: !6, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !579, file: !327, line: 36, baseType: !6, size: 64, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !579, file: !327, line: 37, baseType: !6, size: 64, offset: 128)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !575, file: !327, line: 44, baseType: !578, size: 192, offset: 192)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !575, file: !327, line: 47, baseType: !586, size: 32, offset: 384)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !327, line: 30, baseType: !326)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !575, file: !327, line: 50, baseType: !454, size: 64, offset: 448)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !477, file: !157, line: 262, baseType: !589, size: 64, offset: 4544)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !590, line: 26, baseType: !591)
!590 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DISubroutineType(types: !593)
!593 = !{!451, !594, !596, !599, !464}
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !526)
!596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !597)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !11, line: 150, baseType: !598)
!598 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !600)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !11, line: 151, baseType: !601)
!601 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !477, file: !157, line: 265, baseType: !464, size: 64, offset: 4608)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !477, file: !157, line: 266, baseType: !464, size: 64, offset: 4672)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !477, file: !157, line: 267, baseType: !464, size: 64, offset: 4736)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !477, file: !157, line: 270, baseType: !606, size: 64, offset: 4800)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !132, line: 52, baseType: !608)
!608 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !132, line: 51, flags: DIFlagFwdDecl)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !477, file: !157, line: 273, baseType: !610, size: 64, offset: 4864)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !11, line: 217, baseType: !612)
!612 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !11, line: 217, flags: DIFlagFwdDecl)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !477, file: !157, line: 276, baseType: !614, size: 32768, offset: 4928)
!614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !526, size: 32768, elements: !615)
!615 = !{!616}
!616 = !DISubrange(count: 4096)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !477, file: !157, line: 277, baseType: !614, size: 32768, offset: 37696)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !477, file: !157, line: 278, baseType: !614, size: 32768, offset: 70464)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !477, file: !157, line: 281, baseType: !454, size: 64, offset: 103232)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !477, file: !157, line: 282, baseType: !454, size: 64, offset: 103296)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !477, file: !157, line: 285, baseType: !622, size: 448, offset: 103360)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !11, line: 219, baseType: !623)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !59, line: 102, size: 448, elements: !624)
!624 = !{!625, !627, !628, !629, !630, !631, !632, !637}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !623, file: !59, line: 105, baseType: !626, size: 32)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !59, line: 100, baseType: !58)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !623, file: !59, line: 108, baseType: !465, size: 32, offset: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !623, file: !59, line: 111, baseType: !525, size: 64, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !623, file: !59, line: 112, baseType: !525, size: 64, offset: 128)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !623, file: !59, line: 115, baseType: !464, size: 64, offset: 192)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !623, file: !59, line: 118, baseType: !451, size: 32, offset: 256)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !623, file: !59, line: 121, baseType: !633, size: 64, offset: 320)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !635, line: 26, baseType: !636)
!635 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!636 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !635, line: 25, flags: DIFlagFwdDecl)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !623, file: !59, line: 124, baseType: !454, size: 64, offset: 384)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !477, file: !157, line: 288, baseType: !451, size: 32, offset: 103808)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !477, file: !157, line: 291, baseType: !640, size: 64, offset: 103872)
!640 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !470)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !477, file: !157, line: 294, baseType: !633, size: 64, offset: 103936)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !477, file: !157, line: 297, baseType: !643, size: 256, offset: 104000)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !169, line: 40, baseType: !644)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !169, line: 27, size: 256, elements: !645)
!645 = !{!646, !647, !648, !651}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !644, file: !169, line: 30, baseType: !525, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !644, file: !169, line: 33, baseType: !454, size: 64, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !644, file: !169, line: 36, baseType: !649, size: 64, offset: 128)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !644, file: !169, line: 39, baseType: !454, size: 64, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !477, file: !157, line: 298, baseType: !643, size: 256, offset: 104256)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !477, file: !157, line: 299, baseType: !654, size: 64, offset: 104512)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !477, file: !157, line: 302, baseType: !454, size: 64, offset: 104576)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !477, file: !157, line: 305, baseType: !454, size: 64, offset: 104640)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !477, file: !157, line: 308, baseType: !558, size: 64, offset: 104704)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !477, file: !157, line: 309, baseType: !558, size: 64, offset: 104768)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !477, file: !157, line: 310, baseType: !558, size: 64, offset: 104832)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !477, file: !157, line: 313, baseType: !661, size: 32, offset: 104896)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !333, line: 47, baseType: !332)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !477, file: !157, line: 316, baseType: !451, size: 32, offset: 104928)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !477, file: !157, line: 319, baseType: !494, size: 64, offset: 104960)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !477, file: !157, line: 322, baseType: !558, size: 64, offset: 105024)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !477, file: !157, line: 325, baseType: !533, size: 256, offset: 105088)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !477, file: !157, line: 328, baseType: !464, size: 64, offset: 105344)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !477, file: !157, line: 329, baseType: !464, size: 64, offset: 105408)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !477, file: !157, line: 332, baseType: !669, size: 32, offset: 105472)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !157, line: 61, baseType: !349)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !477, file: !157, line: 335, baseType: !451, size: 32, offset: 105504)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !477, file: !157, line: 338, baseType: !600, size: 64, offset: 105536)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !477, file: !157, line: 341, baseType: !451, size: 32, offset: 105600)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !477, file: !157, line: 344, baseType: !454, size: 64, offset: 105664)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !477, file: !157, line: 347, baseType: !675, size: 64, offset: 105728)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !676, line: 7, baseType: !677)
!676 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !473, line: 160, baseType: !474)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !477, file: !157, line: 350, baseType: !679, size: 32, offset: 105792)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !333, line: 79, baseType: !363)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !477, file: !157, line: 353, baseType: !454, size: 64, offset: 105856)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !687)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !333, line: 129, baseType: !466)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !459)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !467)
!705 = !{!0, !706, !711, !718}
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "powers_of_two", scope: !2, file: !3, line: 154, type: !708, isLocal: true, isDefinition: true)
!708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 320, elements: !709)
!709 = !{!710}
!710 = !DISubrange(count: 5)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "coefficient", scope: !713, file: !3, line: 230, type: !715, isLocal: true, isDefinition: true)
!713 = distinct !DISubprogram(name: "EncodeGamma", scope: !3, file: !3, line: 218, type: !4, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!714 = !{}
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 576, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 9)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "powers_of_two", scope: !713, file: !3, line: 243, type: !720, isLocal: true, isDefinition: true)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 768, elements: !721)
!721 = !{!722}
!722 = !DISubrange(count: 12)
!723 = !{i32 7, !"Dwarf Version", i32 4}
!724 = !{i32 2, !"Debug Info Version", i32 3}
!725 = !{i32 1, !"wchar_size", i32 4}
!726 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!727 = distinct !DISubprogram(name: "CloneMagickPixelPacket", scope: !3, file: !3, line: 92, type: !728, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !714)
!728 = !DISubroutineType(types: !729)
!729 = !{!442, !730}
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !443)
!732 = !DILocalVariable(name: "pixel", arg: 1, scope: !727, file: !3, line: 93, type: !730)
!733 = !DILocation(line: 93, column: 28, scope: !727)
!734 = !DILocalVariable(name: "clone_pixel", scope: !727, file: !3, line: 96, type: !442)
!735 = !DILocation(line: 96, column: 6, scope: !727)
!736 = !DILocation(line: 98, column: 37, scope: !727)
!737 = !DILocation(line: 98, column: 15, scope: !727)
!738 = !DILocation(line: 98, column: 14, scope: !727)
!739 = !DILocation(line: 100, column: 7, scope: !740)
!740 = distinct !DILexicalBlock(scope: !727, file: !3, line: 100, column: 7)
!741 = !DILocation(line: 100, column: 19, scope: !740)
!742 = !DILocation(line: 100, column: 7, scope: !727)
!743 = !DILocalVariable(name: "message", scope: !744, file: !3, line: 101, type: !525)
!744 = distinct !DILexicalBlock(scope: !740, file: !3, line: 101, column: 5)
!745 = !DILocation(line: 101, column: 5, scope: !744)
!746 = !DILocalVariable(name: "exception", scope: !744, file: !3, line: 101, type: !622)
!747 = !DILocation(line: 102, column: 4, scope: !727)
!748 = !DILocation(line: 102, column: 18, scope: !727)
!749 = !DILocation(line: 102, column: 17, scope: !727)
!750 = !DILocation(line: 103, column: 10, scope: !727)
!751 = !DILocation(line: 103, column: 3, scope: !727)
!752 = distinct !DISubprogram(name: "DecodePixelGamma", scope: !3, file: !3, line: 187, type: !753, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !714)
!753 = !DISubroutineType(types: !754)
!754 = !{!458, !755}
!755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !458)
!756 = !DILocalVariable(name: "pixel", arg: 1, scope: !752, file: !3, line: 187, type: !755)
!757 = !DILocation(line: 187, column: 67, scope: !752)
!758 = !DILocation(line: 189, column: 7, scope: !759)
!759 = distinct !DILexicalBlock(scope: !752, file: !3, line: 189, column: 7)
!760 = !DILocation(line: 189, column: 13, scope: !759)
!761 = !DILocation(line: 189, column: 7, scope: !752)
!762 = !DILocation(line: 190, column: 12, scope: !759)
!763 = !DILocation(line: 190, column: 17, scope: !759)
!764 = !DILocation(line: 190, column: 5, scope: !759)
!765 = !DILocation(line: 192, column: 5, scope: !752)
!766 = !DILocation(line: 191, column: 75, scope: !752)
!767 = !DILocation(line: 192, column: 10, scope: !752)
!768 = !DILocation(line: 192, column: 17, scope: !752)
!769 = !DILocation(line: 191, column: 41, scope: !752)
!770 = !DILocation(line: 191, column: 40, scope: !752)
!771 = !DILocation(line: 191, column: 10, scope: !752)
!772 = !DILocation(line: 191, column: 3, scope: !752)
!773 = !DILocation(line: 193, column: 1, scope: !752)
!774 = !DILocalVariable(name: "x", arg: 1, scope: !2, file: !3, line: 129, type: !7)
!775 = !DILocation(line: 129, column: 47, scope: !2)
!776 = !DILocalVariable(name: "quotient", scope: !2, file: !3, line: 132, type: !777)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !778, line: 62, baseType: !779)
!778 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !778, line: 58, size: 64, elements: !780)
!780 = !{!781, !782}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !779, file: !778, line: 60, baseType: !465, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !779, file: !778, line: 61, baseType: !465, size: 32, offset: 32)
!783 = !DILocation(line: 132, column: 5, scope: !2)
!784 = !DILocalVariable(name: "p", scope: !2, file: !3, line: 135, type: !6)
!785 = !DILocation(line: 135, column: 5, scope: !2)
!786 = !DILocalVariable(name: "term", scope: !2, file: !3, line: 136, type: !787)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 576, elements: !716)
!788 = !DILocation(line: 136, column: 5, scope: !2)
!789 = !DILocalVariable(name: "exponent", scope: !2, file: !3, line: 139, type: !465)
!790 = !DILocation(line: 139, column: 5, scope: !2)
!791 = !DILocation(line: 166, column: 3, scope: !2)
!792 = !DILocation(line: 166, column: 10, scope: !2)
!793 = !DILocation(line: 167, column: 21, scope: !2)
!794 = !DILocation(line: 167, column: 15, scope: !2)
!795 = !DILocation(line: 167, column: 14, scope: !2)
!796 = !DILocation(line: 167, column: 33, scope: !2)
!797 = !DILocation(line: 167, column: 3, scope: !2)
!798 = !DILocation(line: 167, column: 10, scope: !2)
!799 = !DILocation(line: 168, column: 15, scope: !2)
!800 = !DILocation(line: 168, column: 14, scope: !2)
!801 = !DILocation(line: 168, column: 23, scope: !2)
!802 = !DILocation(line: 168, column: 22, scope: !2)
!803 = !DILocation(line: 168, column: 31, scope: !2)
!804 = !DILocation(line: 168, column: 30, scope: !2)
!805 = !DILocation(line: 168, column: 3, scope: !2)
!806 = !DILocation(line: 168, column: 10, scope: !2)
!807 = !DILocation(line: 169, column: 15, scope: !2)
!808 = !DILocation(line: 169, column: 14, scope: !2)
!809 = !DILocation(line: 169, column: 23, scope: !2)
!810 = !DILocation(line: 169, column: 22, scope: !2)
!811 = !DILocation(line: 169, column: 31, scope: !2)
!812 = !DILocation(line: 169, column: 30, scope: !2)
!813 = !DILocation(line: 169, column: 3, scope: !2)
!814 = !DILocation(line: 169, column: 10, scope: !2)
!815 = !DILocation(line: 170, column: 15, scope: !2)
!816 = !DILocation(line: 170, column: 14, scope: !2)
!817 = !DILocation(line: 170, column: 23, scope: !2)
!818 = !DILocation(line: 170, column: 22, scope: !2)
!819 = !DILocation(line: 170, column: 31, scope: !2)
!820 = !DILocation(line: 170, column: 30, scope: !2)
!821 = !DILocation(line: 170, column: 3, scope: !2)
!822 = !DILocation(line: 170, column: 10, scope: !2)
!823 = !DILocation(line: 171, column: 15, scope: !2)
!824 = !DILocation(line: 171, column: 14, scope: !2)
!825 = !DILocation(line: 171, column: 23, scope: !2)
!826 = !DILocation(line: 171, column: 22, scope: !2)
!827 = !DILocation(line: 171, column: 31, scope: !2)
!828 = !DILocation(line: 171, column: 30, scope: !2)
!829 = !DILocation(line: 171, column: 3, scope: !2)
!830 = !DILocation(line: 171, column: 10, scope: !2)
!831 = !DILocation(line: 172, column: 15, scope: !2)
!832 = !DILocation(line: 172, column: 14, scope: !2)
!833 = !DILocation(line: 172, column: 23, scope: !2)
!834 = !DILocation(line: 172, column: 22, scope: !2)
!835 = !DILocation(line: 172, column: 31, scope: !2)
!836 = !DILocation(line: 172, column: 30, scope: !2)
!837 = !DILocation(line: 172, column: 3, scope: !2)
!838 = !DILocation(line: 172, column: 10, scope: !2)
!839 = !DILocation(line: 173, column: 15, scope: !2)
!840 = !DILocation(line: 173, column: 14, scope: !2)
!841 = !DILocation(line: 173, column: 23, scope: !2)
!842 = !DILocation(line: 173, column: 22, scope: !2)
!843 = !DILocation(line: 173, column: 31, scope: !2)
!844 = !DILocation(line: 173, column: 30, scope: !2)
!845 = !DILocation(line: 173, column: 3, scope: !2)
!846 = !DILocation(line: 173, column: 10, scope: !2)
!847 = !DILocation(line: 174, column: 15, scope: !2)
!848 = !DILocation(line: 174, column: 14, scope: !2)
!849 = !DILocation(line: 174, column: 23, scope: !2)
!850 = !DILocation(line: 174, column: 22, scope: !2)
!851 = !DILocation(line: 174, column: 31, scope: !2)
!852 = !DILocation(line: 174, column: 30, scope: !2)
!853 = !DILocation(line: 174, column: 3, scope: !2)
!854 = !DILocation(line: 174, column: 10, scope: !2)
!855 = !DILocation(line: 175, column: 5, scope: !2)
!856 = !DILocation(line: 175, column: 20, scope: !2)
!857 = !DILocation(line: 175, column: 19, scope: !2)
!858 = !DILocation(line: 175, column: 28, scope: !2)
!859 = !DILocation(line: 175, column: 43, scope: !2)
!860 = !DILocation(line: 175, column: 42, scope: !2)
!861 = !DILocation(line: 175, column: 27, scope: !2)
!862 = !DILocation(line: 175, column: 51, scope: !2)
!863 = !DILocation(line: 175, column: 66, scope: !2)
!864 = !DILocation(line: 175, column: 65, scope: !2)
!865 = !DILocation(line: 175, column: 50, scope: !2)
!866 = !DILocation(line: 176, column: 5, scope: !2)
!867 = !DILocation(line: 176, column: 20, scope: !2)
!868 = !DILocation(line: 176, column: 19, scope: !2)
!869 = !DILocation(line: 175, column: 73, scope: !2)
!870 = !DILocation(line: 176, column: 28, scope: !2)
!871 = !DILocation(line: 176, column: 43, scope: !2)
!872 = !DILocation(line: 176, column: 42, scope: !2)
!873 = !DILocation(line: 176, column: 27, scope: !2)
!874 = !DILocation(line: 176, column: 51, scope: !2)
!875 = !DILocation(line: 176, column: 66, scope: !2)
!876 = !DILocation(line: 176, column: 65, scope: !2)
!877 = !DILocation(line: 176, column: 50, scope: !2)
!878 = !DILocation(line: 177, column: 5, scope: !2)
!879 = !DILocation(line: 177, column: 20, scope: !2)
!880 = !DILocation(line: 177, column: 19, scope: !2)
!881 = !DILocation(line: 176, column: 73, scope: !2)
!882 = !DILocation(line: 177, column: 28, scope: !2)
!883 = !DILocation(line: 177, column: 43, scope: !2)
!884 = !DILocation(line: 177, column: 42, scope: !2)
!885 = !DILocation(line: 177, column: 27, scope: !2)
!886 = !DILocation(line: 177, column: 51, scope: !2)
!887 = !DILocation(line: 177, column: 66, scope: !2)
!888 = !DILocation(line: 177, column: 65, scope: !2)
!889 = !DILocation(line: 177, column: 50, scope: !2)
!890 = !DILocation(line: 175, column: 4, scope: !2)
!891 = !DILocation(line: 178, column: 16, scope: !2)
!892 = !DILocation(line: 178, column: 24, scope: !2)
!893 = !DILocation(line: 178, column: 12, scope: !2)
!894 = !DILocation(line: 179, column: 16, scope: !895)
!895 = distinct !DILexicalBlock(scope: !2, file: !3, line: 179, column: 7)
!896 = !DILocation(line: 179, column: 20, scope: !895)
!897 = !DILocation(line: 179, column: 7, scope: !2)
!898 = !DILocation(line: 181, column: 16, scope: !899)
!899 = distinct !DILexicalBlock(scope: !895, file: !3, line: 180, column: 5)
!900 = !DILocation(line: 181, column: 20, scope: !899)
!901 = !DILocation(line: 182, column: 16, scope: !899)
!902 = !DILocation(line: 182, column: 19, scope: !899)
!903 = !DILocation(line: 183, column: 5, scope: !899)
!904 = !DILocation(line: 184, column: 10, scope: !2)
!905 = !DILocation(line: 184, column: 41, scope: !2)
!906 = !DILocation(line: 184, column: 18, scope: !2)
!907 = !DILocation(line: 184, column: 46, scope: !2)
!908 = !DILocation(line: 184, column: 45, scope: !2)
!909 = !DILocation(line: 184, column: 59, scope: !2)
!910 = !DILocation(line: 184, column: 49, scope: !2)
!911 = !DILocation(line: 184, column: 12, scope: !2)
!912 = !DILocation(line: 184, column: 11, scope: !2)
!913 = !DILocation(line: 184, column: 3, scope: !2)
!914 = distinct !DISubprogram(name: "EncodePixelGamma", scope: !3, file: !3, line: 283, type: !753, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !714)
!915 = !DILocalVariable(name: "pixel", arg: 1, scope: !914, file: !3, line: 283, type: !755)
!916 = !DILocation(line: 283, column: 67, scope: !914)
!917 = !DILocation(line: 285, column: 7, scope: !918)
!918 = distinct !DILexicalBlock(scope: !914, file: !3, line: 285, column: 7)
!919 = !DILocation(line: 285, column: 13, scope: !918)
!920 = !DILocation(line: 285, column: 7, scope: !914)
!921 = !DILocation(line: 286, column: 19, scope: !918)
!922 = !DILocation(line: 286, column: 18, scope: !918)
!923 = !DILocation(line: 286, column: 5, scope: !918)
!924 = !DILocation(line: 288, column: 5, scope: !914)
!925 = !DILocation(line: 287, column: 80, scope: !914)
!926 = !DILocation(line: 287, column: 47, scope: !914)
!927 = !DILocation(line: 287, column: 46, scope: !914)
!928 = !DILocation(line: 288, column: 11, scope: !914)
!929 = !DILocation(line: 287, column: 39, scope: !914)
!930 = !DILocation(line: 287, column: 9, scope: !914)
!931 = !DILocation(line: 287, column: 3, scope: !914)
!932 = !DILocation(line: 289, column: 1, scope: !914)
!933 = !DILocalVariable(name: "x", arg: 1, scope: !713, file: !3, line: 218, type: !7)
!934 = !DILocation(line: 218, column: 47, scope: !713)
!935 = !DILocalVariable(name: "quotient", scope: !713, file: !3, line: 221, type: !777)
!936 = !DILocation(line: 221, column: 5, scope: !713)
!937 = !DILocalVariable(name: "p", scope: !713, file: !3, line: 224, type: !6)
!938 = !DILocation(line: 224, column: 5, scope: !713)
!939 = !DILocalVariable(name: "term", scope: !713, file: !3, line: 225, type: !787)
!940 = !DILocation(line: 225, column: 5, scope: !713)
!941 = !DILocalVariable(name: "exponent", scope: !713, file: !3, line: 228, type: !465)
!942 = !DILocation(line: 228, column: 5, scope: !713)
!943 = !DILocation(line: 262, column: 3, scope: !713)
!944 = !DILocation(line: 262, column: 10, scope: !713)
!945 = !DILocation(line: 263, column: 21, scope: !713)
!946 = !DILocation(line: 263, column: 15, scope: !713)
!947 = !DILocation(line: 263, column: 14, scope: !713)
!948 = !DILocation(line: 263, column: 33, scope: !713)
!949 = !DILocation(line: 263, column: 3, scope: !713)
!950 = !DILocation(line: 263, column: 10, scope: !713)
!951 = !DILocation(line: 264, column: 15, scope: !713)
!952 = !DILocation(line: 264, column: 14, scope: !713)
!953 = !DILocation(line: 264, column: 23, scope: !713)
!954 = !DILocation(line: 264, column: 22, scope: !713)
!955 = !DILocation(line: 264, column: 31, scope: !713)
!956 = !DILocation(line: 264, column: 30, scope: !713)
!957 = !DILocation(line: 264, column: 3, scope: !713)
!958 = !DILocation(line: 264, column: 10, scope: !713)
!959 = !DILocation(line: 265, column: 15, scope: !713)
!960 = !DILocation(line: 265, column: 14, scope: !713)
!961 = !DILocation(line: 265, column: 23, scope: !713)
!962 = !DILocation(line: 265, column: 22, scope: !713)
!963 = !DILocation(line: 265, column: 31, scope: !713)
!964 = !DILocation(line: 265, column: 30, scope: !713)
!965 = !DILocation(line: 265, column: 3, scope: !713)
!966 = !DILocation(line: 265, column: 10, scope: !713)
!967 = !DILocation(line: 266, column: 15, scope: !713)
!968 = !DILocation(line: 266, column: 14, scope: !713)
!969 = !DILocation(line: 266, column: 23, scope: !713)
!970 = !DILocation(line: 266, column: 22, scope: !713)
!971 = !DILocation(line: 266, column: 31, scope: !713)
!972 = !DILocation(line: 266, column: 30, scope: !713)
!973 = !DILocation(line: 266, column: 3, scope: !713)
!974 = !DILocation(line: 266, column: 10, scope: !713)
!975 = !DILocation(line: 267, column: 15, scope: !713)
!976 = !DILocation(line: 267, column: 14, scope: !713)
!977 = !DILocation(line: 267, column: 23, scope: !713)
!978 = !DILocation(line: 267, column: 22, scope: !713)
!979 = !DILocation(line: 267, column: 31, scope: !713)
!980 = !DILocation(line: 267, column: 30, scope: !713)
!981 = !DILocation(line: 267, column: 3, scope: !713)
!982 = !DILocation(line: 267, column: 10, scope: !713)
!983 = !DILocation(line: 268, column: 15, scope: !713)
!984 = !DILocation(line: 268, column: 14, scope: !713)
!985 = !DILocation(line: 268, column: 23, scope: !713)
!986 = !DILocation(line: 268, column: 22, scope: !713)
!987 = !DILocation(line: 268, column: 31, scope: !713)
!988 = !DILocation(line: 268, column: 30, scope: !713)
!989 = !DILocation(line: 268, column: 3, scope: !713)
!990 = !DILocation(line: 268, column: 10, scope: !713)
!991 = !DILocation(line: 269, column: 15, scope: !713)
!992 = !DILocation(line: 269, column: 14, scope: !713)
!993 = !DILocation(line: 269, column: 23, scope: !713)
!994 = !DILocation(line: 269, column: 22, scope: !713)
!995 = !DILocation(line: 269, column: 31, scope: !713)
!996 = !DILocation(line: 269, column: 30, scope: !713)
!997 = !DILocation(line: 269, column: 3, scope: !713)
!998 = !DILocation(line: 269, column: 10, scope: !713)
!999 = !DILocation(line: 270, column: 15, scope: !713)
!1000 = !DILocation(line: 270, column: 14, scope: !713)
!1001 = !DILocation(line: 270, column: 23, scope: !713)
!1002 = !DILocation(line: 270, column: 22, scope: !713)
!1003 = !DILocation(line: 270, column: 31, scope: !713)
!1004 = !DILocation(line: 270, column: 30, scope: !713)
!1005 = !DILocation(line: 270, column: 3, scope: !713)
!1006 = !DILocation(line: 270, column: 10, scope: !713)
!1007 = !DILocation(line: 271, column: 5, scope: !713)
!1008 = !DILocation(line: 271, column: 20, scope: !713)
!1009 = !DILocation(line: 271, column: 19, scope: !713)
!1010 = !DILocation(line: 271, column: 28, scope: !713)
!1011 = !DILocation(line: 271, column: 43, scope: !713)
!1012 = !DILocation(line: 271, column: 42, scope: !713)
!1013 = !DILocation(line: 271, column: 27, scope: !713)
!1014 = !DILocation(line: 271, column: 51, scope: !713)
!1015 = !DILocation(line: 271, column: 66, scope: !713)
!1016 = !DILocation(line: 271, column: 65, scope: !713)
!1017 = !DILocation(line: 271, column: 50, scope: !713)
!1018 = !DILocation(line: 272, column: 5, scope: !713)
!1019 = !DILocation(line: 272, column: 20, scope: !713)
!1020 = !DILocation(line: 272, column: 19, scope: !713)
!1021 = !DILocation(line: 271, column: 73, scope: !713)
!1022 = !DILocation(line: 272, column: 28, scope: !713)
!1023 = !DILocation(line: 272, column: 43, scope: !713)
!1024 = !DILocation(line: 272, column: 42, scope: !713)
!1025 = !DILocation(line: 272, column: 27, scope: !713)
!1026 = !DILocation(line: 272, column: 51, scope: !713)
!1027 = !DILocation(line: 272, column: 66, scope: !713)
!1028 = !DILocation(line: 272, column: 65, scope: !713)
!1029 = !DILocation(line: 272, column: 50, scope: !713)
!1030 = !DILocation(line: 273, column: 5, scope: !713)
!1031 = !DILocation(line: 273, column: 20, scope: !713)
!1032 = !DILocation(line: 273, column: 19, scope: !713)
!1033 = !DILocation(line: 272, column: 73, scope: !713)
!1034 = !DILocation(line: 273, column: 28, scope: !713)
!1035 = !DILocation(line: 273, column: 43, scope: !713)
!1036 = !DILocation(line: 273, column: 42, scope: !713)
!1037 = !DILocation(line: 273, column: 27, scope: !713)
!1038 = !DILocation(line: 273, column: 51, scope: !713)
!1039 = !DILocation(line: 273, column: 66, scope: !713)
!1040 = !DILocation(line: 273, column: 65, scope: !713)
!1041 = !DILocation(line: 273, column: 50, scope: !713)
!1042 = !DILocation(line: 271, column: 4, scope: !713)
!1043 = !DILocation(line: 274, column: 16, scope: !713)
!1044 = !DILocation(line: 274, column: 24, scope: !713)
!1045 = !DILocation(line: 274, column: 12, scope: !713)
!1046 = !DILocation(line: 275, column: 16, scope: !1047)
!1047 = distinct !DILexicalBlock(scope: !713, file: !3, line: 275, column: 7)
!1048 = !DILocation(line: 275, column: 20, scope: !1047)
!1049 = !DILocation(line: 275, column: 7, scope: !713)
!1050 = !DILocation(line: 277, column: 16, scope: !1051)
!1051 = distinct !DILexicalBlock(scope: !1047, file: !3, line: 276, column: 5)
!1052 = !DILocation(line: 277, column: 20, scope: !1051)
!1053 = !DILocation(line: 278, column: 16, scope: !1051)
!1054 = !DILocation(line: 278, column: 19, scope: !1051)
!1055 = !DILocation(line: 279, column: 5, scope: !1051)
!1056 = !DILocation(line: 280, column: 39, scope: !713)
!1057 = !DILocation(line: 280, column: 16, scope: !713)
!1058 = !DILocation(line: 280, column: 44, scope: !713)
!1059 = !DILocation(line: 280, column: 43, scope: !713)
!1060 = !DILocation(line: 280, column: 57, scope: !713)
!1061 = !DILocation(line: 280, column: 47, scope: !713)
!1062 = !DILocation(line: 280, column: 10, scope: !713)
!1063 = !DILocation(line: 280, column: 3, scope: !713)
!1064 = distinct !DISubprogram(name: "ExportImagePixels", scope: !3, file: !3, line: 1826, type: !1065, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !714)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!451, !681, !1067, !1067, !1068, !1068, !594, !1069, !464, !1071}
!1067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !454)
!1069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "StorageType", file: !376, line: 35, baseType: !375)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!1072 = !DILocalVariable(name: "image", arg: 1, scope: !1064, file: !3, line: 1826, type: !681)
!1073 = !DILocation(line: 1826, column: 63, scope: !1064)
!1074 = !DILocalVariable(name: "x", arg: 2, scope: !1064, file: !3, line: 1827, type: !1067)
!1075 = !DILocation(line: 1827, column: 17, scope: !1064)
!1076 = !DILocalVariable(name: "y", arg: 3, scope: !1064, file: !3, line: 1827, type: !1067)
!1077 = !DILocation(line: 1827, column: 33, scope: !1064)
!1078 = !DILocalVariable(name: "width", arg: 4, scope: !1064, file: !3, line: 1827, type: !1068)
!1079 = !DILocation(line: 1827, column: 48, scope: !1064)
!1080 = !DILocalVariable(name: "height", arg: 5, scope: !1064, file: !3, line: 1827, type: !1068)
!1081 = !DILocation(line: 1827, column: 67, scope: !1064)
!1082 = !DILocalVariable(name: "map", arg: 6, scope: !1064, file: !3, line: 1828, type: !594)
!1083 = !DILocation(line: 1828, column: 15, scope: !1064)
!1084 = !DILocalVariable(name: "type", arg: 7, scope: !1064, file: !3, line: 1828, type: !1069)
!1085 = !DILocation(line: 1828, column: 37, scope: !1064)
!1086 = !DILocalVariable(name: "pixels", arg: 8, scope: !1064, file: !3, line: 1828, type: !464)
!1087 = !DILocation(line: 1828, column: 48, scope: !1064)
!1088 = !DILocalVariable(name: "exception", arg: 9, scope: !1064, file: !3, line: 1828, type: !1071)
!1089 = !DILocation(line: 1828, column: 70, scope: !1064)
!1090 = !DILocalVariable(name: "quantum_map", scope: !1064, file: !3, line: 1831, type: !468)
!1091 = !DILocation(line: 1831, column: 6, scope: !1064)
!1092 = !DILocalVariable(name: "roi", scope: !1064, file: !3, line: 1834, type: !533)
!1093 = !DILocation(line: 1834, column: 5, scope: !1064)
!1094 = !DILocalVariable(name: "i", scope: !1064, file: !3, line: 1837, type: !470)
!1095 = !DILocation(line: 1837, column: 5, scope: !1064)
!1096 = !DILocalVariable(name: "length", scope: !1064, file: !3, line: 1840, type: !454)
!1097 = !DILocation(line: 1840, column: 5, scope: !1064)
!1098 = !DILocation(line: 1844, column: 7, scope: !1099)
!1099 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 1844, column: 7)
!1100 = !DILocation(line: 1844, column: 14, scope: !1099)
!1101 = !DILocation(line: 1844, column: 20, scope: !1099)
!1102 = !DILocation(line: 1844, column: 7, scope: !1064)
!1103 = !DILocation(line: 1845, column: 61, scope: !1099)
!1104 = !DILocation(line: 1845, column: 68, scope: !1099)
!1105 = !DILocation(line: 1845, column: 12, scope: !1099)
!1106 = !DILocation(line: 1845, column: 5, scope: !1099)
!1107 = !DILocation(line: 1846, column: 17, scope: !1064)
!1108 = !DILocation(line: 1846, column: 10, scope: !1064)
!1109 = !DILocation(line: 1846, column: 9, scope: !1064)
!1110 = !DILocation(line: 1847, column: 52, scope: !1064)
!1111 = !DILocation(line: 1847, column: 31, scope: !1064)
!1112 = !DILocation(line: 1847, column: 15, scope: !1064)
!1113 = !DILocation(line: 1847, column: 14, scope: !1064)
!1114 = !DILocation(line: 1848, column: 7, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 1848, column: 7)
!1116 = !DILocation(line: 1848, column: 19, scope: !1115)
!1117 = !DILocation(line: 1848, column: 7, scope: !1064)
!1118 = !DILocation(line: 1850, column: 35, scope: !1119)
!1119 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 1849, column: 5)
!1120 = !DILocation(line: 1851, column: 60, scope: !1119)
!1121 = !DILocation(line: 1851, column: 67, scope: !1119)
!1122 = !DILocation(line: 1850, column: 14, scope: !1119)
!1123 = !DILocation(line: 1852, column: 7, scope: !1119)
!1124 = !DILocation(line: 1854, column: 9, scope: !1125)
!1125 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 1854, column: 3)
!1126 = !DILocation(line: 1854, column: 8, scope: !1125)
!1127 = !DILocation(line: 1854, column: 13, scope: !1128)
!1128 = distinct !DILexicalBlock(scope: !1125, file: !3, line: 1854, column: 3)
!1129 = !DILocation(line: 1854, column: 27, scope: !1128)
!1130 = !DILocation(line: 1854, column: 15, scope: !1128)
!1131 = !DILocation(line: 1854, column: 3, scope: !1125)
!1132 = !DILocation(line: 1856, column: 13, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1128, file: !3, line: 1855, column: 3)
!1134 = !DILocation(line: 1856, column: 17, scope: !1133)
!1135 = !DILocation(line: 1856, column: 5, scope: !1133)
!1136 = !DILocation(line: 1861, column: 9, scope: !1137)
!1137 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1860, column: 7)
!1138 = distinct !DILexicalBlock(scope: !1133, file: !3, line: 1857, column: 5)
!1139 = !DILocation(line: 1861, column: 21, scope: !1137)
!1140 = !DILocation(line: 1861, column: 23, scope: !1137)
!1141 = !DILocation(line: 1862, column: 9, scope: !1137)
!1142 = !DILocation(line: 1867, column: 9, scope: !1143)
!1143 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1866, column: 7)
!1144 = !DILocation(line: 1867, column: 21, scope: !1143)
!1145 = !DILocation(line: 1867, column: 23, scope: !1143)
!1146 = !DILocation(line: 1868, column: 9, scope: !1143)
!1147 = !DILocation(line: 1873, column: 9, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1872, column: 7)
!1149 = !DILocation(line: 1873, column: 21, scope: !1148)
!1150 = !DILocation(line: 1873, column: 23, scope: !1148)
!1151 = !DILocation(line: 1874, column: 13, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1148, file: !3, line: 1874, column: 13)
!1153 = !DILocation(line: 1874, column: 20, scope: !1152)
!1154 = !DILocation(line: 1874, column: 31, scope: !1152)
!1155 = !DILocation(line: 1874, column: 13, scope: !1148)
!1156 = !DILocation(line: 1875, column: 11, scope: !1152)
!1157 = !DILocation(line: 1876, column: 60, scope: !1148)
!1158 = !DILocation(line: 1876, column: 37, scope: !1148)
!1159 = !DILocation(line: 1876, column: 21, scope: !1148)
!1160 = !DILocation(line: 1876, column: 20, scope: !1148)
!1161 = !DILocation(line: 1877, column: 37, scope: !1148)
!1162 = !DILocation(line: 1878, column: 48, scope: !1148)
!1163 = !DILocation(line: 1877, column: 16, scope: !1148)
!1164 = !DILocation(line: 1879, column: 9, scope: !1148)
!1165 = !DILocation(line: 1884, column: 9, scope: !1166)
!1166 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1883, column: 7)
!1167 = !DILocation(line: 1884, column: 21, scope: !1166)
!1168 = !DILocation(line: 1884, column: 23, scope: !1166)
!1169 = !DILocation(line: 1885, column: 9, scope: !1166)
!1170 = !DILocation(line: 1890, column: 9, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1889, column: 7)
!1172 = !DILocation(line: 1890, column: 21, scope: !1171)
!1173 = !DILocation(line: 1890, column: 23, scope: !1171)
!1174 = !DILocation(line: 1891, column: 9, scope: !1171)
!1175 = !DILocation(line: 1896, column: 9, scope: !1176)
!1176 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1895, column: 7)
!1177 = !DILocation(line: 1896, column: 21, scope: !1176)
!1178 = !DILocation(line: 1896, column: 23, scope: !1176)
!1179 = !DILocation(line: 1897, column: 13, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1176, file: !3, line: 1897, column: 13)
!1181 = !DILocation(line: 1897, column: 20, scope: !1180)
!1182 = !DILocation(line: 1897, column: 31, scope: !1180)
!1183 = !DILocation(line: 1897, column: 13, scope: !1176)
!1184 = !DILocation(line: 1898, column: 11, scope: !1180)
!1185 = !DILocation(line: 1899, column: 60, scope: !1176)
!1186 = !DILocation(line: 1899, column: 37, scope: !1176)
!1187 = !DILocation(line: 1899, column: 21, scope: !1176)
!1188 = !DILocation(line: 1899, column: 20, scope: !1176)
!1189 = !DILocation(line: 1900, column: 37, scope: !1176)
!1190 = !DILocation(line: 1901, column: 48, scope: !1176)
!1191 = !DILocation(line: 1900, column: 16, scope: !1176)
!1192 = !DILocation(line: 1902, column: 9, scope: !1176)
!1193 = !DILocation(line: 1907, column: 9, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1906, column: 7)
!1195 = !DILocation(line: 1907, column: 21, scope: !1194)
!1196 = !DILocation(line: 1907, column: 23, scope: !1194)
!1197 = !DILocation(line: 1908, column: 13, scope: !1198)
!1198 = distinct !DILexicalBlock(scope: !1194, file: !3, line: 1908, column: 13)
!1199 = !DILocation(line: 1908, column: 20, scope: !1198)
!1200 = !DILocation(line: 1908, column: 31, scope: !1198)
!1201 = !DILocation(line: 1908, column: 13, scope: !1194)
!1202 = !DILocation(line: 1909, column: 11, scope: !1198)
!1203 = !DILocation(line: 1910, column: 60, scope: !1194)
!1204 = !DILocation(line: 1910, column: 37, scope: !1194)
!1205 = !DILocation(line: 1910, column: 21, scope: !1194)
!1206 = !DILocation(line: 1910, column: 20, scope: !1194)
!1207 = !DILocation(line: 1911, column: 37, scope: !1194)
!1208 = !DILocation(line: 1912, column: 48, scope: !1194)
!1209 = !DILocation(line: 1911, column: 16, scope: !1194)
!1210 = !DILocation(line: 1913, column: 9, scope: !1194)
!1211 = !DILocation(line: 1918, column: 9, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1917, column: 7)
!1213 = !DILocation(line: 1918, column: 21, scope: !1212)
!1214 = !DILocation(line: 1918, column: 23, scope: !1212)
!1215 = !DILocation(line: 1919, column: 9, scope: !1212)
!1216 = !DILocation(line: 1924, column: 9, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1923, column: 7)
!1218 = !DILocation(line: 1924, column: 21, scope: !1217)
!1219 = !DILocation(line: 1924, column: 23, scope: !1217)
!1220 = !DILocation(line: 1925, column: 9, scope: !1217)
!1221 = !DILocation(line: 1930, column: 9, scope: !1222)
!1222 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1929, column: 7)
!1223 = !DILocation(line: 1930, column: 21, scope: !1222)
!1224 = !DILocation(line: 1930, column: 23, scope: !1222)
!1225 = !DILocation(line: 1931, column: 9, scope: !1222)
!1226 = !DILocation(line: 1936, column: 9, scope: !1227)
!1227 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1935, column: 7)
!1228 = !DILocation(line: 1936, column: 21, scope: !1227)
!1229 = !DILocation(line: 1936, column: 23, scope: !1227)
!1230 = !DILocation(line: 1937, column: 13, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1227, file: !3, line: 1937, column: 13)
!1232 = !DILocation(line: 1937, column: 20, scope: !1231)
!1233 = !DILocation(line: 1937, column: 31, scope: !1231)
!1234 = !DILocation(line: 1937, column: 13, scope: !1227)
!1235 = !DILocation(line: 1938, column: 11, scope: !1231)
!1236 = !DILocation(line: 1939, column: 60, scope: !1227)
!1237 = !DILocation(line: 1939, column: 37, scope: !1227)
!1238 = !DILocation(line: 1939, column: 21, scope: !1227)
!1239 = !DILocation(line: 1939, column: 20, scope: !1227)
!1240 = !DILocation(line: 1940, column: 37, scope: !1227)
!1241 = !DILocation(line: 1941, column: 48, scope: !1227)
!1242 = !DILocation(line: 1940, column: 16, scope: !1227)
!1243 = !DILocation(line: 1942, column: 9, scope: !1227)
!1244 = !DILocation(line: 1946, column: 60, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1945, column: 7)
!1246 = !DILocation(line: 1946, column: 37, scope: !1245)
!1247 = !DILocation(line: 1946, column: 21, scope: !1245)
!1248 = !DILocation(line: 1946, column: 20, scope: !1245)
!1249 = !DILocation(line: 1947, column: 37, scope: !1245)
!1250 = !DILocation(line: 1948, column: 41, scope: !1245)
!1251 = !DILocation(line: 1947, column: 16, scope: !1245)
!1252 = !DILocation(line: 1949, column: 9, scope: !1245)
!1253 = !DILocation(line: 1952, column: 3, scope: !1133)
!1254 = !DILocation(line: 1854, column: 36, scope: !1128)
!1255 = !DILocation(line: 1854, column: 3, scope: !1128)
!1256 = distinct !{!1256, !1131, !1257}
!1257 = !DILocation(line: 1952, column: 3, scope: !1125)
!1258 = !DILocation(line: 1953, column: 13, scope: !1064)
!1259 = !DILocation(line: 1953, column: 7, scope: !1064)
!1260 = !DILocation(line: 1953, column: 12, scope: !1064)
!1261 = !DILocation(line: 1954, column: 14, scope: !1064)
!1262 = !DILocation(line: 1954, column: 7, scope: !1064)
!1263 = !DILocation(line: 1954, column: 13, scope: !1064)
!1264 = !DILocation(line: 1955, column: 9, scope: !1064)
!1265 = !DILocation(line: 1955, column: 7, scope: !1064)
!1266 = !DILocation(line: 1955, column: 8, scope: !1064)
!1267 = !DILocation(line: 1956, column: 9, scope: !1064)
!1268 = !DILocation(line: 1956, column: 7, scope: !1064)
!1269 = !DILocation(line: 1956, column: 8, scope: !1064)
!1270 = !DILocation(line: 1957, column: 11, scope: !1064)
!1271 = !DILocation(line: 1957, column: 3, scope: !1064)
!1272 = !DILocation(line: 1961, column: 33, scope: !1273)
!1273 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 1960, column: 5)
!1274 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 1958, column: 3)
!1275 = !DILocation(line: 1961, column: 44, scope: !1273)
!1276 = !DILocation(line: 1961, column: 48, scope: !1273)
!1277 = !DILocation(line: 1961, column: 60, scope: !1273)
!1278 = !DILocation(line: 1961, column: 67, scope: !1273)
!1279 = !DILocation(line: 1961, column: 7, scope: !1273)
!1280 = !DILocation(line: 1962, column: 7, scope: !1273)
!1281 = !DILocation(line: 1966, column: 35, scope: !1282)
!1282 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 1965, column: 5)
!1283 = !DILocation(line: 1966, column: 46, scope: !1282)
!1284 = !DILocation(line: 1966, column: 50, scope: !1282)
!1285 = !DILocation(line: 1966, column: 62, scope: !1282)
!1286 = !DILocation(line: 1966, column: 69, scope: !1282)
!1287 = !DILocation(line: 1966, column: 7, scope: !1282)
!1288 = !DILocation(line: 1967, column: 7, scope: !1282)
!1289 = !DILocation(line: 1971, column: 34, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 1970, column: 5)
!1291 = !DILocation(line: 1971, column: 45, scope: !1290)
!1292 = !DILocation(line: 1971, column: 49, scope: !1290)
!1293 = !DILocation(line: 1971, column: 61, scope: !1290)
!1294 = !DILocation(line: 1971, column: 68, scope: !1290)
!1295 = !DILocation(line: 1971, column: 7, scope: !1290)
!1296 = !DILocation(line: 1972, column: 7, scope: !1290)
!1297 = !DILocation(line: 1976, column: 36, scope: !1298)
!1298 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 1975, column: 5)
!1299 = !DILocation(line: 1976, column: 47, scope: !1298)
!1300 = !DILocation(line: 1976, column: 51, scope: !1298)
!1301 = !DILocation(line: 1976, column: 63, scope: !1298)
!1302 = !DILocation(line: 1976, column: 70, scope: !1298)
!1303 = !DILocation(line: 1976, column: 7, scope: !1298)
!1304 = !DILocation(line: 1977, column: 7, scope: !1298)
!1305 = !DILocation(line: 1981, column: 33, scope: !1306)
!1306 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 1980, column: 5)
!1307 = !DILocation(line: 1981, column: 44, scope: !1306)
!1308 = !DILocation(line: 1981, column: 48, scope: !1306)
!1309 = !DILocation(line: 1981, column: 60, scope: !1306)
!1310 = !DILocation(line: 1981, column: 67, scope: !1306)
!1311 = !DILocation(line: 1981, column: 7, scope: !1306)
!1312 = !DILocation(line: 1982, column: 7, scope: !1306)
!1313 = !DILocation(line: 1986, column: 36, scope: !1314)
!1314 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 1985, column: 5)
!1315 = !DILocation(line: 1986, column: 47, scope: !1314)
!1316 = !DILocation(line: 1986, column: 51, scope: !1314)
!1317 = !DILocation(line: 1986, column: 63, scope: !1314)
!1318 = !DILocation(line: 1986, column: 70, scope: !1314)
!1319 = !DILocation(line: 1986, column: 7, scope: !1314)
!1320 = !DILocation(line: 1987, column: 7, scope: !1314)
!1321 = !DILocation(line: 1991, column: 34, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 1990, column: 5)
!1323 = !DILocation(line: 1991, column: 45, scope: !1322)
!1324 = !DILocation(line: 1991, column: 49, scope: !1322)
!1325 = !DILocation(line: 1991, column: 61, scope: !1322)
!1326 = !DILocation(line: 1991, column: 68, scope: !1322)
!1327 = !DILocation(line: 1991, column: 7, scope: !1322)
!1328 = !DILocation(line: 1992, column: 7, scope: !1322)
!1329 = !DILocation(line: 1996, column: 58, scope: !1330)
!1330 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 1995, column: 5)
!1331 = !DILocation(line: 1996, column: 35, scope: !1330)
!1332 = !DILocation(line: 1996, column: 19, scope: !1330)
!1333 = !DILocation(line: 1996, column: 18, scope: !1330)
!1334 = !DILocation(line: 1997, column: 35, scope: !1330)
!1335 = !DILocation(line: 1998, column: 39, scope: !1330)
!1336 = !DILocation(line: 1997, column: 14, scope: !1330)
!1337 = !DILocation(line: 1999, column: 7, scope: !1330)
!1338 = !DILocation(line: 2002, column: 54, scope: !1064)
!1339 = !DILocation(line: 2002, column: 31, scope: !1064)
!1340 = !DILocation(line: 2002, column: 15, scope: !1064)
!1341 = !DILocation(line: 2002, column: 14, scope: !1064)
!1342 = !DILocation(line: 2003, column: 3, scope: !1064)
!1343 = !DILocation(line: 2004, column: 1, scope: !1064)
!1344 = distinct !DISubprogram(name: "ExportCharPixel", scope: !3, file: !3, line: 346, type: !1345, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{null, !475, !1347, !1349, !1350, !464, !1071}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !533)
!1349 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !594)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!1352 = !DILocalVariable(name: "image", arg: 1, scope: !1344, file: !3, line: 346, type: !475)
!1353 = !DILocation(line: 346, column: 36, scope: !1344)
!1354 = !DILocalVariable(name: "roi", arg: 2, scope: !1344, file: !3, line: 346, type: !1347)
!1355 = !DILocation(line: 346, column: 63, scope: !1344)
!1356 = !DILocalVariable(name: "map", arg: 3, scope: !1344, file: !3, line: 347, type: !1349)
!1357 = !DILocation(line: 347, column: 24, scope: !1344)
!1358 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !1344, file: !3, line: 347, type: !1350)
!1359 = !DILocation(line: 347, column: 47, scope: !1344)
!1360 = !DILocalVariable(name: "pixels", arg: 5, scope: !1344, file: !3, line: 347, type: !464)
!1361 = !DILocation(line: 347, column: 65, scope: !1344)
!1362 = !DILocalVariable(name: "exception", arg: 6, scope: !1344, file: !3, line: 348, type: !1071)
!1363 = !DILocation(line: 348, column: 18, scope: !1344)
!1364 = !DILocalVariable(name: "indexes", scope: !1344, file: !3, line: 351, type: !1365)
!1365 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !685)
!1366 = !DILocation(line: 351, column: 15, scope: !1344)
!1367 = !DILocalVariable(name: "p", scope: !1344, file: !3, line: 354, type: !1368)
!1368 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !683)
!1369 = !DILocation(line: 354, column: 15, scope: !1344)
!1370 = !DILocalVariable(name: "x", scope: !1344, file: !3, line: 357, type: !470)
!1371 = !DILocation(line: 357, column: 5, scope: !1344)
!1372 = !DILocalVariable(name: "q", scope: !1344, file: !3, line: 360, type: !649)
!1373 = !DILocation(line: 360, column: 6, scope: !1344)
!1374 = !DILocalVariable(name: "length", scope: !1344, file: !3, line: 363, type: !454)
!1375 = !DILocation(line: 363, column: 5, scope: !1344)
!1376 = !DILocalVariable(name: "y", scope: !1344, file: !3, line: 366, type: !470)
!1377 = !DILocation(line: 366, column: 5, scope: !1344)
!1378 = !DILocation(line: 368, column: 23, scope: !1344)
!1379 = !DILocation(line: 368, column: 4, scope: !1344)
!1380 = !DILocation(line: 369, column: 21, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 369, column: 7)
!1382 = !DILocation(line: 369, column: 7, scope: !1381)
!1383 = !DILocation(line: 369, column: 32, scope: !1381)
!1384 = !DILocation(line: 369, column: 7, scope: !1344)
!1385 = !DILocation(line: 371, column: 13, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1387, file: !3, line: 371, column: 7)
!1387 = distinct !DILexicalBlock(scope: !1381, file: !3, line: 370, column: 5)
!1388 = !DILocation(line: 371, column: 12, scope: !1386)
!1389 = !DILocation(line: 371, column: 17, scope: !1390)
!1390 = distinct !DILexicalBlock(scope: !1386, file: !3, line: 371, column: 7)
!1391 = !DILocation(line: 371, column: 31, scope: !1390)
!1392 = !DILocation(line: 371, column: 36, scope: !1390)
!1393 = !DILocation(line: 371, column: 19, scope: !1390)
!1394 = !DILocation(line: 371, column: 7, scope: !1386)
!1395 = !DILocation(line: 373, column: 28, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !1390, file: !3, line: 372, column: 7)
!1397 = !DILocation(line: 373, column: 34, scope: !1396)
!1398 = !DILocation(line: 373, column: 39, scope: !1396)
!1399 = !DILocation(line: 373, column: 41, scope: !1396)
!1400 = !DILocation(line: 373, column: 46, scope: !1396)
!1401 = !DILocation(line: 373, column: 48, scope: !1396)
!1402 = !DILocation(line: 373, column: 47, scope: !1396)
!1403 = !DILocation(line: 373, column: 50, scope: !1396)
!1404 = !DILocation(line: 373, column: 55, scope: !1396)
!1405 = !DILocation(line: 373, column: 63, scope: !1396)
!1406 = !DILocation(line: 373, column: 11, scope: !1396)
!1407 = !DILocation(line: 373, column: 10, scope: !1396)
!1408 = !DILocation(line: 374, column: 13, scope: !1409)
!1409 = distinct !DILexicalBlock(scope: !1396, file: !3, line: 374, column: 13)
!1410 = !DILocation(line: 374, column: 15, scope: !1409)
!1411 = !DILocation(line: 374, column: 13, scope: !1396)
!1412 = !DILocation(line: 375, column: 11, scope: !1409)
!1413 = !DILocation(line: 376, column: 15, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1396, file: !3, line: 376, column: 9)
!1415 = !DILocation(line: 376, column: 14, scope: !1414)
!1416 = !DILocation(line: 376, column: 19, scope: !1417)
!1417 = distinct !DILexicalBlock(scope: !1414, file: !3, line: 376, column: 9)
!1418 = !DILocation(line: 376, column: 33, scope: !1417)
!1419 = !DILocation(line: 376, column: 38, scope: !1417)
!1420 = !DILocation(line: 376, column: 21, scope: !1417)
!1421 = !DILocation(line: 376, column: 9, scope: !1414)
!1422 = !DILocation(line: 378, column: 35, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1417, file: !3, line: 377, column: 9)
!1424 = !DILocation(line: 378, column: 16, scope: !1423)
!1425 = !DILocation(line: 378, column: 13, scope: !1423)
!1426 = !DILocation(line: 378, column: 15, scope: !1423)
!1427 = !DILocation(line: 379, column: 35, scope: !1423)
!1428 = !DILocation(line: 379, column: 16, scope: !1423)
!1429 = !DILocation(line: 379, column: 13, scope: !1423)
!1430 = !DILocation(line: 379, column: 15, scope: !1423)
!1431 = !DILocation(line: 380, column: 35, scope: !1423)
!1432 = !DILocation(line: 380, column: 16, scope: !1423)
!1433 = !DILocation(line: 380, column: 13, scope: !1423)
!1434 = !DILocation(line: 380, column: 15, scope: !1423)
!1435 = !DILocation(line: 381, column: 12, scope: !1423)
!1436 = !DILocation(line: 382, column: 9, scope: !1423)
!1437 = !DILocation(line: 376, column: 46, scope: !1417)
!1438 = !DILocation(line: 376, column: 9, scope: !1417)
!1439 = distinct !{!1439, !1421, !1440}
!1440 = !DILocation(line: 382, column: 9, scope: !1414)
!1441 = !DILocation(line: 383, column: 7, scope: !1396)
!1442 = !DILocation(line: 371, column: 45, scope: !1390)
!1443 = !DILocation(line: 371, column: 7, scope: !1390)
!1444 = distinct !{!1444, !1394, !1445}
!1445 = !DILocation(line: 383, column: 7, scope: !1386)
!1446 = !DILocation(line: 384, column: 7, scope: !1387)
!1447 = !DILocation(line: 386, column: 21, scope: !1448)
!1448 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 386, column: 7)
!1449 = !DILocation(line: 386, column: 7, scope: !1448)
!1450 = !DILocation(line: 386, column: 33, scope: !1448)
!1451 = !DILocation(line: 386, column: 7, scope: !1344)
!1452 = !DILocation(line: 388, column: 13, scope: !1453)
!1453 = distinct !DILexicalBlock(scope: !1454, file: !3, line: 388, column: 7)
!1454 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 387, column: 5)
!1455 = !DILocation(line: 388, column: 12, scope: !1453)
!1456 = !DILocation(line: 388, column: 17, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !1453, file: !3, line: 388, column: 7)
!1458 = !DILocation(line: 388, column: 31, scope: !1457)
!1459 = !DILocation(line: 388, column: 36, scope: !1457)
!1460 = !DILocation(line: 388, column: 19, scope: !1457)
!1461 = !DILocation(line: 388, column: 7, scope: !1453)
!1462 = !DILocation(line: 390, column: 28, scope: !1463)
!1463 = distinct !DILexicalBlock(scope: !1457, file: !3, line: 389, column: 7)
!1464 = !DILocation(line: 390, column: 34, scope: !1463)
!1465 = !DILocation(line: 390, column: 39, scope: !1463)
!1466 = !DILocation(line: 390, column: 41, scope: !1463)
!1467 = !DILocation(line: 390, column: 46, scope: !1463)
!1468 = !DILocation(line: 390, column: 48, scope: !1463)
!1469 = !DILocation(line: 390, column: 47, scope: !1463)
!1470 = !DILocation(line: 390, column: 50, scope: !1463)
!1471 = !DILocation(line: 390, column: 55, scope: !1463)
!1472 = !DILocation(line: 390, column: 63, scope: !1463)
!1473 = !DILocation(line: 390, column: 11, scope: !1463)
!1474 = !DILocation(line: 390, column: 10, scope: !1463)
!1475 = !DILocation(line: 391, column: 13, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1463, file: !3, line: 391, column: 13)
!1477 = !DILocation(line: 391, column: 15, scope: !1476)
!1478 = !DILocation(line: 391, column: 13, scope: !1463)
!1479 = !DILocation(line: 392, column: 11, scope: !1476)
!1480 = !DILocation(line: 393, column: 15, scope: !1481)
!1481 = distinct !DILexicalBlock(scope: !1463, file: !3, line: 393, column: 9)
!1482 = !DILocation(line: 393, column: 14, scope: !1481)
!1483 = !DILocation(line: 393, column: 19, scope: !1484)
!1484 = distinct !DILexicalBlock(scope: !1481, file: !3, line: 393, column: 9)
!1485 = !DILocation(line: 393, column: 33, scope: !1484)
!1486 = !DILocation(line: 393, column: 38, scope: !1484)
!1487 = !DILocation(line: 393, column: 21, scope: !1484)
!1488 = !DILocation(line: 393, column: 9, scope: !1481)
!1489 = !DILocation(line: 395, column: 35, scope: !1490)
!1490 = distinct !DILexicalBlock(scope: !1484, file: !3, line: 394, column: 9)
!1491 = !DILocation(line: 395, column: 16, scope: !1490)
!1492 = !DILocation(line: 395, column: 13, scope: !1490)
!1493 = !DILocation(line: 395, column: 15, scope: !1490)
!1494 = !DILocation(line: 396, column: 35, scope: !1490)
!1495 = !DILocation(line: 396, column: 16, scope: !1490)
!1496 = !DILocation(line: 396, column: 13, scope: !1490)
!1497 = !DILocation(line: 396, column: 15, scope: !1490)
!1498 = !DILocation(line: 397, column: 35, scope: !1490)
!1499 = !DILocation(line: 397, column: 16, scope: !1490)
!1500 = !DILocation(line: 397, column: 13, scope: !1490)
!1501 = !DILocation(line: 397, column: 15, scope: !1490)
!1502 = !DILocation(line: 398, column: 45, scope: !1490)
!1503 = !DILocation(line: 398, column: 35, scope: !1490)
!1504 = !DILocation(line: 398, column: 16, scope: !1490)
!1505 = !DILocation(line: 398, column: 13, scope: !1490)
!1506 = !DILocation(line: 398, column: 15, scope: !1490)
!1507 = !DILocation(line: 399, column: 12, scope: !1490)
!1508 = !DILocation(line: 400, column: 9, scope: !1490)
!1509 = !DILocation(line: 393, column: 46, scope: !1484)
!1510 = !DILocation(line: 393, column: 9, scope: !1484)
!1511 = distinct !{!1511, !1488, !1512}
!1512 = !DILocation(line: 400, column: 9, scope: !1481)
!1513 = !DILocation(line: 401, column: 7, scope: !1463)
!1514 = !DILocation(line: 388, column: 45, scope: !1457)
!1515 = !DILocation(line: 388, column: 7, scope: !1457)
!1516 = distinct !{!1516, !1461, !1517}
!1517 = !DILocation(line: 401, column: 7, scope: !1453)
!1518 = !DILocation(line: 402, column: 7, scope: !1454)
!1519 = !DILocation(line: 404, column: 21, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 404, column: 7)
!1521 = !DILocation(line: 404, column: 7, scope: !1520)
!1522 = !DILocation(line: 404, column: 33, scope: !1520)
!1523 = !DILocation(line: 404, column: 7, scope: !1344)
!1524 = !DILocation(line: 406, column: 13, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1526, file: !3, line: 406, column: 7)
!1526 = distinct !DILexicalBlock(scope: !1520, file: !3, line: 405, column: 5)
!1527 = !DILocation(line: 406, column: 12, scope: !1525)
!1528 = !DILocation(line: 406, column: 17, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1525, file: !3, line: 406, column: 7)
!1530 = !DILocation(line: 406, column: 31, scope: !1529)
!1531 = !DILocation(line: 406, column: 36, scope: !1529)
!1532 = !DILocation(line: 406, column: 19, scope: !1529)
!1533 = !DILocation(line: 406, column: 7, scope: !1525)
!1534 = !DILocation(line: 408, column: 28, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1529, file: !3, line: 407, column: 7)
!1536 = !DILocation(line: 408, column: 34, scope: !1535)
!1537 = !DILocation(line: 408, column: 39, scope: !1535)
!1538 = !DILocation(line: 408, column: 41, scope: !1535)
!1539 = !DILocation(line: 408, column: 46, scope: !1535)
!1540 = !DILocation(line: 408, column: 48, scope: !1535)
!1541 = !DILocation(line: 408, column: 47, scope: !1535)
!1542 = !DILocation(line: 408, column: 50, scope: !1535)
!1543 = !DILocation(line: 408, column: 55, scope: !1535)
!1544 = !DILocation(line: 408, column: 63, scope: !1535)
!1545 = !DILocation(line: 408, column: 11, scope: !1535)
!1546 = !DILocation(line: 408, column: 10, scope: !1535)
!1547 = !DILocation(line: 409, column: 13, scope: !1548)
!1548 = distinct !DILexicalBlock(scope: !1535, file: !3, line: 409, column: 13)
!1549 = !DILocation(line: 409, column: 15, scope: !1548)
!1550 = !DILocation(line: 409, column: 13, scope: !1535)
!1551 = !DILocation(line: 410, column: 11, scope: !1548)
!1552 = !DILocation(line: 411, column: 15, scope: !1553)
!1553 = distinct !DILexicalBlock(scope: !1535, file: !3, line: 411, column: 9)
!1554 = !DILocation(line: 411, column: 14, scope: !1553)
!1555 = !DILocation(line: 411, column: 19, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1553, file: !3, line: 411, column: 9)
!1557 = !DILocation(line: 411, column: 33, scope: !1556)
!1558 = !DILocation(line: 411, column: 38, scope: !1556)
!1559 = !DILocation(line: 411, column: 21, scope: !1556)
!1560 = !DILocation(line: 411, column: 9, scope: !1553)
!1561 = !DILocation(line: 413, column: 35, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1556, file: !3, line: 412, column: 9)
!1563 = !DILocation(line: 413, column: 16, scope: !1562)
!1564 = !DILocation(line: 413, column: 13, scope: !1562)
!1565 = !DILocation(line: 413, column: 15, scope: !1562)
!1566 = !DILocation(line: 414, column: 35, scope: !1562)
!1567 = !DILocation(line: 414, column: 16, scope: !1562)
!1568 = !DILocation(line: 414, column: 13, scope: !1562)
!1569 = !DILocation(line: 414, column: 15, scope: !1562)
!1570 = !DILocation(line: 415, column: 35, scope: !1562)
!1571 = !DILocation(line: 415, column: 16, scope: !1562)
!1572 = !DILocation(line: 415, column: 13, scope: !1562)
!1573 = !DILocation(line: 415, column: 15, scope: !1562)
!1574 = !DILocation(line: 416, column: 16, scope: !1562)
!1575 = !DILocation(line: 416, column: 13, scope: !1562)
!1576 = !DILocation(line: 416, column: 15, scope: !1562)
!1577 = !DILocation(line: 417, column: 12, scope: !1562)
!1578 = !DILocation(line: 418, column: 9, scope: !1562)
!1579 = !DILocation(line: 411, column: 46, scope: !1556)
!1580 = !DILocation(line: 411, column: 9, scope: !1556)
!1581 = distinct !{!1581, !1560, !1582}
!1582 = !DILocation(line: 418, column: 9, scope: !1553)
!1583 = !DILocation(line: 419, column: 7, scope: !1535)
!1584 = !DILocation(line: 406, column: 45, scope: !1529)
!1585 = !DILocation(line: 406, column: 7, scope: !1529)
!1586 = distinct !{!1586, !1533, !1587}
!1587 = !DILocation(line: 419, column: 7, scope: !1525)
!1588 = !DILocation(line: 420, column: 7, scope: !1526)
!1589 = !DILocation(line: 422, column: 21, scope: !1590)
!1590 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 422, column: 7)
!1591 = !DILocation(line: 422, column: 7, scope: !1590)
!1592 = !DILocation(line: 422, column: 30, scope: !1590)
!1593 = !DILocation(line: 422, column: 7, scope: !1344)
!1594 = !DILocation(line: 424, column: 13, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1596, file: !3, line: 424, column: 7)
!1596 = distinct !DILexicalBlock(scope: !1590, file: !3, line: 423, column: 5)
!1597 = !DILocation(line: 424, column: 12, scope: !1595)
!1598 = !DILocation(line: 424, column: 17, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1595, file: !3, line: 424, column: 7)
!1600 = !DILocation(line: 424, column: 31, scope: !1599)
!1601 = !DILocation(line: 424, column: 36, scope: !1599)
!1602 = !DILocation(line: 424, column: 19, scope: !1599)
!1603 = !DILocation(line: 424, column: 7, scope: !1595)
!1604 = !DILocation(line: 426, column: 28, scope: !1605)
!1605 = distinct !DILexicalBlock(scope: !1599, file: !3, line: 425, column: 7)
!1606 = !DILocation(line: 426, column: 34, scope: !1605)
!1607 = !DILocation(line: 426, column: 39, scope: !1605)
!1608 = !DILocation(line: 426, column: 41, scope: !1605)
!1609 = !DILocation(line: 426, column: 46, scope: !1605)
!1610 = !DILocation(line: 426, column: 48, scope: !1605)
!1611 = !DILocation(line: 426, column: 47, scope: !1605)
!1612 = !DILocation(line: 426, column: 50, scope: !1605)
!1613 = !DILocation(line: 426, column: 55, scope: !1605)
!1614 = !DILocation(line: 426, column: 63, scope: !1605)
!1615 = !DILocation(line: 426, column: 11, scope: !1605)
!1616 = !DILocation(line: 426, column: 10, scope: !1605)
!1617 = !DILocation(line: 427, column: 13, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1605, file: !3, line: 427, column: 13)
!1619 = !DILocation(line: 427, column: 15, scope: !1618)
!1620 = !DILocation(line: 427, column: 13, scope: !1605)
!1621 = !DILocation(line: 428, column: 11, scope: !1618)
!1622 = !DILocation(line: 429, column: 15, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1605, file: !3, line: 429, column: 9)
!1624 = !DILocation(line: 429, column: 14, scope: !1623)
!1625 = !DILocation(line: 429, column: 19, scope: !1626)
!1626 = distinct !DILexicalBlock(scope: !1623, file: !3, line: 429, column: 9)
!1627 = !DILocation(line: 429, column: 33, scope: !1626)
!1628 = !DILocation(line: 429, column: 38, scope: !1626)
!1629 = !DILocation(line: 429, column: 21, scope: !1626)
!1630 = !DILocation(line: 429, column: 9, scope: !1623)
!1631 = !DILocation(line: 431, column: 68, scope: !1632)
!1632 = distinct !DILexicalBlock(scope: !1626, file: !3, line: 430, column: 9)
!1633 = !DILocation(line: 431, column: 74, scope: !1632)
!1634 = !DILocation(line: 431, column: 50, scope: !1632)
!1635 = !DILocation(line: 431, column: 35, scope: !1632)
!1636 = !DILocation(line: 431, column: 16, scope: !1632)
!1637 = !DILocation(line: 431, column: 13, scope: !1632)
!1638 = !DILocation(line: 431, column: 15, scope: !1632)
!1639 = !DILocation(line: 432, column: 12, scope: !1632)
!1640 = !DILocation(line: 433, column: 9, scope: !1632)
!1641 = !DILocation(line: 429, column: 46, scope: !1626)
!1642 = !DILocation(line: 429, column: 9, scope: !1626)
!1643 = distinct !{!1643, !1630, !1644}
!1644 = !DILocation(line: 433, column: 9, scope: !1623)
!1645 = !DILocation(line: 434, column: 7, scope: !1605)
!1646 = !DILocation(line: 424, column: 45, scope: !1599)
!1647 = !DILocation(line: 424, column: 7, scope: !1599)
!1648 = distinct !{!1648, !1603, !1649}
!1649 = !DILocation(line: 434, column: 7, scope: !1595)
!1650 = !DILocation(line: 435, column: 7, scope: !1596)
!1651 = !DILocation(line: 437, column: 21, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 437, column: 7)
!1653 = !DILocation(line: 437, column: 7, scope: !1652)
!1654 = !DILocation(line: 437, column: 32, scope: !1652)
!1655 = !DILocation(line: 437, column: 7, scope: !1344)
!1656 = !DILocation(line: 439, column: 13, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !1658, file: !3, line: 439, column: 7)
!1658 = distinct !DILexicalBlock(scope: !1652, file: !3, line: 438, column: 5)
!1659 = !DILocation(line: 439, column: 12, scope: !1657)
!1660 = !DILocation(line: 439, column: 17, scope: !1661)
!1661 = distinct !DILexicalBlock(scope: !1657, file: !3, line: 439, column: 7)
!1662 = !DILocation(line: 439, column: 31, scope: !1661)
!1663 = !DILocation(line: 439, column: 36, scope: !1661)
!1664 = !DILocation(line: 439, column: 19, scope: !1661)
!1665 = !DILocation(line: 439, column: 7, scope: !1657)
!1666 = !DILocation(line: 441, column: 28, scope: !1667)
!1667 = distinct !DILexicalBlock(scope: !1661, file: !3, line: 440, column: 7)
!1668 = !DILocation(line: 441, column: 34, scope: !1667)
!1669 = !DILocation(line: 441, column: 39, scope: !1667)
!1670 = !DILocation(line: 441, column: 41, scope: !1667)
!1671 = !DILocation(line: 441, column: 46, scope: !1667)
!1672 = !DILocation(line: 441, column: 48, scope: !1667)
!1673 = !DILocation(line: 441, column: 47, scope: !1667)
!1674 = !DILocation(line: 441, column: 50, scope: !1667)
!1675 = !DILocation(line: 441, column: 55, scope: !1667)
!1676 = !DILocation(line: 441, column: 63, scope: !1667)
!1677 = !DILocation(line: 441, column: 11, scope: !1667)
!1678 = !DILocation(line: 441, column: 10, scope: !1667)
!1679 = !DILocation(line: 442, column: 13, scope: !1680)
!1680 = distinct !DILexicalBlock(scope: !1667, file: !3, line: 442, column: 13)
!1681 = !DILocation(line: 442, column: 15, scope: !1680)
!1682 = !DILocation(line: 442, column: 13, scope: !1667)
!1683 = !DILocation(line: 443, column: 11, scope: !1680)
!1684 = !DILocation(line: 444, column: 15, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1667, file: !3, line: 444, column: 9)
!1686 = !DILocation(line: 444, column: 14, scope: !1685)
!1687 = !DILocation(line: 444, column: 19, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1685, file: !3, line: 444, column: 9)
!1689 = !DILocation(line: 444, column: 33, scope: !1688)
!1690 = !DILocation(line: 444, column: 38, scope: !1688)
!1691 = !DILocation(line: 444, column: 21, scope: !1688)
!1692 = !DILocation(line: 444, column: 9, scope: !1685)
!1693 = !DILocation(line: 446, column: 35, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 445, column: 9)
!1695 = !DILocation(line: 446, column: 16, scope: !1694)
!1696 = !DILocation(line: 446, column: 13, scope: !1694)
!1697 = !DILocation(line: 446, column: 15, scope: !1694)
!1698 = !DILocation(line: 447, column: 35, scope: !1694)
!1699 = !DILocation(line: 447, column: 16, scope: !1694)
!1700 = !DILocation(line: 447, column: 13, scope: !1694)
!1701 = !DILocation(line: 447, column: 15, scope: !1694)
!1702 = !DILocation(line: 448, column: 35, scope: !1694)
!1703 = !DILocation(line: 448, column: 16, scope: !1694)
!1704 = !DILocation(line: 448, column: 13, scope: !1694)
!1705 = !DILocation(line: 448, column: 15, scope: !1694)
!1706 = !DILocation(line: 449, column: 12, scope: !1694)
!1707 = !DILocation(line: 450, column: 9, scope: !1694)
!1708 = !DILocation(line: 444, column: 46, scope: !1688)
!1709 = !DILocation(line: 444, column: 9, scope: !1688)
!1710 = distinct !{!1710, !1692, !1711}
!1711 = !DILocation(line: 450, column: 9, scope: !1685)
!1712 = !DILocation(line: 451, column: 7, scope: !1667)
!1713 = !DILocation(line: 439, column: 45, scope: !1661)
!1714 = !DILocation(line: 439, column: 7, scope: !1661)
!1715 = distinct !{!1715, !1665, !1716}
!1716 = !DILocation(line: 451, column: 7, scope: !1657)
!1717 = !DILocation(line: 452, column: 7, scope: !1658)
!1718 = !DILocation(line: 454, column: 21, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 454, column: 7)
!1720 = !DILocation(line: 454, column: 7, scope: !1719)
!1721 = !DILocation(line: 454, column: 33, scope: !1719)
!1722 = !DILocation(line: 454, column: 7, scope: !1344)
!1723 = !DILocation(line: 456, column: 13, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1725, file: !3, line: 456, column: 7)
!1725 = distinct !DILexicalBlock(scope: !1719, file: !3, line: 455, column: 5)
!1726 = !DILocation(line: 456, column: 12, scope: !1724)
!1727 = !DILocation(line: 456, column: 17, scope: !1728)
!1728 = distinct !DILexicalBlock(scope: !1724, file: !3, line: 456, column: 7)
!1729 = !DILocation(line: 456, column: 31, scope: !1728)
!1730 = !DILocation(line: 456, column: 36, scope: !1728)
!1731 = !DILocation(line: 456, column: 19, scope: !1728)
!1732 = !DILocation(line: 456, column: 7, scope: !1724)
!1733 = !DILocation(line: 458, column: 28, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1728, file: !3, line: 457, column: 7)
!1735 = !DILocation(line: 458, column: 34, scope: !1734)
!1736 = !DILocation(line: 458, column: 39, scope: !1734)
!1737 = !DILocation(line: 458, column: 41, scope: !1734)
!1738 = !DILocation(line: 458, column: 46, scope: !1734)
!1739 = !DILocation(line: 458, column: 48, scope: !1734)
!1740 = !DILocation(line: 458, column: 47, scope: !1734)
!1741 = !DILocation(line: 458, column: 50, scope: !1734)
!1742 = !DILocation(line: 458, column: 55, scope: !1734)
!1743 = !DILocation(line: 458, column: 63, scope: !1734)
!1744 = !DILocation(line: 458, column: 11, scope: !1734)
!1745 = !DILocation(line: 458, column: 10, scope: !1734)
!1746 = !DILocation(line: 459, column: 13, scope: !1747)
!1747 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 459, column: 13)
!1748 = !DILocation(line: 459, column: 15, scope: !1747)
!1749 = !DILocation(line: 459, column: 13, scope: !1734)
!1750 = !DILocation(line: 460, column: 11, scope: !1747)
!1751 = !DILocation(line: 461, column: 15, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 461, column: 9)
!1753 = !DILocation(line: 461, column: 14, scope: !1752)
!1754 = !DILocation(line: 461, column: 19, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1752, file: !3, line: 461, column: 9)
!1756 = !DILocation(line: 461, column: 33, scope: !1755)
!1757 = !DILocation(line: 461, column: 38, scope: !1755)
!1758 = !DILocation(line: 461, column: 21, scope: !1755)
!1759 = !DILocation(line: 461, column: 9, scope: !1752)
!1760 = !DILocation(line: 463, column: 35, scope: !1761)
!1761 = distinct !DILexicalBlock(scope: !1755, file: !3, line: 462, column: 9)
!1762 = !DILocation(line: 463, column: 16, scope: !1761)
!1763 = !DILocation(line: 463, column: 13, scope: !1761)
!1764 = !DILocation(line: 463, column: 15, scope: !1761)
!1765 = !DILocation(line: 464, column: 35, scope: !1761)
!1766 = !DILocation(line: 464, column: 16, scope: !1761)
!1767 = !DILocation(line: 464, column: 13, scope: !1761)
!1768 = !DILocation(line: 464, column: 15, scope: !1761)
!1769 = !DILocation(line: 465, column: 35, scope: !1761)
!1770 = !DILocation(line: 465, column: 16, scope: !1761)
!1771 = !DILocation(line: 465, column: 13, scope: !1761)
!1772 = !DILocation(line: 465, column: 15, scope: !1761)
!1773 = !DILocation(line: 466, column: 45, scope: !1761)
!1774 = !DILocation(line: 466, column: 35, scope: !1761)
!1775 = !DILocation(line: 466, column: 16, scope: !1761)
!1776 = !DILocation(line: 466, column: 13, scope: !1761)
!1777 = !DILocation(line: 466, column: 15, scope: !1761)
!1778 = !DILocation(line: 467, column: 12, scope: !1761)
!1779 = !DILocation(line: 468, column: 9, scope: !1761)
!1780 = !DILocation(line: 461, column: 46, scope: !1755)
!1781 = !DILocation(line: 461, column: 9, scope: !1755)
!1782 = distinct !{!1782, !1759, !1783}
!1783 = !DILocation(line: 468, column: 9, scope: !1752)
!1784 = !DILocation(line: 469, column: 7, scope: !1734)
!1785 = !DILocation(line: 456, column: 45, scope: !1728)
!1786 = !DILocation(line: 456, column: 7, scope: !1728)
!1787 = distinct !{!1787, !1732, !1788}
!1788 = !DILocation(line: 469, column: 7, scope: !1724)
!1789 = !DILocation(line: 470, column: 7, scope: !1725)
!1790 = !DILocation(line: 472, column: 21, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 472, column: 7)
!1792 = !DILocation(line: 472, column: 7, scope: !1791)
!1793 = !DILocation(line: 472, column: 33, scope: !1791)
!1794 = !DILocation(line: 472, column: 7, scope: !1344)
!1795 = !DILocation(line: 474, column: 13, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1797, file: !3, line: 474, column: 7)
!1797 = distinct !DILexicalBlock(scope: !1791, file: !3, line: 473, column: 5)
!1798 = !DILocation(line: 474, column: 12, scope: !1796)
!1799 = !DILocation(line: 474, column: 17, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1796, file: !3, line: 474, column: 7)
!1801 = !DILocation(line: 474, column: 31, scope: !1800)
!1802 = !DILocation(line: 474, column: 36, scope: !1800)
!1803 = !DILocation(line: 474, column: 19, scope: !1800)
!1804 = !DILocation(line: 474, column: 7, scope: !1796)
!1805 = !DILocation(line: 476, column: 28, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1800, file: !3, line: 475, column: 7)
!1807 = !DILocation(line: 476, column: 34, scope: !1806)
!1808 = !DILocation(line: 476, column: 39, scope: !1806)
!1809 = !DILocation(line: 476, column: 41, scope: !1806)
!1810 = !DILocation(line: 476, column: 46, scope: !1806)
!1811 = !DILocation(line: 476, column: 48, scope: !1806)
!1812 = !DILocation(line: 476, column: 47, scope: !1806)
!1813 = !DILocation(line: 476, column: 50, scope: !1806)
!1814 = !DILocation(line: 476, column: 55, scope: !1806)
!1815 = !DILocation(line: 476, column: 63, scope: !1806)
!1816 = !DILocation(line: 476, column: 11, scope: !1806)
!1817 = !DILocation(line: 476, column: 10, scope: !1806)
!1818 = !DILocation(line: 477, column: 13, scope: !1819)
!1819 = distinct !DILexicalBlock(scope: !1806, file: !3, line: 477, column: 13)
!1820 = !DILocation(line: 477, column: 15, scope: !1819)
!1821 = !DILocation(line: 477, column: 13, scope: !1806)
!1822 = !DILocation(line: 478, column: 11, scope: !1819)
!1823 = !DILocation(line: 479, column: 15, scope: !1824)
!1824 = distinct !DILexicalBlock(scope: !1806, file: !3, line: 479, column: 9)
!1825 = !DILocation(line: 479, column: 14, scope: !1824)
!1826 = !DILocation(line: 479, column: 19, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1824, file: !3, line: 479, column: 9)
!1828 = !DILocation(line: 479, column: 33, scope: !1827)
!1829 = !DILocation(line: 479, column: 38, scope: !1827)
!1830 = !DILocation(line: 479, column: 21, scope: !1827)
!1831 = !DILocation(line: 479, column: 9, scope: !1824)
!1832 = !DILocation(line: 481, column: 35, scope: !1833)
!1833 = distinct !DILexicalBlock(scope: !1827, file: !3, line: 480, column: 9)
!1834 = !DILocation(line: 481, column: 16, scope: !1833)
!1835 = !DILocation(line: 481, column: 13, scope: !1833)
!1836 = !DILocation(line: 481, column: 15, scope: !1833)
!1837 = !DILocation(line: 482, column: 35, scope: !1833)
!1838 = !DILocation(line: 482, column: 16, scope: !1833)
!1839 = !DILocation(line: 482, column: 13, scope: !1833)
!1840 = !DILocation(line: 482, column: 15, scope: !1833)
!1841 = !DILocation(line: 483, column: 35, scope: !1833)
!1842 = !DILocation(line: 483, column: 16, scope: !1833)
!1843 = !DILocation(line: 483, column: 13, scope: !1833)
!1844 = !DILocation(line: 483, column: 15, scope: !1833)
!1845 = !DILocation(line: 484, column: 16, scope: !1833)
!1846 = !DILocation(line: 484, column: 13, scope: !1833)
!1847 = !DILocation(line: 484, column: 15, scope: !1833)
!1848 = !DILocation(line: 485, column: 12, scope: !1833)
!1849 = !DILocation(line: 486, column: 9, scope: !1833)
!1850 = !DILocation(line: 479, column: 46, scope: !1827)
!1851 = !DILocation(line: 479, column: 9, scope: !1827)
!1852 = distinct !{!1852, !1831, !1853}
!1853 = !DILocation(line: 486, column: 9, scope: !1824)
!1854 = !DILocation(line: 487, column: 7, scope: !1806)
!1855 = !DILocation(line: 474, column: 45, scope: !1800)
!1856 = !DILocation(line: 474, column: 7, scope: !1800)
!1857 = distinct !{!1857, !1804, !1858}
!1858 = !DILocation(line: 487, column: 7, scope: !1796)
!1859 = !DILocation(line: 488, column: 7, scope: !1797)
!1860 = !DILocation(line: 490, column: 17, scope: !1344)
!1861 = !DILocation(line: 490, column: 10, scope: !1344)
!1862 = !DILocation(line: 490, column: 9, scope: !1344)
!1863 = !DILocation(line: 491, column: 9, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 491, column: 3)
!1865 = !DILocation(line: 491, column: 8, scope: !1864)
!1866 = !DILocation(line: 491, column: 13, scope: !1867)
!1867 = distinct !DILexicalBlock(scope: !1864, file: !3, line: 491, column: 3)
!1868 = !DILocation(line: 491, column: 27, scope: !1867)
!1869 = !DILocation(line: 491, column: 32, scope: !1867)
!1870 = !DILocation(line: 491, column: 15, scope: !1867)
!1871 = !DILocation(line: 491, column: 3, scope: !1864)
!1872 = !DILocation(line: 493, column: 24, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1867, file: !3, line: 492, column: 3)
!1874 = !DILocation(line: 493, column: 30, scope: !1873)
!1875 = !DILocation(line: 493, column: 35, scope: !1873)
!1876 = !DILocation(line: 493, column: 37, scope: !1873)
!1877 = !DILocation(line: 493, column: 42, scope: !1873)
!1878 = !DILocation(line: 493, column: 44, scope: !1873)
!1879 = !DILocation(line: 493, column: 43, scope: !1873)
!1880 = !DILocation(line: 493, column: 46, scope: !1873)
!1881 = !DILocation(line: 493, column: 51, scope: !1873)
!1882 = !DILocation(line: 493, column: 59, scope: !1873)
!1883 = !DILocation(line: 493, column: 7, scope: !1873)
!1884 = !DILocation(line: 493, column: 6, scope: !1873)
!1885 = !DILocation(line: 494, column: 9, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 494, column: 9)
!1887 = !DILocation(line: 494, column: 11, scope: !1886)
!1888 = !DILocation(line: 494, column: 9, scope: !1873)
!1889 = !DILocation(line: 495, column: 7, scope: !1886)
!1890 = !DILocation(line: 496, column: 34, scope: !1873)
!1891 = !DILocation(line: 496, column: 13, scope: !1873)
!1892 = !DILocation(line: 496, column: 12, scope: !1873)
!1893 = !DILocation(line: 497, column: 11, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 497, column: 5)
!1895 = !DILocation(line: 497, column: 10, scope: !1894)
!1896 = !DILocation(line: 497, column: 15, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1894, file: !3, line: 497, column: 5)
!1898 = !DILocation(line: 497, column: 29, scope: !1897)
!1899 = !DILocation(line: 497, column: 34, scope: !1897)
!1900 = !DILocation(line: 497, column: 17, scope: !1897)
!1901 = !DILocation(line: 497, column: 5, scope: !1894)
!1902 = !DILocalVariable(name: "i", scope: !1903, file: !3, line: 500, type: !470)
!1903 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 498, column: 5)
!1904 = !DILocation(line: 500, column: 9, scope: !1903)
!1905 = !DILocation(line: 502, column: 13, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1903, file: !3, line: 502, column: 7)
!1907 = !DILocation(line: 502, column: 12, scope: !1906)
!1908 = !DILocation(line: 502, column: 17, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1906, file: !3, line: 502, column: 7)
!1910 = !DILocation(line: 502, column: 31, scope: !1909)
!1911 = !DILocation(line: 502, column: 19, scope: !1909)
!1912 = !DILocation(line: 502, column: 7, scope: !1906)
!1913 = !DILocation(line: 504, column: 10, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1909, file: !3, line: 503, column: 7)
!1915 = !DILocation(line: 504, column: 11, scope: !1914)
!1916 = !DILocation(line: 505, column: 17, scope: !1914)
!1917 = !DILocation(line: 505, column: 29, scope: !1914)
!1918 = !DILocation(line: 505, column: 9, scope: !1914)
!1919 = !DILocation(line: 510, column: 35, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1921, file: !3, line: 509, column: 11)
!1921 = distinct !DILexicalBlock(scope: !1914, file: !3, line: 506, column: 9)
!1922 = !DILocation(line: 510, column: 16, scope: !1920)
!1923 = !DILocation(line: 510, column: 14, scope: !1920)
!1924 = !DILocation(line: 510, column: 15, scope: !1920)
!1925 = !DILocation(line: 511, column: 13, scope: !1920)
!1926 = !DILocation(line: 516, column: 35, scope: !1927)
!1927 = distinct !DILexicalBlock(scope: !1921, file: !3, line: 515, column: 11)
!1928 = !DILocation(line: 516, column: 16, scope: !1927)
!1929 = !DILocation(line: 516, column: 14, scope: !1927)
!1930 = !DILocation(line: 516, column: 15, scope: !1927)
!1931 = !DILocation(line: 517, column: 13, scope: !1927)
!1932 = !DILocation(line: 522, column: 35, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1921, file: !3, line: 521, column: 11)
!1934 = !DILocation(line: 522, column: 16, scope: !1933)
!1935 = !DILocation(line: 522, column: 14, scope: !1933)
!1936 = !DILocation(line: 522, column: 15, scope: !1933)
!1937 = !DILocation(line: 523, column: 13, scope: !1933)
!1938 = !DILocation(line: 527, column: 45, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !1921, file: !3, line: 526, column: 11)
!1940 = !DILocation(line: 527, column: 35, scope: !1939)
!1941 = !DILocation(line: 527, column: 16, scope: !1939)
!1942 = !DILocation(line: 527, column: 14, scope: !1939)
!1943 = !DILocation(line: 527, column: 15, scope: !1939)
!1944 = !DILocation(line: 528, column: 13, scope: !1939)
!1945 = !DILocation(line: 532, column: 35, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1921, file: !3, line: 531, column: 11)
!1947 = !DILocation(line: 532, column: 16, scope: !1946)
!1948 = !DILocation(line: 532, column: 14, scope: !1946)
!1949 = !DILocation(line: 532, column: 15, scope: !1946)
!1950 = !DILocation(line: 533, column: 13, scope: !1946)
!1951 = !DILocation(line: 537, column: 17, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1953, file: !3, line: 537, column: 17)
!1953 = distinct !DILexicalBlock(scope: !1921, file: !3, line: 536, column: 11)
!1954 = !DILocation(line: 537, column: 24, scope: !1952)
!1955 = !DILocation(line: 537, column: 35, scope: !1952)
!1956 = !DILocation(line: 537, column: 17, scope: !1953)
!1957 = !DILocation(line: 538, column: 37, scope: !1952)
!1958 = !DILocation(line: 538, column: 18, scope: !1952)
!1959 = !DILocation(line: 538, column: 16, scope: !1952)
!1960 = !DILocation(line: 538, column: 17, scope: !1952)
!1961 = !DILocation(line: 538, column: 15, scope: !1952)
!1962 = !DILocation(line: 539, column: 13, scope: !1953)
!1963 = !DILocation(line: 543, column: 68, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1921, file: !3, line: 542, column: 11)
!1965 = !DILocation(line: 543, column: 74, scope: !1964)
!1966 = !DILocation(line: 543, column: 50, scope: !1964)
!1967 = !DILocation(line: 543, column: 35, scope: !1964)
!1968 = !DILocation(line: 543, column: 16, scope: !1964)
!1969 = !DILocation(line: 543, column: 14, scope: !1964)
!1970 = !DILocation(line: 543, column: 15, scope: !1964)
!1971 = !DILocation(line: 544, column: 13, scope: !1964)
!1972 = !DILocation(line: 547, column: 13, scope: !1921)
!1973 = !DILocation(line: 549, column: 10, scope: !1914)
!1974 = !DILocation(line: 550, column: 7, scope: !1914)
!1975 = !DILocation(line: 502, column: 40, scope: !1909)
!1976 = !DILocation(line: 502, column: 7, scope: !1909)
!1977 = distinct !{!1977, !1912, !1978}
!1978 = !DILocation(line: 550, column: 7, scope: !1906)
!1979 = !DILocation(line: 551, column: 8, scope: !1903)
!1980 = !DILocation(line: 552, column: 5, scope: !1903)
!1981 = !DILocation(line: 497, column: 42, scope: !1897)
!1982 = !DILocation(line: 497, column: 5, scope: !1897)
!1983 = distinct !{!1983, !1901, !1984}
!1984 = !DILocation(line: 552, column: 5, scope: !1894)
!1985 = !DILocation(line: 553, column: 3, scope: !1873)
!1986 = !DILocation(line: 491, column: 41, scope: !1867)
!1987 = !DILocation(line: 491, column: 3, scope: !1867)
!1988 = distinct !{!1988, !1871, !1989}
!1989 = !DILocation(line: 553, column: 3, scope: !1864)
!1990 = !DILocation(line: 554, column: 1, scope: !1344)
!1991 = distinct !DISubprogram(name: "ExportDoublePixel", scope: !3, file: !3, line: 556, type: !1345, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!1992 = !DILocalVariable(name: "image", arg: 1, scope: !1991, file: !3, line: 556, type: !475)
!1993 = !DILocation(line: 556, column: 38, scope: !1991)
!1994 = !DILocalVariable(name: "roi", arg: 2, scope: !1991, file: !3, line: 556, type: !1347)
!1995 = !DILocation(line: 556, column: 65, scope: !1991)
!1996 = !DILocalVariable(name: "map", arg: 3, scope: !1991, file: !3, line: 557, type: !1349)
!1997 = !DILocation(line: 557, column: 24, scope: !1991)
!1998 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !1991, file: !3, line: 557, type: !1350)
!1999 = !DILocation(line: 557, column: 47, scope: !1991)
!2000 = !DILocalVariable(name: "pixels", arg: 5, scope: !1991, file: !3, line: 557, type: !464)
!2001 = !DILocation(line: 557, column: 65, scope: !1991)
!2002 = !DILocalVariable(name: "exception", arg: 6, scope: !1991, file: !3, line: 558, type: !1071)
!2003 = !DILocation(line: 558, column: 18, scope: !1991)
!2004 = !DILocalVariable(name: "indexes", scope: !1991, file: !3, line: 561, type: !1365)
!2005 = !DILocation(line: 561, column: 15, scope: !1991)
!2006 = !DILocalVariable(name: "p", scope: !1991, file: !3, line: 564, type: !1368)
!2007 = !DILocation(line: 564, column: 15, scope: !1991)
!2008 = !DILocalVariable(name: "q", scope: !1991, file: !3, line: 567, type: !688)
!2009 = !DILocation(line: 567, column: 6, scope: !1991)
!2010 = !DILocalVariable(name: "x", scope: !1991, file: !3, line: 570, type: !470)
!2011 = !DILocation(line: 570, column: 5, scope: !1991)
!2012 = !DILocalVariable(name: "length", scope: !1991, file: !3, line: 573, type: !454)
!2013 = !DILocation(line: 573, column: 5, scope: !1991)
!2014 = !DILocalVariable(name: "y", scope: !1991, file: !3, line: 576, type: !470)
!2015 = !DILocation(line: 576, column: 5, scope: !1991)
!2016 = !DILocation(line: 578, column: 16, scope: !1991)
!2017 = !DILocation(line: 578, column: 5, scope: !1991)
!2018 = !DILocation(line: 578, column: 4, scope: !1991)
!2019 = !DILocation(line: 579, column: 21, scope: !2020)
!2020 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 579, column: 7)
!2021 = !DILocation(line: 579, column: 7, scope: !2020)
!2022 = !DILocation(line: 579, column: 32, scope: !2020)
!2023 = !DILocation(line: 579, column: 7, scope: !1991)
!2024 = !DILocation(line: 581, column: 13, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !2026, file: !3, line: 581, column: 7)
!2026 = distinct !DILexicalBlock(scope: !2020, file: !3, line: 580, column: 5)
!2027 = !DILocation(line: 581, column: 12, scope: !2025)
!2028 = !DILocation(line: 581, column: 17, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2025, file: !3, line: 581, column: 7)
!2030 = !DILocation(line: 581, column: 31, scope: !2029)
!2031 = !DILocation(line: 581, column: 36, scope: !2029)
!2032 = !DILocation(line: 581, column: 19, scope: !2029)
!2033 = !DILocation(line: 581, column: 7, scope: !2025)
!2034 = !DILocation(line: 583, column: 28, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !2029, file: !3, line: 582, column: 7)
!2036 = !DILocation(line: 583, column: 34, scope: !2035)
!2037 = !DILocation(line: 583, column: 39, scope: !2035)
!2038 = !DILocation(line: 583, column: 41, scope: !2035)
!2039 = !DILocation(line: 583, column: 46, scope: !2035)
!2040 = !DILocation(line: 583, column: 48, scope: !2035)
!2041 = !DILocation(line: 583, column: 47, scope: !2035)
!2042 = !DILocation(line: 583, column: 50, scope: !2035)
!2043 = !DILocation(line: 583, column: 55, scope: !2035)
!2044 = !DILocation(line: 583, column: 63, scope: !2035)
!2045 = !DILocation(line: 583, column: 11, scope: !2035)
!2046 = !DILocation(line: 583, column: 10, scope: !2035)
!2047 = !DILocation(line: 584, column: 13, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 584, column: 13)
!2049 = !DILocation(line: 584, column: 15, scope: !2048)
!2050 = !DILocation(line: 584, column: 13, scope: !2035)
!2051 = !DILocation(line: 585, column: 11, scope: !2048)
!2052 = !DILocation(line: 586, column: 15, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 586, column: 9)
!2054 = !DILocation(line: 586, column: 14, scope: !2053)
!2055 = !DILocation(line: 586, column: 19, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !2053, file: !3, line: 586, column: 9)
!2057 = !DILocation(line: 586, column: 33, scope: !2056)
!2058 = !DILocation(line: 586, column: 38, scope: !2056)
!2059 = !DILocation(line: 586, column: 21, scope: !2056)
!2060 = !DILocation(line: 586, column: 9, scope: !2053)
!2061 = !DILocation(line: 588, column: 39, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !2056, file: !3, line: 587, column: 9)
!2063 = !DILocation(line: 588, column: 38, scope: !2062)
!2064 = !DILocation(line: 588, column: 13, scope: !2062)
!2065 = !DILocation(line: 588, column: 15, scope: !2062)
!2066 = !DILocation(line: 589, column: 39, scope: !2062)
!2067 = !DILocation(line: 589, column: 38, scope: !2062)
!2068 = !DILocation(line: 589, column: 13, scope: !2062)
!2069 = !DILocation(line: 589, column: 15, scope: !2062)
!2070 = !DILocation(line: 590, column: 39, scope: !2062)
!2071 = !DILocation(line: 590, column: 38, scope: !2062)
!2072 = !DILocation(line: 590, column: 13, scope: !2062)
!2073 = !DILocation(line: 590, column: 15, scope: !2062)
!2074 = !DILocation(line: 591, column: 12, scope: !2062)
!2075 = !DILocation(line: 592, column: 9, scope: !2062)
!2076 = !DILocation(line: 586, column: 46, scope: !2056)
!2077 = !DILocation(line: 586, column: 9, scope: !2056)
!2078 = distinct !{!2078, !2060, !2079}
!2079 = !DILocation(line: 592, column: 9, scope: !2053)
!2080 = !DILocation(line: 593, column: 7, scope: !2035)
!2081 = !DILocation(line: 581, column: 45, scope: !2029)
!2082 = !DILocation(line: 581, column: 7, scope: !2029)
!2083 = distinct !{!2083, !2033, !2084}
!2084 = !DILocation(line: 593, column: 7, scope: !2025)
!2085 = !DILocation(line: 594, column: 7, scope: !2026)
!2086 = !DILocation(line: 596, column: 21, scope: !2087)
!2087 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 596, column: 7)
!2088 = !DILocation(line: 596, column: 7, scope: !2087)
!2089 = !DILocation(line: 596, column: 33, scope: !2087)
!2090 = !DILocation(line: 596, column: 7, scope: !1991)
!2091 = !DILocation(line: 598, column: 13, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2093, file: !3, line: 598, column: 7)
!2093 = distinct !DILexicalBlock(scope: !2087, file: !3, line: 597, column: 5)
!2094 = !DILocation(line: 598, column: 12, scope: !2092)
!2095 = !DILocation(line: 598, column: 17, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2092, file: !3, line: 598, column: 7)
!2097 = !DILocation(line: 598, column: 31, scope: !2096)
!2098 = !DILocation(line: 598, column: 36, scope: !2096)
!2099 = !DILocation(line: 598, column: 19, scope: !2096)
!2100 = !DILocation(line: 598, column: 7, scope: !2092)
!2101 = !DILocation(line: 600, column: 28, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2096, file: !3, line: 599, column: 7)
!2103 = !DILocation(line: 600, column: 34, scope: !2102)
!2104 = !DILocation(line: 600, column: 39, scope: !2102)
!2105 = !DILocation(line: 600, column: 41, scope: !2102)
!2106 = !DILocation(line: 600, column: 46, scope: !2102)
!2107 = !DILocation(line: 600, column: 48, scope: !2102)
!2108 = !DILocation(line: 600, column: 47, scope: !2102)
!2109 = !DILocation(line: 600, column: 50, scope: !2102)
!2110 = !DILocation(line: 600, column: 55, scope: !2102)
!2111 = !DILocation(line: 600, column: 63, scope: !2102)
!2112 = !DILocation(line: 600, column: 11, scope: !2102)
!2113 = !DILocation(line: 600, column: 10, scope: !2102)
!2114 = !DILocation(line: 601, column: 13, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2102, file: !3, line: 601, column: 13)
!2116 = !DILocation(line: 601, column: 15, scope: !2115)
!2117 = !DILocation(line: 601, column: 13, scope: !2102)
!2118 = !DILocation(line: 602, column: 11, scope: !2115)
!2119 = !DILocation(line: 603, column: 15, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2102, file: !3, line: 603, column: 9)
!2121 = !DILocation(line: 603, column: 14, scope: !2120)
!2122 = !DILocation(line: 603, column: 19, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2120, file: !3, line: 603, column: 9)
!2124 = !DILocation(line: 603, column: 33, scope: !2123)
!2125 = !DILocation(line: 603, column: 38, scope: !2123)
!2126 = !DILocation(line: 603, column: 21, scope: !2123)
!2127 = !DILocation(line: 603, column: 9, scope: !2120)
!2128 = !DILocation(line: 605, column: 39, scope: !2129)
!2129 = distinct !DILexicalBlock(scope: !2123, file: !3, line: 604, column: 9)
!2130 = !DILocation(line: 605, column: 38, scope: !2129)
!2131 = !DILocation(line: 605, column: 13, scope: !2129)
!2132 = !DILocation(line: 605, column: 15, scope: !2129)
!2133 = !DILocation(line: 606, column: 39, scope: !2129)
!2134 = !DILocation(line: 606, column: 38, scope: !2129)
!2135 = !DILocation(line: 606, column: 13, scope: !2129)
!2136 = !DILocation(line: 606, column: 15, scope: !2129)
!2137 = !DILocation(line: 607, column: 39, scope: !2129)
!2138 = !DILocation(line: 607, column: 38, scope: !2129)
!2139 = !DILocation(line: 607, column: 13, scope: !2129)
!2140 = !DILocation(line: 607, column: 15, scope: !2129)
!2141 = !DILocation(line: 609, column: 13, scope: !2129)
!2142 = !DILocation(line: 608, column: 63, scope: !2129)
!2143 = !DILocation(line: 608, column: 40, scope: !2129)
!2144 = !DILocation(line: 608, column: 39, scope: !2129)
!2145 = !DILocation(line: 608, column: 38, scope: !2129)
!2146 = !DILocation(line: 608, column: 13, scope: !2129)
!2147 = !DILocation(line: 608, column: 15, scope: !2129)
!2148 = !DILocation(line: 610, column: 12, scope: !2129)
!2149 = !DILocation(line: 611, column: 9, scope: !2129)
!2150 = !DILocation(line: 603, column: 46, scope: !2123)
!2151 = !DILocation(line: 603, column: 9, scope: !2123)
!2152 = distinct !{!2152, !2127, !2153}
!2153 = !DILocation(line: 611, column: 9, scope: !2120)
!2154 = !DILocation(line: 612, column: 7, scope: !2102)
!2155 = !DILocation(line: 598, column: 45, scope: !2096)
!2156 = !DILocation(line: 598, column: 7, scope: !2096)
!2157 = distinct !{!2157, !2100, !2158}
!2158 = !DILocation(line: 612, column: 7, scope: !2092)
!2159 = !DILocation(line: 613, column: 7, scope: !2093)
!2160 = !DILocation(line: 615, column: 21, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 615, column: 7)
!2162 = !DILocation(line: 615, column: 7, scope: !2161)
!2163 = !DILocation(line: 615, column: 33, scope: !2161)
!2164 = !DILocation(line: 615, column: 7, scope: !1991)
!2165 = !DILocation(line: 617, column: 13, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2167, file: !3, line: 617, column: 7)
!2167 = distinct !DILexicalBlock(scope: !2161, file: !3, line: 616, column: 5)
!2168 = !DILocation(line: 617, column: 12, scope: !2166)
!2169 = !DILocation(line: 617, column: 17, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2166, file: !3, line: 617, column: 7)
!2171 = !DILocation(line: 617, column: 31, scope: !2170)
!2172 = !DILocation(line: 617, column: 36, scope: !2170)
!2173 = !DILocation(line: 617, column: 19, scope: !2170)
!2174 = !DILocation(line: 617, column: 7, scope: !2166)
!2175 = !DILocation(line: 619, column: 28, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2170, file: !3, line: 618, column: 7)
!2177 = !DILocation(line: 619, column: 34, scope: !2176)
!2178 = !DILocation(line: 619, column: 39, scope: !2176)
!2179 = !DILocation(line: 619, column: 41, scope: !2176)
!2180 = !DILocation(line: 619, column: 46, scope: !2176)
!2181 = !DILocation(line: 619, column: 48, scope: !2176)
!2182 = !DILocation(line: 619, column: 47, scope: !2176)
!2183 = !DILocation(line: 619, column: 50, scope: !2176)
!2184 = !DILocation(line: 619, column: 55, scope: !2176)
!2185 = !DILocation(line: 619, column: 63, scope: !2176)
!2186 = !DILocation(line: 619, column: 11, scope: !2176)
!2187 = !DILocation(line: 619, column: 10, scope: !2176)
!2188 = !DILocation(line: 620, column: 13, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 620, column: 13)
!2190 = !DILocation(line: 620, column: 15, scope: !2189)
!2191 = !DILocation(line: 620, column: 13, scope: !2176)
!2192 = !DILocation(line: 621, column: 11, scope: !2189)
!2193 = !DILocation(line: 622, column: 15, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 622, column: 9)
!2195 = !DILocation(line: 622, column: 14, scope: !2194)
!2196 = !DILocation(line: 622, column: 19, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !2194, file: !3, line: 622, column: 9)
!2198 = !DILocation(line: 622, column: 33, scope: !2197)
!2199 = !DILocation(line: 622, column: 38, scope: !2197)
!2200 = !DILocation(line: 622, column: 21, scope: !2197)
!2201 = !DILocation(line: 622, column: 9, scope: !2194)
!2202 = !DILocation(line: 624, column: 39, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2197, file: !3, line: 623, column: 9)
!2204 = !DILocation(line: 624, column: 38, scope: !2203)
!2205 = !DILocation(line: 624, column: 13, scope: !2203)
!2206 = !DILocation(line: 624, column: 15, scope: !2203)
!2207 = !DILocation(line: 625, column: 39, scope: !2203)
!2208 = !DILocation(line: 625, column: 38, scope: !2203)
!2209 = !DILocation(line: 625, column: 13, scope: !2203)
!2210 = !DILocation(line: 625, column: 15, scope: !2203)
!2211 = !DILocation(line: 626, column: 39, scope: !2203)
!2212 = !DILocation(line: 626, column: 38, scope: !2203)
!2213 = !DILocation(line: 626, column: 13, scope: !2203)
!2214 = !DILocation(line: 626, column: 15, scope: !2203)
!2215 = !DILocation(line: 627, column: 13, scope: !2203)
!2216 = !DILocation(line: 627, column: 15, scope: !2203)
!2217 = !DILocation(line: 628, column: 12, scope: !2203)
!2218 = !DILocation(line: 629, column: 9, scope: !2203)
!2219 = !DILocation(line: 622, column: 46, scope: !2197)
!2220 = !DILocation(line: 622, column: 9, scope: !2197)
!2221 = distinct !{!2221, !2201, !2222}
!2222 = !DILocation(line: 629, column: 9, scope: !2194)
!2223 = !DILocation(line: 630, column: 7, scope: !2176)
!2224 = !DILocation(line: 617, column: 45, scope: !2170)
!2225 = !DILocation(line: 617, column: 7, scope: !2170)
!2226 = distinct !{!2226, !2174, !2227}
!2227 = !DILocation(line: 630, column: 7, scope: !2166)
!2228 = !DILocation(line: 631, column: 7, scope: !2167)
!2229 = !DILocation(line: 633, column: 21, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 633, column: 7)
!2231 = !DILocation(line: 633, column: 7, scope: !2230)
!2232 = !DILocation(line: 633, column: 30, scope: !2230)
!2233 = !DILocation(line: 633, column: 7, scope: !1991)
!2234 = !DILocation(line: 635, column: 13, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 635, column: 7)
!2236 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 634, column: 5)
!2237 = !DILocation(line: 635, column: 12, scope: !2235)
!2238 = !DILocation(line: 635, column: 17, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2235, file: !3, line: 635, column: 7)
!2240 = !DILocation(line: 635, column: 31, scope: !2239)
!2241 = !DILocation(line: 635, column: 36, scope: !2239)
!2242 = !DILocation(line: 635, column: 19, scope: !2239)
!2243 = !DILocation(line: 635, column: 7, scope: !2235)
!2244 = !DILocation(line: 637, column: 28, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 636, column: 7)
!2246 = !DILocation(line: 637, column: 34, scope: !2245)
!2247 = !DILocation(line: 637, column: 39, scope: !2245)
!2248 = !DILocation(line: 637, column: 41, scope: !2245)
!2249 = !DILocation(line: 637, column: 46, scope: !2245)
!2250 = !DILocation(line: 637, column: 48, scope: !2245)
!2251 = !DILocation(line: 637, column: 47, scope: !2245)
!2252 = !DILocation(line: 637, column: 50, scope: !2245)
!2253 = !DILocation(line: 637, column: 55, scope: !2245)
!2254 = !DILocation(line: 637, column: 63, scope: !2245)
!2255 = !DILocation(line: 637, column: 11, scope: !2245)
!2256 = !DILocation(line: 637, column: 10, scope: !2245)
!2257 = !DILocation(line: 638, column: 13, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2245, file: !3, line: 638, column: 13)
!2259 = !DILocation(line: 638, column: 15, scope: !2258)
!2260 = !DILocation(line: 638, column: 13, scope: !2245)
!2261 = !DILocation(line: 639, column: 11, scope: !2258)
!2262 = !DILocation(line: 640, column: 15, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2245, file: !3, line: 640, column: 9)
!2264 = !DILocation(line: 640, column: 14, scope: !2263)
!2265 = !DILocation(line: 640, column: 19, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2263, file: !3, line: 640, column: 9)
!2267 = !DILocation(line: 640, column: 33, scope: !2266)
!2268 = !DILocation(line: 640, column: 38, scope: !2266)
!2269 = !DILocation(line: 640, column: 21, scope: !2266)
!2270 = !DILocation(line: 640, column: 9, scope: !2263)
!2271 = !DILocation(line: 642, column: 57, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2266, file: !3, line: 641, column: 9)
!2273 = !DILocation(line: 642, column: 63, scope: !2272)
!2274 = !DILocation(line: 642, column: 39, scope: !2272)
!2275 = !DILocation(line: 642, column: 38, scope: !2272)
!2276 = !DILocation(line: 642, column: 13, scope: !2272)
!2277 = !DILocation(line: 642, column: 15, scope: !2272)
!2278 = !DILocation(line: 643, column: 12, scope: !2272)
!2279 = !DILocation(line: 644, column: 9, scope: !2272)
!2280 = !DILocation(line: 640, column: 46, scope: !2266)
!2281 = !DILocation(line: 640, column: 9, scope: !2266)
!2282 = distinct !{!2282, !2270, !2283}
!2283 = !DILocation(line: 644, column: 9, scope: !2263)
!2284 = !DILocation(line: 645, column: 7, scope: !2245)
!2285 = !DILocation(line: 635, column: 45, scope: !2239)
!2286 = !DILocation(line: 635, column: 7, scope: !2239)
!2287 = distinct !{!2287, !2243, !2288}
!2288 = !DILocation(line: 645, column: 7, scope: !2235)
!2289 = !DILocation(line: 646, column: 7, scope: !2236)
!2290 = !DILocation(line: 648, column: 21, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 648, column: 7)
!2292 = !DILocation(line: 648, column: 7, scope: !2291)
!2293 = !DILocation(line: 648, column: 32, scope: !2291)
!2294 = !DILocation(line: 648, column: 7, scope: !1991)
!2295 = !DILocation(line: 650, column: 13, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2297, file: !3, line: 650, column: 7)
!2297 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 649, column: 5)
!2298 = !DILocation(line: 650, column: 12, scope: !2296)
!2299 = !DILocation(line: 650, column: 17, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2296, file: !3, line: 650, column: 7)
!2301 = !DILocation(line: 650, column: 31, scope: !2300)
!2302 = !DILocation(line: 650, column: 36, scope: !2300)
!2303 = !DILocation(line: 650, column: 19, scope: !2300)
!2304 = !DILocation(line: 650, column: 7, scope: !2296)
!2305 = !DILocation(line: 652, column: 28, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2300, file: !3, line: 651, column: 7)
!2307 = !DILocation(line: 652, column: 34, scope: !2306)
!2308 = !DILocation(line: 652, column: 39, scope: !2306)
!2309 = !DILocation(line: 652, column: 41, scope: !2306)
!2310 = !DILocation(line: 652, column: 46, scope: !2306)
!2311 = !DILocation(line: 652, column: 48, scope: !2306)
!2312 = !DILocation(line: 652, column: 47, scope: !2306)
!2313 = !DILocation(line: 652, column: 50, scope: !2306)
!2314 = !DILocation(line: 652, column: 55, scope: !2306)
!2315 = !DILocation(line: 652, column: 63, scope: !2306)
!2316 = !DILocation(line: 652, column: 11, scope: !2306)
!2317 = !DILocation(line: 652, column: 10, scope: !2306)
!2318 = !DILocation(line: 653, column: 13, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2306, file: !3, line: 653, column: 13)
!2320 = !DILocation(line: 653, column: 15, scope: !2319)
!2321 = !DILocation(line: 653, column: 13, scope: !2306)
!2322 = !DILocation(line: 654, column: 11, scope: !2319)
!2323 = !DILocation(line: 655, column: 15, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2306, file: !3, line: 655, column: 9)
!2325 = !DILocation(line: 655, column: 14, scope: !2324)
!2326 = !DILocation(line: 655, column: 19, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 655, column: 9)
!2328 = !DILocation(line: 655, column: 33, scope: !2327)
!2329 = !DILocation(line: 655, column: 38, scope: !2327)
!2330 = !DILocation(line: 655, column: 21, scope: !2327)
!2331 = !DILocation(line: 655, column: 9, scope: !2324)
!2332 = !DILocation(line: 657, column: 39, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2327, file: !3, line: 656, column: 9)
!2334 = !DILocation(line: 657, column: 38, scope: !2333)
!2335 = !DILocation(line: 657, column: 13, scope: !2333)
!2336 = !DILocation(line: 657, column: 15, scope: !2333)
!2337 = !DILocation(line: 658, column: 39, scope: !2333)
!2338 = !DILocation(line: 658, column: 38, scope: !2333)
!2339 = !DILocation(line: 658, column: 13, scope: !2333)
!2340 = !DILocation(line: 658, column: 15, scope: !2333)
!2341 = !DILocation(line: 659, column: 39, scope: !2333)
!2342 = !DILocation(line: 659, column: 38, scope: !2333)
!2343 = !DILocation(line: 659, column: 13, scope: !2333)
!2344 = !DILocation(line: 659, column: 15, scope: !2333)
!2345 = !DILocation(line: 660, column: 12, scope: !2333)
!2346 = !DILocation(line: 661, column: 9, scope: !2333)
!2347 = !DILocation(line: 655, column: 46, scope: !2327)
!2348 = !DILocation(line: 655, column: 9, scope: !2327)
!2349 = distinct !{!2349, !2331, !2350}
!2350 = !DILocation(line: 661, column: 9, scope: !2324)
!2351 = !DILocation(line: 662, column: 7, scope: !2306)
!2352 = !DILocation(line: 650, column: 45, scope: !2300)
!2353 = !DILocation(line: 650, column: 7, scope: !2300)
!2354 = distinct !{!2354, !2304, !2355}
!2355 = !DILocation(line: 662, column: 7, scope: !2296)
!2356 = !DILocation(line: 663, column: 7, scope: !2297)
!2357 = !DILocation(line: 665, column: 21, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 665, column: 7)
!2359 = !DILocation(line: 665, column: 7, scope: !2358)
!2360 = !DILocation(line: 665, column: 33, scope: !2358)
!2361 = !DILocation(line: 665, column: 7, scope: !1991)
!2362 = !DILocation(line: 667, column: 13, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 667, column: 7)
!2364 = distinct !DILexicalBlock(scope: !2358, file: !3, line: 666, column: 5)
!2365 = !DILocation(line: 667, column: 12, scope: !2363)
!2366 = !DILocation(line: 667, column: 17, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 667, column: 7)
!2368 = !DILocation(line: 667, column: 31, scope: !2367)
!2369 = !DILocation(line: 667, column: 36, scope: !2367)
!2370 = !DILocation(line: 667, column: 19, scope: !2367)
!2371 = !DILocation(line: 667, column: 7, scope: !2363)
!2372 = !DILocation(line: 669, column: 28, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2367, file: !3, line: 668, column: 7)
!2374 = !DILocation(line: 669, column: 34, scope: !2373)
!2375 = !DILocation(line: 669, column: 39, scope: !2373)
!2376 = !DILocation(line: 669, column: 41, scope: !2373)
!2377 = !DILocation(line: 669, column: 46, scope: !2373)
!2378 = !DILocation(line: 669, column: 48, scope: !2373)
!2379 = !DILocation(line: 669, column: 47, scope: !2373)
!2380 = !DILocation(line: 669, column: 50, scope: !2373)
!2381 = !DILocation(line: 669, column: 55, scope: !2373)
!2382 = !DILocation(line: 669, column: 63, scope: !2373)
!2383 = !DILocation(line: 669, column: 11, scope: !2373)
!2384 = !DILocation(line: 669, column: 10, scope: !2373)
!2385 = !DILocation(line: 670, column: 13, scope: !2386)
!2386 = distinct !DILexicalBlock(scope: !2373, file: !3, line: 670, column: 13)
!2387 = !DILocation(line: 670, column: 15, scope: !2386)
!2388 = !DILocation(line: 670, column: 13, scope: !2373)
!2389 = !DILocation(line: 671, column: 11, scope: !2386)
!2390 = !DILocation(line: 672, column: 15, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2373, file: !3, line: 672, column: 9)
!2392 = !DILocation(line: 672, column: 14, scope: !2391)
!2393 = !DILocation(line: 672, column: 19, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2391, file: !3, line: 672, column: 9)
!2395 = !DILocation(line: 672, column: 33, scope: !2394)
!2396 = !DILocation(line: 672, column: 38, scope: !2394)
!2397 = !DILocation(line: 672, column: 21, scope: !2394)
!2398 = !DILocation(line: 672, column: 9, scope: !2391)
!2399 = !DILocation(line: 674, column: 39, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 673, column: 9)
!2401 = !DILocation(line: 674, column: 38, scope: !2400)
!2402 = !DILocation(line: 674, column: 13, scope: !2400)
!2403 = !DILocation(line: 674, column: 15, scope: !2400)
!2404 = !DILocation(line: 675, column: 39, scope: !2400)
!2405 = !DILocation(line: 675, column: 38, scope: !2400)
!2406 = !DILocation(line: 675, column: 13, scope: !2400)
!2407 = !DILocation(line: 675, column: 15, scope: !2400)
!2408 = !DILocation(line: 676, column: 39, scope: !2400)
!2409 = !DILocation(line: 676, column: 38, scope: !2400)
!2410 = !DILocation(line: 676, column: 13, scope: !2400)
!2411 = !DILocation(line: 676, column: 15, scope: !2400)
!2412 = !DILocation(line: 678, column: 13, scope: !2400)
!2413 = !DILocation(line: 677, column: 63, scope: !2400)
!2414 = !DILocation(line: 677, column: 40, scope: !2400)
!2415 = !DILocation(line: 677, column: 39, scope: !2400)
!2416 = !DILocation(line: 677, column: 38, scope: !2400)
!2417 = !DILocation(line: 677, column: 13, scope: !2400)
!2418 = !DILocation(line: 677, column: 15, scope: !2400)
!2419 = !DILocation(line: 679, column: 12, scope: !2400)
!2420 = !DILocation(line: 680, column: 9, scope: !2400)
!2421 = !DILocation(line: 672, column: 46, scope: !2394)
!2422 = !DILocation(line: 672, column: 9, scope: !2394)
!2423 = distinct !{!2423, !2398, !2424}
!2424 = !DILocation(line: 680, column: 9, scope: !2391)
!2425 = !DILocation(line: 681, column: 7, scope: !2373)
!2426 = !DILocation(line: 667, column: 45, scope: !2367)
!2427 = !DILocation(line: 667, column: 7, scope: !2367)
!2428 = distinct !{!2428, !2371, !2429}
!2429 = !DILocation(line: 681, column: 7, scope: !2363)
!2430 = !DILocation(line: 682, column: 7, scope: !2364)
!2431 = !DILocation(line: 684, column: 21, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 684, column: 7)
!2433 = !DILocation(line: 684, column: 7, scope: !2432)
!2434 = !DILocation(line: 684, column: 33, scope: !2432)
!2435 = !DILocation(line: 684, column: 7, scope: !1991)
!2436 = !DILocation(line: 686, column: 13, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2438, file: !3, line: 686, column: 7)
!2438 = distinct !DILexicalBlock(scope: !2432, file: !3, line: 685, column: 5)
!2439 = !DILocation(line: 686, column: 12, scope: !2437)
!2440 = !DILocation(line: 686, column: 17, scope: !2441)
!2441 = distinct !DILexicalBlock(scope: !2437, file: !3, line: 686, column: 7)
!2442 = !DILocation(line: 686, column: 31, scope: !2441)
!2443 = !DILocation(line: 686, column: 36, scope: !2441)
!2444 = !DILocation(line: 686, column: 19, scope: !2441)
!2445 = !DILocation(line: 686, column: 7, scope: !2437)
!2446 = !DILocation(line: 688, column: 28, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2441, file: !3, line: 687, column: 7)
!2448 = !DILocation(line: 688, column: 34, scope: !2447)
!2449 = !DILocation(line: 688, column: 39, scope: !2447)
!2450 = !DILocation(line: 688, column: 41, scope: !2447)
!2451 = !DILocation(line: 688, column: 46, scope: !2447)
!2452 = !DILocation(line: 688, column: 48, scope: !2447)
!2453 = !DILocation(line: 688, column: 47, scope: !2447)
!2454 = !DILocation(line: 688, column: 50, scope: !2447)
!2455 = !DILocation(line: 688, column: 55, scope: !2447)
!2456 = !DILocation(line: 688, column: 63, scope: !2447)
!2457 = !DILocation(line: 688, column: 11, scope: !2447)
!2458 = !DILocation(line: 688, column: 10, scope: !2447)
!2459 = !DILocation(line: 689, column: 13, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 689, column: 13)
!2461 = !DILocation(line: 689, column: 15, scope: !2460)
!2462 = !DILocation(line: 689, column: 13, scope: !2447)
!2463 = !DILocation(line: 690, column: 11, scope: !2460)
!2464 = !DILocation(line: 691, column: 15, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 691, column: 9)
!2466 = !DILocation(line: 691, column: 14, scope: !2465)
!2467 = !DILocation(line: 691, column: 19, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 691, column: 9)
!2469 = !DILocation(line: 691, column: 33, scope: !2468)
!2470 = !DILocation(line: 691, column: 38, scope: !2468)
!2471 = !DILocation(line: 691, column: 21, scope: !2468)
!2472 = !DILocation(line: 691, column: 9, scope: !2465)
!2473 = !DILocation(line: 693, column: 39, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2468, file: !3, line: 692, column: 9)
!2475 = !DILocation(line: 693, column: 38, scope: !2474)
!2476 = !DILocation(line: 693, column: 13, scope: !2474)
!2477 = !DILocation(line: 693, column: 15, scope: !2474)
!2478 = !DILocation(line: 694, column: 39, scope: !2474)
!2479 = !DILocation(line: 694, column: 38, scope: !2474)
!2480 = !DILocation(line: 694, column: 13, scope: !2474)
!2481 = !DILocation(line: 694, column: 15, scope: !2474)
!2482 = !DILocation(line: 695, column: 39, scope: !2474)
!2483 = !DILocation(line: 695, column: 38, scope: !2474)
!2484 = !DILocation(line: 695, column: 13, scope: !2474)
!2485 = !DILocation(line: 695, column: 15, scope: !2474)
!2486 = !DILocation(line: 696, column: 13, scope: !2474)
!2487 = !DILocation(line: 696, column: 15, scope: !2474)
!2488 = !DILocation(line: 697, column: 12, scope: !2474)
!2489 = !DILocation(line: 698, column: 9, scope: !2474)
!2490 = !DILocation(line: 691, column: 46, scope: !2468)
!2491 = !DILocation(line: 691, column: 9, scope: !2468)
!2492 = distinct !{!2492, !2472, !2493}
!2493 = !DILocation(line: 698, column: 9, scope: !2465)
!2494 = !DILocation(line: 699, column: 7, scope: !2447)
!2495 = !DILocation(line: 686, column: 45, scope: !2441)
!2496 = !DILocation(line: 686, column: 7, scope: !2441)
!2497 = distinct !{!2497, !2445, !2498}
!2498 = !DILocation(line: 699, column: 7, scope: !2437)
!2499 = !DILocation(line: 700, column: 7, scope: !2438)
!2500 = !DILocation(line: 702, column: 17, scope: !1991)
!2501 = !DILocation(line: 702, column: 10, scope: !1991)
!2502 = !DILocation(line: 702, column: 9, scope: !1991)
!2503 = !DILocation(line: 703, column: 9, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 703, column: 3)
!2505 = !DILocation(line: 703, column: 8, scope: !2504)
!2506 = !DILocation(line: 703, column: 13, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 703, column: 3)
!2508 = !DILocation(line: 703, column: 27, scope: !2507)
!2509 = !DILocation(line: 703, column: 32, scope: !2507)
!2510 = !DILocation(line: 703, column: 15, scope: !2507)
!2511 = !DILocation(line: 703, column: 3, scope: !2504)
!2512 = !DILocation(line: 705, column: 24, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 704, column: 3)
!2514 = !DILocation(line: 705, column: 30, scope: !2513)
!2515 = !DILocation(line: 705, column: 35, scope: !2513)
!2516 = !DILocation(line: 705, column: 37, scope: !2513)
!2517 = !DILocation(line: 705, column: 42, scope: !2513)
!2518 = !DILocation(line: 705, column: 44, scope: !2513)
!2519 = !DILocation(line: 705, column: 43, scope: !2513)
!2520 = !DILocation(line: 705, column: 46, scope: !2513)
!2521 = !DILocation(line: 705, column: 51, scope: !2513)
!2522 = !DILocation(line: 705, column: 59, scope: !2513)
!2523 = !DILocation(line: 705, column: 7, scope: !2513)
!2524 = !DILocation(line: 705, column: 6, scope: !2513)
!2525 = !DILocation(line: 706, column: 9, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 706, column: 9)
!2527 = !DILocation(line: 706, column: 11, scope: !2526)
!2528 = !DILocation(line: 706, column: 9, scope: !2513)
!2529 = !DILocation(line: 707, column: 7, scope: !2526)
!2530 = !DILocation(line: 708, column: 34, scope: !2513)
!2531 = !DILocation(line: 708, column: 13, scope: !2513)
!2532 = !DILocation(line: 708, column: 12, scope: !2513)
!2533 = !DILocation(line: 709, column: 11, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 709, column: 5)
!2535 = !DILocation(line: 709, column: 10, scope: !2534)
!2536 = !DILocation(line: 709, column: 15, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2534, file: !3, line: 709, column: 5)
!2538 = !DILocation(line: 709, column: 29, scope: !2537)
!2539 = !DILocation(line: 709, column: 34, scope: !2537)
!2540 = !DILocation(line: 709, column: 17, scope: !2537)
!2541 = !DILocation(line: 709, column: 5, scope: !2534)
!2542 = !DILocalVariable(name: "i", scope: !2543, file: !3, line: 712, type: !470)
!2543 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 710, column: 5)
!2544 = !DILocation(line: 712, column: 9, scope: !2543)
!2545 = !DILocation(line: 714, column: 13, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2543, file: !3, line: 714, column: 7)
!2547 = !DILocation(line: 714, column: 12, scope: !2546)
!2548 = !DILocation(line: 714, column: 17, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 714, column: 7)
!2550 = !DILocation(line: 714, column: 31, scope: !2549)
!2551 = !DILocation(line: 714, column: 19, scope: !2549)
!2552 = !DILocation(line: 714, column: 7, scope: !2546)
!2553 = !DILocation(line: 716, column: 10, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2549, file: !3, line: 715, column: 7)
!2555 = !DILocation(line: 716, column: 11, scope: !2554)
!2556 = !DILocation(line: 717, column: 17, scope: !2554)
!2557 = !DILocation(line: 717, column: 29, scope: !2554)
!2558 = !DILocation(line: 717, column: 9, scope: !2554)
!2559 = !DILocation(line: 722, column: 39, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 721, column: 11)
!2561 = distinct !DILexicalBlock(scope: !2554, file: !3, line: 718, column: 9)
!2562 = !DILocation(line: 722, column: 38, scope: !2560)
!2563 = !DILocation(line: 722, column: 14, scope: !2560)
!2564 = !DILocation(line: 722, column: 15, scope: !2560)
!2565 = !DILocation(line: 723, column: 13, scope: !2560)
!2566 = !DILocation(line: 728, column: 39, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 727, column: 11)
!2568 = !DILocation(line: 728, column: 38, scope: !2567)
!2569 = !DILocation(line: 728, column: 14, scope: !2567)
!2570 = !DILocation(line: 728, column: 15, scope: !2567)
!2571 = !DILocation(line: 729, column: 13, scope: !2567)
!2572 = !DILocation(line: 734, column: 39, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 733, column: 11)
!2574 = !DILocation(line: 734, column: 38, scope: !2573)
!2575 = !DILocation(line: 734, column: 14, scope: !2573)
!2576 = !DILocation(line: 734, column: 15, scope: !2573)
!2577 = !DILocation(line: 735, column: 13, scope: !2573)
!2578 = !DILocation(line: 740, column: 15, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 738, column: 11)
!2580 = !DILocation(line: 739, column: 63, scope: !2579)
!2581 = !DILocation(line: 739, column: 40, scope: !2579)
!2582 = !DILocation(line: 739, column: 39, scope: !2579)
!2583 = !DILocation(line: 739, column: 38, scope: !2579)
!2584 = !DILocation(line: 739, column: 14, scope: !2579)
!2585 = !DILocation(line: 739, column: 15, scope: !2579)
!2586 = !DILocation(line: 741, column: 13, scope: !2579)
!2587 = !DILocation(line: 745, column: 39, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 744, column: 11)
!2589 = !DILocation(line: 745, column: 38, scope: !2588)
!2590 = !DILocation(line: 745, column: 14, scope: !2588)
!2591 = !DILocation(line: 745, column: 15, scope: !2588)
!2592 = !DILocation(line: 746, column: 13, scope: !2588)
!2593 = !DILocation(line: 750, column: 17, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 750, column: 17)
!2595 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 749, column: 11)
!2596 = !DILocation(line: 750, column: 24, scope: !2594)
!2597 = !DILocation(line: 750, column: 35, scope: !2594)
!2598 = !DILocation(line: 750, column: 17, scope: !2595)
!2599 = !DILocation(line: 751, column: 41, scope: !2594)
!2600 = !DILocation(line: 751, column: 40, scope: !2594)
!2601 = !DILocation(line: 751, column: 16, scope: !2594)
!2602 = !DILocation(line: 751, column: 17, scope: !2594)
!2603 = !DILocation(line: 751, column: 15, scope: !2594)
!2604 = !DILocation(line: 752, column: 13, scope: !2595)
!2605 = !DILocation(line: 756, column: 57, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 755, column: 11)
!2607 = !DILocation(line: 756, column: 63, scope: !2606)
!2608 = !DILocation(line: 756, column: 39, scope: !2606)
!2609 = !DILocation(line: 756, column: 38, scope: !2606)
!2610 = !DILocation(line: 756, column: 14, scope: !2606)
!2611 = !DILocation(line: 756, column: 15, scope: !2606)
!2612 = !DILocation(line: 757, column: 13, scope: !2606)
!2613 = !DILocation(line: 760, column: 14, scope: !2561)
!2614 = !DILocation(line: 760, column: 15, scope: !2561)
!2615 = !DILocation(line: 761, column: 9, scope: !2561)
!2616 = !DILocation(line: 762, column: 10, scope: !2554)
!2617 = !DILocation(line: 763, column: 7, scope: !2554)
!2618 = !DILocation(line: 714, column: 40, scope: !2549)
!2619 = !DILocation(line: 714, column: 7, scope: !2549)
!2620 = distinct !{!2620, !2552, !2621}
!2621 = !DILocation(line: 763, column: 7, scope: !2546)
!2622 = !DILocation(line: 764, column: 8, scope: !2543)
!2623 = !DILocation(line: 765, column: 5, scope: !2543)
!2624 = !DILocation(line: 709, column: 42, scope: !2537)
!2625 = !DILocation(line: 709, column: 5, scope: !2537)
!2626 = distinct !{!2626, !2541, !2627}
!2627 = !DILocation(line: 765, column: 5, scope: !2534)
!2628 = !DILocation(line: 766, column: 3, scope: !2513)
!2629 = !DILocation(line: 703, column: 41, scope: !2507)
!2630 = !DILocation(line: 703, column: 3, scope: !2507)
!2631 = distinct !{!2631, !2511, !2632}
!2632 = !DILocation(line: 766, column: 3, scope: !2504)
!2633 = !DILocation(line: 767, column: 1, scope: !1991)
!2634 = distinct !DISubprogram(name: "ExportFloatPixel", scope: !3, file: !3, line: 769, type: !1345, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!2635 = !DILocalVariable(name: "image", arg: 1, scope: !2634, file: !3, line: 769, type: !475)
!2636 = !DILocation(line: 769, column: 37, scope: !2634)
!2637 = !DILocalVariable(name: "roi", arg: 2, scope: !2634, file: !3, line: 769, type: !1347)
!2638 = !DILocation(line: 769, column: 64, scope: !2634)
!2639 = !DILocalVariable(name: "map", arg: 3, scope: !2634, file: !3, line: 770, type: !1349)
!2640 = !DILocation(line: 770, column: 24, scope: !2634)
!2641 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !2634, file: !3, line: 770, type: !1350)
!2642 = !DILocation(line: 770, column: 47, scope: !2634)
!2643 = !DILocalVariable(name: "pixels", arg: 5, scope: !2634, file: !3, line: 770, type: !464)
!2644 = !DILocation(line: 770, column: 65, scope: !2634)
!2645 = !DILocalVariable(name: "exception", arg: 6, scope: !2634, file: !3, line: 771, type: !1071)
!2646 = !DILocation(line: 771, column: 18, scope: !2634)
!2647 = !DILocalVariable(name: "indexes", scope: !2634, file: !3, line: 774, type: !1365)
!2648 = !DILocation(line: 774, column: 15, scope: !2634)
!2649 = !DILocalVariable(name: "p", scope: !2634, file: !3, line: 777, type: !1368)
!2650 = !DILocation(line: 777, column: 15, scope: !2634)
!2651 = !DILocalVariable(name: "q", scope: !2634, file: !3, line: 780, type: !689)
!2652 = !DILocation(line: 780, column: 6, scope: !2634)
!2653 = !DILocalVariable(name: "x", scope: !2634, file: !3, line: 783, type: !470)
!2654 = !DILocation(line: 783, column: 5, scope: !2634)
!2655 = !DILocalVariable(name: "length", scope: !2634, file: !3, line: 786, type: !454)
!2656 = !DILocation(line: 786, column: 5, scope: !2634)
!2657 = !DILocalVariable(name: "y", scope: !2634, file: !3, line: 789, type: !470)
!2658 = !DILocation(line: 789, column: 5, scope: !2634)
!2659 = !DILocation(line: 791, column: 15, scope: !2634)
!2660 = !DILocation(line: 791, column: 5, scope: !2634)
!2661 = !DILocation(line: 791, column: 4, scope: !2634)
!2662 = !DILocation(line: 792, column: 21, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 792, column: 7)
!2664 = !DILocation(line: 792, column: 7, scope: !2663)
!2665 = !DILocation(line: 792, column: 32, scope: !2663)
!2666 = !DILocation(line: 792, column: 7, scope: !2634)
!2667 = !DILocation(line: 794, column: 13, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2669, file: !3, line: 794, column: 7)
!2669 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 793, column: 5)
!2670 = !DILocation(line: 794, column: 12, scope: !2668)
!2671 = !DILocation(line: 794, column: 17, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 794, column: 7)
!2673 = !DILocation(line: 794, column: 31, scope: !2672)
!2674 = !DILocation(line: 794, column: 36, scope: !2672)
!2675 = !DILocation(line: 794, column: 19, scope: !2672)
!2676 = !DILocation(line: 794, column: 7, scope: !2668)
!2677 = !DILocation(line: 796, column: 28, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2672, file: !3, line: 795, column: 7)
!2679 = !DILocation(line: 796, column: 34, scope: !2678)
!2680 = !DILocation(line: 796, column: 39, scope: !2678)
!2681 = !DILocation(line: 796, column: 41, scope: !2678)
!2682 = !DILocation(line: 796, column: 46, scope: !2678)
!2683 = !DILocation(line: 796, column: 48, scope: !2678)
!2684 = !DILocation(line: 796, column: 47, scope: !2678)
!2685 = !DILocation(line: 796, column: 50, scope: !2678)
!2686 = !DILocation(line: 796, column: 55, scope: !2678)
!2687 = !DILocation(line: 796, column: 63, scope: !2678)
!2688 = !DILocation(line: 796, column: 11, scope: !2678)
!2689 = !DILocation(line: 796, column: 10, scope: !2678)
!2690 = !DILocation(line: 797, column: 13, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2678, file: !3, line: 797, column: 13)
!2692 = !DILocation(line: 797, column: 15, scope: !2691)
!2693 = !DILocation(line: 797, column: 13, scope: !2678)
!2694 = !DILocation(line: 798, column: 11, scope: !2691)
!2695 = !DILocation(line: 799, column: 15, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2678, file: !3, line: 799, column: 9)
!2697 = !DILocation(line: 799, column: 14, scope: !2696)
!2698 = !DILocation(line: 799, column: 19, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 799, column: 9)
!2700 = !DILocation(line: 799, column: 33, scope: !2699)
!2701 = !DILocation(line: 799, column: 38, scope: !2699)
!2702 = !DILocation(line: 799, column: 21, scope: !2699)
!2703 = !DILocation(line: 799, column: 9, scope: !2696)
!2704 = !DILocation(line: 801, column: 38, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2699, file: !3, line: 800, column: 9)
!2706 = !DILocation(line: 801, column: 37, scope: !2705)
!2707 = !DILocation(line: 801, column: 16, scope: !2705)
!2708 = !DILocation(line: 801, column: 13, scope: !2705)
!2709 = !DILocation(line: 801, column: 15, scope: !2705)
!2710 = !DILocation(line: 802, column: 38, scope: !2705)
!2711 = !DILocation(line: 802, column: 37, scope: !2705)
!2712 = !DILocation(line: 802, column: 16, scope: !2705)
!2713 = !DILocation(line: 802, column: 13, scope: !2705)
!2714 = !DILocation(line: 802, column: 15, scope: !2705)
!2715 = !DILocation(line: 803, column: 38, scope: !2705)
!2716 = !DILocation(line: 803, column: 37, scope: !2705)
!2717 = !DILocation(line: 803, column: 16, scope: !2705)
!2718 = !DILocation(line: 803, column: 13, scope: !2705)
!2719 = !DILocation(line: 803, column: 15, scope: !2705)
!2720 = !DILocation(line: 804, column: 12, scope: !2705)
!2721 = !DILocation(line: 805, column: 9, scope: !2705)
!2722 = !DILocation(line: 799, column: 46, scope: !2699)
!2723 = !DILocation(line: 799, column: 9, scope: !2699)
!2724 = distinct !{!2724, !2703, !2725}
!2725 = !DILocation(line: 805, column: 9, scope: !2696)
!2726 = !DILocation(line: 806, column: 7, scope: !2678)
!2727 = !DILocation(line: 794, column: 45, scope: !2672)
!2728 = !DILocation(line: 794, column: 7, scope: !2672)
!2729 = distinct !{!2729, !2676, !2730}
!2730 = !DILocation(line: 806, column: 7, scope: !2668)
!2731 = !DILocation(line: 807, column: 7, scope: !2669)
!2732 = !DILocation(line: 809, column: 21, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 809, column: 7)
!2734 = !DILocation(line: 809, column: 7, scope: !2733)
!2735 = !DILocation(line: 809, column: 33, scope: !2733)
!2736 = !DILocation(line: 809, column: 7, scope: !2634)
!2737 = !DILocation(line: 811, column: 13, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2739, file: !3, line: 811, column: 7)
!2739 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 810, column: 5)
!2740 = !DILocation(line: 811, column: 12, scope: !2738)
!2741 = !DILocation(line: 811, column: 17, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 811, column: 7)
!2743 = !DILocation(line: 811, column: 31, scope: !2742)
!2744 = !DILocation(line: 811, column: 36, scope: !2742)
!2745 = !DILocation(line: 811, column: 19, scope: !2742)
!2746 = !DILocation(line: 811, column: 7, scope: !2738)
!2747 = !DILocation(line: 813, column: 28, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2742, file: !3, line: 812, column: 7)
!2749 = !DILocation(line: 813, column: 34, scope: !2748)
!2750 = !DILocation(line: 813, column: 39, scope: !2748)
!2751 = !DILocation(line: 813, column: 41, scope: !2748)
!2752 = !DILocation(line: 813, column: 46, scope: !2748)
!2753 = !DILocation(line: 813, column: 48, scope: !2748)
!2754 = !DILocation(line: 813, column: 47, scope: !2748)
!2755 = !DILocation(line: 813, column: 50, scope: !2748)
!2756 = !DILocation(line: 813, column: 55, scope: !2748)
!2757 = !DILocation(line: 813, column: 63, scope: !2748)
!2758 = !DILocation(line: 813, column: 11, scope: !2748)
!2759 = !DILocation(line: 813, column: 10, scope: !2748)
!2760 = !DILocation(line: 814, column: 13, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 814, column: 13)
!2762 = !DILocation(line: 814, column: 15, scope: !2761)
!2763 = !DILocation(line: 814, column: 13, scope: !2748)
!2764 = !DILocation(line: 815, column: 11, scope: !2761)
!2765 = !DILocation(line: 816, column: 15, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 816, column: 9)
!2767 = !DILocation(line: 816, column: 14, scope: !2766)
!2768 = !DILocation(line: 816, column: 19, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2766, file: !3, line: 816, column: 9)
!2770 = !DILocation(line: 816, column: 33, scope: !2769)
!2771 = !DILocation(line: 816, column: 38, scope: !2769)
!2772 = !DILocation(line: 816, column: 21, scope: !2769)
!2773 = !DILocation(line: 816, column: 9, scope: !2766)
!2774 = !DILocation(line: 818, column: 38, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 817, column: 9)
!2776 = !DILocation(line: 818, column: 37, scope: !2775)
!2777 = !DILocation(line: 818, column: 16, scope: !2775)
!2778 = !DILocation(line: 818, column: 13, scope: !2775)
!2779 = !DILocation(line: 818, column: 15, scope: !2775)
!2780 = !DILocation(line: 819, column: 38, scope: !2775)
!2781 = !DILocation(line: 819, column: 37, scope: !2775)
!2782 = !DILocation(line: 819, column: 16, scope: !2775)
!2783 = !DILocation(line: 819, column: 13, scope: !2775)
!2784 = !DILocation(line: 819, column: 15, scope: !2775)
!2785 = !DILocation(line: 820, column: 38, scope: !2775)
!2786 = !DILocation(line: 820, column: 37, scope: !2775)
!2787 = !DILocation(line: 820, column: 16, scope: !2775)
!2788 = !DILocation(line: 820, column: 13, scope: !2775)
!2789 = !DILocation(line: 820, column: 15, scope: !2775)
!2790 = !DILocation(line: 821, column: 38, scope: !2775)
!2791 = !DILocation(line: 821, column: 37, scope: !2775)
!2792 = !DILocation(line: 821, column: 16, scope: !2775)
!2793 = !DILocation(line: 821, column: 13, scope: !2775)
!2794 = !DILocation(line: 821, column: 15, scope: !2775)
!2795 = !DILocation(line: 822, column: 12, scope: !2775)
!2796 = !DILocation(line: 823, column: 9, scope: !2775)
!2797 = !DILocation(line: 816, column: 46, scope: !2769)
!2798 = !DILocation(line: 816, column: 9, scope: !2769)
!2799 = distinct !{!2799, !2773, !2800}
!2800 = !DILocation(line: 823, column: 9, scope: !2766)
!2801 = !DILocation(line: 824, column: 7, scope: !2748)
!2802 = !DILocation(line: 811, column: 45, scope: !2742)
!2803 = !DILocation(line: 811, column: 7, scope: !2742)
!2804 = distinct !{!2804, !2746, !2805}
!2805 = !DILocation(line: 824, column: 7, scope: !2738)
!2806 = !DILocation(line: 825, column: 7, scope: !2739)
!2807 = !DILocation(line: 827, column: 21, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 827, column: 7)
!2809 = !DILocation(line: 827, column: 7, scope: !2808)
!2810 = !DILocation(line: 827, column: 33, scope: !2808)
!2811 = !DILocation(line: 827, column: 7, scope: !2634)
!2812 = !DILocation(line: 829, column: 13, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2814, file: !3, line: 829, column: 7)
!2814 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 828, column: 5)
!2815 = !DILocation(line: 829, column: 12, scope: !2813)
!2816 = !DILocation(line: 829, column: 17, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 829, column: 7)
!2818 = !DILocation(line: 829, column: 31, scope: !2817)
!2819 = !DILocation(line: 829, column: 36, scope: !2817)
!2820 = !DILocation(line: 829, column: 19, scope: !2817)
!2821 = !DILocation(line: 829, column: 7, scope: !2813)
!2822 = !DILocation(line: 831, column: 28, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2817, file: !3, line: 830, column: 7)
!2824 = !DILocation(line: 831, column: 34, scope: !2823)
!2825 = !DILocation(line: 831, column: 39, scope: !2823)
!2826 = !DILocation(line: 831, column: 41, scope: !2823)
!2827 = !DILocation(line: 831, column: 46, scope: !2823)
!2828 = !DILocation(line: 831, column: 48, scope: !2823)
!2829 = !DILocation(line: 831, column: 47, scope: !2823)
!2830 = !DILocation(line: 831, column: 50, scope: !2823)
!2831 = !DILocation(line: 831, column: 55, scope: !2823)
!2832 = !DILocation(line: 831, column: 63, scope: !2823)
!2833 = !DILocation(line: 831, column: 11, scope: !2823)
!2834 = !DILocation(line: 831, column: 10, scope: !2823)
!2835 = !DILocation(line: 832, column: 13, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 832, column: 13)
!2837 = !DILocation(line: 832, column: 15, scope: !2836)
!2838 = !DILocation(line: 832, column: 13, scope: !2823)
!2839 = !DILocation(line: 833, column: 11, scope: !2836)
!2840 = !DILocation(line: 834, column: 15, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 834, column: 9)
!2842 = !DILocation(line: 834, column: 14, scope: !2841)
!2843 = !DILocation(line: 834, column: 19, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 834, column: 9)
!2845 = !DILocation(line: 834, column: 33, scope: !2844)
!2846 = !DILocation(line: 834, column: 38, scope: !2844)
!2847 = !DILocation(line: 834, column: 21, scope: !2844)
!2848 = !DILocation(line: 834, column: 9, scope: !2841)
!2849 = !DILocation(line: 836, column: 38, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 835, column: 9)
!2851 = !DILocation(line: 836, column: 37, scope: !2850)
!2852 = !DILocation(line: 836, column: 16, scope: !2850)
!2853 = !DILocation(line: 836, column: 13, scope: !2850)
!2854 = !DILocation(line: 836, column: 15, scope: !2850)
!2855 = !DILocation(line: 837, column: 38, scope: !2850)
!2856 = !DILocation(line: 837, column: 37, scope: !2850)
!2857 = !DILocation(line: 837, column: 16, scope: !2850)
!2858 = !DILocation(line: 837, column: 13, scope: !2850)
!2859 = !DILocation(line: 837, column: 15, scope: !2850)
!2860 = !DILocation(line: 838, column: 38, scope: !2850)
!2861 = !DILocation(line: 838, column: 37, scope: !2850)
!2862 = !DILocation(line: 838, column: 16, scope: !2850)
!2863 = !DILocation(line: 838, column: 13, scope: !2850)
!2864 = !DILocation(line: 838, column: 15, scope: !2850)
!2865 = !DILocation(line: 839, column: 13, scope: !2850)
!2866 = !DILocation(line: 839, column: 15, scope: !2850)
!2867 = !DILocation(line: 840, column: 12, scope: !2850)
!2868 = !DILocation(line: 841, column: 9, scope: !2850)
!2869 = !DILocation(line: 834, column: 46, scope: !2844)
!2870 = !DILocation(line: 834, column: 9, scope: !2844)
!2871 = distinct !{!2871, !2848, !2872}
!2872 = !DILocation(line: 841, column: 9, scope: !2841)
!2873 = !DILocation(line: 842, column: 7, scope: !2823)
!2874 = !DILocation(line: 829, column: 45, scope: !2817)
!2875 = !DILocation(line: 829, column: 7, scope: !2817)
!2876 = distinct !{!2876, !2821, !2877}
!2877 = !DILocation(line: 842, column: 7, scope: !2813)
!2878 = !DILocation(line: 843, column: 7, scope: !2814)
!2879 = !DILocation(line: 845, column: 21, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 845, column: 7)
!2881 = !DILocation(line: 845, column: 7, scope: !2880)
!2882 = !DILocation(line: 845, column: 30, scope: !2880)
!2883 = !DILocation(line: 845, column: 7, scope: !2634)
!2884 = !DILocation(line: 847, column: 13, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 847, column: 7)
!2886 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 846, column: 5)
!2887 = !DILocation(line: 847, column: 12, scope: !2885)
!2888 = !DILocation(line: 847, column: 17, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 847, column: 7)
!2890 = !DILocation(line: 847, column: 31, scope: !2889)
!2891 = !DILocation(line: 847, column: 36, scope: !2889)
!2892 = !DILocation(line: 847, column: 19, scope: !2889)
!2893 = !DILocation(line: 847, column: 7, scope: !2885)
!2894 = !DILocation(line: 849, column: 28, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 848, column: 7)
!2896 = !DILocation(line: 849, column: 34, scope: !2895)
!2897 = !DILocation(line: 849, column: 39, scope: !2895)
!2898 = !DILocation(line: 849, column: 41, scope: !2895)
!2899 = !DILocation(line: 849, column: 46, scope: !2895)
!2900 = !DILocation(line: 849, column: 48, scope: !2895)
!2901 = !DILocation(line: 849, column: 47, scope: !2895)
!2902 = !DILocation(line: 849, column: 50, scope: !2895)
!2903 = !DILocation(line: 849, column: 55, scope: !2895)
!2904 = !DILocation(line: 849, column: 63, scope: !2895)
!2905 = !DILocation(line: 849, column: 11, scope: !2895)
!2906 = !DILocation(line: 849, column: 10, scope: !2895)
!2907 = !DILocation(line: 850, column: 13, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 850, column: 13)
!2909 = !DILocation(line: 850, column: 15, scope: !2908)
!2910 = !DILocation(line: 850, column: 13, scope: !2895)
!2911 = !DILocation(line: 851, column: 11, scope: !2908)
!2912 = !DILocation(line: 852, column: 15, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 852, column: 9)
!2914 = !DILocation(line: 852, column: 14, scope: !2913)
!2915 = !DILocation(line: 852, column: 19, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 852, column: 9)
!2917 = !DILocation(line: 852, column: 33, scope: !2916)
!2918 = !DILocation(line: 852, column: 38, scope: !2916)
!2919 = !DILocation(line: 852, column: 21, scope: !2916)
!2920 = !DILocation(line: 852, column: 9, scope: !2913)
!2921 = !DILocation(line: 854, column: 56, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2916, file: !3, line: 853, column: 9)
!2923 = !DILocation(line: 854, column: 62, scope: !2922)
!2924 = !DILocation(line: 854, column: 38, scope: !2922)
!2925 = !DILocation(line: 854, column: 37, scope: !2922)
!2926 = !DILocation(line: 854, column: 16, scope: !2922)
!2927 = !DILocation(line: 854, column: 13, scope: !2922)
!2928 = !DILocation(line: 854, column: 15, scope: !2922)
!2929 = !DILocation(line: 855, column: 12, scope: !2922)
!2930 = !DILocation(line: 856, column: 9, scope: !2922)
!2931 = !DILocation(line: 852, column: 46, scope: !2916)
!2932 = !DILocation(line: 852, column: 9, scope: !2916)
!2933 = distinct !{!2933, !2920, !2934}
!2934 = !DILocation(line: 856, column: 9, scope: !2913)
!2935 = !DILocation(line: 857, column: 7, scope: !2895)
!2936 = !DILocation(line: 847, column: 45, scope: !2889)
!2937 = !DILocation(line: 847, column: 7, scope: !2889)
!2938 = distinct !{!2938, !2893, !2939}
!2939 = !DILocation(line: 857, column: 7, scope: !2885)
!2940 = !DILocation(line: 858, column: 7, scope: !2886)
!2941 = !DILocation(line: 860, column: 21, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 860, column: 7)
!2943 = !DILocation(line: 860, column: 7, scope: !2942)
!2944 = !DILocation(line: 860, column: 32, scope: !2942)
!2945 = !DILocation(line: 860, column: 7, scope: !2634)
!2946 = !DILocation(line: 862, column: 13, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 862, column: 7)
!2948 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 861, column: 5)
!2949 = !DILocation(line: 862, column: 12, scope: !2947)
!2950 = !DILocation(line: 862, column: 17, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 862, column: 7)
!2952 = !DILocation(line: 862, column: 31, scope: !2951)
!2953 = !DILocation(line: 862, column: 36, scope: !2951)
!2954 = !DILocation(line: 862, column: 19, scope: !2951)
!2955 = !DILocation(line: 862, column: 7, scope: !2947)
!2956 = !DILocation(line: 864, column: 28, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 863, column: 7)
!2958 = !DILocation(line: 864, column: 34, scope: !2957)
!2959 = !DILocation(line: 864, column: 39, scope: !2957)
!2960 = !DILocation(line: 864, column: 41, scope: !2957)
!2961 = !DILocation(line: 864, column: 46, scope: !2957)
!2962 = !DILocation(line: 864, column: 48, scope: !2957)
!2963 = !DILocation(line: 864, column: 47, scope: !2957)
!2964 = !DILocation(line: 864, column: 50, scope: !2957)
!2965 = !DILocation(line: 864, column: 55, scope: !2957)
!2966 = !DILocation(line: 864, column: 63, scope: !2957)
!2967 = !DILocation(line: 864, column: 11, scope: !2957)
!2968 = !DILocation(line: 864, column: 10, scope: !2957)
!2969 = !DILocation(line: 865, column: 13, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2957, file: !3, line: 865, column: 13)
!2971 = !DILocation(line: 865, column: 15, scope: !2970)
!2972 = !DILocation(line: 865, column: 13, scope: !2957)
!2973 = !DILocation(line: 866, column: 11, scope: !2970)
!2974 = !DILocation(line: 867, column: 15, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2957, file: !3, line: 867, column: 9)
!2976 = !DILocation(line: 867, column: 14, scope: !2975)
!2977 = !DILocation(line: 867, column: 19, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 867, column: 9)
!2979 = !DILocation(line: 867, column: 33, scope: !2978)
!2980 = !DILocation(line: 867, column: 38, scope: !2978)
!2981 = !DILocation(line: 867, column: 21, scope: !2978)
!2982 = !DILocation(line: 867, column: 9, scope: !2975)
!2983 = !DILocation(line: 869, column: 38, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 868, column: 9)
!2985 = !DILocation(line: 869, column: 37, scope: !2984)
!2986 = !DILocation(line: 869, column: 16, scope: !2984)
!2987 = !DILocation(line: 869, column: 13, scope: !2984)
!2988 = !DILocation(line: 869, column: 15, scope: !2984)
!2989 = !DILocation(line: 870, column: 38, scope: !2984)
!2990 = !DILocation(line: 870, column: 37, scope: !2984)
!2991 = !DILocation(line: 870, column: 16, scope: !2984)
!2992 = !DILocation(line: 870, column: 13, scope: !2984)
!2993 = !DILocation(line: 870, column: 15, scope: !2984)
!2994 = !DILocation(line: 871, column: 38, scope: !2984)
!2995 = !DILocation(line: 871, column: 37, scope: !2984)
!2996 = !DILocation(line: 871, column: 16, scope: !2984)
!2997 = !DILocation(line: 871, column: 13, scope: !2984)
!2998 = !DILocation(line: 871, column: 15, scope: !2984)
!2999 = !DILocation(line: 872, column: 12, scope: !2984)
!3000 = !DILocation(line: 873, column: 9, scope: !2984)
!3001 = !DILocation(line: 867, column: 46, scope: !2978)
!3002 = !DILocation(line: 867, column: 9, scope: !2978)
!3003 = distinct !{!3003, !2982, !3004}
!3004 = !DILocation(line: 873, column: 9, scope: !2975)
!3005 = !DILocation(line: 874, column: 7, scope: !2957)
!3006 = !DILocation(line: 862, column: 45, scope: !2951)
!3007 = !DILocation(line: 862, column: 7, scope: !2951)
!3008 = distinct !{!3008, !2955, !3009}
!3009 = !DILocation(line: 874, column: 7, scope: !2947)
!3010 = !DILocation(line: 875, column: 7, scope: !2948)
!3011 = !DILocation(line: 877, column: 21, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 877, column: 7)
!3013 = !DILocation(line: 877, column: 7, scope: !3012)
!3014 = !DILocation(line: 877, column: 33, scope: !3012)
!3015 = !DILocation(line: 877, column: 7, scope: !2634)
!3016 = !DILocation(line: 879, column: 13, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 879, column: 7)
!3018 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 878, column: 5)
!3019 = !DILocation(line: 879, column: 12, scope: !3017)
!3020 = !DILocation(line: 879, column: 17, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 879, column: 7)
!3022 = !DILocation(line: 879, column: 31, scope: !3021)
!3023 = !DILocation(line: 879, column: 36, scope: !3021)
!3024 = !DILocation(line: 879, column: 19, scope: !3021)
!3025 = !DILocation(line: 879, column: 7, scope: !3017)
!3026 = !DILocation(line: 881, column: 28, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 880, column: 7)
!3028 = !DILocation(line: 881, column: 34, scope: !3027)
!3029 = !DILocation(line: 881, column: 39, scope: !3027)
!3030 = !DILocation(line: 881, column: 41, scope: !3027)
!3031 = !DILocation(line: 881, column: 46, scope: !3027)
!3032 = !DILocation(line: 881, column: 48, scope: !3027)
!3033 = !DILocation(line: 881, column: 47, scope: !3027)
!3034 = !DILocation(line: 881, column: 50, scope: !3027)
!3035 = !DILocation(line: 881, column: 55, scope: !3027)
!3036 = !DILocation(line: 881, column: 63, scope: !3027)
!3037 = !DILocation(line: 881, column: 11, scope: !3027)
!3038 = !DILocation(line: 881, column: 10, scope: !3027)
!3039 = !DILocation(line: 882, column: 13, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 882, column: 13)
!3041 = !DILocation(line: 882, column: 15, scope: !3040)
!3042 = !DILocation(line: 882, column: 13, scope: !3027)
!3043 = !DILocation(line: 883, column: 11, scope: !3040)
!3044 = !DILocation(line: 884, column: 15, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 884, column: 9)
!3046 = !DILocation(line: 884, column: 14, scope: !3045)
!3047 = !DILocation(line: 884, column: 19, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 884, column: 9)
!3049 = !DILocation(line: 884, column: 33, scope: !3048)
!3050 = !DILocation(line: 884, column: 38, scope: !3048)
!3051 = !DILocation(line: 884, column: 21, scope: !3048)
!3052 = !DILocation(line: 884, column: 9, scope: !3045)
!3053 = !DILocation(line: 886, column: 38, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 885, column: 9)
!3055 = !DILocation(line: 886, column: 37, scope: !3054)
!3056 = !DILocation(line: 886, column: 16, scope: !3054)
!3057 = !DILocation(line: 886, column: 13, scope: !3054)
!3058 = !DILocation(line: 886, column: 15, scope: !3054)
!3059 = !DILocation(line: 887, column: 38, scope: !3054)
!3060 = !DILocation(line: 887, column: 37, scope: !3054)
!3061 = !DILocation(line: 887, column: 16, scope: !3054)
!3062 = !DILocation(line: 887, column: 13, scope: !3054)
!3063 = !DILocation(line: 887, column: 15, scope: !3054)
!3064 = !DILocation(line: 888, column: 38, scope: !3054)
!3065 = !DILocation(line: 888, column: 37, scope: !3054)
!3066 = !DILocation(line: 888, column: 16, scope: !3054)
!3067 = !DILocation(line: 888, column: 13, scope: !3054)
!3068 = !DILocation(line: 888, column: 15, scope: !3054)
!3069 = !DILocation(line: 889, column: 38, scope: !3054)
!3070 = !DILocation(line: 889, column: 37, scope: !3054)
!3071 = !DILocation(line: 889, column: 16, scope: !3054)
!3072 = !DILocation(line: 889, column: 13, scope: !3054)
!3073 = !DILocation(line: 889, column: 15, scope: !3054)
!3074 = !DILocation(line: 890, column: 12, scope: !3054)
!3075 = !DILocation(line: 891, column: 9, scope: !3054)
!3076 = !DILocation(line: 884, column: 46, scope: !3048)
!3077 = !DILocation(line: 884, column: 9, scope: !3048)
!3078 = distinct !{!3078, !3052, !3079}
!3079 = !DILocation(line: 891, column: 9, scope: !3045)
!3080 = !DILocation(line: 892, column: 7, scope: !3027)
!3081 = !DILocation(line: 879, column: 45, scope: !3021)
!3082 = !DILocation(line: 879, column: 7, scope: !3021)
!3083 = distinct !{!3083, !3025, !3084}
!3084 = !DILocation(line: 892, column: 7, scope: !3017)
!3085 = !DILocation(line: 893, column: 7, scope: !3018)
!3086 = !DILocation(line: 895, column: 21, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 895, column: 7)
!3088 = !DILocation(line: 895, column: 7, scope: !3087)
!3089 = !DILocation(line: 895, column: 33, scope: !3087)
!3090 = !DILocation(line: 895, column: 7, scope: !2634)
!3091 = !DILocation(line: 897, column: 13, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 897, column: 7)
!3093 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 896, column: 5)
!3094 = !DILocation(line: 897, column: 12, scope: !3092)
!3095 = !DILocation(line: 897, column: 17, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 897, column: 7)
!3097 = !DILocation(line: 897, column: 31, scope: !3096)
!3098 = !DILocation(line: 897, column: 36, scope: !3096)
!3099 = !DILocation(line: 897, column: 19, scope: !3096)
!3100 = !DILocation(line: 897, column: 7, scope: !3092)
!3101 = !DILocation(line: 899, column: 28, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 898, column: 7)
!3103 = !DILocation(line: 899, column: 34, scope: !3102)
!3104 = !DILocation(line: 899, column: 39, scope: !3102)
!3105 = !DILocation(line: 899, column: 41, scope: !3102)
!3106 = !DILocation(line: 899, column: 46, scope: !3102)
!3107 = !DILocation(line: 899, column: 48, scope: !3102)
!3108 = !DILocation(line: 899, column: 47, scope: !3102)
!3109 = !DILocation(line: 899, column: 50, scope: !3102)
!3110 = !DILocation(line: 899, column: 55, scope: !3102)
!3111 = !DILocation(line: 899, column: 63, scope: !3102)
!3112 = !DILocation(line: 899, column: 11, scope: !3102)
!3113 = !DILocation(line: 899, column: 10, scope: !3102)
!3114 = !DILocation(line: 900, column: 13, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 900, column: 13)
!3116 = !DILocation(line: 900, column: 15, scope: !3115)
!3117 = !DILocation(line: 900, column: 13, scope: !3102)
!3118 = !DILocation(line: 901, column: 11, scope: !3115)
!3119 = !DILocation(line: 902, column: 15, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 902, column: 9)
!3121 = !DILocation(line: 902, column: 14, scope: !3120)
!3122 = !DILocation(line: 902, column: 19, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 902, column: 9)
!3124 = !DILocation(line: 902, column: 33, scope: !3123)
!3125 = !DILocation(line: 902, column: 38, scope: !3123)
!3126 = !DILocation(line: 902, column: 21, scope: !3123)
!3127 = !DILocation(line: 902, column: 9, scope: !3120)
!3128 = !DILocation(line: 904, column: 38, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 903, column: 9)
!3130 = !DILocation(line: 904, column: 37, scope: !3129)
!3131 = !DILocation(line: 904, column: 16, scope: !3129)
!3132 = !DILocation(line: 904, column: 13, scope: !3129)
!3133 = !DILocation(line: 904, column: 15, scope: !3129)
!3134 = !DILocation(line: 905, column: 38, scope: !3129)
!3135 = !DILocation(line: 905, column: 37, scope: !3129)
!3136 = !DILocation(line: 905, column: 16, scope: !3129)
!3137 = !DILocation(line: 905, column: 13, scope: !3129)
!3138 = !DILocation(line: 905, column: 15, scope: !3129)
!3139 = !DILocation(line: 906, column: 38, scope: !3129)
!3140 = !DILocation(line: 906, column: 37, scope: !3129)
!3141 = !DILocation(line: 906, column: 16, scope: !3129)
!3142 = !DILocation(line: 906, column: 13, scope: !3129)
!3143 = !DILocation(line: 906, column: 15, scope: !3129)
!3144 = !DILocation(line: 907, column: 13, scope: !3129)
!3145 = !DILocation(line: 907, column: 15, scope: !3129)
!3146 = !DILocation(line: 908, column: 12, scope: !3129)
!3147 = !DILocation(line: 909, column: 9, scope: !3129)
!3148 = !DILocation(line: 902, column: 46, scope: !3123)
!3149 = !DILocation(line: 902, column: 9, scope: !3123)
!3150 = distinct !{!3150, !3127, !3151}
!3151 = !DILocation(line: 909, column: 9, scope: !3120)
!3152 = !DILocation(line: 910, column: 7, scope: !3102)
!3153 = !DILocation(line: 897, column: 45, scope: !3096)
!3154 = !DILocation(line: 897, column: 7, scope: !3096)
!3155 = distinct !{!3155, !3100, !3156}
!3156 = !DILocation(line: 910, column: 7, scope: !3092)
!3157 = !DILocation(line: 911, column: 7, scope: !3093)
!3158 = !DILocation(line: 913, column: 17, scope: !2634)
!3159 = !DILocation(line: 913, column: 10, scope: !2634)
!3160 = !DILocation(line: 913, column: 9, scope: !2634)
!3161 = !DILocation(line: 914, column: 9, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 914, column: 3)
!3163 = !DILocation(line: 914, column: 8, scope: !3162)
!3164 = !DILocation(line: 914, column: 13, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 914, column: 3)
!3166 = !DILocation(line: 914, column: 27, scope: !3165)
!3167 = !DILocation(line: 914, column: 32, scope: !3165)
!3168 = !DILocation(line: 914, column: 15, scope: !3165)
!3169 = !DILocation(line: 914, column: 3, scope: !3162)
!3170 = !DILocation(line: 916, column: 24, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 915, column: 3)
!3172 = !DILocation(line: 916, column: 30, scope: !3171)
!3173 = !DILocation(line: 916, column: 35, scope: !3171)
!3174 = !DILocation(line: 916, column: 37, scope: !3171)
!3175 = !DILocation(line: 916, column: 42, scope: !3171)
!3176 = !DILocation(line: 916, column: 44, scope: !3171)
!3177 = !DILocation(line: 916, column: 43, scope: !3171)
!3178 = !DILocation(line: 916, column: 46, scope: !3171)
!3179 = !DILocation(line: 916, column: 51, scope: !3171)
!3180 = !DILocation(line: 916, column: 59, scope: !3171)
!3181 = !DILocation(line: 916, column: 7, scope: !3171)
!3182 = !DILocation(line: 916, column: 6, scope: !3171)
!3183 = !DILocation(line: 917, column: 9, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 917, column: 9)
!3185 = !DILocation(line: 917, column: 11, scope: !3184)
!3186 = !DILocation(line: 917, column: 9, scope: !3171)
!3187 = !DILocation(line: 918, column: 7, scope: !3184)
!3188 = !DILocation(line: 919, column: 34, scope: !3171)
!3189 = !DILocation(line: 919, column: 13, scope: !3171)
!3190 = !DILocation(line: 919, column: 12, scope: !3171)
!3191 = !DILocation(line: 920, column: 11, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 920, column: 5)
!3193 = !DILocation(line: 920, column: 10, scope: !3192)
!3194 = !DILocation(line: 920, column: 15, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 920, column: 5)
!3196 = !DILocation(line: 920, column: 29, scope: !3195)
!3197 = !DILocation(line: 920, column: 34, scope: !3195)
!3198 = !DILocation(line: 920, column: 17, scope: !3195)
!3199 = !DILocation(line: 920, column: 5, scope: !3192)
!3200 = !DILocalVariable(name: "i", scope: !3201, file: !3, line: 923, type: !470)
!3201 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 921, column: 5)
!3202 = !DILocation(line: 923, column: 9, scope: !3201)
!3203 = !DILocation(line: 925, column: 13, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 925, column: 7)
!3205 = !DILocation(line: 925, column: 12, scope: !3204)
!3206 = !DILocation(line: 925, column: 17, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 925, column: 7)
!3208 = !DILocation(line: 925, column: 31, scope: !3207)
!3209 = !DILocation(line: 925, column: 19, scope: !3207)
!3210 = !DILocation(line: 925, column: 7, scope: !3204)
!3211 = !DILocation(line: 927, column: 10, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 926, column: 7)
!3213 = !DILocation(line: 927, column: 11, scope: !3212)
!3214 = !DILocation(line: 928, column: 17, scope: !3212)
!3215 = !DILocation(line: 928, column: 29, scope: !3212)
!3216 = !DILocation(line: 928, column: 9, scope: !3212)
!3217 = !DILocation(line: 933, column: 38, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 932, column: 11)
!3219 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 929, column: 9)
!3220 = !DILocation(line: 933, column: 37, scope: !3218)
!3221 = !DILocation(line: 933, column: 16, scope: !3218)
!3222 = !DILocation(line: 933, column: 14, scope: !3218)
!3223 = !DILocation(line: 933, column: 15, scope: !3218)
!3224 = !DILocation(line: 934, column: 13, scope: !3218)
!3225 = !DILocation(line: 939, column: 38, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 938, column: 11)
!3227 = !DILocation(line: 939, column: 37, scope: !3226)
!3228 = !DILocation(line: 939, column: 16, scope: !3226)
!3229 = !DILocation(line: 939, column: 14, scope: !3226)
!3230 = !DILocation(line: 939, column: 15, scope: !3226)
!3231 = !DILocation(line: 940, column: 13, scope: !3226)
!3232 = !DILocation(line: 945, column: 38, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 944, column: 11)
!3234 = !DILocation(line: 945, column: 37, scope: !3233)
!3235 = !DILocation(line: 945, column: 16, scope: !3233)
!3236 = !DILocation(line: 945, column: 14, scope: !3233)
!3237 = !DILocation(line: 945, column: 15, scope: !3233)
!3238 = !DILocation(line: 946, column: 13, scope: !3233)
!3239 = !DILocation(line: 950, column: 50, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 949, column: 11)
!3241 = !DILocation(line: 950, column: 39, scope: !3240)
!3242 = !DILocation(line: 950, column: 38, scope: !3240)
!3243 = !DILocation(line: 950, column: 37, scope: !3240)
!3244 = !DILocation(line: 950, column: 16, scope: !3240)
!3245 = !DILocation(line: 950, column: 14, scope: !3240)
!3246 = !DILocation(line: 950, column: 15, scope: !3240)
!3247 = !DILocation(line: 951, column: 13, scope: !3240)
!3248 = !DILocation(line: 955, column: 38, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 954, column: 11)
!3250 = !DILocation(line: 955, column: 37, scope: !3249)
!3251 = !DILocation(line: 955, column: 16, scope: !3249)
!3252 = !DILocation(line: 955, column: 14, scope: !3249)
!3253 = !DILocation(line: 955, column: 15, scope: !3249)
!3254 = !DILocation(line: 956, column: 13, scope: !3249)
!3255 = !DILocation(line: 960, column: 17, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 960, column: 17)
!3257 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 959, column: 11)
!3258 = !DILocation(line: 960, column: 24, scope: !3256)
!3259 = !DILocation(line: 960, column: 35, scope: !3256)
!3260 = !DILocation(line: 960, column: 17, scope: !3257)
!3261 = !DILocation(line: 961, column: 40, scope: !3256)
!3262 = !DILocation(line: 961, column: 39, scope: !3256)
!3263 = !DILocation(line: 961, column: 18, scope: !3256)
!3264 = !DILocation(line: 961, column: 16, scope: !3256)
!3265 = !DILocation(line: 961, column: 17, scope: !3256)
!3266 = !DILocation(line: 961, column: 15, scope: !3256)
!3267 = !DILocation(line: 962, column: 13, scope: !3257)
!3268 = !DILocation(line: 966, column: 56, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 965, column: 11)
!3270 = !DILocation(line: 966, column: 62, scope: !3269)
!3271 = !DILocation(line: 966, column: 38, scope: !3269)
!3272 = !DILocation(line: 966, column: 37, scope: !3269)
!3273 = !DILocation(line: 966, column: 16, scope: !3269)
!3274 = !DILocation(line: 966, column: 14, scope: !3269)
!3275 = !DILocation(line: 966, column: 15, scope: !3269)
!3276 = !DILocation(line: 967, column: 13, scope: !3269)
!3277 = !DILocation(line: 970, column: 14, scope: !3219)
!3278 = !DILocation(line: 970, column: 15, scope: !3219)
!3279 = !DILocation(line: 971, column: 9, scope: !3219)
!3280 = !DILocation(line: 972, column: 10, scope: !3212)
!3281 = !DILocation(line: 973, column: 7, scope: !3212)
!3282 = !DILocation(line: 925, column: 40, scope: !3207)
!3283 = !DILocation(line: 925, column: 7, scope: !3207)
!3284 = distinct !{!3284, !3210, !3285}
!3285 = !DILocation(line: 973, column: 7, scope: !3204)
!3286 = !DILocation(line: 974, column: 8, scope: !3201)
!3287 = !DILocation(line: 975, column: 5, scope: !3201)
!3288 = !DILocation(line: 920, column: 42, scope: !3195)
!3289 = !DILocation(line: 920, column: 5, scope: !3195)
!3290 = distinct !{!3290, !3199, !3291}
!3291 = !DILocation(line: 975, column: 5, scope: !3192)
!3292 = !DILocation(line: 976, column: 3, scope: !3171)
!3293 = !DILocation(line: 914, column: 41, scope: !3165)
!3294 = !DILocation(line: 914, column: 3, scope: !3165)
!3295 = distinct !{!3295, !3169, !3296}
!3296 = !DILocation(line: 976, column: 3, scope: !3162)
!3297 = !DILocation(line: 977, column: 1, scope: !2634)
!3298 = distinct !DISubprogram(name: "ExportIntegerPixel", scope: !3, file: !3, line: 979, type: !1345, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!3299 = !DILocalVariable(name: "image", arg: 1, scope: !3298, file: !3, line: 979, type: !475)
!3300 = !DILocation(line: 979, column: 39, scope: !3298)
!3301 = !DILocalVariable(name: "roi", arg: 2, scope: !3298, file: !3, line: 979, type: !1347)
!3302 = !DILocation(line: 979, column: 66, scope: !3298)
!3303 = !DILocalVariable(name: "map", arg: 3, scope: !3298, file: !3, line: 980, type: !1349)
!3304 = !DILocation(line: 980, column: 24, scope: !3298)
!3305 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !3298, file: !3, line: 980, type: !1350)
!3306 = !DILocation(line: 980, column: 47, scope: !3298)
!3307 = !DILocalVariable(name: "pixels", arg: 5, scope: !3298, file: !3, line: 980, type: !464)
!3308 = !DILocation(line: 980, column: 65, scope: !3298)
!3309 = !DILocalVariable(name: "exception", arg: 6, scope: !3298, file: !3, line: 981, type: !1071)
!3310 = !DILocation(line: 981, column: 18, scope: !3298)
!3311 = !DILocalVariable(name: "indexes", scope: !3298, file: !3, line: 984, type: !1365)
!3312 = !DILocation(line: 984, column: 15, scope: !3298)
!3313 = !DILocalVariable(name: "p", scope: !3298, file: !3, line: 987, type: !1368)
!3314 = !DILocation(line: 987, column: 15, scope: !3298)
!3315 = !DILocalVariable(name: "x", scope: !3298, file: !3, line: 990, type: !470)
!3316 = !DILocation(line: 990, column: 5, scope: !3298)
!3317 = !DILocalVariable(name: "q", scope: !3298, file: !3, line: 993, type: !690)
!3318 = !DILocation(line: 993, column: 6, scope: !3298)
!3319 = !DILocalVariable(name: "length", scope: !3298, file: !3, line: 996, type: !454)
!3320 = !DILocation(line: 996, column: 5, scope: !3298)
!3321 = !DILocalVariable(name: "y", scope: !3298, file: !3, line: 999, type: !470)
!3322 = !DILocation(line: 999, column: 5, scope: !3298)
!3323 = !DILocation(line: 1001, column: 22, scope: !3298)
!3324 = !DILocation(line: 1001, column: 5, scope: !3298)
!3325 = !DILocation(line: 1001, column: 4, scope: !3298)
!3326 = !DILocation(line: 1002, column: 21, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 1002, column: 7)
!3328 = !DILocation(line: 1002, column: 7, scope: !3327)
!3329 = !DILocation(line: 1002, column: 32, scope: !3327)
!3330 = !DILocation(line: 1002, column: 7, scope: !3298)
!3331 = !DILocation(line: 1004, column: 13, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3333, file: !3, line: 1004, column: 7)
!3333 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 1003, column: 5)
!3334 = !DILocation(line: 1004, column: 12, scope: !3332)
!3335 = !DILocation(line: 1004, column: 17, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3332, file: !3, line: 1004, column: 7)
!3337 = !DILocation(line: 1004, column: 31, scope: !3336)
!3338 = !DILocation(line: 1004, column: 36, scope: !3336)
!3339 = !DILocation(line: 1004, column: 19, scope: !3336)
!3340 = !DILocation(line: 1004, column: 7, scope: !3332)
!3341 = !DILocation(line: 1006, column: 28, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1005, column: 7)
!3343 = !DILocation(line: 1006, column: 34, scope: !3342)
!3344 = !DILocation(line: 1006, column: 39, scope: !3342)
!3345 = !DILocation(line: 1006, column: 41, scope: !3342)
!3346 = !DILocation(line: 1006, column: 46, scope: !3342)
!3347 = !DILocation(line: 1006, column: 48, scope: !3342)
!3348 = !DILocation(line: 1006, column: 47, scope: !3342)
!3349 = !DILocation(line: 1006, column: 50, scope: !3342)
!3350 = !DILocation(line: 1006, column: 55, scope: !3342)
!3351 = !DILocation(line: 1006, column: 63, scope: !3342)
!3352 = !DILocation(line: 1006, column: 11, scope: !3342)
!3353 = !DILocation(line: 1006, column: 10, scope: !3342)
!3354 = !DILocation(line: 1007, column: 13, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1007, column: 13)
!3356 = !DILocation(line: 1007, column: 15, scope: !3355)
!3357 = !DILocation(line: 1007, column: 13, scope: !3342)
!3358 = !DILocation(line: 1008, column: 11, scope: !3355)
!3359 = !DILocation(line: 1009, column: 15, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1009, column: 9)
!3361 = !DILocation(line: 1009, column: 14, scope: !3360)
!3362 = !DILocation(line: 1009, column: 19, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 1009, column: 9)
!3364 = !DILocation(line: 1009, column: 33, scope: !3363)
!3365 = !DILocation(line: 1009, column: 38, scope: !3363)
!3366 = !DILocation(line: 1009, column: 21, scope: !3363)
!3367 = !DILocation(line: 1009, column: 9, scope: !3360)
!3368 = !DILocation(line: 1011, column: 50, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 1010, column: 9)
!3370 = !DILocation(line: 1011, column: 31, scope: !3369)
!3371 = !DILocation(line: 1011, column: 13, scope: !3369)
!3372 = !DILocation(line: 1011, column: 15, scope: !3369)
!3373 = !DILocation(line: 1012, column: 50, scope: !3369)
!3374 = !DILocation(line: 1012, column: 31, scope: !3369)
!3375 = !DILocation(line: 1012, column: 13, scope: !3369)
!3376 = !DILocation(line: 1012, column: 15, scope: !3369)
!3377 = !DILocation(line: 1013, column: 50, scope: !3369)
!3378 = !DILocation(line: 1013, column: 31, scope: !3369)
!3379 = !DILocation(line: 1013, column: 13, scope: !3369)
!3380 = !DILocation(line: 1013, column: 15, scope: !3369)
!3381 = !DILocation(line: 1014, column: 12, scope: !3369)
!3382 = !DILocation(line: 1015, column: 9, scope: !3369)
!3383 = !DILocation(line: 1009, column: 46, scope: !3363)
!3384 = !DILocation(line: 1009, column: 9, scope: !3363)
!3385 = distinct !{!3385, !3367, !3386}
!3386 = !DILocation(line: 1015, column: 9, scope: !3360)
!3387 = !DILocation(line: 1016, column: 7, scope: !3342)
!3388 = !DILocation(line: 1004, column: 45, scope: !3336)
!3389 = !DILocation(line: 1004, column: 7, scope: !3336)
!3390 = distinct !{!3390, !3340, !3391}
!3391 = !DILocation(line: 1016, column: 7, scope: !3332)
!3392 = !DILocation(line: 1017, column: 7, scope: !3333)
!3393 = !DILocation(line: 1019, column: 21, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 1019, column: 7)
!3395 = !DILocation(line: 1019, column: 7, scope: !3394)
!3396 = !DILocation(line: 1019, column: 33, scope: !3394)
!3397 = !DILocation(line: 1019, column: 7, scope: !3298)
!3398 = !DILocation(line: 1021, column: 13, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1021, column: 7)
!3400 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 1020, column: 5)
!3401 = !DILocation(line: 1021, column: 12, scope: !3399)
!3402 = !DILocation(line: 1021, column: 17, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 1021, column: 7)
!3404 = !DILocation(line: 1021, column: 31, scope: !3403)
!3405 = !DILocation(line: 1021, column: 36, scope: !3403)
!3406 = !DILocation(line: 1021, column: 19, scope: !3403)
!3407 = !DILocation(line: 1021, column: 7, scope: !3399)
!3408 = !DILocation(line: 1023, column: 28, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 1022, column: 7)
!3410 = !DILocation(line: 1023, column: 34, scope: !3409)
!3411 = !DILocation(line: 1023, column: 39, scope: !3409)
!3412 = !DILocation(line: 1023, column: 41, scope: !3409)
!3413 = !DILocation(line: 1023, column: 46, scope: !3409)
!3414 = !DILocation(line: 1023, column: 48, scope: !3409)
!3415 = !DILocation(line: 1023, column: 47, scope: !3409)
!3416 = !DILocation(line: 1023, column: 50, scope: !3409)
!3417 = !DILocation(line: 1023, column: 55, scope: !3409)
!3418 = !DILocation(line: 1023, column: 63, scope: !3409)
!3419 = !DILocation(line: 1023, column: 11, scope: !3409)
!3420 = !DILocation(line: 1023, column: 10, scope: !3409)
!3421 = !DILocation(line: 1024, column: 13, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1024, column: 13)
!3423 = !DILocation(line: 1024, column: 15, scope: !3422)
!3424 = !DILocation(line: 1024, column: 13, scope: !3409)
!3425 = !DILocation(line: 1025, column: 11, scope: !3422)
!3426 = !DILocation(line: 1026, column: 15, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1026, column: 9)
!3428 = !DILocation(line: 1026, column: 14, scope: !3427)
!3429 = !DILocation(line: 1026, column: 19, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 1026, column: 9)
!3431 = !DILocation(line: 1026, column: 33, scope: !3430)
!3432 = !DILocation(line: 1026, column: 38, scope: !3430)
!3433 = !DILocation(line: 1026, column: 21, scope: !3430)
!3434 = !DILocation(line: 1026, column: 9, scope: !3427)
!3435 = !DILocation(line: 1028, column: 50, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3430, file: !3, line: 1027, column: 9)
!3437 = !DILocation(line: 1028, column: 31, scope: !3436)
!3438 = !DILocation(line: 1028, column: 13, scope: !3436)
!3439 = !DILocation(line: 1028, column: 15, scope: !3436)
!3440 = !DILocation(line: 1029, column: 50, scope: !3436)
!3441 = !DILocation(line: 1029, column: 31, scope: !3436)
!3442 = !DILocation(line: 1029, column: 13, scope: !3436)
!3443 = !DILocation(line: 1029, column: 15, scope: !3436)
!3444 = !DILocation(line: 1030, column: 50, scope: !3436)
!3445 = !DILocation(line: 1030, column: 31, scope: !3436)
!3446 = !DILocation(line: 1030, column: 13, scope: !3436)
!3447 = !DILocation(line: 1030, column: 15, scope: !3436)
!3448 = !DILocation(line: 1032, column: 13, scope: !3436)
!3449 = !DILocation(line: 1031, column: 73, scope: !3436)
!3450 = !DILocation(line: 1031, column: 50, scope: !3436)
!3451 = !DILocation(line: 1031, column: 31, scope: !3436)
!3452 = !DILocation(line: 1031, column: 13, scope: !3436)
!3453 = !DILocation(line: 1031, column: 15, scope: !3436)
!3454 = !DILocation(line: 1033, column: 12, scope: !3436)
!3455 = !DILocation(line: 1034, column: 9, scope: !3436)
!3456 = !DILocation(line: 1026, column: 46, scope: !3430)
!3457 = !DILocation(line: 1026, column: 9, scope: !3430)
!3458 = distinct !{!3458, !3434, !3459}
!3459 = !DILocation(line: 1034, column: 9, scope: !3427)
!3460 = !DILocation(line: 1035, column: 7, scope: !3409)
!3461 = !DILocation(line: 1021, column: 45, scope: !3403)
!3462 = !DILocation(line: 1021, column: 7, scope: !3403)
!3463 = distinct !{!3463, !3407, !3464}
!3464 = !DILocation(line: 1035, column: 7, scope: !3399)
!3465 = !DILocation(line: 1036, column: 7, scope: !3400)
!3466 = !DILocation(line: 1038, column: 21, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 1038, column: 7)
!3468 = !DILocation(line: 1038, column: 7, scope: !3467)
!3469 = !DILocation(line: 1038, column: 33, scope: !3467)
!3470 = !DILocation(line: 1038, column: 7, scope: !3298)
!3471 = !DILocation(line: 1040, column: 13, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 1040, column: 7)
!3473 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 1039, column: 5)
!3474 = !DILocation(line: 1040, column: 12, scope: !3472)
!3475 = !DILocation(line: 1040, column: 17, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 1040, column: 7)
!3477 = !DILocation(line: 1040, column: 31, scope: !3476)
!3478 = !DILocation(line: 1040, column: 36, scope: !3476)
!3479 = !DILocation(line: 1040, column: 19, scope: !3476)
!3480 = !DILocation(line: 1040, column: 7, scope: !3472)
!3481 = !DILocation(line: 1042, column: 28, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 1041, column: 7)
!3483 = !DILocation(line: 1042, column: 34, scope: !3482)
!3484 = !DILocation(line: 1042, column: 39, scope: !3482)
!3485 = !DILocation(line: 1042, column: 41, scope: !3482)
!3486 = !DILocation(line: 1042, column: 46, scope: !3482)
!3487 = !DILocation(line: 1042, column: 48, scope: !3482)
!3488 = !DILocation(line: 1042, column: 47, scope: !3482)
!3489 = !DILocation(line: 1042, column: 50, scope: !3482)
!3490 = !DILocation(line: 1042, column: 55, scope: !3482)
!3491 = !DILocation(line: 1042, column: 63, scope: !3482)
!3492 = !DILocation(line: 1042, column: 11, scope: !3482)
!3493 = !DILocation(line: 1042, column: 10, scope: !3482)
!3494 = !DILocation(line: 1043, column: 13, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 1043, column: 13)
!3496 = !DILocation(line: 1043, column: 15, scope: !3495)
!3497 = !DILocation(line: 1043, column: 13, scope: !3482)
!3498 = !DILocation(line: 1044, column: 11, scope: !3495)
!3499 = !DILocation(line: 1045, column: 15, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 1045, column: 9)
!3501 = !DILocation(line: 1045, column: 14, scope: !3500)
!3502 = !DILocation(line: 1045, column: 19, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 1045, column: 9)
!3504 = !DILocation(line: 1045, column: 33, scope: !3503)
!3505 = !DILocation(line: 1045, column: 38, scope: !3503)
!3506 = !DILocation(line: 1045, column: 21, scope: !3503)
!3507 = !DILocation(line: 1045, column: 9, scope: !3500)
!3508 = !DILocation(line: 1047, column: 50, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1046, column: 9)
!3510 = !DILocation(line: 1047, column: 31, scope: !3509)
!3511 = !DILocation(line: 1047, column: 13, scope: !3509)
!3512 = !DILocation(line: 1047, column: 15, scope: !3509)
!3513 = !DILocation(line: 1048, column: 50, scope: !3509)
!3514 = !DILocation(line: 1048, column: 31, scope: !3509)
!3515 = !DILocation(line: 1048, column: 13, scope: !3509)
!3516 = !DILocation(line: 1048, column: 15, scope: !3509)
!3517 = !DILocation(line: 1049, column: 50, scope: !3509)
!3518 = !DILocation(line: 1049, column: 31, scope: !3509)
!3519 = !DILocation(line: 1049, column: 13, scope: !3509)
!3520 = !DILocation(line: 1049, column: 15, scope: !3509)
!3521 = !DILocation(line: 1050, column: 13, scope: !3509)
!3522 = !DILocation(line: 1050, column: 15, scope: !3509)
!3523 = !DILocation(line: 1051, column: 12, scope: !3509)
!3524 = !DILocation(line: 1052, column: 9, scope: !3509)
!3525 = !DILocation(line: 1045, column: 46, scope: !3503)
!3526 = !DILocation(line: 1045, column: 9, scope: !3503)
!3527 = distinct !{!3527, !3507, !3528}
!3528 = !DILocation(line: 1052, column: 9, scope: !3500)
!3529 = !DILocation(line: 1053, column: 7, scope: !3482)
!3530 = !DILocation(line: 1040, column: 45, scope: !3476)
!3531 = !DILocation(line: 1040, column: 7, scope: !3476)
!3532 = distinct !{!3532, !3480, !3533}
!3533 = !DILocation(line: 1053, column: 7, scope: !3472)
!3534 = !DILocation(line: 1054, column: 7, scope: !3473)
!3535 = !DILocation(line: 1056, column: 21, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 1056, column: 7)
!3537 = !DILocation(line: 1056, column: 7, scope: !3536)
!3538 = !DILocation(line: 1056, column: 30, scope: !3536)
!3539 = !DILocation(line: 1056, column: 7, scope: !3298)
!3540 = !DILocation(line: 1058, column: 13, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1058, column: 7)
!3542 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 1057, column: 5)
!3543 = !DILocation(line: 1058, column: 12, scope: !3541)
!3544 = !DILocation(line: 1058, column: 17, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 1058, column: 7)
!3546 = !DILocation(line: 1058, column: 31, scope: !3545)
!3547 = !DILocation(line: 1058, column: 36, scope: !3545)
!3548 = !DILocation(line: 1058, column: 19, scope: !3545)
!3549 = !DILocation(line: 1058, column: 7, scope: !3541)
!3550 = !DILocation(line: 1060, column: 28, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3545, file: !3, line: 1059, column: 7)
!3552 = !DILocation(line: 1060, column: 34, scope: !3551)
!3553 = !DILocation(line: 1060, column: 39, scope: !3551)
!3554 = !DILocation(line: 1060, column: 41, scope: !3551)
!3555 = !DILocation(line: 1060, column: 46, scope: !3551)
!3556 = !DILocation(line: 1060, column: 48, scope: !3551)
!3557 = !DILocation(line: 1060, column: 47, scope: !3551)
!3558 = !DILocation(line: 1060, column: 50, scope: !3551)
!3559 = !DILocation(line: 1060, column: 55, scope: !3551)
!3560 = !DILocation(line: 1060, column: 63, scope: !3551)
!3561 = !DILocation(line: 1060, column: 11, scope: !3551)
!3562 = !DILocation(line: 1060, column: 10, scope: !3551)
!3563 = !DILocation(line: 1061, column: 13, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 1061, column: 13)
!3565 = !DILocation(line: 1061, column: 15, scope: !3564)
!3566 = !DILocation(line: 1061, column: 13, scope: !3551)
!3567 = !DILocation(line: 1062, column: 11, scope: !3564)
!3568 = !DILocation(line: 1063, column: 15, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 1063, column: 9)
!3570 = !DILocation(line: 1063, column: 14, scope: !3569)
!3571 = !DILocation(line: 1063, column: 19, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 1063, column: 9)
!3573 = !DILocation(line: 1063, column: 33, scope: !3572)
!3574 = !DILocation(line: 1063, column: 38, scope: !3572)
!3575 = !DILocation(line: 1063, column: 21, scope: !3572)
!3576 = !DILocation(line: 1063, column: 9, scope: !3569)
!3577 = !DILocation(line: 1066, column: 31, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1064, column: 9)
!3579 = !DILocation(line: 1066, column: 37, scope: !3578)
!3580 = !DILocation(line: 1066, column: 13, scope: !3578)
!3581 = !DILocation(line: 1065, column: 50, scope: !3578)
!3582 = !DILocation(line: 1065, column: 31, scope: !3578)
!3583 = !DILocation(line: 1065, column: 13, scope: !3578)
!3584 = !DILocation(line: 1065, column: 15, scope: !3578)
!3585 = !DILocation(line: 1067, column: 12, scope: !3578)
!3586 = !DILocation(line: 1068, column: 9, scope: !3578)
!3587 = !DILocation(line: 1063, column: 46, scope: !3572)
!3588 = !DILocation(line: 1063, column: 9, scope: !3572)
!3589 = distinct !{!3589, !3576, !3590}
!3590 = !DILocation(line: 1068, column: 9, scope: !3569)
!3591 = !DILocation(line: 1069, column: 7, scope: !3551)
!3592 = !DILocation(line: 1058, column: 45, scope: !3545)
!3593 = !DILocation(line: 1058, column: 7, scope: !3545)
!3594 = distinct !{!3594, !3549, !3595}
!3595 = !DILocation(line: 1069, column: 7, scope: !3541)
!3596 = !DILocation(line: 1070, column: 7, scope: !3542)
!3597 = !DILocation(line: 1072, column: 21, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 1072, column: 7)
!3599 = !DILocation(line: 1072, column: 7, scope: !3598)
!3600 = !DILocation(line: 1072, column: 32, scope: !3598)
!3601 = !DILocation(line: 1072, column: 7, scope: !3298)
!3602 = !DILocation(line: 1074, column: 13, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !3, line: 1074, column: 7)
!3604 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 1073, column: 5)
!3605 = !DILocation(line: 1074, column: 12, scope: !3603)
!3606 = !DILocation(line: 1074, column: 17, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 1074, column: 7)
!3608 = !DILocation(line: 1074, column: 31, scope: !3607)
!3609 = !DILocation(line: 1074, column: 36, scope: !3607)
!3610 = !DILocation(line: 1074, column: 19, scope: !3607)
!3611 = !DILocation(line: 1074, column: 7, scope: !3603)
!3612 = !DILocation(line: 1076, column: 28, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 1075, column: 7)
!3614 = !DILocation(line: 1076, column: 34, scope: !3613)
!3615 = !DILocation(line: 1076, column: 39, scope: !3613)
!3616 = !DILocation(line: 1076, column: 41, scope: !3613)
!3617 = !DILocation(line: 1076, column: 46, scope: !3613)
!3618 = !DILocation(line: 1076, column: 48, scope: !3613)
!3619 = !DILocation(line: 1076, column: 47, scope: !3613)
!3620 = !DILocation(line: 1076, column: 50, scope: !3613)
!3621 = !DILocation(line: 1076, column: 55, scope: !3613)
!3622 = !DILocation(line: 1076, column: 63, scope: !3613)
!3623 = !DILocation(line: 1076, column: 11, scope: !3613)
!3624 = !DILocation(line: 1076, column: 10, scope: !3613)
!3625 = !DILocation(line: 1077, column: 13, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 1077, column: 13)
!3627 = !DILocation(line: 1077, column: 15, scope: !3626)
!3628 = !DILocation(line: 1077, column: 13, scope: !3613)
!3629 = !DILocation(line: 1078, column: 11, scope: !3626)
!3630 = !DILocation(line: 1079, column: 15, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 1079, column: 9)
!3632 = !DILocation(line: 1079, column: 14, scope: !3631)
!3633 = !DILocation(line: 1079, column: 19, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 1079, column: 9)
!3635 = !DILocation(line: 1079, column: 33, scope: !3634)
!3636 = !DILocation(line: 1079, column: 38, scope: !3634)
!3637 = !DILocation(line: 1079, column: 21, scope: !3634)
!3638 = !DILocation(line: 1079, column: 9, scope: !3631)
!3639 = !DILocation(line: 1081, column: 50, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 1080, column: 9)
!3641 = !DILocation(line: 1081, column: 31, scope: !3640)
!3642 = !DILocation(line: 1081, column: 13, scope: !3640)
!3643 = !DILocation(line: 1081, column: 15, scope: !3640)
!3644 = !DILocation(line: 1082, column: 50, scope: !3640)
!3645 = !DILocation(line: 1082, column: 31, scope: !3640)
!3646 = !DILocation(line: 1082, column: 13, scope: !3640)
!3647 = !DILocation(line: 1082, column: 15, scope: !3640)
!3648 = !DILocation(line: 1083, column: 50, scope: !3640)
!3649 = !DILocation(line: 1083, column: 31, scope: !3640)
!3650 = !DILocation(line: 1083, column: 13, scope: !3640)
!3651 = !DILocation(line: 1083, column: 15, scope: !3640)
!3652 = !DILocation(line: 1084, column: 12, scope: !3640)
!3653 = !DILocation(line: 1085, column: 9, scope: !3640)
!3654 = !DILocation(line: 1079, column: 46, scope: !3634)
!3655 = !DILocation(line: 1079, column: 9, scope: !3634)
!3656 = distinct !{!3656, !3638, !3657}
!3657 = !DILocation(line: 1085, column: 9, scope: !3631)
!3658 = !DILocation(line: 1086, column: 7, scope: !3613)
!3659 = !DILocation(line: 1074, column: 45, scope: !3607)
!3660 = !DILocation(line: 1074, column: 7, scope: !3607)
!3661 = distinct !{!3661, !3611, !3662}
!3662 = !DILocation(line: 1086, column: 7, scope: !3603)
!3663 = !DILocation(line: 1087, column: 7, scope: !3604)
!3664 = !DILocation(line: 1089, column: 21, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 1089, column: 7)
!3666 = !DILocation(line: 1089, column: 7, scope: !3665)
!3667 = !DILocation(line: 1089, column: 33, scope: !3665)
!3668 = !DILocation(line: 1089, column: 7, scope: !3298)
!3669 = !DILocation(line: 1091, column: 13, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 1091, column: 7)
!3671 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 1090, column: 5)
!3672 = !DILocation(line: 1091, column: 12, scope: !3670)
!3673 = !DILocation(line: 1091, column: 17, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3670, file: !3, line: 1091, column: 7)
!3675 = !DILocation(line: 1091, column: 31, scope: !3674)
!3676 = !DILocation(line: 1091, column: 36, scope: !3674)
!3677 = !DILocation(line: 1091, column: 19, scope: !3674)
!3678 = !DILocation(line: 1091, column: 7, scope: !3670)
!3679 = !DILocation(line: 1093, column: 28, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3674, file: !3, line: 1092, column: 7)
!3681 = !DILocation(line: 1093, column: 34, scope: !3680)
!3682 = !DILocation(line: 1093, column: 39, scope: !3680)
!3683 = !DILocation(line: 1093, column: 41, scope: !3680)
!3684 = !DILocation(line: 1093, column: 46, scope: !3680)
!3685 = !DILocation(line: 1093, column: 48, scope: !3680)
!3686 = !DILocation(line: 1093, column: 47, scope: !3680)
!3687 = !DILocation(line: 1093, column: 50, scope: !3680)
!3688 = !DILocation(line: 1093, column: 55, scope: !3680)
!3689 = !DILocation(line: 1093, column: 63, scope: !3680)
!3690 = !DILocation(line: 1093, column: 11, scope: !3680)
!3691 = !DILocation(line: 1093, column: 10, scope: !3680)
!3692 = !DILocation(line: 1094, column: 13, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 1094, column: 13)
!3694 = !DILocation(line: 1094, column: 15, scope: !3693)
!3695 = !DILocation(line: 1094, column: 13, scope: !3680)
!3696 = !DILocation(line: 1095, column: 11, scope: !3693)
!3697 = !DILocation(line: 1096, column: 15, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 1096, column: 9)
!3699 = !DILocation(line: 1096, column: 14, scope: !3698)
!3700 = !DILocation(line: 1096, column: 19, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 1096, column: 9)
!3702 = !DILocation(line: 1096, column: 33, scope: !3701)
!3703 = !DILocation(line: 1096, column: 38, scope: !3701)
!3704 = !DILocation(line: 1096, column: 21, scope: !3701)
!3705 = !DILocation(line: 1096, column: 9, scope: !3698)
!3706 = !DILocation(line: 1098, column: 50, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 1097, column: 9)
!3708 = !DILocation(line: 1098, column: 31, scope: !3707)
!3709 = !DILocation(line: 1098, column: 13, scope: !3707)
!3710 = !DILocation(line: 1098, column: 15, scope: !3707)
!3711 = !DILocation(line: 1099, column: 50, scope: !3707)
!3712 = !DILocation(line: 1099, column: 31, scope: !3707)
!3713 = !DILocation(line: 1099, column: 13, scope: !3707)
!3714 = !DILocation(line: 1099, column: 15, scope: !3707)
!3715 = !DILocation(line: 1100, column: 50, scope: !3707)
!3716 = !DILocation(line: 1100, column: 31, scope: !3707)
!3717 = !DILocation(line: 1100, column: 13, scope: !3707)
!3718 = !DILocation(line: 1100, column: 15, scope: !3707)
!3719 = !DILocation(line: 1101, column: 60, scope: !3707)
!3720 = !DILocation(line: 1101, column: 50, scope: !3707)
!3721 = !DILocation(line: 1101, column: 31, scope: !3707)
!3722 = !DILocation(line: 1101, column: 13, scope: !3707)
!3723 = !DILocation(line: 1101, column: 15, scope: !3707)
!3724 = !DILocation(line: 1102, column: 12, scope: !3707)
!3725 = !DILocation(line: 1103, column: 9, scope: !3707)
!3726 = !DILocation(line: 1096, column: 46, scope: !3701)
!3727 = !DILocation(line: 1096, column: 9, scope: !3701)
!3728 = distinct !{!3728, !3705, !3729}
!3729 = !DILocation(line: 1103, column: 9, scope: !3698)
!3730 = !DILocation(line: 1104, column: 7, scope: !3680)
!3731 = !DILocation(line: 1091, column: 45, scope: !3674)
!3732 = !DILocation(line: 1091, column: 7, scope: !3674)
!3733 = distinct !{!3733, !3678, !3734}
!3734 = !DILocation(line: 1104, column: 7, scope: !3670)
!3735 = !DILocation(line: 1105, column: 7, scope: !3671)
!3736 = !DILocation(line: 1107, column: 21, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 1107, column: 7)
!3738 = !DILocation(line: 1107, column: 7, scope: !3737)
!3739 = !DILocation(line: 1107, column: 33, scope: !3737)
!3740 = !DILocation(line: 1107, column: 7, scope: !3298)
!3741 = !DILocation(line: 1109, column: 13, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 1109, column: 7)
!3743 = distinct !DILexicalBlock(scope: !3737, file: !3, line: 1108, column: 5)
!3744 = !DILocation(line: 1109, column: 12, scope: !3742)
!3745 = !DILocation(line: 1109, column: 17, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 1109, column: 7)
!3747 = !DILocation(line: 1109, column: 31, scope: !3746)
!3748 = !DILocation(line: 1109, column: 36, scope: !3746)
!3749 = !DILocation(line: 1109, column: 19, scope: !3746)
!3750 = !DILocation(line: 1109, column: 7, scope: !3742)
!3751 = !DILocation(line: 1111, column: 28, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 1110, column: 7)
!3753 = !DILocation(line: 1111, column: 34, scope: !3752)
!3754 = !DILocation(line: 1111, column: 39, scope: !3752)
!3755 = !DILocation(line: 1111, column: 41, scope: !3752)
!3756 = !DILocation(line: 1111, column: 46, scope: !3752)
!3757 = !DILocation(line: 1111, column: 48, scope: !3752)
!3758 = !DILocation(line: 1111, column: 47, scope: !3752)
!3759 = !DILocation(line: 1111, column: 50, scope: !3752)
!3760 = !DILocation(line: 1111, column: 55, scope: !3752)
!3761 = !DILocation(line: 1111, column: 63, scope: !3752)
!3762 = !DILocation(line: 1111, column: 11, scope: !3752)
!3763 = !DILocation(line: 1111, column: 10, scope: !3752)
!3764 = !DILocation(line: 1112, column: 13, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 1112, column: 13)
!3766 = !DILocation(line: 1112, column: 15, scope: !3765)
!3767 = !DILocation(line: 1112, column: 13, scope: !3752)
!3768 = !DILocation(line: 1113, column: 11, scope: !3765)
!3769 = !DILocation(line: 1114, column: 15, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 1114, column: 9)
!3771 = !DILocation(line: 1114, column: 14, scope: !3770)
!3772 = !DILocation(line: 1114, column: 19, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 1114, column: 9)
!3774 = !DILocation(line: 1114, column: 33, scope: !3773)
!3775 = !DILocation(line: 1114, column: 38, scope: !3773)
!3776 = !DILocation(line: 1114, column: 21, scope: !3773)
!3777 = !DILocation(line: 1114, column: 9, scope: !3770)
!3778 = !DILocation(line: 1116, column: 50, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 1115, column: 9)
!3780 = !DILocation(line: 1116, column: 31, scope: !3779)
!3781 = !DILocation(line: 1116, column: 13, scope: !3779)
!3782 = !DILocation(line: 1116, column: 15, scope: !3779)
!3783 = !DILocation(line: 1117, column: 50, scope: !3779)
!3784 = !DILocation(line: 1117, column: 31, scope: !3779)
!3785 = !DILocation(line: 1117, column: 13, scope: !3779)
!3786 = !DILocation(line: 1117, column: 15, scope: !3779)
!3787 = !DILocation(line: 1118, column: 50, scope: !3779)
!3788 = !DILocation(line: 1118, column: 31, scope: !3779)
!3789 = !DILocation(line: 1118, column: 13, scope: !3779)
!3790 = !DILocation(line: 1118, column: 15, scope: !3779)
!3791 = !DILocation(line: 1119, column: 13, scope: !3779)
!3792 = !DILocation(line: 1119, column: 15, scope: !3779)
!3793 = !DILocation(line: 1120, column: 12, scope: !3779)
!3794 = !DILocation(line: 1121, column: 9, scope: !3779)
!3795 = !DILocation(line: 1114, column: 46, scope: !3773)
!3796 = !DILocation(line: 1114, column: 9, scope: !3773)
!3797 = distinct !{!3797, !3777, !3798}
!3798 = !DILocation(line: 1121, column: 9, scope: !3770)
!3799 = !DILocation(line: 1122, column: 7, scope: !3752)
!3800 = !DILocation(line: 1109, column: 45, scope: !3746)
!3801 = !DILocation(line: 1109, column: 7, scope: !3746)
!3802 = distinct !{!3802, !3750, !3803}
!3803 = !DILocation(line: 1122, column: 7, scope: !3742)
!3804 = !DILocation(line: 1123, column: 7, scope: !3743)
!3805 = !DILocation(line: 1125, column: 17, scope: !3298)
!3806 = !DILocation(line: 1125, column: 10, scope: !3298)
!3807 = !DILocation(line: 1125, column: 9, scope: !3298)
!3808 = !DILocation(line: 1126, column: 9, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3298, file: !3, line: 1126, column: 3)
!3810 = !DILocation(line: 1126, column: 8, scope: !3809)
!3811 = !DILocation(line: 1126, column: 13, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 1126, column: 3)
!3813 = !DILocation(line: 1126, column: 27, scope: !3812)
!3814 = !DILocation(line: 1126, column: 32, scope: !3812)
!3815 = !DILocation(line: 1126, column: 15, scope: !3812)
!3816 = !DILocation(line: 1126, column: 3, scope: !3809)
!3817 = !DILocation(line: 1128, column: 24, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 1127, column: 3)
!3819 = !DILocation(line: 1128, column: 30, scope: !3818)
!3820 = !DILocation(line: 1128, column: 35, scope: !3818)
!3821 = !DILocation(line: 1128, column: 37, scope: !3818)
!3822 = !DILocation(line: 1128, column: 42, scope: !3818)
!3823 = !DILocation(line: 1128, column: 44, scope: !3818)
!3824 = !DILocation(line: 1128, column: 43, scope: !3818)
!3825 = !DILocation(line: 1128, column: 46, scope: !3818)
!3826 = !DILocation(line: 1128, column: 51, scope: !3818)
!3827 = !DILocation(line: 1128, column: 59, scope: !3818)
!3828 = !DILocation(line: 1128, column: 7, scope: !3818)
!3829 = !DILocation(line: 1128, column: 6, scope: !3818)
!3830 = !DILocation(line: 1129, column: 9, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 1129, column: 9)
!3832 = !DILocation(line: 1129, column: 11, scope: !3831)
!3833 = !DILocation(line: 1129, column: 9, scope: !3818)
!3834 = !DILocation(line: 1130, column: 7, scope: !3831)
!3835 = !DILocation(line: 1131, column: 34, scope: !3818)
!3836 = !DILocation(line: 1131, column: 13, scope: !3818)
!3837 = !DILocation(line: 1131, column: 12, scope: !3818)
!3838 = !DILocation(line: 1132, column: 11, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3818, file: !3, line: 1132, column: 5)
!3840 = !DILocation(line: 1132, column: 10, scope: !3839)
!3841 = !DILocation(line: 1132, column: 15, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 1132, column: 5)
!3843 = !DILocation(line: 1132, column: 29, scope: !3842)
!3844 = !DILocation(line: 1132, column: 34, scope: !3842)
!3845 = !DILocation(line: 1132, column: 17, scope: !3842)
!3846 = !DILocation(line: 1132, column: 5, scope: !3839)
!3847 = !DILocalVariable(name: "i", scope: !3848, file: !3, line: 1135, type: !470)
!3848 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 1133, column: 5)
!3849 = !DILocation(line: 1135, column: 9, scope: !3848)
!3850 = !DILocation(line: 1137, column: 13, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1137, column: 7)
!3852 = !DILocation(line: 1137, column: 12, scope: !3851)
!3853 = !DILocation(line: 1137, column: 17, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 1137, column: 7)
!3855 = !DILocation(line: 1137, column: 31, scope: !3854)
!3856 = !DILocation(line: 1137, column: 19, scope: !3854)
!3857 = !DILocation(line: 1137, column: 7, scope: !3851)
!3858 = !DILocation(line: 1139, column: 10, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 1138, column: 7)
!3860 = !DILocation(line: 1139, column: 11, scope: !3859)
!3861 = !DILocation(line: 1140, column: 17, scope: !3859)
!3862 = !DILocation(line: 1140, column: 29, scope: !3859)
!3863 = !DILocation(line: 1140, column: 9, scope: !3859)
!3864 = !DILocation(line: 1145, column: 50, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1144, column: 11)
!3866 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 1141, column: 9)
!3867 = !DILocation(line: 1145, column: 31, scope: !3865)
!3868 = !DILocation(line: 1145, column: 14, scope: !3865)
!3869 = !DILocation(line: 1145, column: 15, scope: !3865)
!3870 = !DILocation(line: 1146, column: 13, scope: !3865)
!3871 = !DILocation(line: 1151, column: 50, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1150, column: 11)
!3873 = !DILocation(line: 1151, column: 31, scope: !3872)
!3874 = !DILocation(line: 1151, column: 14, scope: !3872)
!3875 = !DILocation(line: 1151, column: 15, scope: !3872)
!3876 = !DILocation(line: 1152, column: 13, scope: !3872)
!3877 = !DILocation(line: 1157, column: 50, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1156, column: 11)
!3879 = !DILocation(line: 1157, column: 31, scope: !3878)
!3880 = !DILocation(line: 1157, column: 14, scope: !3878)
!3881 = !DILocation(line: 1157, column: 15, scope: !3878)
!3882 = !DILocation(line: 1158, column: 13, scope: !3878)
!3883 = !DILocation(line: 1163, column: 15, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1161, column: 11)
!3885 = !DILocation(line: 1162, column: 73, scope: !3884)
!3886 = !DILocation(line: 1162, column: 50, scope: !3884)
!3887 = !DILocation(line: 1162, column: 31, scope: !3884)
!3888 = !DILocation(line: 1162, column: 14, scope: !3884)
!3889 = !DILocation(line: 1162, column: 15, scope: !3884)
!3890 = !DILocation(line: 1164, column: 13, scope: !3884)
!3891 = !DILocation(line: 1168, column: 50, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1167, column: 11)
!3893 = !DILocation(line: 1168, column: 31, scope: !3892)
!3894 = !DILocation(line: 1168, column: 14, scope: !3892)
!3895 = !DILocation(line: 1168, column: 15, scope: !3892)
!3896 = !DILocation(line: 1169, column: 13, scope: !3892)
!3897 = !DILocation(line: 1173, column: 17, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 1173, column: 17)
!3899 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1172, column: 11)
!3900 = !DILocation(line: 1173, column: 24, scope: !3898)
!3901 = !DILocation(line: 1173, column: 35, scope: !3898)
!3902 = !DILocation(line: 1173, column: 17, scope: !3899)
!3903 = !DILocation(line: 1174, column: 52, scope: !3898)
!3904 = !DILocation(line: 1174, column: 33, scope: !3898)
!3905 = !DILocation(line: 1174, column: 16, scope: !3898)
!3906 = !DILocation(line: 1174, column: 17, scope: !3898)
!3907 = !DILocation(line: 1174, column: 15, scope: !3898)
!3908 = !DILocation(line: 1175, column: 13, scope: !3899)
!3909 = !DILocation(line: 1180, column: 33, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 1178, column: 11)
!3911 = !DILocation(line: 1180, column: 39, scope: !3910)
!3912 = !DILocation(line: 1180, column: 15, scope: !3910)
!3913 = !DILocation(line: 1179, column: 50, scope: !3910)
!3914 = !DILocation(line: 1179, column: 31, scope: !3910)
!3915 = !DILocation(line: 1179, column: 14, scope: !3910)
!3916 = !DILocation(line: 1179, column: 15, scope: !3910)
!3917 = !DILocation(line: 1181, column: 13, scope: !3910)
!3918 = !DILocation(line: 1184, column: 14, scope: !3866)
!3919 = !DILocation(line: 1184, column: 15, scope: !3866)
!3920 = !DILocation(line: 1185, column: 9, scope: !3866)
!3921 = !DILocation(line: 1186, column: 10, scope: !3859)
!3922 = !DILocation(line: 1187, column: 7, scope: !3859)
!3923 = !DILocation(line: 1137, column: 40, scope: !3854)
!3924 = !DILocation(line: 1137, column: 7, scope: !3854)
!3925 = distinct !{!3925, !3857, !3926}
!3926 = !DILocation(line: 1187, column: 7, scope: !3851)
!3927 = !DILocation(line: 1188, column: 8, scope: !3848)
!3928 = !DILocation(line: 1189, column: 5, scope: !3848)
!3929 = !DILocation(line: 1132, column: 42, scope: !3842)
!3930 = !DILocation(line: 1132, column: 5, scope: !3842)
!3931 = distinct !{!3931, !3846, !3932}
!3932 = !DILocation(line: 1189, column: 5, scope: !3839)
!3933 = !DILocation(line: 1190, column: 3, scope: !3818)
!3934 = !DILocation(line: 1126, column: 41, scope: !3812)
!3935 = !DILocation(line: 1126, column: 3, scope: !3812)
!3936 = distinct !{!3936, !3816, !3937}
!3937 = !DILocation(line: 1190, column: 3, scope: !3809)
!3938 = !DILocation(line: 1191, column: 1, scope: !3298)
!3939 = distinct !DISubprogram(name: "ExportLongPixel", scope: !3, file: !3, line: 1193, type: !1345, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!3940 = !DILocalVariable(name: "image", arg: 1, scope: !3939, file: !3, line: 1193, type: !475)
!3941 = !DILocation(line: 1193, column: 36, scope: !3939)
!3942 = !DILocalVariable(name: "roi", arg: 2, scope: !3939, file: !3, line: 1193, type: !1347)
!3943 = !DILocation(line: 1193, column: 63, scope: !3939)
!3944 = !DILocalVariable(name: "map", arg: 3, scope: !3939, file: !3, line: 1194, type: !1349)
!3945 = !DILocation(line: 1194, column: 24, scope: !3939)
!3946 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !3939, file: !3, line: 1194, type: !1350)
!3947 = !DILocation(line: 1194, column: 47, scope: !3939)
!3948 = !DILocalVariable(name: "pixels", arg: 5, scope: !3939, file: !3, line: 1194, type: !464)
!3949 = !DILocation(line: 1194, column: 65, scope: !3939)
!3950 = !DILocalVariable(name: "exception", arg: 6, scope: !3939, file: !3, line: 1195, type: !1071)
!3951 = !DILocation(line: 1195, column: 18, scope: !3939)
!3952 = !DILocalVariable(name: "indexes", scope: !3939, file: !3, line: 1198, type: !1365)
!3953 = !DILocation(line: 1198, column: 15, scope: !3939)
!3954 = !DILocalVariable(name: "p", scope: !3939, file: !3, line: 1201, type: !1368)
!3955 = !DILocation(line: 1201, column: 15, scope: !3939)
!3956 = !DILocalVariable(name: "q", scope: !3939, file: !3, line: 1204, type: !690)
!3957 = !DILocation(line: 1204, column: 6, scope: !3939)
!3958 = !DILocalVariable(name: "x", scope: !3939, file: !3, line: 1207, type: !470)
!3959 = !DILocation(line: 1207, column: 5, scope: !3939)
!3960 = !DILocalVariable(name: "length", scope: !3939, file: !3, line: 1210, type: !454)
!3961 = !DILocation(line: 1210, column: 5, scope: !3939)
!3962 = !DILocalVariable(name: "y", scope: !3939, file: !3, line: 1213, type: !470)
!3963 = !DILocation(line: 1213, column: 5, scope: !3939)
!3964 = !DILocation(line: 1215, column: 22, scope: !3939)
!3965 = !DILocation(line: 1215, column: 5, scope: !3939)
!3966 = !DILocation(line: 1215, column: 4, scope: !3939)
!3967 = !DILocation(line: 1216, column: 21, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 1216, column: 7)
!3969 = !DILocation(line: 1216, column: 7, scope: !3968)
!3970 = !DILocation(line: 1216, column: 32, scope: !3968)
!3971 = !DILocation(line: 1216, column: 7, scope: !3939)
!3972 = !DILocation(line: 1218, column: 13, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 1218, column: 7)
!3974 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 1217, column: 5)
!3975 = !DILocation(line: 1218, column: 12, scope: !3973)
!3976 = !DILocation(line: 1218, column: 17, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 1218, column: 7)
!3978 = !DILocation(line: 1218, column: 31, scope: !3977)
!3979 = !DILocation(line: 1218, column: 36, scope: !3977)
!3980 = !DILocation(line: 1218, column: 19, scope: !3977)
!3981 = !DILocation(line: 1218, column: 7, scope: !3973)
!3982 = !DILocation(line: 1220, column: 28, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 1219, column: 7)
!3984 = !DILocation(line: 1220, column: 34, scope: !3983)
!3985 = !DILocation(line: 1220, column: 39, scope: !3983)
!3986 = !DILocation(line: 1220, column: 41, scope: !3983)
!3987 = !DILocation(line: 1220, column: 46, scope: !3983)
!3988 = !DILocation(line: 1220, column: 48, scope: !3983)
!3989 = !DILocation(line: 1220, column: 47, scope: !3983)
!3990 = !DILocation(line: 1220, column: 50, scope: !3983)
!3991 = !DILocation(line: 1220, column: 55, scope: !3983)
!3992 = !DILocation(line: 1220, column: 63, scope: !3983)
!3993 = !DILocation(line: 1220, column: 11, scope: !3983)
!3994 = !DILocation(line: 1220, column: 10, scope: !3983)
!3995 = !DILocation(line: 1221, column: 13, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 1221, column: 13)
!3997 = !DILocation(line: 1221, column: 15, scope: !3996)
!3998 = !DILocation(line: 1221, column: 13, scope: !3983)
!3999 = !DILocation(line: 1222, column: 11, scope: !3996)
!4000 = !DILocation(line: 1223, column: 15, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 1223, column: 9)
!4002 = !DILocation(line: 1223, column: 14, scope: !4001)
!4003 = !DILocation(line: 1223, column: 19, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 1223, column: 9)
!4005 = !DILocation(line: 1223, column: 33, scope: !4004)
!4006 = !DILocation(line: 1223, column: 38, scope: !4004)
!4007 = !DILocation(line: 1223, column: 21, scope: !4004)
!4008 = !DILocation(line: 1223, column: 9, scope: !4001)
!4009 = !DILocation(line: 1225, column: 35, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 1224, column: 9)
!4011 = !DILocation(line: 1225, column: 16, scope: !4010)
!4012 = !DILocation(line: 1225, column: 13, scope: !4010)
!4013 = !DILocation(line: 1225, column: 15, scope: !4010)
!4014 = !DILocation(line: 1226, column: 35, scope: !4010)
!4015 = !DILocation(line: 1226, column: 16, scope: !4010)
!4016 = !DILocation(line: 1226, column: 13, scope: !4010)
!4017 = !DILocation(line: 1226, column: 15, scope: !4010)
!4018 = !DILocation(line: 1227, column: 35, scope: !4010)
!4019 = !DILocation(line: 1227, column: 16, scope: !4010)
!4020 = !DILocation(line: 1227, column: 13, scope: !4010)
!4021 = !DILocation(line: 1227, column: 15, scope: !4010)
!4022 = !DILocation(line: 1228, column: 12, scope: !4010)
!4023 = !DILocation(line: 1229, column: 9, scope: !4010)
!4024 = !DILocation(line: 1223, column: 46, scope: !4004)
!4025 = !DILocation(line: 1223, column: 9, scope: !4004)
!4026 = distinct !{!4026, !4008, !4027}
!4027 = !DILocation(line: 1229, column: 9, scope: !4001)
!4028 = !DILocation(line: 1230, column: 7, scope: !3983)
!4029 = !DILocation(line: 1218, column: 45, scope: !3977)
!4030 = !DILocation(line: 1218, column: 7, scope: !3977)
!4031 = distinct !{!4031, !3981, !4032}
!4032 = !DILocation(line: 1230, column: 7, scope: !3973)
!4033 = !DILocation(line: 1231, column: 7, scope: !3974)
!4034 = !DILocation(line: 1233, column: 21, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 1233, column: 7)
!4036 = !DILocation(line: 1233, column: 7, scope: !4035)
!4037 = !DILocation(line: 1233, column: 33, scope: !4035)
!4038 = !DILocation(line: 1233, column: 7, scope: !3939)
!4039 = !DILocation(line: 1235, column: 13, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 1235, column: 7)
!4041 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 1234, column: 5)
!4042 = !DILocation(line: 1235, column: 12, scope: !4040)
!4043 = !DILocation(line: 1235, column: 17, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 1235, column: 7)
!4045 = !DILocation(line: 1235, column: 31, scope: !4044)
!4046 = !DILocation(line: 1235, column: 36, scope: !4044)
!4047 = !DILocation(line: 1235, column: 19, scope: !4044)
!4048 = !DILocation(line: 1235, column: 7, scope: !4040)
!4049 = !DILocation(line: 1237, column: 28, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1236, column: 7)
!4051 = !DILocation(line: 1237, column: 34, scope: !4050)
!4052 = !DILocation(line: 1237, column: 39, scope: !4050)
!4053 = !DILocation(line: 1237, column: 41, scope: !4050)
!4054 = !DILocation(line: 1237, column: 46, scope: !4050)
!4055 = !DILocation(line: 1237, column: 48, scope: !4050)
!4056 = !DILocation(line: 1237, column: 47, scope: !4050)
!4057 = !DILocation(line: 1237, column: 50, scope: !4050)
!4058 = !DILocation(line: 1237, column: 55, scope: !4050)
!4059 = !DILocation(line: 1237, column: 63, scope: !4050)
!4060 = !DILocation(line: 1237, column: 11, scope: !4050)
!4061 = !DILocation(line: 1237, column: 10, scope: !4050)
!4062 = !DILocation(line: 1238, column: 13, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 1238, column: 13)
!4064 = !DILocation(line: 1238, column: 15, scope: !4063)
!4065 = !DILocation(line: 1238, column: 13, scope: !4050)
!4066 = !DILocation(line: 1239, column: 11, scope: !4063)
!4067 = !DILocation(line: 1240, column: 15, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 1240, column: 9)
!4069 = !DILocation(line: 1240, column: 14, scope: !4068)
!4070 = !DILocation(line: 1240, column: 19, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 1240, column: 9)
!4072 = !DILocation(line: 1240, column: 33, scope: !4071)
!4073 = !DILocation(line: 1240, column: 38, scope: !4071)
!4074 = !DILocation(line: 1240, column: 21, scope: !4071)
!4075 = !DILocation(line: 1240, column: 9, scope: !4068)
!4076 = !DILocation(line: 1242, column: 35, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 1241, column: 9)
!4078 = !DILocation(line: 1242, column: 16, scope: !4077)
!4079 = !DILocation(line: 1242, column: 13, scope: !4077)
!4080 = !DILocation(line: 1242, column: 15, scope: !4077)
!4081 = !DILocation(line: 1243, column: 35, scope: !4077)
!4082 = !DILocation(line: 1243, column: 16, scope: !4077)
!4083 = !DILocation(line: 1243, column: 13, scope: !4077)
!4084 = !DILocation(line: 1243, column: 15, scope: !4077)
!4085 = !DILocation(line: 1244, column: 35, scope: !4077)
!4086 = !DILocation(line: 1244, column: 16, scope: !4077)
!4087 = !DILocation(line: 1244, column: 13, scope: !4077)
!4088 = !DILocation(line: 1244, column: 15, scope: !4077)
!4089 = !DILocation(line: 1245, column: 46, scope: !4077)
!4090 = !DILocation(line: 1245, column: 35, scope: !4077)
!4091 = !DILocation(line: 1245, column: 16, scope: !4077)
!4092 = !DILocation(line: 1245, column: 13, scope: !4077)
!4093 = !DILocation(line: 1245, column: 15, scope: !4077)
!4094 = !DILocation(line: 1246, column: 12, scope: !4077)
!4095 = !DILocation(line: 1247, column: 9, scope: !4077)
!4096 = !DILocation(line: 1240, column: 46, scope: !4071)
!4097 = !DILocation(line: 1240, column: 9, scope: !4071)
!4098 = distinct !{!4098, !4075, !4099}
!4099 = !DILocation(line: 1247, column: 9, scope: !4068)
!4100 = !DILocation(line: 1248, column: 7, scope: !4050)
!4101 = !DILocation(line: 1235, column: 45, scope: !4044)
!4102 = !DILocation(line: 1235, column: 7, scope: !4044)
!4103 = distinct !{!4103, !4048, !4104}
!4104 = !DILocation(line: 1248, column: 7, scope: !4040)
!4105 = !DILocation(line: 1249, column: 7, scope: !4041)
!4106 = !DILocation(line: 1251, column: 21, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 1251, column: 7)
!4108 = !DILocation(line: 1251, column: 7, scope: !4107)
!4109 = !DILocation(line: 1251, column: 33, scope: !4107)
!4110 = !DILocation(line: 1251, column: 7, scope: !3939)
!4111 = !DILocation(line: 1253, column: 13, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !3, line: 1253, column: 7)
!4113 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 1252, column: 5)
!4114 = !DILocation(line: 1253, column: 12, scope: !4112)
!4115 = !DILocation(line: 1253, column: 17, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 1253, column: 7)
!4117 = !DILocation(line: 1253, column: 31, scope: !4116)
!4118 = !DILocation(line: 1253, column: 36, scope: !4116)
!4119 = !DILocation(line: 1253, column: 19, scope: !4116)
!4120 = !DILocation(line: 1253, column: 7, scope: !4112)
!4121 = !DILocation(line: 1255, column: 28, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 1254, column: 7)
!4123 = !DILocation(line: 1255, column: 34, scope: !4122)
!4124 = !DILocation(line: 1255, column: 39, scope: !4122)
!4125 = !DILocation(line: 1255, column: 41, scope: !4122)
!4126 = !DILocation(line: 1255, column: 46, scope: !4122)
!4127 = !DILocation(line: 1255, column: 48, scope: !4122)
!4128 = !DILocation(line: 1255, column: 47, scope: !4122)
!4129 = !DILocation(line: 1255, column: 50, scope: !4122)
!4130 = !DILocation(line: 1255, column: 55, scope: !4122)
!4131 = !DILocation(line: 1255, column: 63, scope: !4122)
!4132 = !DILocation(line: 1255, column: 11, scope: !4122)
!4133 = !DILocation(line: 1255, column: 10, scope: !4122)
!4134 = !DILocation(line: 1256, column: 13, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 1256, column: 13)
!4136 = !DILocation(line: 1256, column: 15, scope: !4135)
!4137 = !DILocation(line: 1256, column: 13, scope: !4122)
!4138 = !DILocation(line: 1257, column: 11, scope: !4135)
!4139 = !DILocation(line: 1258, column: 15, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 1258, column: 9)
!4141 = !DILocation(line: 1258, column: 14, scope: !4140)
!4142 = !DILocation(line: 1258, column: 19, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 1258, column: 9)
!4144 = !DILocation(line: 1258, column: 33, scope: !4143)
!4145 = !DILocation(line: 1258, column: 38, scope: !4143)
!4146 = !DILocation(line: 1258, column: 21, scope: !4143)
!4147 = !DILocation(line: 1258, column: 9, scope: !4140)
!4148 = !DILocation(line: 1260, column: 35, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 1259, column: 9)
!4150 = !DILocation(line: 1260, column: 16, scope: !4149)
!4151 = !DILocation(line: 1260, column: 13, scope: !4149)
!4152 = !DILocation(line: 1260, column: 15, scope: !4149)
!4153 = !DILocation(line: 1261, column: 35, scope: !4149)
!4154 = !DILocation(line: 1261, column: 16, scope: !4149)
!4155 = !DILocation(line: 1261, column: 13, scope: !4149)
!4156 = !DILocation(line: 1261, column: 15, scope: !4149)
!4157 = !DILocation(line: 1262, column: 35, scope: !4149)
!4158 = !DILocation(line: 1262, column: 16, scope: !4149)
!4159 = !DILocation(line: 1262, column: 13, scope: !4149)
!4160 = !DILocation(line: 1262, column: 15, scope: !4149)
!4161 = !DILocation(line: 1263, column: 13, scope: !4149)
!4162 = !DILocation(line: 1263, column: 15, scope: !4149)
!4163 = !DILocation(line: 1264, column: 12, scope: !4149)
!4164 = !DILocation(line: 1265, column: 9, scope: !4149)
!4165 = !DILocation(line: 1258, column: 46, scope: !4143)
!4166 = !DILocation(line: 1258, column: 9, scope: !4143)
!4167 = distinct !{!4167, !4147, !4168}
!4168 = !DILocation(line: 1265, column: 9, scope: !4140)
!4169 = !DILocation(line: 1266, column: 7, scope: !4122)
!4170 = !DILocation(line: 1253, column: 45, scope: !4116)
!4171 = !DILocation(line: 1253, column: 7, scope: !4116)
!4172 = distinct !{!4172, !4120, !4173}
!4173 = !DILocation(line: 1266, column: 7, scope: !4112)
!4174 = !DILocation(line: 1267, column: 7, scope: !4113)
!4175 = !DILocation(line: 1269, column: 21, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 1269, column: 7)
!4177 = !DILocation(line: 1269, column: 7, scope: !4176)
!4178 = !DILocation(line: 1269, column: 30, scope: !4176)
!4179 = !DILocation(line: 1269, column: 7, scope: !3939)
!4180 = !DILocation(line: 1271, column: 13, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 1271, column: 7)
!4182 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 1270, column: 5)
!4183 = !DILocation(line: 1271, column: 12, scope: !4181)
!4184 = !DILocation(line: 1271, column: 17, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4181, file: !3, line: 1271, column: 7)
!4186 = !DILocation(line: 1271, column: 31, scope: !4185)
!4187 = !DILocation(line: 1271, column: 36, scope: !4185)
!4188 = !DILocation(line: 1271, column: 19, scope: !4185)
!4189 = !DILocation(line: 1271, column: 7, scope: !4181)
!4190 = !DILocation(line: 1273, column: 28, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 1272, column: 7)
!4192 = !DILocation(line: 1273, column: 34, scope: !4191)
!4193 = !DILocation(line: 1273, column: 39, scope: !4191)
!4194 = !DILocation(line: 1273, column: 41, scope: !4191)
!4195 = !DILocation(line: 1273, column: 46, scope: !4191)
!4196 = !DILocation(line: 1273, column: 48, scope: !4191)
!4197 = !DILocation(line: 1273, column: 47, scope: !4191)
!4198 = !DILocation(line: 1273, column: 50, scope: !4191)
!4199 = !DILocation(line: 1273, column: 55, scope: !4191)
!4200 = !DILocation(line: 1273, column: 63, scope: !4191)
!4201 = !DILocation(line: 1273, column: 11, scope: !4191)
!4202 = !DILocation(line: 1273, column: 10, scope: !4191)
!4203 = !DILocation(line: 1274, column: 13, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 1274, column: 13)
!4205 = !DILocation(line: 1274, column: 15, scope: !4204)
!4206 = !DILocation(line: 1274, column: 13, scope: !4191)
!4207 = !DILocation(line: 1275, column: 11, scope: !4204)
!4208 = !DILocation(line: 1276, column: 15, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 1276, column: 9)
!4210 = !DILocation(line: 1276, column: 14, scope: !4209)
!4211 = !DILocation(line: 1276, column: 19, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 1276, column: 9)
!4213 = !DILocation(line: 1276, column: 33, scope: !4212)
!4214 = !DILocation(line: 1276, column: 38, scope: !4212)
!4215 = !DILocation(line: 1276, column: 21, scope: !4212)
!4216 = !DILocation(line: 1276, column: 9, scope: !4209)
!4217 = !DILocation(line: 1278, column: 68, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1277, column: 9)
!4219 = !DILocation(line: 1278, column: 74, scope: !4218)
!4220 = !DILocation(line: 1278, column: 50, scope: !4218)
!4221 = !DILocation(line: 1278, column: 35, scope: !4218)
!4222 = !DILocation(line: 1278, column: 16, scope: !4218)
!4223 = !DILocation(line: 1278, column: 13, scope: !4218)
!4224 = !DILocation(line: 1278, column: 15, scope: !4218)
!4225 = !DILocation(line: 1279, column: 12, scope: !4218)
!4226 = !DILocation(line: 1280, column: 9, scope: !4218)
!4227 = !DILocation(line: 1276, column: 46, scope: !4212)
!4228 = !DILocation(line: 1276, column: 9, scope: !4212)
!4229 = distinct !{!4229, !4216, !4230}
!4230 = !DILocation(line: 1280, column: 9, scope: !4209)
!4231 = !DILocation(line: 1281, column: 7, scope: !4191)
!4232 = !DILocation(line: 1271, column: 45, scope: !4185)
!4233 = !DILocation(line: 1271, column: 7, scope: !4185)
!4234 = distinct !{!4234, !4189, !4235}
!4235 = !DILocation(line: 1281, column: 7, scope: !4181)
!4236 = !DILocation(line: 1282, column: 7, scope: !4182)
!4237 = !DILocation(line: 1284, column: 21, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 1284, column: 7)
!4239 = !DILocation(line: 1284, column: 7, scope: !4238)
!4240 = !DILocation(line: 1284, column: 32, scope: !4238)
!4241 = !DILocation(line: 1284, column: 7, scope: !3939)
!4242 = !DILocation(line: 1286, column: 13, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 1286, column: 7)
!4244 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 1285, column: 5)
!4245 = !DILocation(line: 1286, column: 12, scope: !4243)
!4246 = !DILocation(line: 1286, column: 17, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 1286, column: 7)
!4248 = !DILocation(line: 1286, column: 31, scope: !4247)
!4249 = !DILocation(line: 1286, column: 36, scope: !4247)
!4250 = !DILocation(line: 1286, column: 19, scope: !4247)
!4251 = !DILocation(line: 1286, column: 7, scope: !4243)
!4252 = !DILocation(line: 1288, column: 28, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 1287, column: 7)
!4254 = !DILocation(line: 1288, column: 34, scope: !4253)
!4255 = !DILocation(line: 1288, column: 39, scope: !4253)
!4256 = !DILocation(line: 1288, column: 41, scope: !4253)
!4257 = !DILocation(line: 1288, column: 46, scope: !4253)
!4258 = !DILocation(line: 1288, column: 48, scope: !4253)
!4259 = !DILocation(line: 1288, column: 47, scope: !4253)
!4260 = !DILocation(line: 1288, column: 50, scope: !4253)
!4261 = !DILocation(line: 1288, column: 55, scope: !4253)
!4262 = !DILocation(line: 1288, column: 63, scope: !4253)
!4263 = !DILocation(line: 1288, column: 11, scope: !4253)
!4264 = !DILocation(line: 1288, column: 10, scope: !4253)
!4265 = !DILocation(line: 1289, column: 13, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 1289, column: 13)
!4267 = !DILocation(line: 1289, column: 15, scope: !4266)
!4268 = !DILocation(line: 1289, column: 13, scope: !4253)
!4269 = !DILocation(line: 1290, column: 11, scope: !4266)
!4270 = !DILocation(line: 1291, column: 15, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 1291, column: 9)
!4272 = !DILocation(line: 1291, column: 14, scope: !4271)
!4273 = !DILocation(line: 1291, column: 19, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 1291, column: 9)
!4275 = !DILocation(line: 1291, column: 33, scope: !4274)
!4276 = !DILocation(line: 1291, column: 38, scope: !4274)
!4277 = !DILocation(line: 1291, column: 21, scope: !4274)
!4278 = !DILocation(line: 1291, column: 9, scope: !4271)
!4279 = !DILocation(line: 1293, column: 35, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 1292, column: 9)
!4281 = !DILocation(line: 1293, column: 16, scope: !4280)
!4282 = !DILocation(line: 1293, column: 13, scope: !4280)
!4283 = !DILocation(line: 1293, column: 15, scope: !4280)
!4284 = !DILocation(line: 1294, column: 35, scope: !4280)
!4285 = !DILocation(line: 1294, column: 16, scope: !4280)
!4286 = !DILocation(line: 1294, column: 13, scope: !4280)
!4287 = !DILocation(line: 1294, column: 15, scope: !4280)
!4288 = !DILocation(line: 1295, column: 35, scope: !4280)
!4289 = !DILocation(line: 1295, column: 16, scope: !4280)
!4290 = !DILocation(line: 1295, column: 13, scope: !4280)
!4291 = !DILocation(line: 1295, column: 15, scope: !4280)
!4292 = !DILocation(line: 1296, column: 12, scope: !4280)
!4293 = !DILocation(line: 1297, column: 9, scope: !4280)
!4294 = !DILocation(line: 1291, column: 46, scope: !4274)
!4295 = !DILocation(line: 1291, column: 9, scope: !4274)
!4296 = distinct !{!4296, !4278, !4297}
!4297 = !DILocation(line: 1297, column: 9, scope: !4271)
!4298 = !DILocation(line: 1298, column: 7, scope: !4253)
!4299 = !DILocation(line: 1286, column: 45, scope: !4247)
!4300 = !DILocation(line: 1286, column: 7, scope: !4247)
!4301 = distinct !{!4301, !4251, !4302}
!4302 = !DILocation(line: 1298, column: 7, scope: !4243)
!4303 = !DILocation(line: 1299, column: 7, scope: !4244)
!4304 = !DILocation(line: 1301, column: 21, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 1301, column: 7)
!4306 = !DILocation(line: 1301, column: 7, scope: !4305)
!4307 = !DILocation(line: 1301, column: 33, scope: !4305)
!4308 = !DILocation(line: 1301, column: 7, scope: !3939)
!4309 = !DILocation(line: 1303, column: 13, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 1303, column: 7)
!4311 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 1302, column: 5)
!4312 = !DILocation(line: 1303, column: 12, scope: !4310)
!4313 = !DILocation(line: 1303, column: 17, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 1303, column: 7)
!4315 = !DILocation(line: 1303, column: 31, scope: !4314)
!4316 = !DILocation(line: 1303, column: 36, scope: !4314)
!4317 = !DILocation(line: 1303, column: 19, scope: !4314)
!4318 = !DILocation(line: 1303, column: 7, scope: !4310)
!4319 = !DILocation(line: 1305, column: 28, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 1304, column: 7)
!4321 = !DILocation(line: 1305, column: 34, scope: !4320)
!4322 = !DILocation(line: 1305, column: 39, scope: !4320)
!4323 = !DILocation(line: 1305, column: 41, scope: !4320)
!4324 = !DILocation(line: 1305, column: 46, scope: !4320)
!4325 = !DILocation(line: 1305, column: 48, scope: !4320)
!4326 = !DILocation(line: 1305, column: 47, scope: !4320)
!4327 = !DILocation(line: 1305, column: 50, scope: !4320)
!4328 = !DILocation(line: 1305, column: 55, scope: !4320)
!4329 = !DILocation(line: 1305, column: 63, scope: !4320)
!4330 = !DILocation(line: 1305, column: 11, scope: !4320)
!4331 = !DILocation(line: 1305, column: 10, scope: !4320)
!4332 = !DILocation(line: 1306, column: 13, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 1306, column: 13)
!4334 = !DILocation(line: 1306, column: 15, scope: !4333)
!4335 = !DILocation(line: 1306, column: 13, scope: !4320)
!4336 = !DILocation(line: 1307, column: 11, scope: !4333)
!4337 = !DILocation(line: 1308, column: 15, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 1308, column: 9)
!4339 = !DILocation(line: 1308, column: 14, scope: !4338)
!4340 = !DILocation(line: 1308, column: 19, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1308, column: 9)
!4342 = !DILocation(line: 1308, column: 33, scope: !4341)
!4343 = !DILocation(line: 1308, column: 38, scope: !4341)
!4344 = !DILocation(line: 1308, column: 21, scope: !4341)
!4345 = !DILocation(line: 1308, column: 9, scope: !4338)
!4346 = !DILocation(line: 1310, column: 35, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1309, column: 9)
!4348 = !DILocation(line: 1310, column: 16, scope: !4347)
!4349 = !DILocation(line: 1310, column: 13, scope: !4347)
!4350 = !DILocation(line: 1310, column: 15, scope: !4347)
!4351 = !DILocation(line: 1311, column: 35, scope: !4347)
!4352 = !DILocation(line: 1311, column: 16, scope: !4347)
!4353 = !DILocation(line: 1311, column: 13, scope: !4347)
!4354 = !DILocation(line: 1311, column: 15, scope: !4347)
!4355 = !DILocation(line: 1312, column: 35, scope: !4347)
!4356 = !DILocation(line: 1312, column: 16, scope: !4347)
!4357 = !DILocation(line: 1312, column: 13, scope: !4347)
!4358 = !DILocation(line: 1312, column: 15, scope: !4347)
!4359 = !DILocation(line: 1313, column: 46, scope: !4347)
!4360 = !DILocation(line: 1313, column: 35, scope: !4347)
!4361 = !DILocation(line: 1313, column: 16, scope: !4347)
!4362 = !DILocation(line: 1313, column: 13, scope: !4347)
!4363 = !DILocation(line: 1313, column: 15, scope: !4347)
!4364 = !DILocation(line: 1314, column: 12, scope: !4347)
!4365 = !DILocation(line: 1315, column: 9, scope: !4347)
!4366 = !DILocation(line: 1308, column: 46, scope: !4341)
!4367 = !DILocation(line: 1308, column: 9, scope: !4341)
!4368 = distinct !{!4368, !4345, !4369}
!4369 = !DILocation(line: 1315, column: 9, scope: !4338)
!4370 = !DILocation(line: 1316, column: 7, scope: !4320)
!4371 = !DILocation(line: 1303, column: 45, scope: !4314)
!4372 = !DILocation(line: 1303, column: 7, scope: !4314)
!4373 = distinct !{!4373, !4318, !4374}
!4374 = !DILocation(line: 1316, column: 7, scope: !4310)
!4375 = !DILocation(line: 1317, column: 7, scope: !4311)
!4376 = !DILocation(line: 1319, column: 21, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 1319, column: 7)
!4378 = !DILocation(line: 1319, column: 7, scope: !4377)
!4379 = !DILocation(line: 1319, column: 33, scope: !4377)
!4380 = !DILocation(line: 1319, column: 7, scope: !3939)
!4381 = !DILocation(line: 1321, column: 13, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 1321, column: 7)
!4383 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 1320, column: 5)
!4384 = !DILocation(line: 1321, column: 12, scope: !4382)
!4385 = !DILocation(line: 1321, column: 17, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 1321, column: 7)
!4387 = !DILocation(line: 1321, column: 31, scope: !4386)
!4388 = !DILocation(line: 1321, column: 36, scope: !4386)
!4389 = !DILocation(line: 1321, column: 19, scope: !4386)
!4390 = !DILocation(line: 1321, column: 7, scope: !4382)
!4391 = !DILocation(line: 1323, column: 28, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 1322, column: 7)
!4393 = !DILocation(line: 1323, column: 34, scope: !4392)
!4394 = !DILocation(line: 1323, column: 39, scope: !4392)
!4395 = !DILocation(line: 1323, column: 41, scope: !4392)
!4396 = !DILocation(line: 1323, column: 46, scope: !4392)
!4397 = !DILocation(line: 1323, column: 48, scope: !4392)
!4398 = !DILocation(line: 1323, column: 47, scope: !4392)
!4399 = !DILocation(line: 1323, column: 50, scope: !4392)
!4400 = !DILocation(line: 1323, column: 55, scope: !4392)
!4401 = !DILocation(line: 1323, column: 63, scope: !4392)
!4402 = !DILocation(line: 1323, column: 11, scope: !4392)
!4403 = !DILocation(line: 1323, column: 10, scope: !4392)
!4404 = !DILocation(line: 1324, column: 13, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 1324, column: 13)
!4406 = !DILocation(line: 1324, column: 15, scope: !4405)
!4407 = !DILocation(line: 1324, column: 13, scope: !4392)
!4408 = !DILocation(line: 1325, column: 11, scope: !4405)
!4409 = !DILocation(line: 1326, column: 15, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 1326, column: 9)
!4411 = !DILocation(line: 1326, column: 14, scope: !4410)
!4412 = !DILocation(line: 1326, column: 19, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 1326, column: 9)
!4414 = !DILocation(line: 1326, column: 33, scope: !4413)
!4415 = !DILocation(line: 1326, column: 38, scope: !4413)
!4416 = !DILocation(line: 1326, column: 21, scope: !4413)
!4417 = !DILocation(line: 1326, column: 9, scope: !4410)
!4418 = !DILocation(line: 1328, column: 35, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 1327, column: 9)
!4420 = !DILocation(line: 1328, column: 16, scope: !4419)
!4421 = !DILocation(line: 1328, column: 13, scope: !4419)
!4422 = !DILocation(line: 1328, column: 15, scope: !4419)
!4423 = !DILocation(line: 1329, column: 35, scope: !4419)
!4424 = !DILocation(line: 1329, column: 16, scope: !4419)
!4425 = !DILocation(line: 1329, column: 13, scope: !4419)
!4426 = !DILocation(line: 1329, column: 15, scope: !4419)
!4427 = !DILocation(line: 1330, column: 35, scope: !4419)
!4428 = !DILocation(line: 1330, column: 16, scope: !4419)
!4429 = !DILocation(line: 1330, column: 13, scope: !4419)
!4430 = !DILocation(line: 1330, column: 15, scope: !4419)
!4431 = !DILocation(line: 1331, column: 13, scope: !4419)
!4432 = !DILocation(line: 1331, column: 15, scope: !4419)
!4433 = !DILocation(line: 1332, column: 12, scope: !4419)
!4434 = !DILocation(line: 1333, column: 9, scope: !4419)
!4435 = !DILocation(line: 1326, column: 46, scope: !4413)
!4436 = !DILocation(line: 1326, column: 9, scope: !4413)
!4437 = distinct !{!4437, !4417, !4438}
!4438 = !DILocation(line: 1333, column: 9, scope: !4410)
!4439 = !DILocation(line: 1334, column: 7, scope: !4392)
!4440 = !DILocation(line: 1321, column: 45, scope: !4386)
!4441 = !DILocation(line: 1321, column: 7, scope: !4386)
!4442 = distinct !{!4442, !4390, !4443}
!4443 = !DILocation(line: 1334, column: 7, scope: !4382)
!4444 = !DILocation(line: 1335, column: 7, scope: !4383)
!4445 = !DILocation(line: 1337, column: 17, scope: !3939)
!4446 = !DILocation(line: 1337, column: 10, scope: !3939)
!4447 = !DILocation(line: 1337, column: 9, scope: !3939)
!4448 = !DILocation(line: 1338, column: 9, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 1338, column: 3)
!4450 = !DILocation(line: 1338, column: 8, scope: !4449)
!4451 = !DILocation(line: 1338, column: 13, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 1338, column: 3)
!4453 = !DILocation(line: 1338, column: 27, scope: !4452)
!4454 = !DILocation(line: 1338, column: 32, scope: !4452)
!4455 = !DILocation(line: 1338, column: 15, scope: !4452)
!4456 = !DILocation(line: 1338, column: 3, scope: !4449)
!4457 = !DILocation(line: 1340, column: 24, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 1339, column: 3)
!4459 = !DILocation(line: 1340, column: 30, scope: !4458)
!4460 = !DILocation(line: 1340, column: 35, scope: !4458)
!4461 = !DILocation(line: 1340, column: 37, scope: !4458)
!4462 = !DILocation(line: 1340, column: 42, scope: !4458)
!4463 = !DILocation(line: 1340, column: 44, scope: !4458)
!4464 = !DILocation(line: 1340, column: 43, scope: !4458)
!4465 = !DILocation(line: 1340, column: 46, scope: !4458)
!4466 = !DILocation(line: 1340, column: 51, scope: !4458)
!4467 = !DILocation(line: 1340, column: 59, scope: !4458)
!4468 = !DILocation(line: 1340, column: 7, scope: !4458)
!4469 = !DILocation(line: 1340, column: 6, scope: !4458)
!4470 = !DILocation(line: 1341, column: 9, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 1341, column: 9)
!4472 = !DILocation(line: 1341, column: 11, scope: !4471)
!4473 = !DILocation(line: 1341, column: 9, scope: !4458)
!4474 = !DILocation(line: 1342, column: 7, scope: !4471)
!4475 = !DILocation(line: 1343, column: 34, scope: !4458)
!4476 = !DILocation(line: 1343, column: 13, scope: !4458)
!4477 = !DILocation(line: 1343, column: 12, scope: !4458)
!4478 = !DILocation(line: 1344, column: 11, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 1344, column: 5)
!4480 = !DILocation(line: 1344, column: 10, scope: !4479)
!4481 = !DILocation(line: 1344, column: 15, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 1344, column: 5)
!4483 = !DILocation(line: 1344, column: 29, scope: !4482)
!4484 = !DILocation(line: 1344, column: 34, scope: !4482)
!4485 = !DILocation(line: 1344, column: 17, scope: !4482)
!4486 = !DILocation(line: 1344, column: 5, scope: !4479)
!4487 = !DILocalVariable(name: "i", scope: !4488, file: !3, line: 1347, type: !470)
!4488 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 1345, column: 5)
!4489 = !DILocation(line: 1347, column: 9, scope: !4488)
!4490 = !DILocation(line: 1349, column: 13, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 1349, column: 7)
!4492 = !DILocation(line: 1349, column: 12, scope: !4491)
!4493 = !DILocation(line: 1349, column: 17, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 1349, column: 7)
!4495 = !DILocation(line: 1349, column: 31, scope: !4494)
!4496 = !DILocation(line: 1349, column: 19, scope: !4494)
!4497 = !DILocation(line: 1349, column: 7, scope: !4491)
!4498 = !DILocation(line: 1351, column: 10, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 1350, column: 7)
!4500 = !DILocation(line: 1351, column: 11, scope: !4499)
!4501 = !DILocation(line: 1352, column: 17, scope: !4499)
!4502 = !DILocation(line: 1352, column: 29, scope: !4499)
!4503 = !DILocation(line: 1352, column: 9, scope: !4499)
!4504 = !DILocation(line: 1357, column: 35, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 1356, column: 11)
!4506 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 1353, column: 9)
!4507 = !DILocation(line: 1357, column: 16, scope: !4505)
!4508 = !DILocation(line: 1357, column: 14, scope: !4505)
!4509 = !DILocation(line: 1357, column: 15, scope: !4505)
!4510 = !DILocation(line: 1358, column: 13, scope: !4505)
!4511 = !DILocation(line: 1363, column: 35, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 1362, column: 11)
!4513 = !DILocation(line: 1363, column: 16, scope: !4512)
!4514 = !DILocation(line: 1363, column: 14, scope: !4512)
!4515 = !DILocation(line: 1363, column: 15, scope: !4512)
!4516 = !DILocation(line: 1364, column: 13, scope: !4512)
!4517 = !DILocation(line: 1369, column: 35, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 1368, column: 11)
!4519 = !DILocation(line: 1369, column: 16, scope: !4518)
!4520 = !DILocation(line: 1369, column: 14, scope: !4518)
!4521 = !DILocation(line: 1369, column: 15, scope: !4518)
!4522 = !DILocation(line: 1370, column: 13, scope: !4518)
!4523 = !DILocation(line: 1374, column: 45, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 1373, column: 11)
!4525 = !DILocation(line: 1374, column: 35, scope: !4524)
!4526 = !DILocation(line: 1374, column: 16, scope: !4524)
!4527 = !DILocation(line: 1374, column: 14, scope: !4524)
!4528 = !DILocation(line: 1374, column: 15, scope: !4524)
!4529 = !DILocation(line: 1375, column: 13, scope: !4524)
!4530 = !DILocation(line: 1379, column: 35, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 1378, column: 11)
!4532 = !DILocation(line: 1379, column: 16, scope: !4531)
!4533 = !DILocation(line: 1379, column: 14, scope: !4531)
!4534 = !DILocation(line: 1379, column: 15, scope: !4531)
!4535 = !DILocation(line: 1380, column: 13, scope: !4531)
!4536 = !DILocation(line: 1384, column: 17, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 1384, column: 17)
!4538 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 1383, column: 11)
!4539 = !DILocation(line: 1384, column: 24, scope: !4537)
!4540 = !DILocation(line: 1384, column: 35, scope: !4537)
!4541 = !DILocation(line: 1384, column: 17, scope: !4538)
!4542 = !DILocation(line: 1385, column: 37, scope: !4537)
!4543 = !DILocation(line: 1385, column: 18, scope: !4537)
!4544 = !DILocation(line: 1385, column: 16, scope: !4537)
!4545 = !DILocation(line: 1385, column: 17, scope: !4537)
!4546 = !DILocation(line: 1385, column: 15, scope: !4537)
!4547 = !DILocation(line: 1386, column: 13, scope: !4538)
!4548 = !DILocation(line: 1390, column: 68, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 1389, column: 11)
!4550 = !DILocation(line: 1390, column: 74, scope: !4549)
!4551 = !DILocation(line: 1390, column: 50, scope: !4549)
!4552 = !DILocation(line: 1390, column: 35, scope: !4549)
!4553 = !DILocation(line: 1390, column: 16, scope: !4549)
!4554 = !DILocation(line: 1390, column: 14, scope: !4549)
!4555 = !DILocation(line: 1390, column: 15, scope: !4549)
!4556 = !DILocation(line: 1391, column: 13, scope: !4549)
!4557 = !DILocation(line: 1394, column: 13, scope: !4506)
!4558 = !DILocation(line: 1396, column: 10, scope: !4499)
!4559 = !DILocation(line: 1397, column: 7, scope: !4499)
!4560 = !DILocation(line: 1349, column: 40, scope: !4494)
!4561 = !DILocation(line: 1349, column: 7, scope: !4494)
!4562 = distinct !{!4562, !4497, !4563}
!4563 = !DILocation(line: 1397, column: 7, scope: !4491)
!4564 = !DILocation(line: 1398, column: 8, scope: !4488)
!4565 = !DILocation(line: 1399, column: 5, scope: !4488)
!4566 = !DILocation(line: 1344, column: 42, scope: !4482)
!4567 = !DILocation(line: 1344, column: 5, scope: !4482)
!4568 = distinct !{!4568, !4486, !4569}
!4569 = !DILocation(line: 1399, column: 5, scope: !4479)
!4570 = !DILocation(line: 1400, column: 3, scope: !4458)
!4571 = !DILocation(line: 1338, column: 41, scope: !4452)
!4572 = !DILocation(line: 1338, column: 3, scope: !4452)
!4573 = distinct !{!4573, !4456, !4574}
!4574 = !DILocation(line: 1400, column: 3, scope: !4449)
!4575 = !DILocation(line: 1401, column: 1, scope: !3939)
!4576 = distinct !DISubprogram(name: "ExportQuantumPixel", scope: !3, file: !3, line: 1403, type: !1345, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!4577 = !DILocalVariable(name: "image", arg: 1, scope: !4576, file: !3, line: 1403, type: !475)
!4578 = !DILocation(line: 1403, column: 39, scope: !4576)
!4579 = !DILocalVariable(name: "roi", arg: 2, scope: !4576, file: !3, line: 1403, type: !1347)
!4580 = !DILocation(line: 1403, column: 66, scope: !4576)
!4581 = !DILocalVariable(name: "map", arg: 3, scope: !4576, file: !3, line: 1404, type: !1349)
!4582 = !DILocation(line: 1404, column: 24, scope: !4576)
!4583 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !4576, file: !3, line: 1404, type: !1350)
!4584 = !DILocation(line: 1404, column: 47, scope: !4576)
!4585 = !DILocalVariable(name: "pixels", arg: 5, scope: !4576, file: !3, line: 1404, type: !464)
!4586 = !DILocation(line: 1404, column: 65, scope: !4576)
!4587 = !DILocalVariable(name: "exception", arg: 6, scope: !4576, file: !3, line: 1405, type: !1071)
!4588 = !DILocation(line: 1405, column: 18, scope: !4576)
!4589 = !DILocalVariable(name: "indexes", scope: !4576, file: !3, line: 1408, type: !1365)
!4590 = !DILocation(line: 1408, column: 15, scope: !4576)
!4591 = !DILocalVariable(name: "p", scope: !4576, file: !3, line: 1411, type: !1368)
!4592 = !DILocation(line: 1411, column: 15, scope: !4576)
!4593 = !DILocalVariable(name: "q", scope: !4576, file: !3, line: 1414, type: !691)
!4594 = !DILocation(line: 1414, column: 6, scope: !4576)
!4595 = !DILocalVariable(name: "x", scope: !4576, file: !3, line: 1417, type: !470)
!4596 = !DILocation(line: 1417, column: 5, scope: !4576)
!4597 = !DILocalVariable(name: "length", scope: !4576, file: !3, line: 1420, type: !454)
!4598 = !DILocation(line: 1420, column: 5, scope: !4576)
!4599 = !DILocalVariable(name: "y", scope: !4576, file: !3, line: 1423, type: !470)
!4600 = !DILocation(line: 1423, column: 5, scope: !4576)
!4601 = !DILocation(line: 1425, column: 17, scope: !4576)
!4602 = !DILocation(line: 1425, column: 5, scope: !4576)
!4603 = !DILocation(line: 1425, column: 4, scope: !4576)
!4604 = !DILocation(line: 1426, column: 21, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1426, column: 7)
!4606 = !DILocation(line: 1426, column: 7, scope: !4605)
!4607 = !DILocation(line: 1426, column: 32, scope: !4605)
!4608 = !DILocation(line: 1426, column: 7, scope: !4576)
!4609 = !DILocation(line: 1428, column: 13, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 1428, column: 7)
!4611 = distinct !DILexicalBlock(scope: !4605, file: !3, line: 1427, column: 5)
!4612 = !DILocation(line: 1428, column: 12, scope: !4610)
!4613 = !DILocation(line: 1428, column: 17, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 1428, column: 7)
!4615 = !DILocation(line: 1428, column: 31, scope: !4614)
!4616 = !DILocation(line: 1428, column: 36, scope: !4614)
!4617 = !DILocation(line: 1428, column: 19, scope: !4614)
!4618 = !DILocation(line: 1428, column: 7, scope: !4610)
!4619 = !DILocation(line: 1430, column: 28, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 1429, column: 7)
!4621 = !DILocation(line: 1430, column: 34, scope: !4620)
!4622 = !DILocation(line: 1430, column: 39, scope: !4620)
!4623 = !DILocation(line: 1430, column: 41, scope: !4620)
!4624 = !DILocation(line: 1430, column: 46, scope: !4620)
!4625 = !DILocation(line: 1430, column: 48, scope: !4620)
!4626 = !DILocation(line: 1430, column: 47, scope: !4620)
!4627 = !DILocation(line: 1430, column: 50, scope: !4620)
!4628 = !DILocation(line: 1430, column: 55, scope: !4620)
!4629 = !DILocation(line: 1430, column: 63, scope: !4620)
!4630 = !DILocation(line: 1430, column: 11, scope: !4620)
!4631 = !DILocation(line: 1430, column: 10, scope: !4620)
!4632 = !DILocation(line: 1431, column: 13, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 1431, column: 13)
!4634 = !DILocation(line: 1431, column: 15, scope: !4633)
!4635 = !DILocation(line: 1431, column: 13, scope: !4620)
!4636 = !DILocation(line: 1432, column: 11, scope: !4633)
!4637 = !DILocation(line: 1433, column: 15, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 1433, column: 9)
!4639 = !DILocation(line: 1433, column: 14, scope: !4638)
!4640 = !DILocation(line: 1433, column: 19, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1433, column: 9)
!4642 = !DILocation(line: 1433, column: 33, scope: !4641)
!4643 = !DILocation(line: 1433, column: 38, scope: !4641)
!4644 = !DILocation(line: 1433, column: 21, scope: !4641)
!4645 = !DILocation(line: 1433, column: 9, scope: !4638)
!4646 = !DILocation(line: 1435, column: 16, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 1434, column: 9)
!4648 = !DILocation(line: 1435, column: 13, scope: !4647)
!4649 = !DILocation(line: 1435, column: 15, scope: !4647)
!4650 = !DILocation(line: 1436, column: 16, scope: !4647)
!4651 = !DILocation(line: 1436, column: 13, scope: !4647)
!4652 = !DILocation(line: 1436, column: 15, scope: !4647)
!4653 = !DILocation(line: 1437, column: 16, scope: !4647)
!4654 = !DILocation(line: 1437, column: 13, scope: !4647)
!4655 = !DILocation(line: 1437, column: 15, scope: !4647)
!4656 = !DILocation(line: 1438, column: 12, scope: !4647)
!4657 = !DILocation(line: 1439, column: 9, scope: !4647)
!4658 = !DILocation(line: 1433, column: 46, scope: !4641)
!4659 = !DILocation(line: 1433, column: 9, scope: !4641)
!4660 = distinct !{!4660, !4645, !4661}
!4661 = !DILocation(line: 1439, column: 9, scope: !4638)
!4662 = !DILocation(line: 1440, column: 7, scope: !4620)
!4663 = !DILocation(line: 1428, column: 45, scope: !4614)
!4664 = !DILocation(line: 1428, column: 7, scope: !4614)
!4665 = distinct !{!4665, !4618, !4666}
!4666 = !DILocation(line: 1440, column: 7, scope: !4610)
!4667 = !DILocation(line: 1441, column: 7, scope: !4611)
!4668 = !DILocation(line: 1443, column: 21, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1443, column: 7)
!4670 = !DILocation(line: 1443, column: 7, scope: !4669)
!4671 = !DILocation(line: 1443, column: 33, scope: !4669)
!4672 = !DILocation(line: 1443, column: 7, scope: !4576)
!4673 = !DILocation(line: 1445, column: 13, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1445, column: 7)
!4675 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 1444, column: 5)
!4676 = !DILocation(line: 1445, column: 12, scope: !4674)
!4677 = !DILocation(line: 1445, column: 17, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 1445, column: 7)
!4679 = !DILocation(line: 1445, column: 31, scope: !4678)
!4680 = !DILocation(line: 1445, column: 36, scope: !4678)
!4681 = !DILocation(line: 1445, column: 19, scope: !4678)
!4682 = !DILocation(line: 1445, column: 7, scope: !4674)
!4683 = !DILocation(line: 1447, column: 28, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 1446, column: 7)
!4685 = !DILocation(line: 1447, column: 34, scope: !4684)
!4686 = !DILocation(line: 1447, column: 39, scope: !4684)
!4687 = !DILocation(line: 1447, column: 41, scope: !4684)
!4688 = !DILocation(line: 1447, column: 46, scope: !4684)
!4689 = !DILocation(line: 1447, column: 48, scope: !4684)
!4690 = !DILocation(line: 1447, column: 47, scope: !4684)
!4691 = !DILocation(line: 1447, column: 50, scope: !4684)
!4692 = !DILocation(line: 1447, column: 55, scope: !4684)
!4693 = !DILocation(line: 1447, column: 63, scope: !4684)
!4694 = !DILocation(line: 1447, column: 11, scope: !4684)
!4695 = !DILocation(line: 1447, column: 10, scope: !4684)
!4696 = !DILocation(line: 1448, column: 13, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 1448, column: 13)
!4698 = !DILocation(line: 1448, column: 15, scope: !4697)
!4699 = !DILocation(line: 1448, column: 13, scope: !4684)
!4700 = !DILocation(line: 1449, column: 11, scope: !4697)
!4701 = !DILocation(line: 1450, column: 15, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 1450, column: 9)
!4703 = !DILocation(line: 1450, column: 14, scope: !4702)
!4704 = !DILocation(line: 1450, column: 19, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 1450, column: 9)
!4706 = !DILocation(line: 1450, column: 33, scope: !4705)
!4707 = !DILocation(line: 1450, column: 38, scope: !4705)
!4708 = !DILocation(line: 1450, column: 21, scope: !4705)
!4709 = !DILocation(line: 1450, column: 9, scope: !4702)
!4710 = !DILocation(line: 1452, column: 16, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1451, column: 9)
!4712 = !DILocation(line: 1452, column: 13, scope: !4711)
!4713 = !DILocation(line: 1452, column: 15, scope: !4711)
!4714 = !DILocation(line: 1453, column: 16, scope: !4711)
!4715 = !DILocation(line: 1453, column: 13, scope: !4711)
!4716 = !DILocation(line: 1453, column: 15, scope: !4711)
!4717 = !DILocation(line: 1454, column: 16, scope: !4711)
!4718 = !DILocation(line: 1454, column: 13, scope: !4711)
!4719 = !DILocation(line: 1454, column: 15, scope: !4711)
!4720 = !DILocation(line: 1455, column: 26, scope: !4711)
!4721 = !DILocation(line: 1455, column: 16, scope: !4711)
!4722 = !DILocation(line: 1455, column: 13, scope: !4711)
!4723 = !DILocation(line: 1455, column: 15, scope: !4711)
!4724 = !DILocation(line: 1456, column: 12, scope: !4711)
!4725 = !DILocation(line: 1457, column: 9, scope: !4711)
!4726 = !DILocation(line: 1450, column: 46, scope: !4705)
!4727 = !DILocation(line: 1450, column: 9, scope: !4705)
!4728 = distinct !{!4728, !4709, !4729}
!4729 = !DILocation(line: 1457, column: 9, scope: !4702)
!4730 = !DILocation(line: 1458, column: 7, scope: !4684)
!4731 = !DILocation(line: 1445, column: 45, scope: !4678)
!4732 = !DILocation(line: 1445, column: 7, scope: !4678)
!4733 = distinct !{!4733, !4682, !4734}
!4734 = !DILocation(line: 1458, column: 7, scope: !4674)
!4735 = !DILocation(line: 1459, column: 7, scope: !4675)
!4736 = !DILocation(line: 1461, column: 21, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1461, column: 7)
!4738 = !DILocation(line: 1461, column: 7, scope: !4737)
!4739 = !DILocation(line: 1461, column: 33, scope: !4737)
!4740 = !DILocation(line: 1461, column: 7, scope: !4576)
!4741 = !DILocation(line: 1463, column: 13, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 1463, column: 7)
!4743 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 1462, column: 5)
!4744 = !DILocation(line: 1463, column: 12, scope: !4742)
!4745 = !DILocation(line: 1463, column: 17, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 1463, column: 7)
!4747 = !DILocation(line: 1463, column: 31, scope: !4746)
!4748 = !DILocation(line: 1463, column: 36, scope: !4746)
!4749 = !DILocation(line: 1463, column: 19, scope: !4746)
!4750 = !DILocation(line: 1463, column: 7, scope: !4742)
!4751 = !DILocation(line: 1465, column: 28, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 1464, column: 7)
!4753 = !DILocation(line: 1465, column: 34, scope: !4752)
!4754 = !DILocation(line: 1465, column: 39, scope: !4752)
!4755 = !DILocation(line: 1465, column: 41, scope: !4752)
!4756 = !DILocation(line: 1465, column: 46, scope: !4752)
!4757 = !DILocation(line: 1465, column: 48, scope: !4752)
!4758 = !DILocation(line: 1465, column: 47, scope: !4752)
!4759 = !DILocation(line: 1465, column: 50, scope: !4752)
!4760 = !DILocation(line: 1465, column: 55, scope: !4752)
!4761 = !DILocation(line: 1465, column: 63, scope: !4752)
!4762 = !DILocation(line: 1465, column: 11, scope: !4752)
!4763 = !DILocation(line: 1465, column: 10, scope: !4752)
!4764 = !DILocation(line: 1466, column: 13, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 1466, column: 13)
!4766 = !DILocation(line: 1466, column: 15, scope: !4765)
!4767 = !DILocation(line: 1466, column: 13, scope: !4752)
!4768 = !DILocation(line: 1467, column: 11, scope: !4765)
!4769 = !DILocation(line: 1468, column: 15, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 1468, column: 9)
!4771 = !DILocation(line: 1468, column: 14, scope: !4770)
!4772 = !DILocation(line: 1468, column: 19, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 1468, column: 9)
!4774 = !DILocation(line: 1468, column: 33, scope: !4773)
!4775 = !DILocation(line: 1468, column: 38, scope: !4773)
!4776 = !DILocation(line: 1468, column: 21, scope: !4773)
!4777 = !DILocation(line: 1468, column: 9, scope: !4770)
!4778 = !DILocation(line: 1470, column: 16, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 1469, column: 9)
!4780 = !DILocation(line: 1470, column: 13, scope: !4779)
!4781 = !DILocation(line: 1470, column: 15, scope: !4779)
!4782 = !DILocation(line: 1471, column: 16, scope: !4779)
!4783 = !DILocation(line: 1471, column: 13, scope: !4779)
!4784 = !DILocation(line: 1471, column: 15, scope: !4779)
!4785 = !DILocation(line: 1472, column: 16, scope: !4779)
!4786 = !DILocation(line: 1472, column: 13, scope: !4779)
!4787 = !DILocation(line: 1472, column: 15, scope: !4779)
!4788 = !DILocation(line: 1473, column: 13, scope: !4779)
!4789 = !DILocation(line: 1473, column: 15, scope: !4779)
!4790 = !DILocation(line: 1474, column: 12, scope: !4779)
!4791 = !DILocation(line: 1475, column: 9, scope: !4779)
!4792 = !DILocation(line: 1468, column: 46, scope: !4773)
!4793 = !DILocation(line: 1468, column: 9, scope: !4773)
!4794 = distinct !{!4794, !4777, !4795}
!4795 = !DILocation(line: 1475, column: 9, scope: !4770)
!4796 = !DILocation(line: 1476, column: 7, scope: !4752)
!4797 = !DILocation(line: 1463, column: 45, scope: !4746)
!4798 = !DILocation(line: 1463, column: 7, scope: !4746)
!4799 = distinct !{!4799, !4750, !4800}
!4800 = !DILocation(line: 1476, column: 7, scope: !4742)
!4801 = !DILocation(line: 1477, column: 7, scope: !4743)
!4802 = !DILocation(line: 1479, column: 21, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1479, column: 7)
!4804 = !DILocation(line: 1479, column: 7, scope: !4803)
!4805 = !DILocation(line: 1479, column: 30, scope: !4803)
!4806 = !DILocation(line: 1479, column: 7, scope: !4576)
!4807 = !DILocation(line: 1481, column: 13, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 1481, column: 7)
!4809 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 1480, column: 5)
!4810 = !DILocation(line: 1481, column: 12, scope: !4808)
!4811 = !DILocation(line: 1481, column: 17, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 1481, column: 7)
!4813 = !DILocation(line: 1481, column: 31, scope: !4812)
!4814 = !DILocation(line: 1481, column: 36, scope: !4812)
!4815 = !DILocation(line: 1481, column: 19, scope: !4812)
!4816 = !DILocation(line: 1481, column: 7, scope: !4808)
!4817 = !DILocation(line: 1483, column: 28, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 1482, column: 7)
!4819 = !DILocation(line: 1483, column: 34, scope: !4818)
!4820 = !DILocation(line: 1483, column: 39, scope: !4818)
!4821 = !DILocation(line: 1483, column: 41, scope: !4818)
!4822 = !DILocation(line: 1483, column: 46, scope: !4818)
!4823 = !DILocation(line: 1483, column: 48, scope: !4818)
!4824 = !DILocation(line: 1483, column: 47, scope: !4818)
!4825 = !DILocation(line: 1483, column: 50, scope: !4818)
!4826 = !DILocation(line: 1483, column: 55, scope: !4818)
!4827 = !DILocation(line: 1483, column: 63, scope: !4818)
!4828 = !DILocation(line: 1483, column: 11, scope: !4818)
!4829 = !DILocation(line: 1483, column: 10, scope: !4818)
!4830 = !DILocation(line: 1484, column: 13, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1484, column: 13)
!4832 = !DILocation(line: 1484, column: 15, scope: !4831)
!4833 = !DILocation(line: 1484, column: 13, scope: !4818)
!4834 = !DILocation(line: 1485, column: 11, scope: !4831)
!4835 = !DILocation(line: 1486, column: 15, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1486, column: 9)
!4837 = !DILocation(line: 1486, column: 14, scope: !4836)
!4838 = !DILocation(line: 1486, column: 19, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 1486, column: 9)
!4840 = !DILocation(line: 1486, column: 33, scope: !4839)
!4841 = !DILocation(line: 1486, column: 38, scope: !4839)
!4842 = !DILocation(line: 1486, column: 21, scope: !4839)
!4843 = !DILocation(line: 1486, column: 9, scope: !4836)
!4844 = !DILocation(line: 1488, column: 49, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 1487, column: 9)
!4846 = !DILocation(line: 1488, column: 55, scope: !4845)
!4847 = !DILocation(line: 1488, column: 31, scope: !4845)
!4848 = !DILocation(line: 1488, column: 16, scope: !4845)
!4849 = !DILocation(line: 1488, column: 13, scope: !4845)
!4850 = !DILocation(line: 1488, column: 15, scope: !4845)
!4851 = !DILocation(line: 1489, column: 12, scope: !4845)
!4852 = !DILocation(line: 1490, column: 9, scope: !4845)
!4853 = !DILocation(line: 1486, column: 46, scope: !4839)
!4854 = !DILocation(line: 1486, column: 9, scope: !4839)
!4855 = distinct !{!4855, !4843, !4856}
!4856 = !DILocation(line: 1490, column: 9, scope: !4836)
!4857 = !DILocation(line: 1491, column: 7, scope: !4818)
!4858 = !DILocation(line: 1481, column: 45, scope: !4812)
!4859 = !DILocation(line: 1481, column: 7, scope: !4812)
!4860 = distinct !{!4860, !4816, !4861}
!4861 = !DILocation(line: 1491, column: 7, scope: !4808)
!4862 = !DILocation(line: 1492, column: 7, scope: !4809)
!4863 = !DILocation(line: 1494, column: 21, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1494, column: 7)
!4865 = !DILocation(line: 1494, column: 7, scope: !4864)
!4866 = !DILocation(line: 1494, column: 32, scope: !4864)
!4867 = !DILocation(line: 1494, column: 7, scope: !4576)
!4868 = !DILocation(line: 1496, column: 13, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 1496, column: 7)
!4870 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1495, column: 5)
!4871 = !DILocation(line: 1496, column: 12, scope: !4869)
!4872 = !DILocation(line: 1496, column: 17, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 1496, column: 7)
!4874 = !DILocation(line: 1496, column: 31, scope: !4873)
!4875 = !DILocation(line: 1496, column: 36, scope: !4873)
!4876 = !DILocation(line: 1496, column: 19, scope: !4873)
!4877 = !DILocation(line: 1496, column: 7, scope: !4869)
!4878 = !DILocation(line: 1498, column: 28, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 1497, column: 7)
!4880 = !DILocation(line: 1498, column: 34, scope: !4879)
!4881 = !DILocation(line: 1498, column: 39, scope: !4879)
!4882 = !DILocation(line: 1498, column: 41, scope: !4879)
!4883 = !DILocation(line: 1498, column: 46, scope: !4879)
!4884 = !DILocation(line: 1498, column: 48, scope: !4879)
!4885 = !DILocation(line: 1498, column: 47, scope: !4879)
!4886 = !DILocation(line: 1498, column: 50, scope: !4879)
!4887 = !DILocation(line: 1498, column: 55, scope: !4879)
!4888 = !DILocation(line: 1498, column: 63, scope: !4879)
!4889 = !DILocation(line: 1498, column: 11, scope: !4879)
!4890 = !DILocation(line: 1498, column: 10, scope: !4879)
!4891 = !DILocation(line: 1499, column: 13, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1499, column: 13)
!4893 = !DILocation(line: 1499, column: 15, scope: !4892)
!4894 = !DILocation(line: 1499, column: 13, scope: !4879)
!4895 = !DILocation(line: 1500, column: 11, scope: !4892)
!4896 = !DILocation(line: 1501, column: 15, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 1501, column: 9)
!4898 = !DILocation(line: 1501, column: 14, scope: !4897)
!4899 = !DILocation(line: 1501, column: 19, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 1501, column: 9)
!4901 = !DILocation(line: 1501, column: 33, scope: !4900)
!4902 = !DILocation(line: 1501, column: 38, scope: !4900)
!4903 = !DILocation(line: 1501, column: 21, scope: !4900)
!4904 = !DILocation(line: 1501, column: 9, scope: !4897)
!4905 = !DILocation(line: 1503, column: 16, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 1502, column: 9)
!4907 = !DILocation(line: 1503, column: 13, scope: !4906)
!4908 = !DILocation(line: 1503, column: 15, scope: !4906)
!4909 = !DILocation(line: 1504, column: 16, scope: !4906)
!4910 = !DILocation(line: 1504, column: 13, scope: !4906)
!4911 = !DILocation(line: 1504, column: 15, scope: !4906)
!4912 = !DILocation(line: 1505, column: 16, scope: !4906)
!4913 = !DILocation(line: 1505, column: 13, scope: !4906)
!4914 = !DILocation(line: 1505, column: 15, scope: !4906)
!4915 = !DILocation(line: 1506, column: 12, scope: !4906)
!4916 = !DILocation(line: 1507, column: 9, scope: !4906)
!4917 = !DILocation(line: 1501, column: 46, scope: !4900)
!4918 = !DILocation(line: 1501, column: 9, scope: !4900)
!4919 = distinct !{!4919, !4904, !4920}
!4920 = !DILocation(line: 1507, column: 9, scope: !4897)
!4921 = !DILocation(line: 1508, column: 7, scope: !4879)
!4922 = !DILocation(line: 1496, column: 45, scope: !4873)
!4923 = !DILocation(line: 1496, column: 7, scope: !4873)
!4924 = distinct !{!4924, !4877, !4925}
!4925 = !DILocation(line: 1508, column: 7, scope: !4869)
!4926 = !DILocation(line: 1509, column: 7, scope: !4870)
!4927 = !DILocation(line: 1511, column: 21, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1511, column: 7)
!4929 = !DILocation(line: 1511, column: 7, scope: !4928)
!4930 = !DILocation(line: 1511, column: 33, scope: !4928)
!4931 = !DILocation(line: 1511, column: 7, scope: !4576)
!4932 = !DILocation(line: 1513, column: 13, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 1513, column: 7)
!4934 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 1512, column: 5)
!4935 = !DILocation(line: 1513, column: 12, scope: !4933)
!4936 = !DILocation(line: 1513, column: 17, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 1513, column: 7)
!4938 = !DILocation(line: 1513, column: 31, scope: !4937)
!4939 = !DILocation(line: 1513, column: 36, scope: !4937)
!4940 = !DILocation(line: 1513, column: 19, scope: !4937)
!4941 = !DILocation(line: 1513, column: 7, scope: !4933)
!4942 = !DILocation(line: 1515, column: 28, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 1514, column: 7)
!4944 = !DILocation(line: 1515, column: 34, scope: !4943)
!4945 = !DILocation(line: 1515, column: 39, scope: !4943)
!4946 = !DILocation(line: 1515, column: 41, scope: !4943)
!4947 = !DILocation(line: 1515, column: 46, scope: !4943)
!4948 = !DILocation(line: 1515, column: 48, scope: !4943)
!4949 = !DILocation(line: 1515, column: 47, scope: !4943)
!4950 = !DILocation(line: 1515, column: 50, scope: !4943)
!4951 = !DILocation(line: 1515, column: 55, scope: !4943)
!4952 = !DILocation(line: 1515, column: 63, scope: !4943)
!4953 = !DILocation(line: 1515, column: 11, scope: !4943)
!4954 = !DILocation(line: 1515, column: 10, scope: !4943)
!4955 = !DILocation(line: 1516, column: 13, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 1516, column: 13)
!4957 = !DILocation(line: 1516, column: 15, scope: !4956)
!4958 = !DILocation(line: 1516, column: 13, scope: !4943)
!4959 = !DILocation(line: 1517, column: 11, scope: !4956)
!4960 = !DILocation(line: 1518, column: 15, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 1518, column: 9)
!4962 = !DILocation(line: 1518, column: 14, scope: !4961)
!4963 = !DILocation(line: 1518, column: 19, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 1518, column: 9)
!4965 = !DILocation(line: 1518, column: 33, scope: !4964)
!4966 = !DILocation(line: 1518, column: 38, scope: !4964)
!4967 = !DILocation(line: 1518, column: 21, scope: !4964)
!4968 = !DILocation(line: 1518, column: 9, scope: !4961)
!4969 = !DILocation(line: 1520, column: 16, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1519, column: 9)
!4971 = !DILocation(line: 1520, column: 13, scope: !4970)
!4972 = !DILocation(line: 1520, column: 15, scope: !4970)
!4973 = !DILocation(line: 1521, column: 16, scope: !4970)
!4974 = !DILocation(line: 1521, column: 13, scope: !4970)
!4975 = !DILocation(line: 1521, column: 15, scope: !4970)
!4976 = !DILocation(line: 1522, column: 16, scope: !4970)
!4977 = !DILocation(line: 1522, column: 13, scope: !4970)
!4978 = !DILocation(line: 1522, column: 15, scope: !4970)
!4979 = !DILocation(line: 1523, column: 26, scope: !4970)
!4980 = !DILocation(line: 1523, column: 16, scope: !4970)
!4981 = !DILocation(line: 1523, column: 13, scope: !4970)
!4982 = !DILocation(line: 1523, column: 15, scope: !4970)
!4983 = !DILocation(line: 1524, column: 12, scope: !4970)
!4984 = !DILocation(line: 1525, column: 9, scope: !4970)
!4985 = !DILocation(line: 1518, column: 46, scope: !4964)
!4986 = !DILocation(line: 1518, column: 9, scope: !4964)
!4987 = distinct !{!4987, !4968, !4988}
!4988 = !DILocation(line: 1525, column: 9, scope: !4961)
!4989 = !DILocation(line: 1526, column: 7, scope: !4943)
!4990 = !DILocation(line: 1513, column: 45, scope: !4937)
!4991 = !DILocation(line: 1513, column: 7, scope: !4937)
!4992 = distinct !{!4992, !4941, !4993}
!4993 = !DILocation(line: 1526, column: 7, scope: !4933)
!4994 = !DILocation(line: 1527, column: 7, scope: !4934)
!4995 = !DILocation(line: 1529, column: 21, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1529, column: 7)
!4997 = !DILocation(line: 1529, column: 7, scope: !4996)
!4998 = !DILocation(line: 1529, column: 33, scope: !4996)
!4999 = !DILocation(line: 1529, column: 7, scope: !4576)
!5000 = !DILocation(line: 1531, column: 13, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 1531, column: 7)
!5002 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 1530, column: 5)
!5003 = !DILocation(line: 1531, column: 12, scope: !5001)
!5004 = !DILocation(line: 1531, column: 17, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1531, column: 7)
!5006 = !DILocation(line: 1531, column: 31, scope: !5005)
!5007 = !DILocation(line: 1531, column: 36, scope: !5005)
!5008 = !DILocation(line: 1531, column: 19, scope: !5005)
!5009 = !DILocation(line: 1531, column: 7, scope: !5001)
!5010 = !DILocation(line: 1533, column: 28, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1532, column: 7)
!5012 = !DILocation(line: 1533, column: 34, scope: !5011)
!5013 = !DILocation(line: 1533, column: 39, scope: !5011)
!5014 = !DILocation(line: 1533, column: 41, scope: !5011)
!5015 = !DILocation(line: 1533, column: 46, scope: !5011)
!5016 = !DILocation(line: 1533, column: 48, scope: !5011)
!5017 = !DILocation(line: 1533, column: 47, scope: !5011)
!5018 = !DILocation(line: 1533, column: 50, scope: !5011)
!5019 = !DILocation(line: 1533, column: 55, scope: !5011)
!5020 = !DILocation(line: 1533, column: 63, scope: !5011)
!5021 = !DILocation(line: 1533, column: 11, scope: !5011)
!5022 = !DILocation(line: 1533, column: 10, scope: !5011)
!5023 = !DILocation(line: 1534, column: 13, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 1534, column: 13)
!5025 = !DILocation(line: 1534, column: 15, scope: !5024)
!5026 = !DILocation(line: 1534, column: 13, scope: !5011)
!5027 = !DILocation(line: 1535, column: 11, scope: !5024)
!5028 = !DILocation(line: 1536, column: 15, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 1536, column: 9)
!5030 = !DILocation(line: 1536, column: 14, scope: !5029)
!5031 = !DILocation(line: 1536, column: 19, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 1536, column: 9)
!5033 = !DILocation(line: 1536, column: 33, scope: !5032)
!5034 = !DILocation(line: 1536, column: 38, scope: !5032)
!5035 = !DILocation(line: 1536, column: 21, scope: !5032)
!5036 = !DILocation(line: 1536, column: 9, scope: !5029)
!5037 = !DILocation(line: 1538, column: 16, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 1537, column: 9)
!5039 = !DILocation(line: 1538, column: 13, scope: !5038)
!5040 = !DILocation(line: 1538, column: 15, scope: !5038)
!5041 = !DILocation(line: 1539, column: 16, scope: !5038)
!5042 = !DILocation(line: 1539, column: 13, scope: !5038)
!5043 = !DILocation(line: 1539, column: 15, scope: !5038)
!5044 = !DILocation(line: 1540, column: 16, scope: !5038)
!5045 = !DILocation(line: 1540, column: 13, scope: !5038)
!5046 = !DILocation(line: 1540, column: 15, scope: !5038)
!5047 = !DILocation(line: 1541, column: 13, scope: !5038)
!5048 = !DILocation(line: 1541, column: 15, scope: !5038)
!5049 = !DILocation(line: 1542, column: 12, scope: !5038)
!5050 = !DILocation(line: 1543, column: 9, scope: !5038)
!5051 = !DILocation(line: 1536, column: 46, scope: !5032)
!5052 = !DILocation(line: 1536, column: 9, scope: !5032)
!5053 = distinct !{!5053, !5036, !5054}
!5054 = !DILocation(line: 1543, column: 9, scope: !5029)
!5055 = !DILocation(line: 1544, column: 7, scope: !5011)
!5056 = !DILocation(line: 1531, column: 45, scope: !5005)
!5057 = !DILocation(line: 1531, column: 7, scope: !5005)
!5058 = distinct !{!5058, !5009, !5059}
!5059 = !DILocation(line: 1544, column: 7, scope: !5001)
!5060 = !DILocation(line: 1545, column: 7, scope: !5002)
!5061 = !DILocation(line: 1547, column: 17, scope: !4576)
!5062 = !DILocation(line: 1547, column: 10, scope: !4576)
!5063 = !DILocation(line: 1547, column: 9, scope: !4576)
!5064 = !DILocation(line: 1548, column: 9, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 1548, column: 3)
!5066 = !DILocation(line: 1548, column: 8, scope: !5065)
!5067 = !DILocation(line: 1548, column: 13, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 1548, column: 3)
!5069 = !DILocation(line: 1548, column: 27, scope: !5068)
!5070 = !DILocation(line: 1548, column: 32, scope: !5068)
!5071 = !DILocation(line: 1548, column: 15, scope: !5068)
!5072 = !DILocation(line: 1548, column: 3, scope: !5065)
!5073 = !DILocation(line: 1550, column: 24, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 1549, column: 3)
!5075 = !DILocation(line: 1550, column: 30, scope: !5074)
!5076 = !DILocation(line: 1550, column: 35, scope: !5074)
!5077 = !DILocation(line: 1550, column: 37, scope: !5074)
!5078 = !DILocation(line: 1550, column: 42, scope: !5074)
!5079 = !DILocation(line: 1550, column: 44, scope: !5074)
!5080 = !DILocation(line: 1550, column: 43, scope: !5074)
!5081 = !DILocation(line: 1550, column: 46, scope: !5074)
!5082 = !DILocation(line: 1550, column: 51, scope: !5074)
!5083 = !DILocation(line: 1550, column: 59, scope: !5074)
!5084 = !DILocation(line: 1550, column: 7, scope: !5074)
!5085 = !DILocation(line: 1550, column: 6, scope: !5074)
!5086 = !DILocation(line: 1551, column: 9, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 1551, column: 9)
!5088 = !DILocation(line: 1551, column: 11, scope: !5087)
!5089 = !DILocation(line: 1551, column: 9, scope: !5074)
!5090 = !DILocation(line: 1552, column: 7, scope: !5087)
!5091 = !DILocation(line: 1553, column: 34, scope: !5074)
!5092 = !DILocation(line: 1553, column: 13, scope: !5074)
!5093 = !DILocation(line: 1553, column: 12, scope: !5074)
!5094 = !DILocation(line: 1554, column: 11, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 1554, column: 5)
!5096 = !DILocation(line: 1554, column: 10, scope: !5095)
!5097 = !DILocation(line: 1554, column: 15, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 1554, column: 5)
!5099 = !DILocation(line: 1554, column: 29, scope: !5098)
!5100 = !DILocation(line: 1554, column: 34, scope: !5098)
!5101 = !DILocation(line: 1554, column: 17, scope: !5098)
!5102 = !DILocation(line: 1554, column: 5, scope: !5095)
!5103 = !DILocalVariable(name: "i", scope: !5104, file: !3, line: 1557, type: !470)
!5104 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1555, column: 5)
!5105 = !DILocation(line: 1557, column: 9, scope: !5104)
!5106 = !DILocation(line: 1559, column: 13, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 1559, column: 7)
!5108 = !DILocation(line: 1559, column: 12, scope: !5107)
!5109 = !DILocation(line: 1559, column: 17, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 1559, column: 7)
!5111 = !DILocation(line: 1559, column: 31, scope: !5110)
!5112 = !DILocation(line: 1559, column: 19, scope: !5110)
!5113 = !DILocation(line: 1559, column: 7, scope: !5107)
!5114 = !DILocation(line: 1561, column: 10, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1560, column: 7)
!5116 = !DILocation(line: 1561, column: 11, scope: !5115)
!5117 = !DILocation(line: 1562, column: 17, scope: !5115)
!5118 = !DILocation(line: 1562, column: 29, scope: !5115)
!5119 = !DILocation(line: 1562, column: 9, scope: !5115)
!5120 = !DILocation(line: 1567, column: 16, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1566, column: 11)
!5122 = distinct !DILexicalBlock(scope: !5115, file: !3, line: 1563, column: 9)
!5123 = !DILocation(line: 1567, column: 14, scope: !5121)
!5124 = !DILocation(line: 1567, column: 15, scope: !5121)
!5125 = !DILocation(line: 1568, column: 13, scope: !5121)
!5126 = !DILocation(line: 1573, column: 16, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1572, column: 11)
!5128 = !DILocation(line: 1573, column: 14, scope: !5127)
!5129 = !DILocation(line: 1573, column: 15, scope: !5127)
!5130 = !DILocation(line: 1574, column: 13, scope: !5127)
!5131 = !DILocation(line: 1579, column: 16, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1578, column: 11)
!5133 = !DILocation(line: 1579, column: 14, scope: !5132)
!5134 = !DILocation(line: 1579, column: 15, scope: !5132)
!5135 = !DILocation(line: 1580, column: 13, scope: !5132)
!5136 = !DILocation(line: 1584, column: 27, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1583, column: 11)
!5138 = !DILocation(line: 1584, column: 16, scope: !5137)
!5139 = !DILocation(line: 1584, column: 14, scope: !5137)
!5140 = !DILocation(line: 1584, column: 15, scope: !5137)
!5141 = !DILocation(line: 1585, column: 13, scope: !5137)
!5142 = !DILocation(line: 1589, column: 16, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1588, column: 11)
!5144 = !DILocation(line: 1589, column: 14, scope: !5143)
!5145 = !DILocation(line: 1589, column: 15, scope: !5143)
!5146 = !DILocation(line: 1590, column: 13, scope: !5143)
!5147 = !DILocation(line: 1594, column: 17, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 1594, column: 17)
!5149 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1593, column: 11)
!5150 = !DILocation(line: 1594, column: 24, scope: !5148)
!5151 = !DILocation(line: 1594, column: 35, scope: !5148)
!5152 = !DILocation(line: 1594, column: 17, scope: !5149)
!5153 = !DILocation(line: 1595, column: 18, scope: !5148)
!5154 = !DILocation(line: 1595, column: 16, scope: !5148)
!5155 = !DILocation(line: 1595, column: 17, scope: !5148)
!5156 = !DILocation(line: 1595, column: 15, scope: !5148)
!5157 = !DILocation(line: 1596, column: 13, scope: !5149)
!5158 = !DILocation(line: 1600, column: 50, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1599, column: 11)
!5160 = !DILocation(line: 1600, column: 56, scope: !5159)
!5161 = !DILocation(line: 1600, column: 32, scope: !5159)
!5162 = !DILocation(line: 1600, column: 17, scope: !5159)
!5163 = !DILocation(line: 1600, column: 14, scope: !5159)
!5164 = !DILocation(line: 1600, column: 15, scope: !5159)
!5165 = !DILocation(line: 1601, column: 13, scope: !5159)
!5166 = !DILocation(line: 1605, column: 14, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 1604, column: 11)
!5168 = !DILocation(line: 1605, column: 15, scope: !5167)
!5169 = !DILocation(line: 1606, column: 13, scope: !5167)
!5170 = !DILocation(line: 1609, column: 10, scope: !5115)
!5171 = !DILocation(line: 1610, column: 7, scope: !5115)
!5172 = !DILocation(line: 1559, column: 40, scope: !5110)
!5173 = !DILocation(line: 1559, column: 7, scope: !5110)
!5174 = distinct !{!5174, !5113, !5175}
!5175 = !DILocation(line: 1610, column: 7, scope: !5107)
!5176 = !DILocation(line: 1611, column: 8, scope: !5104)
!5177 = !DILocation(line: 1612, column: 5, scope: !5104)
!5178 = !DILocation(line: 1554, column: 42, scope: !5098)
!5179 = !DILocation(line: 1554, column: 5, scope: !5098)
!5180 = distinct !{!5180, !5102, !5181}
!5181 = !DILocation(line: 1612, column: 5, scope: !5095)
!5182 = !DILocation(line: 1613, column: 3, scope: !5074)
!5183 = !DILocation(line: 1548, column: 41, scope: !5068)
!5184 = !DILocation(line: 1548, column: 3, scope: !5068)
!5185 = distinct !{!5185, !5072, !5186}
!5186 = !DILocation(line: 1613, column: 3, scope: !5065)
!5187 = !DILocation(line: 1614, column: 1, scope: !4576)
!5188 = distinct !DISubprogram(name: "ExportShortPixel", scope: !3, file: !3, line: 1616, type: !1345, scopeLine: 1619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!5189 = !DILocalVariable(name: "image", arg: 1, scope: !5188, file: !3, line: 1616, type: !475)
!5190 = !DILocation(line: 1616, column: 37, scope: !5188)
!5191 = !DILocalVariable(name: "roi", arg: 2, scope: !5188, file: !3, line: 1616, type: !1347)
!5192 = !DILocation(line: 1616, column: 64, scope: !5188)
!5193 = !DILocalVariable(name: "map", arg: 3, scope: !5188, file: !3, line: 1617, type: !1349)
!5194 = !DILocation(line: 1617, column: 24, scope: !5188)
!5195 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !5188, file: !3, line: 1617, type: !1350)
!5196 = !DILocation(line: 1617, column: 47, scope: !5188)
!5197 = !DILocalVariable(name: "pixels", arg: 5, scope: !5188, file: !3, line: 1617, type: !464)
!5198 = !DILocation(line: 1617, column: 65, scope: !5188)
!5199 = !DILocalVariable(name: "exception", arg: 6, scope: !5188, file: !3, line: 1618, type: !1071)
!5200 = !DILocation(line: 1618, column: 18, scope: !5188)
!5201 = !DILocalVariable(name: "indexes", scope: !5188, file: !3, line: 1621, type: !1365)
!5202 = !DILocation(line: 1621, column: 15, scope: !5188)
!5203 = !DILocalVariable(name: "p", scope: !5188, file: !3, line: 1624, type: !1368)
!5204 = !DILocation(line: 1624, column: 15, scope: !5188)
!5205 = !DILocalVariable(name: "x", scope: !5188, file: !3, line: 1627, type: !470)
!5206 = !DILocation(line: 1627, column: 5, scope: !5188)
!5207 = !DILocalVariable(name: "q", scope: !5188, file: !3, line: 1630, type: !692)
!5208 = !DILocation(line: 1630, column: 6, scope: !5188)
!5209 = !DILocalVariable(name: "length", scope: !5188, file: !3, line: 1633, type: !454)
!5210 = !DILocation(line: 1633, column: 5, scope: !5188)
!5211 = !DILocalVariable(name: "y", scope: !5188, file: !3, line: 1636, type: !470)
!5212 = !DILocation(line: 1636, column: 5, scope: !5188)
!5213 = !DILocation(line: 1638, column: 24, scope: !5188)
!5214 = !DILocation(line: 1638, column: 5, scope: !5188)
!5215 = !DILocation(line: 1638, column: 4, scope: !5188)
!5216 = !DILocation(line: 1639, column: 21, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1639, column: 7)
!5218 = !DILocation(line: 1639, column: 7, scope: !5217)
!5219 = !DILocation(line: 1639, column: 32, scope: !5217)
!5220 = !DILocation(line: 1639, column: 7, scope: !5188)
!5221 = !DILocation(line: 1641, column: 13, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 1641, column: 7)
!5223 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 1640, column: 5)
!5224 = !DILocation(line: 1641, column: 12, scope: !5222)
!5225 = !DILocation(line: 1641, column: 17, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 1641, column: 7)
!5227 = !DILocation(line: 1641, column: 31, scope: !5226)
!5228 = !DILocation(line: 1641, column: 36, scope: !5226)
!5229 = !DILocation(line: 1641, column: 19, scope: !5226)
!5230 = !DILocation(line: 1641, column: 7, scope: !5222)
!5231 = !DILocation(line: 1643, column: 28, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 1642, column: 7)
!5233 = !DILocation(line: 1643, column: 34, scope: !5232)
!5234 = !DILocation(line: 1643, column: 39, scope: !5232)
!5235 = !DILocation(line: 1643, column: 41, scope: !5232)
!5236 = !DILocation(line: 1643, column: 46, scope: !5232)
!5237 = !DILocation(line: 1643, column: 48, scope: !5232)
!5238 = !DILocation(line: 1643, column: 47, scope: !5232)
!5239 = !DILocation(line: 1643, column: 50, scope: !5232)
!5240 = !DILocation(line: 1643, column: 55, scope: !5232)
!5241 = !DILocation(line: 1643, column: 63, scope: !5232)
!5242 = !DILocation(line: 1643, column: 11, scope: !5232)
!5243 = !DILocation(line: 1643, column: 10, scope: !5232)
!5244 = !DILocation(line: 1644, column: 13, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 1644, column: 13)
!5246 = !DILocation(line: 1644, column: 15, scope: !5245)
!5247 = !DILocation(line: 1644, column: 13, scope: !5232)
!5248 = !DILocation(line: 1645, column: 11, scope: !5245)
!5249 = !DILocation(line: 1646, column: 15, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 1646, column: 9)
!5251 = !DILocation(line: 1646, column: 14, scope: !5250)
!5252 = !DILocation(line: 1646, column: 19, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 1646, column: 9)
!5254 = !DILocation(line: 1646, column: 33, scope: !5253)
!5255 = !DILocation(line: 1646, column: 38, scope: !5253)
!5256 = !DILocation(line: 1646, column: 21, scope: !5253)
!5257 = !DILocation(line: 1646, column: 9, scope: !5250)
!5258 = !DILocation(line: 1648, column: 36, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1647, column: 9)
!5260 = !DILocation(line: 1648, column: 16, scope: !5259)
!5261 = !DILocation(line: 1648, column: 13, scope: !5259)
!5262 = !DILocation(line: 1648, column: 15, scope: !5259)
!5263 = !DILocation(line: 1649, column: 36, scope: !5259)
!5264 = !DILocation(line: 1649, column: 16, scope: !5259)
!5265 = !DILocation(line: 1649, column: 13, scope: !5259)
!5266 = !DILocation(line: 1649, column: 15, scope: !5259)
!5267 = !DILocation(line: 1650, column: 36, scope: !5259)
!5268 = !DILocation(line: 1650, column: 16, scope: !5259)
!5269 = !DILocation(line: 1650, column: 13, scope: !5259)
!5270 = !DILocation(line: 1650, column: 15, scope: !5259)
!5271 = !DILocation(line: 1651, column: 12, scope: !5259)
!5272 = !DILocation(line: 1652, column: 9, scope: !5259)
!5273 = !DILocation(line: 1646, column: 46, scope: !5253)
!5274 = !DILocation(line: 1646, column: 9, scope: !5253)
!5275 = distinct !{!5275, !5257, !5276}
!5276 = !DILocation(line: 1652, column: 9, scope: !5250)
!5277 = !DILocation(line: 1653, column: 7, scope: !5232)
!5278 = !DILocation(line: 1641, column: 45, scope: !5226)
!5279 = !DILocation(line: 1641, column: 7, scope: !5226)
!5280 = distinct !{!5280, !5230, !5281}
!5281 = !DILocation(line: 1653, column: 7, scope: !5222)
!5282 = !DILocation(line: 1654, column: 7, scope: !5223)
!5283 = !DILocation(line: 1656, column: 21, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1656, column: 7)
!5285 = !DILocation(line: 1656, column: 7, scope: !5284)
!5286 = !DILocation(line: 1656, column: 33, scope: !5284)
!5287 = !DILocation(line: 1656, column: 7, scope: !5188)
!5288 = !DILocation(line: 1658, column: 13, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 1658, column: 7)
!5290 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 1657, column: 5)
!5291 = !DILocation(line: 1658, column: 12, scope: !5289)
!5292 = !DILocation(line: 1658, column: 17, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 1658, column: 7)
!5294 = !DILocation(line: 1658, column: 31, scope: !5293)
!5295 = !DILocation(line: 1658, column: 36, scope: !5293)
!5296 = !DILocation(line: 1658, column: 19, scope: !5293)
!5297 = !DILocation(line: 1658, column: 7, scope: !5289)
!5298 = !DILocation(line: 1660, column: 28, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 1659, column: 7)
!5300 = !DILocation(line: 1660, column: 34, scope: !5299)
!5301 = !DILocation(line: 1660, column: 39, scope: !5299)
!5302 = !DILocation(line: 1660, column: 41, scope: !5299)
!5303 = !DILocation(line: 1660, column: 46, scope: !5299)
!5304 = !DILocation(line: 1660, column: 48, scope: !5299)
!5305 = !DILocation(line: 1660, column: 47, scope: !5299)
!5306 = !DILocation(line: 1660, column: 50, scope: !5299)
!5307 = !DILocation(line: 1660, column: 55, scope: !5299)
!5308 = !DILocation(line: 1660, column: 63, scope: !5299)
!5309 = !DILocation(line: 1660, column: 11, scope: !5299)
!5310 = !DILocation(line: 1660, column: 10, scope: !5299)
!5311 = !DILocation(line: 1661, column: 13, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 1661, column: 13)
!5313 = !DILocation(line: 1661, column: 15, scope: !5312)
!5314 = !DILocation(line: 1661, column: 13, scope: !5299)
!5315 = !DILocation(line: 1662, column: 11, scope: !5312)
!5316 = !DILocation(line: 1663, column: 15, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 1663, column: 9)
!5318 = !DILocation(line: 1663, column: 14, scope: !5317)
!5319 = !DILocation(line: 1663, column: 19, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1663, column: 9)
!5321 = !DILocation(line: 1663, column: 33, scope: !5320)
!5322 = !DILocation(line: 1663, column: 38, scope: !5320)
!5323 = !DILocation(line: 1663, column: 21, scope: !5320)
!5324 = !DILocation(line: 1663, column: 9, scope: !5317)
!5325 = !DILocation(line: 1665, column: 36, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1664, column: 9)
!5327 = !DILocation(line: 1665, column: 16, scope: !5326)
!5328 = !DILocation(line: 1665, column: 13, scope: !5326)
!5329 = !DILocation(line: 1665, column: 15, scope: !5326)
!5330 = !DILocation(line: 1666, column: 36, scope: !5326)
!5331 = !DILocation(line: 1666, column: 16, scope: !5326)
!5332 = !DILocation(line: 1666, column: 13, scope: !5326)
!5333 = !DILocation(line: 1666, column: 15, scope: !5326)
!5334 = !DILocation(line: 1667, column: 36, scope: !5326)
!5335 = !DILocation(line: 1667, column: 16, scope: !5326)
!5336 = !DILocation(line: 1667, column: 13, scope: !5326)
!5337 = !DILocation(line: 1667, column: 15, scope: !5326)
!5338 = !DILocation(line: 1668, column: 46, scope: !5326)
!5339 = !DILocation(line: 1668, column: 36, scope: !5326)
!5340 = !DILocation(line: 1668, column: 16, scope: !5326)
!5341 = !DILocation(line: 1668, column: 13, scope: !5326)
!5342 = !DILocation(line: 1668, column: 15, scope: !5326)
!5343 = !DILocation(line: 1669, column: 12, scope: !5326)
!5344 = !DILocation(line: 1670, column: 9, scope: !5326)
!5345 = !DILocation(line: 1663, column: 46, scope: !5320)
!5346 = !DILocation(line: 1663, column: 9, scope: !5320)
!5347 = distinct !{!5347, !5324, !5348}
!5348 = !DILocation(line: 1670, column: 9, scope: !5317)
!5349 = !DILocation(line: 1671, column: 7, scope: !5299)
!5350 = !DILocation(line: 1658, column: 45, scope: !5293)
!5351 = !DILocation(line: 1658, column: 7, scope: !5293)
!5352 = distinct !{!5352, !5297, !5353}
!5353 = !DILocation(line: 1671, column: 7, scope: !5289)
!5354 = !DILocation(line: 1672, column: 7, scope: !5290)
!5355 = !DILocation(line: 1674, column: 21, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1674, column: 7)
!5357 = !DILocation(line: 1674, column: 7, scope: !5356)
!5358 = !DILocation(line: 1674, column: 33, scope: !5356)
!5359 = !DILocation(line: 1674, column: 7, scope: !5188)
!5360 = !DILocation(line: 1676, column: 13, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1676, column: 7)
!5362 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1675, column: 5)
!5363 = !DILocation(line: 1676, column: 12, scope: !5361)
!5364 = !DILocation(line: 1676, column: 17, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 1676, column: 7)
!5366 = !DILocation(line: 1676, column: 31, scope: !5365)
!5367 = !DILocation(line: 1676, column: 36, scope: !5365)
!5368 = !DILocation(line: 1676, column: 19, scope: !5365)
!5369 = !DILocation(line: 1676, column: 7, scope: !5361)
!5370 = !DILocation(line: 1678, column: 28, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 1677, column: 7)
!5372 = !DILocation(line: 1678, column: 34, scope: !5371)
!5373 = !DILocation(line: 1678, column: 39, scope: !5371)
!5374 = !DILocation(line: 1678, column: 41, scope: !5371)
!5375 = !DILocation(line: 1678, column: 46, scope: !5371)
!5376 = !DILocation(line: 1678, column: 48, scope: !5371)
!5377 = !DILocation(line: 1678, column: 47, scope: !5371)
!5378 = !DILocation(line: 1678, column: 50, scope: !5371)
!5379 = !DILocation(line: 1678, column: 55, scope: !5371)
!5380 = !DILocation(line: 1678, column: 63, scope: !5371)
!5381 = !DILocation(line: 1678, column: 11, scope: !5371)
!5382 = !DILocation(line: 1678, column: 10, scope: !5371)
!5383 = !DILocation(line: 1679, column: 13, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1679, column: 13)
!5385 = !DILocation(line: 1679, column: 15, scope: !5384)
!5386 = !DILocation(line: 1679, column: 13, scope: !5371)
!5387 = !DILocation(line: 1680, column: 11, scope: !5384)
!5388 = !DILocation(line: 1681, column: 15, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1681, column: 9)
!5390 = !DILocation(line: 1681, column: 14, scope: !5389)
!5391 = !DILocation(line: 1681, column: 19, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 1681, column: 9)
!5393 = !DILocation(line: 1681, column: 33, scope: !5392)
!5394 = !DILocation(line: 1681, column: 38, scope: !5392)
!5395 = !DILocation(line: 1681, column: 21, scope: !5392)
!5396 = !DILocation(line: 1681, column: 9, scope: !5389)
!5397 = !DILocation(line: 1683, column: 36, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 1682, column: 9)
!5399 = !DILocation(line: 1683, column: 16, scope: !5398)
!5400 = !DILocation(line: 1683, column: 13, scope: !5398)
!5401 = !DILocation(line: 1683, column: 15, scope: !5398)
!5402 = !DILocation(line: 1684, column: 36, scope: !5398)
!5403 = !DILocation(line: 1684, column: 16, scope: !5398)
!5404 = !DILocation(line: 1684, column: 13, scope: !5398)
!5405 = !DILocation(line: 1684, column: 15, scope: !5398)
!5406 = !DILocation(line: 1685, column: 36, scope: !5398)
!5407 = !DILocation(line: 1685, column: 16, scope: !5398)
!5408 = !DILocation(line: 1685, column: 13, scope: !5398)
!5409 = !DILocation(line: 1685, column: 15, scope: !5398)
!5410 = !DILocation(line: 1686, column: 13, scope: !5398)
!5411 = !DILocation(line: 1686, column: 15, scope: !5398)
!5412 = !DILocation(line: 1687, column: 12, scope: !5398)
!5413 = !DILocation(line: 1688, column: 9, scope: !5398)
!5414 = !DILocation(line: 1681, column: 46, scope: !5392)
!5415 = !DILocation(line: 1681, column: 9, scope: !5392)
!5416 = distinct !{!5416, !5396, !5417}
!5417 = !DILocation(line: 1688, column: 9, scope: !5389)
!5418 = !DILocation(line: 1689, column: 7, scope: !5371)
!5419 = !DILocation(line: 1676, column: 45, scope: !5365)
!5420 = !DILocation(line: 1676, column: 7, scope: !5365)
!5421 = distinct !{!5421, !5369, !5422}
!5422 = !DILocation(line: 1689, column: 7, scope: !5361)
!5423 = !DILocation(line: 1690, column: 7, scope: !5362)
!5424 = !DILocation(line: 1692, column: 21, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1692, column: 7)
!5426 = !DILocation(line: 1692, column: 7, scope: !5425)
!5427 = !DILocation(line: 1692, column: 30, scope: !5425)
!5428 = !DILocation(line: 1692, column: 7, scope: !5188)
!5429 = !DILocation(line: 1694, column: 13, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 1694, column: 7)
!5431 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 1693, column: 5)
!5432 = !DILocation(line: 1694, column: 12, scope: !5430)
!5433 = !DILocation(line: 1694, column: 17, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1694, column: 7)
!5435 = !DILocation(line: 1694, column: 31, scope: !5434)
!5436 = !DILocation(line: 1694, column: 36, scope: !5434)
!5437 = !DILocation(line: 1694, column: 19, scope: !5434)
!5438 = !DILocation(line: 1694, column: 7, scope: !5430)
!5439 = !DILocation(line: 1696, column: 28, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 1695, column: 7)
!5441 = !DILocation(line: 1696, column: 34, scope: !5440)
!5442 = !DILocation(line: 1696, column: 39, scope: !5440)
!5443 = !DILocation(line: 1696, column: 41, scope: !5440)
!5444 = !DILocation(line: 1696, column: 46, scope: !5440)
!5445 = !DILocation(line: 1696, column: 48, scope: !5440)
!5446 = !DILocation(line: 1696, column: 47, scope: !5440)
!5447 = !DILocation(line: 1696, column: 50, scope: !5440)
!5448 = !DILocation(line: 1696, column: 55, scope: !5440)
!5449 = !DILocation(line: 1696, column: 63, scope: !5440)
!5450 = !DILocation(line: 1696, column: 11, scope: !5440)
!5451 = !DILocation(line: 1696, column: 10, scope: !5440)
!5452 = !DILocation(line: 1697, column: 13, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 1697, column: 13)
!5454 = !DILocation(line: 1697, column: 15, scope: !5453)
!5455 = !DILocation(line: 1697, column: 13, scope: !5440)
!5456 = !DILocation(line: 1698, column: 11, scope: !5453)
!5457 = !DILocation(line: 1699, column: 15, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 1699, column: 9)
!5459 = !DILocation(line: 1699, column: 14, scope: !5458)
!5460 = !DILocation(line: 1699, column: 19, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1699, column: 9)
!5462 = !DILocation(line: 1699, column: 33, scope: !5461)
!5463 = !DILocation(line: 1699, column: 38, scope: !5461)
!5464 = !DILocation(line: 1699, column: 21, scope: !5461)
!5465 = !DILocation(line: 1699, column: 9, scope: !5458)
!5466 = !DILocation(line: 1701, column: 69, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1700, column: 9)
!5468 = !DILocation(line: 1701, column: 75, scope: !5467)
!5469 = !DILocation(line: 1701, column: 51, scope: !5467)
!5470 = !DILocation(line: 1701, column: 36, scope: !5467)
!5471 = !DILocation(line: 1701, column: 16, scope: !5467)
!5472 = !DILocation(line: 1701, column: 13, scope: !5467)
!5473 = !DILocation(line: 1701, column: 15, scope: !5467)
!5474 = !DILocation(line: 1702, column: 12, scope: !5467)
!5475 = !DILocation(line: 1703, column: 9, scope: !5467)
!5476 = !DILocation(line: 1699, column: 46, scope: !5461)
!5477 = !DILocation(line: 1699, column: 9, scope: !5461)
!5478 = distinct !{!5478, !5465, !5479}
!5479 = !DILocation(line: 1703, column: 9, scope: !5458)
!5480 = !DILocation(line: 1704, column: 7, scope: !5440)
!5481 = !DILocation(line: 1694, column: 45, scope: !5434)
!5482 = !DILocation(line: 1694, column: 7, scope: !5434)
!5483 = distinct !{!5483, !5438, !5484}
!5484 = !DILocation(line: 1704, column: 7, scope: !5430)
!5485 = !DILocation(line: 1705, column: 7, scope: !5431)
!5486 = !DILocation(line: 1707, column: 21, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1707, column: 7)
!5488 = !DILocation(line: 1707, column: 7, scope: !5487)
!5489 = !DILocation(line: 1707, column: 32, scope: !5487)
!5490 = !DILocation(line: 1707, column: 7, scope: !5188)
!5491 = !DILocation(line: 1709, column: 13, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 1709, column: 7)
!5493 = distinct !DILexicalBlock(scope: !5487, file: !3, line: 1708, column: 5)
!5494 = !DILocation(line: 1709, column: 12, scope: !5492)
!5495 = !DILocation(line: 1709, column: 17, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 1709, column: 7)
!5497 = !DILocation(line: 1709, column: 31, scope: !5496)
!5498 = !DILocation(line: 1709, column: 36, scope: !5496)
!5499 = !DILocation(line: 1709, column: 19, scope: !5496)
!5500 = !DILocation(line: 1709, column: 7, scope: !5492)
!5501 = !DILocation(line: 1711, column: 28, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 1710, column: 7)
!5503 = !DILocation(line: 1711, column: 34, scope: !5502)
!5504 = !DILocation(line: 1711, column: 39, scope: !5502)
!5505 = !DILocation(line: 1711, column: 41, scope: !5502)
!5506 = !DILocation(line: 1711, column: 46, scope: !5502)
!5507 = !DILocation(line: 1711, column: 48, scope: !5502)
!5508 = !DILocation(line: 1711, column: 47, scope: !5502)
!5509 = !DILocation(line: 1711, column: 50, scope: !5502)
!5510 = !DILocation(line: 1711, column: 55, scope: !5502)
!5511 = !DILocation(line: 1711, column: 63, scope: !5502)
!5512 = !DILocation(line: 1711, column: 11, scope: !5502)
!5513 = !DILocation(line: 1711, column: 10, scope: !5502)
!5514 = !DILocation(line: 1712, column: 13, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 1712, column: 13)
!5516 = !DILocation(line: 1712, column: 15, scope: !5515)
!5517 = !DILocation(line: 1712, column: 13, scope: !5502)
!5518 = !DILocation(line: 1713, column: 11, scope: !5515)
!5519 = !DILocation(line: 1714, column: 15, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 1714, column: 9)
!5521 = !DILocation(line: 1714, column: 14, scope: !5520)
!5522 = !DILocation(line: 1714, column: 19, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 1714, column: 9)
!5524 = !DILocation(line: 1714, column: 33, scope: !5523)
!5525 = !DILocation(line: 1714, column: 38, scope: !5523)
!5526 = !DILocation(line: 1714, column: 21, scope: !5523)
!5527 = !DILocation(line: 1714, column: 9, scope: !5520)
!5528 = !DILocation(line: 1716, column: 36, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 1715, column: 9)
!5530 = !DILocation(line: 1716, column: 16, scope: !5529)
!5531 = !DILocation(line: 1716, column: 13, scope: !5529)
!5532 = !DILocation(line: 1716, column: 15, scope: !5529)
!5533 = !DILocation(line: 1717, column: 36, scope: !5529)
!5534 = !DILocation(line: 1717, column: 16, scope: !5529)
!5535 = !DILocation(line: 1717, column: 13, scope: !5529)
!5536 = !DILocation(line: 1717, column: 15, scope: !5529)
!5537 = !DILocation(line: 1718, column: 36, scope: !5529)
!5538 = !DILocation(line: 1718, column: 16, scope: !5529)
!5539 = !DILocation(line: 1718, column: 13, scope: !5529)
!5540 = !DILocation(line: 1718, column: 15, scope: !5529)
!5541 = !DILocation(line: 1719, column: 12, scope: !5529)
!5542 = !DILocation(line: 1720, column: 9, scope: !5529)
!5543 = !DILocation(line: 1714, column: 46, scope: !5523)
!5544 = !DILocation(line: 1714, column: 9, scope: !5523)
!5545 = distinct !{!5545, !5527, !5546}
!5546 = !DILocation(line: 1720, column: 9, scope: !5520)
!5547 = !DILocation(line: 1721, column: 7, scope: !5502)
!5548 = !DILocation(line: 1709, column: 45, scope: !5496)
!5549 = !DILocation(line: 1709, column: 7, scope: !5496)
!5550 = distinct !{!5550, !5500, !5551}
!5551 = !DILocation(line: 1721, column: 7, scope: !5492)
!5552 = !DILocation(line: 1722, column: 7, scope: !5493)
!5553 = !DILocation(line: 1724, column: 21, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1724, column: 7)
!5555 = !DILocation(line: 1724, column: 7, scope: !5554)
!5556 = !DILocation(line: 1724, column: 33, scope: !5554)
!5557 = !DILocation(line: 1724, column: 7, scope: !5188)
!5558 = !DILocation(line: 1726, column: 13, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 1726, column: 7)
!5560 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 1725, column: 5)
!5561 = !DILocation(line: 1726, column: 12, scope: !5559)
!5562 = !DILocation(line: 1726, column: 17, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 1726, column: 7)
!5564 = !DILocation(line: 1726, column: 31, scope: !5563)
!5565 = !DILocation(line: 1726, column: 36, scope: !5563)
!5566 = !DILocation(line: 1726, column: 19, scope: !5563)
!5567 = !DILocation(line: 1726, column: 7, scope: !5559)
!5568 = !DILocation(line: 1728, column: 28, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 1727, column: 7)
!5570 = !DILocation(line: 1728, column: 34, scope: !5569)
!5571 = !DILocation(line: 1728, column: 39, scope: !5569)
!5572 = !DILocation(line: 1728, column: 41, scope: !5569)
!5573 = !DILocation(line: 1728, column: 46, scope: !5569)
!5574 = !DILocation(line: 1728, column: 48, scope: !5569)
!5575 = !DILocation(line: 1728, column: 47, scope: !5569)
!5576 = !DILocation(line: 1728, column: 50, scope: !5569)
!5577 = !DILocation(line: 1728, column: 55, scope: !5569)
!5578 = !DILocation(line: 1728, column: 63, scope: !5569)
!5579 = !DILocation(line: 1728, column: 11, scope: !5569)
!5580 = !DILocation(line: 1728, column: 10, scope: !5569)
!5581 = !DILocation(line: 1729, column: 13, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1729, column: 13)
!5583 = !DILocation(line: 1729, column: 15, scope: !5582)
!5584 = !DILocation(line: 1729, column: 13, scope: !5569)
!5585 = !DILocation(line: 1730, column: 11, scope: !5582)
!5586 = !DILocation(line: 1731, column: 15, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1731, column: 9)
!5588 = !DILocation(line: 1731, column: 14, scope: !5587)
!5589 = !DILocation(line: 1731, column: 19, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 1731, column: 9)
!5591 = !DILocation(line: 1731, column: 33, scope: !5590)
!5592 = !DILocation(line: 1731, column: 38, scope: !5590)
!5593 = !DILocation(line: 1731, column: 21, scope: !5590)
!5594 = !DILocation(line: 1731, column: 9, scope: !5587)
!5595 = !DILocation(line: 1733, column: 36, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 1732, column: 9)
!5597 = !DILocation(line: 1733, column: 16, scope: !5596)
!5598 = !DILocation(line: 1733, column: 13, scope: !5596)
!5599 = !DILocation(line: 1733, column: 15, scope: !5596)
!5600 = !DILocation(line: 1734, column: 36, scope: !5596)
!5601 = !DILocation(line: 1734, column: 16, scope: !5596)
!5602 = !DILocation(line: 1734, column: 13, scope: !5596)
!5603 = !DILocation(line: 1734, column: 15, scope: !5596)
!5604 = !DILocation(line: 1735, column: 36, scope: !5596)
!5605 = !DILocation(line: 1735, column: 16, scope: !5596)
!5606 = !DILocation(line: 1735, column: 13, scope: !5596)
!5607 = !DILocation(line: 1735, column: 15, scope: !5596)
!5608 = !DILocation(line: 1736, column: 46, scope: !5596)
!5609 = !DILocation(line: 1736, column: 36, scope: !5596)
!5610 = !DILocation(line: 1736, column: 16, scope: !5596)
!5611 = !DILocation(line: 1736, column: 13, scope: !5596)
!5612 = !DILocation(line: 1736, column: 15, scope: !5596)
!5613 = !DILocation(line: 1737, column: 12, scope: !5596)
!5614 = !DILocation(line: 1738, column: 9, scope: !5596)
!5615 = !DILocation(line: 1731, column: 46, scope: !5590)
!5616 = !DILocation(line: 1731, column: 9, scope: !5590)
!5617 = distinct !{!5617, !5594, !5618}
!5618 = !DILocation(line: 1738, column: 9, scope: !5587)
!5619 = !DILocation(line: 1739, column: 7, scope: !5569)
!5620 = !DILocation(line: 1726, column: 45, scope: !5563)
!5621 = !DILocation(line: 1726, column: 7, scope: !5563)
!5622 = distinct !{!5622, !5567, !5623}
!5623 = !DILocation(line: 1739, column: 7, scope: !5559)
!5624 = !DILocation(line: 1740, column: 7, scope: !5560)
!5625 = !DILocation(line: 1742, column: 21, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1742, column: 7)
!5627 = !DILocation(line: 1742, column: 7, scope: !5626)
!5628 = !DILocation(line: 1742, column: 33, scope: !5626)
!5629 = !DILocation(line: 1742, column: 7, scope: !5188)
!5630 = !DILocation(line: 1744, column: 13, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 1744, column: 7)
!5632 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 1743, column: 5)
!5633 = !DILocation(line: 1744, column: 12, scope: !5631)
!5634 = !DILocation(line: 1744, column: 17, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 1744, column: 7)
!5636 = !DILocation(line: 1744, column: 31, scope: !5635)
!5637 = !DILocation(line: 1744, column: 36, scope: !5635)
!5638 = !DILocation(line: 1744, column: 19, scope: !5635)
!5639 = !DILocation(line: 1744, column: 7, scope: !5631)
!5640 = !DILocation(line: 1746, column: 28, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1745, column: 7)
!5642 = !DILocation(line: 1746, column: 34, scope: !5641)
!5643 = !DILocation(line: 1746, column: 39, scope: !5641)
!5644 = !DILocation(line: 1746, column: 41, scope: !5641)
!5645 = !DILocation(line: 1746, column: 46, scope: !5641)
!5646 = !DILocation(line: 1746, column: 48, scope: !5641)
!5647 = !DILocation(line: 1746, column: 47, scope: !5641)
!5648 = !DILocation(line: 1746, column: 50, scope: !5641)
!5649 = !DILocation(line: 1746, column: 55, scope: !5641)
!5650 = !DILocation(line: 1746, column: 63, scope: !5641)
!5651 = !DILocation(line: 1746, column: 11, scope: !5641)
!5652 = !DILocation(line: 1746, column: 10, scope: !5641)
!5653 = !DILocation(line: 1747, column: 13, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 1747, column: 13)
!5655 = !DILocation(line: 1747, column: 15, scope: !5654)
!5656 = !DILocation(line: 1747, column: 13, scope: !5641)
!5657 = !DILocation(line: 1748, column: 11, scope: !5654)
!5658 = !DILocation(line: 1749, column: 15, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 1749, column: 9)
!5660 = !DILocation(line: 1749, column: 14, scope: !5659)
!5661 = !DILocation(line: 1749, column: 19, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 1749, column: 9)
!5663 = !DILocation(line: 1749, column: 33, scope: !5662)
!5664 = !DILocation(line: 1749, column: 38, scope: !5662)
!5665 = !DILocation(line: 1749, column: 21, scope: !5662)
!5666 = !DILocation(line: 1749, column: 9, scope: !5659)
!5667 = !DILocation(line: 1751, column: 36, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 1750, column: 9)
!5669 = !DILocation(line: 1751, column: 16, scope: !5668)
!5670 = !DILocation(line: 1751, column: 13, scope: !5668)
!5671 = !DILocation(line: 1751, column: 15, scope: !5668)
!5672 = !DILocation(line: 1752, column: 36, scope: !5668)
!5673 = !DILocation(line: 1752, column: 16, scope: !5668)
!5674 = !DILocation(line: 1752, column: 13, scope: !5668)
!5675 = !DILocation(line: 1752, column: 15, scope: !5668)
!5676 = !DILocation(line: 1753, column: 36, scope: !5668)
!5677 = !DILocation(line: 1753, column: 16, scope: !5668)
!5678 = !DILocation(line: 1753, column: 13, scope: !5668)
!5679 = !DILocation(line: 1753, column: 15, scope: !5668)
!5680 = !DILocation(line: 1754, column: 13, scope: !5668)
!5681 = !DILocation(line: 1754, column: 15, scope: !5668)
!5682 = !DILocation(line: 1755, column: 12, scope: !5668)
!5683 = !DILocation(line: 1756, column: 9, scope: !5668)
!5684 = !DILocation(line: 1749, column: 46, scope: !5662)
!5685 = !DILocation(line: 1749, column: 9, scope: !5662)
!5686 = distinct !{!5686, !5666, !5687}
!5687 = !DILocation(line: 1756, column: 9, scope: !5659)
!5688 = !DILocation(line: 1757, column: 7, scope: !5641)
!5689 = !DILocation(line: 1744, column: 45, scope: !5635)
!5690 = !DILocation(line: 1744, column: 7, scope: !5635)
!5691 = distinct !{!5691, !5639, !5692}
!5692 = !DILocation(line: 1757, column: 7, scope: !5631)
!5693 = !DILocation(line: 1758, column: 7, scope: !5632)
!5694 = !DILocation(line: 1760, column: 17, scope: !5188)
!5695 = !DILocation(line: 1760, column: 10, scope: !5188)
!5696 = !DILocation(line: 1760, column: 9, scope: !5188)
!5697 = !DILocation(line: 1761, column: 9, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 1761, column: 3)
!5699 = !DILocation(line: 1761, column: 8, scope: !5698)
!5700 = !DILocation(line: 1761, column: 13, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 1761, column: 3)
!5702 = !DILocation(line: 1761, column: 27, scope: !5701)
!5703 = !DILocation(line: 1761, column: 32, scope: !5701)
!5704 = !DILocation(line: 1761, column: 15, scope: !5701)
!5705 = !DILocation(line: 1761, column: 3, scope: !5698)
!5706 = !DILocation(line: 1763, column: 24, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 1762, column: 3)
!5708 = !DILocation(line: 1763, column: 30, scope: !5707)
!5709 = !DILocation(line: 1763, column: 35, scope: !5707)
!5710 = !DILocation(line: 1763, column: 37, scope: !5707)
!5711 = !DILocation(line: 1763, column: 42, scope: !5707)
!5712 = !DILocation(line: 1763, column: 44, scope: !5707)
!5713 = !DILocation(line: 1763, column: 43, scope: !5707)
!5714 = !DILocation(line: 1763, column: 46, scope: !5707)
!5715 = !DILocation(line: 1763, column: 51, scope: !5707)
!5716 = !DILocation(line: 1763, column: 59, scope: !5707)
!5717 = !DILocation(line: 1763, column: 7, scope: !5707)
!5718 = !DILocation(line: 1763, column: 6, scope: !5707)
!5719 = !DILocation(line: 1764, column: 9, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 1764, column: 9)
!5721 = !DILocation(line: 1764, column: 11, scope: !5720)
!5722 = !DILocation(line: 1764, column: 9, scope: !5707)
!5723 = !DILocation(line: 1765, column: 7, scope: !5720)
!5724 = !DILocation(line: 1766, column: 34, scope: !5707)
!5725 = !DILocation(line: 1766, column: 13, scope: !5707)
!5726 = !DILocation(line: 1766, column: 12, scope: !5707)
!5727 = !DILocation(line: 1767, column: 11, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 1767, column: 5)
!5729 = !DILocation(line: 1767, column: 10, scope: !5728)
!5730 = !DILocation(line: 1767, column: 15, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 1767, column: 5)
!5732 = !DILocation(line: 1767, column: 29, scope: !5731)
!5733 = !DILocation(line: 1767, column: 34, scope: !5731)
!5734 = !DILocation(line: 1767, column: 17, scope: !5731)
!5735 = !DILocation(line: 1767, column: 5, scope: !5728)
!5736 = !DILocalVariable(name: "i", scope: !5737, file: !3, line: 1770, type: !470)
!5737 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1768, column: 5)
!5738 = !DILocation(line: 1770, column: 9, scope: !5737)
!5739 = !DILocation(line: 1772, column: 13, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 1772, column: 7)
!5741 = !DILocation(line: 1772, column: 12, scope: !5740)
!5742 = !DILocation(line: 1772, column: 17, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 1772, column: 7)
!5744 = !DILocation(line: 1772, column: 31, scope: !5743)
!5745 = !DILocation(line: 1772, column: 19, scope: !5743)
!5746 = !DILocation(line: 1772, column: 7, scope: !5740)
!5747 = !DILocation(line: 1774, column: 10, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 1773, column: 7)
!5749 = !DILocation(line: 1774, column: 11, scope: !5748)
!5750 = !DILocation(line: 1775, column: 17, scope: !5748)
!5751 = !DILocation(line: 1775, column: 29, scope: !5748)
!5752 = !DILocation(line: 1775, column: 9, scope: !5748)
!5753 = !DILocation(line: 1780, column: 36, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1779, column: 11)
!5755 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1776, column: 9)
!5756 = !DILocation(line: 1780, column: 16, scope: !5754)
!5757 = !DILocation(line: 1780, column: 14, scope: !5754)
!5758 = !DILocation(line: 1780, column: 15, scope: !5754)
!5759 = !DILocation(line: 1781, column: 13, scope: !5754)
!5760 = !DILocation(line: 1786, column: 36, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1785, column: 11)
!5762 = !DILocation(line: 1786, column: 16, scope: !5761)
!5763 = !DILocation(line: 1786, column: 14, scope: !5761)
!5764 = !DILocation(line: 1786, column: 15, scope: !5761)
!5765 = !DILocation(line: 1787, column: 13, scope: !5761)
!5766 = !DILocation(line: 1792, column: 36, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1791, column: 11)
!5768 = !DILocation(line: 1792, column: 16, scope: !5767)
!5769 = !DILocation(line: 1792, column: 14, scope: !5767)
!5770 = !DILocation(line: 1792, column: 15, scope: !5767)
!5771 = !DILocation(line: 1793, column: 13, scope: !5767)
!5772 = !DILocation(line: 1797, column: 47, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1796, column: 11)
!5774 = !DILocation(line: 1797, column: 36, scope: !5773)
!5775 = !DILocation(line: 1797, column: 16, scope: !5773)
!5776 = !DILocation(line: 1797, column: 14, scope: !5773)
!5777 = !DILocation(line: 1797, column: 15, scope: !5773)
!5778 = !DILocation(line: 1798, column: 13, scope: !5773)
!5779 = !DILocation(line: 1802, column: 36, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1801, column: 11)
!5781 = !DILocation(line: 1802, column: 16, scope: !5780)
!5782 = !DILocation(line: 1802, column: 14, scope: !5780)
!5783 = !DILocation(line: 1802, column: 15, scope: !5780)
!5784 = !DILocation(line: 1803, column: 13, scope: !5780)
!5785 = !DILocation(line: 1807, column: 17, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 1807, column: 17)
!5787 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1806, column: 11)
!5788 = !DILocation(line: 1807, column: 24, scope: !5786)
!5789 = !DILocation(line: 1807, column: 35, scope: !5786)
!5790 = !DILocation(line: 1807, column: 17, scope: !5787)
!5791 = !DILocation(line: 1808, column: 38, scope: !5786)
!5792 = !DILocation(line: 1808, column: 18, scope: !5786)
!5793 = !DILocation(line: 1808, column: 16, scope: !5786)
!5794 = !DILocation(line: 1808, column: 17, scope: !5786)
!5795 = !DILocation(line: 1808, column: 15, scope: !5786)
!5796 = !DILocation(line: 1809, column: 13, scope: !5787)
!5797 = !DILocation(line: 1813, column: 69, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1812, column: 11)
!5799 = !DILocation(line: 1813, column: 75, scope: !5798)
!5800 = !DILocation(line: 1813, column: 51, scope: !5798)
!5801 = !DILocation(line: 1813, column: 36, scope: !5798)
!5802 = !DILocation(line: 1813, column: 16, scope: !5798)
!5803 = !DILocation(line: 1813, column: 14, scope: !5798)
!5804 = !DILocation(line: 1813, column: 15, scope: !5798)
!5805 = !DILocation(line: 1814, column: 13, scope: !5798)
!5806 = !DILocation(line: 1817, column: 13, scope: !5755)
!5807 = !DILocation(line: 1819, column: 10, scope: !5748)
!5808 = !DILocation(line: 1820, column: 7, scope: !5748)
!5809 = !DILocation(line: 1772, column: 40, scope: !5743)
!5810 = !DILocation(line: 1772, column: 7, scope: !5743)
!5811 = distinct !{!5811, !5746, !5812}
!5812 = !DILocation(line: 1820, column: 7, scope: !5740)
!5813 = !DILocation(line: 1821, column: 8, scope: !5737)
!5814 = !DILocation(line: 1822, column: 5, scope: !5737)
!5815 = !DILocation(line: 1767, column: 42, scope: !5731)
!5816 = !DILocation(line: 1767, column: 5, scope: !5731)
!5817 = distinct !{!5817, !5735, !5818}
!5818 = !DILocation(line: 1822, column: 5, scope: !5728)
!5819 = !DILocation(line: 1823, column: 3, scope: !5707)
!5820 = !DILocation(line: 1761, column: 41, scope: !5701)
!5821 = !DILocation(line: 1761, column: 3, scope: !5701)
!5822 = distinct !{!5822, !5705, !5823}
!5823 = !DILocation(line: 1823, column: 3, scope: !5698)
!5824 = !DILocation(line: 1824, column: 1, scope: !5188)
!5825 = distinct !DISubprogram(name: "GetMagickPixelPacket", scope: !3, file: !3, line: 2030, type: !5826, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !714)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{null, !681, !442}
!5828 = !DILocalVariable(name: "image", arg: 1, scope: !5825, file: !3, line: 2030, type: !681)
!5829 = !DILocation(line: 2030, column: 53, scope: !5825)
!5830 = !DILocalVariable(name: "pixel", arg: 2, scope: !5825, file: !3, line: 2031, type: !442)
!5831 = !DILocation(line: 2031, column: 22, scope: !5825)
!5832 = !DILocation(line: 2033, column: 3, scope: !5825)
!5833 = !DILocation(line: 2033, column: 10, scope: !5825)
!5834 = !DILocation(line: 2033, column: 23, scope: !5825)
!5835 = !DILocation(line: 2034, column: 3, scope: !5825)
!5836 = !DILocation(line: 2034, column: 10, scope: !5825)
!5837 = !DILocation(line: 2034, column: 20, scope: !5825)
!5838 = !DILocation(line: 2035, column: 3, scope: !5825)
!5839 = !DILocation(line: 2035, column: 10, scope: !5825)
!5840 = !DILocation(line: 2035, column: 15, scope: !5825)
!5841 = !DILocation(line: 2036, column: 3, scope: !5825)
!5842 = !DILocation(line: 2036, column: 10, scope: !5825)
!5843 = !DILocation(line: 2036, column: 14, scope: !5825)
!5844 = !DILocation(line: 2037, column: 3, scope: !5825)
!5845 = !DILocation(line: 2037, column: 10, scope: !5825)
!5846 = !DILocation(line: 2037, column: 15, scope: !5825)
!5847 = !DILocation(line: 2038, column: 3, scope: !5825)
!5848 = !DILocation(line: 2038, column: 10, scope: !5825)
!5849 = !DILocation(line: 2038, column: 13, scope: !5825)
!5850 = !DILocation(line: 2039, column: 3, scope: !5825)
!5851 = !DILocation(line: 2039, column: 10, scope: !5825)
!5852 = !DILocation(line: 2039, column: 15, scope: !5825)
!5853 = !DILocation(line: 2040, column: 3, scope: !5825)
!5854 = !DILocation(line: 2040, column: 10, scope: !5825)
!5855 = !DILocation(line: 2040, column: 14, scope: !5825)
!5856 = !DILocation(line: 2041, column: 3, scope: !5825)
!5857 = !DILocation(line: 2041, column: 10, scope: !5825)
!5858 = !DILocation(line: 2041, column: 17, scope: !5825)
!5859 = !DILocation(line: 2042, column: 3, scope: !5825)
!5860 = !DILocation(line: 2042, column: 10, scope: !5825)
!5861 = !DILocation(line: 2042, column: 15, scope: !5825)
!5862 = !DILocation(line: 2043, column: 7, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 2043, column: 7)
!5864 = !DILocation(line: 2043, column: 13, scope: !5863)
!5865 = !DILocation(line: 2043, column: 7, scope: !5825)
!5866 = !DILocation(line: 2044, column: 5, scope: !5863)
!5867 = !DILocation(line: 2045, column: 24, scope: !5825)
!5868 = !DILocation(line: 2045, column: 31, scope: !5825)
!5869 = !DILocation(line: 2045, column: 3, scope: !5825)
!5870 = !DILocation(line: 2045, column: 10, scope: !5825)
!5871 = !DILocation(line: 2045, column: 23, scope: !5825)
!5872 = !DILocation(line: 2046, column: 21, scope: !5825)
!5873 = !DILocation(line: 2046, column: 28, scope: !5825)
!5874 = !DILocation(line: 2046, column: 3, scope: !5825)
!5875 = !DILocation(line: 2046, column: 10, scope: !5825)
!5876 = !DILocation(line: 2046, column: 20, scope: !5825)
!5877 = !DILocation(line: 2047, column: 16, scope: !5825)
!5878 = !DILocation(line: 2047, column: 23, scope: !5825)
!5879 = !DILocation(line: 2047, column: 3, scope: !5825)
!5880 = !DILocation(line: 2047, column: 10, scope: !5825)
!5881 = !DILocation(line: 2047, column: 15, scope: !5825)
!5882 = !DILocation(line: 2048, column: 16, scope: !5825)
!5883 = !DILocation(line: 2048, column: 23, scope: !5825)
!5884 = !DILocation(line: 2048, column: 3, scope: !5825)
!5885 = !DILocation(line: 2048, column: 10, scope: !5825)
!5886 = !DILocation(line: 2048, column: 15, scope: !5825)
!5887 = !DILocation(line: 2049, column: 15, scope: !5825)
!5888 = !DILocation(line: 2049, column: 22, scope: !5825)
!5889 = !DILocation(line: 2049, column: 3, scope: !5825)
!5890 = !DILocation(line: 2049, column: 10, scope: !5825)
!5891 = !DILocation(line: 2049, column: 14, scope: !5825)
!5892 = !DILocation(line: 2050, column: 1, scope: !5825)
!5893 = distinct !DISubprogram(name: "GetPixelIntensity", scope: !3, file: !3, line: 2106, type: !5894, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !714)
!5894 = !DISubroutineType(types: !5895)
!5895 = !{!458, !681, !1368}
!5896 = !DILocalVariable(name: "image", arg: 1, scope: !5893, file: !3, line: 2106, type: !681)
!5897 = !DILocation(line: 2106, column: 60, scope: !5893)
!5898 = !DILocalVariable(name: "pixel", arg: 2, scope: !5893, file: !3, line: 2107, type: !1368)
!5899 = !DILocation(line: 2107, column: 31, scope: !5893)
!5900 = !DILocalVariable(name: "blue", scope: !5893, file: !3, line: 2110, type: !458)
!5901 = !DILocation(line: 2110, column: 5, scope: !5893)
!5902 = !DILocalVariable(name: "green", scope: !5893, file: !3, line: 2111, type: !458)
!5903 = !DILocation(line: 2111, column: 5, scope: !5893)
!5904 = !DILocalVariable(name: "intensity", scope: !5893, file: !3, line: 2112, type: !458)
!5905 = !DILocation(line: 2112, column: 5, scope: !5893)
!5906 = !DILocalVariable(name: "red", scope: !5893, file: !3, line: 2113, type: !458)
!5907 = !DILocation(line: 2113, column: 5, scope: !5893)
!5908 = !DILocation(line: 2115, column: 7, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 2115, column: 7)
!5910 = !DILocation(line: 2115, column: 14, scope: !5909)
!5911 = !DILocation(line: 2115, column: 25, scope: !5909)
!5912 = !DILocation(line: 2115, column: 7, scope: !5893)
!5913 = !DILocation(line: 2116, column: 29, scope: !5909)
!5914 = !DILocation(line: 2116, column: 36, scope: !5909)
!5915 = !DILocation(line: 2116, column: 12, scope: !5909)
!5916 = !DILocation(line: 2116, column: 5, scope: !5909)
!5917 = !DILocation(line: 2117, column: 24, scope: !5893)
!5918 = !DILocation(line: 2117, column: 31, scope: !5893)
!5919 = !DILocation(line: 2117, column: 7, scope: !5893)
!5920 = !DILocation(line: 2117, column: 6, scope: !5893)
!5921 = !DILocation(line: 2118, column: 26, scope: !5893)
!5922 = !DILocation(line: 2118, column: 33, scope: !5893)
!5923 = !DILocation(line: 2118, column: 9, scope: !5893)
!5924 = !DILocation(line: 2118, column: 8, scope: !5893)
!5925 = !DILocation(line: 2119, column: 25, scope: !5893)
!5926 = !DILocation(line: 2119, column: 32, scope: !5893)
!5927 = !DILocation(line: 2119, column: 8, scope: !5893)
!5928 = !DILocation(line: 2119, column: 7, scope: !5893)
!5929 = !DILocation(line: 2120, column: 11, scope: !5893)
!5930 = !DILocation(line: 2120, column: 18, scope: !5893)
!5931 = !DILocation(line: 2120, column: 3, scope: !5893)
!5932 = !DILocation(line: 2124, column: 18, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2123, column: 5)
!5934 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 2121, column: 3)
!5935 = !DILocation(line: 2124, column: 22, scope: !5933)
!5936 = !DILocation(line: 2124, column: 21, scope: !5933)
!5937 = !DILocation(line: 2124, column: 28, scope: !5933)
!5938 = !DILocation(line: 2124, column: 27, scope: !5933)
!5939 = !DILocation(line: 2124, column: 17, scope: !5933)
!5940 = !DILocation(line: 2124, column: 33, scope: !5933)
!5941 = !DILocation(line: 2124, column: 16, scope: !5933)
!5942 = !DILocation(line: 2125, column: 7, scope: !5933)
!5943 = !DILocation(line: 2129, column: 37, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2128, column: 5)
!5945 = !DILocation(line: 2129, column: 41, scope: !5944)
!5946 = !DILocation(line: 2129, column: 27, scope: !5944)
!5947 = !DILocation(line: 2129, column: 48, scope: !5944)
!5948 = !DILocation(line: 2129, column: 17, scope: !5944)
!5949 = !DILocation(line: 2129, column: 16, scope: !5944)
!5950 = !DILocation(line: 2130, column: 7, scope: !5944)
!5951 = !DILocation(line: 2134, column: 38, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2133, column: 5)
!5953 = !DILocation(line: 2134, column: 42, scope: !5952)
!5954 = !DILocation(line: 2134, column: 28, scope: !5952)
!5955 = !DILocation(line: 2134, column: 49, scope: !5952)
!5956 = !DILocation(line: 2134, column: 18, scope: !5952)
!5957 = !DILocation(line: 2135, column: 29, scope: !5952)
!5958 = !DILocation(line: 2135, column: 33, scope: !5952)
!5959 = !DILocation(line: 2135, column: 19, scope: !5952)
!5960 = !DILocation(line: 2135, column: 40, scope: !5952)
!5961 = !DILocation(line: 2135, column: 9, scope: !5952)
!5962 = !DILocation(line: 2134, column: 54, scope: !5952)
!5963 = !DILocation(line: 2134, column: 17, scope: !5952)
!5964 = !DILocation(line: 2135, column: 46, scope: !5952)
!5965 = !DILocation(line: 2134, column: 16, scope: !5952)
!5966 = !DILocation(line: 2136, column: 7, scope: !5952)
!5967 = !DILocation(line: 2140, column: 45, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2139, column: 5)
!5969 = !DILocation(line: 2140, column: 36, scope: !5968)
!5970 = !DILocation(line: 2140, column: 49, scope: !5968)
!5971 = !DILocation(line: 2140, column: 48, scope: !5968)
!5972 = !DILocation(line: 2140, column: 53, scope: !5968)
!5973 = !DILocation(line: 2140, column: 59, scope: !5968)
!5974 = !DILocation(line: 2140, column: 58, scope: !5968)
!5975 = !DILocation(line: 2140, column: 52, scope: !5968)
!5976 = !DILocation(line: 2140, column: 65, scope: !5968)
!5977 = !DILocation(line: 2140, column: 70, scope: !5968)
!5978 = !DILocation(line: 2140, column: 69, scope: !5968)
!5979 = !DILocation(line: 2140, column: 64, scope: !5968)
!5980 = !DILocation(line: 2140, column: 75, scope: !5968)
!5981 = !DILocation(line: 2140, column: 17, scope: !5968)
!5982 = !DILocation(line: 2140, column: 16, scope: !5968)
!5983 = !DILocation(line: 2142, column: 7, scope: !5968)
!5984 = !DILocation(line: 2146, column: 11, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 2146, column: 11)
!5986 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2145, column: 5)
!5987 = !DILocation(line: 2146, column: 18, scope: !5985)
!5988 = !DILocation(line: 2146, column: 29, scope: !5985)
!5989 = !DILocation(line: 2146, column: 11, scope: !5986)
!5990 = !DILocation(line: 2148, column: 32, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 2147, column: 9)
!5992 = !DILocation(line: 2148, column: 15, scope: !5991)
!5993 = !DILocation(line: 2148, column: 14, scope: !5991)
!5994 = !DILocation(line: 2149, column: 34, scope: !5991)
!5995 = !DILocation(line: 2149, column: 17, scope: !5991)
!5996 = !DILocation(line: 2149, column: 16, scope: !5991)
!5997 = !DILocation(line: 2150, column: 33, scope: !5991)
!5998 = !DILocation(line: 2150, column: 16, scope: !5991)
!5999 = !DILocation(line: 2150, column: 15, scope: !5991)
!6000 = !DILocation(line: 2151, column: 9, scope: !5991)
!6001 = !DILocation(line: 2152, column: 26, scope: !5986)
!6002 = !DILocation(line: 2152, column: 25, scope: !5986)
!6003 = !DILocation(line: 2152, column: 39, scope: !5986)
!6004 = !DILocation(line: 2152, column: 38, scope: !5986)
!6005 = !DILocation(line: 2152, column: 29, scope: !5986)
!6006 = !DILocation(line: 2152, column: 54, scope: !5986)
!6007 = !DILocation(line: 2152, column: 53, scope: !5986)
!6008 = !DILocation(line: 2152, column: 44, scope: !5986)
!6009 = !DILocation(line: 2152, column: 17, scope: !5986)
!6010 = !DILocation(line: 2152, column: 16, scope: !5986)
!6011 = !DILocation(line: 2153, column: 7, scope: !5986)
!6012 = !DILocation(line: 2157, column: 11, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 2157, column: 11)
!6014 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2156, column: 5)
!6015 = !DILocation(line: 2157, column: 18, scope: !6013)
!6016 = !DILocation(line: 2157, column: 29, scope: !6013)
!6017 = !DILocation(line: 2157, column: 11, scope: !6014)
!6018 = !DILocation(line: 2159, column: 32, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 2158, column: 9)
!6020 = !DILocation(line: 2159, column: 15, scope: !6019)
!6021 = !DILocation(line: 2159, column: 14, scope: !6019)
!6022 = !DILocation(line: 2160, column: 34, scope: !6019)
!6023 = !DILocation(line: 2160, column: 17, scope: !6019)
!6024 = !DILocation(line: 2160, column: 16, scope: !6019)
!6025 = !DILocation(line: 2161, column: 33, scope: !6019)
!6026 = !DILocation(line: 2161, column: 16, scope: !6019)
!6027 = !DILocation(line: 2161, column: 15, scope: !6019)
!6028 = !DILocation(line: 2162, column: 9, scope: !6019)
!6029 = !DILocation(line: 2163, column: 26, scope: !6014)
!6030 = !DILocation(line: 2163, column: 25, scope: !6014)
!6031 = !DILocation(line: 2163, column: 39, scope: !6014)
!6032 = !DILocation(line: 2163, column: 38, scope: !6014)
!6033 = !DILocation(line: 2163, column: 29, scope: !6014)
!6034 = !DILocation(line: 2163, column: 54, scope: !6014)
!6035 = !DILocation(line: 2163, column: 53, scope: !6014)
!6036 = !DILocation(line: 2163, column: 44, scope: !6014)
!6037 = !DILocation(line: 2163, column: 17, scope: !6014)
!6038 = !DILocation(line: 2163, column: 16, scope: !6014)
!6039 = !DILocation(line: 2164, column: 7, scope: !6014)
!6040 = !DILocation(line: 2165, column: 5, scope: !6014)
!6041 = !DILocation(line: 2169, column: 11, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 2169, column: 11)
!6043 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2168, column: 5)
!6044 = !DILocation(line: 2169, column: 18, scope: !6042)
!6045 = !DILocation(line: 2169, column: 29, scope: !6042)
!6046 = !DILocation(line: 2169, column: 11, scope: !6043)
!6047 = !DILocation(line: 2171, column: 32, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 2170, column: 9)
!6049 = !DILocation(line: 2171, column: 15, scope: !6048)
!6050 = !DILocation(line: 2171, column: 14, scope: !6048)
!6051 = !DILocation(line: 2172, column: 34, scope: !6048)
!6052 = !DILocation(line: 2172, column: 17, scope: !6048)
!6053 = !DILocation(line: 2172, column: 16, scope: !6048)
!6054 = !DILocation(line: 2173, column: 33, scope: !6048)
!6055 = !DILocation(line: 2173, column: 16, scope: !6048)
!6056 = !DILocation(line: 2173, column: 15, scope: !6048)
!6057 = !DILocation(line: 2174, column: 9, scope: !6048)
!6058 = !DILocation(line: 2175, column: 26, scope: !6043)
!6059 = !DILocation(line: 2175, column: 25, scope: !6043)
!6060 = !DILocation(line: 2175, column: 39, scope: !6043)
!6061 = !DILocation(line: 2175, column: 38, scope: !6043)
!6062 = !DILocation(line: 2175, column: 29, scope: !6043)
!6063 = !DILocation(line: 2175, column: 54, scope: !6043)
!6064 = !DILocation(line: 2175, column: 53, scope: !6043)
!6065 = !DILocation(line: 2175, column: 44, scope: !6043)
!6066 = !DILocation(line: 2175, column: 17, scope: !6043)
!6067 = !DILocation(line: 2175, column: 16, scope: !6043)
!6068 = !DILocation(line: 2176, column: 7, scope: !6043)
!6069 = !DILocation(line: 2180, column: 11, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 2180, column: 11)
!6071 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2179, column: 5)
!6072 = !DILocation(line: 2180, column: 18, scope: !6070)
!6073 = !DILocation(line: 2180, column: 29, scope: !6070)
!6074 = !DILocation(line: 2180, column: 11, scope: !6071)
!6075 = !DILocation(line: 2182, column: 32, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 2181, column: 9)
!6077 = !DILocation(line: 2182, column: 15, scope: !6076)
!6078 = !DILocation(line: 2182, column: 14, scope: !6076)
!6079 = !DILocation(line: 2183, column: 34, scope: !6076)
!6080 = !DILocation(line: 2183, column: 17, scope: !6076)
!6081 = !DILocation(line: 2183, column: 16, scope: !6076)
!6082 = !DILocation(line: 2184, column: 33, scope: !6076)
!6083 = !DILocation(line: 2184, column: 16, scope: !6076)
!6084 = !DILocation(line: 2184, column: 15, scope: !6076)
!6085 = !DILocation(line: 2185, column: 9, scope: !6076)
!6086 = !DILocation(line: 2186, column: 26, scope: !6071)
!6087 = !DILocation(line: 2186, column: 25, scope: !6071)
!6088 = !DILocation(line: 2186, column: 39, scope: !6071)
!6089 = !DILocation(line: 2186, column: 38, scope: !6071)
!6090 = !DILocation(line: 2186, column: 29, scope: !6071)
!6091 = !DILocation(line: 2186, column: 54, scope: !6071)
!6092 = !DILocation(line: 2186, column: 53, scope: !6071)
!6093 = !DILocation(line: 2186, column: 44, scope: !6071)
!6094 = !DILocation(line: 2186, column: 17, scope: !6071)
!6095 = !DILocation(line: 2186, column: 16, scope: !6071)
!6096 = !DILocation(line: 2187, column: 7, scope: !6071)
!6097 = !DILocation(line: 2191, column: 49, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2190, column: 5)
!6099 = !DILocation(line: 2191, column: 40, scope: !6098)
!6100 = !DILocation(line: 2191, column: 53, scope: !6098)
!6101 = !DILocation(line: 2191, column: 52, scope: !6098)
!6102 = !DILocation(line: 2191, column: 57, scope: !6098)
!6103 = !DILocation(line: 2191, column: 63, scope: !6098)
!6104 = !DILocation(line: 2191, column: 62, scope: !6098)
!6105 = !DILocation(line: 2191, column: 56, scope: !6098)
!6106 = !DILocation(line: 2191, column: 69, scope: !6098)
!6107 = !DILocation(line: 2191, column: 74, scope: !6098)
!6108 = !DILocation(line: 2191, column: 73, scope: !6098)
!6109 = !DILocation(line: 2191, column: 68, scope: !6098)
!6110 = !DILocation(line: 2191, column: 35, scope: !6098)
!6111 = !DILocation(line: 2192, column: 9, scope: !6098)
!6112 = !DILocation(line: 2191, column: 79, scope: !6098)
!6113 = !DILocation(line: 2191, column: 17, scope: !6098)
!6114 = !DILocation(line: 2191, column: 16, scope: !6098)
!6115 = !DILocation(line: 2193, column: 7, scope: !6098)
!6116 = !DILocation(line: 2196, column: 10, scope: !5893)
!6117 = !DILocation(line: 2196, column: 3, scope: !5893)
!6118 = !DILocation(line: 2197, column: 1, scope: !5893)
!6119 = distinct !DISubprogram(name: "MagickMax", scope: !3, file: !3, line: 2090, type: !6120, scopeLine: 2092, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!6120 = !DISubroutineType(types: !6121)
!6121 = !{!458, !755, !755}
!6122 = !DILocalVariable(name: "x", arg: 1, scope: !6119, file: !3, line: 2090, type: !755)
!6123 = !DILocation(line: 2090, column: 61, scope: !6119)
!6124 = !DILocalVariable(name: "y", arg: 2, scope: !6119, file: !3, line: 2091, type: !755)
!6125 = !DILocation(line: 2091, column: 24, scope: !6119)
!6126 = !DILocation(line: 2093, column: 7, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 2093, column: 7)
!6128 = !DILocation(line: 2093, column: 11, scope: !6127)
!6129 = !DILocation(line: 2093, column: 9, scope: !6127)
!6130 = !DILocation(line: 2093, column: 7, scope: !6119)
!6131 = !DILocation(line: 2094, column: 12, scope: !6127)
!6132 = !DILocation(line: 2094, column: 5, scope: !6127)
!6133 = !DILocation(line: 2095, column: 10, scope: !6119)
!6134 = !DILocation(line: 2095, column: 3, scope: !6119)
!6135 = !DILocation(line: 2096, column: 1, scope: !6119)
!6136 = distinct !DISubprogram(name: "MagickMin", scope: !3, file: !3, line: 2098, type: !6120, scopeLine: 2100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!6137 = !DILocalVariable(name: "x", arg: 1, scope: !6136, file: !3, line: 2098, type: !755)
!6138 = !DILocation(line: 2098, column: 61, scope: !6136)
!6139 = !DILocalVariable(name: "y", arg: 2, scope: !6136, file: !3, line: 2099, type: !755)
!6140 = !DILocation(line: 2099, column: 24, scope: !6136)
!6141 = !DILocation(line: 2101, column: 7, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 2101, column: 7)
!6143 = !DILocation(line: 2101, column: 11, scope: !6142)
!6144 = !DILocation(line: 2101, column: 9, scope: !6142)
!6145 = !DILocation(line: 2101, column: 7, scope: !6136)
!6146 = !DILocation(line: 2102, column: 12, scope: !6142)
!6147 = !DILocation(line: 2102, column: 5, scope: !6142)
!6148 = !DILocation(line: 2103, column: 10, scope: !6136)
!6149 = !DILocation(line: 2103, column: 3, scope: !6136)
!6150 = !DILocation(line: 2104, column: 1, scope: !6136)
!6151 = distinct !DISubprogram(name: "ImportImagePixels", scope: !3, file: !3, line: 3937, type: !6152, scopeLine: 3940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !714)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!451, !475, !1067, !1067, !1068, !1068, !594, !1069, !6154}
!6154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6155, size: 64)
!6155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!6156 = !DILocalVariable(name: "image", arg: 1, scope: !6151, file: !3, line: 3937, type: !475)
!6157 = !DILocation(line: 3937, column: 57, scope: !6151)
!6158 = !DILocalVariable(name: "x", arg: 2, scope: !6151, file: !3, line: 3937, type: !1067)
!6159 = !DILocation(line: 3937, column: 77, scope: !6151)
!6160 = !DILocalVariable(name: "y", arg: 3, scope: !6151, file: !3, line: 3938, type: !1067)
!6161 = !DILocation(line: 3938, column: 17, scope: !6151)
!6162 = !DILocalVariable(name: "width", arg: 4, scope: !6151, file: !3, line: 3938, type: !1068)
!6163 = !DILocation(line: 3938, column: 32, scope: !6151)
!6164 = !DILocalVariable(name: "height", arg: 5, scope: !6151, file: !3, line: 3938, type: !1068)
!6165 = !DILocation(line: 3938, column: 51, scope: !6151)
!6166 = !DILocalVariable(name: "map", arg: 6, scope: !6151, file: !3, line: 3938, type: !594)
!6167 = !DILocation(line: 3938, column: 70, scope: !6151)
!6168 = !DILocalVariable(name: "type", arg: 7, scope: !6151, file: !3, line: 3939, type: !1069)
!6169 = !DILocation(line: 3939, column: 21, scope: !6151)
!6170 = !DILocalVariable(name: "pixels", arg: 8, scope: !6151, file: !3, line: 3939, type: !6154)
!6171 = !DILocation(line: 3939, column: 38, scope: !6151)
!6172 = !DILocalVariable(name: "exception", scope: !6151, file: !3, line: 3942, type: !1071)
!6173 = !DILocation(line: 3942, column: 6, scope: !6151)
!6174 = !DILocalVariable(name: "quantum_map", scope: !6151, file: !3, line: 3945, type: !468)
!6175 = !DILocation(line: 3945, column: 6, scope: !6151)
!6176 = !DILocalVariable(name: "roi", scope: !6151, file: !3, line: 3948, type: !533)
!6177 = !DILocation(line: 3948, column: 5, scope: !6151)
!6178 = !DILocalVariable(name: "i", scope: !6151, file: !3, line: 3951, type: !470)
!6179 = !DILocation(line: 3951, column: 5, scope: !6151)
!6180 = !DILocalVariable(name: "length", scope: !6151, file: !3, line: 3954, type: !454)
!6181 = !DILocation(line: 3954, column: 5, scope: !6151)
!6182 = !DILocation(line: 3961, column: 7, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 3961, column: 7)
!6184 = !DILocation(line: 3961, column: 14, scope: !6183)
!6185 = !DILocation(line: 3961, column: 20, scope: !6183)
!6186 = !DILocation(line: 3961, column: 7, scope: !6151)
!6187 = !DILocation(line: 3962, column: 61, scope: !6183)
!6188 = !DILocation(line: 3962, column: 68, scope: !6183)
!6189 = !DILocation(line: 3962, column: 12, scope: !6183)
!6190 = !DILocation(line: 3962, column: 5, scope: !6183)
!6191 = !DILocation(line: 3963, column: 17, scope: !6151)
!6192 = !DILocation(line: 3963, column: 10, scope: !6151)
!6193 = !DILocation(line: 3963, column: 9, scope: !6151)
!6194 = !DILocation(line: 3964, column: 52, scope: !6151)
!6195 = !DILocation(line: 3964, column: 31, scope: !6151)
!6196 = !DILocation(line: 3964, column: 15, scope: !6151)
!6197 = !DILocation(line: 3964, column: 14, scope: !6151)
!6198 = !DILocation(line: 3965, column: 7, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 3965, column: 7)
!6200 = !DILocation(line: 3965, column: 19, scope: !6199)
!6201 = !DILocation(line: 3965, column: 7, scope: !6151)
!6202 = !DILocation(line: 3966, column: 5, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 3966, column: 5)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 3966, column: 5)
!6205 = !DILocation(line: 3966, column: 5, scope: !6204)
!6206 = !DILocation(line: 3968, column: 9, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 3968, column: 3)
!6208 = !DILocation(line: 3968, column: 8, scope: !6207)
!6209 = !DILocation(line: 3968, column: 13, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 3968, column: 3)
!6211 = !DILocation(line: 3968, column: 27, scope: !6210)
!6212 = !DILocation(line: 3968, column: 15, scope: !6210)
!6213 = !DILocation(line: 3968, column: 3, scope: !6207)
!6214 = !DILocation(line: 3970, column: 13, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 3969, column: 3)
!6216 = !DILocation(line: 3970, column: 17, scope: !6215)
!6217 = !DILocation(line: 3970, column: 5, scope: !6215)
!6218 = !DILocation(line: 3975, column: 9, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 3974, column: 7)
!6220 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 3971, column: 5)
!6221 = !DILocation(line: 3975, column: 21, scope: !6219)
!6222 = !DILocation(line: 3975, column: 23, scope: !6219)
!6223 = !DILocation(line: 3976, column: 9, scope: !6219)
!6224 = !DILocation(line: 3976, column: 16, scope: !6219)
!6225 = !DILocation(line: 3976, column: 21, scope: !6219)
!6226 = !DILocation(line: 3977, column: 9, scope: !6219)
!6227 = !DILocation(line: 3982, column: 9, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 3981, column: 7)
!6229 = !DILocation(line: 3982, column: 21, scope: !6228)
!6230 = !DILocation(line: 3982, column: 23, scope: !6228)
!6231 = !DILocation(line: 3983, column: 9, scope: !6228)
!6232 = !DILocation(line: 3988, column: 9, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 3987, column: 7)
!6234 = !DILocation(line: 3988, column: 21, scope: !6233)
!6235 = !DILocation(line: 3988, column: 23, scope: !6233)
!6236 = !DILocation(line: 3989, column: 35, scope: !6233)
!6237 = !DILocation(line: 3989, column: 16, scope: !6233)
!6238 = !DILocation(line: 3990, column: 9, scope: !6233)
!6239 = !DILocation(line: 3995, column: 9, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 3994, column: 7)
!6241 = !DILocation(line: 3995, column: 21, scope: !6240)
!6242 = !DILocation(line: 3995, column: 23, scope: !6240)
!6243 = !DILocation(line: 3996, column: 9, scope: !6240)
!6244 = !DILocation(line: 4001, column: 9, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 4000, column: 7)
!6246 = !DILocation(line: 4001, column: 21, scope: !6245)
!6247 = !DILocation(line: 4001, column: 23, scope: !6245)
!6248 = !DILocation(line: 4002, column: 35, scope: !6245)
!6249 = !DILocation(line: 4002, column: 16, scope: !6245)
!6250 = !DILocation(line: 4003, column: 9, scope: !6245)
!6251 = !DILocation(line: 4008, column: 9, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 4007, column: 7)
!6253 = !DILocation(line: 4008, column: 21, scope: !6252)
!6254 = !DILocation(line: 4008, column: 23, scope: !6252)
!6255 = !DILocation(line: 4009, column: 35, scope: !6252)
!6256 = !DILocation(line: 4009, column: 16, scope: !6252)
!6257 = !DILocation(line: 4010, column: 9, scope: !6252)
!6258 = !DILocation(line: 4015, column: 9, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 4014, column: 7)
!6260 = !DILocation(line: 4015, column: 21, scope: !6259)
!6261 = !DILocation(line: 4015, column: 23, scope: !6259)
!6262 = !DILocation(line: 4016, column: 35, scope: !6259)
!6263 = !DILocation(line: 4016, column: 16, scope: !6259)
!6264 = !DILocation(line: 4017, column: 9, scope: !6259)
!6265 = !DILocation(line: 4022, column: 9, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 4021, column: 7)
!6267 = !DILocation(line: 4022, column: 21, scope: !6266)
!6268 = !DILocation(line: 4022, column: 23, scope: !6266)
!6269 = !DILocation(line: 4023, column: 9, scope: !6266)
!6270 = !DILocation(line: 4023, column: 16, scope: !6266)
!6271 = !DILocation(line: 4023, column: 21, scope: !6266)
!6272 = !DILocation(line: 4024, column: 9, scope: !6266)
!6273 = !DILocation(line: 4029, column: 9, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 4028, column: 7)
!6275 = !DILocation(line: 4029, column: 21, scope: !6274)
!6276 = !DILocation(line: 4029, column: 23, scope: !6274)
!6277 = !DILocation(line: 4030, column: 9, scope: !6274)
!6278 = !DILocation(line: 4035, column: 9, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 4034, column: 7)
!6280 = !DILocation(line: 4035, column: 21, scope: !6279)
!6281 = !DILocation(line: 4035, column: 23, scope: !6279)
!6282 = !DILocation(line: 4036, column: 9, scope: !6279)
!6283 = !DILocation(line: 4041, column: 9, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 4040, column: 7)
!6285 = !DILocation(line: 4041, column: 21, scope: !6284)
!6286 = !DILocation(line: 4041, column: 23, scope: !6284)
!6287 = !DILocation(line: 4042, column: 35, scope: !6284)
!6288 = !DILocation(line: 4042, column: 16, scope: !6284)
!6289 = !DILocation(line: 4043, column: 9, scope: !6284)
!6290 = !DILocation(line: 4047, column: 60, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 4046, column: 7)
!6292 = !DILocation(line: 4047, column: 37, scope: !6291)
!6293 = !DILocation(line: 4047, column: 21, scope: !6291)
!6294 = !DILocation(line: 4047, column: 20, scope: !6291)
!6295 = !DILocation(line: 4048, column: 38, scope: !6291)
!6296 = !DILocation(line: 4048, column: 45, scope: !6291)
!6297 = !DILocation(line: 4049, column: 53, scope: !6291)
!6298 = !DILocation(line: 4048, column: 16, scope: !6291)
!6299 = !DILocation(line: 4050, column: 9, scope: !6291)
!6300 = !DILocation(line: 4053, column: 3, scope: !6215)
!6301 = !DILocation(line: 3968, column: 36, scope: !6210)
!6302 = !DILocation(line: 3968, column: 3, scope: !6210)
!6303 = distinct !{!6303, !6213, !6304}
!6304 = !DILocation(line: 4053, column: 3, scope: !6207)
!6305 = !DILocation(line: 4054, column: 28, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 4054, column: 7)
!6307 = !DILocation(line: 4054, column: 7, scope: !6306)
!6308 = !DILocation(line: 4054, column: 47, scope: !6306)
!6309 = !DILocation(line: 4054, column: 7, scope: !6151)
!6310 = !DILocation(line: 4055, column: 5, scope: !6306)
!6311 = !DILocation(line: 4059, column: 15, scope: !6151)
!6312 = !DILocation(line: 4059, column: 22, scope: !6151)
!6313 = !DILocation(line: 4059, column: 12, scope: !6151)
!6314 = !DILocation(line: 4060, column: 13, scope: !6151)
!6315 = !DILocation(line: 4060, column: 7, scope: !6151)
!6316 = !DILocation(line: 4060, column: 12, scope: !6151)
!6317 = !DILocation(line: 4061, column: 14, scope: !6151)
!6318 = !DILocation(line: 4061, column: 7, scope: !6151)
!6319 = !DILocation(line: 4061, column: 13, scope: !6151)
!6320 = !DILocation(line: 4062, column: 9, scope: !6151)
!6321 = !DILocation(line: 4062, column: 7, scope: !6151)
!6322 = !DILocation(line: 4062, column: 8, scope: !6151)
!6323 = !DILocation(line: 4063, column: 9, scope: !6151)
!6324 = !DILocation(line: 4063, column: 7, scope: !6151)
!6325 = !DILocation(line: 4063, column: 8, scope: !6151)
!6326 = !DILocation(line: 4064, column: 11, scope: !6151)
!6327 = !DILocation(line: 4064, column: 3, scope: !6151)
!6328 = !DILocation(line: 4068, column: 23, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 4067, column: 5)
!6330 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 4065, column: 3)
!6331 = !DILocation(line: 4068, column: 34, scope: !6329)
!6332 = !DILocation(line: 4068, column: 38, scope: !6329)
!6333 = !DILocation(line: 4068, column: 50, scope: !6329)
!6334 = !DILocation(line: 4068, column: 57, scope: !6329)
!6335 = !DILocation(line: 4068, column: 7, scope: !6329)
!6336 = !DILocation(line: 4069, column: 7, scope: !6329)
!6337 = !DILocation(line: 4073, column: 25, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 4072, column: 5)
!6339 = !DILocation(line: 4073, column: 36, scope: !6338)
!6340 = !DILocation(line: 4073, column: 40, scope: !6338)
!6341 = !DILocation(line: 4073, column: 52, scope: !6338)
!6342 = !DILocation(line: 4073, column: 59, scope: !6338)
!6343 = !DILocation(line: 4073, column: 7, scope: !6338)
!6344 = !DILocation(line: 4074, column: 7, scope: !6338)
!6345 = !DILocation(line: 4078, column: 24, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 4077, column: 5)
!6347 = !DILocation(line: 4078, column: 35, scope: !6346)
!6348 = !DILocation(line: 4078, column: 39, scope: !6346)
!6349 = !DILocation(line: 4078, column: 51, scope: !6346)
!6350 = !DILocation(line: 4078, column: 58, scope: !6346)
!6351 = !DILocation(line: 4078, column: 7, scope: !6346)
!6352 = !DILocation(line: 4079, column: 7, scope: !6346)
!6353 = !DILocation(line: 4083, column: 26, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 4082, column: 5)
!6355 = !DILocation(line: 4083, column: 37, scope: !6354)
!6356 = !DILocation(line: 4083, column: 41, scope: !6354)
!6357 = !DILocation(line: 4083, column: 53, scope: !6354)
!6358 = !DILocation(line: 4083, column: 60, scope: !6354)
!6359 = !DILocation(line: 4083, column: 7, scope: !6354)
!6360 = !DILocation(line: 4084, column: 7, scope: !6354)
!6361 = !DILocation(line: 4088, column: 23, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 4087, column: 5)
!6363 = !DILocation(line: 4088, column: 34, scope: !6362)
!6364 = !DILocation(line: 4088, column: 38, scope: !6362)
!6365 = !DILocation(line: 4088, column: 50, scope: !6362)
!6366 = !DILocation(line: 4088, column: 57, scope: !6362)
!6367 = !DILocation(line: 4088, column: 7, scope: !6362)
!6368 = !DILocation(line: 4089, column: 7, scope: !6362)
!6369 = !DILocation(line: 4093, column: 26, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 4092, column: 5)
!6371 = !DILocation(line: 4093, column: 37, scope: !6370)
!6372 = !DILocation(line: 4093, column: 41, scope: !6370)
!6373 = !DILocation(line: 4093, column: 53, scope: !6370)
!6374 = !DILocation(line: 4093, column: 60, scope: !6370)
!6375 = !DILocation(line: 4093, column: 7, scope: !6370)
!6376 = !DILocation(line: 4094, column: 7, scope: !6370)
!6377 = !DILocation(line: 4098, column: 24, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 4097, column: 5)
!6379 = !DILocation(line: 4098, column: 35, scope: !6378)
!6380 = !DILocation(line: 4098, column: 39, scope: !6378)
!6381 = !DILocation(line: 4098, column: 51, scope: !6378)
!6382 = !DILocation(line: 4098, column: 58, scope: !6378)
!6383 = !DILocation(line: 4098, column: 7, scope: !6378)
!6384 = !DILocation(line: 4099, column: 7, scope: !6378)
!6385 = !DILocation(line: 4103, column: 58, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 4102, column: 5)
!6387 = !DILocation(line: 4103, column: 35, scope: !6386)
!6388 = !DILocation(line: 4103, column: 19, scope: !6386)
!6389 = !DILocation(line: 4103, column: 18, scope: !6386)
!6390 = !DILocation(line: 4104, column: 36, scope: !6386)
!6391 = !DILocation(line: 4104, column: 43, scope: !6386)
!6392 = !DILocation(line: 4105, column: 54, scope: !6386)
!6393 = !DILocation(line: 4104, column: 14, scope: !6386)
!6394 = !DILocation(line: 4106, column: 7, scope: !6386)
!6395 = !DILocation(line: 4109, column: 54, scope: !6151)
!6396 = !DILocation(line: 4109, column: 31, scope: !6151)
!6397 = !DILocation(line: 4109, column: 15, scope: !6151)
!6398 = !DILocation(line: 4109, column: 14, scope: !6151)
!6399 = !DILocation(line: 4110, column: 3, scope: !6151)
!6400 = !DILocation(line: 4111, column: 1, scope: !6151)
!6401 = distinct !DISubprogram(name: "ImportCharPixel", scope: !3, file: !3, line: 2252, type: !6402, scopeLine: 2255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!6402 = !DISubroutineType(types: !6403)
!6403 = !{null, !475, !1347, !1349, !1350, !6154, !1071}
!6404 = !DILocalVariable(name: "image", arg: 1, scope: !6401, file: !3, line: 2252, type: !475)
!6405 = !DILocation(line: 2252, column: 36, scope: !6401)
!6406 = !DILocalVariable(name: "roi", arg: 2, scope: !6401, file: !3, line: 2252, type: !1347)
!6407 = !DILocation(line: 2252, column: 63, scope: !6401)
!6408 = !DILocalVariable(name: "map", arg: 3, scope: !6401, file: !3, line: 2253, type: !1349)
!6409 = !DILocation(line: 2253, column: 24, scope: !6401)
!6410 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !6401, file: !3, line: 2253, type: !1350)
!6411 = !DILocation(line: 2253, column: 47, scope: !6401)
!6412 = !DILocalVariable(name: "pixels", arg: 5, scope: !6401, file: !3, line: 2253, type: !6154)
!6413 = !DILocation(line: 2253, column: 71, scope: !6401)
!6414 = !DILocalVariable(name: "exception", arg: 6, scope: !6401, file: !3, line: 2254, type: !1071)
!6415 = !DILocation(line: 2254, column: 18, scope: !6401)
!6416 = !DILocalVariable(name: "p", scope: !6401, file: !3, line: 2257, type: !6417)
!6417 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !693)
!6418 = !DILocation(line: 2257, column: 15, scope: !6401)
!6419 = !DILocalVariable(name: "indexes", scope: !6401, file: !3, line: 2260, type: !6420)
!6420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !695)
!6421 = !DILocation(line: 2260, column: 15, scope: !6401)
!6422 = !DILocalVariable(name: "q", scope: !6401, file: !3, line: 2263, type: !6423)
!6423 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !493)
!6424 = !DILocation(line: 2263, column: 15, scope: !6401)
!6425 = !DILocalVariable(name: "x", scope: !6401, file: !3, line: 2266, type: !470)
!6426 = !DILocation(line: 2266, column: 5, scope: !6401)
!6427 = !DILocalVariable(name: "length", scope: !6401, file: !3, line: 2269, type: !454)
!6428 = !DILocation(line: 2269, column: 5, scope: !6401)
!6429 = !DILocalVariable(name: "y", scope: !6401, file: !3, line: 2272, type: !470)
!6430 = !DILocation(line: 2272, column: 5, scope: !6401)
!6431 = !DILocation(line: 2274, column: 29, scope: !6401)
!6432 = !DILocation(line: 2274, column: 4, scope: !6401)
!6433 = !DILocation(line: 2275, column: 21, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2275, column: 7)
!6435 = !DILocation(line: 2275, column: 7, scope: !6434)
!6436 = !DILocation(line: 2275, column: 32, scope: !6434)
!6437 = !DILocation(line: 2275, column: 7, scope: !6401)
!6438 = !DILocation(line: 2277, column: 13, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2277, column: 7)
!6440 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2276, column: 5)
!6441 = !DILocation(line: 2277, column: 12, scope: !6439)
!6442 = !DILocation(line: 2277, column: 17, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 2277, column: 7)
!6444 = !DILocation(line: 2277, column: 31, scope: !6443)
!6445 = !DILocation(line: 2277, column: 36, scope: !6443)
!6446 = !DILocation(line: 2277, column: 19, scope: !6443)
!6447 = !DILocation(line: 2277, column: 7, scope: !6439)
!6448 = !DILocation(line: 2279, column: 30, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 2278, column: 7)
!6450 = !DILocation(line: 2279, column: 36, scope: !6449)
!6451 = !DILocation(line: 2279, column: 41, scope: !6449)
!6452 = !DILocation(line: 2279, column: 43, scope: !6449)
!6453 = !DILocation(line: 2279, column: 48, scope: !6449)
!6454 = !DILocation(line: 2279, column: 50, scope: !6449)
!6455 = !DILocation(line: 2279, column: 49, scope: !6449)
!6456 = !DILocation(line: 2279, column: 52, scope: !6449)
!6457 = !DILocation(line: 2279, column: 57, scope: !6449)
!6458 = !DILocation(line: 2279, column: 65, scope: !6449)
!6459 = !DILocation(line: 2279, column: 11, scope: !6449)
!6460 = !DILocation(line: 2279, column: 10, scope: !6449)
!6461 = !DILocation(line: 2280, column: 13, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2280, column: 13)
!6463 = !DILocation(line: 2280, column: 15, scope: !6462)
!6464 = !DILocation(line: 2280, column: 13, scope: !6449)
!6465 = !DILocation(line: 2281, column: 11, scope: !6462)
!6466 = !DILocation(line: 2282, column: 15, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2282, column: 9)
!6468 = !DILocation(line: 2282, column: 14, scope: !6467)
!6469 = !DILocation(line: 2282, column: 19, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 2282, column: 9)
!6471 = !DILocation(line: 2282, column: 33, scope: !6470)
!6472 = !DILocation(line: 2282, column: 38, scope: !6470)
!6473 = !DILocation(line: 2282, column: 21, scope: !6470)
!6474 = !DILocation(line: 2282, column: 9, scope: !6467)
!6475 = !DILocation(line: 2284, column: 11, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2283, column: 9)
!6477 = !DILocation(line: 2285, column: 11, scope: !6476)
!6478 = !DILocation(line: 2286, column: 11, scope: !6476)
!6479 = !DILocation(line: 2287, column: 12, scope: !6476)
!6480 = !DILocation(line: 2288, column: 9, scope: !6476)
!6481 = !DILocation(line: 2282, column: 46, scope: !6470)
!6482 = !DILocation(line: 2282, column: 9, scope: !6470)
!6483 = distinct !{!6483, !6474, !6484}
!6484 = !DILocation(line: 2288, column: 9, scope: !6467)
!6485 = !DILocation(line: 2289, column: 33, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2289, column: 13)
!6487 = !DILocation(line: 2289, column: 39, scope: !6486)
!6488 = !DILocation(line: 2289, column: 13, scope: !6486)
!6489 = !DILocation(line: 2289, column: 50, scope: !6486)
!6490 = !DILocation(line: 2289, column: 13, scope: !6449)
!6491 = !DILocation(line: 2290, column: 11, scope: !6486)
!6492 = !DILocation(line: 2291, column: 7, scope: !6449)
!6493 = !DILocation(line: 2277, column: 45, scope: !6443)
!6494 = !DILocation(line: 2277, column: 7, scope: !6443)
!6495 = distinct !{!6495, !6447, !6496}
!6496 = !DILocation(line: 2291, column: 7, scope: !6439)
!6497 = !DILocation(line: 2292, column: 7, scope: !6440)
!6498 = !DILocation(line: 2294, column: 21, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2294, column: 7)
!6500 = !DILocation(line: 2294, column: 7, scope: !6499)
!6501 = !DILocation(line: 2294, column: 33, scope: !6499)
!6502 = !DILocation(line: 2294, column: 7, scope: !6401)
!6503 = !DILocation(line: 2296, column: 13, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2296, column: 7)
!6505 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 2295, column: 5)
!6506 = !DILocation(line: 2296, column: 12, scope: !6504)
!6507 = !DILocation(line: 2296, column: 17, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 2296, column: 7)
!6509 = !DILocation(line: 2296, column: 31, scope: !6508)
!6510 = !DILocation(line: 2296, column: 36, scope: !6508)
!6511 = !DILocation(line: 2296, column: 19, scope: !6508)
!6512 = !DILocation(line: 2296, column: 7, scope: !6504)
!6513 = !DILocation(line: 2298, column: 30, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 2297, column: 7)
!6515 = !DILocation(line: 2298, column: 36, scope: !6514)
!6516 = !DILocation(line: 2298, column: 41, scope: !6514)
!6517 = !DILocation(line: 2298, column: 43, scope: !6514)
!6518 = !DILocation(line: 2298, column: 48, scope: !6514)
!6519 = !DILocation(line: 2298, column: 50, scope: !6514)
!6520 = !DILocation(line: 2298, column: 49, scope: !6514)
!6521 = !DILocation(line: 2298, column: 52, scope: !6514)
!6522 = !DILocation(line: 2298, column: 57, scope: !6514)
!6523 = !DILocation(line: 2298, column: 65, scope: !6514)
!6524 = !DILocation(line: 2298, column: 11, scope: !6514)
!6525 = !DILocation(line: 2298, column: 10, scope: !6514)
!6526 = !DILocation(line: 2299, column: 13, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 2299, column: 13)
!6528 = !DILocation(line: 2299, column: 15, scope: !6527)
!6529 = !DILocation(line: 2299, column: 13, scope: !6514)
!6530 = !DILocation(line: 2300, column: 11, scope: !6527)
!6531 = !DILocation(line: 2301, column: 15, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 2301, column: 9)
!6533 = !DILocation(line: 2301, column: 14, scope: !6532)
!6534 = !DILocation(line: 2301, column: 19, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 2301, column: 9)
!6536 = !DILocation(line: 2301, column: 33, scope: !6535)
!6537 = !DILocation(line: 2301, column: 38, scope: !6535)
!6538 = !DILocation(line: 2301, column: 21, scope: !6535)
!6539 = !DILocation(line: 2301, column: 9, scope: !6532)
!6540 = !DILocation(line: 2303, column: 11, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 2302, column: 9)
!6542 = !DILocation(line: 2304, column: 11, scope: !6541)
!6543 = !DILocation(line: 2305, column: 11, scope: !6541)
!6544 = !DILocation(line: 2306, column: 11, scope: !6541)
!6545 = !DILocation(line: 2307, column: 12, scope: !6541)
!6546 = !DILocation(line: 2308, column: 9, scope: !6541)
!6547 = !DILocation(line: 2301, column: 46, scope: !6535)
!6548 = !DILocation(line: 2301, column: 9, scope: !6535)
!6549 = distinct !{!6549, !6539, !6550}
!6550 = !DILocation(line: 2308, column: 9, scope: !6532)
!6551 = !DILocation(line: 2309, column: 33, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 2309, column: 13)
!6553 = !DILocation(line: 2309, column: 39, scope: !6552)
!6554 = !DILocation(line: 2309, column: 13, scope: !6552)
!6555 = !DILocation(line: 2309, column: 50, scope: !6552)
!6556 = !DILocation(line: 2309, column: 13, scope: !6514)
!6557 = !DILocation(line: 2310, column: 11, scope: !6552)
!6558 = !DILocation(line: 2311, column: 7, scope: !6514)
!6559 = !DILocation(line: 2296, column: 45, scope: !6508)
!6560 = !DILocation(line: 2296, column: 7, scope: !6508)
!6561 = distinct !{!6561, !6512, !6562}
!6562 = !DILocation(line: 2311, column: 7, scope: !6504)
!6563 = !DILocation(line: 2312, column: 7, scope: !6505)
!6564 = !DILocation(line: 2314, column: 21, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2314, column: 7)
!6566 = !DILocation(line: 2314, column: 7, scope: !6565)
!6567 = !DILocation(line: 2314, column: 33, scope: !6565)
!6568 = !DILocation(line: 2314, column: 7, scope: !6401)
!6569 = !DILocation(line: 2316, column: 13, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 2316, column: 7)
!6571 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 2315, column: 5)
!6572 = !DILocation(line: 2316, column: 12, scope: !6570)
!6573 = !DILocation(line: 2316, column: 17, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 2316, column: 7)
!6575 = !DILocation(line: 2316, column: 31, scope: !6574)
!6576 = !DILocation(line: 2316, column: 36, scope: !6574)
!6577 = !DILocation(line: 2316, column: 19, scope: !6574)
!6578 = !DILocation(line: 2316, column: 7, scope: !6570)
!6579 = !DILocation(line: 2318, column: 30, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 2317, column: 7)
!6581 = !DILocation(line: 2318, column: 36, scope: !6580)
!6582 = !DILocation(line: 2318, column: 41, scope: !6580)
!6583 = !DILocation(line: 2318, column: 43, scope: !6580)
!6584 = !DILocation(line: 2318, column: 48, scope: !6580)
!6585 = !DILocation(line: 2318, column: 50, scope: !6580)
!6586 = !DILocation(line: 2318, column: 49, scope: !6580)
!6587 = !DILocation(line: 2318, column: 52, scope: !6580)
!6588 = !DILocation(line: 2318, column: 57, scope: !6580)
!6589 = !DILocation(line: 2318, column: 65, scope: !6580)
!6590 = !DILocation(line: 2318, column: 11, scope: !6580)
!6591 = !DILocation(line: 2318, column: 10, scope: !6580)
!6592 = !DILocation(line: 2319, column: 13, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 2319, column: 13)
!6594 = !DILocation(line: 2319, column: 15, scope: !6593)
!6595 = !DILocation(line: 2319, column: 13, scope: !6580)
!6596 = !DILocation(line: 2320, column: 11, scope: !6593)
!6597 = !DILocation(line: 2321, column: 15, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 2321, column: 9)
!6599 = !DILocation(line: 2321, column: 14, scope: !6598)
!6600 = !DILocation(line: 2321, column: 19, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 2321, column: 9)
!6602 = !DILocation(line: 2321, column: 33, scope: !6601)
!6603 = !DILocation(line: 2321, column: 38, scope: !6601)
!6604 = !DILocation(line: 2321, column: 21, scope: !6601)
!6605 = !DILocation(line: 2321, column: 9, scope: !6598)
!6606 = !DILocation(line: 2323, column: 11, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 2322, column: 9)
!6608 = !DILocation(line: 2324, column: 11, scope: !6607)
!6609 = !DILocation(line: 2325, column: 11, scope: !6607)
!6610 = !DILocation(line: 2326, column: 11, scope: !6607)
!6611 = !DILocation(line: 2327, column: 12, scope: !6607)
!6612 = !DILocation(line: 2328, column: 9, scope: !6607)
!6613 = !DILocation(line: 2321, column: 46, scope: !6601)
!6614 = !DILocation(line: 2321, column: 9, scope: !6601)
!6615 = distinct !{!6615, !6605, !6616}
!6616 = !DILocation(line: 2328, column: 9, scope: !6598)
!6617 = !DILocation(line: 2329, column: 33, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 2329, column: 13)
!6619 = !DILocation(line: 2329, column: 39, scope: !6618)
!6620 = !DILocation(line: 2329, column: 13, scope: !6618)
!6621 = !DILocation(line: 2329, column: 50, scope: !6618)
!6622 = !DILocation(line: 2329, column: 13, scope: !6580)
!6623 = !DILocation(line: 2330, column: 11, scope: !6618)
!6624 = !DILocation(line: 2331, column: 7, scope: !6580)
!6625 = !DILocation(line: 2316, column: 45, scope: !6574)
!6626 = !DILocation(line: 2316, column: 7, scope: !6574)
!6627 = distinct !{!6627, !6578, !6628}
!6628 = !DILocation(line: 2331, column: 7, scope: !6570)
!6629 = !DILocation(line: 2332, column: 7, scope: !6571)
!6630 = !DILocation(line: 2334, column: 21, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2334, column: 7)
!6632 = !DILocation(line: 2334, column: 7, scope: !6631)
!6633 = !DILocation(line: 2334, column: 33, scope: !6631)
!6634 = !DILocation(line: 2334, column: 7, scope: !6401)
!6635 = !DILocation(line: 2336, column: 13, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 2336, column: 7)
!6637 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 2335, column: 5)
!6638 = !DILocation(line: 2336, column: 12, scope: !6636)
!6639 = !DILocation(line: 2336, column: 17, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 2336, column: 7)
!6641 = !DILocation(line: 2336, column: 31, scope: !6640)
!6642 = !DILocation(line: 2336, column: 36, scope: !6640)
!6643 = !DILocation(line: 2336, column: 19, scope: !6640)
!6644 = !DILocation(line: 2336, column: 7, scope: !6636)
!6645 = !DILocation(line: 2338, column: 30, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 2337, column: 7)
!6647 = !DILocation(line: 2338, column: 36, scope: !6646)
!6648 = !DILocation(line: 2338, column: 41, scope: !6646)
!6649 = !DILocation(line: 2338, column: 43, scope: !6646)
!6650 = !DILocation(line: 2338, column: 48, scope: !6646)
!6651 = !DILocation(line: 2338, column: 50, scope: !6646)
!6652 = !DILocation(line: 2338, column: 49, scope: !6646)
!6653 = !DILocation(line: 2338, column: 52, scope: !6646)
!6654 = !DILocation(line: 2338, column: 57, scope: !6646)
!6655 = !DILocation(line: 2338, column: 65, scope: !6646)
!6656 = !DILocation(line: 2338, column: 11, scope: !6646)
!6657 = !DILocation(line: 2338, column: 10, scope: !6646)
!6658 = !DILocation(line: 2339, column: 13, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 2339, column: 13)
!6660 = !DILocation(line: 2339, column: 15, scope: !6659)
!6661 = !DILocation(line: 2339, column: 13, scope: !6646)
!6662 = !DILocation(line: 2340, column: 11, scope: !6659)
!6663 = !DILocation(line: 2341, column: 15, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 2341, column: 9)
!6665 = !DILocation(line: 2341, column: 14, scope: !6664)
!6666 = !DILocation(line: 2341, column: 19, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 2341, column: 9)
!6668 = !DILocation(line: 2341, column: 33, scope: !6667)
!6669 = !DILocation(line: 2341, column: 38, scope: !6667)
!6670 = !DILocation(line: 2341, column: 21, scope: !6667)
!6671 = !DILocation(line: 2341, column: 9, scope: !6664)
!6672 = !DILocation(line: 2343, column: 11, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 2342, column: 9)
!6674 = !DILocation(line: 2344, column: 11, scope: !6673)
!6675 = !DILocation(line: 2345, column: 11, scope: !6673)
!6676 = !DILocation(line: 2346, column: 12, scope: !6673)
!6677 = !DILocation(line: 2347, column: 12, scope: !6673)
!6678 = !DILocation(line: 2348, column: 9, scope: !6673)
!6679 = !DILocation(line: 2341, column: 46, scope: !6667)
!6680 = !DILocation(line: 2341, column: 9, scope: !6667)
!6681 = distinct !{!6681, !6671, !6682}
!6682 = !DILocation(line: 2348, column: 9, scope: !6664)
!6683 = !DILocation(line: 2349, column: 33, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 2349, column: 13)
!6685 = !DILocation(line: 2349, column: 39, scope: !6684)
!6686 = !DILocation(line: 2349, column: 13, scope: !6684)
!6687 = !DILocation(line: 2349, column: 50, scope: !6684)
!6688 = !DILocation(line: 2349, column: 13, scope: !6646)
!6689 = !DILocation(line: 2350, column: 11, scope: !6684)
!6690 = !DILocation(line: 2351, column: 7, scope: !6646)
!6691 = !DILocation(line: 2336, column: 45, scope: !6640)
!6692 = !DILocation(line: 2336, column: 7, scope: !6640)
!6693 = distinct !{!6693, !6644, !6694}
!6694 = !DILocation(line: 2351, column: 7, scope: !6636)
!6695 = !DILocation(line: 2352, column: 7, scope: !6637)
!6696 = !DILocation(line: 2354, column: 21, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2354, column: 7)
!6698 = !DILocation(line: 2354, column: 7, scope: !6697)
!6699 = !DILocation(line: 2354, column: 30, scope: !6697)
!6700 = !DILocation(line: 2354, column: 7, scope: !6401)
!6701 = !DILocation(line: 2356, column: 13, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2356, column: 7)
!6703 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2355, column: 5)
!6704 = !DILocation(line: 2356, column: 12, scope: !6702)
!6705 = !DILocation(line: 2356, column: 17, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 2356, column: 7)
!6707 = !DILocation(line: 2356, column: 31, scope: !6706)
!6708 = !DILocation(line: 2356, column: 36, scope: !6706)
!6709 = !DILocation(line: 2356, column: 19, scope: !6706)
!6710 = !DILocation(line: 2356, column: 7, scope: !6702)
!6711 = !DILocation(line: 2358, column: 30, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 2357, column: 7)
!6713 = !DILocation(line: 2358, column: 36, scope: !6712)
!6714 = !DILocation(line: 2358, column: 41, scope: !6712)
!6715 = !DILocation(line: 2358, column: 43, scope: !6712)
!6716 = !DILocation(line: 2358, column: 48, scope: !6712)
!6717 = !DILocation(line: 2358, column: 50, scope: !6712)
!6718 = !DILocation(line: 2358, column: 49, scope: !6712)
!6719 = !DILocation(line: 2358, column: 52, scope: !6712)
!6720 = !DILocation(line: 2358, column: 57, scope: !6712)
!6721 = !DILocation(line: 2358, column: 65, scope: !6712)
!6722 = !DILocation(line: 2358, column: 11, scope: !6712)
!6723 = !DILocation(line: 2358, column: 10, scope: !6712)
!6724 = !DILocation(line: 2359, column: 13, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 2359, column: 13)
!6726 = !DILocation(line: 2359, column: 15, scope: !6725)
!6727 = !DILocation(line: 2359, column: 13, scope: !6712)
!6728 = !DILocation(line: 2360, column: 11, scope: !6725)
!6729 = !DILocation(line: 2361, column: 15, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 2361, column: 9)
!6731 = !DILocation(line: 2361, column: 14, scope: !6730)
!6732 = !DILocation(line: 2361, column: 19, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 2361, column: 9)
!6734 = !DILocation(line: 2361, column: 33, scope: !6733)
!6735 = !DILocation(line: 2361, column: 38, scope: !6733)
!6736 = !DILocation(line: 2361, column: 21, scope: !6733)
!6737 = !DILocation(line: 2361, column: 9, scope: !6730)
!6738 = !DILocation(line: 2363, column: 11, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 2362, column: 9)
!6740 = !DILocation(line: 2364, column: 11, scope: !6739)
!6741 = !DILocation(line: 2365, column: 11, scope: !6739)
!6742 = !DILocation(line: 2366, column: 12, scope: !6739)
!6743 = !DILocation(line: 2367, column: 9, scope: !6739)
!6744 = !DILocation(line: 2361, column: 46, scope: !6733)
!6745 = !DILocation(line: 2361, column: 9, scope: !6733)
!6746 = distinct !{!6746, !6737, !6747}
!6747 = !DILocation(line: 2367, column: 9, scope: !6730)
!6748 = !DILocation(line: 2368, column: 33, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 2368, column: 13)
!6750 = !DILocation(line: 2368, column: 39, scope: !6749)
!6751 = !DILocation(line: 2368, column: 13, scope: !6749)
!6752 = !DILocation(line: 2368, column: 50, scope: !6749)
!6753 = !DILocation(line: 2368, column: 13, scope: !6712)
!6754 = !DILocation(line: 2369, column: 11, scope: !6749)
!6755 = !DILocation(line: 2370, column: 7, scope: !6712)
!6756 = !DILocation(line: 2356, column: 45, scope: !6706)
!6757 = !DILocation(line: 2356, column: 7, scope: !6706)
!6758 = distinct !{!6758, !6710, !6759}
!6759 = !DILocation(line: 2370, column: 7, scope: !6702)
!6760 = !DILocation(line: 2371, column: 7, scope: !6703)
!6761 = !DILocation(line: 2373, column: 21, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2373, column: 7)
!6763 = !DILocation(line: 2373, column: 7, scope: !6762)
!6764 = !DILocation(line: 2373, column: 32, scope: !6762)
!6765 = !DILocation(line: 2373, column: 7, scope: !6401)
!6766 = !DILocation(line: 2375, column: 13, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 2375, column: 7)
!6768 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 2374, column: 5)
!6769 = !DILocation(line: 2375, column: 12, scope: !6767)
!6770 = !DILocation(line: 2375, column: 17, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 2375, column: 7)
!6772 = !DILocation(line: 2375, column: 31, scope: !6771)
!6773 = !DILocation(line: 2375, column: 36, scope: !6771)
!6774 = !DILocation(line: 2375, column: 19, scope: !6771)
!6775 = !DILocation(line: 2375, column: 7, scope: !6767)
!6776 = !DILocation(line: 2377, column: 30, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 2376, column: 7)
!6778 = !DILocation(line: 2377, column: 36, scope: !6777)
!6779 = !DILocation(line: 2377, column: 41, scope: !6777)
!6780 = !DILocation(line: 2377, column: 43, scope: !6777)
!6781 = !DILocation(line: 2377, column: 48, scope: !6777)
!6782 = !DILocation(line: 2377, column: 50, scope: !6777)
!6783 = !DILocation(line: 2377, column: 49, scope: !6777)
!6784 = !DILocation(line: 2377, column: 52, scope: !6777)
!6785 = !DILocation(line: 2377, column: 57, scope: !6777)
!6786 = !DILocation(line: 2377, column: 65, scope: !6777)
!6787 = !DILocation(line: 2377, column: 11, scope: !6777)
!6788 = !DILocation(line: 2377, column: 10, scope: !6777)
!6789 = !DILocation(line: 2378, column: 13, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 2378, column: 13)
!6791 = !DILocation(line: 2378, column: 15, scope: !6790)
!6792 = !DILocation(line: 2378, column: 13, scope: !6777)
!6793 = !DILocation(line: 2379, column: 11, scope: !6790)
!6794 = !DILocation(line: 2380, column: 15, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 2380, column: 9)
!6796 = !DILocation(line: 2380, column: 14, scope: !6795)
!6797 = !DILocation(line: 2380, column: 19, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 2380, column: 9)
!6799 = !DILocation(line: 2380, column: 33, scope: !6798)
!6800 = !DILocation(line: 2380, column: 38, scope: !6798)
!6801 = !DILocation(line: 2380, column: 21, scope: !6798)
!6802 = !DILocation(line: 2380, column: 9, scope: !6795)
!6803 = !DILocation(line: 2382, column: 11, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 2381, column: 9)
!6805 = !DILocation(line: 2383, column: 11, scope: !6804)
!6806 = !DILocation(line: 2384, column: 11, scope: !6804)
!6807 = !DILocation(line: 2385, column: 12, scope: !6804)
!6808 = !DILocation(line: 2386, column: 9, scope: !6804)
!6809 = !DILocation(line: 2380, column: 46, scope: !6798)
!6810 = !DILocation(line: 2380, column: 9, scope: !6798)
!6811 = distinct !{!6811, !6802, !6812}
!6812 = !DILocation(line: 2386, column: 9, scope: !6795)
!6813 = !DILocation(line: 2387, column: 33, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 2387, column: 13)
!6815 = !DILocation(line: 2387, column: 39, scope: !6814)
!6816 = !DILocation(line: 2387, column: 13, scope: !6814)
!6817 = !DILocation(line: 2387, column: 50, scope: !6814)
!6818 = !DILocation(line: 2387, column: 13, scope: !6777)
!6819 = !DILocation(line: 2388, column: 11, scope: !6814)
!6820 = !DILocation(line: 2389, column: 7, scope: !6777)
!6821 = !DILocation(line: 2375, column: 45, scope: !6771)
!6822 = !DILocation(line: 2375, column: 7, scope: !6771)
!6823 = distinct !{!6823, !6775, !6824}
!6824 = !DILocation(line: 2389, column: 7, scope: !6767)
!6825 = !DILocation(line: 2390, column: 7, scope: !6768)
!6826 = !DILocation(line: 2392, column: 21, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2392, column: 7)
!6828 = !DILocation(line: 2392, column: 7, scope: !6827)
!6829 = !DILocation(line: 2392, column: 33, scope: !6827)
!6830 = !DILocation(line: 2392, column: 7, scope: !6401)
!6831 = !DILocation(line: 2394, column: 13, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 2394, column: 7)
!6833 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 2393, column: 5)
!6834 = !DILocation(line: 2394, column: 12, scope: !6832)
!6835 = !DILocation(line: 2394, column: 17, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 2394, column: 7)
!6837 = !DILocation(line: 2394, column: 31, scope: !6836)
!6838 = !DILocation(line: 2394, column: 36, scope: !6836)
!6839 = !DILocation(line: 2394, column: 19, scope: !6836)
!6840 = !DILocation(line: 2394, column: 7, scope: !6832)
!6841 = !DILocation(line: 2396, column: 30, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 2395, column: 7)
!6843 = !DILocation(line: 2396, column: 36, scope: !6842)
!6844 = !DILocation(line: 2396, column: 41, scope: !6842)
!6845 = !DILocation(line: 2396, column: 43, scope: !6842)
!6846 = !DILocation(line: 2396, column: 48, scope: !6842)
!6847 = !DILocation(line: 2396, column: 50, scope: !6842)
!6848 = !DILocation(line: 2396, column: 49, scope: !6842)
!6849 = !DILocation(line: 2396, column: 52, scope: !6842)
!6850 = !DILocation(line: 2396, column: 57, scope: !6842)
!6851 = !DILocation(line: 2396, column: 65, scope: !6842)
!6852 = !DILocation(line: 2396, column: 11, scope: !6842)
!6853 = !DILocation(line: 2396, column: 10, scope: !6842)
!6854 = !DILocation(line: 2397, column: 13, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 2397, column: 13)
!6856 = !DILocation(line: 2397, column: 15, scope: !6855)
!6857 = !DILocation(line: 2397, column: 13, scope: !6842)
!6858 = !DILocation(line: 2398, column: 11, scope: !6855)
!6859 = !DILocation(line: 2399, column: 15, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 2399, column: 9)
!6861 = !DILocation(line: 2399, column: 14, scope: !6860)
!6862 = !DILocation(line: 2399, column: 19, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 2399, column: 9)
!6864 = !DILocation(line: 2399, column: 33, scope: !6863)
!6865 = !DILocation(line: 2399, column: 38, scope: !6863)
!6866 = !DILocation(line: 2399, column: 21, scope: !6863)
!6867 = !DILocation(line: 2399, column: 9, scope: !6860)
!6868 = !DILocation(line: 2401, column: 11, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 2400, column: 9)
!6870 = !DILocation(line: 2402, column: 11, scope: !6869)
!6871 = !DILocation(line: 2403, column: 11, scope: !6869)
!6872 = !DILocation(line: 2404, column: 11, scope: !6869)
!6873 = !DILocation(line: 2405, column: 12, scope: !6869)
!6874 = !DILocation(line: 2406, column: 9, scope: !6869)
!6875 = !DILocation(line: 2399, column: 46, scope: !6863)
!6876 = !DILocation(line: 2399, column: 9, scope: !6863)
!6877 = distinct !{!6877, !6867, !6878}
!6878 = !DILocation(line: 2406, column: 9, scope: !6860)
!6879 = !DILocation(line: 2407, column: 33, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 2407, column: 13)
!6881 = !DILocation(line: 2407, column: 39, scope: !6880)
!6882 = !DILocation(line: 2407, column: 13, scope: !6880)
!6883 = !DILocation(line: 2407, column: 50, scope: !6880)
!6884 = !DILocation(line: 2407, column: 13, scope: !6842)
!6885 = !DILocation(line: 2408, column: 11, scope: !6880)
!6886 = !DILocation(line: 2409, column: 7, scope: !6842)
!6887 = !DILocation(line: 2394, column: 45, scope: !6836)
!6888 = !DILocation(line: 2394, column: 7, scope: !6836)
!6889 = distinct !{!6889, !6840, !6890}
!6890 = !DILocation(line: 2409, column: 7, scope: !6832)
!6891 = !DILocation(line: 2410, column: 7, scope: !6833)
!6892 = !DILocation(line: 2412, column: 21, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2412, column: 7)
!6894 = !DILocation(line: 2412, column: 7, scope: !6893)
!6895 = !DILocation(line: 2412, column: 33, scope: !6893)
!6896 = !DILocation(line: 2412, column: 7, scope: !6401)
!6897 = !DILocation(line: 2414, column: 13, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 2414, column: 7)
!6899 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2413, column: 5)
!6900 = !DILocation(line: 2414, column: 12, scope: !6898)
!6901 = !DILocation(line: 2414, column: 17, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 2414, column: 7)
!6903 = !DILocation(line: 2414, column: 31, scope: !6902)
!6904 = !DILocation(line: 2414, column: 36, scope: !6902)
!6905 = !DILocation(line: 2414, column: 19, scope: !6902)
!6906 = !DILocation(line: 2414, column: 7, scope: !6898)
!6907 = !DILocation(line: 2416, column: 30, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 2415, column: 7)
!6909 = !DILocation(line: 2416, column: 36, scope: !6908)
!6910 = !DILocation(line: 2416, column: 41, scope: !6908)
!6911 = !DILocation(line: 2416, column: 43, scope: !6908)
!6912 = !DILocation(line: 2416, column: 48, scope: !6908)
!6913 = !DILocation(line: 2416, column: 50, scope: !6908)
!6914 = !DILocation(line: 2416, column: 49, scope: !6908)
!6915 = !DILocation(line: 2416, column: 52, scope: !6908)
!6916 = !DILocation(line: 2416, column: 57, scope: !6908)
!6917 = !DILocation(line: 2416, column: 65, scope: !6908)
!6918 = !DILocation(line: 2416, column: 11, scope: !6908)
!6919 = !DILocation(line: 2416, column: 10, scope: !6908)
!6920 = !DILocation(line: 2417, column: 13, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 2417, column: 13)
!6922 = !DILocation(line: 2417, column: 15, scope: !6921)
!6923 = !DILocation(line: 2417, column: 13, scope: !6908)
!6924 = !DILocation(line: 2418, column: 11, scope: !6921)
!6925 = !DILocation(line: 2419, column: 15, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 2419, column: 9)
!6927 = !DILocation(line: 2419, column: 14, scope: !6926)
!6928 = !DILocation(line: 2419, column: 19, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 2419, column: 9)
!6930 = !DILocation(line: 2419, column: 33, scope: !6929)
!6931 = !DILocation(line: 2419, column: 38, scope: !6929)
!6932 = !DILocation(line: 2419, column: 21, scope: !6929)
!6933 = !DILocation(line: 2419, column: 9, scope: !6926)
!6934 = !DILocation(line: 2421, column: 11, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6929, file: !3, line: 2420, column: 9)
!6936 = !DILocation(line: 2422, column: 11, scope: !6935)
!6937 = !DILocation(line: 2423, column: 11, scope: !6935)
!6938 = !DILocation(line: 2424, column: 11, scope: !6935)
!6939 = !DILocation(line: 2425, column: 12, scope: !6935)
!6940 = !DILocation(line: 2426, column: 9, scope: !6935)
!6941 = !DILocation(line: 2419, column: 46, scope: !6929)
!6942 = !DILocation(line: 2419, column: 9, scope: !6929)
!6943 = distinct !{!6943, !6933, !6944}
!6944 = !DILocation(line: 2426, column: 9, scope: !6926)
!6945 = !DILocation(line: 2427, column: 33, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 2427, column: 13)
!6947 = !DILocation(line: 2427, column: 39, scope: !6946)
!6948 = !DILocation(line: 2427, column: 13, scope: !6946)
!6949 = !DILocation(line: 2427, column: 50, scope: !6946)
!6950 = !DILocation(line: 2427, column: 13, scope: !6908)
!6951 = !DILocation(line: 2428, column: 11, scope: !6946)
!6952 = !DILocation(line: 2429, column: 7, scope: !6908)
!6953 = !DILocation(line: 2414, column: 45, scope: !6902)
!6954 = !DILocation(line: 2414, column: 7, scope: !6902)
!6955 = distinct !{!6955, !6906, !6956}
!6956 = !DILocation(line: 2429, column: 7, scope: !6898)
!6957 = !DILocation(line: 2430, column: 7, scope: !6899)
!6958 = !DILocation(line: 2432, column: 21, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2432, column: 7)
!6960 = !DILocation(line: 2432, column: 7, scope: !6959)
!6961 = !DILocation(line: 2432, column: 33, scope: !6959)
!6962 = !DILocation(line: 2432, column: 7, scope: !6401)
!6963 = !DILocation(line: 2434, column: 13, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 2434, column: 7)
!6965 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 2433, column: 5)
!6966 = !DILocation(line: 2434, column: 12, scope: !6964)
!6967 = !DILocation(line: 2434, column: 17, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 2434, column: 7)
!6969 = !DILocation(line: 2434, column: 31, scope: !6968)
!6970 = !DILocation(line: 2434, column: 36, scope: !6968)
!6971 = !DILocation(line: 2434, column: 19, scope: !6968)
!6972 = !DILocation(line: 2434, column: 7, scope: !6964)
!6973 = !DILocation(line: 2436, column: 30, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 2435, column: 7)
!6975 = !DILocation(line: 2436, column: 36, scope: !6974)
!6976 = !DILocation(line: 2436, column: 41, scope: !6974)
!6977 = !DILocation(line: 2436, column: 43, scope: !6974)
!6978 = !DILocation(line: 2436, column: 48, scope: !6974)
!6979 = !DILocation(line: 2436, column: 50, scope: !6974)
!6980 = !DILocation(line: 2436, column: 49, scope: !6974)
!6981 = !DILocation(line: 2436, column: 52, scope: !6974)
!6982 = !DILocation(line: 2436, column: 57, scope: !6974)
!6983 = !DILocation(line: 2436, column: 65, scope: !6974)
!6984 = !DILocation(line: 2436, column: 11, scope: !6974)
!6985 = !DILocation(line: 2436, column: 10, scope: !6974)
!6986 = !DILocation(line: 2437, column: 13, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 2437, column: 13)
!6988 = !DILocation(line: 2437, column: 15, scope: !6987)
!6989 = !DILocation(line: 2437, column: 13, scope: !6974)
!6990 = !DILocation(line: 2438, column: 11, scope: !6987)
!6991 = !DILocation(line: 2439, column: 15, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 2439, column: 9)
!6993 = !DILocation(line: 2439, column: 14, scope: !6992)
!6994 = !DILocation(line: 2439, column: 19, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 2439, column: 9)
!6996 = !DILocation(line: 2439, column: 33, scope: !6995)
!6997 = !DILocation(line: 2439, column: 38, scope: !6995)
!6998 = !DILocation(line: 2439, column: 21, scope: !6995)
!6999 = !DILocation(line: 2439, column: 9, scope: !6992)
!7000 = !DILocation(line: 2441, column: 11, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6995, file: !3, line: 2440, column: 9)
!7002 = !DILocation(line: 2442, column: 11, scope: !7001)
!7003 = !DILocation(line: 2443, column: 11, scope: !7001)
!7004 = !DILocation(line: 2444, column: 12, scope: !7001)
!7005 = !DILocation(line: 2445, column: 12, scope: !7001)
!7006 = !DILocation(line: 2446, column: 9, scope: !7001)
!7007 = !DILocation(line: 2439, column: 46, scope: !6995)
!7008 = !DILocation(line: 2439, column: 9, scope: !6995)
!7009 = distinct !{!7009, !6999, !7010}
!7010 = !DILocation(line: 2446, column: 9, scope: !6992)
!7011 = !DILocation(line: 2447, column: 33, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 2447, column: 13)
!7013 = !DILocation(line: 2447, column: 39, scope: !7012)
!7014 = !DILocation(line: 2447, column: 13, scope: !7012)
!7015 = !DILocation(line: 2447, column: 50, scope: !7012)
!7016 = !DILocation(line: 2447, column: 13, scope: !6974)
!7017 = !DILocation(line: 2448, column: 11, scope: !7012)
!7018 = !DILocation(line: 2449, column: 7, scope: !6974)
!7019 = !DILocation(line: 2434, column: 45, scope: !6968)
!7020 = !DILocation(line: 2434, column: 7, scope: !6968)
!7021 = distinct !{!7021, !6972, !7022}
!7022 = !DILocation(line: 2449, column: 7, scope: !6964)
!7023 = !DILocation(line: 2450, column: 7, scope: !6965)
!7024 = !DILocation(line: 2452, column: 17, scope: !6401)
!7025 = !DILocation(line: 2452, column: 10, scope: !6401)
!7026 = !DILocation(line: 2452, column: 9, scope: !6401)
!7027 = !DILocation(line: 2453, column: 9, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 2453, column: 3)
!7029 = !DILocation(line: 2453, column: 8, scope: !7028)
!7030 = !DILocation(line: 2453, column: 13, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 2453, column: 3)
!7032 = !DILocation(line: 2453, column: 27, scope: !7031)
!7033 = !DILocation(line: 2453, column: 32, scope: !7031)
!7034 = !DILocation(line: 2453, column: 15, scope: !7031)
!7035 = !DILocation(line: 2453, column: 3, scope: !7028)
!7036 = !DILocation(line: 2455, column: 26, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 2454, column: 3)
!7038 = !DILocation(line: 2455, column: 32, scope: !7037)
!7039 = !DILocation(line: 2455, column: 37, scope: !7037)
!7040 = !DILocation(line: 2455, column: 39, scope: !7037)
!7041 = !DILocation(line: 2455, column: 44, scope: !7037)
!7042 = !DILocation(line: 2455, column: 46, scope: !7037)
!7043 = !DILocation(line: 2455, column: 45, scope: !7037)
!7044 = !DILocation(line: 2455, column: 48, scope: !7037)
!7045 = !DILocation(line: 2455, column: 53, scope: !7037)
!7046 = !DILocation(line: 2455, column: 61, scope: !7037)
!7047 = !DILocation(line: 2455, column: 7, scope: !7037)
!7048 = !DILocation(line: 2455, column: 6, scope: !7037)
!7049 = !DILocation(line: 2456, column: 9, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2456, column: 9)
!7051 = !DILocation(line: 2456, column: 11, scope: !7050)
!7052 = !DILocation(line: 2456, column: 9, scope: !7037)
!7053 = !DILocation(line: 2457, column: 7, scope: !7050)
!7054 = !DILocation(line: 2458, column: 36, scope: !7037)
!7055 = !DILocation(line: 2458, column: 13, scope: !7037)
!7056 = !DILocation(line: 2458, column: 12, scope: !7037)
!7057 = !DILocation(line: 2459, column: 11, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2459, column: 5)
!7059 = !DILocation(line: 2459, column: 10, scope: !7058)
!7060 = !DILocation(line: 2459, column: 15, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 2459, column: 5)
!7062 = !DILocation(line: 2459, column: 29, scope: !7061)
!7063 = !DILocation(line: 2459, column: 34, scope: !7061)
!7064 = !DILocation(line: 2459, column: 17, scope: !7061)
!7065 = !DILocation(line: 2459, column: 5, scope: !7058)
!7066 = !DILocalVariable(name: "i", scope: !7067, file: !3, line: 2462, type: !470)
!7067 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2460, column: 5)
!7068 = !DILocation(line: 2462, column: 9, scope: !7067)
!7069 = !DILocation(line: 2464, column: 13, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 2464, column: 7)
!7071 = !DILocation(line: 2464, column: 12, scope: !7070)
!7072 = !DILocation(line: 2464, column: 17, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 2464, column: 7)
!7074 = !DILocation(line: 2464, column: 31, scope: !7073)
!7075 = !DILocation(line: 2464, column: 19, scope: !7073)
!7076 = !DILocation(line: 2464, column: 7, scope: !7070)
!7077 = !DILocation(line: 2466, column: 17, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 2465, column: 7)
!7079 = !DILocation(line: 2466, column: 29, scope: !7078)
!7080 = !DILocation(line: 2466, column: 9, scope: !7078)
!7081 = !DILocation(line: 2471, column: 13, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2470, column: 11)
!7083 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2467, column: 9)
!7084 = !DILocation(line: 2472, column: 13, scope: !7082)
!7085 = !DILocation(line: 2477, column: 13, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2476, column: 11)
!7087 = !DILocation(line: 2478, column: 13, scope: !7086)
!7088 = !DILocation(line: 2483, column: 13, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2482, column: 11)
!7090 = !DILocation(line: 2484, column: 13, scope: !7089)
!7091 = !DILocation(line: 2488, column: 13, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2487, column: 11)
!7093 = !DILocation(line: 2489, column: 13, scope: !7092)
!7094 = !DILocation(line: 2493, column: 13, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2492, column: 11)
!7096 = !DILocation(line: 2494, column: 13, scope: !7095)
!7097 = !DILocation(line: 2498, column: 13, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2498, column: 13)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 2498, column: 13)
!7100 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2497, column: 11)
!7101 = !DILocation(line: 2498, column: 13, scope: !7099)
!7102 = !DILocation(line: 2499, column: 13, scope: !7100)
!7103 = !DILocation(line: 2503, column: 13, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2502, column: 11)
!7105 = !DILocation(line: 2504, column: 13, scope: !7104)
!7106 = !DILocation(line: 2505, column: 13, scope: !7104)
!7107 = !DILocation(line: 2506, column: 13, scope: !7104)
!7108 = !DILocation(line: 2509, column: 13, scope: !7083)
!7109 = !DILocation(line: 2511, column: 10, scope: !7078)
!7110 = !DILocation(line: 2512, column: 7, scope: !7078)
!7111 = !DILocation(line: 2464, column: 40, scope: !7073)
!7112 = !DILocation(line: 2464, column: 7, scope: !7073)
!7113 = distinct !{!7113, !7076, !7114}
!7114 = !DILocation(line: 2512, column: 7, scope: !7070)
!7115 = !DILocation(line: 2513, column: 8, scope: !7067)
!7116 = !DILocation(line: 2514, column: 5, scope: !7067)
!7117 = !DILocation(line: 2459, column: 42, scope: !7061)
!7118 = !DILocation(line: 2459, column: 5, scope: !7061)
!7119 = distinct !{!7119, !7065, !7120}
!7120 = !DILocation(line: 2514, column: 5, scope: !7058)
!7121 = !DILocation(line: 2515, column: 29, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2515, column: 9)
!7123 = !DILocation(line: 2515, column: 35, scope: !7122)
!7124 = !DILocation(line: 2515, column: 9, scope: !7122)
!7125 = !DILocation(line: 2515, column: 46, scope: !7122)
!7126 = !DILocation(line: 2515, column: 9, scope: !7037)
!7127 = !DILocation(line: 2516, column: 7, scope: !7122)
!7128 = !DILocation(line: 2517, column: 3, scope: !7037)
!7129 = !DILocation(line: 2453, column: 41, scope: !7031)
!7130 = !DILocation(line: 2453, column: 3, scope: !7031)
!7131 = distinct !{!7131, !7035, !7132}
!7132 = !DILocation(line: 2517, column: 3, scope: !7028)
!7133 = !DILocation(line: 2518, column: 1, scope: !6401)
!7134 = distinct !DISubprogram(name: "ImportDoublePixel", scope: !3, file: !3, line: 2520, type: !6402, scopeLine: 2523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!7135 = !DILocalVariable(name: "image", arg: 1, scope: !7134, file: !3, line: 2520, type: !475)
!7136 = !DILocation(line: 2520, column: 38, scope: !7134)
!7137 = !DILocalVariable(name: "roi", arg: 2, scope: !7134, file: !3, line: 2520, type: !1347)
!7138 = !DILocation(line: 2520, column: 65, scope: !7134)
!7139 = !DILocalVariable(name: "map", arg: 3, scope: !7134, file: !3, line: 2521, type: !1349)
!7140 = !DILocation(line: 2521, column: 24, scope: !7134)
!7141 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !7134, file: !3, line: 2521, type: !1350)
!7142 = !DILocation(line: 2521, column: 47, scope: !7134)
!7143 = !DILocalVariable(name: "pixels", arg: 5, scope: !7134, file: !3, line: 2521, type: !6154)
!7144 = !DILocation(line: 2521, column: 71, scope: !7134)
!7145 = !DILocalVariable(name: "exception", arg: 6, scope: !7134, file: !3, line: 2522, type: !1071)
!7146 = !DILocation(line: 2522, column: 18, scope: !7134)
!7147 = !DILocalVariable(name: "p", scope: !7134, file: !3, line: 2525, type: !7148)
!7148 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !696)
!7149 = !DILocation(line: 2525, column: 15, scope: !7134)
!7150 = !DILocalVariable(name: "indexes", scope: !7134, file: !3, line: 2528, type: !6420)
!7151 = !DILocation(line: 2528, column: 15, scope: !7134)
!7152 = !DILocalVariable(name: "q", scope: !7134, file: !3, line: 2531, type: !6423)
!7153 = !DILocation(line: 2531, column: 15, scope: !7134)
!7154 = !DILocalVariable(name: "x", scope: !7134, file: !3, line: 2534, type: !470)
!7155 = !DILocation(line: 2534, column: 5, scope: !7134)
!7156 = !DILocalVariable(name: "length", scope: !7134, file: !3, line: 2537, type: !454)
!7157 = !DILocation(line: 2537, column: 5, scope: !7134)
!7158 = !DILocalVariable(name: "y", scope: !7134, file: !3, line: 2540, type: !470)
!7159 = !DILocation(line: 2540, column: 5, scope: !7134)
!7160 = !DILocation(line: 2542, column: 22, scope: !7134)
!7161 = !DILocation(line: 2542, column: 5, scope: !7134)
!7162 = !DILocation(line: 2542, column: 4, scope: !7134)
!7163 = !DILocation(line: 2543, column: 21, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2543, column: 7)
!7165 = !DILocation(line: 2543, column: 7, scope: !7164)
!7166 = !DILocation(line: 2543, column: 32, scope: !7164)
!7167 = !DILocation(line: 2543, column: 7, scope: !7134)
!7168 = !DILocation(line: 2545, column: 13, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 2545, column: 7)
!7170 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2544, column: 5)
!7171 = !DILocation(line: 2545, column: 12, scope: !7169)
!7172 = !DILocation(line: 2545, column: 17, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 2545, column: 7)
!7174 = !DILocation(line: 2545, column: 31, scope: !7173)
!7175 = !DILocation(line: 2545, column: 36, scope: !7173)
!7176 = !DILocation(line: 2545, column: 19, scope: !7173)
!7177 = !DILocation(line: 2545, column: 7, scope: !7169)
!7178 = !DILocation(line: 2547, column: 30, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 2546, column: 7)
!7180 = !DILocation(line: 2547, column: 36, scope: !7179)
!7181 = !DILocation(line: 2547, column: 41, scope: !7179)
!7182 = !DILocation(line: 2547, column: 43, scope: !7179)
!7183 = !DILocation(line: 2547, column: 48, scope: !7179)
!7184 = !DILocation(line: 2547, column: 50, scope: !7179)
!7185 = !DILocation(line: 2547, column: 49, scope: !7179)
!7186 = !DILocation(line: 2547, column: 52, scope: !7179)
!7187 = !DILocation(line: 2547, column: 57, scope: !7179)
!7188 = !DILocation(line: 2547, column: 65, scope: !7179)
!7189 = !DILocation(line: 2547, column: 11, scope: !7179)
!7190 = !DILocation(line: 2547, column: 10, scope: !7179)
!7191 = !DILocation(line: 2548, column: 13, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 2548, column: 13)
!7193 = !DILocation(line: 2548, column: 15, scope: !7192)
!7194 = !DILocation(line: 2548, column: 13, scope: !7179)
!7195 = !DILocation(line: 2549, column: 11, scope: !7192)
!7196 = !DILocation(line: 2550, column: 15, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 2550, column: 9)
!7198 = !DILocation(line: 2550, column: 14, scope: !7197)
!7199 = !DILocation(line: 2550, column: 19, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7197, file: !3, line: 2550, column: 9)
!7201 = !DILocation(line: 2550, column: 33, scope: !7200)
!7202 = !DILocation(line: 2550, column: 38, scope: !7200)
!7203 = !DILocation(line: 2550, column: 21, scope: !7200)
!7204 = !DILocation(line: 2550, column: 9, scope: !7197)
!7205 = !DILocation(line: 2552, column: 11, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7200, file: !3, line: 2551, column: 9)
!7207 = !DILocation(line: 2553, column: 12, scope: !7206)
!7208 = !DILocation(line: 2554, column: 11, scope: !7206)
!7209 = !DILocation(line: 2555, column: 12, scope: !7206)
!7210 = !DILocation(line: 2556, column: 11, scope: !7206)
!7211 = !DILocation(line: 2557, column: 12, scope: !7206)
!7212 = !DILocation(line: 2558, column: 12, scope: !7206)
!7213 = !DILocation(line: 2559, column: 9, scope: !7206)
!7214 = !DILocation(line: 2550, column: 46, scope: !7200)
!7215 = !DILocation(line: 2550, column: 9, scope: !7200)
!7216 = distinct !{!7216, !7204, !7217}
!7217 = !DILocation(line: 2559, column: 9, scope: !7197)
!7218 = !DILocation(line: 2560, column: 33, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 2560, column: 13)
!7220 = !DILocation(line: 2560, column: 39, scope: !7219)
!7221 = !DILocation(line: 2560, column: 13, scope: !7219)
!7222 = !DILocation(line: 2560, column: 50, scope: !7219)
!7223 = !DILocation(line: 2560, column: 13, scope: !7179)
!7224 = !DILocation(line: 2561, column: 11, scope: !7219)
!7225 = !DILocation(line: 2562, column: 7, scope: !7179)
!7226 = !DILocation(line: 2545, column: 45, scope: !7173)
!7227 = !DILocation(line: 2545, column: 7, scope: !7173)
!7228 = distinct !{!7228, !7177, !7229}
!7229 = !DILocation(line: 2562, column: 7, scope: !7169)
!7230 = !DILocation(line: 2563, column: 7, scope: !7170)
!7231 = !DILocation(line: 2565, column: 21, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2565, column: 7)
!7233 = !DILocation(line: 2565, column: 7, scope: !7232)
!7234 = !DILocation(line: 2565, column: 33, scope: !7232)
!7235 = !DILocation(line: 2565, column: 7, scope: !7134)
!7236 = !DILocation(line: 2567, column: 13, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 2567, column: 7)
!7238 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 2566, column: 5)
!7239 = !DILocation(line: 2567, column: 12, scope: !7237)
!7240 = !DILocation(line: 2567, column: 17, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 2567, column: 7)
!7242 = !DILocation(line: 2567, column: 31, scope: !7241)
!7243 = !DILocation(line: 2567, column: 36, scope: !7241)
!7244 = !DILocation(line: 2567, column: 19, scope: !7241)
!7245 = !DILocation(line: 2567, column: 7, scope: !7237)
!7246 = !DILocation(line: 2569, column: 30, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 2568, column: 7)
!7248 = !DILocation(line: 2569, column: 36, scope: !7247)
!7249 = !DILocation(line: 2569, column: 41, scope: !7247)
!7250 = !DILocation(line: 2569, column: 43, scope: !7247)
!7251 = !DILocation(line: 2569, column: 48, scope: !7247)
!7252 = !DILocation(line: 2569, column: 50, scope: !7247)
!7253 = !DILocation(line: 2569, column: 49, scope: !7247)
!7254 = !DILocation(line: 2569, column: 52, scope: !7247)
!7255 = !DILocation(line: 2569, column: 57, scope: !7247)
!7256 = !DILocation(line: 2569, column: 65, scope: !7247)
!7257 = !DILocation(line: 2569, column: 11, scope: !7247)
!7258 = !DILocation(line: 2569, column: 10, scope: !7247)
!7259 = !DILocation(line: 2570, column: 13, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 2570, column: 13)
!7261 = !DILocation(line: 2570, column: 15, scope: !7260)
!7262 = !DILocation(line: 2570, column: 13, scope: !7247)
!7263 = !DILocation(line: 2571, column: 11, scope: !7260)
!7264 = !DILocation(line: 2572, column: 15, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 2572, column: 9)
!7266 = !DILocation(line: 2572, column: 14, scope: !7265)
!7267 = !DILocation(line: 2572, column: 19, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 2572, column: 9)
!7269 = !DILocation(line: 2572, column: 33, scope: !7268)
!7270 = !DILocation(line: 2572, column: 38, scope: !7268)
!7271 = !DILocation(line: 2572, column: 21, scope: !7268)
!7272 = !DILocation(line: 2572, column: 9, scope: !7265)
!7273 = !DILocation(line: 2574, column: 11, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7268, file: !3, line: 2573, column: 9)
!7275 = !DILocation(line: 2575, column: 12, scope: !7274)
!7276 = !DILocation(line: 2576, column: 11, scope: !7274)
!7277 = !DILocation(line: 2577, column: 12, scope: !7274)
!7278 = !DILocation(line: 2578, column: 11, scope: !7274)
!7279 = !DILocation(line: 2579, column: 12, scope: !7274)
!7280 = !DILocation(line: 2581, column: 28, scope: !7274)
!7281 = !DILocation(line: 2581, column: 27, scope: !7274)
!7282 = !DILocation(line: 2581, column: 25, scope: !7274)
!7283 = !DILocation(line: 2580, column: 50, scope: !7274)
!7284 = !DILocation(line: 2580, column: 35, scope: !7274)
!7285 = !DILocation(line: 2580, column: 34, scope: !7274)
!7286 = !DILocation(line: 2580, column: 22, scope: !7274)
!7287 = !DILocation(line: 2580, column: 11, scope: !7274)
!7288 = !DILocation(line: 2580, column: 14, scope: !7274)
!7289 = !DILocation(line: 2580, column: 21, scope: !7274)
!7290 = !DILocation(line: 2582, column: 12, scope: !7274)
!7291 = !DILocation(line: 2583, column: 12, scope: !7274)
!7292 = !DILocation(line: 2584, column: 9, scope: !7274)
!7293 = !DILocation(line: 2572, column: 46, scope: !7268)
!7294 = !DILocation(line: 2572, column: 9, scope: !7268)
!7295 = distinct !{!7295, !7272, !7296}
!7296 = !DILocation(line: 2584, column: 9, scope: !7265)
!7297 = !DILocation(line: 2585, column: 33, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 2585, column: 13)
!7299 = !DILocation(line: 2585, column: 39, scope: !7298)
!7300 = !DILocation(line: 2585, column: 13, scope: !7298)
!7301 = !DILocation(line: 2585, column: 50, scope: !7298)
!7302 = !DILocation(line: 2585, column: 13, scope: !7247)
!7303 = !DILocation(line: 2586, column: 11, scope: !7298)
!7304 = !DILocation(line: 2587, column: 7, scope: !7247)
!7305 = !DILocation(line: 2567, column: 45, scope: !7241)
!7306 = !DILocation(line: 2567, column: 7, scope: !7241)
!7307 = distinct !{!7307, !7245, !7308}
!7308 = !DILocation(line: 2587, column: 7, scope: !7237)
!7309 = !DILocation(line: 2588, column: 7, scope: !7238)
!7310 = !DILocation(line: 2590, column: 21, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2590, column: 7)
!7312 = !DILocation(line: 2590, column: 7, scope: !7311)
!7313 = !DILocation(line: 2590, column: 33, scope: !7311)
!7314 = !DILocation(line: 2590, column: 7, scope: !7134)
!7315 = !DILocation(line: 2592, column: 13, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 2592, column: 7)
!7317 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 2591, column: 5)
!7318 = !DILocation(line: 2592, column: 12, scope: !7316)
!7319 = !DILocation(line: 2592, column: 17, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 2592, column: 7)
!7321 = !DILocation(line: 2592, column: 31, scope: !7320)
!7322 = !DILocation(line: 2592, column: 36, scope: !7320)
!7323 = !DILocation(line: 2592, column: 19, scope: !7320)
!7324 = !DILocation(line: 2592, column: 7, scope: !7316)
!7325 = !DILocation(line: 2594, column: 30, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 2593, column: 7)
!7327 = !DILocation(line: 2594, column: 36, scope: !7326)
!7328 = !DILocation(line: 2594, column: 41, scope: !7326)
!7329 = !DILocation(line: 2594, column: 43, scope: !7326)
!7330 = !DILocation(line: 2594, column: 48, scope: !7326)
!7331 = !DILocation(line: 2594, column: 50, scope: !7326)
!7332 = !DILocation(line: 2594, column: 49, scope: !7326)
!7333 = !DILocation(line: 2594, column: 52, scope: !7326)
!7334 = !DILocation(line: 2594, column: 57, scope: !7326)
!7335 = !DILocation(line: 2594, column: 65, scope: !7326)
!7336 = !DILocation(line: 2594, column: 11, scope: !7326)
!7337 = !DILocation(line: 2594, column: 10, scope: !7326)
!7338 = !DILocation(line: 2595, column: 13, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 2595, column: 13)
!7340 = !DILocation(line: 2595, column: 15, scope: !7339)
!7341 = !DILocation(line: 2595, column: 13, scope: !7326)
!7342 = !DILocation(line: 2596, column: 11, scope: !7339)
!7343 = !DILocation(line: 2597, column: 15, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 2597, column: 9)
!7345 = !DILocation(line: 2597, column: 14, scope: !7344)
!7346 = !DILocation(line: 2597, column: 19, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 2597, column: 9)
!7348 = !DILocation(line: 2597, column: 33, scope: !7347)
!7349 = !DILocation(line: 2597, column: 38, scope: !7347)
!7350 = !DILocation(line: 2597, column: 21, scope: !7347)
!7351 = !DILocation(line: 2597, column: 9, scope: !7344)
!7352 = !DILocation(line: 2599, column: 11, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 2598, column: 9)
!7354 = !DILocation(line: 2600, column: 12, scope: !7353)
!7355 = !DILocation(line: 2601, column: 11, scope: !7353)
!7356 = !DILocation(line: 2602, column: 12, scope: !7353)
!7357 = !DILocation(line: 2603, column: 11, scope: !7353)
!7358 = !DILocation(line: 2604, column: 12, scope: !7353)
!7359 = !DILocation(line: 2605, column: 12, scope: !7353)
!7360 = !DILocation(line: 2606, column: 12, scope: !7353)
!7361 = !DILocation(line: 2607, column: 9, scope: !7353)
!7362 = !DILocation(line: 2597, column: 46, scope: !7347)
!7363 = !DILocation(line: 2597, column: 9, scope: !7347)
!7364 = distinct !{!7364, !7351, !7365}
!7365 = !DILocation(line: 2607, column: 9, scope: !7344)
!7366 = !DILocation(line: 2608, column: 33, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 2608, column: 13)
!7368 = !DILocation(line: 2608, column: 39, scope: !7367)
!7369 = !DILocation(line: 2608, column: 13, scope: !7367)
!7370 = !DILocation(line: 2608, column: 50, scope: !7367)
!7371 = !DILocation(line: 2608, column: 13, scope: !7326)
!7372 = !DILocation(line: 2609, column: 11, scope: !7367)
!7373 = !DILocation(line: 2610, column: 7, scope: !7326)
!7374 = !DILocation(line: 2592, column: 45, scope: !7320)
!7375 = !DILocation(line: 2592, column: 7, scope: !7320)
!7376 = distinct !{!7376, !7324, !7377}
!7377 = !DILocation(line: 2610, column: 7, scope: !7316)
!7378 = !DILocation(line: 2611, column: 7, scope: !7317)
!7379 = !DILocation(line: 2613, column: 21, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2613, column: 7)
!7381 = !DILocation(line: 2613, column: 7, scope: !7380)
!7382 = !DILocation(line: 2613, column: 30, scope: !7380)
!7383 = !DILocation(line: 2613, column: 7, scope: !7134)
!7384 = !DILocation(line: 2615, column: 13, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2615, column: 7)
!7386 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 2614, column: 5)
!7387 = !DILocation(line: 2615, column: 12, scope: !7385)
!7388 = !DILocation(line: 2615, column: 17, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 2615, column: 7)
!7390 = !DILocation(line: 2615, column: 31, scope: !7389)
!7391 = !DILocation(line: 2615, column: 36, scope: !7389)
!7392 = !DILocation(line: 2615, column: 19, scope: !7389)
!7393 = !DILocation(line: 2615, column: 7, scope: !7385)
!7394 = !DILocation(line: 2617, column: 30, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 2616, column: 7)
!7396 = !DILocation(line: 2617, column: 36, scope: !7395)
!7397 = !DILocation(line: 2617, column: 41, scope: !7395)
!7398 = !DILocation(line: 2617, column: 43, scope: !7395)
!7399 = !DILocation(line: 2617, column: 48, scope: !7395)
!7400 = !DILocation(line: 2617, column: 50, scope: !7395)
!7401 = !DILocation(line: 2617, column: 49, scope: !7395)
!7402 = !DILocation(line: 2617, column: 52, scope: !7395)
!7403 = !DILocation(line: 2617, column: 57, scope: !7395)
!7404 = !DILocation(line: 2617, column: 65, scope: !7395)
!7405 = !DILocation(line: 2617, column: 11, scope: !7395)
!7406 = !DILocation(line: 2617, column: 10, scope: !7395)
!7407 = !DILocation(line: 2618, column: 13, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 2618, column: 13)
!7409 = !DILocation(line: 2618, column: 15, scope: !7408)
!7410 = !DILocation(line: 2618, column: 13, scope: !7395)
!7411 = !DILocation(line: 2619, column: 11, scope: !7408)
!7412 = !DILocation(line: 2620, column: 15, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 2620, column: 9)
!7414 = !DILocation(line: 2620, column: 14, scope: !7413)
!7415 = !DILocation(line: 2620, column: 19, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 2620, column: 9)
!7417 = !DILocation(line: 2620, column: 33, scope: !7416)
!7418 = !DILocation(line: 2620, column: 38, scope: !7416)
!7419 = !DILocation(line: 2620, column: 21, scope: !7416)
!7420 = !DILocation(line: 2620, column: 9, scope: !7413)
!7421 = !DILocation(line: 2622, column: 11, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 2621, column: 9)
!7423 = !DILocation(line: 2623, column: 11, scope: !7422)
!7424 = !DILocation(line: 2624, column: 11, scope: !7422)
!7425 = !DILocation(line: 2625, column: 12, scope: !7422)
!7426 = !DILocation(line: 2626, column: 12, scope: !7422)
!7427 = !DILocation(line: 2627, column: 9, scope: !7422)
!7428 = !DILocation(line: 2620, column: 46, scope: !7416)
!7429 = !DILocation(line: 2620, column: 9, scope: !7416)
!7430 = distinct !{!7430, !7420, !7431}
!7431 = !DILocation(line: 2627, column: 9, scope: !7413)
!7432 = !DILocation(line: 2628, column: 33, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 2628, column: 13)
!7434 = !DILocation(line: 2628, column: 39, scope: !7433)
!7435 = !DILocation(line: 2628, column: 13, scope: !7433)
!7436 = !DILocation(line: 2628, column: 50, scope: !7433)
!7437 = !DILocation(line: 2628, column: 13, scope: !7395)
!7438 = !DILocation(line: 2629, column: 11, scope: !7433)
!7439 = !DILocation(line: 2630, column: 7, scope: !7395)
!7440 = !DILocation(line: 2615, column: 45, scope: !7389)
!7441 = !DILocation(line: 2615, column: 7, scope: !7389)
!7442 = distinct !{!7442, !7393, !7443}
!7443 = !DILocation(line: 2630, column: 7, scope: !7385)
!7444 = !DILocation(line: 2631, column: 7, scope: !7386)
!7445 = !DILocation(line: 2633, column: 21, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2633, column: 7)
!7447 = !DILocation(line: 2633, column: 7, scope: !7446)
!7448 = !DILocation(line: 2633, column: 32, scope: !7446)
!7449 = !DILocation(line: 2633, column: 7, scope: !7134)
!7450 = !DILocation(line: 2635, column: 13, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !3, line: 2635, column: 7)
!7452 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 2634, column: 5)
!7453 = !DILocation(line: 2635, column: 12, scope: !7451)
!7454 = !DILocation(line: 2635, column: 17, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 2635, column: 7)
!7456 = !DILocation(line: 2635, column: 31, scope: !7455)
!7457 = !DILocation(line: 2635, column: 36, scope: !7455)
!7458 = !DILocation(line: 2635, column: 19, scope: !7455)
!7459 = !DILocation(line: 2635, column: 7, scope: !7451)
!7460 = !DILocation(line: 2637, column: 30, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 2636, column: 7)
!7462 = !DILocation(line: 2637, column: 36, scope: !7461)
!7463 = !DILocation(line: 2637, column: 41, scope: !7461)
!7464 = !DILocation(line: 2637, column: 43, scope: !7461)
!7465 = !DILocation(line: 2637, column: 48, scope: !7461)
!7466 = !DILocation(line: 2637, column: 50, scope: !7461)
!7467 = !DILocation(line: 2637, column: 49, scope: !7461)
!7468 = !DILocation(line: 2637, column: 52, scope: !7461)
!7469 = !DILocation(line: 2637, column: 57, scope: !7461)
!7470 = !DILocation(line: 2637, column: 65, scope: !7461)
!7471 = !DILocation(line: 2637, column: 11, scope: !7461)
!7472 = !DILocation(line: 2637, column: 10, scope: !7461)
!7473 = !DILocation(line: 2638, column: 13, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 2638, column: 13)
!7475 = !DILocation(line: 2638, column: 15, scope: !7474)
!7476 = !DILocation(line: 2638, column: 13, scope: !7461)
!7477 = !DILocation(line: 2639, column: 11, scope: !7474)
!7478 = !DILocation(line: 2640, column: 15, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 2640, column: 9)
!7480 = !DILocation(line: 2640, column: 14, scope: !7479)
!7481 = !DILocation(line: 2640, column: 19, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 2640, column: 9)
!7483 = !DILocation(line: 2640, column: 33, scope: !7482)
!7484 = !DILocation(line: 2640, column: 38, scope: !7482)
!7485 = !DILocation(line: 2640, column: 21, scope: !7482)
!7486 = !DILocation(line: 2640, column: 9, scope: !7479)
!7487 = !DILocation(line: 2642, column: 11, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 2641, column: 9)
!7489 = !DILocation(line: 2643, column: 12, scope: !7488)
!7490 = !DILocation(line: 2644, column: 11, scope: !7488)
!7491 = !DILocation(line: 2645, column: 12, scope: !7488)
!7492 = !DILocation(line: 2646, column: 11, scope: !7488)
!7493 = !DILocation(line: 2647, column: 12, scope: !7488)
!7494 = !DILocation(line: 2648, column: 12, scope: !7488)
!7495 = !DILocation(line: 2649, column: 9, scope: !7488)
!7496 = !DILocation(line: 2640, column: 46, scope: !7482)
!7497 = !DILocation(line: 2640, column: 9, scope: !7482)
!7498 = distinct !{!7498, !7486, !7499}
!7499 = !DILocation(line: 2649, column: 9, scope: !7479)
!7500 = !DILocation(line: 2650, column: 33, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 2650, column: 13)
!7502 = !DILocation(line: 2650, column: 39, scope: !7501)
!7503 = !DILocation(line: 2650, column: 13, scope: !7501)
!7504 = !DILocation(line: 2650, column: 50, scope: !7501)
!7505 = !DILocation(line: 2650, column: 13, scope: !7461)
!7506 = !DILocation(line: 2651, column: 11, scope: !7501)
!7507 = !DILocation(line: 2652, column: 7, scope: !7461)
!7508 = !DILocation(line: 2635, column: 45, scope: !7455)
!7509 = !DILocation(line: 2635, column: 7, scope: !7455)
!7510 = distinct !{!7510, !7459, !7511}
!7511 = !DILocation(line: 2652, column: 7, scope: !7451)
!7512 = !DILocation(line: 2653, column: 7, scope: !7452)
!7513 = !DILocation(line: 2655, column: 21, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2655, column: 7)
!7515 = !DILocation(line: 2655, column: 7, scope: !7514)
!7516 = !DILocation(line: 2655, column: 33, scope: !7514)
!7517 = !DILocation(line: 2655, column: 7, scope: !7134)
!7518 = !DILocation(line: 2657, column: 13, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2657, column: 7)
!7520 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 2656, column: 5)
!7521 = !DILocation(line: 2657, column: 12, scope: !7519)
!7522 = !DILocation(line: 2657, column: 17, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 2657, column: 7)
!7524 = !DILocation(line: 2657, column: 31, scope: !7523)
!7525 = !DILocation(line: 2657, column: 36, scope: !7523)
!7526 = !DILocation(line: 2657, column: 19, scope: !7523)
!7527 = !DILocation(line: 2657, column: 7, scope: !7519)
!7528 = !DILocation(line: 2659, column: 30, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 2658, column: 7)
!7530 = !DILocation(line: 2659, column: 36, scope: !7529)
!7531 = !DILocation(line: 2659, column: 41, scope: !7529)
!7532 = !DILocation(line: 2659, column: 43, scope: !7529)
!7533 = !DILocation(line: 2659, column: 48, scope: !7529)
!7534 = !DILocation(line: 2659, column: 50, scope: !7529)
!7535 = !DILocation(line: 2659, column: 49, scope: !7529)
!7536 = !DILocation(line: 2659, column: 52, scope: !7529)
!7537 = !DILocation(line: 2659, column: 57, scope: !7529)
!7538 = !DILocation(line: 2659, column: 65, scope: !7529)
!7539 = !DILocation(line: 2659, column: 11, scope: !7529)
!7540 = !DILocation(line: 2659, column: 10, scope: !7529)
!7541 = !DILocation(line: 2660, column: 13, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 2660, column: 13)
!7543 = !DILocation(line: 2660, column: 15, scope: !7542)
!7544 = !DILocation(line: 2660, column: 13, scope: !7529)
!7545 = !DILocation(line: 2661, column: 11, scope: !7542)
!7546 = !DILocation(line: 2662, column: 15, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 2662, column: 9)
!7548 = !DILocation(line: 2662, column: 14, scope: !7547)
!7549 = !DILocation(line: 2662, column: 19, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 2662, column: 9)
!7551 = !DILocation(line: 2662, column: 33, scope: !7550)
!7552 = !DILocation(line: 2662, column: 38, scope: !7550)
!7553 = !DILocation(line: 2662, column: 21, scope: !7550)
!7554 = !DILocation(line: 2662, column: 9, scope: !7547)
!7555 = !DILocation(line: 2664, column: 11, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 2663, column: 9)
!7557 = !DILocation(line: 2665, column: 12, scope: !7556)
!7558 = !DILocation(line: 2666, column: 11, scope: !7556)
!7559 = !DILocation(line: 2667, column: 12, scope: !7556)
!7560 = !DILocation(line: 2668, column: 11, scope: !7556)
!7561 = !DILocation(line: 2669, column: 12, scope: !7556)
!7562 = !DILocation(line: 2670, column: 11, scope: !7556)
!7563 = !DILocation(line: 2671, column: 12, scope: !7556)
!7564 = !DILocation(line: 2672, column: 12, scope: !7556)
!7565 = !DILocation(line: 2673, column: 9, scope: !7556)
!7566 = !DILocation(line: 2662, column: 46, scope: !7550)
!7567 = !DILocation(line: 2662, column: 9, scope: !7550)
!7568 = distinct !{!7568, !7554, !7569}
!7569 = !DILocation(line: 2673, column: 9, scope: !7547)
!7570 = !DILocation(line: 2674, column: 33, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 2674, column: 13)
!7572 = !DILocation(line: 2674, column: 39, scope: !7571)
!7573 = !DILocation(line: 2674, column: 13, scope: !7571)
!7574 = !DILocation(line: 2674, column: 50, scope: !7571)
!7575 = !DILocation(line: 2674, column: 13, scope: !7529)
!7576 = !DILocation(line: 2675, column: 11, scope: !7571)
!7577 = !DILocation(line: 2676, column: 7, scope: !7529)
!7578 = !DILocation(line: 2657, column: 45, scope: !7523)
!7579 = !DILocation(line: 2657, column: 7, scope: !7523)
!7580 = distinct !{!7580, !7527, !7581}
!7581 = !DILocation(line: 2676, column: 7, scope: !7519)
!7582 = !DILocation(line: 2677, column: 7, scope: !7520)
!7583 = !DILocation(line: 2679, column: 21, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2679, column: 7)
!7585 = !DILocation(line: 2679, column: 7, scope: !7584)
!7586 = !DILocation(line: 2679, column: 33, scope: !7584)
!7587 = !DILocation(line: 2679, column: 7, scope: !7134)
!7588 = !DILocation(line: 2681, column: 13, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2681, column: 7)
!7590 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 2680, column: 5)
!7591 = !DILocation(line: 2681, column: 12, scope: !7589)
!7592 = !DILocation(line: 2681, column: 17, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 2681, column: 7)
!7594 = !DILocation(line: 2681, column: 31, scope: !7593)
!7595 = !DILocation(line: 2681, column: 36, scope: !7593)
!7596 = !DILocation(line: 2681, column: 19, scope: !7593)
!7597 = !DILocation(line: 2681, column: 7, scope: !7589)
!7598 = !DILocation(line: 2683, column: 30, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 2682, column: 7)
!7600 = !DILocation(line: 2683, column: 36, scope: !7599)
!7601 = !DILocation(line: 2683, column: 41, scope: !7599)
!7602 = !DILocation(line: 2683, column: 43, scope: !7599)
!7603 = !DILocation(line: 2683, column: 48, scope: !7599)
!7604 = !DILocation(line: 2683, column: 50, scope: !7599)
!7605 = !DILocation(line: 2683, column: 49, scope: !7599)
!7606 = !DILocation(line: 2683, column: 52, scope: !7599)
!7607 = !DILocation(line: 2683, column: 57, scope: !7599)
!7608 = !DILocation(line: 2683, column: 65, scope: !7599)
!7609 = !DILocation(line: 2683, column: 11, scope: !7599)
!7610 = !DILocation(line: 2683, column: 10, scope: !7599)
!7611 = !DILocation(line: 2684, column: 13, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 2684, column: 13)
!7613 = !DILocation(line: 2684, column: 15, scope: !7612)
!7614 = !DILocation(line: 2684, column: 13, scope: !7599)
!7615 = !DILocation(line: 2685, column: 11, scope: !7612)
!7616 = !DILocation(line: 2686, column: 15, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 2686, column: 9)
!7618 = !DILocation(line: 2686, column: 14, scope: !7617)
!7619 = !DILocation(line: 2686, column: 19, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 2686, column: 9)
!7621 = !DILocation(line: 2686, column: 33, scope: !7620)
!7622 = !DILocation(line: 2686, column: 38, scope: !7620)
!7623 = !DILocation(line: 2686, column: 21, scope: !7620)
!7624 = !DILocation(line: 2686, column: 9, scope: !7617)
!7625 = !DILocation(line: 2688, column: 11, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 2687, column: 9)
!7627 = !DILocation(line: 2689, column: 12, scope: !7626)
!7628 = !DILocation(line: 2690, column: 11, scope: !7626)
!7629 = !DILocation(line: 2691, column: 12, scope: !7626)
!7630 = !DILocation(line: 2692, column: 11, scope: !7626)
!7631 = !DILocation(line: 2693, column: 12, scope: !7626)
!7632 = !DILocation(line: 2694, column: 12, scope: !7626)
!7633 = !DILocation(line: 2695, column: 9, scope: !7626)
!7634 = !DILocation(line: 2686, column: 46, scope: !7620)
!7635 = !DILocation(line: 2686, column: 9, scope: !7620)
!7636 = distinct !{!7636, !7624, !7637}
!7637 = !DILocation(line: 2695, column: 9, scope: !7617)
!7638 = !DILocation(line: 2696, column: 33, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 2696, column: 13)
!7640 = !DILocation(line: 2696, column: 39, scope: !7639)
!7641 = !DILocation(line: 2696, column: 13, scope: !7639)
!7642 = !DILocation(line: 2696, column: 50, scope: !7639)
!7643 = !DILocation(line: 2696, column: 13, scope: !7599)
!7644 = !DILocation(line: 2697, column: 11, scope: !7639)
!7645 = !DILocation(line: 2698, column: 7, scope: !7599)
!7646 = !DILocation(line: 2681, column: 45, scope: !7593)
!7647 = !DILocation(line: 2681, column: 7, scope: !7593)
!7648 = distinct !{!7648, !7597, !7649}
!7649 = !DILocation(line: 2698, column: 7, scope: !7589)
!7650 = !DILocation(line: 2699, column: 7, scope: !7590)
!7651 = !DILocation(line: 2701, column: 17, scope: !7134)
!7652 = !DILocation(line: 2701, column: 10, scope: !7134)
!7653 = !DILocation(line: 2701, column: 9, scope: !7134)
!7654 = !DILocation(line: 2702, column: 9, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2702, column: 3)
!7656 = !DILocation(line: 2702, column: 8, scope: !7655)
!7657 = !DILocation(line: 2702, column: 13, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 2702, column: 3)
!7659 = !DILocation(line: 2702, column: 27, scope: !7658)
!7660 = !DILocation(line: 2702, column: 32, scope: !7658)
!7661 = !DILocation(line: 2702, column: 15, scope: !7658)
!7662 = !DILocation(line: 2702, column: 3, scope: !7655)
!7663 = !DILocation(line: 2704, column: 26, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 2703, column: 3)
!7665 = !DILocation(line: 2704, column: 32, scope: !7664)
!7666 = !DILocation(line: 2704, column: 37, scope: !7664)
!7667 = !DILocation(line: 2704, column: 39, scope: !7664)
!7668 = !DILocation(line: 2704, column: 44, scope: !7664)
!7669 = !DILocation(line: 2704, column: 46, scope: !7664)
!7670 = !DILocation(line: 2704, column: 45, scope: !7664)
!7671 = !DILocation(line: 2704, column: 48, scope: !7664)
!7672 = !DILocation(line: 2704, column: 53, scope: !7664)
!7673 = !DILocation(line: 2704, column: 61, scope: !7664)
!7674 = !DILocation(line: 2704, column: 7, scope: !7664)
!7675 = !DILocation(line: 2704, column: 6, scope: !7664)
!7676 = !DILocation(line: 2705, column: 9, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 2705, column: 9)
!7678 = !DILocation(line: 2705, column: 11, scope: !7677)
!7679 = !DILocation(line: 2705, column: 9, scope: !7664)
!7680 = !DILocation(line: 2706, column: 7, scope: !7677)
!7681 = !DILocation(line: 2707, column: 36, scope: !7664)
!7682 = !DILocation(line: 2707, column: 13, scope: !7664)
!7683 = !DILocation(line: 2707, column: 12, scope: !7664)
!7684 = !DILocation(line: 2708, column: 11, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 2708, column: 5)
!7686 = !DILocation(line: 2708, column: 10, scope: !7685)
!7687 = !DILocation(line: 2708, column: 15, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 2708, column: 5)
!7689 = !DILocation(line: 2708, column: 29, scope: !7688)
!7690 = !DILocation(line: 2708, column: 34, scope: !7688)
!7691 = !DILocation(line: 2708, column: 17, scope: !7688)
!7692 = !DILocation(line: 2708, column: 5, scope: !7685)
!7693 = !DILocalVariable(name: "i", scope: !7694, file: !3, line: 2711, type: !470)
!7694 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 2709, column: 5)
!7695 = !DILocation(line: 2711, column: 9, scope: !7694)
!7696 = !DILocation(line: 2713, column: 13, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2713, column: 7)
!7698 = !DILocation(line: 2713, column: 12, scope: !7697)
!7699 = !DILocation(line: 2713, column: 17, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2713, column: 7)
!7701 = !DILocation(line: 2713, column: 31, scope: !7700)
!7702 = !DILocation(line: 2713, column: 19, scope: !7700)
!7703 = !DILocation(line: 2713, column: 7, scope: !7697)
!7704 = !DILocation(line: 2715, column: 17, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 2714, column: 7)
!7706 = !DILocation(line: 2715, column: 29, scope: !7705)
!7707 = !DILocation(line: 2715, column: 9, scope: !7705)
!7708 = !DILocation(line: 2720, column: 13, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2719, column: 11)
!7710 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 2716, column: 9)
!7711 = !DILocation(line: 2722, column: 13, scope: !7709)
!7712 = !DILocation(line: 2727, column: 13, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2726, column: 11)
!7714 = !DILocation(line: 2729, column: 13, scope: !7713)
!7715 = !DILocation(line: 2734, column: 13, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2733, column: 11)
!7717 = !DILocation(line: 2736, column: 13, scope: !7716)
!7718 = !DILocation(line: 2740, column: 13, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2739, column: 11)
!7720 = !DILocation(line: 2742, column: 13, scope: !7719)
!7721 = !DILocation(line: 2746, column: 13, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2745, column: 11)
!7723 = !DILocation(line: 2748, column: 13, scope: !7722)
!7724 = !DILocation(line: 2752, column: 13, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 2752, column: 13)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 2752, column: 13)
!7727 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2751, column: 11)
!7728 = !DILocation(line: 2752, column: 13, scope: !7726)
!7729 = !DILocation(line: 2754, column: 13, scope: !7727)
!7730 = !DILocation(line: 2758, column: 13, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2757, column: 11)
!7732 = !DILocation(line: 2759, column: 13, scope: !7731)
!7733 = !DILocation(line: 2760, column: 13, scope: !7731)
!7734 = !DILocation(line: 2761, column: 13, scope: !7731)
!7735 = !DILocation(line: 2764, column: 13, scope: !7710)
!7736 = !DILocation(line: 2766, column: 10, scope: !7705)
!7737 = !DILocation(line: 2767, column: 7, scope: !7705)
!7738 = !DILocation(line: 2713, column: 40, scope: !7700)
!7739 = !DILocation(line: 2713, column: 7, scope: !7700)
!7740 = distinct !{!7740, !7703, !7741}
!7741 = !DILocation(line: 2767, column: 7, scope: !7697)
!7742 = !DILocation(line: 2768, column: 8, scope: !7694)
!7743 = !DILocation(line: 2769, column: 5, scope: !7694)
!7744 = !DILocation(line: 2708, column: 42, scope: !7688)
!7745 = !DILocation(line: 2708, column: 5, scope: !7688)
!7746 = distinct !{!7746, !7692, !7747}
!7747 = !DILocation(line: 2769, column: 5, scope: !7685)
!7748 = !DILocation(line: 2770, column: 29, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 2770, column: 9)
!7750 = !DILocation(line: 2770, column: 35, scope: !7749)
!7751 = !DILocation(line: 2770, column: 9, scope: !7749)
!7752 = !DILocation(line: 2770, column: 46, scope: !7749)
!7753 = !DILocation(line: 2770, column: 9, scope: !7664)
!7754 = !DILocation(line: 2771, column: 7, scope: !7749)
!7755 = !DILocation(line: 2772, column: 3, scope: !7664)
!7756 = !DILocation(line: 2702, column: 41, scope: !7658)
!7757 = !DILocation(line: 2702, column: 3, scope: !7658)
!7758 = distinct !{!7758, !7662, !7759}
!7759 = !DILocation(line: 2772, column: 3, scope: !7655)
!7760 = !DILocation(line: 2773, column: 1, scope: !7134)
!7761 = distinct !DISubprogram(name: "ImportFloatPixel", scope: !3, file: !3, line: 2775, type: !6402, scopeLine: 2778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!7762 = !DILocalVariable(name: "image", arg: 1, scope: !7761, file: !3, line: 2775, type: !475)
!7763 = !DILocation(line: 2775, column: 37, scope: !7761)
!7764 = !DILocalVariable(name: "roi", arg: 2, scope: !7761, file: !3, line: 2775, type: !1347)
!7765 = !DILocation(line: 2775, column: 64, scope: !7761)
!7766 = !DILocalVariable(name: "map", arg: 3, scope: !7761, file: !3, line: 2776, type: !1349)
!7767 = !DILocation(line: 2776, column: 24, scope: !7761)
!7768 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !7761, file: !3, line: 2776, type: !1350)
!7769 = !DILocation(line: 2776, column: 47, scope: !7761)
!7770 = !DILocalVariable(name: "pixels", arg: 5, scope: !7761, file: !3, line: 2776, type: !6154)
!7771 = !DILocation(line: 2776, column: 71, scope: !7761)
!7772 = !DILocalVariable(name: "exception", arg: 6, scope: !7761, file: !3, line: 2777, type: !1071)
!7773 = !DILocation(line: 2777, column: 18, scope: !7761)
!7774 = !DILocalVariable(name: "p", scope: !7761, file: !3, line: 2780, type: !7775)
!7775 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !697)
!7776 = !DILocation(line: 2780, column: 15, scope: !7761)
!7777 = !DILocalVariable(name: "indexes", scope: !7761, file: !3, line: 2783, type: !6420)
!7778 = !DILocation(line: 2783, column: 15, scope: !7761)
!7779 = !DILocalVariable(name: "q", scope: !7761, file: !3, line: 2786, type: !6423)
!7780 = !DILocation(line: 2786, column: 15, scope: !7761)
!7781 = !DILocalVariable(name: "x", scope: !7761, file: !3, line: 2789, type: !470)
!7782 = !DILocation(line: 2789, column: 5, scope: !7761)
!7783 = !DILocalVariable(name: "length", scope: !7761, file: !3, line: 2792, type: !454)
!7784 = !DILocation(line: 2792, column: 5, scope: !7761)
!7785 = !DILocalVariable(name: "y", scope: !7761, file: !3, line: 2795, type: !470)
!7786 = !DILocation(line: 2795, column: 5, scope: !7761)
!7787 = !DILocation(line: 2797, column: 21, scope: !7761)
!7788 = !DILocation(line: 2797, column: 5, scope: !7761)
!7789 = !DILocation(line: 2797, column: 4, scope: !7761)
!7790 = !DILocation(line: 2798, column: 21, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2798, column: 7)
!7792 = !DILocation(line: 2798, column: 7, scope: !7791)
!7793 = !DILocation(line: 2798, column: 32, scope: !7791)
!7794 = !DILocation(line: 2798, column: 7, scope: !7761)
!7795 = !DILocation(line: 2800, column: 13, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 2800, column: 7)
!7797 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 2799, column: 5)
!7798 = !DILocation(line: 2800, column: 12, scope: !7796)
!7799 = !DILocation(line: 2800, column: 17, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 2800, column: 7)
!7801 = !DILocation(line: 2800, column: 31, scope: !7800)
!7802 = !DILocation(line: 2800, column: 36, scope: !7800)
!7803 = !DILocation(line: 2800, column: 19, scope: !7800)
!7804 = !DILocation(line: 2800, column: 7, scope: !7796)
!7805 = !DILocation(line: 2802, column: 30, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 2801, column: 7)
!7807 = !DILocation(line: 2802, column: 36, scope: !7806)
!7808 = !DILocation(line: 2802, column: 41, scope: !7806)
!7809 = !DILocation(line: 2802, column: 43, scope: !7806)
!7810 = !DILocation(line: 2802, column: 48, scope: !7806)
!7811 = !DILocation(line: 2802, column: 50, scope: !7806)
!7812 = !DILocation(line: 2802, column: 49, scope: !7806)
!7813 = !DILocation(line: 2802, column: 52, scope: !7806)
!7814 = !DILocation(line: 2802, column: 57, scope: !7806)
!7815 = !DILocation(line: 2802, column: 65, scope: !7806)
!7816 = !DILocation(line: 2802, column: 11, scope: !7806)
!7817 = !DILocation(line: 2802, column: 10, scope: !7806)
!7818 = !DILocation(line: 2803, column: 13, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7806, file: !3, line: 2803, column: 13)
!7820 = !DILocation(line: 2803, column: 15, scope: !7819)
!7821 = !DILocation(line: 2803, column: 13, scope: !7806)
!7822 = !DILocation(line: 2804, column: 11, scope: !7819)
!7823 = !DILocation(line: 2805, column: 15, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7806, file: !3, line: 2805, column: 9)
!7825 = !DILocation(line: 2805, column: 14, scope: !7824)
!7826 = !DILocation(line: 2805, column: 19, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 2805, column: 9)
!7828 = !DILocation(line: 2805, column: 33, scope: !7827)
!7829 = !DILocation(line: 2805, column: 38, scope: !7827)
!7830 = !DILocation(line: 2805, column: 21, scope: !7827)
!7831 = !DILocation(line: 2805, column: 9, scope: !7824)
!7832 = !DILocation(line: 2807, column: 11, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 2806, column: 9)
!7834 = !DILocation(line: 2808, column: 12, scope: !7833)
!7835 = !DILocation(line: 2809, column: 11, scope: !7833)
!7836 = !DILocation(line: 2810, column: 12, scope: !7833)
!7837 = !DILocation(line: 2811, column: 11, scope: !7833)
!7838 = !DILocation(line: 2812, column: 12, scope: !7833)
!7839 = !DILocation(line: 2813, column: 12, scope: !7833)
!7840 = !DILocation(line: 2814, column: 9, scope: !7833)
!7841 = !DILocation(line: 2805, column: 46, scope: !7827)
!7842 = !DILocation(line: 2805, column: 9, scope: !7827)
!7843 = distinct !{!7843, !7831, !7844}
!7844 = !DILocation(line: 2814, column: 9, scope: !7824)
!7845 = !DILocation(line: 2815, column: 33, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7806, file: !3, line: 2815, column: 13)
!7847 = !DILocation(line: 2815, column: 39, scope: !7846)
!7848 = !DILocation(line: 2815, column: 13, scope: !7846)
!7849 = !DILocation(line: 2815, column: 50, scope: !7846)
!7850 = !DILocation(line: 2815, column: 13, scope: !7806)
!7851 = !DILocation(line: 2816, column: 11, scope: !7846)
!7852 = !DILocation(line: 2817, column: 7, scope: !7806)
!7853 = !DILocation(line: 2800, column: 45, scope: !7800)
!7854 = !DILocation(line: 2800, column: 7, scope: !7800)
!7855 = distinct !{!7855, !7804, !7856}
!7856 = !DILocation(line: 2817, column: 7, scope: !7796)
!7857 = !DILocation(line: 2818, column: 7, scope: !7797)
!7858 = !DILocation(line: 2820, column: 21, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2820, column: 7)
!7860 = !DILocation(line: 2820, column: 7, scope: !7859)
!7861 = !DILocation(line: 2820, column: 33, scope: !7859)
!7862 = !DILocation(line: 2820, column: 7, scope: !7761)
!7863 = !DILocation(line: 2822, column: 13, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 2822, column: 7)
!7865 = distinct !DILexicalBlock(scope: !7859, file: !3, line: 2821, column: 5)
!7866 = !DILocation(line: 2822, column: 12, scope: !7864)
!7867 = !DILocation(line: 2822, column: 17, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 2822, column: 7)
!7869 = !DILocation(line: 2822, column: 31, scope: !7868)
!7870 = !DILocation(line: 2822, column: 36, scope: !7868)
!7871 = !DILocation(line: 2822, column: 19, scope: !7868)
!7872 = !DILocation(line: 2822, column: 7, scope: !7864)
!7873 = !DILocation(line: 2824, column: 30, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 2823, column: 7)
!7875 = !DILocation(line: 2824, column: 36, scope: !7874)
!7876 = !DILocation(line: 2824, column: 41, scope: !7874)
!7877 = !DILocation(line: 2824, column: 43, scope: !7874)
!7878 = !DILocation(line: 2824, column: 48, scope: !7874)
!7879 = !DILocation(line: 2824, column: 50, scope: !7874)
!7880 = !DILocation(line: 2824, column: 49, scope: !7874)
!7881 = !DILocation(line: 2824, column: 52, scope: !7874)
!7882 = !DILocation(line: 2824, column: 57, scope: !7874)
!7883 = !DILocation(line: 2824, column: 65, scope: !7874)
!7884 = !DILocation(line: 2824, column: 11, scope: !7874)
!7885 = !DILocation(line: 2824, column: 10, scope: !7874)
!7886 = !DILocation(line: 2825, column: 13, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 2825, column: 13)
!7888 = !DILocation(line: 2825, column: 15, scope: !7887)
!7889 = !DILocation(line: 2825, column: 13, scope: !7874)
!7890 = !DILocation(line: 2826, column: 11, scope: !7887)
!7891 = !DILocation(line: 2827, column: 15, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 2827, column: 9)
!7893 = !DILocation(line: 2827, column: 14, scope: !7892)
!7894 = !DILocation(line: 2827, column: 19, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 2827, column: 9)
!7896 = !DILocation(line: 2827, column: 33, scope: !7895)
!7897 = !DILocation(line: 2827, column: 38, scope: !7895)
!7898 = !DILocation(line: 2827, column: 21, scope: !7895)
!7899 = !DILocation(line: 2827, column: 9, scope: !7892)
!7900 = !DILocation(line: 2829, column: 11, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 2828, column: 9)
!7902 = !DILocation(line: 2830, column: 12, scope: !7901)
!7903 = !DILocation(line: 2831, column: 11, scope: !7901)
!7904 = !DILocation(line: 2832, column: 12, scope: !7901)
!7905 = !DILocation(line: 2833, column: 11, scope: !7901)
!7906 = !DILocation(line: 2834, column: 12, scope: !7901)
!7907 = !DILocation(line: 2835, column: 11, scope: !7901)
!7908 = !DILocation(line: 2836, column: 12, scope: !7901)
!7909 = !DILocation(line: 2837, column: 12, scope: !7901)
!7910 = !DILocation(line: 2838, column: 9, scope: !7901)
!7911 = !DILocation(line: 2827, column: 46, scope: !7895)
!7912 = !DILocation(line: 2827, column: 9, scope: !7895)
!7913 = distinct !{!7913, !7899, !7914}
!7914 = !DILocation(line: 2838, column: 9, scope: !7892)
!7915 = !DILocation(line: 2839, column: 33, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 2839, column: 13)
!7917 = !DILocation(line: 2839, column: 39, scope: !7916)
!7918 = !DILocation(line: 2839, column: 13, scope: !7916)
!7919 = !DILocation(line: 2839, column: 50, scope: !7916)
!7920 = !DILocation(line: 2839, column: 13, scope: !7874)
!7921 = !DILocation(line: 2840, column: 11, scope: !7916)
!7922 = !DILocation(line: 2841, column: 7, scope: !7874)
!7923 = !DILocation(line: 2822, column: 45, scope: !7868)
!7924 = !DILocation(line: 2822, column: 7, scope: !7868)
!7925 = distinct !{!7925, !7872, !7926}
!7926 = !DILocation(line: 2841, column: 7, scope: !7864)
!7927 = !DILocation(line: 2842, column: 7, scope: !7865)
!7928 = !DILocation(line: 2844, column: 21, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2844, column: 7)
!7930 = !DILocation(line: 2844, column: 7, scope: !7929)
!7931 = !DILocation(line: 2844, column: 33, scope: !7929)
!7932 = !DILocation(line: 2844, column: 7, scope: !7761)
!7933 = !DILocation(line: 2846, column: 13, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 2846, column: 7)
!7935 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2845, column: 5)
!7936 = !DILocation(line: 2846, column: 12, scope: !7934)
!7937 = !DILocation(line: 2846, column: 17, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 2846, column: 7)
!7939 = !DILocation(line: 2846, column: 31, scope: !7938)
!7940 = !DILocation(line: 2846, column: 36, scope: !7938)
!7941 = !DILocation(line: 2846, column: 19, scope: !7938)
!7942 = !DILocation(line: 2846, column: 7, scope: !7934)
!7943 = !DILocation(line: 2848, column: 30, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 2847, column: 7)
!7945 = !DILocation(line: 2848, column: 36, scope: !7944)
!7946 = !DILocation(line: 2848, column: 41, scope: !7944)
!7947 = !DILocation(line: 2848, column: 43, scope: !7944)
!7948 = !DILocation(line: 2848, column: 48, scope: !7944)
!7949 = !DILocation(line: 2848, column: 50, scope: !7944)
!7950 = !DILocation(line: 2848, column: 49, scope: !7944)
!7951 = !DILocation(line: 2848, column: 52, scope: !7944)
!7952 = !DILocation(line: 2848, column: 57, scope: !7944)
!7953 = !DILocation(line: 2848, column: 65, scope: !7944)
!7954 = !DILocation(line: 2848, column: 11, scope: !7944)
!7955 = !DILocation(line: 2848, column: 10, scope: !7944)
!7956 = !DILocation(line: 2849, column: 13, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 2849, column: 13)
!7958 = !DILocation(line: 2849, column: 15, scope: !7957)
!7959 = !DILocation(line: 2849, column: 13, scope: !7944)
!7960 = !DILocation(line: 2850, column: 11, scope: !7957)
!7961 = !DILocation(line: 2851, column: 15, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 2851, column: 9)
!7963 = !DILocation(line: 2851, column: 14, scope: !7962)
!7964 = !DILocation(line: 2851, column: 19, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 2851, column: 9)
!7966 = !DILocation(line: 2851, column: 33, scope: !7965)
!7967 = !DILocation(line: 2851, column: 38, scope: !7965)
!7968 = !DILocation(line: 2851, column: 21, scope: !7965)
!7969 = !DILocation(line: 2851, column: 9, scope: !7962)
!7970 = !DILocation(line: 2853, column: 11, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 2852, column: 9)
!7972 = !DILocation(line: 2854, column: 12, scope: !7971)
!7973 = !DILocation(line: 2855, column: 11, scope: !7971)
!7974 = !DILocation(line: 2856, column: 12, scope: !7971)
!7975 = !DILocation(line: 2857, column: 11, scope: !7971)
!7976 = !DILocation(line: 2858, column: 12, scope: !7971)
!7977 = !DILocation(line: 2859, column: 12, scope: !7971)
!7978 = !DILocation(line: 2860, column: 12, scope: !7971)
!7979 = !DILocation(line: 2861, column: 9, scope: !7971)
!7980 = !DILocation(line: 2851, column: 46, scope: !7965)
!7981 = !DILocation(line: 2851, column: 9, scope: !7965)
!7982 = distinct !{!7982, !7969, !7983}
!7983 = !DILocation(line: 2861, column: 9, scope: !7962)
!7984 = !DILocation(line: 2862, column: 33, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 2862, column: 13)
!7986 = !DILocation(line: 2862, column: 39, scope: !7985)
!7987 = !DILocation(line: 2862, column: 13, scope: !7985)
!7988 = !DILocation(line: 2862, column: 50, scope: !7985)
!7989 = !DILocation(line: 2862, column: 13, scope: !7944)
!7990 = !DILocation(line: 2863, column: 11, scope: !7985)
!7991 = !DILocation(line: 2864, column: 7, scope: !7944)
!7992 = !DILocation(line: 2846, column: 45, scope: !7938)
!7993 = !DILocation(line: 2846, column: 7, scope: !7938)
!7994 = distinct !{!7994, !7942, !7995}
!7995 = !DILocation(line: 2864, column: 7, scope: !7934)
!7996 = !DILocation(line: 2865, column: 7, scope: !7935)
!7997 = !DILocation(line: 2867, column: 21, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2867, column: 7)
!7999 = !DILocation(line: 2867, column: 7, scope: !7998)
!8000 = !DILocation(line: 2867, column: 30, scope: !7998)
!8001 = !DILocation(line: 2867, column: 7, scope: !7761)
!8002 = !DILocation(line: 2869, column: 13, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !8004, file: !3, line: 2869, column: 7)
!8004 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 2868, column: 5)
!8005 = !DILocation(line: 2869, column: 12, scope: !8003)
!8006 = !DILocation(line: 2869, column: 17, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 2869, column: 7)
!8008 = !DILocation(line: 2869, column: 31, scope: !8007)
!8009 = !DILocation(line: 2869, column: 36, scope: !8007)
!8010 = !DILocation(line: 2869, column: 19, scope: !8007)
!8011 = !DILocation(line: 2869, column: 7, scope: !8003)
!8012 = !DILocation(line: 2871, column: 30, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 2870, column: 7)
!8014 = !DILocation(line: 2871, column: 36, scope: !8013)
!8015 = !DILocation(line: 2871, column: 41, scope: !8013)
!8016 = !DILocation(line: 2871, column: 43, scope: !8013)
!8017 = !DILocation(line: 2871, column: 48, scope: !8013)
!8018 = !DILocation(line: 2871, column: 50, scope: !8013)
!8019 = !DILocation(line: 2871, column: 49, scope: !8013)
!8020 = !DILocation(line: 2871, column: 52, scope: !8013)
!8021 = !DILocation(line: 2871, column: 57, scope: !8013)
!8022 = !DILocation(line: 2871, column: 65, scope: !8013)
!8023 = !DILocation(line: 2871, column: 11, scope: !8013)
!8024 = !DILocation(line: 2871, column: 10, scope: !8013)
!8025 = !DILocation(line: 2872, column: 13, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 2872, column: 13)
!8027 = !DILocation(line: 2872, column: 15, scope: !8026)
!8028 = !DILocation(line: 2872, column: 13, scope: !8013)
!8029 = !DILocation(line: 2873, column: 11, scope: !8026)
!8030 = !DILocation(line: 2874, column: 15, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 2874, column: 9)
!8032 = !DILocation(line: 2874, column: 14, scope: !8031)
!8033 = !DILocation(line: 2874, column: 19, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 2874, column: 9)
!8035 = !DILocation(line: 2874, column: 33, scope: !8034)
!8036 = !DILocation(line: 2874, column: 38, scope: !8034)
!8037 = !DILocation(line: 2874, column: 21, scope: !8034)
!8038 = !DILocation(line: 2874, column: 9, scope: !8031)
!8039 = !DILocation(line: 2876, column: 11, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 2875, column: 9)
!8041 = !DILocation(line: 2877, column: 11, scope: !8040)
!8042 = !DILocation(line: 2878, column: 11, scope: !8040)
!8043 = !DILocation(line: 2879, column: 12, scope: !8040)
!8044 = !DILocation(line: 2880, column: 12, scope: !8040)
!8045 = !DILocation(line: 2881, column: 9, scope: !8040)
!8046 = !DILocation(line: 2874, column: 46, scope: !8034)
!8047 = !DILocation(line: 2874, column: 9, scope: !8034)
!8048 = distinct !{!8048, !8038, !8049}
!8049 = !DILocation(line: 2881, column: 9, scope: !8031)
!8050 = !DILocation(line: 2882, column: 33, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 2882, column: 13)
!8052 = !DILocation(line: 2882, column: 39, scope: !8051)
!8053 = !DILocation(line: 2882, column: 13, scope: !8051)
!8054 = !DILocation(line: 2882, column: 50, scope: !8051)
!8055 = !DILocation(line: 2882, column: 13, scope: !8013)
!8056 = !DILocation(line: 2883, column: 11, scope: !8051)
!8057 = !DILocation(line: 2884, column: 7, scope: !8013)
!8058 = !DILocation(line: 2869, column: 45, scope: !8007)
!8059 = !DILocation(line: 2869, column: 7, scope: !8007)
!8060 = distinct !{!8060, !8011, !8061}
!8061 = !DILocation(line: 2884, column: 7, scope: !8003)
!8062 = !DILocation(line: 2885, column: 7, scope: !8004)
!8063 = !DILocation(line: 2887, column: 21, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2887, column: 7)
!8065 = !DILocation(line: 2887, column: 7, scope: !8064)
!8066 = !DILocation(line: 2887, column: 32, scope: !8064)
!8067 = !DILocation(line: 2887, column: 7, scope: !7761)
!8068 = !DILocation(line: 2889, column: 13, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 2889, column: 7)
!8070 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 2888, column: 5)
!8071 = !DILocation(line: 2889, column: 12, scope: !8069)
!8072 = !DILocation(line: 2889, column: 17, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 2889, column: 7)
!8074 = !DILocation(line: 2889, column: 31, scope: !8073)
!8075 = !DILocation(line: 2889, column: 36, scope: !8073)
!8076 = !DILocation(line: 2889, column: 19, scope: !8073)
!8077 = !DILocation(line: 2889, column: 7, scope: !8069)
!8078 = !DILocation(line: 2891, column: 30, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 2890, column: 7)
!8080 = !DILocation(line: 2891, column: 36, scope: !8079)
!8081 = !DILocation(line: 2891, column: 41, scope: !8079)
!8082 = !DILocation(line: 2891, column: 43, scope: !8079)
!8083 = !DILocation(line: 2891, column: 48, scope: !8079)
!8084 = !DILocation(line: 2891, column: 50, scope: !8079)
!8085 = !DILocation(line: 2891, column: 49, scope: !8079)
!8086 = !DILocation(line: 2891, column: 52, scope: !8079)
!8087 = !DILocation(line: 2891, column: 57, scope: !8079)
!8088 = !DILocation(line: 2891, column: 65, scope: !8079)
!8089 = !DILocation(line: 2891, column: 11, scope: !8079)
!8090 = !DILocation(line: 2891, column: 10, scope: !8079)
!8091 = !DILocation(line: 2892, column: 13, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2892, column: 13)
!8093 = !DILocation(line: 2892, column: 15, scope: !8092)
!8094 = !DILocation(line: 2892, column: 13, scope: !8079)
!8095 = !DILocation(line: 2893, column: 11, scope: !8092)
!8096 = !DILocation(line: 2894, column: 15, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2894, column: 9)
!8098 = !DILocation(line: 2894, column: 14, scope: !8097)
!8099 = !DILocation(line: 2894, column: 19, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 2894, column: 9)
!8101 = !DILocation(line: 2894, column: 33, scope: !8100)
!8102 = !DILocation(line: 2894, column: 38, scope: !8100)
!8103 = !DILocation(line: 2894, column: 21, scope: !8100)
!8104 = !DILocation(line: 2894, column: 9, scope: !8097)
!8105 = !DILocation(line: 2896, column: 11, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 2895, column: 9)
!8107 = !DILocation(line: 2897, column: 12, scope: !8106)
!8108 = !DILocation(line: 2898, column: 11, scope: !8106)
!8109 = !DILocation(line: 2899, column: 12, scope: !8106)
!8110 = !DILocation(line: 2900, column: 11, scope: !8106)
!8111 = !DILocation(line: 2901, column: 12, scope: !8106)
!8112 = !DILocation(line: 2902, column: 12, scope: !8106)
!8113 = !DILocation(line: 2903, column: 9, scope: !8106)
!8114 = !DILocation(line: 2894, column: 46, scope: !8100)
!8115 = !DILocation(line: 2894, column: 9, scope: !8100)
!8116 = distinct !{!8116, !8104, !8117}
!8117 = !DILocation(line: 2903, column: 9, scope: !8097)
!8118 = !DILocation(line: 2904, column: 33, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2904, column: 13)
!8120 = !DILocation(line: 2904, column: 39, scope: !8119)
!8121 = !DILocation(line: 2904, column: 13, scope: !8119)
!8122 = !DILocation(line: 2904, column: 50, scope: !8119)
!8123 = !DILocation(line: 2904, column: 13, scope: !8079)
!8124 = !DILocation(line: 2905, column: 11, scope: !8119)
!8125 = !DILocation(line: 2906, column: 7, scope: !8079)
!8126 = !DILocation(line: 2889, column: 45, scope: !8073)
!8127 = !DILocation(line: 2889, column: 7, scope: !8073)
!8128 = distinct !{!8128, !8077, !8129}
!8129 = !DILocation(line: 2906, column: 7, scope: !8069)
!8130 = !DILocation(line: 2907, column: 7, scope: !8070)
!8131 = !DILocation(line: 2909, column: 21, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2909, column: 7)
!8133 = !DILocation(line: 2909, column: 7, scope: !8132)
!8134 = !DILocation(line: 2909, column: 33, scope: !8132)
!8135 = !DILocation(line: 2909, column: 7, scope: !7761)
!8136 = !DILocation(line: 2911, column: 13, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 2911, column: 7)
!8138 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 2910, column: 5)
!8139 = !DILocation(line: 2911, column: 12, scope: !8137)
!8140 = !DILocation(line: 2911, column: 17, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 2911, column: 7)
!8142 = !DILocation(line: 2911, column: 31, scope: !8141)
!8143 = !DILocation(line: 2911, column: 36, scope: !8141)
!8144 = !DILocation(line: 2911, column: 19, scope: !8141)
!8145 = !DILocation(line: 2911, column: 7, scope: !8137)
!8146 = !DILocation(line: 2913, column: 30, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 2912, column: 7)
!8148 = !DILocation(line: 2913, column: 36, scope: !8147)
!8149 = !DILocation(line: 2913, column: 41, scope: !8147)
!8150 = !DILocation(line: 2913, column: 43, scope: !8147)
!8151 = !DILocation(line: 2913, column: 48, scope: !8147)
!8152 = !DILocation(line: 2913, column: 50, scope: !8147)
!8153 = !DILocation(line: 2913, column: 49, scope: !8147)
!8154 = !DILocation(line: 2913, column: 52, scope: !8147)
!8155 = !DILocation(line: 2913, column: 57, scope: !8147)
!8156 = !DILocation(line: 2913, column: 65, scope: !8147)
!8157 = !DILocation(line: 2913, column: 11, scope: !8147)
!8158 = !DILocation(line: 2913, column: 10, scope: !8147)
!8159 = !DILocation(line: 2914, column: 13, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2914, column: 13)
!8161 = !DILocation(line: 2914, column: 15, scope: !8160)
!8162 = !DILocation(line: 2914, column: 13, scope: !8147)
!8163 = !DILocation(line: 2915, column: 11, scope: !8160)
!8164 = !DILocation(line: 2916, column: 15, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2916, column: 9)
!8166 = !DILocation(line: 2916, column: 14, scope: !8165)
!8167 = !DILocation(line: 2916, column: 19, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 2916, column: 9)
!8169 = !DILocation(line: 2916, column: 33, scope: !8168)
!8170 = !DILocation(line: 2916, column: 38, scope: !8168)
!8171 = !DILocation(line: 2916, column: 21, scope: !8168)
!8172 = !DILocation(line: 2916, column: 9, scope: !8165)
!8173 = !DILocation(line: 2918, column: 11, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 2917, column: 9)
!8175 = !DILocation(line: 2919, column: 12, scope: !8174)
!8176 = !DILocation(line: 2920, column: 11, scope: !8174)
!8177 = !DILocation(line: 2921, column: 12, scope: !8174)
!8178 = !DILocation(line: 2922, column: 11, scope: !8174)
!8179 = !DILocation(line: 2923, column: 12, scope: !8174)
!8180 = !DILocation(line: 2924, column: 11, scope: !8174)
!8181 = !DILocation(line: 2925, column: 12, scope: !8174)
!8182 = !DILocation(line: 2926, column: 12, scope: !8174)
!8183 = !DILocation(line: 2927, column: 9, scope: !8174)
!8184 = !DILocation(line: 2916, column: 46, scope: !8168)
!8185 = !DILocation(line: 2916, column: 9, scope: !8168)
!8186 = distinct !{!8186, !8172, !8187}
!8187 = !DILocation(line: 2927, column: 9, scope: !8165)
!8188 = !DILocation(line: 2928, column: 33, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 2928, column: 13)
!8190 = !DILocation(line: 2928, column: 39, scope: !8189)
!8191 = !DILocation(line: 2928, column: 13, scope: !8189)
!8192 = !DILocation(line: 2928, column: 50, scope: !8189)
!8193 = !DILocation(line: 2928, column: 13, scope: !8147)
!8194 = !DILocation(line: 2929, column: 11, scope: !8189)
!8195 = !DILocation(line: 2930, column: 7, scope: !8147)
!8196 = !DILocation(line: 2911, column: 45, scope: !8141)
!8197 = !DILocation(line: 2911, column: 7, scope: !8141)
!8198 = distinct !{!8198, !8145, !8199}
!8199 = !DILocation(line: 2930, column: 7, scope: !8137)
!8200 = !DILocation(line: 2931, column: 7, scope: !8138)
!8201 = !DILocation(line: 2933, column: 21, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2933, column: 7)
!8203 = !DILocation(line: 2933, column: 7, scope: !8202)
!8204 = !DILocation(line: 2933, column: 33, scope: !8202)
!8205 = !DILocation(line: 2933, column: 7, scope: !7761)
!8206 = !DILocation(line: 2935, column: 13, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 2935, column: 7)
!8208 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 2934, column: 5)
!8209 = !DILocation(line: 2935, column: 12, scope: !8207)
!8210 = !DILocation(line: 2935, column: 17, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 2935, column: 7)
!8212 = !DILocation(line: 2935, column: 31, scope: !8211)
!8213 = !DILocation(line: 2935, column: 36, scope: !8211)
!8214 = !DILocation(line: 2935, column: 19, scope: !8211)
!8215 = !DILocation(line: 2935, column: 7, scope: !8207)
!8216 = !DILocation(line: 2937, column: 30, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2936, column: 7)
!8218 = !DILocation(line: 2937, column: 36, scope: !8217)
!8219 = !DILocation(line: 2937, column: 41, scope: !8217)
!8220 = !DILocation(line: 2937, column: 43, scope: !8217)
!8221 = !DILocation(line: 2937, column: 48, scope: !8217)
!8222 = !DILocation(line: 2937, column: 50, scope: !8217)
!8223 = !DILocation(line: 2937, column: 49, scope: !8217)
!8224 = !DILocation(line: 2937, column: 52, scope: !8217)
!8225 = !DILocation(line: 2937, column: 57, scope: !8217)
!8226 = !DILocation(line: 2937, column: 65, scope: !8217)
!8227 = !DILocation(line: 2937, column: 11, scope: !8217)
!8228 = !DILocation(line: 2937, column: 10, scope: !8217)
!8229 = !DILocation(line: 2938, column: 13, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 2938, column: 13)
!8231 = !DILocation(line: 2938, column: 15, scope: !8230)
!8232 = !DILocation(line: 2938, column: 13, scope: !8217)
!8233 = !DILocation(line: 2939, column: 11, scope: !8230)
!8234 = !DILocation(line: 2940, column: 15, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 2940, column: 9)
!8236 = !DILocation(line: 2940, column: 14, scope: !8235)
!8237 = !DILocation(line: 2940, column: 19, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 2940, column: 9)
!8239 = !DILocation(line: 2940, column: 33, scope: !8238)
!8240 = !DILocation(line: 2940, column: 38, scope: !8238)
!8241 = !DILocation(line: 2940, column: 21, scope: !8238)
!8242 = !DILocation(line: 2940, column: 9, scope: !8235)
!8243 = !DILocation(line: 2942, column: 11, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 2941, column: 9)
!8245 = !DILocation(line: 2943, column: 12, scope: !8244)
!8246 = !DILocation(line: 2944, column: 11, scope: !8244)
!8247 = !DILocation(line: 2945, column: 12, scope: !8244)
!8248 = !DILocation(line: 2946, column: 11, scope: !8244)
!8249 = !DILocation(line: 2947, column: 12, scope: !8244)
!8250 = !DILocation(line: 2948, column: 12, scope: !8244)
!8251 = !DILocation(line: 2949, column: 9, scope: !8244)
!8252 = !DILocation(line: 2940, column: 46, scope: !8238)
!8253 = !DILocation(line: 2940, column: 9, scope: !8238)
!8254 = distinct !{!8254, !8242, !8255}
!8255 = !DILocation(line: 2949, column: 9, scope: !8235)
!8256 = !DILocation(line: 2950, column: 33, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 2950, column: 13)
!8258 = !DILocation(line: 2950, column: 39, scope: !8257)
!8259 = !DILocation(line: 2950, column: 13, scope: !8257)
!8260 = !DILocation(line: 2950, column: 50, scope: !8257)
!8261 = !DILocation(line: 2950, column: 13, scope: !8217)
!8262 = !DILocation(line: 2951, column: 11, scope: !8257)
!8263 = !DILocation(line: 2952, column: 7, scope: !8217)
!8264 = !DILocation(line: 2935, column: 45, scope: !8211)
!8265 = !DILocation(line: 2935, column: 7, scope: !8211)
!8266 = distinct !{!8266, !8215, !8267}
!8267 = !DILocation(line: 2952, column: 7, scope: !8207)
!8268 = !DILocation(line: 2953, column: 7, scope: !8208)
!8269 = !DILocation(line: 2955, column: 17, scope: !7761)
!8270 = !DILocation(line: 2955, column: 10, scope: !7761)
!8271 = !DILocation(line: 2955, column: 9, scope: !7761)
!8272 = !DILocation(line: 2956, column: 9, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2956, column: 3)
!8274 = !DILocation(line: 2956, column: 8, scope: !8273)
!8275 = !DILocation(line: 2956, column: 13, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 2956, column: 3)
!8277 = !DILocation(line: 2956, column: 27, scope: !8276)
!8278 = !DILocation(line: 2956, column: 32, scope: !8276)
!8279 = !DILocation(line: 2956, column: 15, scope: !8276)
!8280 = !DILocation(line: 2956, column: 3, scope: !8273)
!8281 = !DILocation(line: 2958, column: 26, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 2957, column: 3)
!8283 = !DILocation(line: 2958, column: 32, scope: !8282)
!8284 = !DILocation(line: 2958, column: 37, scope: !8282)
!8285 = !DILocation(line: 2958, column: 39, scope: !8282)
!8286 = !DILocation(line: 2958, column: 44, scope: !8282)
!8287 = !DILocation(line: 2958, column: 46, scope: !8282)
!8288 = !DILocation(line: 2958, column: 45, scope: !8282)
!8289 = !DILocation(line: 2958, column: 48, scope: !8282)
!8290 = !DILocation(line: 2958, column: 53, scope: !8282)
!8291 = !DILocation(line: 2958, column: 61, scope: !8282)
!8292 = !DILocation(line: 2958, column: 7, scope: !8282)
!8293 = !DILocation(line: 2958, column: 6, scope: !8282)
!8294 = !DILocation(line: 2959, column: 9, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2959, column: 9)
!8296 = !DILocation(line: 2959, column: 11, scope: !8295)
!8297 = !DILocation(line: 2959, column: 9, scope: !8282)
!8298 = !DILocation(line: 2960, column: 7, scope: !8295)
!8299 = !DILocation(line: 2961, column: 36, scope: !8282)
!8300 = !DILocation(line: 2961, column: 13, scope: !8282)
!8301 = !DILocation(line: 2961, column: 12, scope: !8282)
!8302 = !DILocation(line: 2962, column: 11, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2962, column: 5)
!8304 = !DILocation(line: 2962, column: 10, scope: !8303)
!8305 = !DILocation(line: 2962, column: 15, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 2962, column: 5)
!8307 = !DILocation(line: 2962, column: 29, scope: !8306)
!8308 = !DILocation(line: 2962, column: 34, scope: !8306)
!8309 = !DILocation(line: 2962, column: 17, scope: !8306)
!8310 = !DILocation(line: 2962, column: 5, scope: !8303)
!8311 = !DILocalVariable(name: "i", scope: !8312, file: !3, line: 2965, type: !470)
!8312 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 2963, column: 5)
!8313 = !DILocation(line: 2965, column: 9, scope: !8312)
!8314 = !DILocation(line: 2967, column: 13, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 2967, column: 7)
!8316 = !DILocation(line: 2967, column: 12, scope: !8315)
!8317 = !DILocation(line: 2967, column: 17, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 2967, column: 7)
!8319 = !DILocation(line: 2967, column: 31, scope: !8318)
!8320 = !DILocation(line: 2967, column: 19, scope: !8318)
!8321 = !DILocation(line: 2967, column: 7, scope: !8315)
!8322 = !DILocation(line: 2969, column: 17, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 2968, column: 7)
!8324 = !DILocation(line: 2969, column: 29, scope: !8323)
!8325 = !DILocation(line: 2969, column: 9, scope: !8323)
!8326 = !DILocation(line: 2974, column: 13, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 2973, column: 11)
!8328 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 2970, column: 9)
!8329 = !DILocation(line: 2975, column: 13, scope: !8327)
!8330 = !DILocation(line: 2980, column: 13, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 2979, column: 11)
!8332 = !DILocation(line: 2981, column: 13, scope: !8331)
!8333 = !DILocation(line: 2986, column: 13, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 2985, column: 11)
!8335 = !DILocation(line: 2987, column: 13, scope: !8334)
!8336 = !DILocation(line: 2991, column: 13, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 2990, column: 11)
!8338 = !DILocation(line: 2992, column: 13, scope: !8337)
!8339 = !DILocation(line: 2996, column: 13, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 2995, column: 11)
!8341 = !DILocation(line: 2998, column: 13, scope: !8340)
!8342 = !DILocation(line: 3002, column: 13, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 3002, column: 13)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 3002, column: 13)
!8345 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 3001, column: 11)
!8346 = !DILocation(line: 3002, column: 13, scope: !8344)
!8347 = !DILocation(line: 3004, column: 13, scope: !8345)
!8348 = !DILocation(line: 3008, column: 13, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 3007, column: 11)
!8350 = !DILocation(line: 3009, column: 13, scope: !8349)
!8351 = !DILocation(line: 3010, column: 13, scope: !8349)
!8352 = !DILocation(line: 3011, column: 13, scope: !8349)
!8353 = !DILocation(line: 3014, column: 13, scope: !8328)
!8354 = !DILocation(line: 3016, column: 10, scope: !8323)
!8355 = !DILocation(line: 3017, column: 7, scope: !8323)
!8356 = !DILocation(line: 2967, column: 40, scope: !8318)
!8357 = !DILocation(line: 2967, column: 7, scope: !8318)
!8358 = distinct !{!8358, !8321, !8359}
!8359 = !DILocation(line: 3017, column: 7, scope: !8315)
!8360 = !DILocation(line: 3018, column: 8, scope: !8312)
!8361 = !DILocation(line: 3019, column: 5, scope: !8312)
!8362 = !DILocation(line: 2962, column: 42, scope: !8306)
!8363 = !DILocation(line: 2962, column: 5, scope: !8306)
!8364 = distinct !{!8364, !8310, !8365}
!8365 = !DILocation(line: 3019, column: 5, scope: !8303)
!8366 = !DILocation(line: 3020, column: 29, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 3020, column: 9)
!8368 = !DILocation(line: 3020, column: 35, scope: !8367)
!8369 = !DILocation(line: 3020, column: 9, scope: !8367)
!8370 = !DILocation(line: 3020, column: 46, scope: !8367)
!8371 = !DILocation(line: 3020, column: 9, scope: !8282)
!8372 = !DILocation(line: 3021, column: 7, scope: !8367)
!8373 = !DILocation(line: 3022, column: 3, scope: !8282)
!8374 = !DILocation(line: 2956, column: 41, scope: !8276)
!8375 = !DILocation(line: 2956, column: 3, scope: !8276)
!8376 = distinct !{!8376, !8280, !8377}
!8377 = !DILocation(line: 3022, column: 3, scope: !8273)
!8378 = !DILocation(line: 3023, column: 1, scope: !7761)
!8379 = distinct !DISubprogram(name: "ImportIntegerPixel", scope: !3, file: !3, line: 3025, type: !6402, scopeLine: 3028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!8380 = !DILocalVariable(name: "image", arg: 1, scope: !8379, file: !3, line: 3025, type: !475)
!8381 = !DILocation(line: 3025, column: 39, scope: !8379)
!8382 = !DILocalVariable(name: "roi", arg: 2, scope: !8379, file: !3, line: 3025, type: !1347)
!8383 = !DILocation(line: 3025, column: 66, scope: !8379)
!8384 = !DILocalVariable(name: "map", arg: 3, scope: !8379, file: !3, line: 3026, type: !1349)
!8385 = !DILocation(line: 3026, column: 24, scope: !8379)
!8386 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !8379, file: !3, line: 3026, type: !1350)
!8387 = !DILocation(line: 3026, column: 47, scope: !8379)
!8388 = !DILocalVariable(name: "pixels", arg: 5, scope: !8379, file: !3, line: 3026, type: !6154)
!8389 = !DILocation(line: 3026, column: 71, scope: !8379)
!8390 = !DILocalVariable(name: "exception", arg: 6, scope: !8379, file: !3, line: 3027, type: !1071)
!8391 = !DILocation(line: 3027, column: 18, scope: !8379)
!8392 = !DILocalVariable(name: "p", scope: !8379, file: !3, line: 3030, type: !8393)
!8393 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !699)
!8394 = !DILocation(line: 3030, column: 15, scope: !8379)
!8395 = !DILocalVariable(name: "indexes", scope: !8379, file: !3, line: 3033, type: !6420)
!8396 = !DILocation(line: 3033, column: 15, scope: !8379)
!8397 = !DILocalVariable(name: "q", scope: !8379, file: !3, line: 3036, type: !6423)
!8398 = !DILocation(line: 3036, column: 15, scope: !8379)
!8399 = !DILocalVariable(name: "x", scope: !8379, file: !3, line: 3039, type: !470)
!8400 = !DILocation(line: 3039, column: 5, scope: !8379)
!8401 = !DILocalVariable(name: "length", scope: !8379, file: !3, line: 3042, type: !454)
!8402 = !DILocation(line: 3042, column: 5, scope: !8379)
!8403 = !DILocalVariable(name: "y", scope: !8379, file: !3, line: 3045, type: !470)
!8404 = !DILocation(line: 3045, column: 5, scope: !8379)
!8405 = !DILocation(line: 3047, column: 28, scope: !8379)
!8406 = !DILocation(line: 3047, column: 5, scope: !8379)
!8407 = !DILocation(line: 3047, column: 4, scope: !8379)
!8408 = !DILocation(line: 3048, column: 21, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3048, column: 7)
!8410 = !DILocation(line: 3048, column: 7, scope: !8409)
!8411 = !DILocation(line: 3048, column: 32, scope: !8409)
!8412 = !DILocation(line: 3048, column: 7, scope: !8379)
!8413 = !DILocation(line: 3050, column: 13, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 3050, column: 7)
!8415 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 3049, column: 5)
!8416 = !DILocation(line: 3050, column: 12, scope: !8414)
!8417 = !DILocation(line: 3050, column: 17, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 3050, column: 7)
!8419 = !DILocation(line: 3050, column: 31, scope: !8418)
!8420 = !DILocation(line: 3050, column: 36, scope: !8418)
!8421 = !DILocation(line: 3050, column: 19, scope: !8418)
!8422 = !DILocation(line: 3050, column: 7, scope: !8414)
!8423 = !DILocation(line: 3052, column: 30, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 3051, column: 7)
!8425 = !DILocation(line: 3052, column: 36, scope: !8424)
!8426 = !DILocation(line: 3052, column: 41, scope: !8424)
!8427 = !DILocation(line: 3052, column: 43, scope: !8424)
!8428 = !DILocation(line: 3052, column: 48, scope: !8424)
!8429 = !DILocation(line: 3052, column: 50, scope: !8424)
!8430 = !DILocation(line: 3052, column: 49, scope: !8424)
!8431 = !DILocation(line: 3052, column: 52, scope: !8424)
!8432 = !DILocation(line: 3052, column: 57, scope: !8424)
!8433 = !DILocation(line: 3052, column: 65, scope: !8424)
!8434 = !DILocation(line: 3052, column: 11, scope: !8424)
!8435 = !DILocation(line: 3052, column: 10, scope: !8424)
!8436 = !DILocation(line: 3053, column: 13, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 3053, column: 13)
!8438 = !DILocation(line: 3053, column: 15, scope: !8437)
!8439 = !DILocation(line: 3053, column: 13, scope: !8424)
!8440 = !DILocation(line: 3054, column: 11, scope: !8437)
!8441 = !DILocation(line: 3055, column: 15, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 3055, column: 9)
!8443 = !DILocation(line: 3055, column: 14, scope: !8442)
!8444 = !DILocation(line: 3055, column: 19, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 3055, column: 9)
!8446 = !DILocation(line: 3055, column: 33, scope: !8445)
!8447 = !DILocation(line: 3055, column: 38, scope: !8445)
!8448 = !DILocation(line: 3055, column: 21, scope: !8445)
!8449 = !DILocation(line: 3055, column: 9, scope: !8442)
!8450 = !DILocation(line: 3057, column: 11, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 3056, column: 9)
!8452 = !DILocation(line: 3058, column: 11, scope: !8451)
!8453 = !DILocation(line: 3059, column: 11, scope: !8451)
!8454 = !DILocation(line: 3060, column: 12, scope: !8451)
!8455 = !DILocation(line: 3061, column: 9, scope: !8451)
!8456 = !DILocation(line: 3055, column: 46, scope: !8445)
!8457 = !DILocation(line: 3055, column: 9, scope: !8445)
!8458 = distinct !{!8458, !8449, !8459}
!8459 = !DILocation(line: 3061, column: 9, scope: !8442)
!8460 = !DILocation(line: 3062, column: 33, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 3062, column: 13)
!8462 = !DILocation(line: 3062, column: 39, scope: !8461)
!8463 = !DILocation(line: 3062, column: 13, scope: !8461)
!8464 = !DILocation(line: 3062, column: 50, scope: !8461)
!8465 = !DILocation(line: 3062, column: 13, scope: !8424)
!8466 = !DILocation(line: 3063, column: 11, scope: !8461)
!8467 = !DILocation(line: 3064, column: 7, scope: !8424)
!8468 = !DILocation(line: 3050, column: 45, scope: !8418)
!8469 = !DILocation(line: 3050, column: 7, scope: !8418)
!8470 = distinct !{!8470, !8422, !8471}
!8471 = !DILocation(line: 3064, column: 7, scope: !8414)
!8472 = !DILocation(line: 3065, column: 7, scope: !8415)
!8473 = !DILocation(line: 3067, column: 21, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3067, column: 7)
!8475 = !DILocation(line: 3067, column: 7, scope: !8474)
!8476 = !DILocation(line: 3067, column: 33, scope: !8474)
!8477 = !DILocation(line: 3067, column: 7, scope: !8379)
!8478 = !DILocation(line: 3069, column: 13, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 3069, column: 7)
!8480 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 3068, column: 5)
!8481 = !DILocation(line: 3069, column: 12, scope: !8479)
!8482 = !DILocation(line: 3069, column: 17, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 3069, column: 7)
!8484 = !DILocation(line: 3069, column: 31, scope: !8483)
!8485 = !DILocation(line: 3069, column: 36, scope: !8483)
!8486 = !DILocation(line: 3069, column: 19, scope: !8483)
!8487 = !DILocation(line: 3069, column: 7, scope: !8479)
!8488 = !DILocation(line: 3071, column: 30, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 3070, column: 7)
!8490 = !DILocation(line: 3071, column: 36, scope: !8489)
!8491 = !DILocation(line: 3071, column: 41, scope: !8489)
!8492 = !DILocation(line: 3071, column: 43, scope: !8489)
!8493 = !DILocation(line: 3071, column: 48, scope: !8489)
!8494 = !DILocation(line: 3071, column: 50, scope: !8489)
!8495 = !DILocation(line: 3071, column: 49, scope: !8489)
!8496 = !DILocation(line: 3071, column: 52, scope: !8489)
!8497 = !DILocation(line: 3071, column: 57, scope: !8489)
!8498 = !DILocation(line: 3071, column: 65, scope: !8489)
!8499 = !DILocation(line: 3071, column: 11, scope: !8489)
!8500 = !DILocation(line: 3071, column: 10, scope: !8489)
!8501 = !DILocation(line: 3072, column: 13, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 3072, column: 13)
!8503 = !DILocation(line: 3072, column: 15, scope: !8502)
!8504 = !DILocation(line: 3072, column: 13, scope: !8489)
!8505 = !DILocation(line: 3073, column: 11, scope: !8502)
!8506 = !DILocation(line: 3074, column: 15, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 3074, column: 9)
!8508 = !DILocation(line: 3074, column: 14, scope: !8507)
!8509 = !DILocation(line: 3074, column: 19, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 3074, column: 9)
!8511 = !DILocation(line: 3074, column: 33, scope: !8510)
!8512 = !DILocation(line: 3074, column: 38, scope: !8510)
!8513 = !DILocation(line: 3074, column: 21, scope: !8510)
!8514 = !DILocation(line: 3074, column: 9, scope: !8507)
!8515 = !DILocation(line: 3076, column: 11, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 3075, column: 9)
!8517 = !DILocation(line: 3077, column: 11, scope: !8516)
!8518 = !DILocation(line: 3078, column: 11, scope: !8516)
!8519 = !DILocation(line: 3079, column: 11, scope: !8516)
!8520 = !DILocation(line: 3080, column: 12, scope: !8516)
!8521 = !DILocation(line: 3081, column: 9, scope: !8516)
!8522 = !DILocation(line: 3074, column: 46, scope: !8510)
!8523 = !DILocation(line: 3074, column: 9, scope: !8510)
!8524 = distinct !{!8524, !8514, !8525}
!8525 = !DILocation(line: 3081, column: 9, scope: !8507)
!8526 = !DILocation(line: 3082, column: 33, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 3082, column: 13)
!8528 = !DILocation(line: 3082, column: 39, scope: !8527)
!8529 = !DILocation(line: 3082, column: 13, scope: !8527)
!8530 = !DILocation(line: 3082, column: 50, scope: !8527)
!8531 = !DILocation(line: 3082, column: 13, scope: !8489)
!8532 = !DILocation(line: 3083, column: 11, scope: !8527)
!8533 = !DILocation(line: 3084, column: 7, scope: !8489)
!8534 = !DILocation(line: 3069, column: 45, scope: !8483)
!8535 = !DILocation(line: 3069, column: 7, scope: !8483)
!8536 = distinct !{!8536, !8487, !8537}
!8537 = !DILocation(line: 3084, column: 7, scope: !8479)
!8538 = !DILocation(line: 3085, column: 7, scope: !8480)
!8539 = !DILocation(line: 3087, column: 21, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3087, column: 7)
!8541 = !DILocation(line: 3087, column: 7, scope: !8540)
!8542 = !DILocation(line: 3087, column: 33, scope: !8540)
!8543 = !DILocation(line: 3087, column: 7, scope: !8379)
!8544 = !DILocation(line: 3089, column: 13, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 3089, column: 7)
!8546 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 3088, column: 5)
!8547 = !DILocation(line: 3089, column: 12, scope: !8545)
!8548 = !DILocation(line: 3089, column: 17, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 3089, column: 7)
!8550 = !DILocation(line: 3089, column: 31, scope: !8549)
!8551 = !DILocation(line: 3089, column: 36, scope: !8549)
!8552 = !DILocation(line: 3089, column: 19, scope: !8549)
!8553 = !DILocation(line: 3089, column: 7, scope: !8545)
!8554 = !DILocation(line: 3091, column: 30, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 3090, column: 7)
!8556 = !DILocation(line: 3091, column: 36, scope: !8555)
!8557 = !DILocation(line: 3091, column: 41, scope: !8555)
!8558 = !DILocation(line: 3091, column: 43, scope: !8555)
!8559 = !DILocation(line: 3091, column: 48, scope: !8555)
!8560 = !DILocation(line: 3091, column: 50, scope: !8555)
!8561 = !DILocation(line: 3091, column: 49, scope: !8555)
!8562 = !DILocation(line: 3091, column: 52, scope: !8555)
!8563 = !DILocation(line: 3091, column: 57, scope: !8555)
!8564 = !DILocation(line: 3091, column: 65, scope: !8555)
!8565 = !DILocation(line: 3091, column: 11, scope: !8555)
!8566 = !DILocation(line: 3091, column: 10, scope: !8555)
!8567 = !DILocation(line: 3092, column: 13, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 3092, column: 13)
!8569 = !DILocation(line: 3092, column: 15, scope: !8568)
!8570 = !DILocation(line: 3092, column: 13, scope: !8555)
!8571 = !DILocation(line: 3093, column: 11, scope: !8568)
!8572 = !DILocation(line: 3094, column: 15, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 3094, column: 9)
!8574 = !DILocation(line: 3094, column: 14, scope: !8573)
!8575 = !DILocation(line: 3094, column: 19, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 3094, column: 9)
!8577 = !DILocation(line: 3094, column: 33, scope: !8576)
!8578 = !DILocation(line: 3094, column: 38, scope: !8576)
!8579 = !DILocation(line: 3094, column: 21, scope: !8576)
!8580 = !DILocation(line: 3094, column: 9, scope: !8573)
!8581 = !DILocation(line: 3096, column: 11, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 3095, column: 9)
!8583 = !DILocation(line: 3097, column: 11, scope: !8582)
!8584 = !DILocation(line: 3098, column: 11, scope: !8582)
!8585 = !DILocation(line: 3099, column: 12, scope: !8582)
!8586 = !DILocation(line: 3100, column: 12, scope: !8582)
!8587 = !DILocation(line: 3101, column: 9, scope: !8582)
!8588 = !DILocation(line: 3094, column: 46, scope: !8576)
!8589 = !DILocation(line: 3094, column: 9, scope: !8576)
!8590 = distinct !{!8590, !8580, !8591}
!8591 = !DILocation(line: 3101, column: 9, scope: !8573)
!8592 = !DILocation(line: 3102, column: 33, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 3102, column: 13)
!8594 = !DILocation(line: 3102, column: 39, scope: !8593)
!8595 = !DILocation(line: 3102, column: 13, scope: !8593)
!8596 = !DILocation(line: 3102, column: 50, scope: !8593)
!8597 = !DILocation(line: 3102, column: 13, scope: !8555)
!8598 = !DILocation(line: 3103, column: 11, scope: !8593)
!8599 = !DILocation(line: 3104, column: 7, scope: !8555)
!8600 = !DILocation(line: 3089, column: 45, scope: !8549)
!8601 = !DILocation(line: 3089, column: 7, scope: !8549)
!8602 = distinct !{!8602, !8553, !8603}
!8603 = !DILocation(line: 3104, column: 7, scope: !8545)
!8604 = !DILocation(line: 3105, column: 7, scope: !8546)
!8605 = !DILocation(line: 3107, column: 21, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3107, column: 7)
!8607 = !DILocation(line: 3107, column: 7, scope: !8606)
!8608 = !DILocation(line: 3107, column: 30, scope: !8606)
!8609 = !DILocation(line: 3107, column: 7, scope: !8379)
!8610 = !DILocation(line: 3109, column: 13, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8612, file: !3, line: 3109, column: 7)
!8612 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 3108, column: 5)
!8613 = !DILocation(line: 3109, column: 12, scope: !8611)
!8614 = !DILocation(line: 3109, column: 17, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8611, file: !3, line: 3109, column: 7)
!8616 = !DILocation(line: 3109, column: 31, scope: !8615)
!8617 = !DILocation(line: 3109, column: 36, scope: !8615)
!8618 = !DILocation(line: 3109, column: 19, scope: !8615)
!8619 = !DILocation(line: 3109, column: 7, scope: !8611)
!8620 = !DILocation(line: 3111, column: 30, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 3110, column: 7)
!8622 = !DILocation(line: 3111, column: 36, scope: !8621)
!8623 = !DILocation(line: 3111, column: 41, scope: !8621)
!8624 = !DILocation(line: 3111, column: 43, scope: !8621)
!8625 = !DILocation(line: 3111, column: 48, scope: !8621)
!8626 = !DILocation(line: 3111, column: 50, scope: !8621)
!8627 = !DILocation(line: 3111, column: 49, scope: !8621)
!8628 = !DILocation(line: 3111, column: 52, scope: !8621)
!8629 = !DILocation(line: 3111, column: 57, scope: !8621)
!8630 = !DILocation(line: 3111, column: 65, scope: !8621)
!8631 = !DILocation(line: 3111, column: 11, scope: !8621)
!8632 = !DILocation(line: 3111, column: 10, scope: !8621)
!8633 = !DILocation(line: 3112, column: 13, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 3112, column: 13)
!8635 = !DILocation(line: 3112, column: 15, scope: !8634)
!8636 = !DILocation(line: 3112, column: 13, scope: !8621)
!8637 = !DILocation(line: 3113, column: 11, scope: !8634)
!8638 = !DILocation(line: 3114, column: 15, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 3114, column: 9)
!8640 = !DILocation(line: 3114, column: 14, scope: !8639)
!8641 = !DILocation(line: 3114, column: 19, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 3114, column: 9)
!8643 = !DILocation(line: 3114, column: 33, scope: !8642)
!8644 = !DILocation(line: 3114, column: 38, scope: !8642)
!8645 = !DILocation(line: 3114, column: 21, scope: !8642)
!8646 = !DILocation(line: 3114, column: 9, scope: !8639)
!8647 = !DILocation(line: 3116, column: 11, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 3115, column: 9)
!8649 = !DILocation(line: 3117, column: 11, scope: !8648)
!8650 = !DILocation(line: 3118, column: 11, scope: !8648)
!8651 = !DILocation(line: 3119, column: 12, scope: !8648)
!8652 = !DILocation(line: 3120, column: 9, scope: !8648)
!8653 = !DILocation(line: 3114, column: 46, scope: !8642)
!8654 = !DILocation(line: 3114, column: 9, scope: !8642)
!8655 = distinct !{!8655, !8646, !8656}
!8656 = !DILocation(line: 3120, column: 9, scope: !8639)
!8657 = !DILocation(line: 3121, column: 33, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 3121, column: 13)
!8659 = !DILocation(line: 3121, column: 39, scope: !8658)
!8660 = !DILocation(line: 3121, column: 13, scope: !8658)
!8661 = !DILocation(line: 3121, column: 50, scope: !8658)
!8662 = !DILocation(line: 3121, column: 13, scope: !8621)
!8663 = !DILocation(line: 3122, column: 11, scope: !8658)
!8664 = !DILocation(line: 3123, column: 7, scope: !8621)
!8665 = !DILocation(line: 3109, column: 45, scope: !8615)
!8666 = !DILocation(line: 3109, column: 7, scope: !8615)
!8667 = distinct !{!8667, !8619, !8668}
!8668 = !DILocation(line: 3123, column: 7, scope: !8611)
!8669 = !DILocation(line: 3124, column: 7, scope: !8612)
!8670 = !DILocation(line: 3126, column: 21, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3126, column: 7)
!8672 = !DILocation(line: 3126, column: 7, scope: !8671)
!8673 = !DILocation(line: 3126, column: 32, scope: !8671)
!8674 = !DILocation(line: 3126, column: 7, scope: !8379)
!8675 = !DILocation(line: 3128, column: 13, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3128, column: 7)
!8677 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 3127, column: 5)
!8678 = !DILocation(line: 3128, column: 12, scope: !8676)
!8679 = !DILocation(line: 3128, column: 17, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 3128, column: 7)
!8681 = !DILocation(line: 3128, column: 31, scope: !8680)
!8682 = !DILocation(line: 3128, column: 36, scope: !8680)
!8683 = !DILocation(line: 3128, column: 19, scope: !8680)
!8684 = !DILocation(line: 3128, column: 7, scope: !8676)
!8685 = !DILocation(line: 3130, column: 30, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 3129, column: 7)
!8687 = !DILocation(line: 3130, column: 36, scope: !8686)
!8688 = !DILocation(line: 3130, column: 41, scope: !8686)
!8689 = !DILocation(line: 3130, column: 43, scope: !8686)
!8690 = !DILocation(line: 3130, column: 48, scope: !8686)
!8691 = !DILocation(line: 3130, column: 50, scope: !8686)
!8692 = !DILocation(line: 3130, column: 49, scope: !8686)
!8693 = !DILocation(line: 3130, column: 52, scope: !8686)
!8694 = !DILocation(line: 3130, column: 57, scope: !8686)
!8695 = !DILocation(line: 3130, column: 65, scope: !8686)
!8696 = !DILocation(line: 3130, column: 11, scope: !8686)
!8697 = !DILocation(line: 3130, column: 10, scope: !8686)
!8698 = !DILocation(line: 3131, column: 13, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 3131, column: 13)
!8700 = !DILocation(line: 3131, column: 15, scope: !8699)
!8701 = !DILocation(line: 3131, column: 13, scope: !8686)
!8702 = !DILocation(line: 3132, column: 11, scope: !8699)
!8703 = !DILocation(line: 3133, column: 15, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 3133, column: 9)
!8705 = !DILocation(line: 3133, column: 14, scope: !8704)
!8706 = !DILocation(line: 3133, column: 19, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 3133, column: 9)
!8708 = !DILocation(line: 3133, column: 33, scope: !8707)
!8709 = !DILocation(line: 3133, column: 38, scope: !8707)
!8710 = !DILocation(line: 3133, column: 21, scope: !8707)
!8711 = !DILocation(line: 3133, column: 9, scope: !8704)
!8712 = !DILocation(line: 3135, column: 11, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 3134, column: 9)
!8714 = !DILocation(line: 3136, column: 11, scope: !8713)
!8715 = !DILocation(line: 3137, column: 11, scope: !8713)
!8716 = !DILocation(line: 3138, column: 12, scope: !8713)
!8717 = !DILocation(line: 3139, column: 9, scope: !8713)
!8718 = !DILocation(line: 3133, column: 46, scope: !8707)
!8719 = !DILocation(line: 3133, column: 9, scope: !8707)
!8720 = distinct !{!8720, !8711, !8721}
!8721 = !DILocation(line: 3139, column: 9, scope: !8704)
!8722 = !DILocation(line: 3140, column: 33, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 3140, column: 13)
!8724 = !DILocation(line: 3140, column: 39, scope: !8723)
!8725 = !DILocation(line: 3140, column: 13, scope: !8723)
!8726 = !DILocation(line: 3140, column: 50, scope: !8723)
!8727 = !DILocation(line: 3140, column: 13, scope: !8686)
!8728 = !DILocation(line: 3141, column: 11, scope: !8723)
!8729 = !DILocation(line: 3142, column: 7, scope: !8686)
!8730 = !DILocation(line: 3128, column: 45, scope: !8680)
!8731 = !DILocation(line: 3128, column: 7, scope: !8680)
!8732 = distinct !{!8732, !8684, !8733}
!8733 = !DILocation(line: 3142, column: 7, scope: !8676)
!8734 = !DILocation(line: 3143, column: 7, scope: !8677)
!8735 = !DILocation(line: 3145, column: 21, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3145, column: 7)
!8737 = !DILocation(line: 3145, column: 7, scope: !8736)
!8738 = !DILocation(line: 3145, column: 33, scope: !8736)
!8739 = !DILocation(line: 3145, column: 7, scope: !8379)
!8740 = !DILocation(line: 3147, column: 13, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 3147, column: 7)
!8742 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 3146, column: 5)
!8743 = !DILocation(line: 3147, column: 12, scope: !8741)
!8744 = !DILocation(line: 3147, column: 17, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 3147, column: 7)
!8746 = !DILocation(line: 3147, column: 31, scope: !8745)
!8747 = !DILocation(line: 3147, column: 36, scope: !8745)
!8748 = !DILocation(line: 3147, column: 19, scope: !8745)
!8749 = !DILocation(line: 3147, column: 7, scope: !8741)
!8750 = !DILocation(line: 3149, column: 30, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 3148, column: 7)
!8752 = !DILocation(line: 3149, column: 36, scope: !8751)
!8753 = !DILocation(line: 3149, column: 41, scope: !8751)
!8754 = !DILocation(line: 3149, column: 43, scope: !8751)
!8755 = !DILocation(line: 3149, column: 48, scope: !8751)
!8756 = !DILocation(line: 3149, column: 50, scope: !8751)
!8757 = !DILocation(line: 3149, column: 49, scope: !8751)
!8758 = !DILocation(line: 3149, column: 52, scope: !8751)
!8759 = !DILocation(line: 3149, column: 57, scope: !8751)
!8760 = !DILocation(line: 3149, column: 65, scope: !8751)
!8761 = !DILocation(line: 3149, column: 11, scope: !8751)
!8762 = !DILocation(line: 3149, column: 10, scope: !8751)
!8763 = !DILocation(line: 3150, column: 13, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 3150, column: 13)
!8765 = !DILocation(line: 3150, column: 15, scope: !8764)
!8766 = !DILocation(line: 3150, column: 13, scope: !8751)
!8767 = !DILocation(line: 3151, column: 11, scope: !8764)
!8768 = !DILocation(line: 3152, column: 15, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 3152, column: 9)
!8770 = !DILocation(line: 3152, column: 14, scope: !8769)
!8771 = !DILocation(line: 3152, column: 19, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 3152, column: 9)
!8773 = !DILocation(line: 3152, column: 33, scope: !8772)
!8774 = !DILocation(line: 3152, column: 38, scope: !8772)
!8775 = !DILocation(line: 3152, column: 21, scope: !8772)
!8776 = !DILocation(line: 3152, column: 9, scope: !8769)
!8777 = !DILocation(line: 3154, column: 11, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 3153, column: 9)
!8779 = !DILocation(line: 3155, column: 11, scope: !8778)
!8780 = !DILocation(line: 3156, column: 11, scope: !8778)
!8781 = !DILocation(line: 3157, column: 11, scope: !8778)
!8782 = !DILocation(line: 3158, column: 12, scope: !8778)
!8783 = !DILocation(line: 3159, column: 9, scope: !8778)
!8784 = !DILocation(line: 3152, column: 46, scope: !8772)
!8785 = !DILocation(line: 3152, column: 9, scope: !8772)
!8786 = distinct !{!8786, !8776, !8787}
!8787 = !DILocation(line: 3159, column: 9, scope: !8769)
!8788 = !DILocation(line: 3160, column: 33, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 3160, column: 13)
!8790 = !DILocation(line: 3160, column: 39, scope: !8789)
!8791 = !DILocation(line: 3160, column: 13, scope: !8789)
!8792 = !DILocation(line: 3160, column: 50, scope: !8789)
!8793 = !DILocation(line: 3160, column: 13, scope: !8751)
!8794 = !DILocation(line: 3161, column: 11, scope: !8789)
!8795 = !DILocation(line: 3162, column: 7, scope: !8751)
!8796 = !DILocation(line: 3147, column: 45, scope: !8745)
!8797 = !DILocation(line: 3147, column: 7, scope: !8745)
!8798 = distinct !{!8798, !8749, !8799}
!8799 = !DILocation(line: 3162, column: 7, scope: !8741)
!8800 = !DILocation(line: 3163, column: 7, scope: !8742)
!8801 = !DILocation(line: 3165, column: 21, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3165, column: 7)
!8803 = !DILocation(line: 3165, column: 7, scope: !8802)
!8804 = !DILocation(line: 3165, column: 33, scope: !8802)
!8805 = !DILocation(line: 3165, column: 7, scope: !8379)
!8806 = !DILocation(line: 3167, column: 13, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 3167, column: 7)
!8808 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 3166, column: 5)
!8809 = !DILocation(line: 3167, column: 12, scope: !8807)
!8810 = !DILocation(line: 3167, column: 17, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 3167, column: 7)
!8812 = !DILocation(line: 3167, column: 31, scope: !8811)
!8813 = !DILocation(line: 3167, column: 36, scope: !8811)
!8814 = !DILocation(line: 3167, column: 19, scope: !8811)
!8815 = !DILocation(line: 3167, column: 7, scope: !8807)
!8816 = !DILocation(line: 3169, column: 30, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 3168, column: 7)
!8818 = !DILocation(line: 3169, column: 36, scope: !8817)
!8819 = !DILocation(line: 3169, column: 41, scope: !8817)
!8820 = !DILocation(line: 3169, column: 43, scope: !8817)
!8821 = !DILocation(line: 3169, column: 48, scope: !8817)
!8822 = !DILocation(line: 3169, column: 50, scope: !8817)
!8823 = !DILocation(line: 3169, column: 49, scope: !8817)
!8824 = !DILocation(line: 3169, column: 52, scope: !8817)
!8825 = !DILocation(line: 3169, column: 57, scope: !8817)
!8826 = !DILocation(line: 3169, column: 65, scope: !8817)
!8827 = !DILocation(line: 3169, column: 11, scope: !8817)
!8828 = !DILocation(line: 3169, column: 10, scope: !8817)
!8829 = !DILocation(line: 3170, column: 13, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 3170, column: 13)
!8831 = !DILocation(line: 3170, column: 15, scope: !8830)
!8832 = !DILocation(line: 3170, column: 13, scope: !8817)
!8833 = !DILocation(line: 3171, column: 11, scope: !8830)
!8834 = !DILocation(line: 3172, column: 15, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 3172, column: 9)
!8836 = !DILocation(line: 3172, column: 14, scope: !8835)
!8837 = !DILocation(line: 3172, column: 19, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 3172, column: 9)
!8839 = !DILocation(line: 3172, column: 33, scope: !8838)
!8840 = !DILocation(line: 3172, column: 38, scope: !8838)
!8841 = !DILocation(line: 3172, column: 21, scope: !8838)
!8842 = !DILocation(line: 3172, column: 9, scope: !8835)
!8843 = !DILocation(line: 3174, column: 11, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 3173, column: 9)
!8845 = !DILocation(line: 3175, column: 11, scope: !8844)
!8846 = !DILocation(line: 3176, column: 11, scope: !8844)
!8847 = !DILocation(line: 3177, column: 12, scope: !8844)
!8848 = !DILocation(line: 3178, column: 12, scope: !8844)
!8849 = !DILocation(line: 3179, column: 9, scope: !8844)
!8850 = !DILocation(line: 3172, column: 46, scope: !8838)
!8851 = !DILocation(line: 3172, column: 9, scope: !8838)
!8852 = distinct !{!8852, !8842, !8853}
!8853 = !DILocation(line: 3179, column: 9, scope: !8835)
!8854 = !DILocation(line: 3180, column: 33, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 3180, column: 13)
!8856 = !DILocation(line: 3180, column: 39, scope: !8855)
!8857 = !DILocation(line: 3180, column: 13, scope: !8855)
!8858 = !DILocation(line: 3180, column: 50, scope: !8855)
!8859 = !DILocation(line: 3180, column: 13, scope: !8817)
!8860 = !DILocation(line: 3181, column: 11, scope: !8855)
!8861 = !DILocation(line: 3182, column: 7, scope: !8817)
!8862 = !DILocation(line: 3167, column: 45, scope: !8811)
!8863 = !DILocation(line: 3167, column: 7, scope: !8811)
!8864 = distinct !{!8864, !8815, !8865}
!8865 = !DILocation(line: 3182, column: 7, scope: !8807)
!8866 = !DILocation(line: 3183, column: 7, scope: !8808)
!8867 = !DILocation(line: 3185, column: 17, scope: !8379)
!8868 = !DILocation(line: 3185, column: 10, scope: !8379)
!8869 = !DILocation(line: 3185, column: 9, scope: !8379)
!8870 = !DILocation(line: 3186, column: 9, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 3186, column: 3)
!8872 = !DILocation(line: 3186, column: 8, scope: !8871)
!8873 = !DILocation(line: 3186, column: 13, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 3186, column: 3)
!8875 = !DILocation(line: 3186, column: 27, scope: !8874)
!8876 = !DILocation(line: 3186, column: 32, scope: !8874)
!8877 = !DILocation(line: 3186, column: 15, scope: !8874)
!8878 = !DILocation(line: 3186, column: 3, scope: !8871)
!8879 = !DILocation(line: 3188, column: 26, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 3187, column: 3)
!8881 = !DILocation(line: 3188, column: 32, scope: !8880)
!8882 = !DILocation(line: 3188, column: 37, scope: !8880)
!8883 = !DILocation(line: 3188, column: 39, scope: !8880)
!8884 = !DILocation(line: 3188, column: 44, scope: !8880)
!8885 = !DILocation(line: 3188, column: 46, scope: !8880)
!8886 = !DILocation(line: 3188, column: 45, scope: !8880)
!8887 = !DILocation(line: 3188, column: 48, scope: !8880)
!8888 = !DILocation(line: 3188, column: 53, scope: !8880)
!8889 = !DILocation(line: 3188, column: 61, scope: !8880)
!8890 = !DILocation(line: 3188, column: 7, scope: !8880)
!8891 = !DILocation(line: 3188, column: 6, scope: !8880)
!8892 = !DILocation(line: 3189, column: 9, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 3189, column: 9)
!8894 = !DILocation(line: 3189, column: 11, scope: !8893)
!8895 = !DILocation(line: 3189, column: 9, scope: !8880)
!8896 = !DILocation(line: 3190, column: 7, scope: !8893)
!8897 = !DILocation(line: 3191, column: 36, scope: !8880)
!8898 = !DILocation(line: 3191, column: 13, scope: !8880)
!8899 = !DILocation(line: 3191, column: 12, scope: !8880)
!8900 = !DILocation(line: 3192, column: 11, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 3192, column: 5)
!8902 = !DILocation(line: 3192, column: 10, scope: !8901)
!8903 = !DILocation(line: 3192, column: 15, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 3192, column: 5)
!8905 = !DILocation(line: 3192, column: 29, scope: !8904)
!8906 = !DILocation(line: 3192, column: 34, scope: !8904)
!8907 = !DILocation(line: 3192, column: 17, scope: !8904)
!8908 = !DILocation(line: 3192, column: 5, scope: !8901)
!8909 = !DILocalVariable(name: "i", scope: !8910, file: !3, line: 3195, type: !470)
!8910 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 3193, column: 5)
!8911 = !DILocation(line: 3195, column: 9, scope: !8910)
!8912 = !DILocation(line: 3197, column: 13, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 3197, column: 7)
!8914 = !DILocation(line: 3197, column: 12, scope: !8913)
!8915 = !DILocation(line: 3197, column: 17, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 3197, column: 7)
!8917 = !DILocation(line: 3197, column: 31, scope: !8916)
!8918 = !DILocation(line: 3197, column: 19, scope: !8916)
!8919 = !DILocation(line: 3197, column: 7, scope: !8913)
!8920 = !DILocation(line: 3199, column: 17, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 3198, column: 7)
!8922 = !DILocation(line: 3199, column: 29, scope: !8921)
!8923 = !DILocation(line: 3199, column: 9, scope: !8921)
!8924 = !DILocation(line: 3204, column: 13, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 3203, column: 11)
!8926 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 3200, column: 9)
!8927 = !DILocation(line: 3205, column: 13, scope: !8925)
!8928 = !DILocation(line: 3210, column: 13, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 3209, column: 11)
!8930 = !DILocation(line: 3211, column: 13, scope: !8929)
!8931 = !DILocation(line: 3216, column: 13, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 3215, column: 11)
!8933 = !DILocation(line: 3217, column: 13, scope: !8932)
!8934 = !DILocation(line: 3221, column: 13, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 3220, column: 11)
!8936 = !DILocation(line: 3222, column: 13, scope: !8935)
!8937 = !DILocation(line: 3226, column: 13, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 3225, column: 11)
!8939 = !DILocation(line: 3227, column: 13, scope: !8938)
!8940 = !DILocation(line: 3231, column: 13, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 3231, column: 13)
!8942 = distinct !DILexicalBlock(scope: !8943, file: !3, line: 3231, column: 13)
!8943 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 3230, column: 11)
!8944 = !DILocation(line: 3231, column: 13, scope: !8942)
!8945 = !DILocation(line: 3232, column: 13, scope: !8943)
!8946 = !DILocation(line: 3236, column: 13, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 3235, column: 11)
!8948 = !DILocation(line: 3237, column: 13, scope: !8947)
!8949 = !DILocation(line: 3238, column: 13, scope: !8947)
!8950 = !DILocation(line: 3239, column: 13, scope: !8947)
!8951 = !DILocation(line: 3242, column: 13, scope: !8926)
!8952 = !DILocation(line: 3244, column: 10, scope: !8921)
!8953 = !DILocation(line: 3245, column: 7, scope: !8921)
!8954 = !DILocation(line: 3197, column: 40, scope: !8916)
!8955 = !DILocation(line: 3197, column: 7, scope: !8916)
!8956 = distinct !{!8956, !8919, !8957}
!8957 = !DILocation(line: 3245, column: 7, scope: !8913)
!8958 = !DILocation(line: 3246, column: 8, scope: !8910)
!8959 = !DILocation(line: 3247, column: 5, scope: !8910)
!8960 = !DILocation(line: 3192, column: 42, scope: !8904)
!8961 = !DILocation(line: 3192, column: 5, scope: !8904)
!8962 = distinct !{!8962, !8908, !8963}
!8963 = !DILocation(line: 3247, column: 5, scope: !8901)
!8964 = !DILocation(line: 3248, column: 29, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 3248, column: 9)
!8966 = !DILocation(line: 3248, column: 35, scope: !8965)
!8967 = !DILocation(line: 3248, column: 9, scope: !8965)
!8968 = !DILocation(line: 3248, column: 46, scope: !8965)
!8969 = !DILocation(line: 3248, column: 9, scope: !8880)
!8970 = !DILocation(line: 3249, column: 7, scope: !8965)
!8971 = !DILocation(line: 3250, column: 3, scope: !8880)
!8972 = !DILocation(line: 3186, column: 41, scope: !8874)
!8973 = !DILocation(line: 3186, column: 3, scope: !8874)
!8974 = distinct !{!8974, !8878, !8975}
!8975 = !DILocation(line: 3250, column: 3, scope: !8871)
!8976 = !DILocation(line: 3251, column: 1, scope: !8379)
!8977 = distinct !DISubprogram(name: "ImportLongPixel", scope: !3, file: !3, line: 3253, type: !6402, scopeLine: 3256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!8978 = !DILocalVariable(name: "image", arg: 1, scope: !8977, file: !3, line: 3253, type: !475)
!8979 = !DILocation(line: 3253, column: 36, scope: !8977)
!8980 = !DILocalVariable(name: "roi", arg: 2, scope: !8977, file: !3, line: 3253, type: !1347)
!8981 = !DILocation(line: 3253, column: 63, scope: !8977)
!8982 = !DILocalVariable(name: "map", arg: 3, scope: !8977, file: !3, line: 3254, type: !1349)
!8983 = !DILocation(line: 3254, column: 24, scope: !8977)
!8984 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !8977, file: !3, line: 3254, type: !1350)
!8985 = !DILocation(line: 3254, column: 47, scope: !8977)
!8986 = !DILocalVariable(name: "pixels", arg: 5, scope: !8977, file: !3, line: 3254, type: !6154)
!8987 = !DILocation(line: 3254, column: 71, scope: !8977)
!8988 = !DILocalVariable(name: "exception", arg: 6, scope: !8977, file: !3, line: 3255, type: !1071)
!8989 = !DILocation(line: 3255, column: 18, scope: !8977)
!8990 = !DILocalVariable(name: "p", scope: !8977, file: !3, line: 3258, type: !8393)
!8991 = !DILocation(line: 3258, column: 15, scope: !8977)
!8992 = !DILocalVariable(name: "indexes", scope: !8977, file: !3, line: 3261, type: !6420)
!8993 = !DILocation(line: 3261, column: 15, scope: !8977)
!8994 = !DILocalVariable(name: "q", scope: !8977, file: !3, line: 3264, type: !6423)
!8995 = !DILocation(line: 3264, column: 15, scope: !8977)
!8996 = !DILocalVariable(name: "x", scope: !8977, file: !3, line: 3267, type: !470)
!8997 = !DILocation(line: 3267, column: 5, scope: !8977)
!8998 = !DILocalVariable(name: "length", scope: !8977, file: !3, line: 3270, type: !454)
!8999 = !DILocation(line: 3270, column: 5, scope: !8977)
!9000 = !DILocalVariable(name: "y", scope: !8977, file: !3, line: 3273, type: !470)
!9001 = !DILocation(line: 3273, column: 5, scope: !8977)
!9002 = !DILocation(line: 3275, column: 28, scope: !8977)
!9003 = !DILocation(line: 3275, column: 5, scope: !8977)
!9004 = !DILocation(line: 3275, column: 4, scope: !8977)
!9005 = !DILocation(line: 3276, column: 21, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 3276, column: 7)
!9007 = !DILocation(line: 3276, column: 7, scope: !9006)
!9008 = !DILocation(line: 3276, column: 32, scope: !9006)
!9009 = !DILocation(line: 3276, column: 7, scope: !8977)
!9010 = !DILocation(line: 3278, column: 13, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 3278, column: 7)
!9012 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 3277, column: 5)
!9013 = !DILocation(line: 3278, column: 12, scope: !9011)
!9014 = !DILocation(line: 3278, column: 17, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 3278, column: 7)
!9016 = !DILocation(line: 3278, column: 31, scope: !9015)
!9017 = !DILocation(line: 3278, column: 36, scope: !9015)
!9018 = !DILocation(line: 3278, column: 19, scope: !9015)
!9019 = !DILocation(line: 3278, column: 7, scope: !9011)
!9020 = !DILocation(line: 3280, column: 30, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 3279, column: 7)
!9022 = !DILocation(line: 3280, column: 36, scope: !9021)
!9023 = !DILocation(line: 3280, column: 41, scope: !9021)
!9024 = !DILocation(line: 3280, column: 43, scope: !9021)
!9025 = !DILocation(line: 3280, column: 48, scope: !9021)
!9026 = !DILocation(line: 3280, column: 50, scope: !9021)
!9027 = !DILocation(line: 3280, column: 49, scope: !9021)
!9028 = !DILocation(line: 3280, column: 52, scope: !9021)
!9029 = !DILocation(line: 3280, column: 57, scope: !9021)
!9030 = !DILocation(line: 3280, column: 65, scope: !9021)
!9031 = !DILocation(line: 3280, column: 11, scope: !9021)
!9032 = !DILocation(line: 3280, column: 10, scope: !9021)
!9033 = !DILocation(line: 3281, column: 13, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 3281, column: 13)
!9035 = !DILocation(line: 3281, column: 15, scope: !9034)
!9036 = !DILocation(line: 3281, column: 13, scope: !9021)
!9037 = !DILocation(line: 3282, column: 11, scope: !9034)
!9038 = !DILocation(line: 3283, column: 15, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 3283, column: 9)
!9040 = !DILocation(line: 3283, column: 14, scope: !9039)
!9041 = !DILocation(line: 3283, column: 19, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 3283, column: 9)
!9043 = !DILocation(line: 3283, column: 33, scope: !9042)
!9044 = !DILocation(line: 3283, column: 38, scope: !9042)
!9045 = !DILocation(line: 3283, column: 21, scope: !9042)
!9046 = !DILocation(line: 3283, column: 9, scope: !9039)
!9047 = !DILocation(line: 3285, column: 11, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 3284, column: 9)
!9049 = !DILocation(line: 3286, column: 11, scope: !9048)
!9050 = !DILocation(line: 3287, column: 11, scope: !9048)
!9051 = !DILocation(line: 3288, column: 12, scope: !9048)
!9052 = !DILocation(line: 3289, column: 9, scope: !9048)
!9053 = !DILocation(line: 3283, column: 46, scope: !9042)
!9054 = !DILocation(line: 3283, column: 9, scope: !9042)
!9055 = distinct !{!9055, !9046, !9056}
!9056 = !DILocation(line: 3289, column: 9, scope: !9039)
!9057 = !DILocation(line: 3290, column: 33, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 3290, column: 13)
!9059 = !DILocation(line: 3290, column: 39, scope: !9058)
!9060 = !DILocation(line: 3290, column: 13, scope: !9058)
!9061 = !DILocation(line: 3290, column: 50, scope: !9058)
!9062 = !DILocation(line: 3290, column: 13, scope: !9021)
!9063 = !DILocation(line: 3291, column: 11, scope: !9058)
!9064 = !DILocation(line: 3292, column: 7, scope: !9021)
!9065 = !DILocation(line: 3278, column: 45, scope: !9015)
!9066 = !DILocation(line: 3278, column: 7, scope: !9015)
!9067 = distinct !{!9067, !9019, !9068}
!9068 = !DILocation(line: 3292, column: 7, scope: !9011)
!9069 = !DILocation(line: 3293, column: 7, scope: !9012)
!9070 = !DILocation(line: 3295, column: 21, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 3295, column: 7)
!9072 = !DILocation(line: 3295, column: 7, scope: !9071)
!9073 = !DILocation(line: 3295, column: 33, scope: !9071)
!9074 = !DILocation(line: 3295, column: 7, scope: !8977)
!9075 = !DILocation(line: 3297, column: 13, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 3297, column: 7)
!9077 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 3296, column: 5)
!9078 = !DILocation(line: 3297, column: 12, scope: !9076)
!9079 = !DILocation(line: 3297, column: 17, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 3297, column: 7)
!9081 = !DILocation(line: 3297, column: 31, scope: !9080)
!9082 = !DILocation(line: 3297, column: 36, scope: !9080)
!9083 = !DILocation(line: 3297, column: 19, scope: !9080)
!9084 = !DILocation(line: 3297, column: 7, scope: !9076)
!9085 = !DILocation(line: 3299, column: 30, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 3298, column: 7)
!9087 = !DILocation(line: 3299, column: 36, scope: !9086)
!9088 = !DILocation(line: 3299, column: 41, scope: !9086)
!9089 = !DILocation(line: 3299, column: 43, scope: !9086)
!9090 = !DILocation(line: 3299, column: 48, scope: !9086)
!9091 = !DILocation(line: 3299, column: 50, scope: !9086)
!9092 = !DILocation(line: 3299, column: 49, scope: !9086)
!9093 = !DILocation(line: 3299, column: 52, scope: !9086)
!9094 = !DILocation(line: 3299, column: 57, scope: !9086)
!9095 = !DILocation(line: 3299, column: 65, scope: !9086)
!9096 = !DILocation(line: 3299, column: 11, scope: !9086)
!9097 = !DILocation(line: 3299, column: 10, scope: !9086)
!9098 = !DILocation(line: 3300, column: 13, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 3300, column: 13)
!9100 = !DILocation(line: 3300, column: 15, scope: !9099)
!9101 = !DILocation(line: 3300, column: 13, scope: !9086)
!9102 = !DILocation(line: 3301, column: 11, scope: !9099)
!9103 = !DILocation(line: 3302, column: 15, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 3302, column: 9)
!9105 = !DILocation(line: 3302, column: 14, scope: !9104)
!9106 = !DILocation(line: 3302, column: 19, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 3302, column: 9)
!9108 = !DILocation(line: 3302, column: 33, scope: !9107)
!9109 = !DILocation(line: 3302, column: 38, scope: !9107)
!9110 = !DILocation(line: 3302, column: 21, scope: !9107)
!9111 = !DILocation(line: 3302, column: 9, scope: !9104)
!9112 = !DILocation(line: 3304, column: 11, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9107, file: !3, line: 3303, column: 9)
!9114 = !DILocation(line: 3305, column: 11, scope: !9113)
!9115 = !DILocation(line: 3306, column: 11, scope: !9113)
!9116 = !DILocation(line: 3307, column: 11, scope: !9113)
!9117 = !DILocation(line: 3308, column: 12, scope: !9113)
!9118 = !DILocation(line: 3309, column: 9, scope: !9113)
!9119 = !DILocation(line: 3302, column: 46, scope: !9107)
!9120 = !DILocation(line: 3302, column: 9, scope: !9107)
!9121 = distinct !{!9121, !9111, !9122}
!9122 = !DILocation(line: 3309, column: 9, scope: !9104)
!9123 = !DILocation(line: 3310, column: 33, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 3310, column: 13)
!9125 = !DILocation(line: 3310, column: 39, scope: !9124)
!9126 = !DILocation(line: 3310, column: 13, scope: !9124)
!9127 = !DILocation(line: 3310, column: 50, scope: !9124)
!9128 = !DILocation(line: 3310, column: 13, scope: !9086)
!9129 = !DILocation(line: 3311, column: 11, scope: !9124)
!9130 = !DILocation(line: 3312, column: 7, scope: !9086)
!9131 = !DILocation(line: 3297, column: 45, scope: !9080)
!9132 = !DILocation(line: 3297, column: 7, scope: !9080)
!9133 = distinct !{!9133, !9084, !9134}
!9134 = !DILocation(line: 3312, column: 7, scope: !9076)
!9135 = !DILocation(line: 3313, column: 7, scope: !9077)
!9136 = !DILocation(line: 3315, column: 21, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 3315, column: 7)
!9138 = !DILocation(line: 3315, column: 7, scope: !9137)
!9139 = !DILocation(line: 3315, column: 33, scope: !9137)
!9140 = !DILocation(line: 3315, column: 7, scope: !8977)
!9141 = !DILocation(line: 3317, column: 13, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 3317, column: 7)
!9143 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3316, column: 5)
!9144 = !DILocation(line: 3317, column: 12, scope: !9142)
!9145 = !DILocation(line: 3317, column: 17, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 3317, column: 7)
!9147 = !DILocation(line: 3317, column: 31, scope: !9146)
!9148 = !DILocation(line: 3317, column: 36, scope: !9146)
!9149 = !DILocation(line: 3317, column: 19, scope: !9146)
!9150 = !DILocation(line: 3317, column: 7, scope: !9142)
!9151 = !DILocation(line: 3319, column: 30, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 3318, column: 7)
!9153 = !DILocation(line: 3319, column: 36, scope: !9152)
!9154 = !DILocation(line: 3319, column: 41, scope: !9152)
!9155 = !DILocation(line: 3319, column: 43, scope: !9152)
!9156 = !DILocation(line: 3319, column: 48, scope: !9152)
!9157 = !DILocation(line: 3319, column: 50, scope: !9152)
!9158 = !DILocation(line: 3319, column: 49, scope: !9152)
!9159 = !DILocation(line: 3319, column: 52, scope: !9152)
!9160 = !DILocation(line: 3319, column: 57, scope: !9152)
!9161 = !DILocation(line: 3319, column: 65, scope: !9152)
!9162 = !DILocation(line: 3319, column: 11, scope: !9152)
!9163 = !DILocation(line: 3319, column: 10, scope: !9152)
!9164 = !DILocation(line: 3320, column: 13, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 3320, column: 13)
!9166 = !DILocation(line: 3320, column: 15, scope: !9165)
!9167 = !DILocation(line: 3320, column: 13, scope: !9152)
!9168 = !DILocation(line: 3321, column: 11, scope: !9165)
!9169 = !DILocation(line: 3322, column: 15, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 3322, column: 9)
!9171 = !DILocation(line: 3322, column: 14, scope: !9170)
!9172 = !DILocation(line: 3322, column: 19, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 3322, column: 9)
!9174 = !DILocation(line: 3322, column: 33, scope: !9173)
!9175 = !DILocation(line: 3322, column: 38, scope: !9173)
!9176 = !DILocation(line: 3322, column: 21, scope: !9173)
!9177 = !DILocation(line: 3322, column: 9, scope: !9170)
!9178 = !DILocation(line: 3324, column: 11, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 3323, column: 9)
!9180 = !DILocation(line: 3325, column: 11, scope: !9179)
!9181 = !DILocation(line: 3326, column: 11, scope: !9179)
!9182 = !DILocation(line: 3327, column: 12, scope: !9179)
!9183 = !DILocation(line: 3328, column: 12, scope: !9179)
!9184 = !DILocation(line: 3329, column: 9, scope: !9179)
!9185 = !DILocation(line: 3322, column: 46, scope: !9173)
!9186 = !DILocation(line: 3322, column: 9, scope: !9173)
!9187 = distinct !{!9187, !9177, !9188}
!9188 = !DILocation(line: 3329, column: 9, scope: !9170)
!9189 = !DILocation(line: 3330, column: 33, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 3330, column: 13)
!9191 = !DILocation(line: 3330, column: 39, scope: !9190)
!9192 = !DILocation(line: 3330, column: 13, scope: !9190)
!9193 = !DILocation(line: 3330, column: 50, scope: !9190)
!9194 = !DILocation(line: 3330, column: 13, scope: !9152)
!9195 = !DILocation(line: 3331, column: 11, scope: !9190)
!9196 = !DILocation(line: 3332, column: 7, scope: !9152)
!9197 = !DILocation(line: 3317, column: 45, scope: !9146)
!9198 = !DILocation(line: 3317, column: 7, scope: !9146)
!9199 = distinct !{!9199, !9150, !9200}
!9200 = !DILocation(line: 3332, column: 7, scope: !9142)
!9201 = !DILocation(line: 3333, column: 7, scope: !9143)
!9202 = !DILocation(line: 3335, column: 21, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 3335, column: 7)
!9204 = !DILocation(line: 3335, column: 7, scope: !9203)
!9205 = !DILocation(line: 3335, column: 30, scope: !9203)
!9206 = !DILocation(line: 3335, column: 7, scope: !8977)
!9207 = !DILocation(line: 3337, column: 13, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !3, line: 3337, column: 7)
!9209 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 3336, column: 5)
!9210 = !DILocation(line: 3337, column: 12, scope: !9208)
!9211 = !DILocation(line: 3337, column: 17, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 3337, column: 7)
!9213 = !DILocation(line: 3337, column: 31, scope: !9212)
!9214 = !DILocation(line: 3337, column: 36, scope: !9212)
!9215 = !DILocation(line: 3337, column: 19, scope: !9212)
!9216 = !DILocation(line: 3337, column: 7, scope: !9208)
!9217 = !DILocation(line: 3339, column: 30, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 3338, column: 7)
!9219 = !DILocation(line: 3339, column: 36, scope: !9218)
!9220 = !DILocation(line: 3339, column: 41, scope: !9218)
!9221 = !DILocation(line: 3339, column: 43, scope: !9218)
!9222 = !DILocation(line: 3339, column: 48, scope: !9218)
!9223 = !DILocation(line: 3339, column: 50, scope: !9218)
!9224 = !DILocation(line: 3339, column: 49, scope: !9218)
!9225 = !DILocation(line: 3339, column: 52, scope: !9218)
!9226 = !DILocation(line: 3339, column: 57, scope: !9218)
!9227 = !DILocation(line: 3339, column: 65, scope: !9218)
!9228 = !DILocation(line: 3339, column: 11, scope: !9218)
!9229 = !DILocation(line: 3339, column: 10, scope: !9218)
!9230 = !DILocation(line: 3340, column: 13, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3340, column: 13)
!9232 = !DILocation(line: 3340, column: 15, scope: !9231)
!9233 = !DILocation(line: 3340, column: 13, scope: !9218)
!9234 = !DILocation(line: 3341, column: 11, scope: !9231)
!9235 = !DILocation(line: 3342, column: 15, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3342, column: 9)
!9237 = !DILocation(line: 3342, column: 14, scope: !9236)
!9238 = !DILocation(line: 3342, column: 19, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9236, file: !3, line: 3342, column: 9)
!9240 = !DILocation(line: 3342, column: 33, scope: !9239)
!9241 = !DILocation(line: 3342, column: 38, scope: !9239)
!9242 = !DILocation(line: 3342, column: 21, scope: !9239)
!9243 = !DILocation(line: 3342, column: 9, scope: !9236)
!9244 = !DILocation(line: 3344, column: 11, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 3343, column: 9)
!9246 = !DILocation(line: 3345, column: 11, scope: !9245)
!9247 = !DILocation(line: 3346, column: 11, scope: !9245)
!9248 = !DILocation(line: 3347, column: 12, scope: !9245)
!9249 = !DILocation(line: 3348, column: 9, scope: !9245)
!9250 = !DILocation(line: 3342, column: 46, scope: !9239)
!9251 = !DILocation(line: 3342, column: 9, scope: !9239)
!9252 = distinct !{!9252, !9243, !9253}
!9253 = !DILocation(line: 3348, column: 9, scope: !9236)
!9254 = !DILocation(line: 3349, column: 33, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 3349, column: 13)
!9256 = !DILocation(line: 3349, column: 39, scope: !9255)
!9257 = !DILocation(line: 3349, column: 13, scope: !9255)
!9258 = !DILocation(line: 3349, column: 50, scope: !9255)
!9259 = !DILocation(line: 3349, column: 13, scope: !9218)
!9260 = !DILocation(line: 3350, column: 11, scope: !9255)
!9261 = !DILocation(line: 3351, column: 7, scope: !9218)
!9262 = !DILocation(line: 3337, column: 45, scope: !9212)
!9263 = !DILocation(line: 3337, column: 7, scope: !9212)
!9264 = distinct !{!9264, !9216, !9265}
!9265 = !DILocation(line: 3351, column: 7, scope: !9208)
!9266 = !DILocation(line: 3352, column: 7, scope: !9209)
!9267 = !DILocation(line: 3354, column: 21, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 3354, column: 7)
!9269 = !DILocation(line: 3354, column: 7, scope: !9268)
!9270 = !DILocation(line: 3354, column: 32, scope: !9268)
!9271 = !DILocation(line: 3354, column: 7, scope: !8977)
!9272 = !DILocation(line: 3356, column: 13, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !3, line: 3356, column: 7)
!9274 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3355, column: 5)
!9275 = !DILocation(line: 3356, column: 12, scope: !9273)
!9276 = !DILocation(line: 3356, column: 17, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 3356, column: 7)
!9278 = !DILocation(line: 3356, column: 31, scope: !9277)
!9279 = !DILocation(line: 3356, column: 36, scope: !9277)
!9280 = !DILocation(line: 3356, column: 19, scope: !9277)
!9281 = !DILocation(line: 3356, column: 7, scope: !9273)
!9282 = !DILocation(line: 3358, column: 30, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 3357, column: 7)
!9284 = !DILocation(line: 3358, column: 36, scope: !9283)
!9285 = !DILocation(line: 3358, column: 41, scope: !9283)
!9286 = !DILocation(line: 3358, column: 43, scope: !9283)
!9287 = !DILocation(line: 3358, column: 48, scope: !9283)
!9288 = !DILocation(line: 3358, column: 50, scope: !9283)
!9289 = !DILocation(line: 3358, column: 49, scope: !9283)
!9290 = !DILocation(line: 3358, column: 52, scope: !9283)
!9291 = !DILocation(line: 3358, column: 57, scope: !9283)
!9292 = !DILocation(line: 3358, column: 65, scope: !9283)
!9293 = !DILocation(line: 3358, column: 11, scope: !9283)
!9294 = !DILocation(line: 3358, column: 10, scope: !9283)
!9295 = !DILocation(line: 3359, column: 13, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 3359, column: 13)
!9297 = !DILocation(line: 3359, column: 15, scope: !9296)
!9298 = !DILocation(line: 3359, column: 13, scope: !9283)
!9299 = !DILocation(line: 3360, column: 11, scope: !9296)
!9300 = !DILocation(line: 3361, column: 15, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 3361, column: 9)
!9302 = !DILocation(line: 3361, column: 14, scope: !9301)
!9303 = !DILocation(line: 3361, column: 19, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 3361, column: 9)
!9305 = !DILocation(line: 3361, column: 33, scope: !9304)
!9306 = !DILocation(line: 3361, column: 38, scope: !9304)
!9307 = !DILocation(line: 3361, column: 21, scope: !9304)
!9308 = !DILocation(line: 3361, column: 9, scope: !9301)
!9309 = !DILocation(line: 3363, column: 11, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9304, file: !3, line: 3362, column: 9)
!9311 = !DILocation(line: 3364, column: 11, scope: !9310)
!9312 = !DILocation(line: 3365, column: 11, scope: !9310)
!9313 = !DILocation(line: 3366, column: 12, scope: !9310)
!9314 = !DILocation(line: 3367, column: 9, scope: !9310)
!9315 = !DILocation(line: 3361, column: 46, scope: !9304)
!9316 = !DILocation(line: 3361, column: 9, scope: !9304)
!9317 = distinct !{!9317, !9308, !9318}
!9318 = !DILocation(line: 3367, column: 9, scope: !9301)
!9319 = !DILocation(line: 3368, column: 33, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 3368, column: 13)
!9321 = !DILocation(line: 3368, column: 39, scope: !9320)
!9322 = !DILocation(line: 3368, column: 13, scope: !9320)
!9323 = !DILocation(line: 3368, column: 50, scope: !9320)
!9324 = !DILocation(line: 3368, column: 13, scope: !9283)
!9325 = !DILocation(line: 3369, column: 11, scope: !9320)
!9326 = !DILocation(line: 3370, column: 7, scope: !9283)
!9327 = !DILocation(line: 3356, column: 45, scope: !9277)
!9328 = !DILocation(line: 3356, column: 7, scope: !9277)
!9329 = distinct !{!9329, !9281, !9330}
!9330 = !DILocation(line: 3370, column: 7, scope: !9273)
!9331 = !DILocation(line: 3371, column: 7, scope: !9274)
!9332 = !DILocation(line: 3373, column: 21, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 3373, column: 7)
!9334 = !DILocation(line: 3373, column: 7, scope: !9333)
!9335 = !DILocation(line: 3373, column: 33, scope: !9333)
!9336 = !DILocation(line: 3373, column: 7, scope: !8977)
!9337 = !DILocation(line: 3375, column: 13, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9339, file: !3, line: 3375, column: 7)
!9339 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 3374, column: 5)
!9340 = !DILocation(line: 3375, column: 12, scope: !9338)
!9341 = !DILocation(line: 3375, column: 17, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 3375, column: 7)
!9343 = !DILocation(line: 3375, column: 31, scope: !9342)
!9344 = !DILocation(line: 3375, column: 36, scope: !9342)
!9345 = !DILocation(line: 3375, column: 19, scope: !9342)
!9346 = !DILocation(line: 3375, column: 7, scope: !9338)
!9347 = !DILocation(line: 3377, column: 30, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 3376, column: 7)
!9349 = !DILocation(line: 3377, column: 36, scope: !9348)
!9350 = !DILocation(line: 3377, column: 41, scope: !9348)
!9351 = !DILocation(line: 3377, column: 43, scope: !9348)
!9352 = !DILocation(line: 3377, column: 48, scope: !9348)
!9353 = !DILocation(line: 3377, column: 50, scope: !9348)
!9354 = !DILocation(line: 3377, column: 49, scope: !9348)
!9355 = !DILocation(line: 3377, column: 52, scope: !9348)
!9356 = !DILocation(line: 3377, column: 57, scope: !9348)
!9357 = !DILocation(line: 3377, column: 65, scope: !9348)
!9358 = !DILocation(line: 3377, column: 11, scope: !9348)
!9359 = !DILocation(line: 3377, column: 10, scope: !9348)
!9360 = !DILocation(line: 3378, column: 13, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9348, file: !3, line: 3378, column: 13)
!9362 = !DILocation(line: 3378, column: 15, scope: !9361)
!9363 = !DILocation(line: 3378, column: 13, scope: !9348)
!9364 = !DILocation(line: 3379, column: 11, scope: !9361)
!9365 = !DILocation(line: 3380, column: 15, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9348, file: !3, line: 3380, column: 9)
!9367 = !DILocation(line: 3380, column: 14, scope: !9366)
!9368 = !DILocation(line: 3380, column: 19, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 3380, column: 9)
!9370 = !DILocation(line: 3380, column: 33, scope: !9369)
!9371 = !DILocation(line: 3380, column: 38, scope: !9369)
!9372 = !DILocation(line: 3380, column: 21, scope: !9369)
!9373 = !DILocation(line: 3380, column: 9, scope: !9366)
!9374 = !DILocation(line: 3382, column: 11, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 3381, column: 9)
!9376 = !DILocation(line: 3383, column: 11, scope: !9375)
!9377 = !DILocation(line: 3384, column: 11, scope: !9375)
!9378 = !DILocation(line: 3385, column: 11, scope: !9375)
!9379 = !DILocation(line: 3386, column: 12, scope: !9375)
!9380 = !DILocation(line: 3387, column: 9, scope: !9375)
!9381 = !DILocation(line: 3380, column: 46, scope: !9369)
!9382 = !DILocation(line: 3380, column: 9, scope: !9369)
!9383 = distinct !{!9383, !9373, !9384}
!9384 = !DILocation(line: 3387, column: 9, scope: !9366)
!9385 = !DILocation(line: 3388, column: 33, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9348, file: !3, line: 3388, column: 13)
!9387 = !DILocation(line: 3388, column: 39, scope: !9386)
!9388 = !DILocation(line: 3388, column: 13, scope: !9386)
!9389 = !DILocation(line: 3388, column: 50, scope: !9386)
!9390 = !DILocation(line: 3388, column: 13, scope: !9348)
!9391 = !DILocation(line: 3389, column: 11, scope: !9386)
!9392 = !DILocation(line: 3390, column: 7, scope: !9348)
!9393 = !DILocation(line: 3375, column: 45, scope: !9342)
!9394 = !DILocation(line: 3375, column: 7, scope: !9342)
!9395 = distinct !{!9395, !9346, !9396}
!9396 = !DILocation(line: 3390, column: 7, scope: !9338)
!9397 = !DILocation(line: 3391, column: 7, scope: !9339)
!9398 = !DILocation(line: 3393, column: 21, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 3393, column: 7)
!9400 = !DILocation(line: 3393, column: 7, scope: !9399)
!9401 = !DILocation(line: 3393, column: 33, scope: !9399)
!9402 = !DILocation(line: 3393, column: 7, scope: !8977)
!9403 = !DILocation(line: 3395, column: 13, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 3395, column: 7)
!9405 = distinct !DILexicalBlock(scope: !9399, file: !3, line: 3394, column: 5)
!9406 = !DILocation(line: 3395, column: 12, scope: !9404)
!9407 = !DILocation(line: 3395, column: 17, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9404, file: !3, line: 3395, column: 7)
!9409 = !DILocation(line: 3395, column: 31, scope: !9408)
!9410 = !DILocation(line: 3395, column: 36, scope: !9408)
!9411 = !DILocation(line: 3395, column: 19, scope: !9408)
!9412 = !DILocation(line: 3395, column: 7, scope: !9404)
!9413 = !DILocation(line: 3397, column: 30, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 3396, column: 7)
!9415 = !DILocation(line: 3397, column: 36, scope: !9414)
!9416 = !DILocation(line: 3397, column: 41, scope: !9414)
!9417 = !DILocation(line: 3397, column: 43, scope: !9414)
!9418 = !DILocation(line: 3397, column: 48, scope: !9414)
!9419 = !DILocation(line: 3397, column: 50, scope: !9414)
!9420 = !DILocation(line: 3397, column: 49, scope: !9414)
!9421 = !DILocation(line: 3397, column: 52, scope: !9414)
!9422 = !DILocation(line: 3397, column: 57, scope: !9414)
!9423 = !DILocation(line: 3397, column: 65, scope: !9414)
!9424 = !DILocation(line: 3397, column: 11, scope: !9414)
!9425 = !DILocation(line: 3397, column: 10, scope: !9414)
!9426 = !DILocation(line: 3398, column: 13, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 3398, column: 13)
!9428 = !DILocation(line: 3398, column: 15, scope: !9427)
!9429 = !DILocation(line: 3398, column: 13, scope: !9414)
!9430 = !DILocation(line: 3399, column: 11, scope: !9427)
!9431 = !DILocation(line: 3400, column: 15, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 3400, column: 9)
!9433 = !DILocation(line: 3400, column: 14, scope: !9432)
!9434 = !DILocation(line: 3400, column: 19, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9432, file: !3, line: 3400, column: 9)
!9436 = !DILocation(line: 3400, column: 33, scope: !9435)
!9437 = !DILocation(line: 3400, column: 38, scope: !9435)
!9438 = !DILocation(line: 3400, column: 21, scope: !9435)
!9439 = !DILocation(line: 3400, column: 9, scope: !9432)
!9440 = !DILocation(line: 3402, column: 11, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 3401, column: 9)
!9442 = !DILocation(line: 3403, column: 11, scope: !9441)
!9443 = !DILocation(line: 3404, column: 11, scope: !9441)
!9444 = !DILocation(line: 3405, column: 12, scope: !9441)
!9445 = !DILocation(line: 3406, column: 12, scope: !9441)
!9446 = !DILocation(line: 3407, column: 9, scope: !9441)
!9447 = !DILocation(line: 3400, column: 46, scope: !9435)
!9448 = !DILocation(line: 3400, column: 9, scope: !9435)
!9449 = distinct !{!9449, !9439, !9450}
!9450 = !DILocation(line: 3407, column: 9, scope: !9432)
!9451 = !DILocation(line: 3408, column: 33, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 3408, column: 13)
!9453 = !DILocation(line: 3408, column: 39, scope: !9452)
!9454 = !DILocation(line: 3408, column: 13, scope: !9452)
!9455 = !DILocation(line: 3408, column: 50, scope: !9452)
!9456 = !DILocation(line: 3408, column: 13, scope: !9414)
!9457 = !DILocation(line: 3409, column: 11, scope: !9452)
!9458 = !DILocation(line: 3410, column: 7, scope: !9414)
!9459 = !DILocation(line: 3395, column: 45, scope: !9408)
!9460 = !DILocation(line: 3395, column: 7, scope: !9408)
!9461 = distinct !{!9461, !9412, !9462}
!9462 = !DILocation(line: 3410, column: 7, scope: !9404)
!9463 = !DILocation(line: 3411, column: 7, scope: !9405)
!9464 = !DILocation(line: 3413, column: 17, scope: !8977)
!9465 = !DILocation(line: 3413, column: 10, scope: !8977)
!9466 = !DILocation(line: 3413, column: 9, scope: !8977)
!9467 = !DILocation(line: 3414, column: 9, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 3414, column: 3)
!9469 = !DILocation(line: 3414, column: 8, scope: !9468)
!9470 = !DILocation(line: 3414, column: 13, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 3414, column: 3)
!9472 = !DILocation(line: 3414, column: 27, scope: !9471)
!9473 = !DILocation(line: 3414, column: 32, scope: !9471)
!9474 = !DILocation(line: 3414, column: 15, scope: !9471)
!9475 = !DILocation(line: 3414, column: 3, scope: !9468)
!9476 = !DILocation(line: 3416, column: 26, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9471, file: !3, line: 3415, column: 3)
!9478 = !DILocation(line: 3416, column: 32, scope: !9477)
!9479 = !DILocation(line: 3416, column: 37, scope: !9477)
!9480 = !DILocation(line: 3416, column: 39, scope: !9477)
!9481 = !DILocation(line: 3416, column: 44, scope: !9477)
!9482 = !DILocation(line: 3416, column: 46, scope: !9477)
!9483 = !DILocation(line: 3416, column: 45, scope: !9477)
!9484 = !DILocation(line: 3416, column: 48, scope: !9477)
!9485 = !DILocation(line: 3416, column: 53, scope: !9477)
!9486 = !DILocation(line: 3416, column: 61, scope: !9477)
!9487 = !DILocation(line: 3416, column: 7, scope: !9477)
!9488 = !DILocation(line: 3416, column: 6, scope: !9477)
!9489 = !DILocation(line: 3417, column: 9, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 3417, column: 9)
!9491 = !DILocation(line: 3417, column: 11, scope: !9490)
!9492 = !DILocation(line: 3417, column: 9, scope: !9477)
!9493 = !DILocation(line: 3418, column: 7, scope: !9490)
!9494 = !DILocation(line: 3419, column: 36, scope: !9477)
!9495 = !DILocation(line: 3419, column: 13, scope: !9477)
!9496 = !DILocation(line: 3419, column: 12, scope: !9477)
!9497 = !DILocation(line: 3420, column: 11, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 3420, column: 5)
!9499 = !DILocation(line: 3420, column: 10, scope: !9498)
!9500 = !DILocation(line: 3420, column: 15, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 3420, column: 5)
!9502 = !DILocation(line: 3420, column: 29, scope: !9501)
!9503 = !DILocation(line: 3420, column: 34, scope: !9501)
!9504 = !DILocation(line: 3420, column: 17, scope: !9501)
!9505 = !DILocation(line: 3420, column: 5, scope: !9498)
!9506 = !DILocalVariable(name: "i", scope: !9507, file: !3, line: 3423, type: !470)
!9507 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 3421, column: 5)
!9508 = !DILocation(line: 3423, column: 9, scope: !9507)
!9509 = !DILocation(line: 3425, column: 13, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 3425, column: 7)
!9511 = !DILocation(line: 3425, column: 12, scope: !9510)
!9512 = !DILocation(line: 3425, column: 17, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 3425, column: 7)
!9514 = !DILocation(line: 3425, column: 31, scope: !9513)
!9515 = !DILocation(line: 3425, column: 19, scope: !9513)
!9516 = !DILocation(line: 3425, column: 7, scope: !9510)
!9517 = !DILocation(line: 3427, column: 17, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9513, file: !3, line: 3426, column: 7)
!9519 = !DILocation(line: 3427, column: 29, scope: !9518)
!9520 = !DILocation(line: 3427, column: 9, scope: !9518)
!9521 = !DILocation(line: 3432, column: 13, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 3431, column: 11)
!9523 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 3428, column: 9)
!9524 = !DILocation(line: 3433, column: 13, scope: !9522)
!9525 = !DILocation(line: 3438, column: 13, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 3437, column: 11)
!9527 = !DILocation(line: 3439, column: 13, scope: !9526)
!9528 = !DILocation(line: 3444, column: 13, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 3443, column: 11)
!9530 = !DILocation(line: 3445, column: 13, scope: !9529)
!9531 = !DILocation(line: 3449, column: 13, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 3448, column: 11)
!9533 = !DILocation(line: 3450, column: 13, scope: !9532)
!9534 = !DILocation(line: 3454, column: 11, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 3453, column: 11)
!9536 = !DILocation(line: 3455, column: 11, scope: !9535)
!9537 = !DILocation(line: 3459, column: 13, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 3459, column: 13)
!9539 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 3459, column: 13)
!9540 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 3458, column: 11)
!9541 = !DILocation(line: 3459, column: 13, scope: !9539)
!9542 = !DILocation(line: 3460, column: 13, scope: !9540)
!9543 = !DILocation(line: 3464, column: 13, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 3463, column: 11)
!9545 = !DILocation(line: 3465, column: 13, scope: !9544)
!9546 = !DILocation(line: 3466, column: 13, scope: !9544)
!9547 = !DILocation(line: 3467, column: 13, scope: !9544)
!9548 = !DILocation(line: 3470, column: 13, scope: !9523)
!9549 = !DILocation(line: 3472, column: 10, scope: !9518)
!9550 = !DILocation(line: 3473, column: 7, scope: !9518)
!9551 = !DILocation(line: 3425, column: 40, scope: !9513)
!9552 = !DILocation(line: 3425, column: 7, scope: !9513)
!9553 = distinct !{!9553, !9516, !9554}
!9554 = !DILocation(line: 3473, column: 7, scope: !9510)
!9555 = !DILocation(line: 3474, column: 8, scope: !9507)
!9556 = !DILocation(line: 3475, column: 5, scope: !9507)
!9557 = !DILocation(line: 3420, column: 42, scope: !9501)
!9558 = !DILocation(line: 3420, column: 5, scope: !9501)
!9559 = distinct !{!9559, !9505, !9560}
!9560 = !DILocation(line: 3475, column: 5, scope: !9498)
!9561 = !DILocation(line: 3476, column: 29, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 3476, column: 9)
!9563 = !DILocation(line: 3476, column: 35, scope: !9562)
!9564 = !DILocation(line: 3476, column: 9, scope: !9562)
!9565 = !DILocation(line: 3476, column: 46, scope: !9562)
!9566 = !DILocation(line: 3476, column: 9, scope: !9477)
!9567 = !DILocation(line: 3477, column: 7, scope: !9562)
!9568 = !DILocation(line: 3478, column: 3, scope: !9477)
!9569 = !DILocation(line: 3414, column: 41, scope: !9471)
!9570 = !DILocation(line: 3414, column: 3, scope: !9471)
!9571 = distinct !{!9571, !9475, !9572}
!9572 = !DILocation(line: 3478, column: 3, scope: !9468)
!9573 = !DILocation(line: 3479, column: 1, scope: !8977)
!9574 = distinct !DISubprogram(name: "ImportQuantumPixel", scope: !3, file: !3, line: 3481, type: !6402, scopeLine: 3484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!9575 = !DILocalVariable(name: "image", arg: 1, scope: !9574, file: !3, line: 3481, type: !475)
!9576 = !DILocation(line: 3481, column: 39, scope: !9574)
!9577 = !DILocalVariable(name: "roi", arg: 2, scope: !9574, file: !3, line: 3481, type: !1347)
!9578 = !DILocation(line: 3481, column: 66, scope: !9574)
!9579 = !DILocalVariable(name: "map", arg: 3, scope: !9574, file: !3, line: 3482, type: !1349)
!9580 = !DILocation(line: 3482, column: 24, scope: !9574)
!9581 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !9574, file: !3, line: 3482, type: !1350)
!9582 = !DILocation(line: 3482, column: 47, scope: !9574)
!9583 = !DILocalVariable(name: "pixels", arg: 5, scope: !9574, file: !3, line: 3482, type: !6154)
!9584 = !DILocation(line: 3482, column: 71, scope: !9574)
!9585 = !DILocalVariable(name: "exception", arg: 6, scope: !9574, file: !3, line: 3483, type: !1071)
!9586 = !DILocation(line: 3483, column: 18, scope: !9574)
!9587 = !DILocalVariable(name: "p", scope: !9574, file: !3, line: 3486, type: !9588)
!9588 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !701)
!9589 = !DILocation(line: 3486, column: 15, scope: !9574)
!9590 = !DILocalVariable(name: "indexes", scope: !9574, file: !3, line: 3489, type: !6420)
!9591 = !DILocation(line: 3489, column: 15, scope: !9574)
!9592 = !DILocalVariable(name: "q", scope: !9574, file: !3, line: 3492, type: !6423)
!9593 = !DILocation(line: 3492, column: 15, scope: !9574)
!9594 = !DILocalVariable(name: "x", scope: !9574, file: !3, line: 3495, type: !470)
!9595 = !DILocation(line: 3495, column: 5, scope: !9574)
!9596 = !DILocalVariable(name: "length", scope: !9574, file: !3, line: 3498, type: !454)
!9597 = !DILocation(line: 3498, column: 5, scope: !9574)
!9598 = !DILocalVariable(name: "y", scope: !9574, file: !3, line: 3501, type: !470)
!9599 = !DILocation(line: 3501, column: 5, scope: !9574)
!9600 = !DILocation(line: 3503, column: 23, scope: !9574)
!9601 = !DILocation(line: 3503, column: 5, scope: !9574)
!9602 = !DILocation(line: 3503, column: 4, scope: !9574)
!9603 = !DILocation(line: 3504, column: 21, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 3504, column: 7)
!9605 = !DILocation(line: 3504, column: 7, scope: !9604)
!9606 = !DILocation(line: 3504, column: 32, scope: !9604)
!9607 = !DILocation(line: 3504, column: 7, scope: !9574)
!9608 = !DILocation(line: 3506, column: 13, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 3506, column: 7)
!9610 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 3505, column: 5)
!9611 = !DILocation(line: 3506, column: 12, scope: !9609)
!9612 = !DILocation(line: 3506, column: 17, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 3506, column: 7)
!9614 = !DILocation(line: 3506, column: 31, scope: !9613)
!9615 = !DILocation(line: 3506, column: 36, scope: !9613)
!9616 = !DILocation(line: 3506, column: 19, scope: !9613)
!9617 = !DILocation(line: 3506, column: 7, scope: !9609)
!9618 = !DILocation(line: 3508, column: 30, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 3507, column: 7)
!9620 = !DILocation(line: 3508, column: 36, scope: !9619)
!9621 = !DILocation(line: 3508, column: 41, scope: !9619)
!9622 = !DILocation(line: 3508, column: 43, scope: !9619)
!9623 = !DILocation(line: 3508, column: 48, scope: !9619)
!9624 = !DILocation(line: 3508, column: 50, scope: !9619)
!9625 = !DILocation(line: 3508, column: 49, scope: !9619)
!9626 = !DILocation(line: 3508, column: 52, scope: !9619)
!9627 = !DILocation(line: 3508, column: 57, scope: !9619)
!9628 = !DILocation(line: 3508, column: 65, scope: !9619)
!9629 = !DILocation(line: 3508, column: 11, scope: !9619)
!9630 = !DILocation(line: 3508, column: 10, scope: !9619)
!9631 = !DILocation(line: 3509, column: 13, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 3509, column: 13)
!9633 = !DILocation(line: 3509, column: 15, scope: !9632)
!9634 = !DILocation(line: 3509, column: 13, scope: !9619)
!9635 = !DILocation(line: 3510, column: 11, scope: !9632)
!9636 = !DILocation(line: 3511, column: 15, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 3511, column: 9)
!9638 = !DILocation(line: 3511, column: 14, scope: !9637)
!9639 = !DILocation(line: 3511, column: 19, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 3511, column: 9)
!9641 = !DILocation(line: 3511, column: 33, scope: !9640)
!9642 = !DILocation(line: 3511, column: 38, scope: !9640)
!9643 = !DILocation(line: 3511, column: 21, scope: !9640)
!9644 = !DILocation(line: 3511, column: 9, scope: !9637)
!9645 = !DILocation(line: 3513, column: 11, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 3512, column: 9)
!9647 = !DILocation(line: 3514, column: 11, scope: !9646)
!9648 = !DILocation(line: 3515, column: 11, scope: !9646)
!9649 = !DILocation(line: 3516, column: 12, scope: !9646)
!9650 = !DILocation(line: 3517, column: 9, scope: !9646)
!9651 = !DILocation(line: 3511, column: 46, scope: !9640)
!9652 = !DILocation(line: 3511, column: 9, scope: !9640)
!9653 = distinct !{!9653, !9644, !9654}
!9654 = !DILocation(line: 3517, column: 9, scope: !9637)
!9655 = !DILocation(line: 3518, column: 33, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 3518, column: 13)
!9657 = !DILocation(line: 3518, column: 39, scope: !9656)
!9658 = !DILocation(line: 3518, column: 13, scope: !9656)
!9659 = !DILocation(line: 3518, column: 50, scope: !9656)
!9660 = !DILocation(line: 3518, column: 13, scope: !9619)
!9661 = !DILocation(line: 3519, column: 11, scope: !9656)
!9662 = !DILocation(line: 3520, column: 7, scope: !9619)
!9663 = !DILocation(line: 3506, column: 45, scope: !9613)
!9664 = !DILocation(line: 3506, column: 7, scope: !9613)
!9665 = distinct !{!9665, !9617, !9666}
!9666 = !DILocation(line: 3520, column: 7, scope: !9609)
!9667 = !DILocation(line: 3521, column: 7, scope: !9610)
!9668 = !DILocation(line: 3523, column: 21, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 3523, column: 7)
!9670 = !DILocation(line: 3523, column: 7, scope: !9669)
!9671 = !DILocation(line: 3523, column: 33, scope: !9669)
!9672 = !DILocation(line: 3523, column: 7, scope: !9574)
!9673 = !DILocation(line: 3525, column: 13, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 3525, column: 7)
!9675 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 3524, column: 5)
!9676 = !DILocation(line: 3525, column: 12, scope: !9674)
!9677 = !DILocation(line: 3525, column: 17, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 3525, column: 7)
!9679 = !DILocation(line: 3525, column: 31, scope: !9678)
!9680 = !DILocation(line: 3525, column: 36, scope: !9678)
!9681 = !DILocation(line: 3525, column: 19, scope: !9678)
!9682 = !DILocation(line: 3525, column: 7, scope: !9674)
!9683 = !DILocation(line: 3527, column: 30, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 3526, column: 7)
!9685 = !DILocation(line: 3527, column: 36, scope: !9684)
!9686 = !DILocation(line: 3527, column: 41, scope: !9684)
!9687 = !DILocation(line: 3527, column: 43, scope: !9684)
!9688 = !DILocation(line: 3527, column: 48, scope: !9684)
!9689 = !DILocation(line: 3527, column: 50, scope: !9684)
!9690 = !DILocation(line: 3527, column: 49, scope: !9684)
!9691 = !DILocation(line: 3527, column: 52, scope: !9684)
!9692 = !DILocation(line: 3527, column: 57, scope: !9684)
!9693 = !DILocation(line: 3527, column: 65, scope: !9684)
!9694 = !DILocation(line: 3527, column: 11, scope: !9684)
!9695 = !DILocation(line: 3527, column: 10, scope: !9684)
!9696 = !DILocation(line: 3528, column: 13, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 3528, column: 13)
!9698 = !DILocation(line: 3528, column: 15, scope: !9697)
!9699 = !DILocation(line: 3528, column: 13, scope: !9684)
!9700 = !DILocation(line: 3529, column: 11, scope: !9697)
!9701 = !DILocation(line: 3530, column: 15, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 3530, column: 9)
!9703 = !DILocation(line: 3530, column: 14, scope: !9702)
!9704 = !DILocation(line: 3530, column: 19, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9702, file: !3, line: 3530, column: 9)
!9706 = !DILocation(line: 3530, column: 33, scope: !9705)
!9707 = !DILocation(line: 3530, column: 38, scope: !9705)
!9708 = !DILocation(line: 3530, column: 21, scope: !9705)
!9709 = !DILocation(line: 3530, column: 9, scope: !9702)
!9710 = !DILocation(line: 3532, column: 11, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 3531, column: 9)
!9712 = !DILocation(line: 3533, column: 11, scope: !9711)
!9713 = !DILocation(line: 3534, column: 11, scope: !9711)
!9714 = !DILocation(line: 3535, column: 11, scope: !9711)
!9715 = !DILocation(line: 3536, column: 12, scope: !9711)
!9716 = !DILocation(line: 3537, column: 9, scope: !9711)
!9717 = !DILocation(line: 3530, column: 46, scope: !9705)
!9718 = !DILocation(line: 3530, column: 9, scope: !9705)
!9719 = distinct !{!9719, !9709, !9720}
!9720 = !DILocation(line: 3537, column: 9, scope: !9702)
!9721 = !DILocation(line: 3538, column: 33, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 3538, column: 13)
!9723 = !DILocation(line: 3538, column: 39, scope: !9722)
!9724 = !DILocation(line: 3538, column: 13, scope: !9722)
!9725 = !DILocation(line: 3538, column: 50, scope: !9722)
!9726 = !DILocation(line: 3538, column: 13, scope: !9684)
!9727 = !DILocation(line: 3539, column: 11, scope: !9722)
!9728 = !DILocation(line: 3540, column: 7, scope: !9684)
!9729 = !DILocation(line: 3525, column: 45, scope: !9678)
!9730 = !DILocation(line: 3525, column: 7, scope: !9678)
!9731 = distinct !{!9731, !9682, !9732}
!9732 = !DILocation(line: 3540, column: 7, scope: !9674)
!9733 = !DILocation(line: 3541, column: 7, scope: !9675)
!9734 = !DILocation(line: 3543, column: 21, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 3543, column: 7)
!9736 = !DILocation(line: 3543, column: 7, scope: !9735)
!9737 = !DILocation(line: 3543, column: 33, scope: !9735)
!9738 = !DILocation(line: 3543, column: 7, scope: !9574)
!9739 = !DILocation(line: 3545, column: 13, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 3545, column: 7)
!9741 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 3544, column: 5)
!9742 = !DILocation(line: 3545, column: 12, scope: !9740)
!9743 = !DILocation(line: 3545, column: 17, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 3545, column: 7)
!9745 = !DILocation(line: 3545, column: 31, scope: !9744)
!9746 = !DILocation(line: 3545, column: 36, scope: !9744)
!9747 = !DILocation(line: 3545, column: 19, scope: !9744)
!9748 = !DILocation(line: 3545, column: 7, scope: !9740)
!9749 = !DILocation(line: 3547, column: 30, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 3546, column: 7)
!9751 = !DILocation(line: 3547, column: 36, scope: !9750)
!9752 = !DILocation(line: 3547, column: 41, scope: !9750)
!9753 = !DILocation(line: 3547, column: 43, scope: !9750)
!9754 = !DILocation(line: 3547, column: 48, scope: !9750)
!9755 = !DILocation(line: 3547, column: 50, scope: !9750)
!9756 = !DILocation(line: 3547, column: 49, scope: !9750)
!9757 = !DILocation(line: 3547, column: 52, scope: !9750)
!9758 = !DILocation(line: 3547, column: 57, scope: !9750)
!9759 = !DILocation(line: 3547, column: 65, scope: !9750)
!9760 = !DILocation(line: 3547, column: 11, scope: !9750)
!9761 = !DILocation(line: 3547, column: 10, scope: !9750)
!9762 = !DILocation(line: 3548, column: 13, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 3548, column: 13)
!9764 = !DILocation(line: 3548, column: 15, scope: !9763)
!9765 = !DILocation(line: 3548, column: 13, scope: !9750)
!9766 = !DILocation(line: 3549, column: 11, scope: !9763)
!9767 = !DILocation(line: 3550, column: 15, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 3550, column: 9)
!9769 = !DILocation(line: 3550, column: 14, scope: !9768)
!9770 = !DILocation(line: 3550, column: 19, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9768, file: !3, line: 3550, column: 9)
!9772 = !DILocation(line: 3550, column: 33, scope: !9771)
!9773 = !DILocation(line: 3550, column: 38, scope: !9771)
!9774 = !DILocation(line: 3550, column: 21, scope: !9771)
!9775 = !DILocation(line: 3550, column: 9, scope: !9768)
!9776 = !DILocation(line: 3552, column: 11, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 3551, column: 9)
!9778 = !DILocation(line: 3553, column: 11, scope: !9777)
!9779 = !DILocation(line: 3554, column: 11, scope: !9777)
!9780 = !DILocation(line: 3555, column: 12, scope: !9777)
!9781 = !DILocation(line: 3556, column: 12, scope: !9777)
!9782 = !DILocation(line: 3557, column: 9, scope: !9777)
!9783 = !DILocation(line: 3550, column: 46, scope: !9771)
!9784 = !DILocation(line: 3550, column: 9, scope: !9771)
!9785 = distinct !{!9785, !9775, !9786}
!9786 = !DILocation(line: 3557, column: 9, scope: !9768)
!9787 = !DILocation(line: 3558, column: 33, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 3558, column: 13)
!9789 = !DILocation(line: 3558, column: 39, scope: !9788)
!9790 = !DILocation(line: 3558, column: 13, scope: !9788)
!9791 = !DILocation(line: 3558, column: 50, scope: !9788)
!9792 = !DILocation(line: 3558, column: 13, scope: !9750)
!9793 = !DILocation(line: 3559, column: 11, scope: !9788)
!9794 = !DILocation(line: 3560, column: 7, scope: !9750)
!9795 = !DILocation(line: 3545, column: 45, scope: !9744)
!9796 = !DILocation(line: 3545, column: 7, scope: !9744)
!9797 = distinct !{!9797, !9748, !9798}
!9798 = !DILocation(line: 3560, column: 7, scope: !9740)
!9799 = !DILocation(line: 3561, column: 7, scope: !9741)
!9800 = !DILocation(line: 3563, column: 21, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 3563, column: 7)
!9802 = !DILocation(line: 3563, column: 7, scope: !9801)
!9803 = !DILocation(line: 3563, column: 30, scope: !9801)
!9804 = !DILocation(line: 3563, column: 7, scope: !9574)
!9805 = !DILocation(line: 3565, column: 13, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 3565, column: 7)
!9807 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 3564, column: 5)
!9808 = !DILocation(line: 3565, column: 12, scope: !9806)
!9809 = !DILocation(line: 3565, column: 17, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3565, column: 7)
!9811 = !DILocation(line: 3565, column: 31, scope: !9810)
!9812 = !DILocation(line: 3565, column: 36, scope: !9810)
!9813 = !DILocation(line: 3565, column: 19, scope: !9810)
!9814 = !DILocation(line: 3565, column: 7, scope: !9806)
!9815 = !DILocation(line: 3567, column: 30, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 3566, column: 7)
!9817 = !DILocation(line: 3567, column: 36, scope: !9816)
!9818 = !DILocation(line: 3567, column: 41, scope: !9816)
!9819 = !DILocation(line: 3567, column: 43, scope: !9816)
!9820 = !DILocation(line: 3567, column: 48, scope: !9816)
!9821 = !DILocation(line: 3567, column: 50, scope: !9816)
!9822 = !DILocation(line: 3567, column: 49, scope: !9816)
!9823 = !DILocation(line: 3567, column: 52, scope: !9816)
!9824 = !DILocation(line: 3567, column: 57, scope: !9816)
!9825 = !DILocation(line: 3567, column: 65, scope: !9816)
!9826 = !DILocation(line: 3567, column: 11, scope: !9816)
!9827 = !DILocation(line: 3567, column: 10, scope: !9816)
!9828 = !DILocation(line: 3568, column: 13, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 3568, column: 13)
!9830 = !DILocation(line: 3568, column: 15, scope: !9829)
!9831 = !DILocation(line: 3568, column: 13, scope: !9816)
!9832 = !DILocation(line: 3569, column: 11, scope: !9829)
!9833 = !DILocation(line: 3570, column: 15, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 3570, column: 9)
!9835 = !DILocation(line: 3570, column: 14, scope: !9834)
!9836 = !DILocation(line: 3570, column: 19, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 3570, column: 9)
!9838 = !DILocation(line: 3570, column: 33, scope: !9837)
!9839 = !DILocation(line: 3570, column: 38, scope: !9837)
!9840 = !DILocation(line: 3570, column: 21, scope: !9837)
!9841 = !DILocation(line: 3570, column: 9, scope: !9834)
!9842 = !DILocation(line: 3572, column: 11, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 3571, column: 9)
!9844 = !DILocation(line: 3573, column: 11, scope: !9843)
!9845 = !DILocation(line: 3574, column: 11, scope: !9843)
!9846 = !DILocation(line: 3575, column: 12, scope: !9843)
!9847 = !DILocation(line: 3576, column: 9, scope: !9843)
!9848 = !DILocation(line: 3570, column: 46, scope: !9837)
!9849 = !DILocation(line: 3570, column: 9, scope: !9837)
!9850 = distinct !{!9850, !9841, !9851}
!9851 = !DILocation(line: 3576, column: 9, scope: !9834)
!9852 = !DILocation(line: 3577, column: 33, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 3577, column: 13)
!9854 = !DILocation(line: 3577, column: 39, scope: !9853)
!9855 = !DILocation(line: 3577, column: 13, scope: !9853)
!9856 = !DILocation(line: 3577, column: 50, scope: !9853)
!9857 = !DILocation(line: 3577, column: 13, scope: !9816)
!9858 = !DILocation(line: 3578, column: 11, scope: !9853)
!9859 = !DILocation(line: 3579, column: 7, scope: !9816)
!9860 = !DILocation(line: 3565, column: 45, scope: !9810)
!9861 = !DILocation(line: 3565, column: 7, scope: !9810)
!9862 = distinct !{!9862, !9814, !9863}
!9863 = !DILocation(line: 3579, column: 7, scope: !9806)
!9864 = !DILocation(line: 3580, column: 7, scope: !9807)
!9865 = !DILocation(line: 3582, column: 21, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 3582, column: 7)
!9867 = !DILocation(line: 3582, column: 7, scope: !9866)
!9868 = !DILocation(line: 3582, column: 32, scope: !9866)
!9869 = !DILocation(line: 3582, column: 7, scope: !9574)
!9870 = !DILocation(line: 3584, column: 13, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9872, file: !3, line: 3584, column: 7)
!9872 = distinct !DILexicalBlock(scope: !9866, file: !3, line: 3583, column: 5)
!9873 = !DILocation(line: 3584, column: 12, scope: !9871)
!9874 = !DILocation(line: 3584, column: 17, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 3584, column: 7)
!9876 = !DILocation(line: 3584, column: 31, scope: !9875)
!9877 = !DILocation(line: 3584, column: 36, scope: !9875)
!9878 = !DILocation(line: 3584, column: 19, scope: !9875)
!9879 = !DILocation(line: 3584, column: 7, scope: !9871)
!9880 = !DILocation(line: 3586, column: 30, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 3585, column: 7)
!9882 = !DILocation(line: 3586, column: 36, scope: !9881)
!9883 = !DILocation(line: 3586, column: 41, scope: !9881)
!9884 = !DILocation(line: 3586, column: 43, scope: !9881)
!9885 = !DILocation(line: 3586, column: 48, scope: !9881)
!9886 = !DILocation(line: 3586, column: 50, scope: !9881)
!9887 = !DILocation(line: 3586, column: 49, scope: !9881)
!9888 = !DILocation(line: 3586, column: 52, scope: !9881)
!9889 = !DILocation(line: 3586, column: 57, scope: !9881)
!9890 = !DILocation(line: 3586, column: 65, scope: !9881)
!9891 = !DILocation(line: 3586, column: 11, scope: !9881)
!9892 = !DILocation(line: 3586, column: 10, scope: !9881)
!9893 = !DILocation(line: 3587, column: 13, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 3587, column: 13)
!9895 = !DILocation(line: 3587, column: 15, scope: !9894)
!9896 = !DILocation(line: 3587, column: 13, scope: !9881)
!9897 = !DILocation(line: 3588, column: 11, scope: !9894)
!9898 = !DILocation(line: 3589, column: 15, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 3589, column: 9)
!9900 = !DILocation(line: 3589, column: 14, scope: !9899)
!9901 = !DILocation(line: 3589, column: 19, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 3589, column: 9)
!9903 = !DILocation(line: 3589, column: 33, scope: !9902)
!9904 = !DILocation(line: 3589, column: 38, scope: !9902)
!9905 = !DILocation(line: 3589, column: 21, scope: !9902)
!9906 = !DILocation(line: 3589, column: 9, scope: !9899)
!9907 = !DILocation(line: 3591, column: 11, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 3590, column: 9)
!9909 = !DILocation(line: 3592, column: 11, scope: !9908)
!9910 = !DILocation(line: 3593, column: 11, scope: !9908)
!9911 = !DILocation(line: 3594, column: 12, scope: !9908)
!9912 = !DILocation(line: 3595, column: 9, scope: !9908)
!9913 = !DILocation(line: 3589, column: 46, scope: !9902)
!9914 = !DILocation(line: 3589, column: 9, scope: !9902)
!9915 = distinct !{!9915, !9906, !9916}
!9916 = !DILocation(line: 3595, column: 9, scope: !9899)
!9917 = !DILocation(line: 3596, column: 33, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 3596, column: 13)
!9919 = !DILocation(line: 3596, column: 39, scope: !9918)
!9920 = !DILocation(line: 3596, column: 13, scope: !9918)
!9921 = !DILocation(line: 3596, column: 50, scope: !9918)
!9922 = !DILocation(line: 3596, column: 13, scope: !9881)
!9923 = !DILocation(line: 3597, column: 11, scope: !9918)
!9924 = !DILocation(line: 3598, column: 7, scope: !9881)
!9925 = !DILocation(line: 3584, column: 45, scope: !9875)
!9926 = !DILocation(line: 3584, column: 7, scope: !9875)
!9927 = distinct !{!9927, !9879, !9928}
!9928 = !DILocation(line: 3598, column: 7, scope: !9871)
!9929 = !DILocation(line: 3599, column: 7, scope: !9872)
!9930 = !DILocation(line: 3601, column: 21, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 3601, column: 7)
!9932 = !DILocation(line: 3601, column: 7, scope: !9931)
!9933 = !DILocation(line: 3601, column: 33, scope: !9931)
!9934 = !DILocation(line: 3601, column: 7, scope: !9574)
!9935 = !DILocation(line: 3603, column: 13, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 3603, column: 7)
!9937 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 3602, column: 5)
!9938 = !DILocation(line: 3603, column: 12, scope: !9936)
!9939 = !DILocation(line: 3603, column: 17, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 3603, column: 7)
!9941 = !DILocation(line: 3603, column: 31, scope: !9940)
!9942 = !DILocation(line: 3603, column: 36, scope: !9940)
!9943 = !DILocation(line: 3603, column: 19, scope: !9940)
!9944 = !DILocation(line: 3603, column: 7, scope: !9936)
!9945 = !DILocation(line: 3605, column: 30, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 3604, column: 7)
!9947 = !DILocation(line: 3605, column: 36, scope: !9946)
!9948 = !DILocation(line: 3605, column: 41, scope: !9946)
!9949 = !DILocation(line: 3605, column: 43, scope: !9946)
!9950 = !DILocation(line: 3605, column: 48, scope: !9946)
!9951 = !DILocation(line: 3605, column: 50, scope: !9946)
!9952 = !DILocation(line: 3605, column: 49, scope: !9946)
!9953 = !DILocation(line: 3605, column: 52, scope: !9946)
!9954 = !DILocation(line: 3605, column: 57, scope: !9946)
!9955 = !DILocation(line: 3605, column: 65, scope: !9946)
!9956 = !DILocation(line: 3605, column: 11, scope: !9946)
!9957 = !DILocation(line: 3605, column: 10, scope: !9946)
!9958 = !DILocation(line: 3606, column: 13, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 3606, column: 13)
!9960 = !DILocation(line: 3606, column: 15, scope: !9959)
!9961 = !DILocation(line: 3606, column: 13, scope: !9946)
!9962 = !DILocation(line: 3607, column: 11, scope: !9959)
!9963 = !DILocation(line: 3608, column: 15, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 3608, column: 9)
!9965 = !DILocation(line: 3608, column: 14, scope: !9964)
!9966 = !DILocation(line: 3608, column: 19, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 3608, column: 9)
!9968 = !DILocation(line: 3608, column: 33, scope: !9967)
!9969 = !DILocation(line: 3608, column: 38, scope: !9967)
!9970 = !DILocation(line: 3608, column: 21, scope: !9967)
!9971 = !DILocation(line: 3608, column: 9, scope: !9964)
!9972 = !DILocation(line: 3610, column: 11, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 3609, column: 9)
!9974 = !DILocation(line: 3611, column: 11, scope: !9973)
!9975 = !DILocation(line: 3612, column: 11, scope: !9973)
!9976 = !DILocation(line: 3613, column: 11, scope: !9973)
!9977 = !DILocation(line: 3614, column: 12, scope: !9973)
!9978 = !DILocation(line: 3615, column: 9, scope: !9973)
!9979 = !DILocation(line: 3608, column: 46, scope: !9967)
!9980 = !DILocation(line: 3608, column: 9, scope: !9967)
!9981 = distinct !{!9981, !9971, !9982}
!9982 = !DILocation(line: 3615, column: 9, scope: !9964)
!9983 = !DILocation(line: 3616, column: 33, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 3616, column: 13)
!9985 = !DILocation(line: 3616, column: 39, scope: !9984)
!9986 = !DILocation(line: 3616, column: 13, scope: !9984)
!9987 = !DILocation(line: 3616, column: 50, scope: !9984)
!9988 = !DILocation(line: 3616, column: 13, scope: !9946)
!9989 = !DILocation(line: 3617, column: 11, scope: !9984)
!9990 = !DILocation(line: 3618, column: 7, scope: !9946)
!9991 = !DILocation(line: 3603, column: 45, scope: !9940)
!9992 = !DILocation(line: 3603, column: 7, scope: !9940)
!9993 = distinct !{!9993, !9944, !9994}
!9994 = !DILocation(line: 3618, column: 7, scope: !9936)
!9995 = !DILocation(line: 3619, column: 7, scope: !9937)
!9996 = !DILocation(line: 3621, column: 21, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 3621, column: 7)
!9998 = !DILocation(line: 3621, column: 7, scope: !9997)
!9999 = !DILocation(line: 3621, column: 33, scope: !9997)
!10000 = !DILocation(line: 3621, column: 7, scope: !9574)
!10001 = !DILocation(line: 3623, column: 13, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 3623, column: 7)
!10003 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 3622, column: 5)
!10004 = !DILocation(line: 3623, column: 12, scope: !10002)
!10005 = !DILocation(line: 3623, column: 17, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 3623, column: 7)
!10007 = !DILocation(line: 3623, column: 31, scope: !10006)
!10008 = !DILocation(line: 3623, column: 36, scope: !10006)
!10009 = !DILocation(line: 3623, column: 19, scope: !10006)
!10010 = !DILocation(line: 3623, column: 7, scope: !10002)
!10011 = !DILocation(line: 3625, column: 30, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 3624, column: 7)
!10013 = !DILocation(line: 3625, column: 36, scope: !10012)
!10014 = !DILocation(line: 3625, column: 41, scope: !10012)
!10015 = !DILocation(line: 3625, column: 43, scope: !10012)
!10016 = !DILocation(line: 3625, column: 48, scope: !10012)
!10017 = !DILocation(line: 3625, column: 50, scope: !10012)
!10018 = !DILocation(line: 3625, column: 49, scope: !10012)
!10019 = !DILocation(line: 3625, column: 52, scope: !10012)
!10020 = !DILocation(line: 3625, column: 57, scope: !10012)
!10021 = !DILocation(line: 3625, column: 65, scope: !10012)
!10022 = !DILocation(line: 3625, column: 11, scope: !10012)
!10023 = !DILocation(line: 3625, column: 10, scope: !10012)
!10024 = !DILocation(line: 3626, column: 13, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 3626, column: 13)
!10026 = !DILocation(line: 3626, column: 15, scope: !10025)
!10027 = !DILocation(line: 3626, column: 13, scope: !10012)
!10028 = !DILocation(line: 3627, column: 11, scope: !10025)
!10029 = !DILocation(line: 3628, column: 15, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 3628, column: 9)
!10031 = !DILocation(line: 3628, column: 14, scope: !10030)
!10032 = !DILocation(line: 3628, column: 19, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10030, file: !3, line: 3628, column: 9)
!10034 = !DILocation(line: 3628, column: 33, scope: !10033)
!10035 = !DILocation(line: 3628, column: 38, scope: !10033)
!10036 = !DILocation(line: 3628, column: 21, scope: !10033)
!10037 = !DILocation(line: 3628, column: 9, scope: !10030)
!10038 = !DILocation(line: 3630, column: 11, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 3629, column: 9)
!10040 = !DILocation(line: 3631, column: 11, scope: !10039)
!10041 = !DILocation(line: 3632, column: 11, scope: !10039)
!10042 = !DILocation(line: 3633, column: 12, scope: !10039)
!10043 = !DILocation(line: 3634, column: 12, scope: !10039)
!10044 = !DILocation(line: 3635, column: 9, scope: !10039)
!10045 = !DILocation(line: 3628, column: 46, scope: !10033)
!10046 = !DILocation(line: 3628, column: 9, scope: !10033)
!10047 = distinct !{!10047, !10037, !10048}
!10048 = !DILocation(line: 3635, column: 9, scope: !10030)
!10049 = !DILocation(line: 3636, column: 33, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 3636, column: 13)
!10051 = !DILocation(line: 3636, column: 39, scope: !10050)
!10052 = !DILocation(line: 3636, column: 13, scope: !10050)
!10053 = !DILocation(line: 3636, column: 50, scope: !10050)
!10054 = !DILocation(line: 3636, column: 13, scope: !10012)
!10055 = !DILocation(line: 3637, column: 11, scope: !10050)
!10056 = !DILocation(line: 3638, column: 7, scope: !10012)
!10057 = !DILocation(line: 3623, column: 45, scope: !10006)
!10058 = !DILocation(line: 3623, column: 7, scope: !10006)
!10059 = distinct !{!10059, !10010, !10060}
!10060 = !DILocation(line: 3638, column: 7, scope: !10002)
!10061 = !DILocation(line: 3639, column: 7, scope: !10003)
!10062 = !DILocation(line: 3641, column: 17, scope: !9574)
!10063 = !DILocation(line: 3641, column: 10, scope: !9574)
!10064 = !DILocation(line: 3641, column: 9, scope: !9574)
!10065 = !DILocation(line: 3642, column: 9, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 3642, column: 3)
!10067 = !DILocation(line: 3642, column: 8, scope: !10066)
!10068 = !DILocation(line: 3642, column: 13, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 3642, column: 3)
!10070 = !DILocation(line: 3642, column: 27, scope: !10069)
!10071 = !DILocation(line: 3642, column: 32, scope: !10069)
!10072 = !DILocation(line: 3642, column: 15, scope: !10069)
!10073 = !DILocation(line: 3642, column: 3, scope: !10066)
!10074 = !DILocation(line: 3644, column: 26, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10069, file: !3, line: 3643, column: 3)
!10076 = !DILocation(line: 3644, column: 32, scope: !10075)
!10077 = !DILocation(line: 3644, column: 37, scope: !10075)
!10078 = !DILocation(line: 3644, column: 39, scope: !10075)
!10079 = !DILocation(line: 3644, column: 44, scope: !10075)
!10080 = !DILocation(line: 3644, column: 46, scope: !10075)
!10081 = !DILocation(line: 3644, column: 45, scope: !10075)
!10082 = !DILocation(line: 3644, column: 48, scope: !10075)
!10083 = !DILocation(line: 3644, column: 53, scope: !10075)
!10084 = !DILocation(line: 3644, column: 61, scope: !10075)
!10085 = !DILocation(line: 3644, column: 7, scope: !10075)
!10086 = !DILocation(line: 3644, column: 6, scope: !10075)
!10087 = !DILocation(line: 3645, column: 9, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 3645, column: 9)
!10089 = !DILocation(line: 3645, column: 11, scope: !10088)
!10090 = !DILocation(line: 3645, column: 9, scope: !10075)
!10091 = !DILocation(line: 3646, column: 7, scope: !10088)
!10092 = !DILocation(line: 3647, column: 36, scope: !10075)
!10093 = !DILocation(line: 3647, column: 13, scope: !10075)
!10094 = !DILocation(line: 3647, column: 12, scope: !10075)
!10095 = !DILocation(line: 3648, column: 11, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 3648, column: 5)
!10097 = !DILocation(line: 3648, column: 10, scope: !10096)
!10098 = !DILocation(line: 3648, column: 15, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 3648, column: 5)
!10100 = !DILocation(line: 3648, column: 29, scope: !10099)
!10101 = !DILocation(line: 3648, column: 34, scope: !10099)
!10102 = !DILocation(line: 3648, column: 17, scope: !10099)
!10103 = !DILocation(line: 3648, column: 5, scope: !10096)
!10104 = !DILocalVariable(name: "i", scope: !10105, file: !3, line: 3651, type: !470)
!10105 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 3649, column: 5)
!10106 = !DILocation(line: 3651, column: 9, scope: !10105)
!10107 = !DILocation(line: 3653, column: 13, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 3653, column: 7)
!10109 = !DILocation(line: 3653, column: 12, scope: !10108)
!10110 = !DILocation(line: 3653, column: 17, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10108, file: !3, line: 3653, column: 7)
!10112 = !DILocation(line: 3653, column: 31, scope: !10111)
!10113 = !DILocation(line: 3653, column: 19, scope: !10111)
!10114 = !DILocation(line: 3653, column: 7, scope: !10108)
!10115 = !DILocation(line: 3655, column: 17, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10111, file: !3, line: 3654, column: 7)
!10117 = !DILocation(line: 3655, column: 29, scope: !10116)
!10118 = !DILocation(line: 3655, column: 9, scope: !10116)
!10119 = !DILocation(line: 3660, column: 13, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 3659, column: 11)
!10121 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 3656, column: 9)
!10122 = !DILocation(line: 3661, column: 13, scope: !10120)
!10123 = !DILocation(line: 3666, column: 13, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 3665, column: 11)
!10125 = !DILocation(line: 3667, column: 13, scope: !10124)
!10126 = !DILocation(line: 3672, column: 13, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 3671, column: 11)
!10128 = !DILocation(line: 3673, column: 13, scope: !10127)
!10129 = !DILocation(line: 3677, column: 13, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 3676, column: 11)
!10131 = !DILocation(line: 3678, column: 13, scope: !10130)
!10132 = !DILocation(line: 3682, column: 13, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 3681, column: 11)
!10134 = !DILocation(line: 3683, column: 13, scope: !10133)
!10135 = !DILocation(line: 3687, column: 13, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 3687, column: 13)
!10137 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 3687, column: 13)
!10138 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 3686, column: 11)
!10139 = !DILocation(line: 3687, column: 13, scope: !10137)
!10140 = !DILocation(line: 3688, column: 13, scope: !10138)
!10141 = !DILocation(line: 3692, column: 13, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 3691, column: 11)
!10143 = !DILocation(line: 3693, column: 13, scope: !10142)
!10144 = !DILocation(line: 3694, column: 13, scope: !10142)
!10145 = !DILocation(line: 3695, column: 13, scope: !10142)
!10146 = !DILocation(line: 3698, column: 13, scope: !10121)
!10147 = !DILocation(line: 3700, column: 10, scope: !10116)
!10148 = !DILocation(line: 3701, column: 7, scope: !10116)
!10149 = !DILocation(line: 3653, column: 40, scope: !10111)
!10150 = !DILocation(line: 3653, column: 7, scope: !10111)
!10151 = distinct !{!10151, !10114, !10152}
!10152 = !DILocation(line: 3701, column: 7, scope: !10108)
!10153 = !DILocation(line: 3702, column: 8, scope: !10105)
!10154 = !DILocation(line: 3703, column: 5, scope: !10105)
!10155 = !DILocation(line: 3648, column: 42, scope: !10099)
!10156 = !DILocation(line: 3648, column: 5, scope: !10099)
!10157 = distinct !{!10157, !10103, !10158}
!10158 = !DILocation(line: 3703, column: 5, scope: !10096)
!10159 = !DILocation(line: 3704, column: 29, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 3704, column: 9)
!10161 = !DILocation(line: 3704, column: 35, scope: !10160)
!10162 = !DILocation(line: 3704, column: 9, scope: !10160)
!10163 = !DILocation(line: 3704, column: 46, scope: !10160)
!10164 = !DILocation(line: 3704, column: 9, scope: !10075)
!10165 = !DILocation(line: 3705, column: 7, scope: !10160)
!10166 = !DILocation(line: 3706, column: 3, scope: !10075)
!10167 = !DILocation(line: 3642, column: 41, scope: !10069)
!10168 = !DILocation(line: 3642, column: 3, scope: !10069)
!10169 = distinct !{!10169, !10073, !10170}
!10170 = !DILocation(line: 3706, column: 3, scope: !10066)
!10171 = !DILocation(line: 3707, column: 1, scope: !9574)
!10172 = distinct !DISubprogram(name: "ImportShortPixel", scope: !3, file: !3, line: 3709, type: !6402, scopeLine: 3712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!10173 = !DILocalVariable(name: "image", arg: 1, scope: !10172, file: !3, line: 3709, type: !475)
!10174 = !DILocation(line: 3709, column: 37, scope: !10172)
!10175 = !DILocalVariable(name: "roi", arg: 2, scope: !10172, file: !3, line: 3709, type: !1347)
!10176 = !DILocation(line: 3709, column: 64, scope: !10172)
!10177 = !DILocalVariable(name: "map", arg: 3, scope: !10172, file: !3, line: 3710, type: !1349)
!10178 = !DILocation(line: 3710, column: 24, scope: !10172)
!10179 = !DILocalVariable(name: "quantum_map", arg: 4, scope: !10172, file: !3, line: 3710, type: !1350)
!10180 = !DILocation(line: 3710, column: 47, scope: !10172)
!10181 = !DILocalVariable(name: "pixels", arg: 5, scope: !10172, file: !3, line: 3710, type: !6154)
!10182 = !DILocation(line: 3710, column: 71, scope: !10172)
!10183 = !DILocalVariable(name: "exception", arg: 6, scope: !10172, file: !3, line: 3711, type: !1071)
!10184 = !DILocation(line: 3711, column: 18, scope: !10172)
!10185 = !DILocalVariable(name: "p", scope: !10172, file: !3, line: 3714, type: !10186)
!10186 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !703)
!10187 = !DILocation(line: 3714, column: 15, scope: !10172)
!10188 = !DILocalVariable(name: "indexes", scope: !10172, file: !3, line: 3717, type: !6420)
!10189 = !DILocation(line: 3717, column: 15, scope: !10172)
!10190 = !DILocalVariable(name: "q", scope: !10172, file: !3, line: 3720, type: !6423)
!10191 = !DILocation(line: 3720, column: 15, scope: !10172)
!10192 = !DILocalVariable(name: "x", scope: !10172, file: !3, line: 3723, type: !470)
!10193 = !DILocation(line: 3723, column: 5, scope: !10172)
!10194 = !DILocalVariable(name: "length", scope: !10172, file: !3, line: 3726, type: !454)
!10195 = !DILocation(line: 3726, column: 5, scope: !10172)
!10196 = !DILocalVariable(name: "y", scope: !10172, file: !3, line: 3729, type: !470)
!10197 = !DILocation(line: 3729, column: 5, scope: !10172)
!10198 = !DILocation(line: 3731, column: 30, scope: !10172)
!10199 = !DILocation(line: 3731, column: 5, scope: !10172)
!10200 = !DILocation(line: 3731, column: 4, scope: !10172)
!10201 = !DILocation(line: 3732, column: 21, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 3732, column: 7)
!10203 = !DILocation(line: 3732, column: 7, scope: !10202)
!10204 = !DILocation(line: 3732, column: 32, scope: !10202)
!10205 = !DILocation(line: 3732, column: 7, scope: !10172)
!10206 = !DILocation(line: 3734, column: 13, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 3734, column: 7)
!10208 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 3733, column: 5)
!10209 = !DILocation(line: 3734, column: 12, scope: !10207)
!10210 = !DILocation(line: 3734, column: 17, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 3734, column: 7)
!10212 = !DILocation(line: 3734, column: 31, scope: !10211)
!10213 = !DILocation(line: 3734, column: 36, scope: !10211)
!10214 = !DILocation(line: 3734, column: 19, scope: !10211)
!10215 = !DILocation(line: 3734, column: 7, scope: !10207)
!10216 = !DILocation(line: 3736, column: 30, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 3735, column: 7)
!10218 = !DILocation(line: 3736, column: 36, scope: !10217)
!10219 = !DILocation(line: 3736, column: 41, scope: !10217)
!10220 = !DILocation(line: 3736, column: 43, scope: !10217)
!10221 = !DILocation(line: 3736, column: 48, scope: !10217)
!10222 = !DILocation(line: 3736, column: 50, scope: !10217)
!10223 = !DILocation(line: 3736, column: 49, scope: !10217)
!10224 = !DILocation(line: 3736, column: 52, scope: !10217)
!10225 = !DILocation(line: 3736, column: 57, scope: !10217)
!10226 = !DILocation(line: 3736, column: 65, scope: !10217)
!10227 = !DILocation(line: 3736, column: 11, scope: !10217)
!10228 = !DILocation(line: 3736, column: 10, scope: !10217)
!10229 = !DILocation(line: 3737, column: 13, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 3737, column: 13)
!10231 = !DILocation(line: 3737, column: 15, scope: !10230)
!10232 = !DILocation(line: 3737, column: 13, scope: !10217)
!10233 = !DILocation(line: 3738, column: 11, scope: !10230)
!10234 = !DILocation(line: 3739, column: 15, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 3739, column: 9)
!10236 = !DILocation(line: 3739, column: 14, scope: !10235)
!10237 = !DILocation(line: 3739, column: 19, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 3739, column: 9)
!10239 = !DILocation(line: 3739, column: 33, scope: !10238)
!10240 = !DILocation(line: 3739, column: 38, scope: !10238)
!10241 = !DILocation(line: 3739, column: 21, scope: !10238)
!10242 = !DILocation(line: 3739, column: 9, scope: !10235)
!10243 = !DILocation(line: 3741, column: 11, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 3740, column: 9)
!10245 = !DILocation(line: 3742, column: 11, scope: !10244)
!10246 = !DILocation(line: 3743, column: 11, scope: !10244)
!10247 = !DILocation(line: 3744, column: 12, scope: !10244)
!10248 = !DILocation(line: 3745, column: 9, scope: !10244)
!10249 = !DILocation(line: 3739, column: 46, scope: !10238)
!10250 = !DILocation(line: 3739, column: 9, scope: !10238)
!10251 = distinct !{!10251, !10242, !10252}
!10252 = !DILocation(line: 3745, column: 9, scope: !10235)
!10253 = !DILocation(line: 3746, column: 33, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 3746, column: 13)
!10255 = !DILocation(line: 3746, column: 39, scope: !10254)
!10256 = !DILocation(line: 3746, column: 13, scope: !10254)
!10257 = !DILocation(line: 3746, column: 50, scope: !10254)
!10258 = !DILocation(line: 3746, column: 13, scope: !10217)
!10259 = !DILocation(line: 3747, column: 11, scope: !10254)
!10260 = !DILocation(line: 3748, column: 7, scope: !10217)
!10261 = !DILocation(line: 3734, column: 45, scope: !10211)
!10262 = !DILocation(line: 3734, column: 7, scope: !10211)
!10263 = distinct !{!10263, !10215, !10264}
!10264 = !DILocation(line: 3748, column: 7, scope: !10207)
!10265 = !DILocation(line: 3749, column: 7, scope: !10208)
!10266 = !DILocation(line: 3751, column: 21, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 3751, column: 7)
!10268 = !DILocation(line: 3751, column: 7, scope: !10267)
!10269 = !DILocation(line: 3751, column: 33, scope: !10267)
!10270 = !DILocation(line: 3751, column: 7, scope: !10172)
!10271 = !DILocation(line: 3753, column: 13, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 3753, column: 7)
!10273 = distinct !DILexicalBlock(scope: !10267, file: !3, line: 3752, column: 5)
!10274 = !DILocation(line: 3753, column: 12, scope: !10272)
!10275 = !DILocation(line: 3753, column: 17, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10272, file: !3, line: 3753, column: 7)
!10277 = !DILocation(line: 3753, column: 31, scope: !10276)
!10278 = !DILocation(line: 3753, column: 36, scope: !10276)
!10279 = !DILocation(line: 3753, column: 19, scope: !10276)
!10280 = !DILocation(line: 3753, column: 7, scope: !10272)
!10281 = !DILocation(line: 3755, column: 30, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 3754, column: 7)
!10283 = !DILocation(line: 3755, column: 36, scope: !10282)
!10284 = !DILocation(line: 3755, column: 41, scope: !10282)
!10285 = !DILocation(line: 3755, column: 43, scope: !10282)
!10286 = !DILocation(line: 3755, column: 48, scope: !10282)
!10287 = !DILocation(line: 3755, column: 50, scope: !10282)
!10288 = !DILocation(line: 3755, column: 49, scope: !10282)
!10289 = !DILocation(line: 3755, column: 52, scope: !10282)
!10290 = !DILocation(line: 3755, column: 57, scope: !10282)
!10291 = !DILocation(line: 3755, column: 65, scope: !10282)
!10292 = !DILocation(line: 3755, column: 11, scope: !10282)
!10293 = !DILocation(line: 3755, column: 10, scope: !10282)
!10294 = !DILocation(line: 3756, column: 13, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 3756, column: 13)
!10296 = !DILocation(line: 3756, column: 15, scope: !10295)
!10297 = !DILocation(line: 3756, column: 13, scope: !10282)
!10298 = !DILocation(line: 3757, column: 11, scope: !10295)
!10299 = !DILocation(line: 3758, column: 15, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 3758, column: 9)
!10301 = !DILocation(line: 3758, column: 14, scope: !10300)
!10302 = !DILocation(line: 3758, column: 19, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10300, file: !3, line: 3758, column: 9)
!10304 = !DILocation(line: 3758, column: 33, scope: !10303)
!10305 = !DILocation(line: 3758, column: 38, scope: !10303)
!10306 = !DILocation(line: 3758, column: 21, scope: !10303)
!10307 = !DILocation(line: 3758, column: 9, scope: !10300)
!10308 = !DILocation(line: 3760, column: 11, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 3759, column: 9)
!10310 = !DILocation(line: 3761, column: 11, scope: !10309)
!10311 = !DILocation(line: 3762, column: 11, scope: !10309)
!10312 = !DILocation(line: 3763, column: 11, scope: !10309)
!10313 = !DILocation(line: 3764, column: 12, scope: !10309)
!10314 = !DILocation(line: 3765, column: 9, scope: !10309)
!10315 = !DILocation(line: 3758, column: 46, scope: !10303)
!10316 = !DILocation(line: 3758, column: 9, scope: !10303)
!10317 = distinct !{!10317, !10307, !10318}
!10318 = !DILocation(line: 3765, column: 9, scope: !10300)
!10319 = !DILocation(line: 3766, column: 33, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 3766, column: 13)
!10321 = !DILocation(line: 3766, column: 39, scope: !10320)
!10322 = !DILocation(line: 3766, column: 13, scope: !10320)
!10323 = !DILocation(line: 3766, column: 50, scope: !10320)
!10324 = !DILocation(line: 3766, column: 13, scope: !10282)
!10325 = !DILocation(line: 3767, column: 11, scope: !10320)
!10326 = !DILocation(line: 3768, column: 7, scope: !10282)
!10327 = !DILocation(line: 3753, column: 45, scope: !10276)
!10328 = !DILocation(line: 3753, column: 7, scope: !10276)
!10329 = distinct !{!10329, !10280, !10330}
!10330 = !DILocation(line: 3768, column: 7, scope: !10272)
!10331 = !DILocation(line: 3769, column: 7, scope: !10273)
!10332 = !DILocation(line: 3771, column: 21, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 3771, column: 7)
!10334 = !DILocation(line: 3771, column: 7, scope: !10333)
!10335 = !DILocation(line: 3771, column: 33, scope: !10333)
!10336 = !DILocation(line: 3771, column: 7, scope: !10172)
!10337 = !DILocation(line: 3773, column: 13, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 3773, column: 7)
!10339 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 3772, column: 5)
!10340 = !DILocation(line: 3773, column: 12, scope: !10338)
!10341 = !DILocation(line: 3773, column: 17, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 3773, column: 7)
!10343 = !DILocation(line: 3773, column: 31, scope: !10342)
!10344 = !DILocation(line: 3773, column: 36, scope: !10342)
!10345 = !DILocation(line: 3773, column: 19, scope: !10342)
!10346 = !DILocation(line: 3773, column: 7, scope: !10338)
!10347 = !DILocation(line: 3775, column: 30, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 3774, column: 7)
!10349 = !DILocation(line: 3775, column: 36, scope: !10348)
!10350 = !DILocation(line: 3775, column: 41, scope: !10348)
!10351 = !DILocation(line: 3775, column: 43, scope: !10348)
!10352 = !DILocation(line: 3775, column: 48, scope: !10348)
!10353 = !DILocation(line: 3775, column: 50, scope: !10348)
!10354 = !DILocation(line: 3775, column: 49, scope: !10348)
!10355 = !DILocation(line: 3775, column: 52, scope: !10348)
!10356 = !DILocation(line: 3775, column: 57, scope: !10348)
!10357 = !DILocation(line: 3775, column: 65, scope: !10348)
!10358 = !DILocation(line: 3775, column: 11, scope: !10348)
!10359 = !DILocation(line: 3775, column: 10, scope: !10348)
!10360 = !DILocation(line: 3776, column: 13, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 3776, column: 13)
!10362 = !DILocation(line: 3776, column: 15, scope: !10361)
!10363 = !DILocation(line: 3776, column: 13, scope: !10348)
!10364 = !DILocation(line: 3777, column: 11, scope: !10361)
!10365 = !DILocation(line: 3778, column: 15, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 3778, column: 9)
!10367 = !DILocation(line: 3778, column: 14, scope: !10366)
!10368 = !DILocation(line: 3778, column: 19, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 3778, column: 9)
!10370 = !DILocation(line: 3778, column: 33, scope: !10369)
!10371 = !DILocation(line: 3778, column: 38, scope: !10369)
!10372 = !DILocation(line: 3778, column: 21, scope: !10369)
!10373 = !DILocation(line: 3778, column: 9, scope: !10366)
!10374 = !DILocation(line: 3780, column: 11, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 3779, column: 9)
!10376 = !DILocation(line: 3781, column: 11, scope: !10375)
!10377 = !DILocation(line: 3782, column: 11, scope: !10375)
!10378 = !DILocation(line: 3783, column: 12, scope: !10375)
!10379 = !DILocation(line: 3784, column: 12, scope: !10375)
!10380 = !DILocation(line: 3785, column: 9, scope: !10375)
!10381 = !DILocation(line: 3778, column: 46, scope: !10369)
!10382 = !DILocation(line: 3778, column: 9, scope: !10369)
!10383 = distinct !{!10383, !10373, !10384}
!10384 = !DILocation(line: 3785, column: 9, scope: !10366)
!10385 = !DILocation(line: 3786, column: 33, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 3786, column: 13)
!10387 = !DILocation(line: 3786, column: 39, scope: !10386)
!10388 = !DILocation(line: 3786, column: 13, scope: !10386)
!10389 = !DILocation(line: 3786, column: 50, scope: !10386)
!10390 = !DILocation(line: 3786, column: 13, scope: !10348)
!10391 = !DILocation(line: 3787, column: 11, scope: !10386)
!10392 = !DILocation(line: 3788, column: 7, scope: !10348)
!10393 = !DILocation(line: 3773, column: 45, scope: !10342)
!10394 = !DILocation(line: 3773, column: 7, scope: !10342)
!10395 = distinct !{!10395, !10346, !10396}
!10396 = !DILocation(line: 3788, column: 7, scope: !10338)
!10397 = !DILocation(line: 3789, column: 7, scope: !10339)
!10398 = !DILocation(line: 3791, column: 21, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 3791, column: 7)
!10400 = !DILocation(line: 3791, column: 7, scope: !10399)
!10401 = !DILocation(line: 3791, column: 30, scope: !10399)
!10402 = !DILocation(line: 3791, column: 7, scope: !10172)
!10403 = !DILocation(line: 3793, column: 13, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !3, line: 3793, column: 7)
!10405 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 3792, column: 5)
!10406 = !DILocation(line: 3793, column: 12, scope: !10404)
!10407 = !DILocation(line: 3793, column: 17, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 3793, column: 7)
!10409 = !DILocation(line: 3793, column: 31, scope: !10408)
!10410 = !DILocation(line: 3793, column: 36, scope: !10408)
!10411 = !DILocation(line: 3793, column: 19, scope: !10408)
!10412 = !DILocation(line: 3793, column: 7, scope: !10404)
!10413 = !DILocation(line: 3795, column: 30, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 3794, column: 7)
!10415 = !DILocation(line: 3795, column: 36, scope: !10414)
!10416 = !DILocation(line: 3795, column: 41, scope: !10414)
!10417 = !DILocation(line: 3795, column: 43, scope: !10414)
!10418 = !DILocation(line: 3795, column: 48, scope: !10414)
!10419 = !DILocation(line: 3795, column: 50, scope: !10414)
!10420 = !DILocation(line: 3795, column: 49, scope: !10414)
!10421 = !DILocation(line: 3795, column: 52, scope: !10414)
!10422 = !DILocation(line: 3795, column: 57, scope: !10414)
!10423 = !DILocation(line: 3795, column: 65, scope: !10414)
!10424 = !DILocation(line: 3795, column: 11, scope: !10414)
!10425 = !DILocation(line: 3795, column: 10, scope: !10414)
!10426 = !DILocation(line: 3796, column: 13, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 3796, column: 13)
!10428 = !DILocation(line: 3796, column: 15, scope: !10427)
!10429 = !DILocation(line: 3796, column: 13, scope: !10414)
!10430 = !DILocation(line: 3797, column: 11, scope: !10427)
!10431 = !DILocation(line: 3798, column: 15, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 3798, column: 9)
!10433 = !DILocation(line: 3798, column: 14, scope: !10432)
!10434 = !DILocation(line: 3798, column: 19, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 3798, column: 9)
!10436 = !DILocation(line: 3798, column: 33, scope: !10435)
!10437 = !DILocation(line: 3798, column: 38, scope: !10435)
!10438 = !DILocation(line: 3798, column: 21, scope: !10435)
!10439 = !DILocation(line: 3798, column: 9, scope: !10432)
!10440 = !DILocation(line: 3800, column: 11, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 3799, column: 9)
!10442 = !DILocation(line: 3801, column: 11, scope: !10441)
!10443 = !DILocation(line: 3802, column: 11, scope: !10441)
!10444 = !DILocation(line: 3803, column: 12, scope: !10441)
!10445 = !DILocation(line: 3804, column: 9, scope: !10441)
!10446 = !DILocation(line: 3798, column: 46, scope: !10435)
!10447 = !DILocation(line: 3798, column: 9, scope: !10435)
!10448 = distinct !{!10448, !10439, !10449}
!10449 = !DILocation(line: 3804, column: 9, scope: !10432)
!10450 = !DILocation(line: 3805, column: 33, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 3805, column: 13)
!10452 = !DILocation(line: 3805, column: 39, scope: !10451)
!10453 = !DILocation(line: 3805, column: 13, scope: !10451)
!10454 = !DILocation(line: 3805, column: 50, scope: !10451)
!10455 = !DILocation(line: 3805, column: 13, scope: !10414)
!10456 = !DILocation(line: 3806, column: 11, scope: !10451)
!10457 = !DILocation(line: 3807, column: 7, scope: !10414)
!10458 = !DILocation(line: 3793, column: 45, scope: !10408)
!10459 = !DILocation(line: 3793, column: 7, scope: !10408)
!10460 = distinct !{!10460, !10412, !10461}
!10461 = !DILocation(line: 3807, column: 7, scope: !10404)
!10462 = !DILocation(line: 3808, column: 7, scope: !10405)
!10463 = !DILocation(line: 3810, column: 21, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 3810, column: 7)
!10465 = !DILocation(line: 3810, column: 7, scope: !10464)
!10466 = !DILocation(line: 3810, column: 32, scope: !10464)
!10467 = !DILocation(line: 3810, column: 7, scope: !10172)
!10468 = !DILocation(line: 3812, column: 13, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10470, file: !3, line: 3812, column: 7)
!10470 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 3811, column: 5)
!10471 = !DILocation(line: 3812, column: 12, scope: !10469)
!10472 = !DILocation(line: 3812, column: 17, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 3812, column: 7)
!10474 = !DILocation(line: 3812, column: 31, scope: !10473)
!10475 = !DILocation(line: 3812, column: 36, scope: !10473)
!10476 = !DILocation(line: 3812, column: 19, scope: !10473)
!10477 = !DILocation(line: 3812, column: 7, scope: !10469)
!10478 = !DILocation(line: 3814, column: 30, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 3813, column: 7)
!10480 = !DILocation(line: 3814, column: 36, scope: !10479)
!10481 = !DILocation(line: 3814, column: 41, scope: !10479)
!10482 = !DILocation(line: 3814, column: 43, scope: !10479)
!10483 = !DILocation(line: 3814, column: 48, scope: !10479)
!10484 = !DILocation(line: 3814, column: 50, scope: !10479)
!10485 = !DILocation(line: 3814, column: 49, scope: !10479)
!10486 = !DILocation(line: 3814, column: 52, scope: !10479)
!10487 = !DILocation(line: 3814, column: 57, scope: !10479)
!10488 = !DILocation(line: 3814, column: 65, scope: !10479)
!10489 = !DILocation(line: 3814, column: 11, scope: !10479)
!10490 = !DILocation(line: 3814, column: 10, scope: !10479)
!10491 = !DILocation(line: 3815, column: 13, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 3815, column: 13)
!10493 = !DILocation(line: 3815, column: 15, scope: !10492)
!10494 = !DILocation(line: 3815, column: 13, scope: !10479)
!10495 = !DILocation(line: 3816, column: 11, scope: !10492)
!10496 = !DILocation(line: 3817, column: 15, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 3817, column: 9)
!10498 = !DILocation(line: 3817, column: 14, scope: !10497)
!10499 = !DILocation(line: 3817, column: 19, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 3817, column: 9)
!10501 = !DILocation(line: 3817, column: 33, scope: !10500)
!10502 = !DILocation(line: 3817, column: 38, scope: !10500)
!10503 = !DILocation(line: 3817, column: 21, scope: !10500)
!10504 = !DILocation(line: 3817, column: 9, scope: !10497)
!10505 = !DILocation(line: 3819, column: 11, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10500, file: !3, line: 3818, column: 9)
!10507 = !DILocation(line: 3820, column: 11, scope: !10506)
!10508 = !DILocation(line: 3821, column: 11, scope: !10506)
!10509 = !DILocation(line: 3822, column: 12, scope: !10506)
!10510 = !DILocation(line: 3823, column: 9, scope: !10506)
!10511 = !DILocation(line: 3817, column: 46, scope: !10500)
!10512 = !DILocation(line: 3817, column: 9, scope: !10500)
!10513 = distinct !{!10513, !10504, !10514}
!10514 = !DILocation(line: 3823, column: 9, scope: !10497)
!10515 = !DILocation(line: 3824, column: 33, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 3824, column: 13)
!10517 = !DILocation(line: 3824, column: 39, scope: !10516)
!10518 = !DILocation(line: 3824, column: 13, scope: !10516)
!10519 = !DILocation(line: 3824, column: 50, scope: !10516)
!10520 = !DILocation(line: 3824, column: 13, scope: !10479)
!10521 = !DILocation(line: 3825, column: 11, scope: !10516)
!10522 = !DILocation(line: 3826, column: 7, scope: !10479)
!10523 = !DILocation(line: 3812, column: 45, scope: !10473)
!10524 = !DILocation(line: 3812, column: 7, scope: !10473)
!10525 = distinct !{!10525, !10477, !10526}
!10526 = !DILocation(line: 3826, column: 7, scope: !10469)
!10527 = !DILocation(line: 3827, column: 7, scope: !10470)
!10528 = !DILocation(line: 3829, column: 21, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 3829, column: 7)
!10530 = !DILocation(line: 3829, column: 7, scope: !10529)
!10531 = !DILocation(line: 3829, column: 33, scope: !10529)
!10532 = !DILocation(line: 3829, column: 7, scope: !10172)
!10533 = !DILocation(line: 3831, column: 13, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 3831, column: 7)
!10535 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 3830, column: 5)
!10536 = !DILocation(line: 3831, column: 12, scope: !10534)
!10537 = !DILocation(line: 3831, column: 17, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 3831, column: 7)
!10539 = !DILocation(line: 3831, column: 31, scope: !10538)
!10540 = !DILocation(line: 3831, column: 36, scope: !10538)
!10541 = !DILocation(line: 3831, column: 19, scope: !10538)
!10542 = !DILocation(line: 3831, column: 7, scope: !10534)
!10543 = !DILocation(line: 3833, column: 30, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 3832, column: 7)
!10545 = !DILocation(line: 3833, column: 36, scope: !10544)
!10546 = !DILocation(line: 3833, column: 41, scope: !10544)
!10547 = !DILocation(line: 3833, column: 43, scope: !10544)
!10548 = !DILocation(line: 3833, column: 48, scope: !10544)
!10549 = !DILocation(line: 3833, column: 50, scope: !10544)
!10550 = !DILocation(line: 3833, column: 49, scope: !10544)
!10551 = !DILocation(line: 3833, column: 52, scope: !10544)
!10552 = !DILocation(line: 3833, column: 57, scope: !10544)
!10553 = !DILocation(line: 3833, column: 65, scope: !10544)
!10554 = !DILocation(line: 3833, column: 11, scope: !10544)
!10555 = !DILocation(line: 3833, column: 10, scope: !10544)
!10556 = !DILocation(line: 3834, column: 13, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 3834, column: 13)
!10558 = !DILocation(line: 3834, column: 15, scope: !10557)
!10559 = !DILocation(line: 3834, column: 13, scope: !10544)
!10560 = !DILocation(line: 3835, column: 11, scope: !10557)
!10561 = !DILocation(line: 3836, column: 15, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 3836, column: 9)
!10563 = !DILocation(line: 3836, column: 14, scope: !10562)
!10564 = !DILocation(line: 3836, column: 19, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 3836, column: 9)
!10566 = !DILocation(line: 3836, column: 33, scope: !10565)
!10567 = !DILocation(line: 3836, column: 38, scope: !10565)
!10568 = !DILocation(line: 3836, column: 21, scope: !10565)
!10569 = !DILocation(line: 3836, column: 9, scope: !10562)
!10570 = !DILocation(line: 3838, column: 11, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 3837, column: 9)
!10572 = !DILocation(line: 3839, column: 11, scope: !10571)
!10573 = !DILocation(line: 3840, column: 11, scope: !10571)
!10574 = !DILocation(line: 3841, column: 11, scope: !10571)
!10575 = !DILocation(line: 3842, column: 12, scope: !10571)
!10576 = !DILocation(line: 3843, column: 9, scope: !10571)
!10577 = !DILocation(line: 3836, column: 46, scope: !10565)
!10578 = !DILocation(line: 3836, column: 9, scope: !10565)
!10579 = distinct !{!10579, !10569, !10580}
!10580 = !DILocation(line: 3843, column: 9, scope: !10562)
!10581 = !DILocation(line: 3844, column: 33, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 3844, column: 13)
!10583 = !DILocation(line: 3844, column: 39, scope: !10582)
!10584 = !DILocation(line: 3844, column: 13, scope: !10582)
!10585 = !DILocation(line: 3844, column: 50, scope: !10582)
!10586 = !DILocation(line: 3844, column: 13, scope: !10544)
!10587 = !DILocation(line: 3845, column: 11, scope: !10582)
!10588 = !DILocation(line: 3846, column: 7, scope: !10544)
!10589 = !DILocation(line: 3831, column: 45, scope: !10538)
!10590 = !DILocation(line: 3831, column: 7, scope: !10538)
!10591 = distinct !{!10591, !10542, !10592}
!10592 = !DILocation(line: 3846, column: 7, scope: !10534)
!10593 = !DILocation(line: 3847, column: 7, scope: !10535)
!10594 = !DILocation(line: 3849, column: 21, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 3849, column: 7)
!10596 = !DILocation(line: 3849, column: 7, scope: !10595)
!10597 = !DILocation(line: 3849, column: 33, scope: !10595)
!10598 = !DILocation(line: 3849, column: 7, scope: !10172)
!10599 = !DILocation(line: 3851, column: 13, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 3851, column: 7)
!10601 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 3850, column: 5)
!10602 = !DILocation(line: 3851, column: 12, scope: !10600)
!10603 = !DILocation(line: 3851, column: 17, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10600, file: !3, line: 3851, column: 7)
!10605 = !DILocation(line: 3851, column: 31, scope: !10604)
!10606 = !DILocation(line: 3851, column: 36, scope: !10604)
!10607 = !DILocation(line: 3851, column: 19, scope: !10604)
!10608 = !DILocation(line: 3851, column: 7, scope: !10600)
!10609 = !DILocation(line: 3853, column: 30, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 3852, column: 7)
!10611 = !DILocation(line: 3853, column: 36, scope: !10610)
!10612 = !DILocation(line: 3853, column: 41, scope: !10610)
!10613 = !DILocation(line: 3853, column: 43, scope: !10610)
!10614 = !DILocation(line: 3853, column: 48, scope: !10610)
!10615 = !DILocation(line: 3853, column: 50, scope: !10610)
!10616 = !DILocation(line: 3853, column: 49, scope: !10610)
!10617 = !DILocation(line: 3853, column: 52, scope: !10610)
!10618 = !DILocation(line: 3853, column: 57, scope: !10610)
!10619 = !DILocation(line: 3853, column: 65, scope: !10610)
!10620 = !DILocation(line: 3853, column: 11, scope: !10610)
!10621 = !DILocation(line: 3853, column: 10, scope: !10610)
!10622 = !DILocation(line: 3854, column: 13, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 3854, column: 13)
!10624 = !DILocation(line: 3854, column: 15, scope: !10623)
!10625 = !DILocation(line: 3854, column: 13, scope: !10610)
!10626 = !DILocation(line: 3855, column: 11, scope: !10623)
!10627 = !DILocation(line: 3856, column: 15, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 3856, column: 9)
!10629 = !DILocation(line: 3856, column: 14, scope: !10628)
!10630 = !DILocation(line: 3856, column: 19, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 3856, column: 9)
!10632 = !DILocation(line: 3856, column: 33, scope: !10631)
!10633 = !DILocation(line: 3856, column: 38, scope: !10631)
!10634 = !DILocation(line: 3856, column: 21, scope: !10631)
!10635 = !DILocation(line: 3856, column: 9, scope: !10628)
!10636 = !DILocation(line: 3858, column: 11, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10631, file: !3, line: 3857, column: 9)
!10638 = !DILocation(line: 3859, column: 11, scope: !10637)
!10639 = !DILocation(line: 3860, column: 11, scope: !10637)
!10640 = !DILocation(line: 3861, column: 12, scope: !10637)
!10641 = !DILocation(line: 3862, column: 12, scope: !10637)
!10642 = !DILocation(line: 3863, column: 9, scope: !10637)
!10643 = !DILocation(line: 3856, column: 46, scope: !10631)
!10644 = !DILocation(line: 3856, column: 9, scope: !10631)
!10645 = distinct !{!10645, !10635, !10646}
!10646 = !DILocation(line: 3863, column: 9, scope: !10628)
!10647 = !DILocation(line: 3864, column: 33, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 3864, column: 13)
!10649 = !DILocation(line: 3864, column: 39, scope: !10648)
!10650 = !DILocation(line: 3864, column: 13, scope: !10648)
!10651 = !DILocation(line: 3864, column: 50, scope: !10648)
!10652 = !DILocation(line: 3864, column: 13, scope: !10610)
!10653 = !DILocation(line: 3865, column: 11, scope: !10648)
!10654 = !DILocation(line: 3866, column: 7, scope: !10610)
!10655 = !DILocation(line: 3851, column: 45, scope: !10604)
!10656 = !DILocation(line: 3851, column: 7, scope: !10604)
!10657 = distinct !{!10657, !10608, !10658}
!10658 = !DILocation(line: 3866, column: 7, scope: !10600)
!10659 = !DILocation(line: 3867, column: 7, scope: !10601)
!10660 = !DILocation(line: 3869, column: 17, scope: !10172)
!10661 = !DILocation(line: 3869, column: 10, scope: !10172)
!10662 = !DILocation(line: 3869, column: 9, scope: !10172)
!10663 = !DILocation(line: 3870, column: 9, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 3870, column: 3)
!10665 = !DILocation(line: 3870, column: 8, scope: !10664)
!10666 = !DILocation(line: 3870, column: 13, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 3870, column: 3)
!10668 = !DILocation(line: 3870, column: 27, scope: !10667)
!10669 = !DILocation(line: 3870, column: 32, scope: !10667)
!10670 = !DILocation(line: 3870, column: 15, scope: !10667)
!10671 = !DILocation(line: 3870, column: 3, scope: !10664)
!10672 = !DILocation(line: 3872, column: 26, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 3871, column: 3)
!10674 = !DILocation(line: 3872, column: 32, scope: !10673)
!10675 = !DILocation(line: 3872, column: 37, scope: !10673)
!10676 = !DILocation(line: 3872, column: 39, scope: !10673)
!10677 = !DILocation(line: 3872, column: 44, scope: !10673)
!10678 = !DILocation(line: 3872, column: 46, scope: !10673)
!10679 = !DILocation(line: 3872, column: 45, scope: !10673)
!10680 = !DILocation(line: 3872, column: 48, scope: !10673)
!10681 = !DILocation(line: 3872, column: 53, scope: !10673)
!10682 = !DILocation(line: 3872, column: 61, scope: !10673)
!10683 = !DILocation(line: 3872, column: 7, scope: !10673)
!10684 = !DILocation(line: 3872, column: 6, scope: !10673)
!10685 = !DILocation(line: 3873, column: 9, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 3873, column: 9)
!10687 = !DILocation(line: 3873, column: 11, scope: !10686)
!10688 = !DILocation(line: 3873, column: 9, scope: !10673)
!10689 = !DILocation(line: 3874, column: 7, scope: !10686)
!10690 = !DILocation(line: 3875, column: 36, scope: !10673)
!10691 = !DILocation(line: 3875, column: 13, scope: !10673)
!10692 = !DILocation(line: 3875, column: 12, scope: !10673)
!10693 = !DILocation(line: 3876, column: 11, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 3876, column: 5)
!10695 = !DILocation(line: 3876, column: 10, scope: !10694)
!10696 = !DILocation(line: 3876, column: 15, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 3876, column: 5)
!10698 = !DILocation(line: 3876, column: 29, scope: !10697)
!10699 = !DILocation(line: 3876, column: 34, scope: !10697)
!10700 = !DILocation(line: 3876, column: 17, scope: !10697)
!10701 = !DILocation(line: 3876, column: 5, scope: !10694)
!10702 = !DILocalVariable(name: "i", scope: !10703, file: !3, line: 3879, type: !470)
!10703 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 3877, column: 5)
!10704 = !DILocation(line: 3879, column: 9, scope: !10703)
!10705 = !DILocation(line: 3881, column: 13, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 3881, column: 7)
!10707 = !DILocation(line: 3881, column: 12, scope: !10706)
!10708 = !DILocation(line: 3881, column: 17, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 3881, column: 7)
!10710 = !DILocation(line: 3881, column: 31, scope: !10709)
!10711 = !DILocation(line: 3881, column: 19, scope: !10709)
!10712 = !DILocation(line: 3881, column: 7, scope: !10706)
!10713 = !DILocation(line: 3883, column: 17, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10709, file: !3, line: 3882, column: 7)
!10715 = !DILocation(line: 3883, column: 29, scope: !10714)
!10716 = !DILocation(line: 3883, column: 9, scope: !10714)
!10717 = !DILocation(line: 3888, column: 13, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 3887, column: 11)
!10719 = distinct !DILexicalBlock(scope: !10714, file: !3, line: 3884, column: 9)
!10720 = !DILocation(line: 3889, column: 13, scope: !10718)
!10721 = !DILocation(line: 3894, column: 13, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 3893, column: 11)
!10723 = !DILocation(line: 3895, column: 13, scope: !10722)
!10724 = !DILocation(line: 3900, column: 13, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 3899, column: 11)
!10726 = !DILocation(line: 3901, column: 13, scope: !10725)
!10727 = !DILocation(line: 3905, column: 13, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 3904, column: 11)
!10729 = !DILocation(line: 3906, column: 13, scope: !10728)
!10730 = !DILocation(line: 3910, column: 13, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 3909, column: 11)
!10732 = !DILocation(line: 3911, column: 13, scope: !10731)
!10733 = !DILocation(line: 3915, column: 13, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 3915, column: 13)
!10735 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 3915, column: 13)
!10736 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 3914, column: 11)
!10737 = !DILocation(line: 3915, column: 13, scope: !10735)
!10738 = !DILocation(line: 3916, column: 13, scope: !10736)
!10739 = !DILocation(line: 3920, column: 13, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 3919, column: 11)
!10741 = !DILocation(line: 3921, column: 13, scope: !10740)
!10742 = !DILocation(line: 3922, column: 13, scope: !10740)
!10743 = !DILocation(line: 3923, column: 13, scope: !10740)
!10744 = !DILocation(line: 3926, column: 13, scope: !10719)
!10745 = !DILocation(line: 3928, column: 10, scope: !10714)
!10746 = !DILocation(line: 3929, column: 7, scope: !10714)
!10747 = !DILocation(line: 3881, column: 40, scope: !10709)
!10748 = !DILocation(line: 3881, column: 7, scope: !10709)
!10749 = distinct !{!10749, !10712, !10750}
!10750 = !DILocation(line: 3929, column: 7, scope: !10706)
!10751 = !DILocation(line: 3930, column: 8, scope: !10703)
!10752 = !DILocation(line: 3931, column: 5, scope: !10703)
!10753 = !DILocation(line: 3876, column: 42, scope: !10697)
!10754 = !DILocation(line: 3876, column: 5, scope: !10697)
!10755 = distinct !{!10755, !10701, !10756}
!10756 = !DILocation(line: 3931, column: 5, scope: !10694)
!10757 = !DILocation(line: 3932, column: 29, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 3932, column: 9)
!10759 = !DILocation(line: 3932, column: 35, scope: !10758)
!10760 = !DILocation(line: 3932, column: 9, scope: !10758)
!10761 = !DILocation(line: 3932, column: 46, scope: !10758)
!10762 = !DILocation(line: 3932, column: 9, scope: !10673)
!10763 = !DILocation(line: 3933, column: 7, scope: !10758)
!10764 = !DILocation(line: 3934, column: 3, scope: !10673)
!10765 = !DILocation(line: 3870, column: 41, scope: !10667)
!10766 = !DILocation(line: 3870, column: 3, scope: !10667)
!10767 = distinct !{!10767, !10671, !10768}
!10768 = !DILocation(line: 3934, column: 3, scope: !10664)
!10769 = !DILocation(line: 3935, column: 1, scope: !10172)
!10770 = distinct !DISubprogram(name: "InterpolateMagickPixelPacket", scope: !3, file: !3, line: 4244, type: !10771, scopeLine: 4248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !714)
!10771 = !DISubroutineType(types: !10772)
!10772 = !{!451, !681, !10773, !10778, !7, !7, !442, !1071}
!10773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10774, size: 64)
!10774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10775)
!10775 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !10776, line: 50, baseType: !10777)
!10776 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!10777 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !333, line: 160, flags: DIFlagFwdDecl)
!10778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!10779 = !DILocalVariable(name: "image", arg: 1, scope: !10770, file: !3, line: 4244, type: !681)
!10780 = !DILocation(line: 4244, column: 74, scope: !10770)
!10781 = !DILocalVariable(name: "image_view", arg: 2, scope: !10770, file: !3, line: 4245, type: !10773)
!10782 = !DILocation(line: 4245, column: 20, scope: !10770)
!10783 = !DILocalVariable(name: "method", arg: 3, scope: !10770, file: !3, line: 4245, type: !10778)
!10784 = !DILocation(line: 4245, column: 60, scope: !10770)
!10785 = !DILocalVariable(name: "x", arg: 4, scope: !10770, file: !3, line: 4246, type: !7)
!10786 = !DILocation(line: 4246, column: 16, scope: !10770)
!10787 = !DILocalVariable(name: "y", arg: 5, scope: !10770, file: !3, line: 4246, type: !7)
!10788 = !DILocation(line: 4246, column: 31, scope: !10770)
!10789 = !DILocalVariable(name: "pixel", arg: 6, scope: !10770, file: !3, line: 4246, type: !442)
!10790 = !DILocation(line: 4246, column: 52, scope: !10770)
!10791 = !DILocalVariable(name: "exception", arg: 7, scope: !10770, file: !3, line: 4247, type: !1071)
!10792 = !DILocation(line: 4247, column: 18, scope: !10770)
!10793 = !DILocalVariable(name: "gamma", scope: !10770, file: !3, line: 4250, type: !6)
!10794 = !DILocation(line: 4250, column: 5, scope: !10770)
!10795 = !DILocalVariable(name: "status", scope: !10770, file: !3, line: 4253, type: !451)
!10796 = !DILocation(line: 4253, column: 5, scope: !10770)
!10797 = !DILocalVariable(name: "pixels", scope: !10770, file: !3, line: 4256, type: !10798)
!10798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 7168, elements: !10799)
!10799 = !{!10800}
!10800 = !DISubrange(count: 16)
!10801 = !DILocation(line: 4256, column: 5, scope: !10770)
!10802 = !DILocalVariable(name: "alpha", scope: !10770, file: !3, line: 4259, type: !10803)
!10803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !458, size: 512, elements: !10799)
!10804 = !DILocation(line: 4259, column: 5, scope: !10770)
!10805 = !DILocalVariable(name: "indexes", scope: !10770, file: !3, line: 4262, type: !685)
!10806 = !DILocation(line: 4262, column: 6, scope: !10770)
!10807 = !DILocalVariable(name: "p", scope: !10770, file: !3, line: 4265, type: !683)
!10808 = !DILocation(line: 4265, column: 6, scope: !10770)
!10809 = !DILocalVariable(name: "i", scope: !10770, file: !3, line: 4268, type: !470)
!10810 = !DILocation(line: 4268, column: 5, scope: !10770)
!10811 = !DILocalVariable(name: "x_offset", scope: !10770, file: !3, line: 4271, type: !470)
!10812 = !DILocation(line: 4271, column: 5, scope: !10770)
!10813 = !DILocalVariable(name: "y_offset", scope: !10770, file: !3, line: 4272, type: !470)
!10814 = !DILocation(line: 4272, column: 5, scope: !10770)
!10815 = !DILocalVariable(name: "interpolate", scope: !10770, file: !3, line: 4275, type: !661)
!10816 = !DILocation(line: 4275, column: 5, scope: !10770)
!10817 = !DILocation(line: 4280, column: 9, scope: !10770)
!10818 = !DILocation(line: 4281, column: 28, scope: !10770)
!10819 = !DILocation(line: 4281, column: 22, scope: !10770)
!10820 = !DILocation(line: 4281, column: 12, scope: !10770)
!10821 = !DILocation(line: 4281, column: 11, scope: !10770)
!10822 = !DILocation(line: 4282, column: 28, scope: !10770)
!10823 = !DILocation(line: 4282, column: 22, scope: !10770)
!10824 = !DILocation(line: 4282, column: 12, scope: !10770)
!10825 = !DILocation(line: 4282, column: 11, scope: !10770)
!10826 = !DILocation(line: 4283, column: 17, scope: !10770)
!10827 = !DILocation(line: 4283, column: 15, scope: !10770)
!10828 = !DILocation(line: 4284, column: 7, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10770, file: !3, line: 4284, column: 7)
!10830 = !DILocation(line: 4284, column: 19, scope: !10829)
!10831 = !DILocation(line: 4284, column: 7, scope: !10770)
!10832 = !DILocation(line: 4285, column: 17, scope: !10829)
!10833 = !DILocation(line: 4285, column: 24, scope: !10829)
!10834 = !DILocation(line: 4285, column: 16, scope: !10829)
!10835 = !DILocation(line: 4285, column: 5, scope: !10829)
!10836 = !DILocation(line: 4286, column: 11, scope: !10770)
!10837 = !DILocation(line: 4286, column: 3, scope: !10770)
!10838 = !DILocalVariable(name: "count", scope: !10839, file: !3, line: 4293, type: !470)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4291, column: 5)
!10840 = distinct !DILexicalBlock(scope: !10770, file: !3, line: 4287, column: 3)
!10841 = !DILocation(line: 4293, column: 9, scope: !10839)
!10842 = !DILocation(line: 4295, column: 12, scope: !10839)
!10843 = !DILocation(line: 4296, column: 11, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 4296, column: 11)
!10845 = !DILocation(line: 4296, column: 23, scope: !10844)
!10846 = !DILocation(line: 4296, column: 11, scope: !10839)
!10847 = !DILocation(line: 4298, column: 16, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 4297, column: 9)
!10849 = !DILocation(line: 4299, column: 37, scope: !10848)
!10850 = !DILocation(line: 4299, column: 38, scope: !10848)
!10851 = !DILocation(line: 4299, column: 31, scope: !10848)
!10852 = !DILocation(line: 4299, column: 43, scope: !10848)
!10853 = !DILocation(line: 4299, column: 20, scope: !10848)
!10854 = !DILocation(line: 4299, column: 19, scope: !10848)
!10855 = !DILocation(line: 4300, column: 37, scope: !10848)
!10856 = !DILocation(line: 4300, column: 38, scope: !10848)
!10857 = !DILocation(line: 4300, column: 31, scope: !10848)
!10858 = !DILocation(line: 4300, column: 43, scope: !10848)
!10859 = !DILocation(line: 4300, column: 20, scope: !10848)
!10860 = !DILocation(line: 4300, column: 19, scope: !10848)
!10861 = !DILocation(line: 4301, column: 9, scope: !10848)
!10862 = !DILocation(line: 4303, column: 13, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 4303, column: 13)
!10864 = !DILocation(line: 4303, column: 25, scope: !10863)
!10865 = !DILocation(line: 4303, column: 13, scope: !10844)
!10866 = !DILocation(line: 4305, column: 18, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 4304, column: 11)
!10868 = !DILocation(line: 4306, column: 21, scope: !10867)
!10869 = !DILocation(line: 4307, column: 21, scope: !10867)
!10870 = !DILocation(line: 4308, column: 11, scope: !10867)
!10871 = !DILocation(line: 4309, column: 35, scope: !10839)
!10872 = !DILocation(line: 4309, column: 46, scope: !10839)
!10873 = !DILocation(line: 4309, column: 55, scope: !10839)
!10874 = !DILocation(line: 4309, column: 73, scope: !10839)
!10875 = !DILocation(line: 4310, column: 18, scope: !10839)
!10876 = !DILocation(line: 4310, column: 24, scope: !10839)
!10877 = !DILocation(line: 4309, column: 9, scope: !10839)
!10878 = !DILocation(line: 4309, column: 8, scope: !10839)
!10879 = !DILocation(line: 4311, column: 11, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 4311, column: 11)
!10881 = !DILocation(line: 4311, column: 13, scope: !10880)
!10882 = !DILocation(line: 4311, column: 11, scope: !10839)
!10883 = !DILocation(line: 4313, column: 17, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 4312, column: 9)
!10885 = !DILocation(line: 4314, column: 11, scope: !10884)
!10886 = !DILocation(line: 4316, column: 45, scope: !10839)
!10887 = !DILocation(line: 4316, column: 15, scope: !10839)
!10888 = !DILocation(line: 4316, column: 14, scope: !10839)
!10889 = !DILocation(line: 4317, column: 7, scope: !10839)
!10890 = !DILocation(line: 4317, column: 14, scope: !10839)
!10891 = !DILocation(line: 4317, column: 17, scope: !10839)
!10892 = !DILocation(line: 4318, column: 7, scope: !10839)
!10893 = !DILocation(line: 4318, column: 14, scope: !10839)
!10894 = !DILocation(line: 4318, column: 19, scope: !10839)
!10895 = !DILocation(line: 4319, column: 7, scope: !10839)
!10896 = !DILocation(line: 4319, column: 14, scope: !10839)
!10897 = !DILocation(line: 4319, column: 18, scope: !10839)
!10898 = !DILocation(line: 4320, column: 7, scope: !10839)
!10899 = !DILocation(line: 4320, column: 14, scope: !10839)
!10900 = !DILocation(line: 4320, column: 21, scope: !10839)
!10901 = !DILocation(line: 4321, column: 7, scope: !10839)
!10902 = !DILocation(line: 4321, column: 14, scope: !10839)
!10903 = !DILocation(line: 4321, column: 19, scope: !10839)
!10904 = !DILocation(line: 4322, column: 14, scope: !10839)
!10905 = !DILocation(line: 4322, column: 12, scope: !10839)
!10906 = !DILocation(line: 4323, column: 28, scope: !10839)
!10907 = !DILocation(line: 4323, column: 34, scope: !10839)
!10908 = !DILocation(line: 4323, column: 7, scope: !10839)
!10909 = !DILocation(line: 4324, column: 13, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 4324, column: 7)
!10911 = !DILocation(line: 4324, column: 12, scope: !10910)
!10912 = !DILocation(line: 4324, column: 17, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10910, file: !3, line: 4324, column: 7)
!10914 = !DILocation(line: 4324, column: 31, scope: !10913)
!10915 = !DILocation(line: 4324, column: 19, scope: !10913)
!10916 = !DILocation(line: 4324, column: 7, scope: !10910)
!10917 = !DILocation(line: 4326, column: 37, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 4325, column: 7)
!10919 = !DILocation(line: 4326, column: 43, scope: !10918)
!10920 = !DILocation(line: 4326, column: 45, scope: !10918)
!10921 = !DILocation(line: 4326, column: 44, scope: !10918)
!10922 = !DILocation(line: 4326, column: 47, scope: !10918)
!10923 = !DILocation(line: 4326, column: 55, scope: !10918)
!10924 = !DILocation(line: 4326, column: 54, scope: !10918)
!10925 = !DILocation(line: 4326, column: 57, scope: !10918)
!10926 = !DILocation(line: 4326, column: 64, scope: !10918)
!10927 = !DILocation(line: 4326, column: 9, scope: !10918)
!10928 = !DILocation(line: 4328, column: 13, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10918, file: !3, line: 4328, column: 13)
!10930 = !DILocation(line: 4328, column: 22, scope: !10929)
!10931 = !DILocation(line: 4328, column: 13, scope: !10918)
!10932 = !DILocation(line: 4328, column: 35, scope: !10929)
!10933 = !DILocation(line: 4328, column: 29, scope: !10929)
!10934 = !DILocation(line: 4331, column: 37, scope: !10929)
!10935 = !DILocation(line: 4331, column: 15, scope: !10929)
!10936 = !DILocation(line: 4331, column: 14, scope: !10929)
!10937 = !DILocation(line: 4332, column: 21, scope: !10918)
!10938 = !DILocation(line: 4332, column: 27, scope: !10918)
!10939 = !DILocation(line: 4332, column: 37, scope: !10918)
!10940 = !DILocation(line: 4332, column: 26, scope: !10918)
!10941 = !DILocation(line: 4332, column: 9, scope: !10918)
!10942 = !DILocation(line: 4332, column: 16, scope: !10918)
!10943 = !DILocation(line: 4332, column: 19, scope: !10918)
!10944 = !DILocation(line: 4333, column: 23, scope: !10918)
!10945 = !DILocation(line: 4333, column: 29, scope: !10918)
!10946 = !DILocation(line: 4333, column: 39, scope: !10918)
!10947 = !DILocation(line: 4333, column: 28, scope: !10918)
!10948 = !DILocation(line: 4333, column: 9, scope: !10918)
!10949 = !DILocation(line: 4333, column: 16, scope: !10918)
!10950 = !DILocation(line: 4333, column: 21, scope: !10918)
!10951 = !DILocation(line: 4334, column: 22, scope: !10918)
!10952 = !DILocation(line: 4334, column: 28, scope: !10918)
!10953 = !DILocation(line: 4334, column: 38, scope: !10918)
!10954 = !DILocation(line: 4334, column: 27, scope: !10918)
!10955 = !DILocation(line: 4334, column: 9, scope: !10918)
!10956 = !DILocation(line: 4334, column: 16, scope: !10918)
!10957 = !DILocation(line: 4334, column: 20, scope: !10918)
!10958 = !DILocation(line: 4335, column: 23, scope: !10918)
!10959 = !DILocation(line: 4335, column: 29, scope: !10918)
!10960 = !DILocation(line: 4335, column: 39, scope: !10918)
!10961 = !DILocation(line: 4335, column: 28, scope: !10918)
!10962 = !DILocation(line: 4335, column: 9, scope: !10918)
!10963 = !DILocation(line: 4335, column: 16, scope: !10918)
!10964 = !DILocation(line: 4335, column: 21, scope: !10918)
!10965 = !DILocation(line: 4336, column: 25, scope: !10918)
!10966 = !DILocation(line: 4336, column: 35, scope: !10918)
!10967 = !DILocation(line: 4336, column: 9, scope: !10918)
!10968 = !DILocation(line: 4336, column: 16, scope: !10918)
!10969 = !DILocation(line: 4336, column: 23, scope: !10918)
!10970 = !DILocation(line: 4337, column: 7, scope: !10918)
!10971 = !DILocation(line: 4324, column: 39, scope: !10913)
!10972 = !DILocation(line: 4324, column: 7, scope: !10913)
!10973 = distinct !{!10973, !10916, !10974}
!10974 = !DILocation(line: 4337, column: 7, scope: !10910)
!10975 = !DILocation(line: 4338, column: 17, scope: !10839)
!10976 = !DILocation(line: 4338, column: 16, scope: !10839)
!10977 = !DILocation(line: 4338, column: 12, scope: !10839)
!10978 = !DILocation(line: 4339, column: 19, scope: !10839)
!10979 = !DILocation(line: 4339, column: 7, scope: !10839)
!10980 = !DILocation(line: 4339, column: 14, scope: !10839)
!10981 = !DILocation(line: 4339, column: 17, scope: !10839)
!10982 = !DILocation(line: 4340, column: 21, scope: !10839)
!10983 = !DILocation(line: 4340, column: 7, scope: !10839)
!10984 = !DILocation(line: 4340, column: 14, scope: !10839)
!10985 = !DILocation(line: 4340, column: 19, scope: !10839)
!10986 = !DILocation(line: 4341, column: 20, scope: !10839)
!10987 = !DILocation(line: 4341, column: 7, scope: !10839)
!10988 = !DILocation(line: 4341, column: 14, scope: !10839)
!10989 = !DILocation(line: 4341, column: 18, scope: !10839)
!10990 = !DILocation(line: 4342, column: 21, scope: !10839)
!10991 = !DILocation(line: 4342, column: 7, scope: !10839)
!10992 = !DILocation(line: 4342, column: 14, scope: !10839)
!10993 = !DILocation(line: 4342, column: 19, scope: !10839)
!10994 = !DILocation(line: 4343, column: 23, scope: !10839)
!10995 = !DILocation(line: 4343, column: 7, scope: !10839)
!10996 = !DILocation(line: 4343, column: 14, scope: !10839)
!10997 = !DILocation(line: 4343, column: 21, scope: !10839)
!10998 = !DILocation(line: 4344, column: 7, scope: !10839)
!10999 = !DILocalVariable(name: "index", scope: !11000, file: !3, line: 4349, type: !687)
!11000 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4347, column: 5)
!11001 = !DILocation(line: 4349, column: 9, scope: !11000)
!11002 = !DILocation(line: 4351, column: 12, scope: !11000)
!11003 = !DILocation(line: 4352, column: 28, scope: !11000)
!11004 = !DILocation(line: 4352, column: 35, scope: !11000)
!11005 = !DILocation(line: 4352, column: 42, scope: !11000)
!11006 = !DILocation(line: 4352, column: 66, scope: !11000)
!11007 = !DILocation(line: 4352, column: 7, scope: !11000)
!11008 = !DILocation(line: 4353, column: 7, scope: !11000)
!11009 = !DILocation(line: 4354, column: 5, scope: !11000)
!11010 = !DILocalVariable(name: "delta", scope: !11011, file: !3, line: 4359, type: !11012)
!11011 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4357, column: 5)
!11012 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !11013, line: 142, baseType: !11014)
!11013 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!11014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !11013, line: 137, size: 128, elements: !11015)
!11015 = !{!11016, !11017}
!11016 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !11014, file: !11013, line: 140, baseType: !6, size: 64)
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !11014, file: !11013, line: 141, baseType: !6, size: 64, offset: 64)
!11018 = !DILocation(line: 4359, column: 9, scope: !11011)
!11019 = !DILocalVariable(name: "epsilon", scope: !11011, file: !3, line: 4360, type: !11012)
!11020 = !DILocation(line: 4360, column: 9, scope: !11011)
!11021 = !DILocation(line: 4362, column: 35, scope: !11011)
!11022 = !DILocation(line: 4362, column: 46, scope: !11011)
!11023 = !DILocation(line: 4362, column: 55, scope: !11011)
!11024 = !DILocation(line: 4362, column: 68, scope: !11011)
!11025 = !DILocation(line: 4362, column: 9, scope: !11011)
!11026 = !DILocation(line: 4362, column: 8, scope: !11011)
!11027 = !DILocation(line: 4363, column: 11, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 4363, column: 11)
!11029 = !DILocation(line: 4363, column: 13, scope: !11028)
!11030 = !DILocation(line: 4363, column: 11, scope: !11011)
!11031 = !DILocation(line: 4365, column: 17, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 4364, column: 9)
!11033 = !DILocation(line: 4366, column: 11, scope: !11032)
!11034 = !DILocation(line: 4368, column: 45, scope: !11011)
!11035 = !DILocation(line: 4368, column: 15, scope: !11011)
!11036 = !DILocation(line: 4368, column: 14, scope: !11011)
!11037 = !DILocation(line: 4369, column: 13, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 4369, column: 7)
!11039 = !DILocation(line: 4369, column: 12, scope: !11038)
!11040 = !DILocation(line: 4369, column: 17, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 4369, column: 7)
!11042 = !DILocation(line: 4369, column: 19, scope: !11041)
!11043 = !DILocation(line: 4369, column: 7, scope: !11038)
!11044 = !DILocation(line: 4371, column: 30, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 4370, column: 7)
!11046 = !DILocation(line: 4371, column: 36, scope: !11045)
!11047 = !DILocation(line: 4371, column: 43, scope: !11045)
!11048 = !DILocation(line: 4371, column: 42, scope: !11045)
!11049 = !DILocation(line: 4371, column: 9, scope: !11045)
!11050 = !DILocation(line: 4372, column: 37, scope: !11045)
!11051 = !DILocation(line: 4372, column: 43, scope: !11045)
!11052 = !DILocation(line: 4372, column: 45, scope: !11045)
!11053 = !DILocation(line: 4372, column: 44, scope: !11045)
!11054 = !DILocation(line: 4372, column: 47, scope: !11045)
!11055 = !DILocation(line: 4372, column: 55, scope: !11045)
!11056 = !DILocation(line: 4372, column: 54, scope: !11045)
!11057 = !DILocation(line: 4372, column: 57, scope: !11045)
!11058 = !DILocation(line: 4372, column: 64, scope: !11045)
!11059 = !DILocation(line: 4372, column: 63, scope: !11045)
!11060 = !DILocation(line: 4372, column: 66, scope: !11045)
!11061 = !DILocation(line: 4372, column: 72, scope: !11045)
!11062 = !DILocation(line: 4372, column: 71, scope: !11045)
!11063 = !DILocation(line: 4372, column: 9, scope: !11045)
!11064 = !DILocation(line: 4373, column: 7, scope: !11045)
!11065 = !DILocation(line: 4369, column: 26, scope: !11041)
!11066 = !DILocation(line: 4369, column: 7, scope: !11041)
!11067 = distinct !{!11067, !11043, !11068}
!11068 = !DILocation(line: 4373, column: 7, scope: !11038)
!11069 = !DILocation(line: 4374, column: 15, scope: !11011)
!11070 = !DILocation(line: 4374, column: 17, scope: !11011)
!11071 = !DILocation(line: 4374, column: 16, scope: !11011)
!11072 = !DILocation(line: 4374, column: 13, scope: !11011)
!11073 = !DILocation(line: 4374, column: 14, scope: !11011)
!11074 = !DILocation(line: 4375, column: 15, scope: !11011)
!11075 = !DILocation(line: 4375, column: 17, scope: !11011)
!11076 = !DILocation(line: 4375, column: 16, scope: !11011)
!11077 = !DILocation(line: 4375, column: 13, scope: !11011)
!11078 = !DILocation(line: 4375, column: 14, scope: !11011)
!11079 = !DILocation(line: 4376, column: 27, scope: !11011)
!11080 = !DILocation(line: 4376, column: 20, scope: !11011)
!11081 = !DILocation(line: 4376, column: 15, scope: !11011)
!11082 = !DILocation(line: 4376, column: 16, scope: !11011)
!11083 = !DILocation(line: 4377, column: 27, scope: !11011)
!11084 = !DILocation(line: 4377, column: 20, scope: !11011)
!11085 = !DILocation(line: 4377, column: 15, scope: !11011)
!11086 = !DILocation(line: 4377, column: 16, scope: !11011)
!11087 = !DILocation(line: 4378, column: 23, scope: !11011)
!11088 = !DILocation(line: 4378, column: 34, scope: !11011)
!11089 = !DILocation(line: 4378, column: 36, scope: !11011)
!11090 = !DILocation(line: 4378, column: 35, scope: !11011)
!11091 = !DILocation(line: 4378, column: 51, scope: !11011)
!11092 = !DILocation(line: 4378, column: 53, scope: !11011)
!11093 = !DILocation(line: 4378, column: 52, scope: !11011)
!11094 = !DILocation(line: 4378, column: 44, scope: !11011)
!11095 = !DILocation(line: 4378, column: 24, scope: !11011)
!11096 = !DILocation(line: 4378, column: 69, scope: !11011)
!11097 = !DILocation(line: 4379, column: 18, scope: !11011)
!11098 = !DILocation(line: 4379, column: 20, scope: !11011)
!11099 = !DILocation(line: 4379, column: 19, scope: !11011)
!11100 = !DILocation(line: 4379, column: 35, scope: !11011)
!11101 = !DILocation(line: 4379, column: 37, scope: !11011)
!11102 = !DILocation(line: 4379, column: 36, scope: !11011)
!11103 = !DILocation(line: 4379, column: 28, scope: !11011)
!11104 = !DILocation(line: 4378, column: 70, scope: !11011)
!11105 = !DILocation(line: 4378, column: 62, scope: !11011)
!11106 = !DILocation(line: 4378, column: 12, scope: !11011)
!11107 = !DILocation(line: 4381, column: 11, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 4381, column: 11)
!11109 = !DILocation(line: 4381, column: 17, scope: !11108)
!11110 = !DILocation(line: 4381, column: 11, scope: !11011)
!11111 = !DILocation(line: 4381, column: 30, scope: !11108)
!11112 = !DILocation(line: 4381, column: 24, scope: !11108)
!11113 = !DILocation(line: 4383, column: 35, scope: !11011)
!11114 = !DILocation(line: 4383, column: 13, scope: !11011)
!11115 = !DILocation(line: 4383, column: 12, scope: !11011)
!11116 = !DILocation(line: 4384, column: 18, scope: !11011)
!11117 = !DILocation(line: 4384, column: 33, scope: !11011)
!11118 = !DILocation(line: 4384, column: 44, scope: !11011)
!11119 = !DILocation(line: 4384, column: 46, scope: !11011)
!11120 = !DILocation(line: 4384, column: 56, scope: !11011)
!11121 = !DILocation(line: 4384, column: 45, scope: !11011)
!11122 = !DILocation(line: 4384, column: 66, scope: !11011)
!11123 = !DILocation(line: 4385, column: 9, scope: !11011)
!11124 = !DILocation(line: 4385, column: 19, scope: !11011)
!11125 = !DILocation(line: 4384, column: 67, scope: !11011)
!11126 = !DILocation(line: 4384, column: 59, scope: !11011)
!11127 = !DILocation(line: 4384, column: 34, scope: !11011)
!11128 = !DILocation(line: 4385, column: 30, scope: !11011)
!11129 = !DILocation(line: 4385, column: 41, scope: !11011)
!11130 = !DILocation(line: 4385, column: 43, scope: !11011)
!11131 = !DILocation(line: 4385, column: 53, scope: !11011)
!11132 = !DILocation(line: 4385, column: 42, scope: !11011)
!11133 = !DILocation(line: 4385, column: 63, scope: !11011)
!11134 = !DILocation(line: 4385, column: 65, scope: !11011)
!11135 = !DILocation(line: 4385, column: 75, scope: !11011)
!11136 = !DILocation(line: 4385, column: 64, scope: !11011)
!11137 = !DILocation(line: 4385, column: 56, scope: !11011)
!11138 = !DILocation(line: 4385, column: 31, scope: !11011)
!11139 = !DILocation(line: 4385, column: 23, scope: !11011)
!11140 = !DILocation(line: 4384, column: 23, scope: !11011)
!11141 = !DILocation(line: 4384, column: 7, scope: !11011)
!11142 = !DILocation(line: 4384, column: 14, scope: !11011)
!11143 = !DILocation(line: 4384, column: 17, scope: !11011)
!11144 = !DILocation(line: 4386, column: 20, scope: !11011)
!11145 = !DILocation(line: 4386, column: 35, scope: !11011)
!11146 = !DILocation(line: 4386, column: 46, scope: !11011)
!11147 = !DILocation(line: 4386, column: 48, scope: !11011)
!11148 = !DILocation(line: 4386, column: 58, scope: !11011)
!11149 = !DILocation(line: 4386, column: 47, scope: !11011)
!11150 = !DILocation(line: 4386, column: 70, scope: !11011)
!11151 = !DILocation(line: 4387, column: 9, scope: !11011)
!11152 = !DILocation(line: 4387, column: 19, scope: !11011)
!11153 = !DILocation(line: 4386, column: 71, scope: !11011)
!11154 = !DILocation(line: 4386, column: 63, scope: !11011)
!11155 = !DILocation(line: 4386, column: 36, scope: !11011)
!11156 = !DILocation(line: 4387, column: 32, scope: !11011)
!11157 = !DILocation(line: 4387, column: 43, scope: !11011)
!11158 = !DILocation(line: 4387, column: 45, scope: !11011)
!11159 = !DILocation(line: 4387, column: 55, scope: !11011)
!11160 = !DILocation(line: 4387, column: 44, scope: !11011)
!11161 = !DILocation(line: 4387, column: 67, scope: !11011)
!11162 = !DILocation(line: 4388, column: 9, scope: !11011)
!11163 = !DILocation(line: 4388, column: 19, scope: !11011)
!11164 = !DILocation(line: 4387, column: 68, scope: !11011)
!11165 = !DILocation(line: 4387, column: 60, scope: !11011)
!11166 = !DILocation(line: 4387, column: 33, scope: !11011)
!11167 = !DILocation(line: 4387, column: 25, scope: !11011)
!11168 = !DILocation(line: 4386, column: 25, scope: !11011)
!11169 = !DILocation(line: 4386, column: 7, scope: !11011)
!11170 = !DILocation(line: 4386, column: 14, scope: !11011)
!11171 = !DILocation(line: 4386, column: 19, scope: !11011)
!11172 = !DILocation(line: 4389, column: 19, scope: !11011)
!11173 = !DILocation(line: 4389, column: 34, scope: !11011)
!11174 = !DILocation(line: 4389, column: 45, scope: !11011)
!11175 = !DILocation(line: 4389, column: 47, scope: !11011)
!11176 = !DILocation(line: 4389, column: 57, scope: !11011)
!11177 = !DILocation(line: 4389, column: 46, scope: !11011)
!11178 = !DILocation(line: 4389, column: 68, scope: !11011)
!11179 = !DILocation(line: 4390, column: 9, scope: !11011)
!11180 = !DILocation(line: 4390, column: 19, scope: !11011)
!11181 = !DILocation(line: 4389, column: 69, scope: !11011)
!11182 = !DILocation(line: 4389, column: 61, scope: !11011)
!11183 = !DILocation(line: 4389, column: 35, scope: !11011)
!11184 = !DILocation(line: 4390, column: 31, scope: !11011)
!11185 = !DILocation(line: 4390, column: 42, scope: !11011)
!11186 = !DILocation(line: 4390, column: 44, scope: !11011)
!11187 = !DILocation(line: 4390, column: 54, scope: !11011)
!11188 = !DILocation(line: 4390, column: 43, scope: !11011)
!11189 = !DILocation(line: 4390, column: 65, scope: !11011)
!11190 = !DILocation(line: 4391, column: 9, scope: !11011)
!11191 = !DILocation(line: 4391, column: 19, scope: !11011)
!11192 = !DILocation(line: 4390, column: 66, scope: !11011)
!11193 = !DILocation(line: 4390, column: 58, scope: !11011)
!11194 = !DILocation(line: 4390, column: 32, scope: !11011)
!11195 = !DILocation(line: 4390, column: 24, scope: !11011)
!11196 = !DILocation(line: 4389, column: 24, scope: !11011)
!11197 = !DILocation(line: 4389, column: 7, scope: !11011)
!11198 = !DILocation(line: 4389, column: 14, scope: !11011)
!11199 = !DILocation(line: 4389, column: 18, scope: !11011)
!11200 = !DILocation(line: 4392, column: 11, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 4392, column: 11)
!11202 = !DILocation(line: 4392, column: 18, scope: !11201)
!11203 = !DILocation(line: 4392, column: 29, scope: !11201)
!11204 = !DILocation(line: 4392, column: 11, scope: !11011)
!11205 = !DILocation(line: 4393, column: 22, scope: !11201)
!11206 = !DILocation(line: 4393, column: 37, scope: !11201)
!11207 = !DILocation(line: 4393, column: 48, scope: !11201)
!11208 = !DILocation(line: 4393, column: 50, scope: !11201)
!11209 = !DILocation(line: 4393, column: 60, scope: !11201)
!11210 = !DILocation(line: 4393, column: 49, scope: !11201)
!11211 = !DILocation(line: 4393, column: 72, scope: !11201)
!11212 = !DILocation(line: 4394, column: 11, scope: !11201)
!11213 = !DILocation(line: 4394, column: 21, scope: !11201)
!11214 = !DILocation(line: 4393, column: 73, scope: !11201)
!11215 = !DILocation(line: 4393, column: 65, scope: !11201)
!11216 = !DILocation(line: 4393, column: 38, scope: !11201)
!11217 = !DILocation(line: 4394, column: 34, scope: !11201)
!11218 = !DILocation(line: 4394, column: 45, scope: !11201)
!11219 = !DILocation(line: 4394, column: 47, scope: !11201)
!11220 = !DILocation(line: 4394, column: 57, scope: !11201)
!11221 = !DILocation(line: 4394, column: 46, scope: !11201)
!11222 = !DILocation(line: 4394, column: 69, scope: !11201)
!11223 = !DILocation(line: 4395, column: 11, scope: !11201)
!11224 = !DILocation(line: 4395, column: 21, scope: !11201)
!11225 = !DILocation(line: 4394, column: 70, scope: !11201)
!11226 = !DILocation(line: 4394, column: 62, scope: !11201)
!11227 = !DILocation(line: 4394, column: 35, scope: !11201)
!11228 = !DILocation(line: 4394, column: 27, scope: !11201)
!11229 = !DILocation(line: 4393, column: 27, scope: !11201)
!11230 = !DILocation(line: 4393, column: 9, scope: !11201)
!11231 = !DILocation(line: 4393, column: 16, scope: !11201)
!11232 = !DILocation(line: 4393, column: 21, scope: !11201)
!11233 = !DILocation(line: 4396, column: 23, scope: !11011)
!11234 = !DILocation(line: 4396, column: 34, scope: !11011)
!11235 = !DILocation(line: 4396, column: 42, scope: !11011)
!11236 = !DILocation(line: 4396, column: 35, scope: !11011)
!11237 = !DILocation(line: 4396, column: 24, scope: !11011)
!11238 = !DILocation(line: 4396, column: 51, scope: !11011)
!11239 = !DILocation(line: 4396, column: 62, scope: !11011)
!11240 = !DILocation(line: 4396, column: 70, scope: !11011)
!11241 = !DILocation(line: 4396, column: 63, scope: !11011)
!11242 = !DILocation(line: 4396, column: 52, scope: !11011)
!11243 = !DILocation(line: 4396, column: 44, scope: !11011)
!11244 = !DILocation(line: 4396, column: 12, scope: !11011)
!11245 = !DILocation(line: 4398, column: 11, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 4398, column: 11)
!11247 = !DILocation(line: 4398, column: 17, scope: !11246)
!11248 = !DILocation(line: 4398, column: 11, scope: !11011)
!11249 = !DILocation(line: 4398, column: 30, scope: !11246)
!11250 = !DILocation(line: 4398, column: 24, scope: !11246)
!11251 = !DILocation(line: 4400, column: 35, scope: !11011)
!11252 = !DILocation(line: 4400, column: 13, scope: !11011)
!11253 = !DILocation(line: 4400, column: 12, scope: !11011)
!11254 = !DILocation(line: 4401, column: 31, scope: !11011)
!11255 = !DILocation(line: 4401, column: 42, scope: !11011)
!11256 = !DILocation(line: 4401, column: 44, scope: !11011)
!11257 = !DILocation(line: 4401, column: 54, scope: !11011)
!11258 = !DILocation(line: 4401, column: 43, scope: !11011)
!11259 = !DILocation(line: 4401, column: 68, scope: !11011)
!11260 = !DILocation(line: 4402, column: 9, scope: !11011)
!11261 = !DILocation(line: 4402, column: 19, scope: !11011)
!11262 = !DILocation(line: 4401, column: 69, scope: !11011)
!11263 = !DILocation(line: 4401, column: 61, scope: !11011)
!11264 = !DILocation(line: 4401, column: 32, scope: !11011)
!11265 = !DILocation(line: 4402, column: 34, scope: !11011)
!11266 = !DILocation(line: 4402, column: 45, scope: !11011)
!11267 = !DILocation(line: 4402, column: 47, scope: !11011)
!11268 = !DILocation(line: 4402, column: 57, scope: !11011)
!11269 = !DILocation(line: 4402, column: 46, scope: !11011)
!11270 = !DILocation(line: 4402, column: 71, scope: !11011)
!11271 = !DILocation(line: 4403, column: 9, scope: !11011)
!11272 = !DILocation(line: 4403, column: 19, scope: !11011)
!11273 = !DILocation(line: 4402, column: 72, scope: !11011)
!11274 = !DILocation(line: 4402, column: 64, scope: !11011)
!11275 = !DILocation(line: 4402, column: 35, scope: !11011)
!11276 = !DILocation(line: 4402, column: 27, scope: !11011)
!11277 = !DILocation(line: 4401, column: 22, scope: !11011)
!11278 = !DILocation(line: 4401, column: 7, scope: !11011)
!11279 = !DILocation(line: 4401, column: 14, scope: !11011)
!11280 = !DILocation(line: 4401, column: 21, scope: !11011)
!11281 = !DILocation(line: 4404, column: 7, scope: !11011)
!11282 = !DILocation(line: 4408, column: 35, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4407, column: 5)
!11284 = !DILocation(line: 4408, column: 46, scope: !11283)
!11285 = !DILocation(line: 4408, column: 55, scope: !11283)
!11286 = !DILocation(line: 4408, column: 68, scope: !11283)
!11287 = !DILocation(line: 4408, column: 9, scope: !11283)
!11288 = !DILocation(line: 4408, column: 8, scope: !11283)
!11289 = !DILocation(line: 4409, column: 11, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11283, file: !3, line: 4409, column: 11)
!11291 = !DILocation(line: 4409, column: 13, scope: !11290)
!11292 = !DILocation(line: 4409, column: 11, scope: !11283)
!11293 = !DILocation(line: 4411, column: 17, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 4410, column: 9)
!11295 = !DILocation(line: 4412, column: 11, scope: !11294)
!11296 = !DILocation(line: 4414, column: 45, scope: !11283)
!11297 = !DILocation(line: 4414, column: 15, scope: !11283)
!11298 = !DILocation(line: 4414, column: 14, scope: !11283)
!11299 = !DILocation(line: 4415, column: 13, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11283, file: !3, line: 4415, column: 7)
!11301 = !DILocation(line: 4415, column: 12, scope: !11300)
!11302 = !DILocation(line: 4415, column: 17, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 4415, column: 7)
!11304 = !DILocation(line: 4415, column: 19, scope: !11303)
!11305 = !DILocation(line: 4415, column: 7, scope: !11300)
!11306 = !DILocation(line: 4417, column: 30, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 4416, column: 7)
!11308 = !DILocation(line: 4417, column: 36, scope: !11307)
!11309 = !DILocation(line: 4417, column: 43, scope: !11307)
!11310 = !DILocation(line: 4417, column: 42, scope: !11307)
!11311 = !DILocation(line: 4417, column: 9, scope: !11307)
!11312 = !DILocation(line: 4418, column: 37, scope: !11307)
!11313 = !DILocation(line: 4418, column: 43, scope: !11307)
!11314 = !DILocation(line: 4418, column: 45, scope: !11307)
!11315 = !DILocation(line: 4418, column: 44, scope: !11307)
!11316 = !DILocation(line: 4418, column: 47, scope: !11307)
!11317 = !DILocation(line: 4418, column: 55, scope: !11307)
!11318 = !DILocation(line: 4418, column: 54, scope: !11307)
!11319 = !DILocation(line: 4418, column: 57, scope: !11307)
!11320 = !DILocation(line: 4418, column: 64, scope: !11307)
!11321 = !DILocation(line: 4418, column: 63, scope: !11307)
!11322 = !DILocation(line: 4418, column: 66, scope: !11307)
!11323 = !DILocation(line: 4418, column: 72, scope: !11307)
!11324 = !DILocation(line: 4418, column: 71, scope: !11307)
!11325 = !DILocation(line: 4418, column: 9, scope: !11307)
!11326 = !DILocation(line: 4419, column: 7, scope: !11307)
!11327 = !DILocation(line: 4415, column: 26, scope: !11303)
!11328 = !DILocation(line: 4415, column: 7, scope: !11303)
!11329 = distinct !{!11329, !11305, !11330}
!11330 = !DILocation(line: 4419, column: 7, scope: !11300)
!11331 = !DILocation(line: 4420, column: 12, scope: !11283)
!11332 = !DILocation(line: 4421, column: 13, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11283, file: !3, line: 4421, column: 7)
!11334 = !DILocation(line: 4421, column: 12, scope: !11333)
!11335 = !DILocation(line: 4421, column: 17, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 4421, column: 7)
!11337 = !DILocation(line: 4421, column: 19, scope: !11336)
!11338 = !DILocation(line: 4421, column: 7, scope: !11333)
!11339 = !DILocation(line: 4423, column: 14, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 4423, column: 13)
!11341 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 4422, column: 7)
!11342 = !DILocation(line: 4423, column: 16, scope: !11340)
!11343 = !DILocation(line: 4423, column: 15, scope: !11340)
!11344 = !DILocation(line: 4423, column: 26, scope: !11340)
!11345 = !DILocation(line: 4423, column: 13, scope: !11341)
!11346 = !DILocation(line: 4425, column: 28, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 4424, column: 11)
!11348 = !DILocation(line: 4425, column: 29, scope: !11347)
!11349 = !DILocation(line: 4425, column: 22, scope: !11347)
!11350 = !DILocation(line: 4425, column: 19, scope: !11347)
!11351 = !DILocation(line: 4425, column: 13, scope: !11347)
!11352 = !DILocation(line: 4425, column: 21, scope: !11347)
!11353 = !DILocation(line: 4426, column: 20, scope: !11347)
!11354 = !DILocation(line: 4426, column: 13, scope: !11347)
!11355 = !DILocation(line: 4426, column: 30, scope: !11347)
!11356 = !DILocation(line: 4426, column: 31, scope: !11347)
!11357 = !DILocation(line: 4426, column: 23, scope: !11347)
!11358 = !DILocation(line: 4427, column: 11, scope: !11347)
!11359 = !DILocation(line: 4429, column: 16, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 4429, column: 15)
!11361 = !DILocation(line: 4429, column: 18, scope: !11360)
!11362 = !DILocation(line: 4429, column: 17, scope: !11360)
!11363 = !DILocation(line: 4429, column: 28, scope: !11360)
!11364 = !DILocation(line: 4429, column: 15, scope: !11340)
!11365 = !DILocation(line: 4431, column: 20, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 4430, column: 13)
!11367 = !DILocation(line: 4432, column: 31, scope: !11366)
!11368 = !DILocation(line: 4432, column: 32, scope: !11366)
!11369 = !DILocation(line: 4432, column: 25, scope: !11366)
!11370 = !DILocation(line: 4432, column: 21, scope: !11366)
!11371 = !DILocation(line: 4432, column: 15, scope: !11366)
!11372 = !DILocation(line: 4432, column: 23, scope: !11366)
!11373 = !DILocation(line: 4433, column: 37, scope: !11366)
!11374 = !DILocation(line: 4433, column: 38, scope: !11366)
!11375 = !DILocation(line: 4433, column: 30, scope: !11366)
!11376 = !DILocation(line: 4433, column: 42, scope: !11366)
!11377 = !DILocation(line: 4433, column: 22, scope: !11366)
!11378 = !DILocation(line: 4433, column: 15, scope: !11366)
!11379 = !DILocation(line: 4433, column: 25, scope: !11366)
!11380 = !DILocation(line: 4433, column: 28, scope: !11366)
!11381 = !DILocation(line: 4434, column: 39, scope: !11366)
!11382 = !DILocation(line: 4434, column: 40, scope: !11366)
!11383 = !DILocation(line: 4434, column: 32, scope: !11366)
!11384 = !DILocation(line: 4434, column: 44, scope: !11366)
!11385 = !DILocation(line: 4434, column: 22, scope: !11366)
!11386 = !DILocation(line: 4434, column: 15, scope: !11366)
!11387 = !DILocation(line: 4434, column: 25, scope: !11366)
!11388 = !DILocation(line: 4434, column: 30, scope: !11366)
!11389 = !DILocation(line: 4435, column: 38, scope: !11366)
!11390 = !DILocation(line: 4435, column: 39, scope: !11366)
!11391 = !DILocation(line: 4435, column: 31, scope: !11366)
!11392 = !DILocation(line: 4435, column: 43, scope: !11366)
!11393 = !DILocation(line: 4435, column: 22, scope: !11366)
!11394 = !DILocation(line: 4435, column: 15, scope: !11366)
!11395 = !DILocation(line: 4435, column: 25, scope: !11366)
!11396 = !DILocation(line: 4435, column: 29, scope: !11366)
!11397 = !DILocation(line: 4436, column: 41, scope: !11366)
!11398 = !DILocation(line: 4436, column: 42, scope: !11366)
!11399 = !DILocation(line: 4436, column: 34, scope: !11366)
!11400 = !DILocation(line: 4436, column: 46, scope: !11366)
!11401 = !DILocation(line: 4436, column: 22, scope: !11366)
!11402 = !DILocation(line: 4436, column: 15, scope: !11366)
!11403 = !DILocation(line: 4436, column: 25, scope: !11366)
!11404 = !DILocation(line: 4436, column: 32, scope: !11366)
!11405 = !DILocation(line: 4437, column: 39, scope: !11366)
!11406 = !DILocation(line: 4437, column: 40, scope: !11366)
!11407 = !DILocation(line: 4437, column: 32, scope: !11366)
!11408 = !DILocation(line: 4437, column: 44, scope: !11366)
!11409 = !DILocation(line: 4437, column: 22, scope: !11366)
!11410 = !DILocation(line: 4437, column: 15, scope: !11366)
!11411 = !DILocation(line: 4437, column: 25, scope: !11366)
!11412 = !DILocation(line: 4437, column: 30, scope: !11366)
!11413 = !DILocation(line: 4438, column: 13, scope: !11366)
!11414 = !DILocation(line: 4439, column: 7, scope: !11341)
!11415 = !DILocation(line: 4421, column: 27, scope: !11336)
!11416 = !DILocation(line: 4421, column: 7, scope: !11336)
!11417 = distinct !{!11417, !11338, !11418}
!11418 = !DILocation(line: 4439, column: 7, scope: !11333)
!11419 = !DILocation(line: 4440, column: 12, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11283, file: !3, line: 4440, column: 11)
!11421 = !DILocation(line: 4440, column: 14, scope: !11420)
!11422 = !DILocation(line: 4440, column: 13, scope: !11420)
!11423 = !DILocation(line: 4440, column: 24, scope: !11420)
!11424 = !DILocation(line: 4440, column: 11, scope: !11283)
!11425 = !DILocation(line: 4442, column: 20, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 4441, column: 9)
!11427 = !DILocation(line: 4442, column: 11, scope: !11426)
!11428 = !DILocation(line: 4442, column: 19, scope: !11426)
!11429 = !DILocation(line: 4443, column: 11, scope: !11426)
!11430 = !DILocation(line: 4443, column: 21, scope: !11426)
!11431 = !DILocation(line: 4444, column: 9, scope: !11426)
!11432 = !DILocation(line: 4446, column: 14, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 4446, column: 13)
!11434 = !DILocation(line: 4446, column: 16, scope: !11433)
!11435 = !DILocation(line: 4446, column: 15, scope: !11433)
!11436 = !DILocation(line: 4446, column: 26, scope: !11433)
!11437 = !DILocation(line: 4446, column: 13, scope: !11420)
!11438 = !DILocation(line: 4448, column: 18, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11433, file: !3, line: 4447, column: 11)
!11440 = !DILocation(line: 4449, column: 23, scope: !11439)
!11441 = !DILocation(line: 4449, column: 13, scope: !11439)
!11442 = !DILocation(line: 4449, column: 21, scope: !11439)
!11443 = !DILocation(line: 4450, column: 28, scope: !11439)
!11444 = !DILocation(line: 4450, column: 38, scope: !11439)
!11445 = !DILocation(line: 4450, column: 13, scope: !11439)
!11446 = !DILocation(line: 4450, column: 23, scope: !11439)
!11447 = !DILocation(line: 4450, column: 26, scope: !11439)
!11448 = !DILocation(line: 4451, column: 30, scope: !11439)
!11449 = !DILocation(line: 4451, column: 40, scope: !11439)
!11450 = !DILocation(line: 4451, column: 13, scope: !11439)
!11451 = !DILocation(line: 4451, column: 23, scope: !11439)
!11452 = !DILocation(line: 4451, column: 28, scope: !11439)
!11453 = !DILocation(line: 4452, column: 29, scope: !11439)
!11454 = !DILocation(line: 4452, column: 39, scope: !11439)
!11455 = !DILocation(line: 4452, column: 13, scope: !11439)
!11456 = !DILocation(line: 4452, column: 23, scope: !11439)
!11457 = !DILocation(line: 4452, column: 27, scope: !11439)
!11458 = !DILocation(line: 4453, column: 32, scope: !11439)
!11459 = !DILocation(line: 4453, column: 42, scope: !11439)
!11460 = !DILocation(line: 4453, column: 13, scope: !11439)
!11461 = !DILocation(line: 4453, column: 23, scope: !11439)
!11462 = !DILocation(line: 4453, column: 30, scope: !11439)
!11463 = !DILocation(line: 4454, column: 30, scope: !11439)
!11464 = !DILocation(line: 4454, column: 40, scope: !11439)
!11465 = !DILocation(line: 4454, column: 13, scope: !11439)
!11466 = !DILocation(line: 4454, column: 23, scope: !11439)
!11467 = !DILocation(line: 4454, column: 28, scope: !11439)
!11468 = !DILocation(line: 4455, column: 11, scope: !11439)
!11469 = !DILocation(line: 4456, column: 17, scope: !11283)
!11470 = !DILocation(line: 4456, column: 16, scope: !11283)
!11471 = !DILocation(line: 4456, column: 12, scope: !11283)
!11472 = !DILocation(line: 4457, column: 38, scope: !11283)
!11473 = !DILocation(line: 4457, column: 16, scope: !11283)
!11474 = !DILocation(line: 4457, column: 7, scope: !11283)
!11475 = !DILocation(line: 4457, column: 15, scope: !11283)
!11476 = !DILocation(line: 4458, column: 18, scope: !11283)
!11477 = !DILocation(line: 4458, column: 27, scope: !11283)
!11478 = !DILocation(line: 4458, column: 37, scope: !11283)
!11479 = !DILocation(line: 4458, column: 26, scope: !11283)
!11480 = !DILocation(line: 4458, column: 7, scope: !11283)
!11481 = !DILocation(line: 4458, column: 14, scope: !11283)
!11482 = !DILocation(line: 4458, column: 17, scope: !11283)
!11483 = !DILocation(line: 4459, column: 20, scope: !11283)
!11484 = !DILocation(line: 4459, column: 29, scope: !11283)
!11485 = !DILocation(line: 4459, column: 39, scope: !11283)
!11486 = !DILocation(line: 4459, column: 28, scope: !11283)
!11487 = !DILocation(line: 4459, column: 7, scope: !11283)
!11488 = !DILocation(line: 4459, column: 14, scope: !11283)
!11489 = !DILocation(line: 4459, column: 19, scope: !11283)
!11490 = !DILocation(line: 4460, column: 19, scope: !11283)
!11491 = !DILocation(line: 4460, column: 28, scope: !11283)
!11492 = !DILocation(line: 4460, column: 38, scope: !11283)
!11493 = !DILocation(line: 4460, column: 27, scope: !11283)
!11494 = !DILocation(line: 4460, column: 7, scope: !11283)
!11495 = !DILocation(line: 4460, column: 14, scope: !11283)
!11496 = !DILocation(line: 4460, column: 18, scope: !11283)
!11497 = !DILocation(line: 4461, column: 20, scope: !11283)
!11498 = !DILocation(line: 4461, column: 29, scope: !11283)
!11499 = !DILocation(line: 4461, column: 39, scope: !11283)
!11500 = !DILocation(line: 4461, column: 28, scope: !11283)
!11501 = !DILocation(line: 4461, column: 7, scope: !11283)
!11502 = !DILocation(line: 4461, column: 14, scope: !11283)
!11503 = !DILocation(line: 4461, column: 19, scope: !11283)
!11504 = !DILocation(line: 4462, column: 22, scope: !11283)
!11505 = !DILocation(line: 4462, column: 28, scope: !11283)
!11506 = !DILocation(line: 4462, column: 38, scope: !11283)
!11507 = !DILocation(line: 4462, column: 27, scope: !11283)
!11508 = !DILocation(line: 4462, column: 7, scope: !11283)
!11509 = !DILocation(line: 4462, column: 14, scope: !11283)
!11510 = !DILocation(line: 4462, column: 21, scope: !11283)
!11511 = !DILocation(line: 4463, column: 7, scope: !11283)
!11512 = !DILocalVariable(name: "cx", scope: !11513, file: !3, line: 4469, type: !11514)
!11513 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4467, column: 5)
!11514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !458, size: 128, elements: !11515)
!11515 = !{!11516}
!11516 = !DISubrange(count: 4)
!11517 = !DILocation(line: 4469, column: 9, scope: !11513)
!11518 = !DILocalVariable(name: "cy", scope: !11513, file: !3, line: 4470, type: !11514)
!11519 = !DILocation(line: 4470, column: 9, scope: !11513)
!11520 = !DILocation(line: 4472, column: 35, scope: !11513)
!11521 = !DILocation(line: 4472, column: 46, scope: !11513)
!11522 = !DILocation(line: 4472, column: 54, scope: !11513)
!11523 = !DILocation(line: 4472, column: 57, scope: !11513)
!11524 = !DILocation(line: 4472, column: 65, scope: !11513)
!11525 = !DILocation(line: 4473, column: 9, scope: !11513)
!11526 = !DILocation(line: 4472, column: 9, scope: !11513)
!11527 = !DILocation(line: 4472, column: 8, scope: !11513)
!11528 = !DILocation(line: 4474, column: 11, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 4474, column: 11)
!11530 = !DILocation(line: 4474, column: 13, scope: !11529)
!11531 = !DILocation(line: 4474, column: 11, scope: !11513)
!11532 = !DILocation(line: 4476, column: 17, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 4475, column: 9)
!11534 = !DILocation(line: 4477, column: 11, scope: !11533)
!11535 = !DILocation(line: 4479, column: 45, scope: !11513)
!11536 = !DILocation(line: 4479, column: 15, scope: !11513)
!11537 = !DILocation(line: 4479, column: 14, scope: !11513)
!11538 = !DILocation(line: 4480, column: 13, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 4480, column: 7)
!11540 = !DILocation(line: 4480, column: 12, scope: !11539)
!11541 = !DILocation(line: 4480, column: 17, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 4480, column: 7)
!11543 = !DILocation(line: 4480, column: 19, scope: !11542)
!11544 = !DILocation(line: 4480, column: 7, scope: !11539)
!11545 = !DILocation(line: 4482, column: 30, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 4481, column: 7)
!11547 = !DILocation(line: 4482, column: 36, scope: !11546)
!11548 = !DILocation(line: 4482, column: 43, scope: !11546)
!11549 = !DILocation(line: 4482, column: 42, scope: !11546)
!11550 = !DILocation(line: 4482, column: 9, scope: !11546)
!11551 = !DILocation(line: 4483, column: 37, scope: !11546)
!11552 = !DILocation(line: 4483, column: 43, scope: !11546)
!11553 = !DILocation(line: 4483, column: 45, scope: !11546)
!11554 = !DILocation(line: 4483, column: 44, scope: !11546)
!11555 = !DILocation(line: 4483, column: 47, scope: !11546)
!11556 = !DILocation(line: 4483, column: 55, scope: !11546)
!11557 = !DILocation(line: 4483, column: 54, scope: !11546)
!11558 = !DILocation(line: 4483, column: 57, scope: !11546)
!11559 = !DILocation(line: 4483, column: 64, scope: !11546)
!11560 = !DILocation(line: 4483, column: 63, scope: !11546)
!11561 = !DILocation(line: 4483, column: 66, scope: !11546)
!11562 = !DILocation(line: 4483, column: 72, scope: !11546)
!11563 = !DILocation(line: 4483, column: 71, scope: !11546)
!11564 = !DILocation(line: 4483, column: 9, scope: !11546)
!11565 = !DILocation(line: 4484, column: 7, scope: !11546)
!11566 = !DILocation(line: 4480, column: 27, scope: !11542)
!11567 = !DILocation(line: 4480, column: 7, scope: !11542)
!11568 = distinct !{!11568, !11544, !11569}
!11569 = !DILocation(line: 4484, column: 7, scope: !11539)
!11570 = !DILocation(line: 4485, column: 39, scope: !11513)
!11571 = !DILocation(line: 4485, column: 41, scope: !11513)
!11572 = !DILocation(line: 4485, column: 40, scope: !11513)
!11573 = !DILocation(line: 4485, column: 21, scope: !11513)
!11574 = !DILocation(line: 4485, column: 7, scope: !11513)
!11575 = !DILocation(line: 4486, column: 39, scope: !11513)
!11576 = !DILocation(line: 4486, column: 41, scope: !11513)
!11577 = !DILocation(line: 4486, column: 40, scope: !11513)
!11578 = !DILocation(line: 4486, column: 21, scope: !11513)
!11579 = !DILocation(line: 4486, column: 7, scope: !11513)
!11580 = !DILocation(line: 4487, column: 19, scope: !11513)
!11581 = !DILocation(line: 4487, column: 26, scope: !11513)
!11582 = !DILocation(line: 4487, column: 32, scope: !11513)
!11583 = !DILocation(line: 4487, column: 42, scope: !11513)
!11584 = !DILocation(line: 4487, column: 31, scope: !11513)
!11585 = !DILocation(line: 4487, column: 46, scope: !11513)
!11586 = !DILocation(line: 4487, column: 52, scope: !11513)
!11587 = !DILocation(line: 4487, column: 62, scope: !11513)
!11588 = !DILocation(line: 4487, column: 51, scope: !11513)
!11589 = !DILocation(line: 4487, column: 45, scope: !11513)
!11590 = !DILocation(line: 4487, column: 66, scope: !11513)
!11591 = !DILocation(line: 4488, column: 9, scope: !11513)
!11592 = !DILocation(line: 4488, column: 19, scope: !11513)
!11593 = !DILocation(line: 4487, column: 71, scope: !11513)
!11594 = !DILocation(line: 4487, column: 65, scope: !11513)
!11595 = !DILocation(line: 4488, column: 23, scope: !11513)
!11596 = !DILocation(line: 4488, column: 29, scope: !11513)
!11597 = !DILocation(line: 4488, column: 39, scope: !11513)
!11598 = !DILocation(line: 4488, column: 28, scope: !11513)
!11599 = !DILocation(line: 4488, column: 22, scope: !11513)
!11600 = !DILocation(line: 4487, column: 24, scope: !11513)
!11601 = !DILocation(line: 4488, column: 44, scope: !11513)
!11602 = !DILocation(line: 4488, column: 51, scope: !11513)
!11603 = !DILocation(line: 4488, column: 57, scope: !11513)
!11604 = !DILocation(line: 4488, column: 67, scope: !11513)
!11605 = !DILocation(line: 4488, column: 56, scope: !11513)
!11606 = !DILocation(line: 4488, column: 71, scope: !11513)
!11607 = !DILocation(line: 4489, column: 9, scope: !11513)
!11608 = !DILocation(line: 4489, column: 19, scope: !11513)
!11609 = !DILocation(line: 4488, column: 76, scope: !11513)
!11610 = !DILocation(line: 4488, column: 70, scope: !11513)
!11611 = !DILocation(line: 4489, column: 23, scope: !11513)
!11612 = !DILocation(line: 4489, column: 29, scope: !11513)
!11613 = !DILocation(line: 4489, column: 39, scope: !11513)
!11614 = !DILocation(line: 4489, column: 28, scope: !11513)
!11615 = !DILocation(line: 4489, column: 22, scope: !11513)
!11616 = !DILocation(line: 4489, column: 43, scope: !11513)
!11617 = !DILocation(line: 4489, column: 49, scope: !11513)
!11618 = !DILocation(line: 4489, column: 59, scope: !11513)
!11619 = !DILocation(line: 4489, column: 48, scope: !11513)
!11620 = !DILocation(line: 4489, column: 42, scope: !11513)
!11621 = !DILocation(line: 4488, column: 49, scope: !11513)
!11622 = !DILocation(line: 4488, column: 43, scope: !11513)
!11623 = !DILocation(line: 4489, column: 64, scope: !11513)
!11624 = !DILocation(line: 4489, column: 71, scope: !11513)
!11625 = !DILocation(line: 4490, column: 9, scope: !11513)
!11626 = !DILocation(line: 4490, column: 19, scope: !11513)
!11627 = !DILocation(line: 4489, column: 76, scope: !11513)
!11628 = !DILocation(line: 4490, column: 23, scope: !11513)
!11629 = !DILocation(line: 4490, column: 29, scope: !11513)
!11630 = !DILocation(line: 4490, column: 39, scope: !11513)
!11631 = !DILocation(line: 4490, column: 28, scope: !11513)
!11632 = !DILocation(line: 4490, column: 22, scope: !11513)
!11633 = !DILocation(line: 4490, column: 43, scope: !11513)
!11634 = !DILocation(line: 4490, column: 49, scope: !11513)
!11635 = !DILocation(line: 4490, column: 60, scope: !11513)
!11636 = !DILocation(line: 4490, column: 48, scope: !11513)
!11637 = !DILocation(line: 4490, column: 42, scope: !11513)
!11638 = !DILocation(line: 4490, column: 64, scope: !11513)
!11639 = !DILocation(line: 4491, column: 9, scope: !11513)
!11640 = !DILocation(line: 4491, column: 20, scope: !11513)
!11641 = !DILocation(line: 4490, column: 69, scope: !11513)
!11642 = !DILocation(line: 4490, column: 63, scope: !11513)
!11643 = !DILocation(line: 4489, column: 69, scope: !11513)
!11644 = !DILocation(line: 4489, column: 63, scope: !11513)
!11645 = !DILocation(line: 4491, column: 25, scope: !11513)
!11646 = !DILocation(line: 4491, column: 32, scope: !11513)
!11647 = !DILocation(line: 4491, column: 38, scope: !11513)
!11648 = !DILocation(line: 4491, column: 49, scope: !11513)
!11649 = !DILocation(line: 4491, column: 37, scope: !11513)
!11650 = !DILocation(line: 4491, column: 53, scope: !11513)
!11651 = !DILocation(line: 4491, column: 59, scope: !11513)
!11652 = !DILocation(line: 4491, column: 70, scope: !11513)
!11653 = !DILocation(line: 4491, column: 58, scope: !11513)
!11654 = !DILocation(line: 4491, column: 52, scope: !11513)
!11655 = !DILocation(line: 4491, column: 74, scope: !11513)
!11656 = !DILocation(line: 4492, column: 9, scope: !11513)
!11657 = !DILocation(line: 4492, column: 20, scope: !11513)
!11658 = !DILocation(line: 4491, column: 79, scope: !11513)
!11659 = !DILocation(line: 4491, column: 73, scope: !11513)
!11660 = !DILocation(line: 4492, column: 24, scope: !11513)
!11661 = !DILocation(line: 4492, column: 30, scope: !11513)
!11662 = !DILocation(line: 4492, column: 41, scope: !11513)
!11663 = !DILocation(line: 4492, column: 29, scope: !11513)
!11664 = !DILocation(line: 4492, column: 23, scope: !11513)
!11665 = !DILocation(line: 4491, column: 30, scope: !11513)
!11666 = !DILocation(line: 4491, column: 24, scope: !11513)
!11667 = !DILocation(line: 4487, column: 7, scope: !11513)
!11668 = !DILocation(line: 4487, column: 14, scope: !11513)
!11669 = !DILocation(line: 4487, column: 17, scope: !11513)
!11670 = !DILocation(line: 4493, column: 21, scope: !11513)
!11671 = !DILocation(line: 4493, column: 28, scope: !11513)
!11672 = !DILocation(line: 4493, column: 34, scope: !11513)
!11673 = !DILocation(line: 4493, column: 44, scope: !11513)
!11674 = !DILocation(line: 4493, column: 33, scope: !11513)
!11675 = !DILocation(line: 4493, column: 50, scope: !11513)
!11676 = !DILocation(line: 4493, column: 56, scope: !11513)
!11677 = !DILocation(line: 4493, column: 66, scope: !11513)
!11678 = !DILocation(line: 4493, column: 55, scope: !11513)
!11679 = !DILocation(line: 4493, column: 49, scope: !11513)
!11680 = !DILocation(line: 4493, column: 72, scope: !11513)
!11681 = !DILocation(line: 4494, column: 9, scope: !11513)
!11682 = !DILocation(line: 4494, column: 19, scope: !11513)
!11683 = !DILocation(line: 4493, column: 77, scope: !11513)
!11684 = !DILocation(line: 4493, column: 71, scope: !11513)
!11685 = !DILocation(line: 4494, column: 25, scope: !11513)
!11686 = !DILocation(line: 4494, column: 31, scope: !11513)
!11687 = !DILocation(line: 4494, column: 41, scope: !11513)
!11688 = !DILocation(line: 4494, column: 30, scope: !11513)
!11689 = !DILocation(line: 4494, column: 24, scope: !11513)
!11690 = !DILocation(line: 4493, column: 26, scope: !11513)
!11691 = !DILocation(line: 4494, column: 48, scope: !11513)
!11692 = !DILocation(line: 4494, column: 55, scope: !11513)
!11693 = !DILocation(line: 4494, column: 61, scope: !11513)
!11694 = !DILocation(line: 4494, column: 71, scope: !11513)
!11695 = !DILocation(line: 4494, column: 60, scope: !11513)
!11696 = !DILocation(line: 4495, column: 9, scope: !11513)
!11697 = !DILocation(line: 4495, column: 15, scope: !11513)
!11698 = !DILocation(line: 4495, column: 25, scope: !11513)
!11699 = !DILocation(line: 4495, column: 14, scope: !11513)
!11700 = !DILocation(line: 4494, column: 76, scope: !11513)
!11701 = !DILocation(line: 4495, column: 31, scope: !11513)
!11702 = !DILocation(line: 4495, column: 37, scope: !11513)
!11703 = !DILocation(line: 4495, column: 47, scope: !11513)
!11704 = !DILocation(line: 4495, column: 36, scope: !11513)
!11705 = !DILocation(line: 4495, column: 30, scope: !11513)
!11706 = !DILocation(line: 4495, column: 53, scope: !11513)
!11707 = !DILocation(line: 4495, column: 59, scope: !11513)
!11708 = !DILocation(line: 4495, column: 69, scope: !11513)
!11709 = !DILocation(line: 4495, column: 58, scope: !11513)
!11710 = !DILocation(line: 4495, column: 52, scope: !11513)
!11711 = !DILocation(line: 4494, column: 53, scope: !11513)
!11712 = !DILocation(line: 4494, column: 47, scope: !11513)
!11713 = !DILocation(line: 4496, column: 9, scope: !11513)
!11714 = !DILocation(line: 4496, column: 16, scope: !11513)
!11715 = !DILocation(line: 4496, column: 22, scope: !11513)
!11716 = !DILocation(line: 4496, column: 32, scope: !11513)
!11717 = !DILocation(line: 4496, column: 21, scope: !11513)
!11718 = !DILocation(line: 4496, column: 38, scope: !11513)
!11719 = !DILocation(line: 4496, column: 44, scope: !11513)
!11720 = !DILocation(line: 4496, column: 54, scope: !11513)
!11721 = !DILocation(line: 4496, column: 43, scope: !11513)
!11722 = !DILocation(line: 4496, column: 37, scope: !11513)
!11723 = !DILocation(line: 4496, column: 60, scope: !11513)
!11724 = !DILocation(line: 4497, column: 9, scope: !11513)
!11725 = !DILocation(line: 4497, column: 20, scope: !11513)
!11726 = !DILocation(line: 4496, column: 65, scope: !11513)
!11727 = !DILocation(line: 4496, column: 59, scope: !11513)
!11728 = !DILocation(line: 4497, column: 26, scope: !11513)
!11729 = !DILocation(line: 4497, column: 32, scope: !11513)
!11730 = !DILocation(line: 4497, column: 43, scope: !11513)
!11731 = !DILocation(line: 4497, column: 31, scope: !11513)
!11732 = !DILocation(line: 4497, column: 25, scope: !11513)
!11733 = !DILocation(line: 4496, column: 14, scope: !11513)
!11734 = !DILocation(line: 4495, column: 75, scope: !11513)
!11735 = !DILocation(line: 4497, column: 50, scope: !11513)
!11736 = !DILocation(line: 4497, column: 57, scope: !11513)
!11737 = !DILocation(line: 4497, column: 63, scope: !11513)
!11738 = !DILocation(line: 4497, column: 74, scope: !11513)
!11739 = !DILocation(line: 4497, column: 62, scope: !11513)
!11740 = !DILocation(line: 4498, column: 9, scope: !11513)
!11741 = !DILocation(line: 4498, column: 15, scope: !11513)
!11742 = !DILocation(line: 4498, column: 26, scope: !11513)
!11743 = !DILocation(line: 4498, column: 14, scope: !11513)
!11744 = !DILocation(line: 4497, column: 79, scope: !11513)
!11745 = !DILocation(line: 4498, column: 32, scope: !11513)
!11746 = !DILocation(line: 4498, column: 38, scope: !11513)
!11747 = !DILocation(line: 4498, column: 49, scope: !11513)
!11748 = !DILocation(line: 4498, column: 37, scope: !11513)
!11749 = !DILocation(line: 4498, column: 31, scope: !11513)
!11750 = !DILocation(line: 4498, column: 55, scope: !11513)
!11751 = !DILocation(line: 4498, column: 61, scope: !11513)
!11752 = !DILocation(line: 4498, column: 72, scope: !11513)
!11753 = !DILocation(line: 4498, column: 60, scope: !11513)
!11754 = !DILocation(line: 4498, column: 54, scope: !11513)
!11755 = !DILocation(line: 4497, column: 55, scope: !11513)
!11756 = !DILocation(line: 4497, column: 49, scope: !11513)
!11757 = !DILocation(line: 4493, column: 7, scope: !11513)
!11758 = !DILocation(line: 4493, column: 14, scope: !11513)
!11759 = !DILocation(line: 4493, column: 19, scope: !11513)
!11760 = !DILocation(line: 4499, column: 20, scope: !11513)
!11761 = !DILocation(line: 4499, column: 27, scope: !11513)
!11762 = !DILocation(line: 4499, column: 33, scope: !11513)
!11763 = !DILocation(line: 4499, column: 43, scope: !11513)
!11764 = !DILocation(line: 4499, column: 32, scope: !11513)
!11765 = !DILocation(line: 4499, column: 48, scope: !11513)
!11766 = !DILocation(line: 4499, column: 54, scope: !11513)
!11767 = !DILocation(line: 4499, column: 64, scope: !11513)
!11768 = !DILocation(line: 4499, column: 53, scope: !11513)
!11769 = !DILocation(line: 4499, column: 47, scope: !11513)
!11770 = !DILocation(line: 4499, column: 69, scope: !11513)
!11771 = !DILocation(line: 4500, column: 9, scope: !11513)
!11772 = !DILocation(line: 4500, column: 19, scope: !11513)
!11773 = !DILocation(line: 4499, column: 74, scope: !11513)
!11774 = !DILocation(line: 4499, column: 68, scope: !11513)
!11775 = !DILocation(line: 4500, column: 24, scope: !11513)
!11776 = !DILocation(line: 4500, column: 30, scope: !11513)
!11777 = !DILocation(line: 4500, column: 40, scope: !11513)
!11778 = !DILocation(line: 4500, column: 29, scope: !11513)
!11779 = !DILocation(line: 4500, column: 23, scope: !11513)
!11780 = !DILocation(line: 4499, column: 25, scope: !11513)
!11781 = !DILocation(line: 4500, column: 46, scope: !11513)
!11782 = !DILocation(line: 4500, column: 53, scope: !11513)
!11783 = !DILocation(line: 4500, column: 59, scope: !11513)
!11784 = !DILocation(line: 4500, column: 69, scope: !11513)
!11785 = !DILocation(line: 4500, column: 58, scope: !11513)
!11786 = !DILocation(line: 4500, column: 74, scope: !11513)
!11787 = !DILocation(line: 4501, column: 9, scope: !11513)
!11788 = !DILocation(line: 4501, column: 19, scope: !11513)
!11789 = !DILocation(line: 4500, column: 79, scope: !11513)
!11790 = !DILocation(line: 4500, column: 73, scope: !11513)
!11791 = !DILocation(line: 4501, column: 24, scope: !11513)
!11792 = !DILocation(line: 4501, column: 30, scope: !11513)
!11793 = !DILocation(line: 4501, column: 40, scope: !11513)
!11794 = !DILocation(line: 4501, column: 29, scope: !11513)
!11795 = !DILocation(line: 4501, column: 23, scope: !11513)
!11796 = !DILocation(line: 4501, column: 45, scope: !11513)
!11797 = !DILocation(line: 4501, column: 51, scope: !11513)
!11798 = !DILocation(line: 4501, column: 61, scope: !11513)
!11799 = !DILocation(line: 4501, column: 50, scope: !11513)
!11800 = !DILocation(line: 4501, column: 44, scope: !11513)
!11801 = !DILocation(line: 4500, column: 51, scope: !11513)
!11802 = !DILocation(line: 4500, column: 45, scope: !11513)
!11803 = !DILocation(line: 4501, column: 67, scope: !11513)
!11804 = !DILocation(line: 4501, column: 74, scope: !11513)
!11805 = !DILocation(line: 4502, column: 9, scope: !11513)
!11806 = !DILocation(line: 4502, column: 19, scope: !11513)
!11807 = !DILocation(line: 4501, column: 79, scope: !11513)
!11808 = !DILocation(line: 4502, column: 24, scope: !11513)
!11809 = !DILocation(line: 4502, column: 30, scope: !11513)
!11810 = !DILocation(line: 4502, column: 40, scope: !11513)
!11811 = !DILocation(line: 4502, column: 29, scope: !11513)
!11812 = !DILocation(line: 4502, column: 23, scope: !11513)
!11813 = !DILocation(line: 4502, column: 45, scope: !11513)
!11814 = !DILocation(line: 4502, column: 51, scope: !11513)
!11815 = !DILocation(line: 4502, column: 62, scope: !11513)
!11816 = !DILocation(line: 4502, column: 50, scope: !11513)
!11817 = !DILocation(line: 4502, column: 44, scope: !11513)
!11818 = !DILocation(line: 4502, column: 67, scope: !11513)
!11819 = !DILocation(line: 4503, column: 9, scope: !11513)
!11820 = !DILocation(line: 4503, column: 20, scope: !11513)
!11821 = !DILocation(line: 4502, column: 72, scope: !11513)
!11822 = !DILocation(line: 4502, column: 66, scope: !11513)
!11823 = !DILocation(line: 4501, column: 72, scope: !11513)
!11824 = !DILocation(line: 4501, column: 66, scope: !11513)
!11825 = !DILocation(line: 4503, column: 26, scope: !11513)
!11826 = !DILocation(line: 4503, column: 33, scope: !11513)
!11827 = !DILocation(line: 4503, column: 39, scope: !11513)
!11828 = !DILocation(line: 4503, column: 50, scope: !11513)
!11829 = !DILocation(line: 4503, column: 38, scope: !11513)
!11830 = !DILocation(line: 4503, column: 55, scope: !11513)
!11831 = !DILocation(line: 4503, column: 61, scope: !11513)
!11832 = !DILocation(line: 4503, column: 72, scope: !11513)
!11833 = !DILocation(line: 4503, column: 60, scope: !11513)
!11834 = !DILocation(line: 4503, column: 54, scope: !11513)
!11835 = !DILocation(line: 4504, column: 9, scope: !11513)
!11836 = !DILocation(line: 4504, column: 15, scope: !11513)
!11837 = !DILocation(line: 4504, column: 26, scope: !11513)
!11838 = !DILocation(line: 4504, column: 14, scope: !11513)
!11839 = !DILocation(line: 4503, column: 76, scope: !11513)
!11840 = !DILocation(line: 4504, column: 31, scope: !11513)
!11841 = !DILocation(line: 4504, column: 37, scope: !11513)
!11842 = !DILocation(line: 4504, column: 48, scope: !11513)
!11843 = !DILocation(line: 4504, column: 36, scope: !11513)
!11844 = !DILocation(line: 4504, column: 30, scope: !11513)
!11845 = !DILocation(line: 4503, column: 31, scope: !11513)
!11846 = !DILocation(line: 4503, column: 25, scope: !11513)
!11847 = !DILocation(line: 4499, column: 7, scope: !11513)
!11848 = !DILocation(line: 4499, column: 14, scope: !11513)
!11849 = !DILocation(line: 4499, column: 18, scope: !11513)
!11850 = !DILocation(line: 4505, column: 23, scope: !11513)
!11851 = !DILocation(line: 4505, column: 30, scope: !11513)
!11852 = !DILocation(line: 4505, column: 36, scope: !11513)
!11853 = !DILocation(line: 4505, column: 46, scope: !11513)
!11854 = !DILocation(line: 4505, column: 35, scope: !11513)
!11855 = !DILocation(line: 4505, column: 54, scope: !11513)
!11856 = !DILocation(line: 4505, column: 60, scope: !11513)
!11857 = !DILocation(line: 4505, column: 70, scope: !11513)
!11858 = !DILocation(line: 4505, column: 59, scope: !11513)
!11859 = !DILocation(line: 4505, column: 53, scope: !11513)
!11860 = !DILocation(line: 4506, column: 9, scope: !11513)
!11861 = !DILocation(line: 4506, column: 15, scope: !11513)
!11862 = !DILocation(line: 4506, column: 25, scope: !11513)
!11863 = !DILocation(line: 4506, column: 14, scope: !11513)
!11864 = !DILocation(line: 4505, column: 77, scope: !11513)
!11865 = !DILocation(line: 4506, column: 33, scope: !11513)
!11866 = !DILocation(line: 4506, column: 39, scope: !11513)
!11867 = !DILocation(line: 4506, column: 49, scope: !11513)
!11868 = !DILocation(line: 4506, column: 38, scope: !11513)
!11869 = !DILocation(line: 4506, column: 32, scope: !11513)
!11870 = !DILocation(line: 4505, column: 28, scope: !11513)
!11871 = !DILocation(line: 4506, column: 58, scope: !11513)
!11872 = !DILocation(line: 4506, column: 65, scope: !11513)
!11873 = !DILocation(line: 4507, column: 9, scope: !11513)
!11874 = !DILocation(line: 4507, column: 19, scope: !11513)
!11875 = !DILocation(line: 4506, column: 70, scope: !11513)
!11876 = !DILocation(line: 4507, column: 27, scope: !11513)
!11877 = !DILocation(line: 4507, column: 33, scope: !11513)
!11878 = !DILocation(line: 4507, column: 43, scope: !11513)
!11879 = !DILocation(line: 4507, column: 32, scope: !11513)
!11880 = !DILocation(line: 4507, column: 26, scope: !11513)
!11881 = !DILocation(line: 4507, column: 51, scope: !11513)
!11882 = !DILocation(line: 4507, column: 57, scope: !11513)
!11883 = !DILocation(line: 4507, column: 67, scope: !11513)
!11884 = !DILocation(line: 4507, column: 56, scope: !11513)
!11885 = !DILocation(line: 4507, column: 50, scope: !11513)
!11886 = !DILocation(line: 4508, column: 9, scope: !11513)
!11887 = !DILocation(line: 4508, column: 15, scope: !11513)
!11888 = !DILocation(line: 4508, column: 25, scope: !11513)
!11889 = !DILocation(line: 4508, column: 14, scope: !11513)
!11890 = !DILocation(line: 4507, column: 74, scope: !11513)
!11891 = !DILocation(line: 4506, column: 63, scope: !11513)
!11892 = !DILocation(line: 4506, column: 57, scope: !11513)
!11893 = !DILocation(line: 4508, column: 34, scope: !11513)
!11894 = !DILocation(line: 4508, column: 41, scope: !11513)
!11895 = !DILocation(line: 4508, column: 47, scope: !11513)
!11896 = !DILocation(line: 4508, column: 57, scope: !11513)
!11897 = !DILocation(line: 4508, column: 46, scope: !11513)
!11898 = !DILocation(line: 4508, column: 65, scope: !11513)
!11899 = !DILocation(line: 4509, column: 9, scope: !11513)
!11900 = !DILocation(line: 4509, column: 19, scope: !11513)
!11901 = !DILocation(line: 4508, column: 70, scope: !11513)
!11902 = !DILocation(line: 4508, column: 64, scope: !11513)
!11903 = !DILocation(line: 4509, column: 27, scope: !11513)
!11904 = !DILocation(line: 4509, column: 33, scope: !11513)
!11905 = !DILocation(line: 4509, column: 44, scope: !11513)
!11906 = !DILocation(line: 4509, column: 32, scope: !11513)
!11907 = !DILocation(line: 4509, column: 26, scope: !11513)
!11908 = !DILocation(line: 4509, column: 52, scope: !11513)
!11909 = !DILocation(line: 4509, column: 58, scope: !11513)
!11910 = !DILocation(line: 4509, column: 69, scope: !11513)
!11911 = !DILocation(line: 4509, column: 57, scope: !11513)
!11912 = !DILocation(line: 4509, column: 51, scope: !11513)
!11913 = !DILocation(line: 4508, column: 39, scope: !11513)
!11914 = !DILocation(line: 4508, column: 33, scope: !11513)
!11915 = !DILocation(line: 4510, column: 9, scope: !11513)
!11916 = !DILocation(line: 4510, column: 16, scope: !11513)
!11917 = !DILocation(line: 4510, column: 22, scope: !11513)
!11918 = !DILocation(line: 4510, column: 33, scope: !11513)
!11919 = !DILocation(line: 4510, column: 21, scope: !11513)
!11920 = !DILocation(line: 4510, column: 41, scope: !11513)
!11921 = !DILocation(line: 4510, column: 47, scope: !11513)
!11922 = !DILocation(line: 4510, column: 58, scope: !11513)
!11923 = !DILocation(line: 4510, column: 46, scope: !11513)
!11924 = !DILocation(line: 4510, column: 40, scope: !11513)
!11925 = !DILocation(line: 4510, column: 66, scope: !11513)
!11926 = !DILocation(line: 4511, column: 9, scope: !11513)
!11927 = !DILocation(line: 4511, column: 20, scope: !11513)
!11928 = !DILocation(line: 4510, column: 71, scope: !11513)
!11929 = !DILocation(line: 4510, column: 65, scope: !11513)
!11930 = !DILocation(line: 4511, column: 28, scope: !11513)
!11931 = !DILocation(line: 4511, column: 34, scope: !11513)
!11932 = !DILocation(line: 4511, column: 45, scope: !11513)
!11933 = !DILocation(line: 4511, column: 33, scope: !11513)
!11934 = !DILocation(line: 4511, column: 27, scope: !11513)
!11935 = !DILocation(line: 4510, column: 14, scope: !11513)
!11936 = !DILocation(line: 4509, column: 77, scope: !11513)
!11937 = !DILocation(line: 4505, column: 7, scope: !11513)
!11938 = !DILocation(line: 4505, column: 14, scope: !11513)
!11939 = !DILocation(line: 4505, column: 21, scope: !11513)
!11940 = !DILocation(line: 4512, column: 7, scope: !11513)
!11941 = !DILocalVariable(name: "filter_view", scope: !11942, file: !3, line: 4517, type: !11943)
!11942 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4515, column: 5)
!11943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10775, size: 64)
!11944 = !DILocation(line: 4517, column: 10, scope: !11942)
!11945 = !DILocalVariable(name: "excerpt_image", scope: !11942, file: !3, line: 4520, type: !475)
!11946 = !DILocation(line: 4520, column: 10, scope: !11942)
!11947 = !DILocalVariable(name: "filter_image", scope: !11942, file: !3, line: 4521, type: !475)
!11948 = !DILocation(line: 4521, column: 10, scope: !11942)
!11949 = !DILocalVariable(name: "geometry", scope: !11942, file: !3, line: 4524, type: !533)
!11950 = !DILocation(line: 4524, column: 9, scope: !11942)
!11951 = !DILocation(line: 4531, column: 16, scope: !11942)
!11952 = !DILocation(line: 4531, column: 21, scope: !11942)
!11953 = !DILocation(line: 4532, column: 16, scope: !11942)
!11954 = !DILocation(line: 4532, column: 22, scope: !11942)
!11955 = !DILocation(line: 4533, column: 18, scope: !11942)
!11956 = !DILocation(line: 4533, column: 26, scope: !11942)
!11957 = !DILocation(line: 4533, column: 16, scope: !11942)
!11958 = !DILocation(line: 4533, column: 17, scope: !11942)
!11959 = !DILocation(line: 4534, column: 18, scope: !11942)
!11960 = !DILocation(line: 4534, column: 26, scope: !11942)
!11961 = !DILocation(line: 4534, column: 16, scope: !11942)
!11962 = !DILocation(line: 4534, column: 17, scope: !11942)
!11963 = !DILocation(line: 4535, column: 34, scope: !11942)
!11964 = !DILocation(line: 4535, column: 50, scope: !11942)
!11965 = !DILocation(line: 4535, column: 21, scope: !11942)
!11966 = !DILocation(line: 4535, column: 20, scope: !11942)
!11967 = !DILocation(line: 4536, column: 11, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 4536, column: 11)
!11969 = !DILocation(line: 4536, column: 25, scope: !11968)
!11970 = !DILocation(line: 4536, column: 11, scope: !11942)
!11971 = !DILocation(line: 4538, column: 17, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11968, file: !3, line: 4537, column: 9)
!11973 = !DILocation(line: 4539, column: 11, scope: !11972)
!11974 = !DILocation(line: 4541, column: 32, scope: !11942)
!11975 = !DILocation(line: 4541, column: 50, scope: !11942)
!11976 = !DILocation(line: 4541, column: 57, scope: !11942)
!11977 = !DILocation(line: 4541, column: 64, scope: !11942)
!11978 = !DILocation(line: 4541, column: 71, scope: !11942)
!11979 = !DILocation(line: 4542, column: 9, scope: !11942)
!11980 = !DILocation(line: 4541, column: 20, scope: !11942)
!11981 = !DILocation(line: 4541, column: 19, scope: !11942)
!11982 = !DILocation(line: 4543, column: 34, scope: !11942)
!11983 = !DILocation(line: 4543, column: 21, scope: !11942)
!11984 = !DILocation(line: 4543, column: 20, scope: !11942)
!11985 = !DILocation(line: 4544, column: 11, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 4544, column: 11)
!11987 = !DILocation(line: 4544, column: 24, scope: !11986)
!11988 = !DILocation(line: 4544, column: 11, scope: !11942)
!11989 = !DILocation(line: 4545, column: 9, scope: !11986)
!11990 = !DILocation(line: 4546, column: 43, scope: !11942)
!11991 = !DILocation(line: 4546, column: 56, scope: !11942)
!11992 = !DILocation(line: 4546, column: 19, scope: !11942)
!11993 = !DILocation(line: 4546, column: 18, scope: !11942)
!11994 = !DILocation(line: 4547, column: 35, scope: !11942)
!11995 = !DILocation(line: 4547, column: 55, scope: !11942)
!11996 = !DILocation(line: 4547, column: 9, scope: !11942)
!11997 = !DILocation(line: 4547, column: 8, scope: !11942)
!11998 = !DILocation(line: 4548, column: 11, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 4548, column: 11)
!12000 = !DILocation(line: 4548, column: 13, scope: !11999)
!12001 = !DILocation(line: 4548, column: 11, scope: !11942)
!12002 = !DILocation(line: 4550, column: 40, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11999, file: !3, line: 4549, column: 9)
!12004 = !DILocation(line: 4550, column: 19, scope: !12003)
!12005 = !DILocation(line: 4550, column: 18, scope: !12003)
!12006 = !DILocation(line: 4551, column: 32, scope: !12003)
!12007 = !DILocation(line: 4551, column: 38, scope: !12003)
!12008 = !DILocation(line: 4551, column: 40, scope: !12003)
!12009 = !DILocation(line: 4551, column: 48, scope: !12003)
!12010 = !DILocation(line: 4551, column: 11, scope: !12003)
!12011 = !DILocation(line: 4552, column: 9, scope: !12003)
!12012 = !DILocation(line: 4553, column: 36, scope: !11942)
!12013 = !DILocation(line: 4553, column: 19, scope: !11942)
!12014 = !DILocation(line: 4553, column: 18, scope: !11942)
!12015 = !DILocation(line: 4554, column: 33, scope: !11942)
!12016 = !DILocation(line: 4554, column: 20, scope: !11942)
!12017 = !DILocation(line: 4554, column: 19, scope: !11942)
!12018 = !DILocation(line: 4555, column: 7, scope: !11942)
!12019 = !DILocation(line: 4559, column: 35, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4558, column: 5)
!12021 = !DILocation(line: 4559, column: 46, scope: !12020)
!12022 = !DILocation(line: 4559, column: 55, scope: !12020)
!12023 = !DILocation(line: 4559, column: 68, scope: !12020)
!12024 = !DILocation(line: 4559, column: 9, scope: !12020)
!12025 = !DILocation(line: 4559, column: 8, scope: !12020)
!12026 = !DILocation(line: 4560, column: 11, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 4560, column: 11)
!12028 = !DILocation(line: 4560, column: 13, scope: !12027)
!12029 = !DILocation(line: 4560, column: 11, scope: !12020)
!12030 = !DILocation(line: 4562, column: 17, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12027, file: !3, line: 4561, column: 9)
!12032 = !DILocation(line: 4563, column: 11, scope: !12031)
!12033 = !DILocation(line: 4565, column: 45, scope: !12020)
!12034 = !DILocation(line: 4565, column: 15, scope: !12020)
!12035 = !DILocation(line: 4565, column: 14, scope: !12020)
!12036 = !DILocation(line: 4566, column: 28, scope: !12020)
!12037 = !DILocation(line: 4566, column: 34, scope: !12020)
!12038 = !DILocation(line: 4566, column: 36, scope: !12020)
!12039 = !DILocation(line: 4566, column: 44, scope: !12020)
!12040 = !DILocation(line: 4566, column: 7, scope: !12020)
!12041 = !DILocation(line: 4567, column: 7, scope: !12020)
!12042 = !DILocalVariable(name: "delta", scope: !12043, file: !3, line: 4572, type: !11012)
!12043 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4570, column: 5)
!12044 = !DILocation(line: 4572, column: 9, scope: !12043)
!12045 = !DILocalVariable(name: "luma", scope: !12043, file: !3, line: 4573, type: !11012)
!12046 = !DILocation(line: 4573, column: 9, scope: !12043)
!12047 = !DILocation(line: 4575, column: 35, scope: !12043)
!12048 = !DILocation(line: 4575, column: 46, scope: !12043)
!12049 = !DILocation(line: 4575, column: 55, scope: !12043)
!12050 = !DILocation(line: 4576, column: 9, scope: !12043)
!12051 = !DILocation(line: 4575, column: 9, scope: !12043)
!12052 = !DILocation(line: 4575, column: 8, scope: !12043)
!12053 = !DILocation(line: 4577, column: 11, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 4577, column: 11)
!12055 = !DILocation(line: 4577, column: 13, scope: !12054)
!12056 = !DILocation(line: 4577, column: 11, scope: !12043)
!12057 = !DILocation(line: 4579, column: 17, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 4578, column: 9)
!12059 = !DILocation(line: 4580, column: 11, scope: !12058)
!12060 = !DILocation(line: 4582, column: 45, scope: !12043)
!12061 = !DILocation(line: 4582, column: 15, scope: !12043)
!12062 = !DILocation(line: 4582, column: 14, scope: !12043)
!12063 = !DILocation(line: 4583, column: 13, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 4583, column: 7)
!12065 = !DILocation(line: 4583, column: 12, scope: !12064)
!12066 = !DILocation(line: 4583, column: 17, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12064, file: !3, line: 4583, column: 7)
!12068 = !DILocation(line: 4583, column: 19, scope: !12067)
!12069 = !DILocation(line: 4583, column: 7, scope: !12064)
!12070 = !DILocation(line: 4585, column: 30, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12067, file: !3, line: 4584, column: 7)
!12072 = !DILocation(line: 4585, column: 36, scope: !12071)
!12073 = !DILocation(line: 4585, column: 43, scope: !12071)
!12074 = !DILocation(line: 4585, column: 42, scope: !12071)
!12075 = !DILocation(line: 4585, column: 9, scope: !12071)
!12076 = !DILocation(line: 4586, column: 37, scope: !12071)
!12077 = !DILocation(line: 4586, column: 43, scope: !12071)
!12078 = !DILocation(line: 4586, column: 45, scope: !12071)
!12079 = !DILocation(line: 4586, column: 44, scope: !12071)
!12080 = !DILocation(line: 4586, column: 47, scope: !12071)
!12081 = !DILocation(line: 4586, column: 55, scope: !12071)
!12082 = !DILocation(line: 4586, column: 54, scope: !12071)
!12083 = !DILocation(line: 4586, column: 57, scope: !12071)
!12084 = !DILocation(line: 4586, column: 64, scope: !12071)
!12085 = !DILocation(line: 4586, column: 63, scope: !12071)
!12086 = !DILocation(line: 4586, column: 66, scope: !12071)
!12087 = !DILocation(line: 4586, column: 72, scope: !12071)
!12088 = !DILocation(line: 4586, column: 71, scope: !12071)
!12089 = !DILocation(line: 4586, column: 9, scope: !12071)
!12090 = !DILocation(line: 4587, column: 7, scope: !12071)
!12091 = !DILocation(line: 4583, column: 26, scope: !12067)
!12092 = !DILocation(line: 4583, column: 7, scope: !12067)
!12093 = distinct !{!12093, !12069, !12094}
!12094 = !DILocation(line: 4587, column: 7, scope: !12064)
!12095 = !DILocation(line: 4588, column: 15, scope: !12043)
!12096 = !DILocation(line: 4588, column: 17, scope: !12043)
!12097 = !DILocation(line: 4588, column: 16, scope: !12043)
!12098 = !DILocation(line: 4588, column: 13, scope: !12043)
!12099 = !DILocation(line: 4588, column: 14, scope: !12043)
!12100 = !DILocation(line: 4589, column: 15, scope: !12043)
!12101 = !DILocation(line: 4589, column: 17, scope: !12043)
!12102 = !DILocation(line: 4589, column: 16, scope: !12043)
!12103 = !DILocation(line: 4589, column: 13, scope: !12043)
!12104 = !DILocation(line: 4589, column: 14, scope: !12043)
!12105 = !DILocation(line: 4590, column: 35, scope: !12043)
!12106 = !DILocation(line: 4590, column: 41, scope: !12043)
!12107 = !DILocation(line: 4590, column: 19, scope: !12043)
!12108 = !DILocation(line: 4590, column: 61, scope: !12043)
!12109 = !DILocation(line: 4590, column: 67, scope: !12043)
!12110 = !DILocation(line: 4590, column: 45, scope: !12043)
!12111 = !DILocation(line: 4590, column: 44, scope: !12043)
!12112 = !DILocation(line: 4590, column: 14, scope: !12043)
!12113 = !DILocation(line: 4590, column: 12, scope: !12043)
!12114 = !DILocation(line: 4590, column: 13, scope: !12043)
!12115 = !DILocation(line: 4591, column: 35, scope: !12043)
!12116 = !DILocation(line: 4591, column: 41, scope: !12043)
!12117 = !DILocation(line: 4591, column: 19, scope: !12043)
!12118 = !DILocation(line: 4591, column: 61, scope: !12043)
!12119 = !DILocation(line: 4591, column: 67, scope: !12043)
!12120 = !DILocation(line: 4591, column: 45, scope: !12043)
!12121 = !DILocation(line: 4591, column: 44, scope: !12043)
!12122 = !DILocation(line: 4591, column: 14, scope: !12043)
!12123 = !DILocation(line: 4591, column: 12, scope: !12043)
!12124 = !DILocation(line: 4591, column: 13, scope: !12043)
!12125 = !DILocation(line: 4592, column: 16, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 4592, column: 11)
!12127 = !DILocation(line: 4592, column: 25, scope: !12126)
!12128 = !DILocation(line: 4592, column: 18, scope: !12126)
!12129 = !DILocation(line: 4592, column: 11, scope: !12043)
!12130 = !DILocation(line: 4597, column: 21, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12132, file: !3, line: 4597, column: 15)
!12132 = distinct !DILexicalBlock(scope: !12126, file: !3, line: 4593, column: 9)
!12133 = !DILocation(line: 4597, column: 32, scope: !12131)
!12134 = !DILocation(line: 4597, column: 23, scope: !12131)
!12135 = !DILocation(line: 4597, column: 15, scope: !12132)
!12136 = !DILocation(line: 4602, column: 33, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12131, file: !3, line: 4598, column: 13)
!12138 = !DILocation(line: 4602, column: 26, scope: !12137)
!12139 = !DILocation(line: 4602, column: 21, scope: !12137)
!12140 = !DILocation(line: 4602, column: 22, scope: !12137)
!12141 = !DILocation(line: 4603, column: 44, scope: !12137)
!12142 = !DILocation(line: 4603, column: 53, scope: !12137)
!12143 = !DILocation(line: 4603, column: 62, scope: !12137)
!12144 = !DILocation(line: 4603, column: 21, scope: !12137)
!12145 = !DILocation(line: 4603, column: 20, scope: !12137)
!12146 = !DILocation(line: 4605, column: 19, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 4605, column: 19)
!12148 = !DILocation(line: 4605, column: 25, scope: !12147)
!12149 = !DILocation(line: 4605, column: 19, scope: !12137)
!12150 = !DILocation(line: 4605, column: 38, scope: !12147)
!12151 = !DILocation(line: 4605, column: 32, scope: !12147)
!12152 = !DILocation(line: 4607, column: 43, scope: !12137)
!12153 = !DILocation(line: 4607, column: 21, scope: !12137)
!12154 = !DILocation(line: 4607, column: 20, scope: !12137)
!12155 = !DILocation(line: 4608, column: 26, scope: !12137)
!12156 = !DILocation(line: 4608, column: 55, scope: !12137)
!12157 = !DILocation(line: 4608, column: 65, scope: !12137)
!12158 = !DILocation(line: 4609, column: 17, scope: !12137)
!12159 = !DILocation(line: 4609, column: 27, scope: !12137)
!12160 = !DILocation(line: 4609, column: 31, scope: !12137)
!12161 = !DILocation(line: 4609, column: 41, scope: !12137)
!12162 = !DILocation(line: 4608, column: 32, scope: !12137)
!12163 = !DILocation(line: 4608, column: 31, scope: !12137)
!12164 = !DILocation(line: 4608, column: 15, scope: !12137)
!12165 = !DILocation(line: 4608, column: 22, scope: !12137)
!12166 = !DILocation(line: 4608, column: 25, scope: !12137)
!12167 = !DILocation(line: 4610, column: 28, scope: !12137)
!12168 = !DILocation(line: 4610, column: 57, scope: !12137)
!12169 = !DILocation(line: 4610, column: 67, scope: !12137)
!12170 = !DILocation(line: 4611, column: 17, scope: !12137)
!12171 = !DILocation(line: 4611, column: 27, scope: !12137)
!12172 = !DILocation(line: 4611, column: 33, scope: !12137)
!12173 = !DILocation(line: 4611, column: 43, scope: !12137)
!12174 = !DILocation(line: 4610, column: 34, scope: !12137)
!12175 = !DILocation(line: 4610, column: 33, scope: !12137)
!12176 = !DILocation(line: 4610, column: 15, scope: !12137)
!12177 = !DILocation(line: 4610, column: 22, scope: !12137)
!12178 = !DILocation(line: 4610, column: 27, scope: !12137)
!12179 = !DILocation(line: 4612, column: 27, scope: !12137)
!12180 = !DILocation(line: 4612, column: 56, scope: !12137)
!12181 = !DILocation(line: 4612, column: 66, scope: !12137)
!12182 = !DILocation(line: 4613, column: 17, scope: !12137)
!12183 = !DILocation(line: 4613, column: 27, scope: !12137)
!12184 = !DILocation(line: 4613, column: 32, scope: !12137)
!12185 = !DILocation(line: 4613, column: 42, scope: !12137)
!12186 = !DILocation(line: 4612, column: 33, scope: !12137)
!12187 = !DILocation(line: 4612, column: 32, scope: !12137)
!12188 = !DILocation(line: 4612, column: 15, scope: !12137)
!12189 = !DILocation(line: 4612, column: 22, scope: !12137)
!12190 = !DILocation(line: 4612, column: 26, scope: !12137)
!12191 = !DILocation(line: 4614, column: 19, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 4614, column: 19)
!12193 = !DILocation(line: 4614, column: 26, scope: !12192)
!12194 = !DILocation(line: 4614, column: 37, scope: !12192)
!12195 = !DILocation(line: 4614, column: 19, scope: !12137)
!12196 = !DILocation(line: 4615, column: 30, scope: !12192)
!12197 = !DILocation(line: 4615, column: 59, scope: !12192)
!12198 = !DILocation(line: 4615, column: 69, scope: !12192)
!12199 = !DILocation(line: 4616, column: 19, scope: !12192)
!12200 = !DILocation(line: 4616, column: 29, scope: !12192)
!12201 = !DILocation(line: 4616, column: 35, scope: !12192)
!12202 = !DILocation(line: 4616, column: 45, scope: !12192)
!12203 = !DILocation(line: 4615, column: 36, scope: !12192)
!12204 = !DILocation(line: 4615, column: 35, scope: !12192)
!12205 = !DILocation(line: 4615, column: 17, scope: !12192)
!12206 = !DILocation(line: 4615, column: 24, scope: !12192)
!12207 = !DILocation(line: 4615, column: 29, scope: !12192)
!12208 = !DILocation(line: 4617, column: 21, scope: !12137)
!12209 = !DILocation(line: 4617, column: 20, scope: !12137)
!12210 = !DILocation(line: 4618, column: 30, scope: !12137)
!12211 = !DILocation(line: 4618, column: 59, scope: !12137)
!12212 = !DILocation(line: 4618, column: 69, scope: !12137)
!12213 = !DILocation(line: 4619, column: 17, scope: !12137)
!12214 = !DILocation(line: 4619, column: 27, scope: !12137)
!12215 = !DILocation(line: 4619, column: 35, scope: !12137)
!12216 = !DILocation(line: 4619, column: 45, scope: !12137)
!12217 = !DILocation(line: 4618, column: 36, scope: !12137)
!12218 = !DILocation(line: 4618, column: 35, scope: !12137)
!12219 = !DILocation(line: 4618, column: 15, scope: !12137)
!12220 = !DILocation(line: 4618, column: 22, scope: !12137)
!12221 = !DILocation(line: 4618, column: 29, scope: !12137)
!12222 = !DILocation(line: 4620, column: 13, scope: !12137)
!12223 = !DILocation(line: 4626, column: 33, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12131, file: !3, line: 4622, column: 13)
!12225 = !DILocation(line: 4626, column: 26, scope: !12224)
!12226 = !DILocation(line: 4626, column: 21, scope: !12224)
!12227 = !DILocation(line: 4626, column: 22, scope: !12224)
!12228 = !DILocation(line: 4627, column: 44, scope: !12224)
!12229 = !DILocation(line: 4627, column: 53, scope: !12224)
!12230 = !DILocation(line: 4627, column: 62, scope: !12224)
!12231 = !DILocation(line: 4627, column: 21, scope: !12224)
!12232 = !DILocation(line: 4627, column: 20, scope: !12224)
!12233 = !DILocation(line: 4629, column: 19, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12224, file: !3, line: 4629, column: 19)
!12235 = !DILocation(line: 4629, column: 25, scope: !12234)
!12236 = !DILocation(line: 4629, column: 19, scope: !12224)
!12237 = !DILocation(line: 4629, column: 38, scope: !12234)
!12238 = !DILocation(line: 4629, column: 32, scope: !12234)
!12239 = !DILocation(line: 4631, column: 43, scope: !12224)
!12240 = !DILocation(line: 4631, column: 21, scope: !12224)
!12241 = !DILocation(line: 4631, column: 20, scope: !12224)
!12242 = !DILocation(line: 4632, column: 26, scope: !12224)
!12243 = !DILocation(line: 4632, column: 55, scope: !12224)
!12244 = !DILocation(line: 4632, column: 65, scope: !12224)
!12245 = !DILocation(line: 4633, column: 17, scope: !12224)
!12246 = !DILocation(line: 4633, column: 27, scope: !12224)
!12247 = !DILocation(line: 4633, column: 31, scope: !12224)
!12248 = !DILocation(line: 4633, column: 41, scope: !12224)
!12249 = !DILocation(line: 4632, column: 32, scope: !12224)
!12250 = !DILocation(line: 4632, column: 31, scope: !12224)
!12251 = !DILocation(line: 4632, column: 15, scope: !12224)
!12252 = !DILocation(line: 4632, column: 22, scope: !12224)
!12253 = !DILocation(line: 4632, column: 25, scope: !12224)
!12254 = !DILocation(line: 4634, column: 28, scope: !12224)
!12255 = !DILocation(line: 4634, column: 57, scope: !12224)
!12256 = !DILocation(line: 4634, column: 67, scope: !12224)
!12257 = !DILocation(line: 4635, column: 17, scope: !12224)
!12258 = !DILocation(line: 4635, column: 27, scope: !12224)
!12259 = !DILocation(line: 4635, column: 33, scope: !12224)
!12260 = !DILocation(line: 4635, column: 43, scope: !12224)
!12261 = !DILocation(line: 4634, column: 34, scope: !12224)
!12262 = !DILocation(line: 4634, column: 33, scope: !12224)
!12263 = !DILocation(line: 4634, column: 15, scope: !12224)
!12264 = !DILocation(line: 4634, column: 22, scope: !12224)
!12265 = !DILocation(line: 4634, column: 27, scope: !12224)
!12266 = !DILocation(line: 4636, column: 27, scope: !12224)
!12267 = !DILocation(line: 4636, column: 56, scope: !12224)
!12268 = !DILocation(line: 4636, column: 66, scope: !12224)
!12269 = !DILocation(line: 4637, column: 17, scope: !12224)
!12270 = !DILocation(line: 4637, column: 27, scope: !12224)
!12271 = !DILocation(line: 4637, column: 32, scope: !12224)
!12272 = !DILocation(line: 4637, column: 42, scope: !12224)
!12273 = !DILocation(line: 4636, column: 33, scope: !12224)
!12274 = !DILocation(line: 4636, column: 32, scope: !12224)
!12275 = !DILocation(line: 4636, column: 15, scope: !12224)
!12276 = !DILocation(line: 4636, column: 22, scope: !12224)
!12277 = !DILocation(line: 4636, column: 26, scope: !12224)
!12278 = !DILocation(line: 4638, column: 19, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12224, file: !3, line: 4638, column: 19)
!12280 = !DILocation(line: 4638, column: 26, scope: !12279)
!12281 = !DILocation(line: 4638, column: 37, scope: !12279)
!12282 = !DILocation(line: 4638, column: 19, scope: !12224)
!12283 = !DILocation(line: 4639, column: 30, scope: !12279)
!12284 = !DILocation(line: 4639, column: 59, scope: !12279)
!12285 = !DILocation(line: 4639, column: 69, scope: !12279)
!12286 = !DILocation(line: 4640, column: 19, scope: !12279)
!12287 = !DILocation(line: 4640, column: 29, scope: !12279)
!12288 = !DILocation(line: 4640, column: 35, scope: !12279)
!12289 = !DILocation(line: 4640, column: 45, scope: !12279)
!12290 = !DILocation(line: 4639, column: 36, scope: !12279)
!12291 = !DILocation(line: 4639, column: 35, scope: !12279)
!12292 = !DILocation(line: 4639, column: 17, scope: !12279)
!12293 = !DILocation(line: 4639, column: 24, scope: !12279)
!12294 = !DILocation(line: 4639, column: 29, scope: !12279)
!12295 = !DILocation(line: 4641, column: 21, scope: !12224)
!12296 = !DILocation(line: 4641, column: 20, scope: !12224)
!12297 = !DILocation(line: 4642, column: 30, scope: !12224)
!12298 = !DILocation(line: 4642, column: 59, scope: !12224)
!12299 = !DILocation(line: 4642, column: 69, scope: !12224)
!12300 = !DILocation(line: 4643, column: 17, scope: !12224)
!12301 = !DILocation(line: 4643, column: 27, scope: !12224)
!12302 = !DILocation(line: 4643, column: 35, scope: !12224)
!12303 = !DILocation(line: 4643, column: 45, scope: !12224)
!12304 = !DILocation(line: 4642, column: 36, scope: !12224)
!12305 = !DILocation(line: 4642, column: 35, scope: !12224)
!12306 = !DILocation(line: 4642, column: 15, scope: !12224)
!12307 = !DILocation(line: 4642, column: 22, scope: !12224)
!12308 = !DILocation(line: 4642, column: 29, scope: !12224)
!12309 = !DILocation(line: 4645, column: 9, scope: !12132)
!12310 = !DILocation(line: 4651, column: 21, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 4651, column: 15)
!12312 = distinct !DILexicalBlock(scope: !12126, file: !3, line: 4647, column: 9)
!12313 = !DILocation(line: 4651, column: 37, scope: !12311)
!12314 = !DILocation(line: 4651, column: 30, scope: !12311)
!12315 = !DILocation(line: 4651, column: 23, scope: !12311)
!12316 = !DILocation(line: 4651, column: 15, scope: !12312)
!12317 = !DILocation(line: 4656, column: 44, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12311, file: !3, line: 4652, column: 13)
!12319 = !DILocation(line: 4656, column: 53, scope: !12318)
!12320 = !DILocation(line: 4656, column: 62, scope: !12318)
!12321 = !DILocation(line: 4656, column: 21, scope: !12318)
!12322 = !DILocation(line: 4656, column: 20, scope: !12318)
!12323 = !DILocation(line: 4658, column: 19, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12318, file: !3, line: 4658, column: 19)
!12325 = !DILocation(line: 4658, column: 25, scope: !12324)
!12326 = !DILocation(line: 4658, column: 19, scope: !12318)
!12327 = !DILocation(line: 4658, column: 38, scope: !12324)
!12328 = !DILocation(line: 4658, column: 32, scope: !12324)
!12329 = !DILocation(line: 4660, column: 43, scope: !12318)
!12330 = !DILocation(line: 4660, column: 21, scope: !12318)
!12331 = !DILocation(line: 4660, column: 20, scope: !12318)
!12332 = !DILocation(line: 4661, column: 26, scope: !12318)
!12333 = !DILocation(line: 4661, column: 55, scope: !12318)
!12334 = !DILocation(line: 4661, column: 65, scope: !12318)
!12335 = !DILocation(line: 4662, column: 17, scope: !12318)
!12336 = !DILocation(line: 4662, column: 27, scope: !12318)
!12337 = !DILocation(line: 4662, column: 31, scope: !12318)
!12338 = !DILocation(line: 4662, column: 41, scope: !12318)
!12339 = !DILocation(line: 4661, column: 32, scope: !12318)
!12340 = !DILocation(line: 4661, column: 31, scope: !12318)
!12341 = !DILocation(line: 4661, column: 15, scope: !12318)
!12342 = !DILocation(line: 4661, column: 22, scope: !12318)
!12343 = !DILocation(line: 4661, column: 25, scope: !12318)
!12344 = !DILocation(line: 4663, column: 28, scope: !12318)
!12345 = !DILocation(line: 4663, column: 57, scope: !12318)
!12346 = !DILocation(line: 4663, column: 67, scope: !12318)
!12347 = !DILocation(line: 4664, column: 17, scope: !12318)
!12348 = !DILocation(line: 4664, column: 27, scope: !12318)
!12349 = !DILocation(line: 4664, column: 33, scope: !12318)
!12350 = !DILocation(line: 4664, column: 43, scope: !12318)
!12351 = !DILocation(line: 4663, column: 34, scope: !12318)
!12352 = !DILocation(line: 4663, column: 33, scope: !12318)
!12353 = !DILocation(line: 4663, column: 15, scope: !12318)
!12354 = !DILocation(line: 4663, column: 22, scope: !12318)
!12355 = !DILocation(line: 4663, column: 27, scope: !12318)
!12356 = !DILocation(line: 4665, column: 27, scope: !12318)
!12357 = !DILocation(line: 4665, column: 56, scope: !12318)
!12358 = !DILocation(line: 4665, column: 66, scope: !12318)
!12359 = !DILocation(line: 4666, column: 17, scope: !12318)
!12360 = !DILocation(line: 4666, column: 27, scope: !12318)
!12361 = !DILocation(line: 4666, column: 32, scope: !12318)
!12362 = !DILocation(line: 4666, column: 42, scope: !12318)
!12363 = !DILocation(line: 4665, column: 33, scope: !12318)
!12364 = !DILocation(line: 4665, column: 32, scope: !12318)
!12365 = !DILocation(line: 4665, column: 15, scope: !12318)
!12366 = !DILocation(line: 4665, column: 22, scope: !12318)
!12367 = !DILocation(line: 4665, column: 26, scope: !12318)
!12368 = !DILocation(line: 4667, column: 19, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12318, file: !3, line: 4667, column: 19)
!12370 = !DILocation(line: 4667, column: 26, scope: !12369)
!12371 = !DILocation(line: 4667, column: 37, scope: !12369)
!12372 = !DILocation(line: 4667, column: 19, scope: !12318)
!12373 = !DILocation(line: 4668, column: 30, scope: !12369)
!12374 = !DILocation(line: 4668, column: 59, scope: !12369)
!12375 = !DILocation(line: 4668, column: 69, scope: !12369)
!12376 = !DILocation(line: 4669, column: 19, scope: !12369)
!12377 = !DILocation(line: 4669, column: 29, scope: !12369)
!12378 = !DILocation(line: 4669, column: 35, scope: !12369)
!12379 = !DILocation(line: 4669, column: 45, scope: !12369)
!12380 = !DILocation(line: 4668, column: 36, scope: !12369)
!12381 = !DILocation(line: 4668, column: 35, scope: !12369)
!12382 = !DILocation(line: 4668, column: 17, scope: !12369)
!12383 = !DILocation(line: 4668, column: 24, scope: !12369)
!12384 = !DILocation(line: 4668, column: 29, scope: !12369)
!12385 = !DILocation(line: 4670, column: 21, scope: !12318)
!12386 = !DILocation(line: 4670, column: 20, scope: !12318)
!12387 = !DILocation(line: 4671, column: 30, scope: !12318)
!12388 = !DILocation(line: 4671, column: 59, scope: !12318)
!12389 = !DILocation(line: 4671, column: 69, scope: !12318)
!12390 = !DILocation(line: 4672, column: 17, scope: !12318)
!12391 = !DILocation(line: 4672, column: 27, scope: !12318)
!12392 = !DILocation(line: 4672, column: 35, scope: !12318)
!12393 = !DILocation(line: 4672, column: 45, scope: !12318)
!12394 = !DILocation(line: 4671, column: 36, scope: !12318)
!12395 = !DILocation(line: 4671, column: 35, scope: !12318)
!12396 = !DILocation(line: 4671, column: 15, scope: !12318)
!12397 = !DILocation(line: 4671, column: 22, scope: !12318)
!12398 = !DILocation(line: 4671, column: 29, scope: !12318)
!12399 = !DILocation(line: 4673, column: 13, scope: !12318)
!12400 = !DILocation(line: 4679, column: 33, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12311, file: !3, line: 4675, column: 13)
!12402 = !DILocation(line: 4679, column: 26, scope: !12401)
!12403 = !DILocation(line: 4679, column: 21, scope: !12401)
!12404 = !DILocation(line: 4679, column: 22, scope: !12401)
!12405 = !DILocation(line: 4680, column: 33, scope: !12401)
!12406 = !DILocation(line: 4680, column: 26, scope: !12401)
!12407 = !DILocation(line: 4680, column: 21, scope: !12401)
!12408 = !DILocation(line: 4680, column: 22, scope: !12401)
!12409 = !DILocation(line: 4681, column: 44, scope: !12401)
!12410 = !DILocation(line: 4681, column: 53, scope: !12401)
!12411 = !DILocation(line: 4681, column: 62, scope: !12401)
!12412 = !DILocation(line: 4681, column: 21, scope: !12401)
!12413 = !DILocation(line: 4681, column: 20, scope: !12401)
!12414 = !DILocation(line: 4683, column: 19, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 4683, column: 19)
!12416 = !DILocation(line: 4683, column: 25, scope: !12415)
!12417 = !DILocation(line: 4683, column: 19, scope: !12401)
!12418 = !DILocation(line: 4683, column: 38, scope: !12415)
!12419 = !DILocation(line: 4683, column: 32, scope: !12415)
!12420 = !DILocation(line: 4685, column: 43, scope: !12401)
!12421 = !DILocation(line: 4685, column: 21, scope: !12401)
!12422 = !DILocation(line: 4685, column: 20, scope: !12401)
!12423 = !DILocation(line: 4686, column: 26, scope: !12401)
!12424 = !DILocation(line: 4686, column: 55, scope: !12401)
!12425 = !DILocation(line: 4686, column: 65, scope: !12401)
!12426 = !DILocation(line: 4687, column: 17, scope: !12401)
!12427 = !DILocation(line: 4687, column: 27, scope: !12401)
!12428 = !DILocation(line: 4687, column: 31, scope: !12401)
!12429 = !DILocation(line: 4687, column: 41, scope: !12401)
!12430 = !DILocation(line: 4686, column: 32, scope: !12401)
!12431 = !DILocation(line: 4686, column: 31, scope: !12401)
!12432 = !DILocation(line: 4686, column: 15, scope: !12401)
!12433 = !DILocation(line: 4686, column: 22, scope: !12401)
!12434 = !DILocation(line: 4686, column: 25, scope: !12401)
!12435 = !DILocation(line: 4688, column: 28, scope: !12401)
!12436 = !DILocation(line: 4688, column: 57, scope: !12401)
!12437 = !DILocation(line: 4688, column: 67, scope: !12401)
!12438 = !DILocation(line: 4689, column: 17, scope: !12401)
!12439 = !DILocation(line: 4689, column: 27, scope: !12401)
!12440 = !DILocation(line: 4689, column: 33, scope: !12401)
!12441 = !DILocation(line: 4689, column: 43, scope: !12401)
!12442 = !DILocation(line: 4688, column: 34, scope: !12401)
!12443 = !DILocation(line: 4688, column: 33, scope: !12401)
!12444 = !DILocation(line: 4688, column: 15, scope: !12401)
!12445 = !DILocation(line: 4688, column: 22, scope: !12401)
!12446 = !DILocation(line: 4688, column: 27, scope: !12401)
!12447 = !DILocation(line: 4690, column: 27, scope: !12401)
!12448 = !DILocation(line: 4690, column: 56, scope: !12401)
!12449 = !DILocation(line: 4690, column: 66, scope: !12401)
!12450 = !DILocation(line: 4691, column: 17, scope: !12401)
!12451 = !DILocation(line: 4691, column: 27, scope: !12401)
!12452 = !DILocation(line: 4691, column: 32, scope: !12401)
!12453 = !DILocation(line: 4691, column: 42, scope: !12401)
!12454 = !DILocation(line: 4690, column: 33, scope: !12401)
!12455 = !DILocation(line: 4690, column: 32, scope: !12401)
!12456 = !DILocation(line: 4690, column: 15, scope: !12401)
!12457 = !DILocation(line: 4690, column: 22, scope: !12401)
!12458 = !DILocation(line: 4690, column: 26, scope: !12401)
!12459 = !DILocation(line: 4692, column: 19, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 4692, column: 19)
!12461 = !DILocation(line: 4692, column: 26, scope: !12460)
!12462 = !DILocation(line: 4692, column: 37, scope: !12460)
!12463 = !DILocation(line: 4692, column: 19, scope: !12401)
!12464 = !DILocation(line: 4693, column: 30, scope: !12460)
!12465 = !DILocation(line: 4693, column: 59, scope: !12460)
!12466 = !DILocation(line: 4693, column: 69, scope: !12460)
!12467 = !DILocation(line: 4694, column: 19, scope: !12460)
!12468 = !DILocation(line: 4694, column: 29, scope: !12460)
!12469 = !DILocation(line: 4694, column: 35, scope: !12460)
!12470 = !DILocation(line: 4694, column: 45, scope: !12460)
!12471 = !DILocation(line: 4693, column: 36, scope: !12460)
!12472 = !DILocation(line: 4693, column: 35, scope: !12460)
!12473 = !DILocation(line: 4693, column: 17, scope: !12460)
!12474 = !DILocation(line: 4693, column: 24, scope: !12460)
!12475 = !DILocation(line: 4693, column: 29, scope: !12460)
!12476 = !DILocation(line: 4695, column: 21, scope: !12401)
!12477 = !DILocation(line: 4695, column: 20, scope: !12401)
!12478 = !DILocation(line: 4696, column: 30, scope: !12401)
!12479 = !DILocation(line: 4696, column: 59, scope: !12401)
!12480 = !DILocation(line: 4696, column: 69, scope: !12401)
!12481 = !DILocation(line: 4697, column: 17, scope: !12401)
!12482 = !DILocation(line: 4697, column: 27, scope: !12401)
!12483 = !DILocation(line: 4697, column: 35, scope: !12401)
!12484 = !DILocation(line: 4697, column: 45, scope: !12401)
!12485 = !DILocation(line: 4696, column: 36, scope: !12401)
!12486 = !DILocation(line: 4696, column: 35, scope: !12401)
!12487 = !DILocation(line: 4696, column: 15, scope: !12401)
!12488 = !DILocation(line: 4696, column: 22, scope: !12401)
!12489 = !DILocation(line: 4696, column: 29, scope: !12401)
!12490 = !DILocation(line: 4700, column: 7, scope: !12043)
!12491 = !DILocation(line: 4704, column: 35, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4703, column: 5)
!12493 = !DILocation(line: 4704, column: 62, scope: !12492)
!12494 = !DILocation(line: 4704, column: 63, scope: !12492)
!12495 = !DILocation(line: 4704, column: 56, scope: !12492)
!12496 = !DILocation(line: 4704, column: 46, scope: !12492)
!12497 = !DILocation(line: 4705, column: 25, scope: !12492)
!12498 = !DILocation(line: 4705, column: 26, scope: !12492)
!12499 = !DILocation(line: 4705, column: 19, scope: !12492)
!12500 = !DILocation(line: 4705, column: 9, scope: !12492)
!12501 = !DILocation(line: 4705, column: 36, scope: !12492)
!12502 = !DILocation(line: 4704, column: 9, scope: !12492)
!12503 = !DILocation(line: 4704, column: 8, scope: !12492)
!12504 = !DILocation(line: 4706, column: 11, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 4706, column: 11)
!12506 = !DILocation(line: 4706, column: 13, scope: !12505)
!12507 = !DILocation(line: 4706, column: 11, scope: !12492)
!12508 = !DILocation(line: 4708, column: 17, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12505, file: !3, line: 4707, column: 9)
!12510 = !DILocation(line: 4709, column: 11, scope: !12509)
!12511 = !DILocation(line: 4711, column: 45, scope: !12492)
!12512 = !DILocation(line: 4711, column: 15, scope: !12492)
!12513 = !DILocation(line: 4711, column: 14, scope: !12492)
!12514 = !DILocation(line: 4712, column: 28, scope: !12492)
!12515 = !DILocation(line: 4712, column: 34, scope: !12492)
!12516 = !DILocation(line: 4712, column: 36, scope: !12492)
!12517 = !DILocation(line: 4712, column: 44, scope: !12492)
!12518 = !DILocation(line: 4712, column: 7, scope: !12492)
!12519 = !DILocation(line: 4713, column: 7, scope: !12492)
!12520 = !DILocalVariable(name: "cx", scope: !12521, file: !3, line: 4718, type: !11514)
!12521 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4716, column: 5)
!12522 = !DILocation(line: 4718, column: 9, scope: !12521)
!12523 = !DILocalVariable(name: "cy", scope: !12521, file: !3, line: 4719, type: !11514)
!12524 = !DILocation(line: 4719, column: 9, scope: !12521)
!12525 = !DILocation(line: 4721, column: 35, scope: !12521)
!12526 = !DILocation(line: 4721, column: 46, scope: !12521)
!12527 = !DILocation(line: 4721, column: 54, scope: !12521)
!12528 = !DILocation(line: 4721, column: 57, scope: !12521)
!12529 = !DILocation(line: 4721, column: 65, scope: !12521)
!12530 = !DILocation(line: 4722, column: 9, scope: !12521)
!12531 = !DILocation(line: 4721, column: 9, scope: !12521)
!12532 = !DILocation(line: 4721, column: 8, scope: !12521)
!12533 = !DILocation(line: 4723, column: 11, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 4723, column: 11)
!12535 = !DILocation(line: 4723, column: 13, scope: !12534)
!12536 = !DILocation(line: 4723, column: 11, scope: !12521)
!12537 = !DILocation(line: 4725, column: 17, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12534, file: !3, line: 4724, column: 9)
!12539 = !DILocation(line: 4726, column: 11, scope: !12538)
!12540 = !DILocation(line: 4728, column: 45, scope: !12521)
!12541 = !DILocation(line: 4728, column: 15, scope: !12521)
!12542 = !DILocation(line: 4728, column: 14, scope: !12521)
!12543 = !DILocation(line: 4729, column: 13, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 4729, column: 7)
!12545 = !DILocation(line: 4729, column: 12, scope: !12544)
!12546 = !DILocation(line: 4729, column: 17, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12544, file: !3, line: 4729, column: 7)
!12548 = !DILocation(line: 4729, column: 19, scope: !12547)
!12549 = !DILocation(line: 4729, column: 7, scope: !12544)
!12550 = !DILocation(line: 4731, column: 30, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12547, file: !3, line: 4730, column: 7)
!12552 = !DILocation(line: 4731, column: 36, scope: !12551)
!12553 = !DILocation(line: 4731, column: 43, scope: !12551)
!12554 = !DILocation(line: 4731, column: 42, scope: !12551)
!12555 = !DILocation(line: 4731, column: 9, scope: !12551)
!12556 = !DILocation(line: 4732, column: 37, scope: !12551)
!12557 = !DILocation(line: 4732, column: 43, scope: !12551)
!12558 = !DILocation(line: 4732, column: 45, scope: !12551)
!12559 = !DILocation(line: 4732, column: 44, scope: !12551)
!12560 = !DILocation(line: 4732, column: 47, scope: !12551)
!12561 = !DILocation(line: 4732, column: 55, scope: !12551)
!12562 = !DILocation(line: 4732, column: 54, scope: !12551)
!12563 = !DILocation(line: 4732, column: 57, scope: !12551)
!12564 = !DILocation(line: 4732, column: 64, scope: !12551)
!12565 = !DILocation(line: 4732, column: 63, scope: !12551)
!12566 = !DILocation(line: 4732, column: 66, scope: !12551)
!12567 = !DILocation(line: 4732, column: 72, scope: !12551)
!12568 = !DILocation(line: 4732, column: 71, scope: !12551)
!12569 = !DILocation(line: 4732, column: 9, scope: !12551)
!12570 = !DILocation(line: 4733, column: 7, scope: !12551)
!12571 = !DILocation(line: 4729, column: 27, scope: !12547)
!12572 = !DILocation(line: 4729, column: 7, scope: !12547)
!12573 = distinct !{!12573, !12549, !12574}
!12574 = !DILocation(line: 4733, column: 7, scope: !12544)
!12575 = !DILocation(line: 4734, column: 39, scope: !12521)
!12576 = !DILocation(line: 4734, column: 41, scope: !12521)
!12577 = !DILocation(line: 4734, column: 40, scope: !12521)
!12578 = !DILocation(line: 4734, column: 21, scope: !12521)
!12579 = !DILocation(line: 4734, column: 7, scope: !12521)
!12580 = !DILocation(line: 4735, column: 39, scope: !12521)
!12581 = !DILocation(line: 4735, column: 41, scope: !12521)
!12582 = !DILocation(line: 4735, column: 40, scope: !12521)
!12583 = !DILocation(line: 4735, column: 21, scope: !12521)
!12584 = !DILocation(line: 4735, column: 7, scope: !12521)
!12585 = !DILocation(line: 4736, column: 19, scope: !12521)
!12586 = !DILocation(line: 4736, column: 26, scope: !12521)
!12587 = !DILocation(line: 4736, column: 32, scope: !12521)
!12588 = !DILocation(line: 4736, column: 42, scope: !12521)
!12589 = !DILocation(line: 4736, column: 31, scope: !12521)
!12590 = !DILocation(line: 4736, column: 46, scope: !12521)
!12591 = !DILocation(line: 4736, column: 52, scope: !12521)
!12592 = !DILocation(line: 4736, column: 62, scope: !12521)
!12593 = !DILocation(line: 4736, column: 51, scope: !12521)
!12594 = !DILocation(line: 4736, column: 45, scope: !12521)
!12595 = !DILocation(line: 4736, column: 66, scope: !12521)
!12596 = !DILocation(line: 4737, column: 9, scope: !12521)
!12597 = !DILocation(line: 4737, column: 19, scope: !12521)
!12598 = !DILocation(line: 4736, column: 71, scope: !12521)
!12599 = !DILocation(line: 4736, column: 65, scope: !12521)
!12600 = !DILocation(line: 4737, column: 23, scope: !12521)
!12601 = !DILocation(line: 4737, column: 29, scope: !12521)
!12602 = !DILocation(line: 4737, column: 39, scope: !12521)
!12603 = !DILocation(line: 4737, column: 28, scope: !12521)
!12604 = !DILocation(line: 4737, column: 22, scope: !12521)
!12605 = !DILocation(line: 4736, column: 24, scope: !12521)
!12606 = !DILocation(line: 4737, column: 44, scope: !12521)
!12607 = !DILocation(line: 4737, column: 51, scope: !12521)
!12608 = !DILocation(line: 4737, column: 57, scope: !12521)
!12609 = !DILocation(line: 4737, column: 67, scope: !12521)
!12610 = !DILocation(line: 4737, column: 56, scope: !12521)
!12611 = !DILocation(line: 4737, column: 71, scope: !12521)
!12612 = !DILocation(line: 4738, column: 9, scope: !12521)
!12613 = !DILocation(line: 4738, column: 19, scope: !12521)
!12614 = !DILocation(line: 4737, column: 76, scope: !12521)
!12615 = !DILocation(line: 4737, column: 70, scope: !12521)
!12616 = !DILocation(line: 4738, column: 23, scope: !12521)
!12617 = !DILocation(line: 4738, column: 29, scope: !12521)
!12618 = !DILocation(line: 4738, column: 39, scope: !12521)
!12619 = !DILocation(line: 4738, column: 28, scope: !12521)
!12620 = !DILocation(line: 4738, column: 22, scope: !12521)
!12621 = !DILocation(line: 4738, column: 43, scope: !12521)
!12622 = !DILocation(line: 4738, column: 49, scope: !12521)
!12623 = !DILocation(line: 4738, column: 59, scope: !12521)
!12624 = !DILocation(line: 4738, column: 48, scope: !12521)
!12625 = !DILocation(line: 4738, column: 42, scope: !12521)
!12626 = !DILocation(line: 4737, column: 49, scope: !12521)
!12627 = !DILocation(line: 4737, column: 43, scope: !12521)
!12628 = !DILocation(line: 4738, column: 64, scope: !12521)
!12629 = !DILocation(line: 4738, column: 71, scope: !12521)
!12630 = !DILocation(line: 4739, column: 9, scope: !12521)
!12631 = !DILocation(line: 4739, column: 19, scope: !12521)
!12632 = !DILocation(line: 4738, column: 76, scope: !12521)
!12633 = !DILocation(line: 4739, column: 23, scope: !12521)
!12634 = !DILocation(line: 4739, column: 29, scope: !12521)
!12635 = !DILocation(line: 4739, column: 39, scope: !12521)
!12636 = !DILocation(line: 4739, column: 28, scope: !12521)
!12637 = !DILocation(line: 4739, column: 22, scope: !12521)
!12638 = !DILocation(line: 4739, column: 43, scope: !12521)
!12639 = !DILocation(line: 4739, column: 49, scope: !12521)
!12640 = !DILocation(line: 4739, column: 60, scope: !12521)
!12641 = !DILocation(line: 4739, column: 48, scope: !12521)
!12642 = !DILocation(line: 4739, column: 42, scope: !12521)
!12643 = !DILocation(line: 4739, column: 64, scope: !12521)
!12644 = !DILocation(line: 4740, column: 9, scope: !12521)
!12645 = !DILocation(line: 4740, column: 20, scope: !12521)
!12646 = !DILocation(line: 4739, column: 69, scope: !12521)
!12647 = !DILocation(line: 4739, column: 63, scope: !12521)
!12648 = !DILocation(line: 4738, column: 69, scope: !12521)
!12649 = !DILocation(line: 4738, column: 63, scope: !12521)
!12650 = !DILocation(line: 4740, column: 25, scope: !12521)
!12651 = !DILocation(line: 4740, column: 32, scope: !12521)
!12652 = !DILocation(line: 4740, column: 38, scope: !12521)
!12653 = !DILocation(line: 4740, column: 49, scope: !12521)
!12654 = !DILocation(line: 4740, column: 37, scope: !12521)
!12655 = !DILocation(line: 4740, column: 53, scope: !12521)
!12656 = !DILocation(line: 4740, column: 59, scope: !12521)
!12657 = !DILocation(line: 4740, column: 70, scope: !12521)
!12658 = !DILocation(line: 4740, column: 58, scope: !12521)
!12659 = !DILocation(line: 4740, column: 52, scope: !12521)
!12660 = !DILocation(line: 4740, column: 74, scope: !12521)
!12661 = !DILocation(line: 4741, column: 9, scope: !12521)
!12662 = !DILocation(line: 4741, column: 20, scope: !12521)
!12663 = !DILocation(line: 4740, column: 79, scope: !12521)
!12664 = !DILocation(line: 4740, column: 73, scope: !12521)
!12665 = !DILocation(line: 4741, column: 24, scope: !12521)
!12666 = !DILocation(line: 4741, column: 30, scope: !12521)
!12667 = !DILocation(line: 4741, column: 41, scope: !12521)
!12668 = !DILocation(line: 4741, column: 29, scope: !12521)
!12669 = !DILocation(line: 4741, column: 23, scope: !12521)
!12670 = !DILocation(line: 4740, column: 30, scope: !12521)
!12671 = !DILocation(line: 4740, column: 24, scope: !12521)
!12672 = !DILocation(line: 4736, column: 7, scope: !12521)
!12673 = !DILocation(line: 4736, column: 14, scope: !12521)
!12674 = !DILocation(line: 4736, column: 17, scope: !12521)
!12675 = !DILocation(line: 4742, column: 21, scope: !12521)
!12676 = !DILocation(line: 4742, column: 28, scope: !12521)
!12677 = !DILocation(line: 4742, column: 34, scope: !12521)
!12678 = !DILocation(line: 4742, column: 44, scope: !12521)
!12679 = !DILocation(line: 4742, column: 33, scope: !12521)
!12680 = !DILocation(line: 4742, column: 50, scope: !12521)
!12681 = !DILocation(line: 4742, column: 56, scope: !12521)
!12682 = !DILocation(line: 4742, column: 66, scope: !12521)
!12683 = !DILocation(line: 4742, column: 55, scope: !12521)
!12684 = !DILocation(line: 4742, column: 49, scope: !12521)
!12685 = !DILocation(line: 4742, column: 72, scope: !12521)
!12686 = !DILocation(line: 4743, column: 9, scope: !12521)
!12687 = !DILocation(line: 4743, column: 19, scope: !12521)
!12688 = !DILocation(line: 4742, column: 77, scope: !12521)
!12689 = !DILocation(line: 4742, column: 71, scope: !12521)
!12690 = !DILocation(line: 4743, column: 25, scope: !12521)
!12691 = !DILocation(line: 4743, column: 31, scope: !12521)
!12692 = !DILocation(line: 4743, column: 41, scope: !12521)
!12693 = !DILocation(line: 4743, column: 30, scope: !12521)
!12694 = !DILocation(line: 4743, column: 24, scope: !12521)
!12695 = !DILocation(line: 4742, column: 26, scope: !12521)
!12696 = !DILocation(line: 4743, column: 48, scope: !12521)
!12697 = !DILocation(line: 4743, column: 55, scope: !12521)
!12698 = !DILocation(line: 4743, column: 61, scope: !12521)
!12699 = !DILocation(line: 4743, column: 71, scope: !12521)
!12700 = !DILocation(line: 4743, column: 60, scope: !12521)
!12701 = !DILocation(line: 4744, column: 9, scope: !12521)
!12702 = !DILocation(line: 4744, column: 15, scope: !12521)
!12703 = !DILocation(line: 4744, column: 25, scope: !12521)
!12704 = !DILocation(line: 4744, column: 14, scope: !12521)
!12705 = !DILocation(line: 4743, column: 76, scope: !12521)
!12706 = !DILocation(line: 4744, column: 31, scope: !12521)
!12707 = !DILocation(line: 4744, column: 37, scope: !12521)
!12708 = !DILocation(line: 4744, column: 47, scope: !12521)
!12709 = !DILocation(line: 4744, column: 36, scope: !12521)
!12710 = !DILocation(line: 4744, column: 30, scope: !12521)
!12711 = !DILocation(line: 4744, column: 53, scope: !12521)
!12712 = !DILocation(line: 4744, column: 59, scope: !12521)
!12713 = !DILocation(line: 4744, column: 69, scope: !12521)
!12714 = !DILocation(line: 4744, column: 58, scope: !12521)
!12715 = !DILocation(line: 4744, column: 52, scope: !12521)
!12716 = !DILocation(line: 4743, column: 53, scope: !12521)
!12717 = !DILocation(line: 4743, column: 47, scope: !12521)
!12718 = !DILocation(line: 4745, column: 9, scope: !12521)
!12719 = !DILocation(line: 4745, column: 16, scope: !12521)
!12720 = !DILocation(line: 4745, column: 22, scope: !12521)
!12721 = !DILocation(line: 4745, column: 32, scope: !12521)
!12722 = !DILocation(line: 4745, column: 21, scope: !12521)
!12723 = !DILocation(line: 4745, column: 38, scope: !12521)
!12724 = !DILocation(line: 4745, column: 44, scope: !12521)
!12725 = !DILocation(line: 4745, column: 54, scope: !12521)
!12726 = !DILocation(line: 4745, column: 43, scope: !12521)
!12727 = !DILocation(line: 4745, column: 37, scope: !12521)
!12728 = !DILocation(line: 4745, column: 60, scope: !12521)
!12729 = !DILocation(line: 4746, column: 9, scope: !12521)
!12730 = !DILocation(line: 4746, column: 20, scope: !12521)
!12731 = !DILocation(line: 4745, column: 65, scope: !12521)
!12732 = !DILocation(line: 4745, column: 59, scope: !12521)
!12733 = !DILocation(line: 4746, column: 26, scope: !12521)
!12734 = !DILocation(line: 4746, column: 32, scope: !12521)
!12735 = !DILocation(line: 4746, column: 43, scope: !12521)
!12736 = !DILocation(line: 4746, column: 31, scope: !12521)
!12737 = !DILocation(line: 4746, column: 25, scope: !12521)
!12738 = !DILocation(line: 4745, column: 14, scope: !12521)
!12739 = !DILocation(line: 4744, column: 75, scope: !12521)
!12740 = !DILocation(line: 4746, column: 50, scope: !12521)
!12741 = !DILocation(line: 4746, column: 57, scope: !12521)
!12742 = !DILocation(line: 4746, column: 63, scope: !12521)
!12743 = !DILocation(line: 4746, column: 74, scope: !12521)
!12744 = !DILocation(line: 4746, column: 62, scope: !12521)
!12745 = !DILocation(line: 4747, column: 9, scope: !12521)
!12746 = !DILocation(line: 4747, column: 15, scope: !12521)
!12747 = !DILocation(line: 4747, column: 26, scope: !12521)
!12748 = !DILocation(line: 4747, column: 14, scope: !12521)
!12749 = !DILocation(line: 4746, column: 79, scope: !12521)
!12750 = !DILocation(line: 4747, column: 32, scope: !12521)
!12751 = !DILocation(line: 4747, column: 38, scope: !12521)
!12752 = !DILocation(line: 4747, column: 49, scope: !12521)
!12753 = !DILocation(line: 4747, column: 37, scope: !12521)
!12754 = !DILocation(line: 4747, column: 31, scope: !12521)
!12755 = !DILocation(line: 4747, column: 55, scope: !12521)
!12756 = !DILocation(line: 4747, column: 61, scope: !12521)
!12757 = !DILocation(line: 4747, column: 72, scope: !12521)
!12758 = !DILocation(line: 4747, column: 60, scope: !12521)
!12759 = !DILocation(line: 4747, column: 54, scope: !12521)
!12760 = !DILocation(line: 4746, column: 55, scope: !12521)
!12761 = !DILocation(line: 4746, column: 49, scope: !12521)
!12762 = !DILocation(line: 4742, column: 7, scope: !12521)
!12763 = !DILocation(line: 4742, column: 14, scope: !12521)
!12764 = !DILocation(line: 4742, column: 19, scope: !12521)
!12765 = !DILocation(line: 4748, column: 20, scope: !12521)
!12766 = !DILocation(line: 4748, column: 27, scope: !12521)
!12767 = !DILocation(line: 4748, column: 33, scope: !12521)
!12768 = !DILocation(line: 4748, column: 43, scope: !12521)
!12769 = !DILocation(line: 4748, column: 32, scope: !12521)
!12770 = !DILocation(line: 4748, column: 48, scope: !12521)
!12771 = !DILocation(line: 4748, column: 54, scope: !12521)
!12772 = !DILocation(line: 4748, column: 64, scope: !12521)
!12773 = !DILocation(line: 4748, column: 53, scope: !12521)
!12774 = !DILocation(line: 4748, column: 47, scope: !12521)
!12775 = !DILocation(line: 4748, column: 69, scope: !12521)
!12776 = !DILocation(line: 4749, column: 9, scope: !12521)
!12777 = !DILocation(line: 4749, column: 19, scope: !12521)
!12778 = !DILocation(line: 4748, column: 74, scope: !12521)
!12779 = !DILocation(line: 4748, column: 68, scope: !12521)
!12780 = !DILocation(line: 4749, column: 24, scope: !12521)
!12781 = !DILocation(line: 4749, column: 30, scope: !12521)
!12782 = !DILocation(line: 4749, column: 40, scope: !12521)
!12783 = !DILocation(line: 4749, column: 29, scope: !12521)
!12784 = !DILocation(line: 4749, column: 23, scope: !12521)
!12785 = !DILocation(line: 4748, column: 25, scope: !12521)
!12786 = !DILocation(line: 4749, column: 46, scope: !12521)
!12787 = !DILocation(line: 4749, column: 53, scope: !12521)
!12788 = !DILocation(line: 4749, column: 59, scope: !12521)
!12789 = !DILocation(line: 4749, column: 69, scope: !12521)
!12790 = !DILocation(line: 4749, column: 58, scope: !12521)
!12791 = !DILocation(line: 4749, column: 74, scope: !12521)
!12792 = !DILocation(line: 4750, column: 9, scope: !12521)
!12793 = !DILocation(line: 4750, column: 19, scope: !12521)
!12794 = !DILocation(line: 4749, column: 79, scope: !12521)
!12795 = !DILocation(line: 4749, column: 73, scope: !12521)
!12796 = !DILocation(line: 4750, column: 24, scope: !12521)
!12797 = !DILocation(line: 4750, column: 30, scope: !12521)
!12798 = !DILocation(line: 4750, column: 40, scope: !12521)
!12799 = !DILocation(line: 4750, column: 29, scope: !12521)
!12800 = !DILocation(line: 4750, column: 23, scope: !12521)
!12801 = !DILocation(line: 4750, column: 45, scope: !12521)
!12802 = !DILocation(line: 4750, column: 51, scope: !12521)
!12803 = !DILocation(line: 4750, column: 61, scope: !12521)
!12804 = !DILocation(line: 4750, column: 50, scope: !12521)
!12805 = !DILocation(line: 4750, column: 44, scope: !12521)
!12806 = !DILocation(line: 4749, column: 51, scope: !12521)
!12807 = !DILocation(line: 4749, column: 45, scope: !12521)
!12808 = !DILocation(line: 4750, column: 67, scope: !12521)
!12809 = !DILocation(line: 4750, column: 74, scope: !12521)
!12810 = !DILocation(line: 4751, column: 9, scope: !12521)
!12811 = !DILocation(line: 4751, column: 19, scope: !12521)
!12812 = !DILocation(line: 4750, column: 79, scope: !12521)
!12813 = !DILocation(line: 4751, column: 24, scope: !12521)
!12814 = !DILocation(line: 4751, column: 30, scope: !12521)
!12815 = !DILocation(line: 4751, column: 40, scope: !12521)
!12816 = !DILocation(line: 4751, column: 29, scope: !12521)
!12817 = !DILocation(line: 4751, column: 23, scope: !12521)
!12818 = !DILocation(line: 4751, column: 45, scope: !12521)
!12819 = !DILocation(line: 4751, column: 51, scope: !12521)
!12820 = !DILocation(line: 4751, column: 62, scope: !12521)
!12821 = !DILocation(line: 4751, column: 50, scope: !12521)
!12822 = !DILocation(line: 4751, column: 44, scope: !12521)
!12823 = !DILocation(line: 4751, column: 67, scope: !12521)
!12824 = !DILocation(line: 4752, column: 9, scope: !12521)
!12825 = !DILocation(line: 4752, column: 20, scope: !12521)
!12826 = !DILocation(line: 4751, column: 72, scope: !12521)
!12827 = !DILocation(line: 4751, column: 66, scope: !12521)
!12828 = !DILocation(line: 4750, column: 72, scope: !12521)
!12829 = !DILocation(line: 4750, column: 66, scope: !12521)
!12830 = !DILocation(line: 4752, column: 26, scope: !12521)
!12831 = !DILocation(line: 4752, column: 33, scope: !12521)
!12832 = !DILocation(line: 4752, column: 39, scope: !12521)
!12833 = !DILocation(line: 4752, column: 50, scope: !12521)
!12834 = !DILocation(line: 4752, column: 38, scope: !12521)
!12835 = !DILocation(line: 4752, column: 55, scope: !12521)
!12836 = !DILocation(line: 4752, column: 61, scope: !12521)
!12837 = !DILocation(line: 4752, column: 72, scope: !12521)
!12838 = !DILocation(line: 4752, column: 60, scope: !12521)
!12839 = !DILocation(line: 4752, column: 54, scope: !12521)
!12840 = !DILocation(line: 4753, column: 9, scope: !12521)
!12841 = !DILocation(line: 4753, column: 15, scope: !12521)
!12842 = !DILocation(line: 4753, column: 26, scope: !12521)
!12843 = !DILocation(line: 4753, column: 14, scope: !12521)
!12844 = !DILocation(line: 4752, column: 76, scope: !12521)
!12845 = !DILocation(line: 4753, column: 31, scope: !12521)
!12846 = !DILocation(line: 4753, column: 37, scope: !12521)
!12847 = !DILocation(line: 4753, column: 48, scope: !12521)
!12848 = !DILocation(line: 4753, column: 36, scope: !12521)
!12849 = !DILocation(line: 4753, column: 30, scope: !12521)
!12850 = !DILocation(line: 4752, column: 31, scope: !12521)
!12851 = !DILocation(line: 4752, column: 25, scope: !12521)
!12852 = !DILocation(line: 4748, column: 7, scope: !12521)
!12853 = !DILocation(line: 4748, column: 14, scope: !12521)
!12854 = !DILocation(line: 4748, column: 18, scope: !12521)
!12855 = !DILocation(line: 4754, column: 23, scope: !12521)
!12856 = !DILocation(line: 4754, column: 30, scope: !12521)
!12857 = !DILocation(line: 4754, column: 36, scope: !12521)
!12858 = !DILocation(line: 4754, column: 46, scope: !12521)
!12859 = !DILocation(line: 4754, column: 35, scope: !12521)
!12860 = !DILocation(line: 4754, column: 54, scope: !12521)
!12861 = !DILocation(line: 4754, column: 60, scope: !12521)
!12862 = !DILocation(line: 4754, column: 70, scope: !12521)
!12863 = !DILocation(line: 4754, column: 59, scope: !12521)
!12864 = !DILocation(line: 4754, column: 53, scope: !12521)
!12865 = !DILocation(line: 4755, column: 9, scope: !12521)
!12866 = !DILocation(line: 4755, column: 15, scope: !12521)
!12867 = !DILocation(line: 4755, column: 25, scope: !12521)
!12868 = !DILocation(line: 4755, column: 14, scope: !12521)
!12869 = !DILocation(line: 4754, column: 77, scope: !12521)
!12870 = !DILocation(line: 4755, column: 33, scope: !12521)
!12871 = !DILocation(line: 4755, column: 39, scope: !12521)
!12872 = !DILocation(line: 4755, column: 49, scope: !12521)
!12873 = !DILocation(line: 4755, column: 38, scope: !12521)
!12874 = !DILocation(line: 4755, column: 32, scope: !12521)
!12875 = !DILocation(line: 4754, column: 28, scope: !12521)
!12876 = !DILocation(line: 4755, column: 58, scope: !12521)
!12877 = !DILocation(line: 4755, column: 65, scope: !12521)
!12878 = !DILocation(line: 4756, column: 9, scope: !12521)
!12879 = !DILocation(line: 4756, column: 19, scope: !12521)
!12880 = !DILocation(line: 4755, column: 70, scope: !12521)
!12881 = !DILocation(line: 4756, column: 27, scope: !12521)
!12882 = !DILocation(line: 4756, column: 33, scope: !12521)
!12883 = !DILocation(line: 4756, column: 43, scope: !12521)
!12884 = !DILocation(line: 4756, column: 32, scope: !12521)
!12885 = !DILocation(line: 4756, column: 26, scope: !12521)
!12886 = !DILocation(line: 4756, column: 51, scope: !12521)
!12887 = !DILocation(line: 4756, column: 57, scope: !12521)
!12888 = !DILocation(line: 4756, column: 67, scope: !12521)
!12889 = !DILocation(line: 4756, column: 56, scope: !12521)
!12890 = !DILocation(line: 4756, column: 50, scope: !12521)
!12891 = !DILocation(line: 4756, column: 75, scope: !12521)
!12892 = !DILocation(line: 4757, column: 9, scope: !12521)
!12893 = !DILocation(line: 4757, column: 19, scope: !12521)
!12894 = !DILocation(line: 4756, column: 80, scope: !12521)
!12895 = !DILocation(line: 4756, column: 74, scope: !12521)
!12896 = !DILocation(line: 4755, column: 63, scope: !12521)
!12897 = !DILocation(line: 4755, column: 57, scope: !12521)
!12898 = !DILocation(line: 4757, column: 28, scope: !12521)
!12899 = !DILocation(line: 4757, column: 35, scope: !12521)
!12900 = !DILocation(line: 4757, column: 41, scope: !12521)
!12901 = !DILocation(line: 4757, column: 51, scope: !12521)
!12902 = !DILocation(line: 4757, column: 40, scope: !12521)
!12903 = !DILocation(line: 4757, column: 59, scope: !12521)
!12904 = !DILocation(line: 4758, column: 9, scope: !12521)
!12905 = !DILocation(line: 4758, column: 19, scope: !12521)
!12906 = !DILocation(line: 4757, column: 64, scope: !12521)
!12907 = !DILocation(line: 4757, column: 58, scope: !12521)
!12908 = !DILocation(line: 4758, column: 27, scope: !12521)
!12909 = !DILocation(line: 4758, column: 33, scope: !12521)
!12910 = !DILocation(line: 4758, column: 44, scope: !12521)
!12911 = !DILocation(line: 4758, column: 32, scope: !12521)
!12912 = !DILocation(line: 4758, column: 26, scope: !12521)
!12913 = !DILocation(line: 4758, column: 52, scope: !12521)
!12914 = !DILocation(line: 4758, column: 58, scope: !12521)
!12915 = !DILocation(line: 4758, column: 69, scope: !12521)
!12916 = !DILocation(line: 4758, column: 57, scope: !12521)
!12917 = !DILocation(line: 4758, column: 51, scope: !12521)
!12918 = !DILocation(line: 4757, column: 33, scope: !12521)
!12919 = !DILocation(line: 4757, column: 27, scope: !12521)
!12920 = !DILocation(line: 4759, column: 9, scope: !12521)
!12921 = !DILocation(line: 4759, column: 16, scope: !12521)
!12922 = !DILocation(line: 4759, column: 22, scope: !12521)
!12923 = !DILocation(line: 4759, column: 33, scope: !12521)
!12924 = !DILocation(line: 4759, column: 21, scope: !12521)
!12925 = !DILocation(line: 4759, column: 41, scope: !12521)
!12926 = !DILocation(line: 4759, column: 47, scope: !12521)
!12927 = !DILocation(line: 4759, column: 58, scope: !12521)
!12928 = !DILocation(line: 4759, column: 46, scope: !12521)
!12929 = !DILocation(line: 4759, column: 40, scope: !12521)
!12930 = !DILocation(line: 4759, column: 66, scope: !12521)
!12931 = !DILocation(line: 4760, column: 9, scope: !12521)
!12932 = !DILocation(line: 4760, column: 20, scope: !12521)
!12933 = !DILocation(line: 4759, column: 71, scope: !12521)
!12934 = !DILocation(line: 4759, column: 65, scope: !12521)
!12935 = !DILocation(line: 4760, column: 28, scope: !12521)
!12936 = !DILocation(line: 4760, column: 34, scope: !12521)
!12937 = !DILocation(line: 4760, column: 45, scope: !12521)
!12938 = !DILocation(line: 4760, column: 33, scope: !12521)
!12939 = !DILocation(line: 4760, column: 27, scope: !12521)
!12940 = !DILocation(line: 4759, column: 14, scope: !12521)
!12941 = !DILocation(line: 4758, column: 77, scope: !12521)
!12942 = !DILocation(line: 4754, column: 7, scope: !12521)
!12943 = !DILocation(line: 4754, column: 14, scope: !12521)
!12944 = !DILocation(line: 4754, column: 21, scope: !12521)
!12945 = !DILocation(line: 4761, column: 7, scope: !12521)
!12946 = !DILocation(line: 4764, column: 10, scope: !10770)
!12947 = !DILocation(line: 4764, column: 3, scope: !10770)
!12948 = distinct !DISubprogram(name: "AlphaBlendMagickPixelPacket", scope: !3, file: !3, line: 4157, type: !12949, scopeLine: 4160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!12949 = !DISubroutineType(types: !12950)
!12950 = !{null, !681, !683, !685, !442, !12951}
!12951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!12952 = !DILocalVariable(name: "image", arg: 1, scope: !12948, file: !3, line: 4157, type: !681)
!12953 = !DILocation(line: 4157, column: 61, scope: !12948)
!12954 = !DILocalVariable(name: "color", arg: 2, scope: !12948, file: !3, line: 4158, type: !683)
!12955 = !DILocation(line: 4158, column: 22, scope: !12948)
!12956 = !DILocalVariable(name: "indexes", arg: 3, scope: !12948, file: !3, line: 4158, type: !685)
!12957 = !DILocation(line: 4158, column: 47, scope: !12948)
!12958 = !DILocalVariable(name: "pixel", arg: 4, scope: !12948, file: !3, line: 4158, type: !442)
!12959 = !DILocation(line: 4158, column: 74, scope: !12948)
!12960 = !DILocalVariable(name: "alpha", arg: 5, scope: !12948, file: !3, line: 4159, type: !12951)
!12961 = !DILocation(line: 4159, column: 19, scope: !12948)
!12962 = !DILocation(line: 4161, column: 7, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 4161, column: 7)
!12964 = !DILocation(line: 4161, column: 14, scope: !12963)
!12965 = !DILocation(line: 4161, column: 20, scope: !12963)
!12966 = !DILocation(line: 4161, column: 7, scope: !12948)
!12967 = !DILocation(line: 4163, column: 8, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12963, file: !3, line: 4162, column: 5)
!12969 = !DILocation(line: 4163, column: 13, scope: !12968)
!12970 = !DILocation(line: 4164, column: 35, scope: !12968)
!12971 = !DILocation(line: 4164, column: 18, scope: !12968)
!12972 = !DILocation(line: 4164, column: 7, scope: !12968)
!12973 = !DILocation(line: 4164, column: 14, scope: !12968)
!12974 = !DILocation(line: 4164, column: 17, scope: !12968)
!12975 = !DILocation(line: 4165, column: 37, scope: !12968)
!12976 = !DILocation(line: 4165, column: 20, scope: !12968)
!12977 = !DILocation(line: 4165, column: 7, scope: !12968)
!12978 = !DILocation(line: 4165, column: 14, scope: !12968)
!12979 = !DILocation(line: 4165, column: 19, scope: !12968)
!12980 = !DILocation(line: 4166, column: 36, scope: !12968)
!12981 = !DILocation(line: 4166, column: 19, scope: !12968)
!12982 = !DILocation(line: 4166, column: 7, scope: !12968)
!12983 = !DILocation(line: 4166, column: 14, scope: !12968)
!12984 = !DILocation(line: 4166, column: 18, scope: !12968)
!12985 = !DILocation(line: 4167, column: 39, scope: !12968)
!12986 = !DILocation(line: 4167, column: 22, scope: !12968)
!12987 = !DILocation(line: 4167, column: 7, scope: !12968)
!12988 = !DILocation(line: 4167, column: 14, scope: !12968)
!12989 = !DILocation(line: 4167, column: 21, scope: !12968)
!12990 = !DILocation(line: 4168, column: 7, scope: !12968)
!12991 = !DILocation(line: 4168, column: 14, scope: !12968)
!12992 = !DILocation(line: 4168, column: 19, scope: !12968)
!12993 = !DILocation(line: 4169, column: 13, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !12968, file: !3, line: 4169, column: 11)
!12995 = !DILocation(line: 4169, column: 20, scope: !12994)
!12996 = !DILocation(line: 4169, column: 31, scope: !12994)
!12997 = !DILocation(line: 4169, column: 50, scope: !12994)
!12998 = !DILocation(line: 4170, column: 13, scope: !12994)
!12999 = !DILocation(line: 4170, column: 20, scope: !12994)
!13000 = !DILocation(line: 4170, column: 34, scope: !12994)
!13001 = !DILocation(line: 4170, column: 51, scope: !12994)
!13002 = !DILocation(line: 4171, column: 12, scope: !12994)
!13003 = !DILocation(line: 4171, column: 20, scope: !12994)
!13004 = !DILocation(line: 4169, column: 11, scope: !12968)
!13005 = !DILocation(line: 4172, column: 39, scope: !12994)
!13006 = !DILocation(line: 4172, column: 22, scope: !12994)
!13007 = !DILocation(line: 4172, column: 9, scope: !12994)
!13008 = !DILocation(line: 4172, column: 16, scope: !12994)
!13009 = !DILocation(line: 4172, column: 21, scope: !12994)
!13010 = !DILocation(line: 4173, column: 7, scope: !12968)
!13011 = !DILocation(line: 4175, column: 23, scope: !12948)
!13012 = !DILocation(line: 4175, column: 22, scope: !12948)
!13013 = !DILocation(line: 4175, column: 10, scope: !12948)
!13014 = !DILocation(line: 4175, column: 4, scope: !12948)
!13015 = !DILocation(line: 4175, column: 9, scope: !12948)
!13016 = !DILocation(line: 4176, column: 16, scope: !12948)
!13017 = !DILocation(line: 4176, column: 15, scope: !12948)
!13018 = !DILocation(line: 4176, column: 22, scope: !12948)
!13019 = !DILocation(line: 4176, column: 21, scope: !12948)
!13020 = !DILocation(line: 4176, column: 3, scope: !12948)
!13021 = !DILocation(line: 4176, column: 10, scope: !12948)
!13022 = !DILocation(line: 4176, column: 13, scope: !12948)
!13023 = !DILocation(line: 4177, column: 18, scope: !12948)
!13024 = !DILocation(line: 4177, column: 17, scope: !12948)
!13025 = !DILocation(line: 4177, column: 24, scope: !12948)
!13026 = !DILocation(line: 4177, column: 23, scope: !12948)
!13027 = !DILocation(line: 4177, column: 3, scope: !12948)
!13028 = !DILocation(line: 4177, column: 10, scope: !12948)
!13029 = !DILocation(line: 4177, column: 15, scope: !12948)
!13030 = !DILocation(line: 4178, column: 17, scope: !12948)
!13031 = !DILocation(line: 4178, column: 16, scope: !12948)
!13032 = !DILocation(line: 4178, column: 23, scope: !12948)
!13033 = !DILocation(line: 4178, column: 22, scope: !12948)
!13034 = !DILocation(line: 4178, column: 3, scope: !12948)
!13035 = !DILocation(line: 4178, column: 10, scope: !12948)
!13036 = !DILocation(line: 4178, column: 14, scope: !12948)
!13037 = !DILocation(line: 4179, column: 35, scope: !12948)
!13038 = !DILocation(line: 4179, column: 18, scope: !12948)
!13039 = !DILocation(line: 4179, column: 3, scope: !12948)
!13040 = !DILocation(line: 4179, column: 10, scope: !12948)
!13041 = !DILocation(line: 4179, column: 17, scope: !12948)
!13042 = !DILocation(line: 4180, column: 3, scope: !12948)
!13043 = !DILocation(line: 4180, column: 10, scope: !12948)
!13044 = !DILocation(line: 4180, column: 15, scope: !12948)
!13045 = !DILocation(line: 4181, column: 9, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 4181, column: 7)
!13047 = !DILocation(line: 4181, column: 16, scope: !13046)
!13048 = !DILocation(line: 4181, column: 27, scope: !13046)
!13049 = !DILocation(line: 4181, column: 46, scope: !13046)
!13050 = !DILocation(line: 4182, column: 9, scope: !13046)
!13051 = !DILocation(line: 4182, column: 16, scope: !13046)
!13052 = !DILocation(line: 4182, column: 30, scope: !13046)
!13053 = !DILocation(line: 4182, column: 47, scope: !13046)
!13054 = !DILocation(line: 4183, column: 8, scope: !13046)
!13055 = !DILocation(line: 4183, column: 16, scope: !13046)
!13056 = !DILocation(line: 4181, column: 7, scope: !12948)
!13057 = !DILocation(line: 4184, column: 20, scope: !13046)
!13058 = !DILocation(line: 4184, column: 19, scope: !13046)
!13059 = !DILocation(line: 4184, column: 26, scope: !13046)
!13060 = !DILocation(line: 4184, column: 25, scope: !13046)
!13061 = !DILocation(line: 4184, column: 5, scope: !13046)
!13062 = !DILocation(line: 4184, column: 12, scope: !13046)
!13063 = !DILocation(line: 4184, column: 17, scope: !13046)
!13064 = !DILocation(line: 4185, column: 1, scope: !12948)
!13065 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !13066, file: !13066, line: 78, type: !4, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13066 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!13067 = !DILocalVariable(name: "x", arg: 1, scope: !13065, file: !13066, line: 78, type: !7)
!13068 = !DILocation(line: 78, column: 57, scope: !13065)
!13069 = !DILocalVariable(name: "sign", scope: !13065, file: !13066, line: 81, type: !6)
!13070 = !DILocation(line: 81, column: 5, scope: !13065)
!13071 = !DILocation(line: 86, column: 8, scope: !13065)
!13072 = !DILocation(line: 86, column: 10, scope: !13065)
!13073 = !DILocation(line: 86, column: 7, scope: !13065)
!13074 = !DILocation(line: 87, column: 8, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13065, file: !13066, line: 87, column: 7)
!13076 = !DILocation(line: 87, column: 13, scope: !13075)
!13077 = !DILocation(line: 87, column: 12, scope: !13075)
!13078 = !DILocation(line: 87, column: 16, scope: !13075)
!13079 = !DILocation(line: 87, column: 7, scope: !13065)
!13080 = !DILocation(line: 88, column: 16, scope: !13075)
!13081 = !DILocation(line: 88, column: 15, scope: !13075)
!13082 = !DILocation(line: 88, column: 5, scope: !13075)
!13083 = !DILocation(line: 89, column: 10, scope: !13065)
!13084 = !DILocation(line: 89, column: 14, scope: !13065)
!13085 = !DILocation(line: 89, column: 3, scope: !13065)
!13086 = !DILocation(line: 90, column: 1, scope: !13065)
!13087 = distinct !DISubprogram(name: "SetMagickPixelPacket", scope: !13066, file: !13066, line: 92, type: !13088, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13088 = !DISubroutineType(types: !13089)
!13089 = !{null, !681, !683, !685, !442}
!13090 = !DILocalVariable(name: "image", arg: 1, scope: !13087, file: !13066, line: 92, type: !681)
!13091 = !DILocation(line: 92, column: 54, scope: !13087)
!13092 = !DILocalVariable(name: "color", arg: 2, scope: !13087, file: !13066, line: 93, type: !683)
!13093 = !DILocation(line: 93, column: 22, scope: !13087)
!13094 = !DILocalVariable(name: "index", arg: 3, scope: !13087, file: !13066, line: 93, type: !685)
!13095 = !DILocation(line: 93, column: 47, scope: !13087)
!13096 = !DILocalVariable(name: "pixel", arg: 4, scope: !13087, file: !13066, line: 93, type: !442)
!13097 = !DILocation(line: 93, column: 72, scope: !13087)
!13098 = !DILocation(line: 95, column: 31, scope: !13087)
!13099 = !DILocation(line: 95, column: 14, scope: !13087)
!13100 = !DILocation(line: 95, column: 3, scope: !13087)
!13101 = !DILocation(line: 95, column: 10, scope: !13087)
!13102 = !DILocation(line: 95, column: 13, scope: !13087)
!13103 = !DILocation(line: 96, column: 33, scope: !13087)
!13104 = !DILocation(line: 96, column: 16, scope: !13087)
!13105 = !DILocation(line: 96, column: 3, scope: !13087)
!13106 = !DILocation(line: 96, column: 10, scope: !13087)
!13107 = !DILocation(line: 96, column: 15, scope: !13087)
!13108 = !DILocation(line: 97, column: 32, scope: !13087)
!13109 = !DILocation(line: 97, column: 15, scope: !13087)
!13110 = !DILocation(line: 97, column: 3, scope: !13087)
!13111 = !DILocation(line: 97, column: 10, scope: !13087)
!13112 = !DILocation(line: 97, column: 14, scope: !13087)
!13113 = !DILocation(line: 98, column: 35, scope: !13087)
!13114 = !DILocation(line: 98, column: 18, scope: !13087)
!13115 = !DILocation(line: 98, column: 3, scope: !13087)
!13116 = !DILocation(line: 98, column: 10, scope: !13087)
!13117 = !DILocation(line: 98, column: 17, scope: !13087)
!13118 = !DILocation(line: 99, column: 8, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13087, file: !13066, line: 99, column: 7)
!13120 = !DILocation(line: 99, column: 15, scope: !13119)
!13121 = !DILocation(line: 99, column: 26, scope: !13119)
!13122 = !DILocation(line: 99, column: 45, scope: !13119)
!13123 = !DILocation(line: 100, column: 8, scope: !13119)
!13124 = !DILocation(line: 100, column: 14, scope: !13119)
!13125 = !DILocation(line: 99, column: 7, scope: !13087)
!13126 = !DILocation(line: 101, column: 35, scope: !13119)
!13127 = !DILocation(line: 101, column: 18, scope: !13119)
!13128 = !DILocation(line: 101, column: 5, scope: !13119)
!13129 = !DILocation(line: 101, column: 12, scope: !13119)
!13130 = !DILocation(line: 101, column: 17, scope: !13119)
!13131 = !DILocation(line: 102, column: 1, scope: !13087)
!13132 = distinct !DISubprogram(name: "CatromWeights", scope: !3, file: !3, line: 4187, type: !13133, scopeLine: 4189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13133 = !DISubroutineType(types: !13134)
!13134 = !{null, !755, !13135}
!13135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11514, size: 64)
!13136 = !DILocalVariable(name: "x", arg: 1, scope: !13132, file: !3, line: 4187, type: !755)
!13137 = !DILocation(line: 4187, column: 55, scope: !13132)
!13138 = !DILocalVariable(name: "weights", arg: 2, scope: !13132, file: !3, line: 4188, type: !13135)
!13139 = !DILocation(line: 4188, column: 20, scope: !13132)
!13140 = !DILocalVariable(name: "alpha", scope: !13132, file: !3, line: 4199, type: !458)
!13141 = !DILocation(line: 4199, column: 5, scope: !13132)
!13142 = !DILocalVariable(name: "beta", scope: !13132, file: !3, line: 4200, type: !458)
!13143 = !DILocation(line: 4200, column: 5, scope: !13132)
!13144 = !DILocalVariable(name: "gamma", scope: !13132, file: !3, line: 4201, type: !458)
!13145 = !DILocation(line: 4201, column: 5, scope: !13132)
!13146 = !DILocation(line: 4203, column: 30, scope: !13132)
!13147 = !DILocation(line: 4203, column: 29, scope: !13132)
!13148 = !DILocation(line: 4203, column: 8, scope: !13132)
!13149 = !DILocation(line: 4204, column: 32, scope: !13132)
!13150 = !DILocation(line: 4204, column: 31, scope: !13132)
!13151 = !DILocation(line: 4204, column: 34, scope: !13132)
!13152 = !DILocation(line: 4204, column: 33, scope: !13132)
!13153 = !DILocation(line: 4204, column: 7, scope: !13132)
!13154 = !DILocation(line: 4205, column: 17, scope: !13132)
!13155 = !DILocation(line: 4205, column: 23, scope: !13132)
!13156 = !DILocation(line: 4205, column: 22, scope: !13132)
!13157 = !DILocation(line: 4205, column: 5, scope: !13132)
!13158 = !DILocation(line: 4205, column: 3, scope: !13132)
!13159 = !DILocation(line: 4205, column: 16, scope: !13132)
!13160 = !DILocation(line: 4206, column: 17, scope: !13132)
!13161 = !DILocation(line: 4206, column: 19, scope: !13132)
!13162 = !DILocation(line: 4206, column: 18, scope: !13132)
!13163 = !DILocation(line: 4206, column: 5, scope: !13132)
!13164 = !DILocation(line: 4206, column: 3, scope: !13132)
!13165 = !DILocation(line: 4206, column: 16, scope: !13132)
!13166 = !DILocation(line: 4211, column: 11, scope: !13132)
!13167 = !DILocation(line: 4211, column: 9, scope: !13132)
!13168 = !DILocation(line: 4211, column: 25, scope: !13132)
!13169 = !DILocation(line: 4211, column: 23, scope: !13132)
!13170 = !DILocation(line: 4211, column: 22, scope: !13132)
!13171 = !DILocation(line: 4211, column: 8, scope: !13132)
!13172 = !DILocation(line: 4212, column: 17, scope: !13132)
!13173 = !DILocation(line: 4212, column: 25, scope: !13132)
!13174 = !DILocation(line: 4212, column: 23, scope: !13132)
!13175 = !DILocation(line: 4212, column: 22, scope: !13132)
!13176 = !DILocation(line: 4212, column: 37, scope: !13132)
!13177 = !DILocation(line: 4212, column: 36, scope: !13132)
!13178 = !DILocation(line: 4212, column: 5, scope: !13132)
!13179 = !DILocation(line: 4212, column: 3, scope: !13132)
!13180 = !DILocation(line: 4212, column: 16, scope: !13132)
!13181 = !DILocation(line: 4213, column: 17, scope: !13132)
!13182 = !DILocation(line: 4213, column: 21, scope: !13132)
!13183 = !DILocation(line: 4213, column: 19, scope: !13132)
!13184 = !DILocation(line: 4213, column: 18, scope: !13132)
!13185 = !DILocation(line: 4213, column: 33, scope: !13132)
!13186 = !DILocation(line: 4213, column: 32, scope: !13132)
!13187 = !DILocation(line: 4213, column: 5, scope: !13132)
!13188 = !DILocation(line: 4213, column: 3, scope: !13132)
!13189 = !DILocation(line: 4213, column: 16, scope: !13132)
!13190 = !DILocation(line: 4214, column: 1, scope: !13132)
!13191 = distinct !DISubprogram(name: "MagickPixelLuma", scope: !13192, file: !13192, line: 104, type: !13193, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13192 = !DIFile(filename: "./magick/color-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!13193 = !DISubroutineType(types: !13194)
!13194 = !{!458, !730}
!13195 = !DILocalVariable(name: "pixel", arg: 1, scope: !13191, file: !13192, line: 105, type: !730)
!13196 = !DILocation(line: 105, column: 28, scope: !13191)
!13197 = !DILocalVariable(name: "blue", scope: !13191, file: !13192, line: 108, type: !458)
!13198 = !DILocation(line: 108, column: 5, scope: !13191)
!13199 = !DILocalVariable(name: "green", scope: !13191, file: !13192, line: 109, type: !458)
!13200 = !DILocation(line: 109, column: 5, scope: !13191)
!13201 = !DILocalVariable(name: "red", scope: !13191, file: !13192, line: 110, type: !458)
!13202 = !DILocation(line: 110, column: 5, scope: !13191)
!13203 = !DILocation(line: 112, column: 7, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13191, file: !13192, line: 112, column: 7)
!13205 = !DILocation(line: 112, column: 14, scope: !13204)
!13206 = !DILocation(line: 112, column: 25, scope: !13204)
!13207 = !DILocation(line: 112, column: 7, scope: !13191)
!13208 = !DILocation(line: 113, column: 12, scope: !13204)
!13209 = !DILocation(line: 113, column: 19, scope: !13204)
!13210 = !DILocation(line: 113, column: 5, scope: !13204)
!13211 = !DILocation(line: 114, column: 7, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13191, file: !13192, line: 114, column: 7)
!13213 = !DILocation(line: 114, column: 14, scope: !13212)
!13214 = !DILocation(line: 114, column: 25, scope: !13212)
!13215 = !DILocation(line: 114, column: 7, scope: !13191)
!13216 = !DILocation(line: 115, column: 21, scope: !13212)
!13217 = !DILocation(line: 115, column: 28, scope: !13212)
!13218 = !DILocation(line: 115, column: 20, scope: !13212)
!13219 = !DILocation(line: 115, column: 41, scope: !13212)
!13220 = !DILocation(line: 115, column: 48, scope: !13212)
!13221 = !DILocation(line: 115, column: 40, scope: !13212)
!13222 = !DILocation(line: 115, column: 31, scope: !13212)
!13223 = !DILocation(line: 115, column: 63, scope: !13212)
!13224 = !DILocation(line: 115, column: 70, scope: !13212)
!13225 = !DILocation(line: 115, column: 62, scope: !13212)
!13226 = !DILocation(line: 115, column: 53, scope: !13212)
!13227 = !DILocation(line: 115, column: 11, scope: !13212)
!13228 = !DILocation(line: 115, column: 5, scope: !13212)
!13229 = !DILocation(line: 116, column: 24, scope: !13191)
!13230 = !DILocation(line: 116, column: 31, scope: !13191)
!13231 = !DILocation(line: 116, column: 7, scope: !13191)
!13232 = !DILocation(line: 116, column: 6, scope: !13191)
!13233 = !DILocation(line: 117, column: 26, scope: !13191)
!13234 = !DILocation(line: 117, column: 33, scope: !13191)
!13235 = !DILocation(line: 117, column: 9, scope: !13191)
!13236 = !DILocation(line: 117, column: 8, scope: !13191)
!13237 = !DILocation(line: 118, column: 25, scope: !13191)
!13238 = !DILocation(line: 118, column: 32, scope: !13191)
!13239 = !DILocation(line: 118, column: 8, scope: !13191)
!13240 = !DILocation(line: 118, column: 7, scope: !13191)
!13241 = !DILocation(line: 119, column: 19, scope: !13191)
!13242 = !DILocation(line: 119, column: 18, scope: !13191)
!13243 = !DILocation(line: 119, column: 32, scope: !13191)
!13244 = !DILocation(line: 119, column: 31, scope: !13191)
!13245 = !DILocation(line: 119, column: 22, scope: !13191)
!13246 = !DILocation(line: 119, column: 47, scope: !13191)
!13247 = !DILocation(line: 119, column: 46, scope: !13191)
!13248 = !DILocation(line: 119, column: 37, scope: !13191)
!13249 = !DILocation(line: 119, column: 9, scope: !13191)
!13250 = !DILocation(line: 119, column: 3, scope: !13191)
!13251 = !DILocation(line: 120, column: 1, scope: !13191)
!13252 = distinct !DISubprogram(name: "MeshInterpolate", scope: !3, file: !3, line: 4238, type: !13253, scopeLine: 4240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13253 = !DISubroutineType(types: !13254)
!13254 = !{!6, !13255, !7, !7, !7}
!13255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13256, size: 64)
!13256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11012)
!13257 = !DILocalVariable(name: "delta", arg: 1, scope: !13252, file: !3, line: 4238, type: !13255)
!13258 = !DILocation(line: 4238, column: 55, scope: !13252)
!13259 = !DILocalVariable(name: "p", arg: 2, scope: !13252, file: !3, line: 4238, type: !7)
!13260 = !DILocation(line: 4238, column: 74, scope: !13252)
!13261 = !DILocalVariable(name: "x", arg: 3, scope: !13252, file: !3, line: 4239, type: !7)
!13262 = !DILocation(line: 4239, column: 16, scope: !13252)
!13263 = !DILocalVariable(name: "y", arg: 4, scope: !13252, file: !3, line: 4239, type: !7)
!13264 = !DILocation(line: 4239, column: 31, scope: !13252)
!13265 = !DILocation(line: 4241, column: 10, scope: !13252)
!13266 = !DILocation(line: 4241, column: 17, scope: !13252)
!13267 = !DILocation(line: 4241, column: 19, scope: !13252)
!13268 = !DILocation(line: 4241, column: 18, scope: !13252)
!13269 = !DILocation(line: 4241, column: 21, scope: !13252)
!13270 = !DILocation(line: 4241, column: 28, scope: !13252)
!13271 = !DILocation(line: 4241, column: 30, scope: !13252)
!13272 = !DILocation(line: 4241, column: 29, scope: !13252)
!13273 = !DILocation(line: 4241, column: 20, scope: !13252)
!13274 = !DILocation(line: 4241, column: 37, scope: !13252)
!13275 = !DILocation(line: 4241, column: 44, scope: !13252)
!13276 = !DILocation(line: 4241, column: 36, scope: !13252)
!13277 = !DILocation(line: 4241, column: 46, scope: !13252)
!13278 = !DILocation(line: 4241, column: 53, scope: !13252)
!13279 = !DILocation(line: 4241, column: 45, scope: !13252)
!13280 = !DILocation(line: 4241, column: 56, scope: !13252)
!13281 = !DILocation(line: 4241, column: 55, scope: !13252)
!13282 = !DILocation(line: 4241, column: 31, scope: !13252)
!13283 = !DILocation(line: 4241, column: 3, scope: !13252)
!13284 = distinct !DISubprogram(name: "SplineWeights", scope: !3, file: !3, line: 4216, type: !13133, scopeLine: 4218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13285 = !DILocalVariable(name: "x", arg: 1, scope: !13284, file: !3, line: 4216, type: !755)
!13286 = !DILocation(line: 4216, column: 55, scope: !13284)
!13287 = !DILocalVariable(name: "weights", arg: 2, scope: !13284, file: !3, line: 4217, type: !13135)
!13288 = !DILocation(line: 4217, column: 20, scope: !13284)
!13289 = !DILocalVariable(name: "alpha", scope: !13284, file: !3, line: 4227, type: !458)
!13290 = !DILocation(line: 4227, column: 5, scope: !13284)
!13291 = !DILocalVariable(name: "beta", scope: !13284, file: !3, line: 4228, type: !458)
!13292 = !DILocation(line: 4228, column: 5, scope: !13284)
!13293 = !DILocation(line: 4230, column: 30, scope: !13284)
!13294 = !DILocation(line: 4230, column: 29, scope: !13284)
!13295 = !DILocation(line: 4230, column: 8, scope: !13284)
!13296 = !DILocation(line: 4231, column: 44, scope: !13284)
!13297 = !DILocation(line: 4231, column: 43, scope: !13284)
!13298 = !DILocation(line: 4231, column: 46, scope: !13284)
!13299 = !DILocation(line: 4231, column: 45, scope: !13284)
!13300 = !DILocation(line: 4231, column: 48, scope: !13284)
!13301 = !DILocation(line: 4231, column: 47, scope: !13284)
!13302 = !DILocation(line: 4231, column: 5, scope: !13284)
!13303 = !DILocation(line: 4231, column: 3, scope: !13284)
!13304 = !DILocation(line: 4231, column: 16, scope: !13284)
!13305 = !DILocation(line: 4232, column: 44, scope: !13284)
!13306 = !DILocation(line: 4232, column: 43, scope: !13284)
!13307 = !DILocation(line: 4232, column: 50, scope: !13284)
!13308 = !DILocation(line: 4232, column: 49, scope: !13284)
!13309 = !DILocation(line: 4232, column: 56, scope: !13284)
!13310 = !DILocation(line: 4232, column: 55, scope: !13284)
!13311 = !DILocation(line: 4232, column: 5, scope: !13284)
!13312 = !DILocation(line: 4232, column: 3, scope: !13284)
!13313 = !DILocation(line: 4232, column: 16, scope: !13284)
!13314 = !DILocation(line: 4233, column: 10, scope: !13284)
!13315 = !DILocation(line: 4233, column: 8, scope: !13284)
!13316 = !DILocation(line: 4233, column: 24, scope: !13284)
!13317 = !DILocation(line: 4233, column: 22, scope: !13284)
!13318 = !DILocation(line: 4233, column: 21, scope: !13284)
!13319 = !DILocation(line: 4233, column: 7, scope: !13284)
!13320 = !DILocation(line: 4234, column: 17, scope: !13284)
!13321 = !DILocation(line: 4234, column: 25, scope: !13284)
!13322 = !DILocation(line: 4234, column: 23, scope: !13284)
!13323 = !DILocation(line: 4234, column: 22, scope: !13284)
!13324 = !DILocation(line: 4234, column: 37, scope: !13284)
!13325 = !DILocation(line: 4234, column: 36, scope: !13284)
!13326 = !DILocation(line: 4234, column: 5, scope: !13284)
!13327 = !DILocation(line: 4234, column: 3, scope: !13284)
!13328 = !DILocation(line: 4234, column: 16, scope: !13284)
!13329 = !DILocation(line: 4235, column: 17, scope: !13284)
!13330 = !DILocation(line: 4235, column: 21, scope: !13284)
!13331 = !DILocation(line: 4235, column: 19, scope: !13284)
!13332 = !DILocation(line: 4235, column: 18, scope: !13284)
!13333 = !DILocation(line: 4235, column: 33, scope: !13284)
!13334 = !DILocation(line: 4235, column: 32, scope: !13284)
!13335 = !DILocation(line: 4235, column: 5, scope: !13284)
!13336 = !DILocation(line: 4235, column: 3, scope: !13284)
!13337 = !DILocation(line: 4235, column: 16, scope: !13284)
!13338 = !DILocation(line: 4236, column: 1, scope: !13284)
!13339 = distinct !DISubprogram(name: "ScaleQuantumToChar", scope: !227, file: !227, line: 114, type: !13340, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13340 = !DISubroutineType(types: !13341)
!13341 = !{!650, !702}
!13342 = !DILocalVariable(name: "quantum", arg: 1, scope: !13339, file: !227, line: 114, type: !702)
!13343 = !DILocation(line: 114, column: 62, scope: !13339)
!13344 = !DILocation(line: 117, column: 29, scope: !13339)
!13345 = !DILocation(line: 117, column: 36, scope: !13339)
!13346 = !DILocation(line: 117, column: 46, scope: !13339)
!13347 = !DILocation(line: 117, column: 53, scope: !13339)
!13348 = !DILocation(line: 117, column: 61, scope: !13339)
!13349 = !DILocation(line: 117, column: 43, scope: !13339)
!13350 = !DILocation(line: 117, column: 68, scope: !13339)
!13351 = !DILocation(line: 117, column: 10, scope: !13339)
!13352 = !DILocation(line: 117, column: 3, scope: !13339)
!13353 = distinct !DISubprogram(name: "ClampToQuantum", scope: !227, file: !227, line: 87, type: !13354, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13354 = !DISubroutineType(types: !13355)
!13355 = !{!466, !755}
!13356 = !DILocalVariable(name: "value", arg: 1, scope: !13353, file: !227, line: 87, type: !755)
!13357 = !DILocation(line: 87, column: 59, scope: !13353)
!13358 = !DILocation(line: 92, column: 7, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13353, file: !227, line: 92, column: 7)
!13360 = !DILocation(line: 92, column: 13, scope: !13359)
!13361 = !DILocation(line: 92, column: 7, scope: !13353)
!13362 = !DILocation(line: 93, column: 5, scope: !13359)
!13363 = !DILocation(line: 94, column: 7, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13353, file: !227, line: 94, column: 7)
!13365 = !DILocation(line: 94, column: 13, scope: !13364)
!13366 = !DILocation(line: 94, column: 7, scope: !13353)
!13367 = !DILocation(line: 95, column: 5, scope: !13364)
!13368 = !DILocation(line: 96, column: 21, scope: !13353)
!13369 = !DILocation(line: 96, column: 26, scope: !13353)
!13370 = !DILocation(line: 96, column: 10, scope: !13353)
!13371 = !DILocation(line: 96, column: 3, scope: !13353)
!13372 = !DILocation(line: 98, column: 1, scope: !13353)
!13373 = distinct !DISubprogram(name: "ScaleQuantumToLong", scope: !13374, file: !13374, line: 395, type: !13375, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13374 = !DIFile(filename: "./magick/quantum-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!13375 = !DISubroutineType(types: !13376)
!13376 = !{!12, !702}
!13377 = !DILocalVariable(name: "quantum", arg: 1, scope: !13373, file: !13374, line: 395, type: !702)
!13378 = !DILocation(line: 395, column: 61, scope: !13373)
!13379 = !DILocation(line: 398, column: 34, scope: !13373)
!13380 = !DILocation(line: 398, column: 33, scope: !13373)
!13381 = !DILocation(line: 398, column: 10, scope: !13373)
!13382 = !DILocation(line: 398, column: 3, scope: !13373)
!13383 = distinct !DISubprogram(name: "ScaleQuantumToShort", scope: !13374, file: !13374, line: 421, type: !13384, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13384 = !DISubroutineType(types: !13385)
!13385 = !{!467, !702}
!13386 = !DILocalVariable(name: "quantum", arg: 1, scope: !13383, file: !13374, line: 421, type: !702)
!13387 = !DILocation(line: 421, column: 64, scope: !13383)
!13388 = !DILocation(line: 424, column: 27, scope: !13383)
!13389 = !DILocation(line: 424, column: 3, scope: !13383)
!13390 = distinct !DISubprogram(name: "ScaleCharToQuantum", scope: !13374, file: !13374, line: 363, type: !13391, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13391 = !DISubroutineType(types: !13392)
!13392 = !{!466, !694}
!13393 = !DILocalVariable(name: "value", arg: 1, scope: !13390, file: !13374, line: 363, type: !694)
!13394 = !DILocation(line: 363, column: 62, scope: !13390)
!13395 = !DILocation(line: 366, column: 26, scope: !13390)
!13396 = !DILocation(line: 366, column: 25, scope: !13390)
!13397 = !DILocation(line: 366, column: 10, scope: !13390)
!13398 = !DILocation(line: 366, column: 3, scope: !13390)
!13399 = distinct !DISubprogram(name: "ScaleLongToQuantum", scope: !13374, file: !13374, line: 372, type: !13400, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13400 = !DISubroutineType(types: !13401)
!13401 = !{!466, !700}
!13402 = !DILocalVariable(name: "value", arg: 1, scope: !13399, file: !13374, line: 372, type: !700)
!13403 = !DILocation(line: 372, column: 61, scope: !13399)
!13404 = !DILocation(line: 375, column: 22, scope: !13399)
!13405 = !DILocation(line: 375, column: 27, scope: !13399)
!13406 = !DILocation(line: 375, column: 53, scope: !13399)
!13407 = !DILocation(line: 375, column: 10, scope: !13399)
!13408 = !DILocation(line: 375, column: 3, scope: !13399)
!13409 = distinct !DISubprogram(name: "ScaleShortToQuantum", scope: !13374, file: !13374, line: 434, type: !13410, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !714)
!13410 = !DISubroutineType(types: !13411)
!13411 = !{!466, !704}
!13412 = !DILocalVariable(name: "value", arg: 1, scope: !13409, file: !13374, line: 434, type: !704)
!13413 = !DILocation(line: 434, column: 64, scope: !13409)
!13414 = !DILocation(line: 436, column: 20, scope: !13409)
!13415 = !DILocation(line: 436, column: 3, scope: !13409)
