; ModuleID = 'blender/source/blender/blenkernel/intern/mesh_evaluate.c'
source_filename = "blender/source/blender/blenkernel/intern/mesh_evaluate.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.ListBase = type { i8*, i8* }
%struct.AnimData = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.Ipo = type opaque
%struct.Key = type opaque
%struct.Material = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.LinkNode = type { %struct.LinkNode*, i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type opaque
%struct.BKEMeshToTangent = type { %struct.MPoly*, %struct.MLoop*, %struct.MVert*, %struct.MLoopUV*, [3 x float]*, [4 x float]*, i32 }
%struct.SMikkTSpaceContext = type { %struct.SMikkTSpaceInterface*, i8* }
%struct.SMikkTSpaceInterface = type { i32 (%struct.SMikkTSpaceContext*)*, i32 (%struct.SMikkTSpaceContext*, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float*, float, float, i32, i32, i32)* }
%struct.EdgeHash = type opaque
%struct.OrigSpaceFace = type { [4 x [2 x float]] }
%struct.OrigSpaceLoop = type { [2 x float] }
%struct.MemArena = type opaque
%struct.MDisps = type { i32, i32, [3 x float]*, i32* }

@.str = private unnamed_addr constant [31 x i8] c"%s: called with nothing to do\0A\00", align 1
@__func__.BKE_mesh_calc_normals_mapping_ex = private unnamed_addr constant [33 x i8] c"BKE_mesh_calc_normals_mapping_ex\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [78 x i8] c"error in %s: tessellation face indices are incorrect.  normals may look bad.\0A\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@__func__.BKE_mesh_calc_normals_poly = private unnamed_addr constant [27 x i8] c"BKE_mesh_calc_normals_poly\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"tnorms\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"meshnormals\00", align 1
@__func__.BKE_mesh_normals_loop_split = private unnamed_addr constant [28 x i8] c"BKE_mesh_normals_loop_split\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.4 = private unnamed_addr constant [60 x i8] c"Tangent space can only be computed for tris/quads, aborting\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"Mikktspace failed to generate tangents for this mesh!\00", align 1
@.str.6 = private unnamed_addr constant [67 x i8] c"Tangent space computation needs an UVMap, \22%s\22 not found, aborting\00", align 1
@.str.7 = private unnamed_addr constant [67 x i8] c"Tangent space computation needs loop normals, none found, aborting\00", align 1
@__func__.BKE_mesh_recalc_tessellation = private unnamed_addr constant [29 x i8] c"BKE_mesh_recalc_tessellation\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.BKE_mesh_mpoly_to_mface = private unnamed_addr constant [24 x i8] c"BKE_mesh_mpoly_to_mface\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"mpoly converted\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"mloop converted\00", align 1
@__func__.BKE_mesh_convert_mfaces_to_mpolys_ex = private unnamed_addr constant [37 x i8] c"BKE_mesh_convert_mfaces_to_mpolys_ex\00", align 1
@__func__.BKE_mesh_calc_relative_deform = private unnamed_addr constant [30 x i8] c"BKE_mesh_calc_relative_deform\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"converted loop mdisps\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_normals_mapping(%struct.MVert* %mverts, i32 %numVerts, %struct.MLoop* %mloop, %struct.MPoly* %mpolys, i32 %numLoops, i32 %numPolys, [3 x float]* %r_polyNors, %struct.MFace* %mfaces, i32 %numFaces, i32* %origIndexFace, [3 x float]* %r_faceNors) #0 !dbg !154 {
entry:
  %mverts.addr = alloca %struct.MVert*, align 8
  %numVerts.addr = alloca i32, align 4
  %mloop.addr = alloca %struct.MLoop*, align 8
  %mpolys.addr = alloca %struct.MPoly*, align 8
  %numLoops.addr = alloca i32, align 4
  %numPolys.addr = alloca i32, align 4
  %r_polyNors.addr = alloca [3 x float]*, align 8
  %mfaces.addr = alloca %struct.MFace*, align 8
  %numFaces.addr = alloca i32, align 4
  %origIndexFace.addr = alloca i32*, align 8
  %r_faceNors.addr = alloca [3 x float]*, align 8
  store %struct.MVert* %mverts, %struct.MVert** %mverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts.addr, metadata !171, metadata !DIExpression()), !dbg !172
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !173, metadata !DIExpression()), !dbg !174
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !175, metadata !DIExpression()), !dbg !176
  store %struct.MPoly* %mpolys, %struct.MPoly** %mpolys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpolys.addr, metadata !177, metadata !DIExpression()), !dbg !178
  store i32 %numLoops, i32* %numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLoops.addr, metadata !179, metadata !DIExpression()), !dbg !180
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !181, metadata !DIExpression()), !dbg !182
  store [3 x float]* %r_polyNors, [3 x float]** %r_polyNors.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_polyNors.addr, metadata !183, metadata !DIExpression()), !dbg !184
  store %struct.MFace* %mfaces, %struct.MFace** %mfaces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mfaces.addr, metadata !185, metadata !DIExpression()), !dbg !186
  store i32 %numFaces, i32* %numFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numFaces.addr, metadata !187, metadata !DIExpression()), !dbg !188
  store i32* %origIndexFace, i32** %origIndexFace.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %origIndexFace.addr, metadata !189, metadata !DIExpression()), !dbg !190
  store [3 x float]* %r_faceNors, [3 x float]** %r_faceNors.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_faceNors.addr, metadata !191, metadata !DIExpression()), !dbg !192
  %0 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !193
  %1 = load i32, i32* %numVerts.addr, align 4, !dbg !194
  %2 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !195
  %3 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !196
  %4 = load i32, i32* %numLoops.addr, align 4, !dbg !197
  %5 = load i32, i32* %numPolys.addr, align 4, !dbg !198
  %6 = load [3 x float]*, [3 x float]** %r_polyNors.addr, align 8, !dbg !199
  %7 = load %struct.MFace*, %struct.MFace** %mfaces.addr, align 8, !dbg !200
  %8 = load i32, i32* %numFaces.addr, align 4, !dbg !201
  %9 = load i32*, i32** %origIndexFace.addr, align 8, !dbg !202
  %10 = load [3 x float]*, [3 x float]** %r_faceNors.addr, align 8, !dbg !203
  call void @BKE_mesh_calc_normals_mapping_ex(%struct.MVert* %0, i32 %1, %struct.MLoop* %2, %struct.MPoly* %3, i32 %4, i32 %5, [3 x float]* %6, %struct.MFace* %7, i32 %8, i32* %9, [3 x float]* %10, i8 zeroext 0), !dbg !204
  ret void, !dbg !205
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_normals_mapping_ex(%struct.MVert* %mverts, i32 %numVerts, %struct.MLoop* %mloop, %struct.MPoly* %mpolys, i32 %numLoops, i32 %numPolys, [3 x float]* %r_polyNors, %struct.MFace* %mfaces, i32 %numFaces, i32* %origIndexFace, [3 x float]* %r_faceNors, i8 zeroext %only_face_normals) #0 !dbg !206 {
entry:
  %mverts.addr = alloca %struct.MVert*, align 8
  %numVerts.addr = alloca i32, align 4
  %mloop.addr = alloca %struct.MLoop*, align 8
  %mpolys.addr = alloca %struct.MPoly*, align 8
  %numLoops.addr = alloca i32, align 4
  %numPolys.addr = alloca i32, align 4
  %r_polyNors.addr = alloca [3 x float]*, align 8
  %mfaces.addr = alloca %struct.MFace*, align 8
  %numFaces.addr = alloca i32, align 4
  %origIndexFace.addr = alloca i32*, align 8
  %r_faceNors.addr = alloca [3 x float]*, align 8
  %only_face_normals.addr = alloca i8, align 1
  %pnors = alloca [3 x float]*, align 8
  %fnors = alloca [3 x float]*, align 8
  %i = alloca i32, align 4
  %mf = alloca %struct.MFace*, align 8
  %mp = alloca %struct.MPoly*, align 8
  store %struct.MVert* %mverts, %struct.MVert** %mverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts.addr, metadata !211, metadata !DIExpression()), !dbg !212
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !213, metadata !DIExpression()), !dbg !214
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !215, metadata !DIExpression()), !dbg !216
  store %struct.MPoly* %mpolys, %struct.MPoly** %mpolys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpolys.addr, metadata !217, metadata !DIExpression()), !dbg !218
  store i32 %numLoops, i32* %numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLoops.addr, metadata !219, metadata !DIExpression()), !dbg !220
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !221, metadata !DIExpression()), !dbg !222
  store [3 x float]* %r_polyNors, [3 x float]** %r_polyNors.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_polyNors.addr, metadata !223, metadata !DIExpression()), !dbg !224
  store %struct.MFace* %mfaces, %struct.MFace** %mfaces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mfaces.addr, metadata !225, metadata !DIExpression()), !dbg !226
  store i32 %numFaces, i32* %numFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numFaces.addr, metadata !227, metadata !DIExpression()), !dbg !228
  store i32* %origIndexFace, i32** %origIndexFace.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %origIndexFace.addr, metadata !229, metadata !DIExpression()), !dbg !230
  store [3 x float]* %r_faceNors, [3 x float]** %r_faceNors.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_faceNors.addr, metadata !231, metadata !DIExpression()), !dbg !232
  store i8 %only_face_normals, i8* %only_face_normals.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %only_face_normals.addr, metadata !233, metadata !DIExpression()), !dbg !234
  call void @llvm.dbg.declare(metadata [3 x float]** %pnors, metadata !235, metadata !DIExpression()), !dbg !236
  %0 = load [3 x float]*, [3 x float]** %r_polyNors.addr, align 8, !dbg !237
  store [3 x float]* %0, [3 x float]** %pnors, align 8, !dbg !236
  call void @llvm.dbg.declare(metadata [3 x float]** %fnors, metadata !238, metadata !DIExpression()), !dbg !239
  %1 = load [3 x float]*, [3 x float]** %r_faceNors.addr, align 8, !dbg !240
  store [3 x float]* %1, [3 x float]** %fnors, align 8, !dbg !239
  call void @llvm.dbg.declare(metadata i32* %i, metadata !241, metadata !DIExpression()), !dbg !242
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !243, metadata !DIExpression()), !dbg !244
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !245, metadata !DIExpression()), !dbg !246
  %2 = load i32, i32* %numPolys.addr, align 4, !dbg !247
  %cmp = icmp eq i32 %2, 0, !dbg !249
  br i1 %cmp, label %if.then, label %if.end4, !dbg !250

if.then:                                          ; preds = %entry
  %3 = load i8, i8* %only_face_normals.addr, align 1, !dbg !251
  %conv = zext i8 %3 to i32, !dbg !251
  %cmp1 = icmp eq i32 %conv, 0, !dbg !254
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !255

if.then3:                                         ; preds = %if.then
  %4 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !256
  %5 = load i32, i32* %numVerts.addr, align 4, !dbg !258
  call void @mesh_calc_normals_vert_fallback(%struct.MVert* %4, i32 %5), !dbg !259
  br label %if.end, !dbg !260

if.end:                                           ; preds = %if.then3, %if.then
  br label %return, !dbg !261

if.end4:                                          ; preds = %entry
  %6 = load i8, i8* %only_face_normals.addr, align 1, !dbg !262
  %conv5 = zext i8 %6 to i32, !dbg !262
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !264
  br i1 %cmp6, label %land.lhs.true, label %if.end14, !dbg !265

land.lhs.true:                                    ; preds = %if.end4
  %7 = load [3 x float]*, [3 x float]** %r_polyNors.addr, align 8, !dbg !266
  %cmp8 = icmp eq [3 x float]* %7, null, !dbg !267
  br i1 %cmp8, label %land.lhs.true10, label %if.end14, !dbg !268

land.lhs.true10:                                  ; preds = %land.lhs.true
  %8 = load [3 x float]*, [3 x float]** %r_faceNors.addr, align 8, !dbg !269
  %cmp11 = icmp eq [3 x float]* %8, null, !dbg !270
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !271

if.then13:                                        ; preds = %land.lhs.true10
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__func__.BKE_mesh_calc_normals_mapping_ex, i64 0, i64 0)), !dbg !272
  br label %return, !dbg !274

if.end14:                                         ; preds = %land.lhs.true10, %land.lhs.true, %if.end4
  %9 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !275
  %tobool = icmp ne [3 x float]* %9, null, !dbg !275
  br i1 %tobool, label %if.end18, label %if.then15, !dbg !277

if.then15:                                        ; preds = %if.end14
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !278
  %11 = load i32, i32* %numPolys.addr, align 4, !dbg !279
  %conv16 = sext i32 %11 to i64, !dbg !280
  %mul = mul i64 12, %conv16, !dbg !281
  %call17 = call i8* %10(i64 %mul, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__func__.BKE_mesh_calc_normals_mapping_ex, i64 0, i64 0)), !dbg !278
  %12 = bitcast i8* %call17 to [3 x float]*, !dbg !278
  store [3 x float]* %12, [3 x float]** %pnors, align 8, !dbg !282
  br label %if.end18, !dbg !283

if.end18:                                         ; preds = %if.then15, %if.end14
  %13 = load i8, i8* %only_face_normals.addr, align 1, !dbg !284
  %conv19 = zext i8 %13 to i32, !dbg !284
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !286
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !287

if.then22:                                        ; preds = %if.end18
  %14 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !288
  %15 = load i32, i32* %numVerts.addr, align 4, !dbg !290
  %16 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !291
  %17 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !292
  %18 = load i32, i32* %numLoops.addr, align 4, !dbg !293
  %19 = load i32, i32* %numPolys.addr, align 4, !dbg !294
  %20 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !295
  call void @BKE_mesh_calc_normals_poly(%struct.MVert* %14, i32 %15, %struct.MLoop* %16, %struct.MPoly* %17, i32 %18, i32 %19, [3 x float]* %20, i8 zeroext 0), !dbg !296
  br label %if.end25, !dbg !297

if.else:                                          ; preds = %if.end18
  %21 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !298
  store %struct.MPoly* %21, %struct.MPoly** %mp, align 8, !dbg !300
  store i32 0, i32* %i, align 4, !dbg !301
  br label %for.cond, !dbg !303

for.cond:                                         ; preds = %for.inc, %if.else
  %22 = load i32, i32* %i, align 4, !dbg !304
  %23 = load i32, i32* %numPolys.addr, align 4, !dbg !306
  %cmp23 = icmp slt i32 %22, %23, !dbg !307
  br i1 %cmp23, label %for.body, label %for.end, !dbg !308

for.body:                                         ; preds = %for.cond
  %24 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !309
  %25 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !311
  %26 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !312
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %26, i32 0, i32 0, !dbg !313
  %27 = load i32, i32* %loopstart, align 4, !dbg !313
  %idx.ext = sext i32 %27 to i64, !dbg !314
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %25, i64 %idx.ext, !dbg !314
  %28 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !315
  %29 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !316
  %30 = load i32, i32* %i, align 4, !dbg !317
  %idxprom = sext i32 %30 to i64, !dbg !316
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %29, i64 %idxprom, !dbg !316
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !316
  call void @BKE_mesh_calc_poly_normal(%struct.MPoly* %24, %struct.MLoop* %add.ptr, %struct.MVert* %28, float* %arraydecay), !dbg !318
  br label %for.inc, !dbg !319

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !320
  %inc = add nsw i32 %31, 1, !dbg !320
  store i32 %inc, i32* %i, align 4, !dbg !320
  %32 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !321
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %32, i32 1, !dbg !321
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mp, align 8, !dbg !321
  br label %for.cond, !dbg !322, !llvm.loop !323

for.end:                                          ; preds = %for.cond
  br label %if.end25

if.end25:                                         ; preds = %for.end, %if.then22
  %33 = load i32*, i32** %origIndexFace.addr, align 8, !dbg !325
  %tobool26 = icmp ne i32* %33, null, !dbg !325
  br i1 %tobool26, label %land.lhs.true27, label %if.end54, !dbg !327

land.lhs.true27:                                  ; preds = %if.end25
  %34 = load [3 x float]*, [3 x float]** %fnors, align 8, !dbg !328
  %cmp28 = icmp ne [3 x float]* %34, null, !dbg !329
  br i1 %cmp28, label %land.lhs.true30, label %if.end54, !dbg !330

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %35 = load i32, i32* %numFaces.addr, align 4, !dbg !331
  %tobool31 = icmp ne i32 %35, 0, !dbg !331
  br i1 %tobool31, label %if.then32, label %if.end54, !dbg !332

if.then32:                                        ; preds = %land.lhs.true30
  %36 = load %struct.MFace*, %struct.MFace** %mfaces.addr, align 8, !dbg !333
  store %struct.MFace* %36, %struct.MFace** %mf, align 8, !dbg !335
  store i32 0, i32* %i, align 4, !dbg !336
  br label %for.cond33, !dbg !338

for.cond33:                                       ; preds = %for.inc49, %if.then32
  %37 = load i32, i32* %i, align 4, !dbg !339
  %38 = load i32, i32* %numFaces.addr, align 4, !dbg !341
  %cmp34 = icmp slt i32 %37, %38, !dbg !342
  br i1 %cmp34, label %for.body36, label %for.end53, !dbg !343

for.body36:                                       ; preds = %for.cond33
  %39 = load i32*, i32** %origIndexFace.addr, align 8, !dbg !344
  %40 = load i32, i32* %39, align 4, !dbg !347
  %41 = load i32, i32* %numPolys.addr, align 4, !dbg !348
  %cmp37 = icmp slt i32 %40, %41, !dbg !349
  br i1 %cmp37, label %if.then39, label %if.else46, !dbg !350

if.then39:                                        ; preds = %for.body36
  %42 = load [3 x float]*, [3 x float]** %fnors, align 8, !dbg !351
  %43 = load i32, i32* %i, align 4, !dbg !353
  %idxprom40 = sext i32 %43 to i64, !dbg !351
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %42, i64 %idxprom40, !dbg !351
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx41, i64 0, i64 0, !dbg !351
  %44 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !354
  %45 = load i32*, i32** %origIndexFace.addr, align 8, !dbg !355
  %46 = load i32, i32* %45, align 4, !dbg !356
  %idxprom43 = sext i32 %46 to i64, !dbg !354
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %44, i64 %idxprom43, !dbg !354
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 0, !dbg !354
  call void @copy_v3_v3(float* %arraydecay42, float* %arraydecay45), !dbg !357
  br label %if.end48, !dbg !358

if.else46:                                        ; preds = %for.body36
  %call47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__func__.BKE_mesh_calc_normals_mapping_ex, i64 0, i64 0)), !dbg !359
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then39
  br label %for.inc49, !dbg !361

for.inc49:                                        ; preds = %if.end48
  %47 = load i32, i32* %i, align 4, !dbg !362
  %inc50 = add nsw i32 %47, 1, !dbg !362
  store i32 %inc50, i32* %i, align 4, !dbg !362
  %48 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !363
  %incdec.ptr51 = getelementptr inbounds %struct.MFace, %struct.MFace* %48, i32 1, !dbg !363
  store %struct.MFace* %incdec.ptr51, %struct.MFace** %mf, align 8, !dbg !363
  %49 = load i32*, i32** %origIndexFace.addr, align 8, !dbg !364
  %incdec.ptr52 = getelementptr inbounds i32, i32* %49, i32 1, !dbg !364
  store i32* %incdec.ptr52, i32** %origIndexFace.addr, align 8, !dbg !364
  br label %for.cond33, !dbg !365, !llvm.loop !366

for.end53:                                        ; preds = %for.cond33
  br label %if.end54, !dbg !368

if.end54:                                         ; preds = %for.end53, %land.lhs.true30, %land.lhs.true27, %if.end25
  %50 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !369
  %51 = load [3 x float]*, [3 x float]** %r_polyNors.addr, align 8, !dbg !371
  %cmp55 = icmp ne [3 x float]* %50, %51, !dbg !372
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !373

if.then57:                                        ; preds = %if.end54
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !374
  %53 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !375
  %54 = bitcast [3 x float]* %53 to i8*, !dbg !375
  call void %52(i8* %54), !dbg !374
  br label %if.end58, !dbg !374

if.end58:                                         ; preds = %if.then57, %if.end54
  store [3 x float]* null, [3 x float]** %pnors, align 8, !dbg !376
  store [3 x float]* null, [3 x float]** %fnors, align 8, !dbg !377
  br label %return, !dbg !378

return:                                           ; preds = %if.end58, %if.then13, %if.end
  ret void, !dbg !378
}

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_calc_normals_vert_fallback(%struct.MVert* %mverts, i32 %numVerts) #0 !dbg !379 {
entry:
  %mverts.addr = alloca %struct.MVert*, align 8
  %numVerts.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %mv = alloca %struct.MVert*, align 8
  %no = alloca [3 x float], align 4
  store %struct.MVert* %mverts, %struct.MVert** %mverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts.addr, metadata !382, metadata !DIExpression()), !dbg !383
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !384, metadata !DIExpression()), !dbg !385
  call void @llvm.dbg.declare(metadata i32* %i, metadata !386, metadata !DIExpression()), !dbg !387
  store i32 0, i32* %i, align 4, !dbg !388
  br label %for.cond, !dbg !390

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !391
  %1 = load i32, i32* %numVerts.addr, align 4, !dbg !393
  %cmp = icmp slt i32 %0, %1, !dbg !394
  br i1 %cmp, label %for.body, label %for.end, !dbg !395

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !396, metadata !DIExpression()), !dbg !398
  %2 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !399
  %3 = load i32, i32* %i, align 4, !dbg !400
  %idxprom = sext i32 %3 to i64, !dbg !399
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %2, i64 %idxprom, !dbg !399
  store %struct.MVert* %arrayidx, %struct.MVert** %mv, align 8, !dbg !398
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !401, metadata !DIExpression()), !dbg !402
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !403
  %4 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !404
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %4, i32 0, i32 0, !dbg !405
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !404
  %call = call float @normalize_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !406
  %5 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !407
  %no2 = getelementptr inbounds %struct.MVert, %struct.MVert* %5, i32 0, i32 1, !dbg !408
  %arraydecay3 = getelementptr inbounds [3 x i16], [3 x i16]* %no2, i64 0, i64 0, !dbg !407
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !409
  call void @normal_float_to_short_v3(i16* %arraydecay3, float* %arraydecay4), !dbg !410
  br label %for.inc, !dbg !411

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !412
  %inc = add nsw i32 %6, 1, !dbg !412
  store i32 %inc, i32* %i, align 4, !dbg !412
  br label %for.cond, !dbg !413, !llvm.loop !414

for.end:                                          ; preds = %for.cond
  ret void, !dbg !416
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_normals_poly(%struct.MVert* %mverts, i32 %numVerts, %struct.MLoop* %mloop, %struct.MPoly* %mpolys, i32 %UNUSED_numLoops, i32 %numPolys, [3 x float]* %r_polynors, i8 zeroext %only_face_normals) #0 !dbg !417 {
entry:
  %mverts.addr = alloca %struct.MVert*, align 8
  %numVerts.addr = alloca i32, align 4
  %mloop.addr = alloca %struct.MLoop*, align 8
  %mpolys.addr = alloca %struct.MPoly*, align 8
  %UNUSED_numLoops.addr = alloca i32, align 4
  %numPolys.addr = alloca i32, align 4
  %r_polynors.addr = alloca [3 x float]*, align 8
  %only_face_normals.addr = alloca i8, align 1
  %pnors = alloca [3 x float]*, align 8
  %tnorms = alloca [3 x float]*, align 8
  %i = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %tpnor = alloca [3 x float], align 4
  %mv = alloca %struct.MVert*, align 8
  %no = alloca float*, align 8
  store %struct.MVert* %mverts, %struct.MVert** %mverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts.addr, metadata !420, metadata !DIExpression()), !dbg !421
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !422, metadata !DIExpression()), !dbg !423
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !424, metadata !DIExpression()), !dbg !425
  store %struct.MPoly* %mpolys, %struct.MPoly** %mpolys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpolys.addr, metadata !426, metadata !DIExpression()), !dbg !427
  store i32 %UNUSED_numLoops, i32* %UNUSED_numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_numLoops.addr, metadata !428, metadata !DIExpression()), !dbg !429
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !430, metadata !DIExpression()), !dbg !431
  store [3 x float]* %r_polynors, [3 x float]** %r_polynors.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_polynors.addr, metadata !432, metadata !DIExpression()), !dbg !433
  store i8 %only_face_normals, i8* %only_face_normals.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %only_face_normals.addr, metadata !434, metadata !DIExpression()), !dbg !435
  call void @llvm.dbg.declare(metadata [3 x float]** %pnors, metadata !436, metadata !DIExpression()), !dbg !437
  %0 = load [3 x float]*, [3 x float]** %r_polynors.addr, align 8, !dbg !438
  store [3 x float]* %0, [3 x float]** %pnors, align 8, !dbg !437
  call void @llvm.dbg.declare(metadata [3 x float]** %tnorms, metadata !439, metadata !DIExpression()), !dbg !440
  call void @llvm.dbg.declare(metadata i32* %i, metadata !441, metadata !DIExpression()), !dbg !442
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !443, metadata !DIExpression()), !dbg !444
  %1 = load i8, i8* %only_face_normals.addr, align 1, !dbg !445
  %tobool = icmp ne i8 %1, 0, !dbg !445
  br i1 %tobool, label %if.then, label %if.end, !dbg !447

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !448
  br label %for.cond, !dbg !451

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !452
  %3 = load i32, i32* %numPolys.addr, align 4, !dbg !454
  %cmp = icmp slt i32 %2, %3, !dbg !455
  br i1 %cmp, label %for.body, label %for.end, !dbg !456

for.body:                                         ; preds = %for.cond
  %4 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !457
  %5 = load i32, i32* %i, align 4, !dbg !459
  %idxprom = sext i32 %5 to i64, !dbg !457
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %4, i64 %idxprom, !dbg !457
  %6 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !460
  %7 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !461
  %8 = load i32, i32* %i, align 4, !dbg !462
  %idxprom1 = sext i32 %8 to i64, !dbg !461
  %arrayidx2 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %7, i64 %idxprom1, !dbg !461
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx2, i32 0, i32 0, !dbg !463
  %9 = load i32, i32* %loopstart, align 4, !dbg !463
  %idx.ext = sext i32 %9 to i64, !dbg !464
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %6, i64 %idx.ext, !dbg !464
  %10 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !465
  %11 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !466
  %12 = load i32, i32* %i, align 4, !dbg !467
  %idxprom3 = sext i32 %12 to i64, !dbg !466
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %11, i64 %idxprom3, !dbg !466
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !466
  call void @BKE_mesh_calc_poly_normal(%struct.MPoly* %arrayidx, %struct.MLoop* %add.ptr, %struct.MVert* %10, float* %arraydecay), !dbg !468
  br label %for.inc, !dbg !469

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !470
  %inc = add nsw i32 %13, 1, !dbg !470
  store i32 %inc, i32* %i, align 4, !dbg !470
  br label %for.cond, !dbg !471, !llvm.loop !472

for.end:                                          ; preds = %for.cond
  br label %return, !dbg !474

if.end:                                           ; preds = %entry
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !475
  %15 = load i32, i32* %numVerts.addr, align 4, !dbg !476
  %conv = sext i32 %15 to i64, !dbg !477
  %mul = mul i64 12, %conv, !dbg !478
  %call = call i8* %14(i64 %mul, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.BKE_mesh_calc_normals_poly, i64 0, i64 0)), !dbg !475
  %16 = bitcast i8* %call to [3 x float]*, !dbg !475
  store [3 x float]* %16, [3 x float]** %tnorms, align 8, !dbg !479
  %17 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !480
  %tobool5 = icmp ne [3 x float]* %17, null, !dbg !480
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !482

if.then6:                                         ; preds = %if.end
  %18 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !483
  store %struct.MPoly* %18, %struct.MPoly** %mp, align 8, !dbg !485
  store i32 0, i32* %i, align 4, !dbg !486
  br label %for.cond7, !dbg !488

for.cond7:                                        ; preds = %for.inc17, %if.then6
  %19 = load i32, i32* %i, align 4, !dbg !489
  %20 = load i32, i32* %numPolys.addr, align 4, !dbg !491
  %cmp8 = icmp slt i32 %19, %20, !dbg !492
  br i1 %cmp8, label %for.body10, label %for.end19, !dbg !493

for.body10:                                       ; preds = %for.cond7
  %21 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !494
  %22 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !496
  %23 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !497
  %loopstart11 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %23, i32 0, i32 0, !dbg !498
  %24 = load i32, i32* %loopstart11, align 4, !dbg !498
  %idx.ext12 = sext i32 %24 to i64, !dbg !499
  %add.ptr13 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %22, i64 %idx.ext12, !dbg !499
  %25 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !500
  %26 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !501
  %27 = load i32, i32* %i, align 4, !dbg !502
  %idxprom14 = sext i32 %27 to i64, !dbg !501
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %26, i64 %idxprom14, !dbg !501
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !501
  %28 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !503
  call void @mesh_calc_normals_poly_accum(%struct.MPoly* %21, %struct.MLoop* %add.ptr13, %struct.MVert* %25, float* %arraydecay16, [3 x float]* %28), !dbg !504
  br label %for.inc17, !dbg !505

for.inc17:                                        ; preds = %for.body10
  %29 = load i32, i32* %i, align 4, !dbg !506
  %inc18 = add nsw i32 %29, 1, !dbg !506
  store i32 %inc18, i32* %i, align 4, !dbg !506
  %30 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !507
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %30, i32 1, !dbg !507
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mp, align 8, !dbg !507
  br label %for.cond7, !dbg !508, !llvm.loop !509

for.end19:                                        ; preds = %for.cond7
  br label %if.end32, !dbg !511

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %tpnor, metadata !512, metadata !DIExpression()), !dbg !514
  %31 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !515
  store %struct.MPoly* %31, %struct.MPoly** %mp, align 8, !dbg !516
  store i32 0, i32* %i, align 4, !dbg !517
  br label %for.cond20, !dbg !519

for.cond20:                                       ; preds = %for.inc28, %if.else
  %32 = load i32, i32* %i, align 4, !dbg !520
  %33 = load i32, i32* %numPolys.addr, align 4, !dbg !522
  %cmp21 = icmp slt i32 %32, %33, !dbg !523
  br i1 %cmp21, label %for.body23, label %for.end31, !dbg !524

for.body23:                                       ; preds = %for.cond20
  %34 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !525
  %35 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !527
  %36 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !528
  %loopstart24 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %36, i32 0, i32 0, !dbg !529
  %37 = load i32, i32* %loopstart24, align 4, !dbg !529
  %idx.ext25 = sext i32 %37 to i64, !dbg !530
  %add.ptr26 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %35, i64 %idx.ext25, !dbg !530
  %38 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !531
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %tpnor, i64 0, i64 0, !dbg !532
  %39 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !533
  call void @mesh_calc_normals_poly_accum(%struct.MPoly* %34, %struct.MLoop* %add.ptr26, %struct.MVert* %38, float* %arraydecay27, [3 x float]* %39), !dbg !534
  br label %for.inc28, !dbg !535

for.inc28:                                        ; preds = %for.body23
  %40 = load i32, i32* %i, align 4, !dbg !536
  %inc29 = add nsw i32 %40, 1, !dbg !536
  store i32 %inc29, i32* %i, align 4, !dbg !536
  %41 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !537
  %incdec.ptr30 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %41, i32 1, !dbg !537
  store %struct.MPoly* %incdec.ptr30, %struct.MPoly** %mp, align 8, !dbg !537
  br label %for.cond20, !dbg !538, !llvm.loop !539

for.end31:                                        ; preds = %for.cond20
  br label %if.end32

if.end32:                                         ; preds = %for.end31, %for.end19
  store i32 0, i32* %i, align 4, !dbg !541
  br label %for.cond33, !dbg !543

for.cond33:                                       ; preds = %for.inc51, %if.end32
  %42 = load i32, i32* %i, align 4, !dbg !544
  %43 = load i32, i32* %numVerts.addr, align 4, !dbg !546
  %cmp34 = icmp slt i32 %42, %43, !dbg !547
  br i1 %cmp34, label %for.body36, label %for.end53, !dbg !548

for.body36:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !549, metadata !DIExpression()), !dbg !551
  %44 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !552
  %45 = load i32, i32* %i, align 4, !dbg !553
  %idxprom37 = sext i32 %45 to i64, !dbg !552
  %arrayidx38 = getelementptr inbounds %struct.MVert, %struct.MVert* %44, i64 %idxprom37, !dbg !552
  store %struct.MVert* %arrayidx38, %struct.MVert** %mv, align 8, !dbg !551
  call void @llvm.dbg.declare(metadata float** %no, metadata !554, metadata !DIExpression()), !dbg !556
  %46 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !557
  %47 = load i32, i32* %i, align 4, !dbg !558
  %idxprom39 = sext i32 %47 to i64, !dbg !557
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %46, i64 %idxprom39, !dbg !557
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx40, i64 0, i64 0, !dbg !557
  store float* %arraydecay41, float** %no, align 8, !dbg !556
  %48 = load float*, float** %no, align 8, !dbg !559
  %call42 = call float @normalize_v3(float* %48), !dbg !559
  %cmp43 = fcmp oeq float %call42, 0.000000e+00, !dbg !559
  br i1 %cmp43, label %if.then45, label %if.end48, !dbg !561

if.then45:                                        ; preds = %for.body36
  %49 = load float*, float** %no, align 8, !dbg !562
  %50 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !564
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %50, i32 0, i32 0, !dbg !565
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !564
  %call47 = call float @normalize_v3_v3(float* %49, float* %arraydecay46), !dbg !566
  br label %if.end48, !dbg !567

if.end48:                                         ; preds = %if.then45, %for.body36
  %51 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !568
  %no49 = getelementptr inbounds %struct.MVert, %struct.MVert* %51, i32 0, i32 1, !dbg !569
  %arraydecay50 = getelementptr inbounds [3 x i16], [3 x i16]* %no49, i64 0, i64 0, !dbg !568
  %52 = load float*, float** %no, align 8, !dbg !570
  call void @normal_float_to_short_v3(i16* %arraydecay50, float* %52), !dbg !571
  br label %for.inc51, !dbg !572

for.inc51:                                        ; preds = %if.end48
  %53 = load i32, i32* %i, align 4, !dbg !573
  %inc52 = add nsw i32 %53, 1, !dbg !573
  store i32 %inc52, i32* %i, align 4, !dbg !573
  br label %for.cond33, !dbg !574, !llvm.loop !575

for.end53:                                        ; preds = %for.cond33
  %54 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !577
  %55 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !578
  %56 = bitcast [3 x float]* %55 to i8*, !dbg !578
  call void %54(i8* %56), !dbg !577
  br label %return, !dbg !579

return:                                           ; preds = %for.end53, %for.end
  ret void, !dbg !579
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_poly_normal(%struct.MPoly* %mpoly, %struct.MLoop* %loopstart, %struct.MVert* %mvarray, float* %no) #0 !dbg !580 {
entry:
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %mvarray.addr = alloca %struct.MVert*, align 8
  %no.addr = alloca float*, align 8
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !583, metadata !DIExpression()), !dbg !584
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !585, metadata !DIExpression()), !dbg !586
  store %struct.MVert* %mvarray, %struct.MVert** %mvarray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvarray.addr, metadata !587, metadata !DIExpression()), !dbg !588
  store float* %no, float** %no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %no.addr, metadata !589, metadata !DIExpression()), !dbg !590
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !591
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !593
  %1 = load i32, i32* %totloop, align 4, !dbg !593
  %cmp = icmp sgt i32 %1, 4, !dbg !594
  br i1 %cmp, label %if.then, label %if.else, !dbg !595

if.then:                                          ; preds = %entry
  %2 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !596
  %3 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !598
  %4 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !599
  %5 = load float*, float** %no.addr, align 8, !dbg !600
  call void @mesh_calc_ngon_normal(%struct.MPoly* %2, %struct.MLoop* %3, %struct.MVert* %4, float* %5), !dbg !601
  br label %if.end51, !dbg !602

if.else:                                          ; preds = %entry
  %6 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !603
  %totloop1 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %6, i32 0, i32 1, !dbg !605
  %7 = load i32, i32* %totloop1, align 4, !dbg !605
  %cmp2 = icmp eq i32 %7, 3, !dbg !606
  br i1 %cmp2, label %if.then3, label %if.else17, !dbg !607

if.then3:                                         ; preds = %if.else
  %8 = load float*, float** %no.addr, align 8, !dbg !608
  %9 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !610
  %10 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !611
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %10, i64 0, !dbg !611
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !612
  %11 = load i32, i32* %v, align 4, !dbg !612
  %idxprom = zext i32 %11 to i64, !dbg !610
  %arrayidx4 = getelementptr inbounds %struct.MVert, %struct.MVert* %9, i64 %idxprom, !dbg !610
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx4, i32 0, i32 0, !dbg !613
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !610
  %12 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !614
  %13 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !615
  %arrayidx5 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %13, i64 1, !dbg !615
  %v6 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx5, i32 0, i32 0, !dbg !616
  %14 = load i32, i32* %v6, align 4, !dbg !616
  %idxprom7 = zext i32 %14 to i64, !dbg !614
  %arrayidx8 = getelementptr inbounds %struct.MVert, %struct.MVert* %12, i64 %idxprom7, !dbg !614
  %co9 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx8, i32 0, i32 0, !dbg !617
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !614
  %15 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !618
  %16 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !619
  %arrayidx11 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %16, i64 2, !dbg !619
  %v12 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx11, i32 0, i32 0, !dbg !620
  %17 = load i32, i32* %v12, align 4, !dbg !620
  %idxprom13 = zext i32 %17 to i64, !dbg !618
  %arrayidx14 = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i64 %idxprom13, !dbg !618
  %co15 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx14, i32 0, i32 0, !dbg !621
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %co15, i64 0, i64 0, !dbg !618
  %call = call float @normal_tri_v3(float* %8, float* %arraydecay, float* %arraydecay10, float* %arraydecay16), !dbg !622
  br label %if.end50, !dbg !623

if.else17:                                        ; preds = %if.else
  %18 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !624
  %totloop18 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i32 0, i32 1, !dbg !626
  %19 = load i32, i32* %totloop18, align 4, !dbg !626
  %cmp19 = icmp eq i32 %19, 4, !dbg !627
  br i1 %cmp19, label %if.then20, label %if.else46, !dbg !628

if.then20:                                        ; preds = %if.else17
  %20 = load float*, float** %no.addr, align 8, !dbg !629
  %21 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !631
  %22 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !632
  %arrayidx21 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %22, i64 0, !dbg !632
  %v22 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx21, i32 0, i32 0, !dbg !633
  %23 = load i32, i32* %v22, align 4, !dbg !633
  %idxprom23 = zext i32 %23 to i64, !dbg !631
  %arrayidx24 = getelementptr inbounds %struct.MVert, %struct.MVert* %21, i64 %idxprom23, !dbg !631
  %co25 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx24, i32 0, i32 0, !dbg !634
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %co25, i64 0, i64 0, !dbg !631
  %24 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !635
  %25 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !636
  %arrayidx27 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %25, i64 1, !dbg !636
  %v28 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx27, i32 0, i32 0, !dbg !637
  %26 = load i32, i32* %v28, align 4, !dbg !637
  %idxprom29 = zext i32 %26 to i64, !dbg !635
  %arrayidx30 = getelementptr inbounds %struct.MVert, %struct.MVert* %24, i64 %idxprom29, !dbg !635
  %co31 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx30, i32 0, i32 0, !dbg !638
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %co31, i64 0, i64 0, !dbg !635
  %27 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !639
  %28 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !640
  %arrayidx33 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %28, i64 2, !dbg !640
  %v34 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx33, i32 0, i32 0, !dbg !641
  %29 = load i32, i32* %v34, align 4, !dbg !641
  %idxprom35 = zext i32 %29 to i64, !dbg !639
  %arrayidx36 = getelementptr inbounds %struct.MVert, %struct.MVert* %27, i64 %idxprom35, !dbg !639
  %co37 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx36, i32 0, i32 0, !dbg !642
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %co37, i64 0, i64 0, !dbg !639
  %30 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !643
  %31 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !644
  %arrayidx39 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %31, i64 3, !dbg !644
  %v40 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx39, i32 0, i32 0, !dbg !645
  %32 = load i32, i32* %v40, align 4, !dbg !645
  %idxprom41 = zext i32 %32 to i64, !dbg !643
  %arrayidx42 = getelementptr inbounds %struct.MVert, %struct.MVert* %30, i64 %idxprom41, !dbg !643
  %co43 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx42, i32 0, i32 0, !dbg !646
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %co43, i64 0, i64 0, !dbg !643
  %call45 = call float @normal_quad_v3(float* %20, float* %arraydecay26, float* %arraydecay32, float* %arraydecay38, float* %arraydecay44), !dbg !647
  br label %if.end, !dbg !648

if.else46:                                        ; preds = %if.else17
  %33 = load float*, float** %no.addr, align 8, !dbg !649
  %arrayidx47 = getelementptr inbounds float, float* %33, i64 0, !dbg !649
  store float 0.000000e+00, float* %arrayidx47, align 4, !dbg !651
  %34 = load float*, float** %no.addr, align 8, !dbg !652
  %arrayidx48 = getelementptr inbounds float, float* %34, i64 1, !dbg !652
  store float 0.000000e+00, float* %arrayidx48, align 4, !dbg !653
  %35 = load float*, float** %no.addr, align 8, !dbg !654
  %arrayidx49 = getelementptr inbounds float, float* %35, i64 2, !dbg !654
  store float 1.000000e+00, float* %arrayidx49, align 4, !dbg !655
  br label %if.end

if.end:                                           ; preds = %if.else46, %if.then20
  br label %if.end50

if.end50:                                         ; preds = %if.end, %if.then3
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then
  ret void, !dbg !656
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !657 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !662, metadata !DIExpression()), !dbg !663
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !664, metadata !DIExpression()), !dbg !665
  %0 = load float*, float** %a.addr, align 8, !dbg !666
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !666
  %1 = load float, float* %arrayidx, align 4, !dbg !666
  %2 = load float*, float** %r.addr, align 8, !dbg !667
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !667
  store float %1, float* %arrayidx1, align 4, !dbg !668
  %3 = load float*, float** %a.addr, align 8, !dbg !669
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !669
  %4 = load float, float* %arrayidx2, align 4, !dbg !669
  %5 = load float*, float** %r.addr, align 8, !dbg !670
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !670
  store float %4, float* %arrayidx3, align 4, !dbg !671
  %6 = load float*, float** %a.addr, align 8, !dbg !672
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !672
  %7 = load float, float* %arrayidx4, align 4, !dbg !672
  %8 = load float*, float** %r.addr, align 8, !dbg !673
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !673
  store float %7, float* %arrayidx5, align 4, !dbg !674
  ret void, !dbg !675
}

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_calc_normals_poly_accum(%struct.MPoly* %mp, %struct.MLoop* %ml, %struct.MVert* %mvert, float* %polyno, [3 x float]* %tnorms) #0 !dbg !676 {
entry:
  %mp.addr = alloca %struct.MPoly*, align 8
  %ml.addr = alloca %struct.MLoop*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %polyno.addr = alloca float*, align 8
  %tnorms.addr = alloca [3 x float]*, align 8
  %nverts = alloca i32, align 4
  %edgevecbuf = alloca [3 x float]*, align 8
  %i = alloca i32, align 4
  %i_prev = alloca i32, align 4
  %v_prev = alloca float*, align 8
  %v_curr = alloca float*, align 8
  %prev_edge = alloca float*, align 8
  %cur_edge = alloca float*, align 8
  %fac = alloca float, align 4
  store %struct.MPoly* %mp, %struct.MPoly** %mp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp.addr, metadata !679, metadata !DIExpression()), !dbg !680
  store %struct.MLoop* %ml, %struct.MLoop** %ml.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml.addr, metadata !681, metadata !DIExpression()), !dbg !682
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !683, metadata !DIExpression()), !dbg !684
  store float* %polyno, float** %polyno.addr, align 8
  call void @llvm.dbg.declare(metadata float** %polyno.addr, metadata !685, metadata !DIExpression()), !dbg !686
  store [3 x float]* %tnorms, [3 x float]** %tnorms.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %tnorms.addr, metadata !687, metadata !DIExpression()), !dbg !688
  call void @llvm.dbg.declare(metadata i32* %nverts, metadata !689, metadata !DIExpression()), !dbg !690
  %0 = load %struct.MPoly*, %struct.MPoly** %mp.addr, align 8, !dbg !691
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !692
  %1 = load i32, i32* %totloop, align 4, !dbg !692
  store i32 %1, i32* %nverts, align 4, !dbg !690
  call void @llvm.dbg.declare(metadata [3 x float]** %edgevecbuf, metadata !693, metadata !DIExpression()), !dbg !694
  %2 = load i32, i32* %nverts, align 4, !dbg !695
  %conv = sext i32 %2 to i64, !dbg !695
  %mul = mul i64 12, %conv, !dbg !695
  %3 = alloca i8, i64 %mul, align 16, !dbg !695
  %4 = bitcast i8* %3 to [3 x float]*, !dbg !695
  store [3 x float]* %4, [3 x float]** %edgevecbuf, align 8, !dbg !694
  call void @llvm.dbg.declare(metadata i32* %i, metadata !696, metadata !DIExpression()), !dbg !697
  call void @llvm.dbg.declare(metadata i32* %i_prev, metadata !698, metadata !DIExpression()), !dbg !700
  %5 = load i32, i32* %nverts, align 4, !dbg !701
  %sub = sub nsw i32 %5, 1, !dbg !702
  store i32 %sub, i32* %i_prev, align 4, !dbg !700
  call void @llvm.dbg.declare(metadata float** %v_prev, metadata !703, metadata !DIExpression()), !dbg !704
  %6 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !705
  %7 = load %struct.MLoop*, %struct.MLoop** %ml.addr, align 8, !dbg !706
  %8 = load i32, i32* %i_prev, align 4, !dbg !707
  %idxprom = sext i32 %8 to i64, !dbg !706
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %7, i64 %idxprom, !dbg !706
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !708
  %9 = load i32, i32* %v, align 4, !dbg !708
  %idxprom1 = zext i32 %9 to i64, !dbg !705
  %arrayidx2 = getelementptr inbounds %struct.MVert, %struct.MVert* %6, i64 %idxprom1, !dbg !705
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx2, i32 0, i32 0, !dbg !709
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !705
  store float* %arraydecay, float** %v_prev, align 8, !dbg !704
  call void @llvm.dbg.declare(metadata float** %v_curr, metadata !710, metadata !DIExpression()), !dbg !711
  %10 = load float*, float** %polyno.addr, align 8, !dbg !712
  call void @zero_v3(float* %10), !dbg !713
  store i32 0, i32* %i, align 4, !dbg !714
  br label %for.cond, !dbg !716

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !717
  %12 = load i32, i32* %nverts, align 4, !dbg !719
  %cmp = icmp slt i32 %11, %12, !dbg !720
  br i1 %cmp, label %for.body, label %for.end, !dbg !721

for.body:                                         ; preds = %for.cond
  %13 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !722
  %14 = load %struct.MLoop*, %struct.MLoop** %ml.addr, align 8, !dbg !724
  %15 = load i32, i32* %i, align 4, !dbg !725
  %idxprom4 = sext i32 %15 to i64, !dbg !724
  %arrayidx5 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %14, i64 %idxprom4, !dbg !724
  %v6 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx5, i32 0, i32 0, !dbg !726
  %16 = load i32, i32* %v6, align 4, !dbg !726
  %idxprom7 = zext i32 %16 to i64, !dbg !722
  %arrayidx8 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i64 %idxprom7, !dbg !722
  %co9 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx8, i32 0, i32 0, !dbg !727
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !722
  store float* %arraydecay10, float** %v_curr, align 8, !dbg !728
  %17 = load float*, float** %polyno.addr, align 8, !dbg !729
  %18 = load float*, float** %v_prev, align 8, !dbg !730
  %19 = load float*, float** %v_curr, align 8, !dbg !731
  call void @add_newell_cross_v3_v3v3(float* %17, float* %18, float* %19), !dbg !732
  %20 = load [3 x float]*, [3 x float]** %edgevecbuf, align 8, !dbg !733
  %21 = load i32, i32* %i_prev, align 4, !dbg !734
  %idxprom11 = sext i32 %21 to i64, !dbg !733
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %20, i64 %idxprom11, !dbg !733
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !733
  %22 = load float*, float** %v_prev, align 8, !dbg !735
  %23 = load float*, float** %v_curr, align 8, !dbg !736
  call void @sub_v3_v3v3(float* %arraydecay13, float* %22, float* %23), !dbg !737
  %24 = load [3 x float]*, [3 x float]** %edgevecbuf, align 8, !dbg !738
  %25 = load i32, i32* %i_prev, align 4, !dbg !739
  %idxprom14 = sext i32 %25 to i64, !dbg !738
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %24, i64 %idxprom14, !dbg !738
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !738
  %call = call float @normalize_v3(float* %arraydecay16), !dbg !740
  %26 = load i32, i32* %i, align 4, !dbg !741
  store i32 %26, i32* %i_prev, align 4, !dbg !742
  %27 = load float*, float** %v_curr, align 8, !dbg !743
  store float* %27, float** %v_prev, align 8, !dbg !744
  br label %for.inc, !dbg !745

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !746
  %inc = add nsw i32 %28, 1, !dbg !746
  store i32 %inc, i32* %i, align 4, !dbg !746
  br label %for.cond, !dbg !747, !llvm.loop !748

for.end:                                          ; preds = %for.cond
  %29 = load float*, float** %polyno.addr, align 8, !dbg !750
  %call17 = call float @normalize_v3(float* %29), !dbg !750
  %cmp18 = fcmp oeq float %call17, 0.000000e+00, !dbg !750
  br i1 %cmp18, label %if.then, label %if.end, !dbg !752

if.then:                                          ; preds = %for.end
  %30 = load float*, float** %polyno.addr, align 8, !dbg !753
  %arrayidx20 = getelementptr inbounds float, float* %30, i64 2, !dbg !753
  store float 1.000000e+00, float* %arrayidx20, align 4, !dbg !755
  br label %if.end, !dbg !756

if.end:                                           ; preds = %if.then, %for.end
  call void @llvm.dbg.declare(metadata float** %prev_edge, metadata !757, metadata !DIExpression()), !dbg !759
  %31 = load [3 x float]*, [3 x float]** %edgevecbuf, align 8, !dbg !760
  %32 = load i32, i32* %nverts, align 4, !dbg !761
  %sub21 = sub nsw i32 %32, 1, !dbg !762
  %idxprom22 = sext i32 %sub21 to i64, !dbg !760
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %31, i64 %idxprom22, !dbg !760
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 0, !dbg !760
  store float* %arraydecay24, float** %prev_edge, align 8, !dbg !759
  store i32 0, i32* %i, align 4, !dbg !763
  br label %for.cond25, !dbg !765

for.cond25:                                       ; preds = %for.inc40, %if.end
  %33 = load i32, i32* %i, align 4, !dbg !766
  %34 = load i32, i32* %nverts, align 4, !dbg !768
  %cmp26 = icmp slt i32 %33, %34, !dbg !769
  br i1 %cmp26, label %for.body28, label %for.end42, !dbg !770

for.body28:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata float** %cur_edge, metadata !771, metadata !DIExpression()), !dbg !773
  %35 = load [3 x float]*, [3 x float]** %edgevecbuf, align 8, !dbg !774
  %36 = load i32, i32* %i, align 4, !dbg !775
  %idxprom29 = sext i32 %36 to i64, !dbg !774
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %35, i64 %idxprom29, !dbg !774
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 0, !dbg !774
  store float* %arraydecay31, float** %cur_edge, align 8, !dbg !773
  call void @llvm.dbg.declare(metadata float* %fac, metadata !776, metadata !DIExpression()), !dbg !777
  %37 = load float*, float** %cur_edge, align 8, !dbg !778
  %38 = load float*, float** %prev_edge, align 8, !dbg !779
  %call32 = call float @dot_v3v3(float* %37, float* %38), !dbg !780
  %fneg = fneg float %call32, !dbg !781
  %call33 = call float @saacos(float %fneg), !dbg !782
  store float %call33, float* %fac, align 4, !dbg !777
  %39 = load [3 x float]*, [3 x float]** %tnorms.addr, align 8, !dbg !783
  %40 = load %struct.MLoop*, %struct.MLoop** %ml.addr, align 8, !dbg !784
  %41 = load i32, i32* %i, align 4, !dbg !785
  %idxprom34 = sext i32 %41 to i64, !dbg !784
  %arrayidx35 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %40, i64 %idxprom34, !dbg !784
  %v36 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx35, i32 0, i32 0, !dbg !786
  %42 = load i32, i32* %v36, align 4, !dbg !786
  %idxprom37 = zext i32 %42 to i64, !dbg !783
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %39, i64 %idxprom37, !dbg !783
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx38, i64 0, i64 0, !dbg !783
  %43 = load float*, float** %polyno.addr, align 8, !dbg !787
  %44 = load float, float* %fac, align 4, !dbg !788
  call void @madd_v3_v3fl(float* %arraydecay39, float* %43, float %44), !dbg !789
  %45 = load float*, float** %cur_edge, align 8, !dbg !790
  store float* %45, float** %prev_edge, align 8, !dbg !791
  br label %for.inc40, !dbg !792

for.inc40:                                        ; preds = %for.body28
  %46 = load i32, i32* %i, align 4, !dbg !793
  %inc41 = add nsw i32 %46, 1, !dbg !793
  store i32 %inc41, i32* %i, align 4, !dbg !793
  br label %for.cond25, !dbg !794, !llvm.loop !795

for.end42:                                        ; preds = %for.cond25
  ret void, !dbg !797
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !798 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !801, metadata !DIExpression()), !dbg !802
  %0 = load float*, float** %n.addr, align 8, !dbg !803
  %1 = load float*, float** %n.addr, align 8, !dbg !804
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !805
  ret float %call, !dbg !806
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !807 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !810, metadata !DIExpression()), !dbg !811
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !812, metadata !DIExpression()), !dbg !813
  call void @llvm.dbg.declare(metadata float* %d, metadata !814, metadata !DIExpression()), !dbg !815
  %0 = load float*, float** %a.addr, align 8, !dbg !816
  %1 = load float*, float** %a.addr, align 8, !dbg !817
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !818
  store float %call, float* %d, align 4, !dbg !815
  %2 = load float, float* %d, align 4, !dbg !819
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !821
  br i1 %cmp, label %if.then, label %if.else, !dbg !822

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !823
  %call1 = call float @sqrtf(float %3) #5, !dbg !825
  store float %call1, float* %d, align 4, !dbg !826
  %4 = load float*, float** %r.addr, align 8, !dbg !827
  %5 = load float*, float** %a.addr, align 8, !dbg !828
  %6 = load float, float* %d, align 4, !dbg !829
  %div = fdiv float 1.000000e+00, %6, !dbg !830
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !831
  br label %if.end, !dbg !832

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !833
  call void @zero_v3(float* %7), !dbg !835
  store float 0.000000e+00, float* %d, align 4, !dbg !836
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !837
  ret float %8, !dbg !838
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_float_to_short_v3(i16* %out, float* %in) #0 !dbg !839 {
entry:
  %out.addr = alloca i16*, align 8
  %in.addr = alloca float*, align 8
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !843, metadata !DIExpression()), !dbg !844
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !845, metadata !DIExpression()), !dbg !846
  %0 = load float*, float** %in.addr, align 8, !dbg !847
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !847
  %1 = load float, float* %arrayidx, align 4, !dbg !847
  %mul = fmul float %1, 3.276700e+04, !dbg !848
  %conv = fptosi float %mul to i16, !dbg !849
  %2 = load i16*, i16** %out.addr, align 8, !dbg !850
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !850
  store i16 %conv, i16* %arrayidx1, align 2, !dbg !851
  %3 = load float*, float** %in.addr, align 8, !dbg !852
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !852
  %4 = load float, float* %arrayidx2, align 4, !dbg !852
  %mul3 = fmul float %4, 3.276700e+04, !dbg !853
  %conv4 = fptosi float %mul3 to i16, !dbg !854
  %5 = load i16*, i16** %out.addr, align 8, !dbg !855
  %arrayidx5 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !855
  store i16 %conv4, i16* %arrayidx5, align 2, !dbg !856
  %6 = load float*, float** %in.addr, align 8, !dbg !857
  %arrayidx6 = getelementptr inbounds float, float* %6, i64 2, !dbg !857
  %7 = load float, float* %arrayidx6, align 4, !dbg !857
  %mul7 = fmul float %7, 3.276700e+04, !dbg !858
  %conv8 = fptosi float %mul7 to i16, !dbg !859
  %8 = load i16*, i16** %out.addr, align 8, !dbg !860
  %arrayidx9 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !860
  store i16 %conv8, i16* %arrayidx9, align 2, !dbg !861
  ret void, !dbg !862
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_normals(%struct.Mesh* %mesh) #0 !dbg !863 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !1219, metadata !DIExpression()), !dbg !1220
  %0 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !1221
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 15, !dbg !1222
  %1 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !1222
  %2 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !1223
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 26, !dbg !1224
  %3 = load i32, i32* %totvert, align 8, !dbg !1224
  %4 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !1225
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 9, !dbg !1226
  %5 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !1226
  %6 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !1227
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 7, !dbg !1228
  %7 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !1228
  %8 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !1229
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 31, !dbg !1230
  %9 = load i32, i32* %totloop, align 4, !dbg !1230
  %10 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !1231
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 30, !dbg !1232
  %11 = load i32, i32* %totpoly, align 8, !dbg !1232
  call void @BKE_mesh_calc_normals_poly(%struct.MVert* %1, i32 %3, %struct.MLoop* %5, %struct.MPoly* %7, i32 %9, i32 %11, [3 x float]* null, i8 zeroext 0), !dbg !1233
  ret void, !dbg !1234
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_normals_tessface(%struct.MVert* %mverts, i32 %numVerts, %struct.MFace* %mfaces, i32 %numFaces, [3 x float]* %r_faceNors) #0 !dbg !1235 {
entry:
  %mverts.addr = alloca %struct.MVert*, align 8
  %numVerts.addr = alloca i32, align 4
  %mfaces.addr = alloca %struct.MFace*, align 8
  %numFaces.addr = alloca i32, align 4
  %r_faceNors.addr = alloca [3 x float]*, align 8
  %tnorms = alloca [3 x float]*, align 8
  %fnors = alloca [3 x float]*, align 8
  %i = alloca i32, align 4
  %mf = alloca %struct.MFace*, align 8
  %f_no = alloca float*, align 8
  %n4 = alloca float*, align 8
  %c4 = alloca float*, align 8
  %mv = alloca %struct.MVert*, align 8
  %no = alloca float*, align 8
  store %struct.MVert* %mverts, %struct.MVert** %mverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts.addr, metadata !1238, metadata !DIExpression()), !dbg !1239
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !1240, metadata !DIExpression()), !dbg !1241
  store %struct.MFace* %mfaces, %struct.MFace** %mfaces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mfaces.addr, metadata !1242, metadata !DIExpression()), !dbg !1243
  store i32 %numFaces, i32* %numFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numFaces.addr, metadata !1244, metadata !DIExpression()), !dbg !1245
  store [3 x float]* %r_faceNors, [3 x float]** %r_faceNors.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_faceNors.addr, metadata !1246, metadata !DIExpression()), !dbg !1247
  call void @llvm.dbg.declare(metadata [3 x float]** %tnorms, metadata !1248, metadata !DIExpression()), !dbg !1249
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1250
  %1 = load i32, i32* %numVerts.addr, align 4, !dbg !1251
  %conv = sext i32 %1 to i64, !dbg !1252
  %mul = mul i64 12, %conv, !dbg !1253
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)), !dbg !1250
  %2 = bitcast i8* %call to [3 x float]*, !dbg !1250
  store [3 x float]* %2, [3 x float]** %tnorms, align 8, !dbg !1249
  call void @llvm.dbg.declare(metadata [3 x float]** %fnors, metadata !1254, metadata !DIExpression()), !dbg !1255
  %3 = load [3 x float]*, [3 x float]** %r_faceNors.addr, align 8, !dbg !1256
  %tobool = icmp ne [3 x float]* %3, null, !dbg !1257
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !1257

cond.true:                                        ; preds = %entry
  %4 = load [3 x float]*, [3 x float]** %r_faceNors.addr, align 8, !dbg !1258
  %5 = bitcast [3 x float]* %4 to i8*, !dbg !1258
  br label %cond.end, !dbg !1257

cond.false:                                       ; preds = %entry
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1259
  %7 = load i32, i32* %numFaces.addr, align 4, !dbg !1260
  %conv1 = sext i32 %7 to i64, !dbg !1261
  %mul2 = mul i64 12, %conv1, !dbg !1262
  %call3 = call i8* %6(i64 %mul2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)), !dbg !1259
  br label %cond.end, !dbg !1257

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %5, %cond.true ], [ %call3, %cond.false ], !dbg !1257
  %8 = bitcast i8* %cond to [3 x float]*, !dbg !1257
  store [3 x float]* %8, [3 x float]** %fnors, align 8, !dbg !1255
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1263, metadata !DIExpression()), !dbg !1264
  store i32 0, i32* %i, align 4, !dbg !1265
  br label %for.cond, !dbg !1267

for.cond:                                         ; preds = %for.inc, %cond.end
  %9 = load i32, i32* %i, align 4, !dbg !1268
  %10 = load i32, i32* %numFaces.addr, align 4, !dbg !1270
  %cmp = icmp slt i32 %9, %10, !dbg !1271
  br i1 %cmp, label %for.body, label %for.end, !dbg !1272

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !1273, metadata !DIExpression()), !dbg !1275
  %11 = load %struct.MFace*, %struct.MFace** %mfaces.addr, align 8, !dbg !1276
  %12 = load i32, i32* %i, align 4, !dbg !1277
  %idxprom = sext i32 %12 to i64, !dbg !1276
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %11, i64 %idxprom, !dbg !1276
  store %struct.MFace* %arrayidx, %struct.MFace** %mf, align 8, !dbg !1275
  call void @llvm.dbg.declare(metadata float** %f_no, metadata !1278, metadata !DIExpression()), !dbg !1279
  %13 = load [3 x float]*, [3 x float]** %fnors, align 8, !dbg !1280
  %14 = load i32, i32* %i, align 4, !dbg !1281
  %idxprom5 = sext i32 %14 to i64, !dbg !1280
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %13, i64 %idxprom5, !dbg !1280
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx6, i64 0, i64 0, !dbg !1280
  store float* %arraydecay, float** %f_no, align 8, !dbg !1279
  call void @llvm.dbg.declare(metadata float** %n4, metadata !1282, metadata !DIExpression()), !dbg !1283
  %15 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1284
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %15, i32 0, i32 3, !dbg !1285
  %16 = load i32, i32* %v4, align 4, !dbg !1285
  %tobool7 = icmp ne i32 %16, 0, !dbg !1286
  br i1 %tobool7, label %cond.true8, label %cond.false13, !dbg !1286

cond.true8:                                       ; preds = %for.body
  %17 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !1287
  %18 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1288
  %v49 = getelementptr inbounds %struct.MFace, %struct.MFace* %18, i32 0, i32 3, !dbg !1289
  %19 = load i32, i32* %v49, align 4, !dbg !1289
  %idxprom10 = zext i32 %19 to i64, !dbg !1287
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %17, i64 %idxprom10, !dbg !1287
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !1287
  br label %cond.end14, !dbg !1286

cond.false13:                                     ; preds = %for.body
  br label %cond.end14, !dbg !1286

cond.end14:                                       ; preds = %cond.false13, %cond.true8
  %cond15 = phi float* [ %arraydecay12, %cond.true8 ], [ null, %cond.false13 ], !dbg !1286
  store float* %cond15, float** %n4, align 8, !dbg !1283
  call void @llvm.dbg.declare(metadata float** %c4, metadata !1290, metadata !DIExpression()), !dbg !1291
  %20 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1292
  %v416 = getelementptr inbounds %struct.MFace, %struct.MFace* %20, i32 0, i32 3, !dbg !1293
  %21 = load i32, i32* %v416, align 4, !dbg !1293
  %tobool17 = icmp ne i32 %21, 0, !dbg !1294
  br i1 %tobool17, label %cond.true18, label %cond.false23, !dbg !1294

cond.true18:                                      ; preds = %cond.end14
  %22 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1295
  %23 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1296
  %v419 = getelementptr inbounds %struct.MFace, %struct.MFace* %23, i32 0, i32 3, !dbg !1297
  %24 = load i32, i32* %v419, align 4, !dbg !1297
  %idxprom20 = zext i32 %24 to i64, !dbg !1295
  %arrayidx21 = getelementptr inbounds %struct.MVert, %struct.MVert* %22, i64 %idxprom20, !dbg !1295
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx21, i32 0, i32 0, !dbg !1298
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !1295
  br label %cond.end24, !dbg !1294

cond.false23:                                     ; preds = %cond.end14
  br label %cond.end24, !dbg !1294

cond.end24:                                       ; preds = %cond.false23, %cond.true18
  %cond25 = phi float* [ %arraydecay22, %cond.true18 ], [ null, %cond.false23 ], !dbg !1294
  store float* %cond25, float** %c4, align 8, !dbg !1291
  %25 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1299
  %v426 = getelementptr inbounds %struct.MFace, %struct.MFace* %25, i32 0, i32 3, !dbg !1301
  %26 = load i32, i32* %v426, align 4, !dbg !1301
  %tobool27 = icmp ne i32 %26, 0, !dbg !1299
  br i1 %tobool27, label %if.then, label %if.else, !dbg !1302

if.then:                                          ; preds = %cond.end24
  %27 = load float*, float** %f_no, align 8, !dbg !1303
  %28 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1304
  %29 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1305
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i32 0, i32 0, !dbg !1306
  %30 = load i32, i32* %v1, align 4, !dbg !1306
  %idxprom28 = zext i32 %30 to i64, !dbg !1304
  %arrayidx29 = getelementptr inbounds %struct.MVert, %struct.MVert* %28, i64 %idxprom28, !dbg !1304
  %co30 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx29, i32 0, i32 0, !dbg !1307
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !1304
  %31 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1308
  %32 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1309
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %32, i32 0, i32 1, !dbg !1310
  %33 = load i32, i32* %v2, align 4, !dbg !1310
  %idxprom32 = zext i32 %33 to i64, !dbg !1308
  %arrayidx33 = getelementptr inbounds %struct.MVert, %struct.MVert* %31, i64 %idxprom32, !dbg !1308
  %co34 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx33, i32 0, i32 0, !dbg !1311
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %co34, i64 0, i64 0, !dbg !1308
  %34 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1312
  %35 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1313
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %35, i32 0, i32 2, !dbg !1314
  %36 = load i32, i32* %v3, align 4, !dbg !1314
  %idxprom36 = zext i32 %36 to i64, !dbg !1312
  %arrayidx37 = getelementptr inbounds %struct.MVert, %struct.MVert* %34, i64 %idxprom36, !dbg !1312
  %co38 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx37, i32 0, i32 0, !dbg !1315
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 0, !dbg !1312
  %37 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1316
  %38 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1317
  %v440 = getelementptr inbounds %struct.MFace, %struct.MFace* %38, i32 0, i32 3, !dbg !1318
  %39 = load i32, i32* %v440, align 4, !dbg !1318
  %idxprom41 = zext i32 %39 to i64, !dbg !1316
  %arrayidx42 = getelementptr inbounds %struct.MVert, %struct.MVert* %37, i64 %idxprom41, !dbg !1316
  %co43 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx42, i32 0, i32 0, !dbg !1319
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %co43, i64 0, i64 0, !dbg !1316
  %call45 = call float @normal_quad_v3(float* %27, float* %arraydecay31, float* %arraydecay35, float* %arraydecay39, float* %arraydecay44), !dbg !1320
  br label %if.end, !dbg !1320

if.else:                                          ; preds = %cond.end24
  %40 = load float*, float** %f_no, align 8, !dbg !1321
  %41 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1322
  %42 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1323
  %v146 = getelementptr inbounds %struct.MFace, %struct.MFace* %42, i32 0, i32 0, !dbg !1324
  %43 = load i32, i32* %v146, align 4, !dbg !1324
  %idxprom47 = zext i32 %43 to i64, !dbg !1322
  %arrayidx48 = getelementptr inbounds %struct.MVert, %struct.MVert* %41, i64 %idxprom47, !dbg !1322
  %co49 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx48, i32 0, i32 0, !dbg !1325
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %co49, i64 0, i64 0, !dbg !1322
  %44 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1326
  %45 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1327
  %v251 = getelementptr inbounds %struct.MFace, %struct.MFace* %45, i32 0, i32 1, !dbg !1328
  %46 = load i32, i32* %v251, align 4, !dbg !1328
  %idxprom52 = zext i32 %46 to i64, !dbg !1326
  %arrayidx53 = getelementptr inbounds %struct.MVert, %struct.MVert* %44, i64 %idxprom52, !dbg !1326
  %co54 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx53, i32 0, i32 0, !dbg !1329
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %co54, i64 0, i64 0, !dbg !1326
  %47 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1330
  %48 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1331
  %v356 = getelementptr inbounds %struct.MFace, %struct.MFace* %48, i32 0, i32 2, !dbg !1332
  %49 = load i32, i32* %v356, align 4, !dbg !1332
  %idxprom57 = zext i32 %49 to i64, !dbg !1330
  %arrayidx58 = getelementptr inbounds %struct.MVert, %struct.MVert* %47, i64 %idxprom57, !dbg !1330
  %co59 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx58, i32 0, i32 0, !dbg !1333
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %co59, i64 0, i64 0, !dbg !1330
  %call61 = call float @normal_tri_v3(float* %40, float* %arraydecay50, float* %arraydecay55, float* %arraydecay60), !dbg !1334
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %50 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !1335
  %51 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1336
  %v162 = getelementptr inbounds %struct.MFace, %struct.MFace* %51, i32 0, i32 0, !dbg !1337
  %52 = load i32, i32* %v162, align 4, !dbg !1337
  %idxprom63 = zext i32 %52 to i64, !dbg !1335
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %50, i64 %idxprom63, !dbg !1335
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx64, i64 0, i64 0, !dbg !1335
  %53 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !1338
  %54 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1339
  %v266 = getelementptr inbounds %struct.MFace, %struct.MFace* %54, i32 0, i32 1, !dbg !1340
  %55 = load i32, i32* %v266, align 4, !dbg !1340
  %idxprom67 = zext i32 %55 to i64, !dbg !1338
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %53, i64 %idxprom67, !dbg !1338
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx68, i64 0, i64 0, !dbg !1338
  %56 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !1341
  %57 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1342
  %v370 = getelementptr inbounds %struct.MFace, %struct.MFace* %57, i32 0, i32 2, !dbg !1343
  %58 = load i32, i32* %v370, align 4, !dbg !1343
  %idxprom71 = zext i32 %58 to i64, !dbg !1341
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %56, i64 %idxprom71, !dbg !1341
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 0, !dbg !1341
  %59 = load float*, float** %n4, align 8, !dbg !1344
  %60 = load float*, float** %f_no, align 8, !dbg !1345
  %61 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1346
  %62 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1347
  %v174 = getelementptr inbounds %struct.MFace, %struct.MFace* %62, i32 0, i32 0, !dbg !1348
  %63 = load i32, i32* %v174, align 4, !dbg !1348
  %idxprom75 = zext i32 %63 to i64, !dbg !1346
  %arrayidx76 = getelementptr inbounds %struct.MVert, %struct.MVert* %61, i64 %idxprom75, !dbg !1346
  %co77 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx76, i32 0, i32 0, !dbg !1349
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %co77, i64 0, i64 0, !dbg !1346
  %64 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1350
  %65 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1351
  %v279 = getelementptr inbounds %struct.MFace, %struct.MFace* %65, i32 0, i32 1, !dbg !1352
  %66 = load i32, i32* %v279, align 4, !dbg !1352
  %idxprom80 = zext i32 %66 to i64, !dbg !1350
  %arrayidx81 = getelementptr inbounds %struct.MVert, %struct.MVert* %64, i64 %idxprom80, !dbg !1350
  %co82 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx81, i32 0, i32 0, !dbg !1353
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %co82, i64 0, i64 0, !dbg !1350
  %67 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1354
  %68 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !1355
  %v384 = getelementptr inbounds %struct.MFace, %struct.MFace* %68, i32 0, i32 2, !dbg !1356
  %69 = load i32, i32* %v384, align 4, !dbg !1356
  %idxprom85 = zext i32 %69 to i64, !dbg !1354
  %arrayidx86 = getelementptr inbounds %struct.MVert, %struct.MVert* %67, i64 %idxprom85, !dbg !1354
  %co87 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx86, i32 0, i32 0, !dbg !1357
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %co87, i64 0, i64 0, !dbg !1354
  %70 = load float*, float** %c4, align 8, !dbg !1358
  call void @accumulate_vertex_normals(float* %arraydecay65, float* %arraydecay69, float* %arraydecay73, float* %59, float* %60, float* %arraydecay78, float* %arraydecay83, float* %arraydecay88, float* %70), !dbg !1359
  br label %for.inc, !dbg !1360

for.inc:                                          ; preds = %if.end
  %71 = load i32, i32* %i, align 4, !dbg !1361
  %inc = add nsw i32 %71, 1, !dbg !1361
  store i32 %inc, i32* %i, align 4, !dbg !1361
  br label %for.cond, !dbg !1362, !llvm.loop !1363

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1365
  br label %for.cond89, !dbg !1367

for.cond89:                                       ; preds = %for.inc108, %for.end
  %72 = load i32, i32* %i, align 4, !dbg !1368
  %73 = load i32, i32* %numVerts.addr, align 4, !dbg !1370
  %cmp90 = icmp slt i32 %72, %73, !dbg !1371
  br i1 %cmp90, label %for.body92, label %for.end110, !dbg !1372

for.body92:                                       ; preds = %for.cond89
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !1373, metadata !DIExpression()), !dbg !1375
  %74 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1376
  %75 = load i32, i32* %i, align 4, !dbg !1377
  %idxprom93 = sext i32 %75 to i64, !dbg !1376
  %arrayidx94 = getelementptr inbounds %struct.MVert, %struct.MVert* %74, i64 %idxprom93, !dbg !1376
  store %struct.MVert* %arrayidx94, %struct.MVert** %mv, align 8, !dbg !1375
  call void @llvm.dbg.declare(metadata float** %no, metadata !1378, metadata !DIExpression()), !dbg !1379
  %76 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !1380
  %77 = load i32, i32* %i, align 4, !dbg !1381
  %idxprom95 = sext i32 %77 to i64, !dbg !1380
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %76, i64 %idxprom95, !dbg !1380
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx96, i64 0, i64 0, !dbg !1380
  store float* %arraydecay97, float** %no, align 8, !dbg !1379
  %78 = load float*, float** %no, align 8, !dbg !1382
  %call98 = call float @normalize_v3(float* %78), !dbg !1382
  %cmp99 = fcmp oeq float %call98, 0.000000e+00, !dbg !1382
  br i1 %cmp99, label %if.then101, label %if.end105, !dbg !1384

if.then101:                                       ; preds = %for.body92
  %79 = load float*, float** %no, align 8, !dbg !1385
  %80 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !1387
  %co102 = getelementptr inbounds %struct.MVert, %struct.MVert* %80, i32 0, i32 0, !dbg !1388
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %co102, i64 0, i64 0, !dbg !1387
  %call104 = call float @normalize_v3_v3(float* %79, float* %arraydecay103), !dbg !1389
  br label %if.end105, !dbg !1390

if.end105:                                        ; preds = %if.then101, %for.body92
  %81 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !1391
  %no106 = getelementptr inbounds %struct.MVert, %struct.MVert* %81, i32 0, i32 1, !dbg !1392
  %arraydecay107 = getelementptr inbounds [3 x i16], [3 x i16]* %no106, i64 0, i64 0, !dbg !1391
  %82 = load float*, float** %no, align 8, !dbg !1393
  call void @normal_float_to_short_v3(i16* %arraydecay107, float* %82), !dbg !1394
  br label %for.inc108, !dbg !1395

for.inc108:                                       ; preds = %if.end105
  %83 = load i32, i32* %i, align 4, !dbg !1396
  %inc109 = add nsw i32 %83, 1, !dbg !1396
  store i32 %inc109, i32* %i, align 4, !dbg !1396
  br label %for.cond89, !dbg !1397, !llvm.loop !1398

for.end110:                                       ; preds = %for.cond89
  %84 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1400
  %85 = load [3 x float]*, [3 x float]** %tnorms, align 8, !dbg !1401
  %86 = bitcast [3 x float]* %85 to i8*, !dbg !1401
  call void %84(i8* %86), !dbg !1400
  %87 = load [3 x float]*, [3 x float]** %fnors, align 8, !dbg !1402
  %88 = load [3 x float]*, [3 x float]** %r_faceNors.addr, align 8, !dbg !1404
  %cmp111 = icmp ne [3 x float]* %87, %88, !dbg !1405
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !1406

if.then113:                                       ; preds = %for.end110
  %89 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1407
  %90 = load [3 x float]*, [3 x float]** %fnors, align 8, !dbg !1408
  %91 = bitcast [3 x float]* %90 to i8*, !dbg !1408
  call void %89(i8* %91), !dbg !1407
  br label %if.end114, !dbg !1407

if.end114:                                        ; preds = %if.then113, %for.end110
  ret void, !dbg !1409
}

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #2

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

declare dso_local void @accumulate_vertex_normals(float*, float*, float*, float*, float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_normals_loop_split(%struct.MVert* %mverts, i32 %UNUSED_numVerts, %struct.MEdge* %medges, i32 %numEdges, %struct.MLoop* %mloops, [3 x float]* %r_loopnors, i32 %numLoops, %struct.MPoly* %mpolys, [3 x float]* %polynors, i32 %numPolys, float %split_angle) #0 !dbg !1410 {
entry:
  %mverts.addr = alloca %struct.MVert*, align 8
  %UNUSED_numVerts.addr = alloca i32, align 4
  %medges.addr = alloca %struct.MEdge*, align 8
  %numEdges.addr = alloca i32, align 4
  %mloops.addr = alloca %struct.MLoop*, align 8
  %r_loopnors.addr = alloca [3 x float]*, align 8
  %numLoops.addr = alloca i32, align 4
  %mpolys.addr = alloca %struct.MPoly*, align 8
  %polynors.addr = alloca [3 x float]*, align 8
  %numPolys.addr = alloca i32, align 4
  %split_angle.addr = alloca float, align 4
  %edge_to_loops = alloca [2 x i32]*, align 8
  %loop_to_poly = alloca i32*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %mp_index = alloca i32, align 4
  %check_angle = alloca i8, align 1
  %_normal_stack = alloca %struct.LinkNode*, align 8
  %_normal_free = alloca %struct.LinkNode*, align 8
  %_normal_temp = alloca %struct.LinkNode*, align 8
  %_normal_type = alloca float*, align 8
  %ml_curr = alloca %struct.MLoop*, align 8
  %e2l = alloca i32*, align 8
  %ml_curr_index = alloca i32, align 4
  %ml_last_index = alloca i32, align 4
  %ml_curr96 = alloca %struct.MLoop*, align 8
  %ml_prev = alloca %struct.MLoop*, align 8
  %lnors = alloca [3 x float]*, align 8
  %ml_last_index97 = alloca i32, align 4
  %ml_curr_index102 = alloca i32, align 4
  %ml_prev_index = alloca i32, align 4
  %e2l_curr = alloca i32*, align 8
  %e2l_prev = alloca i32*, align 8
  %mv_pivot_index = alloca i32, align 4
  %mv_pivot = alloca %struct.MVert*, align 8
  %e2lfan_curr = alloca i32*, align 8
  %vec_curr = alloca [3 x float], align 4
  %vec_prev = alloca [3 x float], align 4
  %mlfan_curr = alloca %struct.MLoop*, align 8
  %mlfan_next = alloca %struct.MLoop*, align 8
  %mpfan_next = alloca %struct.MPoly*, align 8
  %lnor = alloca [3 x float], align 4
  %mlfan_curr_index = alloca i32, align 4
  %mlfan_vert_index = alloca i32, align 4
  %mpfan_curr_index = alloca i32, align 4
  %me_prev = alloca %struct.MEdge*, align 8
  %mv_2 = alloca %struct.MVert*, align 8
  %me_curr = alloca %struct.MEdge*, align 8
  %mv_2167 = alloca %struct.MVert*, align 8
  %fac = alloca float, align 4
  %nor = alloca float*, align 8
  store %struct.MVert* %mverts, %struct.MVert** %mverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts.addr, metadata !1415, metadata !DIExpression()), !dbg !1416
  store i32 %UNUSED_numVerts, i32* %UNUSED_numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_numVerts.addr, metadata !1417, metadata !DIExpression()), !dbg !1418
  store %struct.MEdge* %medges, %struct.MEdge** %medges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medges.addr, metadata !1419, metadata !DIExpression()), !dbg !1420
  store i32 %numEdges, i32* %numEdges.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numEdges.addr, metadata !1421, metadata !DIExpression()), !dbg !1422
  store %struct.MLoop* %mloops, %struct.MLoop** %mloops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloops.addr, metadata !1423, metadata !DIExpression()), !dbg !1424
  store [3 x float]* %r_loopnors, [3 x float]** %r_loopnors.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_loopnors.addr, metadata !1425, metadata !DIExpression()), !dbg !1426
  store i32 %numLoops, i32* %numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLoops.addr, metadata !1427, metadata !DIExpression()), !dbg !1428
  store %struct.MPoly* %mpolys, %struct.MPoly** %mpolys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpolys.addr, metadata !1429, metadata !DIExpression()), !dbg !1430
  store [3 x float]* %polynors, [3 x float]** %polynors.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %polynors.addr, metadata !1431, metadata !DIExpression()), !dbg !1432
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !1433, metadata !DIExpression()), !dbg !1434
  store float %split_angle, float* %split_angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %split_angle.addr, metadata !1435, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.declare(metadata [2 x i32]** %edge_to_loops, metadata !1437, metadata !DIExpression()), !dbg !1440
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1441
  %1 = load i32, i32* %numEdges.addr, align 4, !dbg !1442
  %conv = sext i32 %1 to i64, !dbg !1443
  %mul = mul i64 8, %conv, !dbg !1444
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.BKE_mesh_normals_loop_split, i64 0, i64 0)), !dbg !1441
  %2 = bitcast i8* %call to [2 x i32]*, !dbg !1441
  store [2 x i32]* %2, [2 x i32]** %edge_to_loops, align 8, !dbg !1440
  call void @llvm.dbg.declare(metadata i32** %loop_to_poly, metadata !1445, metadata !DIExpression()), !dbg !1447
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !1448
  %4 = load i32, i32* %numLoops.addr, align 4, !dbg !1449
  %conv1 = sext i32 %4 to i64, !dbg !1450
  %mul2 = mul i64 4, %conv1, !dbg !1451
  %call3 = call i8* %3(i64 %mul2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.BKE_mesh_normals_loop_split, i64 0, i64 0)), !dbg !1448
  %5 = bitcast i8* %call3 to i32*, !dbg !1448
  store i32* %5, i32** %loop_to_poly, align 8, !dbg !1447
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !1452, metadata !DIExpression()), !dbg !1453
  call void @llvm.dbg.declare(metadata i32* %mp_index, metadata !1454, metadata !DIExpression()), !dbg !1455
  call void @llvm.dbg.declare(metadata i8* %check_angle, metadata !1456, metadata !DIExpression()), !dbg !1457
  %6 = load float, float* %split_angle.addr, align 4, !dbg !1458
  %cmp = fcmp olt float %6, 0x400921FB60000000, !dbg !1459
  %conv4 = zext i1 %cmp to i32, !dbg !1459
  %conv5 = trunc i32 %conv4 to i8, !dbg !1460
  store i8 %conv5, i8* %check_angle, align 1, !dbg !1457
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %_normal_stack, metadata !1461, metadata !DIExpression()), !dbg !1470
  store %struct.LinkNode* null, %struct.LinkNode** %_normal_stack, align 8, !dbg !1470
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %_normal_free, metadata !1471, metadata !DIExpression()), !dbg !1470
  store %struct.LinkNode* null, %struct.LinkNode** %_normal_free, align 8, !dbg !1470
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %_normal_temp, metadata !1472, metadata !DIExpression()), !dbg !1470
  store %struct.LinkNode* null, %struct.LinkNode** %_normal_temp, align 8, !dbg !1470
  call void @llvm.dbg.declare(metadata float** %_normal_type, metadata !1473, metadata !DIExpression()), !dbg !1470
  %7 = load i8, i8* %check_angle, align 1, !dbg !1474
  %tobool = icmp ne i8 %7, 0, !dbg !1474
  br i1 %tobool, label %if.then, label %if.end, !dbg !1476

if.then:                                          ; preds = %entry
  %8 = load float, float* %split_angle.addr, align 4, !dbg !1477
  %call6 = call float @cosf(float %8) #5, !dbg !1479
  store float %call6, float* %split_angle.addr, align 4, !dbg !1480
  br label %if.end, !dbg !1481

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !1482
  store %struct.MPoly* %9, %struct.MPoly** %mp, align 8, !dbg !1484
  store i32 0, i32* %mp_index, align 4, !dbg !1485
  br label %for.cond, !dbg !1486

for.cond:                                         ; preds = %for.inc88, %if.end
  %10 = load i32, i32* %mp_index, align 4, !dbg !1487
  %11 = load i32, i32* %numPolys.addr, align 4, !dbg !1489
  %cmp7 = icmp slt i32 %10, %11, !dbg !1490
  br i1 %cmp7, label %for.body, label %for.end91, !dbg !1491

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml_curr, metadata !1492, metadata !DIExpression()), !dbg !1494
  call void @llvm.dbg.declare(metadata i32** %e2l, metadata !1495, metadata !DIExpression()), !dbg !1496
  call void @llvm.dbg.declare(metadata i32* %ml_curr_index, metadata !1497, metadata !DIExpression()), !dbg !1498
  %12 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !1499
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %12, i32 0, i32 0, !dbg !1500
  %13 = load i32, i32* %loopstart, align 4, !dbg !1500
  store i32 %13, i32* %ml_curr_index, align 4, !dbg !1498
  call void @llvm.dbg.declare(metadata i32* %ml_last_index, metadata !1501, metadata !DIExpression()), !dbg !1502
  %14 = load i32, i32* %ml_curr_index, align 4, !dbg !1503
  %15 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !1504
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %15, i32 0, i32 1, !dbg !1505
  %16 = load i32, i32* %totloop, align 4, !dbg !1505
  %add = add nsw i32 %14, %16, !dbg !1506
  %sub = sub nsw i32 %add, 1, !dbg !1507
  store i32 %sub, i32* %ml_last_index, align 4, !dbg !1502
  %17 = load %struct.MLoop*, %struct.MLoop** %mloops.addr, align 8, !dbg !1508
  %18 = load i32, i32* %ml_curr_index, align 4, !dbg !1509
  %idxprom = sext i32 %18 to i64, !dbg !1508
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %17, i64 %idxprom, !dbg !1508
  store %struct.MLoop* %arrayidx, %struct.MLoop** %ml_curr, align 8, !dbg !1510
  br label %for.cond9, !dbg !1511

for.cond9:                                        ; preds = %for.inc, %for.body
  %19 = load i32, i32* %ml_curr_index, align 4, !dbg !1512
  %20 = load i32, i32* %ml_last_index, align 4, !dbg !1515
  %cmp10 = icmp sle i32 %19, %20, !dbg !1516
  br i1 %cmp10, label %for.body12, label %for.end, !dbg !1517

for.body12:                                       ; preds = %for.cond9
  %21 = load [2 x i32]*, [2 x i32]** %edge_to_loops, align 8, !dbg !1518
  %22 = load %struct.MLoop*, %struct.MLoop** %ml_curr, align 8, !dbg !1520
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %22, i32 0, i32 1, !dbg !1521
  %23 = load i32, i32* %e, align 4, !dbg !1521
  %idxprom13 = zext i32 %23 to i64, !dbg !1518
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %21, i64 %idxprom13, !dbg !1518
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx14, i64 0, i64 0, !dbg !1518
  store i32* %arraydecay, i32** %e2l, align 8, !dbg !1522
  %24 = load i32, i32* %mp_index, align 4, !dbg !1523
  %25 = load i32*, i32** %loop_to_poly, align 8, !dbg !1524
  %26 = load i32, i32* %ml_curr_index, align 4, !dbg !1525
  %idxprom15 = sext i32 %26 to i64, !dbg !1524
  %arrayidx16 = getelementptr inbounds i32, i32* %25, i64 %idxprom15, !dbg !1524
  store i32 %24, i32* %arrayidx16, align 4, !dbg !1526
  %27 = load [3 x float]*, [3 x float]** %r_loopnors.addr, align 8, !dbg !1527
  %28 = load i32, i32* %ml_curr_index, align 4, !dbg !1528
  %idxprom17 = sext i32 %28 to i64, !dbg !1527
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 %idxprom17, !dbg !1527
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !1527
  %29 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1529
  %30 = load %struct.MLoop*, %struct.MLoop** %ml_curr, align 8, !dbg !1530
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %30, i32 0, i32 0, !dbg !1531
  %31 = load i32, i32* %v, align 4, !dbg !1531
  %idxprom20 = zext i32 %31 to i64, !dbg !1529
  %arrayidx21 = getelementptr inbounds %struct.MVert, %struct.MVert* %29, i64 %idxprom20, !dbg !1529
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx21, i32 0, i32 1, !dbg !1532
  %arraydecay22 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !1529
  call void @normal_short_to_float_v3(float* %arraydecay19, i16* %arraydecay22), !dbg !1533
  %32 = load i32*, i32** %e2l, align 8, !dbg !1534
  %arrayidx23 = getelementptr inbounds i32, i32* %32, i64 0, !dbg !1534
  %33 = load i32, i32* %arrayidx23, align 4, !dbg !1534
  %34 = load i32*, i32** %e2l, align 8, !dbg !1536
  %arrayidx24 = getelementptr inbounds i32, i32* %34, i64 1, !dbg !1536
  %35 = load i32, i32* %arrayidx24, align 4, !dbg !1536
  %or = or i32 %33, %35, !dbg !1537
  %cmp25 = icmp eq i32 %or, 0, !dbg !1538
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !1539

if.then27:                                        ; preds = %for.body12
  %36 = load i32, i32* %ml_curr_index, align 4, !dbg !1540
  %37 = load i32*, i32** %e2l, align 8, !dbg !1542
  %arrayidx28 = getelementptr inbounds i32, i32* %37, i64 0, !dbg !1542
  store i32 %36, i32* %arrayidx28, align 4, !dbg !1543
  %38 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !1544
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %38, i32 0, i32 3, !dbg !1545
  %39 = load i8, i8* %flag, align 2, !dbg !1545
  %conv29 = zext i8 %39 to i32, !dbg !1544
  %and = and i32 %conv29, 1, !dbg !1546
  %tobool30 = icmp ne i32 %and, 0, !dbg !1547
  %40 = zext i1 %tobool30 to i64, !dbg !1547
  %cond = select i1 %tobool30, i32 -2147483648, i32 -1, !dbg !1547
  %41 = load i32*, i32** %e2l, align 8, !dbg !1548
  %arrayidx31 = getelementptr inbounds i32, i32* %41, i64 1, !dbg !1548
  store i32 %cond, i32* %arrayidx31, align 4, !dbg !1549
  br label %if.end87, !dbg !1550

if.else:                                          ; preds = %for.body12
  %42 = load i32*, i32** %e2l, align 8, !dbg !1551
  %arrayidx32 = getelementptr inbounds i32, i32* %42, i64 1, !dbg !1551
  %43 = load i32, i32* %arrayidx32, align 4, !dbg !1551
  %cmp33 = icmp eq i32 %43, -2147483648, !dbg !1553
  br i1 %cmp33, label %if.then35, label %if.else75, !dbg !1554

if.then35:                                        ; preds = %if.else
  %44 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !1555
  %flag36 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %44, i32 0, i32 3, !dbg !1558
  %45 = load i8, i8* %flag36, align 2, !dbg !1558
  %conv37 = zext i8 %45 to i32, !dbg !1555
  %and38 = and i32 %conv37, 1, !dbg !1559
  %tobool39 = icmp ne i32 %and38, 0, !dbg !1559
  br i1 %tobool39, label %lor.lhs.false, label %if.then70, !dbg !1560

lor.lhs.false:                                    ; preds = %if.then35
  %46 = load %struct.MEdge*, %struct.MEdge** %medges.addr, align 8, !dbg !1561
  %47 = load %struct.MLoop*, %struct.MLoop** %ml_curr, align 8, !dbg !1562
  %e40 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %47, i32 0, i32 1, !dbg !1563
  %48 = load i32, i32* %e40, align 4, !dbg !1563
  %idxprom41 = zext i32 %48 to i64, !dbg !1561
  %arrayidx42 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %46, i64 %idxprom41, !dbg !1561
  %flag43 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx42, i32 0, i32 4, !dbg !1564
  %49 = load i16, i16* %flag43, align 2, !dbg !1564
  %conv44 = sext i16 %49 to i32, !dbg !1561
  %and45 = and i32 %conv44, 512, !dbg !1565
  %tobool46 = icmp ne i32 %and45, 0, !dbg !1565
  br i1 %tobool46, label %if.then70, label %lor.lhs.false47, !dbg !1566

lor.lhs.false47:                                  ; preds = %lor.lhs.false
  %50 = load %struct.MLoop*, %struct.MLoop** %ml_curr, align 8, !dbg !1567
  %v48 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %50, i32 0, i32 0, !dbg !1568
  %51 = load i32, i32* %v48, align 4, !dbg !1568
  %52 = load %struct.MLoop*, %struct.MLoop** %mloops.addr, align 8, !dbg !1569
  %53 = load i32*, i32** %e2l, align 8, !dbg !1570
  %arrayidx49 = getelementptr inbounds i32, i32* %53, i64 0, !dbg !1570
  %54 = load i32, i32* %arrayidx49, align 4, !dbg !1570
  %idxprom50 = sext i32 %54 to i64, !dbg !1569
  %arrayidx51 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %52, i64 %idxprom50, !dbg !1569
  %v52 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx51, i32 0, i32 0, !dbg !1571
  %55 = load i32, i32* %v52, align 4, !dbg !1571
  %cmp53 = icmp eq i32 %51, %55, !dbg !1572
  br i1 %cmp53, label %if.then70, label %lor.lhs.false55, !dbg !1573

lor.lhs.false55:                                  ; preds = %lor.lhs.false47
  %56 = load i8, i8* %check_angle, align 1, !dbg !1574
  %conv56 = zext i8 %56 to i32, !dbg !1574
  %tobool57 = icmp ne i32 %conv56, 0, !dbg !1574
  br i1 %tobool57, label %land.lhs.true, label %if.else72, !dbg !1575

land.lhs.true:                                    ; preds = %lor.lhs.false55
  %57 = load [3 x float]*, [3 x float]** %polynors.addr, align 8, !dbg !1576
  %58 = load i32*, i32** %loop_to_poly, align 8, !dbg !1577
  %59 = load i32*, i32** %e2l, align 8, !dbg !1578
  %arrayidx58 = getelementptr inbounds i32, i32* %59, i64 0, !dbg !1578
  %60 = load i32, i32* %arrayidx58, align 4, !dbg !1578
  %idxprom59 = sext i32 %60 to i64, !dbg !1577
  %arrayidx60 = getelementptr inbounds i32, i32* %58, i64 %idxprom59, !dbg !1577
  %61 = load i32, i32* %arrayidx60, align 4, !dbg !1577
  %idxprom61 = sext i32 %61 to i64, !dbg !1576
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %57, i64 %idxprom61, !dbg !1576
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx62, i64 0, i64 0, !dbg !1576
  %62 = load [3 x float]*, [3 x float]** %polynors.addr, align 8, !dbg !1579
  %63 = load i32, i32* %mp_index, align 4, !dbg !1580
  %idxprom64 = sext i32 %63 to i64, !dbg !1579
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %62, i64 %idxprom64, !dbg !1579
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 0, !dbg !1579
  %call67 = call float @dot_v3v3(float* %arraydecay63, float* %arraydecay66), !dbg !1581
  %64 = load float, float* %split_angle.addr, align 4, !dbg !1582
  %cmp68 = fcmp olt float %call67, %64, !dbg !1583
  br i1 %cmp68, label %if.then70, label %if.else72, !dbg !1584

if.then70:                                        ; preds = %land.lhs.true, %lor.lhs.false47, %lor.lhs.false, %if.then35
  %65 = load i32*, i32** %e2l, align 8, !dbg !1585
  %arrayidx71 = getelementptr inbounds i32, i32* %65, i64 1, !dbg !1585
  store i32 -1, i32* %arrayidx71, align 4, !dbg !1587
  br label %if.end74, !dbg !1588

if.else72:                                        ; preds = %land.lhs.true, %lor.lhs.false55
  %66 = load i32, i32* %ml_curr_index, align 4, !dbg !1589
  %67 = load i32*, i32** %e2l, align 8, !dbg !1591
  %arrayidx73 = getelementptr inbounds i32, i32* %67, i64 1, !dbg !1591
  store i32 %66, i32* %arrayidx73, align 4, !dbg !1592
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then70
  br label %if.end86, !dbg !1593

if.else75:                                        ; preds = %if.else
  %68 = load i32*, i32** %e2l, align 8, !dbg !1594
  %arrayidx76 = getelementptr inbounds i32, i32* %68, i64 1, !dbg !1594
  %69 = load i32, i32* %arrayidx76, align 4, !dbg !1594
  %cmp77 = icmp eq i32 %69, -2147483648, !dbg !1594
  br i1 %cmp77, label %if.end85, label %lor.lhs.false79, !dbg !1594

lor.lhs.false79:                                  ; preds = %if.else75
  %70 = load i32*, i32** %e2l, align 8, !dbg !1594
  %arrayidx80 = getelementptr inbounds i32, i32* %70, i64 1, !dbg !1594
  %71 = load i32, i32* %arrayidx80, align 4, !dbg !1594
  %cmp81 = icmp eq i32 %71, -1, !dbg !1594
  br i1 %cmp81, label %if.end85, label %if.then83, !dbg !1596

if.then83:                                        ; preds = %lor.lhs.false79
  %72 = load i32*, i32** %e2l, align 8, !dbg !1597
  %arrayidx84 = getelementptr inbounds i32, i32* %72, i64 1, !dbg !1597
  store i32 -1, i32* %arrayidx84, align 4, !dbg !1599
  br label %if.end85, !dbg !1600

if.end85:                                         ; preds = %if.then83, %lor.lhs.false79, %if.else75
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end74
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then27
  br label %for.inc, !dbg !1601

for.inc:                                          ; preds = %if.end87
  %73 = load %struct.MLoop*, %struct.MLoop** %ml_curr, align 8, !dbg !1602
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %73, i32 1, !dbg !1602
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml_curr, align 8, !dbg !1602
  %74 = load i32, i32* %ml_curr_index, align 4, !dbg !1603
  %inc = add nsw i32 %74, 1, !dbg !1603
  store i32 %inc, i32* %ml_curr_index, align 4, !dbg !1603
  br label %for.cond9, !dbg !1604, !llvm.loop !1605

for.end:                                          ; preds = %for.cond9
  br label %for.inc88, !dbg !1607

for.inc88:                                        ; preds = %for.end
  %75 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !1608
  %incdec.ptr89 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %75, i32 1, !dbg !1608
  store %struct.MPoly* %incdec.ptr89, %struct.MPoly** %mp, align 8, !dbg !1608
  %76 = load i32, i32* %mp_index, align 4, !dbg !1609
  %inc90 = add nsw i32 %76, 1, !dbg !1609
  store i32 %inc90, i32* %mp_index, align 4, !dbg !1609
  br label %for.cond, !dbg !1610, !llvm.loop !1611

for.end91:                                        ; preds = %for.cond
  %77 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !1613
  store %struct.MPoly* %77, %struct.MPoly** %mp, align 8, !dbg !1615
  store i32 0, i32* %mp_index, align 4, !dbg !1616
  br label %for.cond92, !dbg !1617

for.cond92:                                       ; preds = %for.inc312, %for.end91
  %78 = load i32, i32* %mp_index, align 4, !dbg !1618
  %79 = load i32, i32* %numPolys.addr, align 4, !dbg !1620
  %cmp93 = icmp slt i32 %78, %79, !dbg !1621
  br i1 %cmp93, label %for.body95, label %for.end315, !dbg !1622

for.body95:                                       ; preds = %for.cond92
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml_curr96, metadata !1623, metadata !DIExpression()), !dbg !1625
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml_prev, metadata !1626, metadata !DIExpression()), !dbg !1627
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !1628, metadata !DIExpression()), !dbg !1629
  call void @llvm.dbg.declare(metadata i32* %ml_last_index97, metadata !1630, metadata !DIExpression()), !dbg !1631
  %80 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !1632
  %loopstart98 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %80, i32 0, i32 0, !dbg !1633
  %81 = load i32, i32* %loopstart98, align 4, !dbg !1633
  %82 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !1634
  %totloop99 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %82, i32 0, i32 1, !dbg !1635
  %83 = load i32, i32* %totloop99, align 4, !dbg !1635
  %add100 = add nsw i32 %81, %83, !dbg !1636
  %sub101 = sub nsw i32 %add100, 1, !dbg !1637
  store i32 %sub101, i32* %ml_last_index97, align 4, !dbg !1631
  call void @llvm.dbg.declare(metadata i32* %ml_curr_index102, metadata !1638, metadata !DIExpression()), !dbg !1639
  %84 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !1640
  %loopstart103 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %84, i32 0, i32 0, !dbg !1641
  %85 = load i32, i32* %loopstart103, align 4, !dbg !1641
  store i32 %85, i32* %ml_curr_index102, align 4, !dbg !1639
  call void @llvm.dbg.declare(metadata i32* %ml_prev_index, metadata !1642, metadata !DIExpression()), !dbg !1643
  %86 = load i32, i32* %ml_last_index97, align 4, !dbg !1644
  store i32 %86, i32* %ml_prev_index, align 4, !dbg !1643
  %87 = load %struct.MLoop*, %struct.MLoop** %mloops.addr, align 8, !dbg !1645
  %88 = load i32, i32* %ml_curr_index102, align 4, !dbg !1646
  %idxprom104 = sext i32 %88 to i64, !dbg !1645
  %arrayidx105 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %87, i64 %idxprom104, !dbg !1645
  store %struct.MLoop* %arrayidx105, %struct.MLoop** %ml_curr96, align 8, !dbg !1647
  %89 = load %struct.MLoop*, %struct.MLoop** %mloops.addr, align 8, !dbg !1648
  %90 = load i32, i32* %ml_prev_index, align 4, !dbg !1649
  %idxprom106 = sext i32 %90 to i64, !dbg !1648
  %arrayidx107 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %89, i64 %idxprom106, !dbg !1648
  store %struct.MLoop* %arrayidx107, %struct.MLoop** %ml_prev, align 8, !dbg !1650
  %91 = load [3 x float]*, [3 x float]** %r_loopnors.addr, align 8, !dbg !1651
  %92 = load i32, i32* %ml_curr_index102, align 4, !dbg !1652
  %idxprom108 = sext i32 %92 to i64, !dbg !1651
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %91, i64 %idxprom108, !dbg !1651
  store [3 x float]* %arrayidx109, [3 x float]** %lnors, align 8, !dbg !1653
  br label %for.cond110, !dbg !1654

for.cond110:                                      ; preds = %for.inc307, %for.body95
  %93 = load i32, i32* %ml_curr_index102, align 4, !dbg !1655
  %94 = load i32, i32* %ml_last_index97, align 4, !dbg !1658
  %cmp111 = icmp sle i32 %93, %94, !dbg !1659
  br i1 %cmp111, label %for.body113, label %for.end311, !dbg !1660

for.body113:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata i32** %e2l_curr, metadata !1661, metadata !DIExpression()), !dbg !1663
  %95 = load [2 x i32]*, [2 x i32]** %edge_to_loops, align 8, !dbg !1664
  %96 = load %struct.MLoop*, %struct.MLoop** %ml_curr96, align 8, !dbg !1665
  %e114 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %96, i32 0, i32 1, !dbg !1666
  %97 = load i32, i32* %e114, align 4, !dbg !1666
  %idxprom115 = zext i32 %97 to i64, !dbg !1664
  %arrayidx116 = getelementptr inbounds [2 x i32], [2 x i32]* %95, i64 %idxprom115, !dbg !1664
  %arraydecay117 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx116, i64 0, i64 0, !dbg !1664
  store i32* %arraydecay117, i32** %e2l_curr, align 8, !dbg !1663
  call void @llvm.dbg.declare(metadata i32** %e2l_prev, metadata !1667, metadata !DIExpression()), !dbg !1668
  %98 = load [2 x i32]*, [2 x i32]** %edge_to_loops, align 8, !dbg !1669
  %99 = load %struct.MLoop*, %struct.MLoop** %ml_prev, align 8, !dbg !1670
  %e118 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %99, i32 0, i32 1, !dbg !1671
  %100 = load i32, i32* %e118, align 4, !dbg !1671
  %idxprom119 = zext i32 %100 to i64, !dbg !1669
  %arrayidx120 = getelementptr inbounds [2 x i32], [2 x i32]* %98, i64 %idxprom119, !dbg !1669
  %arraydecay121 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx120, i64 0, i64 0, !dbg !1669
  store i32* %arraydecay121, i32** %e2l_prev, align 8, !dbg !1668
  %101 = load i32*, i32** %e2l_curr, align 8, !dbg !1672
  %arrayidx122 = getelementptr inbounds i32, i32* %101, i64 1, !dbg !1672
  %102 = load i32, i32* %arrayidx122, align 4, !dbg !1672
  %cmp123 = icmp eq i32 %102, -2147483648, !dbg !1672
  br i1 %cmp123, label %if.else130, label %lor.lhs.false125, !dbg !1672

lor.lhs.false125:                                 ; preds = %for.body113
  %103 = load i32*, i32** %e2l_curr, align 8, !dbg !1672
  %arrayidx126 = getelementptr inbounds i32, i32* %103, i64 1, !dbg !1672
  %104 = load i32, i32* %arrayidx126, align 4, !dbg !1672
  %cmp127 = icmp eq i32 %104, -1, !dbg !1672
  br i1 %cmp127, label %if.else130, label %if.then129, !dbg !1674

if.then129:                                       ; preds = %lor.lhs.false125
  br label %if.end306, !dbg !1675

if.else130:                                       ; preds = %lor.lhs.false125, %for.body113
  %105 = load i32*, i32** %e2l_prev, align 8, !dbg !1677
  %arrayidx131 = getelementptr inbounds i32, i32* %105, i64 1, !dbg !1677
  %106 = load i32, i32* %arrayidx131, align 4, !dbg !1677
  %cmp132 = icmp eq i32 %106, -2147483648, !dbg !1677
  br i1 %cmp132, label %if.then138, label %lor.lhs.false134, !dbg !1677

lor.lhs.false134:                                 ; preds = %if.else130
  %107 = load i32*, i32** %e2l_prev, align 8, !dbg !1677
  %arrayidx135 = getelementptr inbounds i32, i32* %107, i64 1, !dbg !1677
  %108 = load i32, i32* %arrayidx135, align 4, !dbg !1677
  %cmp136 = icmp eq i32 %108, -1, !dbg !1677
  br i1 %cmp136, label %if.then138, label %if.else143, !dbg !1679

if.then138:                                       ; preds = %lor.lhs.false134, %if.else130
  %109 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !1680
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %109, i64 0, i64 0, !dbg !1682
  %110 = load [3 x float]*, [3 x float]** %polynors.addr, align 8, !dbg !1683
  %111 = load i32, i32* %mp_index, align 4, !dbg !1684
  %idxprom140 = sext i32 %111 to i64, !dbg !1683
  %arrayidx141 = getelementptr inbounds [3 x float], [3 x float]* %110, i64 %idxprom140, !dbg !1683
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx141, i64 0, i64 0, !dbg !1683
  call void @copy_v3_v3(float* %arraydecay139, float* %arraydecay142), !dbg !1685
  br label %if.end305, !dbg !1686

if.else143:                                       ; preds = %lor.lhs.false134
  call void @llvm.dbg.declare(metadata i32* %mv_pivot_index, metadata !1687, metadata !DIExpression()), !dbg !1690
  %112 = load %struct.MLoop*, %struct.MLoop** %ml_curr96, align 8, !dbg !1691
  %v144 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %112, i32 0, i32 0, !dbg !1692
  %113 = load i32, i32* %v144, align 4, !dbg !1692
  store i32 %113, i32* %mv_pivot_index, align 4, !dbg !1690
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv_pivot, metadata !1693, metadata !DIExpression()), !dbg !1696
  %114 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1697
  %115 = load i32, i32* %mv_pivot_index, align 4, !dbg !1698
  %idxprom145 = zext i32 %115 to i64, !dbg !1697
  %arrayidx146 = getelementptr inbounds %struct.MVert, %struct.MVert* %114, i64 %idxprom145, !dbg !1697
  store %struct.MVert* %arrayidx146, %struct.MVert** %mv_pivot, align 8, !dbg !1696
  call void @llvm.dbg.declare(metadata i32** %e2lfan_curr, metadata !1699, metadata !DIExpression()), !dbg !1700
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_curr, metadata !1701, metadata !DIExpression()), !dbg !1702
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_prev, metadata !1703, metadata !DIExpression()), !dbg !1704
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mlfan_curr, metadata !1705, metadata !DIExpression()), !dbg !1706
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mlfan_next, metadata !1707, metadata !DIExpression()), !dbg !1708
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpfan_next, metadata !1709, metadata !DIExpression()), !dbg !1710
  call void @llvm.dbg.declare(metadata [3 x float]* %lnor, metadata !1711, metadata !DIExpression()), !dbg !1712
  %116 = bitcast [3 x float]* %lnor to i8*, !dbg !1712
  call void @llvm.memset.p0i8.i64(i8* align 4 %116, i8 0, i64 12, i1 false), !dbg !1712
  call void @llvm.dbg.declare(metadata i32* %mlfan_curr_index, metadata !1713, metadata !DIExpression()), !dbg !1714
  call void @llvm.dbg.declare(metadata i32* %mlfan_vert_index, metadata !1715, metadata !DIExpression()), !dbg !1716
  call void @llvm.dbg.declare(metadata i32* %mpfan_curr_index, metadata !1717, metadata !DIExpression()), !dbg !1718
  %117 = load i32*, i32** %e2l_prev, align 8, !dbg !1719
  store i32* %117, i32** %e2lfan_curr, align 8, !dbg !1720
  %118 = load %struct.MLoop*, %struct.MLoop** %ml_prev, align 8, !dbg !1721
  store %struct.MLoop* %118, %struct.MLoop** %mlfan_curr, align 8, !dbg !1722
  %119 = load i32, i32* %ml_prev_index, align 4, !dbg !1723
  store i32 %119, i32* %mlfan_curr_index, align 4, !dbg !1724
  %120 = load i32, i32* %ml_curr_index102, align 4, !dbg !1725
  store i32 %120, i32* %mlfan_vert_index, align 4, !dbg !1726
  %121 = load i32, i32* %mp_index, align 4, !dbg !1727
  store i32 %121, i32* %mpfan_curr_index, align 4, !dbg !1728
  call void @llvm.dbg.declare(metadata %struct.MEdge** %me_prev, metadata !1729, metadata !DIExpression()), !dbg !1733
  %122 = load %struct.MEdge*, %struct.MEdge** %medges.addr, align 8, !dbg !1734
  %123 = load %struct.MLoop*, %struct.MLoop** %ml_curr96, align 8, !dbg !1735
  %e147 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %123, i32 0, i32 1, !dbg !1736
  %124 = load i32, i32* %e147, align 4, !dbg !1736
  %idxprom148 = zext i32 %124 to i64, !dbg !1734
  %arrayidx149 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %122, i64 %idxprom148, !dbg !1734
  store %struct.MEdge* %arrayidx149, %struct.MEdge** %me_prev, align 8, !dbg !1733
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv_2, metadata !1737, metadata !DIExpression()), !dbg !1738
  %125 = load %struct.MEdge*, %struct.MEdge** %me_prev, align 8, !dbg !1739
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %125, i32 0, i32 0, !dbg !1740
  %126 = load i32, i32* %v1, align 4, !dbg !1740
  %127 = load i32, i32* %mv_pivot_index, align 4, !dbg !1741
  %cmp150 = icmp eq i32 %126, %127, !dbg !1742
  br i1 %cmp150, label %cond.true, label %cond.false, !dbg !1743

cond.true:                                        ; preds = %if.else143
  %128 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1744
  %129 = load %struct.MEdge*, %struct.MEdge** %me_prev, align 8, !dbg !1745
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %129, i32 0, i32 1, !dbg !1746
  %130 = load i32, i32* %v2, align 4, !dbg !1746
  %idxprom152 = zext i32 %130 to i64, !dbg !1744
  %arrayidx153 = getelementptr inbounds %struct.MVert, %struct.MVert* %128, i64 %idxprom152, !dbg !1744
  br label %cond.end, !dbg !1743

cond.false:                                       ; preds = %if.else143
  %131 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1747
  %132 = load %struct.MEdge*, %struct.MEdge** %me_prev, align 8, !dbg !1748
  %v1154 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %132, i32 0, i32 0, !dbg !1749
  %133 = load i32, i32* %v1154, align 4, !dbg !1749
  %idxprom155 = zext i32 %133 to i64, !dbg !1747
  %arrayidx156 = getelementptr inbounds %struct.MVert, %struct.MVert* %131, i64 %idxprom155, !dbg !1747
  br label %cond.end, !dbg !1743

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond157 = phi %struct.MVert* [ %arrayidx153, %cond.true ], [ %arrayidx156, %cond.false ], !dbg !1743
  store %struct.MVert* %cond157, %struct.MVert** %mv_2, align 8, !dbg !1738
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %vec_prev, i64 0, i64 0, !dbg !1750
  %134 = load %struct.MVert*, %struct.MVert** %mv_2, align 8, !dbg !1751
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %134, i32 0, i32 0, !dbg !1752
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !1751
  %135 = load %struct.MVert*, %struct.MVert** %mv_pivot, align 8, !dbg !1753
  %co160 = getelementptr inbounds %struct.MVert, %struct.MVert* %135, i32 0, i32 0, !dbg !1754
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %co160, i64 0, i64 0, !dbg !1753
  call void @sub_v3_v3v3(float* %arraydecay158, float* %arraydecay159, float* %arraydecay161), !dbg !1755
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %vec_prev, i64 0, i64 0, !dbg !1756
  %call163 = call float @normalize_v3(float* %arraydecay162), !dbg !1757
  br label %while.body, !dbg !1758

while.body:                                       ; preds = %cond.end, %if.end267
  call void @llvm.dbg.declare(metadata %struct.MEdge** %me_curr, metadata !1759, metadata !DIExpression()), !dbg !1762
  %136 = load %struct.MEdge*, %struct.MEdge** %medges.addr, align 8, !dbg !1763
  %137 = load %struct.MLoop*, %struct.MLoop** %mlfan_curr, align 8, !dbg !1764
  %e164 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %137, i32 0, i32 1, !dbg !1765
  %138 = load i32, i32* %e164, align 4, !dbg !1765
  %idxprom165 = zext i32 %138 to i64, !dbg !1763
  %arrayidx166 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %136, i64 %idxprom165, !dbg !1763
  store %struct.MEdge* %arrayidx166, %struct.MEdge** %me_curr, align 8, !dbg !1762
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv_2167, metadata !1766, metadata !DIExpression()), !dbg !1767
  %139 = load %struct.MEdge*, %struct.MEdge** %me_curr, align 8, !dbg !1768
  %v1168 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %139, i32 0, i32 0, !dbg !1769
  %140 = load i32, i32* %v1168, align 4, !dbg !1769
  %141 = load i32, i32* %mv_pivot_index, align 4, !dbg !1770
  %cmp169 = icmp eq i32 %140, %141, !dbg !1771
  br i1 %cmp169, label %cond.true171, label %cond.false175, !dbg !1772

cond.true171:                                     ; preds = %while.body
  %142 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1773
  %143 = load %struct.MEdge*, %struct.MEdge** %me_curr, align 8, !dbg !1774
  %v2172 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %143, i32 0, i32 1, !dbg !1775
  %144 = load i32, i32* %v2172, align 4, !dbg !1775
  %idxprom173 = zext i32 %144 to i64, !dbg !1773
  %arrayidx174 = getelementptr inbounds %struct.MVert, %struct.MVert* %142, i64 %idxprom173, !dbg !1773
  br label %cond.end179, !dbg !1772

cond.false175:                                    ; preds = %while.body
  %145 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !1776
  %146 = load %struct.MEdge*, %struct.MEdge** %me_curr, align 8, !dbg !1777
  %v1176 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %146, i32 0, i32 0, !dbg !1778
  %147 = load i32, i32* %v1176, align 4, !dbg !1778
  %idxprom177 = zext i32 %147 to i64, !dbg !1776
  %arrayidx178 = getelementptr inbounds %struct.MVert, %struct.MVert* %145, i64 %idxprom177, !dbg !1776
  br label %cond.end179, !dbg !1772

cond.end179:                                      ; preds = %cond.false175, %cond.true171
  %cond180 = phi %struct.MVert* [ %arrayidx174, %cond.true171 ], [ %arrayidx178, %cond.false175 ], !dbg !1772
  store %struct.MVert* %cond180, %struct.MVert** %mv_2167, align 8, !dbg !1767
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %vec_curr, i64 0, i64 0, !dbg !1779
  %148 = load %struct.MVert*, %struct.MVert** %mv_2167, align 8, !dbg !1780
  %co182 = getelementptr inbounds %struct.MVert, %struct.MVert* %148, i32 0, i32 0, !dbg !1781
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %co182, i64 0, i64 0, !dbg !1780
  %149 = load %struct.MVert*, %struct.MVert** %mv_pivot, align 8, !dbg !1782
  %co184 = getelementptr inbounds %struct.MVert, %struct.MVert* %149, i32 0, i32 0, !dbg !1783
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %co184, i64 0, i64 0, !dbg !1782
  call void @sub_v3_v3v3(float* %arraydecay181, float* %arraydecay183, float* %arraydecay185), !dbg !1784
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %vec_curr, i64 0, i64 0, !dbg !1785
  %call187 = call float @normalize_v3(float* %arraydecay186), !dbg !1786
  call void @llvm.dbg.declare(metadata float* %fac, metadata !1787, metadata !DIExpression()), !dbg !1789
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %vec_curr, i64 0, i64 0, !dbg !1790
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %vec_prev, i64 0, i64 0, !dbg !1791
  %call190 = call float @dot_v3v3(float* %arraydecay188, float* %arraydecay189), !dbg !1792
  %call191 = call float @saacos(float %call190), !dbg !1793
  store float %call191, float* %fac, align 4, !dbg !1789
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %lnor, i64 0, i64 0, !dbg !1794
  %150 = load [3 x float]*, [3 x float]** %polynors.addr, align 8, !dbg !1795
  %151 = load i32, i32* %mpfan_curr_index, align 4, !dbg !1796
  %idxprom193 = sext i32 %151 to i64, !dbg !1795
  %arrayidx194 = getelementptr inbounds [3 x float], [3 x float]* %150, i64 %idxprom193, !dbg !1795
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx194, i64 0, i64 0, !dbg !1795
  %152 = load float, float* %fac, align 4, !dbg !1797
  call void @madd_v3_v3fl(float* %arraydecay192, float* %arraydecay195, float %152), !dbg !1798
  %153 = load %struct.LinkNode*, %struct.LinkNode** %_normal_free, align 8, !dbg !1799
  %tobool196 = icmp ne %struct.LinkNode* %153, null, !dbg !1799
  br i1 %tobool196, label %if.then197, label %if.else198, !dbg !1802

if.then197:                                       ; preds = %cond.end179
  %154 = load %struct.LinkNode*, %struct.LinkNode** %_normal_free, align 8, !dbg !1803
  store %struct.LinkNode* %154, %struct.LinkNode** %_normal_temp, align 8, !dbg !1803
  %155 = load %struct.LinkNode*, %struct.LinkNode** %_normal_free, align 8, !dbg !1803
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %155, i32 0, i32 0, !dbg !1803
  %156 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !1803
  store %struct.LinkNode* %156, %struct.LinkNode** %_normal_free, align 8, !dbg !1803
  br label %if.end199, !dbg !1803

if.else198:                                       ; preds = %cond.end179
  %157 = alloca i8, i64 16, align 16, !dbg !1805
  %158 = bitcast i8* %157 to %struct.LinkNode*, !dbg !1805
  store %struct.LinkNode* %158, %struct.LinkNode** %_normal_temp, align 8, !dbg !1805
  br label %if.end199

if.end199:                                        ; preds = %if.else198, %if.then197
  %159 = load %struct.LinkNode*, %struct.LinkNode** %_normal_stack, align 8, !dbg !1802
  %160 = load %struct.LinkNode*, %struct.LinkNode** %_normal_temp, align 8, !dbg !1802
  %next200 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %160, i32 0, i32 0, !dbg !1802
  store %struct.LinkNode* %159, %struct.LinkNode** %next200, align 8, !dbg !1802
  %161 = load [3 x float]*, [3 x float]** %r_loopnors.addr, align 8, !dbg !1802
  %162 = load i32, i32* %mlfan_vert_index, align 4, !dbg !1802
  %idxprom201 = sext i32 %162 to i64, !dbg !1802
  %arrayidx202 = getelementptr inbounds [3 x float], [3 x float]* %161, i64 %idxprom201, !dbg !1802
  %arrayidx203 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx202, i64 0, i64 0, !dbg !1802
  %163 = bitcast float* %arrayidx203 to i8*, !dbg !1802
  %164 = load %struct.LinkNode*, %struct.LinkNode** %_normal_temp, align 8, !dbg !1802
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %164, i32 0, i32 1, !dbg !1802
  store i8* %163, i8** %link, align 8, !dbg !1802
  %165 = load %struct.LinkNode*, %struct.LinkNode** %_normal_temp, align 8, !dbg !1802
  store %struct.LinkNode* %165, %struct.LinkNode** %_normal_stack, align 8, !dbg !1802
  %166 = load i32*, i32** %e2lfan_curr, align 8, !dbg !1807
  %arrayidx204 = getelementptr inbounds i32, i32* %166, i64 1, !dbg !1807
  %167 = load i32, i32* %arrayidx204, align 4, !dbg !1807
  %cmp205 = icmp eq i32 %167, -2147483648, !dbg !1807
  br i1 %cmp205, label %if.then211, label %lor.lhs.false207, !dbg !1807

lor.lhs.false207:                                 ; preds = %if.end199
  %168 = load i32*, i32** %e2lfan_curr, align 8, !dbg !1807
  %arrayidx208 = getelementptr inbounds i32, i32* %168, i64 1, !dbg !1807
  %169 = load i32, i32* %arrayidx208, align 4, !dbg !1807
  %cmp209 = icmp eq i32 %169, -1, !dbg !1807
  br i1 %cmp209, label %if.then211, label %if.end212, !dbg !1809

if.then211:                                       ; preds = %lor.lhs.false207, %if.end199
  br label %while.end, !dbg !1810

if.end212:                                        ; preds = %lor.lhs.false207
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %vec_prev, i64 0, i64 0, !dbg !1812
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %vec_curr, i64 0, i64 0, !dbg !1813
  call void @copy_v3_v3(float* %arraydecay213, float* %arraydecay214), !dbg !1814
  %170 = load i32*, i32** %e2lfan_curr, align 8, !dbg !1815
  %arrayidx215 = getelementptr inbounds i32, i32* %170, i64 0, !dbg !1815
  %171 = load i32, i32* %arrayidx215, align 4, !dbg !1815
  %172 = load i32, i32* %mlfan_curr_index, align 4, !dbg !1816
  %cmp216 = icmp eq i32 %171, %172, !dbg !1817
  br i1 %cmp216, label %cond.true218, label %cond.false220, !dbg !1818

cond.true218:                                     ; preds = %if.end212
  %173 = load i32*, i32** %e2lfan_curr, align 8, !dbg !1819
  %arrayidx219 = getelementptr inbounds i32, i32* %173, i64 1, !dbg !1819
  %174 = load i32, i32* %arrayidx219, align 4, !dbg !1819
  br label %cond.end222, !dbg !1818

cond.false220:                                    ; preds = %if.end212
  %175 = load i32*, i32** %e2lfan_curr, align 8, !dbg !1820
  %arrayidx221 = getelementptr inbounds i32, i32* %175, i64 0, !dbg !1820
  %176 = load i32, i32* %arrayidx221, align 4, !dbg !1820
  br label %cond.end222, !dbg !1818

cond.end222:                                      ; preds = %cond.false220, %cond.true218
  %cond223 = phi i32 [ %174, %cond.true218 ], [ %176, %cond.false220 ], !dbg !1818
  store i32 %cond223, i32* %mlfan_curr_index, align 4, !dbg !1821
  %177 = load i32*, i32** %loop_to_poly, align 8, !dbg !1822
  %178 = load i32, i32* %mlfan_curr_index, align 4, !dbg !1823
  %idxprom224 = sext i32 %178 to i64, !dbg !1822
  %arrayidx225 = getelementptr inbounds i32, i32* %177, i64 %idxprom224, !dbg !1822
  %179 = load i32, i32* %arrayidx225, align 4, !dbg !1822
  store i32 %179, i32* %mpfan_curr_index, align 4, !dbg !1824
  %180 = load %struct.MLoop*, %struct.MLoop** %mloops.addr, align 8, !dbg !1825
  %181 = load i32, i32* %mlfan_curr_index, align 4, !dbg !1826
  %idxprom226 = sext i32 %181 to i64, !dbg !1825
  %arrayidx227 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %180, i64 %idxprom226, !dbg !1825
  store %struct.MLoop* %arrayidx227, %struct.MLoop** %mlfan_next, align 8, !dbg !1827
  %182 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !1828
  %183 = load i32, i32* %mpfan_curr_index, align 4, !dbg !1829
  %idxprom228 = sext i32 %183 to i64, !dbg !1828
  %arrayidx229 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %182, i64 %idxprom228, !dbg !1828
  store %struct.MPoly* %arrayidx229, %struct.MPoly** %mpfan_next, align 8, !dbg !1830
  %184 = load %struct.MLoop*, %struct.MLoop** %mlfan_curr, align 8, !dbg !1831
  %v230 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %184, i32 0, i32 0, !dbg !1833
  %185 = load i32, i32* %v230, align 4, !dbg !1833
  %186 = load %struct.MLoop*, %struct.MLoop** %mlfan_next, align 8, !dbg !1834
  %v231 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %186, i32 0, i32 0, !dbg !1835
  %187 = load i32, i32* %v231, align 4, !dbg !1835
  %cmp232 = icmp eq i32 %185, %187, !dbg !1836
  br i1 %cmp232, label %land.lhs.true234, label %lor.lhs.false238, !dbg !1837

land.lhs.true234:                                 ; preds = %cond.end222
  %188 = load %struct.MLoop*, %struct.MLoop** %mlfan_curr, align 8, !dbg !1838
  %v235 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %188, i32 0, i32 0, !dbg !1839
  %189 = load i32, i32* %v235, align 4, !dbg !1839
  %190 = load i32, i32* %mv_pivot_index, align 4, !dbg !1840
  %cmp236 = icmp eq i32 %189, %190, !dbg !1841
  br i1 %cmp236, label %if.then247, label %lor.lhs.false238, !dbg !1842

lor.lhs.false238:                                 ; preds = %land.lhs.true234, %cond.end222
  %191 = load %struct.MLoop*, %struct.MLoop** %mlfan_curr, align 8, !dbg !1843
  %v239 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %191, i32 0, i32 0, !dbg !1844
  %192 = load i32, i32* %v239, align 4, !dbg !1844
  %193 = load %struct.MLoop*, %struct.MLoop** %mlfan_next, align 8, !dbg !1845
  %v240 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %193, i32 0, i32 0, !dbg !1846
  %194 = load i32, i32* %v240, align 4, !dbg !1846
  %cmp241 = icmp ne i32 %192, %194, !dbg !1847
  br i1 %cmp241, label %land.lhs.true243, label %if.else257, !dbg !1848

land.lhs.true243:                                 ; preds = %lor.lhs.false238
  %195 = load %struct.MLoop*, %struct.MLoop** %mlfan_curr, align 8, !dbg !1849
  %v244 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %195, i32 0, i32 0, !dbg !1850
  %196 = load i32, i32* %v244, align 4, !dbg !1850
  %197 = load i32, i32* %mv_pivot_index, align 4, !dbg !1851
  %cmp245 = icmp ne i32 %196, %197, !dbg !1852
  br i1 %cmp245, label %if.then247, label %if.else257, !dbg !1853

if.then247:                                       ; preds = %land.lhs.true243, %land.lhs.true234
  %198 = load i32, i32* %mlfan_curr_index, align 4, !dbg !1854
  store i32 %198, i32* %mlfan_vert_index, align 4, !dbg !1856
  %199 = load i32, i32* %mlfan_curr_index, align 4, !dbg !1857
  %dec = add nsw i32 %199, -1, !dbg !1857
  store i32 %dec, i32* %mlfan_curr_index, align 4, !dbg !1857
  %200 = load %struct.MPoly*, %struct.MPoly** %mpfan_next, align 8, !dbg !1859
  %loopstart248 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %200, i32 0, i32 0, !dbg !1860
  %201 = load i32, i32* %loopstart248, align 4, !dbg !1860
  %cmp249 = icmp slt i32 %dec, %201, !dbg !1861
  br i1 %cmp249, label %if.then251, label %if.end256, !dbg !1862

if.then251:                                       ; preds = %if.then247
  %202 = load %struct.MPoly*, %struct.MPoly** %mpfan_next, align 8, !dbg !1863
  %loopstart252 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %202, i32 0, i32 0, !dbg !1865
  %203 = load i32, i32* %loopstart252, align 4, !dbg !1865
  %204 = load %struct.MPoly*, %struct.MPoly** %mpfan_next, align 8, !dbg !1866
  %totloop253 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %204, i32 0, i32 1, !dbg !1867
  %205 = load i32, i32* %totloop253, align 4, !dbg !1867
  %add254 = add nsw i32 %203, %205, !dbg !1868
  %sub255 = sub nsw i32 %add254, 1, !dbg !1869
  store i32 %sub255, i32* %mlfan_curr_index, align 4, !dbg !1870
  br label %if.end256, !dbg !1871

if.end256:                                        ; preds = %if.then251, %if.then247
  br label %if.end267, !dbg !1872

if.else257:                                       ; preds = %land.lhs.true243, %lor.lhs.false238
  %206 = load i32, i32* %mlfan_curr_index, align 4, !dbg !1873
  %inc258 = add nsw i32 %206, 1, !dbg !1873
  store i32 %inc258, i32* %mlfan_curr_index, align 4, !dbg !1873
  %207 = load %struct.MPoly*, %struct.MPoly** %mpfan_next, align 8, !dbg !1876
  %loopstart259 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %207, i32 0, i32 0, !dbg !1877
  %208 = load i32, i32* %loopstart259, align 4, !dbg !1877
  %209 = load %struct.MPoly*, %struct.MPoly** %mpfan_next, align 8, !dbg !1878
  %totloop260 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %209, i32 0, i32 1, !dbg !1879
  %210 = load i32, i32* %totloop260, align 4, !dbg !1879
  %add261 = add nsw i32 %208, %210, !dbg !1880
  %cmp262 = icmp sge i32 %inc258, %add261, !dbg !1881
  br i1 %cmp262, label %if.then264, label %if.end266, !dbg !1882

if.then264:                                       ; preds = %if.else257
  %211 = load %struct.MPoly*, %struct.MPoly** %mpfan_next, align 8, !dbg !1883
  %loopstart265 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %211, i32 0, i32 0, !dbg !1885
  %212 = load i32, i32* %loopstart265, align 4, !dbg !1885
  store i32 %212, i32* %mlfan_curr_index, align 4, !dbg !1886
  br label %if.end266, !dbg !1887

if.end266:                                        ; preds = %if.then264, %if.else257
  %213 = load i32, i32* %mlfan_curr_index, align 4, !dbg !1888
  store i32 %213, i32* %mlfan_vert_index, align 4, !dbg !1889
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.end256
  %214 = load %struct.MLoop*, %struct.MLoop** %mloops.addr, align 8, !dbg !1890
  %215 = load i32, i32* %mlfan_curr_index, align 4, !dbg !1891
  %idxprom268 = sext i32 %215 to i64, !dbg !1890
  %arrayidx269 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %214, i64 %idxprom268, !dbg !1890
  store %struct.MLoop* %arrayidx269, %struct.MLoop** %mlfan_curr, align 8, !dbg !1892
  %216 = load [2 x i32]*, [2 x i32]** %edge_to_loops, align 8, !dbg !1893
  %217 = load %struct.MLoop*, %struct.MLoop** %mlfan_curr, align 8, !dbg !1894
  %e270 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %217, i32 0, i32 1, !dbg !1895
  %218 = load i32, i32* %e270, align 4, !dbg !1895
  %idxprom271 = zext i32 %218 to i64, !dbg !1893
  %arrayidx272 = getelementptr inbounds [2 x i32], [2 x i32]* %216, i64 %idxprom271, !dbg !1893
  %arraydecay273 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx272, i64 0, i64 0, !dbg !1893
  store i32* %arraydecay273, i32** %e2lfan_curr, align 8, !dbg !1896
  br label %while.body, !dbg !1758, !llvm.loop !1897

while.end:                                        ; preds = %if.then211
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %lnor, i64 0, i64 0, !dbg !1899
  %call275 = call float @normalize_v3(float* %arraydecay274), !dbg !1899
  %cmp276 = fcmp une float %call275, 0.000000e+00, !dbg !1899
  br i1 %cmp276, label %if.then278, label %if.else291, !dbg !1901

if.then278:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata float** %nor, metadata !1902, metadata !DIExpression()), !dbg !1904
  br label %while.cond, !dbg !1905

while.cond:                                       ; preds = %while.body288, %if.then278
  %219 = load %struct.LinkNode*, %struct.LinkNode** %_normal_stack, align 8, !dbg !1906
  %tobool279 = icmp ne %struct.LinkNode* %219, null, !dbg !1906
  br i1 %tobool279, label %cond.true280, label %cond.false284, !dbg !1906

cond.true280:                                     ; preds = %while.cond
  %220 = load %struct.LinkNode*, %struct.LinkNode** %_normal_stack, align 8, !dbg !1906
  %next281 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %220, i32 0, i32 0, !dbg !1906
  %221 = load %struct.LinkNode*, %struct.LinkNode** %next281, align 8, !dbg !1906
  store %struct.LinkNode* %221, %struct.LinkNode** %_normal_temp, align 8, !dbg !1906
  %222 = load %struct.LinkNode*, %struct.LinkNode** %_normal_free, align 8, !dbg !1906
  %223 = load %struct.LinkNode*, %struct.LinkNode** %_normal_stack, align 8, !dbg !1906
  %next282 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %223, i32 0, i32 0, !dbg !1906
  store %struct.LinkNode* %222, %struct.LinkNode** %next282, align 8, !dbg !1906
  %224 = load %struct.LinkNode*, %struct.LinkNode** %_normal_stack, align 8, !dbg !1906
  store %struct.LinkNode* %224, %struct.LinkNode** %_normal_free, align 8, !dbg !1906
  %225 = load %struct.LinkNode*, %struct.LinkNode** %_normal_temp, align 8, !dbg !1906
  store %struct.LinkNode* %225, %struct.LinkNode** %_normal_stack, align 8, !dbg !1906
  %226 = load %struct.LinkNode*, %struct.LinkNode** %_normal_free, align 8, !dbg !1906
  %link283 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %226, i32 0, i32 1, !dbg !1906
  %227 = load i8*, i8** %link283, align 8, !dbg !1906
  br label %cond.end285, !dbg !1906

cond.false284:                                    ; preds = %while.cond
  br label %cond.end285, !dbg !1906

cond.end285:                                      ; preds = %cond.false284, %cond.true280
  %cond286 = phi i8* [ %227, %cond.true280 ], [ null, %cond.false284 ], !dbg !1906
  %228 = bitcast i8* %cond286 to float*, !dbg !1906
  store float* %228, float** %nor, align 8, !dbg !1907
  %tobool287 = icmp ne float* %228, null, !dbg !1905
  br i1 %tobool287, label %while.body288, label %while.end290, !dbg !1905

while.body288:                                    ; preds = %cond.end285
  %229 = load float*, float** %nor, align 8, !dbg !1908
  %arraydecay289 = getelementptr inbounds [3 x float], [3 x float]* %lnor, i64 0, i64 0, !dbg !1910
  call void @copy_v3_v3(float* %229, float* %arraydecay289), !dbg !1911
  br label %while.cond, !dbg !1905, !llvm.loop !1912

while.end290:                                     ; preds = %cond.end285
  br label %if.end304, !dbg !1914

if.else291:                                       ; preds = %while.end
  br label %while.cond292, !dbg !1915

while.cond292:                                    ; preds = %while.body302, %if.else291
  %230 = load %struct.LinkNode*, %struct.LinkNode** %_normal_stack, align 8, !dbg !1917
  %tobool293 = icmp ne %struct.LinkNode* %230, null, !dbg !1917
  br i1 %tobool293, label %cond.true294, label %cond.false298, !dbg !1917

cond.true294:                                     ; preds = %while.cond292
  %231 = load %struct.LinkNode*, %struct.LinkNode** %_normal_stack, align 8, !dbg !1917
  %next295 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %231, i32 0, i32 0, !dbg !1917
  %232 = load %struct.LinkNode*, %struct.LinkNode** %next295, align 8, !dbg !1917
  store %struct.LinkNode* %232, %struct.LinkNode** %_normal_temp, align 8, !dbg !1917
  %233 = load %struct.LinkNode*, %struct.LinkNode** %_normal_free, align 8, !dbg !1917
  %234 = load %struct.LinkNode*, %struct.LinkNode** %_normal_stack, align 8, !dbg !1917
  %next296 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %234, i32 0, i32 0, !dbg !1917
  store %struct.LinkNode* %233, %struct.LinkNode** %next296, align 8, !dbg !1917
  %235 = load %struct.LinkNode*, %struct.LinkNode** %_normal_stack, align 8, !dbg !1917
  store %struct.LinkNode* %235, %struct.LinkNode** %_normal_free, align 8, !dbg !1917
  %236 = load %struct.LinkNode*, %struct.LinkNode** %_normal_temp, align 8, !dbg !1917
  store %struct.LinkNode* %236, %struct.LinkNode** %_normal_stack, align 8, !dbg !1917
  %237 = load %struct.LinkNode*, %struct.LinkNode** %_normal_free, align 8, !dbg !1917
  %link297 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %237, i32 0, i32 1, !dbg !1917
  %238 = load i8*, i8** %link297, align 8, !dbg !1917
  br label %cond.end299, !dbg !1917

cond.false298:                                    ; preds = %while.cond292
  br label %cond.end299, !dbg !1917

cond.end299:                                      ; preds = %cond.false298, %cond.true294
  %cond300 = phi i8* [ %238, %cond.true294 ], [ null, %cond.false298 ], !dbg !1917
  %tobool301 = icmp ne i8* %cond300, null, !dbg !1915
  br i1 %tobool301, label %while.body302, label %while.end303, !dbg !1915

while.body302:                                    ; preds = %cond.end299
  br label %while.cond292, !dbg !1915, !llvm.loop !1918

while.end303:                                     ; preds = %cond.end299
  br label %if.end304

if.end304:                                        ; preds = %while.end303, %while.end290
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.then138
  br label %if.end306

if.end306:                                        ; preds = %if.end305, %if.then129
  %239 = load %struct.MLoop*, %struct.MLoop** %ml_curr96, align 8, !dbg !1920
  store %struct.MLoop* %239, %struct.MLoop** %ml_prev, align 8, !dbg !1921
  %240 = load i32, i32* %ml_curr_index102, align 4, !dbg !1922
  store i32 %240, i32* %ml_prev_index, align 4, !dbg !1923
  br label %for.inc307, !dbg !1924

for.inc307:                                       ; preds = %if.end306
  %241 = load %struct.MLoop*, %struct.MLoop** %ml_curr96, align 8, !dbg !1925
  %incdec.ptr308 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %241, i32 1, !dbg !1925
  store %struct.MLoop* %incdec.ptr308, %struct.MLoop** %ml_curr96, align 8, !dbg !1925
  %242 = load i32, i32* %ml_curr_index102, align 4, !dbg !1926
  %inc309 = add nsw i32 %242, 1, !dbg !1926
  store i32 %inc309, i32* %ml_curr_index102, align 4, !dbg !1926
  %243 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !1927
  %incdec.ptr310 = getelementptr inbounds [3 x float], [3 x float]* %243, i32 1, !dbg !1927
  store [3 x float]* %incdec.ptr310, [3 x float]** %lnors, align 8, !dbg !1927
  br label %for.cond110, !dbg !1928, !llvm.loop !1929

for.end311:                                       ; preds = %for.cond110
  br label %for.inc312, !dbg !1931

for.inc312:                                       ; preds = %for.end311
  %244 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !1932
  %incdec.ptr313 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %244, i32 1, !dbg !1932
  store %struct.MPoly* %incdec.ptr313, %struct.MPoly** %mp, align 8, !dbg !1932
  %245 = load i32, i32* %mp_index, align 4, !dbg !1933
  %inc314 = add nsw i32 %245, 1, !dbg !1933
  store i32 %inc314, i32* %mp_index, align 4, !dbg !1933
  br label %for.cond92, !dbg !1934, !llvm.loop !1935

for.end315:                                       ; preds = %for.cond92
  %246 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1937
  %247 = load [2 x i32]*, [2 x i32]** %edge_to_loops, align 8, !dbg !1938
  %248 = bitcast [2 x i32]* %247 to i8*, !dbg !1938
  call void %246(i8* %248), !dbg !1937
  %249 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1939
  %250 = load i32*, i32** %loop_to_poly, align 8, !dbg !1940
  %251 = bitcast i32* %250 to i8*, !dbg !1940
  call void %249(i8* %251), !dbg !1939
  ret void, !dbg !1941
}

; Function Attrs: nounwind
declare dso_local float @cosf(float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !1942 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !1947, metadata !DIExpression()), !dbg !1948
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !1949, metadata !DIExpression()), !dbg !1950
  %0 = load i16*, i16** %in.addr, align 8, !dbg !1951
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !1951
  %1 = load i16, i16* %arrayidx, align 2, !dbg !1951
  %conv = sext i16 %1 to i32, !dbg !1951
  %conv1 = sitofp i32 %conv to float, !dbg !1951
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !1952
  %2 = load float*, float** %out.addr, align 8, !dbg !1953
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !1953
  store float %mul, float* %arrayidx2, align 4, !dbg !1954
  %3 = load i16*, i16** %in.addr, align 8, !dbg !1955
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !1955
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !1955
  %conv4 = sext i16 %4 to i32, !dbg !1955
  %conv5 = sitofp i32 %conv4 to float, !dbg !1955
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !1956
  %5 = load float*, float** %out.addr, align 8, !dbg !1957
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !1957
  store float %mul6, float* %arrayidx7, align 4, !dbg !1958
  %6 = load i16*, i16** %in.addr, align 8, !dbg !1959
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !1959
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !1959
  %conv9 = sext i16 %7 to i32, !dbg !1959
  %conv10 = sitofp i32 %conv9 to float, !dbg !1959
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !1960
  %8 = load float*, float** %out.addr, align 8, !dbg !1961
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !1961
  store float %mul11, float* %arrayidx12, align 4, !dbg !1962
  ret void, !dbg !1963
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !1964 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !1967, metadata !DIExpression()), !dbg !1968
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !1969, metadata !DIExpression()), !dbg !1970
  %0 = load float*, float** %a.addr, align 8, !dbg !1971
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !1971
  %1 = load float, float* %arrayidx, align 4, !dbg !1971
  %2 = load float*, float** %b.addr, align 8, !dbg !1972
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !1972
  %3 = load float, float* %arrayidx1, align 4, !dbg !1972
  %mul = fmul float %1, %3, !dbg !1973
  %4 = load float*, float** %a.addr, align 8, !dbg !1974
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !1974
  %5 = load float, float* %arrayidx2, align 4, !dbg !1974
  %6 = load float*, float** %b.addr, align 8, !dbg !1975
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !1975
  %7 = load float, float* %arrayidx3, align 4, !dbg !1975
  %mul4 = fmul float %5, %7, !dbg !1976
  %add = fadd float %mul, %mul4, !dbg !1977
  %8 = load float*, float** %a.addr, align 8, !dbg !1978
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !1978
  %9 = load float, float* %arrayidx5, align 4, !dbg !1978
  %10 = load float*, float** %b.addr, align 8, !dbg !1979
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !1979
  %11 = load float, float* %arrayidx6, align 4, !dbg !1979
  %mul7 = fmul float %9, %11, !dbg !1980
  %add8 = fadd float %add, %mul7, !dbg !1981
  ret float %add8, !dbg !1982
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !1983 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !1986, metadata !DIExpression()), !dbg !1987
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !1988, metadata !DIExpression()), !dbg !1989
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !1990, metadata !DIExpression()), !dbg !1991
  %0 = load float*, float** %a.addr, align 8, !dbg !1992
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !1992
  %1 = load float, float* %arrayidx, align 4, !dbg !1992
  %2 = load float*, float** %b.addr, align 8, !dbg !1993
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !1993
  %3 = load float, float* %arrayidx1, align 4, !dbg !1993
  %sub = fsub float %1, %3, !dbg !1994
  %4 = load float*, float** %r.addr, align 8, !dbg !1995
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !1995
  store float %sub, float* %arrayidx2, align 4, !dbg !1996
  %5 = load float*, float** %a.addr, align 8, !dbg !1997
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !1997
  %6 = load float, float* %arrayidx3, align 4, !dbg !1997
  %7 = load float*, float** %b.addr, align 8, !dbg !1998
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !1998
  %8 = load float, float* %arrayidx4, align 4, !dbg !1998
  %sub5 = fsub float %6, %8, !dbg !1999
  %9 = load float*, float** %r.addr, align 8, !dbg !2000
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !2000
  store float %sub5, float* %arrayidx6, align 4, !dbg !2001
  %10 = load float*, float** %a.addr, align 8, !dbg !2002
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !2002
  %11 = load float, float* %arrayidx7, align 4, !dbg !2002
  %12 = load float*, float** %b.addr, align 8, !dbg !2003
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !2003
  %13 = load float, float* %arrayidx8, align 4, !dbg !2003
  %sub9 = fsub float %11, %13, !dbg !2004
  %14 = load float*, float** %r.addr, align 8, !dbg !2005
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !2005
  store float %sub9, float* %arrayidx10, align 4, !dbg !2006
  ret void, !dbg !2007
}

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !2008 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !2012, metadata !DIExpression()), !dbg !2013
  %0 = load float, float* %fac.addr, align 4, !dbg !2014
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !2014
  br i1 %cmp, label %if.then, label %if.else, !dbg !2016

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !2017
  br label %return, !dbg !2017

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !2018
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !2018
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !2020

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !2021
  br label %return, !dbg !2021

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !2022
  %call = call float @acosf(float %2) #5, !dbg !2023
  store float %call, float* %retval, align 4, !dbg !2024
  br label %return, !dbg !2024

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !2025
  ret float %3, !dbg !2025
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !2026 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2029, metadata !DIExpression()), !dbg !2030
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2031, metadata !DIExpression()), !dbg !2032
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !2033, metadata !DIExpression()), !dbg !2034
  %0 = load float*, float** %a.addr, align 8, !dbg !2035
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2035
  %1 = load float, float* %arrayidx, align 4, !dbg !2035
  %2 = load float, float* %f.addr, align 4, !dbg !2036
  %mul = fmul float %1, %2, !dbg !2037
  %3 = load float*, float** %r.addr, align 8, !dbg !2038
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !2038
  %4 = load float, float* %arrayidx1, align 4, !dbg !2039
  %add = fadd float %4, %mul, !dbg !2039
  store float %add, float* %arrayidx1, align 4, !dbg !2039
  %5 = load float*, float** %a.addr, align 8, !dbg !2040
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !2040
  %6 = load float, float* %arrayidx2, align 4, !dbg !2040
  %7 = load float, float* %f.addr, align 4, !dbg !2041
  %mul3 = fmul float %6, %7, !dbg !2042
  %8 = load float*, float** %r.addr, align 8, !dbg !2043
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !2043
  %9 = load float, float* %arrayidx4, align 4, !dbg !2044
  %add5 = fadd float %9, %mul3, !dbg !2044
  store float %add5, float* %arrayidx4, align 4, !dbg !2044
  %10 = load float*, float** %a.addr, align 8, !dbg !2045
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !2045
  %11 = load float, float* %arrayidx6, align 4, !dbg !2045
  %12 = load float, float* %f.addr, align 4, !dbg !2046
  %mul7 = fmul float %11, %12, !dbg !2047
  %13 = load float*, float** %r.addr, align 8, !dbg !2048
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !2048
  %14 = load float, float* %arrayidx8, align 4, !dbg !2049
  %add9 = fadd float %14, %mul7, !dbg !2049
  store float %add9, float* %arrayidx8, align 4, !dbg !2049
  ret void, !dbg !2050
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_loop_tangents_ex(%struct.MVert* %mverts, i32 %UNUSED_numVerts, %struct.MLoop* %mloops, [4 x float]* %r_looptangent, [3 x float]* %loopnors, %struct.MLoopUV* %loopuvs, i32 %UNUSED_numLoops, %struct.MPoly* %mpolys, i32 %numPolys, %struct.ReportList* %reports) #0 !dbg !2051 {
entry:
  %mverts.addr = alloca %struct.MVert*, align 8
  %UNUSED_numVerts.addr = alloca i32, align 4
  %mloops.addr = alloca %struct.MLoop*, align 8
  %r_looptangent.addr = alloca [4 x float]*, align 8
  %loopnors.addr = alloca [3 x float]*, align 8
  %loopuvs.addr = alloca %struct.MLoopUV*, align 8
  %UNUSED_numLoops.addr = alloca i32, align 4
  %mpolys.addr = alloca %struct.MPoly*, align 8
  %numPolys.addr = alloca i32, align 4
  %reports.addr = alloca %struct.ReportList*, align 8
  %mesh_to_tangent = alloca %struct.BKEMeshToTangent, align 8
  %s_context = alloca %struct.SMikkTSpaceContext, align 8
  %s_interface = alloca %struct.SMikkTSpaceInterface, align 8
  %mp = alloca %struct.MPoly*, align 8
  %mp_index = alloca i32, align 4
  store %struct.MVert* %mverts, %struct.MVert** %mverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts.addr, metadata !2067, metadata !DIExpression()), !dbg !2068
  store i32 %UNUSED_numVerts, i32* %UNUSED_numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_numVerts.addr, metadata !2069, metadata !DIExpression()), !dbg !2070
  store %struct.MLoop* %mloops, %struct.MLoop** %mloops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloops.addr, metadata !2071, metadata !DIExpression()), !dbg !2072
  store [4 x float]* %r_looptangent, [4 x float]** %r_looptangent.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %r_looptangent.addr, metadata !2073, metadata !DIExpression()), !dbg !2074
  store [3 x float]* %loopnors, [3 x float]** %loopnors.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %loopnors.addr, metadata !2075, metadata !DIExpression()), !dbg !2076
  store %struct.MLoopUV* %loopuvs, %struct.MLoopUV** %loopuvs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %loopuvs.addr, metadata !2077, metadata !DIExpression()), !dbg !2078
  store i32 %UNUSED_numLoops, i32* %UNUSED_numLoops.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_numLoops.addr, metadata !2079, metadata !DIExpression()), !dbg !2080
  store %struct.MPoly* %mpolys, %struct.MPoly** %mpolys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpolys.addr, metadata !2081, metadata !DIExpression()), !dbg !2082
  store i32 %numPolys, i32* %numPolys.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numPolys.addr, metadata !2083, metadata !DIExpression()), !dbg !2084
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !2085, metadata !DIExpression()), !dbg !2086
  call void @llvm.dbg.declare(metadata %struct.BKEMeshToTangent* %mesh_to_tangent, metadata !2087, metadata !DIExpression()), !dbg !2088
  %0 = bitcast %struct.BKEMeshToTangent* %mesh_to_tangent to i8*, !dbg !2088
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !2088
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext* %s_context, metadata !2089, metadata !DIExpression()), !dbg !2126
  %1 = bitcast %struct.SMikkTSpaceContext* %s_context to i8*, !dbg !2126
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !2126
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceInterface* %s_interface, metadata !2127, metadata !DIExpression()), !dbg !2128
  %2 = bitcast %struct.SMikkTSpaceInterface* %s_interface to i8*, !dbg !2128
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false), !dbg !2128
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !2129, metadata !DIExpression()), !dbg !2130
  call void @llvm.dbg.declare(metadata i32* %mp_index, metadata !2131, metadata !DIExpression()), !dbg !2132
  %3 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !2133
  store %struct.MPoly* %3, %struct.MPoly** %mp, align 8, !dbg !2135
  store i32 0, i32* %mp_index, align 4, !dbg !2136
  br label %for.cond, !dbg !2137

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %mp_index, align 4, !dbg !2138
  %5 = load i32, i32* %numPolys.addr, align 4, !dbg !2140
  %cmp = icmp slt i32 %4, %5, !dbg !2141
  br i1 %cmp, label %for.body, label %for.end, !dbg !2142

for.body:                                         ; preds = %for.cond
  %6 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !2143
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %6, i32 0, i32 1, !dbg !2146
  %7 = load i32, i32* %totloop, align 4, !dbg !2146
  %cmp1 = icmp sgt i32 %7, 4, !dbg !2147
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2148

if.then:                                          ; preds = %for.body
  %8 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !2149
  call void @BKE_report(%struct.ReportList* %8, i32 32, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4, i64 0, i64 0)), !dbg !2151
  br label %if.end7, !dbg !2152

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2153

for.inc:                                          ; preds = %if.end
  %9 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !2154
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %9, i32 1, !dbg !2154
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mp, align 8, !dbg !2154
  %10 = load i32, i32* %mp_index, align 4, !dbg !2155
  %inc = add nsw i32 %10, 1, !dbg !2155
  store i32 %inc, i32* %mp_index, align 4, !dbg !2155
  br label %for.cond, !dbg !2156, !llvm.loop !2157

for.end:                                          ; preds = %for.cond
  %11 = load %struct.MPoly*, %struct.MPoly** %mpolys.addr, align 8, !dbg !2159
  %mpolys2 = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %mesh_to_tangent, i32 0, i32 0, !dbg !2160
  store %struct.MPoly* %11, %struct.MPoly** %mpolys2, align 8, !dbg !2161
  %12 = load %struct.MLoop*, %struct.MLoop** %mloops.addr, align 8, !dbg !2162
  %mloops3 = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %mesh_to_tangent, i32 0, i32 1, !dbg !2163
  store %struct.MLoop* %12, %struct.MLoop** %mloops3, align 8, !dbg !2164
  %13 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !2165
  %mverts4 = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %mesh_to_tangent, i32 0, i32 2, !dbg !2166
  store %struct.MVert* %13, %struct.MVert** %mverts4, align 8, !dbg !2167
  %14 = load %struct.MLoopUV*, %struct.MLoopUV** %loopuvs.addr, align 8, !dbg !2168
  %luvs = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %mesh_to_tangent, i32 0, i32 3, !dbg !2169
  store %struct.MLoopUV* %14, %struct.MLoopUV** %luvs, align 8, !dbg !2170
  %15 = load [3 x float]*, [3 x float]** %loopnors.addr, align 8, !dbg !2171
  %lnors = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %mesh_to_tangent, i32 0, i32 4, !dbg !2172
  store [3 x float]* %15, [3 x float]** %lnors, align 8, !dbg !2173
  %16 = load [4 x float]*, [4 x float]** %r_looptangent.addr, align 8, !dbg !2174
  %tangents = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %mesh_to_tangent, i32 0, i32 5, !dbg !2175
  store [4 x float]* %16, [4 x float]** %tangents, align 8, !dbg !2176
  %17 = load i32, i32* %numPolys.addr, align 4, !dbg !2177
  %num_polys = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %mesh_to_tangent, i32 0, i32 6, !dbg !2178
  store i32 %17, i32* %num_polys, align 8, !dbg !2179
  %18 = bitcast %struct.BKEMeshToTangent* %mesh_to_tangent to i8*, !dbg !2180
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %s_context, i32 0, i32 1, !dbg !2181
  store i8* %18, i8** %m_pUserData, align 8, !dbg !2182
  %m_pInterface = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %s_context, i32 0, i32 0, !dbg !2183
  store %struct.SMikkTSpaceInterface* %s_interface, %struct.SMikkTSpaceInterface** %m_pInterface, align 8, !dbg !2184
  %m_getNumFaces = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %s_interface, i32 0, i32 0, !dbg !2185
  store i32 (%struct.SMikkTSpaceContext*)* @get_num_faces, i32 (%struct.SMikkTSpaceContext*)** %m_getNumFaces, align 8, !dbg !2186
  %m_getNumVerticesOfFace = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %s_interface, i32 0, i32 1, !dbg !2187
  store i32 (%struct.SMikkTSpaceContext*, i32)* @get_num_verts_of_face, i32 (%struct.SMikkTSpaceContext*, i32)** %m_getNumVerticesOfFace, align 8, !dbg !2188
  %m_getPosition = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %s_interface, i32 0, i32 2, !dbg !2189
  store void (%struct.SMikkTSpaceContext*, float*, i32, i32)* @get_position, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getPosition, align 8, !dbg !2190
  %m_getTexCoord = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %s_interface, i32 0, i32 4, !dbg !2191
  store void (%struct.SMikkTSpaceContext*, float*, i32, i32)* @get_texture_coordinate, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getTexCoord, align 8, !dbg !2192
  %m_getNormal = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %s_interface, i32 0, i32 3, !dbg !2193
  store void (%struct.SMikkTSpaceContext*, float*, i32, i32)* @get_normal, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getNormal, align 8, !dbg !2194
  %m_setTSpaceBasic = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %s_interface, i32 0, i32 5, !dbg !2195
  store void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)* @set_tspace, void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)** %m_setTSpaceBasic, align 8, !dbg !2196
  %call = call i32 @genTangSpaceDefault(%struct.SMikkTSpaceContext* %s_context), !dbg !2197
  %cmp5 = icmp eq i32 %call, 0, !dbg !2199
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2200

if.then6:                                         ; preds = %for.end
  %19 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !2201
  call void @BKE_report(%struct.ReportList* %19, i32 32, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0)), !dbg !2203
  br label %if.end7, !dbg !2204

if.end7:                                          ; preds = %if.then, %if.then6, %for.end
  ret void, !dbg !2205
}

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_num_faces(%struct.SMikkTSpaceContext* %pContext) #0 !dbg !2206 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %p_mesh = alloca %struct.BKEMeshToTangent*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !2207, metadata !DIExpression()), !dbg !2208
  call void @llvm.dbg.declare(metadata %struct.BKEMeshToTangent** %p_mesh, metadata !2209, metadata !DIExpression()), !dbg !2210
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2211
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !2212
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !2212
  %2 = bitcast i8* %1 to %struct.BKEMeshToTangent*, !dbg !2213
  store %struct.BKEMeshToTangent* %2, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2210
  %3 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2214
  %num_polys = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %3, i32 0, i32 6, !dbg !2215
  %4 = load i32, i32* %num_polys, align 8, !dbg !2215
  ret i32 %4, !dbg !2216
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_num_verts_of_face(%struct.SMikkTSpaceContext* %pContext, i32 %face_idx) #0 !dbg !2217 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %face_idx.addr = alloca i32, align 4
  %p_mesh = alloca %struct.BKEMeshToTangent*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !2218, metadata !DIExpression()), !dbg !2219
  store i32 %face_idx, i32* %face_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_idx.addr, metadata !2220, metadata !DIExpression()), !dbg !2221
  call void @llvm.dbg.declare(metadata %struct.BKEMeshToTangent** %p_mesh, metadata !2222, metadata !DIExpression()), !dbg !2223
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2224
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !2225
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !2225
  %2 = bitcast i8* %1 to %struct.BKEMeshToTangent*, !dbg !2226
  store %struct.BKEMeshToTangent* %2, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2223
  %3 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2227
  %mpolys = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %3, i32 0, i32 0, !dbg !2228
  %4 = load %struct.MPoly*, %struct.MPoly** %mpolys, align 8, !dbg !2228
  %5 = load i32, i32* %face_idx.addr, align 4, !dbg !2229
  %idxprom = sext i32 %5 to i64, !dbg !2227
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %4, i64 %idxprom, !dbg !2227
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx, i32 0, i32 1, !dbg !2230
  %6 = load i32, i32* %totloop, align 4, !dbg !2230
  ret i32 %6, !dbg !2231
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_position(%struct.SMikkTSpaceContext* %pContext, float* %r_co, i32 %face_idx, i32 %vert_idx) #0 !dbg !2232 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %r_co.addr = alloca float*, align 8
  %face_idx.addr = alloca i32, align 4
  %vert_idx.addr = alloca i32, align 4
  %p_mesh = alloca %struct.BKEMeshToTangent*, align 8
  %loop_idx = alloca i32, align 4
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !2233, metadata !DIExpression()), !dbg !2234
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !2235, metadata !DIExpression()), !dbg !2236
  store i32 %face_idx, i32* %face_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_idx.addr, metadata !2237, metadata !DIExpression()), !dbg !2238
  store i32 %vert_idx, i32* %vert_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_idx.addr, metadata !2239, metadata !DIExpression()), !dbg !2240
  call void @llvm.dbg.declare(metadata %struct.BKEMeshToTangent** %p_mesh, metadata !2241, metadata !DIExpression()), !dbg !2242
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2243
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !2244
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !2244
  %2 = bitcast i8* %1 to %struct.BKEMeshToTangent*, !dbg !2245
  store %struct.BKEMeshToTangent* %2, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2242
  call void @llvm.dbg.declare(metadata i32* %loop_idx, metadata !2246, metadata !DIExpression()), !dbg !2247
  %3 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2248
  %mpolys = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %3, i32 0, i32 0, !dbg !2249
  %4 = load %struct.MPoly*, %struct.MPoly** %mpolys, align 8, !dbg !2249
  %5 = load i32, i32* %face_idx.addr, align 4, !dbg !2250
  %idxprom = sext i32 %5 to i64, !dbg !2248
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %4, i64 %idxprom, !dbg !2248
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx, i32 0, i32 0, !dbg !2251
  %6 = load i32, i32* %loopstart, align 4, !dbg !2251
  %7 = load i32, i32* %vert_idx.addr, align 4, !dbg !2252
  %add = add nsw i32 %6, %7, !dbg !2253
  store i32 %add, i32* %loop_idx, align 4, !dbg !2247
  %8 = load float*, float** %r_co.addr, align 8, !dbg !2254
  %9 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2255
  %mverts = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %9, i32 0, i32 2, !dbg !2256
  %10 = load %struct.MVert*, %struct.MVert** %mverts, align 8, !dbg !2256
  %11 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2257
  %mloops = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %11, i32 0, i32 1, !dbg !2258
  %12 = load %struct.MLoop*, %struct.MLoop** %mloops, align 8, !dbg !2258
  %13 = load i32, i32* %loop_idx, align 4, !dbg !2259
  %idxprom1 = sext i32 %13 to i64, !dbg !2257
  %arrayidx2 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %12, i64 %idxprom1, !dbg !2257
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx2, i32 0, i32 0, !dbg !2260
  %14 = load i32, i32* %v, align 4, !dbg !2260
  %idxprom3 = zext i32 %14 to i64, !dbg !2255
  %arrayidx4 = getelementptr inbounds %struct.MVert, %struct.MVert* %10, i64 %idxprom3, !dbg !2255
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx4, i32 0, i32 0, !dbg !2261
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2255
  call void @copy_v3_v3(float* %8, float* %arraydecay), !dbg !2262
  ret void, !dbg !2263
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_texture_coordinate(%struct.SMikkTSpaceContext* %pContext, float* %r_uv, i32 %face_idx, i32 %vert_idx) #0 !dbg !2264 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %r_uv.addr = alloca float*, align 8
  %face_idx.addr = alloca i32, align 4
  %vert_idx.addr = alloca i32, align 4
  %p_mesh = alloca %struct.BKEMeshToTangent*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !2265, metadata !DIExpression()), !dbg !2266
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !2267, metadata !DIExpression()), !dbg !2268
  store i32 %face_idx, i32* %face_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_idx.addr, metadata !2269, metadata !DIExpression()), !dbg !2270
  store i32 %vert_idx, i32* %vert_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_idx.addr, metadata !2271, metadata !DIExpression()), !dbg !2272
  call void @llvm.dbg.declare(metadata %struct.BKEMeshToTangent** %p_mesh, metadata !2273, metadata !DIExpression()), !dbg !2274
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2275
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !2276
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !2276
  %2 = bitcast i8* %1 to %struct.BKEMeshToTangent*, !dbg !2277
  store %struct.BKEMeshToTangent* %2, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2274
  %3 = load float*, float** %r_uv.addr, align 8, !dbg !2278
  %4 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2279
  %luvs = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %4, i32 0, i32 3, !dbg !2280
  %5 = load %struct.MLoopUV*, %struct.MLoopUV** %luvs, align 8, !dbg !2280
  %6 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2281
  %mpolys = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %6, i32 0, i32 0, !dbg !2282
  %7 = load %struct.MPoly*, %struct.MPoly** %mpolys, align 8, !dbg !2282
  %8 = load i32, i32* %face_idx.addr, align 4, !dbg !2283
  %idxprom = sext i32 %8 to i64, !dbg !2281
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %7, i64 %idxprom, !dbg !2281
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx, i32 0, i32 0, !dbg !2284
  %9 = load i32, i32* %loopstart, align 4, !dbg !2284
  %10 = load i32, i32* %vert_idx.addr, align 4, !dbg !2285
  %add = add nsw i32 %9, %10, !dbg !2286
  %idxprom1 = sext i32 %add to i64, !dbg !2279
  %arrayidx2 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %5, i64 %idxprom1, !dbg !2279
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %arrayidx2, i32 0, i32 0, !dbg !2287
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !2279
  call void @copy_v2_v2(float* %3, float* %arraydecay), !dbg !2288
  ret void, !dbg !2289
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_normal(%struct.SMikkTSpaceContext* %pContext, float* %r_no, i32 %face_idx, i32 %vert_idx) #0 !dbg !2290 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %r_no.addr = alloca float*, align 8
  %face_idx.addr = alloca i32, align 4
  %vert_idx.addr = alloca i32, align 4
  %p_mesh = alloca %struct.BKEMeshToTangent*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !2291, metadata !DIExpression()), !dbg !2292
  store float* %r_no, float** %r_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_no.addr, metadata !2293, metadata !DIExpression()), !dbg !2294
  store i32 %face_idx, i32* %face_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_idx.addr, metadata !2295, metadata !DIExpression()), !dbg !2296
  store i32 %vert_idx, i32* %vert_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_idx.addr, metadata !2297, metadata !DIExpression()), !dbg !2298
  call void @llvm.dbg.declare(metadata %struct.BKEMeshToTangent** %p_mesh, metadata !2299, metadata !DIExpression()), !dbg !2300
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2301
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !2302
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !2302
  %2 = bitcast i8* %1 to %struct.BKEMeshToTangent*, !dbg !2303
  store %struct.BKEMeshToTangent* %2, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2300
  %3 = load float*, float** %r_no.addr, align 8, !dbg !2304
  %4 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2305
  %lnors = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %4, i32 0, i32 4, !dbg !2306
  %5 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !2306
  %6 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2307
  %mpolys = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %6, i32 0, i32 0, !dbg !2308
  %7 = load %struct.MPoly*, %struct.MPoly** %mpolys, align 8, !dbg !2308
  %8 = load i32, i32* %face_idx.addr, align 4, !dbg !2309
  %idxprom = sext i32 %8 to i64, !dbg !2307
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %7, i64 %idxprom, !dbg !2307
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx, i32 0, i32 0, !dbg !2310
  %9 = load i32, i32* %loopstart, align 4, !dbg !2310
  %10 = load i32, i32* %vert_idx.addr, align 4, !dbg !2311
  %add = add nsw i32 %9, %10, !dbg !2312
  %idxprom1 = sext i32 %add to i64, !dbg !2305
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %5, i64 %idxprom1, !dbg !2305
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !2305
  call void @copy_v3_v3(float* %3, float* %arraydecay), !dbg !2313
  ret void, !dbg !2314
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_tspace(%struct.SMikkTSpaceContext* %pContext, float* %fv_tangent, float %face_sign, i32 %face_idx, i32 %vert_idx) #0 !dbg !2315 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %fv_tangent.addr = alloca float*, align 8
  %face_sign.addr = alloca float, align 4
  %face_idx.addr = alloca i32, align 4
  %vert_idx.addr = alloca i32, align 4
  %p_mesh = alloca %struct.BKEMeshToTangent*, align 8
  %p_res = alloca float*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !2316, metadata !DIExpression()), !dbg !2317
  store float* %fv_tangent, float** %fv_tangent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fv_tangent.addr, metadata !2318, metadata !DIExpression()), !dbg !2319
  store float %face_sign, float* %face_sign.addr, align 4
  call void @llvm.dbg.declare(metadata float* %face_sign.addr, metadata !2320, metadata !DIExpression()), !dbg !2321
  store i32 %face_idx, i32* %face_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_idx.addr, metadata !2322, metadata !DIExpression()), !dbg !2323
  store i32 %vert_idx, i32* %vert_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_idx.addr, metadata !2324, metadata !DIExpression()), !dbg !2325
  call void @llvm.dbg.declare(metadata %struct.BKEMeshToTangent** %p_mesh, metadata !2326, metadata !DIExpression()), !dbg !2327
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !2328
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !2329
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !2329
  %2 = bitcast i8* %1 to %struct.BKEMeshToTangent*, !dbg !2330
  store %struct.BKEMeshToTangent* %2, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2327
  call void @llvm.dbg.declare(metadata float** %p_res, metadata !2331, metadata !DIExpression()), !dbg !2332
  %3 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2333
  %tangents = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %3, i32 0, i32 5, !dbg !2334
  %4 = load [4 x float]*, [4 x float]** %tangents, align 8, !dbg !2334
  %5 = load %struct.BKEMeshToTangent*, %struct.BKEMeshToTangent** %p_mesh, align 8, !dbg !2335
  %mpolys = getelementptr inbounds %struct.BKEMeshToTangent, %struct.BKEMeshToTangent* %5, i32 0, i32 0, !dbg !2336
  %6 = load %struct.MPoly*, %struct.MPoly** %mpolys, align 8, !dbg !2336
  %7 = load i32, i32* %face_idx.addr, align 4, !dbg !2337
  %idxprom = sext i32 %7 to i64, !dbg !2335
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %6, i64 %idxprom, !dbg !2335
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx, i32 0, i32 0, !dbg !2338
  %8 = load i32, i32* %loopstart, align 4, !dbg !2338
  %9 = load i32, i32* %vert_idx.addr, align 4, !dbg !2339
  %add = add nsw i32 %8, %9, !dbg !2340
  %idxprom1 = sext i32 %add to i64, !dbg !2333
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 %idxprom1, !dbg !2333
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx2, i64 0, i64 0, !dbg !2333
  store float* %arraydecay, float** %p_res, align 8, !dbg !2332
  %10 = load float*, float** %p_res, align 8, !dbg !2341
  %11 = load float*, float** %fv_tangent.addr, align 8, !dbg !2342
  call void @copy_v3_v3(float* %10, float* %11), !dbg !2343
  %12 = load float, float* %face_sign.addr, align 4, !dbg !2344
  %13 = load float*, float** %p_res, align 8, !dbg !2345
  %arrayidx3 = getelementptr inbounds float, float* %13, i64 3, !dbg !2345
  store float %12, float* %arrayidx3, align 4, !dbg !2346
  ret void, !dbg !2347
}

declare dso_local i32 @genTangSpaceDefault(%struct.SMikkTSpaceContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_loop_tangents(%struct.Mesh* %mesh, i8* %uvmap, [4 x float]* %r_looptangents, %struct.ReportList* %reports) #0 !dbg !2348 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  %uvmap.addr = alloca i8*, align 8
  %r_looptangents.addr = alloca [4 x float]*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %loopuvs = alloca %struct.MLoopUV*, align 8
  %loopnors = alloca [3 x float]*, align 8
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !2353, metadata !DIExpression()), !dbg !2354
  store i8* %uvmap, i8** %uvmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uvmap.addr, metadata !2355, metadata !DIExpression()), !dbg !2356
  store [4 x float]* %r_looptangents, [4 x float]** %r_looptangents.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %r_looptangents.addr, metadata !2357, metadata !DIExpression()), !dbg !2358
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !2359, metadata !DIExpression()), !dbg !2360
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %loopuvs, metadata !2361, metadata !DIExpression()), !dbg !2362
  call void @llvm.dbg.declare(metadata [3 x float]** %loopnors, metadata !2363, metadata !DIExpression()), !dbg !2364
  %0 = load i8*, i8** %uvmap.addr, align 8, !dbg !2365
  %tobool = icmp ne i8* %0, null, !dbg !2365
  br i1 %tobool, label %if.then, label %if.else, !dbg !2367

if.then:                                          ; preds = %entry
  %1 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2368
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 25, !dbg !2370
  %2 = load i8*, i8** %uvmap.addr, align 8, !dbg !2371
  %call = call i8* @CustomData_get_layer_named(%struct.CustomData* %ldata, i32 16, i8* %2), !dbg !2372
  %3 = bitcast i8* %call to %struct.MLoopUV*, !dbg !2372
  store %struct.MLoopUV* %3, %struct.MLoopUV** %loopuvs, align 8, !dbg !2373
  br label %if.end, !dbg !2374

if.else:                                          ; preds = %entry
  %4 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2375
  %ldata1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 25, !dbg !2377
  %call2 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata1, i32 16), !dbg !2378
  %5 = bitcast i8* %call2 to %struct.MLoopUV*, !dbg !2378
  store %struct.MLoopUV* %5, %struct.MLoopUV** %loopuvs, align 8, !dbg !2379
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.MLoopUV*, %struct.MLoopUV** %loopuvs, align 8, !dbg !2380
  %tobool3 = icmp ne %struct.MLoopUV* %6, null, !dbg !2380
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !2382

if.then4:                                         ; preds = %if.end
  %7 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !2383
  %8 = load i8*, i8** %uvmap.addr, align 8, !dbg !2385
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %7, i32 32, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.6, i64 0, i64 0), i8* %8), !dbg !2386
  br label %return, !dbg !2387

if.end5:                                          ; preds = %if.end
  %9 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2388
  %ldata6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 25, !dbg !2389
  %call7 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata6, i32 8), !dbg !2390
  %10 = bitcast i8* %call7 to [3 x float]*, !dbg !2390
  store [3 x float]* %10, [3 x float]** %loopnors, align 8, !dbg !2391
  %11 = load [3 x float]*, [3 x float]** %loopnors, align 8, !dbg !2392
  %tobool8 = icmp ne [3 x float]* %11, null, !dbg !2392
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !2394

if.then9:                                         ; preds = %if.end5
  %12 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !2395
  call void @BKE_report(%struct.ReportList* %12, i32 32, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.7, i64 0, i64 0)), !dbg !2397
  br label %return, !dbg !2398

if.end10:                                         ; preds = %if.end5
  %13 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2399
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 15, !dbg !2400
  %14 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2400
  %15 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2401
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 26, !dbg !2402
  %16 = load i32, i32* %totvert, align 8, !dbg !2402
  %17 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2403
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 9, !dbg !2404
  %18 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !2404
  %19 = load [4 x float]*, [4 x float]** %r_looptangents.addr, align 8, !dbg !2405
  %20 = load [3 x float]*, [3 x float]** %loopnors, align 8, !dbg !2406
  %21 = load %struct.MLoopUV*, %struct.MLoopUV** %loopuvs, align 8, !dbg !2407
  %22 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2408
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 31, !dbg !2409
  %23 = load i32, i32* %totloop, align 4, !dbg !2409
  %24 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2410
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 7, !dbg !2411
  %25 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !2411
  %26 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !2412
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 30, !dbg !2413
  %27 = load i32, i32* %totpoly, align 8, !dbg !2413
  %28 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !2414
  call void @BKE_mesh_loop_tangents_ex(%struct.MVert* %14, i32 %16, %struct.MLoop* %18, [4 x float]* %19, [3 x float]* %20, %struct.MLoopUV* %21, i32 %23, %struct.MPoly* %25, i32 %27, %struct.ReportList* %28), !dbg !2415
  br label %return, !dbg !2416

return:                                           ; preds = %if.end10, %if.then9, %if.then4
  ret void, !dbg !2416
}

declare dso_local i8* @CustomData_get_layer_named(%struct.CustomData*, i32, i8*) #2

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_calc_ngon_normal(%struct.MPoly* %mpoly, %struct.MLoop* %loopstart, %struct.MVert* %mvert, float* %normal) #0 !dbg !2417 {
entry:
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %normal.addr = alloca float*, align 8
  %nverts = alloca i32, align 4
  %v_prev = alloca float*, align 8
  %v_curr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !2418, metadata !DIExpression()), !dbg !2419
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !2420, metadata !DIExpression()), !dbg !2421
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !2422, metadata !DIExpression()), !dbg !2423
  store float* %normal, float** %normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal.addr, metadata !2424, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.declare(metadata i32* %nverts, metadata !2426, metadata !DIExpression()), !dbg !2427
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2428
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !2429
  %1 = load i32, i32* %totloop, align 4, !dbg !2429
  store i32 %1, i32* %nverts, align 4, !dbg !2427
  call void @llvm.dbg.declare(metadata float** %v_prev, metadata !2430, metadata !DIExpression()), !dbg !2431
  %2 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2432
  %3 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2433
  %4 = load i32, i32* %nverts, align 4, !dbg !2434
  %sub = sub nsw i32 %4, 1, !dbg !2435
  %idxprom = sext i32 %sub to i64, !dbg !2433
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %3, i64 %idxprom, !dbg !2433
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !2436
  %5 = load i32, i32* %v, align 4, !dbg !2436
  %idxprom1 = zext i32 %5 to i64, !dbg !2432
  %arrayidx2 = getelementptr inbounds %struct.MVert, %struct.MVert* %2, i64 %idxprom1, !dbg !2432
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx2, i32 0, i32 0, !dbg !2437
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2432
  store float* %arraydecay, float** %v_prev, align 8, !dbg !2431
  call void @llvm.dbg.declare(metadata float** %v_curr, metadata !2438, metadata !DIExpression()), !dbg !2439
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2440, metadata !DIExpression()), !dbg !2441
  %6 = load float*, float** %normal.addr, align 8, !dbg !2442
  call void @zero_v3(float* %6), !dbg !2443
  store i32 0, i32* %i, align 4, !dbg !2444
  br label %for.cond, !dbg !2446

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !2447
  %8 = load i32, i32* %nverts, align 4, !dbg !2449
  %cmp = icmp slt i32 %7, %8, !dbg !2450
  br i1 %cmp, label %for.body, label %for.end, !dbg !2451

for.body:                                         ; preds = %for.cond
  %9 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2452
  %10 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2454
  %11 = load i32, i32* %i, align 4, !dbg !2455
  %idxprom3 = sext i32 %11 to i64, !dbg !2454
  %arrayidx4 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %10, i64 %idxprom3, !dbg !2454
  %v5 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx4, i32 0, i32 0, !dbg !2456
  %12 = load i32, i32* %v5, align 4, !dbg !2456
  %idxprom6 = zext i32 %12 to i64, !dbg !2452
  %arrayidx7 = getelementptr inbounds %struct.MVert, %struct.MVert* %9, i64 %idxprom6, !dbg !2452
  %co8 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx7, i32 0, i32 0, !dbg !2457
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %co8, i64 0, i64 0, !dbg !2452
  store float* %arraydecay9, float** %v_curr, align 8, !dbg !2458
  %13 = load float*, float** %normal.addr, align 8, !dbg !2459
  %14 = load float*, float** %v_prev, align 8, !dbg !2460
  %15 = load float*, float** %v_curr, align 8, !dbg !2461
  call void @add_newell_cross_v3_v3v3(float* %13, float* %14, float* %15), !dbg !2462
  %16 = load float*, float** %v_curr, align 8, !dbg !2463
  store float* %16, float** %v_prev, align 8, !dbg !2464
  br label %for.inc, !dbg !2465

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !2466
  %inc = add nsw i32 %17, 1, !dbg !2466
  store i32 %inc, i32* %i, align 4, !dbg !2466
  br label %for.cond, !dbg !2467, !llvm.loop !2468

for.end:                                          ; preds = %for.cond
  %18 = load float*, float** %normal.addr, align 8, !dbg !2470
  %call = call float @normalize_v3(float* %18), !dbg !2470
  %cmp10 = fcmp oeq float %call, 0.000000e+00, !dbg !2470
  br i1 %cmp10, label %if.then, label %if.end, !dbg !2472

if.then:                                          ; preds = %for.end
  %19 = load float*, float** %normal.addr, align 8, !dbg !2473
  %arrayidx11 = getelementptr inbounds float, float* %19, i64 2, !dbg !2473
  store float 1.000000e+00, float* %arrayidx11, align 4, !dbg !2475
  br label %if.end, !dbg !2476

if.end:                                           ; preds = %if.then, %for.end
  ret void, !dbg !2477
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_poly_normal_coords(%struct.MPoly* %mpoly, %struct.MLoop* %loopstart, [3 x float]* %vertex_coords, float* %no) #0 !dbg !2478 {
entry:
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %vertex_coords.addr = alloca [3 x float]*, align 8
  %no.addr = alloca float*, align 8
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !2481, metadata !DIExpression()), !dbg !2482
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !2483, metadata !DIExpression()), !dbg !2484
  store [3 x float]* %vertex_coords, [3 x float]** %vertex_coords.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertex_coords.addr, metadata !2485, metadata !DIExpression()), !dbg !2486
  store float* %no, float** %no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %no.addr, metadata !2487, metadata !DIExpression()), !dbg !2488
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2489
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !2491
  %1 = load i32, i32* %totloop, align 4, !dbg !2491
  %cmp = icmp sgt i32 %1, 4, !dbg !2492
  br i1 %cmp, label %if.then, label %if.else, !dbg !2493

if.then:                                          ; preds = %entry
  %2 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2494
  %3 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2496
  %4 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2497
  %5 = load float*, float** %no.addr, align 8, !dbg !2498
  call void @mesh_calc_ngon_normal_coords(%struct.MPoly* %2, %struct.MLoop* %3, [3 x float]* %4, float* %5), !dbg !2499
  br label %if.end45, !dbg !2500

if.else:                                          ; preds = %entry
  %6 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2501
  %totloop1 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %6, i32 0, i32 1, !dbg !2503
  %7 = load i32, i32* %totloop1, align 4, !dbg !2503
  %cmp2 = icmp eq i32 %7, 3, !dbg !2504
  br i1 %cmp2, label %if.then3, label %if.else15, !dbg !2505

if.then3:                                         ; preds = %if.else
  %8 = load float*, float** %no.addr, align 8, !dbg !2506
  %9 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2508
  %10 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2509
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %10, i64 0, !dbg !2509
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !2510
  %11 = load i32, i32* %v, align 4, !dbg !2510
  %idxprom = zext i32 %11 to i64, !dbg !2508
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %9, i64 %idxprom, !dbg !2508
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !2508
  %12 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2511
  %13 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2512
  %arrayidx5 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %13, i64 1, !dbg !2512
  %v6 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx5, i32 0, i32 0, !dbg !2513
  %14 = load i32, i32* %v6, align 4, !dbg !2513
  %idxprom7 = zext i32 %14 to i64, !dbg !2511
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 %idxprom7, !dbg !2511
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !2511
  %15 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2514
  %16 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2515
  %arrayidx10 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %16, i64 2, !dbg !2515
  %v11 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx10, i32 0, i32 0, !dbg !2516
  %17 = load i32, i32* %v11, align 4, !dbg !2516
  %idxprom12 = zext i32 %17 to i64, !dbg !2514
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %15, i64 %idxprom12, !dbg !2514
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !2514
  %call = call float @normal_tri_v3(float* %8, float* %arraydecay, float* %arraydecay9, float* %arraydecay14), !dbg !2517
  br label %if.end44, !dbg !2518

if.else15:                                        ; preds = %if.else
  %18 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2519
  %totloop16 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i32 0, i32 1, !dbg !2521
  %19 = load i32, i32* %totloop16, align 4, !dbg !2521
  %cmp17 = icmp eq i32 %19, 4, !dbg !2522
  br i1 %cmp17, label %if.then18, label %if.else40, !dbg !2523

if.then18:                                        ; preds = %if.else15
  %20 = load float*, float** %no.addr, align 8, !dbg !2524
  %21 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2526
  %22 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2527
  %arrayidx19 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %22, i64 0, !dbg !2527
  %v20 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx19, i32 0, i32 0, !dbg !2528
  %23 = load i32, i32* %v20, align 4, !dbg !2528
  %idxprom21 = zext i32 %23 to i64, !dbg !2526
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %21, i64 %idxprom21, !dbg !2526
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !2526
  %24 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2529
  %25 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2530
  %arrayidx24 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %25, i64 1, !dbg !2530
  %v25 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx24, i32 0, i32 0, !dbg !2531
  %26 = load i32, i32* %v25, align 4, !dbg !2531
  %idxprom26 = zext i32 %26 to i64, !dbg !2529
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %24, i64 %idxprom26, !dbg !2529
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !2529
  %27 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2532
  %28 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2533
  %arrayidx29 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %28, i64 2, !dbg !2533
  %v30 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx29, i32 0, i32 0, !dbg !2534
  %29 = load i32, i32* %v30, align 4, !dbg !2534
  %idxprom31 = zext i32 %29 to i64, !dbg !2532
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 %idxprom31, !dbg !2532
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx32, i64 0, i64 0, !dbg !2532
  %30 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2535
  %31 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2536
  %arrayidx34 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %31, i64 3, !dbg !2536
  %v35 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx34, i32 0, i32 0, !dbg !2537
  %32 = load i32, i32* %v35, align 4, !dbg !2537
  %idxprom36 = zext i32 %32 to i64, !dbg !2535
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %30, i64 %idxprom36, !dbg !2535
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx37, i64 0, i64 0, !dbg !2535
  %call39 = call float @normal_quad_v3(float* %20, float* %arraydecay23, float* %arraydecay28, float* %arraydecay33, float* %arraydecay38), !dbg !2538
  br label %if.end, !dbg !2539

if.else40:                                        ; preds = %if.else15
  %33 = load float*, float** %no.addr, align 8, !dbg !2540
  %arrayidx41 = getelementptr inbounds float, float* %33, i64 0, !dbg !2540
  store float 0.000000e+00, float* %arrayidx41, align 4, !dbg !2542
  %34 = load float*, float** %no.addr, align 8, !dbg !2543
  %arrayidx42 = getelementptr inbounds float, float* %34, i64 1, !dbg !2543
  store float 0.000000e+00, float* %arrayidx42, align 4, !dbg !2544
  %35 = load float*, float** %no.addr, align 8, !dbg !2545
  %arrayidx43 = getelementptr inbounds float, float* %35, i64 2, !dbg !2545
  store float 1.000000e+00, float* %arrayidx43, align 4, !dbg !2546
  br label %if.end

if.end:                                           ; preds = %if.else40, %if.then18
  br label %if.end44

if.end44:                                         ; preds = %if.end, %if.then3
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then
  ret void, !dbg !2547
}

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_calc_ngon_normal_coords(%struct.MPoly* %mpoly, %struct.MLoop* %loopstart, [3 x float]* %vertex_coords, float* %normal) #0 !dbg !2548 {
entry:
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %vertex_coords.addr = alloca [3 x float]*, align 8
  %normal.addr = alloca float*, align 8
  %nverts = alloca i32, align 4
  %v_prev = alloca float*, align 8
  %v_curr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !2549, metadata !DIExpression()), !dbg !2550
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !2551, metadata !DIExpression()), !dbg !2552
  store [3 x float]* %vertex_coords, [3 x float]** %vertex_coords.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertex_coords.addr, metadata !2553, metadata !DIExpression()), !dbg !2554
  store float* %normal, float** %normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal.addr, metadata !2555, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.declare(metadata i32* %nverts, metadata !2557, metadata !DIExpression()), !dbg !2558
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2559
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !2560
  %1 = load i32, i32* %totloop, align 4, !dbg !2560
  store i32 %1, i32* %nverts, align 4, !dbg !2558
  call void @llvm.dbg.declare(metadata float** %v_prev, metadata !2561, metadata !DIExpression()), !dbg !2562
  %2 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2563
  %3 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2564
  %4 = load i32, i32* %nverts, align 4, !dbg !2565
  %sub = sub nsw i32 %4, 1, !dbg !2566
  %idxprom = sext i32 %sub to i64, !dbg !2564
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %3, i64 %idxprom, !dbg !2564
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !2567
  %5 = load i32, i32* %v, align 4, !dbg !2567
  %idxprom1 = zext i32 %5 to i64, !dbg !2563
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 %idxprom1, !dbg !2563
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !2563
  store float* %arraydecay, float** %v_prev, align 8, !dbg !2562
  call void @llvm.dbg.declare(metadata float** %v_curr, metadata !2568, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2570, metadata !DIExpression()), !dbg !2571
  %6 = load float*, float** %normal.addr, align 8, !dbg !2572
  call void @zero_v3(float* %6), !dbg !2573
  store i32 0, i32* %i, align 4, !dbg !2574
  br label %for.cond, !dbg !2576

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !2577
  %8 = load i32, i32* %nverts, align 4, !dbg !2579
  %cmp = icmp slt i32 %7, %8, !dbg !2580
  br i1 %cmp, label %for.body, label %for.end, !dbg !2581

for.body:                                         ; preds = %for.cond
  %9 = load [3 x float]*, [3 x float]** %vertex_coords.addr, align 8, !dbg !2582
  %10 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2584
  %11 = load i32, i32* %i, align 4, !dbg !2585
  %idxprom3 = sext i32 %11 to i64, !dbg !2584
  %arrayidx4 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %10, i64 %idxprom3, !dbg !2584
  %v5 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx4, i32 0, i32 0, !dbg !2586
  %12 = load i32, i32* %v5, align 4, !dbg !2586
  %idxprom6 = zext i32 %12 to i64, !dbg !2582
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %9, i64 %idxprom6, !dbg !2582
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !2582
  store float* %arraydecay8, float** %v_curr, align 8, !dbg !2587
  %13 = load float*, float** %normal.addr, align 8, !dbg !2588
  %14 = load float*, float** %v_prev, align 8, !dbg !2589
  %15 = load float*, float** %v_curr, align 8, !dbg !2590
  call void @add_newell_cross_v3_v3v3(float* %13, float* %14, float* %15), !dbg !2591
  %16 = load float*, float** %v_curr, align 8, !dbg !2592
  store float* %16, float** %v_prev, align 8, !dbg !2593
  br label %for.inc, !dbg !2594

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !2595
  %inc = add nsw i32 %17, 1, !dbg !2595
  store i32 %inc, i32* %i, align 4, !dbg !2595
  br label %for.cond, !dbg !2596, !llvm.loop !2597

for.end:                                          ; preds = %for.cond
  %18 = load float*, float** %normal.addr, align 8, !dbg !2599
  %call = call float @normalize_v3(float* %18), !dbg !2599
  %cmp9 = fcmp oeq float %call, 0.000000e+00, !dbg !2599
  br i1 %cmp9, label %if.then, label %if.end, !dbg !2601

if.then:                                          ; preds = %for.end
  %19 = load float*, float** %normal.addr, align 8, !dbg !2602
  %arrayidx10 = getelementptr inbounds float, float* %19, i64 2, !dbg !2602
  store float 1.000000e+00, float* %arrayidx10, align 4, !dbg !2604
  br label %if.end, !dbg !2605

if.end:                                           ; preds = %if.then, %for.end
  ret void, !dbg !2606
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_poly_center(%struct.MPoly* %mpoly, %struct.MLoop* %loopstart, %struct.MVert* %mvarray, float* %cent) #0 !dbg !2607 {
entry:
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %mvarray.addr = alloca %struct.MVert*, align 8
  %cent.addr = alloca float*, align 8
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !2608, metadata !DIExpression()), !dbg !2609
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !2610, metadata !DIExpression()), !dbg !2611
  store %struct.MVert* %mvarray, %struct.MVert** %mvarray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvarray.addr, metadata !2612, metadata !DIExpression()), !dbg !2613
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !2614, metadata !DIExpression()), !dbg !2615
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2616
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !2618
  %1 = load i32, i32* %totloop, align 4, !dbg !2618
  %cmp = icmp eq i32 %1, 3, !dbg !2619
  br i1 %cmp, label %if.then, label %if.else, !dbg !2620

if.then:                                          ; preds = %entry
  %2 = load float*, float** %cent.addr, align 8, !dbg !2621
  %3 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2623
  %4 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2624
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %4, i64 0, !dbg !2624
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !2625
  %5 = load i32, i32* %v, align 4, !dbg !2625
  %idxprom = zext i32 %5 to i64, !dbg !2623
  %arrayidx1 = getelementptr inbounds %struct.MVert, %struct.MVert* %3, i64 %idxprom, !dbg !2623
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx1, i32 0, i32 0, !dbg !2626
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2623
  %6 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2627
  %7 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2628
  %arrayidx2 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %7, i64 1, !dbg !2628
  %v3 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx2, i32 0, i32 0, !dbg !2629
  %8 = load i32, i32* %v3, align 4, !dbg !2629
  %idxprom4 = zext i32 %8 to i64, !dbg !2627
  %arrayidx5 = getelementptr inbounds %struct.MVert, %struct.MVert* %6, i64 %idxprom4, !dbg !2627
  %co6 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx5, i32 0, i32 0, !dbg !2630
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co6, i64 0, i64 0, !dbg !2627
  %9 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2631
  %10 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2632
  %arrayidx8 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %10, i64 2, !dbg !2632
  %v9 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx8, i32 0, i32 0, !dbg !2633
  %11 = load i32, i32* %v9, align 4, !dbg !2633
  %idxprom10 = zext i32 %11 to i64, !dbg !2631
  %arrayidx11 = getelementptr inbounds %struct.MVert, %struct.MVert* %9, i64 %idxprom10, !dbg !2631
  %co12 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx11, i32 0, i32 0, !dbg !2634
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %co12, i64 0, i64 0, !dbg !2631
  call void @cent_tri_v3(float* %2, float* %arraydecay, float* %arraydecay7, float* %arraydecay13), !dbg !2635
  br label %if.end42, !dbg !2636

if.else:                                          ; preds = %entry
  %12 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2637
  %totloop14 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %12, i32 0, i32 1, !dbg !2639
  %13 = load i32, i32* %totloop14, align 4, !dbg !2639
  %cmp15 = icmp eq i32 %13, 4, !dbg !2640
  br i1 %cmp15, label %if.then16, label %if.else41, !dbg !2641

if.then16:                                        ; preds = %if.else
  %14 = load float*, float** %cent.addr, align 8, !dbg !2642
  %15 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2644
  %16 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2645
  %arrayidx17 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %16, i64 0, !dbg !2645
  %v18 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx17, i32 0, i32 0, !dbg !2646
  %17 = load i32, i32* %v18, align 4, !dbg !2646
  %idxprom19 = zext i32 %17 to i64, !dbg !2644
  %arrayidx20 = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i64 %idxprom19, !dbg !2644
  %co21 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx20, i32 0, i32 0, !dbg !2647
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co21, i64 0, i64 0, !dbg !2644
  %18 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2648
  %19 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2649
  %arrayidx23 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %19, i64 1, !dbg !2649
  %v24 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx23, i32 0, i32 0, !dbg !2650
  %20 = load i32, i32* %v24, align 4, !dbg !2650
  %idxprom25 = zext i32 %20 to i64, !dbg !2648
  %arrayidx26 = getelementptr inbounds %struct.MVert, %struct.MVert* %18, i64 %idxprom25, !dbg !2648
  %co27 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx26, i32 0, i32 0, !dbg !2651
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co27, i64 0, i64 0, !dbg !2648
  %21 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2652
  %22 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2653
  %arrayidx29 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %22, i64 2, !dbg !2653
  %v30 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx29, i32 0, i32 0, !dbg !2654
  %23 = load i32, i32* %v30, align 4, !dbg !2654
  %idxprom31 = zext i32 %23 to i64, !dbg !2652
  %arrayidx32 = getelementptr inbounds %struct.MVert, %struct.MVert* %21, i64 %idxprom31, !dbg !2652
  %co33 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx32, i32 0, i32 0, !dbg !2655
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %co33, i64 0, i64 0, !dbg !2652
  %24 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2656
  %25 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2657
  %arrayidx35 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %25, i64 3, !dbg !2657
  %v36 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx35, i32 0, i32 0, !dbg !2658
  %26 = load i32, i32* %v36, align 4, !dbg !2658
  %idxprom37 = zext i32 %26 to i64, !dbg !2656
  %arrayidx38 = getelementptr inbounds %struct.MVert, %struct.MVert* %24, i64 %idxprom37, !dbg !2656
  %co39 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx38, i32 0, i32 0, !dbg !2659
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !2656
  call void @cent_quad_v3(float* %14, float* %arraydecay22, float* %arraydecay28, float* %arraydecay34, float* %arraydecay40), !dbg !2660
  br label %if.end, !dbg !2661

if.else41:                                        ; preds = %if.else
  %27 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2662
  %28 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2664
  %29 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2665
  %30 = load float*, float** %cent.addr, align 8, !dbg !2666
  call void @mesh_calc_ngon_center(%struct.MPoly* %27, %struct.MLoop* %28, %struct.MVert* %29, float* %30), !dbg !2667
  br label %if.end

if.end:                                           ; preds = %if.else41, %if.then16
  br label %if.end42

if.end42:                                         ; preds = %if.end, %if.then
  ret void, !dbg !2668
}

declare dso_local void @cent_tri_v3(float*, float*, float*, float*) #2

declare dso_local void @cent_quad_v3(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_calc_ngon_center(%struct.MPoly* %mpoly, %struct.MLoop* %loopstart, %struct.MVert* %mvert, float* %cent) #0 !dbg !2669 {
entry:
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %cent.addr = alloca float*, align 8
  %w = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !2670, metadata !DIExpression()), !dbg !2671
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !2672, metadata !DIExpression()), !dbg !2673
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !2674, metadata !DIExpression()), !dbg !2675
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !2676, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.declare(metadata float* %w, metadata !2678, metadata !DIExpression()), !dbg !2679
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2680
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !2681
  %1 = load i32, i32* %totloop, align 4, !dbg !2681
  %conv = sitofp i32 %1 to float, !dbg !2682
  %div = fdiv float 1.000000e+00, %conv, !dbg !2683
  store float %div, float* %w, align 4, !dbg !2679
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2684, metadata !DIExpression()), !dbg !2685
  %2 = load float*, float** %cent.addr, align 8, !dbg !2686
  call void @zero_v3(float* %2), !dbg !2687
  store i32 0, i32* %i, align 4, !dbg !2688
  br label %for.cond, !dbg !2690

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !2691
  %4 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2693
  %totloop1 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %4, i32 0, i32 1, !dbg !2694
  %5 = load i32, i32* %totloop1, align 4, !dbg !2694
  %cmp = icmp slt i32 %3, %5, !dbg !2695
  br i1 %cmp, label %for.body, label %for.end, !dbg !2696

for.body:                                         ; preds = %for.cond
  %6 = load float*, float** %cent.addr, align 8, !dbg !2697
  %7 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2699
  %8 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2700
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %8, i32 1, !dbg !2700
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %loopstart.addr, align 8, !dbg !2700
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %8, i32 0, i32 0, !dbg !2701
  %9 = load i32, i32* %v, align 4, !dbg !2701
  %idxprom = zext i32 %9 to i64, !dbg !2699
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i64 %idxprom, !dbg !2699
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !2702
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2699
  %10 = load float, float* %w, align 4, !dbg !2703
  call void @madd_v3_v3fl(float* %6, float* %arraydecay, float %10), !dbg !2704
  br label %for.inc, !dbg !2705

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !2706
  %inc = add nsw i32 %11, 1, !dbg !2706
  store i32 %inc, i32* %i, align 4, !dbg !2706
  br label %for.cond, !dbg !2707, !llvm.loop !2708

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2710
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @BKE_mesh_calc_poly_area(%struct.MPoly* %mpoly, %struct.MLoop* %loopstart, %struct.MVert* %mvarray) #0 !dbg !2711 {
entry:
  %retval = alloca float, align 4
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %mvarray.addr = alloca %struct.MVert*, align 8
  %i = alloca i32, align 4
  %l_iter = alloca %struct.MLoop*, align 8
  %area = alloca float, align 4
  %vertexcos = alloca [3 x float]*, align 8
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !2714, metadata !DIExpression()), !dbg !2715
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !2716, metadata !DIExpression()), !dbg !2717
  store %struct.MVert* %mvarray, %struct.MVert** %mvarray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvarray.addr, metadata !2718, metadata !DIExpression()), !dbg !2719
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2720
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !2722
  %1 = load i32, i32* %totloop, align 4, !dbg !2722
  %cmp = icmp eq i32 %1, 3, !dbg !2723
  br i1 %cmp, label %if.then, label %if.else, !dbg !2724

if.then:                                          ; preds = %entry
  %2 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2725
  %3 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2727
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %3, i64 0, !dbg !2727
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !2728
  %4 = load i32, i32* %v, align 4, !dbg !2728
  %idxprom = zext i32 %4 to i64, !dbg !2725
  %arrayidx1 = getelementptr inbounds %struct.MVert, %struct.MVert* %2, i64 %idxprom, !dbg !2725
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx1, i32 0, i32 0, !dbg !2729
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2725
  %5 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2730
  %6 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2731
  %arrayidx2 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %6, i64 1, !dbg !2731
  %v3 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx2, i32 0, i32 0, !dbg !2732
  %7 = load i32, i32* %v3, align 4, !dbg !2732
  %idxprom4 = zext i32 %7 to i64, !dbg !2730
  %arrayidx5 = getelementptr inbounds %struct.MVert, %struct.MVert* %5, i64 %idxprom4, !dbg !2730
  %co6 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx5, i32 0, i32 0, !dbg !2733
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co6, i64 0, i64 0, !dbg !2730
  %8 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2734
  %9 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2735
  %arrayidx8 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %9, i64 2, !dbg !2735
  %v9 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx8, i32 0, i32 0, !dbg !2736
  %10 = load i32, i32* %v9, align 4, !dbg !2736
  %idxprom10 = zext i32 %10 to i64, !dbg !2734
  %arrayidx11 = getelementptr inbounds %struct.MVert, %struct.MVert* %8, i64 %idxprom10, !dbg !2734
  %co12 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx11, i32 0, i32 0, !dbg !2737
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %co12, i64 0, i64 0, !dbg !2734
  %call = call float @area_tri_v3(float* %arraydecay, float* %arraydecay7, float* %arraydecay13), !dbg !2738
  store float %call, float* %retval, align 4, !dbg !2739
  br label %return, !dbg !2739

if.else:                                          ; preds = %entry
  %11 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2740
  %totloop14 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %11, i32 0, i32 1, !dbg !2742
  %12 = load i32, i32* %totloop14, align 4, !dbg !2742
  %cmp15 = icmp eq i32 %12, 4, !dbg !2743
  br i1 %cmp15, label %if.then16, label %if.else42, !dbg !2744

if.then16:                                        ; preds = %if.else
  %13 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2745
  %14 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2747
  %arrayidx17 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %14, i64 0, !dbg !2747
  %v18 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx17, i32 0, i32 0, !dbg !2748
  %15 = load i32, i32* %v18, align 4, !dbg !2748
  %idxprom19 = zext i32 %15 to i64, !dbg !2745
  %arrayidx20 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i64 %idxprom19, !dbg !2745
  %co21 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx20, i32 0, i32 0, !dbg !2749
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co21, i64 0, i64 0, !dbg !2745
  %16 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2750
  %17 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2751
  %arrayidx23 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %17, i64 1, !dbg !2751
  %v24 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx23, i32 0, i32 0, !dbg !2752
  %18 = load i32, i32* %v24, align 4, !dbg !2752
  %idxprom25 = zext i32 %18 to i64, !dbg !2750
  %arrayidx26 = getelementptr inbounds %struct.MVert, %struct.MVert* %16, i64 %idxprom25, !dbg !2750
  %co27 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx26, i32 0, i32 0, !dbg !2753
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co27, i64 0, i64 0, !dbg !2750
  %19 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2754
  %20 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2755
  %arrayidx29 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %20, i64 2, !dbg !2755
  %v30 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx29, i32 0, i32 0, !dbg !2756
  %21 = load i32, i32* %v30, align 4, !dbg !2756
  %idxprom31 = zext i32 %21 to i64, !dbg !2754
  %arrayidx32 = getelementptr inbounds %struct.MVert, %struct.MVert* %19, i64 %idxprom31, !dbg !2754
  %co33 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx32, i32 0, i32 0, !dbg !2757
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %co33, i64 0, i64 0, !dbg !2754
  %22 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2758
  %23 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2759
  %arrayidx35 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %23, i64 3, !dbg !2759
  %v36 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx35, i32 0, i32 0, !dbg !2760
  %24 = load i32, i32* %v36, align 4, !dbg !2760
  %idxprom37 = zext i32 %24 to i64, !dbg !2758
  %arrayidx38 = getelementptr inbounds %struct.MVert, %struct.MVert* %22, i64 %idxprom37, !dbg !2758
  %co39 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx38, i32 0, i32 0, !dbg !2761
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !2758
  %call41 = call float @area_quad_v3(float* %arraydecay22, float* %arraydecay28, float* %arraydecay34, float* %arraydecay40), !dbg !2762
  store float %call41, float* %retval, align 4, !dbg !2763
  br label %return, !dbg !2763

if.else42:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2764, metadata !DIExpression()), !dbg !2766
  call void @llvm.dbg.declare(metadata %struct.MLoop** %l_iter, metadata !2767, metadata !DIExpression()), !dbg !2768
  %25 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2769
  store %struct.MLoop* %25, %struct.MLoop** %l_iter, align 8, !dbg !2768
  call void @llvm.dbg.declare(metadata float* %area, metadata !2770, metadata !DIExpression()), !dbg !2771
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexcos, metadata !2772, metadata !DIExpression()), !dbg !2773
  %26 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2774
  %totloop43 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %26, i32 0, i32 1, !dbg !2774
  %27 = load i32, i32* %totloop43, align 4, !dbg !2774
  %conv = sext i32 %27 to i64, !dbg !2774
  %mul = mul i64 12, %conv, !dbg !2774
  %28 = alloca i8, i64 %mul, align 16, !dbg !2774
  %29 = bitcast i8* %28 to [3 x float]*, !dbg !2774
  store [3 x float]* %29, [3 x float]** %vertexcos, align 8, !dbg !2773
  store i32 0, i32* %i, align 4, !dbg !2775
  br label %for.cond, !dbg !2777

for.cond:                                         ; preds = %for.inc, %if.else42
  %30 = load i32, i32* %i, align 4, !dbg !2778
  %31 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2780
  %totloop44 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %31, i32 0, i32 1, !dbg !2781
  %32 = load i32, i32* %totloop44, align 4, !dbg !2781
  %cmp45 = icmp slt i32 %30, %32, !dbg !2782
  br i1 %cmp45, label %for.body, label %for.end, !dbg !2783

for.body:                                         ; preds = %for.cond
  %33 = load [3 x float]*, [3 x float]** %vertexcos, align 8, !dbg !2784
  %34 = load i32, i32* %i, align 4, !dbg !2786
  %idxprom47 = sext i32 %34 to i64, !dbg !2784
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %33, i64 %idxprom47, !dbg !2784
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 0, !dbg !2784
  %35 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2787
  %36 = load %struct.MLoop*, %struct.MLoop** %l_iter, align 8, !dbg !2788
  %v50 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %36, i32 0, i32 0, !dbg !2789
  %37 = load i32, i32* %v50, align 4, !dbg !2789
  %idxprom51 = zext i32 %37 to i64, !dbg !2787
  %arrayidx52 = getelementptr inbounds %struct.MVert, %struct.MVert* %35, i64 %idxprom51, !dbg !2787
  %co53 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx52, i32 0, i32 0, !dbg !2790
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %co53, i64 0, i64 0, !dbg !2787
  call void @copy_v3_v3(float* %arraydecay49, float* %arraydecay54), !dbg !2791
  br label %for.inc, !dbg !2792

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !2793
  %inc = add nsw i32 %38, 1, !dbg !2793
  store i32 %inc, i32* %i, align 4, !dbg !2793
  %39 = load %struct.MLoop*, %struct.MLoop** %l_iter, align 8, !dbg !2794
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %39, i32 1, !dbg !2794
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %l_iter, align 8, !dbg !2794
  br label %for.cond, !dbg !2795, !llvm.loop !2796

for.end:                                          ; preds = %for.cond
  %40 = load [3 x float]*, [3 x float]** %vertexcos, align 8, !dbg !2798
  %41 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2799
  %totloop55 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %41, i32 0, i32 1, !dbg !2800
  %42 = load i32, i32* %totloop55, align 4, !dbg !2800
  %call56 = call float @area_poly_v3([3 x float]* %40, i32 %42), !dbg !2801
  store float %call56, float* %area, align 4, !dbg !2802
  %43 = load float, float* %area, align 4, !dbg !2803
  store float %43, float* %retval, align 4, !dbg !2804
  br label %return, !dbg !2804

return:                                           ; preds = %for.end, %if.then16, %if.then
  %44 = load float, float* %retval, align 4, !dbg !2805
  ret float %44, !dbg !2805
}

declare dso_local float @area_tri_v3(float*, float*, float*) #2

declare dso_local float @area_quad_v3(float*, float*, float*, float*) #2

declare dso_local float @area_poly_v3([3 x float]*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_poly_angles(%struct.MPoly* %mpoly, %struct.MLoop* %loopstart, %struct.MVert* %mvarray, float* %angles) #0 !dbg !2806 {
entry:
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %mvarray.addr = alloca %struct.MVert*, align 8
  %angles.addr = alloca float*, align 8
  %nor_prev = alloca [3 x float], align 4
  %nor_next = alloca [3 x float], align 4
  %i_this = alloca i32, align 4
  %i_next = alloca i32, align 4
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !2807, metadata !DIExpression()), !dbg !2808
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !2809, metadata !DIExpression()), !dbg !2810
  store %struct.MVert* %mvarray, %struct.MVert** %mvarray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvarray.addr, metadata !2811, metadata !DIExpression()), !dbg !2812
  store float* %angles, float** %angles.addr, align 8
  call void @llvm.dbg.declare(metadata float** %angles.addr, metadata !2813, metadata !DIExpression()), !dbg !2814
  call void @llvm.dbg.declare(metadata [3 x float]* %nor_prev, metadata !2815, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.declare(metadata [3 x float]* %nor_next, metadata !2817, metadata !DIExpression()), !dbg !2818
  call void @llvm.dbg.declare(metadata i32* %i_this, metadata !2819, metadata !DIExpression()), !dbg !2820
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2821
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !2822
  %1 = load i32, i32* %totloop, align 4, !dbg !2822
  %sub = sub nsw i32 %1, 1, !dbg !2823
  store i32 %sub, i32* %i_this, align 4, !dbg !2820
  call void @llvm.dbg.declare(metadata i32* %i_next, metadata !2824, metadata !DIExpression()), !dbg !2825
  store i32 0, i32* %i_next, align 4, !dbg !2825
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor_prev, i64 0, i64 0, !dbg !2826
  %2 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2827
  %3 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2828
  %4 = load i32, i32* %i_this, align 4, !dbg !2829
  %sub1 = sub nsw i32 %4, 1, !dbg !2830
  %idxprom = sext i32 %sub1 to i64, !dbg !2828
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %3, i64 %idxprom, !dbg !2828
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !2831
  %5 = load i32, i32* %v, align 4, !dbg !2831
  %idxprom2 = zext i32 %5 to i64, !dbg !2827
  %arrayidx3 = getelementptr inbounds %struct.MVert, %struct.MVert* %2, i64 %idxprom2, !dbg !2827
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx3, i32 0, i32 0, !dbg !2832
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2827
  %6 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2833
  %7 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2834
  %8 = load i32, i32* %i_this, align 4, !dbg !2835
  %idxprom5 = sext i32 %8 to i64, !dbg !2834
  %arrayidx6 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %7, i64 %idxprom5, !dbg !2834
  %v7 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx6, i32 0, i32 0, !dbg !2836
  %9 = load i32, i32* %v7, align 4, !dbg !2836
  %idxprom8 = zext i32 %9 to i64, !dbg !2833
  %arrayidx9 = getelementptr inbounds %struct.MVert, %struct.MVert* %6, i64 %idxprom8, !dbg !2833
  %co10 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx9, i32 0, i32 0, !dbg !2837
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co10, i64 0, i64 0, !dbg !2833
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay4, float* %arraydecay11), !dbg !2838
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %nor_prev, i64 0, i64 0, !dbg !2839
  %call = call float @normalize_v3(float* %arraydecay12), !dbg !2840
  br label %while.cond, !dbg !2841

while.cond:                                       ; preds = %while.body, %entry
  %10 = load i32, i32* %i_next, align 4, !dbg !2842
  %11 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2843
  %totloop13 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %11, i32 0, i32 1, !dbg !2844
  %12 = load i32, i32* %totloop13, align 4, !dbg !2844
  %cmp = icmp slt i32 %10, %12, !dbg !2845
  br i1 %cmp, label %while.body, label %while.end, !dbg !2841

while.body:                                       ; preds = %while.cond
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %nor_next, i64 0, i64 0, !dbg !2846
  %13 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2848
  %14 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2849
  %15 = load i32, i32* %i_this, align 4, !dbg !2850
  %idxprom15 = sext i32 %15 to i64, !dbg !2849
  %arrayidx16 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %14, i64 %idxprom15, !dbg !2849
  %v17 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx16, i32 0, i32 0, !dbg !2851
  %16 = load i32, i32* %v17, align 4, !dbg !2851
  %idxprom18 = zext i32 %16 to i64, !dbg !2848
  %arrayidx19 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i64 %idxprom18, !dbg !2848
  %co20 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx19, i32 0, i32 0, !dbg !2852
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co20, i64 0, i64 0, !dbg !2848
  %17 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !2853
  %18 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !2854
  %19 = load i32, i32* %i_next, align 4, !dbg !2855
  %idxprom22 = sext i32 %19 to i64, !dbg !2854
  %arrayidx23 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %18, i64 %idxprom22, !dbg !2854
  %v24 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx23, i32 0, i32 0, !dbg !2856
  %20 = load i32, i32* %v24, align 4, !dbg !2856
  %idxprom25 = zext i32 %20 to i64, !dbg !2853
  %arrayidx26 = getelementptr inbounds %struct.MVert, %struct.MVert* %17, i64 %idxprom25, !dbg !2853
  %co27 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx26, i32 0, i32 0, !dbg !2857
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co27, i64 0, i64 0, !dbg !2853
  call void @sub_v3_v3v3(float* %arraydecay14, float* %arraydecay21, float* %arraydecay28), !dbg !2858
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %nor_next, i64 0, i64 0, !dbg !2859
  %call30 = call float @normalize_v3(float* %arraydecay29), !dbg !2860
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %nor_prev, i64 0, i64 0, !dbg !2861
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %nor_next, i64 0, i64 0, !dbg !2862
  %call33 = call float @angle_normalized_v3v3(float* %arraydecay31, float* %arraydecay32), !dbg !2863
  %21 = load float*, float** %angles.addr, align 8, !dbg !2864
  %22 = load i32, i32* %i_this, align 4, !dbg !2865
  %idxprom34 = sext i32 %22 to i64, !dbg !2864
  %arrayidx35 = getelementptr inbounds float, float* %21, i64 %idxprom34, !dbg !2864
  store float %call33, float* %arrayidx35, align 4, !dbg !2866
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %nor_prev, i64 0, i64 0, !dbg !2867
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %nor_next, i64 0, i64 0, !dbg !2868
  call void @copy_v3_v3(float* %arraydecay36, float* %arraydecay37), !dbg !2869
  %23 = load i32, i32* %i_next, align 4, !dbg !2870
  store i32 %23, i32* %i_this, align 4, !dbg !2871
  %24 = load i32, i32* %i_next, align 4, !dbg !2872
  %inc = add nsw i32 %24, 1, !dbg !2872
  store i32 %inc, i32* %i_next, align 4, !dbg !2872
  br label %while.cond, !dbg !2841, !llvm.loop !2873

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2875
}

declare dso_local float @angle_normalized_v3v3(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_poly_edgehash_insert(%struct.EdgeHash* %ehash, %struct.MPoly* %mp, %struct.MLoop* %mloop) #0 !dbg !2876 {
entry:
  %ehash.addr = alloca %struct.EdgeHash*, align 8
  %mp.addr = alloca %struct.MPoly*, align 8
  %mloop.addr = alloca %struct.MLoop*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %ml_next = alloca %struct.MLoop*, align 8
  %i = alloca i32, align 4
  store %struct.EdgeHash* %ehash, %struct.EdgeHash** %ehash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeHash** %ehash.addr, metadata !2887, metadata !DIExpression()), !dbg !2888
  store %struct.MPoly* %mp, %struct.MPoly** %mp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp.addr, metadata !2889, metadata !DIExpression()), !dbg !2890
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !2891, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !2893, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml_next, metadata !2895, metadata !DIExpression()), !dbg !2896
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2897, metadata !DIExpression()), !dbg !2898
  %0 = load %struct.MPoly*, %struct.MPoly** %mp.addr, align 8, !dbg !2899
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !2900
  %1 = load i32, i32* %totloop, align 4, !dbg !2900
  store i32 %1, i32* %i, align 4, !dbg !2898
  %2 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !2901
  store %struct.MLoop* %2, %struct.MLoop** %ml_next, align 8, !dbg !2902
  %3 = load %struct.MLoop*, %struct.MLoop** %ml_next, align 8, !dbg !2903
  %4 = load i32, i32* %i, align 4, !dbg !2904
  %sub = sub nsw i32 %4, 1, !dbg !2905
  %idxprom = sext i32 %sub to i64, !dbg !2903
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %3, i64 %idxprom, !dbg !2903
  store %struct.MLoop* %arrayidx, %struct.MLoop** %ml, align 8, !dbg !2906
  br label %while.cond, !dbg !2907

while.cond:                                       ; preds = %while.body, %entry
  %5 = load i32, i32* %i, align 4, !dbg !2908
  %dec = add nsw i32 %5, -1, !dbg !2908
  store i32 %dec, i32* %i, align 4, !dbg !2908
  %cmp = icmp ne i32 %5, 0, !dbg !2909
  br i1 %cmp, label %while.body, label %while.end, !dbg !2907

while.body:                                       ; preds = %while.cond
  %6 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash.addr, align 8, !dbg !2910
  %7 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !2912
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %7, i32 0, i32 0, !dbg !2913
  %8 = load i32, i32* %v, align 4, !dbg !2913
  %9 = load %struct.MLoop*, %struct.MLoop** %ml_next, align 8, !dbg !2914
  %v1 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %9, i32 0, i32 0, !dbg !2915
  %10 = load i32, i32* %v1, align 4, !dbg !2915
  %call = call zeroext i8 @BLI_edgehash_reinsert(%struct.EdgeHash* %6, i32 %8, i32 %10, i8* null), !dbg !2916
  %11 = load %struct.MLoop*, %struct.MLoop** %ml_next, align 8, !dbg !2917
  store %struct.MLoop* %11, %struct.MLoop** %ml, align 8, !dbg !2918
  %12 = load %struct.MLoop*, %struct.MLoop** %ml_next, align 8, !dbg !2919
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %12, i32 1, !dbg !2919
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml_next, align 8, !dbg !2919
  br label %while.cond, !dbg !2907, !llvm.loop !2920

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2922
}

declare dso_local zeroext i8 @BLI_edgehash_reinsert(%struct.EdgeHash*, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_poly_edgebitmap_insert(i32* %edge_bitmap, %struct.MPoly* %mp, %struct.MLoop* %mloop) #0 !dbg !2923 {
entry:
  %edge_bitmap.addr = alloca i32*, align 8
  %mp.addr = alloca %struct.MPoly*, align 8
  %mloop.addr = alloca %struct.MLoop*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %i = alloca i32, align 4
  store i32* %edge_bitmap, i32** %edge_bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %edge_bitmap.addr, metadata !2926, metadata !DIExpression()), !dbg !2927
  store %struct.MPoly* %mp, %struct.MPoly** %mp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp.addr, metadata !2928, metadata !DIExpression()), !dbg !2929
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !2930, metadata !DIExpression()), !dbg !2931
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !2932, metadata !DIExpression()), !dbg !2933
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2934, metadata !DIExpression()), !dbg !2935
  %0 = load %struct.MPoly*, %struct.MPoly** %mp.addr, align 8, !dbg !2936
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i32 0, i32 1, !dbg !2937
  %1 = load i32, i32* %totloop, align 4, !dbg !2937
  store i32 %1, i32* %i, align 4, !dbg !2935
  %2 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !2938
  store %struct.MLoop* %2, %struct.MLoop** %ml, align 8, !dbg !2939
  br label %while.cond, !dbg !2940

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %i, align 4, !dbg !2941
  %dec = add nsw i32 %3, -1, !dbg !2941
  store i32 %dec, i32* %i, align 4, !dbg !2941
  %cmp = icmp ne i32 %3, 0, !dbg !2942
  br i1 %cmp, label %while.body, label %while.end, !dbg !2940

while.body:                                       ; preds = %while.cond
  %4 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !2943
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %4, i32 0, i32 1, !dbg !2943
  %5 = load i32, i32* %e, align 4, !dbg !2943
  %and = and i32 %5, 31, !dbg !2943
  %shl = shl i32 1, %and, !dbg !2943
  %6 = load i32*, i32** %edge_bitmap.addr, align 8, !dbg !2943
  %7 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !2943
  %e1 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %7, i32 0, i32 1, !dbg !2943
  %8 = load i32, i32* %e1, align 4, !dbg !2943
  %shr = lshr i32 %8, 5, !dbg !2943
  %idxprom = zext i32 %shr to i64, !dbg !2943
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !2943
  %9 = load i32, i32* %arrayidx, align 4, !dbg !2943
  %or = or i32 %9, %shl, !dbg !2943
  store i32 %or, i32* %arrayidx, align 4, !dbg !2943
  %10 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !2945
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %10, i32 1, !dbg !2945
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !2945
  br label %while.cond, !dbg !2940, !llvm.loop !2946

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2948
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mesh_center_median(%struct.Mesh* %me, float* %cent) #0 !dbg !2949 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %cent.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !2952, metadata !DIExpression()), !dbg !2953
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !2954, metadata !DIExpression()), !dbg !2955
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2956, metadata !DIExpression()), !dbg !2957
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2958
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 26, !dbg !2959
  %1 = load i32, i32* %totvert, align 8, !dbg !2959
  store i32 %1, i32* %i, align 4, !dbg !2957
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !2960, metadata !DIExpression()), !dbg !2961
  %2 = load float*, float** %cent.addr, align 8, !dbg !2962
  call void @zero_v3(float* %2), !dbg !2963
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2964
  %mvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 15, !dbg !2966
  %4 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !2966
  store %struct.MVert* %4, %struct.MVert** %mvert, align 8, !dbg !2967
  br label %for.cond, !dbg !2968

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !2969
  %dec = add nsw i32 %5, -1, !dbg !2969
  store i32 %dec, i32* %i, align 4, !dbg !2969
  %tobool = icmp ne i32 %5, 0, !dbg !2971
  br i1 %tobool, label %for.body, label %for.end, !dbg !2971

for.body:                                         ; preds = %for.cond
  %6 = load float*, float** %cent.addr, align 8, !dbg !2972
  %7 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2974
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i32 0, i32 0, !dbg !2975
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2974
  call void @add_v3_v3(float* %6, float* %arraydecay), !dbg !2976
  br label %for.inc, !dbg !2977

for.inc:                                          ; preds = %for.body
  %8 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2978
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %8, i32 1, !dbg !2978
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !2978
  br label %for.cond, !dbg !2979, !llvm.loop !2980

for.end:                                          ; preds = %for.cond
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2982
  %totvert2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !2984
  %10 = load i32, i32* %totvert2, align 8, !dbg !2984
  %tobool3 = icmp ne i32 %10, 0, !dbg !2982
  br i1 %tobool3, label %if.then, label %if.end, !dbg !2985

if.then:                                          ; preds = %for.end
  %11 = load float*, float** %cent.addr, align 8, !dbg !2986
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2988
  %totvert4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 26, !dbg !2989
  %13 = load i32, i32* %totvert4, align 8, !dbg !2989
  %conv = sitofp i32 %13 to float, !dbg !2990
  %div = fdiv float 1.000000e+00, %conv, !dbg !2991
  call void @mul_v3_fl(float* %11, float %div), !dbg !2992
  br label %if.end, !dbg !2993

if.end:                                           ; preds = %if.then, %for.end
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2994
  %totvert5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 26, !dbg !2995
  %15 = load i32, i32* %totvert5, align 8, !dbg !2995
  %cmp = icmp ne i32 %15, 0, !dbg !2996
  %conv6 = zext i1 %cmp to i32, !dbg !2996
  %conv7 = trunc i32 %conv6 to i8, !dbg !2997
  ret i8 %conv7, !dbg !2998
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !2999 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3002, metadata !DIExpression()), !dbg !3003
  %0 = load float*, float** %r.addr, align 8, !dbg !3004
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3004
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !3005
  %1 = load float*, float** %r.addr, align 8, !dbg !3006
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !3006
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !3007
  %2 = load float*, float** %r.addr, align 8, !dbg !3008
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !3008
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !3009
  ret void, !dbg !3010
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !3011 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3012, metadata !DIExpression()), !dbg !3013
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3014, metadata !DIExpression()), !dbg !3015
  %0 = load float*, float** %a.addr, align 8, !dbg !3016
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3016
  %1 = load float, float* %arrayidx, align 4, !dbg !3016
  %2 = load float*, float** %r.addr, align 8, !dbg !3017
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3017
  %3 = load float, float* %arrayidx1, align 4, !dbg !3018
  %add = fadd float %3, %1, !dbg !3018
  store float %add, float* %arrayidx1, align 4, !dbg !3018
  %4 = load float*, float** %a.addr, align 8, !dbg !3019
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !3019
  %5 = load float, float* %arrayidx2, align 4, !dbg !3019
  %6 = load float*, float** %r.addr, align 8, !dbg !3020
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !3020
  %7 = load float, float* %arrayidx3, align 4, !dbg !3021
  %add4 = fadd float %7, %5, !dbg !3021
  store float %add4, float* %arrayidx3, align 4, !dbg !3021
  %8 = load float*, float** %a.addr, align 8, !dbg !3022
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3022
  %9 = load float, float* %arrayidx5, align 4, !dbg !3022
  %10 = load float*, float** %r.addr, align 8, !dbg !3023
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !3023
  %11 = load float, float* %arrayidx6, align 4, !dbg !3024
  %add7 = fadd float %11, %9, !dbg !3024
  store float %add7, float* %arrayidx6, align 4, !dbg !3024
  ret void, !dbg !3025
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !3026 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3029, metadata !DIExpression()), !dbg !3030
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !3031, metadata !DIExpression()), !dbg !3032
  %0 = load float, float* %f.addr, align 4, !dbg !3033
  %1 = load float*, float** %r.addr, align 8, !dbg !3034
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !3034
  %2 = load float, float* %arrayidx, align 4, !dbg !3035
  %mul = fmul float %2, %0, !dbg !3035
  store float %mul, float* %arrayidx, align 4, !dbg !3035
  %3 = load float, float* %f.addr, align 4, !dbg !3036
  %4 = load float*, float** %r.addr, align 8, !dbg !3037
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !3037
  %5 = load float, float* %arrayidx1, align 4, !dbg !3038
  %mul2 = fmul float %5, %3, !dbg !3038
  store float %mul2, float* %arrayidx1, align 4, !dbg !3038
  %6 = load float, float* %f.addr, align 4, !dbg !3039
  %7 = load float*, float** %r.addr, align 8, !dbg !3040
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !3040
  %8 = load float, float* %arrayidx3, align 4, !dbg !3041
  %mul4 = fmul float %8, %6, !dbg !3041
  store float %mul4, float* %arrayidx3, align 4, !dbg !3041
  ret void, !dbg !3042
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mesh_center_bounds(%struct.Mesh* %me, float* %cent) #0 !dbg !3043 {
entry:
  %retval = alloca i8, align 1
  %me.addr = alloca %struct.Mesh*, align 8
  %cent.addr = alloca float*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !3044, metadata !DIExpression()), !dbg !3045
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !3046, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !3048, metadata !DIExpression()), !dbg !3049
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !3050, metadata !DIExpression()), !dbg !3051
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !3052
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !3052
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !3052
  store float 0x46293E5940000000, float* %arrayidx1, align 4, !dbg !3052
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3052
  store float 0x46293E5940000000, float* %arrayidx2, align 4, !dbg !3052
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !3052
  store float 0xC6293E5940000000, float* %arrayidx3, align 4, !dbg !3052
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !3052
  store float 0xC6293E5940000000, float* %arrayidx4, align 4, !dbg !3052
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3052
  store float 0xC6293E5940000000, float* %arrayidx5, align 4, !dbg !3052
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3054
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3056
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3057
  %call = call zeroext i8 @BKE_mesh_minmax(%struct.Mesh* %0, float* %arraydecay, float* %arraydecay6), !dbg !3058
  %tobool = icmp ne i8 %call, 0, !dbg !3058
  br i1 %tobool, label %if.then, label %if.end, !dbg !3059

if.then:                                          ; preds = %entry
  %1 = load float*, float** %cent.addr, align 8, !dbg !3060
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3062
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3063
  call void @mid_v3_v3v3(float* %1, float* %arraydecay7, float* %arraydecay8), !dbg !3064
  store i8 1, i8* %retval, align 1, !dbg !3065
  br label %return, !dbg !3065

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3066
  br label %return, !dbg !3066

return:                                           ; preds = %if.end, %if.then
  %2 = load i8, i8* %retval, align 1, !dbg !3067
  ret i8 %2, !dbg !3067
}

declare dso_local zeroext i8 @BKE_mesh_minmax(%struct.Mesh*, float*, float*) #2

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mesh_center_centroid(%struct.Mesh* %me, float* %cent) #0 !dbg !3068 {
entry:
  %retval = alloca i8, align 1
  %me.addr = alloca %struct.Mesh*, align 8
  %cent.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %mpoly = alloca %struct.MPoly*, align 8
  %poly_area = alloca float, align 4
  %total_area = alloca float, align 4
  %poly_cent = alloca [3 x float], align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !3069, metadata !DIExpression()), !dbg !3070
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !3071, metadata !DIExpression()), !dbg !3072
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3073, metadata !DIExpression()), !dbg !3074
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3075
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 30, !dbg !3076
  %1 = load i32, i32* %totpoly, align 8, !dbg !3076
  store i32 %1, i32* %i, align 4, !dbg !3074
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !3077, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.declare(metadata float* %poly_area, metadata !3079, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.declare(metadata float* %total_area, metadata !3081, metadata !DIExpression()), !dbg !3082
  store float 0.000000e+00, float* %total_area, align 4, !dbg !3082
  call void @llvm.dbg.declare(metadata [3 x float]* %poly_cent, metadata !3083, metadata !DIExpression()), !dbg !3084
  %2 = load float*, float** %cent.addr, align 8, !dbg !3085
  call void @zero_v3(float* %2), !dbg !3086
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3087
  %mpoly1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 7, !dbg !3089
  %4 = load %struct.MPoly*, %struct.MPoly** %mpoly1, align 8, !dbg !3089
  store %struct.MPoly* %4, %struct.MPoly** %mpoly, align 8, !dbg !3090
  br label %for.cond, !dbg !3091

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !3092
  %dec = add nsw i32 %5, -1, !dbg !3092
  store i32 %dec, i32* %i, align 4, !dbg !3092
  %tobool = icmp ne i32 %5, 0, !dbg !3094
  br i1 %tobool, label %for.body, label %for.end, !dbg !3094

for.body:                                         ; preds = %for.cond
  %6 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3095
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3097
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 9, !dbg !3098
  %8 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3098
  %9 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3099
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %9, i32 0, i32 0, !dbg !3100
  %10 = load i32, i32* %loopstart, align 4, !dbg !3100
  %idx.ext = sext i32 %10 to i64, !dbg !3101
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %8, i64 %idx.ext, !dbg !3101
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3102
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 15, !dbg !3103
  %12 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !3103
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %poly_cent, i64 0, i64 0, !dbg !3104
  %call = call float @mesh_calc_poly_planar_area_centroid(%struct.MPoly* %6, %struct.MLoop* %add.ptr, %struct.MVert* %12, float* %arraydecay), !dbg !3105
  store float %call, float* %poly_area, align 4, !dbg !3106
  %13 = load float*, float** %cent.addr, align 8, !dbg !3107
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %poly_cent, i64 0, i64 0, !dbg !3108
  %14 = load float, float* %poly_area, align 4, !dbg !3109
  call void @madd_v3_v3fl(float* %13, float* %arraydecay2, float %14), !dbg !3110
  %15 = load float, float* %poly_area, align 4, !dbg !3111
  %16 = load float, float* %total_area, align 4, !dbg !3112
  %add = fadd float %16, %15, !dbg !3112
  store float %add, float* %total_area, align 4, !dbg !3112
  br label %for.inc, !dbg !3113

for.inc:                                          ; preds = %for.body
  %17 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3114
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %17, i32 1, !dbg !3114
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mpoly, align 8, !dbg !3114
  br label %for.cond, !dbg !3115, !llvm.loop !3116

for.end:                                          ; preds = %for.cond
  %18 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3118
  %totpoly3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 30, !dbg !3120
  %19 = load i32, i32* %totpoly3, align 8, !dbg !3120
  %tobool4 = icmp ne i32 %19, 0, !dbg !3118
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3121

if.then:                                          ; preds = %for.end
  %20 = load float*, float** %cent.addr, align 8, !dbg !3122
  %21 = load float, float* %total_area, align 4, !dbg !3124
  %div = fdiv float 1.000000e+00, %21, !dbg !3125
  call void @mul_v3_fl(float* %20, float %div), !dbg !3126
  br label %if.end, !dbg !3127

if.end:                                           ; preds = %if.then, %for.end
  %22 = load float*, float** %cent.addr, align 8, !dbg !3128
  %call5 = call zeroext i8 @is_finite_v3(float* %22), !dbg !3128
  %tobool6 = icmp ne i8 %call5, 0, !dbg !3128
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !3130

if.then7:                                         ; preds = %if.end
  %23 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3131
  %24 = load float*, float** %cent.addr, align 8, !dbg !3133
  %call8 = call zeroext i8 @BKE_mesh_center_median(%struct.Mesh* %23, float* %24), !dbg !3134
  store i8 %call8, i8* %retval, align 1, !dbg !3135
  br label %return, !dbg !3135

if.end9:                                          ; preds = %if.end
  %25 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3136
  %totpoly10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 30, !dbg !3137
  %26 = load i32, i32* %totpoly10, align 8, !dbg !3137
  %cmp = icmp ne i32 %26, 0, !dbg !3138
  %conv = zext i1 %cmp to i32, !dbg !3138
  %conv11 = trunc i32 %conv to i8, !dbg !3139
  store i8 %conv11, i8* %retval, align 1, !dbg !3140
  br label %return, !dbg !3140

return:                                           ; preds = %if.end9, %if.then7
  %27 = load i8, i8* %retval, align 1, !dbg !3141
  ret i8 %27, !dbg !3141
}

; Function Attrs: noinline nounwind uwtable
define internal float @mesh_calc_poly_planar_area_centroid(%struct.MPoly* %mpoly, %struct.MLoop* %loopstart, %struct.MVert* %mvarray, float* %cent) #0 !dbg !3142 {
entry:
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %loopstart.addr = alloca %struct.MLoop*, align 8
  %mvarray.addr = alloca %struct.MVert*, align 8
  %cent.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %tri_area = alloca float, align 4
  %total_area = alloca float, align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %v3 = alloca [3 x float], align 4
  %normal = alloca [3 x float], align 4
  %tri_cent = alloca [3 x float], align 4
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !3145, metadata !DIExpression()), !dbg !3146
  store %struct.MLoop* %loopstart, %struct.MLoop** %loopstart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart.addr, metadata !3147, metadata !DIExpression()), !dbg !3148
  store %struct.MVert* %mvarray, %struct.MVert** %mvarray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvarray.addr, metadata !3149, metadata !DIExpression()), !dbg !3150
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !3151, metadata !DIExpression()), !dbg !3152
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3153, metadata !DIExpression()), !dbg !3154
  call void @llvm.dbg.declare(metadata float* %tri_area, metadata !3155, metadata !DIExpression()), !dbg !3156
  call void @llvm.dbg.declare(metadata float* %total_area, metadata !3157, metadata !DIExpression()), !dbg !3158
  store float 0.000000e+00, float* %total_area, align 4, !dbg !3158
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !3159, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !3161, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.declare(metadata [3 x float]* %v3, metadata !3163, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.declare(metadata [3 x float]* %normal, metadata !3165, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.declare(metadata [3 x float]* %tri_cent, metadata !3167, metadata !DIExpression()), !dbg !3168
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !3169
  %1 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !3170
  %2 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !3171
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !3172
  call void @BKE_mesh_calc_poly_normal(%struct.MPoly* %0, %struct.MLoop* %1, %struct.MVert* %2, float* %arraydecay), !dbg !3173
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !3174
  %3 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !3175
  %4 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !3176
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %4, i64 0, !dbg !3176
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !3177
  %5 = load i32, i32* %v, align 4, !dbg !3177
  %idxprom = zext i32 %5 to i64, !dbg !3175
  %arrayidx2 = getelementptr inbounds %struct.MVert, %struct.MVert* %3, i64 %idxprom, !dbg !3175
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx2, i32 0, i32 0, !dbg !3178
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3175
  call void @copy_v3_v3(float* %arraydecay1, float* %arraydecay3), !dbg !3179
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !3180
  %6 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !3181
  %7 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !3182
  %arrayidx5 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %7, i64 1, !dbg !3182
  %v6 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx5, i32 0, i32 0, !dbg !3183
  %8 = load i32, i32* %v6, align 4, !dbg !3183
  %idxprom7 = zext i32 %8 to i64, !dbg !3181
  %arrayidx8 = getelementptr inbounds %struct.MVert, %struct.MVert* %6, i64 %idxprom7, !dbg !3181
  %co9 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx8, i32 0, i32 0, !dbg !3184
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !3181
  call void @copy_v3_v3(float* %arraydecay4, float* %arraydecay10), !dbg !3185
  %9 = load float*, float** %cent.addr, align 8, !dbg !3186
  call void @zero_v3(float* %9), !dbg !3187
  store i32 2, i32* %i, align 4, !dbg !3188
  br label %for.cond, !dbg !3190

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !3191
  %11 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !3193
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %11, i32 0, i32 1, !dbg !3194
  %12 = load i32, i32* %totloop, align 4, !dbg !3194
  %cmp = icmp slt i32 %10, %12, !dbg !3195
  br i1 %cmp, label %for.body, label %for.end, !dbg !3196

for.body:                                         ; preds = %for.cond
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !3197
  %13 = load %struct.MVert*, %struct.MVert** %mvarray.addr, align 8, !dbg !3199
  %14 = load %struct.MLoop*, %struct.MLoop** %loopstart.addr, align 8, !dbg !3200
  %15 = load i32, i32* %i, align 4, !dbg !3201
  %idxprom12 = sext i32 %15 to i64, !dbg !3200
  %arrayidx13 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %14, i64 %idxprom12, !dbg !3200
  %v14 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx13, i32 0, i32 0, !dbg !3202
  %16 = load i32, i32* %v14, align 4, !dbg !3202
  %idxprom15 = zext i32 %16 to i64, !dbg !3199
  %arrayidx16 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i64 %idxprom15, !dbg !3199
  %co17 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx16, i32 0, i32 0, !dbg !3203
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %co17, i64 0, i64 0, !dbg !3199
  call void @copy_v3_v3(float* %arraydecay11, float* %arraydecay18), !dbg !3204
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !3205
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !3206
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !3207
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !3208
  %call = call float @area_tri_signed_v3(float* %arraydecay19, float* %arraydecay20, float* %arraydecay21, float* %arraydecay22), !dbg !3209
  store float %call, float* %tri_area, align 4, !dbg !3210
  %17 = load float, float* %tri_area, align 4, !dbg !3211
  %18 = load float, float* %total_area, align 4, !dbg !3212
  %add = fadd float %18, %17, !dbg !3212
  store float %add, float* %total_area, align 4, !dbg !3212
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %tri_cent, i64 0, i64 0, !dbg !3213
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !3214
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !3215
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !3216
  call void @cent_tri_v3(float* %arraydecay23, float* %arraydecay24, float* %arraydecay25, float* %arraydecay26), !dbg !3217
  %19 = load float*, float** %cent.addr, align 8, !dbg !3218
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %tri_cent, i64 0, i64 0, !dbg !3219
  %20 = load float, float* %tri_area, align 4, !dbg !3220
  call void @madd_v3_v3fl(float* %19, float* %arraydecay27, float %20), !dbg !3221
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !3222
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !3223
  call void @copy_v3_v3(float* %arraydecay28, float* %arraydecay29), !dbg !3224
  br label %for.inc, !dbg !3225

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !3226
  %inc = add nsw i32 %21, 1, !dbg !3226
  store i32 %inc, i32* %i, align 4, !dbg !3226
  br label %for.cond, !dbg !3227, !llvm.loop !3228

for.end:                                          ; preds = %for.cond
  %22 = load float*, float** %cent.addr, align 8, !dbg !3230
  %23 = load float, float* %total_area, align 4, !dbg !3231
  %div = fdiv float 1.000000e+00, %23, !dbg !3232
  call void @mul_v3_fl(float* %22, float %div), !dbg !3233
  %24 = load float, float* %total_area, align 4, !dbg !3234
  ret float %24, !dbg !3235
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_finite_v3(float* %v) #0 !dbg !3236 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !3239, metadata !DIExpression()), !dbg !3240
  %0 = load float*, float** %v.addr, align 8, !dbg !3241
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3241
  %1 = load float, float* %arrayidx, align 4, !dbg !3241
  %2 = call float @llvm.fabs.f32(float %1) #6, !dbg !3241
  %cmpinf = fcmp one float %2, 0x7FF0000000000000, !dbg !3241
  br i1 %cmpinf, label %land.lhs.true, label %land.end, !dbg !3242

land.lhs.true:                                    ; preds = %entry
  %3 = load float*, float** %v.addr, align 8, !dbg !3243
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !3243
  %4 = load float, float* %arrayidx1, align 4, !dbg !3243
  %5 = call float @llvm.fabs.f32(float %4) #6, !dbg !3243
  %cmpinf2 = fcmp one float %5, 0x7FF0000000000000, !dbg !3243
  br i1 %cmpinf2, label %land.rhs, label %land.end, !dbg !3244

land.rhs:                                         ; preds = %land.lhs.true
  %6 = load float*, float** %v.addr, align 8, !dbg !3245
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 2, !dbg !3245
  %7 = load float, float* %arrayidx3, align 4, !dbg !3245
  %8 = call float @llvm.fabs.f32(float %7) #6, !dbg !3245
  %cmpinf4 = fcmp one float %8, 0x7FF0000000000000, !dbg !3245
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %9 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmpinf4, %land.rhs ], !dbg !3246
  %land.ext = zext i1 %9 to i32, !dbg !3244
  %conv = trunc i32 %land.ext to i8, !dbg !3247
  ret i8 %conv, !dbg !3248
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_volume(%struct.MVert* %mverts, i32 %numVerts, %struct.MFace* %mfaces, i32 %numFaces, float* %r_vol, float* %r_com) #0 !dbg !3249 {
entry:
  %mverts.addr = alloca %struct.MVert*, align 8
  %numVerts.addr = alloca i32, align 4
  %mfaces.addr = alloca %struct.MFace*, align 8
  %numFaces.addr = alloca i32, align 4
  %r_vol.addr = alloca float*, align 8
  %r_com.addr = alloca float*, align 8
  %center = alloca [3 x float], align 4
  %totvol = alloca float, align 4
  %f = alloca i32, align 4
  %face = alloca %struct.MFace*, align 8
  %v1 = alloca %struct.MVert*, align 8
  %v2 = alloca %struct.MVert*, align 8
  %v3 = alloca %struct.MVert*, align 8
  %v4 = alloca %struct.MVert*, align 8
  %vol = alloca float, align 4
  store %struct.MVert* %mverts, %struct.MVert** %mverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts.addr, metadata !3252, metadata !DIExpression()), !dbg !3253
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !3254, metadata !DIExpression()), !dbg !3255
  store %struct.MFace* %mfaces, %struct.MFace** %mfaces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mfaces.addr, metadata !3256, metadata !DIExpression()), !dbg !3257
  store i32 %numFaces, i32* %numFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numFaces.addr, metadata !3258, metadata !DIExpression()), !dbg !3259
  store float* %r_vol, float** %r_vol.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_vol.addr, metadata !3260, metadata !DIExpression()), !dbg !3261
  store float* %r_com, float** %r_com.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_com.addr, metadata !3262, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.declare(metadata [3 x float]* %center, metadata !3264, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.declare(metadata float* %totvol, metadata !3266, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.declare(metadata i32* %f, metadata !3268, metadata !DIExpression()), !dbg !3269
  %0 = load float*, float** %r_vol.addr, align 8, !dbg !3270
  %tobool = icmp ne float* %0, null, !dbg !3270
  br i1 %tobool, label %if.then, label %if.end, !dbg !3272

if.then:                                          ; preds = %entry
  %1 = load float*, float** %r_vol.addr, align 8, !dbg !3273
  store float 0.000000e+00, float* %1, align 4, !dbg !3274
  br label %if.end, !dbg !3275

if.end:                                           ; preds = %if.then, %entry
  %2 = load float*, float** %r_com.addr, align 8, !dbg !3276
  %tobool1 = icmp ne float* %2, null, !dbg !3276
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !3278

if.then2:                                         ; preds = %if.end
  %3 = load float*, float** %r_com.addr, align 8, !dbg !3279
  call void @zero_v3(float* %3), !dbg !3280
  br label %if.end3, !dbg !3280

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i32, i32* %numFaces.addr, align 4, !dbg !3281
  %cmp = icmp eq i32 %4, 0, !dbg !3283
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !3284

if.then4:                                         ; preds = %if.end3
  br label %if.end76, !dbg !3285

if.end5:                                          ; preds = %if.end3
  %5 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !3286
  %6 = load i32, i32* %numVerts.addr, align 4, !dbg !3288
  %7 = load %struct.MFace*, %struct.MFace** %mfaces.addr, align 8, !dbg !3289
  %8 = load i32, i32* %numFaces.addr, align 4, !dbg !3290
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !3291
  %call = call zeroext i8 @mesh_calc_center_centroid_ex(%struct.MVert* %5, i32 %6, %struct.MFace* %7, i32 %8, float* %arraydecay), !dbg !3292
  %tobool6 = icmp ne i8 %call, 0, !dbg !3292
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !3293

if.then7:                                         ; preds = %if.end5
  br label %if.end76, !dbg !3294

if.end8:                                          ; preds = %if.end5
  store float 0.000000e+00, float* %totvol, align 4, !dbg !3295
  store i32 0, i32* %f, align 4, !dbg !3296
  br label %for.cond, !dbg !3298

for.cond:                                         ; preds = %for.inc, %if.end8
  %9 = load i32, i32* %f, align 4, !dbg !3299
  %10 = load i32, i32* %numFaces.addr, align 4, !dbg !3301
  %cmp9 = icmp slt i32 %9, %10, !dbg !3302
  br i1 %cmp9, label %for.body, label %for.end, !dbg !3303

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MFace** %face, metadata !3304, metadata !DIExpression()), !dbg !3306
  %11 = load %struct.MFace*, %struct.MFace** %mfaces.addr, align 8, !dbg !3307
  %12 = load i32, i32* %f, align 4, !dbg !3308
  %idxprom = sext i32 %12 to i64, !dbg !3307
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %11, i64 %idxprom, !dbg !3307
  store %struct.MFace* %arrayidx, %struct.MFace** %face, align 8, !dbg !3306
  call void @llvm.dbg.declare(metadata %struct.MVert** %v1, metadata !3309, metadata !DIExpression()), !dbg !3310
  %13 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !3311
  %14 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3312
  %v110 = getelementptr inbounds %struct.MFace, %struct.MFace* %14, i32 0, i32 0, !dbg !3313
  %15 = load i32, i32* %v110, align 4, !dbg !3313
  %idxprom11 = zext i32 %15 to i64, !dbg !3311
  %arrayidx12 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i64 %idxprom11, !dbg !3311
  store %struct.MVert* %arrayidx12, %struct.MVert** %v1, align 8, !dbg !3310
  call void @llvm.dbg.declare(metadata %struct.MVert** %v2, metadata !3314, metadata !DIExpression()), !dbg !3315
  %16 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !3316
  %17 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3317
  %v213 = getelementptr inbounds %struct.MFace, %struct.MFace* %17, i32 0, i32 1, !dbg !3318
  %18 = load i32, i32* %v213, align 4, !dbg !3318
  %idxprom14 = zext i32 %18 to i64, !dbg !3316
  %arrayidx15 = getelementptr inbounds %struct.MVert, %struct.MVert* %16, i64 %idxprom14, !dbg !3316
  store %struct.MVert* %arrayidx15, %struct.MVert** %v2, align 8, !dbg !3315
  call void @llvm.dbg.declare(metadata %struct.MVert** %v3, metadata !3319, metadata !DIExpression()), !dbg !3320
  %19 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !3321
  %20 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3322
  %v316 = getelementptr inbounds %struct.MFace, %struct.MFace* %20, i32 0, i32 2, !dbg !3323
  %21 = load i32, i32* %v316, align 4, !dbg !3323
  %idxprom17 = zext i32 %21 to i64, !dbg !3321
  %arrayidx18 = getelementptr inbounds %struct.MVert, %struct.MVert* %19, i64 %idxprom17, !dbg !3321
  store %struct.MVert* %arrayidx18, %struct.MVert** %v3, align 8, !dbg !3320
  call void @llvm.dbg.declare(metadata %struct.MVert** %v4, metadata !3324, metadata !DIExpression()), !dbg !3325
  %22 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !3326
  %23 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3327
  %v419 = getelementptr inbounds %struct.MFace, %struct.MFace* %23, i32 0, i32 3, !dbg !3328
  %24 = load i32, i32* %v419, align 4, !dbg !3328
  %idxprom20 = zext i32 %24 to i64, !dbg !3326
  %arrayidx21 = getelementptr inbounds %struct.MVert, %struct.MVert* %22, i64 %idxprom20, !dbg !3326
  store %struct.MVert* %arrayidx21, %struct.MVert** %v4, align 8, !dbg !3325
  call void @llvm.dbg.declare(metadata float* %vol, metadata !3329, metadata !DIExpression()), !dbg !3330
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !3331
  %25 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3332
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %25, i32 0, i32 0, !dbg !3333
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3332
  %26 = load %struct.MVert*, %struct.MVert** %v2, align 8, !dbg !3334
  %co24 = getelementptr inbounds %struct.MVert, %struct.MVert* %26, i32 0, i32 0, !dbg !3335
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %co24, i64 0, i64 0, !dbg !3334
  %27 = load %struct.MVert*, %struct.MVert** %v3, align 8, !dbg !3336
  %co26 = getelementptr inbounds %struct.MVert, %struct.MVert* %27, i32 0, i32 0, !dbg !3337
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %co26, i64 0, i64 0, !dbg !3336
  %call28 = call float @volume_tetrahedron_signed_v3(float* %arraydecay22, float* %arraydecay23, float* %arraydecay25, float* %arraydecay27), !dbg !3338
  store float %call28, float* %vol, align 4, !dbg !3339
  %28 = load float*, float** %r_vol.addr, align 8, !dbg !3340
  %tobool29 = icmp ne float* %28, null, !dbg !3340
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !3342

if.then30:                                        ; preds = %for.body
  %29 = load float, float* %vol, align 4, !dbg !3343
  %30 = load float, float* %totvol, align 4, !dbg !3345
  %add = fadd float %30, %29, !dbg !3345
  store float %add, float* %totvol, align 4, !dbg !3345
  br label %if.end31, !dbg !3346

if.end31:                                         ; preds = %if.then30, %for.body
  %31 = load float*, float** %r_com.addr, align 8, !dbg !3347
  %tobool32 = icmp ne float* %31, null, !dbg !3347
  br i1 %tobool32, label %if.then33, label %if.end41, !dbg !3349

if.then33:                                        ; preds = %if.end31
  %32 = load float*, float** %r_com.addr, align 8, !dbg !3350
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !3352
  %33 = load float, float* %vol, align 4, !dbg !3353
  call void @madd_v3_v3fl(float* %32, float* %arraydecay34, float %33), !dbg !3354
  %34 = load float*, float** %r_com.addr, align 8, !dbg !3355
  %35 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3356
  %co35 = getelementptr inbounds %struct.MVert, %struct.MVert* %35, i32 0, i32 0, !dbg !3357
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %co35, i64 0, i64 0, !dbg !3356
  %36 = load float, float* %vol, align 4, !dbg !3358
  call void @madd_v3_v3fl(float* %34, float* %arraydecay36, float %36), !dbg !3359
  %37 = load float*, float** %r_com.addr, align 8, !dbg !3360
  %38 = load %struct.MVert*, %struct.MVert** %v2, align 8, !dbg !3361
  %co37 = getelementptr inbounds %struct.MVert, %struct.MVert* %38, i32 0, i32 0, !dbg !3362
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %co37, i64 0, i64 0, !dbg !3361
  %39 = load float, float* %vol, align 4, !dbg !3363
  call void @madd_v3_v3fl(float* %37, float* %arraydecay38, float %39), !dbg !3364
  %40 = load float*, float** %r_com.addr, align 8, !dbg !3365
  %41 = load %struct.MVert*, %struct.MVert** %v3, align 8, !dbg !3366
  %co39 = getelementptr inbounds %struct.MVert, %struct.MVert* %41, i32 0, i32 0, !dbg !3367
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !3366
  %42 = load float, float* %vol, align 4, !dbg !3368
  call void @madd_v3_v3fl(float* %40, float* %arraydecay40, float %42), !dbg !3369
  br label %if.end41, !dbg !3370

if.end41:                                         ; preds = %if.then33, %if.end31
  %43 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3371
  %v442 = getelementptr inbounds %struct.MFace, %struct.MFace* %43, i32 0, i32 3, !dbg !3373
  %44 = load i32, i32* %v442, align 4, !dbg !3373
  %tobool43 = icmp ne i32 %44, 0, !dbg !3371
  br i1 %tobool43, label %if.then44, label %if.end67, !dbg !3374

if.then44:                                        ; preds = %if.end41
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !3375
  %45 = load %struct.MVert*, %struct.MVert** %v3, align 8, !dbg !3377
  %co46 = getelementptr inbounds %struct.MVert, %struct.MVert* %45, i32 0, i32 0, !dbg !3378
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %co46, i64 0, i64 0, !dbg !3377
  %46 = load %struct.MVert*, %struct.MVert** %v4, align 8, !dbg !3379
  %co48 = getelementptr inbounds %struct.MVert, %struct.MVert* %46, i32 0, i32 0, !dbg !3380
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !3379
  %47 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3381
  %co50 = getelementptr inbounds %struct.MVert, %struct.MVert* %47, i32 0, i32 0, !dbg !3382
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %co50, i64 0, i64 0, !dbg !3381
  %call52 = call float @volume_tetrahedron_signed_v3(float* %arraydecay45, float* %arraydecay47, float* %arraydecay49, float* %arraydecay51), !dbg !3383
  store float %call52, float* %vol, align 4, !dbg !3384
  %48 = load float*, float** %r_vol.addr, align 8, !dbg !3385
  %tobool53 = icmp ne float* %48, null, !dbg !3385
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !3387

if.then54:                                        ; preds = %if.then44
  %49 = load float, float* %vol, align 4, !dbg !3388
  %50 = load float, float* %totvol, align 4, !dbg !3390
  %add55 = fadd float %50, %49, !dbg !3390
  store float %add55, float* %totvol, align 4, !dbg !3390
  br label %if.end56, !dbg !3391

if.end56:                                         ; preds = %if.then54, %if.then44
  %51 = load float*, float** %r_com.addr, align 8, !dbg !3392
  %tobool57 = icmp ne float* %51, null, !dbg !3392
  br i1 %tobool57, label %if.then58, label %if.end66, !dbg !3394

if.then58:                                        ; preds = %if.end56
  %52 = load float*, float** %r_com.addr, align 8, !dbg !3395
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !3397
  %53 = load float, float* %vol, align 4, !dbg !3398
  call void @madd_v3_v3fl(float* %52, float* %arraydecay59, float %53), !dbg !3399
  %54 = load float*, float** %r_com.addr, align 8, !dbg !3400
  %55 = load %struct.MVert*, %struct.MVert** %v3, align 8, !dbg !3401
  %co60 = getelementptr inbounds %struct.MVert, %struct.MVert* %55, i32 0, i32 0, !dbg !3402
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %co60, i64 0, i64 0, !dbg !3401
  %56 = load float, float* %vol, align 4, !dbg !3403
  call void @madd_v3_v3fl(float* %54, float* %arraydecay61, float %56), !dbg !3404
  %57 = load float*, float** %r_com.addr, align 8, !dbg !3405
  %58 = load %struct.MVert*, %struct.MVert** %v4, align 8, !dbg !3406
  %co62 = getelementptr inbounds %struct.MVert, %struct.MVert* %58, i32 0, i32 0, !dbg !3407
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %co62, i64 0, i64 0, !dbg !3406
  %59 = load float, float* %vol, align 4, !dbg !3408
  call void @madd_v3_v3fl(float* %57, float* %arraydecay63, float %59), !dbg !3409
  %60 = load float*, float** %r_com.addr, align 8, !dbg !3410
  %61 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3411
  %co64 = getelementptr inbounds %struct.MVert, %struct.MVert* %61, i32 0, i32 0, !dbg !3412
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %co64, i64 0, i64 0, !dbg !3411
  %62 = load float, float* %vol, align 4, !dbg !3413
  call void @madd_v3_v3fl(float* %60, float* %arraydecay65, float %62), !dbg !3414
  br label %if.end66, !dbg !3415

if.end66:                                         ; preds = %if.then58, %if.end56
  br label %if.end67, !dbg !3416

if.end67:                                         ; preds = %if.end66, %if.end41
  br label %for.inc, !dbg !3417

for.inc:                                          ; preds = %if.end67
  %63 = load i32, i32* %f, align 4, !dbg !3418
  %inc = add nsw i32 %63, 1, !dbg !3418
  store i32 %inc, i32* %f, align 4, !dbg !3418
  br label %for.cond, !dbg !3419, !llvm.loop !3420

for.end:                                          ; preds = %for.cond
  %64 = load float*, float** %r_vol.addr, align 8, !dbg !3422
  %tobool68 = icmp ne float* %64, null, !dbg !3422
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !3424

if.then69:                                        ; preds = %for.end
  %65 = load float, float* %totvol, align 4, !dbg !3425
  %66 = call float @llvm.fabs.f32(float %65), !dbg !3427
  %67 = load float*, float** %r_vol.addr, align 8, !dbg !3428
  store float %66, float* %67, align 4, !dbg !3429
  br label %if.end70, !dbg !3430

if.end70:                                         ; preds = %if.then69, %for.end
  %68 = load float*, float** %r_com.addr, align 8, !dbg !3431
  %tobool71 = icmp ne float* %68, null, !dbg !3431
  br i1 %tobool71, label %if.then72, label %if.end76, !dbg !3433

if.then72:                                        ; preds = %if.end70
  %69 = load float, float* %totvol, align 4, !dbg !3434
  %cmp73 = fcmp une float %69, 0.000000e+00, !dbg !3437
  br i1 %cmp73, label %if.then74, label %if.end75, !dbg !3438

if.then74:                                        ; preds = %if.then72
  %70 = load float*, float** %r_com.addr, align 8, !dbg !3439
  %71 = load float, float* %totvol, align 4, !dbg !3440
  %div = fdiv float 2.500000e-01, %71, !dbg !3441
  call void @mul_v3_fl(float* %70, float %div), !dbg !3442
  br label %if.end75, !dbg !3442

if.end75:                                         ; preds = %if.then74, %if.then72
  br label %if.end76, !dbg !3443

if.end76:                                         ; preds = %if.then4, %if.then7, %if.end75, %if.end70
  ret void, !dbg !3444
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mesh_calc_center_centroid_ex(%struct.MVert* %mverts, i32 %UNUSED_numVerts, %struct.MFace* %mfaces, i32 %numFaces, float* %center) #0 !dbg !3445 {
entry:
  %retval = alloca i8, align 1
  %mverts.addr = alloca %struct.MVert*, align 8
  %UNUSED_numVerts.addr = alloca i32, align 4
  %mfaces.addr = alloca %struct.MFace*, align 8
  %numFaces.addr = alloca i32, align 4
  %center.addr = alloca float*, align 8
  %totweight = alloca float, align 4
  %f = alloca i32, align 4
  %face = alloca %struct.MFace*, align 8
  %v1 = alloca %struct.MVert*, align 8
  %v2 = alloca %struct.MVert*, align 8
  %v3 = alloca %struct.MVert*, align 8
  %v4 = alloca %struct.MVert*, align 8
  %area = alloca float, align 4
  store %struct.MVert* %mverts, %struct.MVert** %mverts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mverts.addr, metadata !3448, metadata !DIExpression()), !dbg !3449
  store i32 %UNUSED_numVerts, i32* %UNUSED_numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_numVerts.addr, metadata !3450, metadata !DIExpression()), !dbg !3451
  store %struct.MFace* %mfaces, %struct.MFace** %mfaces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mfaces.addr, metadata !3452, metadata !DIExpression()), !dbg !3453
  store i32 %numFaces, i32* %numFaces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numFaces.addr, metadata !3454, metadata !DIExpression()), !dbg !3455
  store float* %center, float** %center.addr, align 8
  call void @llvm.dbg.declare(metadata float** %center.addr, metadata !3456, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.declare(metadata float* %totweight, metadata !3458, metadata !DIExpression()), !dbg !3459
  call void @llvm.dbg.declare(metadata i32* %f, metadata !3460, metadata !DIExpression()), !dbg !3461
  %0 = load float*, float** %center.addr, align 8, !dbg !3462
  call void @zero_v3(float* %0), !dbg !3463
  %1 = load i32, i32* %numFaces.addr, align 4, !dbg !3464
  %cmp = icmp eq i32 %1, 0, !dbg !3466
  br i1 %cmp, label %if.then, label %if.end, !dbg !3467

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3468
  br label %return, !dbg !3468

if.end:                                           ; preds = %entry
  store float 0.000000e+00, float* %totweight, align 4, !dbg !3469
  store i32 0, i32* %f, align 4, !dbg !3470
  br label %for.cond, !dbg !3472

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %f, align 4, !dbg !3473
  %3 = load i32, i32* %numFaces.addr, align 4, !dbg !3475
  %cmp1 = icmp slt i32 %2, %3, !dbg !3476
  br i1 %cmp1, label %for.body, label %for.end, !dbg !3477

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MFace** %face, metadata !3478, metadata !DIExpression()), !dbg !3480
  %4 = load %struct.MFace*, %struct.MFace** %mfaces.addr, align 8, !dbg !3481
  %5 = load i32, i32* %f, align 4, !dbg !3482
  %idxprom = sext i32 %5 to i64, !dbg !3481
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %4, i64 %idxprom, !dbg !3481
  store %struct.MFace* %arrayidx, %struct.MFace** %face, align 8, !dbg !3480
  call void @llvm.dbg.declare(metadata %struct.MVert** %v1, metadata !3483, metadata !DIExpression()), !dbg !3484
  %6 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !3485
  %7 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3486
  %v12 = getelementptr inbounds %struct.MFace, %struct.MFace* %7, i32 0, i32 0, !dbg !3487
  %8 = load i32, i32* %v12, align 4, !dbg !3487
  %idxprom3 = zext i32 %8 to i64, !dbg !3485
  %arrayidx4 = getelementptr inbounds %struct.MVert, %struct.MVert* %6, i64 %idxprom3, !dbg !3485
  store %struct.MVert* %arrayidx4, %struct.MVert** %v1, align 8, !dbg !3484
  call void @llvm.dbg.declare(metadata %struct.MVert** %v2, metadata !3488, metadata !DIExpression()), !dbg !3489
  %9 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !3490
  %10 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3491
  %v25 = getelementptr inbounds %struct.MFace, %struct.MFace* %10, i32 0, i32 1, !dbg !3492
  %11 = load i32, i32* %v25, align 4, !dbg !3492
  %idxprom6 = zext i32 %11 to i64, !dbg !3490
  %arrayidx7 = getelementptr inbounds %struct.MVert, %struct.MVert* %9, i64 %idxprom6, !dbg !3490
  store %struct.MVert* %arrayidx7, %struct.MVert** %v2, align 8, !dbg !3489
  call void @llvm.dbg.declare(metadata %struct.MVert** %v3, metadata !3493, metadata !DIExpression()), !dbg !3494
  %12 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !3495
  %13 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3496
  %v38 = getelementptr inbounds %struct.MFace, %struct.MFace* %13, i32 0, i32 2, !dbg !3497
  %14 = load i32, i32* %v38, align 4, !dbg !3497
  %idxprom9 = zext i32 %14 to i64, !dbg !3495
  %arrayidx10 = getelementptr inbounds %struct.MVert, %struct.MVert* %12, i64 %idxprom9, !dbg !3495
  store %struct.MVert* %arrayidx10, %struct.MVert** %v3, align 8, !dbg !3494
  call void @llvm.dbg.declare(metadata %struct.MVert** %v4, metadata !3498, metadata !DIExpression()), !dbg !3499
  %15 = load %struct.MVert*, %struct.MVert** %mverts.addr, align 8, !dbg !3500
  %16 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3501
  %v411 = getelementptr inbounds %struct.MFace, %struct.MFace* %16, i32 0, i32 3, !dbg !3502
  %17 = load i32, i32* %v411, align 4, !dbg !3502
  %idxprom12 = zext i32 %17 to i64, !dbg !3500
  %arrayidx13 = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i64 %idxprom12, !dbg !3500
  store %struct.MVert* %arrayidx13, %struct.MVert** %v4, align 8, !dbg !3499
  call void @llvm.dbg.declare(metadata float* %area, metadata !3503, metadata !DIExpression()), !dbg !3504
  %18 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3505
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %18, i32 0, i32 0, !dbg !3506
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3505
  %19 = load %struct.MVert*, %struct.MVert** %v2, align 8, !dbg !3507
  %co14 = getelementptr inbounds %struct.MVert, %struct.MVert* %19, i32 0, i32 0, !dbg !3508
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !3507
  %20 = load %struct.MVert*, %struct.MVert** %v3, align 8, !dbg !3509
  %co16 = getelementptr inbounds %struct.MVert, %struct.MVert* %20, i32 0, i32 0, !dbg !3510
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %co16, i64 0, i64 0, !dbg !3509
  %call = call float @area_tri_v3(float* %arraydecay, float* %arraydecay15, float* %arraydecay17), !dbg !3511
  store float %call, float* %area, align 4, !dbg !3512
  %21 = load float*, float** %center.addr, align 8, !dbg !3513
  %22 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3514
  %co18 = getelementptr inbounds %struct.MVert, %struct.MVert* %22, i32 0, i32 0, !dbg !3515
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %co18, i64 0, i64 0, !dbg !3514
  %23 = load float, float* %area, align 4, !dbg !3516
  call void @madd_v3_v3fl(float* %21, float* %arraydecay19, float %23), !dbg !3517
  %24 = load float*, float** %center.addr, align 8, !dbg !3518
  %25 = load %struct.MVert*, %struct.MVert** %v2, align 8, !dbg !3519
  %co20 = getelementptr inbounds %struct.MVert, %struct.MVert* %25, i32 0, i32 0, !dbg !3520
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co20, i64 0, i64 0, !dbg !3519
  %26 = load float, float* %area, align 4, !dbg !3521
  call void @madd_v3_v3fl(float* %24, float* %arraydecay21, float %26), !dbg !3522
  %27 = load float*, float** %center.addr, align 8, !dbg !3523
  %28 = load %struct.MVert*, %struct.MVert** %v3, align 8, !dbg !3524
  %co22 = getelementptr inbounds %struct.MVert, %struct.MVert* %28, i32 0, i32 0, !dbg !3525
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 0, !dbg !3524
  %29 = load float, float* %area, align 4, !dbg !3526
  call void @madd_v3_v3fl(float* %27, float* %arraydecay23, float %29), !dbg !3527
  %30 = load float, float* %area, align 4, !dbg !3528
  %31 = load float, float* %totweight, align 4, !dbg !3529
  %add = fadd float %31, %30, !dbg !3529
  store float %add, float* %totweight, align 4, !dbg !3529
  %32 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !3530
  %v424 = getelementptr inbounds %struct.MFace, %struct.MFace* %32, i32 0, i32 3, !dbg !3532
  %33 = load i32, i32* %v424, align 4, !dbg !3532
  %tobool = icmp ne i32 %33, 0, !dbg !3530
  br i1 %tobool, label %if.then25, label %if.end40, !dbg !3533

if.then25:                                        ; preds = %for.body
  %34 = load %struct.MVert*, %struct.MVert** %v3, align 8, !dbg !3534
  %co26 = getelementptr inbounds %struct.MVert, %struct.MVert* %34, i32 0, i32 0, !dbg !3536
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %co26, i64 0, i64 0, !dbg !3534
  %35 = load %struct.MVert*, %struct.MVert** %v4, align 8, !dbg !3537
  %co28 = getelementptr inbounds %struct.MVert, %struct.MVert* %35, i32 0, i32 0, !dbg !3538
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 0, !dbg !3537
  %36 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3539
  %co30 = getelementptr inbounds %struct.MVert, %struct.MVert* %36, i32 0, i32 0, !dbg !3540
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !3539
  %call32 = call float @area_tri_v3(float* %arraydecay27, float* %arraydecay29, float* %arraydecay31), !dbg !3541
  store float %call32, float* %area, align 4, !dbg !3542
  %37 = load float*, float** %center.addr, align 8, !dbg !3543
  %38 = load %struct.MVert*, %struct.MVert** %v3, align 8, !dbg !3544
  %co33 = getelementptr inbounds %struct.MVert, %struct.MVert* %38, i32 0, i32 0, !dbg !3545
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %co33, i64 0, i64 0, !dbg !3544
  %39 = load float, float* %area, align 4, !dbg !3546
  call void @madd_v3_v3fl(float* %37, float* %arraydecay34, float %39), !dbg !3547
  %40 = load float*, float** %center.addr, align 8, !dbg !3548
  %41 = load %struct.MVert*, %struct.MVert** %v4, align 8, !dbg !3549
  %co35 = getelementptr inbounds %struct.MVert, %struct.MVert* %41, i32 0, i32 0, !dbg !3550
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %co35, i64 0, i64 0, !dbg !3549
  %42 = load float, float* %area, align 4, !dbg !3551
  call void @madd_v3_v3fl(float* %40, float* %arraydecay36, float %42), !dbg !3552
  %43 = load float*, float** %center.addr, align 8, !dbg !3553
  %44 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !3554
  %co37 = getelementptr inbounds %struct.MVert, %struct.MVert* %44, i32 0, i32 0, !dbg !3555
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %co37, i64 0, i64 0, !dbg !3554
  %45 = load float, float* %area, align 4, !dbg !3556
  call void @madd_v3_v3fl(float* %43, float* %arraydecay38, float %45), !dbg !3557
  %46 = load float, float* %area, align 4, !dbg !3558
  %47 = load float, float* %totweight, align 4, !dbg !3559
  %add39 = fadd float %47, %46, !dbg !3559
  store float %add39, float* %totweight, align 4, !dbg !3559
  br label %if.end40, !dbg !3560

if.end40:                                         ; preds = %if.then25, %for.body
  br label %for.inc, !dbg !3561

for.inc:                                          ; preds = %if.end40
  %48 = load i32, i32* %f, align 4, !dbg !3562
  %inc = add nsw i32 %48, 1, !dbg !3562
  store i32 %inc, i32* %f, align 4, !dbg !3562
  br label %for.cond, !dbg !3563, !llvm.loop !3564

for.end:                                          ; preds = %for.cond
  %49 = load float, float* %totweight, align 4, !dbg !3566
  %cmp41 = fcmp oeq float %49, 0.000000e+00, !dbg !3568
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !3569

if.then42:                                        ; preds = %for.end
  store i8 0, i8* %retval, align 1, !dbg !3570
  br label %return, !dbg !3570

if.end43:                                         ; preds = %for.end
  %50 = load float*, float** %center.addr, align 8, !dbg !3571
  %51 = load float, float* %totweight, align 4, !dbg !3572
  %mul = fmul float 3.000000e+00, %51, !dbg !3573
  %div = fdiv float 1.000000e+00, %mul, !dbg !3574
  call void @mul_v3_fl(float* %50, float %div), !dbg !3575
  store i8 1, i8* %retval, align 1, !dbg !3576
  br label %return, !dbg !3576

return:                                           ; preds = %if.end43, %if.then42, %if.then
  %52 = load i8, i8* %retval, align 1, !dbg !3577
  ret i8 %52, !dbg !3577
}

declare dso_local float @volume_tetrahedron_signed_v3(float*, float*, float*, float*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_loops_to_mface_corners(%struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, i32* %lindex, i32 %findex, i32 %polyindex, i32 %mf_len, i32 %numTex, i32 %numCol, i8 zeroext %hasPCol, i8 zeroext %hasOrigSpace, i8 zeroext %hasLNor) #0 !dbg !3578 {
entry:
  %fdata.addr = alloca %struct.CustomData*, align 8
  %ldata.addr = alloca %struct.CustomData*, align 8
  %pdata.addr = alloca %struct.CustomData*, align 8
  %lindex.addr = alloca i32*, align 8
  %findex.addr = alloca i32, align 4
  %polyindex.addr = alloca i32, align 4
  %mf_len.addr = alloca i32, align 4
  %numTex.addr = alloca i32, align 4
  %numCol.addr = alloca i32, align 4
  %hasPCol.addr = alloca i8, align 1
  %hasOrigSpace.addr = alloca i8, align 1
  %hasLNor.addr = alloca i8, align 1
  %texface = alloca %struct.MTFace*, align 8
  %texpoly = alloca %struct.MTexPoly*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %mloopcol = alloca %struct.MLoopCol*, align 8
  %mloopuv = alloca %struct.MLoopUV*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mloopcol__tmp = alloca %struct.MLoopCol*, align 8
  %mcol__tmp = alloca %struct.MCol*, align 8
  %mloopcol__tmp47 = alloca %struct.MLoopCol*, align 8
  %mcol__tmp48 = alloca %struct.MCol*, align 8
  %of = alloca %struct.OrigSpaceFace*, align 8
  %lof = alloca %struct.OrigSpaceLoop*, align 8
  %tlnors = alloca [3 x i16]*, align 8
  store %struct.CustomData* %fdata, %struct.CustomData** %fdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata.addr, metadata !3582, metadata !DIExpression()), !dbg !3583
  store %struct.CustomData* %ldata, %struct.CustomData** %ldata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata.addr, metadata !3584, metadata !DIExpression()), !dbg !3585
  store %struct.CustomData* %pdata, %struct.CustomData** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata.addr, metadata !3586, metadata !DIExpression()), !dbg !3587
  store i32* %lindex, i32** %lindex.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lindex.addr, metadata !3588, metadata !DIExpression()), !dbg !3589
  store i32 %findex, i32* %findex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %findex.addr, metadata !3590, metadata !DIExpression()), !dbg !3591
  store i32 %polyindex, i32* %polyindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %polyindex.addr, metadata !3592, metadata !DIExpression()), !dbg !3593
  store i32 %mf_len, i32* %mf_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mf_len.addr, metadata !3594, metadata !DIExpression()), !dbg !3595
  store i32 %numTex, i32* %numTex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numTex.addr, metadata !3596, metadata !DIExpression()), !dbg !3597
  store i32 %numCol, i32* %numCol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numCol.addr, metadata !3598, metadata !DIExpression()), !dbg !3599
  store i8 %hasPCol, i8* %hasPCol.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hasPCol.addr, metadata !3600, metadata !DIExpression()), !dbg !3601
  store i8 %hasOrigSpace, i8* %hasOrigSpace.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hasOrigSpace.addr, metadata !3602, metadata !DIExpression()), !dbg !3603
  store i8 %hasLNor, i8* %hasLNor.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hasLNor.addr, metadata !3604, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.declare(metadata %struct.MTFace** %texface, metadata !3606, metadata !DIExpression()), !dbg !3609
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %texpoly, metadata !3610, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !3614, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol, metadata !3618, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %mloopuv, metadata !3622, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3624, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3626, metadata !DIExpression()), !dbg !3627
  store i32 0, i32* %i, align 4, !dbg !3628
  br label %for.cond, !dbg !3630

for.cond:                                         ; preds = %for.inc15, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3631
  %1 = load i32, i32* %numTex.addr, align 4, !dbg !3633
  %cmp = icmp slt i32 %0, %1, !dbg !3634
  br i1 %cmp, label %for.body, label %for.end17, !dbg !3635

for.body:                                         ; preds = %for.cond
  %2 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !3636
  %3 = load i32, i32* %findex.addr, align 4, !dbg !3638
  %4 = load i32, i32* %i, align 4, !dbg !3639
  %call = call i8* @CustomData_get_n(%struct.CustomData* %2, i32 5, i32 %3, i32 %4), !dbg !3640
  %5 = bitcast i8* %call to %struct.MTFace*, !dbg !3640
  store %struct.MTFace* %5, %struct.MTFace** %texface, align 8, !dbg !3641
  %6 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !3642
  %7 = load i32, i32* %polyindex.addr, align 4, !dbg !3643
  %8 = load i32, i32* %i, align 4, !dbg !3644
  %call1 = call i8* @CustomData_get_n(%struct.CustomData* %6, i32 15, i32 %7, i32 %8), !dbg !3645
  %9 = bitcast i8* %call1 to %struct.MTexPoly*, !dbg !3645
  store %struct.MTexPoly* %9, %struct.MTexPoly** %texpoly, align 8, !dbg !3646
  %10 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3647
  %tpage = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %10, i32 0, i32 0, !dbg !3647
  %11 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !3647
  %12 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3647
  %tpage2 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %12, i32 0, i32 1, !dbg !3647
  store %struct.Image* %11, %struct.Image** %tpage2, align 8, !dbg !3647
  %13 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3647
  %flag = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %13, i32 0, i32 1, !dbg !3647
  %14 = load i8, i8* %flag, align 8, !dbg !3647
  %15 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3647
  %flag3 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %15, i32 0, i32 2, !dbg !3647
  store i8 %14, i8* %flag3, align 8, !dbg !3647
  %16 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3647
  %transp = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %16, i32 0, i32 2, !dbg !3647
  %17 = load i8, i8* %transp, align 1, !dbg !3647
  %18 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3647
  %transp4 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i32 0, i32 3, !dbg !3647
  store i8 %17, i8* %transp4, align 1, !dbg !3647
  %19 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3647
  %mode = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %19, i32 0, i32 3, !dbg !3647
  %20 = load i16, i16* %mode, align 2, !dbg !3647
  %21 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3647
  %mode5 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %21, i32 0, i32 4, !dbg !3647
  store i16 %20, i16* %mode5, align 2, !dbg !3647
  %22 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3647
  %tile = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %22, i32 0, i32 4, !dbg !3647
  %23 = load i16, i16* %tile, align 4, !dbg !3647
  %24 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3647
  %tile6 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %24, i32 0, i32 5, !dbg !3647
  store i16 %23, i16* %tile6, align 4, !dbg !3647
  store i32 0, i32* %j, align 4, !dbg !3649
  br label %for.cond7, !dbg !3651

for.cond7:                                        ; preds = %for.inc, %for.body
  %25 = load i32, i32* %j, align 4, !dbg !3652
  %26 = load i32, i32* %mf_len.addr, align 4, !dbg !3654
  %cmp8 = icmp slt i32 %25, %26, !dbg !3655
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !3656

for.body9:                                        ; preds = %for.cond7
  %27 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3657
  %28 = load i32*, i32** %lindex.addr, align 8, !dbg !3659
  %29 = load i32, i32* %j, align 4, !dbg !3660
  %idxprom = sext i32 %29 to i64, !dbg !3659
  %arrayidx = getelementptr inbounds i32, i32* %28, i64 %idxprom, !dbg !3659
  %30 = load i32, i32* %arrayidx, align 4, !dbg !3659
  %31 = load i32, i32* %i, align 4, !dbg !3661
  %call10 = call i8* @CustomData_get_n(%struct.CustomData* %27, i32 16, i32 %30, i32 %31), !dbg !3662
  %32 = bitcast i8* %call10 to %struct.MLoopUV*, !dbg !3662
  store %struct.MLoopUV* %32, %struct.MLoopUV** %mloopuv, align 8, !dbg !3663
  %33 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3664
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %33, i32 0, i32 0, !dbg !3665
  %34 = load i32, i32* %j, align 4, !dbg !3666
  %idxprom11 = sext i32 %34 to i64, !dbg !3664
  %arrayidx12 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom11, !dbg !3664
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx12, i64 0, i64 0, !dbg !3664
  %35 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !3667
  %uv13 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %35, i32 0, i32 0, !dbg !3668
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %uv13, i64 0, i64 0, !dbg !3667
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay14), !dbg !3669
  br label %for.inc, !dbg !3670

for.inc:                                          ; preds = %for.body9
  %36 = load i32, i32* %j, align 4, !dbg !3671
  %inc = add nsw i32 %36, 1, !dbg !3671
  store i32 %inc, i32* %j, align 4, !dbg !3671
  br label %for.cond7, !dbg !3672, !llvm.loop !3673

for.end:                                          ; preds = %for.cond7
  br label %for.inc15, !dbg !3675

for.inc15:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !3676
  %inc16 = add nsw i32 %37, 1, !dbg !3676
  store i32 %inc16, i32* %i, align 4, !dbg !3676
  br label %for.cond, !dbg !3677, !llvm.loop !3678

for.end17:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3680
  br label %for.cond18, !dbg !3682

for.cond18:                                       ; preds = %for.inc37, %for.end17
  %38 = load i32, i32* %i, align 4, !dbg !3683
  %39 = load i32, i32* %numCol.addr, align 4, !dbg !3685
  %cmp19 = icmp slt i32 %38, %39, !dbg !3686
  br i1 %cmp19, label %for.body20, label %for.end39, !dbg !3687

for.body20:                                       ; preds = %for.cond18
  %40 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !3688
  %41 = load i32, i32* %findex.addr, align 4, !dbg !3690
  %42 = load i32, i32* %i, align 4, !dbg !3691
  %call21 = call i8* @CustomData_get_n(%struct.CustomData* %40, i32 6, i32 %41, i32 %42), !dbg !3692
  %43 = bitcast i8* %call21 to %struct.MCol*, !dbg !3692
  store %struct.MCol* %43, %struct.MCol** %mcol, align 8, !dbg !3693
  store i32 0, i32* %j, align 4, !dbg !3694
  br label %for.cond22, !dbg !3696

for.cond22:                                       ; preds = %for.inc34, %for.body20
  %44 = load i32, i32* %j, align 4, !dbg !3697
  %45 = load i32, i32* %mf_len.addr, align 4, !dbg !3699
  %cmp23 = icmp slt i32 %44, %45, !dbg !3700
  br i1 %cmp23, label %for.body24, label %for.end36, !dbg !3701

for.body24:                                       ; preds = %for.cond22
  %46 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3702
  %47 = load i32*, i32** %lindex.addr, align 8, !dbg !3704
  %48 = load i32, i32* %j, align 4, !dbg !3705
  %idxprom25 = sext i32 %48 to i64, !dbg !3704
  %arrayidx26 = getelementptr inbounds i32, i32* %47, i64 %idxprom25, !dbg !3704
  %49 = load i32, i32* %arrayidx26, align 4, !dbg !3704
  %50 = load i32, i32* %i, align 4, !dbg !3706
  %call27 = call i8* @CustomData_get_n(%struct.CustomData* %46, i32 17, i32 %49, i32 %50), !dbg !3707
  %51 = bitcast i8* %call27 to %struct.MLoopCol*, !dbg !3707
  store %struct.MLoopCol* %51, %struct.MLoopCol** %mloopcol, align 8, !dbg !3708
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp, metadata !3709, metadata !DIExpression()), !dbg !3713
  %52 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !3713
  store %struct.MLoopCol* %52, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3713
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp, metadata !3714, metadata !DIExpression()), !dbg !3713
  %53 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !3713
  %54 = load i32, i32* %j, align 4, !dbg !3713
  %idxprom28 = sext i32 %54 to i64, !dbg !3713
  %arrayidx29 = getelementptr inbounds %struct.MCol, %struct.MCol* %53, i64 %idxprom28, !dbg !3713
  store %struct.MCol* %arrayidx29, %struct.MCol** %mcol__tmp, align 8, !dbg !3713
  %55 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3713
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %55, i32 0, i32 0, !dbg !3713
  %56 = load i8, i8* %r, align 1, !dbg !3713
  %57 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !3713
  %b = getelementptr inbounds %struct.MCol, %struct.MCol* %57, i32 0, i32 3, !dbg !3713
  store i8 %56, i8* %b, align 1, !dbg !3713
  %58 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3713
  %g = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %58, i32 0, i32 1, !dbg !3713
  %59 = load i8, i8* %g, align 1, !dbg !3713
  %60 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !3713
  %g30 = getelementptr inbounds %struct.MCol, %struct.MCol* %60, i32 0, i32 2, !dbg !3713
  store i8 %59, i8* %g30, align 1, !dbg !3713
  %61 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3713
  %b31 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %61, i32 0, i32 2, !dbg !3713
  %62 = load i8, i8* %b31, align 1, !dbg !3713
  %63 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !3713
  %r32 = getelementptr inbounds %struct.MCol, %struct.MCol* %63, i32 0, i32 1, !dbg !3713
  store i8 %62, i8* %r32, align 1, !dbg !3713
  %64 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3713
  %a = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %64, i32 0, i32 3, !dbg !3713
  %65 = load i8, i8* %a, align 1, !dbg !3713
  %66 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !3713
  %a33 = getelementptr inbounds %struct.MCol, %struct.MCol* %66, i32 0, i32 0, !dbg !3713
  store i8 %65, i8* %a33, align 1, !dbg !3713
  br label %for.inc34, !dbg !3715

for.inc34:                                        ; preds = %for.body24
  %67 = load i32, i32* %j, align 4, !dbg !3716
  %inc35 = add nsw i32 %67, 1, !dbg !3716
  store i32 %inc35, i32* %j, align 4, !dbg !3716
  br label %for.cond22, !dbg !3717, !llvm.loop !3718

for.end36:                                        ; preds = %for.cond22
  br label %for.inc37, !dbg !3720

for.inc37:                                        ; preds = %for.end36
  %68 = load i32, i32* %i, align 4, !dbg !3721
  %inc38 = add nsw i32 %68, 1, !dbg !3721
  store i32 %inc38, i32* %i, align 4, !dbg !3721
  br label %for.cond18, !dbg !3722, !llvm.loop !3723

for.end39:                                        ; preds = %for.cond18
  %69 = load i8, i8* %hasPCol.addr, align 1, !dbg !3725
  %tobool = icmp ne i8 %69, 0, !dbg !3725
  br i1 %tobool, label %if.then, label %if.end, !dbg !3727

if.then:                                          ; preds = %for.end39
  %70 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !3728
  %71 = load i32, i32* %findex.addr, align 4, !dbg !3730
  %call40 = call i8* @CustomData_get(%struct.CustomData* %70, i32 %71, i32 20), !dbg !3731
  %72 = bitcast i8* %call40 to %struct.MCol*, !dbg !3731
  store %struct.MCol* %72, %struct.MCol** %mcol, align 8, !dbg !3732
  store i32 0, i32* %j, align 4, !dbg !3733
  br label %for.cond41, !dbg !3735

for.cond41:                                       ; preds = %for.inc59, %if.then
  %73 = load i32, i32* %j, align 4, !dbg !3736
  %74 = load i32, i32* %mf_len.addr, align 4, !dbg !3738
  %cmp42 = icmp slt i32 %73, %74, !dbg !3739
  br i1 %cmp42, label %for.body43, label %for.end61, !dbg !3740

for.body43:                                       ; preds = %for.cond41
  %75 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3741
  %76 = load i32*, i32** %lindex.addr, align 8, !dbg !3743
  %77 = load i32, i32* %j, align 4, !dbg !3744
  %idxprom44 = sext i32 %77 to i64, !dbg !3743
  %arrayidx45 = getelementptr inbounds i32, i32* %76, i64 %idxprom44, !dbg !3743
  %78 = load i32, i32* %arrayidx45, align 4, !dbg !3743
  %call46 = call i8* @CustomData_get(%struct.CustomData* %75, i32 %78, i32 32), !dbg !3745
  %79 = bitcast i8* %call46 to %struct.MLoopCol*, !dbg !3745
  store %struct.MLoopCol* %79, %struct.MLoopCol** %mloopcol, align 8, !dbg !3746
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp47, metadata !3747, metadata !DIExpression()), !dbg !3749
  %80 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !3749
  store %struct.MLoopCol* %80, %struct.MLoopCol** %mloopcol__tmp47, align 8, !dbg !3749
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp48, metadata !3750, metadata !DIExpression()), !dbg !3749
  %81 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !3749
  %82 = load i32, i32* %j, align 4, !dbg !3749
  %idxprom49 = sext i32 %82 to i64, !dbg !3749
  %arrayidx50 = getelementptr inbounds %struct.MCol, %struct.MCol* %81, i64 %idxprom49, !dbg !3749
  store %struct.MCol* %arrayidx50, %struct.MCol** %mcol__tmp48, align 8, !dbg !3749
  %83 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp47, align 8, !dbg !3749
  %r51 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %83, i32 0, i32 0, !dbg !3749
  %84 = load i8, i8* %r51, align 1, !dbg !3749
  %85 = load %struct.MCol*, %struct.MCol** %mcol__tmp48, align 8, !dbg !3749
  %b52 = getelementptr inbounds %struct.MCol, %struct.MCol* %85, i32 0, i32 3, !dbg !3749
  store i8 %84, i8* %b52, align 1, !dbg !3749
  %86 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp47, align 8, !dbg !3749
  %g53 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %86, i32 0, i32 1, !dbg !3749
  %87 = load i8, i8* %g53, align 1, !dbg !3749
  %88 = load %struct.MCol*, %struct.MCol** %mcol__tmp48, align 8, !dbg !3749
  %g54 = getelementptr inbounds %struct.MCol, %struct.MCol* %88, i32 0, i32 2, !dbg !3749
  store i8 %87, i8* %g54, align 1, !dbg !3749
  %89 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp47, align 8, !dbg !3749
  %b55 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %89, i32 0, i32 2, !dbg !3749
  %90 = load i8, i8* %b55, align 1, !dbg !3749
  %91 = load %struct.MCol*, %struct.MCol** %mcol__tmp48, align 8, !dbg !3749
  %r56 = getelementptr inbounds %struct.MCol, %struct.MCol* %91, i32 0, i32 1, !dbg !3749
  store i8 %90, i8* %r56, align 1, !dbg !3749
  %92 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp47, align 8, !dbg !3749
  %a57 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %92, i32 0, i32 3, !dbg !3749
  %93 = load i8, i8* %a57, align 1, !dbg !3749
  %94 = load %struct.MCol*, %struct.MCol** %mcol__tmp48, align 8, !dbg !3749
  %a58 = getelementptr inbounds %struct.MCol, %struct.MCol* %94, i32 0, i32 0, !dbg !3749
  store i8 %93, i8* %a58, align 1, !dbg !3749
  br label %for.inc59, !dbg !3751

for.inc59:                                        ; preds = %for.body43
  %95 = load i32, i32* %j, align 4, !dbg !3752
  %inc60 = add nsw i32 %95, 1, !dbg !3752
  store i32 %inc60, i32* %j, align 4, !dbg !3752
  br label %for.cond41, !dbg !3753, !llvm.loop !3754

for.end61:                                        ; preds = %for.cond41
  br label %if.end, !dbg !3756

if.end:                                           ; preds = %for.end61, %for.end39
  %96 = load i8, i8* %hasOrigSpace.addr, align 1, !dbg !3757
  %tobool62 = icmp ne i8 %96, 0, !dbg !3757
  br i1 %tobool62, label %if.then63, label %if.end80, !dbg !3759

if.then63:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.OrigSpaceFace** %of, metadata !3760, metadata !DIExpression()), !dbg !3767
  %97 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !3768
  %98 = load i32, i32* %findex.addr, align 4, !dbg !3769
  %call64 = call i8* @CustomData_get(%struct.CustomData* %97, i32 %98, i32 13), !dbg !3770
  %99 = bitcast i8* %call64 to %struct.OrigSpaceFace*, !dbg !3770
  store %struct.OrigSpaceFace* %99, %struct.OrigSpaceFace** %of, align 8, !dbg !3767
  call void @llvm.dbg.declare(metadata %struct.OrigSpaceLoop** %lof, metadata !3771, metadata !DIExpression()), !dbg !3777
  store i32 0, i32* %j, align 4, !dbg !3778
  br label %for.cond65, !dbg !3780

for.cond65:                                       ; preds = %for.inc77, %if.then63
  %100 = load i32, i32* %j, align 4, !dbg !3781
  %101 = load i32, i32* %mf_len.addr, align 4, !dbg !3783
  %cmp66 = icmp slt i32 %100, %101, !dbg !3784
  br i1 %cmp66, label %for.body67, label %for.end79, !dbg !3785

for.body67:                                       ; preds = %for.cond65
  %102 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3786
  %103 = load i32*, i32** %lindex.addr, align 8, !dbg !3788
  %104 = load i32, i32* %j, align 4, !dbg !3789
  %idxprom68 = sext i32 %104 to i64, !dbg !3788
  %arrayidx69 = getelementptr inbounds i32, i32* %103, i64 %idxprom68, !dbg !3788
  %105 = load i32, i32* %arrayidx69, align 4, !dbg !3788
  %call70 = call i8* @CustomData_get(%struct.CustomData* %102, i32 %105, i32 31), !dbg !3790
  %106 = bitcast i8* %call70 to %struct.OrigSpaceLoop*, !dbg !3790
  store %struct.OrigSpaceLoop* %106, %struct.OrigSpaceLoop** %lof, align 8, !dbg !3791
  %107 = load %struct.OrigSpaceFace*, %struct.OrigSpaceFace** %of, align 8, !dbg !3792
  %uv71 = getelementptr inbounds %struct.OrigSpaceFace, %struct.OrigSpaceFace* %107, i32 0, i32 0, !dbg !3793
  %108 = load i32, i32* %j, align 4, !dbg !3794
  %idxprom72 = sext i32 %108 to i64, !dbg !3792
  %arrayidx73 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv71, i64 0, i64 %idxprom72, !dbg !3792
  %arraydecay74 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx73, i64 0, i64 0, !dbg !3792
  %109 = load %struct.OrigSpaceLoop*, %struct.OrigSpaceLoop** %lof, align 8, !dbg !3795
  %uv75 = getelementptr inbounds %struct.OrigSpaceLoop, %struct.OrigSpaceLoop* %109, i32 0, i32 0, !dbg !3796
  %arraydecay76 = getelementptr inbounds [2 x float], [2 x float]* %uv75, i64 0, i64 0, !dbg !3795
  call void @copy_v2_v2(float* %arraydecay74, float* %arraydecay76), !dbg !3797
  br label %for.inc77, !dbg !3798

for.inc77:                                        ; preds = %for.body67
  %110 = load i32, i32* %j, align 4, !dbg !3799
  %inc78 = add nsw i32 %110, 1, !dbg !3799
  store i32 %inc78, i32* %j, align 4, !dbg !3799
  br label %for.cond65, !dbg !3800, !llvm.loop !3801

for.end79:                                        ; preds = %for.cond65
  br label %if.end80, !dbg !3803

if.end80:                                         ; preds = %for.end79, %if.end
  %111 = load i8, i8* %hasLNor.addr, align 1, !dbg !3804
  %tobool81 = icmp ne i8 %111, 0, !dbg !3804
  br i1 %tobool81, label %if.then82, label %if.end96, !dbg !3806

if.then82:                                        ; preds = %if.end80
  call void @llvm.dbg.declare(metadata [3 x i16]** %tlnors, metadata !3807, metadata !DIExpression()), !dbg !3810
  %112 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !3811
  %113 = load i32, i32* %findex.addr, align 4, !dbg !3812
  %call83 = call i8* @CustomData_get(%struct.CustomData* %112, i32 %113, i32 40), !dbg !3813
  %114 = bitcast i8* %call83 to [3 x i16]*, !dbg !3813
  store [3 x i16]* %114, [3 x i16]** %tlnors, align 8, !dbg !3810
  store i32 0, i32* %j, align 4, !dbg !3814
  br label %for.cond84, !dbg !3816

for.cond84:                                       ; preds = %for.inc93, %if.then82
  %115 = load i32, i32* %j, align 4, !dbg !3817
  %116 = load i32, i32* %mf_len.addr, align 4, !dbg !3819
  %cmp85 = icmp slt i32 %115, %116, !dbg !3820
  br i1 %cmp85, label %for.body86, label %for.end95, !dbg !3821

for.body86:                                       ; preds = %for.cond84
  %117 = load [3 x i16]*, [3 x i16]** %tlnors, align 8, !dbg !3822
  %118 = load i32, i32* %j, align 4, !dbg !3824
  %idxprom87 = sext i32 %118 to i64, !dbg !3822
  %arrayidx88 = getelementptr inbounds [3 x i16], [3 x i16]* %117, i64 %idxprom87, !dbg !3822
  %arraydecay89 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx88, i64 0, i64 0, !dbg !3822
  %119 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3825
  %120 = load i32*, i32** %lindex.addr, align 8, !dbg !3826
  %121 = load i32, i32* %j, align 4, !dbg !3827
  %idxprom90 = sext i32 %121 to i64, !dbg !3826
  %arrayidx91 = getelementptr inbounds i32, i32* %120, i64 %idxprom90, !dbg !3826
  %122 = load i32, i32* %arrayidx91, align 4, !dbg !3826
  %call92 = call i8* @CustomData_get(%struct.CustomData* %119, i32 %122, i32 8), !dbg !3828
  %123 = bitcast i8* %call92 to float*, !dbg !3828
  call void @normal_float_to_short_v3(i16* %arraydecay89, float* %123), !dbg !3829
  br label %for.inc93, !dbg !3830

for.inc93:                                        ; preds = %for.body86
  %124 = load i32, i32* %j, align 4, !dbg !3831
  %inc94 = add nsw i32 %124, 1, !dbg !3831
  store i32 %inc94, i32* %j, align 4, !dbg !3831
  br label %for.cond84, !dbg !3832, !llvm.loop !3833

for.end95:                                        ; preds = %for.cond84
  br label %if.end96, !dbg !3835

if.end96:                                         ; preds = %for.end95, %if.end80
  ret void, !dbg !3836
}

declare dso_local i8* @CustomData_get_n(%struct.CustomData*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !3837 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3838, metadata !DIExpression()), !dbg !3839
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3840, metadata !DIExpression()), !dbg !3841
  %0 = load float*, float** %a.addr, align 8, !dbg !3842
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3842
  %1 = load float, float* %arrayidx, align 4, !dbg !3842
  %2 = load float*, float** %r.addr, align 8, !dbg !3843
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3843
  store float %1, float* %arrayidx1, align 4, !dbg !3844
  %3 = load float*, float** %a.addr, align 8, !dbg !3845
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3845
  %4 = load float, float* %arrayidx2, align 4, !dbg !3845
  %5 = load float*, float** %r.addr, align 8, !dbg !3846
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3846
  store float %4, float* %arrayidx3, align 4, !dbg !3847
  ret void, !dbg !3848
}

declare dso_local i8* @CustomData_get(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_loops_to_tessdata(%struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, %struct.MFace* %mface, i32* %polyindices, [4 x i32]* %loopindices, i32 %num_faces) #0 !dbg !3849 {
entry:
  %fdata.addr = alloca %struct.CustomData*, align 8
  %ldata.addr = alloca %struct.CustomData*, align 8
  %pdata.addr = alloca %struct.CustomData*, align 8
  %mface.addr = alloca %struct.MFace*, align 8
  %polyindices.addr = alloca i32*, align 8
  %loopindices.addr = alloca [4 x i32]*, align 8
  %num_faces.addr = alloca i32, align 4
  %numTex = alloca i32, align 4
  %numCol = alloca i32, align 4
  %hasPCol = alloca i8, align 1
  %hasOrigSpace = alloca i8, align 1
  %hasLoopNormal = alloca i8, align 1
  %findex = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pidx = alloca i32*, align 8
  %lidx = alloca [4 x i32]*, align 8
  %texface = alloca %struct.MTFace*, align 8
  %texpoly = alloca %struct.MTexPoly*, align 8
  %mloopuv = alloca %struct.MLoopUV*, align 8
  %mcol = alloca [4 x %struct.MCol]*, align 8
  %mloopcol = alloca %struct.MLoopCol*, align 8
  %mloopcol__tmp = alloca %struct.MLoopCol*, align 8
  %mcol__tmp = alloca %struct.MCol*, align 8
  %mcol89 = alloca [4 x %struct.MCol]*, align 8
  %mloopcol91 = alloca %struct.MLoopCol*, align 8
  %mloopcol__tmp111 = alloca %struct.MLoopCol*, align 8
  %mcol__tmp116 = alloca %struct.MCol*, align 8
  %of = alloca %struct.OrigSpaceFace*, align 8
  %lof = alloca %struct.OrigSpaceLoop*, align 8
  %fnors = alloca [4 x [3 x i16]]*, align 8
  %lnors = alloca [3 x float]*, align 8
  store %struct.CustomData* %fdata, %struct.CustomData** %fdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata.addr, metadata !3853, metadata !DIExpression()), !dbg !3854
  store %struct.CustomData* %ldata, %struct.CustomData** %ldata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata.addr, metadata !3855, metadata !DIExpression()), !dbg !3856
  store %struct.CustomData* %pdata, %struct.CustomData** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata.addr, metadata !3857, metadata !DIExpression()), !dbg !3858
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !3859, metadata !DIExpression()), !dbg !3860
  store i32* %polyindices, i32** %polyindices.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %polyindices.addr, metadata !3861, metadata !DIExpression()), !dbg !3862
  store [4 x i32]* %loopindices, [4 x i32]** %loopindices.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i32]** %loopindices.addr, metadata !3863, metadata !DIExpression()), !dbg !3864
  store i32 %num_faces, i32* %num_faces.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_faces.addr, metadata !3865, metadata !DIExpression()), !dbg !3866
  call void @llvm.dbg.declare(metadata i32* %numTex, metadata !3867, metadata !DIExpression()), !dbg !3868
  %0 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !3869
  %call = call i32 @CustomData_number_of_layers(%struct.CustomData* %0, i32 15), !dbg !3870
  store i32 %call, i32* %numTex, align 4, !dbg !3868
  call void @llvm.dbg.declare(metadata i32* %numCol, metadata !3871, metadata !DIExpression()), !dbg !3872
  %1 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3873
  %call1 = call i32 @CustomData_number_of_layers(%struct.CustomData* %1, i32 17), !dbg !3874
  store i32 %call1, i32* %numCol, align 4, !dbg !3872
  call void @llvm.dbg.declare(metadata i8* %hasPCol, metadata !3875, metadata !DIExpression()), !dbg !3876
  %2 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3877
  %call2 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %2, i32 32), !dbg !3878
  store i8 %call2, i8* %hasPCol, align 1, !dbg !3876
  call void @llvm.dbg.declare(metadata i8* %hasOrigSpace, metadata !3879, metadata !DIExpression()), !dbg !3880
  %3 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3881
  %call3 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %3, i32 31), !dbg !3882
  store i8 %call3, i8* %hasOrigSpace, align 1, !dbg !3880
  call void @llvm.dbg.declare(metadata i8* %hasLoopNormal, metadata !3883, metadata !DIExpression()), !dbg !3884
  %4 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3885
  %call4 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %4, i32 8), !dbg !3886
  store i8 %call4, i8* %hasLoopNormal, align 1, !dbg !3884
  call void @llvm.dbg.declare(metadata i32* %findex, metadata !3887, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3891, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.declare(metadata i32** %pidx, metadata !3893, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata [4 x i32]** %lidx, metadata !3895, metadata !DIExpression()), !dbg !3896
  store i32 0, i32* %i, align 4, !dbg !3897
  br label %for.cond, !dbg !3899

for.cond:                                         ; preds = %for.inc43, %entry
  %5 = load i32, i32* %i, align 4, !dbg !3900
  %6 = load i32, i32* %numTex, align 4, !dbg !3902
  %cmp = icmp slt i32 %5, %6, !dbg !3903
  br i1 %cmp, label %for.body, label %for.end45, !dbg !3904

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MTFace** %texface, metadata !3905, metadata !DIExpression()), !dbg !3907
  %7 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !3908
  %8 = load i32, i32* %i, align 4, !dbg !3909
  %call5 = call i8* @CustomData_get_layer_n(%struct.CustomData* %7, i32 5, i32 %8), !dbg !3910
  %9 = bitcast i8* %call5 to %struct.MTFace*, !dbg !3910
  store %struct.MTFace* %9, %struct.MTFace** %texface, align 8, !dbg !3907
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %texpoly, metadata !3911, metadata !DIExpression()), !dbg !3912
  %10 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !3913
  %11 = load i32, i32* %i, align 4, !dbg !3914
  %call6 = call i8* @CustomData_get_layer_n(%struct.CustomData* %10, i32 15, i32 %11), !dbg !3915
  %12 = bitcast i8* %call6 to %struct.MTexPoly*, !dbg !3915
  store %struct.MTexPoly* %12, %struct.MTexPoly** %texpoly, align 8, !dbg !3912
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %mloopuv, metadata !3916, metadata !DIExpression()), !dbg !3917
  %13 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3918
  %14 = load i32, i32* %i, align 4, !dbg !3919
  %call7 = call i8* @CustomData_get_layer_n(%struct.CustomData* %13, i32 16, i32 %14), !dbg !3920
  %15 = bitcast i8* %call7 to %struct.MLoopUV*, !dbg !3920
  store %struct.MLoopUV* %15, %struct.MLoopUV** %mloopuv, align 8, !dbg !3917
  store i32 0, i32* %findex, align 4, !dbg !3921
  %16 = load i32*, i32** %polyindices.addr, align 8, !dbg !3923
  store i32* %16, i32** %pidx, align 8, !dbg !3924
  %17 = load [4 x i32]*, [4 x i32]** %loopindices.addr, align 8, !dbg !3925
  store [4 x i32]* %17, [4 x i32]** %lidx, align 8, !dbg !3926
  br label %for.cond8, !dbg !3927

for.cond8:                                        ; preds = %for.inc, %for.body
  %18 = load i32, i32* %findex, align 4, !dbg !3928
  %19 = load i32, i32* %num_faces.addr, align 4, !dbg !3930
  %cmp9 = icmp slt i32 %18, %19, !dbg !3931
  br i1 %cmp9, label %for.body10, label %for.end42, !dbg !3932

for.body10:                                       ; preds = %for.cond8
  %20 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3933
  %21 = load i32*, i32** %pidx, align 8, !dbg !3933
  %22 = load i32, i32* %21, align 4, !dbg !3933
  %idxprom = sext i32 %22 to i64, !dbg !3933
  %arrayidx = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %20, i64 %idxprom, !dbg !3933
  %tpage = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %arrayidx, i32 0, i32 0, !dbg !3933
  %23 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !3933
  %24 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3933
  %tpage11 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %24, i32 0, i32 1, !dbg !3933
  store %struct.Image* %23, %struct.Image** %tpage11, align 8, !dbg !3933
  %25 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3933
  %26 = load i32*, i32** %pidx, align 8, !dbg !3933
  %27 = load i32, i32* %26, align 4, !dbg !3933
  %idxprom12 = sext i32 %27 to i64, !dbg !3933
  %arrayidx13 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %25, i64 %idxprom12, !dbg !3933
  %flag = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %arrayidx13, i32 0, i32 1, !dbg !3933
  %28 = load i8, i8* %flag, align 8, !dbg !3933
  %29 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3933
  %flag14 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %29, i32 0, i32 2, !dbg !3933
  store i8 %28, i8* %flag14, align 8, !dbg !3933
  %30 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3933
  %31 = load i32*, i32** %pidx, align 8, !dbg !3933
  %32 = load i32, i32* %31, align 4, !dbg !3933
  %idxprom15 = sext i32 %32 to i64, !dbg !3933
  %arrayidx16 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %30, i64 %idxprom15, !dbg !3933
  %transp = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %arrayidx16, i32 0, i32 2, !dbg !3933
  %33 = load i8, i8* %transp, align 1, !dbg !3933
  %34 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3933
  %transp17 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %34, i32 0, i32 3, !dbg !3933
  store i8 %33, i8* %transp17, align 1, !dbg !3933
  %35 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3933
  %36 = load i32*, i32** %pidx, align 8, !dbg !3933
  %37 = load i32, i32* %36, align 4, !dbg !3933
  %idxprom18 = sext i32 %37 to i64, !dbg !3933
  %arrayidx19 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %35, i64 %idxprom18, !dbg !3933
  %mode = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %arrayidx19, i32 0, i32 3, !dbg !3933
  %38 = load i16, i16* %mode, align 2, !dbg !3933
  %39 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3933
  %mode20 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %39, i32 0, i32 4, !dbg !3933
  store i16 %38, i16* %mode20, align 2, !dbg !3933
  %40 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !3933
  %41 = load i32*, i32** %pidx, align 8, !dbg !3933
  %42 = load i32, i32* %41, align 4, !dbg !3933
  %idxprom21 = sext i32 %42 to i64, !dbg !3933
  %arrayidx22 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %40, i64 %idxprom21, !dbg !3933
  %tile = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %arrayidx22, i32 0, i32 4, !dbg !3933
  %43 = load i16, i16* %tile, align 4, !dbg !3933
  %44 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3933
  %tile23 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %44, i32 0, i32 5, !dbg !3933
  store i16 %43, i16* %tile23, align 4, !dbg !3933
  %45 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !3936
  %tobool = icmp ne %struct.MFace* %45, null, !dbg !3936
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3936

cond.true:                                        ; preds = %for.body10
  %46 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !3938
  %47 = load i32, i32* %findex, align 4, !dbg !3939
  %idxprom24 = sext i32 %47 to i64, !dbg !3938
  %arrayidx25 = getelementptr inbounds %struct.MFace, %struct.MFace* %46, i64 %idxprom24, !dbg !3938
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx25, i32 0, i32 3, !dbg !3940
  %48 = load i32, i32* %v4, align 4, !dbg !3940
  br label %cond.end, !dbg !3936

cond.false:                                       ; preds = %for.body10
  %49 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !3941
  %arrayidx26 = getelementptr inbounds [4 x i32], [4 x i32]* %49, i64 0, i64 3, !dbg !3942
  %50 = load i32, i32* %arrayidx26, align 4, !dbg !3942
  br label %cond.end, !dbg !3936

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %48, %cond.true ], [ %50, %cond.false ], !dbg !3936
  %tobool27 = icmp ne i32 %cond, 0, !dbg !3943
  %51 = zext i1 %tobool27 to i64, !dbg !3943
  %cond28 = select i1 %tobool27, i32 4, i32 3, !dbg !3943
  store i32 %cond28, i32* %j, align 4, !dbg !3944
  br label %for.cond29, !dbg !3945

for.cond29:                                       ; preds = %for.body31, %cond.end
  %52 = load i32, i32* %j, align 4, !dbg !3946
  %dec = add nsw i32 %52, -1, !dbg !3946
  store i32 %dec, i32* %j, align 4, !dbg !3946
  %tobool30 = icmp ne i32 %52, 0, !dbg !3948
  br i1 %tobool30, label %for.body31, label %for.end, !dbg !3948

for.body31:                                       ; preds = %for.cond29
  %53 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3949
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %53, i32 0, i32 0, !dbg !3951
  %54 = load i32, i32* %j, align 4, !dbg !3952
  %idxprom32 = sext i32 %54 to i64, !dbg !3949
  %arrayidx33 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom32, !dbg !3949
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx33, i64 0, i64 0, !dbg !3949
  %55 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !3953
  %56 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !3954
  %57 = load i32, i32* %j, align 4, !dbg !3955
  %idxprom34 = sext i32 %57 to i64, !dbg !3956
  %arrayidx35 = getelementptr inbounds [4 x i32], [4 x i32]* %56, i64 0, i64 %idxprom34, !dbg !3956
  %58 = load i32, i32* %arrayidx35, align 4, !dbg !3956
  %idxprom36 = zext i32 %58 to i64, !dbg !3953
  %arrayidx37 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %55, i64 %idxprom36, !dbg !3953
  %uv38 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %arrayidx37, i32 0, i32 0, !dbg !3957
  %arraydecay39 = getelementptr inbounds [2 x float], [2 x float]* %uv38, i64 0, i64 0, !dbg !3953
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay39), !dbg !3958
  br label %for.cond29, !dbg !3959, !llvm.loop !3960

for.end:                                          ; preds = %for.cond29
  br label %for.inc, !dbg !3962

for.inc:                                          ; preds = %for.end
  %59 = load i32*, i32** %pidx, align 8, !dbg !3963
  %incdec.ptr = getelementptr inbounds i32, i32* %59, i32 1, !dbg !3963
  store i32* %incdec.ptr, i32** %pidx, align 8, !dbg !3963
  %60 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !3964
  %incdec.ptr40 = getelementptr inbounds [4 x i32], [4 x i32]* %60, i32 1, !dbg !3964
  store [4 x i32]* %incdec.ptr40, [4 x i32]** %lidx, align 8, !dbg !3964
  %61 = load i32, i32* %findex, align 4, !dbg !3965
  %inc = add nsw i32 %61, 1, !dbg !3965
  store i32 %inc, i32* %findex, align 4, !dbg !3965
  %62 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !3966
  %incdec.ptr41 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %62, i32 1, !dbg !3966
  store %struct.MTFace* %incdec.ptr41, %struct.MTFace** %texface, align 8, !dbg !3966
  br label %for.cond8, !dbg !3967, !llvm.loop !3968

for.end42:                                        ; preds = %for.cond8
  br label %for.inc43, !dbg !3970

for.inc43:                                        ; preds = %for.end42
  %63 = load i32, i32* %i, align 4, !dbg !3971
  %inc44 = add nsw i32 %63, 1, !dbg !3971
  store i32 %inc44, i32* %i, align 4, !dbg !3971
  br label %for.cond, !dbg !3972, !llvm.loop !3973

for.end45:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3975
  br label %for.cond46, !dbg !3977

for.cond46:                                       ; preds = %for.inc85, %for.end45
  %64 = load i32, i32* %i, align 4, !dbg !3978
  %65 = load i32, i32* %numCol, align 4, !dbg !3980
  %cmp47 = icmp slt i32 %64, %65, !dbg !3981
  br i1 %cmp47, label %for.body48, label %for.end87, !dbg !3982

for.body48:                                       ; preds = %for.cond46
  call void @llvm.dbg.declare(metadata [4 x %struct.MCol]** %mcol, metadata !3983, metadata !DIExpression()), !dbg !3987
  %66 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !3988
  %67 = load i32, i32* %i, align 4, !dbg !3989
  %call49 = call i8* @CustomData_get_layer_n(%struct.CustomData* %66, i32 6, i32 %67), !dbg !3990
  %68 = bitcast i8* %call49 to [4 x %struct.MCol]*, !dbg !3990
  store [4 x %struct.MCol]* %68, [4 x %struct.MCol]** %mcol, align 8, !dbg !3987
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol, metadata !3991, metadata !DIExpression()), !dbg !3992
  %69 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !3993
  %70 = load i32, i32* %i, align 4, !dbg !3994
  %call50 = call i8* @CustomData_get_layer_n(%struct.CustomData* %69, i32 17, i32 %70), !dbg !3995
  %71 = bitcast i8* %call50 to %struct.MLoopCol*, !dbg !3995
  store %struct.MLoopCol* %71, %struct.MLoopCol** %mloopcol, align 8, !dbg !3992
  store i32 0, i32* %findex, align 4, !dbg !3996
  %72 = load [4 x i32]*, [4 x i32]** %loopindices.addr, align 8, !dbg !3998
  store [4 x i32]* %72, [4 x i32]** %lidx, align 8, !dbg !3999
  br label %for.cond51, !dbg !4000

for.cond51:                                       ; preds = %for.inc80, %for.body48
  %73 = load i32, i32* %findex, align 4, !dbg !4001
  %74 = load i32, i32* %num_faces.addr, align 4, !dbg !4003
  %cmp52 = icmp slt i32 %73, %74, !dbg !4004
  br i1 %cmp52, label %for.body53, label %for.end84, !dbg !4005

for.body53:                                       ; preds = %for.cond51
  %75 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4006
  %tobool54 = icmp ne %struct.MFace* %75, null, !dbg !4006
  br i1 %tobool54, label %cond.true55, label %cond.false59, !dbg !4006

cond.true55:                                      ; preds = %for.body53
  %76 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4009
  %77 = load i32, i32* %findex, align 4, !dbg !4010
  %idxprom56 = sext i32 %77 to i64, !dbg !4009
  %arrayidx57 = getelementptr inbounds %struct.MFace, %struct.MFace* %76, i64 %idxprom56, !dbg !4009
  %v458 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx57, i32 0, i32 3, !dbg !4011
  %78 = load i32, i32* %v458, align 4, !dbg !4011
  br label %cond.end61, !dbg !4006

cond.false59:                                     ; preds = %for.body53
  %79 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4012
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %79, i64 0, i64 3, !dbg !4013
  %80 = load i32, i32* %arrayidx60, align 4, !dbg !4013
  br label %cond.end61, !dbg !4006

cond.end61:                                       ; preds = %cond.false59, %cond.true55
  %cond62 = phi i32 [ %78, %cond.true55 ], [ %80, %cond.false59 ], !dbg !4006
  %tobool63 = icmp ne i32 %cond62, 0, !dbg !4014
  %81 = zext i1 %tobool63 to i64, !dbg !4014
  %cond64 = select i1 %tobool63, i32 4, i32 3, !dbg !4014
  store i32 %cond64, i32* %j, align 4, !dbg !4015
  br label %for.cond65, !dbg !4016

for.cond65:                                       ; preds = %for.body68, %cond.end61
  %82 = load i32, i32* %j, align 4, !dbg !4017
  %dec66 = add nsw i32 %82, -1, !dbg !4017
  store i32 %dec66, i32* %j, align 4, !dbg !4017
  %tobool67 = icmp ne i32 %82, 0, !dbg !4019
  br i1 %tobool67, label %for.body68, label %for.end79, !dbg !4019

for.body68:                                       ; preds = %for.cond65
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp, metadata !4020, metadata !DIExpression()), !dbg !4023
  %83 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !4023
  %84 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4023
  %85 = load i32, i32* %j, align 4, !dbg !4023
  %idxprom69 = sext i32 %85 to i64, !dbg !4023
  %arrayidx70 = getelementptr inbounds [4 x i32], [4 x i32]* %84, i64 0, i64 %idxprom69, !dbg !4023
  %86 = load i32, i32* %arrayidx70, align 4, !dbg !4023
  %idxprom71 = zext i32 %86 to i64, !dbg !4023
  %arrayidx72 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %83, i64 %idxprom71, !dbg !4023
  store %struct.MLoopCol* %arrayidx72, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !4023
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp, metadata !4024, metadata !DIExpression()), !dbg !4023
  %87 = load [4 x %struct.MCol]*, [4 x %struct.MCol]** %mcol, align 8, !dbg !4023
  %88 = load i32, i32* %j, align 4, !dbg !4023
  %idxprom73 = sext i32 %88 to i64, !dbg !4023
  %arrayidx74 = getelementptr inbounds [4 x %struct.MCol], [4 x %struct.MCol]* %87, i64 0, i64 %idxprom73, !dbg !4023
  store %struct.MCol* %arrayidx74, %struct.MCol** %mcol__tmp, align 8, !dbg !4023
  %89 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !4023
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %89, i32 0, i32 0, !dbg !4023
  %90 = load i8, i8* %r, align 1, !dbg !4023
  %91 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !4023
  %b = getelementptr inbounds %struct.MCol, %struct.MCol* %91, i32 0, i32 3, !dbg !4023
  store i8 %90, i8* %b, align 1, !dbg !4023
  %92 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !4023
  %g = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %92, i32 0, i32 1, !dbg !4023
  %93 = load i8, i8* %g, align 1, !dbg !4023
  %94 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !4023
  %g75 = getelementptr inbounds %struct.MCol, %struct.MCol* %94, i32 0, i32 2, !dbg !4023
  store i8 %93, i8* %g75, align 1, !dbg !4023
  %95 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !4023
  %b76 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %95, i32 0, i32 2, !dbg !4023
  %96 = load i8, i8* %b76, align 1, !dbg !4023
  %97 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !4023
  %r77 = getelementptr inbounds %struct.MCol, %struct.MCol* %97, i32 0, i32 1, !dbg !4023
  store i8 %96, i8* %r77, align 1, !dbg !4023
  %98 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !4023
  %a = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %98, i32 0, i32 3, !dbg !4023
  %99 = load i8, i8* %a, align 1, !dbg !4023
  %100 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !4023
  %a78 = getelementptr inbounds %struct.MCol, %struct.MCol* %100, i32 0, i32 0, !dbg !4023
  store i8 %99, i8* %a78, align 1, !dbg !4023
  br label %for.cond65, !dbg !4025, !llvm.loop !4026

for.end79:                                        ; preds = %for.cond65
  br label %for.inc80, !dbg !4028

for.inc80:                                        ; preds = %for.end79
  %101 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4029
  %incdec.ptr81 = getelementptr inbounds [4 x i32], [4 x i32]* %101, i32 1, !dbg !4029
  store [4 x i32]* %incdec.ptr81, [4 x i32]** %lidx, align 8, !dbg !4029
  %102 = load i32, i32* %findex, align 4, !dbg !4030
  %inc82 = add nsw i32 %102, 1, !dbg !4030
  store i32 %inc82, i32* %findex, align 4, !dbg !4030
  %103 = load [4 x %struct.MCol]*, [4 x %struct.MCol]** %mcol, align 8, !dbg !4031
  %incdec.ptr83 = getelementptr inbounds [4 x %struct.MCol], [4 x %struct.MCol]* %103, i32 1, !dbg !4031
  store [4 x %struct.MCol]* %incdec.ptr83, [4 x %struct.MCol]** %mcol, align 8, !dbg !4031
  br label %for.cond51, !dbg !4032, !llvm.loop !4033

for.end84:                                        ; preds = %for.cond51
  br label %for.inc85, !dbg !4035

for.inc85:                                        ; preds = %for.end84
  %104 = load i32, i32* %i, align 4, !dbg !4036
  %inc86 = add nsw i32 %104, 1, !dbg !4036
  store i32 %inc86, i32* %i, align 4, !dbg !4036
  br label %for.cond46, !dbg !4037, !llvm.loop !4038

for.end87:                                        ; preds = %for.cond46
  %105 = load i8, i8* %hasPCol, align 1, !dbg !4040
  %tobool88 = icmp ne i8 %105, 0, !dbg !4040
  br i1 %tobool88, label %if.then, label %if.end, !dbg !4042

if.then:                                          ; preds = %for.end87
  call void @llvm.dbg.declare(metadata [4 x %struct.MCol]** %mcol89, metadata !4043, metadata !DIExpression()), !dbg !4045
  %106 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4046
  %call90 = call i8* @CustomData_get_layer(%struct.CustomData* %106, i32 20), !dbg !4047
  %107 = bitcast i8* %call90 to [4 x %struct.MCol]*, !dbg !4047
  store [4 x %struct.MCol]* %107, [4 x %struct.MCol]** %mcol89, align 8, !dbg !4045
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol91, metadata !4048, metadata !DIExpression()), !dbg !4049
  %108 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4050
  %call92 = call i8* @CustomData_get_layer(%struct.CustomData* %108, i32 32), !dbg !4051
  %109 = bitcast i8* %call92 to %struct.MLoopCol*, !dbg !4051
  store %struct.MLoopCol* %109, %struct.MLoopCol** %mloopcol91, align 8, !dbg !4049
  store i32 0, i32* %findex, align 4, !dbg !4052
  %110 = load [4 x i32]*, [4 x i32]** %loopindices.addr, align 8, !dbg !4054
  store [4 x i32]* %110, [4 x i32]** %lidx, align 8, !dbg !4055
  br label %for.cond93, !dbg !4056

for.cond93:                                       ; preds = %for.inc128, %if.then
  %111 = load i32, i32* %findex, align 4, !dbg !4057
  %112 = load i32, i32* %num_faces.addr, align 4, !dbg !4059
  %cmp94 = icmp slt i32 %111, %112, !dbg !4060
  br i1 %cmp94, label %for.body95, label %for.end132, !dbg !4061

for.body95:                                       ; preds = %for.cond93
  %113 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4062
  %tobool96 = icmp ne %struct.MFace* %113, null, !dbg !4062
  br i1 %tobool96, label %cond.true97, label %cond.false101, !dbg !4062

cond.true97:                                      ; preds = %for.body95
  %114 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4065
  %115 = load i32, i32* %findex, align 4, !dbg !4066
  %idxprom98 = sext i32 %115 to i64, !dbg !4065
  %arrayidx99 = getelementptr inbounds %struct.MFace, %struct.MFace* %114, i64 %idxprom98, !dbg !4065
  %v4100 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx99, i32 0, i32 3, !dbg !4067
  %116 = load i32, i32* %v4100, align 4, !dbg !4067
  br label %cond.end103, !dbg !4062

cond.false101:                                    ; preds = %for.body95
  %117 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4068
  %arrayidx102 = getelementptr inbounds [4 x i32], [4 x i32]* %117, i64 0, i64 3, !dbg !4069
  %118 = load i32, i32* %arrayidx102, align 4, !dbg !4069
  br label %cond.end103, !dbg !4062

cond.end103:                                      ; preds = %cond.false101, %cond.true97
  %cond104 = phi i32 [ %116, %cond.true97 ], [ %118, %cond.false101 ], !dbg !4062
  %tobool105 = icmp ne i32 %cond104, 0, !dbg !4070
  %119 = zext i1 %tobool105 to i64, !dbg !4070
  %cond106 = select i1 %tobool105, i32 4, i32 3, !dbg !4070
  store i32 %cond106, i32* %j, align 4, !dbg !4071
  br label %for.cond107, !dbg !4072

for.cond107:                                      ; preds = %for.body110, %cond.end103
  %120 = load i32, i32* %j, align 4, !dbg !4073
  %dec108 = add nsw i32 %120, -1, !dbg !4073
  store i32 %dec108, i32* %j, align 4, !dbg !4073
  %tobool109 = icmp ne i32 %120, 0, !dbg !4075
  br i1 %tobool109, label %for.body110, label %for.end127, !dbg !4075

for.body110:                                      ; preds = %for.cond107
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp111, metadata !4076, metadata !DIExpression()), !dbg !4079
  %121 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol91, align 8, !dbg !4079
  %122 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4079
  %123 = load i32, i32* %j, align 4, !dbg !4079
  %idxprom112 = sext i32 %123 to i64, !dbg !4079
  %arrayidx113 = getelementptr inbounds [4 x i32], [4 x i32]* %122, i64 0, i64 %idxprom112, !dbg !4079
  %124 = load i32, i32* %arrayidx113, align 4, !dbg !4079
  %idxprom114 = zext i32 %124 to i64, !dbg !4079
  %arrayidx115 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %121, i64 %idxprom114, !dbg !4079
  store %struct.MLoopCol* %arrayidx115, %struct.MLoopCol** %mloopcol__tmp111, align 8, !dbg !4079
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp116, metadata !4080, metadata !DIExpression()), !dbg !4079
  %125 = load [4 x %struct.MCol]*, [4 x %struct.MCol]** %mcol89, align 8, !dbg !4079
  %126 = load i32, i32* %j, align 4, !dbg !4079
  %idxprom117 = sext i32 %126 to i64, !dbg !4079
  %arrayidx118 = getelementptr inbounds [4 x %struct.MCol], [4 x %struct.MCol]* %125, i64 0, i64 %idxprom117, !dbg !4079
  store %struct.MCol* %arrayidx118, %struct.MCol** %mcol__tmp116, align 8, !dbg !4079
  %127 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp111, align 8, !dbg !4079
  %r119 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %127, i32 0, i32 0, !dbg !4079
  %128 = load i8, i8* %r119, align 1, !dbg !4079
  %129 = load %struct.MCol*, %struct.MCol** %mcol__tmp116, align 8, !dbg !4079
  %b120 = getelementptr inbounds %struct.MCol, %struct.MCol* %129, i32 0, i32 3, !dbg !4079
  store i8 %128, i8* %b120, align 1, !dbg !4079
  %130 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp111, align 8, !dbg !4079
  %g121 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %130, i32 0, i32 1, !dbg !4079
  %131 = load i8, i8* %g121, align 1, !dbg !4079
  %132 = load %struct.MCol*, %struct.MCol** %mcol__tmp116, align 8, !dbg !4079
  %g122 = getelementptr inbounds %struct.MCol, %struct.MCol* %132, i32 0, i32 2, !dbg !4079
  store i8 %131, i8* %g122, align 1, !dbg !4079
  %133 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp111, align 8, !dbg !4079
  %b123 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %133, i32 0, i32 2, !dbg !4079
  %134 = load i8, i8* %b123, align 1, !dbg !4079
  %135 = load %struct.MCol*, %struct.MCol** %mcol__tmp116, align 8, !dbg !4079
  %r124 = getelementptr inbounds %struct.MCol, %struct.MCol* %135, i32 0, i32 1, !dbg !4079
  store i8 %134, i8* %r124, align 1, !dbg !4079
  %136 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp111, align 8, !dbg !4079
  %a125 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %136, i32 0, i32 3, !dbg !4079
  %137 = load i8, i8* %a125, align 1, !dbg !4079
  %138 = load %struct.MCol*, %struct.MCol** %mcol__tmp116, align 8, !dbg !4079
  %a126 = getelementptr inbounds %struct.MCol, %struct.MCol* %138, i32 0, i32 0, !dbg !4079
  store i8 %137, i8* %a126, align 1, !dbg !4079
  br label %for.cond107, !dbg !4081, !llvm.loop !4082

for.end127:                                       ; preds = %for.cond107
  br label %for.inc128, !dbg !4084

for.inc128:                                       ; preds = %for.end127
  %139 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4085
  %incdec.ptr129 = getelementptr inbounds [4 x i32], [4 x i32]* %139, i32 1, !dbg !4085
  store [4 x i32]* %incdec.ptr129, [4 x i32]** %lidx, align 8, !dbg !4085
  %140 = load i32, i32* %findex, align 4, !dbg !4086
  %inc130 = add nsw i32 %140, 1, !dbg !4086
  store i32 %inc130, i32* %findex, align 4, !dbg !4086
  %141 = load [4 x %struct.MCol]*, [4 x %struct.MCol]** %mcol89, align 8, !dbg !4087
  %incdec.ptr131 = getelementptr inbounds [4 x %struct.MCol], [4 x %struct.MCol]* %141, i32 1, !dbg !4087
  store [4 x %struct.MCol]* %incdec.ptr131, [4 x %struct.MCol]** %mcol89, align 8, !dbg !4087
  br label %for.cond93, !dbg !4088, !llvm.loop !4089

for.end132:                                       ; preds = %for.cond93
  br label %if.end, !dbg !4091

if.end:                                           ; preds = %for.end132, %for.end87
  %142 = load i8, i8* %hasOrigSpace, align 1, !dbg !4092
  %tobool133 = icmp ne i8 %142, 0, !dbg !4092
  br i1 %tobool133, label %if.then134, label %if.end171, !dbg !4094

if.then134:                                       ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.OrigSpaceFace** %of, metadata !4095, metadata !DIExpression()), !dbg !4097
  %143 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4098
  %call135 = call i8* @CustomData_get_layer(%struct.CustomData* %143, i32 13), !dbg !4099
  %144 = bitcast i8* %call135 to %struct.OrigSpaceFace*, !dbg !4099
  store %struct.OrigSpaceFace* %144, %struct.OrigSpaceFace** %of, align 8, !dbg !4097
  call void @llvm.dbg.declare(metadata %struct.OrigSpaceLoop** %lof, metadata !4100, metadata !DIExpression()), !dbg !4101
  %145 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4102
  %call136 = call i8* @CustomData_get_layer(%struct.CustomData* %145, i32 31), !dbg !4103
  %146 = bitcast i8* %call136 to %struct.OrigSpaceLoop*, !dbg !4103
  store %struct.OrigSpaceLoop* %146, %struct.OrigSpaceLoop** %lof, align 8, !dbg !4101
  store i32 0, i32* %findex, align 4, !dbg !4104
  %147 = load [4 x i32]*, [4 x i32]** %loopindices.addr, align 8, !dbg !4106
  store [4 x i32]* %147, [4 x i32]** %lidx, align 8, !dbg !4107
  br label %for.cond137, !dbg !4108

for.cond137:                                      ; preds = %for.inc166, %if.then134
  %148 = load i32, i32* %findex, align 4, !dbg !4109
  %149 = load i32, i32* %num_faces.addr, align 4, !dbg !4111
  %cmp138 = icmp slt i32 %148, %149, !dbg !4112
  br i1 %cmp138, label %for.body139, label %for.end170, !dbg !4113

for.body139:                                      ; preds = %for.cond137
  %150 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4114
  %tobool140 = icmp ne %struct.MFace* %150, null, !dbg !4114
  br i1 %tobool140, label %cond.true141, label %cond.false145, !dbg !4114

cond.true141:                                     ; preds = %for.body139
  %151 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4117
  %152 = load i32, i32* %findex, align 4, !dbg !4118
  %idxprom142 = sext i32 %152 to i64, !dbg !4117
  %arrayidx143 = getelementptr inbounds %struct.MFace, %struct.MFace* %151, i64 %idxprom142, !dbg !4117
  %v4144 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx143, i32 0, i32 3, !dbg !4119
  %153 = load i32, i32* %v4144, align 4, !dbg !4119
  br label %cond.end147, !dbg !4114

cond.false145:                                    ; preds = %for.body139
  %154 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4120
  %arrayidx146 = getelementptr inbounds [4 x i32], [4 x i32]* %154, i64 0, i64 3, !dbg !4121
  %155 = load i32, i32* %arrayidx146, align 4, !dbg !4121
  br label %cond.end147, !dbg !4114

cond.end147:                                      ; preds = %cond.false145, %cond.true141
  %cond148 = phi i32 [ %153, %cond.true141 ], [ %155, %cond.false145 ], !dbg !4114
  %tobool149 = icmp ne i32 %cond148, 0, !dbg !4122
  %156 = zext i1 %tobool149 to i64, !dbg !4122
  %cond150 = select i1 %tobool149, i32 4, i32 3, !dbg !4122
  store i32 %cond150, i32* %j, align 4, !dbg !4123
  br label %for.cond151, !dbg !4124

for.cond151:                                      ; preds = %for.body154, %cond.end147
  %157 = load i32, i32* %j, align 4, !dbg !4125
  %dec152 = add nsw i32 %157, -1, !dbg !4125
  store i32 %dec152, i32* %j, align 4, !dbg !4125
  %tobool153 = icmp ne i32 %157, 0, !dbg !4127
  br i1 %tobool153, label %for.body154, label %for.end165, !dbg !4127

for.body154:                                      ; preds = %for.cond151
  %158 = load %struct.OrigSpaceFace*, %struct.OrigSpaceFace** %of, align 8, !dbg !4128
  %uv155 = getelementptr inbounds %struct.OrigSpaceFace, %struct.OrigSpaceFace* %158, i32 0, i32 0, !dbg !4130
  %159 = load i32, i32* %j, align 4, !dbg !4131
  %idxprom156 = sext i32 %159 to i64, !dbg !4128
  %arrayidx157 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv155, i64 0, i64 %idxprom156, !dbg !4128
  %arraydecay158 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx157, i64 0, i64 0, !dbg !4128
  %160 = load %struct.OrigSpaceLoop*, %struct.OrigSpaceLoop** %lof, align 8, !dbg !4132
  %161 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4133
  %162 = load i32, i32* %j, align 4, !dbg !4134
  %idxprom159 = sext i32 %162 to i64, !dbg !4135
  %arrayidx160 = getelementptr inbounds [4 x i32], [4 x i32]* %161, i64 0, i64 %idxprom159, !dbg !4135
  %163 = load i32, i32* %arrayidx160, align 4, !dbg !4135
  %idxprom161 = zext i32 %163 to i64, !dbg !4132
  %arrayidx162 = getelementptr inbounds %struct.OrigSpaceLoop, %struct.OrigSpaceLoop* %160, i64 %idxprom161, !dbg !4132
  %uv163 = getelementptr inbounds %struct.OrigSpaceLoop, %struct.OrigSpaceLoop* %arrayidx162, i32 0, i32 0, !dbg !4136
  %arraydecay164 = getelementptr inbounds [2 x float], [2 x float]* %uv163, i64 0, i64 0, !dbg !4132
  call void @copy_v2_v2(float* %arraydecay158, float* %arraydecay164), !dbg !4137
  br label %for.cond151, !dbg !4138, !llvm.loop !4139

for.end165:                                       ; preds = %for.cond151
  br label %for.inc166, !dbg !4141

for.inc166:                                       ; preds = %for.end165
  %164 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4142
  %incdec.ptr167 = getelementptr inbounds [4 x i32], [4 x i32]* %164, i32 1, !dbg !4142
  store [4 x i32]* %incdec.ptr167, [4 x i32]** %lidx, align 8, !dbg !4142
  %165 = load i32, i32* %findex, align 4, !dbg !4143
  %inc168 = add nsw i32 %165, 1, !dbg !4143
  store i32 %inc168, i32* %findex, align 4, !dbg !4143
  %166 = load %struct.OrigSpaceFace*, %struct.OrigSpaceFace** %of, align 8, !dbg !4144
  %incdec.ptr169 = getelementptr inbounds %struct.OrigSpaceFace, %struct.OrigSpaceFace* %166, i32 1, !dbg !4144
  store %struct.OrigSpaceFace* %incdec.ptr169, %struct.OrigSpaceFace** %of, align 8, !dbg !4144
  br label %for.cond137, !dbg !4145, !llvm.loop !4146

for.end170:                                       ; preds = %for.cond137
  br label %if.end171, !dbg !4148

if.end171:                                        ; preds = %for.end170, %if.end
  %167 = load i8, i8* %hasLoopNormal, align 1, !dbg !4149
  %tobool172 = icmp ne i8 %167, 0, !dbg !4149
  br i1 %tobool172, label %if.then173, label %if.end208, !dbg !4151

if.then173:                                       ; preds = %if.end171
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %fnors, metadata !4152, metadata !DIExpression()), !dbg !4157
  %168 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4158
  %call174 = call i8* @CustomData_get_layer(%struct.CustomData* %168, i32 40), !dbg !4159
  %169 = bitcast i8* %call174 to [4 x [3 x i16]]*, !dbg !4159
  store [4 x [3 x i16]]* %169, [4 x [3 x i16]]** %fnors, align 8, !dbg !4157
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !4160, metadata !DIExpression()), !dbg !4161
  %170 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4162
  %call175 = call i8* @CustomData_get_layer(%struct.CustomData* %170, i32 8), !dbg !4163
  %171 = bitcast i8* %call175 to [3 x float]*, !dbg !4163
  store [3 x float]* %171, [3 x float]** %lnors, align 8, !dbg !4161
  store i32 0, i32* %findex, align 4, !dbg !4164
  %172 = load [4 x i32]*, [4 x i32]** %loopindices.addr, align 8, !dbg !4166
  store [4 x i32]* %172, [4 x i32]** %lidx, align 8, !dbg !4167
  br label %for.cond176, !dbg !4168

for.cond176:                                      ; preds = %for.inc203, %if.then173
  %173 = load i32, i32* %findex, align 4, !dbg !4169
  %174 = load i32, i32* %num_faces.addr, align 4, !dbg !4171
  %cmp177 = icmp slt i32 %173, %174, !dbg !4172
  br i1 %cmp177, label %for.body178, label %for.end207, !dbg !4173

for.body178:                                      ; preds = %for.cond176
  %175 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4174
  %tobool179 = icmp ne %struct.MFace* %175, null, !dbg !4174
  br i1 %tobool179, label %cond.true180, label %cond.false184, !dbg !4174

cond.true180:                                     ; preds = %for.body178
  %176 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !4177
  %177 = load i32, i32* %findex, align 4, !dbg !4178
  %idxprom181 = sext i32 %177 to i64, !dbg !4177
  %arrayidx182 = getelementptr inbounds %struct.MFace, %struct.MFace* %176, i64 %idxprom181, !dbg !4177
  %v4183 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx182, i32 0, i32 3, !dbg !4179
  %178 = load i32, i32* %v4183, align 4, !dbg !4179
  br label %cond.end186, !dbg !4174

cond.false184:                                    ; preds = %for.body178
  %179 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4180
  %arrayidx185 = getelementptr inbounds [4 x i32], [4 x i32]* %179, i64 0, i64 3, !dbg !4181
  %180 = load i32, i32* %arrayidx185, align 4, !dbg !4181
  br label %cond.end186, !dbg !4174

cond.end186:                                      ; preds = %cond.false184, %cond.true180
  %cond187 = phi i32 [ %178, %cond.true180 ], [ %180, %cond.false184 ], !dbg !4174
  %tobool188 = icmp ne i32 %cond187, 0, !dbg !4182
  %181 = zext i1 %tobool188 to i64, !dbg !4182
  %cond189 = select i1 %tobool188, i32 4, i32 3, !dbg !4182
  store i32 %cond189, i32* %j, align 4, !dbg !4183
  br label %for.cond190, !dbg !4184

for.cond190:                                      ; preds = %for.body193, %cond.end186
  %182 = load i32, i32* %j, align 4, !dbg !4185
  %dec191 = add nsw i32 %182, -1, !dbg !4185
  store i32 %dec191, i32* %j, align 4, !dbg !4185
  %tobool192 = icmp ne i32 %182, 0, !dbg !4187
  br i1 %tobool192, label %for.body193, label %for.end202, !dbg !4187

for.body193:                                      ; preds = %for.cond190
  %183 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %fnors, align 8, !dbg !4188
  %184 = load i32, i32* %j, align 4, !dbg !4190
  %idxprom194 = sext i32 %184 to i64, !dbg !4191
  %arrayidx195 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %183, i64 0, i64 %idxprom194, !dbg !4191
  %arraydecay196 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx195, i64 0, i64 0, !dbg !4191
  %185 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4192
  %186 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4193
  %187 = load i32, i32* %j, align 4, !dbg !4194
  %idxprom197 = sext i32 %187 to i64, !dbg !4195
  %arrayidx198 = getelementptr inbounds [4 x i32], [4 x i32]* %186, i64 0, i64 %idxprom197, !dbg !4195
  %188 = load i32, i32* %arrayidx198, align 4, !dbg !4195
  %idxprom199 = zext i32 %188 to i64, !dbg !4192
  %arrayidx200 = getelementptr inbounds [3 x float], [3 x float]* %185, i64 %idxprom199, !dbg !4192
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx200, i64 0, i64 0, !dbg !4192
  call void @normal_float_to_short_v3(i16* %arraydecay196, float* %arraydecay201), !dbg !4196
  br label %for.cond190, !dbg !4197, !llvm.loop !4198

for.end202:                                       ; preds = %for.cond190
  br label %for.inc203, !dbg !4200

for.inc203:                                       ; preds = %for.end202
  %189 = load [4 x i32]*, [4 x i32]** %lidx, align 8, !dbg !4201
  %incdec.ptr204 = getelementptr inbounds [4 x i32], [4 x i32]* %189, i32 1, !dbg !4201
  store [4 x i32]* %incdec.ptr204, [4 x i32]** %lidx, align 8, !dbg !4201
  %190 = load i32, i32* %findex, align 4, !dbg !4202
  %inc205 = add nsw i32 %190, 1, !dbg !4202
  store i32 %inc205, i32* %findex, align 4, !dbg !4202
  %191 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %fnors, align 8, !dbg !4203
  %incdec.ptr206 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %191, i32 1, !dbg !4203
  store [4 x [3 x i16]]* %incdec.ptr206, [4 x [3 x i16]]** %fnors, align 8, !dbg !4203
  br label %for.cond176, !dbg !4204, !llvm.loop !4205

for.end207:                                       ; preds = %for.cond176
  br label %if.end208, !dbg !4207

if.end208:                                        ; preds = %for.end207, %if.end171
  ret void, !dbg !4208
}

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #2

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_get_layer_n(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mesh_recalc_tessellation(%struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, %struct.MVert* %mvert, i32 %totface, i32 %totloop, i32 %totpoly, i8 zeroext %do_face_nor_cpy) #0 !dbg !4209 {
entry:
  %fdata.addr = alloca %struct.CustomData*, align 8
  %ldata.addr = alloca %struct.CustomData*, align 8
  %pdata.addr = alloca %struct.CustomData*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %totface.addr = alloca i32, align 4
  %totloop.addr = alloca i32, align 4
  %totpoly.addr = alloca i32, align 4
  %do_face_nor_cpy.addr = alloca i8, align 1
  %looptris_tot = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mf = alloca %struct.MFace*, align 8
  %arena = alloca %struct.MemArena*, align 8
  %mface_to_poly_map = alloca i32*, align 8
  %lindices = alloca [4 x i32]*, align 8
  %poly_index = alloca i32, align 4
  %mface_index = alloca i32, align 4
  %j = alloca i32, align 4
  %mp_loopstart = alloca i32, align 4
  %mp_totloop = alloca i32, align 4
  %l1 = alloca i32, align 4
  %l2 = alloca i32, align 4
  %l3 = alloca i32, align 4
  %l4 = alloca i32, align 4
  %lidx = alloca i32*, align 8
  %co_curr = alloca float*, align 8
  %co_prev = alloca float*, align 8
  %normal = alloca [3 x float], align 4
  %axis_mat = alloca [3 x [3 x float]], align 16
  %projverts = alloca [2 x float]*, align 8
  %tris = alloca [3 x i32]*, align 8
  %totfilltri = alloca i32, align 4
  %tri = alloca i32*, align 8
  %sw_ap = alloca i32, align 4
  %sw_ap163 = alloca i32, align 4
  %sw_ap168 = alloca i32, align 4
  %pnors = alloca [3 x float]*, align 8
  %fnors = alloca [3 x float]*, align 8
  store %struct.CustomData* %fdata, %struct.CustomData** %fdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata.addr, metadata !4212, metadata !DIExpression()), !dbg !4213
  store %struct.CustomData* %ldata, %struct.CustomData** %ldata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata.addr, metadata !4214, metadata !DIExpression()), !dbg !4215
  store %struct.CustomData* %pdata, %struct.CustomData** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata.addr, metadata !4216, metadata !DIExpression()), !dbg !4217
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !4218, metadata !DIExpression()), !dbg !4219
  store i32 %totface, i32* %totface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totface.addr, metadata !4220, metadata !DIExpression()), !dbg !4221
  store i32 %totloop, i32* %totloop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totloop.addr, metadata !4222, metadata !DIExpression()), !dbg !4223
  store i32 %totpoly, i32* %totpoly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoly.addr, metadata !4224, metadata !DIExpression()), !dbg !4225
  store i8 %do_face_nor_cpy, i8* %do_face_nor_cpy.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_face_nor_cpy.addr, metadata !4226, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.declare(metadata i32* %looptris_tot, metadata !4228, metadata !DIExpression()), !dbg !4229
  %0 = load i32, i32* %totpoly.addr, align 4, !dbg !4230
  %1 = load i32, i32* %totloop.addr, align 4, !dbg !4231
  %call = call i32 @poly_to_tri_count(i32 %0, i32 %1), !dbg !4232
  store i32 %call, i32* %looptris_tot, align 4, !dbg !4229
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !4233, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !4235, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !4237, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !4239, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !4241, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !4243, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.declare(metadata %struct.MemArena** %arena, metadata !4245, metadata !DIExpression()), !dbg !4250
  store %struct.MemArena* null, %struct.MemArena** %arena, align 8, !dbg !4250
  call void @llvm.dbg.declare(metadata i32** %mface_to_poly_map, metadata !4251, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.declare(metadata [4 x i32]** %lindices, metadata !4253, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.declare(metadata i32* %poly_index, metadata !4255, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.declare(metadata i32* %mface_index, metadata !4257, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4259, metadata !DIExpression()), !dbg !4260
  %2 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !4261
  %call1 = call i8* @CustomData_get_layer(%struct.CustomData* %2, i32 25), !dbg !4262
  %3 = bitcast i8* %call1 to %struct.MPoly*, !dbg !4262
  store %struct.MPoly* %3, %struct.MPoly** %mpoly, align 8, !dbg !4263
  %4 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4264
  %call2 = call i8* @CustomData_get_layer(%struct.CustomData* %4, i32 26), !dbg !4265
  %5 = bitcast i8* %call2 to %struct.MLoop*, !dbg !4265
  store %struct.MLoop* %5, %struct.MLoop** %mloop, align 8, !dbg !4266
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4267
  %7 = load i32, i32* %looptris_tot, align 4, !dbg !4268
  %conv = sext i32 %7 to i64, !dbg !4269
  %mul = mul i64 4, %conv, !dbg !4270
  %call3 = call i8* %6(i64 %mul, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.BKE_mesh_recalc_tessellation, i64 0, i64 0)), !dbg !4267
  %8 = bitcast i8* %call3 to i32*, !dbg !4267
  store i32* %8, i32** %mface_to_poly_map, align 8, !dbg !4271
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4272
  %10 = load i32, i32* %looptris_tot, align 4, !dbg !4273
  %conv4 = sext i32 %10 to i64, !dbg !4274
  %mul5 = mul i64 20, %conv4, !dbg !4275
  %call6 = call i8* %9(i64 %mul5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.BKE_mesh_recalc_tessellation, i64 0, i64 0)), !dbg !4272
  %11 = bitcast i8* %call6 to %struct.MFace*, !dbg !4272
  store %struct.MFace* %11, %struct.MFace** %mface, align 8, !dbg !4276
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4277
  %13 = load i32, i32* %looptris_tot, align 4, !dbg !4278
  %conv7 = sext i32 %13 to i64, !dbg !4279
  %mul8 = mul i64 16, %conv7, !dbg !4280
  %call9 = call i8* %12(i64 %mul8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.BKE_mesh_recalc_tessellation, i64 0, i64 0)), !dbg !4277
  %14 = bitcast i8* %call9 to [4 x i32]*, !dbg !4277
  store [4 x i32]* %14, [4 x i32]** %lindices, align 8, !dbg !4281
  store i32 0, i32* %mface_index, align 4, !dbg !4282
  %15 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4283
  store %struct.MPoly* %15, %struct.MPoly** %mp, align 8, !dbg !4284
  store i32 0, i32* %poly_index, align 4, !dbg !4285
  br label %for.cond, !dbg !4287

for.cond:                                         ; preds = %for.inc199, %entry
  %16 = load i32, i32* %poly_index, align 4, !dbg !4288
  %17 = load i32, i32* %totpoly.addr, align 4, !dbg !4290
  %cmp = icmp slt i32 %16, %17, !dbg !4291
  br i1 %cmp, label %for.body, label %for.end202, !dbg !4292

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %mp_loopstart, metadata !4293, metadata !DIExpression()), !dbg !4295
  %18 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4296
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i32 0, i32 0, !dbg !4297
  %19 = load i32, i32* %loopstart, align 4, !dbg !4297
  store i32 %19, i32* %mp_loopstart, align 4, !dbg !4295
  call void @llvm.dbg.declare(metadata i32* %mp_totloop, metadata !4298, metadata !DIExpression()), !dbg !4299
  %20 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4300
  %totloop11 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %20, i32 0, i32 1, !dbg !4301
  %21 = load i32, i32* %totloop11, align 4, !dbg !4301
  store i32 %21, i32* %mp_totloop, align 4, !dbg !4299
  call void @llvm.dbg.declare(metadata i32* %l1, metadata !4302, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.declare(metadata i32* %l2, metadata !4304, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.declare(metadata i32* %l3, metadata !4306, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.declare(metadata i32* %l4, metadata !4308, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.declare(metadata i32** %lidx, metadata !4310, metadata !DIExpression()), !dbg !4311
  %22 = load i32, i32* %mp_totloop, align 4, !dbg !4312
  %cmp12 = icmp ult i32 %22, 3, !dbg !4314
  br i1 %cmp12, label %if.then, label %if.else, !dbg !4315

if.then:                                          ; preds = %for.body
  br label %if.end198, !dbg !4316

if.else:                                          ; preds = %for.body
  %23 = load i32, i32* %mp_totloop, align 4, !dbg !4318
  %cmp14 = icmp eq i32 %23, 3, !dbg !4320
  br i1 %cmp14, label %if.then16, label %if.else37, !dbg !4321

if.then16:                                        ; preds = %if.else
  %24 = load i32, i32* %poly_index, align 4, !dbg !4322
  %25 = load i32*, i32** %mface_to_poly_map, align 8, !dbg !4322
  %26 = load i32, i32* %mface_index, align 4, !dbg !4322
  %idxprom = sext i32 %26 to i64, !dbg !4322
  %arrayidx = getelementptr inbounds i32, i32* %25, i64 %idxprom, !dbg !4322
  store i32 %24, i32* %arrayidx, align 4, !dbg !4322
  %27 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4322
  %28 = load i32, i32* %mface_index, align 4, !dbg !4322
  %idxprom17 = sext i32 %28 to i64, !dbg !4322
  %arrayidx18 = getelementptr inbounds %struct.MFace, %struct.MFace* %27, i64 %idxprom17, !dbg !4322
  store %struct.MFace* %arrayidx18, %struct.MFace** %mf, align 8, !dbg !4322
  %29 = load [4 x i32]*, [4 x i32]** %lindices, align 8, !dbg !4322
  %30 = load i32, i32* %mface_index, align 4, !dbg !4322
  %idxprom19 = sext i32 %30 to i64, !dbg !4322
  %arrayidx20 = getelementptr inbounds [4 x i32], [4 x i32]* %29, i64 %idxprom19, !dbg !4322
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx20, i64 0, i64 0, !dbg !4322
  store i32* %arraydecay, i32** %lidx, align 8, !dbg !4322
  %31 = load i32, i32* %mp_loopstart, align 4, !dbg !4322
  %add = add i32 %31, 0, !dbg !4322
  store i32 %add, i32* %l1, align 4, !dbg !4322
  %32 = load i32, i32* %mp_loopstart, align 4, !dbg !4322
  %add21 = add i32 %32, 1, !dbg !4322
  store i32 %add21, i32* %l2, align 4, !dbg !4322
  %33 = load i32, i32* %mp_loopstart, align 4, !dbg !4322
  %add22 = add i32 %33, 2, !dbg !4322
  store i32 %add22, i32* %l3, align 4, !dbg !4322
  %34 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4322
  %35 = load i32, i32* %l1, align 4, !dbg !4322
  %idxprom23 = zext i32 %35 to i64, !dbg !4322
  %arrayidx24 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %34, i64 %idxprom23, !dbg !4322
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx24, i32 0, i32 0, !dbg !4322
  %36 = load i32, i32* %v, align 4, !dbg !4322
  %37 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4322
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %37, i32 0, i32 0, !dbg !4322
  store i32 %36, i32* %v1, align 4, !dbg !4322
  %38 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4322
  %39 = load i32, i32* %l2, align 4, !dbg !4322
  %idxprom25 = zext i32 %39 to i64, !dbg !4322
  %arrayidx26 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %38, i64 %idxprom25, !dbg !4322
  %v27 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx26, i32 0, i32 0, !dbg !4322
  %40 = load i32, i32* %v27, align 4, !dbg !4322
  %41 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4322
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %41, i32 0, i32 1, !dbg !4322
  store i32 %40, i32* %v2, align 4, !dbg !4322
  %42 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4322
  %43 = load i32, i32* %l3, align 4, !dbg !4322
  %idxprom28 = zext i32 %43 to i64, !dbg !4322
  %arrayidx29 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %42, i64 %idxprom28, !dbg !4322
  %v30 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx29, i32 0, i32 0, !dbg !4322
  %44 = load i32, i32* %v30, align 4, !dbg !4322
  %45 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4322
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %45, i32 0, i32 2, !dbg !4322
  store i32 %44, i32* %v3, align 4, !dbg !4322
  %46 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4322
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %46, i32 0, i32 3, !dbg !4322
  store i32 0, i32* %v4, align 4, !dbg !4322
  %47 = load i32, i32* %l1, align 4, !dbg !4322
  %48 = load i32*, i32** %lidx, align 8, !dbg !4322
  %arrayidx31 = getelementptr inbounds i32, i32* %48, i64 0, !dbg !4322
  store i32 %47, i32* %arrayidx31, align 4, !dbg !4322
  %49 = load i32, i32* %l2, align 4, !dbg !4322
  %50 = load i32*, i32** %lidx, align 8, !dbg !4322
  %arrayidx32 = getelementptr inbounds i32, i32* %50, i64 1, !dbg !4322
  store i32 %49, i32* %arrayidx32, align 4, !dbg !4322
  %51 = load i32, i32* %l3, align 4, !dbg !4322
  %52 = load i32*, i32** %lidx, align 8, !dbg !4322
  %arrayidx33 = getelementptr inbounds i32, i32* %52, i64 2, !dbg !4322
  store i32 %51, i32* %arrayidx33, align 4, !dbg !4322
  %53 = load i32*, i32** %lidx, align 8, !dbg !4322
  %arrayidx34 = getelementptr inbounds i32, i32* %53, i64 3, !dbg !4322
  store i32 0, i32* %arrayidx34, align 4, !dbg !4322
  %54 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4322
  %mat_nr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %54, i32 0, i32 2, !dbg !4322
  %55 = load i16, i16* %mat_nr, align 4, !dbg !4322
  %56 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4322
  %mat_nr35 = getelementptr inbounds %struct.MFace, %struct.MFace* %56, i32 0, i32 4, !dbg !4322
  store i16 %55, i16* %mat_nr35, align 4, !dbg !4322
  %57 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4322
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %57, i32 0, i32 3, !dbg !4322
  %58 = load i8, i8* %flag, align 2, !dbg !4322
  %59 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4322
  %flag36 = getelementptr inbounds %struct.MFace, %struct.MFace* %59, i32 0, i32 6, !dbg !4322
  store i8 %58, i8* %flag36, align 1, !dbg !4322
  %60 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4322
  %edcode = getelementptr inbounds %struct.MFace, %struct.MFace* %60, i32 0, i32 5, !dbg !4322
  store i8 0, i8* %edcode, align 2, !dbg !4322
  %61 = load i32, i32* %mface_index, align 4, !dbg !4324
  %inc = add nsw i32 %61, 1, !dbg !4324
  store i32 %inc, i32* %mface_index, align 4, !dbg !4324
  br label %if.end197, !dbg !4325

if.else37:                                        ; preds = %if.else
  %62 = load i32, i32* %mp_totloop, align 4, !dbg !4326
  %cmp38 = icmp eq i32 %62, 4, !dbg !4328
  br i1 %cmp38, label %if.then40, label %if.else78, !dbg !4329

if.then40:                                        ; preds = %if.else37
  %63 = load i32, i32* %poly_index, align 4, !dbg !4330
  %64 = load i32*, i32** %mface_to_poly_map, align 8, !dbg !4330
  %65 = load i32, i32* %mface_index, align 4, !dbg !4330
  %idxprom41 = sext i32 %65 to i64, !dbg !4330
  %arrayidx42 = getelementptr inbounds i32, i32* %64, i64 %idxprom41, !dbg !4330
  store i32 %63, i32* %arrayidx42, align 4, !dbg !4330
  %66 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4330
  %67 = load i32, i32* %mface_index, align 4, !dbg !4330
  %idxprom43 = sext i32 %67 to i64, !dbg !4330
  %arrayidx44 = getelementptr inbounds %struct.MFace, %struct.MFace* %66, i64 %idxprom43, !dbg !4330
  store %struct.MFace* %arrayidx44, %struct.MFace** %mf, align 8, !dbg !4330
  %68 = load [4 x i32]*, [4 x i32]** %lindices, align 8, !dbg !4330
  %69 = load i32, i32* %mface_index, align 4, !dbg !4330
  %idxprom45 = sext i32 %69 to i64, !dbg !4330
  %arrayidx46 = getelementptr inbounds [4 x i32], [4 x i32]* %68, i64 %idxprom45, !dbg !4330
  %arraydecay47 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 0, !dbg !4330
  store i32* %arraydecay47, i32** %lidx, align 8, !dbg !4330
  %70 = load i32, i32* %mp_loopstart, align 4, !dbg !4330
  %add48 = add i32 %70, 0, !dbg !4330
  store i32 %add48, i32* %l1, align 4, !dbg !4330
  %71 = load i32, i32* %mp_loopstart, align 4, !dbg !4330
  %add49 = add i32 %71, 1, !dbg !4330
  store i32 %add49, i32* %l2, align 4, !dbg !4330
  %72 = load i32, i32* %mp_loopstart, align 4, !dbg !4330
  %add50 = add i32 %72, 2, !dbg !4330
  store i32 %add50, i32* %l3, align 4, !dbg !4330
  %73 = load i32, i32* %mp_loopstart, align 4, !dbg !4330
  %add51 = add i32 %73, 3, !dbg !4330
  store i32 %add51, i32* %l4, align 4, !dbg !4330
  %74 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4330
  %75 = load i32, i32* %l1, align 4, !dbg !4330
  %idxprom52 = zext i32 %75 to i64, !dbg !4330
  %arrayidx53 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %74, i64 %idxprom52, !dbg !4330
  %v54 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx53, i32 0, i32 0, !dbg !4330
  %76 = load i32, i32* %v54, align 4, !dbg !4330
  %77 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4330
  %v155 = getelementptr inbounds %struct.MFace, %struct.MFace* %77, i32 0, i32 0, !dbg !4330
  store i32 %76, i32* %v155, align 4, !dbg !4330
  %78 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4330
  %79 = load i32, i32* %l2, align 4, !dbg !4330
  %idxprom56 = zext i32 %79 to i64, !dbg !4330
  %arrayidx57 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %78, i64 %idxprom56, !dbg !4330
  %v58 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx57, i32 0, i32 0, !dbg !4330
  %80 = load i32, i32* %v58, align 4, !dbg !4330
  %81 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4330
  %v259 = getelementptr inbounds %struct.MFace, %struct.MFace* %81, i32 0, i32 1, !dbg !4330
  store i32 %80, i32* %v259, align 4, !dbg !4330
  %82 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4330
  %83 = load i32, i32* %l3, align 4, !dbg !4330
  %idxprom60 = zext i32 %83 to i64, !dbg !4330
  %arrayidx61 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %82, i64 %idxprom60, !dbg !4330
  %v62 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx61, i32 0, i32 0, !dbg !4330
  %84 = load i32, i32* %v62, align 4, !dbg !4330
  %85 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4330
  %v363 = getelementptr inbounds %struct.MFace, %struct.MFace* %85, i32 0, i32 2, !dbg !4330
  store i32 %84, i32* %v363, align 4, !dbg !4330
  %86 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4330
  %87 = load i32, i32* %l4, align 4, !dbg !4330
  %idxprom64 = zext i32 %87 to i64, !dbg !4330
  %arrayidx65 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %86, i64 %idxprom64, !dbg !4330
  %v66 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx65, i32 0, i32 0, !dbg !4330
  %88 = load i32, i32* %v66, align 4, !dbg !4330
  %89 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4330
  %v467 = getelementptr inbounds %struct.MFace, %struct.MFace* %89, i32 0, i32 3, !dbg !4330
  store i32 %88, i32* %v467, align 4, !dbg !4330
  %90 = load i32, i32* %l1, align 4, !dbg !4330
  %91 = load i32*, i32** %lidx, align 8, !dbg !4330
  %arrayidx68 = getelementptr inbounds i32, i32* %91, i64 0, !dbg !4330
  store i32 %90, i32* %arrayidx68, align 4, !dbg !4330
  %92 = load i32, i32* %l2, align 4, !dbg !4330
  %93 = load i32*, i32** %lidx, align 8, !dbg !4330
  %arrayidx69 = getelementptr inbounds i32, i32* %93, i64 1, !dbg !4330
  store i32 %92, i32* %arrayidx69, align 4, !dbg !4330
  %94 = load i32, i32* %l3, align 4, !dbg !4330
  %95 = load i32*, i32** %lidx, align 8, !dbg !4330
  %arrayidx70 = getelementptr inbounds i32, i32* %95, i64 2, !dbg !4330
  store i32 %94, i32* %arrayidx70, align 4, !dbg !4330
  %96 = load i32, i32* %l4, align 4, !dbg !4330
  %97 = load i32*, i32** %lidx, align 8, !dbg !4330
  %arrayidx71 = getelementptr inbounds i32, i32* %97, i64 3, !dbg !4330
  store i32 %96, i32* %arrayidx71, align 4, !dbg !4330
  %98 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4330
  %mat_nr72 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %98, i32 0, i32 2, !dbg !4330
  %99 = load i16, i16* %mat_nr72, align 4, !dbg !4330
  %100 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4330
  %mat_nr73 = getelementptr inbounds %struct.MFace, %struct.MFace* %100, i32 0, i32 4, !dbg !4330
  store i16 %99, i16* %mat_nr73, align 4, !dbg !4330
  %101 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4330
  %flag74 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %101, i32 0, i32 3, !dbg !4330
  %102 = load i8, i8* %flag74, align 2, !dbg !4330
  %103 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4330
  %flag75 = getelementptr inbounds %struct.MFace, %struct.MFace* %103, i32 0, i32 6, !dbg !4330
  store i8 %102, i8* %flag75, align 1, !dbg !4330
  %104 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4330
  %edcode76 = getelementptr inbounds %struct.MFace, %struct.MFace* %104, i32 0, i32 5, !dbg !4330
  store i8 1, i8* %edcode76, align 2, !dbg !4330
  %105 = load i32, i32* %mface_index, align 4, !dbg !4332
  %inc77 = add nsw i32 %105, 1, !dbg !4332
  store i32 %inc77, i32* %mface_index, align 4, !dbg !4332
  br label %if.end196, !dbg !4333

if.else78:                                        ; preds = %if.else37
  call void @llvm.dbg.declare(metadata float** %co_curr, metadata !4334, metadata !DIExpression()), !dbg !4336
  call void @llvm.dbg.declare(metadata float** %co_prev, metadata !4337, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.declare(metadata [3 x float]* %normal, metadata !4339, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %axis_mat, metadata !4341, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.declare(metadata [2 x float]** %projverts, metadata !4345, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.declare(metadata [3 x i32]** %tris, metadata !4348, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.declare(metadata i32* %totfilltri, metadata !4352, metadata !DIExpression()), !dbg !4353
  %106 = load i32, i32* %mp_totloop, align 4, !dbg !4354
  %sub = sub i32 %106, 2, !dbg !4355
  store i32 %sub, i32* %totfilltri, align 4, !dbg !4353
  %107 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !4356
  %cmp79 = icmp eq %struct.MemArena* %107, null, !dbg !4356
  br i1 %cmp79, label %if.then81, label %if.end, !dbg !4358

if.then81:                                        ; preds = %if.else78
  %call82 = call %struct.MemArena* @BLI_memarena_new(i64 16376, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.BKE_mesh_recalc_tessellation, i64 0, i64 0)), !dbg !4359
  store %struct.MemArena* %call82, %struct.MemArena** %arena, align 8, !dbg !4361
  br label %if.end, !dbg !4362

if.end:                                           ; preds = %if.then81, %if.else78
  %108 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !4363
  %109 = load i32, i32* %totfilltri, align 4, !dbg !4364
  %conv83 = zext i32 %109 to i64, !dbg !4365
  %mul84 = mul i64 12, %conv83, !dbg !4366
  %call85 = call i8* @BLI_memarena_alloc(%struct.MemArena* %108, i64 %mul84), !dbg !4367
  %110 = bitcast i8* %call85 to [3 x i32]*, !dbg !4367
  store [3 x i32]* %110, [3 x i32]** %tris, align 8, !dbg !4368
  %111 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !4369
  %112 = load i32, i32* %mp_totloop, align 4, !dbg !4370
  %conv86 = zext i32 %112 to i64, !dbg !4371
  %mul87 = mul i64 8, %conv86, !dbg !4372
  %call88 = call i8* @BLI_memarena_alloc(%struct.MemArena* %111, i64 %mul87), !dbg !4373
  %113 = bitcast i8* %call88 to [2 x float]*, !dbg !4373
  store [2 x float]* %113, [2 x float]** %projverts, align 8, !dbg !4374
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !4375
  call void @zero_v3(float* %arraydecay89), !dbg !4376
  %114 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4377
  %115 = load i32, i32* %mp_loopstart, align 4, !dbg !4378
  %idx.ext = zext i32 %115 to i64, !dbg !4379
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %114, i64 %idx.ext, !dbg !4379
  store %struct.MLoop* %add.ptr, %struct.MLoop** %ml, align 8, !dbg !4380
  %116 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4381
  %117 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4382
  %118 = load i32, i32* %mp_totloop, align 4, !dbg !4383
  %sub90 = sub i32 %118, 1, !dbg !4384
  %idxprom91 = zext i32 %sub90 to i64, !dbg !4382
  %arrayidx92 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %117, i64 %idxprom91, !dbg !4382
  %v93 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx92, i32 0, i32 0, !dbg !4385
  %119 = load i32, i32* %v93, align 4, !dbg !4385
  %idxprom94 = zext i32 %119 to i64, !dbg !4381
  %arrayidx95 = getelementptr inbounds %struct.MVert, %struct.MVert* %116, i64 %idxprom94, !dbg !4381
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx95, i32 0, i32 0, !dbg !4386
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4381
  store float* %arraydecay96, float** %co_prev, align 8, !dbg !4387
  store i32 0, i32* %j, align 4, !dbg !4388
  br label %for.cond97, !dbg !4390

for.cond97:                                       ; preds = %for.inc, %if.end
  %120 = load i32, i32* %j, align 4, !dbg !4391
  %121 = load i32, i32* %mp_totloop, align 4, !dbg !4393
  %cmp98 = icmp ult i32 %120, %121, !dbg !4394
  br i1 %cmp98, label %for.body100, label %for.end, !dbg !4395

for.body100:                                      ; preds = %for.cond97
  %122 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4396
  %123 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4398
  %v101 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %123, i32 0, i32 0, !dbg !4399
  %124 = load i32, i32* %v101, align 4, !dbg !4399
  %idxprom102 = zext i32 %124 to i64, !dbg !4396
  %arrayidx103 = getelementptr inbounds %struct.MVert, %struct.MVert* %122, i64 %idxprom102, !dbg !4396
  %co104 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx103, i32 0, i32 0, !dbg !4400
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %co104, i64 0, i64 0, !dbg !4396
  store float* %arraydecay105, float** %co_curr, align 8, !dbg !4401
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !4402
  %125 = load float*, float** %co_prev, align 8, !dbg !4403
  %126 = load float*, float** %co_curr, align 8, !dbg !4404
  call void @add_newell_cross_v3_v3v3(float* %arraydecay106, float* %125, float* %126), !dbg !4405
  %127 = load float*, float** %co_curr, align 8, !dbg !4406
  store float* %127, float** %co_prev, align 8, !dbg !4407
  br label %for.inc, !dbg !4408

for.inc:                                          ; preds = %for.body100
  %128 = load i32, i32* %j, align 4, !dbg !4409
  %inc107 = add i32 %128, 1, !dbg !4409
  store i32 %inc107, i32* %j, align 4, !dbg !4409
  %129 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4410
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %129, i32 1, !dbg !4410
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !4410
  br label %for.cond97, !dbg !4411, !llvm.loop !4412

for.end:                                          ; preds = %for.cond97
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !4414
  %call109 = call float @normalize_v3(float* %arraydecay108), !dbg !4414
  %cmp110 = fcmp oeq float %call109, 0.000000e+00, !dbg !4414
  br i1 %cmp110, label %if.then112, label %if.end114, !dbg !4416

if.then112:                                       ; preds = %for.end
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 2, !dbg !4417
  store float 1.000000e+00, float* %arrayidx113, align 4, !dbg !4419
  br label %if.end114, !dbg !4420

if.end114:                                        ; preds = %if.then112, %for.end
  %arraydecay115 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %axis_mat, i64 0, i64 0, !dbg !4421
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !4422
  call void @axis_dominant_v3_to_m3([3 x float]* %arraydecay115, float* %arraydecay116), !dbg !4423
  %130 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4424
  %131 = load i32, i32* %mp_loopstart, align 4, !dbg !4425
  %idx.ext117 = zext i32 %131 to i64, !dbg !4426
  %add.ptr118 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %130, i64 %idx.ext117, !dbg !4426
  store %struct.MLoop* %add.ptr118, %struct.MLoop** %ml, align 8, !dbg !4427
  store i32 0, i32* %j, align 4, !dbg !4428
  br label %for.cond119, !dbg !4430

for.cond119:                                      ; preds = %for.inc132, %if.end114
  %132 = load i32, i32* %j, align 4, !dbg !4431
  %133 = load i32, i32* %mp_totloop, align 4, !dbg !4433
  %cmp120 = icmp ult i32 %132, %133, !dbg !4434
  br i1 %cmp120, label %for.body122, label %for.end135, !dbg !4435

for.body122:                                      ; preds = %for.cond119
  %134 = load [2 x float]*, [2 x float]** %projverts, align 8, !dbg !4436
  %135 = load i32, i32* %j, align 4, !dbg !4438
  %idxprom123 = zext i32 %135 to i64, !dbg !4436
  %arrayidx124 = getelementptr inbounds [2 x float], [2 x float]* %134, i64 %idxprom123, !dbg !4436
  %arraydecay125 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx124, i64 0, i64 0, !dbg !4436
  %arraydecay126 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %axis_mat, i64 0, i64 0, !dbg !4439
  %136 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !4440
  %137 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4441
  %v127 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %137, i32 0, i32 0, !dbg !4442
  %138 = load i32, i32* %v127, align 4, !dbg !4442
  %idxprom128 = zext i32 %138 to i64, !dbg !4440
  %arrayidx129 = getelementptr inbounds %struct.MVert, %struct.MVert* %136, i64 %idxprom128, !dbg !4440
  %co130 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx129, i32 0, i32 0, !dbg !4443
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %co130, i64 0, i64 0, !dbg !4440
  call void @mul_v2_m3v3(float* %arraydecay125, [3 x float]* %arraydecay126, float* %arraydecay131), !dbg !4444
  br label %for.inc132, !dbg !4445

for.inc132:                                       ; preds = %for.body122
  %139 = load i32, i32* %j, align 4, !dbg !4446
  %inc133 = add i32 %139, 1, !dbg !4446
  store i32 %inc133, i32* %j, align 4, !dbg !4446
  %140 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !4447
  %incdec.ptr134 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %140, i32 1, !dbg !4447
  store %struct.MLoop* %incdec.ptr134, %struct.MLoop** %ml, align 8, !dbg !4447
  br label %for.cond119, !dbg !4448, !llvm.loop !4449

for.end135:                                       ; preds = %for.cond119
  %141 = load [2 x float]*, [2 x float]** %projverts, align 8, !dbg !4451
  %142 = load i32, i32* %mp_totloop, align 4, !dbg !4452
  %143 = load [3 x i32]*, [3 x i32]** %tris, align 8, !dbg !4453
  %144 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !4454
  call void @BLI_polyfill_calc_arena([2 x float]* %141, i32 %142, i32 -1, [3 x i32]* %143, %struct.MemArena* %144), !dbg !4455
  store i32 0, i32* %j, align 4, !dbg !4456
  br label %for.cond136, !dbg !4458

for.cond136:                                      ; preds = %for.inc193, %for.end135
  %145 = load i32, i32* %j, align 4, !dbg !4459
  %146 = load i32, i32* %totfilltri, align 4, !dbg !4461
  %cmp137 = icmp ult i32 %145, %146, !dbg !4462
  br i1 %cmp137, label %for.body139, label %for.end195, !dbg !4463

for.body139:                                      ; preds = %for.cond136
  call void @llvm.dbg.declare(metadata i32** %tri, metadata !4464, metadata !DIExpression()), !dbg !4466
  %147 = load [3 x i32]*, [3 x i32]** %tris, align 8, !dbg !4467
  %148 = load i32, i32* %j, align 4, !dbg !4468
  %idxprom140 = zext i32 %148 to i64, !dbg !4467
  %arrayidx141 = getelementptr inbounds [3 x i32], [3 x i32]* %147, i64 %idxprom140, !dbg !4467
  %arraydecay142 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx141, i64 0, i64 0, !dbg !4467
  store i32* %arraydecay142, i32** %tri, align 8, !dbg !4466
  %149 = load [4 x i32]*, [4 x i32]** %lindices, align 8, !dbg !4469
  %150 = load i32, i32* %mface_index, align 4, !dbg !4470
  %idxprom143 = sext i32 %150 to i64, !dbg !4469
  %arrayidx144 = getelementptr inbounds [4 x i32], [4 x i32]* %149, i64 %idxprom143, !dbg !4469
  %arraydecay145 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx144, i64 0, i64 0, !dbg !4469
  store i32* %arraydecay145, i32** %lidx, align 8, !dbg !4471
  %151 = load i32, i32* %poly_index, align 4, !dbg !4472
  %152 = load i32*, i32** %mface_to_poly_map, align 8, !dbg !4473
  %153 = load i32, i32* %mface_index, align 4, !dbg !4474
  %idxprom146 = sext i32 %153 to i64, !dbg !4473
  %arrayidx147 = getelementptr inbounds i32, i32* %152, i64 %idxprom146, !dbg !4473
  store i32 %151, i32* %arrayidx147, align 4, !dbg !4475
  %154 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4476
  %155 = load i32, i32* %mface_index, align 4, !dbg !4477
  %idxprom148 = sext i32 %155 to i64, !dbg !4476
  %arrayidx149 = getelementptr inbounds %struct.MFace, %struct.MFace* %154, i64 %idxprom148, !dbg !4476
  store %struct.MFace* %arrayidx149, %struct.MFace** %mf, align 8, !dbg !4478
  %156 = load i32, i32* %mp_loopstart, align 4, !dbg !4479
  %157 = load i32*, i32** %tri, align 8, !dbg !4480
  %arrayidx150 = getelementptr inbounds i32, i32* %157, i64 0, !dbg !4480
  %158 = load i32, i32* %arrayidx150, align 4, !dbg !4480
  %add151 = add i32 %156, %158, !dbg !4481
  store i32 %add151, i32* %l1, align 4, !dbg !4482
  %159 = load i32, i32* %mp_loopstart, align 4, !dbg !4483
  %160 = load i32*, i32** %tri, align 8, !dbg !4484
  %arrayidx152 = getelementptr inbounds i32, i32* %160, i64 1, !dbg !4484
  %161 = load i32, i32* %arrayidx152, align 4, !dbg !4484
  %add153 = add i32 %159, %161, !dbg !4485
  store i32 %add153, i32* %l2, align 4, !dbg !4486
  %162 = load i32, i32* %mp_loopstart, align 4, !dbg !4487
  %163 = load i32*, i32** %tri, align 8, !dbg !4488
  %arrayidx154 = getelementptr inbounds i32, i32* %163, i64 2, !dbg !4488
  %164 = load i32, i32* %arrayidx154, align 4, !dbg !4488
  %add155 = add i32 %162, %164, !dbg !4489
  store i32 %add155, i32* %l3, align 4, !dbg !4490
  %165 = load i32, i32* %l1, align 4, !dbg !4491
  %166 = load i32, i32* %l2, align 4, !dbg !4493
  %cmp156 = icmp ugt i32 %165, %166, !dbg !4494
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !4495

if.then158:                                       ; preds = %for.body139
  call void @llvm.dbg.declare(metadata i32* %sw_ap, metadata !4496, metadata !DIExpression()), !dbg !4498
  %167 = load i32, i32* %l1, align 4, !dbg !4498
  store i32 %167, i32* %sw_ap, align 4, !dbg !4498
  %168 = load i32, i32* %l2, align 4, !dbg !4498
  store i32 %168, i32* %l1, align 4, !dbg !4498
  %169 = load i32, i32* %sw_ap, align 4, !dbg !4498
  store i32 %169, i32* %l2, align 4, !dbg !4498
  br label %if.end159, !dbg !4498

if.end159:                                        ; preds = %if.then158, %for.body139
  %170 = load i32, i32* %l2, align 4, !dbg !4499
  %171 = load i32, i32* %l3, align 4, !dbg !4501
  %cmp160 = icmp ugt i32 %170, %171, !dbg !4502
  br i1 %cmp160, label %if.then162, label %if.end164, !dbg !4503

if.then162:                                       ; preds = %if.end159
  call void @llvm.dbg.declare(metadata i32* %sw_ap163, metadata !4504, metadata !DIExpression()), !dbg !4506
  %172 = load i32, i32* %l2, align 4, !dbg !4506
  store i32 %172, i32* %sw_ap163, align 4, !dbg !4506
  %173 = load i32, i32* %l3, align 4, !dbg !4506
  store i32 %173, i32* %l2, align 4, !dbg !4506
  %174 = load i32, i32* %sw_ap163, align 4, !dbg !4506
  store i32 %174, i32* %l3, align 4, !dbg !4506
  br label %if.end164, !dbg !4506

if.end164:                                        ; preds = %if.then162, %if.end159
  %175 = load i32, i32* %l1, align 4, !dbg !4507
  %176 = load i32, i32* %l2, align 4, !dbg !4509
  %cmp165 = icmp ugt i32 %175, %176, !dbg !4510
  br i1 %cmp165, label %if.then167, label %if.end169, !dbg !4511

if.then167:                                       ; preds = %if.end164
  call void @llvm.dbg.declare(metadata i32* %sw_ap168, metadata !4512, metadata !DIExpression()), !dbg !4514
  %177 = load i32, i32* %l1, align 4, !dbg !4514
  store i32 %177, i32* %sw_ap168, align 4, !dbg !4514
  %178 = load i32, i32* %l2, align 4, !dbg !4514
  store i32 %178, i32* %l1, align 4, !dbg !4514
  %179 = load i32, i32* %sw_ap168, align 4, !dbg !4514
  store i32 %179, i32* %l2, align 4, !dbg !4514
  br label %if.end169, !dbg !4514

if.end169:                                        ; preds = %if.then167, %if.end164
  %180 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4515
  %181 = load i32, i32* %l1, align 4, !dbg !4516
  %idxprom170 = zext i32 %181 to i64, !dbg !4515
  %arrayidx171 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %180, i64 %idxprom170, !dbg !4515
  %v172 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx171, i32 0, i32 0, !dbg !4517
  %182 = load i32, i32* %v172, align 4, !dbg !4517
  %183 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4518
  %v1173 = getelementptr inbounds %struct.MFace, %struct.MFace* %183, i32 0, i32 0, !dbg !4519
  store i32 %182, i32* %v1173, align 4, !dbg !4520
  %184 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4521
  %185 = load i32, i32* %l2, align 4, !dbg !4522
  %idxprom174 = zext i32 %185 to i64, !dbg !4521
  %arrayidx175 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %184, i64 %idxprom174, !dbg !4521
  %v176 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx175, i32 0, i32 0, !dbg !4523
  %186 = load i32, i32* %v176, align 4, !dbg !4523
  %187 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4524
  %v2177 = getelementptr inbounds %struct.MFace, %struct.MFace* %187, i32 0, i32 1, !dbg !4525
  store i32 %186, i32* %v2177, align 4, !dbg !4526
  %188 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4527
  %189 = load i32, i32* %l3, align 4, !dbg !4528
  %idxprom178 = zext i32 %189 to i64, !dbg !4527
  %arrayidx179 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %188, i64 %idxprom178, !dbg !4527
  %v180 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx179, i32 0, i32 0, !dbg !4529
  %190 = load i32, i32* %v180, align 4, !dbg !4529
  %191 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4530
  %v3181 = getelementptr inbounds %struct.MFace, %struct.MFace* %191, i32 0, i32 2, !dbg !4531
  store i32 %190, i32* %v3181, align 4, !dbg !4532
  %192 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4533
  %v4182 = getelementptr inbounds %struct.MFace, %struct.MFace* %192, i32 0, i32 3, !dbg !4534
  store i32 0, i32* %v4182, align 4, !dbg !4535
  %193 = load i32, i32* %l1, align 4, !dbg !4536
  %194 = load i32*, i32** %lidx, align 8, !dbg !4537
  %arrayidx183 = getelementptr inbounds i32, i32* %194, i64 0, !dbg !4537
  store i32 %193, i32* %arrayidx183, align 4, !dbg !4538
  %195 = load i32, i32* %l2, align 4, !dbg !4539
  %196 = load i32*, i32** %lidx, align 8, !dbg !4540
  %arrayidx184 = getelementptr inbounds i32, i32* %196, i64 1, !dbg !4540
  store i32 %195, i32* %arrayidx184, align 4, !dbg !4541
  %197 = load i32, i32* %l3, align 4, !dbg !4542
  %198 = load i32*, i32** %lidx, align 8, !dbg !4543
  %arrayidx185 = getelementptr inbounds i32, i32* %198, i64 2, !dbg !4543
  store i32 %197, i32* %arrayidx185, align 4, !dbg !4544
  %199 = load i32*, i32** %lidx, align 8, !dbg !4545
  %arrayidx186 = getelementptr inbounds i32, i32* %199, i64 3, !dbg !4545
  store i32 0, i32* %arrayidx186, align 4, !dbg !4546
  %200 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4547
  %mat_nr187 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %200, i32 0, i32 2, !dbg !4548
  %201 = load i16, i16* %mat_nr187, align 4, !dbg !4548
  %202 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4549
  %mat_nr188 = getelementptr inbounds %struct.MFace, %struct.MFace* %202, i32 0, i32 4, !dbg !4550
  store i16 %201, i16* %mat_nr188, align 4, !dbg !4551
  %203 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4552
  %flag189 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %203, i32 0, i32 3, !dbg !4553
  %204 = load i8, i8* %flag189, align 2, !dbg !4553
  %205 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4554
  %flag190 = getelementptr inbounds %struct.MFace, %struct.MFace* %205, i32 0, i32 6, !dbg !4555
  store i8 %204, i8* %flag190, align 1, !dbg !4556
  %206 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4557
  %edcode191 = getelementptr inbounds %struct.MFace, %struct.MFace* %206, i32 0, i32 5, !dbg !4558
  store i8 0, i8* %edcode191, align 2, !dbg !4559
  %207 = load i32, i32* %mface_index, align 4, !dbg !4560
  %inc192 = add nsw i32 %207, 1, !dbg !4560
  store i32 %inc192, i32* %mface_index, align 4, !dbg !4560
  br label %for.inc193, !dbg !4561

for.inc193:                                       ; preds = %if.end169
  %208 = load i32, i32* %j, align 4, !dbg !4562
  %inc194 = add i32 %208, 1, !dbg !4562
  store i32 %inc194, i32* %j, align 4, !dbg !4562
  br label %for.cond136, !dbg !4563, !llvm.loop !4564

for.end195:                                       ; preds = %for.cond136
  %209 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !4566
  call void @BLI_memarena_clear(%struct.MemArena* %209), !dbg !4567
  br label %if.end196

if.end196:                                        ; preds = %for.end195, %if.then40
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.then16
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %if.then
  br label %for.inc199, !dbg !4568

for.inc199:                                       ; preds = %if.end198
  %210 = load i32, i32* %poly_index, align 4, !dbg !4569
  %inc200 = add nsw i32 %210, 1, !dbg !4569
  store i32 %inc200, i32* %poly_index, align 4, !dbg !4569
  %211 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4570
  %incdec.ptr201 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %211, i32 1, !dbg !4570
  store %struct.MPoly* %incdec.ptr201, %struct.MPoly** %mp, align 8, !dbg !4570
  br label %for.cond, !dbg !4571, !llvm.loop !4572

for.end202:                                       ; preds = %for.cond
  %212 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !4574
  %tobool = icmp ne %struct.MemArena* %212, null, !dbg !4574
  br i1 %tobool, label %if.then203, label %if.end204, !dbg !4576

if.then203:                                       ; preds = %for.end202
  %213 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !4577
  call void @BLI_memarena_free(%struct.MemArena* %213), !dbg !4579
  store %struct.MemArena* null, %struct.MemArena** %arena, align 8, !dbg !4580
  br label %if.end204, !dbg !4581

if.end204:                                        ; preds = %if.then203, %for.end202
  %214 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4582
  %215 = load i32, i32* %totface.addr, align 4, !dbg !4583
  call void @CustomData_free(%struct.CustomData* %214, i32 %215), !dbg !4584
  %216 = load i32, i32* %mface_index, align 4, !dbg !4585
  store i32 %216, i32* %totface.addr, align 4, !dbg !4586
  %217 = load i32, i32* %looptris_tot, align 4, !dbg !4587
  %218 = load i32, i32* %totface.addr, align 4, !dbg !4587
  %cmp205 = icmp ne i32 %217, %218, !dbg !4587
  br i1 %cmp205, label %if.then207, label %if.end214, !dbg !4589

if.then207:                                       ; preds = %if.end204
  %219 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !4590
  %220 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4590
  %221 = bitcast %struct.MFace* %220 to i8*, !dbg !4590
  %222 = load i32, i32* %totface.addr, align 4, !dbg !4590
  %conv208 = sext i32 %222 to i64, !dbg !4590
  %mul209 = mul i64 20, %conv208, !dbg !4590
  %call210 = call i8* %219(i8* %221, i64 %mul209, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.BKE_mesh_recalc_tessellation, i64 0, i64 0)), !dbg !4590
  %223 = bitcast i8* %call210 to %struct.MFace*, !dbg !4590
  store %struct.MFace* %223, %struct.MFace** %mface, align 8, !dbg !4592
  %224 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !4593
  %225 = load i32*, i32** %mface_to_poly_map, align 8, !dbg !4593
  %226 = bitcast i32* %225 to i8*, !dbg !4593
  %227 = load i32, i32* %totface.addr, align 4, !dbg !4593
  %conv211 = sext i32 %227 to i64, !dbg !4593
  %mul212 = mul i64 4, %conv211, !dbg !4593
  %call213 = call i8* %224(i8* %226, i64 %mul212, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.BKE_mesh_recalc_tessellation, i64 0, i64 0)), !dbg !4593
  %228 = bitcast i8* %call213 to i32*, !dbg !4593
  store i32* %228, i32** %mface_to_poly_map, align 8, !dbg !4594
  br label %if.end214, !dbg !4595

if.end214:                                        ; preds = %if.then207, %if.end204
  %229 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4596
  %230 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4597
  %231 = bitcast %struct.MFace* %230 to i8*, !dbg !4597
  %232 = load i32, i32* %totface.addr, align 4, !dbg !4598
  %call215 = call i8* @CustomData_add_layer(%struct.CustomData* %229, i32 4, i32 0, i8* %231, i32 %232), !dbg !4599
  %233 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4600
  %234 = load i32*, i32** %mface_to_poly_map, align 8, !dbg !4601
  %235 = bitcast i32* %234 to i8*, !dbg !4601
  %236 = load i32, i32* %totface.addr, align 4, !dbg !4602
  %call216 = call i8* @CustomData_add_layer(%struct.CustomData* %233, i32 7, i32 0, i8* %235, i32 %236), !dbg !4603
  %237 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4604
  %238 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !4605
  %239 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4606
  %240 = load i32, i32* %totface.addr, align 4, !dbg !4607
  call void @CustomData_from_bmeshpoly(%struct.CustomData* %237, %struct.CustomData* %238, %struct.CustomData* %239, i32 %240), !dbg !4608
  %241 = load i8, i8* %do_face_nor_cpy.addr, align 1, !dbg !4609
  %tobool217 = icmp ne i8 %241, 0, !dbg !4609
  br i1 %tobool217, label %if.then218, label %if.end240, !dbg !4611

if.then218:                                       ; preds = %if.end214
  %242 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !4612
  %call219 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %242, i32 8), !dbg !4615
  %tobool220 = icmp ne i8 %call219, 0, !dbg !4615
  br i1 %tobool220, label %if.then221, label %if.end239, !dbg !4616

if.then221:                                       ; preds = %if.then218
  call void @llvm.dbg.declare(metadata [3 x float]** %pnors, metadata !4617, metadata !DIExpression()), !dbg !4619
  %243 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !4620
  %call222 = call i8* @CustomData_get_layer(%struct.CustomData* %243, i32 8), !dbg !4621
  %244 = bitcast i8* %call222 to [3 x float]*, !dbg !4621
  store [3 x float]* %244, [3 x float]** %pnors, align 8, !dbg !4619
  call void @llvm.dbg.declare(metadata [3 x float]** %fnors, metadata !4622, metadata !DIExpression()), !dbg !4623
  %245 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4624
  %246 = load i32, i32* %totface.addr, align 4, !dbg !4625
  %call223 = call i8* @CustomData_add_layer(%struct.CustomData* %245, i32 8, i32 1, i8* null, i32 %246), !dbg !4626
  %247 = bitcast i8* %call223 to [3 x float]*, !dbg !4626
  store [3 x float]* %247, [3 x float]** %fnors, align 8, !dbg !4623
  store i32 0, i32* %mface_index, align 4, !dbg !4627
  br label %for.cond224, !dbg !4629

for.cond224:                                      ; preds = %for.inc236, %if.then221
  %248 = load i32, i32* %mface_index, align 4, !dbg !4630
  %249 = load i32, i32* %totface.addr, align 4, !dbg !4632
  %cmp225 = icmp slt i32 %248, %249, !dbg !4633
  br i1 %cmp225, label %for.body227, label %for.end238, !dbg !4634

for.body227:                                      ; preds = %for.cond224
  %250 = load [3 x float]*, [3 x float]** %fnors, align 8, !dbg !4635
  %251 = load i32, i32* %mface_index, align 4, !dbg !4637
  %idxprom228 = sext i32 %251 to i64, !dbg !4635
  %arrayidx229 = getelementptr inbounds [3 x float], [3 x float]* %250, i64 %idxprom228, !dbg !4635
  %arraydecay230 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx229, i64 0, i64 0, !dbg !4635
  %252 = load [3 x float]*, [3 x float]** %pnors, align 8, !dbg !4638
  %253 = load i32*, i32** %mface_to_poly_map, align 8, !dbg !4639
  %254 = load i32, i32* %mface_index, align 4, !dbg !4640
  %idxprom231 = sext i32 %254 to i64, !dbg !4639
  %arrayidx232 = getelementptr inbounds i32, i32* %253, i64 %idxprom231, !dbg !4639
  %255 = load i32, i32* %arrayidx232, align 4, !dbg !4639
  %idxprom233 = sext i32 %255 to i64, !dbg !4638
  %arrayidx234 = getelementptr inbounds [3 x float], [3 x float]* %252, i64 %idxprom233, !dbg !4638
  %arraydecay235 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx234, i64 0, i64 0, !dbg !4638
  call void @copy_v3_v3(float* %arraydecay230, float* %arraydecay235), !dbg !4641
  br label %for.inc236, !dbg !4642

for.inc236:                                       ; preds = %for.body227
  %256 = load i32, i32* %mface_index, align 4, !dbg !4643
  %inc237 = add nsw i32 %256, 1, !dbg !4643
  store i32 %inc237, i32* %mface_index, align 4, !dbg !4643
  br label %for.cond224, !dbg !4644, !llvm.loop !4645

for.end238:                                       ; preds = %for.cond224
  br label %if.end239, !dbg !4647

if.end239:                                        ; preds = %for.end238, %if.then218
  br label %if.end240, !dbg !4648

if.end240:                                        ; preds = %if.end239, %if.end214
  %257 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4649
  %258 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4650
  %259 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !4651
  %260 = load i32*, i32** %mface_to_poly_map, align 8, !dbg !4652
  %261 = load [4 x i32]*, [4 x i32]** %lindices, align 8, !dbg !4653
  %262 = load i32, i32* %totface.addr, align 4, !dbg !4654
  call void @BKE_mesh_loops_to_tessdata(%struct.CustomData* %257, %struct.CustomData* %258, %struct.CustomData* %259, %struct.MFace* null, i32* %260, [4 x i32]* %261, i32 %262), !dbg !4655
  %263 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4656
  store %struct.MFace* %263, %struct.MFace** %mf, align 8, !dbg !4657
  store i32 0, i32* %mface_index, align 4, !dbg !4658
  br label %for.cond241, !dbg !4660

for.cond241:                                      ; preds = %for.inc253, %if.end240
  %264 = load i32, i32* %mface_index, align 4, !dbg !4661
  %265 = load i32, i32* %totface.addr, align 4, !dbg !4663
  %cmp242 = icmp slt i32 %264, %265, !dbg !4664
  br i1 %cmp242, label %for.body244, label %for.end256, !dbg !4665

for.body244:                                      ; preds = %for.cond241
  %266 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4666
  %edcode245 = getelementptr inbounds %struct.MFace, %struct.MFace* %266, i32 0, i32 5, !dbg !4669
  %267 = load i8, i8* %edcode245, align 2, !dbg !4669
  %conv246 = zext i8 %267 to i32, !dbg !4666
  %cmp247 = icmp eq i32 %conv246, 1, !dbg !4670
  br i1 %cmp247, label %if.then249, label %if.end252, !dbg !4671

if.then249:                                       ; preds = %for.body244
  %268 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4672
  %269 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4674
  %270 = load i32, i32* %mface_index, align 4, !dbg !4675
  %call250 = call i32 @test_index_face(%struct.MFace* %268, %struct.CustomData* %269, i32 %270, i32 4), !dbg !4676
  %271 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4677
  %edcode251 = getelementptr inbounds %struct.MFace, %struct.MFace* %271, i32 0, i32 5, !dbg !4678
  store i8 0, i8* %edcode251, align 2, !dbg !4679
  br label %if.end252, !dbg !4680

if.end252:                                        ; preds = %if.then249, %for.body244
  br label %for.inc253, !dbg !4681

for.inc253:                                       ; preds = %if.end252
  %272 = load i32, i32* %mface_index, align 4, !dbg !4682
  %inc254 = add nsw i32 %272, 1, !dbg !4682
  store i32 %inc254, i32* %mface_index, align 4, !dbg !4682
  %273 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4683
  %incdec.ptr255 = getelementptr inbounds %struct.MFace, %struct.MFace* %273, i32 1, !dbg !4683
  store %struct.MFace* %incdec.ptr255, %struct.MFace** %mf, align 8, !dbg !4683
  br label %for.cond241, !dbg !4684, !llvm.loop !4685

for.end256:                                       ; preds = %for.cond241
  %274 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4687
  %275 = load [4 x i32]*, [4 x i32]** %lindices, align 8, !dbg !4688
  %276 = bitcast [4 x i32]* %275 to i8*, !dbg !4688
  call void %274(i8* %276), !dbg !4687
  %277 = load i32, i32* %totface.addr, align 4, !dbg !4689
  ret i32 %277, !dbg !4690
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @poly_to_tri_count(i32 %poly_count, i32 %corner_count) #0 !dbg !4691 {
entry:
  %poly_count.addr = alloca i32, align 4
  %corner_count.addr = alloca i32, align 4
  store i32 %poly_count, i32* %poly_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %poly_count.addr, metadata !4695, metadata !DIExpression()), !dbg !4696
  store i32 %corner_count, i32* %corner_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %corner_count.addr, metadata !4697, metadata !DIExpression()), !dbg !4698
  %0 = load i32, i32* %corner_count.addr, align 4, !dbg !4699
  %1 = load i32, i32* %poly_count.addr, align 4, !dbg !4700
  %mul = mul nsw i32 %1, 2, !dbg !4701
  %sub = sub nsw i32 %0, %mul, !dbg !4702
  ret i32 %sub, !dbg !4703
}

declare dso_local %struct.MemArena* @BLI_memarena_new(i64, i8*) #2

declare dso_local i8* @BLI_memarena_alloc(%struct.MemArena*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_newell_cross_v3_v3v3(float* %n, float* %v_prev, float* %v_curr) #0 !dbg !4704 {
entry:
  %n.addr = alloca float*, align 8
  %v_prev.addr = alloca float*, align 8
  %v_curr.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4705, metadata !DIExpression()), !dbg !4706
  store float* %v_prev, float** %v_prev.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v_prev.addr, metadata !4707, metadata !DIExpression()), !dbg !4708
  store float* %v_curr, float** %v_curr.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v_curr.addr, metadata !4709, metadata !DIExpression()), !dbg !4710
  %0 = load float*, float** %v_prev.addr, align 8, !dbg !4711
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !4711
  %1 = load float, float* %arrayidx, align 4, !dbg !4711
  %2 = load float*, float** %v_curr.addr, align 8, !dbg !4712
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !4712
  %3 = load float, float* %arrayidx1, align 4, !dbg !4712
  %sub = fsub float %1, %3, !dbg !4713
  %4 = load float*, float** %v_prev.addr, align 8, !dbg !4714
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !4714
  %5 = load float, float* %arrayidx2, align 4, !dbg !4714
  %6 = load float*, float** %v_curr.addr, align 8, !dbg !4715
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 2, !dbg !4715
  %7 = load float, float* %arrayidx3, align 4, !dbg !4715
  %add = fadd float %5, %7, !dbg !4716
  %mul = fmul float %sub, %add, !dbg !4717
  %8 = load float*, float** %n.addr, align 8, !dbg !4718
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 0, !dbg !4718
  %9 = load float, float* %arrayidx4, align 4, !dbg !4719
  %add5 = fadd float %9, %mul, !dbg !4719
  store float %add5, float* %arrayidx4, align 4, !dbg !4719
  %10 = load float*, float** %v_prev.addr, align 8, !dbg !4720
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !4720
  %11 = load float, float* %arrayidx6, align 4, !dbg !4720
  %12 = load float*, float** %v_curr.addr, align 8, !dbg !4721
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 2, !dbg !4721
  %13 = load float, float* %arrayidx7, align 4, !dbg !4721
  %sub8 = fsub float %11, %13, !dbg !4722
  %14 = load float*, float** %v_prev.addr, align 8, !dbg !4723
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !4723
  %15 = load float, float* %arrayidx9, align 4, !dbg !4723
  %16 = load float*, float** %v_curr.addr, align 8, !dbg !4724
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 0, !dbg !4724
  %17 = load float, float* %arrayidx10, align 4, !dbg !4724
  %add11 = fadd float %15, %17, !dbg !4725
  %mul12 = fmul float %sub8, %add11, !dbg !4726
  %18 = load float*, float** %n.addr, align 8, !dbg !4727
  %arrayidx13 = getelementptr inbounds float, float* %18, i64 1, !dbg !4727
  %19 = load float, float* %arrayidx13, align 4, !dbg !4728
  %add14 = fadd float %19, %mul12, !dbg !4728
  store float %add14, float* %arrayidx13, align 4, !dbg !4728
  %20 = load float*, float** %v_prev.addr, align 8, !dbg !4729
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 0, !dbg !4729
  %21 = load float, float* %arrayidx15, align 4, !dbg !4729
  %22 = load float*, float** %v_curr.addr, align 8, !dbg !4730
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 0, !dbg !4730
  %23 = load float, float* %arrayidx16, align 4, !dbg !4730
  %sub17 = fsub float %21, %23, !dbg !4731
  %24 = load float*, float** %v_prev.addr, align 8, !dbg !4732
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 1, !dbg !4732
  %25 = load float, float* %arrayidx18, align 4, !dbg !4732
  %26 = load float*, float** %v_curr.addr, align 8, !dbg !4733
  %arrayidx19 = getelementptr inbounds float, float* %26, i64 1, !dbg !4733
  %27 = load float, float* %arrayidx19, align 4, !dbg !4733
  %add20 = fadd float %25, %27, !dbg !4734
  %mul21 = fmul float %sub17, %add20, !dbg !4735
  %28 = load float*, float** %n.addr, align 8, !dbg !4736
  %arrayidx22 = getelementptr inbounds float, float* %28, i64 2, !dbg !4736
  %29 = load float, float* %arrayidx22, align 4, !dbg !4737
  %add23 = fadd float %29, %mul21, !dbg !4737
  store float %add23, float* %arrayidx22, align 4, !dbg !4737
  ret void, !dbg !4738
}

declare dso_local void @axis_dominant_v3_to_m3([3 x float]*, float*) #2

declare dso_local void @mul_v2_m3v3(float*, [3 x float]*, float*) #2

declare dso_local void @BLI_polyfill_calc_arena([2 x float]*, i32, i32, [3 x i32]*, %struct.MemArena*) #2

declare dso_local void @BLI_memarena_clear(%struct.MemArena*) #2

declare dso_local void @BLI_memarena_free(%struct.MemArena*) #2

declare dso_local void @CustomData_free(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

declare dso_local void @CustomData_from_bmeshpoly(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, i32) #2

declare dso_local i32 @test_index_face(%struct.MFace*, %struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mesh_mpoly_to_mface(%struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, i32 %totface, i32 %UNUSED_totloop, i32 %totpoly) #0 !dbg !4739 {
entry:
  %fdata.addr = alloca %struct.CustomData*, align 8
  %ldata.addr = alloca %struct.CustomData*, align 8
  %pdata.addr = alloca %struct.CustomData*, align 8
  %totface.addr = alloca i32, align 4
  %UNUSED_totloop.addr = alloca i32, align 4
  %totpoly.addr = alloca i32, align 4
  %mloop = alloca %struct.MLoop*, align 8
  %lindex = alloca [4 x i32], align 16
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mf = alloca %struct.MFace*, align 8
  %numTex = alloca i32, align 4
  %numCol = alloca i32, align 4
  %hasPCol = alloca i8, align 1
  %hasOrigSpace = alloca i8, align 1
  %hasLNor = alloca i8, align 1
  %mp_loopstart = alloca i32, align 4
  store %struct.CustomData* %fdata, %struct.CustomData** %fdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata.addr, metadata !4743, metadata !DIExpression()), !dbg !4744
  store %struct.CustomData* %ldata, %struct.CustomData** %ldata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata.addr, metadata !4745, metadata !DIExpression()), !dbg !4746
  store %struct.CustomData* %pdata, %struct.CustomData** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata.addr, metadata !4747, metadata !DIExpression()), !dbg !4748
  store i32 %totface, i32* %totface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totface.addr, metadata !4749, metadata !DIExpression()), !dbg !4750
  store i32 %UNUSED_totloop, i32* %UNUSED_totloop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_totloop.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  store i32 %totpoly, i32* %totpoly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoly.addr, metadata !4753, metadata !DIExpression()), !dbg !4754
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !4755, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.declare(metadata [4 x i32]* %lindex, metadata !4757, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4759, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4761, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !4763, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !4765, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !4767, metadata !DIExpression()), !dbg !4768
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !4769, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.declare(metadata i32* %numTex, metadata !4771, metadata !DIExpression()), !dbg !4772
  %0 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !4773
  %call = call i32 @CustomData_number_of_layers(%struct.CustomData* %0, i32 15), !dbg !4774
  store i32 %call, i32* %numTex, align 4, !dbg !4772
  call void @llvm.dbg.declare(metadata i32* %numCol, metadata !4775, metadata !DIExpression()), !dbg !4776
  %1 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4777
  %call1 = call i32 @CustomData_number_of_layers(%struct.CustomData* %1, i32 17), !dbg !4778
  store i32 %call1, i32* %numCol, align 4, !dbg !4776
  call void @llvm.dbg.declare(metadata i8* %hasPCol, metadata !4779, metadata !DIExpression()), !dbg !4780
  %2 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4781
  %call2 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %2, i32 32), !dbg !4782
  store i8 %call2, i8* %hasPCol, align 1, !dbg !4780
  call void @llvm.dbg.declare(metadata i8* %hasOrigSpace, metadata !4783, metadata !DIExpression()), !dbg !4784
  %3 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4785
  %call3 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %3, i32 31), !dbg !4786
  store i8 %call3, i8* %hasOrigSpace, align 1, !dbg !4784
  call void @llvm.dbg.declare(metadata i8* %hasLNor, metadata !4787, metadata !DIExpression()), !dbg !4788
  %4 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4789
  %call4 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %4, i32 8), !dbg !4790
  store i8 %call4, i8* %hasLNor, align 1, !dbg !4788
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4791
  %6 = load i32, i32* %totpoly.addr, align 4, !dbg !4792
  %conv = sext i32 %6 to i64, !dbg !4793
  %mul = mul i64 20, %conv, !dbg !4794
  %call5 = call i8* %5(i64 %mul, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.BKE_mesh_mpoly_to_mface, i64 0, i64 0)), !dbg !4791
  %7 = bitcast i8* %call5 to %struct.MFace*, !dbg !4791
  store %struct.MFace* %7, %struct.MFace** %mface, align 8, !dbg !4795
  %8 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !4796
  %call6 = call i8* @CustomData_get_layer(%struct.CustomData* %8, i32 25), !dbg !4797
  %9 = bitcast i8* %call6 to %struct.MPoly*, !dbg !4797
  store %struct.MPoly* %9, %struct.MPoly** %mpoly, align 8, !dbg !4798
  %10 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4799
  %call7 = call i8* @CustomData_get_layer(%struct.CustomData* %10, i32 26), !dbg !4800
  %11 = bitcast i8* %call7 to %struct.MLoop*, !dbg !4800
  store %struct.MLoop* %11, %struct.MLoop** %mloop, align 8, !dbg !4801
  %12 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4802
  store %struct.MPoly* %12, %struct.MPoly** %mp, align 8, !dbg !4803
  store i32 0, i32* %k, align 4, !dbg !4804
  store i32 0, i32* %i, align 4, !dbg !4805
  br label %for.cond, !dbg !4807

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %i, align 4, !dbg !4808
  %14 = load i32, i32* %totpoly.addr, align 4, !dbg !4810
  %cmp = icmp slt i32 %13, %14, !dbg !4811
  br i1 %cmp, label %for.body, label %for.end, !dbg !4812

for.body:                                         ; preds = %for.cond
  %15 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4813
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %15, i32 0, i32 1, !dbg !4813
  %16 = load i32, i32* %totloop, align 4, !dbg !4813
  %cmp9 = icmp eq i32 %16, 3, !dbg !4813
  br i1 %cmp9, label %if.then, label %lor.lhs.false, !dbg !4813

lor.lhs.false:                                    ; preds = %for.body
  %17 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4813
  %totloop11 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %17, i32 0, i32 1, !dbg !4813
  %18 = load i32, i32* %totloop11, align 4, !dbg !4813
  %cmp12 = icmp eq i32 %18, 4, !dbg !4813
  br i1 %cmp12, label %if.then, label %if.end, !dbg !4816

if.then:                                          ; preds = %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata i32* %mp_loopstart, metadata !4817, metadata !DIExpression()), !dbg !4819
  %19 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4820
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %19, i32 0, i32 0, !dbg !4821
  %20 = load i32, i32* %loopstart, align 4, !dbg !4821
  store i32 %20, i32* %mp_loopstart, align 4, !dbg !4819
  %21 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4822
  %22 = load i32, i32* %k, align 4, !dbg !4823
  %idxprom = sext i32 %22 to i64, !dbg !4822
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %21, i64 %idxprom, !dbg !4822
  store %struct.MFace* %arrayidx, %struct.MFace** %mf, align 8, !dbg !4824
  %23 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4825
  %mat_nr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %23, i32 0, i32 2, !dbg !4826
  %24 = load i16, i16* %mat_nr, align 4, !dbg !4826
  %25 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4827
  %mat_nr14 = getelementptr inbounds %struct.MFace, %struct.MFace* %25, i32 0, i32 4, !dbg !4828
  store i16 %24, i16* %mat_nr14, align 4, !dbg !4829
  %26 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4830
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %26, i32 0, i32 3, !dbg !4831
  %27 = load i8, i8* %flag, align 2, !dbg !4831
  %28 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4832
  %flag15 = getelementptr inbounds %struct.MFace, %struct.MFace* %28, i32 0, i32 6, !dbg !4833
  store i8 %27, i8* %flag15, align 1, !dbg !4834
  %29 = load i32, i32* %mp_loopstart, align 4, !dbg !4835
  %add = add i32 %29, 0, !dbg !4836
  %30 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4837
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %30, i32 0, i32 0, !dbg !4838
  store i32 %add, i32* %v1, align 4, !dbg !4839
  %31 = load i32, i32* %mp_loopstart, align 4, !dbg !4840
  %add16 = add i32 %31, 1, !dbg !4841
  %32 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4842
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %32, i32 0, i32 1, !dbg !4843
  store i32 %add16, i32* %v2, align 4, !dbg !4844
  %33 = load i32, i32* %mp_loopstart, align 4, !dbg !4845
  %add17 = add i32 %33, 2, !dbg !4846
  %34 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4847
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 2, !dbg !4848
  store i32 %add17, i32* %v3, align 4, !dbg !4849
  %35 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4850
  %totloop18 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %35, i32 0, i32 1, !dbg !4851
  %36 = load i32, i32* %totloop18, align 4, !dbg !4851
  %cmp19 = icmp eq i32 %36, 4, !dbg !4852
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !4853

cond.true:                                        ; preds = %if.then
  %37 = load i32, i32* %mp_loopstart, align 4, !dbg !4854
  %add21 = add i32 %37, 3, !dbg !4855
  br label %cond.end, !dbg !4853

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4853

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add21, %cond.true ], [ 0, %cond.false ], !dbg !4853
  %38 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4856
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %38, i32 0, i32 3, !dbg !4857
  store i32 %cond, i32* %v4, align 4, !dbg !4858
  %39 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4859
  %totloop22 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %39, i32 0, i32 1, !dbg !4860
  %40 = load i32, i32* %totloop22, align 4, !dbg !4860
  %conv23 = trunc i32 %40 to i8, !dbg !4861
  %41 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4862
  %edcode = getelementptr inbounds %struct.MFace, %struct.MFace* %41, i32 0, i32 5, !dbg !4863
  store i8 %conv23, i8* %edcode, align 2, !dbg !4864
  %42 = load i32, i32* %k, align 4, !dbg !4865
  %inc = add nsw i32 %42, 1, !dbg !4865
  store i32 %inc, i32* %k, align 4, !dbg !4865
  br label %if.end, !dbg !4866

if.end:                                           ; preds = %cond.end, %lor.lhs.false
  br label %for.inc, !dbg !4867

for.inc:                                          ; preds = %if.end
  %43 = load i32, i32* %i, align 4, !dbg !4868
  %inc24 = add nsw i32 %43, 1, !dbg !4868
  store i32 %inc24, i32* %i, align 4, !dbg !4868
  %44 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4869
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %44, i32 1, !dbg !4869
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mp, align 8, !dbg !4869
  br label %for.cond, !dbg !4870, !llvm.loop !4871

for.end:                                          ; preds = %for.cond
  %45 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4873
  %46 = load i32, i32* %totface.addr, align 4, !dbg !4874
  call void @CustomData_free(%struct.CustomData* %45, i32 %46), !dbg !4875
  %47 = load i32, i32* %k, align 4, !dbg !4876
  store i32 %47, i32* %totface.addr, align 4, !dbg !4877
  %48 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4878
  %49 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4879
  %50 = bitcast %struct.MFace* %49 to i8*, !dbg !4879
  %51 = load i32, i32* %totface.addr, align 4, !dbg !4880
  %call25 = call i8* @CustomData_add_layer(%struct.CustomData* %48, i32 4, i32 0, i8* %50, i32 %51), !dbg !4881
  %52 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4882
  %53 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !4883
  %54 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4884
  %55 = load i32, i32* %totface.addr, align 4, !dbg !4885
  call void @CustomData_from_bmeshpoly(%struct.CustomData* %52, %struct.CustomData* %53, %struct.CustomData* %54, i32 %55), !dbg !4886
  %56 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4887
  store %struct.MPoly* %56, %struct.MPoly** %mp, align 8, !dbg !4888
  store i32 0, i32* %k, align 4, !dbg !4889
  store i32 0, i32* %i, align 4, !dbg !4890
  br label %for.cond26, !dbg !4892

for.cond26:                                       ; preds = %for.inc101, %for.end
  %57 = load i32, i32* %i, align 4, !dbg !4893
  %58 = load i32, i32* %totpoly.addr, align 4, !dbg !4895
  %cmp27 = icmp slt i32 %57, %58, !dbg !4896
  br i1 %cmp27, label %for.body29, label %for.end104, !dbg !4897

for.body29:                                       ; preds = %for.cond26
  %59 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4898
  %totloop30 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %59, i32 0, i32 1, !dbg !4898
  %60 = load i32, i32* %totloop30, align 4, !dbg !4898
  %cmp31 = icmp eq i32 %60, 3, !dbg !4898
  br i1 %cmp31, label %if.then37, label %lor.lhs.false33, !dbg !4898

lor.lhs.false33:                                  ; preds = %for.body29
  %61 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !4898
  %totloop34 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %61, i32 0, i32 1, !dbg !4898
  %62 = load i32, i32* %totloop34, align 4, !dbg !4898
  %cmp35 = icmp eq i32 %62, 4, !dbg !4898
  br i1 %cmp35, label %if.then37, label %if.end100, !dbg !4901

if.then37:                                        ; preds = %lor.lhs.false33, %for.body29
  %63 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4902
  %64 = load i32, i32* %k, align 4, !dbg !4904
  %idxprom38 = sext i32 %64 to i64, !dbg !4902
  %arrayidx39 = getelementptr inbounds %struct.MFace, %struct.MFace* %63, i64 %idxprom38, !dbg !4902
  store %struct.MFace* %arrayidx39, %struct.MFace** %mf, align 8, !dbg !4905
  %65 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4906
  %edcode40 = getelementptr inbounds %struct.MFace, %struct.MFace* %65, i32 0, i32 5, !dbg !4908
  %66 = load i8, i8* %edcode40, align 2, !dbg !4908
  %conv41 = zext i8 %66 to i32, !dbg !4906
  %cmp42 = icmp eq i32 %conv41, 3, !dbg !4909
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !4910

if.then44:                                        ; preds = %if.then37
  %67 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4911
  %v145 = getelementptr inbounds %struct.MFace, %struct.MFace* %67, i32 0, i32 0, !dbg !4913
  %68 = load i32, i32* %v145, align 4, !dbg !4913
  %arrayidx46 = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 0, !dbg !4914
  store i32 %68, i32* %arrayidx46, align 16, !dbg !4915
  %69 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4916
  %v247 = getelementptr inbounds %struct.MFace, %struct.MFace* %69, i32 0, i32 1, !dbg !4917
  %70 = load i32, i32* %v247, align 4, !dbg !4917
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 1, !dbg !4918
  store i32 %70, i32* %arrayidx48, align 4, !dbg !4919
  %71 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4920
  %v349 = getelementptr inbounds %struct.MFace, %struct.MFace* %71, i32 0, i32 2, !dbg !4921
  %72 = load i32, i32* %v349, align 4, !dbg !4921
  %arrayidx50 = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 2, !dbg !4922
  store i32 %72, i32* %arrayidx50, align 8, !dbg !4923
  %arrayidx51 = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 3, !dbg !4924
  store i32 0, i32* %arrayidx51, align 4, !dbg !4925
  %73 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4926
  %74 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4927
  %v152 = getelementptr inbounds %struct.MFace, %struct.MFace* %74, i32 0, i32 0, !dbg !4928
  %75 = load i32, i32* %v152, align 4, !dbg !4928
  %idxprom53 = zext i32 %75 to i64, !dbg !4926
  %arrayidx54 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %73, i64 %idxprom53, !dbg !4926
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx54, i32 0, i32 0, !dbg !4929
  %76 = load i32, i32* %v, align 4, !dbg !4929
  %77 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4930
  %v155 = getelementptr inbounds %struct.MFace, %struct.MFace* %77, i32 0, i32 0, !dbg !4931
  store i32 %76, i32* %v155, align 4, !dbg !4932
  %78 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4933
  %79 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4934
  %v256 = getelementptr inbounds %struct.MFace, %struct.MFace* %79, i32 0, i32 1, !dbg !4935
  %80 = load i32, i32* %v256, align 4, !dbg !4935
  %idxprom57 = zext i32 %80 to i64, !dbg !4933
  %arrayidx58 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %78, i64 %idxprom57, !dbg !4933
  %v59 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx58, i32 0, i32 0, !dbg !4936
  %81 = load i32, i32* %v59, align 4, !dbg !4936
  %82 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4937
  %v260 = getelementptr inbounds %struct.MFace, %struct.MFace* %82, i32 0, i32 1, !dbg !4938
  store i32 %81, i32* %v260, align 4, !dbg !4939
  %83 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4940
  %84 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4941
  %v361 = getelementptr inbounds %struct.MFace, %struct.MFace* %84, i32 0, i32 2, !dbg !4942
  %85 = load i32, i32* %v361, align 4, !dbg !4942
  %idxprom62 = zext i32 %85 to i64, !dbg !4940
  %arrayidx63 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %83, i64 %idxprom62, !dbg !4940
  %v64 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx63, i32 0, i32 0, !dbg !4943
  %86 = load i32, i32* %v64, align 4, !dbg !4943
  %87 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4944
  %v365 = getelementptr inbounds %struct.MFace, %struct.MFace* %87, i32 0, i32 2, !dbg !4945
  store i32 %86, i32* %v365, align 4, !dbg !4946
  %88 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4947
  %89 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !4948
  %90 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !4949
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 0, !dbg !4950
  %91 = load i32, i32* %k, align 4, !dbg !4951
  %92 = load i32, i32* %i, align 4, !dbg !4952
  %93 = load i32, i32* %numTex, align 4, !dbg !4953
  %94 = load i32, i32* %numCol, align 4, !dbg !4954
  %95 = load i8, i8* %hasPCol, align 1, !dbg !4955
  %96 = load i8, i8* %hasOrigSpace, align 1, !dbg !4956
  %97 = load i8, i8* %hasLNor, align 1, !dbg !4957
  call void @BKE_mesh_loops_to_mface_corners(%struct.CustomData* %88, %struct.CustomData* %89, %struct.CustomData* %90, i32* %arraydecay, i32 %91, i32 %92, i32 3, i32 %93, i32 %94, i8 zeroext %95, i8 zeroext %96, i8 zeroext %97), !dbg !4958
  %98 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4959
  %99 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !4960
  %100 = load i32, i32* %k, align 4, !dbg !4961
  %call66 = call i32 @test_index_face(%struct.MFace* %98, %struct.CustomData* %99, i32 %100, i32 3), !dbg !4962
  br label %if.end97, !dbg !4963

if.else:                                          ; preds = %if.then37
  %101 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4964
  %v167 = getelementptr inbounds %struct.MFace, %struct.MFace* %101, i32 0, i32 0, !dbg !4966
  %102 = load i32, i32* %v167, align 4, !dbg !4966
  %arrayidx68 = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 0, !dbg !4967
  store i32 %102, i32* %arrayidx68, align 16, !dbg !4968
  %103 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4969
  %v269 = getelementptr inbounds %struct.MFace, %struct.MFace* %103, i32 0, i32 1, !dbg !4970
  %104 = load i32, i32* %v269, align 4, !dbg !4970
  %arrayidx70 = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 1, !dbg !4971
  store i32 %104, i32* %arrayidx70, align 4, !dbg !4972
  %105 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4973
  %v371 = getelementptr inbounds %struct.MFace, %struct.MFace* %105, i32 0, i32 2, !dbg !4974
  %106 = load i32, i32* %v371, align 4, !dbg !4974
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 2, !dbg !4975
  store i32 %106, i32* %arrayidx72, align 8, !dbg !4976
  %107 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4977
  %v473 = getelementptr inbounds %struct.MFace, %struct.MFace* %107, i32 0, i32 3, !dbg !4978
  %108 = load i32, i32* %v473, align 4, !dbg !4978
  %arrayidx74 = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 3, !dbg !4979
  store i32 %108, i32* %arrayidx74, align 4, !dbg !4980
  %109 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4981
  %110 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4982
  %v175 = getelementptr inbounds %struct.MFace, %struct.MFace* %110, i32 0, i32 0, !dbg !4983
  %111 = load i32, i32* %v175, align 4, !dbg !4983
  %idxprom76 = zext i32 %111 to i64, !dbg !4981
  %arrayidx77 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %109, i64 %idxprom76, !dbg !4981
  %v78 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx77, i32 0, i32 0, !dbg !4984
  %112 = load i32, i32* %v78, align 4, !dbg !4984
  %113 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4985
  %v179 = getelementptr inbounds %struct.MFace, %struct.MFace* %113, i32 0, i32 0, !dbg !4986
  store i32 %112, i32* %v179, align 4, !dbg !4987
  %114 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4988
  %115 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4989
  %v280 = getelementptr inbounds %struct.MFace, %struct.MFace* %115, i32 0, i32 1, !dbg !4990
  %116 = load i32, i32* %v280, align 4, !dbg !4990
  %idxprom81 = zext i32 %116 to i64, !dbg !4988
  %arrayidx82 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %114, i64 %idxprom81, !dbg !4988
  %v83 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx82, i32 0, i32 0, !dbg !4991
  %117 = load i32, i32* %v83, align 4, !dbg !4991
  %118 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4992
  %v284 = getelementptr inbounds %struct.MFace, %struct.MFace* %118, i32 0, i32 1, !dbg !4993
  store i32 %117, i32* %v284, align 4, !dbg !4994
  %119 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4995
  %120 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4996
  %v385 = getelementptr inbounds %struct.MFace, %struct.MFace* %120, i32 0, i32 2, !dbg !4997
  %121 = load i32, i32* %v385, align 4, !dbg !4997
  %idxprom86 = zext i32 %121 to i64, !dbg !4995
  %arrayidx87 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %119, i64 %idxprom86, !dbg !4995
  %v88 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx87, i32 0, i32 0, !dbg !4998
  %122 = load i32, i32* %v88, align 4, !dbg !4998
  %123 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !4999
  %v389 = getelementptr inbounds %struct.MFace, %struct.MFace* %123, i32 0, i32 2, !dbg !5000
  store i32 %122, i32* %v389, align 4, !dbg !5001
  %124 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5002
  %125 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5003
  %v490 = getelementptr inbounds %struct.MFace, %struct.MFace* %125, i32 0, i32 3, !dbg !5004
  %126 = load i32, i32* %v490, align 4, !dbg !5004
  %idxprom91 = zext i32 %126 to i64, !dbg !5002
  %arrayidx92 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %124, i64 %idxprom91, !dbg !5002
  %v93 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx92, i32 0, i32 0, !dbg !5005
  %127 = load i32, i32* %v93, align 4, !dbg !5005
  %128 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5006
  %v494 = getelementptr inbounds %struct.MFace, %struct.MFace* %128, i32 0, i32 3, !dbg !5007
  store i32 %127, i32* %v494, align 4, !dbg !5008
  %129 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5009
  %130 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5010
  %131 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !5011
  %arraydecay95 = getelementptr inbounds [4 x i32], [4 x i32]* %lindex, i64 0, i64 0, !dbg !5012
  %132 = load i32, i32* %k, align 4, !dbg !5013
  %133 = load i32, i32* %i, align 4, !dbg !5014
  %134 = load i32, i32* %numTex, align 4, !dbg !5015
  %135 = load i32, i32* %numCol, align 4, !dbg !5016
  %136 = load i8, i8* %hasPCol, align 1, !dbg !5017
  %137 = load i8, i8* %hasOrigSpace, align 1, !dbg !5018
  %138 = load i8, i8* %hasLNor, align 1, !dbg !5019
  call void @BKE_mesh_loops_to_mface_corners(%struct.CustomData* %129, %struct.CustomData* %130, %struct.CustomData* %131, i32* %arraydecay95, i32 %132, i32 %133, i32 4, i32 %134, i32 %135, i8 zeroext %136, i8 zeroext %137, i8 zeroext %138), !dbg !5020
  %139 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5021
  %140 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5022
  %141 = load i32, i32* %k, align 4, !dbg !5023
  %call96 = call i32 @test_index_face(%struct.MFace* %139, %struct.CustomData* %140, i32 %141, i32 4), !dbg !5024
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then44
  %142 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5025
  %edcode98 = getelementptr inbounds %struct.MFace, %struct.MFace* %142, i32 0, i32 5, !dbg !5026
  store i8 0, i8* %edcode98, align 2, !dbg !5027
  %143 = load i32, i32* %k, align 4, !dbg !5028
  %inc99 = add nsw i32 %143, 1, !dbg !5028
  store i32 %inc99, i32* %k, align 4, !dbg !5028
  br label %if.end100, !dbg !5029

if.end100:                                        ; preds = %if.end97, %lor.lhs.false33
  br label %for.inc101, !dbg !5030

for.inc101:                                       ; preds = %if.end100
  %144 = load i32, i32* %i, align 4, !dbg !5031
  %inc102 = add nsw i32 %144, 1, !dbg !5031
  store i32 %inc102, i32* %i, align 4, !dbg !5031
  %145 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5032
  %incdec.ptr103 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %145, i32 1, !dbg !5032
  store %struct.MPoly* %incdec.ptr103, %struct.MPoly** %mp, align 8, !dbg !5032
  br label %for.cond26, !dbg !5033, !llvm.loop !5034

for.end104:                                       ; preds = %for.cond26
  %146 = load i32, i32* %k, align 4, !dbg !5036
  ret i32 %146, !dbg !5037
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_convert_mfaces_to_mpolys(%struct.Mesh* %mesh) #0 !dbg !5038 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  %0 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5041
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 0, !dbg !5042
  %1 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5043
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 23, !dbg !5044
  %2 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5045
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 25, !dbg !5046
  %3 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5047
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 24, !dbg !5048
  %4 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5049
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 27, !dbg !5050
  %5 = load i32, i32* %totedge, align 4, !dbg !5050
  %6 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5051
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 28, !dbg !5052
  %7 = load i32, i32* %totface, align 8, !dbg !5052
  %8 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5053
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 31, !dbg !5054
  %9 = load i32, i32* %totloop, align 4, !dbg !5054
  %10 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5055
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 30, !dbg !5056
  %11 = load i32, i32* %totpoly, align 8, !dbg !5056
  %12 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5057
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 16, !dbg !5058
  %13 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !5058
  %14 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5059
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 12, !dbg !5060
  %15 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5060
  %16 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5061
  %totloop1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 31, !dbg !5062
  %17 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5063
  %totpoly2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 30, !dbg !5064
  %18 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5065
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 9, !dbg !5066
  %19 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5067
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 7, !dbg !5068
  call void @BKE_mesh_convert_mfaces_to_mpolys_ex(%struct.ID* %id, %struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, i32 %5, i32 %7, i32 %9, i32 %11, %struct.MEdge* %13, %struct.MFace* %15, i32* %totloop1, i32* %totpoly2, %struct.MLoop** %mloop, %struct.MPoly** %mpoly), !dbg !5069
  %20 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5070
  call void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %20, i8 zeroext 1), !dbg !5071
  ret void, !dbg !5072
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_convert_mfaces_to_mpolys_ex(%struct.ID* %id, %struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, i32 %totedge_i, i32 %totface_i, i32 %totloop_i, i32 %totpoly_i, %struct.MEdge* %medge, %struct.MFace* %mface, i32* %r_totloop, i32* %r_totpoly, %struct.MLoop** %r_mloop, %struct.MPoly** %r_mpoly) #0 !dbg !5073 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %fdata.addr = alloca %struct.CustomData*, align 8
  %ldata.addr = alloca %struct.CustomData*, align 8
  %pdata.addr = alloca %struct.CustomData*, align 8
  %totedge_i.addr = alloca i32, align 4
  %totface_i.addr = alloca i32, align 4
  %totloop_i.addr = alloca i32, align 4
  %totpoly_i.addr = alloca i32, align 4
  %medge.addr = alloca %struct.MEdge*, align 8
  %mface.addr = alloca %struct.MFace*, align 8
  %r_totloop.addr = alloca i32*, align 8
  %r_totpoly.addr = alloca i32*, align 8
  %r_mloop.addr = alloca %struct.MLoop**, align 8
  %r_mpoly.addr = alloca %struct.MPoly**, align 8
  %mf = alloca %struct.MFace*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %me = alloca %struct.MEdge*, align 8
  %eh = alloca %struct.EdgeHash*, align 8
  %numTex = alloca i32, align 4
  %numCol = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %totloop = alloca i32, align 4
  %totpoly = alloca i32, align 4
  %polyindex = alloca i32*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !5078, metadata !DIExpression()), !dbg !5079
  store %struct.CustomData* %fdata, %struct.CustomData** %fdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata.addr, metadata !5080, metadata !DIExpression()), !dbg !5081
  store %struct.CustomData* %ldata, %struct.CustomData** %ldata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata.addr, metadata !5082, metadata !DIExpression()), !dbg !5083
  store %struct.CustomData* %pdata, %struct.CustomData** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata.addr, metadata !5084, metadata !DIExpression()), !dbg !5085
  store i32 %totedge_i, i32* %totedge_i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totedge_i.addr, metadata !5086, metadata !DIExpression()), !dbg !5087
  store i32 %totface_i, i32* %totface_i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totface_i.addr, metadata !5088, metadata !DIExpression()), !dbg !5089
  store i32 %totloop_i, i32* %totloop_i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totloop_i.addr, metadata !5090, metadata !DIExpression()), !dbg !5091
  store i32 %totpoly_i, i32* %totpoly_i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoly_i.addr, metadata !5092, metadata !DIExpression()), !dbg !5093
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !5094, metadata !DIExpression()), !dbg !5095
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !5096, metadata !DIExpression()), !dbg !5097
  store i32* %r_totloop, i32** %r_totloop.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totloop.addr, metadata !5098, metadata !DIExpression()), !dbg !5099
  store i32* %r_totpoly, i32** %r_totpoly.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totpoly.addr, metadata !5100, metadata !DIExpression()), !dbg !5101
  store %struct.MLoop** %r_mloop, %struct.MLoop*** %r_mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop*** %r_mloop.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  store %struct.MPoly** %r_mpoly, %struct.MPoly*** %r_mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly*** %r_mpoly.addr, metadata !5104, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !5106, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !5110, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !5114, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.declare(metadata %struct.MEdge** %me, metadata !5116, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.declare(metadata %struct.EdgeHash** %eh, metadata !5118, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.declare(metadata i32* %numTex, metadata !5120, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.declare(metadata i32* %numCol, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5124, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5126, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.declare(metadata i32* %totloop, metadata !5128, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.declare(metadata i32* %totpoly, metadata !5130, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.declare(metadata i32** %polyindex, metadata !5132, metadata !DIExpression()), !dbg !5133
  %0 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5134
  %1 = load i32, i32* %totloop_i.addr, align 4, !dbg !5135
  call void @CustomData_free(%struct.CustomData* %0, i32 %1), !dbg !5136
  %2 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !5137
  %3 = load i32, i32* %totpoly_i.addr, align 4, !dbg !5138
  call void @CustomData_free(%struct.CustomData* %2, i32 %3), !dbg !5139
  %4 = load i32, i32* %totface_i.addr, align 4, !dbg !5140
  store i32 %4, i32* %totpoly, align 4, !dbg !5141
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5142
  %6 = load i32, i32* %totpoly, align 4, !dbg !5143
  %conv = sext i32 %6 to i64, !dbg !5144
  %mul = mul i64 12, %conv, !dbg !5145
  %call = call i8* %5(i64 %mul, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0)), !dbg !5142
  %7 = bitcast i8* %call to %struct.MPoly*, !dbg !5142
  store %struct.MPoly* %7, %struct.MPoly** %mpoly, align 8, !dbg !5146
  %8 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !5147
  %9 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5148
  %10 = bitcast %struct.MPoly* %9 to i8*, !dbg !5148
  %11 = load i32, i32* %totpoly, align 4, !dbg !5149
  %call1 = call i8* @CustomData_add_layer(%struct.CustomData* %8, i32 25, i32 0, i8* %10, i32 %11), !dbg !5150
  %12 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5151
  %call2 = call i32 @CustomData_number_of_layers(%struct.CustomData* %12, i32 5), !dbg !5152
  store i32 %call2, i32* %numTex, align 4, !dbg !5153
  %13 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5154
  %call3 = call i32 @CustomData_number_of_layers(%struct.CustomData* %13, i32 6), !dbg !5155
  store i32 %call3, i32* %numCol, align 4, !dbg !5156
  store i32 0, i32* %totloop, align 4, !dbg !5157
  %14 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5158
  store %struct.MFace* %14, %struct.MFace** %mf, align 8, !dbg !5159
  store i32 0, i32* %i, align 4, !dbg !5160
  br label %for.cond, !dbg !5162

for.cond:                                         ; preds = %for.inc, %entry
  %15 = load i32, i32* %i, align 4, !dbg !5163
  %16 = load i32, i32* %totface_i.addr, align 4, !dbg !5165
  %cmp = icmp slt i32 %15, %16, !dbg !5166
  br i1 %cmp, label %for.body, label %for.end, !dbg !5167

for.body:                                         ; preds = %for.cond
  %17 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5168
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %17, i32 0, i32 3, !dbg !5170
  %18 = load i32, i32* %v4, align 4, !dbg !5170
  %tobool = icmp ne i32 %18, 0, !dbg !5168
  %19 = zext i1 %tobool to i64, !dbg !5168
  %cond = select i1 %tobool, i32 4, i32 3, !dbg !5168
  %20 = load i32, i32* %totloop, align 4, !dbg !5171
  %add = add nsw i32 %20, %cond, !dbg !5171
  store i32 %add, i32* %totloop, align 4, !dbg !5171
  br label %for.inc, !dbg !5172

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !5173
  %inc = add nsw i32 %21, 1, !dbg !5173
  store i32 %inc, i32* %i, align 4, !dbg !5173
  %22 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5174
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %22, i32 1, !dbg !5174
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !5174
  br label %for.cond, !dbg !5175, !llvm.loop !5176

for.end:                                          ; preds = %for.cond
  %23 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5178
  %24 = load i32, i32* %totloop, align 4, !dbg !5179
  %conv5 = sext i32 %24 to i64, !dbg !5180
  %mul6 = mul i64 8, %conv5, !dbg !5181
  %call7 = call i8* %23(i64 %mul6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)), !dbg !5178
  %25 = bitcast i8* %call7 to %struct.MLoop*, !dbg !5178
  store %struct.MLoop* %25, %struct.MLoop** %mloop, align 8, !dbg !5182
  %26 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5183
  %27 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5184
  %28 = bitcast %struct.MLoop* %27 to i8*, !dbg !5184
  %29 = load i32, i32* %totloop, align 4, !dbg !5185
  %call8 = call i8* @CustomData_add_layer(%struct.CustomData* %26, i32 26, i32 0, i8* %28, i32 %29), !dbg !5186
  %30 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5187
  %31 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !5188
  %32 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5189
  %33 = load i32, i32* %totloop, align 4, !dbg !5190
  %34 = load i32, i32* %totpoly, align 4, !dbg !5191
  call void @CustomData_to_bmeshpoly(%struct.CustomData* %30, %struct.CustomData* %31, %struct.CustomData* %32, i32 %33, i32 %34), !dbg !5192
  %35 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5193
  %tobool9 = icmp ne %struct.ID* %35, null, !dbg !5193
  br i1 %tobool9, label %if.then, label %if.end, !dbg !5195

if.then:                                          ; preds = %for.end
  %36 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5196
  %37 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5198
  %38 = load i32, i32* %totface_i.addr, align 4, !dbg !5199
  call void @CustomData_external_read(%struct.CustomData* %36, %struct.ID* %37, i64 524288, i32 %38), !dbg !5200
  br label %if.end, !dbg !5201

if.end:                                           ; preds = %if.then, %for.end
  %39 = load i32, i32* %totedge_i.addr, align 4, !dbg !5202
  %call10 = call %struct.EdgeHash* @BLI_edgehash_new_ex(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.BKE_mesh_convert_mfaces_to_mpolys_ex, i64 0, i64 0), i32 %39), !dbg !5203
  store %struct.EdgeHash* %call10, %struct.EdgeHash** %eh, align 8, !dbg !5204
  %40 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !5205
  store %struct.MEdge* %40, %struct.MEdge** %me, align 8, !dbg !5206
  store i32 0, i32* %i, align 4, !dbg !5207
  br label %for.cond11, !dbg !5209

for.cond11:                                       ; preds = %for.inc18, %if.end
  %41 = load i32, i32* %i, align 4, !dbg !5210
  %42 = load i32, i32* %totedge_i.addr, align 4, !dbg !5212
  %cmp12 = icmp slt i32 %41, %42, !dbg !5213
  br i1 %cmp12, label %for.body14, label %for.end21, !dbg !5214

for.body14:                                       ; preds = %for.cond11
  %43 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5215
  %44 = load %struct.MEdge*, %struct.MEdge** %me, align 8, !dbg !5217
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %44, i32 0, i32 0, !dbg !5218
  %45 = load i32, i32* %v1, align 4, !dbg !5218
  %46 = load %struct.MEdge*, %struct.MEdge** %me, align 8, !dbg !5219
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %46, i32 0, i32 1, !dbg !5220
  %47 = load i32, i32* %v2, align 4, !dbg !5220
  %48 = load i32, i32* %i, align 4, !dbg !5221
  %conv15 = sext i32 %48 to i64, !dbg !5221
  %49 = inttoptr i64 %conv15 to i8*, !dbg !5221
  call void @BLI_edgehash_insert(%struct.EdgeHash* %43, i32 %45, i32 %47, i8* %49), !dbg !5222
  %50 = load %struct.MEdge*, %struct.MEdge** %me, align 8, !dbg !5223
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %50, i32 0, i32 4, !dbg !5224
  %51 = load i16, i16* %flag, align 2, !dbg !5225
  %conv16 = sext i16 %51 to i32, !dbg !5225
  %and = and i32 %conv16, -9, !dbg !5225
  %conv17 = trunc i32 %and to i16, !dbg !5225
  store i16 %conv17, i16* %flag, align 2, !dbg !5225
  br label %for.inc18, !dbg !5226

for.inc18:                                        ; preds = %for.body14
  %52 = load i32, i32* %i, align 4, !dbg !5227
  %inc19 = add nsw i32 %52, 1, !dbg !5227
  store i32 %inc19, i32* %i, align 4, !dbg !5227
  %53 = load %struct.MEdge*, %struct.MEdge** %me, align 8, !dbg !5228
  %incdec.ptr20 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %53, i32 1, !dbg !5228
  store %struct.MEdge* %incdec.ptr20, %struct.MEdge** %me, align 8, !dbg !5228
  br label %for.cond11, !dbg !5229, !llvm.loop !5230

for.end21:                                        ; preds = %for.cond11
  %54 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5232
  %call22 = call i8* @CustomData_get_layer(%struct.CustomData* %54, i32 7), !dbg !5233
  %55 = bitcast i8* %call22 to i32*, !dbg !5233
  store i32* %55, i32** %polyindex, align 8, !dbg !5234
  store i32 0, i32* %j, align 4, !dbg !5235
  %56 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5236
  store %struct.MLoop* %56, %struct.MLoop** %ml, align 8, !dbg !5237
  %57 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5238
  store %struct.MFace* %57, %struct.MFace** %mf, align 8, !dbg !5239
  %58 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5240
  store %struct.MPoly* %58, %struct.MPoly** %mp, align 8, !dbg !5241
  store i32 0, i32* %i, align 4, !dbg !5242
  br label %for.cond23, !dbg !5244

for.cond23:                                       ; preds = %for.inc85, %for.end21
  %59 = load i32, i32* %i, align 4, !dbg !5245
  %60 = load i32, i32* %totface_i.addr, align 4, !dbg !5247
  %cmp24 = icmp slt i32 %59, %60, !dbg !5248
  br i1 %cmp24, label %for.body26, label %for.end89, !dbg !5249

for.body26:                                       ; preds = %for.cond23
  %61 = load i32, i32* %j, align 4, !dbg !5250
  %62 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5252
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %62, i32 0, i32 0, !dbg !5253
  store i32 %61, i32* %loopstart, align 4, !dbg !5254
  %63 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5255
  %v427 = getelementptr inbounds %struct.MFace, %struct.MFace* %63, i32 0, i32 3, !dbg !5256
  %64 = load i32, i32* %v427, align 4, !dbg !5256
  %tobool28 = icmp ne i32 %64, 0, !dbg !5255
  %65 = zext i1 %tobool28 to i64, !dbg !5255
  %cond29 = select i1 %tobool28, i32 4, i32 3, !dbg !5255
  %66 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5257
  %totloop30 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %66, i32 0, i32 1, !dbg !5258
  store i32 %cond29, i32* %totloop30, align 4, !dbg !5259
  %67 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5260
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %67, i32 0, i32 4, !dbg !5261
  %68 = load i16, i16* %mat_nr, align 4, !dbg !5261
  %69 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5262
  %mat_nr31 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %69, i32 0, i32 2, !dbg !5263
  store i16 %68, i16* %mat_nr31, align 4, !dbg !5264
  %70 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5265
  %flag32 = getelementptr inbounds %struct.MFace, %struct.MFace* %70, i32 0, i32 6, !dbg !5266
  %71 = load i8, i8* %flag32, align 1, !dbg !5266
  %72 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5267
  %flag33 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %72, i32 0, i32 3, !dbg !5268
  store i8 %71, i8* %flag33, align 2, !dbg !5269
  %73 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5270
  %v134 = getelementptr inbounds %struct.MFace, %struct.MFace* %73, i32 0, i32 0, !dbg !5270
  %74 = load i32, i32* %v134, align 4, !dbg !5270
  %75 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5270
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %75, i32 0, i32 0, !dbg !5270
  store i32 %74, i32* %v, align 4, !dbg !5270
  %76 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5270
  %77 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5270
  %v135 = getelementptr inbounds %struct.MFace, %struct.MFace* %77, i32 0, i32 0, !dbg !5270
  %78 = load i32, i32* %v135, align 4, !dbg !5270
  %79 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5270
  %v236 = getelementptr inbounds %struct.MFace, %struct.MFace* %79, i32 0, i32 1, !dbg !5270
  %80 = load i32, i32* %v236, align 4, !dbg !5270
  %call37 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %76, i32 %78, i32 %80), !dbg !5270
  %81 = ptrtoint i8* %call37 to i64, !dbg !5270
  %conv38 = trunc i64 %81 to i32, !dbg !5270
  %82 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5270
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %82, i32 0, i32 1, !dbg !5270
  store i32 %conv38, i32* %e, align 4, !dbg !5270
  %83 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5270
  %incdec.ptr39 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %83, i32 1, !dbg !5270
  store %struct.MLoop* %incdec.ptr39, %struct.MLoop** %ml, align 8, !dbg !5270
  %84 = load i32, i32* %j, align 4, !dbg !5270
  %inc40 = add nsw i32 %84, 1, !dbg !5270
  store i32 %inc40, i32* %j, align 4, !dbg !5270
  %85 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5272
  %v241 = getelementptr inbounds %struct.MFace, %struct.MFace* %85, i32 0, i32 1, !dbg !5272
  %86 = load i32, i32* %v241, align 4, !dbg !5272
  %87 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5272
  %v42 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %87, i32 0, i32 0, !dbg !5272
  store i32 %86, i32* %v42, align 4, !dbg !5272
  %88 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5272
  %89 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5272
  %v243 = getelementptr inbounds %struct.MFace, %struct.MFace* %89, i32 0, i32 1, !dbg !5272
  %90 = load i32, i32* %v243, align 4, !dbg !5272
  %91 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5272
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %91, i32 0, i32 2, !dbg !5272
  %92 = load i32, i32* %v3, align 4, !dbg !5272
  %call44 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %88, i32 %90, i32 %92), !dbg !5272
  %93 = ptrtoint i8* %call44 to i64, !dbg !5272
  %conv45 = trunc i64 %93 to i32, !dbg !5272
  %94 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5272
  %e46 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %94, i32 0, i32 1, !dbg !5272
  store i32 %conv45, i32* %e46, align 4, !dbg !5272
  %95 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5272
  %incdec.ptr47 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %95, i32 1, !dbg !5272
  store %struct.MLoop* %incdec.ptr47, %struct.MLoop** %ml, align 8, !dbg !5272
  %96 = load i32, i32* %j, align 4, !dbg !5272
  %inc48 = add nsw i32 %96, 1, !dbg !5272
  store i32 %inc48, i32* %j, align 4, !dbg !5272
  %97 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5274
  %v449 = getelementptr inbounds %struct.MFace, %struct.MFace* %97, i32 0, i32 3, !dbg !5276
  %98 = load i32, i32* %v449, align 4, !dbg !5276
  %tobool50 = icmp ne i32 %98, 0, !dbg !5274
  br i1 %tobool50, label %if.then51, label %if.else, !dbg !5277

if.then51:                                        ; preds = %for.body26
  %99 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5278
  %v352 = getelementptr inbounds %struct.MFace, %struct.MFace* %99, i32 0, i32 2, !dbg !5278
  %100 = load i32, i32* %v352, align 4, !dbg !5278
  %101 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5278
  %v53 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %101, i32 0, i32 0, !dbg !5278
  store i32 %100, i32* %v53, align 4, !dbg !5278
  %102 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5278
  %103 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5278
  %v354 = getelementptr inbounds %struct.MFace, %struct.MFace* %103, i32 0, i32 2, !dbg !5278
  %104 = load i32, i32* %v354, align 4, !dbg !5278
  %105 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5278
  %v455 = getelementptr inbounds %struct.MFace, %struct.MFace* %105, i32 0, i32 3, !dbg !5278
  %106 = load i32, i32* %v455, align 4, !dbg !5278
  %call56 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %102, i32 %104, i32 %106), !dbg !5278
  %107 = ptrtoint i8* %call56 to i64, !dbg !5278
  %conv57 = trunc i64 %107 to i32, !dbg !5278
  %108 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5278
  %e58 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %108, i32 0, i32 1, !dbg !5278
  store i32 %conv57, i32* %e58, align 4, !dbg !5278
  %109 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5278
  %incdec.ptr59 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %109, i32 1, !dbg !5278
  store %struct.MLoop* %incdec.ptr59, %struct.MLoop** %ml, align 8, !dbg !5278
  %110 = load i32, i32* %j, align 4, !dbg !5278
  %inc60 = add nsw i32 %110, 1, !dbg !5278
  store i32 %inc60, i32* %j, align 4, !dbg !5278
  %111 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5281
  %v461 = getelementptr inbounds %struct.MFace, %struct.MFace* %111, i32 0, i32 3, !dbg !5281
  %112 = load i32, i32* %v461, align 4, !dbg !5281
  %113 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5281
  %v62 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %113, i32 0, i32 0, !dbg !5281
  store i32 %112, i32* %v62, align 4, !dbg !5281
  %114 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5281
  %115 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5281
  %v463 = getelementptr inbounds %struct.MFace, %struct.MFace* %115, i32 0, i32 3, !dbg !5281
  %116 = load i32, i32* %v463, align 4, !dbg !5281
  %117 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5281
  %v164 = getelementptr inbounds %struct.MFace, %struct.MFace* %117, i32 0, i32 0, !dbg !5281
  %118 = load i32, i32* %v164, align 4, !dbg !5281
  %call65 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %114, i32 %116, i32 %118), !dbg !5281
  %119 = ptrtoint i8* %call65 to i64, !dbg !5281
  %conv66 = trunc i64 %119 to i32, !dbg !5281
  %120 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5281
  %e67 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %120, i32 0, i32 1, !dbg !5281
  store i32 %conv66, i32* %e67, align 4, !dbg !5281
  %121 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5281
  %incdec.ptr68 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %121, i32 1, !dbg !5281
  store %struct.MLoop* %incdec.ptr68, %struct.MLoop** %ml, align 8, !dbg !5281
  %122 = load i32, i32* %j, align 4, !dbg !5281
  %inc69 = add nsw i32 %122, 1, !dbg !5281
  store i32 %inc69, i32* %j, align 4, !dbg !5281
  br label %if.end79, !dbg !5283

if.else:                                          ; preds = %for.body26
  %123 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5284
  %v370 = getelementptr inbounds %struct.MFace, %struct.MFace* %123, i32 0, i32 2, !dbg !5284
  %124 = load i32, i32* %v370, align 4, !dbg !5284
  %125 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5284
  %v71 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %125, i32 0, i32 0, !dbg !5284
  store i32 %124, i32* %v71, align 4, !dbg !5284
  %126 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5284
  %127 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5284
  %v372 = getelementptr inbounds %struct.MFace, %struct.MFace* %127, i32 0, i32 2, !dbg !5284
  %128 = load i32, i32* %v372, align 4, !dbg !5284
  %129 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5284
  %v173 = getelementptr inbounds %struct.MFace, %struct.MFace* %129, i32 0, i32 0, !dbg !5284
  %130 = load i32, i32* %v173, align 4, !dbg !5284
  %call74 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %126, i32 %128, i32 %130), !dbg !5284
  %131 = ptrtoint i8* %call74 to i64, !dbg !5284
  %conv75 = trunc i64 %131 to i32, !dbg !5284
  %132 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5284
  %e76 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %132, i32 0, i32 1, !dbg !5284
  store i32 %conv75, i32* %e76, align 4, !dbg !5284
  %133 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5284
  %incdec.ptr77 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %133, i32 1, !dbg !5284
  store %struct.MLoop* %incdec.ptr77, %struct.MLoop** %ml, align 8, !dbg !5284
  %134 = load i32, i32* %j, align 4, !dbg !5284
  %inc78 = add nsw i32 %134, 1, !dbg !5284
  store i32 %inc78, i32* %j, align 4, !dbg !5284
  br label %if.end79

if.end79:                                         ; preds = %if.else, %if.then51
  %135 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5287
  %136 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5288
  %137 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5289
  %138 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !5290
  %139 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5291
  %140 = load i32, i32* %totloop, align 4, !dbg !5292
  %141 = load i32, i32* %i, align 4, !dbg !5293
  %142 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5294
  %loopstart80 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %142, i32 0, i32 0, !dbg !5295
  %143 = load i32, i32* %loopstart80, align 4, !dbg !5295
  %144 = load i32, i32* %numTex, align 4, !dbg !5296
  %145 = load i32, i32* %numCol, align 4, !dbg !5297
  call void @bm_corners_to_loops_ex(%struct.ID* %135, %struct.CustomData* %136, %struct.CustomData* %137, %struct.CustomData* %138, %struct.MFace* %139, i32 %140, i32 %141, i32 %143, i32 %144, i32 %145), !dbg !5298
  %146 = load i32*, i32** %polyindex, align 8, !dbg !5299
  %tobool81 = icmp ne i32* %146, null, !dbg !5299
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !5301

if.then82:                                        ; preds = %if.end79
  %147 = load i32, i32* %i, align 4, !dbg !5302
  %148 = load i32*, i32** %polyindex, align 8, !dbg !5304
  store i32 %147, i32* %148, align 4, !dbg !5305
  %149 = load i32*, i32** %polyindex, align 8, !dbg !5306
  %incdec.ptr83 = getelementptr inbounds i32, i32* %149, i32 1, !dbg !5306
  store i32* %incdec.ptr83, i32** %polyindex, align 8, !dbg !5306
  br label %if.end84, !dbg !5307

if.end84:                                         ; preds = %if.then82, %if.end79
  br label %for.inc85, !dbg !5308

for.inc85:                                        ; preds = %if.end84
  %150 = load i32, i32* %i, align 4, !dbg !5309
  %inc86 = add nsw i32 %150, 1, !dbg !5309
  store i32 %inc86, i32* %i, align 4, !dbg !5309
  %151 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5310
  %incdec.ptr87 = getelementptr inbounds %struct.MFace, %struct.MFace* %151, i32 1, !dbg !5310
  store %struct.MFace* %incdec.ptr87, %struct.MFace** %mf, align 8, !dbg !5310
  %152 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5311
  %incdec.ptr88 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %152, i32 1, !dbg !5311
  store %struct.MPoly* %incdec.ptr88, %struct.MPoly** %mp, align 8, !dbg !5311
  br label %for.cond23, !dbg !5312, !llvm.loop !5313

for.end89:                                        ; preds = %for.cond23
  %153 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !5315
  call void @BLI_edgehash_free(%struct.EdgeHash* %153, void (i8*)* null), !dbg !5316
  %154 = load i32, i32* %totpoly, align 4, !dbg !5317
  %155 = load i32*, i32** %r_totpoly.addr, align 8, !dbg !5318
  store i32 %154, i32* %155, align 4, !dbg !5319
  %156 = load i32, i32* %totloop, align 4, !dbg !5320
  %157 = load i32*, i32** %r_totloop.addr, align 8, !dbg !5321
  store i32 %156, i32* %157, align 4, !dbg !5322
  %158 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5323
  %159 = load %struct.MPoly**, %struct.MPoly*** %r_mpoly.addr, align 8, !dbg !5324
  store %struct.MPoly* %158, %struct.MPoly** %159, align 8, !dbg !5325
  %160 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5326
  %161 = load %struct.MLoop**, %struct.MLoop*** %r_mloop.addr, align 8, !dbg !5327
  store %struct.MLoop* %160, %struct.MLoop** %161, align 8, !dbg !5328
  ret void, !dbg !5329
}

declare dso_local void @BKE_mesh_update_customdata_pointers(%struct.Mesh*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_do_versions_convert_mfaces_to_mpolys(%struct.Mesh* %mesh) #0 !dbg !5330 {
entry:
  %mesh.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %mesh, %struct.Mesh** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %mesh.addr, metadata !5331, metadata !DIExpression()), !dbg !5332
  %0 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5333
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 0, !dbg !5334
  %1 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5335
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 23, !dbg !5336
  %2 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5337
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 25, !dbg !5338
  %3 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5339
  %pdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 24, !dbg !5340
  %4 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5341
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 27, !dbg !5342
  %5 = load i32, i32* %totedge, align 4, !dbg !5342
  %6 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5343
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 28, !dbg !5344
  %7 = load i32, i32* %totface, align 8, !dbg !5344
  %8 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5345
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 31, !dbg !5346
  %9 = load i32, i32* %totloop, align 4, !dbg !5346
  %10 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5347
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 30, !dbg !5348
  %11 = load i32, i32* %totpoly, align 8, !dbg !5348
  %12 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5349
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 16, !dbg !5350
  %13 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !5350
  %14 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5351
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 12, !dbg !5352
  %15 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5352
  %16 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5353
  %totloop1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 31, !dbg !5354
  %17 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5355
  %totpoly2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 30, !dbg !5356
  %18 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5357
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 9, !dbg !5358
  %19 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5359
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 7, !dbg !5360
  call void @BKE_mesh_convert_mfaces_to_mpolys_ex(%struct.ID* %id, %struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, i32 %5, i32 %7, i32 %9, i32 %11, %struct.MEdge* %13, %struct.MFace* %15, i32* %totloop1, i32* %totpoly2, %struct.MLoop** %mloop, %struct.MPoly** %mpoly), !dbg !5361
  %20 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5362
  %fdata3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 23, !dbg !5363
  %21 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5364
  %pdata4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 24, !dbg !5365
  %22 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5366
  %ldata5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 25, !dbg !5367
  call void @CustomData_bmesh_do_versions_update_active_layers(%struct.CustomData* %fdata3, %struct.CustomData* %pdata4, %struct.CustomData* %ldata5), !dbg !5368
  %23 = load %struct.Mesh*, %struct.Mesh** %mesh.addr, align 8, !dbg !5369
  call void @BKE_mesh_update_customdata_pointers(%struct.Mesh* %23, i8 zeroext 1), !dbg !5370
  ret void, !dbg !5371
}

declare dso_local void @CustomData_bmesh_do_versions_update_active_layers(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*) #2

declare dso_local void @CustomData_to_bmeshpoly(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, i32, i32) #2

declare dso_local void @CustomData_external_read(%struct.CustomData*, %struct.ID*, i64, i32) #2

declare dso_local %struct.EdgeHash* @BLI_edgehash_new_ex(i8*, i32) #2

declare dso_local void @BLI_edgehash_insert(%struct.EdgeHash*, i32, i32, i8*) #2

declare dso_local i8* @BLI_edgehash_lookup(%struct.EdgeHash*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bm_corners_to_loops_ex(%struct.ID* %id, %struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, %struct.MFace* %mface, i32 %totloop, i32 %findex, i32 %loopstart, i32 %numTex, i32 %numCol) #0 !dbg !5372 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %fdata.addr = alloca %struct.CustomData*, align 8
  %ldata.addr = alloca %struct.CustomData*, align 8
  %pdata.addr = alloca %struct.CustomData*, align 8
  %mface.addr = alloca %struct.MFace*, align 8
  %totloop.addr = alloca i32, align 4
  %findex.addr = alloca i32, align 4
  %loopstart.addr = alloca i32, align 4
  %numTex.addr = alloca i32, align 4
  %numCol.addr = alloca i32, align 4
  %texface = alloca %struct.MTFace*, align 8
  %texpoly = alloca %struct.MTexPoly*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %mloopcol = alloca %struct.MLoopCol*, align 8
  %mloopuv = alloca %struct.MLoopUV*, align 8
  %mf = alloca %struct.MFace*, align 8
  %i = alloca i32, align 4
  %mloopcol__tmp = alloca %struct.MLoopCol*, align 8
  %mcol__tmp = alloca %struct.MCol*, align 8
  %mloopcol__tmp39 = alloca %struct.MLoopCol*, align 8
  %mcol__tmp40 = alloca %struct.MCol*, align 8
  %mloopcol__tmp51 = alloca %struct.MLoopCol*, align 8
  %mcol__tmp52 = alloca %struct.MCol*, align 8
  %mloopcol__tmp66 = alloca %struct.MLoopCol*, align 8
  %mcol__tmp67 = alloca %struct.MCol*, align 8
  %lnors = alloca [3 x float]*, align 8
  %tlnors = alloca [3 x i16]*, align 8
  %max = alloca i32, align 4
  %ld = alloca %struct.MDisps*, align 8
  %fd = alloca %struct.MDisps*, align 8
  %disps = alloca [3 x float]*, align 8
  %tot = alloca i32, align 4
  %corners = alloca i32, align 4
  %side = alloca i32, align 4
  %side_sq = alloca i32, align 4
  %disps_size = alloca i64, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !5375, metadata !DIExpression()), !dbg !5376
  store %struct.CustomData* %fdata, %struct.CustomData** %fdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata.addr, metadata !5377, metadata !DIExpression()), !dbg !5378
  store %struct.CustomData* %ldata, %struct.CustomData** %ldata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata.addr, metadata !5379, metadata !DIExpression()), !dbg !5380
  store %struct.CustomData* %pdata, %struct.CustomData** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata.addr, metadata !5381, metadata !DIExpression()), !dbg !5382
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !5383, metadata !DIExpression()), !dbg !5384
  store i32 %totloop, i32* %totloop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totloop.addr, metadata !5385, metadata !DIExpression()), !dbg !5386
  store i32 %findex, i32* %findex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %findex.addr, metadata !5387, metadata !DIExpression()), !dbg !5388
  store i32 %loopstart, i32* %loopstart.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %loopstart.addr, metadata !5389, metadata !DIExpression()), !dbg !5390
  store i32 %numTex, i32* %numTex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numTex.addr, metadata !5391, metadata !DIExpression()), !dbg !5392
  store i32 %numCol, i32* %numCol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numCol.addr, metadata !5393, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.declare(metadata %struct.MTFace** %texface, metadata !5395, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %texpoly, metadata !5397, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !5399, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol, metadata !5401, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %mloopuv, metadata !5403, metadata !DIExpression()), !dbg !5404
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !5405, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5407, metadata !DIExpression()), !dbg !5408
  %0 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5409
  %1 = load i32, i32* %findex.addr, align 4, !dbg !5410
  %idx.ext = sext i32 %1 to i64, !dbg !5411
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %0, i64 %idx.ext, !dbg !5411
  store %struct.MFace* %add.ptr, %struct.MFace** %mf, align 8, !dbg !5412
  store i32 0, i32* %i, align 4, !dbg !5413
  br label %for.cond, !dbg !5415

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5416
  %3 = load i32, i32* %numTex.addr, align 4, !dbg !5418
  %cmp = icmp slt i32 %2, %3, !dbg !5419
  br i1 %cmp, label %for.body, label %for.end, !dbg !5420

for.body:                                         ; preds = %for.cond
  %4 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5421
  %5 = load i32, i32* %findex.addr, align 4, !dbg !5423
  %6 = load i32, i32* %i, align 4, !dbg !5424
  %call = call i8* @CustomData_get_n(%struct.CustomData* %4, i32 5, i32 %5, i32 %6), !dbg !5425
  %7 = bitcast i8* %call to %struct.MTFace*, !dbg !5425
  store %struct.MTFace* %7, %struct.MTFace** %texface, align 8, !dbg !5426
  %8 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !5427
  %9 = load i32, i32* %findex.addr, align 4, !dbg !5428
  %10 = load i32, i32* %i, align 4, !dbg !5429
  %call1 = call i8* @CustomData_get_n(%struct.CustomData* %8, i32 15, i32 %9, i32 %10), !dbg !5430
  %11 = bitcast i8* %call1 to %struct.MTexPoly*, !dbg !5430
  store %struct.MTexPoly* %11, %struct.MTexPoly** %texpoly, align 8, !dbg !5431
  %12 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !5432
  %tpage = getelementptr inbounds %struct.MTFace, %struct.MTFace* %12, i32 0, i32 1, !dbg !5432
  %13 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !5432
  %14 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !5432
  %tpage2 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %14, i32 0, i32 0, !dbg !5432
  store %struct.Image* %13, %struct.Image** %tpage2, align 8, !dbg !5432
  %15 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !5432
  %flag = getelementptr inbounds %struct.MTFace, %struct.MTFace* %15, i32 0, i32 2, !dbg !5432
  %16 = load i8, i8* %flag, align 8, !dbg !5432
  %17 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !5432
  %flag3 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %17, i32 0, i32 1, !dbg !5432
  store i8 %16, i8* %flag3, align 8, !dbg !5432
  %18 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !5432
  %transp = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i32 0, i32 3, !dbg !5432
  %19 = load i8, i8* %transp, align 1, !dbg !5432
  %20 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !5432
  %transp4 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %20, i32 0, i32 2, !dbg !5432
  store i8 %19, i8* %transp4, align 1, !dbg !5432
  %21 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !5432
  %mode = getelementptr inbounds %struct.MTFace, %struct.MTFace* %21, i32 0, i32 4, !dbg !5432
  %22 = load i16, i16* %mode, align 2, !dbg !5432
  %23 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !5432
  %mode5 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %23, i32 0, i32 3, !dbg !5432
  store i16 %22, i16* %mode5, align 2, !dbg !5432
  %24 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !5432
  %tile = getelementptr inbounds %struct.MTFace, %struct.MTFace* %24, i32 0, i32 5, !dbg !5432
  %25 = load i16, i16* %tile, align 4, !dbg !5432
  %26 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !5432
  %tile6 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %26, i32 0, i32 4, !dbg !5432
  store i16 %25, i16* %tile6, align 4, !dbg !5432
  %27 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5434
  %28 = load i32, i32* %loopstart.addr, align 4, !dbg !5435
  %29 = load i32, i32* %i, align 4, !dbg !5436
  %call7 = call i8* @CustomData_get_n(%struct.CustomData* %27, i32 16, i32 %28, i32 %29), !dbg !5437
  %30 = bitcast i8* %call7 to %struct.MLoopUV*, !dbg !5437
  store %struct.MLoopUV* %30, %struct.MLoopUV** %mloopuv, align 8, !dbg !5438
  %31 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !5439
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %31, i32 0, i32 0, !dbg !5440
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !5439
  %32 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !5441
  %uv8 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %32, i32 0, i32 0, !dbg !5442
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv8, i64 0, i64 0, !dbg !5441
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !5441
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay9), !dbg !5443
  %33 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !5444
  %incdec.ptr = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %33, i32 1, !dbg !5444
  store %struct.MLoopUV* %incdec.ptr, %struct.MLoopUV** %mloopuv, align 8, !dbg !5444
  %34 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !5445
  %uv10 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %34, i32 0, i32 0, !dbg !5446
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %uv10, i64 0, i64 0, !dbg !5445
  %35 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !5447
  %uv12 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %35, i32 0, i32 0, !dbg !5448
  %arrayidx13 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv12, i64 0, i64 1, !dbg !5447
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx13, i64 0, i64 0, !dbg !5447
  call void @copy_v2_v2(float* %arraydecay11, float* %arraydecay14), !dbg !5449
  %36 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !5450
  %incdec.ptr15 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %36, i32 1, !dbg !5450
  store %struct.MLoopUV* %incdec.ptr15, %struct.MLoopUV** %mloopuv, align 8, !dbg !5450
  %37 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !5451
  %uv16 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %37, i32 0, i32 0, !dbg !5452
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %uv16, i64 0, i64 0, !dbg !5451
  %38 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !5453
  %uv18 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %38, i32 0, i32 0, !dbg !5454
  %arrayidx19 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv18, i64 0, i64 2, !dbg !5453
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 0, !dbg !5453
  call void @copy_v2_v2(float* %arraydecay17, float* %arraydecay20), !dbg !5455
  %39 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !5456
  %incdec.ptr21 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %39, i32 1, !dbg !5456
  store %struct.MLoopUV* %incdec.ptr21, %struct.MLoopUV** %mloopuv, align 8, !dbg !5456
  %40 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5457
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %40, i32 0, i32 3, !dbg !5459
  %41 = load i32, i32* %v4, align 4, !dbg !5459
  %tobool = icmp ne i32 %41, 0, !dbg !5457
  br i1 %tobool, label %if.then, label %if.end, !dbg !5460

if.then:                                          ; preds = %for.body
  %42 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !5461
  %uv22 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %42, i32 0, i32 0, !dbg !5463
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %uv22, i64 0, i64 0, !dbg !5461
  %43 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !5464
  %uv24 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %43, i32 0, i32 0, !dbg !5465
  %arrayidx25 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv24, i64 0, i64 3, !dbg !5464
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx25, i64 0, i64 0, !dbg !5464
  call void @copy_v2_v2(float* %arraydecay23, float* %arraydecay26), !dbg !5466
  %44 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !5467
  %incdec.ptr27 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %44, i32 1, !dbg !5467
  store %struct.MLoopUV* %incdec.ptr27, %struct.MLoopUV** %mloopuv, align 8, !dbg !5467
  br label %if.end, !dbg !5468

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5469

for.inc:                                          ; preds = %if.end
  %45 = load i32, i32* %i, align 4, !dbg !5470
  %inc = add nsw i32 %45, 1, !dbg !5470
  store i32 %inc, i32* %i, align 4, !dbg !5470
  br label %for.cond, !dbg !5471, !llvm.loop !5472

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5474
  br label %for.cond28, !dbg !5476

for.cond28:                                       ; preds = %for.inc79, %for.end
  %46 = load i32, i32* %i, align 4, !dbg !5477
  %47 = load i32, i32* %numCol.addr, align 4, !dbg !5479
  %cmp29 = icmp slt i32 %46, %47, !dbg !5480
  br i1 %cmp29, label %for.body30, label %for.end81, !dbg !5481

for.body30:                                       ; preds = %for.cond28
  %48 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5482
  %49 = load i32, i32* %loopstart.addr, align 4, !dbg !5484
  %50 = load i32, i32* %i, align 4, !dbg !5485
  %call31 = call i8* @CustomData_get_n(%struct.CustomData* %48, i32 17, i32 %49, i32 %50), !dbg !5486
  %51 = bitcast i8* %call31 to %struct.MLoopCol*, !dbg !5486
  store %struct.MLoopCol* %51, %struct.MLoopCol** %mloopcol, align 8, !dbg !5487
  %52 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5488
  %53 = load i32, i32* %findex.addr, align 4, !dbg !5489
  %54 = load i32, i32* %i, align 4, !dbg !5490
  %call32 = call i8* @CustomData_get_n(%struct.CustomData* %52, i32 6, i32 %53, i32 %54), !dbg !5491
  %55 = bitcast i8* %call32 to %struct.MCol*, !dbg !5491
  store %struct.MCol* %55, %struct.MCol** %mcol, align 8, !dbg !5492
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp, metadata !5493, metadata !DIExpression()), !dbg !5495
  %56 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !5495
  store %struct.MLoopCol* %56, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !5495
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp, metadata !5496, metadata !DIExpression()), !dbg !5495
  %57 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !5495
  %arrayidx33 = getelementptr inbounds %struct.MCol, %struct.MCol* %57, i64 0, !dbg !5495
  store %struct.MCol* %arrayidx33, %struct.MCol** %mcol__tmp, align 8, !dbg !5495
  %58 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !5495
  %b = getelementptr inbounds %struct.MCol, %struct.MCol* %58, i32 0, i32 3, !dbg !5495
  %59 = load i8, i8* %b, align 1, !dbg !5495
  %60 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !5495
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %60, i32 0, i32 0, !dbg !5495
  store i8 %59, i8* %r, align 1, !dbg !5495
  %61 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !5495
  %g = getelementptr inbounds %struct.MCol, %struct.MCol* %61, i32 0, i32 2, !dbg !5495
  %62 = load i8, i8* %g, align 1, !dbg !5495
  %63 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !5495
  %g34 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %63, i32 0, i32 1, !dbg !5495
  store i8 %62, i8* %g34, align 1, !dbg !5495
  %64 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !5495
  %r35 = getelementptr inbounds %struct.MCol, %struct.MCol* %64, i32 0, i32 1, !dbg !5495
  %65 = load i8, i8* %r35, align 1, !dbg !5495
  %66 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !5495
  %b36 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %66, i32 0, i32 2, !dbg !5495
  store i8 %65, i8* %b36, align 1, !dbg !5495
  %67 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !5495
  %a = getelementptr inbounds %struct.MCol, %struct.MCol* %67, i32 0, i32 0, !dbg !5495
  %68 = load i8, i8* %a, align 1, !dbg !5495
  %69 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !5495
  %a37 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %69, i32 0, i32 3, !dbg !5495
  store i8 %68, i8* %a37, align 1, !dbg !5495
  %70 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !5499
  %incdec.ptr38 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %70, i32 1, !dbg !5499
  store %struct.MLoopCol* %incdec.ptr38, %struct.MLoopCol** %mloopcol, align 8, !dbg !5499
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp39, metadata !5500, metadata !DIExpression()), !dbg !5502
  %71 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !5502
  store %struct.MLoopCol* %71, %struct.MLoopCol** %mloopcol__tmp39, align 8, !dbg !5502
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp40, metadata !5503, metadata !DIExpression()), !dbg !5502
  %72 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !5502
  %arrayidx41 = getelementptr inbounds %struct.MCol, %struct.MCol* %72, i64 1, !dbg !5502
  store %struct.MCol* %arrayidx41, %struct.MCol** %mcol__tmp40, align 8, !dbg !5502
  %73 = load %struct.MCol*, %struct.MCol** %mcol__tmp40, align 8, !dbg !5502
  %b42 = getelementptr inbounds %struct.MCol, %struct.MCol* %73, i32 0, i32 3, !dbg !5502
  %74 = load i8, i8* %b42, align 1, !dbg !5502
  %75 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp39, align 8, !dbg !5502
  %r43 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %75, i32 0, i32 0, !dbg !5502
  store i8 %74, i8* %r43, align 1, !dbg !5502
  %76 = load %struct.MCol*, %struct.MCol** %mcol__tmp40, align 8, !dbg !5502
  %g44 = getelementptr inbounds %struct.MCol, %struct.MCol* %76, i32 0, i32 2, !dbg !5502
  %77 = load i8, i8* %g44, align 1, !dbg !5502
  %78 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp39, align 8, !dbg !5502
  %g45 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %78, i32 0, i32 1, !dbg !5502
  store i8 %77, i8* %g45, align 1, !dbg !5502
  %79 = load %struct.MCol*, %struct.MCol** %mcol__tmp40, align 8, !dbg !5502
  %r46 = getelementptr inbounds %struct.MCol, %struct.MCol* %79, i32 0, i32 1, !dbg !5502
  %80 = load i8, i8* %r46, align 1, !dbg !5502
  %81 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp39, align 8, !dbg !5502
  %b47 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %81, i32 0, i32 2, !dbg !5502
  store i8 %80, i8* %b47, align 1, !dbg !5502
  %82 = load %struct.MCol*, %struct.MCol** %mcol__tmp40, align 8, !dbg !5502
  %a48 = getelementptr inbounds %struct.MCol, %struct.MCol* %82, i32 0, i32 0, !dbg !5502
  %83 = load i8, i8* %a48, align 1, !dbg !5502
  %84 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp39, align 8, !dbg !5502
  %a49 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %84, i32 0, i32 3, !dbg !5502
  store i8 %83, i8* %a49, align 1, !dbg !5502
  %85 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !5504
  %incdec.ptr50 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %85, i32 1, !dbg !5504
  store %struct.MLoopCol* %incdec.ptr50, %struct.MLoopCol** %mloopcol, align 8, !dbg !5504
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp51, metadata !5505, metadata !DIExpression()), !dbg !5507
  %86 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !5507
  store %struct.MLoopCol* %86, %struct.MLoopCol** %mloopcol__tmp51, align 8, !dbg !5507
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp52, metadata !5508, metadata !DIExpression()), !dbg !5507
  %87 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !5507
  %arrayidx53 = getelementptr inbounds %struct.MCol, %struct.MCol* %87, i64 2, !dbg !5507
  store %struct.MCol* %arrayidx53, %struct.MCol** %mcol__tmp52, align 8, !dbg !5507
  %88 = load %struct.MCol*, %struct.MCol** %mcol__tmp52, align 8, !dbg !5507
  %b54 = getelementptr inbounds %struct.MCol, %struct.MCol* %88, i32 0, i32 3, !dbg !5507
  %89 = load i8, i8* %b54, align 1, !dbg !5507
  %90 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp51, align 8, !dbg !5507
  %r55 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %90, i32 0, i32 0, !dbg !5507
  store i8 %89, i8* %r55, align 1, !dbg !5507
  %91 = load %struct.MCol*, %struct.MCol** %mcol__tmp52, align 8, !dbg !5507
  %g56 = getelementptr inbounds %struct.MCol, %struct.MCol* %91, i32 0, i32 2, !dbg !5507
  %92 = load i8, i8* %g56, align 1, !dbg !5507
  %93 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp51, align 8, !dbg !5507
  %g57 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %93, i32 0, i32 1, !dbg !5507
  store i8 %92, i8* %g57, align 1, !dbg !5507
  %94 = load %struct.MCol*, %struct.MCol** %mcol__tmp52, align 8, !dbg !5507
  %r58 = getelementptr inbounds %struct.MCol, %struct.MCol* %94, i32 0, i32 1, !dbg !5507
  %95 = load i8, i8* %r58, align 1, !dbg !5507
  %96 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp51, align 8, !dbg !5507
  %b59 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %96, i32 0, i32 2, !dbg !5507
  store i8 %95, i8* %b59, align 1, !dbg !5507
  %97 = load %struct.MCol*, %struct.MCol** %mcol__tmp52, align 8, !dbg !5507
  %a60 = getelementptr inbounds %struct.MCol, %struct.MCol* %97, i32 0, i32 0, !dbg !5507
  %98 = load i8, i8* %a60, align 1, !dbg !5507
  %99 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp51, align 8, !dbg !5507
  %a61 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %99, i32 0, i32 3, !dbg !5507
  store i8 %98, i8* %a61, align 1, !dbg !5507
  %100 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !5509
  %incdec.ptr62 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %100, i32 1, !dbg !5509
  store %struct.MLoopCol* %incdec.ptr62, %struct.MLoopCol** %mloopcol, align 8, !dbg !5509
  %101 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5510
  %v463 = getelementptr inbounds %struct.MFace, %struct.MFace* %101, i32 0, i32 3, !dbg !5512
  %102 = load i32, i32* %v463, align 4, !dbg !5512
  %tobool64 = icmp ne i32 %102, 0, !dbg !5510
  br i1 %tobool64, label %if.then65, label %if.end78, !dbg !5513

if.then65:                                        ; preds = %for.body30
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp66, metadata !5514, metadata !DIExpression()), !dbg !5517
  %103 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !5517
  store %struct.MLoopCol* %103, %struct.MLoopCol** %mloopcol__tmp66, align 8, !dbg !5517
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp67, metadata !5518, metadata !DIExpression()), !dbg !5517
  %104 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !5517
  %arrayidx68 = getelementptr inbounds %struct.MCol, %struct.MCol* %104, i64 3, !dbg !5517
  store %struct.MCol* %arrayidx68, %struct.MCol** %mcol__tmp67, align 8, !dbg !5517
  %105 = load %struct.MCol*, %struct.MCol** %mcol__tmp67, align 8, !dbg !5517
  %b69 = getelementptr inbounds %struct.MCol, %struct.MCol* %105, i32 0, i32 3, !dbg !5517
  %106 = load i8, i8* %b69, align 1, !dbg !5517
  %107 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp66, align 8, !dbg !5517
  %r70 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %107, i32 0, i32 0, !dbg !5517
  store i8 %106, i8* %r70, align 1, !dbg !5517
  %108 = load %struct.MCol*, %struct.MCol** %mcol__tmp67, align 8, !dbg !5517
  %g71 = getelementptr inbounds %struct.MCol, %struct.MCol* %108, i32 0, i32 2, !dbg !5517
  %109 = load i8, i8* %g71, align 1, !dbg !5517
  %110 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp66, align 8, !dbg !5517
  %g72 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %110, i32 0, i32 1, !dbg !5517
  store i8 %109, i8* %g72, align 1, !dbg !5517
  %111 = load %struct.MCol*, %struct.MCol** %mcol__tmp67, align 8, !dbg !5517
  %r73 = getelementptr inbounds %struct.MCol, %struct.MCol* %111, i32 0, i32 1, !dbg !5517
  %112 = load i8, i8* %r73, align 1, !dbg !5517
  %113 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp66, align 8, !dbg !5517
  %b74 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %113, i32 0, i32 2, !dbg !5517
  store i8 %112, i8* %b74, align 1, !dbg !5517
  %114 = load %struct.MCol*, %struct.MCol** %mcol__tmp67, align 8, !dbg !5517
  %a75 = getelementptr inbounds %struct.MCol, %struct.MCol* %114, i32 0, i32 0, !dbg !5517
  %115 = load i8, i8* %a75, align 1, !dbg !5517
  %116 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp66, align 8, !dbg !5517
  %a76 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %116, i32 0, i32 3, !dbg !5517
  store i8 %115, i8* %a76, align 1, !dbg !5517
  %117 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !5519
  %incdec.ptr77 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %117, i32 1, !dbg !5519
  store %struct.MLoopCol* %incdec.ptr77, %struct.MLoopCol** %mloopcol, align 8, !dbg !5519
  br label %if.end78, !dbg !5520

if.end78:                                         ; preds = %if.then65, %for.body30
  br label %for.inc79, !dbg !5521

for.inc79:                                        ; preds = %if.end78
  %118 = load i32, i32* %i, align 4, !dbg !5522
  %inc80 = add nsw i32 %118, 1, !dbg !5522
  store i32 %inc80, i32* %i, align 4, !dbg !5522
  br label %for.cond28, !dbg !5523, !llvm.loop !5524

for.end81:                                        ; preds = %for.cond28
  %119 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5526
  %call82 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %119, i32 40), !dbg !5528
  %tobool83 = icmp ne i8 %call82, 0, !dbg !5528
  br i1 %tobool83, label %if.then84, label %if.end99, !dbg !5529

if.then84:                                        ; preds = %for.end81
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !5530, metadata !DIExpression()), !dbg !5532
  %120 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5533
  %121 = load i32, i32* %loopstart.addr, align 4, !dbg !5534
  %call85 = call i8* @CustomData_get(%struct.CustomData* %120, i32 %121, i32 8), !dbg !5535
  %122 = bitcast i8* %call85 to [3 x float]*, !dbg !5535
  store [3 x float]* %122, [3 x float]** %lnors, align 8, !dbg !5532
  call void @llvm.dbg.declare(metadata [3 x i16]** %tlnors, metadata !5536, metadata !DIExpression()), !dbg !5537
  %123 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5538
  %124 = load i32, i32* %findex.addr, align 4, !dbg !5539
  %call86 = call i8* @CustomData_get(%struct.CustomData* %123, i32 %124, i32 40), !dbg !5540
  %125 = bitcast i8* %call86 to [3 x i16]*, !dbg !5540
  store [3 x i16]* %125, [3 x i16]** %tlnors, align 8, !dbg !5537
  call void @llvm.dbg.declare(metadata i32* %max, metadata !5541, metadata !DIExpression()), !dbg !5542
  %126 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5543
  %v487 = getelementptr inbounds %struct.MFace, %struct.MFace* %126, i32 0, i32 3, !dbg !5544
  %127 = load i32, i32* %v487, align 4, !dbg !5544
  %tobool88 = icmp ne i32 %127, 0, !dbg !5543
  %128 = zext i1 %tobool88 to i64, !dbg !5543
  %cond = select i1 %tobool88, i32 4, i32 3, !dbg !5543
  store i32 %cond, i32* %max, align 4, !dbg !5542
  store i32 0, i32* %i, align 4, !dbg !5545
  br label %for.cond89, !dbg !5547

for.cond89:                                       ; preds = %for.inc94, %if.then84
  %129 = load i32, i32* %i, align 4, !dbg !5548
  %130 = load i32, i32* %max, align 4, !dbg !5550
  %cmp90 = icmp slt i32 %129, %130, !dbg !5551
  br i1 %cmp90, label %for.body91, label %for.end98, !dbg !5552

for.body91:                                       ; preds = %for.cond89
  %131 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5553
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %131, i64 0, i64 0, !dbg !5555
  %132 = load [3 x i16]*, [3 x i16]** %tlnors, align 8, !dbg !5556
  %arraydecay93 = getelementptr inbounds [3 x i16], [3 x i16]* %132, i64 0, i64 0, !dbg !5557
  call void @normal_short_to_float_v3(float* %arraydecay92, i16* %arraydecay93), !dbg !5558
  br label %for.inc94, !dbg !5559

for.inc94:                                        ; preds = %for.body91
  %133 = load i32, i32* %i, align 4, !dbg !5560
  %inc95 = add nsw i32 %133, 1, !dbg !5560
  store i32 %inc95, i32* %i, align 4, !dbg !5560
  %134 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5561
  %incdec.ptr96 = getelementptr inbounds [3 x float], [3 x float]* %134, i32 1, !dbg !5561
  store [3 x float]* %incdec.ptr96, [3 x float]** %lnors, align 8, !dbg !5561
  %135 = load [3 x i16]*, [3 x i16]** %tlnors, align 8, !dbg !5562
  %incdec.ptr97 = getelementptr inbounds [3 x i16], [3 x i16]* %135, i32 1, !dbg !5562
  store [3 x i16]* %incdec.ptr97, [3 x i16]** %tlnors, align 8, !dbg !5562
  br label %for.cond89, !dbg !5563, !llvm.loop !5564

for.end98:                                        ; preds = %for.cond89
  br label %if.end99, !dbg !5566

if.end99:                                         ; preds = %for.end98, %for.end81
  %136 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5567
  %call100 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %136, i32 19), !dbg !5569
  %tobool101 = icmp ne i8 %call100, 0, !dbg !5569
  br i1 %tobool101, label %if.then102, label %if.end156, !dbg !5570

if.then102:                                       ; preds = %if.end99
  call void @llvm.dbg.declare(metadata %struct.MDisps** %ld, metadata !5571, metadata !DIExpression()), !dbg !5581
  %137 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5582
  %138 = load i32, i32* %loopstart.addr, align 4, !dbg !5583
  %call103 = call i8* @CustomData_get(%struct.CustomData* %137, i32 %138, i32 19), !dbg !5584
  %139 = bitcast i8* %call103 to %struct.MDisps*, !dbg !5584
  store %struct.MDisps* %139, %struct.MDisps** %ld, align 8, !dbg !5581
  call void @llvm.dbg.declare(metadata %struct.MDisps** %fd, metadata !5585, metadata !DIExpression()), !dbg !5586
  %140 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5587
  %141 = load i32, i32* %findex.addr, align 4, !dbg !5588
  %call104 = call i8* @CustomData_get(%struct.CustomData* %140, i32 %141, i32 19), !dbg !5589
  %142 = bitcast i8* %call104 to %struct.MDisps*, !dbg !5589
  store %struct.MDisps* %142, %struct.MDisps** %fd, align 8, !dbg !5586
  call void @llvm.dbg.declare(metadata [3 x float]** %disps, metadata !5590, metadata !DIExpression()), !dbg !5591
  %143 = load %struct.MDisps*, %struct.MDisps** %fd, align 8, !dbg !5592
  %disps105 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %143, i32 0, i32 2, !dbg !5593
  %144 = load [3 x float]*, [3 x float]** %disps105, align 8, !dbg !5593
  store [3 x float]* %144, [3 x float]** %disps, align 8, !dbg !5591
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5594, metadata !DIExpression()), !dbg !5595
  %145 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !5596
  %v4106 = getelementptr inbounds %struct.MFace, %struct.MFace* %145, i32 0, i32 3, !dbg !5597
  %146 = load i32, i32* %v4106, align 4, !dbg !5597
  %tobool107 = icmp ne i32 %146, 0, !dbg !5596
  %147 = zext i1 %tobool107 to i64, !dbg !5596
  %cond108 = select i1 %tobool107, i32 4, i32 3, !dbg !5596
  store i32 %cond108, i32* %tot, align 4, !dbg !5595
  call void @llvm.dbg.declare(metadata i32* %corners, metadata !5598, metadata !DIExpression()), !dbg !5599
  %148 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5600
  %call109 = call zeroext i8 @CustomData_external_test(%struct.CustomData* %148, i32 19), !dbg !5602
  %tobool110 = icmp ne i8 %call109, 0, !dbg !5602
  br i1 %tobool110, label %if.then111, label %if.end118, !dbg !5603

if.then111:                                       ; preds = %if.then102
  %149 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5604
  %tobool112 = icmp ne %struct.ID* %149, null, !dbg !5604
  br i1 %tobool112, label %land.lhs.true, label %if.end117, !dbg !5607

land.lhs.true:                                    ; preds = %if.then111
  %150 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5608
  %external = getelementptr inbounds %struct.CustomData, %struct.CustomData* %150, i32 0, i32 6, !dbg !5609
  %151 = load %struct.CustomDataExternal*, %struct.CustomDataExternal** %external, align 8, !dbg !5609
  %tobool113 = icmp ne %struct.CustomDataExternal* %151, null, !dbg !5608
  br i1 %tobool113, label %if.then114, label %if.end117, !dbg !5610

if.then114:                                       ; preds = %land.lhs.true
  %152 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !5611
  %153 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5613
  %154 = load i32, i32* %totloop.addr, align 4, !dbg !5614
  %155 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !5615
  %external115 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %155, i32 0, i32 6, !dbg !5616
  %156 = load %struct.CustomDataExternal*, %struct.CustomDataExternal** %external115, align 8, !dbg !5616
  %filename = getelementptr inbounds %struct.CustomDataExternal, %struct.CustomDataExternal* %156, i32 0, i32 0, !dbg !5617
  %arraydecay116 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename, i64 0, i64 0, !dbg !5615
  call void @CustomData_external_add(%struct.CustomData* %152, %struct.ID* %153, i32 19, i32 %154, i8* %arraydecay116), !dbg !5618
  br label %if.end117, !dbg !5619

if.end117:                                        ; preds = %if.then114, %land.lhs.true, %if.then111
  br label %if.end118, !dbg !5620

if.end118:                                        ; preds = %if.end117, %if.then102
  %157 = load %struct.MDisps*, %struct.MDisps** %fd, align 8, !dbg !5621
  %call119 = call i32 @multires_mdisp_corners(%struct.MDisps* %157), !dbg !5622
  store i32 %call119, i32* %corners, align 4, !dbg !5623
  %158 = load i32, i32* %corners, align 4, !dbg !5624
  %cmp120 = icmp eq i32 %158, 0, !dbg !5626
  br i1 %cmp120, label %if.then121, label %if.else, !dbg !5627

if.then121:                                       ; preds = %if.end118
  br label %if.end155, !dbg !5628

if.else:                                          ; preds = %if.end118
  call void @llvm.dbg.declare(metadata i32* %side, metadata !5630, metadata !DIExpression()), !dbg !5632
  %159 = load %struct.MDisps*, %struct.MDisps** %fd, align 8, !dbg !5633
  %totdisp = getelementptr inbounds %struct.MDisps, %struct.MDisps* %159, i32 0, i32 0, !dbg !5634
  %160 = load i32, i32* %totdisp, align 8, !dbg !5634
  %161 = load i32, i32* %corners, align 4, !dbg !5635
  %div = sdiv i32 %160, %161, !dbg !5636
  %conv = sitofp i32 %div to float, !dbg !5637
  %call122 = call float @sqrtf(float %conv) #5, !dbg !5638
  %conv123 = fptosi float %call122 to i32, !dbg !5639
  store i32 %conv123, i32* %side, align 4, !dbg !5632
  call void @llvm.dbg.declare(metadata i32* %side_sq, metadata !5640, metadata !DIExpression()), !dbg !5641
  %162 = load i32, i32* %side, align 4, !dbg !5642
  %163 = load i32, i32* %side, align 4, !dbg !5643
  %mul = mul nsw i32 %162, %163, !dbg !5644
  store i32 %mul, i32* %side_sq, align 4, !dbg !5641
  call void @llvm.dbg.declare(metadata i64* %disps_size, metadata !5645, metadata !DIExpression()), !dbg !5647
  %164 = load i32, i32* %side_sq, align 4, !dbg !5648
  %conv124 = sext i32 %164 to i64, !dbg !5649
  %mul125 = mul i64 12, %conv124, !dbg !5650
  store i64 %mul125, i64* %disps_size, align 8, !dbg !5647
  store i32 0, i32* %i, align 4, !dbg !5651
  br label %for.cond126, !dbg !5653

for.cond126:                                      ; preds = %for.inc149, %if.else
  %165 = load i32, i32* %i, align 4, !dbg !5654
  %166 = load i32, i32* %tot, align 4, !dbg !5656
  %cmp127 = icmp slt i32 %165, %166, !dbg !5657
  br i1 %cmp127, label %for.body129, label %for.end154, !dbg !5658

for.body129:                                      ; preds = %for.cond126
  %167 = load i32, i32* %side_sq, align 4, !dbg !5659
  %168 = load %struct.MDisps*, %struct.MDisps** %ld, align 8, !dbg !5661
  %totdisp130 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %168, i32 0, i32 0, !dbg !5662
  store i32 %167, i32* %totdisp130, align 8, !dbg !5663
  %169 = load i32, i32* %side, align 4, !dbg !5664
  %conv131 = sitofp i32 %169 to float, !dbg !5665
  %sub = fsub float %conv131, 1.000000e+00, !dbg !5666
  %call132 = call float @logf(float %sub) #5, !dbg !5667
  %div133 = fdiv float %call132, 0x3FE62E4300000000, !dbg !5668
  %conv134 = fptosi float %div133 to i32, !dbg !5669
  %add = add nsw i32 %conv134, 1, !dbg !5670
  %170 = load %struct.MDisps*, %struct.MDisps** %ld, align 8, !dbg !5671
  %level = getelementptr inbounds %struct.MDisps, %struct.MDisps* %170, i32 0, i32 1, !dbg !5672
  store i32 %add, i32* %level, align 4, !dbg !5673
  %171 = load %struct.MDisps*, %struct.MDisps** %ld, align 8, !dbg !5674
  %disps135 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %171, i32 0, i32 2, !dbg !5676
  %172 = load [3 x float]*, [3 x float]** %disps135, align 8, !dbg !5676
  %tobool136 = icmp ne [3 x float]* %172, null, !dbg !5674
  br i1 %tobool136, label %if.then137, label %if.end139, !dbg !5677

if.then137:                                       ; preds = %for.body129
  %173 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5678
  %174 = load %struct.MDisps*, %struct.MDisps** %ld, align 8, !dbg !5679
  %disps138 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %174, i32 0, i32 2, !dbg !5680
  %175 = load [3 x float]*, [3 x float]** %disps138, align 8, !dbg !5680
  %176 = bitcast [3 x float]* %175 to i8*, !dbg !5679
  call void %173(i8* %176), !dbg !5678
  br label %if.end139, !dbg !5678

if.end139:                                        ; preds = %if.then137, %for.body129
  %177 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5681
  %178 = load i64, i64* %disps_size, align 8, !dbg !5682
  %call140 = call i8* %177(i64 %178, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0)), !dbg !5681
  %179 = bitcast i8* %call140 to [3 x float]*, !dbg !5681
  %180 = load %struct.MDisps*, %struct.MDisps** %ld, align 8, !dbg !5683
  %disps141 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %180, i32 0, i32 2, !dbg !5684
  store [3 x float]* %179, [3 x float]** %disps141, align 8, !dbg !5685
  %181 = load %struct.MDisps*, %struct.MDisps** %fd, align 8, !dbg !5686
  %disps142 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %181, i32 0, i32 2, !dbg !5688
  %182 = load [3 x float]*, [3 x float]** %disps142, align 8, !dbg !5688
  %tobool143 = icmp ne [3 x float]* %182, null, !dbg !5686
  br i1 %tobool143, label %if.then144, label %if.else146, !dbg !5689

if.then144:                                       ; preds = %if.end139
  %183 = load %struct.MDisps*, %struct.MDisps** %ld, align 8, !dbg !5690
  %disps145 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %183, i32 0, i32 2, !dbg !5692
  %184 = load [3 x float]*, [3 x float]** %disps145, align 8, !dbg !5692
  %185 = bitcast [3 x float]* %184 to i8*, !dbg !5693
  %186 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !5694
  %187 = bitcast [3 x float]* %186 to i8*, !dbg !5693
  %188 = load i64, i64* %disps_size, align 8, !dbg !5695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %185, i8* align 4 %187, i64 %188, i1 false), !dbg !5693
  br label %if.end148, !dbg !5696

if.else146:                                       ; preds = %if.end139
  %189 = load %struct.MDisps*, %struct.MDisps** %ld, align 8, !dbg !5697
  %disps147 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %189, i32 0, i32 2, !dbg !5699
  %190 = load [3 x float]*, [3 x float]** %disps147, align 8, !dbg !5699
  %191 = bitcast [3 x float]* %190 to i8*, !dbg !5700
  %192 = load i64, i64* %disps_size, align 8, !dbg !5701
  call void @llvm.memset.p0i8.i64(i8* align 4 %191, i8 0, i64 %192, i1 false), !dbg !5700
  br label %if.end148

if.end148:                                        ; preds = %if.else146, %if.then144
  br label %for.inc149, !dbg !5702

for.inc149:                                       ; preds = %if.end148
  %193 = load i32, i32* %i, align 4, !dbg !5703
  %inc150 = add nsw i32 %193, 1, !dbg !5703
  store i32 %inc150, i32* %i, align 4, !dbg !5703
  %194 = load i32, i32* %side_sq, align 4, !dbg !5704
  %195 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !5705
  %idx.ext151 = sext i32 %194 to i64, !dbg !5705
  %add.ptr152 = getelementptr inbounds [3 x float], [3 x float]* %195, i64 %idx.ext151, !dbg !5705
  store [3 x float]* %add.ptr152, [3 x float]** %disps, align 8, !dbg !5705
  %196 = load %struct.MDisps*, %struct.MDisps** %ld, align 8, !dbg !5706
  %incdec.ptr153 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %196, i32 1, !dbg !5706
  store %struct.MDisps* %incdec.ptr153, %struct.MDisps** %ld, align 8, !dbg !5706
  br label %for.cond126, !dbg !5707, !llvm.loop !5708

for.end154:                                       ; preds = %for.cond126
  br label %if.end155

if.end155:                                        ; preds = %for.end154, %if.then121
  br label %if.end156, !dbg !5710

if.end156:                                        ; preds = %if.end155, %if.end99
  ret void, !dbg !5711
}

declare dso_local void @BLI_edgehash_free(%struct.EdgeHash*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_flush_hidden_from_verts_ex(%struct.MVert* %mvert, %struct.MLoop* %mloop, %struct.MEdge* %medge, i32 %totedge, %struct.MPoly* %mpoly, i32 %totpoly) #0 !dbg !5712 {
entry:
  %mvert.addr = alloca %struct.MVert*, align 8
  %mloop.addr = alloca %struct.MLoop*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %totedge.addr = alloca i32, align 4
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %totpoly.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %e = alloca %struct.MEdge*, align 8
  %p = alloca %struct.MPoly*, align 8
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  store i32 %totedge, i32* %totedge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totedge.addr, metadata !5721, metadata !DIExpression()), !dbg !5722
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  store i32 %totpoly, i32* %totpoly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoly.addr, metadata !5725, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5727, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5729, metadata !DIExpression()), !dbg !5730
  store i32 0, i32* %i, align 4, !dbg !5731
  br label %for.cond, !dbg !5733

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5734
  %1 = load i32, i32* %totedge.addr, align 4, !dbg !5736
  %cmp = icmp slt i32 %0, %1, !dbg !5737
  br i1 %cmp, label %for.body, label %for.end, !dbg !5738

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MEdge** %e, metadata !5739, metadata !DIExpression()), !dbg !5741
  %2 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !5742
  %3 = load i32, i32* %i, align 4, !dbg !5743
  %idxprom = sext i32 %3 to i64, !dbg !5742
  %arrayidx = getelementptr inbounds %struct.MEdge, %struct.MEdge* %2, i64 %idxprom, !dbg !5742
  store %struct.MEdge* %arrayidx, %struct.MEdge** %e, align 8, !dbg !5741
  %4 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !5744
  %5 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !5746
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %5, i32 0, i32 0, !dbg !5747
  %6 = load i32, i32* %v1, align 4, !dbg !5747
  %idxprom1 = zext i32 %6 to i64, !dbg !5744
  %arrayidx2 = getelementptr inbounds %struct.MVert, %struct.MVert* %4, i64 %idxprom1, !dbg !5744
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx2, i32 0, i32 2, !dbg !5748
  %7 = load i8, i8* %flag, align 2, !dbg !5748
  %conv = zext i8 %7 to i32, !dbg !5744
  %and = and i32 %conv, 16, !dbg !5749
  %tobool = icmp ne i32 %and, 0, !dbg !5749
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5750

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !5751
  %9 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !5752
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %9, i32 0, i32 1, !dbg !5753
  %10 = load i32, i32* %v2, align 4, !dbg !5753
  %idxprom3 = zext i32 %10 to i64, !dbg !5751
  %arrayidx4 = getelementptr inbounds %struct.MVert, %struct.MVert* %8, i64 %idxprom3, !dbg !5751
  %flag5 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx4, i32 0, i32 2, !dbg !5754
  %11 = load i8, i8* %flag5, align 2, !dbg !5754
  %conv6 = zext i8 %11 to i32, !dbg !5751
  %and7 = and i32 %conv6, 16, !dbg !5755
  %tobool8 = icmp ne i32 %and7, 0, !dbg !5755
  br i1 %tobool8, label %if.then, label %if.else, !dbg !5756

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !5757
  %flag9 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %12, i32 0, i32 4, !dbg !5759
  %13 = load i16, i16* %flag9, align 2, !dbg !5760
  %conv10 = sext i16 %13 to i32, !dbg !5760
  %or = or i32 %conv10, 16, !dbg !5760
  %conv11 = trunc i32 %or to i16, !dbg !5760
  store i16 %conv11, i16* %flag9, align 2, !dbg !5760
  br label %if.end, !dbg !5761

if.else:                                          ; preds = %lor.lhs.false
  %14 = load %struct.MEdge*, %struct.MEdge** %e, align 8, !dbg !5762
  %flag12 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %14, i32 0, i32 4, !dbg !5764
  %15 = load i16, i16* %flag12, align 2, !dbg !5765
  %conv13 = sext i16 %15 to i32, !dbg !5765
  %and14 = and i32 %conv13, -17, !dbg !5765
  %conv15 = trunc i32 %and14 to i16, !dbg !5765
  store i16 %conv15, i16* %flag12, align 2, !dbg !5765
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !5766

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !5767
  %inc = add nsw i32 %16, 1, !dbg !5767
  store i32 %inc, i32* %i, align 4, !dbg !5767
  br label %for.cond, !dbg !5768, !llvm.loop !5769

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5771
  br label %for.cond16, !dbg !5773

for.cond16:                                       ; preds = %for.inc47, %for.end
  %17 = load i32, i32* %i, align 4, !dbg !5774
  %18 = load i32, i32* %totpoly.addr, align 4, !dbg !5776
  %cmp17 = icmp slt i32 %17, %18, !dbg !5777
  br i1 %cmp17, label %for.body19, label %for.end49, !dbg !5778

for.body19:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata %struct.MPoly** %p, metadata !5779, metadata !DIExpression()), !dbg !5781
  %19 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !5782
  %20 = load i32, i32* %i, align 4, !dbg !5783
  %idxprom20 = sext i32 %20 to i64, !dbg !5782
  %arrayidx21 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %19, i64 %idxprom20, !dbg !5782
  store %struct.MPoly* %arrayidx21, %struct.MPoly** %p, align 8, !dbg !5781
  %21 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !5784
  %flag22 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %21, i32 0, i32 3, !dbg !5785
  %22 = load i8, i8* %flag22, align 2, !dbg !5786
  %conv23 = zext i8 %22 to i32, !dbg !5786
  %and24 = and i32 %conv23, 239, !dbg !5786
  %conv25 = trunc i32 %and24 to i8, !dbg !5786
  store i8 %conv25, i8* %flag22, align 2, !dbg !5786
  store i32 0, i32* %j, align 4, !dbg !5787
  br label %for.cond26, !dbg !5789

for.cond26:                                       ; preds = %for.inc44, %for.body19
  %23 = load i32, i32* %j, align 4, !dbg !5790
  %24 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !5792
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %24, i32 0, i32 1, !dbg !5793
  %25 = load i32, i32* %totloop, align 4, !dbg !5793
  %cmp27 = icmp slt i32 %23, %25, !dbg !5794
  br i1 %cmp27, label %for.body29, label %for.end46, !dbg !5795

for.body29:                                       ; preds = %for.cond26
  %26 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !5796
  %27 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !5799
  %28 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !5800
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %28, i32 0, i32 0, !dbg !5801
  %29 = load i32, i32* %loopstart, align 4, !dbg !5801
  %30 = load i32, i32* %j, align 4, !dbg !5802
  %add = add nsw i32 %29, %30, !dbg !5803
  %idxprom30 = sext i32 %add to i64, !dbg !5799
  %arrayidx31 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %27, i64 %idxprom30, !dbg !5799
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx31, i32 0, i32 0, !dbg !5804
  %31 = load i32, i32* %v, align 4, !dbg !5804
  %idxprom32 = zext i32 %31 to i64, !dbg !5796
  %arrayidx33 = getelementptr inbounds %struct.MVert, %struct.MVert* %26, i64 %idxprom32, !dbg !5796
  %flag34 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx33, i32 0, i32 2, !dbg !5805
  %32 = load i8, i8* %flag34, align 2, !dbg !5805
  %conv35 = zext i8 %32 to i32, !dbg !5796
  %and36 = and i32 %conv35, 16, !dbg !5806
  %tobool37 = icmp ne i32 %and36, 0, !dbg !5806
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !5807

if.then38:                                        ; preds = %for.body29
  %33 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !5808
  %flag39 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %33, i32 0, i32 3, !dbg !5809
  %34 = load i8, i8* %flag39, align 2, !dbg !5810
  %conv40 = zext i8 %34 to i32, !dbg !5810
  %or41 = or i32 %conv40, 16, !dbg !5810
  %conv42 = trunc i32 %or41 to i8, !dbg !5810
  store i8 %conv42, i8* %flag39, align 2, !dbg !5810
  br label %if.end43, !dbg !5808

if.end43:                                         ; preds = %if.then38, %for.body29
  br label %for.inc44, !dbg !5811

for.inc44:                                        ; preds = %if.end43
  %35 = load i32, i32* %j, align 4, !dbg !5812
  %inc45 = add nsw i32 %35, 1, !dbg !5812
  store i32 %inc45, i32* %j, align 4, !dbg !5812
  br label %for.cond26, !dbg !5813, !llvm.loop !5814

for.end46:                                        ; preds = %for.cond26
  br label %for.inc47, !dbg !5816

for.inc47:                                        ; preds = %for.end46
  %36 = load i32, i32* %i, align 4, !dbg !5817
  %inc48 = add nsw i32 %36, 1, !dbg !5817
  store i32 %inc48, i32* %i, align 4, !dbg !5817
  br label %for.cond16, !dbg !5818, !llvm.loop !5819

for.end49:                                        ; preds = %for.cond16
  ret void, !dbg !5821
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_flush_hidden_from_verts(%struct.Mesh* %me) #0 !dbg !5822 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5823, metadata !DIExpression()), !dbg !5824
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5825
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 15, !dbg !5826
  %1 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5826
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5827
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 9, !dbg !5828
  %3 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5828
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5829
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 16, !dbg !5830
  %5 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !5830
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5831
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 27, !dbg !5832
  %7 = load i32, i32* %totedge, align 4, !dbg !5832
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5833
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 7, !dbg !5834
  %9 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5834
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5835
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 30, !dbg !5836
  %11 = load i32, i32* %totpoly, align 8, !dbg !5836
  call void @BKE_mesh_flush_hidden_from_verts_ex(%struct.MVert* %1, %struct.MLoop* %3, %struct.MEdge* %5, i32 %7, %struct.MPoly* %9, i32 %11), !dbg !5837
  ret void, !dbg !5838
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_flush_hidden_from_polys_ex(%struct.MVert* %mvert, %struct.MLoop* %mloop, %struct.MEdge* %medge, i32 %UNUSED_totedge, %struct.MPoly* %mpoly, i32 %totpoly) #0 !dbg !5839 {
entry:
  %mvert.addr = alloca %struct.MVert*, align 8
  %mloop.addr = alloca %struct.MLoop*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %UNUSED_totedge.addr = alloca i32, align 4
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %totpoly.addr = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  %i = alloca i32, align 4
  %ml = alloca %struct.MLoop*, align 8
  %j = alloca i32, align 4
  %ml29 = alloca %struct.MLoop*, align 8
  %j30 = alloca i32, align 4
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !5842, metadata !DIExpression()), !dbg !5843
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !5844, metadata !DIExpression()), !dbg !5845
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  store i32 %UNUSED_totedge, i32* %UNUSED_totedge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_totedge.addr, metadata !5848, metadata !DIExpression()), !dbg !5849
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !5850, metadata !DIExpression()), !dbg !5851
  store i32 %totpoly, i32* %totpoly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoly.addr, metadata !5852, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !5854, metadata !DIExpression()), !dbg !5855
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5856, metadata !DIExpression()), !dbg !5857
  %0 = load i32, i32* %totpoly.addr, align 4, !dbg !5858
  store i32 %0, i32* %i, align 4, !dbg !5859
  %1 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !5860
  store %struct.MPoly* %1, %struct.MPoly** %mp, align 8, !dbg !5862
  br label %for.cond, !dbg !5863

for.cond:                                         ; preds = %for.inc17, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5864
  %dec = add nsw i32 %2, -1, !dbg !5864
  store i32 %dec, i32* %i, align 4, !dbg !5864
  %tobool = icmp ne i32 %2, 0, !dbg !5866
  br i1 %tobool, label %for.body, label %for.end19, !dbg !5866

for.body:                                         ; preds = %for.cond
  %3 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5867
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %3, i32 0, i32 3, !dbg !5870
  %4 = load i8, i8* %flag, align 2, !dbg !5870
  %conv = zext i8 %4 to i32, !dbg !5867
  %and = and i32 %conv, 16, !dbg !5871
  %tobool1 = icmp ne i32 %and, 0, !dbg !5871
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5872

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !5873, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5876, metadata !DIExpression()), !dbg !5877
  %5 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5878
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %5, i32 0, i32 1, !dbg !5879
  %6 = load i32, i32* %totloop, align 4, !dbg !5879
  store i32 %6, i32* %j, align 4, !dbg !5880
  %7 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !5881
  %8 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5883
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %8, i32 0, i32 0, !dbg !5884
  %9 = load i32, i32* %loopstart, align 4, !dbg !5884
  %idxprom = sext i32 %9 to i64, !dbg !5881
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %7, i64 %idxprom, !dbg !5881
  store %struct.MLoop* %arrayidx, %struct.MLoop** %ml, align 8, !dbg !5885
  br label %for.cond2, !dbg !5886

for.cond2:                                        ; preds = %for.inc, %if.then
  %10 = load i32, i32* %j, align 4, !dbg !5887
  %dec3 = add nsw i32 %10, -1, !dbg !5887
  store i32 %dec3, i32* %j, align 4, !dbg !5887
  %tobool4 = icmp ne i32 %10, 0, !dbg !5889
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !5889

for.body5:                                        ; preds = %for.cond2
  %11 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !5890
  %12 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5892
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %12, i32 0, i32 0, !dbg !5893
  %13 = load i32, i32* %v, align 4, !dbg !5893
  %idxprom6 = zext i32 %13 to i64, !dbg !5890
  %arrayidx7 = getelementptr inbounds %struct.MVert, %struct.MVert* %11, i64 %idxprom6, !dbg !5890
  %flag8 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx7, i32 0, i32 2, !dbg !5894
  %14 = load i8, i8* %flag8, align 2, !dbg !5895
  %conv9 = zext i8 %14 to i32, !dbg !5895
  %or = or i32 %conv9, 16, !dbg !5895
  %conv10 = trunc i32 %or to i8, !dbg !5895
  store i8 %conv10, i8* %flag8, align 2, !dbg !5895
  %15 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !5896
  %16 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5897
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %16, i32 0, i32 1, !dbg !5898
  %17 = load i32, i32* %e, align 4, !dbg !5898
  %idxprom11 = zext i32 %17 to i64, !dbg !5896
  %arrayidx12 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %15, i64 %idxprom11, !dbg !5896
  %flag13 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx12, i32 0, i32 4, !dbg !5899
  %18 = load i16, i16* %flag13, align 2, !dbg !5900
  %conv14 = sext i16 %18 to i32, !dbg !5900
  %or15 = or i32 %conv14, 16, !dbg !5900
  %conv16 = trunc i32 %or15 to i16, !dbg !5900
  store i16 %conv16, i16* %flag13, align 2, !dbg !5900
  br label %for.inc, !dbg !5901

for.inc:                                          ; preds = %for.body5
  %19 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !5902
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %19, i32 1, !dbg !5902
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !5902
  br label %for.cond2, !dbg !5903, !llvm.loop !5904

for.end:                                          ; preds = %for.cond2
  br label %if.end, !dbg !5906

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc17, !dbg !5907

for.inc17:                                        ; preds = %if.end
  %20 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5908
  %incdec.ptr18 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %20, i32 1, !dbg !5908
  store %struct.MPoly* %incdec.ptr18, %struct.MPoly** %mp, align 8, !dbg !5908
  br label %for.cond, !dbg !5909, !llvm.loop !5910

for.end19:                                        ; preds = %for.cond
  %21 = load i32, i32* %totpoly.addr, align 4, !dbg !5912
  store i32 %21, i32* %i, align 4, !dbg !5913
  %22 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !5914
  store %struct.MPoly* %22, %struct.MPoly** %mp, align 8, !dbg !5916
  br label %for.cond20, !dbg !5917

for.cond20:                                       ; preds = %for.inc57, %for.end19
  %23 = load i32, i32* %i, align 4, !dbg !5918
  %dec21 = add nsw i32 %23, -1, !dbg !5918
  store i32 %dec21, i32* %i, align 4, !dbg !5918
  %tobool22 = icmp ne i32 %23, 0, !dbg !5920
  br i1 %tobool22, label %for.body23, label %for.end59, !dbg !5920

for.body23:                                       ; preds = %for.cond20
  %24 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5921
  %flag24 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %24, i32 0, i32 3, !dbg !5924
  %25 = load i8, i8* %flag24, align 2, !dbg !5924
  %conv25 = zext i8 %25 to i32, !dbg !5921
  %and26 = and i32 %conv25, 16, !dbg !5925
  %cmp = icmp eq i32 %and26, 0, !dbg !5926
  br i1 %cmp, label %if.then28, label %if.end56, !dbg !5927

if.then28:                                        ; preds = %for.body23
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml29, metadata !5928, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.declare(metadata i32* %j30, metadata !5931, metadata !DIExpression()), !dbg !5932
  %26 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5933
  %totloop31 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %26, i32 0, i32 1, !dbg !5934
  %27 = load i32, i32* %totloop31, align 4, !dbg !5934
  store i32 %27, i32* %j30, align 4, !dbg !5935
  %28 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !5936
  %29 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5938
  %loopstart32 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %29, i32 0, i32 0, !dbg !5939
  %30 = load i32, i32* %loopstart32, align 4, !dbg !5939
  %idxprom33 = sext i32 %30 to i64, !dbg !5936
  %arrayidx34 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %28, i64 %idxprom33, !dbg !5936
  store %struct.MLoop* %arrayidx34, %struct.MLoop** %ml29, align 8, !dbg !5940
  br label %for.cond35, !dbg !5941

for.cond35:                                       ; preds = %for.inc53, %if.then28
  %31 = load i32, i32* %j30, align 4, !dbg !5942
  %dec36 = add nsw i32 %31, -1, !dbg !5942
  store i32 %dec36, i32* %j30, align 4, !dbg !5942
  %tobool37 = icmp ne i32 %31, 0, !dbg !5944
  br i1 %tobool37, label %for.body38, label %for.end55, !dbg !5944

for.body38:                                       ; preds = %for.cond35
  %32 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !5945
  %33 = load %struct.MLoop*, %struct.MLoop** %ml29, align 8, !dbg !5947
  %v39 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %33, i32 0, i32 0, !dbg !5948
  %34 = load i32, i32* %v39, align 4, !dbg !5948
  %idxprom40 = zext i32 %34 to i64, !dbg !5945
  %arrayidx41 = getelementptr inbounds %struct.MVert, %struct.MVert* %32, i64 %idxprom40, !dbg !5945
  %flag42 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx41, i32 0, i32 2, !dbg !5949
  %35 = load i8, i8* %flag42, align 2, !dbg !5950
  %conv43 = zext i8 %35 to i32, !dbg !5950
  %and44 = and i32 %conv43, 239, !dbg !5950
  %conv45 = trunc i32 %and44 to i8, !dbg !5950
  store i8 %conv45, i8* %flag42, align 2, !dbg !5950
  %36 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !5951
  %37 = load %struct.MLoop*, %struct.MLoop** %ml29, align 8, !dbg !5952
  %e46 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %37, i32 0, i32 1, !dbg !5953
  %38 = load i32, i32* %e46, align 4, !dbg !5953
  %idxprom47 = zext i32 %38 to i64, !dbg !5951
  %arrayidx48 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %36, i64 %idxprom47, !dbg !5951
  %flag49 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx48, i32 0, i32 4, !dbg !5954
  %39 = load i16, i16* %flag49, align 2, !dbg !5955
  %conv50 = sext i16 %39 to i32, !dbg !5955
  %and51 = and i32 %conv50, 239, !dbg !5955
  %conv52 = trunc i32 %and51 to i16, !dbg !5955
  store i16 %conv52, i16* %flag49, align 2, !dbg !5955
  br label %for.inc53, !dbg !5956

for.inc53:                                        ; preds = %for.body38
  %40 = load %struct.MLoop*, %struct.MLoop** %ml29, align 8, !dbg !5957
  %incdec.ptr54 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %40, i32 1, !dbg !5957
  store %struct.MLoop* %incdec.ptr54, %struct.MLoop** %ml29, align 8, !dbg !5957
  br label %for.cond35, !dbg !5958, !llvm.loop !5959

for.end55:                                        ; preds = %for.cond35
  br label %if.end56, !dbg !5961

if.end56:                                         ; preds = %for.end55, %for.body23
  br label %for.inc57, !dbg !5962

for.inc57:                                        ; preds = %if.end56
  %41 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !5963
  %incdec.ptr58 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %41, i32 1, !dbg !5963
  store %struct.MPoly* %incdec.ptr58, %struct.MPoly** %mp, align 8, !dbg !5963
  br label %for.cond20, !dbg !5964, !llvm.loop !5965

for.end59:                                        ; preds = %for.cond20
  ret void, !dbg !5967
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_flush_hidden_from_polys(%struct.Mesh* %me) #0 !dbg !5968 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5969, metadata !DIExpression()), !dbg !5970
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5971
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 15, !dbg !5972
  %1 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5972
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5973
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 9, !dbg !5974
  %3 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5974
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5975
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 16, !dbg !5976
  %5 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !5976
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5977
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 27, !dbg !5978
  %7 = load i32, i32* %totedge, align 4, !dbg !5978
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5979
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 7, !dbg !5980
  %9 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !5980
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5981
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 30, !dbg !5982
  %11 = load i32, i32* %totpoly, align 8, !dbg !5982
  call void @BKE_mesh_flush_hidden_from_polys_ex(%struct.MVert* %1, %struct.MLoop* %3, %struct.MEdge* %5, i32 %7, %struct.MPoly* %9, i32 %11), !dbg !5983
  ret void, !dbg !5984
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_flush_select_from_polys_ex(%struct.MVert* %mvert, i32 %totvert, %struct.MLoop* %mloop, %struct.MEdge* %medge, i32 %totedge, %struct.MPoly* %mpoly, i32 %totpoly) #0 !dbg !5985 {
entry:
  %mvert.addr = alloca %struct.MVert*, align 8
  %totvert.addr = alloca i32, align 4
  %mloop.addr = alloca %struct.MLoop*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %totedge.addr = alloca i32, align 4
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %totpoly.addr = alloca i32, align 4
  %mv = alloca %struct.MVert*, align 8
  %med = alloca %struct.MEdge*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %i = alloca i32, align 4
  %ml = alloca %struct.MLoop*, align 8
  %j = alloca i32, align 4
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !5988, metadata !DIExpression()), !dbg !5989
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !5990, metadata !DIExpression()), !dbg !5991
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !5992, metadata !DIExpression()), !dbg !5993
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !5994, metadata !DIExpression()), !dbg !5995
  store i32 %totedge, i32* %totedge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totedge.addr, metadata !5996, metadata !DIExpression()), !dbg !5997
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !5998, metadata !DIExpression()), !dbg !5999
  store i32 %totpoly, i32* %totpoly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoly.addr, metadata !6000, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !6006, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6008, metadata !DIExpression()), !dbg !6009
  %0 = load i32, i32* %totvert.addr, align 4, !dbg !6010
  store i32 %0, i32* %i, align 4, !dbg !6011
  %1 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6012
  store %struct.MVert* %1, %struct.MVert** %mv, align 8, !dbg !6014
  br label %for.cond, !dbg !6015

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6016
  %dec = add nsw i32 %2, -1, !dbg !6016
  store i32 %dec, i32* %i, align 4, !dbg !6016
  %tobool = icmp ne i32 %2, 0, !dbg !6018
  br i1 %tobool, label %for.body, label %for.end, !dbg !6018

for.body:                                         ; preds = %for.cond
  %3 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !6019
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %3, i32 0, i32 2, !dbg !6021
  %4 = load i8, i8* %flag, align 2, !dbg !6022
  %conv = zext i8 %4 to i32, !dbg !6022
  %and = and i32 %conv, 254, !dbg !6022
  %conv1 = trunc i32 %and to i8, !dbg !6022
  store i8 %conv1, i8* %flag, align 2, !dbg !6022
  br label %for.inc, !dbg !6023

for.inc:                                          ; preds = %for.body
  %5 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !6024
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %5, i32 1, !dbg !6024
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !6024
  br label %for.cond, !dbg !6025, !llvm.loop !6026

for.end:                                          ; preds = %for.cond
  %6 = load i32, i32* %totedge.addr, align 4, !dbg !6028
  store i32 %6, i32* %i, align 4, !dbg !6029
  %7 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !6030
  store %struct.MEdge* %7, %struct.MEdge** %med, align 8, !dbg !6032
  br label %for.cond2, !dbg !6033

for.cond2:                                        ; preds = %for.inc10, %for.end
  %8 = load i32, i32* %i, align 4, !dbg !6034
  %dec3 = add nsw i32 %8, -1, !dbg !6034
  store i32 %dec3, i32* %i, align 4, !dbg !6034
  %tobool4 = icmp ne i32 %8, 0, !dbg !6036
  br i1 %tobool4, label %for.body5, label %for.end12, !dbg !6036

for.body5:                                        ; preds = %for.cond2
  %9 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !6037
  %flag6 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %9, i32 0, i32 4, !dbg !6039
  %10 = load i16, i16* %flag6, align 2, !dbg !6040
  %conv7 = sext i16 %10 to i32, !dbg !6040
  %and8 = and i32 %conv7, -2, !dbg !6040
  %conv9 = trunc i32 %and8 to i16, !dbg !6040
  store i16 %conv9, i16* %flag6, align 2, !dbg !6040
  br label %for.inc10, !dbg !6041

for.inc10:                                        ; preds = %for.body5
  %11 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !6042
  %incdec.ptr11 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %11, i32 1, !dbg !6042
  store %struct.MEdge* %incdec.ptr11, %struct.MEdge** %med, align 8, !dbg !6042
  br label %for.cond2, !dbg !6043, !llvm.loop !6044

for.end12:                                        ; preds = %for.cond2
  %12 = load i32, i32* %totpoly.addr, align 4, !dbg !6046
  store i32 %12, i32* %i, align 4, !dbg !6047
  %13 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !6048
  store %struct.MPoly* %13, %struct.MPoly** %mp, align 8, !dbg !6050
  br label %for.cond13, !dbg !6051

for.cond13:                                       ; preds = %for.inc39, %for.end12
  %14 = load i32, i32* %i, align 4, !dbg !6052
  %dec14 = add nsw i32 %14, -1, !dbg !6052
  store i32 %dec14, i32* %i, align 4, !dbg !6052
  %tobool15 = icmp ne i32 %14, 0, !dbg !6054
  br i1 %tobool15, label %for.body16, label %for.end41, !dbg !6054

for.body16:                                       ; preds = %for.cond13
  %15 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6055
  %flag17 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %15, i32 0, i32 3, !dbg !6058
  %16 = load i8, i8* %flag17, align 2, !dbg !6058
  %conv18 = zext i8 %16 to i32, !dbg !6055
  %and19 = and i32 %conv18, 2, !dbg !6059
  %tobool20 = icmp ne i32 %and19, 0, !dbg !6059
  br i1 %tobool20, label %if.then, label %if.end, !dbg !6060

if.then:                                          ; preds = %for.body16
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !6061, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6064, metadata !DIExpression()), !dbg !6065
  %17 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6066
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %17, i32 0, i32 1, !dbg !6067
  %18 = load i32, i32* %totloop, align 4, !dbg !6067
  store i32 %18, i32* %j, align 4, !dbg !6068
  %19 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !6069
  %20 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6071
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %20, i32 0, i32 0, !dbg !6072
  %21 = load i32, i32* %loopstart, align 4, !dbg !6072
  %idxprom = sext i32 %21 to i64, !dbg !6069
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %19, i64 %idxprom, !dbg !6069
  store %struct.MLoop* %arrayidx, %struct.MLoop** %ml, align 8, !dbg !6073
  br label %for.cond21, !dbg !6074

for.cond21:                                       ; preds = %for.inc36, %if.then
  %22 = load i32, i32* %j, align 4, !dbg !6075
  %dec22 = add nsw i32 %22, -1, !dbg !6075
  store i32 %dec22, i32* %j, align 4, !dbg !6075
  %tobool23 = icmp ne i32 %22, 0, !dbg !6077
  br i1 %tobool23, label %for.body24, label %for.end38, !dbg !6077

for.body24:                                       ; preds = %for.cond21
  %23 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6078
  %24 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !6080
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %24, i32 0, i32 0, !dbg !6081
  %25 = load i32, i32* %v, align 4, !dbg !6081
  %idxprom25 = zext i32 %25 to i64, !dbg !6078
  %arrayidx26 = getelementptr inbounds %struct.MVert, %struct.MVert* %23, i64 %idxprom25, !dbg !6078
  %flag27 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx26, i32 0, i32 2, !dbg !6082
  %26 = load i8, i8* %flag27, align 2, !dbg !6083
  %conv28 = zext i8 %26 to i32, !dbg !6083
  %or = or i32 %conv28, 1, !dbg !6083
  %conv29 = trunc i32 %or to i8, !dbg !6083
  store i8 %conv29, i8* %flag27, align 2, !dbg !6083
  %27 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !6084
  %28 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !6085
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %28, i32 0, i32 1, !dbg !6086
  %29 = load i32, i32* %e, align 4, !dbg !6086
  %idxprom30 = zext i32 %29 to i64, !dbg !6084
  %arrayidx31 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %27, i64 %idxprom30, !dbg !6084
  %flag32 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx31, i32 0, i32 4, !dbg !6087
  %30 = load i16, i16* %flag32, align 2, !dbg !6088
  %conv33 = sext i16 %30 to i32, !dbg !6088
  %or34 = or i32 %conv33, 1, !dbg !6088
  %conv35 = trunc i32 %or34 to i16, !dbg !6088
  store i16 %conv35, i16* %flag32, align 2, !dbg !6088
  br label %for.inc36, !dbg !6089

for.inc36:                                        ; preds = %for.body24
  %31 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !6090
  %incdec.ptr37 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %31, i32 1, !dbg !6090
  store %struct.MLoop* %incdec.ptr37, %struct.MLoop** %ml, align 8, !dbg !6090
  br label %for.cond21, !dbg !6091, !llvm.loop !6092

for.end38:                                        ; preds = %for.cond21
  br label %if.end, !dbg !6094

if.end:                                           ; preds = %for.end38, %for.body16
  br label %for.inc39, !dbg !6095

for.inc39:                                        ; preds = %if.end
  %32 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6096
  %incdec.ptr40 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %32, i32 1, !dbg !6096
  store %struct.MPoly* %incdec.ptr40, %struct.MPoly** %mp, align 8, !dbg !6096
  br label %for.cond13, !dbg !6097, !llvm.loop !6098

for.end41:                                        ; preds = %for.cond13
  ret void, !dbg !6100
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_flush_select_from_polys(%struct.Mesh* %me) #0 !dbg !6101 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !6102, metadata !DIExpression()), !dbg !6103
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6104
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 15, !dbg !6105
  %1 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6105
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6106
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 26, !dbg !6107
  %3 = load i32, i32* %totvert, align 8, !dbg !6107
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6108
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 9, !dbg !6109
  %5 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6109
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6110
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 16, !dbg !6111
  %7 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6111
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6112
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 27, !dbg !6113
  %9 = load i32, i32* %totedge, align 4, !dbg !6113
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6114
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 7, !dbg !6115
  %11 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6115
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6116
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 30, !dbg !6117
  %13 = load i32, i32* %totpoly, align 8, !dbg !6117
  call void @BKE_mesh_flush_select_from_polys_ex(%struct.MVert* %1, i32 %3, %struct.MLoop* %5, %struct.MEdge* %7, i32 %9, %struct.MPoly* %11, i32 %13), !dbg !6118
  ret void, !dbg !6119
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_flush_select_from_verts_ex(%struct.MVert* %mvert, i32 %UNUSED_totvert, %struct.MLoop* %mloop, %struct.MEdge* %medge, i32 %totedge, %struct.MPoly* %mpoly, i32 %totpoly) #0 !dbg !6120 {
entry:
  %mvert.addr = alloca %struct.MVert*, align 8
  %UNUSED_totvert.addr = alloca i32, align 4
  %mloop.addr = alloca %struct.MLoop*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %totedge.addr = alloca i32, align 4
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %totpoly.addr = alloca i32, align 4
  %med = alloca %struct.MEdge*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %i = alloca i32, align 4
  %ok = alloca i8, align 1
  %ml = alloca %struct.MLoop*, align 8
  %j = alloca i32, align 4
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !6123, metadata !DIExpression()), !dbg !6124
  store i32 %UNUSED_totvert, i32* %UNUSED_totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_totvert.addr, metadata !6125, metadata !DIExpression()), !dbg !6126
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !6127, metadata !DIExpression()), !dbg !6128
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !6129, metadata !DIExpression()), !dbg !6130
  store i32 %totedge, i32* %totedge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totedge.addr, metadata !6131, metadata !DIExpression()), !dbg !6132
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !6133, metadata !DIExpression()), !dbg !6134
  store i32 %totpoly, i32* %totpoly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoly.addr, metadata !6135, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med, metadata !6137, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !6139, metadata !DIExpression()), !dbg !6140
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6141, metadata !DIExpression()), !dbg !6142
  %0 = load i32, i32* %totedge.addr, align 4, !dbg !6143
  store i32 %0, i32* %i, align 4, !dbg !6144
  %1 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !6145
  store %struct.MEdge* %1, %struct.MEdge** %med, align 8, !dbg !6147
  br label %for.cond, !dbg !6148

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !6149
  %dec = add nsw i32 %2, -1, !dbg !6149
  store i32 %dec, i32* %i, align 4, !dbg !6149
  %tobool = icmp ne i32 %2, 0, !dbg !6151
  br i1 %tobool, label %for.body, label %for.end, !dbg !6151

for.body:                                         ; preds = %for.cond
  %3 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !6152
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %3, i32 0, i32 4, !dbg !6155
  %4 = load i16, i16* %flag, align 2, !dbg !6155
  %conv = sext i16 %4 to i32, !dbg !6152
  %and = and i32 %conv, 16, !dbg !6156
  %cmp = icmp eq i32 %and, 0, !dbg !6157
  br i1 %cmp, label %if.then, label %if.end20, !dbg !6158

if.then:                                          ; preds = %for.body
  %5 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6159
  %6 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !6162
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %6, i32 0, i32 0, !dbg !6163
  %7 = load i32, i32* %v1, align 4, !dbg !6163
  %idxprom = zext i32 %7 to i64, !dbg !6159
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %5, i64 %idxprom, !dbg !6159
  %flag2 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 2, !dbg !6164
  %8 = load i8, i8* %flag2, align 2, !dbg !6164
  %conv3 = zext i8 %8 to i32, !dbg !6159
  %and4 = and i32 %conv3, 1, !dbg !6165
  %tobool5 = icmp ne i32 %and4, 0, !dbg !6165
  br i1 %tobool5, label %land.lhs.true, label %if.else, !dbg !6166

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6167
  %10 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !6168
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %10, i32 0, i32 1, !dbg !6169
  %11 = load i32, i32* %v2, align 4, !dbg !6169
  %idxprom6 = zext i32 %11 to i64, !dbg !6167
  %arrayidx7 = getelementptr inbounds %struct.MVert, %struct.MVert* %9, i64 %idxprom6, !dbg !6167
  %flag8 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx7, i32 0, i32 2, !dbg !6170
  %12 = load i8, i8* %flag8, align 2, !dbg !6170
  %conv9 = zext i8 %12 to i32, !dbg !6167
  %and10 = and i32 %conv9, 1, !dbg !6171
  %tobool11 = icmp ne i32 %and10, 0, !dbg !6171
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !6172

if.then12:                                        ; preds = %land.lhs.true
  %13 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !6173
  %flag13 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %13, i32 0, i32 4, !dbg !6175
  %14 = load i16, i16* %flag13, align 2, !dbg !6176
  %conv14 = sext i16 %14 to i32, !dbg !6176
  %or = or i32 %conv14, 1, !dbg !6176
  %conv15 = trunc i32 %or to i16, !dbg !6176
  store i16 %conv15, i16* %flag13, align 2, !dbg !6176
  br label %if.end, !dbg !6177

if.else:                                          ; preds = %land.lhs.true, %if.then
  %15 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !6178
  %flag16 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %15, i32 0, i32 4, !dbg !6180
  %16 = load i16, i16* %flag16, align 2, !dbg !6181
  %conv17 = sext i16 %16 to i32, !dbg !6181
  %and18 = and i32 %conv17, -2, !dbg !6181
  %conv19 = trunc i32 %and18 to i16, !dbg !6181
  store i16 %conv19, i16* %flag16, align 2, !dbg !6181
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  br label %if.end20, !dbg !6182

if.end20:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !6183

for.inc:                                          ; preds = %if.end20
  %17 = load %struct.MEdge*, %struct.MEdge** %med, align 8, !dbg !6184
  %incdec.ptr = getelementptr inbounds %struct.MEdge, %struct.MEdge* %17, i32 1, !dbg !6184
  store %struct.MEdge* %incdec.ptr, %struct.MEdge** %med, align 8, !dbg !6184
  br label %for.cond, !dbg !6185, !llvm.loop !6186

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %totpoly.addr, align 4, !dbg !6188
  store i32 %18, i32* %i, align 4, !dbg !6189
  %19 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !6190
  store %struct.MPoly* %19, %struct.MPoly** %mp, align 8, !dbg !6192
  br label %for.cond21, !dbg !6193

for.cond21:                                       ; preds = %for.inc62, %for.end
  %20 = load i32, i32* %i, align 4, !dbg !6194
  %dec22 = add nsw i32 %20, -1, !dbg !6194
  store i32 %dec22, i32* %i, align 4, !dbg !6194
  %tobool23 = icmp ne i32 %20, 0, !dbg !6196
  br i1 %tobool23, label %for.body24, label %for.end64, !dbg !6196

for.body24:                                       ; preds = %for.cond21
  %21 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6197
  %flag25 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %21, i32 0, i32 3, !dbg !6200
  %22 = load i8, i8* %flag25, align 2, !dbg !6200
  %conv26 = zext i8 %22 to i32, !dbg !6197
  %and27 = and i32 %conv26, 16, !dbg !6201
  %cmp28 = icmp eq i32 %and27, 0, !dbg !6202
  br i1 %cmp28, label %if.then30, label %if.end61, !dbg !6203

if.then30:                                        ; preds = %for.body24
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6204, metadata !DIExpression()), !dbg !6206
  store i8 1, i8* %ok, align 1, !dbg !6206
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !6207, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6209, metadata !DIExpression()), !dbg !6210
  %23 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6211
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %23, i32 0, i32 1, !dbg !6212
  %24 = load i32, i32* %totloop, align 4, !dbg !6212
  store i32 %24, i32* %j, align 4, !dbg !6213
  %25 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !6214
  %26 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6216
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %26, i32 0, i32 0, !dbg !6217
  %27 = load i32, i32* %loopstart, align 4, !dbg !6217
  %idxprom31 = sext i32 %27 to i64, !dbg !6214
  %arrayidx32 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %25, i64 %idxprom31, !dbg !6214
  store %struct.MLoop* %arrayidx32, %struct.MLoop** %ml, align 8, !dbg !6218
  br label %for.cond33, !dbg !6219

for.cond33:                                       ; preds = %for.inc46, %if.then30
  %28 = load i32, i32* %j, align 4, !dbg !6220
  %dec34 = add nsw i32 %28, -1, !dbg !6220
  store i32 %dec34, i32* %j, align 4, !dbg !6220
  %tobool35 = icmp ne i32 %28, 0, !dbg !6222
  br i1 %tobool35, label %for.body36, label %for.end48, !dbg !6222

for.body36:                                       ; preds = %for.cond33
  %29 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6223
  %30 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !6226
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %30, i32 0, i32 0, !dbg !6227
  %31 = load i32, i32* %v, align 4, !dbg !6227
  %idxprom37 = zext i32 %31 to i64, !dbg !6223
  %arrayidx38 = getelementptr inbounds %struct.MVert, %struct.MVert* %29, i64 %idxprom37, !dbg !6223
  %flag39 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx38, i32 0, i32 2, !dbg !6228
  %32 = load i8, i8* %flag39, align 2, !dbg !6228
  %conv40 = zext i8 %32 to i32, !dbg !6223
  %and41 = and i32 %conv40, 1, !dbg !6229
  %cmp42 = icmp eq i32 %and41, 0, !dbg !6230
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !6231

if.then44:                                        ; preds = %for.body36
  store i8 0, i8* %ok, align 1, !dbg !6232
  br label %for.end48, !dbg !6234

if.end45:                                         ; preds = %for.body36
  br label %for.inc46, !dbg !6235

for.inc46:                                        ; preds = %if.end45
  %33 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !6236
  %incdec.ptr47 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %33, i32 1, !dbg !6236
  store %struct.MLoop* %incdec.ptr47, %struct.MLoop** %ml, align 8, !dbg !6236
  br label %for.cond33, !dbg !6237, !llvm.loop !6238

for.end48:                                        ; preds = %if.then44, %for.cond33
  %34 = load i8, i8* %ok, align 1, !dbg !6240
  %tobool49 = icmp ne i8 %34, 0, !dbg !6240
  br i1 %tobool49, label %if.then50, label %if.else55, !dbg !6242

if.then50:                                        ; preds = %for.end48
  %35 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6243
  %flag51 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %35, i32 0, i32 3, !dbg !6245
  %36 = load i8, i8* %flag51, align 2, !dbg !6246
  %conv52 = zext i8 %36 to i32, !dbg !6246
  %or53 = or i32 %conv52, 2, !dbg !6246
  %conv54 = trunc i32 %or53 to i8, !dbg !6246
  store i8 %conv54, i8* %flag51, align 2, !dbg !6246
  br label %if.end60, !dbg !6247

if.else55:                                        ; preds = %for.end48
  %37 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6248
  %flag56 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %37, i32 0, i32 3, !dbg !6250
  %38 = load i8, i8* %flag56, align 2, !dbg !6251
  %conv57 = zext i8 %38 to i32, !dbg !6251
  %and58 = and i32 %conv57, 253, !dbg !6251
  %conv59 = trunc i32 %and58 to i8, !dbg !6251
  store i8 %conv59, i8* %flag56, align 2, !dbg !6251
  br label %if.end60

if.end60:                                         ; preds = %if.else55, %if.then50
  br label %if.end61, !dbg !6252

if.end61:                                         ; preds = %if.end60, %for.body24
  br label %for.inc62, !dbg !6253

for.inc62:                                        ; preds = %if.end61
  %39 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6254
  %incdec.ptr63 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %39, i32 1, !dbg !6254
  store %struct.MPoly* %incdec.ptr63, %struct.MPoly** %mp, align 8, !dbg !6254
  br label %for.cond21, !dbg !6255, !llvm.loop !6256

for.end64:                                        ; preds = %for.cond21
  ret void, !dbg !6258
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_flush_select_from_verts(%struct.Mesh* %me) #0 !dbg !6259 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !6260, metadata !DIExpression()), !dbg !6261
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6262
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 15, !dbg !6263
  %1 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !6263
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6264
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 26, !dbg !6265
  %3 = load i32, i32* %totvert, align 8, !dbg !6265
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6266
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 9, !dbg !6267
  %5 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6267
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6268
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 16, !dbg !6269
  %7 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !6269
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6270
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 27, !dbg !6271
  %9 = load i32, i32* %totedge, align 4, !dbg !6271
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6272
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 7, !dbg !6273
  %11 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6273
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6274
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 30, !dbg !6275
  %13 = load i32, i32* %totpoly, align 8, !dbg !6275
  call void @BKE_mesh_flush_select_from_verts_ex(%struct.MVert* %1, i32 %3, %struct.MLoop* %5, %struct.MEdge* %7, i32 %9, %struct.MPoly* %11, i32 %13), !dbg !6276
  ret void, !dbg !6277
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mesh_calc_relative_deform(%struct.MPoly* %mpoly, i32 %totpoly, %struct.MLoop* %mloop, i32 %totvert, [3 x float]* %vert_cos_src, [3 x float]* %vert_cos_dst, [3 x float]* %vert_cos_org, [3 x float]* %vert_cos_new) #0 !dbg !6278 {
entry:
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %totpoly.addr = alloca i32, align 4
  %mloop.addr = alloca %struct.MLoop*, align 8
  %totvert.addr = alloca i32, align 4
  %vert_cos_src.addr = alloca [3 x float]*, align 8
  %vert_cos_dst.addr = alloca [3 x float]*, align 8
  %vert_cos_org.addr = alloca [3 x float]*, align 8
  %vert_cos_new.addr = alloca [3 x float]*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %i = alloca i32, align 4
  %vert_accum = alloca i32*, align 8
  %loopstart = alloca %struct.MLoop*, align 8
  %j = alloca i32, align 4
  %v_prev = alloca i32, align 4
  %v_curr = alloca i32, align 4
  %v_next = alloca i32, align 4
  %tvec = alloca [3 x float], align 4
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !6281, metadata !DIExpression()), !dbg !6282
  store i32 %totpoly, i32* %totpoly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoly.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !6287, metadata !DIExpression()), !dbg !6288
  store [3 x float]* %vert_cos_src, [3 x float]** %vert_cos_src.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vert_cos_src.addr, metadata !6289, metadata !DIExpression()), !dbg !6290
  store [3 x float]* %vert_cos_dst, [3 x float]** %vert_cos_dst.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vert_cos_dst.addr, metadata !6291, metadata !DIExpression()), !dbg !6292
  store [3 x float]* %vert_cos_org, [3 x float]** %vert_cos_org.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vert_cos_org.addr, metadata !6293, metadata !DIExpression()), !dbg !6294
  store [3 x float]* %vert_cos_new, [3 x float]** %vert_cos_new.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vert_cos_new.addr, metadata !6295, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !6297, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6299, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.declare(metadata i32** %vert_accum, metadata !6301, metadata !DIExpression()), !dbg !6302
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6303
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !6304
  %conv = sext i32 %1 to i64, !dbg !6305
  %mul = mul i64 4, %conv, !dbg !6306
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.BKE_mesh_calc_relative_deform, i64 0, i64 0)), !dbg !6303
  %2 = bitcast i8* %call to i32*, !dbg !6303
  store i32* %2, i32** %vert_accum, align 8, !dbg !6302
  %3 = load [3 x float]*, [3 x float]** %vert_cos_new.addr, align 8, !dbg !6307
  %4 = bitcast [3 x float]* %3 to i8*, !dbg !6308
  %5 = load i32, i32* %totvert.addr, align 4, !dbg !6309
  %conv1 = sext i32 %5 to i64, !dbg !6310
  %mul2 = mul i64 12, %conv1, !dbg !6311
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul2, i1 false), !dbg !6308
  store i32 0, i32* %i, align 4, !dbg !6312
  %6 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !6314
  store %struct.MPoly* %6, %struct.MPoly** %mp, align 8, !dbg !6315
  br label %for.cond, !dbg !6316

for.cond:                                         ; preds = %for.inc48, %entry
  %7 = load i32, i32* %i, align 4, !dbg !6317
  %8 = load i32, i32* %totpoly.addr, align 4, !dbg !6319
  %cmp = icmp slt i32 %7, %8, !dbg !6320
  br i1 %cmp, label %for.body, label %for.end50, !dbg !6321

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MLoop** %loopstart, metadata !6322, metadata !DIExpression()), !dbg !6324
  %9 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !6325
  %10 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6326
  %loopstart4 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %10, i32 0, i32 0, !dbg !6327
  %11 = load i32, i32* %loopstart4, align 4, !dbg !6327
  %idx.ext = sext i32 %11 to i64, !dbg !6328
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %9, i64 %idx.ext, !dbg !6328
  store %struct.MLoop* %add.ptr, %struct.MLoop** %loopstart, align 8, !dbg !6324
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6329, metadata !DIExpression()), !dbg !6330
  store i32 0, i32* %j, align 4, !dbg !6331
  br label %for.cond5, !dbg !6333

for.cond5:                                        ; preds = %for.inc, %for.body
  %12 = load i32, i32* %j, align 4, !dbg !6334
  %13 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6336
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %13, i32 0, i32 1, !dbg !6337
  %14 = load i32, i32* %totloop, align 4, !dbg !6337
  %cmp6 = icmp slt i32 %12, %14, !dbg !6338
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !6339

for.body8:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i32* %v_prev, metadata !6340, metadata !DIExpression()), !dbg !6342
  %15 = load %struct.MLoop*, %struct.MLoop** %loopstart, align 8, !dbg !6343
  %16 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6344
  %totloop9 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %16, i32 0, i32 1, !dbg !6345
  %17 = load i32, i32* %totloop9, align 4, !dbg !6345
  %18 = load i32, i32* %j, align 4, !dbg !6346
  %sub = sub nsw i32 %18, 1, !dbg !6347
  %add = add nsw i32 %17, %sub, !dbg !6348
  %19 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6349
  %totloop10 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %19, i32 0, i32 1, !dbg !6350
  %20 = load i32, i32* %totloop10, align 4, !dbg !6350
  %rem = srem i32 %add, %20, !dbg !6351
  %idxprom = sext i32 %rem to i64, !dbg !6343
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %15, i64 %idxprom, !dbg !6343
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx, i32 0, i32 0, !dbg !6352
  %21 = load i32, i32* %v, align 4, !dbg !6352
  store i32 %21, i32* %v_prev, align 4, !dbg !6342
  call void @llvm.dbg.declare(metadata i32* %v_curr, metadata !6353, metadata !DIExpression()), !dbg !6354
  %22 = load %struct.MLoop*, %struct.MLoop** %loopstart, align 8, !dbg !6355
  %23 = load i32, i32* %j, align 4, !dbg !6356
  %idxprom11 = sext i32 %23 to i64, !dbg !6355
  %arrayidx12 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %22, i64 %idxprom11, !dbg !6355
  %v13 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx12, i32 0, i32 0, !dbg !6357
  %24 = load i32, i32* %v13, align 4, !dbg !6357
  store i32 %24, i32* %v_curr, align 4, !dbg !6354
  call void @llvm.dbg.declare(metadata i32* %v_next, metadata !6358, metadata !DIExpression()), !dbg !6359
  %25 = load %struct.MLoop*, %struct.MLoop** %loopstart, align 8, !dbg !6360
  %26 = load i32, i32* %j, align 4, !dbg !6361
  %add14 = add nsw i32 %26, 1, !dbg !6362
  %27 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6363
  %totloop15 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %27, i32 0, i32 1, !dbg !6364
  %28 = load i32, i32* %totloop15, align 4, !dbg !6364
  %rem16 = srem i32 %add14, %28, !dbg !6365
  %idxprom17 = sext i32 %rem16 to i64, !dbg !6360
  %arrayidx18 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %25, i64 %idxprom17, !dbg !6360
  %v19 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx18, i32 0, i32 0, !dbg !6366
  %29 = load i32, i32* %v19, align 4, !dbg !6366
  store i32 %29, i32* %v_next, align 4, !dbg !6359
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !6367, metadata !DIExpression()), !dbg !6368
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !6369
  %30 = load [3 x float]*, [3 x float]** %vert_cos_dst.addr, align 8, !dbg !6370
  %31 = load i32, i32* %v_curr, align 4, !dbg !6371
  %idxprom20 = zext i32 %31 to i64, !dbg !6370
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %30, i64 %idxprom20, !dbg !6370
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx21, i64 0, i64 0, !dbg !6370
  %32 = load [3 x float]*, [3 x float]** %vert_cos_org.addr, align 8, !dbg !6372
  %33 = load i32, i32* %v_prev, align 4, !dbg !6373
  %idxprom23 = zext i32 %33 to i64, !dbg !6372
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %32, i64 %idxprom23, !dbg !6372
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !6372
  %34 = load [3 x float]*, [3 x float]** %vert_cos_org.addr, align 8, !dbg !6374
  %35 = load i32, i32* %v_curr, align 4, !dbg !6375
  %idxprom26 = zext i32 %35 to i64, !dbg !6374
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %34, i64 %idxprom26, !dbg !6374
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !6374
  %36 = load [3 x float]*, [3 x float]** %vert_cos_org.addr, align 8, !dbg !6376
  %37 = load i32, i32* %v_next, align 4, !dbg !6377
  %idxprom29 = zext i32 %37 to i64, !dbg !6376
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %36, i64 %idxprom29, !dbg !6376
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 0, !dbg !6376
  %38 = load [3 x float]*, [3 x float]** %vert_cos_src.addr, align 8, !dbg !6378
  %39 = load i32, i32* %v_prev, align 4, !dbg !6379
  %idxprom32 = zext i32 %39 to i64, !dbg !6378
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %38, i64 %idxprom32, !dbg !6378
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx33, i64 0, i64 0, !dbg !6378
  %40 = load [3 x float]*, [3 x float]** %vert_cos_src.addr, align 8, !dbg !6380
  %41 = load i32, i32* %v_curr, align 4, !dbg !6381
  %idxprom35 = zext i32 %41 to i64, !dbg !6380
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %40, i64 %idxprom35, !dbg !6380
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx36, i64 0, i64 0, !dbg !6380
  %42 = load [3 x float]*, [3 x float]** %vert_cos_src.addr, align 8, !dbg !6382
  %43 = load i32, i32* %v_next, align 4, !dbg !6383
  %idxprom38 = zext i32 %43 to i64, !dbg !6382
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %42, i64 %idxprom38, !dbg !6382
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx39, i64 0, i64 0, !dbg !6382
  call void @transform_point_by_tri_v3(float* %arraydecay, float* %arraydecay22, float* %arraydecay25, float* %arraydecay28, float* %arraydecay31, float* %arraydecay34, float* %arraydecay37, float* %arraydecay40), !dbg !6384
  %44 = load [3 x float]*, [3 x float]** %vert_cos_new.addr, align 8, !dbg !6385
  %45 = load i32, i32* %v_curr, align 4, !dbg !6386
  %idxprom41 = zext i32 %45 to i64, !dbg !6385
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %44, i64 %idxprom41, !dbg !6385
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !6385
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !6387
  call void @add_v3_v3(float* %arraydecay43, float* %arraydecay44), !dbg !6388
  %46 = load i32*, i32** %vert_accum, align 8, !dbg !6389
  %47 = load i32, i32* %v_curr, align 4, !dbg !6390
  %idxprom45 = zext i32 %47 to i64, !dbg !6389
  %arrayidx46 = getelementptr inbounds i32, i32* %46, i64 %idxprom45, !dbg !6389
  %48 = load i32, i32* %arrayidx46, align 4, !dbg !6391
  %add47 = add nsw i32 %48, 1, !dbg !6391
  store i32 %add47, i32* %arrayidx46, align 4, !dbg !6391
  br label %for.inc, !dbg !6392

for.inc:                                          ; preds = %for.body8
  %49 = load i32, i32* %j, align 4, !dbg !6393
  %inc = add nsw i32 %49, 1, !dbg !6393
  store i32 %inc, i32* %j, align 4, !dbg !6393
  br label %for.cond5, !dbg !6394, !llvm.loop !6395

for.end:                                          ; preds = %for.cond5
  br label %for.inc48, !dbg !6397

for.inc48:                                        ; preds = %for.end
  %50 = load i32, i32* %i, align 4, !dbg !6398
  %inc49 = add nsw i32 %50, 1, !dbg !6398
  store i32 %inc49, i32* %i, align 4, !dbg !6398
  %51 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6399
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %51, i32 1, !dbg !6399
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %mp, align 8, !dbg !6399
  br label %for.cond, !dbg !6400, !llvm.loop !6401

for.end50:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6403
  br label %for.cond51, !dbg !6405

for.cond51:                                       ; preds = %for.inc69, %for.end50
  %52 = load i32, i32* %i, align 4, !dbg !6406
  %53 = load i32, i32* %totvert.addr, align 4, !dbg !6408
  %cmp52 = icmp slt i32 %52, %53, !dbg !6409
  br i1 %cmp52, label %for.body54, label %for.end71, !dbg !6410

for.body54:                                       ; preds = %for.cond51
  %54 = load i32*, i32** %vert_accum, align 8, !dbg !6411
  %55 = load i32, i32* %i, align 4, !dbg !6414
  %idxprom55 = sext i32 %55 to i64, !dbg !6411
  %arrayidx56 = getelementptr inbounds i32, i32* %54, i64 %idxprom55, !dbg !6411
  %56 = load i32, i32* %arrayidx56, align 4, !dbg !6411
  %tobool = icmp ne i32 %56, 0, !dbg !6411
  br i1 %tobool, label %if.then, label %if.else, !dbg !6415

if.then:                                          ; preds = %for.body54
  %57 = load [3 x float]*, [3 x float]** %vert_cos_new.addr, align 8, !dbg !6416
  %58 = load i32, i32* %i, align 4, !dbg !6418
  %idxprom57 = sext i32 %58 to i64, !dbg !6416
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %57, i64 %idxprom57, !dbg !6416
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx58, i64 0, i64 0, !dbg !6416
  %59 = load i32*, i32** %vert_accum, align 8, !dbg !6419
  %60 = load i32, i32* %i, align 4, !dbg !6420
  %idxprom60 = sext i32 %60 to i64, !dbg !6419
  %arrayidx61 = getelementptr inbounds i32, i32* %59, i64 %idxprom60, !dbg !6419
  %61 = load i32, i32* %arrayidx61, align 4, !dbg !6419
  %conv62 = sitofp i32 %61 to float, !dbg !6421
  %div = fdiv float 1.000000e+00, %conv62, !dbg !6422
  call void @mul_v3_fl(float* %arraydecay59, float %div), !dbg !6423
  br label %if.end, !dbg !6424

if.else:                                          ; preds = %for.body54
  %62 = load [3 x float]*, [3 x float]** %vert_cos_new.addr, align 8, !dbg !6425
  %63 = load i32, i32* %i, align 4, !dbg !6427
  %idxprom63 = sext i32 %63 to i64, !dbg !6425
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %62, i64 %idxprom63, !dbg !6425
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx64, i64 0, i64 0, !dbg !6425
  %64 = load [3 x float]*, [3 x float]** %vert_cos_org.addr, align 8, !dbg !6428
  %65 = load i32, i32* %i, align 4, !dbg !6429
  %idxprom66 = sext i32 %65 to i64, !dbg !6428
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %64, i64 %idxprom66, !dbg !6428
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx67, i64 0, i64 0, !dbg !6428
  call void @copy_v3_v3(float* %arraydecay65, float* %arraydecay68), !dbg !6430
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc69, !dbg !6431

for.inc69:                                        ; preds = %if.end
  %66 = load i32, i32* %i, align 4, !dbg !6432
  %inc70 = add nsw i32 %66, 1, !dbg !6432
  store i32 %inc70, i32* %i, align 4, !dbg !6432
  br label %for.cond51, !dbg !6433, !llvm.loop !6434

for.end71:                                        ; preds = %for.cond51
  %67 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6436
  %68 = load i32*, i32** %vert_accum, align 8, !dbg !6437
  %69 = bitcast i32* %68 to i8*, !dbg !6437
  call void %67(i8* %69), !dbg !6436
  ret void, !dbg !6438
}

declare dso_local void @transform_point_by_tri_v3(float*, float*, float*, float*, float*, float*, float*, float*) #2

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !6439 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6440, metadata !DIExpression()), !dbg !6441
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6442, metadata !DIExpression()), !dbg !6443
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6444, metadata !DIExpression()), !dbg !6445
  %0 = load float*, float** %a.addr, align 8, !dbg !6446
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6446
  %1 = load float, float* %arrayidx, align 4, !dbg !6446
  %2 = load float, float* %f.addr, align 4, !dbg !6447
  %mul = fmul float %1, %2, !dbg !6448
  %3 = load float*, float** %r.addr, align 8, !dbg !6449
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !6449
  store float %mul, float* %arrayidx1, align 4, !dbg !6450
  %4 = load float*, float** %a.addr, align 8, !dbg !6451
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6451
  %5 = load float, float* %arrayidx2, align 4, !dbg !6451
  %6 = load float, float* %f.addr, align 4, !dbg !6452
  %mul3 = fmul float %5, %6, !dbg !6453
  %7 = load float*, float** %r.addr, align 8, !dbg !6454
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6454
  store float %mul3, float* %arrayidx4, align 4, !dbg !6455
  %8 = load float*, float** %a.addr, align 8, !dbg !6456
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6456
  %9 = load float, float* %arrayidx5, align 4, !dbg !6456
  %10 = load float, float* %f.addr, align 4, !dbg !6457
  %mul6 = fmul float %9, %10, !dbg !6458
  %11 = load float*, float** %r.addr, align 8, !dbg !6459
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !6459
  store float %mul6, float* %arrayidx7, align 4, !dbg !6460
  ret void, !dbg !6461
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #3

declare dso_local float @area_tri_signed_v3(float*, float*, float*, float*) #2

declare dso_local zeroext i8 @CustomData_external_test(%struct.CustomData*, i32) #2

declare dso_local void @CustomData_external_add(%struct.CustomData*, %struct.ID*, i32, i32, i8*) #2

declare dso_local i32 @multires_mdisp_corners(%struct.MDisps*) #2

; Function Attrs: nounwind
declare dso_local float @logf(float) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind }
attributes #6 = { readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!150, !151, !152}
!llvm.ident = !{!153}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !79, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/blenkernel/intern/mesh_evaluate.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !9, !17, !29, !73}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 341, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8}
!7 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!8 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!9 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 313, baseType: !5, size: 32, elements: !10)
!10 = !{!11, !12, !13, !14, !15, !16}
!11 = !DIEnumerator(name: "ME_EDGEDRAW", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "ME_SEAM", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "ME_EDGERENDER", value: 32, isUnsigned: true)
!14 = !DIEnumerator(name: "ME_LOOSEEDGE", value: 128, isUnsigned: true)
!15 = !DIEnumerator(name: "ME_EDGE_TMP_TAG", value: 256, isUnsigned: true)
!16 = !DIEnumerator(name: "ME_SHARP", value: 512, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !18, line: 67, baseType: !5, size: 32, elements: !19)
!18 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28}
!20 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!22 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!23 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!24 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!25 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!26 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!27 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!28 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !30, line: 76, baseType: !5, size: 32, elements: !31)
!30 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72}
!32 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!37 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!38 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!39 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!40 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!41 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!42 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!43 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!44 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!45 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!46 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!47 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!48 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!49 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!50 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!51 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!52 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!53 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!54 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!55 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!56 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!57 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!58 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!59 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!60 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!61 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!62 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!63 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!64 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!65 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!66 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!67 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!68 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!69 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!70 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!71 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!72 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 304, baseType: !5, size: 32, elements: !74)
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "ME_VERT_TMP_TAG", value: 4, isUnsigned: true)
!76 = !DIEnumerator(name: "ME_HIDE", value: 16, isUnsigned: true)
!77 = !DIEnumerator(name: "ME_VERT_MERGED", value: 64, isUnsigned: true)
!78 = !DIEnumerator(name: "ME_VERT_PBVH_UPDATE", value: 128, isUnsigned: true)
!79 = !{!80, !81, !84, !85, !5, !90, !93, !94, !98, !99, !101, !102}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !82, line: 46, baseType: !83)
!82 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!83 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!84 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 96, elements: !88)
!87 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !84)
!88 = !{!89}
!89 = !DISubrange(count: 3)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !92, line: 33, baseType: !5)
!92 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!93 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!95 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 64, elements: !96)
!96 = !{!97}
!97 = !DISubrange(count: 2)
!98 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !100, line: 90, baseType: !83)
!100 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!101 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "BKEMeshToTangent", file: !1, line: 615, baseType: !104)
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1, line: 607, size: 448, elements: !105)
!105 = !{!106, !116, !123, !134, !142, !144, !149}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "mpolys", scope: !104, file: !1, line: 608, baseType: !107, size: 64)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !4, line: 85, baseType: !109)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !4, line: 79, size: 96, elements: !110)
!110 = !{!111, !112, !113, !114, !115}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !109, file: !4, line: 81, baseType: !93, size: 32)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !109, file: !4, line: 82, baseType: !93, size: 32, offset: 32)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !109, file: !4, line: 83, baseType: !101, size: 16, offset: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !109, file: !4, line: 84, baseType: !98, size: 8, offset: 80)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !109, file: !4, line: 84, baseType: !98, size: 8, offset: 88)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "mloops", scope: !104, file: !1, line: 609, baseType: !117, size: 64, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !4, line: 91, baseType: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !4, line: 88, size: 64, elements: !120)
!120 = !{!121, !122}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !119, file: !4, line: 89, baseType: !5, size: 32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !119, file: !4, line: 90, baseType: !5, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "mverts", scope: !104, file: !1, line: 610, baseType: !124, size: 64, offset: 128)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !4, line: 69, baseType: !126)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !4, line: 65, size: 160, elements: !127)
!127 = !{!128, !130, !132, !133}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !126, file: !4, line: 66, baseType: !129, size: 96)
!129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 96, elements: !88)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !126, file: !4, line: 67, baseType: !131, size: 48, offset: 96)
!131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 48, elements: !88)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !126, file: !4, line: 68, baseType: !98, size: 8, offset: 144)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !126, file: !4, line: 68, baseType: !98, size: 8, offset: 152)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "luvs", scope: !104, file: !1, line: 611, baseType: !135, size: 64, offset: 192)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopUV", file: !4, line: 112, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !4, line: 109, size: 96, elements: !138)
!138 = !{!139, !141}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !137, file: !4, line: 110, baseType: !140, size: 64)
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 64, elements: !96)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !137, file: !4, line: 111, baseType: !93, size: 32, offset: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "lnors", scope: !104, file: !1, line: 612, baseType: !143, size: 64, offset: 256)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "tangents", scope: !104, file: !1, line: 613, baseType: !145, size: 64, offset: 320)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 128, elements: !147)
!147 = !{!148}
!148 = !DISubrange(count: 4)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "num_polys", scope: !104, file: !1, line: 614, baseType: !93, size: 32, offset: 384)
!150 = !{i32 7, !"Dwarf Version", i32 4}
!151 = !{i32 2, !"Debug Info Version", i32 3}
!152 = !{i32 1, !"wchar_size", i32 4}
!153 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!154 = distinct !DISubprogram(name: "BKE_mesh_calc_normals_mapping", scope: !1, file: !1, line: 89, type: !155, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!155 = !DISubroutineType(types: !156)
!156 = !{null, !124, !93, !117, !107, !93, !93, !143, !157, !93, !168, !143}
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !4, line: 46, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !4, line: 42, size: 160, elements: !160)
!160 = !{!161, !162, !163, !164, !165, !166, !167}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !159, file: !4, line: 43, baseType: !5, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !159, file: !4, line: 43, baseType: !5, size: 32, offset: 32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !159, file: !4, line: 43, baseType: !5, size: 32, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !159, file: !4, line: 43, baseType: !5, size: 32, offset: 96)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !159, file: !4, line: 44, baseType: !101, size: 16, offset: 128)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !159, file: !4, line: 45, baseType: !98, size: 8, offset: 144)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !159, file: !4, line: 45, baseType: !98, size: 8, offset: 152)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !93)
!170 = !{}
!171 = !DILocalVariable(name: "mverts", arg: 1, scope: !154, file: !1, line: 89, type: !124)
!172 = !DILocation(line: 89, column: 43, scope: !154)
!173 = !DILocalVariable(name: "numVerts", arg: 2, scope: !154, file: !1, line: 89, type: !93)
!174 = !DILocation(line: 89, column: 55, scope: !154)
!175 = !DILocalVariable(name: "mloop", arg: 3, scope: !154, file: !1, line: 90, type: !117)
!176 = !DILocation(line: 90, column: 43, scope: !154)
!177 = !DILocalVariable(name: "mpolys", arg: 4, scope: !154, file: !1, line: 90, type: !107)
!178 = !DILocation(line: 90, column: 57, scope: !154)
!179 = !DILocalVariable(name: "numLoops", arg: 5, scope: !154, file: !1, line: 90, type: !93)
!180 = !DILocation(line: 90, column: 69, scope: !154)
!181 = !DILocalVariable(name: "numPolys", arg: 6, scope: !154, file: !1, line: 90, type: !93)
!182 = !DILocation(line: 90, column: 83, scope: !154)
!183 = !DILocalVariable(name: "r_polyNors", arg: 7, scope: !154, file: !1, line: 90, type: !143)
!184 = !DILocation(line: 90, column: 101, scope: !154)
!185 = !DILocalVariable(name: "mfaces", arg: 8, scope: !154, file: !1, line: 91, type: !157)
!186 = !DILocation(line: 91, column: 43, scope: !154)
!187 = !DILocalVariable(name: "numFaces", arg: 9, scope: !154, file: !1, line: 91, type: !93)
!188 = !DILocation(line: 91, column: 55, scope: !154)
!189 = !DILocalVariable(name: "origIndexFace", arg: 10, scope: !154, file: !1, line: 91, type: !168)
!190 = !DILocation(line: 91, column: 76, scope: !154)
!191 = !DILocalVariable(name: "r_faceNors", arg: 11, scope: !154, file: !1, line: 91, type: !143)
!192 = !DILocation(line: 91, column: 99, scope: !154)
!193 = !DILocation(line: 93, column: 35, scope: !154)
!194 = !DILocation(line: 93, column: 43, scope: !154)
!195 = !DILocation(line: 93, column: 53, scope: !154)
!196 = !DILocation(line: 93, column: 60, scope: !154)
!197 = !DILocation(line: 94, column: 35, scope: !154)
!198 = !DILocation(line: 94, column: 45, scope: !154)
!199 = !DILocation(line: 94, column: 55, scope: !154)
!200 = !DILocation(line: 94, column: 67, scope: !154)
!201 = !DILocation(line: 94, column: 75, scope: !154)
!202 = !DILocation(line: 95, column: 35, scope: !154)
!203 = !DILocation(line: 95, column: 50, scope: !154)
!204 = !DILocation(line: 93, column: 2, scope: !154)
!205 = !DILocation(line: 96, column: 1, scope: !154)
!206 = distinct !DISubprogram(name: "BKE_mesh_calc_normals_mapping_ex", scope: !1, file: !1, line: 98, type: !207, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!207 = !DISubroutineType(types: !208)
!208 = !{null, !124, !93, !117, !107, !93, !93, !143, !157, !93, !168, !143, !209}
!209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !210)
!210 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!211 = !DILocalVariable(name: "mverts", arg: 1, scope: !206, file: !1, line: 99, type: !124)
!212 = !DILocation(line: 99, column: 16, scope: !206)
!213 = !DILocalVariable(name: "numVerts", arg: 2, scope: !206, file: !1, line: 99, type: !93)
!214 = !DILocation(line: 99, column: 28, scope: !206)
!215 = !DILocalVariable(name: "mloop", arg: 3, scope: !206, file: !1, line: 100, type: !117)
!216 = !DILocation(line: 100, column: 16, scope: !206)
!217 = !DILocalVariable(name: "mpolys", arg: 4, scope: !206, file: !1, line: 100, type: !107)
!218 = !DILocation(line: 100, column: 30, scope: !206)
!219 = !DILocalVariable(name: "numLoops", arg: 5, scope: !206, file: !1, line: 101, type: !93)
!220 = !DILocation(line: 101, column: 13, scope: !206)
!221 = !DILocalVariable(name: "numPolys", arg: 6, scope: !206, file: !1, line: 101, type: !93)
!222 = !DILocation(line: 101, column: 27, scope: !206)
!223 = !DILocalVariable(name: "r_polyNors", arg: 7, scope: !206, file: !1, line: 101, type: !143)
!224 = !DILocation(line: 101, column: 45, scope: !206)
!225 = !DILocalVariable(name: "mfaces", arg: 8, scope: !206, file: !1, line: 102, type: !157)
!226 = !DILocation(line: 102, column: 16, scope: !206)
!227 = !DILocalVariable(name: "numFaces", arg: 9, scope: !206, file: !1, line: 102, type: !93)
!228 = !DILocation(line: 102, column: 28, scope: !206)
!229 = !DILocalVariable(name: "origIndexFace", arg: 10, scope: !206, file: !1, line: 102, type: !168)
!230 = !DILocation(line: 102, column: 49, scope: !206)
!231 = !DILocalVariable(name: "r_faceNors", arg: 11, scope: !206, file: !1, line: 102, type: !143)
!232 = !DILocation(line: 102, column: 72, scope: !206)
!233 = !DILocalVariable(name: "only_face_normals", arg: 12, scope: !206, file: !1, line: 103, type: !209)
!234 = !DILocation(line: 103, column: 20, scope: !206)
!235 = !DILocalVariable(name: "pnors", scope: !206, file: !1, line: 105, type: !143)
!236 = !DILocation(line: 105, column: 10, scope: !206)
!237 = !DILocation(line: 105, column: 22, scope: !206)
!238 = !DILocalVariable(name: "fnors", scope: !206, file: !1, line: 105, type: !143)
!239 = !DILocation(line: 105, column: 36, scope: !206)
!240 = !DILocation(line: 105, column: 48, scope: !206)
!241 = !DILocalVariable(name: "i", scope: !206, file: !1, line: 106, type: !93)
!242 = !DILocation(line: 106, column: 6, scope: !206)
!243 = !DILocalVariable(name: "mf", scope: !206, file: !1, line: 107, type: !157)
!244 = !DILocation(line: 107, column: 9, scope: !206)
!245 = !DILocalVariable(name: "mp", scope: !206, file: !1, line: 108, type: !107)
!246 = !DILocation(line: 108, column: 9, scope: !206)
!247 = !DILocation(line: 110, column: 6, scope: !248)
!248 = distinct !DILexicalBlock(scope: !206, file: !1, line: 110, column: 6)
!249 = !DILocation(line: 110, column: 15, scope: !248)
!250 = !DILocation(line: 110, column: 6, scope: !206)
!251 = !DILocation(line: 111, column: 7, scope: !252)
!252 = distinct !DILexicalBlock(scope: !253, file: !1, line: 111, column: 7)
!253 = distinct !DILexicalBlock(scope: !248, file: !1, line: 110, column: 21)
!254 = !DILocation(line: 111, column: 25, scope: !252)
!255 = !DILocation(line: 111, column: 7, scope: !253)
!256 = !DILocation(line: 112, column: 36, scope: !257)
!257 = distinct !DILexicalBlock(scope: !252, file: !1, line: 111, column: 35)
!258 = !DILocation(line: 112, column: 44, scope: !257)
!259 = !DILocation(line: 112, column: 4, scope: !257)
!260 = !DILocation(line: 113, column: 3, scope: !257)
!261 = !DILocation(line: 114, column: 3, scope: !253)
!262 = !DILocation(line: 118, column: 7, scope: !263)
!263 = distinct !DILexicalBlock(scope: !206, file: !1, line: 118, column: 6)
!264 = !DILocation(line: 118, column: 25, scope: !263)
!265 = !DILocation(line: 118, column: 34, scope: !263)
!266 = !DILocation(line: 118, column: 38, scope: !263)
!267 = !DILocation(line: 118, column: 49, scope: !263)
!268 = !DILocation(line: 118, column: 58, scope: !263)
!269 = !DILocation(line: 118, column: 62, scope: !263)
!270 = !DILocation(line: 118, column: 73, scope: !263)
!271 = !DILocation(line: 118, column: 6, scope: !206)
!272 = !DILocation(line: 119, column: 3, scope: !273)
!273 = distinct !DILexicalBlock(scope: !263, file: !1, line: 118, column: 83)
!274 = !DILocation(line: 120, column: 3, scope: !273)
!275 = !DILocation(line: 123, column: 7, scope: !276)
!276 = distinct !DILexicalBlock(scope: !206, file: !1, line: 123, column: 6)
!277 = !DILocation(line: 123, column: 6, scope: !206)
!278 = !DILocation(line: 123, column: 22, scope: !276)
!279 = !DILocation(line: 123, column: 61, scope: !276)
!280 = !DILocation(line: 123, column: 53, scope: !276)
!281 = !DILocation(line: 123, column: 51, scope: !276)
!282 = !DILocation(line: 123, column: 20, scope: !276)
!283 = !DILocation(line: 123, column: 14, scope: !276)
!284 = !DILocation(line: 127, column: 6, scope: !285)
!285 = distinct !DILexicalBlock(scope: !206, file: !1, line: 127, column: 6)
!286 = !DILocation(line: 127, column: 24, scope: !285)
!287 = !DILocation(line: 127, column: 6, scope: !206)
!288 = !DILocation(line: 130, column: 30, scope: !289)
!289 = distinct !DILexicalBlock(scope: !285, file: !1, line: 127, column: 34)
!290 = !DILocation(line: 130, column: 38, scope: !289)
!291 = !DILocation(line: 130, column: 48, scope: !289)
!292 = !DILocation(line: 130, column: 55, scope: !289)
!293 = !DILocation(line: 130, column: 63, scope: !289)
!294 = !DILocation(line: 130, column: 73, scope: !289)
!295 = !DILocation(line: 130, column: 83, scope: !289)
!296 = !DILocation(line: 130, column: 3, scope: !289)
!297 = !DILocation(line: 131, column: 2, scope: !289)
!298 = !DILocation(line: 134, column: 8, scope: !299)
!299 = distinct !DILexicalBlock(scope: !285, file: !1, line: 132, column: 7)
!300 = !DILocation(line: 134, column: 6, scope: !299)
!301 = !DILocation(line: 135, column: 10, scope: !302)
!302 = distinct !DILexicalBlock(scope: !299, file: !1, line: 135, column: 3)
!303 = !DILocation(line: 135, column: 8, scope: !302)
!304 = !DILocation(line: 135, column: 15, scope: !305)
!305 = distinct !DILexicalBlock(scope: !302, file: !1, line: 135, column: 3)
!306 = !DILocation(line: 135, column: 19, scope: !305)
!307 = !DILocation(line: 135, column: 17, scope: !305)
!308 = !DILocation(line: 135, column: 3, scope: !302)
!309 = !DILocation(line: 136, column: 30, scope: !310)
!310 = distinct !DILexicalBlock(scope: !305, file: !1, line: 135, column: 40)
!311 = !DILocation(line: 136, column: 34, scope: !310)
!312 = !DILocation(line: 136, column: 42, scope: !310)
!313 = !DILocation(line: 136, column: 46, scope: !310)
!314 = !DILocation(line: 136, column: 40, scope: !310)
!315 = !DILocation(line: 136, column: 57, scope: !310)
!316 = !DILocation(line: 136, column: 65, scope: !310)
!317 = !DILocation(line: 136, column: 71, scope: !310)
!318 = !DILocation(line: 136, column: 4, scope: !310)
!319 = !DILocation(line: 137, column: 3, scope: !310)
!320 = !DILocation(line: 135, column: 30, scope: !305)
!321 = !DILocation(line: 135, column: 36, scope: !305)
!322 = !DILocation(line: 135, column: 3, scope: !305)
!323 = distinct !{!323, !308, !324}
!324 = !DILocation(line: 137, column: 3, scope: !302)
!325 = !DILocation(line: 140, column: 6, scope: !326)
!326 = distinct !DILexicalBlock(scope: !206, file: !1, line: 140, column: 6)
!327 = !DILocation(line: 140, column: 20, scope: !326)
!328 = !DILocation(line: 142, column: 6, scope: !326)
!329 = !DILocation(line: 142, column: 12, scope: !326)
!330 = !DILocation(line: 142, column: 20, scope: !326)
!331 = !DILocation(line: 143, column: 6, scope: !326)
!332 = !DILocation(line: 140, column: 6, scope: !206)
!333 = !DILocation(line: 145, column: 8, scope: !334)
!334 = distinct !DILexicalBlock(scope: !326, file: !1, line: 144, column: 2)
!335 = !DILocation(line: 145, column: 6, scope: !334)
!336 = !DILocation(line: 146, column: 10, scope: !337)
!337 = distinct !DILexicalBlock(scope: !334, file: !1, line: 146, column: 3)
!338 = !DILocation(line: 146, column: 8, scope: !337)
!339 = !DILocation(line: 146, column: 15, scope: !340)
!340 = distinct !DILexicalBlock(scope: !337, file: !1, line: 146, column: 3)
!341 = !DILocation(line: 146, column: 19, scope: !340)
!342 = !DILocation(line: 146, column: 17, scope: !340)
!343 = !DILocation(line: 146, column: 3, scope: !337)
!344 = !DILocation(line: 147, column: 9, scope: !345)
!345 = distinct !DILexicalBlock(scope: !346, file: !1, line: 147, column: 8)
!346 = distinct !DILexicalBlock(scope: !340, file: !1, line: 146, column: 57)
!347 = !DILocation(line: 147, column: 8, scope: !345)
!348 = !DILocation(line: 147, column: 25, scope: !345)
!349 = !DILocation(line: 147, column: 23, scope: !345)
!350 = !DILocation(line: 147, column: 8, scope: !346)
!351 = !DILocation(line: 148, column: 16, scope: !352)
!352 = distinct !DILexicalBlock(scope: !345, file: !1, line: 147, column: 35)
!353 = !DILocation(line: 148, column: 22, scope: !352)
!354 = !DILocation(line: 148, column: 26, scope: !352)
!355 = !DILocation(line: 148, column: 33, scope: !352)
!356 = !DILocation(line: 148, column: 32, scope: !352)
!357 = !DILocation(line: 148, column: 5, scope: !352)
!358 = !DILocation(line: 149, column: 4, scope: !352)
!359 = !DILocation(line: 152, column: 5, scope: !360)
!360 = distinct !DILexicalBlock(scope: !345, file: !1, line: 150, column: 9)
!361 = !DILocation(line: 154, column: 3, scope: !346)
!362 = !DILocation(line: 146, column: 30, scope: !340)
!363 = !DILocation(line: 146, column: 36, scope: !340)
!364 = !DILocation(line: 146, column: 53, scope: !340)
!365 = !DILocation(line: 146, column: 3, scope: !340)
!366 = distinct !{!366, !343, !367}
!367 = !DILocation(line: 154, column: 3, scope: !337)
!368 = !DILocation(line: 155, column: 2, scope: !334)
!369 = !DILocation(line: 157, column: 6, scope: !370)
!370 = distinct !DILexicalBlock(scope: !206, file: !1, line: 157, column: 6)
!371 = !DILocation(line: 157, column: 15, scope: !370)
!372 = !DILocation(line: 157, column: 12, scope: !370)
!373 = !DILocation(line: 157, column: 6, scope: !206)
!374 = !DILocation(line: 157, column: 27, scope: !370)
!375 = !DILocation(line: 157, column: 37, scope: !370)
!376 = !DILocation(line: 160, column: 16, scope: !206)
!377 = !DILocation(line: 160, column: 8, scope: !206)
!378 = !DILocation(line: 162, column: 1, scope: !206)
!379 = distinct !DISubprogram(name: "mesh_calc_normals_vert_fallback", scope: !1, file: !1, line: 74, type: !380, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!380 = !DISubroutineType(types: !381)
!381 = !{null, !124, !93}
!382 = !DILocalVariable(name: "mverts", arg: 1, scope: !379, file: !1, line: 74, type: !124)
!383 = !DILocation(line: 74, column: 52, scope: !379)
!384 = !DILocalVariable(name: "numVerts", arg: 2, scope: !379, file: !1, line: 74, type: !93)
!385 = !DILocation(line: 74, column: 64, scope: !379)
!386 = !DILocalVariable(name: "i", scope: !379, file: !1, line: 76, type: !93)
!387 = !DILocation(line: 76, column: 6, scope: !379)
!388 = !DILocation(line: 77, column: 9, scope: !389)
!389 = distinct !DILexicalBlock(scope: !379, file: !1, line: 77, column: 2)
!390 = !DILocation(line: 77, column: 7, scope: !389)
!391 = !DILocation(line: 77, column: 14, scope: !392)
!392 = distinct !DILexicalBlock(scope: !389, file: !1, line: 77, column: 2)
!393 = !DILocation(line: 77, column: 18, scope: !392)
!394 = !DILocation(line: 77, column: 16, scope: !392)
!395 = !DILocation(line: 77, column: 2, scope: !389)
!396 = !DILocalVariable(name: "mv", scope: !397, file: !1, line: 78, type: !124)
!397 = distinct !DILexicalBlock(scope: !392, file: !1, line: 77, column: 33)
!398 = !DILocation(line: 78, column: 10, scope: !397)
!399 = !DILocation(line: 78, column: 16, scope: !397)
!400 = !DILocation(line: 78, column: 23, scope: !397)
!401 = !DILocalVariable(name: "no", scope: !397, file: !1, line: 79, type: !129)
!402 = !DILocation(line: 79, column: 9, scope: !397)
!403 = !DILocation(line: 81, column: 19, scope: !397)
!404 = !DILocation(line: 81, column: 23, scope: !397)
!405 = !DILocation(line: 81, column: 27, scope: !397)
!406 = !DILocation(line: 81, column: 3, scope: !397)
!407 = !DILocation(line: 82, column: 28, scope: !397)
!408 = !DILocation(line: 82, column: 32, scope: !397)
!409 = !DILocation(line: 82, column: 36, scope: !397)
!410 = !DILocation(line: 82, column: 3, scope: !397)
!411 = !DILocation(line: 83, column: 2, scope: !397)
!412 = !DILocation(line: 77, column: 29, scope: !392)
!413 = !DILocation(line: 77, column: 2, scope: !392)
!414 = distinct !{!414, !395, !415}
!415 = !DILocation(line: 83, column: 2, scope: !389)
!416 = !DILocation(line: 84, column: 1, scope: !379)
!417 = distinct !DISubprogram(name: "BKE_mesh_calc_normals_poly", scope: !1, file: !1, line: 216, type: !418, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!418 = !DISubroutineType(types: !419)
!419 = !{null, !124, !93, !117, !107, !93, !93, !143, !209}
!420 = !DILocalVariable(name: "mverts", arg: 1, scope: !417, file: !1, line: 216, type: !124)
!421 = !DILocation(line: 216, column: 40, scope: !417)
!422 = !DILocalVariable(name: "numVerts", arg: 2, scope: !417, file: !1, line: 216, type: !93)
!423 = !DILocation(line: 216, column: 52, scope: !417)
!424 = !DILocalVariable(name: "mloop", arg: 3, scope: !417, file: !1, line: 216, type: !117)
!425 = !DILocation(line: 216, column: 69, scope: !417)
!426 = !DILocalVariable(name: "mpolys", arg: 4, scope: !417, file: !1, line: 216, type: !107)
!427 = !DILocation(line: 216, column: 83, scope: !417)
!428 = !DILocalVariable(name: "UNUSED_numLoops", arg: 5, scope: !417, file: !1, line: 217, type: !93)
!429 = !DILocation(line: 217, column: 37, scope: !417)
!430 = !DILocalVariable(name: "numPolys", arg: 6, scope: !417, file: !1, line: 217, type: !93)
!431 = !DILocation(line: 217, column: 59, scope: !417)
!432 = !DILocalVariable(name: "r_polynors", arg: 7, scope: !417, file: !1, line: 217, type: !143)
!433 = !DILocation(line: 217, column: 77, scope: !417)
!434 = !DILocalVariable(name: "only_face_normals", arg: 8, scope: !417, file: !1, line: 218, type: !209)
!435 = !DILocation(line: 218, column: 44, scope: !417)
!436 = !DILocalVariable(name: "pnors", scope: !417, file: !1, line: 220, type: !143)
!437 = !DILocation(line: 220, column: 10, scope: !417)
!438 = !DILocation(line: 220, column: 22, scope: !417)
!439 = !DILocalVariable(name: "tnorms", scope: !417, file: !1, line: 221, type: !143)
!440 = !DILocation(line: 221, column: 10, scope: !417)
!441 = !DILocalVariable(name: "i", scope: !417, file: !1, line: 222, type: !93)
!442 = !DILocation(line: 222, column: 6, scope: !417)
!443 = !DILocalVariable(name: "mp", scope: !417, file: !1, line: 223, type: !107)
!444 = !DILocation(line: 223, column: 9, scope: !417)
!445 = !DILocation(line: 225, column: 6, scope: !446)
!446 = distinct !DILexicalBlock(scope: !417, file: !1, line: 225, column: 6)
!447 = !DILocation(line: 225, column: 6, scope: !417)
!448 = !DILocation(line: 231, column: 10, scope: !449)
!449 = distinct !DILexicalBlock(scope: !450, file: !1, line: 231, column: 3)
!450 = distinct !DILexicalBlock(scope: !446, file: !1, line: 225, column: 25)
!451 = !DILocation(line: 231, column: 8, scope: !449)
!452 = !DILocation(line: 231, column: 15, scope: !453)
!453 = distinct !DILexicalBlock(scope: !449, file: !1, line: 231, column: 3)
!454 = !DILocation(line: 231, column: 19, scope: !453)
!455 = !DILocation(line: 231, column: 17, scope: !453)
!456 = !DILocation(line: 231, column: 3, scope: !449)
!457 = !DILocation(line: 232, column: 31, scope: !458)
!458 = distinct !DILexicalBlock(scope: !453, file: !1, line: 231, column: 34)
!459 = !DILocation(line: 232, column: 38, scope: !458)
!460 = !DILocation(line: 232, column: 42, scope: !458)
!461 = !DILocation(line: 232, column: 50, scope: !458)
!462 = !DILocation(line: 232, column: 57, scope: !458)
!463 = !DILocation(line: 232, column: 60, scope: !458)
!464 = !DILocation(line: 232, column: 48, scope: !458)
!465 = !DILocation(line: 232, column: 71, scope: !458)
!466 = !DILocation(line: 232, column: 79, scope: !458)
!467 = !DILocation(line: 232, column: 85, scope: !458)
!468 = !DILocation(line: 232, column: 4, scope: !458)
!469 = !DILocation(line: 233, column: 3, scope: !458)
!470 = !DILocation(line: 231, column: 30, scope: !453)
!471 = !DILocation(line: 231, column: 3, scope: !453)
!472 = distinct !{!472, !456, !473}
!473 = !DILocation(line: 233, column: 3, scope: !449)
!474 = !DILocation(line: 234, column: 3, scope: !450)
!475 = !DILocation(line: 238, column: 11, scope: !417)
!476 = !DILocation(line: 238, column: 49, scope: !417)
!477 = !DILocation(line: 238, column: 41, scope: !417)
!478 = !DILocation(line: 238, column: 39, scope: !417)
!479 = !DILocation(line: 238, column: 9, scope: !417)
!480 = !DILocation(line: 240, column: 6, scope: !481)
!481 = distinct !DILexicalBlock(scope: !417, file: !1, line: 240, column: 6)
!482 = !DILocation(line: 240, column: 6, scope: !417)
!483 = !DILocation(line: 241, column: 8, scope: !484)
!484 = distinct !DILexicalBlock(scope: !481, file: !1, line: 240, column: 13)
!485 = !DILocation(line: 241, column: 6, scope: !484)
!486 = !DILocation(line: 242, column: 10, scope: !487)
!487 = distinct !DILexicalBlock(scope: !484, file: !1, line: 242, column: 3)
!488 = !DILocation(line: 242, column: 8, scope: !487)
!489 = !DILocation(line: 242, column: 15, scope: !490)
!490 = distinct !DILexicalBlock(scope: !487, file: !1, line: 242, column: 3)
!491 = !DILocation(line: 242, column: 19, scope: !490)
!492 = !DILocation(line: 242, column: 17, scope: !490)
!493 = !DILocation(line: 242, column: 3, scope: !487)
!494 = !DILocation(line: 243, column: 33, scope: !495)
!495 = distinct !DILexicalBlock(scope: !490, file: !1, line: 242, column: 40)
!496 = !DILocation(line: 243, column: 37, scope: !495)
!497 = !DILocation(line: 243, column: 45, scope: !495)
!498 = !DILocation(line: 243, column: 49, scope: !495)
!499 = !DILocation(line: 243, column: 43, scope: !495)
!500 = !DILocation(line: 243, column: 60, scope: !495)
!501 = !DILocation(line: 243, column: 68, scope: !495)
!502 = !DILocation(line: 243, column: 74, scope: !495)
!503 = !DILocation(line: 243, column: 78, scope: !495)
!504 = !DILocation(line: 243, column: 4, scope: !495)
!505 = !DILocation(line: 244, column: 3, scope: !495)
!506 = !DILocation(line: 242, column: 30, scope: !490)
!507 = !DILocation(line: 242, column: 36, scope: !490)
!508 = !DILocation(line: 242, column: 3, scope: !490)
!509 = distinct !{!509, !493, !510}
!510 = !DILocation(line: 244, column: 3, scope: !487)
!511 = !DILocation(line: 245, column: 2, scope: !484)
!512 = !DILocalVariable(name: "tpnor", scope: !513, file: !1, line: 247, type: !129)
!513 = distinct !DILexicalBlock(scope: !481, file: !1, line: 246, column: 7)
!514 = !DILocation(line: 247, column: 9, scope: !513)
!515 = !DILocation(line: 248, column: 8, scope: !513)
!516 = !DILocation(line: 248, column: 6, scope: !513)
!517 = !DILocation(line: 249, column: 10, scope: !518)
!518 = distinct !DILexicalBlock(scope: !513, file: !1, line: 249, column: 3)
!519 = !DILocation(line: 249, column: 8, scope: !518)
!520 = !DILocation(line: 249, column: 15, scope: !521)
!521 = distinct !DILexicalBlock(scope: !518, file: !1, line: 249, column: 3)
!522 = !DILocation(line: 249, column: 19, scope: !521)
!523 = !DILocation(line: 249, column: 17, scope: !521)
!524 = !DILocation(line: 249, column: 3, scope: !518)
!525 = !DILocation(line: 250, column: 33, scope: !526)
!526 = distinct !DILexicalBlock(scope: !521, file: !1, line: 249, column: 40)
!527 = !DILocation(line: 250, column: 37, scope: !526)
!528 = !DILocation(line: 250, column: 45, scope: !526)
!529 = !DILocation(line: 250, column: 49, scope: !526)
!530 = !DILocation(line: 250, column: 43, scope: !526)
!531 = !DILocation(line: 250, column: 60, scope: !526)
!532 = !DILocation(line: 250, column: 68, scope: !526)
!533 = !DILocation(line: 250, column: 75, scope: !526)
!534 = !DILocation(line: 250, column: 4, scope: !526)
!535 = !DILocation(line: 251, column: 3, scope: !526)
!536 = !DILocation(line: 249, column: 30, scope: !521)
!537 = !DILocation(line: 249, column: 36, scope: !521)
!538 = !DILocation(line: 249, column: 3, scope: !521)
!539 = distinct !{!539, !524, !540}
!540 = !DILocation(line: 251, column: 3, scope: !518)
!541 = !DILocation(line: 255, column: 9, scope: !542)
!542 = distinct !DILexicalBlock(scope: !417, file: !1, line: 255, column: 2)
!543 = !DILocation(line: 255, column: 7, scope: !542)
!544 = !DILocation(line: 255, column: 14, scope: !545)
!545 = distinct !DILexicalBlock(scope: !542, file: !1, line: 255, column: 2)
!546 = !DILocation(line: 255, column: 18, scope: !545)
!547 = !DILocation(line: 255, column: 16, scope: !545)
!548 = !DILocation(line: 255, column: 2, scope: !542)
!549 = !DILocalVariable(name: "mv", scope: !550, file: !1, line: 256, type: !124)
!550 = distinct !DILexicalBlock(scope: !545, file: !1, line: 255, column: 33)
!551 = !DILocation(line: 256, column: 10, scope: !550)
!552 = !DILocation(line: 256, column: 16, scope: !550)
!553 = !DILocation(line: 256, column: 23, scope: !550)
!554 = !DILocalVariable(name: "no", scope: !550, file: !1, line: 257, type: !555)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!556 = !DILocation(line: 257, column: 10, scope: !550)
!557 = !DILocation(line: 257, column: 15, scope: !550)
!558 = !DILocation(line: 257, column: 22, scope: !550)
!559 = !DILocation(line: 259, column: 7, scope: !560)
!560 = distinct !DILexicalBlock(scope: !550, file: !1, line: 259, column: 7)
!561 = !DILocation(line: 259, column: 7, scope: !550)
!562 = !DILocation(line: 260, column: 20, scope: !563)
!563 = distinct !DILexicalBlock(scope: !560, file: !1, line: 259, column: 43)
!564 = !DILocation(line: 260, column: 24, scope: !563)
!565 = !DILocation(line: 260, column: 28, scope: !563)
!566 = !DILocation(line: 260, column: 4, scope: !563)
!567 = !DILocation(line: 261, column: 3, scope: !563)
!568 = !DILocation(line: 263, column: 28, scope: !550)
!569 = !DILocation(line: 263, column: 32, scope: !550)
!570 = !DILocation(line: 263, column: 36, scope: !550)
!571 = !DILocation(line: 263, column: 3, scope: !550)
!572 = !DILocation(line: 264, column: 2, scope: !550)
!573 = !DILocation(line: 255, column: 29, scope: !545)
!574 = !DILocation(line: 255, column: 2, scope: !545)
!575 = distinct !{!575, !548, !576}
!576 = !DILocation(line: 264, column: 2, scope: !542)
!577 = !DILocation(line: 266, column: 2, scope: !417)
!578 = !DILocation(line: 266, column: 12, scope: !417)
!579 = !DILocation(line: 267, column: 1, scope: !417)
!580 = distinct !DISubprogram(name: "BKE_mesh_calc_poly_normal", scope: !1, file: !1, line: 777, type: !581, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!581 = !DISubroutineType(types: !582)
!582 = !{null, !107, !117, !124, !555}
!583 = !DILocalVariable(name: "mpoly", arg: 1, scope: !580, file: !1, line: 777, type: !107)
!584 = !DILocation(line: 777, column: 39, scope: !580)
!585 = !DILocalVariable(name: "loopstart", arg: 2, scope: !580, file: !1, line: 777, type: !117)
!586 = !DILocation(line: 777, column: 53, scope: !580)
!587 = !DILocalVariable(name: "mvarray", arg: 3, scope: !580, file: !1, line: 778, type: !124)
!588 = !DILocation(line: 778, column: 39, scope: !580)
!589 = !DILocalVariable(name: "no", arg: 4, scope: !580, file: !1, line: 778, type: !555)
!590 = !DILocation(line: 778, column: 54, scope: !580)
!591 = !DILocation(line: 780, column: 6, scope: !592)
!592 = distinct !DILexicalBlock(scope: !580, file: !1, line: 780, column: 6)
!593 = !DILocation(line: 780, column: 13, scope: !592)
!594 = !DILocation(line: 780, column: 21, scope: !592)
!595 = !DILocation(line: 780, column: 6, scope: !580)
!596 = !DILocation(line: 781, column: 25, scope: !597)
!597 = distinct !DILexicalBlock(scope: !592, file: !1, line: 780, column: 26)
!598 = !DILocation(line: 781, column: 32, scope: !597)
!599 = !DILocation(line: 781, column: 43, scope: !597)
!600 = !DILocation(line: 781, column: 52, scope: !597)
!601 = !DILocation(line: 781, column: 3, scope: !597)
!602 = !DILocation(line: 782, column: 2, scope: !597)
!603 = !DILocation(line: 783, column: 11, scope: !604)
!604 = distinct !DILexicalBlock(scope: !592, file: !1, line: 783, column: 11)
!605 = !DILocation(line: 783, column: 18, scope: !604)
!606 = !DILocation(line: 783, column: 26, scope: !604)
!607 = !DILocation(line: 783, column: 11, scope: !592)
!608 = !DILocation(line: 784, column: 17, scope: !609)
!609 = distinct !DILexicalBlock(scope: !604, file: !1, line: 783, column: 32)
!610 = !DILocation(line: 785, column: 17, scope: !609)
!611 = !DILocation(line: 785, column: 25, scope: !609)
!612 = !DILocation(line: 785, column: 38, scope: !609)
!613 = !DILocation(line: 785, column: 41, scope: !609)
!614 = !DILocation(line: 786, column: 17, scope: !609)
!615 = !DILocation(line: 786, column: 25, scope: !609)
!616 = !DILocation(line: 786, column: 38, scope: !609)
!617 = !DILocation(line: 786, column: 41, scope: !609)
!618 = !DILocation(line: 787, column: 17, scope: !609)
!619 = !DILocation(line: 787, column: 25, scope: !609)
!620 = !DILocation(line: 787, column: 38, scope: !609)
!621 = !DILocation(line: 787, column: 41, scope: !609)
!622 = !DILocation(line: 784, column: 3, scope: !609)
!623 = !DILocation(line: 789, column: 2, scope: !609)
!624 = !DILocation(line: 790, column: 11, scope: !625)
!625 = distinct !DILexicalBlock(scope: !604, file: !1, line: 790, column: 11)
!626 = !DILocation(line: 790, column: 18, scope: !625)
!627 = !DILocation(line: 790, column: 26, scope: !625)
!628 = !DILocation(line: 790, column: 11, scope: !604)
!629 = !DILocation(line: 791, column: 18, scope: !630)
!630 = distinct !DILexicalBlock(scope: !625, file: !1, line: 790, column: 32)
!631 = !DILocation(line: 792, column: 18, scope: !630)
!632 = !DILocation(line: 792, column: 26, scope: !630)
!633 = !DILocation(line: 792, column: 39, scope: !630)
!634 = !DILocation(line: 792, column: 42, scope: !630)
!635 = !DILocation(line: 793, column: 18, scope: !630)
!636 = !DILocation(line: 793, column: 26, scope: !630)
!637 = !DILocation(line: 793, column: 39, scope: !630)
!638 = !DILocation(line: 793, column: 42, scope: !630)
!639 = !DILocation(line: 794, column: 18, scope: !630)
!640 = !DILocation(line: 794, column: 26, scope: !630)
!641 = !DILocation(line: 794, column: 39, scope: !630)
!642 = !DILocation(line: 794, column: 42, scope: !630)
!643 = !DILocation(line: 795, column: 18, scope: !630)
!644 = !DILocation(line: 795, column: 26, scope: !630)
!645 = !DILocation(line: 795, column: 39, scope: !630)
!646 = !DILocation(line: 795, column: 42, scope: !630)
!647 = !DILocation(line: 791, column: 3, scope: !630)
!648 = !DILocation(line: 797, column: 2, scope: !630)
!649 = !DILocation(line: 799, column: 3, scope: !650)
!650 = distinct !DILexicalBlock(scope: !625, file: !1, line: 798, column: 7)
!651 = !DILocation(line: 799, column: 9, scope: !650)
!652 = !DILocation(line: 800, column: 3, scope: !650)
!653 = !DILocation(line: 800, column: 9, scope: !650)
!654 = !DILocation(line: 801, column: 3, scope: !650)
!655 = !DILocation(line: 801, column: 9, scope: !650)
!656 = !DILocation(line: 803, column: 1, scope: !580)
!657 = distinct !DISubprogram(name: "copy_v3_v3", scope: !658, file: !658, line: 64, type: !659, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!658 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!659 = !DISubroutineType(types: !660)
!660 = !{null, !555, !661}
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!662 = !DILocalVariable(name: "r", arg: 1, scope: !657, file: !658, line: 64, type: !555)
!663 = !DILocation(line: 64, column: 31, scope: !657)
!664 = !DILocalVariable(name: "a", arg: 2, scope: !657, file: !658, line: 64, type: !661)
!665 = !DILocation(line: 64, column: 49, scope: !657)
!666 = !DILocation(line: 66, column: 9, scope: !657)
!667 = !DILocation(line: 66, column: 2, scope: !657)
!668 = !DILocation(line: 66, column: 7, scope: !657)
!669 = !DILocation(line: 67, column: 9, scope: !657)
!670 = !DILocation(line: 67, column: 2, scope: !657)
!671 = !DILocation(line: 67, column: 7, scope: !657)
!672 = !DILocation(line: 68, column: 9, scope: !657)
!673 = !DILocation(line: 68, column: 2, scope: !657)
!674 = !DILocation(line: 68, column: 7, scope: !657)
!675 = !DILocation(line: 69, column: 1, scope: !657)
!676 = distinct !DISubprogram(name: "mesh_calc_normals_poly_accum", scope: !1, file: !1, line: 164, type: !677, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!677 = !DISubroutineType(types: !678)
!678 = !{null, !107, !117, !124, !555, !143}
!679 = !DILocalVariable(name: "mp", arg: 1, scope: !676, file: !1, line: 164, type: !107)
!680 = !DILocation(line: 164, column: 49, scope: !676)
!681 = !DILocalVariable(name: "ml", arg: 2, scope: !676, file: !1, line: 164, type: !117)
!682 = !DILocation(line: 164, column: 60, scope: !676)
!683 = !DILocalVariable(name: "mvert", arg: 3, scope: !676, file: !1, line: 165, type: !124)
!684 = !DILocation(line: 165, column: 49, scope: !676)
!685 = !DILocalVariable(name: "polyno", arg: 4, scope: !676, file: !1, line: 165, type: !555)
!686 = !DILocation(line: 165, column: 62, scope: !676)
!687 = !DILocalVariable(name: "tnorms", arg: 5, scope: !676, file: !1, line: 165, type: !143)
!688 = !DILocation(line: 165, column: 81, scope: !676)
!689 = !DILocalVariable(name: "nverts", scope: !676, file: !1, line: 167, type: !169)
!690 = !DILocation(line: 167, column: 12, scope: !676)
!691 = !DILocation(line: 167, column: 21, scope: !676)
!692 = !DILocation(line: 167, column: 25, scope: !676)
!693 = !DILocalVariable(name: "edgevecbuf", scope: !676, file: !1, line: 168, type: !143)
!694 = !DILocation(line: 168, column: 10, scope: !676)
!695 = !DILocation(line: 168, column: 27, scope: !676)
!696 = !DILocalVariable(name: "i", scope: !676, file: !1, line: 169, type: !93)
!697 = !DILocation(line: 169, column: 6, scope: !676)
!698 = !DILocalVariable(name: "i_prev", scope: !699, file: !1, line: 174, type: !93)
!699 = distinct !DILexicalBlock(scope: !676, file: !1, line: 173, column: 2)
!700 = !DILocation(line: 174, column: 7, scope: !699)
!701 = !DILocation(line: 174, column: 16, scope: !699)
!702 = !DILocation(line: 174, column: 23, scope: !699)
!703 = !DILocalVariable(name: "v_prev", scope: !699, file: !1, line: 175, type: !661)
!704 = !DILocation(line: 175, column: 16, scope: !699)
!705 = !DILocation(line: 175, column: 25, scope: !699)
!706 = !DILocation(line: 175, column: 31, scope: !699)
!707 = !DILocation(line: 175, column: 34, scope: !699)
!708 = !DILocation(line: 175, column: 42, scope: !699)
!709 = !DILocation(line: 175, column: 45, scope: !699)
!710 = !DILocalVariable(name: "v_curr", scope: !699, file: !1, line: 176, type: !661)
!711 = !DILocation(line: 176, column: 16, scope: !699)
!712 = !DILocation(line: 178, column: 11, scope: !699)
!713 = !DILocation(line: 178, column: 3, scope: !699)
!714 = !DILocation(line: 180, column: 10, scope: !715)
!715 = distinct !DILexicalBlock(scope: !699, file: !1, line: 180, column: 3)
!716 = !DILocation(line: 180, column: 8, scope: !715)
!717 = !DILocation(line: 180, column: 15, scope: !718)
!718 = distinct !DILexicalBlock(scope: !715, file: !1, line: 180, column: 3)
!719 = !DILocation(line: 180, column: 19, scope: !718)
!720 = !DILocation(line: 180, column: 17, scope: !718)
!721 = !DILocation(line: 180, column: 3, scope: !715)
!722 = !DILocation(line: 181, column: 13, scope: !723)
!723 = distinct !DILexicalBlock(scope: !718, file: !1, line: 180, column: 32)
!724 = !DILocation(line: 181, column: 19, scope: !723)
!725 = !DILocation(line: 181, column: 22, scope: !723)
!726 = !DILocation(line: 181, column: 25, scope: !723)
!727 = !DILocation(line: 181, column: 28, scope: !723)
!728 = !DILocation(line: 181, column: 11, scope: !723)
!729 = !DILocation(line: 182, column: 29, scope: !723)
!730 = !DILocation(line: 182, column: 37, scope: !723)
!731 = !DILocation(line: 182, column: 45, scope: !723)
!732 = !DILocation(line: 182, column: 4, scope: !723)
!733 = !DILocation(line: 185, column: 16, scope: !723)
!734 = !DILocation(line: 185, column: 27, scope: !723)
!735 = !DILocation(line: 185, column: 36, scope: !723)
!736 = !DILocation(line: 185, column: 44, scope: !723)
!737 = !DILocation(line: 185, column: 4, scope: !723)
!738 = !DILocation(line: 186, column: 17, scope: !723)
!739 = !DILocation(line: 186, column: 28, scope: !723)
!740 = !DILocation(line: 186, column: 4, scope: !723)
!741 = !DILocation(line: 187, column: 13, scope: !723)
!742 = !DILocation(line: 187, column: 11, scope: !723)
!743 = !DILocation(line: 189, column: 13, scope: !723)
!744 = !DILocation(line: 189, column: 11, scope: !723)
!745 = !DILocation(line: 190, column: 3, scope: !723)
!746 = !DILocation(line: 180, column: 28, scope: !718)
!747 = !DILocation(line: 180, column: 3, scope: !718)
!748 = distinct !{!748, !721, !749}
!749 = !DILocation(line: 190, column: 3, scope: !715)
!750 = !DILocation(line: 191, column: 7, scope: !751)
!751 = distinct !DILexicalBlock(scope: !699, file: !1, line: 191, column: 7)
!752 = !DILocation(line: 191, column: 7, scope: !699)
!753 = !DILocation(line: 192, column: 4, scope: !754)
!754 = distinct !DILexicalBlock(scope: !751, file: !1, line: 191, column: 47)
!755 = !DILocation(line: 192, column: 14, scope: !754)
!756 = !DILocation(line: 193, column: 3, scope: !754)
!757 = !DILocalVariable(name: "prev_edge", scope: !758, file: !1, line: 199, type: !661)
!758 = distinct !DILexicalBlock(scope: !676, file: !1, line: 198, column: 2)
!759 = !DILocation(line: 199, column: 16, scope: !758)
!760 = !DILocation(line: 199, column: 28, scope: !758)
!761 = !DILocation(line: 199, column: 39, scope: !758)
!762 = !DILocation(line: 199, column: 46, scope: !758)
!763 = !DILocation(line: 201, column: 10, scope: !764)
!764 = distinct !DILexicalBlock(scope: !758, file: !1, line: 201, column: 3)
!765 = !DILocation(line: 201, column: 8, scope: !764)
!766 = !DILocation(line: 201, column: 15, scope: !767)
!767 = distinct !DILexicalBlock(scope: !764, file: !1, line: 201, column: 3)
!768 = !DILocation(line: 201, column: 19, scope: !767)
!769 = !DILocation(line: 201, column: 17, scope: !767)
!770 = !DILocation(line: 201, column: 3, scope: !764)
!771 = !DILocalVariable(name: "cur_edge", scope: !772, file: !1, line: 202, type: !661)
!772 = distinct !DILexicalBlock(scope: !767, file: !1, line: 201, column: 32)
!773 = !DILocation(line: 202, column: 17, scope: !772)
!774 = !DILocation(line: 202, column: 28, scope: !772)
!775 = !DILocation(line: 202, column: 39, scope: !772)
!776 = !DILocalVariable(name: "fac", scope: !772, file: !1, line: 206, type: !87)
!777 = !DILocation(line: 206, column: 16, scope: !772)
!778 = !DILocation(line: 206, column: 39, scope: !772)
!779 = !DILocation(line: 206, column: 49, scope: !772)
!780 = !DILocation(line: 206, column: 30, scope: !772)
!781 = !DILocation(line: 206, column: 29, scope: !772)
!782 = !DILocation(line: 206, column: 22, scope: !772)
!783 = !DILocation(line: 209, column: 17, scope: !772)
!784 = !DILocation(line: 209, column: 24, scope: !772)
!785 = !DILocation(line: 209, column: 27, scope: !772)
!786 = !DILocation(line: 209, column: 30, scope: !772)
!787 = !DILocation(line: 209, column: 34, scope: !772)
!788 = !DILocation(line: 209, column: 42, scope: !772)
!789 = !DILocation(line: 209, column: 4, scope: !772)
!790 = !DILocation(line: 210, column: 16, scope: !772)
!791 = !DILocation(line: 210, column: 14, scope: !772)
!792 = !DILocation(line: 211, column: 3, scope: !772)
!793 = !DILocation(line: 201, column: 28, scope: !767)
!794 = !DILocation(line: 201, column: 3, scope: !767)
!795 = distinct !{!795, !770, !796}
!796 = !DILocation(line: 211, column: 3, scope: !764)
!797 = !DILocation(line: 214, column: 1, scope: !676)
!798 = distinct !DISubprogram(name: "normalize_v3", scope: !658, file: !658, line: 830, type: !799, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!799 = !DISubroutineType(types: !800)
!800 = !{!84, !555}
!801 = !DILocalVariable(name: "n", arg: 1, scope: !798, file: !658, line: 830, type: !555)
!802 = !DILocation(line: 830, column: 34, scope: !798)
!803 = !DILocation(line: 832, column: 25, scope: !798)
!804 = !DILocation(line: 832, column: 28, scope: !798)
!805 = !DILocation(line: 832, column: 9, scope: !798)
!806 = !DILocation(line: 832, column: 2, scope: !798)
!807 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !658, file: !658, line: 788, type: !808, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!808 = !DISubroutineType(types: !809)
!809 = !{!84, !555, !661}
!810 = !DILocalVariable(name: "r", arg: 1, scope: !807, file: !658, line: 788, type: !555)
!811 = !DILocation(line: 788, column: 37, scope: !807)
!812 = !DILocalVariable(name: "a", arg: 2, scope: !807, file: !658, line: 788, type: !661)
!813 = !DILocation(line: 788, column: 55, scope: !807)
!814 = !DILocalVariable(name: "d", scope: !807, file: !658, line: 790, type: !84)
!815 = !DILocation(line: 790, column: 8, scope: !807)
!816 = !DILocation(line: 790, column: 21, scope: !807)
!817 = !DILocation(line: 790, column: 24, scope: !807)
!818 = !DILocation(line: 790, column: 12, scope: !807)
!819 = !DILocation(line: 794, column: 6, scope: !820)
!820 = distinct !DILexicalBlock(scope: !807, file: !658, line: 794, column: 6)
!821 = !DILocation(line: 794, column: 8, scope: !820)
!822 = !DILocation(line: 794, column: 6, scope: !807)
!823 = !DILocation(line: 795, column: 13, scope: !824)
!824 = distinct !DILexicalBlock(scope: !820, file: !658, line: 794, column: 20)
!825 = !DILocation(line: 795, column: 7, scope: !824)
!826 = !DILocation(line: 795, column: 5, scope: !824)
!827 = !DILocation(line: 796, column: 15, scope: !824)
!828 = !DILocation(line: 796, column: 18, scope: !824)
!829 = !DILocation(line: 796, column: 28, scope: !824)
!830 = !DILocation(line: 796, column: 26, scope: !824)
!831 = !DILocation(line: 796, column: 3, scope: !824)
!832 = !DILocation(line: 797, column: 2, scope: !824)
!833 = !DILocation(line: 799, column: 11, scope: !834)
!834 = distinct !DILexicalBlock(scope: !820, file: !658, line: 798, column: 7)
!835 = !DILocation(line: 799, column: 3, scope: !834)
!836 = !DILocation(line: 800, column: 5, scope: !834)
!837 = !DILocation(line: 803, column: 9, scope: !807)
!838 = !DILocation(line: 803, column: 2, scope: !807)
!839 = distinct !DISubprogram(name: "normal_float_to_short_v3", scope: !658, file: !658, line: 842, type: !840, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!840 = !DISubroutineType(types: !841)
!841 = !{null, !842, !661}
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!843 = !DILocalVariable(name: "out", arg: 1, scope: !839, file: !658, line: 842, type: !842)
!844 = !DILocation(line: 842, column: 45, scope: !839)
!845 = !DILocalVariable(name: "in", arg: 2, scope: !839, file: !658, line: 842, type: !661)
!846 = !DILocation(line: 842, column: 65, scope: !839)
!847 = !DILocation(line: 844, column: 20, scope: !839)
!848 = !DILocation(line: 844, column: 26, scope: !839)
!849 = !DILocation(line: 844, column: 11, scope: !839)
!850 = !DILocation(line: 844, column: 2, scope: !839)
!851 = !DILocation(line: 844, column: 9, scope: !839)
!852 = !DILocation(line: 845, column: 20, scope: !839)
!853 = !DILocation(line: 845, column: 26, scope: !839)
!854 = !DILocation(line: 845, column: 11, scope: !839)
!855 = !DILocation(line: 845, column: 2, scope: !839)
!856 = !DILocation(line: 845, column: 9, scope: !839)
!857 = !DILocation(line: 846, column: 20, scope: !839)
!858 = !DILocation(line: 846, column: 26, scope: !839)
!859 = !DILocation(line: 846, column: 11, scope: !839)
!860 = !DILocation(line: 846, column: 2, scope: !839)
!861 = !DILocation(line: 846, column: 9, scope: !839)
!862 = !DILocation(line: 847, column: 1, scope: !839)
!863 = distinct !DISubprogram(name: "BKE_mesh_calc_normals", scope: !1, file: !1, line: 269, type: !864, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!864 = !DISubroutineType(types: !865)
!865 = !{null, !866}
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !868, line: 133, baseType: !869)
!868 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !868, line: 58, size: 11008, elements: !870)
!870 = !{!871, !939, !943, !954, !957, !960, !964, !970, !972, !1063, !1065, !1067, !1075, !1077, !1090, !1103, !1105, !1114, !1126, !1134, !1136, !1139, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !869, file: !868, line: 59, baseType: !872, size: 960)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !873, line: 130, baseType: !874)
!873 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !873, line: 117, size: 960, elements: !875)
!875 = !{!876, !877, !878, !880, !899, !903, !904, !905, !906, !907}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !874, file: !873, line: 118, baseType: !80, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !874, file: !873, line: 118, baseType: !80, size: 64, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !874, file: !873, line: 119, baseType: !879, size: 64, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !874, file: !873, line: 120, baseType: !881, size: 64, offset: 192)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !873, line: 136, size: 17600, elements: !883)
!883 = !{!884, !885, !887, !890, !894, !895, !896}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !882, file: !873, line: 137, baseType: !872, size: 960)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !882, file: !873, line: 138, baseType: !886, size: 64, offset: 960)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !882, file: !873, line: 139, baseType: !888, size: 64, offset: 1024)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !873, line: 43, flags: DIFlagFwdDecl)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !882, file: !873, line: 140, baseType: !891, size: 8192, offset: 1088)
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 8192, elements: !892)
!892 = !{!893}
!893 = !DISubrange(count: 1024)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !882, file: !873, line: 141, baseType: !891, size: 8192, offset: 9280)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !882, file: !873, line: 148, baseType: !881, size: 64, offset: 17472)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !882, file: !873, line: 150, baseType: !897, size: 64, offset: 17536)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !873, line: 45, flags: DIFlagFwdDecl)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !874, file: !873, line: 121, baseType: !900, size: 528, offset: 256)
!900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 528, elements: !901)
!901 = !{!902}
!902 = !DISubrange(count: 66)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !874, file: !873, line: 126, baseType: !101, size: 16, offset: 784)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !874, file: !873, line: 127, baseType: !93, size: 32, offset: 800)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !874, file: !873, line: 128, baseType: !93, size: 32, offset: 832)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !874, file: !873, line: 128, baseType: !93, size: 32, offset: 864)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !874, file: !873, line: 129, baseType: !908, size: 64, offset: 896)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !873, line: 75, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !873, line: 62, size: 1024, elements: !911)
!911 = !{!912, !914, !915, !916, !917, !918, !922, !923, !937, !938}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !910, file: !873, line: 63, baseType: !913, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !910, file: !873, line: 63, baseType: !913, size: 64, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !910, file: !873, line: 64, baseType: !98, size: 8, offset: 128)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !910, file: !873, line: 64, baseType: !98, size: 8, offset: 136)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !910, file: !873, line: 65, baseType: !101, size: 16, offset: 144)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !910, file: !873, line: 66, baseType: !919, size: 512, offset: 160)
!919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 512, elements: !920)
!920 = !{!921}
!921 = !DISubrange(count: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !910, file: !873, line: 67, baseType: !93, size: 32, offset: 672)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !910, file: !873, line: 69, baseType: !924, size: 256, offset: 704)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !873, line: 60, baseType: !925)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !873, line: 48, size: 256, elements: !926)
!926 = !{!927, !928, !935, !936}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !925, file: !873, line: 49, baseType: !80, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !925, file: !873, line: 58, baseType: !929, size: 128, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !930, line: 71, baseType: !931)
!930 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !930, line: 69, size: 128, elements: !932)
!932 = !{!933, !934}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !931, file: !930, line: 70, baseType: !80, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !931, file: !930, line: 70, baseType: !80, size: 64, offset: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !925, file: !873, line: 59, baseType: !93, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !925, file: !873, line: 59, baseType: !93, size: 32, offset: 224)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !910, file: !873, line: 70, baseType: !93, size: 32, offset: 960)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !910, file: !873, line: 74, baseType: !93, size: 32, offset: 992)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !869, file: !868, line: 60, baseType: !940, size: 64, offset: 960)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !942, line: 45, flags: DIFlagFwdDecl)
!942 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!943 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !869, file: !868, line: 62, baseType: !944, size: 64, offset: 1024)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !946, line: 97, size: 832, elements: !947)
!946 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!947 = !{!948, !952, !953}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !945, file: !946, line: 98, baseType: !949, size: 768)
!949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 768, elements: !950)
!950 = !{!951, !89}
!951 = !DISubrange(count: 8)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !945, file: !946, line: 99, baseType: !93, size: 32, offset: 768)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !945, file: !946, line: 99, baseType: !93, size: 32, offset: 800)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !869, file: !868, line: 64, baseType: !955, size: 64, offset: 1088)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !942, line: 46, flags: DIFlagFwdDecl)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !869, file: !868, line: 65, baseType: !958, size: 64, offset: 1152)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !868, line: 42, flags: DIFlagFwdDecl)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !869, file: !868, line: 66, baseType: !961, size: 64, offset: 1216)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !946, line: 50, flags: DIFlagFwdDecl)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !869, file: !868, line: 67, baseType: !965, size: 64, offset: 1280)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !4, line: 154, size: 64, elements: !967)
!967 = !{!968, !969}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !966, file: !4, line: 155, baseType: !93, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !966, file: !4, line: 156, baseType: !93, size: 32, offset: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !869, file: !868, line: 71, baseType: !971, size: 64, offset: 1344)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !869, file: !868, line: 72, baseType: !973, size: 64, offset: 1408)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !4, line: 93, size: 128, elements: !975)
!975 = !{!976, !1058, !1059, !1060, !1061, !1062}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !974, file: !4, line: 94, baseType: !977, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !979, line: 77, size: 15424, elements: !980)
!979 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!980 = !{!981, !982, !983, !986, !989, !992, !995, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1014, !1015, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1047, !1048, !1052}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !978, file: !979, line: 78, baseType: !872, size: 960)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !978, file: !979, line: 80, baseType: !891, size: 8192, offset: 960)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !978, file: !979, line: 82, baseType: !984, size: 64, offset: 9152)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !979, line: 43, flags: DIFlagFwdDecl)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !978, file: !979, line: 83, baseType: !987, size: 64, offset: 9216)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !873, line: 46, flags: DIFlagFwdDecl)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !978, file: !979, line: 86, baseType: !990, size: 64, offset: 9280)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !979, line: 41, flags: DIFlagFwdDecl)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !978, file: !979, line: 87, baseType: !993, size: 64, offset: 9344)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !979, line: 44, flags: DIFlagFwdDecl)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !978, file: !979, line: 89, baseType: !996, size: 512, offset: 9408)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !993, size: 512, elements: !997)
!997 = !{!951}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !978, file: !979, line: 90, baseType: !101, size: 16, offset: 9920)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !978, file: !979, line: 90, baseType: !101, size: 16, offset: 9936)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !978, file: !979, line: 92, baseType: !101, size: 16, offset: 9952)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !978, file: !979, line: 92, baseType: !101, size: 16, offset: 9968)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !978, file: !979, line: 93, baseType: !101, size: 16, offset: 9984)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !978, file: !979, line: 93, baseType: !101, size: 16, offset: 10000)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !978, file: !979, line: 94, baseType: !93, size: 32, offset: 10016)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !978, file: !979, line: 97, baseType: !101, size: 16, offset: 10048)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !978, file: !979, line: 97, baseType: !101, size: 16, offset: 10064)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !978, file: !979, line: 98, baseType: !101, size: 16, offset: 10080)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !978, file: !979, line: 98, baseType: !101, size: 16, offset: 10096)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !978, file: !979, line: 99, baseType: !101, size: 16, offset: 10112)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !978, file: !979, line: 99, baseType: !101, size: 16, offset: 10128)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !978, file: !979, line: 100, baseType: !5, size: 32, offset: 10144)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !978, file: !979, line: 101, baseType: !1013, size: 64, offset: 10176)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !978, file: !979, line: 103, baseType: !897, size: 64, offset: 10240)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !978, file: !979, line: 104, baseType: !1016, size: 64, offset: 10304)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !873, line: 159, size: 448, elements: !1018)
!1018 = !{!1019, !1021, !1022, !1024, !1025, !1027}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1017, file: !873, line: 161, baseType: !1020, size: 64)
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !96)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1017, file: !873, line: 162, baseType: !1020, size: 64, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1017, file: !873, line: 163, baseType: !1023, size: 32, offset: 128)
!1023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 32, elements: !96)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1017, file: !873, line: 164, baseType: !1023, size: 32, offset: 160)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1017, file: !873, line: 165, baseType: !1026, size: 128, offset: 192)
!1026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1013, size: 128, elements: !96)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1017, file: !873, line: 166, baseType: !1028, size: 128, offset: 320)
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 128, elements: !96)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !978, file: !979, line: 107, baseType: !84, size: 32, offset: 10368)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !978, file: !979, line: 108, baseType: !93, size: 32, offset: 10400)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !978, file: !979, line: 109, baseType: !101, size: 16, offset: 10432)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !978, file: !979, line: 110, baseType: !101, size: 16, offset: 10448)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !978, file: !979, line: 113, baseType: !93, size: 32, offset: 10464)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !978, file: !979, line: 113, baseType: !93, size: 32, offset: 10496)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !978, file: !979, line: 114, baseType: !98, size: 8, offset: 10528)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !978, file: !979, line: 114, baseType: !98, size: 8, offset: 10536)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !978, file: !979, line: 115, baseType: !101, size: 16, offset: 10544)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !978, file: !979, line: 116, baseType: !146, size: 128, offset: 10560)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !978, file: !979, line: 119, baseType: !84, size: 32, offset: 10688)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !978, file: !979, line: 119, baseType: !84, size: 32, offset: 10720)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !978, file: !979, line: 122, baseType: !1042, size: 512, offset: 10752)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1043, line: 182, baseType: !1044)
!1043 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1043, line: 180, size: 512, elements: !1045)
!1045 = !{!1046}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1044, file: !1043, line: 181, baseType: !919, size: 512)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !978, file: !979, line: 123, baseType: !98, size: 8, offset: 11264)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !978, file: !979, line: 125, baseType: !1049, size: 56, offset: 11272)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 56, elements: !1050)
!1050 = !{!1051}
!1051 = !DISubrange(count: 7)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !978, file: !979, line: 126, baseType: !1053, size: 4096, offset: 11328)
!1053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1054, size: 4096, elements: !997)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !979, line: 69, baseType: !1055)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !979, line: 67, size: 512, elements: !1056)
!1056 = !{!1057}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1055, file: !979, line: 68, baseType: !919, size: 512)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !974, file: !4, line: 95, baseType: !98, size: 8, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !974, file: !4, line: 95, baseType: !98, size: 8, offset: 72)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !974, file: !4, line: 96, baseType: !101, size: 16, offset: 80)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !974, file: !4, line: 96, baseType: !101, size: 16, offset: 96)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !974, file: !4, line: 96, baseType: !101, size: 16, offset: 112)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !869, file: !868, line: 73, baseType: !1064, size: 64, offset: 1472)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !869, file: !868, line: 74, baseType: !1066, size: 64, offset: 1536)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !869, file: !868, line: 75, baseType: !1068, size: 64, offset: 1600)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !4, line: 129, size: 32, elements: !1070)
!1070 = !{!1071, !1072, !1073, !1074}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1069, file: !4, line: 130, baseType: !98, size: 8)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1069, file: !4, line: 130, baseType: !98, size: 8, offset: 8)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1069, file: !4, line: 130, baseType: !98, size: 8, offset: 16)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1069, file: !4, line: 130, baseType: !98, size: 8, offset: 24)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !869, file: !868, line: 80, baseType: !1076, size: 64, offset: 1664)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !869, file: !868, line: 81, baseType: !1078, size: 64, offset: 1728)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !4, line: 160, size: 384, elements: !1080)
!1080 = !{!1081, !1084, !1085, !1086, !1087, !1088, !1089}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1079, file: !4, line: 161, baseType: !1082, size: 256)
!1082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 256, elements: !1083)
!1083 = !{!148, !97}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1079, file: !4, line: 162, baseType: !977, size: 64, offset: 256)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1079, file: !4, line: 163, baseType: !98, size: 8, offset: 320)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1079, file: !4, line: 163, baseType: !98, size: 8, offset: 328)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1079, file: !4, line: 164, baseType: !101, size: 16, offset: 336)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1079, file: !4, line: 164, baseType: !101, size: 16, offset: 352)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1079, file: !4, line: 164, baseType: !101, size: 16, offset: 368)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !869, file: !868, line: 82, baseType: !1091, size: 64, offset: 1792)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !868, line: 136, size: 512, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1098, !1099, !1100, !1101, !1102}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1092, file: !868, line: 137, baseType: !80, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1092, file: !868, line: 138, baseType: !1082, size: 256, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1092, file: !868, line: 139, baseType: !1097, size: 128, offset: 320)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 128, elements: !147)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1092, file: !868, line: 140, baseType: !98, size: 8, offset: 448)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1092, file: !868, line: 140, baseType: !98, size: 8, offset: 456)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1092, file: !868, line: 141, baseType: !101, size: 16, offset: 464)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1092, file: !868, line: 141, baseType: !101, size: 16, offset: 480)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1092, file: !868, line: 141, baseType: !101, size: 16, offset: 496)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !869, file: !868, line: 83, baseType: !1104, size: 64, offset: 1856)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !869, file: !868, line: 84, baseType: !1106, size: 64, offset: 1920)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !4, line: 48, size: 96, elements: !1108)
!1108 = !{!1109, !1110, !1111, !1112, !1113}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1107, file: !4, line: 49, baseType: !5, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1107, file: !4, line: 49, baseType: !5, size: 32, offset: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !1107, file: !4, line: 50, baseType: !98, size: 8, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1107, file: !4, line: 50, baseType: !98, size: 8, offset: 72)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1107, file: !4, line: 51, baseType: !101, size: 16, offset: 80)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !869, file: !868, line: 85, baseType: !1115, size: 64, offset: 1984)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !4, line: 59, size: 128, elements: !1117)
!1117 = !{!1118, !1124, !1125}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1116, file: !4, line: 60, baseType: !1119, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !4, line: 54, size: 64, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1120, file: !4, line: 55, baseType: !93, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1120, file: !4, line: 56, baseType: !84, size: 32, offset: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1116, file: !4, line: 61, baseType: !93, size: 32, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1116, file: !4, line: 62, baseType: !93, size: 32, offset: 96)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !869, file: !868, line: 89, baseType: !1127, size: 64, offset: 2048)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !4, line: 74, size: 32, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1133}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1128, file: !4, line: 75, baseType: !98, size: 8)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1128, file: !4, line: 75, baseType: !98, size: 8, offset: 8)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1128, file: !4, line: 75, baseType: !98, size: 8, offset: 16)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1128, file: !4, line: 75, baseType: !98, size: 8, offset: 24)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !869, file: !868, line: 90, baseType: !1135, size: 64, offset: 2112)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !869, file: !868, line: 93, baseType: !1137, size: 64, offset: 2176)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !868, line: 93, flags: DIFlagFwdDecl)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !869, file: !868, line: 95, baseType: !1140, size: 1600, offset: 2240)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !30, line: 64, size: 1600, elements: !1141)
!1141 = !{!1142, !1157, !1161, !1162, !1163, !1164, !1167}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1140, file: !30, line: 65, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !30, line: 53, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !30, line: 42, size: 832, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1145, file: !30, line: 43, baseType: !93, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1145, file: !30, line: 44, baseType: !93, size: 32, offset: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1145, file: !30, line: 45, baseType: !93, size: 32, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1145, file: !30, line: 46, baseType: !93, size: 32, offset: 96)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !1145, file: !30, line: 47, baseType: !93, size: 32, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !1145, file: !30, line: 48, baseType: !93, size: 32, offset: 160)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !1145, file: !30, line: 49, baseType: !93, size: 32, offset: 192)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1145, file: !30, line: 50, baseType: !93, size: 32, offset: 224)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1145, file: !30, line: 51, baseType: !919, size: 512, offset: 256)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1145, file: !30, line: 52, baseType: !80, size: 64, offset: 768)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !1140, file: !30, line: 66, baseType: !1158, size: 1312, offset: 64)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 1312, elements: !1159)
!1159 = !{!1160}
!1160 = !DISubrange(count: 41)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !1140, file: !30, line: 69, baseType: !93, size: 32, offset: 1376)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !1140, file: !30, line: 69, baseType: !93, size: 32, offset: 1408)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !1140, file: !30, line: 70, baseType: !93, size: 32, offset: 1440)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1140, file: !30, line: 71, baseType: !1165, size: 64, offset: 1472)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !30, line: 71, flags: DIFlagFwdDecl)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1140, file: !30, line: 72, baseType: !1168, size: 64, offset: 1536)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !30, line: 59, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !30, line: 57, size: 8192, elements: !1171)
!1171 = !{!1172}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1170, file: !30, line: 58, baseType: !891, size: 8192)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !869, file: !868, line: 95, baseType: !1140, size: 1600, offset: 3840)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !869, file: !868, line: 95, baseType: !1140, size: 1600, offset: 5440)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !869, file: !868, line: 98, baseType: !1140, size: 1600, offset: 7040)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !869, file: !868, line: 98, baseType: !1140, size: 1600, offset: 8640)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !869, file: !868, line: 101, baseType: !93, size: 32, offset: 10240)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !869, file: !868, line: 101, baseType: !93, size: 32, offset: 10272)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !869, file: !868, line: 101, baseType: !93, size: 32, offset: 10304)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !869, file: !868, line: 101, baseType: !93, size: 32, offset: 10336)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !869, file: !868, line: 104, baseType: !93, size: 32, offset: 10368)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !869, file: !868, line: 104, baseType: !93, size: 32, offset: 10400)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !869, file: !868, line: 111, baseType: !93, size: 32, offset: 10432)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !869, file: !868, line: 114, baseType: !129, size: 96, offset: 10464)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !869, file: !868, line: 115, baseType: !129, size: 96, offset: 10560)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !869, file: !868, line: 116, baseType: !129, size: 96, offset: 10656)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !869, file: !868, line: 118, baseType: !93, size: 32, offset: 10752)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !869, file: !868, line: 119, baseType: !101, size: 16, offset: 10784)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !869, file: !868, line: 119, baseType: !101, size: 16, offset: 10800)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !869, file: !868, line: 120, baseType: !84, size: 32, offset: 10816)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !869, file: !868, line: 121, baseType: !93, size: 32, offset: 10848)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !869, file: !868, line: 124, baseType: !98, size: 8, offset: 10880)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !869, file: !868, line: 124, baseType: !98, size: 8, offset: 10888)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !869, file: !868, line: 126, baseType: !98, size: 8, offset: 10896)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !869, file: !868, line: 126, baseType: !98, size: 8, offset: 10904)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !869, file: !868, line: 127, baseType: !98, size: 8, offset: 10912)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !869, file: !868, line: 128, baseType: !98, size: 8, offset: 10920)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !869, file: !868, line: 130, baseType: !101, size: 16, offset: 10928)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !869, file: !868, line: 132, baseType: !1200, size: 64, offset: 10944)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !4, line: 233, size: 3584, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1215, !1216, !1217}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !1201, file: !4, line: 234, baseType: !929, size: 128)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !1201, file: !4, line: 235, baseType: !124, size: 64, offset: 128)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !1201, file: !4, line: 237, baseType: !210, size: 8, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1201, file: !4, line: 237, baseType: !210, size: 8, offset: 200)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !1201, file: !4, line: 237, baseType: !210, size: 8, offset: 208)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !1201, file: !4, line: 237, baseType: !210, size: 8, offset: 216)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !1201, file: !4, line: 237, baseType: !210, size: 8, offset: 224)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !1201, file: !4, line: 237, baseType: !210, size: 8, offset: 232)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !1201, file: !4, line: 238, baseType: !210, size: 8, offset: 240)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1201, file: !4, line: 238, baseType: !210, size: 8, offset: 248)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1201, file: !4, line: 241, baseType: !1214, size: 1600, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !30, line: 73, baseType: !1140)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !1201, file: !4, line: 242, baseType: !1214, size: 1600, offset: 1856)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !1201, file: !4, line: 243, baseType: !842, size: 64, offset: 3456)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !1201, file: !4, line: 244, baseType: !1218, size: 64, offset: 3520)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!1219 = !DILocalVariable(name: "mesh", arg: 1, scope: !863, file: !1, line: 269, type: !866)
!1220 = !DILocation(line: 269, column: 34, scope: !863)
!1221 = !DILocation(line: 274, column: 29, scope: !863)
!1222 = !DILocation(line: 274, column: 35, scope: !863)
!1223 = !DILocation(line: 274, column: 42, scope: !863)
!1224 = !DILocation(line: 274, column: 48, scope: !863)
!1225 = !DILocation(line: 275, column: 29, scope: !863)
!1226 = !DILocation(line: 275, column: 35, scope: !863)
!1227 = !DILocation(line: 275, column: 42, scope: !863)
!1228 = !DILocation(line: 275, column: 48, scope: !863)
!1229 = !DILocation(line: 275, column: 55, scope: !863)
!1230 = !DILocation(line: 275, column: 61, scope: !863)
!1231 = !DILocation(line: 275, column: 70, scope: !863)
!1232 = !DILocation(line: 275, column: 76, scope: !863)
!1233 = !DILocation(line: 274, column: 2, scope: !863)
!1234 = !DILocation(line: 280, column: 1, scope: !863)
!1235 = distinct !DISubprogram(name: "BKE_mesh_calc_normals_tessface", scope: !1, file: !1, line: 282, type: !1236, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !124, !93, !157, !93, !143}
!1238 = !DILocalVariable(name: "mverts", arg: 1, scope: !1235, file: !1, line: 282, type: !124)
!1239 = !DILocation(line: 282, column: 44, scope: !1235)
!1240 = !DILocalVariable(name: "numVerts", arg: 2, scope: !1235, file: !1, line: 282, type: !93)
!1241 = !DILocation(line: 282, column: 56, scope: !1235)
!1242 = !DILocalVariable(name: "mfaces", arg: 3, scope: !1235, file: !1, line: 282, type: !157)
!1243 = !DILocation(line: 282, column: 73, scope: !1235)
!1244 = !DILocalVariable(name: "numFaces", arg: 4, scope: !1235, file: !1, line: 282, type: !93)
!1245 = !DILocation(line: 282, column: 85, scope: !1235)
!1246 = !DILocalVariable(name: "r_faceNors", arg: 5, scope: !1235, file: !1, line: 282, type: !143)
!1247 = !DILocation(line: 282, column: 103, scope: !1235)
!1248 = !DILocalVariable(name: "tnorms", scope: !1235, file: !1, line: 284, type: !143)
!1249 = !DILocation(line: 284, column: 10, scope: !1235)
!1250 = !DILocation(line: 284, column: 23, scope: !1235)
!1251 = !DILocation(line: 284, column: 61, scope: !1235)
!1252 = !DILocation(line: 284, column: 53, scope: !1235)
!1253 = !DILocation(line: 284, column: 51, scope: !1235)
!1254 = !DILocalVariable(name: "fnors", scope: !1235, file: !1, line: 285, type: !143)
!1255 = !DILocation(line: 285, column: 10, scope: !1235)
!1256 = !DILocation(line: 285, column: 23, scope: !1235)
!1257 = !DILocation(line: 285, column: 22, scope: !1235)
!1258 = !DILocation(line: 285, column: 37, scope: !1235)
!1259 = !DILocation(line: 285, column: 50, scope: !1235)
!1260 = !DILocation(line: 285, column: 87, scope: !1235)
!1261 = !DILocation(line: 285, column: 79, scope: !1235)
!1262 = !DILocation(line: 285, column: 77, scope: !1235)
!1263 = !DILocalVariable(name: "i", scope: !1235, file: !1, line: 286, type: !93)
!1264 = !DILocation(line: 286, column: 6, scope: !1235)
!1265 = !DILocation(line: 288, column: 9, scope: !1266)
!1266 = distinct !DILexicalBlock(scope: !1235, file: !1, line: 288, column: 2)
!1267 = !DILocation(line: 288, column: 7, scope: !1266)
!1268 = !DILocation(line: 288, column: 14, scope: !1269)
!1269 = distinct !DILexicalBlock(scope: !1266, file: !1, line: 288, column: 2)
!1270 = !DILocation(line: 288, column: 18, scope: !1269)
!1271 = !DILocation(line: 288, column: 16, scope: !1269)
!1272 = !DILocation(line: 288, column: 2, scope: !1266)
!1273 = !DILocalVariable(name: "mf", scope: !1274, file: !1, line: 289, type: !157)
!1274 = distinct !DILexicalBlock(scope: !1269, file: !1, line: 288, column: 33)
!1275 = !DILocation(line: 289, column: 10, scope: !1274)
!1276 = !DILocation(line: 289, column: 16, scope: !1274)
!1277 = !DILocation(line: 289, column: 23, scope: !1274)
!1278 = !DILocalVariable(name: "f_no", scope: !1274, file: !1, line: 290, type: !555)
!1279 = !DILocation(line: 290, column: 10, scope: !1274)
!1280 = !DILocation(line: 290, column: 17, scope: !1274)
!1281 = !DILocation(line: 290, column: 23, scope: !1274)
!1282 = !DILocalVariable(name: "n4", scope: !1274, file: !1, line: 291, type: !555)
!1283 = !DILocation(line: 291, column: 10, scope: !1274)
!1284 = !DILocation(line: 291, column: 16, scope: !1274)
!1285 = !DILocation(line: 291, column: 20, scope: !1274)
!1286 = !DILocation(line: 291, column: 15, scope: !1274)
!1287 = !DILocation(line: 291, column: 26, scope: !1274)
!1288 = !DILocation(line: 291, column: 33, scope: !1274)
!1289 = !DILocation(line: 291, column: 37, scope: !1274)
!1290 = !DILocalVariable(name: "c4", scope: !1274, file: !1, line: 292, type: !661)
!1291 = !DILocation(line: 292, column: 16, scope: !1274)
!1292 = !DILocation(line: 292, column: 22, scope: !1274)
!1293 = !DILocation(line: 292, column: 26, scope: !1274)
!1294 = !DILocation(line: 292, column: 21, scope: !1274)
!1295 = !DILocation(line: 292, column: 32, scope: !1274)
!1296 = !DILocation(line: 292, column: 39, scope: !1274)
!1297 = !DILocation(line: 292, column: 43, scope: !1274)
!1298 = !DILocation(line: 292, column: 47, scope: !1274)
!1299 = !DILocation(line: 294, column: 7, scope: !1300)
!1300 = distinct !DILexicalBlock(scope: !1274, file: !1, line: 294, column: 7)
!1301 = !DILocation(line: 294, column: 11, scope: !1300)
!1302 = !DILocation(line: 294, column: 7, scope: !1274)
!1303 = !DILocation(line: 295, column: 19, scope: !1300)
!1304 = !DILocation(line: 295, column: 25, scope: !1300)
!1305 = !DILocation(line: 295, column: 32, scope: !1300)
!1306 = !DILocation(line: 295, column: 36, scope: !1300)
!1307 = !DILocation(line: 295, column: 40, scope: !1300)
!1308 = !DILocation(line: 295, column: 44, scope: !1300)
!1309 = !DILocation(line: 295, column: 51, scope: !1300)
!1310 = !DILocation(line: 295, column: 55, scope: !1300)
!1311 = !DILocation(line: 295, column: 59, scope: !1300)
!1312 = !DILocation(line: 295, column: 63, scope: !1300)
!1313 = !DILocation(line: 295, column: 70, scope: !1300)
!1314 = !DILocation(line: 295, column: 74, scope: !1300)
!1315 = !DILocation(line: 295, column: 78, scope: !1300)
!1316 = !DILocation(line: 295, column: 82, scope: !1300)
!1317 = !DILocation(line: 295, column: 89, scope: !1300)
!1318 = !DILocation(line: 295, column: 93, scope: !1300)
!1319 = !DILocation(line: 295, column: 97, scope: !1300)
!1320 = !DILocation(line: 295, column: 4, scope: !1300)
!1321 = !DILocation(line: 297, column: 18, scope: !1300)
!1322 = !DILocation(line: 297, column: 24, scope: !1300)
!1323 = !DILocation(line: 297, column: 31, scope: !1300)
!1324 = !DILocation(line: 297, column: 35, scope: !1300)
!1325 = !DILocation(line: 297, column: 39, scope: !1300)
!1326 = !DILocation(line: 297, column: 43, scope: !1300)
!1327 = !DILocation(line: 297, column: 50, scope: !1300)
!1328 = !DILocation(line: 297, column: 54, scope: !1300)
!1329 = !DILocation(line: 297, column: 58, scope: !1300)
!1330 = !DILocation(line: 297, column: 62, scope: !1300)
!1331 = !DILocation(line: 297, column: 69, scope: !1300)
!1332 = !DILocation(line: 297, column: 73, scope: !1300)
!1333 = !DILocation(line: 297, column: 77, scope: !1300)
!1334 = !DILocation(line: 297, column: 4, scope: !1300)
!1335 = !DILocation(line: 299, column: 29, scope: !1274)
!1336 = !DILocation(line: 299, column: 36, scope: !1274)
!1337 = !DILocation(line: 299, column: 40, scope: !1274)
!1338 = !DILocation(line: 299, column: 45, scope: !1274)
!1339 = !DILocation(line: 299, column: 52, scope: !1274)
!1340 = !DILocation(line: 299, column: 56, scope: !1274)
!1341 = !DILocation(line: 299, column: 61, scope: !1274)
!1342 = !DILocation(line: 299, column: 68, scope: !1274)
!1343 = !DILocation(line: 299, column: 72, scope: !1274)
!1344 = !DILocation(line: 299, column: 77, scope: !1274)
!1345 = !DILocation(line: 300, column: 29, scope: !1274)
!1346 = !DILocation(line: 300, column: 35, scope: !1274)
!1347 = !DILocation(line: 300, column: 42, scope: !1274)
!1348 = !DILocation(line: 300, column: 46, scope: !1274)
!1349 = !DILocation(line: 300, column: 50, scope: !1274)
!1350 = !DILocation(line: 300, column: 54, scope: !1274)
!1351 = !DILocation(line: 300, column: 61, scope: !1274)
!1352 = !DILocation(line: 300, column: 65, scope: !1274)
!1353 = !DILocation(line: 300, column: 69, scope: !1274)
!1354 = !DILocation(line: 300, column: 73, scope: !1274)
!1355 = !DILocation(line: 300, column: 80, scope: !1274)
!1356 = !DILocation(line: 300, column: 84, scope: !1274)
!1357 = !DILocation(line: 300, column: 88, scope: !1274)
!1358 = !DILocation(line: 300, column: 92, scope: !1274)
!1359 = !DILocation(line: 299, column: 3, scope: !1274)
!1360 = !DILocation(line: 301, column: 2, scope: !1274)
!1361 = !DILocation(line: 288, column: 29, scope: !1269)
!1362 = !DILocation(line: 288, column: 2, scope: !1269)
!1363 = distinct !{!1363, !1272, !1364}
!1364 = !DILocation(line: 301, column: 2, scope: !1266)
!1365 = !DILocation(line: 304, column: 9, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1235, file: !1, line: 304, column: 2)
!1367 = !DILocation(line: 304, column: 7, scope: !1366)
!1368 = !DILocation(line: 304, column: 14, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !1366, file: !1, line: 304, column: 2)
!1370 = !DILocation(line: 304, column: 18, scope: !1369)
!1371 = !DILocation(line: 304, column: 16, scope: !1369)
!1372 = !DILocation(line: 304, column: 2, scope: !1366)
!1373 = !DILocalVariable(name: "mv", scope: !1374, file: !1, line: 305, type: !124)
!1374 = distinct !DILexicalBlock(scope: !1369, file: !1, line: 304, column: 33)
!1375 = !DILocation(line: 305, column: 10, scope: !1374)
!1376 = !DILocation(line: 305, column: 16, scope: !1374)
!1377 = !DILocation(line: 305, column: 23, scope: !1374)
!1378 = !DILocalVariable(name: "no", scope: !1374, file: !1, line: 306, type: !555)
!1379 = !DILocation(line: 306, column: 10, scope: !1374)
!1380 = !DILocation(line: 306, column: 15, scope: !1374)
!1381 = !DILocation(line: 306, column: 22, scope: !1374)
!1382 = !DILocation(line: 308, column: 7, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 308, column: 7)
!1384 = !DILocation(line: 308, column: 7, scope: !1374)
!1385 = !DILocation(line: 309, column: 20, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1383, file: !1, line: 308, column: 43)
!1387 = !DILocation(line: 309, column: 24, scope: !1386)
!1388 = !DILocation(line: 309, column: 28, scope: !1386)
!1389 = !DILocation(line: 309, column: 4, scope: !1386)
!1390 = !DILocation(line: 310, column: 3, scope: !1386)
!1391 = !DILocation(line: 312, column: 28, scope: !1374)
!1392 = !DILocation(line: 312, column: 32, scope: !1374)
!1393 = !DILocation(line: 312, column: 36, scope: !1374)
!1394 = !DILocation(line: 312, column: 3, scope: !1374)
!1395 = !DILocation(line: 313, column: 2, scope: !1374)
!1396 = !DILocation(line: 304, column: 29, scope: !1369)
!1397 = !DILocation(line: 304, column: 2, scope: !1369)
!1398 = distinct !{!1398, !1372, !1399}
!1399 = !DILocation(line: 313, column: 2, scope: !1366)
!1400 = !DILocation(line: 315, column: 2, scope: !1235)
!1401 = !DILocation(line: 315, column: 12, scope: !1235)
!1402 = !DILocation(line: 317, column: 6, scope: !1403)
!1403 = distinct !DILexicalBlock(scope: !1235, file: !1, line: 317, column: 6)
!1404 = !DILocation(line: 317, column: 15, scope: !1403)
!1405 = !DILocation(line: 317, column: 12, scope: !1403)
!1406 = !DILocation(line: 317, column: 6, scope: !1235)
!1407 = !DILocation(line: 318, column: 3, scope: !1403)
!1408 = !DILocation(line: 318, column: 13, scope: !1403)
!1409 = !DILocation(line: 319, column: 1, scope: !1235)
!1410 = distinct !DISubprogram(name: "BKE_mesh_normals_loop_split", scope: !1, file: !1, line: 325, type: !1411, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{null, !124, !169, !1413, !169, !117, !143, !169, !107, !143, !169, !84}
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !4, line: 52, baseType: !1107)
!1415 = !DILocalVariable(name: "mverts", arg: 1, scope: !1410, file: !1, line: 325, type: !124)
!1416 = !DILocation(line: 325, column: 41, scope: !1410)
!1417 = !DILocalVariable(name: "UNUSED_numVerts", arg: 2, scope: !1410, file: !1, line: 325, type: !169)
!1418 = !DILocation(line: 325, column: 59, scope: !1410)
!1419 = !DILocalVariable(name: "medges", arg: 3, scope: !1410, file: !1, line: 325, type: !1413)
!1420 = !DILocation(line: 325, column: 84, scope: !1410)
!1421 = !DILocalVariable(name: "numEdges", arg: 4, scope: !1410, file: !1, line: 325, type: !169)
!1422 = !DILocation(line: 325, column: 102, scope: !1410)
!1423 = !DILocalVariable(name: "mloops", arg: 5, scope: !1410, file: !1, line: 326, type: !117)
!1424 = !DILocation(line: 326, column: 41, scope: !1410)
!1425 = !DILocalVariable(name: "r_loopnors", arg: 6, scope: !1410, file: !1, line: 326, type: !143)
!1426 = !DILocation(line: 326, column: 57, scope: !1410)
!1427 = !DILocalVariable(name: "numLoops", arg: 7, scope: !1410, file: !1, line: 326, type: !169)
!1428 = !DILocation(line: 326, column: 83, scope: !1410)
!1429 = !DILocalVariable(name: "mpolys", arg: 8, scope: !1410, file: !1, line: 327, type: !107)
!1430 = !DILocation(line: 327, column: 41, scope: !1410)
!1431 = !DILocalVariable(name: "polynors", arg: 9, scope: !1410, file: !1, line: 327, type: !143)
!1432 = !DILocation(line: 327, column: 57, scope: !1410)
!1433 = !DILocalVariable(name: "numPolys", arg: 10, scope: !1410, file: !1, line: 327, type: !169)
!1434 = !DILocation(line: 327, column: 81, scope: !1410)
!1435 = !DILocalVariable(name: "split_angle", arg: 11, scope: !1410, file: !1, line: 327, type: !84)
!1436 = !DILocation(line: 327, column: 97, scope: !1410)
!1437 = !DILocalVariable(name: "edge_to_loops", scope: !1410, file: !1, line: 343, type: !1438)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 64, elements: !96)
!1440 = !DILocation(line: 343, column: 8, scope: !1410)
!1441 = !DILocation(line: 343, column: 28, scope: !1410)
!1442 = !DILocation(line: 343, column: 65, scope: !1410)
!1443 = !DILocation(line: 343, column: 57, scope: !1410)
!1444 = !DILocation(line: 343, column: 55, scope: !1410)
!1445 = !DILocalVariable(name: "loop_to_poly", scope: !1410, file: !1, line: 346, type: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!1447 = !DILocation(line: 346, column: 7, scope: !1410)
!1448 = !DILocation(line: 346, column: 22, scope: !1410)
!1449 = !DILocation(line: 346, column: 56, scope: !1410)
!1450 = !DILocation(line: 346, column: 48, scope: !1410)
!1451 = !DILocation(line: 346, column: 46, scope: !1410)
!1452 = !DILocalVariable(name: "mp", scope: !1410, file: !1, line: 348, type: !107)
!1453 = !DILocation(line: 348, column: 9, scope: !1410)
!1454 = !DILocalVariable(name: "mp_index", scope: !1410, file: !1, line: 349, type: !93)
!1455 = !DILocation(line: 349, column: 6, scope: !1410)
!1456 = !DILocalVariable(name: "check_angle", scope: !1410, file: !1, line: 350, type: !209)
!1457 = !DILocation(line: 350, column: 13, scope: !1410)
!1458 = !DILocation(line: 350, column: 28, scope: !1410)
!1459 = !DILocation(line: 350, column: 40, scope: !1410)
!1460 = !DILocation(line: 350, column: 27, scope: !1410)
!1461 = !DILocalVariable(name: "_normal_stack", scope: !1410, file: !1, line: 353, type: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkNode", file: !1464, line: 48, baseType: !1465)
!1464 = !DIFile(filename: "blender/source/blender/blenlib/BLI_linklist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !1464, line: 45, size: 128, elements: !1466)
!1466 = !{!1467, !1469}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1465, file: !1464, line: 46, baseType: !1468, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1465, file: !1464, line: 47, baseType: !80, size: 64, offset: 64)
!1470 = !DILocation(line: 353, column: 2, scope: !1410)
!1471 = !DILocalVariable(name: "_normal_free", scope: !1410, file: !1, line: 353, type: !1462)
!1472 = !DILocalVariable(name: "_normal_temp", scope: !1410, file: !1, line: 353, type: !1462)
!1473 = !DILocalVariable(name: "_normal_type", scope: !1410, file: !1, line: 353, type: !555)
!1474 = !DILocation(line: 359, column: 6, scope: !1475)
!1475 = distinct !DILexicalBlock(scope: !1410, file: !1, line: 359, column: 6)
!1476 = !DILocation(line: 359, column: 6, scope: !1410)
!1477 = !DILocation(line: 360, column: 22, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1475, file: !1, line: 359, column: 19)
!1479 = !DILocation(line: 360, column: 17, scope: !1478)
!1480 = !DILocation(line: 360, column: 15, scope: !1478)
!1481 = !DILocation(line: 361, column: 2, scope: !1478)
!1482 = !DILocation(line: 364, column: 12, scope: !1483)
!1483 = distinct !DILexicalBlock(scope: !1410, file: !1, line: 364, column: 2)
!1484 = !DILocation(line: 364, column: 10, scope: !1483)
!1485 = !DILocation(line: 364, column: 29, scope: !1483)
!1486 = !DILocation(line: 364, column: 7, scope: !1483)
!1487 = !DILocation(line: 364, column: 34, scope: !1488)
!1488 = distinct !DILexicalBlock(scope: !1483, file: !1, line: 364, column: 2)
!1489 = !DILocation(line: 364, column: 45, scope: !1488)
!1490 = !DILocation(line: 364, column: 43, scope: !1488)
!1491 = !DILocation(line: 364, column: 2, scope: !1483)
!1492 = !DILocalVariable(name: "ml_curr", scope: !1493, file: !1, line: 365, type: !117)
!1493 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 364, column: 73)
!1494 = !DILocation(line: 365, column: 10, scope: !1493)
!1495 = !DILocalVariable(name: "e2l", scope: !1493, file: !1, line: 366, type: !1446)
!1496 = !DILocation(line: 366, column: 8, scope: !1493)
!1497 = !DILocalVariable(name: "ml_curr_index", scope: !1493, file: !1, line: 367, type: !93)
!1498 = !DILocation(line: 367, column: 7, scope: !1493)
!1499 = !DILocation(line: 367, column: 23, scope: !1493)
!1500 = !DILocation(line: 367, column: 27, scope: !1493)
!1501 = !DILocalVariable(name: "ml_last_index", scope: !1493, file: !1, line: 368, type: !169)
!1502 = !DILocation(line: 368, column: 13, scope: !1493)
!1503 = !DILocation(line: 368, column: 30, scope: !1493)
!1504 = !DILocation(line: 368, column: 46, scope: !1493)
!1505 = !DILocation(line: 368, column: 50, scope: !1493)
!1506 = !DILocation(line: 368, column: 44, scope: !1493)
!1507 = !DILocation(line: 368, column: 59, scope: !1493)
!1508 = !DILocation(line: 370, column: 14, scope: !1493)
!1509 = !DILocation(line: 370, column: 21, scope: !1493)
!1510 = !DILocation(line: 370, column: 11, scope: !1493)
!1511 = !DILocation(line: 372, column: 3, scope: !1493)
!1512 = !DILocation(line: 372, column: 10, scope: !1513)
!1513 = distinct !DILexicalBlock(scope: !1514, file: !1, line: 372, column: 3)
!1514 = distinct !DILexicalBlock(scope: !1493, file: !1, line: 372, column: 3)
!1515 = !DILocation(line: 372, column: 27, scope: !1513)
!1516 = !DILocation(line: 372, column: 24, scope: !1513)
!1517 = !DILocation(line: 372, column: 3, scope: !1514)
!1518 = !DILocation(line: 373, column: 10, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1513, file: !1, line: 372, column: 70)
!1520 = !DILocation(line: 373, column: 24, scope: !1519)
!1521 = !DILocation(line: 373, column: 33, scope: !1519)
!1522 = !DILocation(line: 373, column: 8, scope: !1519)
!1523 = !DILocation(line: 375, column: 34, scope: !1519)
!1524 = !DILocation(line: 375, column: 4, scope: !1519)
!1525 = !DILocation(line: 375, column: 17, scope: !1519)
!1526 = !DILocation(line: 375, column: 32, scope: !1519)
!1527 = !DILocation(line: 380, column: 29, scope: !1519)
!1528 = !DILocation(line: 380, column: 40, scope: !1519)
!1529 = !DILocation(line: 380, column: 56, scope: !1519)
!1530 = !DILocation(line: 380, column: 63, scope: !1519)
!1531 = !DILocation(line: 380, column: 72, scope: !1519)
!1532 = !DILocation(line: 380, column: 75, scope: !1519)
!1533 = !DILocation(line: 380, column: 4, scope: !1519)
!1534 = !DILocation(line: 383, column: 9, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1519, file: !1, line: 383, column: 8)
!1536 = !DILocation(line: 383, column: 18, scope: !1535)
!1537 = !DILocation(line: 383, column: 16, scope: !1535)
!1538 = !DILocation(line: 383, column: 26, scope: !1535)
!1539 = !DILocation(line: 383, column: 8, scope: !1519)
!1540 = !DILocation(line: 385, column: 14, scope: !1541)
!1541 = distinct !DILexicalBlock(scope: !1535, file: !1, line: 383, column: 32)
!1542 = !DILocation(line: 385, column: 5, scope: !1541)
!1543 = !DILocation(line: 385, column: 12, scope: !1541)
!1544 = !DILocation(line: 387, column: 15, scope: !1541)
!1545 = !DILocation(line: 387, column: 19, scope: !1541)
!1546 = !DILocation(line: 387, column: 24, scope: !1541)
!1547 = !DILocation(line: 387, column: 14, scope: !1541)
!1548 = !DILocation(line: 387, column: 5, scope: !1541)
!1549 = !DILocation(line: 387, column: 12, scope: !1541)
!1550 = !DILocation(line: 388, column: 4, scope: !1541)
!1551 = !DILocation(line: 389, column: 13, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1535, file: !1, line: 389, column: 13)
!1553 = !DILocation(line: 389, column: 20, scope: !1552)
!1554 = !DILocation(line: 389, column: 13, scope: !1535)
!1555 = !DILocation(line: 395, column: 11, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1557, file: !1, line: 395, column: 9)
!1557 = distinct !DILexicalBlock(scope: !1552, file: !1, line: 389, column: 36)
!1558 = !DILocation(line: 395, column: 15, scope: !1556)
!1559 = !DILocation(line: 395, column: 20, scope: !1556)
!1560 = !DILocation(line: 395, column: 33, scope: !1556)
!1561 = !DILocation(line: 395, column: 37, scope: !1556)
!1562 = !DILocation(line: 395, column: 44, scope: !1556)
!1563 = !DILocation(line: 395, column: 53, scope: !1556)
!1564 = !DILocation(line: 395, column: 56, scope: !1556)
!1565 = !DILocation(line: 395, column: 61, scope: !1556)
!1566 = !DILocation(line: 395, column: 73, scope: !1556)
!1567 = !DILocation(line: 396, column: 9, scope: !1556)
!1568 = !DILocation(line: 396, column: 18, scope: !1556)
!1569 = !DILocation(line: 396, column: 23, scope: !1556)
!1570 = !DILocation(line: 396, column: 30, scope: !1556)
!1571 = !DILocation(line: 396, column: 38, scope: !1556)
!1572 = !DILocation(line: 396, column: 20, scope: !1556)
!1573 = !DILocation(line: 396, column: 40, scope: !1556)
!1574 = !DILocation(line: 397, column: 10, scope: !1556)
!1575 = !DILocation(line: 397, column: 22, scope: !1556)
!1576 = !DILocation(line: 397, column: 34, scope: !1556)
!1577 = !DILocation(line: 397, column: 43, scope: !1556)
!1578 = !DILocation(line: 397, column: 56, scope: !1556)
!1579 = !DILocation(line: 397, column: 66, scope: !1556)
!1580 = !DILocation(line: 397, column: 75, scope: !1556)
!1581 = !DILocation(line: 397, column: 25, scope: !1556)
!1582 = !DILocation(line: 397, column: 88, scope: !1556)
!1583 = !DILocation(line: 397, column: 86, scope: !1556)
!1584 = !DILocation(line: 395, column: 9, scope: !1557)
!1585 = !DILocation(line: 400, column: 6, scope: !1586)
!1586 = distinct !DILexicalBlock(scope: !1556, file: !1, line: 398, column: 5)
!1587 = !DILocation(line: 400, column: 13, scope: !1586)
!1588 = !DILocation(line: 401, column: 5, scope: !1586)
!1589 = !DILocation(line: 403, column: 15, scope: !1590)
!1590 = distinct !DILexicalBlock(scope: !1556, file: !1, line: 402, column: 10)
!1591 = !DILocation(line: 403, column: 6, scope: !1590)
!1592 = !DILocation(line: 403, column: 13, scope: !1590)
!1593 = !DILocation(line: 405, column: 4, scope: !1557)
!1594 = !DILocation(line: 406, column: 14, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1552, file: !1, line: 406, column: 13)
!1596 = !DILocation(line: 406, column: 13, scope: !1552)
!1597 = !DILocation(line: 408, column: 5, scope: !1598)
!1598 = distinct !DILexicalBlock(scope: !1595, file: !1, line: 406, column: 34)
!1599 = !DILocation(line: 408, column: 12, scope: !1598)
!1600 = !DILocation(line: 409, column: 4, scope: !1598)
!1601 = !DILocation(line: 411, column: 3, scope: !1519)
!1602 = !DILocation(line: 372, column: 49, scope: !1513)
!1603 = !DILocation(line: 372, column: 66, scope: !1513)
!1604 = !DILocation(line: 372, column: 3, scope: !1513)
!1605 = distinct !{!1605, !1517, !1606}
!1606 = !DILocation(line: 411, column: 3, scope: !1514)
!1607 = !DILocation(line: 412, column: 2, scope: !1493)
!1608 = !DILocation(line: 364, column: 57, scope: !1488)
!1609 = !DILocation(line: 364, column: 69, scope: !1488)
!1610 = !DILocation(line: 364, column: 2, scope: !1488)
!1611 = distinct !{!1611, !1491, !1612}
!1612 = !DILocation(line: 412, column: 2, scope: !1483)
!1613 = !DILocation(line: 417, column: 12, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1410, file: !1, line: 417, column: 2)
!1615 = !DILocation(line: 417, column: 10, scope: !1614)
!1616 = !DILocation(line: 417, column: 29, scope: !1614)
!1617 = !DILocation(line: 417, column: 7, scope: !1614)
!1618 = !DILocation(line: 417, column: 34, scope: !1619)
!1619 = distinct !DILexicalBlock(scope: !1614, file: !1, line: 417, column: 2)
!1620 = !DILocation(line: 417, column: 45, scope: !1619)
!1621 = !DILocation(line: 417, column: 43, scope: !1619)
!1622 = !DILocation(line: 417, column: 2, scope: !1614)
!1623 = !DILocalVariable(name: "ml_curr", scope: !1624, file: !1, line: 418, type: !117)
!1624 = distinct !DILexicalBlock(scope: !1619, file: !1, line: 417, column: 73)
!1625 = !DILocation(line: 418, column: 10, scope: !1624)
!1626 = !DILocalVariable(name: "ml_prev", scope: !1624, file: !1, line: 418, type: !117)
!1627 = !DILocation(line: 418, column: 20, scope: !1624)
!1628 = !DILocalVariable(name: "lnors", scope: !1624, file: !1, line: 419, type: !143)
!1629 = !DILocation(line: 419, column: 11, scope: !1624)
!1630 = !DILocalVariable(name: "ml_last_index", scope: !1624, file: !1, line: 420, type: !169)
!1631 = !DILocation(line: 420, column: 13, scope: !1624)
!1632 = !DILocation(line: 420, column: 30, scope: !1624)
!1633 = !DILocation(line: 420, column: 34, scope: !1624)
!1634 = !DILocation(line: 420, column: 46, scope: !1624)
!1635 = !DILocation(line: 420, column: 50, scope: !1624)
!1636 = !DILocation(line: 420, column: 44, scope: !1624)
!1637 = !DILocation(line: 420, column: 59, scope: !1624)
!1638 = !DILocalVariable(name: "ml_curr_index", scope: !1624, file: !1, line: 421, type: !93)
!1639 = !DILocation(line: 421, column: 7, scope: !1624)
!1640 = !DILocation(line: 421, column: 23, scope: !1624)
!1641 = !DILocation(line: 421, column: 27, scope: !1624)
!1642 = !DILocalVariable(name: "ml_prev_index", scope: !1624, file: !1, line: 422, type: !93)
!1643 = !DILocation(line: 422, column: 7, scope: !1624)
!1644 = !DILocation(line: 422, column: 23, scope: !1624)
!1645 = !DILocation(line: 424, column: 14, scope: !1624)
!1646 = !DILocation(line: 424, column: 21, scope: !1624)
!1647 = !DILocation(line: 424, column: 11, scope: !1624)
!1648 = !DILocation(line: 425, column: 14, scope: !1624)
!1649 = !DILocation(line: 425, column: 21, scope: !1624)
!1650 = !DILocation(line: 425, column: 11, scope: !1624)
!1651 = !DILocation(line: 426, column: 12, scope: !1624)
!1652 = !DILocation(line: 426, column: 23, scope: !1624)
!1653 = !DILocation(line: 426, column: 9, scope: !1624)
!1654 = !DILocation(line: 428, column: 3, scope: !1624)
!1655 = !DILocation(line: 428, column: 10, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1657, file: !1, line: 428, column: 3)
!1657 = distinct !DILexicalBlock(scope: !1624, file: !1, line: 428, column: 3)
!1658 = !DILocation(line: 428, column: 27, scope: !1656)
!1659 = !DILocation(line: 428, column: 24, scope: !1656)
!1660 = !DILocation(line: 428, column: 3, scope: !1657)
!1661 = !DILocalVariable(name: "e2l_curr", scope: !1662, file: !1, line: 429, type: !168)
!1662 = distinct !DILexicalBlock(scope: !1656, file: !1, line: 428, column: 79)
!1663 = !DILocation(line: 429, column: 15, scope: !1662)
!1664 = !DILocation(line: 429, column: 26, scope: !1662)
!1665 = !DILocation(line: 429, column: 40, scope: !1662)
!1666 = !DILocation(line: 429, column: 49, scope: !1662)
!1667 = !DILocalVariable(name: "e2l_prev", scope: !1662, file: !1, line: 430, type: !168)
!1668 = !DILocation(line: 430, column: 15, scope: !1662)
!1669 = !DILocation(line: 430, column: 26, scope: !1662)
!1670 = !DILocation(line: 430, column: 40, scope: !1662)
!1671 = !DILocation(line: 430, column: 49, scope: !1662)
!1672 = !DILocation(line: 432, column: 9, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1662, file: !1, line: 432, column: 8)
!1674 = !DILocation(line: 432, column: 8, scope: !1662)
!1675 = !DILocation(line: 440, column: 4, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1673, file: !1, line: 432, column: 34)
!1677 = !DILocation(line: 441, column: 13, scope: !1678)
!1678 = distinct !DILexicalBlock(scope: !1673, file: !1, line: 441, column: 13)
!1679 = !DILocation(line: 441, column: 13, scope: !1673)
!1680 = !DILocation(line: 445, column: 17, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1678, file: !1, line: 441, column: 38)
!1682 = !DILocation(line: 445, column: 16, scope: !1681)
!1683 = !DILocation(line: 445, column: 24, scope: !1681)
!1684 = !DILocation(line: 445, column: 33, scope: !1681)
!1685 = !DILocation(line: 445, column: 5, scope: !1681)
!1686 = !DILocation(line: 447, column: 4, scope: !1681)
!1687 = !DILocalVariable(name: "mv_pivot_index", scope: !1688, file: !1, line: 464, type: !1689)
!1688 = distinct !DILexicalBlock(scope: !1678, file: !1, line: 456, column: 9)
!1689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!1690 = !DILocation(line: 464, column: 24, scope: !1688)
!1691 = !DILocation(line: 464, column: 41, scope: !1688)
!1692 = !DILocation(line: 464, column: 50, scope: !1688)
!1693 = !DILocalVariable(name: "mv_pivot", scope: !1688, file: !1, line: 465, type: !1694)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!1696 = !DILocation(line: 465, column: 18, scope: !1688)
!1697 = !DILocation(line: 465, column: 30, scope: !1688)
!1698 = !DILocation(line: 465, column: 37, scope: !1688)
!1699 = !DILocalVariable(name: "e2lfan_curr", scope: !1688, file: !1, line: 466, type: !168)
!1700 = !DILocation(line: 466, column: 16, scope: !1688)
!1701 = !DILocalVariable(name: "vec_curr", scope: !1688, file: !1, line: 467, type: !129)
!1702 = !DILocation(line: 467, column: 11, scope: !1688)
!1703 = !DILocalVariable(name: "vec_prev", scope: !1688, file: !1, line: 467, type: !129)
!1704 = !DILocation(line: 467, column: 24, scope: !1688)
!1705 = !DILocalVariable(name: "mlfan_curr", scope: !1688, file: !1, line: 468, type: !117)
!1706 = !DILocation(line: 468, column: 12, scope: !1688)
!1707 = !DILocalVariable(name: "mlfan_next", scope: !1688, file: !1, line: 468, type: !117)
!1708 = !DILocation(line: 468, column: 25, scope: !1688)
!1709 = !DILocalVariable(name: "mpfan_next", scope: !1688, file: !1, line: 469, type: !107)
!1710 = !DILocation(line: 469, column: 12, scope: !1688)
!1711 = !DILocalVariable(name: "lnor", scope: !1688, file: !1, line: 470, type: !129)
!1712 = !DILocation(line: 470, column: 11, scope: !1688)
!1713 = !DILocalVariable(name: "mlfan_curr_index", scope: !1688, file: !1, line: 472, type: !93)
!1714 = !DILocation(line: 472, column: 9, scope: !1688)
!1715 = !DILocalVariable(name: "mlfan_vert_index", scope: !1688, file: !1, line: 472, type: !93)
!1716 = !DILocation(line: 472, column: 27, scope: !1688)
!1717 = !DILocalVariable(name: "mpfan_curr_index", scope: !1688, file: !1, line: 472, type: !93)
!1718 = !DILocation(line: 472, column: 45, scope: !1688)
!1719 = !DILocation(line: 474, column: 19, scope: !1688)
!1720 = !DILocation(line: 474, column: 17, scope: !1688)
!1721 = !DILocation(line: 475, column: 18, scope: !1688)
!1722 = !DILocation(line: 475, column: 16, scope: !1688)
!1723 = !DILocation(line: 476, column: 24, scope: !1688)
!1724 = !DILocation(line: 476, column: 22, scope: !1688)
!1725 = !DILocation(line: 477, column: 24, scope: !1688)
!1726 = !DILocation(line: 477, column: 22, scope: !1688)
!1727 = !DILocation(line: 478, column: 24, scope: !1688)
!1728 = !DILocation(line: 478, column: 22, scope: !1688)
!1729 = !DILocalVariable(name: "me_prev", scope: !1730, file: !1, line: 486, type: !1731)
!1730 = distinct !DILexicalBlock(scope: !1688, file: !1, line: 485, column: 5)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!1733 = !DILocation(line: 486, column: 19, scope: !1730)
!1734 = !DILocation(line: 486, column: 30, scope: !1730)
!1735 = !DILocation(line: 486, column: 37, scope: !1730)
!1736 = !DILocation(line: 486, column: 46, scope: !1730)
!1737 = !DILocalVariable(name: "mv_2", scope: !1730, file: !1, line: 487, type: !1694)
!1738 = !DILocation(line: 487, column: 19, scope: !1730)
!1739 = !DILocation(line: 487, column: 27, scope: !1730)
!1740 = !DILocation(line: 487, column: 36, scope: !1730)
!1741 = !DILocation(line: 487, column: 42, scope: !1730)
!1742 = !DILocation(line: 487, column: 39, scope: !1730)
!1743 = !DILocation(line: 487, column: 26, scope: !1730)
!1744 = !DILocation(line: 487, column: 61, scope: !1730)
!1745 = !DILocation(line: 487, column: 68, scope: !1730)
!1746 = !DILocation(line: 487, column: 77, scope: !1730)
!1747 = !DILocation(line: 487, column: 84, scope: !1730)
!1748 = !DILocation(line: 487, column: 91, scope: !1730)
!1749 = !DILocation(line: 487, column: 100, scope: !1730)
!1750 = !DILocation(line: 489, column: 18, scope: !1730)
!1751 = !DILocation(line: 489, column: 28, scope: !1730)
!1752 = !DILocation(line: 489, column: 34, scope: !1730)
!1753 = !DILocation(line: 489, column: 38, scope: !1730)
!1754 = !DILocation(line: 489, column: 48, scope: !1730)
!1755 = !DILocation(line: 489, column: 6, scope: !1730)
!1756 = !DILocation(line: 490, column: 19, scope: !1730)
!1757 = !DILocation(line: 490, column: 6, scope: !1730)
!1758 = !DILocation(line: 493, column: 5, scope: !1688)
!1759 = !DILocalVariable(name: "me_curr", scope: !1760, file: !1, line: 500, type: !1731)
!1760 = distinct !DILexicalBlock(scope: !1761, file: !1, line: 499, column: 6)
!1761 = distinct !DILexicalBlock(scope: !1688, file: !1, line: 493, column: 18)
!1762 = !DILocation(line: 500, column: 20, scope: !1760)
!1763 = !DILocation(line: 500, column: 31, scope: !1760)
!1764 = !DILocation(line: 500, column: 38, scope: !1760)
!1765 = !DILocation(line: 500, column: 50, scope: !1760)
!1766 = !DILocalVariable(name: "mv_2", scope: !1760, file: !1, line: 501, type: !1694)
!1767 = !DILocation(line: 501, column: 20, scope: !1760)
!1768 = !DILocation(line: 501, column: 28, scope: !1760)
!1769 = !DILocation(line: 501, column: 37, scope: !1760)
!1770 = !DILocation(line: 501, column: 43, scope: !1760)
!1771 = !DILocation(line: 501, column: 40, scope: !1760)
!1772 = !DILocation(line: 501, column: 27, scope: !1760)
!1773 = !DILocation(line: 501, column: 62, scope: !1760)
!1774 = !DILocation(line: 501, column: 69, scope: !1760)
!1775 = !DILocation(line: 501, column: 78, scope: !1760)
!1776 = !DILocation(line: 502, column: 62, scope: !1760)
!1777 = !DILocation(line: 502, column: 69, scope: !1760)
!1778 = !DILocation(line: 502, column: 78, scope: !1760)
!1779 = !DILocation(line: 504, column: 19, scope: !1760)
!1780 = !DILocation(line: 504, column: 29, scope: !1760)
!1781 = !DILocation(line: 504, column: 35, scope: !1760)
!1782 = !DILocation(line: 504, column: 39, scope: !1760)
!1783 = !DILocation(line: 504, column: 49, scope: !1760)
!1784 = !DILocation(line: 504, column: 7, scope: !1760)
!1785 = !DILocation(line: 505, column: 20, scope: !1760)
!1786 = !DILocation(line: 505, column: 7, scope: !1760)
!1787 = !DILocalVariable(name: "fac", scope: !1788, file: !1, line: 511, type: !87)
!1788 = distinct !DILexicalBlock(scope: !1761, file: !1, line: 508, column: 6)
!1789 = !DILocation(line: 511, column: 19, scope: !1788)
!1790 = !DILocation(line: 511, column: 41, scope: !1788)
!1791 = !DILocation(line: 511, column: 51, scope: !1788)
!1792 = !DILocation(line: 511, column: 32, scope: !1788)
!1793 = !DILocation(line: 511, column: 25, scope: !1788)
!1794 = !DILocation(line: 513, column: 20, scope: !1788)
!1795 = !DILocation(line: 513, column: 26, scope: !1788)
!1796 = !DILocation(line: 513, column: 35, scope: !1788)
!1797 = !DILocation(line: 513, column: 54, scope: !1788)
!1798 = !DILocation(line: 513, column: 7, scope: !1788)
!1799 = !DILocation(line: 517, column: 6, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1801, file: !1, line: 517, column: 6)
!1801 = distinct !DILexicalBlock(scope: !1761, file: !1, line: 517, column: 6)
!1802 = !DILocation(line: 517, column: 6, scope: !1801)
!1803 = !DILocation(line: 517, column: 6, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1800, file: !1, line: 517, column: 6)
!1805 = !DILocation(line: 517, column: 6, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1800, file: !1, line: 517, column: 6)
!1807 = !DILocation(line: 519, column: 10, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1761, file: !1, line: 519, column: 10)
!1809 = !DILocation(line: 519, column: 10, scope: !1761)
!1810 = !DILocation(line: 521, column: 7, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1808, file: !1, line: 519, column: 38)
!1812 = !DILocation(line: 524, column: 17, scope: !1761)
!1813 = !DILocation(line: 524, column: 27, scope: !1761)
!1814 = !DILocation(line: 524, column: 6, scope: !1761)
!1815 = !DILocation(line: 534, column: 26, scope: !1761)
!1816 = !DILocation(line: 534, column: 44, scope: !1761)
!1817 = !DILocation(line: 534, column: 41, scope: !1761)
!1818 = !DILocation(line: 534, column: 25, scope: !1761)
!1819 = !DILocation(line: 534, column: 64, scope: !1761)
!1820 = !DILocation(line: 534, column: 81, scope: !1761)
!1821 = !DILocation(line: 534, column: 23, scope: !1761)
!1822 = !DILocation(line: 535, column: 25, scope: !1761)
!1823 = !DILocation(line: 535, column: 38, scope: !1761)
!1824 = !DILocation(line: 535, column: 23, scope: !1761)
!1825 = !DILocation(line: 540, column: 20, scope: !1761)
!1826 = !DILocation(line: 540, column: 27, scope: !1761)
!1827 = !DILocation(line: 540, column: 17, scope: !1761)
!1828 = !DILocation(line: 541, column: 20, scope: !1761)
!1829 = !DILocation(line: 541, column: 27, scope: !1761)
!1830 = !DILocation(line: 541, column: 17, scope: !1761)
!1831 = !DILocation(line: 542, column: 11, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1761, file: !1, line: 542, column: 10)
!1833 = !DILocation(line: 542, column: 23, scope: !1832)
!1834 = !DILocation(line: 542, column: 28, scope: !1832)
!1835 = !DILocation(line: 542, column: 40, scope: !1832)
!1836 = !DILocation(line: 542, column: 25, scope: !1832)
!1837 = !DILocation(line: 542, column: 42, scope: !1832)
!1838 = !DILocation(line: 542, column: 45, scope: !1832)
!1839 = !DILocation(line: 542, column: 57, scope: !1832)
!1840 = !DILocation(line: 542, column: 62, scope: !1832)
!1841 = !DILocation(line: 542, column: 59, scope: !1832)
!1842 = !DILocation(line: 542, column: 78, scope: !1832)
!1843 = !DILocation(line: 543, column: 11, scope: !1832)
!1844 = !DILocation(line: 543, column: 23, scope: !1832)
!1845 = !DILocation(line: 543, column: 28, scope: !1832)
!1846 = !DILocation(line: 543, column: 40, scope: !1832)
!1847 = !DILocation(line: 543, column: 25, scope: !1832)
!1848 = !DILocation(line: 543, column: 42, scope: !1832)
!1849 = !DILocation(line: 543, column: 45, scope: !1832)
!1850 = !DILocation(line: 543, column: 57, scope: !1832)
!1851 = !DILocation(line: 543, column: 62, scope: !1832)
!1852 = !DILocation(line: 543, column: 59, scope: !1832)
!1853 = !DILocation(line: 542, column: 10, scope: !1761)
!1854 = !DILocation(line: 546, column: 26, scope: !1855)
!1855 = distinct !DILexicalBlock(scope: !1832, file: !1, line: 544, column: 6)
!1856 = !DILocation(line: 546, column: 24, scope: !1855)
!1857 = !DILocation(line: 547, column: 11, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1855, file: !1, line: 547, column: 11)
!1859 = !DILocation(line: 547, column: 32, scope: !1858)
!1860 = !DILocation(line: 547, column: 44, scope: !1858)
!1861 = !DILocation(line: 547, column: 30, scope: !1858)
!1862 = !DILocation(line: 547, column: 11, scope: !1855)
!1863 = !DILocation(line: 548, column: 27, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1858, file: !1, line: 547, column: 55)
!1865 = !DILocation(line: 548, column: 39, scope: !1864)
!1866 = !DILocation(line: 548, column: 51, scope: !1864)
!1867 = !DILocation(line: 548, column: 63, scope: !1864)
!1868 = !DILocation(line: 548, column: 49, scope: !1864)
!1869 = !DILocation(line: 548, column: 71, scope: !1864)
!1870 = !DILocation(line: 548, column: 25, scope: !1864)
!1871 = !DILocation(line: 549, column: 7, scope: !1864)
!1872 = !DILocation(line: 550, column: 6, scope: !1855)
!1873 = !DILocation(line: 553, column: 11, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1875, file: !1, line: 553, column: 11)
!1875 = distinct !DILexicalBlock(scope: !1832, file: !1, line: 551, column: 11)
!1876 = !DILocation(line: 553, column: 33, scope: !1874)
!1877 = !DILocation(line: 553, column: 45, scope: !1874)
!1878 = !DILocation(line: 553, column: 57, scope: !1874)
!1879 = !DILocation(line: 553, column: 69, scope: !1874)
!1880 = !DILocation(line: 553, column: 55, scope: !1874)
!1881 = !DILocation(line: 553, column: 30, scope: !1874)
!1882 = !DILocation(line: 553, column: 11, scope: !1875)
!1883 = !DILocation(line: 554, column: 27, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1874, file: !1, line: 553, column: 78)
!1885 = !DILocation(line: 554, column: 39, scope: !1884)
!1886 = !DILocation(line: 554, column: 25, scope: !1884)
!1887 = !DILocation(line: 555, column: 7, scope: !1884)
!1888 = !DILocation(line: 556, column: 26, scope: !1875)
!1889 = !DILocation(line: 556, column: 24, scope: !1875)
!1890 = !DILocation(line: 558, column: 20, scope: !1761)
!1891 = !DILocation(line: 558, column: 27, scope: !1761)
!1892 = !DILocation(line: 558, column: 17, scope: !1761)
!1893 = !DILocation(line: 561, column: 20, scope: !1761)
!1894 = !DILocation(line: 561, column: 34, scope: !1761)
!1895 = !DILocation(line: 561, column: 46, scope: !1761)
!1896 = !DILocation(line: 561, column: 18, scope: !1761)
!1897 = distinct !{!1897, !1758, !1898}
!1898 = !DILocation(line: 562, column: 5, scope: !1688)
!1899 = !DILocation(line: 565, column: 9, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1688, file: !1, line: 565, column: 9)
!1901 = !DILocation(line: 565, column: 9, scope: !1688)
!1902 = !DILocalVariable(name: "nor", scope: !1903, file: !1, line: 567, type: !555)
!1903 = distinct !DILexicalBlock(scope: !1900, file: !1, line: 565, column: 45)
!1904 = !DILocation(line: 567, column: 13, scope: !1903)
!1905 = !DILocation(line: 568, column: 6, scope: !1903)
!1906 = !DILocation(line: 568, column: 20, scope: !1903)
!1907 = !DILocation(line: 568, column: 18, scope: !1903)
!1908 = !DILocation(line: 569, column: 18, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1903, file: !1, line: 568, column: 49)
!1910 = !DILocation(line: 569, column: 23, scope: !1909)
!1911 = !DILocation(line: 569, column: 7, scope: !1909)
!1912 = distinct !{!1912, !1905, !1913}
!1913 = !DILocation(line: 570, column: 6, scope: !1903)
!1914 = !DILocation(line: 571, column: 5, scope: !1903)
!1915 = !DILocation(line: 574, column: 6, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1900, file: !1, line: 572, column: 10)
!1917 = !DILocation(line: 574, column: 13, scope: !1916)
!1918 = distinct !{!1918, !1915, !1919}
!1919 = !DILocation(line: 574, column: 40, scope: !1916)
!1920 = !DILocation(line: 578, column: 14, scope: !1662)
!1921 = !DILocation(line: 578, column: 12, scope: !1662)
!1922 = !DILocation(line: 579, column: 20, scope: !1662)
!1923 = !DILocation(line: 579, column: 18, scope: !1662)
!1924 = !DILocation(line: 580, column: 3, scope: !1662)
!1925 = !DILocation(line: 428, column: 49, scope: !1656)
!1926 = !DILocation(line: 428, column: 66, scope: !1656)
!1927 = !DILocation(line: 428, column: 75, scope: !1656)
!1928 = !DILocation(line: 428, column: 3, scope: !1656)
!1929 = distinct !{!1929, !1660, !1930}
!1930 = !DILocation(line: 580, column: 3, scope: !1657)
!1931 = !DILocation(line: 581, column: 2, scope: !1624)
!1932 = !DILocation(line: 417, column: 57, scope: !1619)
!1933 = !DILocation(line: 417, column: 69, scope: !1619)
!1934 = !DILocation(line: 417, column: 2, scope: !1619)
!1935 = distinct !{!1935, !1622, !1936}
!1936 = !DILocation(line: 581, column: 2, scope: !1614)
!1937 = !DILocation(line: 583, column: 2, scope: !1410)
!1938 = !DILocation(line: 583, column: 12, scope: !1410)
!1939 = !DILocation(line: 584, column: 2, scope: !1410)
!1940 = !DILocation(line: 584, column: 12, scope: !1410)
!1941 = !DILocation(line: 593, column: 1, scope: !1410)
!1942 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !658, file: !658, line: 835, type: !1943, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !555, !1945}
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !101)
!1947 = !DILocalVariable(name: "out", arg: 1, scope: !1942, file: !658, line: 835, type: !555)
!1948 = !DILocation(line: 835, column: 45, scope: !1942)
!1949 = !DILocalVariable(name: "in", arg: 2, scope: !1942, file: !658, line: 835, type: !1945)
!1950 = !DILocation(line: 835, column: 65, scope: !1942)
!1951 = !DILocation(line: 837, column: 11, scope: !1942)
!1952 = !DILocation(line: 837, column: 17, scope: !1942)
!1953 = !DILocation(line: 837, column: 2, scope: !1942)
!1954 = !DILocation(line: 837, column: 9, scope: !1942)
!1955 = !DILocation(line: 838, column: 11, scope: !1942)
!1956 = !DILocation(line: 838, column: 17, scope: !1942)
!1957 = !DILocation(line: 838, column: 2, scope: !1942)
!1958 = !DILocation(line: 838, column: 9, scope: !1942)
!1959 = !DILocation(line: 839, column: 11, scope: !1942)
!1960 = !DILocation(line: 839, column: 17, scope: !1942)
!1961 = !DILocation(line: 839, column: 2, scope: !1942)
!1962 = !DILocation(line: 839, column: 9, scope: !1942)
!1963 = !DILocation(line: 840, column: 1, scope: !1942)
!1964 = distinct !DISubprogram(name: "dot_v3v3", scope: !658, file: !658, line: 619, type: !1965, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!84, !661, !661}
!1967 = !DILocalVariable(name: "a", arg: 1, scope: !1964, file: !658, line: 619, type: !661)
!1968 = !DILocation(line: 619, column: 36, scope: !1964)
!1969 = !DILocalVariable(name: "b", arg: 2, scope: !1964, file: !658, line: 619, type: !661)
!1970 = !DILocation(line: 619, column: 54, scope: !1964)
!1971 = !DILocation(line: 621, column: 9, scope: !1964)
!1972 = !DILocation(line: 621, column: 16, scope: !1964)
!1973 = !DILocation(line: 621, column: 14, scope: !1964)
!1974 = !DILocation(line: 621, column: 23, scope: !1964)
!1975 = !DILocation(line: 621, column: 30, scope: !1964)
!1976 = !DILocation(line: 621, column: 28, scope: !1964)
!1977 = !DILocation(line: 621, column: 21, scope: !1964)
!1978 = !DILocation(line: 621, column: 37, scope: !1964)
!1979 = !DILocation(line: 621, column: 44, scope: !1964)
!1980 = !DILocation(line: 621, column: 42, scope: !1964)
!1981 = !DILocation(line: 621, column: 35, scope: !1964)
!1982 = !DILocation(line: 621, column: 2, scope: !1964)
!1983 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !658, file: !658, line: 357, type: !1984, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !555, !661, !661}
!1986 = !DILocalVariable(name: "r", arg: 1, scope: !1983, file: !658, line: 357, type: !555)
!1987 = !DILocation(line: 357, column: 32, scope: !1983)
!1988 = !DILocalVariable(name: "a", arg: 2, scope: !1983, file: !658, line: 357, type: !661)
!1989 = !DILocation(line: 357, column: 50, scope: !1983)
!1990 = !DILocalVariable(name: "b", arg: 3, scope: !1983, file: !658, line: 357, type: !661)
!1991 = !DILocation(line: 357, column: 68, scope: !1983)
!1992 = !DILocation(line: 359, column: 9, scope: !1983)
!1993 = !DILocation(line: 359, column: 16, scope: !1983)
!1994 = !DILocation(line: 359, column: 14, scope: !1983)
!1995 = !DILocation(line: 359, column: 2, scope: !1983)
!1996 = !DILocation(line: 359, column: 7, scope: !1983)
!1997 = !DILocation(line: 360, column: 9, scope: !1983)
!1998 = !DILocation(line: 360, column: 16, scope: !1983)
!1999 = !DILocation(line: 360, column: 14, scope: !1983)
!2000 = !DILocation(line: 360, column: 2, scope: !1983)
!2001 = !DILocation(line: 360, column: 7, scope: !1983)
!2002 = !DILocation(line: 361, column: 9, scope: !1983)
!2003 = !DILocation(line: 361, column: 16, scope: !1983)
!2004 = !DILocation(line: 361, column: 14, scope: !1983)
!2005 = !DILocation(line: 361, column: 2, scope: !1983)
!2006 = !DILocation(line: 361, column: 7, scope: !1983)
!2007 = !DILocation(line: 362, column: 1, scope: !1983)
!2008 = distinct !DISubprogram(name: "saacos", scope: !2009, file: !2009, line: 66, type: !2010, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2009 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!84, !84}
!2012 = !DILocalVariable(name: "fac", arg: 1, scope: !2008, file: !2009, line: 66, type: !84)
!2013 = !DILocation(line: 66, column: 28, scope: !2008)
!2014 = !DILocation(line: 68, column: 11, scope: !2015)
!2015 = distinct !DILexicalBlock(scope: !2008, file: !2009, line: 68, column: 11)
!2016 = !DILocation(line: 68, column: 11, scope: !2008)
!2017 = !DILocation(line: 68, column: 35, scope: !2015)
!2018 = !DILocation(line: 69, column: 11, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !2015, file: !2009, line: 69, column: 11)
!2020 = !DILocation(line: 69, column: 11, scope: !2015)
!2021 = !DILocation(line: 69, column: 35, scope: !2019)
!2022 = !DILocation(line: 70, column: 48, scope: !2019)
!2023 = !DILocation(line: 70, column: 42, scope: !2019)
!2024 = !DILocation(line: 70, column: 35, scope: !2019)
!2025 = !DILocation(line: 71, column: 1, scope: !2008)
!2026 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !658, file: !658, line: 507, type: !2027, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2027 = !DISubroutineType(types: !2028)
!2028 = !{null, !555, !661, !84}
!2029 = !DILocalVariable(name: "r", arg: 1, scope: !2026, file: !658, line: 507, type: !555)
!2030 = !DILocation(line: 507, column: 33, scope: !2026)
!2031 = !DILocalVariable(name: "a", arg: 2, scope: !2026, file: !658, line: 507, type: !661)
!2032 = !DILocation(line: 507, column: 51, scope: !2026)
!2033 = !DILocalVariable(name: "f", arg: 3, scope: !2026, file: !658, line: 507, type: !84)
!2034 = !DILocation(line: 507, column: 63, scope: !2026)
!2035 = !DILocation(line: 509, column: 10, scope: !2026)
!2036 = !DILocation(line: 509, column: 17, scope: !2026)
!2037 = !DILocation(line: 509, column: 15, scope: !2026)
!2038 = !DILocation(line: 509, column: 2, scope: !2026)
!2039 = !DILocation(line: 509, column: 7, scope: !2026)
!2040 = !DILocation(line: 510, column: 10, scope: !2026)
!2041 = !DILocation(line: 510, column: 17, scope: !2026)
!2042 = !DILocation(line: 510, column: 15, scope: !2026)
!2043 = !DILocation(line: 510, column: 2, scope: !2026)
!2044 = !DILocation(line: 510, column: 7, scope: !2026)
!2045 = !DILocation(line: 511, column: 10, scope: !2026)
!2046 = !DILocation(line: 511, column: 17, scope: !2026)
!2047 = !DILocation(line: 511, column: 15, scope: !2026)
!2048 = !DILocation(line: 511, column: 2, scope: !2026)
!2049 = !DILocation(line: 511, column: 7, scope: !2026)
!2050 = !DILocation(line: 512, column: 1, scope: !2026)
!2051 = distinct !DISubprogram(name: "BKE_mesh_loop_tangents_ex", scope: !1, file: !1, line: 664, type: !2052, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{null, !124, !169, !117, !145, !143, !135, !169, !107, !169, !2054}
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !18, line: 112, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !18, line: 106, size: 320, elements: !2057)
!2057 = !{!2058, !2059, !2060, !2061, !2062, !2063}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2056, file: !18, line: 107, baseType: !929, size: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !2056, file: !18, line: 108, baseType: !93, size: 32, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !2056, file: !18, line: 109, baseType: !93, size: 32, offset: 160)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2056, file: !18, line: 110, baseType: !93, size: 32, offset: 192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2056, file: !18, line: 110, baseType: !93, size: 32, offset: 224)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !2056, file: !18, line: 111, baseType: !2064, size: 64, offset: 256)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !2066, line: 69, flags: DIFlagFwdDecl)
!2066 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2067 = !DILocalVariable(name: "mverts", arg: 1, scope: !2051, file: !1, line: 664, type: !124)
!2068 = !DILocation(line: 664, column: 39, scope: !2051)
!2069 = !DILocalVariable(name: "UNUSED_numVerts", arg: 2, scope: !2051, file: !1, line: 664, type: !169)
!2070 = !DILocation(line: 664, column: 57, scope: !2051)
!2071 = !DILocalVariable(name: "mloops", arg: 3, scope: !2051, file: !1, line: 664, type: !117)
!2072 = !DILocation(line: 664, column: 82, scope: !2051)
!2073 = !DILocalVariable(name: "r_looptangent", arg: 4, scope: !2051, file: !1, line: 665, type: !145)
!2074 = !DILocation(line: 665, column: 40, scope: !2051)
!2075 = !DILocalVariable(name: "loopnors", arg: 5, scope: !2051, file: !1, line: 665, type: !143)
!2076 = !DILocation(line: 665, column: 67, scope: !2051)
!2077 = !DILocalVariable(name: "loopuvs", arg: 6, scope: !2051, file: !1, line: 665, type: !135)
!2078 = !DILocation(line: 665, column: 90, scope: !2051)
!2079 = !DILocalVariable(name: "UNUSED_numLoops", arg: 7, scope: !2051, file: !1, line: 666, type: !169)
!2080 = !DILocation(line: 666, column: 42, scope: !2051)
!2081 = !DILocalVariable(name: "mpolys", arg: 8, scope: !2051, file: !1, line: 666, type: !107)
!2082 = !DILocation(line: 666, column: 67, scope: !2051)
!2083 = !DILocalVariable(name: "numPolys", arg: 9, scope: !2051, file: !1, line: 666, type: !169)
!2084 = !DILocation(line: 666, column: 85, scope: !2051)
!2085 = !DILocalVariable(name: "reports", arg: 10, scope: !2051, file: !1, line: 666, type: !2054)
!2086 = !DILocation(line: 666, column: 107, scope: !2051)
!2087 = !DILocalVariable(name: "mesh_to_tangent", scope: !2051, file: !1, line: 668, type: !103)
!2088 = !DILocation(line: 668, column: 19, scope: !2051)
!2089 = !DILocalVariable(name: "s_context", scope: !2051, file: !1, line: 669, type: !2090)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "SMikkTSpaceContext", file: !2091, line: 63, baseType: !2092)
!2091 = !DIFile(filename: "blender/intern/mikktspace/mikktspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SMikkTSpaceContext", file: !2091, line: 106, size: 128, elements: !2093)
!2093 = !{!2094, !2125}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "m_pInterface", scope: !2092, file: !2091, line: 108, baseType: !2095, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "SMikkTSpaceInterface", file: !2091, line: 104, baseType: !2097)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2091, line: 65, size: 448, elements: !2098)
!2098 = !{!2099, !2105, !2109, !2113, !2114, !2115, !2119}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNumFaces", scope: !2097, file: !2091, line: 67, baseType: !2100, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!93, !2103}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2090)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNumVerticesOfFace", scope: !2097, file: !2091, line: 71, baseType: !2106, size: 64, offset: 64)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{!93, !2103, !169}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "m_getPosition", scope: !2097, file: !2091, line: 75, baseType: !2110, size: 64, offset: 128)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{null, !2103, !555, !169, !169}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNormal", scope: !2097, file: !2091, line: 76, baseType: !2110, size: 64, offset: 192)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "m_getTexCoord", scope: !2097, file: !2091, line: 77, baseType: !2110, size: 64, offset: 256)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "m_setTSpaceBasic", scope: !2097, file: !2091, line: 89, baseType: !2116, size: 64, offset: 320)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{null, !2103, !661, !87, !169, !169}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "m_setTSpace", scope: !2097, file: !2091, line: 102, baseType: !2120, size: 64, offset: 384)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{null, !2103, !661, !661, !87, !87, !2123, !169, !169}
!2123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2124)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "tbool", file: !2091, line: 62, baseType: !93)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "m_pUserData", scope: !2092, file: !2091, line: 109, baseType: !80, size: 64, offset: 64)
!2126 = !DILocation(line: 669, column: 21, scope: !2051)
!2127 = !DILocalVariable(name: "s_interface", scope: !2051, file: !1, line: 670, type: !2096)
!2128 = !DILocation(line: 670, column: 23, scope: !2051)
!2129 = !DILocalVariable(name: "mp", scope: !2051, file: !1, line: 672, type: !107)
!2130 = !DILocation(line: 672, column: 9, scope: !2051)
!2131 = !DILocalVariable(name: "mp_index", scope: !2051, file: !1, line: 673, type: !93)
!2132 = !DILocation(line: 673, column: 6, scope: !2051)
!2133 = !DILocation(line: 676, column: 12, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2051, file: !1, line: 676, column: 2)
!2135 = !DILocation(line: 676, column: 10, scope: !2134)
!2136 = !DILocation(line: 676, column: 29, scope: !2134)
!2137 = !DILocation(line: 676, column: 7, scope: !2134)
!2138 = !DILocation(line: 676, column: 34, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2134, file: !1, line: 676, column: 2)
!2140 = !DILocation(line: 676, column: 45, scope: !2139)
!2141 = !DILocation(line: 676, column: 43, scope: !2139)
!2142 = !DILocation(line: 676, column: 2, scope: !2134)
!2143 = !DILocation(line: 677, column: 7, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !1, line: 677, column: 7)
!2145 = distinct !DILexicalBlock(scope: !2139, file: !1, line: 676, column: 73)
!2146 = !DILocation(line: 677, column: 11, scope: !2144)
!2147 = !DILocation(line: 677, column: 19, scope: !2144)
!2148 = !DILocation(line: 677, column: 7, scope: !2145)
!2149 = !DILocation(line: 678, column: 15, scope: !2150)
!2150 = distinct !DILexicalBlock(scope: !2144, file: !1, line: 677, column: 24)
!2151 = !DILocation(line: 678, column: 4, scope: !2150)
!2152 = !DILocation(line: 679, column: 4, scope: !2150)
!2153 = !DILocation(line: 681, column: 2, scope: !2145)
!2154 = !DILocation(line: 676, column: 57, scope: !2139)
!2155 = !DILocation(line: 676, column: 69, scope: !2139)
!2156 = !DILocation(line: 676, column: 2, scope: !2139)
!2157 = distinct !{!2157, !2142, !2158}
!2158 = !DILocation(line: 681, column: 2, scope: !2134)
!2159 = !DILocation(line: 684, column: 27, scope: !2051)
!2160 = !DILocation(line: 684, column: 18, scope: !2051)
!2161 = !DILocation(line: 684, column: 25, scope: !2051)
!2162 = !DILocation(line: 685, column: 27, scope: !2051)
!2163 = !DILocation(line: 685, column: 18, scope: !2051)
!2164 = !DILocation(line: 685, column: 25, scope: !2051)
!2165 = !DILocation(line: 686, column: 27, scope: !2051)
!2166 = !DILocation(line: 686, column: 18, scope: !2051)
!2167 = !DILocation(line: 686, column: 25, scope: !2051)
!2168 = !DILocation(line: 687, column: 25, scope: !2051)
!2169 = !DILocation(line: 687, column: 18, scope: !2051)
!2170 = !DILocation(line: 687, column: 23, scope: !2051)
!2171 = !DILocation(line: 688, column: 26, scope: !2051)
!2172 = !DILocation(line: 688, column: 18, scope: !2051)
!2173 = !DILocation(line: 688, column: 24, scope: !2051)
!2174 = !DILocation(line: 689, column: 29, scope: !2051)
!2175 = !DILocation(line: 689, column: 18, scope: !2051)
!2176 = !DILocation(line: 689, column: 27, scope: !2051)
!2177 = !DILocation(line: 690, column: 30, scope: !2051)
!2178 = !DILocation(line: 690, column: 18, scope: !2051)
!2179 = !DILocation(line: 690, column: 28, scope: !2051)
!2180 = !DILocation(line: 692, column: 26, scope: !2051)
!2181 = !DILocation(line: 692, column: 12, scope: !2051)
!2182 = !DILocation(line: 692, column: 24, scope: !2051)
!2183 = !DILocation(line: 693, column: 12, scope: !2051)
!2184 = !DILocation(line: 693, column: 25, scope: !2051)
!2185 = !DILocation(line: 694, column: 14, scope: !2051)
!2186 = !DILocation(line: 694, column: 28, scope: !2051)
!2187 = !DILocation(line: 695, column: 14, scope: !2051)
!2188 = !DILocation(line: 695, column: 37, scope: !2051)
!2189 = !DILocation(line: 696, column: 14, scope: !2051)
!2190 = !DILocation(line: 696, column: 28, scope: !2051)
!2191 = !DILocation(line: 697, column: 14, scope: !2051)
!2192 = !DILocation(line: 697, column: 28, scope: !2051)
!2193 = !DILocation(line: 698, column: 14, scope: !2051)
!2194 = !DILocation(line: 698, column: 26, scope: !2051)
!2195 = !DILocation(line: 699, column: 14, scope: !2051)
!2196 = !DILocation(line: 699, column: 31, scope: !2051)
!2197 = !DILocation(line: 702, column: 6, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2051, file: !1, line: 702, column: 6)
!2199 = !DILocation(line: 702, column: 38, scope: !2198)
!2200 = !DILocation(line: 702, column: 6, scope: !2051)
!2201 = !DILocation(line: 703, column: 14, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2198, file: !1, line: 702, column: 48)
!2203 = !DILocation(line: 703, column: 3, scope: !2202)
!2204 = !DILocation(line: 704, column: 2, scope: !2202)
!2205 = !DILocation(line: 705, column: 1, scope: !2051)
!2206 = distinct !DISubprogram(name: "get_num_faces", scope: !1, file: !1, line: 618, type: !2101, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2207 = !DILocalVariable(name: "pContext", arg: 1, scope: !2206, file: !1, line: 618, type: !2103)
!2208 = !DILocation(line: 618, column: 52, scope: !2206)
!2209 = !DILocalVariable(name: "p_mesh", scope: !2206, file: !1, line: 620, type: !102)
!2210 = !DILocation(line: 620, column: 20, scope: !2206)
!2211 = !DILocation(line: 620, column: 49, scope: !2206)
!2212 = !DILocation(line: 620, column: 59, scope: !2206)
!2213 = !DILocation(line: 620, column: 29, scope: !2206)
!2214 = !DILocation(line: 621, column: 9, scope: !2206)
!2215 = !DILocation(line: 621, column: 17, scope: !2206)
!2216 = !DILocation(line: 621, column: 2, scope: !2206)
!2217 = distinct !DISubprogram(name: "get_num_verts_of_face", scope: !1, file: !1, line: 624, type: !2107, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2218 = !DILocalVariable(name: "pContext", arg: 1, scope: !2217, file: !1, line: 624, type: !2103)
!2219 = !DILocation(line: 624, column: 60, scope: !2217)
!2220 = !DILocalVariable(name: "face_idx", arg: 2, scope: !2217, file: !1, line: 624, type: !169)
!2221 = !DILocation(line: 624, column: 80, scope: !2217)
!2222 = !DILocalVariable(name: "p_mesh", scope: !2217, file: !1, line: 626, type: !102)
!2223 = !DILocation(line: 626, column: 20, scope: !2217)
!2224 = !DILocation(line: 626, column: 49, scope: !2217)
!2225 = !DILocation(line: 626, column: 59, scope: !2217)
!2226 = !DILocation(line: 626, column: 29, scope: !2217)
!2227 = !DILocation(line: 627, column: 9, scope: !2217)
!2228 = !DILocation(line: 627, column: 17, scope: !2217)
!2229 = !DILocation(line: 627, column: 24, scope: !2217)
!2230 = !DILocation(line: 627, column: 34, scope: !2217)
!2231 = !DILocation(line: 627, column: 2, scope: !2217)
!2232 = distinct !DISubprogram(name: "get_position", scope: !1, file: !1, line: 630, type: !2111, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2233 = !DILocalVariable(name: "pContext", arg: 1, scope: !2232, file: !1, line: 630, type: !2103)
!2234 = !DILocation(line: 630, column: 52, scope: !2232)
!2235 = !DILocalVariable(name: "r_co", arg: 2, scope: !2232, file: !1, line: 630, type: !555)
!2236 = !DILocation(line: 630, column: 68, scope: !2232)
!2237 = !DILocalVariable(name: "face_idx", arg: 3, scope: !2232, file: !1, line: 630, type: !169)
!2238 = !DILocation(line: 630, column: 87, scope: !2232)
!2239 = !DILocalVariable(name: "vert_idx", arg: 4, scope: !2232, file: !1, line: 630, type: !169)
!2240 = !DILocation(line: 630, column: 107, scope: !2232)
!2241 = !DILocalVariable(name: "p_mesh", scope: !2232, file: !1, line: 632, type: !102)
!2242 = !DILocation(line: 632, column: 20, scope: !2232)
!2243 = !DILocation(line: 632, column: 49, scope: !2232)
!2244 = !DILocation(line: 632, column: 59, scope: !2232)
!2245 = !DILocation(line: 632, column: 29, scope: !2232)
!2246 = !DILocalVariable(name: "loop_idx", scope: !2232, file: !1, line: 633, type: !169)
!2247 = !DILocation(line: 633, column: 12, scope: !2232)
!2248 = !DILocation(line: 633, column: 23, scope: !2232)
!2249 = !DILocation(line: 633, column: 31, scope: !2232)
!2250 = !DILocation(line: 633, column: 38, scope: !2232)
!2251 = !DILocation(line: 633, column: 48, scope: !2232)
!2252 = !DILocation(line: 633, column: 60, scope: !2232)
!2253 = !DILocation(line: 633, column: 58, scope: !2232)
!2254 = !DILocation(line: 634, column: 13, scope: !2232)
!2255 = !DILocation(line: 634, column: 19, scope: !2232)
!2256 = !DILocation(line: 634, column: 27, scope: !2232)
!2257 = !DILocation(line: 634, column: 34, scope: !2232)
!2258 = !DILocation(line: 634, column: 42, scope: !2232)
!2259 = !DILocation(line: 634, column: 49, scope: !2232)
!2260 = !DILocation(line: 634, column: 59, scope: !2232)
!2261 = !DILocation(line: 634, column: 62, scope: !2232)
!2262 = !DILocation(line: 634, column: 2, scope: !2232)
!2263 = !DILocation(line: 635, column: 1, scope: !2232)
!2264 = distinct !DISubprogram(name: "get_texture_coordinate", scope: !1, file: !1, line: 637, type: !2111, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2265 = !DILocalVariable(name: "pContext", arg: 1, scope: !2264, file: !1, line: 637, type: !2103)
!2266 = !DILocation(line: 637, column: 62, scope: !2264)
!2267 = !DILocalVariable(name: "r_uv", arg: 2, scope: !2264, file: !1, line: 637, type: !555)
!2268 = !DILocation(line: 637, column: 78, scope: !2264)
!2269 = !DILocalVariable(name: "face_idx", arg: 3, scope: !2264, file: !1, line: 637, type: !169)
!2270 = !DILocation(line: 637, column: 97, scope: !2264)
!2271 = !DILocalVariable(name: "vert_idx", arg: 4, scope: !2264, file: !1, line: 638, type: !169)
!2272 = !DILocation(line: 638, column: 46, scope: !2264)
!2273 = !DILocalVariable(name: "p_mesh", scope: !2264, file: !1, line: 640, type: !102)
!2274 = !DILocation(line: 640, column: 20, scope: !2264)
!2275 = !DILocation(line: 640, column: 49, scope: !2264)
!2276 = !DILocation(line: 640, column: 59, scope: !2264)
!2277 = !DILocation(line: 640, column: 29, scope: !2264)
!2278 = !DILocation(line: 641, column: 13, scope: !2264)
!2279 = !DILocation(line: 641, column: 19, scope: !2264)
!2280 = !DILocation(line: 641, column: 27, scope: !2264)
!2281 = !DILocation(line: 641, column: 32, scope: !2264)
!2282 = !DILocation(line: 641, column: 40, scope: !2264)
!2283 = !DILocation(line: 641, column: 47, scope: !2264)
!2284 = !DILocation(line: 641, column: 57, scope: !2264)
!2285 = !DILocation(line: 641, column: 69, scope: !2264)
!2286 = !DILocation(line: 641, column: 67, scope: !2264)
!2287 = !DILocation(line: 641, column: 79, scope: !2264)
!2288 = !DILocation(line: 641, column: 2, scope: !2264)
!2289 = !DILocation(line: 642, column: 1, scope: !2264)
!2290 = distinct !DISubprogram(name: "get_normal", scope: !1, file: !1, line: 644, type: !2111, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2291 = !DILocalVariable(name: "pContext", arg: 1, scope: !2290, file: !1, line: 644, type: !2103)
!2292 = !DILocation(line: 644, column: 50, scope: !2290)
!2293 = !DILocalVariable(name: "r_no", arg: 2, scope: !2290, file: !1, line: 644, type: !555)
!2294 = !DILocation(line: 644, column: 66, scope: !2290)
!2295 = !DILocalVariable(name: "face_idx", arg: 3, scope: !2290, file: !1, line: 644, type: !169)
!2296 = !DILocation(line: 644, column: 85, scope: !2290)
!2297 = !DILocalVariable(name: "vert_idx", arg: 4, scope: !2290, file: !1, line: 644, type: !169)
!2298 = !DILocation(line: 644, column: 105, scope: !2290)
!2299 = !DILocalVariable(name: "p_mesh", scope: !2290, file: !1, line: 646, type: !102)
!2300 = !DILocation(line: 646, column: 20, scope: !2290)
!2301 = !DILocation(line: 646, column: 49, scope: !2290)
!2302 = !DILocation(line: 646, column: 59, scope: !2290)
!2303 = !DILocation(line: 646, column: 29, scope: !2290)
!2304 = !DILocation(line: 647, column: 13, scope: !2290)
!2305 = !DILocation(line: 647, column: 19, scope: !2290)
!2306 = !DILocation(line: 647, column: 27, scope: !2290)
!2307 = !DILocation(line: 647, column: 33, scope: !2290)
!2308 = !DILocation(line: 647, column: 41, scope: !2290)
!2309 = !DILocation(line: 647, column: 48, scope: !2290)
!2310 = !DILocation(line: 647, column: 58, scope: !2290)
!2311 = !DILocation(line: 647, column: 70, scope: !2290)
!2312 = !DILocation(line: 647, column: 68, scope: !2290)
!2313 = !DILocation(line: 647, column: 2, scope: !2290)
!2314 = !DILocation(line: 648, column: 1, scope: !2290)
!2315 = distinct !DISubprogram(name: "set_tspace", scope: !1, file: !1, line: 650, type: !2117, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2316 = !DILocalVariable(name: "pContext", arg: 1, scope: !2315, file: !1, line: 650, type: !2103)
!2317 = !DILocation(line: 650, column: 50, scope: !2315)
!2318 = !DILocalVariable(name: "fv_tangent", arg: 2, scope: !2315, file: !1, line: 650, type: !661)
!2319 = !DILocation(line: 650, column: 72, scope: !2315)
!2320 = !DILocalVariable(name: "face_sign", arg: 3, scope: !2315, file: !1, line: 650, type: !87)
!2321 = !DILocation(line: 650, column: 99, scope: !2315)
!2322 = !DILocalVariable(name: "face_idx", arg: 4, scope: !2315, file: !1, line: 651, type: !169)
!2323 = !DILocation(line: 651, column: 34, scope: !2315)
!2324 = !DILocalVariable(name: "vert_idx", arg: 5, scope: !2315, file: !1, line: 651, type: !169)
!2325 = !DILocation(line: 651, column: 54, scope: !2315)
!2326 = !DILocalVariable(name: "p_mesh", scope: !2315, file: !1, line: 653, type: !102)
!2327 = !DILocation(line: 653, column: 20, scope: !2315)
!2328 = !DILocation(line: 653, column: 49, scope: !2315)
!2329 = !DILocation(line: 653, column: 59, scope: !2315)
!2330 = !DILocation(line: 653, column: 29, scope: !2315)
!2331 = !DILocalVariable(name: "p_res", scope: !2315, file: !1, line: 654, type: !555)
!2332 = !DILocation(line: 654, column: 9, scope: !2315)
!2333 = !DILocation(line: 654, column: 17, scope: !2315)
!2334 = !DILocation(line: 654, column: 25, scope: !2315)
!2335 = !DILocation(line: 654, column: 34, scope: !2315)
!2336 = !DILocation(line: 654, column: 42, scope: !2315)
!2337 = !DILocation(line: 654, column: 49, scope: !2315)
!2338 = !DILocation(line: 654, column: 59, scope: !2315)
!2339 = !DILocation(line: 654, column: 71, scope: !2315)
!2340 = !DILocation(line: 654, column: 69, scope: !2315)
!2341 = !DILocation(line: 655, column: 13, scope: !2315)
!2342 = !DILocation(line: 655, column: 20, scope: !2315)
!2343 = !DILocation(line: 655, column: 2, scope: !2315)
!2344 = !DILocation(line: 656, column: 13, scope: !2315)
!2345 = !DILocation(line: 656, column: 2, scope: !2315)
!2346 = !DILocation(line: 656, column: 11, scope: !2315)
!2347 = !DILocation(line: 657, column: 1, scope: !2315)
!2348 = distinct !DISubprogram(name: "BKE_mesh_loop_tangents", scope: !1, file: !1, line: 712, type: !2349, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{null, !866, !2351, !145, !2054}
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !98)
!2353 = !DILocalVariable(name: "mesh", arg: 1, scope: !2348, file: !1, line: 712, type: !866)
!2354 = !DILocation(line: 712, column: 35, scope: !2348)
!2355 = !DILocalVariable(name: "uvmap", arg: 2, scope: !2348, file: !1, line: 712, type: !2351)
!2356 = !DILocation(line: 712, column: 53, scope: !2348)
!2357 = !DILocalVariable(name: "r_looptangents", arg: 3, scope: !2348, file: !1, line: 712, type: !145)
!2358 = !DILocation(line: 712, column: 68, scope: !2348)
!2359 = !DILocalVariable(name: "reports", arg: 4, scope: !2348, file: !1, line: 712, type: !2054)
!2360 = !DILocation(line: 712, column: 100, scope: !2348)
!2361 = !DILocalVariable(name: "loopuvs", scope: !2348, file: !1, line: 714, type: !135)
!2362 = !DILocation(line: 714, column: 11, scope: !2348)
!2363 = !DILocalVariable(name: "loopnors", scope: !2348, file: !1, line: 715, type: !143)
!2364 = !DILocation(line: 715, column: 10, scope: !2348)
!2365 = !DILocation(line: 718, column: 6, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2348, file: !1, line: 718, column: 6)
!2367 = !DILocation(line: 718, column: 6, scope: !2348)
!2368 = !DILocation(line: 719, column: 41, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2366, file: !1, line: 718, column: 13)
!2370 = !DILocation(line: 719, column: 47, scope: !2369)
!2371 = !DILocation(line: 719, column: 66, scope: !2369)
!2372 = !DILocation(line: 719, column: 13, scope: !2369)
!2373 = !DILocation(line: 719, column: 11, scope: !2369)
!2374 = !DILocation(line: 720, column: 2, scope: !2369)
!2375 = !DILocation(line: 722, column: 35, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2366, file: !1, line: 721, column: 7)
!2377 = !DILocation(line: 722, column: 41, scope: !2376)
!2378 = !DILocation(line: 722, column: 13, scope: !2376)
!2379 = !DILocation(line: 722, column: 11, scope: !2376)
!2380 = !DILocation(line: 724, column: 7, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2348, file: !1, line: 724, column: 6)
!2382 = !DILocation(line: 724, column: 6, scope: !2348)
!2383 = !DILocation(line: 725, column: 15, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 724, column: 16)
!2385 = !DILocation(line: 725, column: 107, scope: !2384)
!2386 = !DILocation(line: 725, column: 3, scope: !2384)
!2387 = !DILocation(line: 726, column: 3, scope: !2384)
!2388 = !DILocation(line: 729, column: 35, scope: !2348)
!2389 = !DILocation(line: 729, column: 41, scope: !2348)
!2390 = !DILocation(line: 729, column: 13, scope: !2348)
!2391 = !DILocation(line: 729, column: 11, scope: !2348)
!2392 = !DILocation(line: 730, column: 7, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2348, file: !1, line: 730, column: 6)
!2394 = !DILocation(line: 730, column: 6, scope: !2348)
!2395 = !DILocation(line: 731, column: 14, scope: !2396)
!2396 = distinct !DILexicalBlock(scope: !2393, file: !1, line: 730, column: 17)
!2397 = !DILocation(line: 731, column: 3, scope: !2396)
!2398 = !DILocation(line: 732, column: 3, scope: !2396)
!2399 = !DILocation(line: 735, column: 28, scope: !2348)
!2400 = !DILocation(line: 735, column: 34, scope: !2348)
!2401 = !DILocation(line: 735, column: 41, scope: !2348)
!2402 = !DILocation(line: 735, column: 47, scope: !2348)
!2403 = !DILocation(line: 735, column: 56, scope: !2348)
!2404 = !DILocation(line: 735, column: 62, scope: !2348)
!2405 = !DILocation(line: 735, column: 69, scope: !2348)
!2406 = !DILocation(line: 736, column: 28, scope: !2348)
!2407 = !DILocation(line: 736, column: 38, scope: !2348)
!2408 = !DILocation(line: 736, column: 47, scope: !2348)
!2409 = !DILocation(line: 736, column: 53, scope: !2348)
!2410 = !DILocation(line: 736, column: 62, scope: !2348)
!2411 = !DILocation(line: 736, column: 68, scope: !2348)
!2412 = !DILocation(line: 736, column: 75, scope: !2348)
!2413 = !DILocation(line: 736, column: 81, scope: !2348)
!2414 = !DILocation(line: 736, column: 90, scope: !2348)
!2415 = !DILocation(line: 735, column: 2, scope: !2348)
!2416 = !DILocation(line: 737, column: 1, scope: !2348)
!2417 = distinct !DISubprogram(name: "mesh_calc_ngon_normal", scope: !1, file: !1, line: 755, type: !581, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2418 = !DILocalVariable(name: "mpoly", arg: 1, scope: !2417, file: !1, line: 755, type: !107)
!2419 = !DILocation(line: 755, column: 42, scope: !2417)
!2420 = !DILocalVariable(name: "loopstart", arg: 2, scope: !2417, file: !1, line: 755, type: !117)
!2421 = !DILocation(line: 755, column: 56, scope: !2417)
!2422 = !DILocalVariable(name: "mvert", arg: 3, scope: !2417, file: !1, line: 756, type: !124)
!2423 = !DILocation(line: 756, column: 42, scope: !2417)
!2424 = !DILocalVariable(name: "normal", arg: 4, scope: !2417, file: !1, line: 756, type: !555)
!2425 = !DILocation(line: 756, column: 55, scope: !2417)
!2426 = !DILocalVariable(name: "nverts", scope: !2417, file: !1, line: 758, type: !169)
!2427 = !DILocation(line: 758, column: 12, scope: !2417)
!2428 = !DILocation(line: 758, column: 21, scope: !2417)
!2429 = !DILocation(line: 758, column: 28, scope: !2417)
!2430 = !DILocalVariable(name: "v_prev", scope: !2417, file: !1, line: 759, type: !661)
!2431 = !DILocation(line: 759, column: 15, scope: !2417)
!2432 = !DILocation(line: 759, column: 24, scope: !2417)
!2433 = !DILocation(line: 759, column: 30, scope: !2417)
!2434 = !DILocation(line: 759, column: 40, scope: !2417)
!2435 = !DILocation(line: 759, column: 47, scope: !2417)
!2436 = !DILocation(line: 759, column: 52, scope: !2417)
!2437 = !DILocation(line: 759, column: 55, scope: !2417)
!2438 = !DILocalVariable(name: "v_curr", scope: !2417, file: !1, line: 760, type: !661)
!2439 = !DILocation(line: 760, column: 15, scope: !2417)
!2440 = !DILocalVariable(name: "i", scope: !2417, file: !1, line: 761, type: !93)
!2441 = !DILocation(line: 761, column: 6, scope: !2417)
!2442 = !DILocation(line: 763, column: 10, scope: !2417)
!2443 = !DILocation(line: 763, column: 2, scope: !2417)
!2444 = !DILocation(line: 766, column: 9, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !2417, file: !1, line: 766, column: 2)
!2446 = !DILocation(line: 766, column: 7, scope: !2445)
!2447 = !DILocation(line: 766, column: 14, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2445, file: !1, line: 766, column: 2)
!2449 = !DILocation(line: 766, column: 18, scope: !2448)
!2450 = !DILocation(line: 766, column: 16, scope: !2448)
!2451 = !DILocation(line: 766, column: 2, scope: !2445)
!2452 = !DILocation(line: 767, column: 12, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2448, file: !1, line: 766, column: 31)
!2454 = !DILocation(line: 767, column: 18, scope: !2453)
!2455 = !DILocation(line: 767, column: 28, scope: !2453)
!2456 = !DILocation(line: 767, column: 31, scope: !2453)
!2457 = !DILocation(line: 767, column: 34, scope: !2453)
!2458 = !DILocation(line: 767, column: 10, scope: !2453)
!2459 = !DILocation(line: 768, column: 28, scope: !2453)
!2460 = !DILocation(line: 768, column: 36, scope: !2453)
!2461 = !DILocation(line: 768, column: 44, scope: !2453)
!2462 = !DILocation(line: 768, column: 3, scope: !2453)
!2463 = !DILocation(line: 769, column: 12, scope: !2453)
!2464 = !DILocation(line: 769, column: 10, scope: !2453)
!2465 = !DILocation(line: 770, column: 2, scope: !2453)
!2466 = !DILocation(line: 766, column: 27, scope: !2448)
!2467 = !DILocation(line: 766, column: 2, scope: !2448)
!2468 = distinct !{!2468, !2451, !2469}
!2469 = !DILocation(line: 770, column: 2, scope: !2445)
!2470 = !DILocation(line: 772, column: 6, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2417, file: !1, line: 772, column: 6)
!2472 = !DILocation(line: 772, column: 6, scope: !2417)
!2473 = !DILocation(line: 773, column: 3, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2471, file: !1, line: 772, column: 46)
!2475 = !DILocation(line: 773, column: 13, scope: !2474)
!2476 = !DILocation(line: 774, column: 2, scope: !2474)
!2477 = !DILocation(line: 775, column: 1, scope: !2417)
!2478 = distinct !DISubprogram(name: "BKE_mesh_calc_poly_normal_coords", scope: !1, file: !1, line: 827, type: !2479, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{null, !107, !117, !85, !555}
!2481 = !DILocalVariable(name: "mpoly", arg: 1, scope: !2478, file: !1, line: 827, type: !107)
!2482 = !DILocation(line: 827, column: 46, scope: !2478)
!2483 = !DILocalVariable(name: "loopstart", arg: 2, scope: !2478, file: !1, line: 827, type: !117)
!2484 = !DILocation(line: 827, column: 60, scope: !2478)
!2485 = !DILocalVariable(name: "vertex_coords", arg: 3, scope: !2478, file: !1, line: 828, type: !85)
!2486 = !DILocation(line: 828, column: 53, scope: !2478)
!2487 = !DILocalVariable(name: "no", arg: 4, scope: !2478, file: !1, line: 828, type: !555)
!2488 = !DILocation(line: 828, column: 78, scope: !2478)
!2489 = !DILocation(line: 830, column: 6, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2478, file: !1, line: 830, column: 6)
!2491 = !DILocation(line: 830, column: 13, scope: !2490)
!2492 = !DILocation(line: 830, column: 21, scope: !2490)
!2493 = !DILocation(line: 830, column: 6, scope: !2478)
!2494 = !DILocation(line: 831, column: 32, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2490, file: !1, line: 830, column: 26)
!2496 = !DILocation(line: 831, column: 39, scope: !2495)
!2497 = !DILocation(line: 831, column: 50, scope: !2495)
!2498 = !DILocation(line: 831, column: 65, scope: !2495)
!2499 = !DILocation(line: 831, column: 3, scope: !2495)
!2500 = !DILocation(line: 832, column: 2, scope: !2495)
!2501 = !DILocation(line: 833, column: 11, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2490, file: !1, line: 833, column: 11)
!2503 = !DILocation(line: 833, column: 18, scope: !2502)
!2504 = !DILocation(line: 833, column: 26, scope: !2502)
!2505 = !DILocation(line: 833, column: 11, scope: !2490)
!2506 = !DILocation(line: 834, column: 17, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2502, file: !1, line: 833, column: 32)
!2508 = !DILocation(line: 835, column: 17, scope: !2507)
!2509 = !DILocation(line: 835, column: 31, scope: !2507)
!2510 = !DILocation(line: 835, column: 44, scope: !2507)
!2511 = !DILocation(line: 836, column: 17, scope: !2507)
!2512 = !DILocation(line: 836, column: 31, scope: !2507)
!2513 = !DILocation(line: 836, column: 44, scope: !2507)
!2514 = !DILocation(line: 837, column: 17, scope: !2507)
!2515 = !DILocation(line: 837, column: 31, scope: !2507)
!2516 = !DILocation(line: 837, column: 44, scope: !2507)
!2517 = !DILocation(line: 834, column: 3, scope: !2507)
!2518 = !DILocation(line: 839, column: 2, scope: !2507)
!2519 = !DILocation(line: 840, column: 11, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2502, file: !1, line: 840, column: 11)
!2521 = !DILocation(line: 840, column: 18, scope: !2520)
!2522 = !DILocation(line: 840, column: 26, scope: !2520)
!2523 = !DILocation(line: 840, column: 11, scope: !2502)
!2524 = !DILocation(line: 841, column: 18, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2520, file: !1, line: 840, column: 32)
!2526 = !DILocation(line: 842, column: 18, scope: !2525)
!2527 = !DILocation(line: 842, column: 32, scope: !2525)
!2528 = !DILocation(line: 842, column: 45, scope: !2525)
!2529 = !DILocation(line: 843, column: 18, scope: !2525)
!2530 = !DILocation(line: 843, column: 32, scope: !2525)
!2531 = !DILocation(line: 843, column: 45, scope: !2525)
!2532 = !DILocation(line: 844, column: 18, scope: !2525)
!2533 = !DILocation(line: 844, column: 32, scope: !2525)
!2534 = !DILocation(line: 844, column: 45, scope: !2525)
!2535 = !DILocation(line: 845, column: 18, scope: !2525)
!2536 = !DILocation(line: 845, column: 32, scope: !2525)
!2537 = !DILocation(line: 845, column: 45, scope: !2525)
!2538 = !DILocation(line: 841, column: 3, scope: !2525)
!2539 = !DILocation(line: 847, column: 2, scope: !2525)
!2540 = !DILocation(line: 849, column: 3, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2520, file: !1, line: 848, column: 7)
!2542 = !DILocation(line: 849, column: 9, scope: !2541)
!2543 = !DILocation(line: 850, column: 3, scope: !2541)
!2544 = !DILocation(line: 850, column: 9, scope: !2541)
!2545 = !DILocation(line: 851, column: 3, scope: !2541)
!2546 = !DILocation(line: 851, column: 9, scope: !2541)
!2547 = !DILocation(line: 853, column: 1, scope: !2478)
!2548 = distinct !DISubprogram(name: "mesh_calc_ngon_normal_coords", scope: !1, file: !1, line: 805, type: !2479, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2549 = !DILocalVariable(name: "mpoly", arg: 1, scope: !2548, file: !1, line: 805, type: !107)
!2550 = !DILocation(line: 805, column: 49, scope: !2548)
!2551 = !DILocalVariable(name: "loopstart", arg: 2, scope: !2548, file: !1, line: 805, type: !117)
!2552 = !DILocation(line: 805, column: 63, scope: !2548)
!2553 = !DILocalVariable(name: "vertex_coords", arg: 3, scope: !2548, file: !1, line: 806, type: !85)
!2554 = !DILocation(line: 806, column: 56, scope: !2548)
!2555 = !DILocalVariable(name: "normal", arg: 4, scope: !2548, file: !1, line: 806, type: !555)
!2556 = !DILocation(line: 806, column: 81, scope: !2548)
!2557 = !DILocalVariable(name: "nverts", scope: !2548, file: !1, line: 808, type: !169)
!2558 = !DILocation(line: 808, column: 12, scope: !2548)
!2559 = !DILocation(line: 808, column: 21, scope: !2548)
!2560 = !DILocation(line: 808, column: 28, scope: !2548)
!2561 = !DILocalVariable(name: "v_prev", scope: !2548, file: !1, line: 809, type: !661)
!2562 = !DILocation(line: 809, column: 15, scope: !2548)
!2563 = !DILocation(line: 809, column: 24, scope: !2548)
!2564 = !DILocation(line: 809, column: 38, scope: !2548)
!2565 = !DILocation(line: 809, column: 48, scope: !2548)
!2566 = !DILocation(line: 809, column: 55, scope: !2548)
!2567 = !DILocation(line: 809, column: 60, scope: !2548)
!2568 = !DILocalVariable(name: "v_curr", scope: !2548, file: !1, line: 810, type: !661)
!2569 = !DILocation(line: 810, column: 15, scope: !2548)
!2570 = !DILocalVariable(name: "i", scope: !2548, file: !1, line: 811, type: !93)
!2571 = !DILocation(line: 811, column: 6, scope: !2548)
!2572 = !DILocation(line: 813, column: 10, scope: !2548)
!2573 = !DILocation(line: 813, column: 2, scope: !2548)
!2574 = !DILocation(line: 816, column: 9, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2548, file: !1, line: 816, column: 2)
!2576 = !DILocation(line: 816, column: 7, scope: !2575)
!2577 = !DILocation(line: 816, column: 14, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2575, file: !1, line: 816, column: 2)
!2579 = !DILocation(line: 816, column: 18, scope: !2578)
!2580 = !DILocation(line: 816, column: 16, scope: !2578)
!2581 = !DILocation(line: 816, column: 2, scope: !2575)
!2582 = !DILocation(line: 817, column: 12, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2578, file: !1, line: 816, column: 31)
!2584 = !DILocation(line: 817, column: 26, scope: !2583)
!2585 = !DILocation(line: 817, column: 36, scope: !2583)
!2586 = !DILocation(line: 817, column: 39, scope: !2583)
!2587 = !DILocation(line: 817, column: 10, scope: !2583)
!2588 = !DILocation(line: 818, column: 28, scope: !2583)
!2589 = !DILocation(line: 818, column: 36, scope: !2583)
!2590 = !DILocation(line: 818, column: 44, scope: !2583)
!2591 = !DILocation(line: 818, column: 3, scope: !2583)
!2592 = !DILocation(line: 819, column: 12, scope: !2583)
!2593 = !DILocation(line: 819, column: 10, scope: !2583)
!2594 = !DILocation(line: 820, column: 2, scope: !2583)
!2595 = !DILocation(line: 816, column: 27, scope: !2578)
!2596 = !DILocation(line: 816, column: 2, scope: !2578)
!2597 = distinct !{!2597, !2581, !2598}
!2598 = !DILocation(line: 820, column: 2, scope: !2575)
!2599 = !DILocation(line: 822, column: 6, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2548, file: !1, line: 822, column: 6)
!2601 = !DILocation(line: 822, column: 6, scope: !2548)
!2602 = !DILocation(line: 823, column: 3, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2600, file: !1, line: 822, column: 46)
!2604 = !DILocation(line: 823, column: 13, scope: !2603)
!2605 = !DILocation(line: 824, column: 2, scope: !2603)
!2606 = !DILocation(line: 825, column: 1, scope: !2548)
!2607 = distinct !DISubprogram(name: "BKE_mesh_calc_poly_center", scope: !1, file: !1, line: 868, type: !581, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2608 = !DILocalVariable(name: "mpoly", arg: 1, scope: !2607, file: !1, line: 868, type: !107)
!2609 = !DILocation(line: 868, column: 39, scope: !2607)
!2610 = !DILocalVariable(name: "loopstart", arg: 2, scope: !2607, file: !1, line: 868, type: !117)
!2611 = !DILocation(line: 868, column: 53, scope: !2607)
!2612 = !DILocalVariable(name: "mvarray", arg: 3, scope: !2607, file: !1, line: 869, type: !124)
!2613 = !DILocation(line: 869, column: 39, scope: !2607)
!2614 = !DILocalVariable(name: "cent", arg: 4, scope: !2607, file: !1, line: 869, type: !555)
!2615 = !DILocation(line: 869, column: 54, scope: !2607)
!2616 = !DILocation(line: 871, column: 6, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2607, file: !1, line: 871, column: 6)
!2618 = !DILocation(line: 871, column: 13, scope: !2617)
!2619 = !DILocation(line: 871, column: 21, scope: !2617)
!2620 = !DILocation(line: 871, column: 6, scope: !2607)
!2621 = !DILocation(line: 872, column: 15, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2617, file: !1, line: 871, column: 27)
!2623 = !DILocation(line: 873, column: 15, scope: !2622)
!2624 = !DILocation(line: 873, column: 23, scope: !2622)
!2625 = !DILocation(line: 873, column: 36, scope: !2622)
!2626 = !DILocation(line: 873, column: 39, scope: !2622)
!2627 = !DILocation(line: 874, column: 15, scope: !2622)
!2628 = !DILocation(line: 874, column: 23, scope: !2622)
!2629 = !DILocation(line: 874, column: 36, scope: !2622)
!2630 = !DILocation(line: 874, column: 39, scope: !2622)
!2631 = !DILocation(line: 875, column: 15, scope: !2622)
!2632 = !DILocation(line: 875, column: 23, scope: !2622)
!2633 = !DILocation(line: 875, column: 36, scope: !2622)
!2634 = !DILocation(line: 875, column: 39, scope: !2622)
!2635 = !DILocation(line: 872, column: 3, scope: !2622)
!2636 = !DILocation(line: 877, column: 2, scope: !2622)
!2637 = !DILocation(line: 878, column: 11, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2617, file: !1, line: 878, column: 11)
!2639 = !DILocation(line: 878, column: 18, scope: !2638)
!2640 = !DILocation(line: 878, column: 26, scope: !2638)
!2641 = !DILocation(line: 878, column: 11, scope: !2617)
!2642 = !DILocation(line: 879, column: 16, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2638, file: !1, line: 878, column: 32)
!2644 = !DILocation(line: 880, column: 16, scope: !2643)
!2645 = !DILocation(line: 880, column: 24, scope: !2643)
!2646 = !DILocation(line: 880, column: 37, scope: !2643)
!2647 = !DILocation(line: 880, column: 40, scope: !2643)
!2648 = !DILocation(line: 881, column: 16, scope: !2643)
!2649 = !DILocation(line: 881, column: 24, scope: !2643)
!2650 = !DILocation(line: 881, column: 37, scope: !2643)
!2651 = !DILocation(line: 881, column: 40, scope: !2643)
!2652 = !DILocation(line: 882, column: 16, scope: !2643)
!2653 = !DILocation(line: 882, column: 24, scope: !2643)
!2654 = !DILocation(line: 882, column: 37, scope: !2643)
!2655 = !DILocation(line: 882, column: 40, scope: !2643)
!2656 = !DILocation(line: 883, column: 16, scope: !2643)
!2657 = !DILocation(line: 883, column: 24, scope: !2643)
!2658 = !DILocation(line: 883, column: 37, scope: !2643)
!2659 = !DILocation(line: 883, column: 40, scope: !2643)
!2660 = !DILocation(line: 879, column: 3, scope: !2643)
!2661 = !DILocation(line: 885, column: 2, scope: !2643)
!2662 = !DILocation(line: 887, column: 25, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2638, file: !1, line: 886, column: 7)
!2664 = !DILocation(line: 887, column: 32, scope: !2663)
!2665 = !DILocation(line: 887, column: 43, scope: !2663)
!2666 = !DILocation(line: 887, column: 52, scope: !2663)
!2667 = !DILocation(line: 887, column: 3, scope: !2663)
!2668 = !DILocation(line: 889, column: 1, scope: !2607)
!2669 = distinct !DISubprogram(name: "mesh_calc_ngon_center", scope: !1, file: !1, line: 855, type: !581, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2670 = !DILocalVariable(name: "mpoly", arg: 1, scope: !2669, file: !1, line: 855, type: !107)
!2671 = !DILocation(line: 855, column: 42, scope: !2669)
!2672 = !DILocalVariable(name: "loopstart", arg: 2, scope: !2669, file: !1, line: 855, type: !117)
!2673 = !DILocation(line: 855, column: 56, scope: !2669)
!2674 = !DILocalVariable(name: "mvert", arg: 3, scope: !2669, file: !1, line: 856, type: !124)
!2675 = !DILocation(line: 856, column: 42, scope: !2669)
!2676 = !DILocalVariable(name: "cent", arg: 4, scope: !2669, file: !1, line: 856, type: !555)
!2677 = !DILocation(line: 856, column: 55, scope: !2669)
!2678 = !DILocalVariable(name: "w", scope: !2669, file: !1, line: 858, type: !87)
!2679 = !DILocation(line: 858, column: 14, scope: !2669)
!2680 = !DILocation(line: 858, column: 32, scope: !2669)
!2681 = !DILocation(line: 858, column: 39, scope: !2669)
!2682 = !DILocation(line: 858, column: 25, scope: !2669)
!2683 = !DILocation(line: 858, column: 23, scope: !2669)
!2684 = !DILocalVariable(name: "i", scope: !2669, file: !1, line: 859, type: !93)
!2685 = !DILocation(line: 859, column: 6, scope: !2669)
!2686 = !DILocation(line: 861, column: 10, scope: !2669)
!2687 = !DILocation(line: 861, column: 2, scope: !2669)
!2688 = !DILocation(line: 863, column: 9, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 863, column: 2)
!2690 = !DILocation(line: 863, column: 7, scope: !2689)
!2691 = !DILocation(line: 863, column: 14, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2689, file: !1, line: 863, column: 2)
!2693 = !DILocation(line: 863, column: 18, scope: !2692)
!2694 = !DILocation(line: 863, column: 25, scope: !2692)
!2695 = !DILocation(line: 863, column: 16, scope: !2692)
!2696 = !DILocation(line: 863, column: 2, scope: !2689)
!2697 = !DILocation(line: 864, column: 16, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2692, file: !1, line: 863, column: 39)
!2699 = !DILocation(line: 864, column: 22, scope: !2698)
!2700 = !DILocation(line: 864, column: 38, scope: !2698)
!2701 = !DILocation(line: 864, column: 43, scope: !2698)
!2702 = !DILocation(line: 864, column: 46, scope: !2698)
!2703 = !DILocation(line: 864, column: 50, scope: !2698)
!2704 = !DILocation(line: 864, column: 3, scope: !2698)
!2705 = !DILocation(line: 865, column: 2, scope: !2698)
!2706 = !DILocation(line: 863, column: 35, scope: !2692)
!2707 = !DILocation(line: 863, column: 2, scope: !2692)
!2708 = distinct !{!2708, !2696, !2709}
!2709 = !DILocation(line: 865, column: 2, scope: !2689)
!2710 = !DILocation(line: 866, column: 1, scope: !2669)
!2711 = distinct !DISubprogram(name: "BKE_mesh_calc_poly_area", scope: !1, file: !1, line: 892, type: !2712, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!84, !107, !117, !124}
!2714 = !DILocalVariable(name: "mpoly", arg: 1, scope: !2711, file: !1, line: 892, type: !107)
!2715 = !DILocation(line: 892, column: 38, scope: !2711)
!2716 = !DILocalVariable(name: "loopstart", arg: 2, scope: !2711, file: !1, line: 892, type: !117)
!2717 = !DILocation(line: 892, column: 52, scope: !2711)
!2718 = !DILocalVariable(name: "mvarray", arg: 3, scope: !2711, file: !1, line: 893, type: !124)
!2719 = !DILocation(line: 893, column: 38, scope: !2711)
!2720 = !DILocation(line: 895, column: 6, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2711, file: !1, line: 895, column: 6)
!2722 = !DILocation(line: 895, column: 13, scope: !2721)
!2723 = !DILocation(line: 895, column: 21, scope: !2721)
!2724 = !DILocation(line: 895, column: 6, scope: !2711)
!2725 = !DILocation(line: 896, column: 22, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 895, column: 27)
!2727 = !DILocation(line: 896, column: 30, scope: !2726)
!2728 = !DILocation(line: 896, column: 43, scope: !2726)
!2729 = !DILocation(line: 896, column: 46, scope: !2726)
!2730 = !DILocation(line: 897, column: 22, scope: !2726)
!2731 = !DILocation(line: 897, column: 30, scope: !2726)
!2732 = !DILocation(line: 897, column: 43, scope: !2726)
!2733 = !DILocation(line: 897, column: 46, scope: !2726)
!2734 = !DILocation(line: 898, column: 22, scope: !2726)
!2735 = !DILocation(line: 898, column: 30, scope: !2726)
!2736 = !DILocation(line: 898, column: 43, scope: !2726)
!2737 = !DILocation(line: 898, column: 46, scope: !2726)
!2738 = !DILocation(line: 896, column: 10, scope: !2726)
!2739 = !DILocation(line: 896, column: 3, scope: !2726)
!2740 = !DILocation(line: 901, column: 11, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2721, file: !1, line: 901, column: 11)
!2742 = !DILocation(line: 901, column: 18, scope: !2741)
!2743 = !DILocation(line: 901, column: 26, scope: !2741)
!2744 = !DILocation(line: 901, column: 11, scope: !2721)
!2745 = !DILocation(line: 902, column: 23, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2741, file: !1, line: 901, column: 32)
!2747 = !DILocation(line: 902, column: 31, scope: !2746)
!2748 = !DILocation(line: 902, column: 44, scope: !2746)
!2749 = !DILocation(line: 902, column: 47, scope: !2746)
!2750 = !DILocation(line: 903, column: 23, scope: !2746)
!2751 = !DILocation(line: 903, column: 31, scope: !2746)
!2752 = !DILocation(line: 903, column: 44, scope: !2746)
!2753 = !DILocation(line: 903, column: 47, scope: !2746)
!2754 = !DILocation(line: 904, column: 23, scope: !2746)
!2755 = !DILocation(line: 904, column: 31, scope: !2746)
!2756 = !DILocation(line: 904, column: 44, scope: !2746)
!2757 = !DILocation(line: 904, column: 47, scope: !2746)
!2758 = !DILocation(line: 905, column: 23, scope: !2746)
!2759 = !DILocation(line: 905, column: 31, scope: !2746)
!2760 = !DILocation(line: 905, column: 44, scope: !2746)
!2761 = !DILocation(line: 905, column: 47, scope: !2746)
!2762 = !DILocation(line: 902, column: 10, scope: !2746)
!2763 = !DILocation(line: 902, column: 3, scope: !2746)
!2764 = !DILocalVariable(name: "i", scope: !2765, file: !1, line: 909, type: !93)
!2765 = distinct !DILexicalBlock(scope: !2741, file: !1, line: 908, column: 7)
!2766 = !DILocation(line: 909, column: 7, scope: !2765)
!2767 = !DILocalVariable(name: "l_iter", scope: !2765, file: !1, line: 910, type: !117)
!2768 = !DILocation(line: 910, column: 10, scope: !2765)
!2769 = !DILocation(line: 910, column: 19, scope: !2765)
!2770 = !DILocalVariable(name: "area", scope: !2765, file: !1, line: 911, type: !84)
!2771 = !DILocation(line: 911, column: 9, scope: !2765)
!2772 = !DILocalVariable(name: "vertexcos", scope: !2765, file: !1, line: 912, type: !143)
!2773 = !DILocation(line: 912, column: 11, scope: !2765)
!2774 = !DILocation(line: 912, column: 27, scope: !2765)
!2775 = !DILocation(line: 915, column: 10, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2765, file: !1, line: 915, column: 3)
!2777 = !DILocation(line: 915, column: 8, scope: !2776)
!2778 = !DILocation(line: 915, column: 15, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2776, file: !1, line: 915, column: 3)
!2780 = !DILocation(line: 915, column: 19, scope: !2779)
!2781 = !DILocation(line: 915, column: 26, scope: !2779)
!2782 = !DILocation(line: 915, column: 17, scope: !2779)
!2783 = !DILocation(line: 915, column: 3, scope: !2776)
!2784 = !DILocation(line: 916, column: 15, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2779, file: !1, line: 915, column: 50)
!2786 = !DILocation(line: 916, column: 25, scope: !2785)
!2787 = !DILocation(line: 916, column: 29, scope: !2785)
!2788 = !DILocation(line: 916, column: 37, scope: !2785)
!2789 = !DILocation(line: 916, column: 45, scope: !2785)
!2790 = !DILocation(line: 916, column: 48, scope: !2785)
!2791 = !DILocation(line: 916, column: 4, scope: !2785)
!2792 = !DILocation(line: 917, column: 3, scope: !2785)
!2793 = !DILocation(line: 915, column: 36, scope: !2779)
!2794 = !DILocation(line: 915, column: 46, scope: !2779)
!2795 = !DILocation(line: 915, column: 3, scope: !2779)
!2796 = distinct !{!2796, !2783, !2797}
!2797 = !DILocation(line: 917, column: 3, scope: !2776)
!2798 = !DILocation(line: 920, column: 43, scope: !2765)
!2799 = !DILocation(line: 920, column: 68, scope: !2765)
!2800 = !DILocation(line: 920, column: 75, scope: !2765)
!2801 = !DILocation(line: 920, column: 10, scope: !2765)
!2802 = !DILocation(line: 920, column: 8, scope: !2765)
!2803 = !DILocation(line: 922, column: 10, scope: !2765)
!2804 = !DILocation(line: 922, column: 3, scope: !2765)
!2805 = !DILocation(line: 924, column: 1, scope: !2711)
!2806 = distinct !DISubprogram(name: "BKE_mesh_calc_poly_angles", scope: !1, file: !1, line: 979, type: !581, scopeLine: 981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2807 = !DILocalVariable(name: "mpoly", arg: 1, scope: !2806, file: !1, line: 979, type: !107)
!2808 = !DILocation(line: 979, column: 39, scope: !2806)
!2809 = !DILocalVariable(name: "loopstart", arg: 2, scope: !2806, file: !1, line: 979, type: !117)
!2810 = !DILocation(line: 979, column: 53, scope: !2806)
!2811 = !DILocalVariable(name: "mvarray", arg: 3, scope: !2806, file: !1, line: 980, type: !124)
!2812 = !DILocation(line: 980, column: 39, scope: !2806)
!2813 = !DILocalVariable(name: "angles", arg: 4, scope: !2806, file: !1, line: 980, type: !555)
!2814 = !DILocation(line: 980, column: 54, scope: !2806)
!2815 = !DILocalVariable(name: "nor_prev", scope: !2806, file: !1, line: 982, type: !129)
!2816 = !DILocation(line: 982, column: 8, scope: !2806)
!2817 = !DILocalVariable(name: "nor_next", scope: !2806, file: !1, line: 983, type: !129)
!2818 = !DILocation(line: 983, column: 8, scope: !2806)
!2819 = !DILocalVariable(name: "i_this", scope: !2806, file: !1, line: 985, type: !93)
!2820 = !DILocation(line: 985, column: 6, scope: !2806)
!2821 = !DILocation(line: 985, column: 15, scope: !2806)
!2822 = !DILocation(line: 985, column: 22, scope: !2806)
!2823 = !DILocation(line: 985, column: 30, scope: !2806)
!2824 = !DILocalVariable(name: "i_next", scope: !2806, file: !1, line: 986, type: !93)
!2825 = !DILocation(line: 986, column: 6, scope: !2806)
!2826 = !DILocation(line: 988, column: 14, scope: !2806)
!2827 = !DILocation(line: 988, column: 24, scope: !2806)
!2828 = !DILocation(line: 988, column: 32, scope: !2806)
!2829 = !DILocation(line: 988, column: 42, scope: !2806)
!2830 = !DILocation(line: 988, column: 49, scope: !2806)
!2831 = !DILocation(line: 988, column: 54, scope: !2806)
!2832 = !DILocation(line: 988, column: 57, scope: !2806)
!2833 = !DILocation(line: 988, column: 61, scope: !2806)
!2834 = !DILocation(line: 988, column: 69, scope: !2806)
!2835 = !DILocation(line: 988, column: 79, scope: !2806)
!2836 = !DILocation(line: 988, column: 87, scope: !2806)
!2837 = !DILocation(line: 988, column: 90, scope: !2806)
!2838 = !DILocation(line: 988, column: 2, scope: !2806)
!2839 = !DILocation(line: 989, column: 15, scope: !2806)
!2840 = !DILocation(line: 989, column: 2, scope: !2806)
!2841 = !DILocation(line: 991, column: 2, scope: !2806)
!2842 = !DILocation(line: 991, column: 9, scope: !2806)
!2843 = !DILocation(line: 991, column: 18, scope: !2806)
!2844 = !DILocation(line: 991, column: 25, scope: !2806)
!2845 = !DILocation(line: 991, column: 16, scope: !2806)
!2846 = !DILocation(line: 992, column: 15, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2806, file: !1, line: 991, column: 34)
!2848 = !DILocation(line: 992, column: 25, scope: !2847)
!2849 = !DILocation(line: 992, column: 33, scope: !2847)
!2850 = !DILocation(line: 992, column: 43, scope: !2847)
!2851 = !DILocation(line: 992, column: 51, scope: !2847)
!2852 = !DILocation(line: 992, column: 54, scope: !2847)
!2853 = !DILocation(line: 992, column: 58, scope: !2847)
!2854 = !DILocation(line: 992, column: 66, scope: !2847)
!2855 = !DILocation(line: 992, column: 76, scope: !2847)
!2856 = !DILocation(line: 992, column: 84, scope: !2847)
!2857 = !DILocation(line: 992, column: 87, scope: !2847)
!2858 = !DILocation(line: 992, column: 3, scope: !2847)
!2859 = !DILocation(line: 993, column: 16, scope: !2847)
!2860 = !DILocation(line: 993, column: 3, scope: !2847)
!2861 = !DILocation(line: 994, column: 42, scope: !2847)
!2862 = !DILocation(line: 994, column: 52, scope: !2847)
!2863 = !DILocation(line: 994, column: 20, scope: !2847)
!2864 = !DILocation(line: 994, column: 3, scope: !2847)
!2865 = !DILocation(line: 994, column: 10, scope: !2847)
!2866 = !DILocation(line: 994, column: 18, scope: !2847)
!2867 = !DILocation(line: 997, column: 14, scope: !2847)
!2868 = !DILocation(line: 997, column: 24, scope: !2847)
!2869 = !DILocation(line: 997, column: 3, scope: !2847)
!2870 = !DILocation(line: 998, column: 12, scope: !2847)
!2871 = !DILocation(line: 998, column: 10, scope: !2847)
!2872 = !DILocation(line: 999, column: 9, scope: !2847)
!2873 = distinct !{!2873, !2841, !2874}
!2874 = !DILocation(line: 1000, column: 2, scope: !2806)
!2875 = !DILocation(line: 1001, column: 1, scope: !2806)
!2876 = distinct !DISubprogram(name: "BKE_mesh_poly_edgehash_insert", scope: !1, file: !1, line: 1004, type: !2877, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{null, !2879, !2883, !2885}
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeHash", file: !2881, line: 35, baseType: !2882)
!2881 = !DIFile(filename: "blender/source/blender/blenlib/BLI_edgehash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2882 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHash", file: !2881, line: 34, flags: DIFlagFwdDecl)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!2887 = !DILocalVariable(name: "ehash", arg: 1, scope: !2876, file: !1, line: 1004, type: !2879)
!2888 = !DILocation(line: 1004, column: 46, scope: !2876)
!2889 = !DILocalVariable(name: "mp", arg: 2, scope: !2876, file: !1, line: 1004, type: !2883)
!2890 = !DILocation(line: 1004, column: 66, scope: !2876)
!2891 = !DILocalVariable(name: "mloop", arg: 3, scope: !2876, file: !1, line: 1004, type: !2885)
!2892 = !DILocation(line: 1004, column: 83, scope: !2876)
!2893 = !DILocalVariable(name: "ml", scope: !2876, file: !1, line: 1006, type: !2885)
!2894 = !DILocation(line: 1006, column: 15, scope: !2876)
!2895 = !DILocalVariable(name: "ml_next", scope: !2876, file: !1, line: 1006, type: !2885)
!2896 = !DILocation(line: 1006, column: 20, scope: !2876)
!2897 = !DILocalVariable(name: "i", scope: !2876, file: !1, line: 1007, type: !93)
!2898 = !DILocation(line: 1007, column: 6, scope: !2876)
!2899 = !DILocation(line: 1007, column: 10, scope: !2876)
!2900 = !DILocation(line: 1007, column: 14, scope: !2876)
!2901 = !DILocation(line: 1009, column: 12, scope: !2876)
!2902 = !DILocation(line: 1009, column: 10, scope: !2876)
!2903 = !DILocation(line: 1010, column: 8, scope: !2876)
!2904 = !DILocation(line: 1010, column: 16, scope: !2876)
!2905 = !DILocation(line: 1010, column: 18, scope: !2876)
!2906 = !DILocation(line: 1010, column: 5, scope: !2876)
!2907 = !DILocation(line: 1012, column: 2, scope: !2876)
!2908 = !DILocation(line: 1012, column: 10, scope: !2876)
!2909 = !DILocation(line: 1012, column: 13, scope: !2876)
!2910 = !DILocation(line: 1013, column: 25, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2876, file: !1, line: 1012, column: 19)
!2912 = !DILocation(line: 1013, column: 32, scope: !2911)
!2913 = !DILocation(line: 1013, column: 36, scope: !2911)
!2914 = !DILocation(line: 1013, column: 39, scope: !2911)
!2915 = !DILocation(line: 1013, column: 48, scope: !2911)
!2916 = !DILocation(line: 1013, column: 3, scope: !2911)
!2917 = !DILocation(line: 1015, column: 8, scope: !2911)
!2918 = !DILocation(line: 1015, column: 6, scope: !2911)
!2919 = !DILocation(line: 1016, column: 10, scope: !2911)
!2920 = distinct !{!2920, !2907, !2921}
!2921 = !DILocation(line: 1017, column: 2, scope: !2876)
!2922 = !DILocation(line: 1018, column: 1, scope: !2876)
!2923 = distinct !DISubprogram(name: "BKE_mesh_poly_edgebitmap_insert", scope: !1, file: !1, line: 1020, type: !2924, scopeLine: 1021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{null, !1013, !2883, !2885}
!2926 = !DILocalVariable(name: "edge_bitmap", arg: 1, scope: !2923, file: !1, line: 1020, type: !1013)
!2927 = !DILocation(line: 1020, column: 52, scope: !2923)
!2928 = !DILocalVariable(name: "mp", arg: 2, scope: !2923, file: !1, line: 1020, type: !2883)
!2929 = !DILocation(line: 1020, column: 78, scope: !2923)
!2930 = !DILocalVariable(name: "mloop", arg: 3, scope: !2923, file: !1, line: 1020, type: !2885)
!2931 = !DILocation(line: 1020, column: 95, scope: !2923)
!2932 = !DILocalVariable(name: "ml", scope: !2923, file: !1, line: 1022, type: !2885)
!2933 = !DILocation(line: 1022, column: 15, scope: !2923)
!2934 = !DILocalVariable(name: "i", scope: !2923, file: !1, line: 1023, type: !93)
!2935 = !DILocation(line: 1023, column: 6, scope: !2923)
!2936 = !DILocation(line: 1023, column: 10, scope: !2923)
!2937 = !DILocation(line: 1023, column: 14, scope: !2923)
!2938 = !DILocation(line: 1025, column: 7, scope: !2923)
!2939 = !DILocation(line: 1025, column: 5, scope: !2923)
!2940 = !DILocation(line: 1027, column: 2, scope: !2923)
!2941 = !DILocation(line: 1027, column: 10, scope: !2923)
!2942 = !DILocation(line: 1027, column: 13, scope: !2923)
!2943 = !DILocation(line: 1028, column: 3, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2923, file: !1, line: 1027, column: 19)
!2945 = !DILocation(line: 1029, column: 5, scope: !2944)
!2946 = distinct !{!2946, !2940, !2947}
!2947 = !DILocation(line: 1030, column: 2, scope: !2923)
!2948 = !DILocation(line: 1031, column: 1, scope: !2923)
!2949 = distinct !DISubprogram(name: "BKE_mesh_center_median", scope: !1, file: !1, line: 1041, type: !2950, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!210, !866, !555}
!2952 = !DILocalVariable(name: "me", arg: 1, scope: !2949, file: !1, line: 1041, type: !866)
!2953 = !DILocation(line: 1041, column: 35, scope: !2949)
!2954 = !DILocalVariable(name: "cent", arg: 2, scope: !2949, file: !1, line: 1041, type: !555)
!2955 = !DILocation(line: 1041, column: 45, scope: !2949)
!2956 = !DILocalVariable(name: "i", scope: !2949, file: !1, line: 1043, type: !93)
!2957 = !DILocation(line: 1043, column: 6, scope: !2949)
!2958 = !DILocation(line: 1043, column: 10, scope: !2949)
!2959 = !DILocation(line: 1043, column: 14, scope: !2949)
!2960 = !DILocalVariable(name: "mvert", scope: !2949, file: !1, line: 1044, type: !124)
!2961 = !DILocation(line: 1044, column: 9, scope: !2949)
!2962 = !DILocation(line: 1045, column: 10, scope: !2949)
!2963 = !DILocation(line: 1045, column: 2, scope: !2949)
!2964 = !DILocation(line: 1046, column: 15, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1046, column: 2)
!2966 = !DILocation(line: 1046, column: 19, scope: !2965)
!2967 = !DILocation(line: 1046, column: 13, scope: !2965)
!2968 = !DILocation(line: 1046, column: 7, scope: !2965)
!2969 = !DILocation(line: 1046, column: 27, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2965, file: !1, line: 1046, column: 2)
!2971 = !DILocation(line: 1046, column: 2, scope: !2965)
!2972 = !DILocation(line: 1047, column: 13, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2970, file: !1, line: 1046, column: 40)
!2974 = !DILocation(line: 1047, column: 19, scope: !2973)
!2975 = !DILocation(line: 1047, column: 26, scope: !2973)
!2976 = !DILocation(line: 1047, column: 3, scope: !2973)
!2977 = !DILocation(line: 1048, column: 2, scope: !2973)
!2978 = !DILocation(line: 1046, column: 36, scope: !2970)
!2979 = !DILocation(line: 1046, column: 2, scope: !2970)
!2980 = distinct !{!2980, !2971, !2981}
!2981 = !DILocation(line: 1048, column: 2, scope: !2965)
!2982 = !DILocation(line: 1050, column: 6, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1050, column: 6)
!2984 = !DILocation(line: 1050, column: 10, scope: !2983)
!2985 = !DILocation(line: 1050, column: 6, scope: !2949)
!2986 = !DILocation(line: 1051, column: 13, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2983, file: !1, line: 1050, column: 19)
!2988 = !DILocation(line: 1051, column: 33, scope: !2987)
!2989 = !DILocation(line: 1051, column: 37, scope: !2987)
!2990 = !DILocation(line: 1051, column: 26, scope: !2987)
!2991 = !DILocation(line: 1051, column: 24, scope: !2987)
!2992 = !DILocation(line: 1051, column: 3, scope: !2987)
!2993 = !DILocation(line: 1052, column: 2, scope: !2987)
!2994 = !DILocation(line: 1054, column: 10, scope: !2949)
!2995 = !DILocation(line: 1054, column: 14, scope: !2949)
!2996 = !DILocation(line: 1054, column: 22, scope: !2949)
!2997 = !DILocation(line: 1054, column: 9, scope: !2949)
!2998 = !DILocation(line: 1054, column: 2, scope: !2949)
!2999 = distinct !DISubprogram(name: "zero_v3", scope: !658, file: !658, line: 43, type: !3000, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3000 = !DISubroutineType(types: !3001)
!3001 = !{null, !555}
!3002 = !DILocalVariable(name: "r", arg: 1, scope: !2999, file: !658, line: 43, type: !555)
!3003 = !DILocation(line: 43, column: 28, scope: !2999)
!3004 = !DILocation(line: 45, column: 2, scope: !2999)
!3005 = !DILocation(line: 45, column: 7, scope: !2999)
!3006 = !DILocation(line: 46, column: 2, scope: !2999)
!3007 = !DILocation(line: 46, column: 7, scope: !2999)
!3008 = !DILocation(line: 47, column: 2, scope: !2999)
!3009 = !DILocation(line: 47, column: 7, scope: !2999)
!3010 = !DILocation(line: 48, column: 1, scope: !2999)
!3011 = distinct !DISubprogram(name: "add_v3_v3", scope: !658, file: !658, line: 302, type: !659, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3012 = !DILocalVariable(name: "r", arg: 1, scope: !3011, file: !658, line: 302, type: !555)
!3013 = !DILocation(line: 302, column: 30, scope: !3011)
!3014 = !DILocalVariable(name: "a", arg: 2, scope: !3011, file: !658, line: 302, type: !661)
!3015 = !DILocation(line: 302, column: 48, scope: !3011)
!3016 = !DILocation(line: 304, column: 10, scope: !3011)
!3017 = !DILocation(line: 304, column: 2, scope: !3011)
!3018 = !DILocation(line: 304, column: 7, scope: !3011)
!3019 = !DILocation(line: 305, column: 10, scope: !3011)
!3020 = !DILocation(line: 305, column: 2, scope: !3011)
!3021 = !DILocation(line: 305, column: 7, scope: !3011)
!3022 = !DILocation(line: 306, column: 10, scope: !3011)
!3023 = !DILocation(line: 306, column: 2, scope: !3011)
!3024 = !DILocation(line: 306, column: 7, scope: !3011)
!3025 = !DILocation(line: 307, column: 1, scope: !3011)
!3026 = distinct !DISubprogram(name: "mul_v3_fl", scope: !658, file: !658, line: 392, type: !3027, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{null, !555, !84}
!3029 = !DILocalVariable(name: "r", arg: 1, scope: !3026, file: !658, line: 392, type: !555)
!3030 = !DILocation(line: 392, column: 30, scope: !3026)
!3031 = !DILocalVariable(name: "f", arg: 2, scope: !3026, file: !658, line: 392, type: !84)
!3032 = !DILocation(line: 392, column: 42, scope: !3026)
!3033 = !DILocation(line: 394, column: 10, scope: !3026)
!3034 = !DILocation(line: 394, column: 2, scope: !3026)
!3035 = !DILocation(line: 394, column: 7, scope: !3026)
!3036 = !DILocation(line: 395, column: 10, scope: !3026)
!3037 = !DILocation(line: 395, column: 2, scope: !3026)
!3038 = !DILocation(line: 395, column: 7, scope: !3026)
!3039 = !DILocation(line: 396, column: 10, scope: !3026)
!3040 = !DILocation(line: 396, column: 2, scope: !3026)
!3041 = !DILocation(line: 396, column: 7, scope: !3026)
!3042 = !DILocation(line: 397, column: 1, scope: !3026)
!3043 = distinct !DISubprogram(name: "BKE_mesh_center_bounds", scope: !1, file: !1, line: 1057, type: !2950, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3044 = !DILocalVariable(name: "me", arg: 1, scope: !3043, file: !1, line: 1057, type: !866)
!3045 = !DILocation(line: 1057, column: 35, scope: !3043)
!3046 = !DILocalVariable(name: "cent", arg: 2, scope: !3043, file: !1, line: 1057, type: !555)
!3047 = !DILocation(line: 1057, column: 45, scope: !3043)
!3048 = !DILocalVariable(name: "min", scope: !3043, file: !1, line: 1059, type: !129)
!3049 = !DILocation(line: 1059, column: 8, scope: !3043)
!3050 = !DILocalVariable(name: "max", scope: !3043, file: !1, line: 1059, type: !129)
!3051 = !DILocation(line: 1059, column: 16, scope: !3043)
!3052 = !DILocation(line: 1060, column: 2, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3043, file: !1, line: 1060, column: 2)
!3054 = !DILocation(line: 1061, column: 22, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3043, file: !1, line: 1061, column: 6)
!3056 = !DILocation(line: 1061, column: 26, scope: !3055)
!3057 = !DILocation(line: 1061, column: 31, scope: !3055)
!3058 = !DILocation(line: 1061, column: 6, scope: !3055)
!3059 = !DILocation(line: 1061, column: 6, scope: !3043)
!3060 = !DILocation(line: 1062, column: 15, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3055, file: !1, line: 1061, column: 37)
!3062 = !DILocation(line: 1062, column: 21, scope: !3061)
!3063 = !DILocation(line: 1062, column: 26, scope: !3061)
!3064 = !DILocation(line: 1062, column: 3, scope: !3061)
!3065 = !DILocation(line: 1063, column: 3, scope: !3061)
!3066 = !DILocation(line: 1066, column: 2, scope: !3043)
!3067 = !DILocation(line: 1067, column: 1, scope: !3043)
!3068 = distinct !DISubprogram(name: "BKE_mesh_center_centroid", scope: !1, file: !1, line: 1069, type: !2950, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3069 = !DILocalVariable(name: "me", arg: 1, scope: !3068, file: !1, line: 1069, type: !866)
!3070 = !DILocation(line: 1069, column: 37, scope: !3068)
!3071 = !DILocalVariable(name: "cent", arg: 2, scope: !3068, file: !1, line: 1069, type: !555)
!3072 = !DILocation(line: 1069, column: 47, scope: !3068)
!3073 = !DILocalVariable(name: "i", scope: !3068, file: !1, line: 1071, type: !93)
!3074 = !DILocation(line: 1071, column: 6, scope: !3068)
!3075 = !DILocation(line: 1071, column: 10, scope: !3068)
!3076 = !DILocation(line: 1071, column: 14, scope: !3068)
!3077 = !DILocalVariable(name: "mpoly", scope: !3068, file: !1, line: 1072, type: !107)
!3078 = !DILocation(line: 1072, column: 9, scope: !3068)
!3079 = !DILocalVariable(name: "poly_area", scope: !3068, file: !1, line: 1073, type: !84)
!3080 = !DILocation(line: 1073, column: 8, scope: !3068)
!3081 = !DILocalVariable(name: "total_area", scope: !3068, file: !1, line: 1074, type: !84)
!3082 = !DILocation(line: 1074, column: 8, scope: !3068)
!3083 = !DILocalVariable(name: "poly_cent", scope: !3068, file: !1, line: 1075, type: !129)
!3084 = !DILocation(line: 1075, column: 8, scope: !3068)
!3085 = !DILocation(line: 1077, column: 10, scope: !3068)
!3086 = !DILocation(line: 1077, column: 2, scope: !3068)
!3087 = !DILocation(line: 1080, column: 15, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 1080, column: 2)
!3089 = !DILocation(line: 1080, column: 19, scope: !3088)
!3090 = !DILocation(line: 1080, column: 13, scope: !3088)
!3091 = !DILocation(line: 1080, column: 7, scope: !3088)
!3092 = !DILocation(line: 1080, column: 27, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3088, file: !1, line: 1080, column: 2)
!3094 = !DILocation(line: 1080, column: 2, scope: !3088)
!3095 = !DILocation(line: 1081, column: 51, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3093, file: !1, line: 1080, column: 40)
!3097 = !DILocation(line: 1081, column: 58, scope: !3096)
!3098 = !DILocation(line: 1081, column: 62, scope: !3096)
!3099 = !DILocation(line: 1081, column: 70, scope: !3096)
!3100 = !DILocation(line: 1081, column: 77, scope: !3096)
!3101 = !DILocation(line: 1081, column: 68, scope: !3096)
!3102 = !DILocation(line: 1081, column: 88, scope: !3096)
!3103 = !DILocation(line: 1081, column: 92, scope: !3096)
!3104 = !DILocation(line: 1081, column: 99, scope: !3096)
!3105 = !DILocation(line: 1081, column: 15, scope: !3096)
!3106 = !DILocation(line: 1081, column: 13, scope: !3096)
!3107 = !DILocation(line: 1083, column: 16, scope: !3096)
!3108 = !DILocation(line: 1083, column: 22, scope: !3096)
!3109 = !DILocation(line: 1083, column: 33, scope: !3096)
!3110 = !DILocation(line: 1083, column: 3, scope: !3096)
!3111 = !DILocation(line: 1084, column: 17, scope: !3096)
!3112 = !DILocation(line: 1084, column: 14, scope: !3096)
!3113 = !DILocation(line: 1085, column: 2, scope: !3096)
!3114 = !DILocation(line: 1080, column: 36, scope: !3093)
!3115 = !DILocation(line: 1080, column: 2, scope: !3093)
!3116 = distinct !{!3116, !3094, !3117}
!3117 = !DILocation(line: 1085, column: 2, scope: !3088)
!3118 = !DILocation(line: 1087, column: 6, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 1087, column: 6)
!3120 = !DILocation(line: 1087, column: 10, scope: !3119)
!3121 = !DILocation(line: 1087, column: 6, scope: !3068)
!3122 = !DILocation(line: 1088, column: 13, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3119, file: !1, line: 1087, column: 19)
!3124 = !DILocation(line: 1088, column: 26, scope: !3123)
!3125 = !DILocation(line: 1088, column: 24, scope: !3123)
!3126 = !DILocation(line: 1088, column: 3, scope: !3123)
!3127 = !DILocation(line: 1089, column: 2, scope: !3123)
!3128 = !DILocation(line: 1092, column: 6, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 1092, column: 6)
!3130 = !DILocation(line: 1092, column: 6, scope: !3068)
!3131 = !DILocation(line: 1093, column: 33, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3129, file: !1, line: 1092, column: 37)
!3133 = !DILocation(line: 1093, column: 37, scope: !3132)
!3134 = !DILocation(line: 1093, column: 10, scope: !3132)
!3135 = !DILocation(line: 1093, column: 3, scope: !3132)
!3136 = !DILocation(line: 1096, column: 10, scope: !3068)
!3137 = !DILocation(line: 1096, column: 14, scope: !3068)
!3138 = !DILocation(line: 1096, column: 22, scope: !3068)
!3139 = !DILocation(line: 1096, column: 9, scope: !3068)
!3140 = !DILocation(line: 1096, column: 2, scope: !3068)
!3141 = !DILocation(line: 1097, column: 1, scope: !3068)
!3142 = distinct !DISubprogram(name: "mesh_calc_poly_planar_area_centroid", scope: !1, file: !1, line: 927, type: !3143, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{!84, !107, !117, !124, !555}
!3145 = !DILocalVariable(name: "mpoly", arg: 1, scope: !3142, file: !1, line: 927, type: !107)
!3146 = !DILocation(line: 927, column: 57, scope: !3142)
!3147 = !DILocalVariable(name: "loopstart", arg: 2, scope: !3142, file: !1, line: 927, type: !117)
!3148 = !DILocation(line: 927, column: 71, scope: !3142)
!3149 = !DILocalVariable(name: "mvarray", arg: 3, scope: !3142, file: !1, line: 927, type: !124)
!3150 = !DILocation(line: 927, column: 89, scope: !3142)
!3151 = !DILocalVariable(name: "cent", arg: 4, scope: !3142, file: !1, line: 927, type: !555)
!3152 = !DILocation(line: 927, column: 104, scope: !3142)
!3153 = !DILocalVariable(name: "i", scope: !3142, file: !1, line: 929, type: !93)
!3154 = !DILocation(line: 929, column: 6, scope: !3142)
!3155 = !DILocalVariable(name: "tri_area", scope: !3142, file: !1, line: 930, type: !84)
!3156 = !DILocation(line: 930, column: 8, scope: !3142)
!3157 = !DILocalVariable(name: "total_area", scope: !3142, file: !1, line: 931, type: !84)
!3158 = !DILocation(line: 931, column: 8, scope: !3142)
!3159 = !DILocalVariable(name: "v1", scope: !3142, file: !1, line: 932, type: !129)
!3160 = !DILocation(line: 932, column: 8, scope: !3142)
!3161 = !DILocalVariable(name: "v2", scope: !3142, file: !1, line: 932, type: !129)
!3162 = !DILocation(line: 932, column: 15, scope: !3142)
!3163 = !DILocalVariable(name: "v3", scope: !3142, file: !1, line: 932, type: !129)
!3164 = !DILocation(line: 932, column: 22, scope: !3142)
!3165 = !DILocalVariable(name: "normal", scope: !3142, file: !1, line: 932, type: !129)
!3166 = !DILocation(line: 932, column: 29, scope: !3142)
!3167 = !DILocalVariable(name: "tri_cent", scope: !3142, file: !1, line: 932, type: !129)
!3168 = !DILocation(line: 932, column: 40, scope: !3142)
!3169 = !DILocation(line: 934, column: 28, scope: !3142)
!3170 = !DILocation(line: 934, column: 35, scope: !3142)
!3171 = !DILocation(line: 934, column: 46, scope: !3142)
!3172 = !DILocation(line: 934, column: 55, scope: !3142)
!3173 = !DILocation(line: 934, column: 2, scope: !3142)
!3174 = !DILocation(line: 935, column: 13, scope: !3142)
!3175 = !DILocation(line: 935, column: 17, scope: !3142)
!3176 = !DILocation(line: 935, column: 25, scope: !3142)
!3177 = !DILocation(line: 935, column: 38, scope: !3142)
!3178 = !DILocation(line: 935, column: 41, scope: !3142)
!3179 = !DILocation(line: 935, column: 2, scope: !3142)
!3180 = !DILocation(line: 936, column: 13, scope: !3142)
!3181 = !DILocation(line: 936, column: 17, scope: !3142)
!3182 = !DILocation(line: 936, column: 25, scope: !3142)
!3183 = !DILocation(line: 936, column: 38, scope: !3142)
!3184 = !DILocation(line: 936, column: 41, scope: !3142)
!3185 = !DILocation(line: 936, column: 2, scope: !3142)
!3186 = !DILocation(line: 937, column: 10, scope: !3142)
!3187 = !DILocation(line: 937, column: 2, scope: !3142)
!3188 = !DILocation(line: 939, column: 9, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3142, file: !1, line: 939, column: 2)
!3190 = !DILocation(line: 939, column: 7, scope: !3189)
!3191 = !DILocation(line: 939, column: 14, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3189, file: !1, line: 939, column: 2)
!3193 = !DILocation(line: 939, column: 18, scope: !3192)
!3194 = !DILocation(line: 939, column: 25, scope: !3192)
!3195 = !DILocation(line: 939, column: 16, scope: !3192)
!3196 = !DILocation(line: 939, column: 2, scope: !3189)
!3197 = !DILocation(line: 940, column: 14, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3192, file: !1, line: 939, column: 39)
!3199 = !DILocation(line: 940, column: 18, scope: !3198)
!3200 = !DILocation(line: 940, column: 26, scope: !3198)
!3201 = !DILocation(line: 940, column: 36, scope: !3198)
!3202 = !DILocation(line: 940, column: 39, scope: !3198)
!3203 = !DILocation(line: 940, column: 42, scope: !3198)
!3204 = !DILocation(line: 940, column: 3, scope: !3198)
!3205 = !DILocation(line: 942, column: 33, scope: !3198)
!3206 = !DILocation(line: 942, column: 37, scope: !3198)
!3207 = !DILocation(line: 942, column: 41, scope: !3198)
!3208 = !DILocation(line: 942, column: 45, scope: !3198)
!3209 = !DILocation(line: 942, column: 14, scope: !3198)
!3210 = !DILocation(line: 942, column: 12, scope: !3198)
!3211 = !DILocation(line: 943, column: 17, scope: !3198)
!3212 = !DILocation(line: 943, column: 14, scope: !3198)
!3213 = !DILocation(line: 945, column: 15, scope: !3198)
!3214 = !DILocation(line: 945, column: 25, scope: !3198)
!3215 = !DILocation(line: 945, column: 29, scope: !3198)
!3216 = !DILocation(line: 945, column: 33, scope: !3198)
!3217 = !DILocation(line: 945, column: 3, scope: !3198)
!3218 = !DILocation(line: 946, column: 16, scope: !3198)
!3219 = !DILocation(line: 946, column: 22, scope: !3198)
!3220 = !DILocation(line: 946, column: 32, scope: !3198)
!3221 = !DILocation(line: 946, column: 3, scope: !3198)
!3222 = !DILocation(line: 948, column: 14, scope: !3198)
!3223 = !DILocation(line: 948, column: 18, scope: !3198)
!3224 = !DILocation(line: 948, column: 3, scope: !3198)
!3225 = !DILocation(line: 949, column: 2, scope: !3198)
!3226 = !DILocation(line: 939, column: 35, scope: !3192)
!3227 = !DILocation(line: 939, column: 2, scope: !3192)
!3228 = distinct !{!3228, !3196, !3229}
!3229 = !DILocation(line: 949, column: 2, scope: !3189)
!3230 = !DILocation(line: 951, column: 12, scope: !3142)
!3231 = !DILocation(line: 951, column: 25, scope: !3142)
!3232 = !DILocation(line: 951, column: 23, scope: !3142)
!3233 = !DILocation(line: 951, column: 2, scope: !3142)
!3234 = !DILocation(line: 953, column: 9, scope: !3142)
!3235 = !DILocation(line: 953, column: 2, scope: !3142)
!3236 = distinct !DISubprogram(name: "is_finite_v3", scope: !658, file: !658, line: 893, type: !3237, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{!210, !661}
!3239 = !DILocalVariable(name: "v", arg: 1, scope: !3236, file: !658, line: 893, type: !661)
!3240 = !DILocation(line: 893, column: 39, scope: !3236)
!3241 = !DILocation(line: 898, column: 10, scope: !3236)
!3242 = !DILocation(line: 898, column: 25, scope: !3236)
!3243 = !DILocation(line: 898, column: 28, scope: !3236)
!3244 = !DILocation(line: 898, column: 43, scope: !3236)
!3245 = !DILocation(line: 898, column: 46, scope: !3236)
!3246 = !DILocation(line: 0, scope: !3236)
!3247 = !DILocation(line: 898, column: 9, scope: !3236)
!3248 = !DILocation(line: 898, column: 2, scope: !3236)
!3249 = distinct !DISubprogram(name: "BKE_mesh_calc_volume", scope: !1, file: !1, line: 1149, type: !3250, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{null, !124, !93, !157, !93, !555, !555}
!3252 = !DILocalVariable(name: "mverts", arg: 1, scope: !3249, file: !1, line: 1149, type: !124)
!3253 = !DILocation(line: 1149, column: 34, scope: !3249)
!3254 = !DILocalVariable(name: "numVerts", arg: 2, scope: !3249, file: !1, line: 1149, type: !93)
!3255 = !DILocation(line: 1149, column: 46, scope: !3249)
!3256 = !DILocalVariable(name: "mfaces", arg: 3, scope: !3249, file: !1, line: 1150, type: !157)
!3257 = !DILocation(line: 1150, column: 34, scope: !3249)
!3258 = !DILocalVariable(name: "numFaces", arg: 4, scope: !3249, file: !1, line: 1150, type: !93)
!3259 = !DILocation(line: 1150, column: 46, scope: !3249)
!3260 = !DILocalVariable(name: "r_vol", arg: 5, scope: !3249, file: !1, line: 1151, type: !555)
!3261 = !DILocation(line: 1151, column: 34, scope: !3249)
!3262 = !DILocalVariable(name: "r_com", arg: 6, scope: !3249, file: !1, line: 1151, type: !555)
!3263 = !DILocation(line: 1151, column: 48, scope: !3249)
!3264 = !DILocalVariable(name: "center", scope: !3249, file: !1, line: 1153, type: !129)
!3265 = !DILocation(line: 1153, column: 8, scope: !3249)
!3266 = !DILocalVariable(name: "totvol", scope: !3249, file: !1, line: 1154, type: !84)
!3267 = !DILocation(line: 1154, column: 8, scope: !3249)
!3268 = !DILocalVariable(name: "f", scope: !3249, file: !1, line: 1155, type: !93)
!3269 = !DILocation(line: 1155, column: 6, scope: !3249)
!3270 = !DILocation(line: 1157, column: 6, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 1157, column: 6)
!3272 = !DILocation(line: 1157, column: 6, scope: !3249)
!3273 = !DILocation(line: 1157, column: 14, scope: !3271)
!3274 = !DILocation(line: 1157, column: 20, scope: !3271)
!3275 = !DILocation(line: 1157, column: 13, scope: !3271)
!3276 = !DILocation(line: 1158, column: 6, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 1158, column: 6)
!3278 = !DILocation(line: 1158, column: 6, scope: !3249)
!3279 = !DILocation(line: 1158, column: 21, scope: !3277)
!3280 = !DILocation(line: 1158, column: 13, scope: !3277)
!3281 = !DILocation(line: 1160, column: 6, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 1160, column: 6)
!3283 = !DILocation(line: 1160, column: 15, scope: !3282)
!3284 = !DILocation(line: 1160, column: 6, scope: !3249)
!3285 = !DILocation(line: 1161, column: 3, scope: !3282)
!3286 = !DILocation(line: 1163, column: 36, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 1163, column: 6)
!3288 = !DILocation(line: 1163, column: 44, scope: !3287)
!3289 = !DILocation(line: 1163, column: 54, scope: !3287)
!3290 = !DILocation(line: 1163, column: 62, scope: !3287)
!3291 = !DILocation(line: 1163, column: 72, scope: !3287)
!3292 = !DILocation(line: 1163, column: 7, scope: !3287)
!3293 = !DILocation(line: 1163, column: 6, scope: !3249)
!3294 = !DILocation(line: 1164, column: 3, scope: !3287)
!3295 = !DILocation(line: 1166, column: 9, scope: !3249)
!3296 = !DILocation(line: 1167, column: 9, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 1167, column: 2)
!3298 = !DILocation(line: 1167, column: 7, scope: !3297)
!3299 = !DILocation(line: 1167, column: 14, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 1167, column: 2)
!3301 = !DILocation(line: 1167, column: 18, scope: !3300)
!3302 = !DILocation(line: 1167, column: 16, scope: !3300)
!3303 = !DILocation(line: 1167, column: 2, scope: !3297)
!3304 = !DILocalVariable(name: "face", scope: !3305, file: !1, line: 1168, type: !157)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !1, line: 1167, column: 33)
!3306 = !DILocation(line: 1168, column: 10, scope: !3305)
!3307 = !DILocation(line: 1168, column: 18, scope: !3305)
!3308 = !DILocation(line: 1168, column: 25, scope: !3305)
!3309 = !DILocalVariable(name: "v1", scope: !3305, file: !1, line: 1169, type: !124)
!3310 = !DILocation(line: 1169, column: 10, scope: !3305)
!3311 = !DILocation(line: 1169, column: 16, scope: !3305)
!3312 = !DILocation(line: 1169, column: 23, scope: !3305)
!3313 = !DILocation(line: 1169, column: 29, scope: !3305)
!3314 = !DILocalVariable(name: "v2", scope: !3305, file: !1, line: 1170, type: !124)
!3315 = !DILocation(line: 1170, column: 10, scope: !3305)
!3316 = !DILocation(line: 1170, column: 16, scope: !3305)
!3317 = !DILocation(line: 1170, column: 23, scope: !3305)
!3318 = !DILocation(line: 1170, column: 29, scope: !3305)
!3319 = !DILocalVariable(name: "v3", scope: !3305, file: !1, line: 1171, type: !124)
!3320 = !DILocation(line: 1171, column: 10, scope: !3305)
!3321 = !DILocation(line: 1171, column: 16, scope: !3305)
!3322 = !DILocation(line: 1171, column: 23, scope: !3305)
!3323 = !DILocation(line: 1171, column: 29, scope: !3305)
!3324 = !DILocalVariable(name: "v4", scope: !3305, file: !1, line: 1172, type: !124)
!3325 = !DILocation(line: 1172, column: 10, scope: !3305)
!3326 = !DILocation(line: 1172, column: 16, scope: !3305)
!3327 = !DILocation(line: 1172, column: 23, scope: !3305)
!3328 = !DILocation(line: 1172, column: 29, scope: !3305)
!3329 = !DILocalVariable(name: "vol", scope: !3305, file: !1, line: 1173, type: !84)
!3330 = !DILocation(line: 1173, column: 9, scope: !3305)
!3331 = !DILocation(line: 1175, column: 38, scope: !3305)
!3332 = !DILocation(line: 1175, column: 46, scope: !3305)
!3333 = !DILocation(line: 1175, column: 50, scope: !3305)
!3334 = !DILocation(line: 1175, column: 54, scope: !3305)
!3335 = !DILocation(line: 1175, column: 58, scope: !3305)
!3336 = !DILocation(line: 1175, column: 62, scope: !3305)
!3337 = !DILocation(line: 1175, column: 66, scope: !3305)
!3338 = !DILocation(line: 1175, column: 9, scope: !3305)
!3339 = !DILocation(line: 1175, column: 7, scope: !3305)
!3340 = !DILocation(line: 1176, column: 7, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 1176, column: 7)
!3342 = !DILocation(line: 1176, column: 7, scope: !3305)
!3343 = !DILocation(line: 1177, column: 14, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3341, file: !1, line: 1176, column: 14)
!3345 = !DILocation(line: 1177, column: 11, scope: !3344)
!3346 = !DILocation(line: 1178, column: 3, scope: !3344)
!3347 = !DILocation(line: 1179, column: 7, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 1179, column: 7)
!3349 = !DILocation(line: 1179, column: 7, scope: !3305)
!3350 = !DILocation(line: 1181, column: 17, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3348, file: !1, line: 1179, column: 14)
!3352 = !DILocation(line: 1181, column: 24, scope: !3351)
!3353 = !DILocation(line: 1181, column: 32, scope: !3351)
!3354 = !DILocation(line: 1181, column: 4, scope: !3351)
!3355 = !DILocation(line: 1182, column: 17, scope: !3351)
!3356 = !DILocation(line: 1182, column: 24, scope: !3351)
!3357 = !DILocation(line: 1182, column: 28, scope: !3351)
!3358 = !DILocation(line: 1182, column: 32, scope: !3351)
!3359 = !DILocation(line: 1182, column: 4, scope: !3351)
!3360 = !DILocation(line: 1183, column: 17, scope: !3351)
!3361 = !DILocation(line: 1183, column: 24, scope: !3351)
!3362 = !DILocation(line: 1183, column: 28, scope: !3351)
!3363 = !DILocation(line: 1183, column: 32, scope: !3351)
!3364 = !DILocation(line: 1183, column: 4, scope: !3351)
!3365 = !DILocation(line: 1184, column: 17, scope: !3351)
!3366 = !DILocation(line: 1184, column: 24, scope: !3351)
!3367 = !DILocation(line: 1184, column: 28, scope: !3351)
!3368 = !DILocation(line: 1184, column: 32, scope: !3351)
!3369 = !DILocation(line: 1184, column: 4, scope: !3351)
!3370 = !DILocation(line: 1185, column: 3, scope: !3351)
!3371 = !DILocation(line: 1187, column: 7, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 1187, column: 7)
!3373 = !DILocation(line: 1187, column: 13, scope: !3372)
!3374 = !DILocation(line: 1187, column: 7, scope: !3305)
!3375 = !DILocation(line: 1188, column: 39, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3372, file: !1, line: 1187, column: 17)
!3377 = !DILocation(line: 1188, column: 47, scope: !3376)
!3378 = !DILocation(line: 1188, column: 51, scope: !3376)
!3379 = !DILocation(line: 1188, column: 55, scope: !3376)
!3380 = !DILocation(line: 1188, column: 59, scope: !3376)
!3381 = !DILocation(line: 1188, column: 63, scope: !3376)
!3382 = !DILocation(line: 1188, column: 67, scope: !3376)
!3383 = !DILocation(line: 1188, column: 10, scope: !3376)
!3384 = !DILocation(line: 1188, column: 8, scope: !3376)
!3385 = !DILocation(line: 1190, column: 8, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3376, file: !1, line: 1190, column: 8)
!3387 = !DILocation(line: 1190, column: 8, scope: !3376)
!3388 = !DILocation(line: 1191, column: 15, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3386, file: !1, line: 1190, column: 15)
!3390 = !DILocation(line: 1191, column: 12, scope: !3389)
!3391 = !DILocation(line: 1192, column: 4, scope: !3389)
!3392 = !DILocation(line: 1193, column: 8, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3376, file: !1, line: 1193, column: 8)
!3394 = !DILocation(line: 1193, column: 8, scope: !3376)
!3395 = !DILocation(line: 1195, column: 18, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3393, file: !1, line: 1193, column: 15)
!3397 = !DILocation(line: 1195, column: 25, scope: !3396)
!3398 = !DILocation(line: 1195, column: 33, scope: !3396)
!3399 = !DILocation(line: 1195, column: 5, scope: !3396)
!3400 = !DILocation(line: 1196, column: 18, scope: !3396)
!3401 = !DILocation(line: 1196, column: 25, scope: !3396)
!3402 = !DILocation(line: 1196, column: 29, scope: !3396)
!3403 = !DILocation(line: 1196, column: 33, scope: !3396)
!3404 = !DILocation(line: 1196, column: 5, scope: !3396)
!3405 = !DILocation(line: 1197, column: 18, scope: !3396)
!3406 = !DILocation(line: 1197, column: 25, scope: !3396)
!3407 = !DILocation(line: 1197, column: 29, scope: !3396)
!3408 = !DILocation(line: 1197, column: 33, scope: !3396)
!3409 = !DILocation(line: 1197, column: 5, scope: !3396)
!3410 = !DILocation(line: 1198, column: 18, scope: !3396)
!3411 = !DILocation(line: 1198, column: 25, scope: !3396)
!3412 = !DILocation(line: 1198, column: 29, scope: !3396)
!3413 = !DILocation(line: 1198, column: 33, scope: !3396)
!3414 = !DILocation(line: 1198, column: 5, scope: !3396)
!3415 = !DILocation(line: 1199, column: 4, scope: !3396)
!3416 = !DILocation(line: 1200, column: 3, scope: !3376)
!3417 = !DILocation(line: 1201, column: 2, scope: !3305)
!3418 = !DILocation(line: 1167, column: 28, scope: !3300)
!3419 = !DILocation(line: 1167, column: 2, scope: !3300)
!3420 = distinct !{!3420, !3303, !3421}
!3421 = !DILocation(line: 1201, column: 2, scope: !3297)
!3422 = !DILocation(line: 1207, column: 6, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 1207, column: 6)
!3424 = !DILocation(line: 1207, column: 6, scope: !3249)
!3425 = !DILocation(line: 1208, column: 18, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3423, file: !1, line: 1207, column: 13)
!3427 = !DILocation(line: 1208, column: 12, scope: !3426)
!3428 = !DILocation(line: 1208, column: 4, scope: !3426)
!3429 = !DILocation(line: 1208, column: 10, scope: !3426)
!3430 = !DILocation(line: 1209, column: 2, scope: !3426)
!3431 = !DILocation(line: 1210, column: 6, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 1210, column: 6)
!3433 = !DILocation(line: 1210, column: 6, scope: !3249)
!3434 = !DILocation(line: 1214, column: 7, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !1, line: 1214, column: 7)
!3436 = distinct !DILexicalBlock(scope: !3432, file: !1, line: 1210, column: 13)
!3437 = !DILocation(line: 1214, column: 14, scope: !3435)
!3438 = !DILocation(line: 1214, column: 7, scope: !3436)
!3439 = !DILocation(line: 1215, column: 14, scope: !3435)
!3440 = !DILocation(line: 1215, column: 29, scope: !3435)
!3441 = !DILocation(line: 1215, column: 27, scope: !3435)
!3442 = !DILocation(line: 1215, column: 4, scope: !3435)
!3443 = !DILocation(line: 1216, column: 2, scope: !3436)
!3444 = !DILocation(line: 1217, column: 1, scope: !3249)
!3445 = distinct !DISubprogram(name: "mesh_calc_center_centroid_ex", scope: !1, file: !1, line: 1106, type: !3446, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!210, !124, !93, !157, !93, !555}
!3448 = !DILocalVariable(name: "mverts", arg: 1, scope: !3445, file: !1, line: 1106, type: !124)
!3449 = !DILocation(line: 1106, column: 49, scope: !3445)
!3450 = !DILocalVariable(name: "UNUSED_numVerts", arg: 2, scope: !3445, file: !1, line: 1106, type: !93)
!3451 = !DILocation(line: 1106, column: 61, scope: !3445)
!3452 = !DILocalVariable(name: "mfaces", arg: 3, scope: !3445, file: !1, line: 1107, type: !157)
!3453 = !DILocation(line: 1107, column: 49, scope: !3445)
!3454 = !DILocalVariable(name: "numFaces", arg: 4, scope: !3445, file: !1, line: 1107, type: !93)
!3455 = !DILocation(line: 1107, column: 61, scope: !3445)
!3456 = !DILocalVariable(name: "center", arg: 5, scope: !3445, file: !1, line: 1108, type: !555)
!3457 = !DILocation(line: 1108, column: 48, scope: !3445)
!3458 = !DILocalVariable(name: "totweight", scope: !3445, file: !1, line: 1110, type: !84)
!3459 = !DILocation(line: 1110, column: 8, scope: !3445)
!3460 = !DILocalVariable(name: "f", scope: !3445, file: !1, line: 1111, type: !93)
!3461 = !DILocation(line: 1111, column: 6, scope: !3445)
!3462 = !DILocation(line: 1113, column: 10, scope: !3445)
!3463 = !DILocation(line: 1113, column: 2, scope: !3445)
!3464 = !DILocation(line: 1115, column: 6, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3445, file: !1, line: 1115, column: 6)
!3466 = !DILocation(line: 1115, column: 15, scope: !3465)
!3467 = !DILocation(line: 1115, column: 6, scope: !3445)
!3468 = !DILocation(line: 1116, column: 3, scope: !3465)
!3469 = !DILocation(line: 1118, column: 12, scope: !3445)
!3470 = !DILocation(line: 1119, column: 9, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3445, file: !1, line: 1119, column: 2)
!3472 = !DILocation(line: 1119, column: 7, scope: !3471)
!3473 = !DILocation(line: 1119, column: 14, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3471, file: !1, line: 1119, column: 2)
!3475 = !DILocation(line: 1119, column: 18, scope: !3474)
!3476 = !DILocation(line: 1119, column: 16, scope: !3474)
!3477 = !DILocation(line: 1119, column: 2, scope: !3471)
!3478 = !DILocalVariable(name: "face", scope: !3479, file: !1, line: 1120, type: !157)
!3479 = distinct !DILexicalBlock(scope: !3474, file: !1, line: 1119, column: 33)
!3480 = !DILocation(line: 1120, column: 10, scope: !3479)
!3481 = !DILocation(line: 1120, column: 18, scope: !3479)
!3482 = !DILocation(line: 1120, column: 25, scope: !3479)
!3483 = !DILocalVariable(name: "v1", scope: !3479, file: !1, line: 1121, type: !124)
!3484 = !DILocation(line: 1121, column: 10, scope: !3479)
!3485 = !DILocation(line: 1121, column: 16, scope: !3479)
!3486 = !DILocation(line: 1121, column: 23, scope: !3479)
!3487 = !DILocation(line: 1121, column: 29, scope: !3479)
!3488 = !DILocalVariable(name: "v2", scope: !3479, file: !1, line: 1122, type: !124)
!3489 = !DILocation(line: 1122, column: 10, scope: !3479)
!3490 = !DILocation(line: 1122, column: 16, scope: !3479)
!3491 = !DILocation(line: 1122, column: 23, scope: !3479)
!3492 = !DILocation(line: 1122, column: 29, scope: !3479)
!3493 = !DILocalVariable(name: "v3", scope: !3479, file: !1, line: 1123, type: !124)
!3494 = !DILocation(line: 1123, column: 10, scope: !3479)
!3495 = !DILocation(line: 1123, column: 16, scope: !3479)
!3496 = !DILocation(line: 1123, column: 23, scope: !3479)
!3497 = !DILocation(line: 1123, column: 29, scope: !3479)
!3498 = !DILocalVariable(name: "v4", scope: !3479, file: !1, line: 1124, type: !124)
!3499 = !DILocation(line: 1124, column: 10, scope: !3479)
!3500 = !DILocation(line: 1124, column: 16, scope: !3479)
!3501 = !DILocation(line: 1124, column: 23, scope: !3479)
!3502 = !DILocation(line: 1124, column: 29, scope: !3479)
!3503 = !DILocalVariable(name: "area", scope: !3479, file: !1, line: 1125, type: !84)
!3504 = !DILocation(line: 1125, column: 9, scope: !3479)
!3505 = !DILocation(line: 1127, column: 22, scope: !3479)
!3506 = !DILocation(line: 1127, column: 26, scope: !3479)
!3507 = !DILocation(line: 1127, column: 30, scope: !3479)
!3508 = !DILocation(line: 1127, column: 34, scope: !3479)
!3509 = !DILocation(line: 1127, column: 38, scope: !3479)
!3510 = !DILocation(line: 1127, column: 42, scope: !3479)
!3511 = !DILocation(line: 1127, column: 10, scope: !3479)
!3512 = !DILocation(line: 1127, column: 8, scope: !3479)
!3513 = !DILocation(line: 1128, column: 16, scope: !3479)
!3514 = !DILocation(line: 1128, column: 24, scope: !3479)
!3515 = !DILocation(line: 1128, column: 28, scope: !3479)
!3516 = !DILocation(line: 1128, column: 32, scope: !3479)
!3517 = !DILocation(line: 1128, column: 3, scope: !3479)
!3518 = !DILocation(line: 1129, column: 16, scope: !3479)
!3519 = !DILocation(line: 1129, column: 24, scope: !3479)
!3520 = !DILocation(line: 1129, column: 28, scope: !3479)
!3521 = !DILocation(line: 1129, column: 32, scope: !3479)
!3522 = !DILocation(line: 1129, column: 3, scope: !3479)
!3523 = !DILocation(line: 1130, column: 16, scope: !3479)
!3524 = !DILocation(line: 1130, column: 24, scope: !3479)
!3525 = !DILocation(line: 1130, column: 28, scope: !3479)
!3526 = !DILocation(line: 1130, column: 32, scope: !3479)
!3527 = !DILocation(line: 1130, column: 3, scope: !3479)
!3528 = !DILocation(line: 1131, column: 16, scope: !3479)
!3529 = !DILocation(line: 1131, column: 13, scope: !3479)
!3530 = !DILocation(line: 1133, column: 7, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3479, file: !1, line: 1133, column: 7)
!3532 = !DILocation(line: 1133, column: 13, scope: !3531)
!3533 = !DILocation(line: 1133, column: 7, scope: !3479)
!3534 = !DILocation(line: 1134, column: 23, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3531, file: !1, line: 1133, column: 17)
!3536 = !DILocation(line: 1134, column: 27, scope: !3535)
!3537 = !DILocation(line: 1134, column: 31, scope: !3535)
!3538 = !DILocation(line: 1134, column: 35, scope: !3535)
!3539 = !DILocation(line: 1134, column: 39, scope: !3535)
!3540 = !DILocation(line: 1134, column: 43, scope: !3535)
!3541 = !DILocation(line: 1134, column: 11, scope: !3535)
!3542 = !DILocation(line: 1134, column: 9, scope: !3535)
!3543 = !DILocation(line: 1135, column: 17, scope: !3535)
!3544 = !DILocation(line: 1135, column: 25, scope: !3535)
!3545 = !DILocation(line: 1135, column: 29, scope: !3535)
!3546 = !DILocation(line: 1135, column: 33, scope: !3535)
!3547 = !DILocation(line: 1135, column: 4, scope: !3535)
!3548 = !DILocation(line: 1136, column: 17, scope: !3535)
!3549 = !DILocation(line: 1136, column: 25, scope: !3535)
!3550 = !DILocation(line: 1136, column: 29, scope: !3535)
!3551 = !DILocation(line: 1136, column: 33, scope: !3535)
!3552 = !DILocation(line: 1136, column: 4, scope: !3535)
!3553 = !DILocation(line: 1137, column: 17, scope: !3535)
!3554 = !DILocation(line: 1137, column: 25, scope: !3535)
!3555 = !DILocation(line: 1137, column: 29, scope: !3535)
!3556 = !DILocation(line: 1137, column: 33, scope: !3535)
!3557 = !DILocation(line: 1137, column: 4, scope: !3535)
!3558 = !DILocation(line: 1138, column: 17, scope: !3535)
!3559 = !DILocation(line: 1138, column: 14, scope: !3535)
!3560 = !DILocation(line: 1139, column: 3, scope: !3535)
!3561 = !DILocation(line: 1140, column: 2, scope: !3479)
!3562 = !DILocation(line: 1119, column: 28, scope: !3474)
!3563 = !DILocation(line: 1119, column: 2, scope: !3474)
!3564 = distinct !{!3564, !3477, !3565}
!3565 = !DILocation(line: 1140, column: 2, scope: !3471)
!3566 = !DILocation(line: 1141, column: 6, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3445, file: !1, line: 1141, column: 6)
!3568 = !DILocation(line: 1141, column: 16, scope: !3567)
!3569 = !DILocation(line: 1141, column: 6, scope: !3445)
!3570 = !DILocation(line: 1142, column: 3, scope: !3567)
!3571 = !DILocation(line: 1144, column: 12, scope: !3445)
!3572 = !DILocation(line: 1144, column: 35, scope: !3445)
!3573 = !DILocation(line: 1144, column: 33, scope: !3445)
!3574 = !DILocation(line: 1144, column: 25, scope: !3445)
!3575 = !DILocation(line: 1144, column: 2, scope: !3445)
!3576 = !DILocation(line: 1146, column: 2, scope: !3445)
!3577 = !DILocation(line: 1147, column: 1, scope: !3445)
!3578 = distinct !DISubprogram(name: "BKE_mesh_loops_to_mface_corners", scope: !1, file: !1, line: 1228, type: !3579, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{null, !3581, !3581, !3581, !1013, !93, !169, !169, !169, !169, !209, !209, !209}
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!3582 = !DILocalVariable(name: "fdata", arg: 1, scope: !3578, file: !1, line: 1229, type: !3581)
!3583 = !DILocation(line: 1229, column: 21, scope: !3578)
!3584 = !DILocalVariable(name: "ldata", arg: 2, scope: !3578, file: !1, line: 1229, type: !3581)
!3585 = !DILocation(line: 1229, column: 40, scope: !3578)
!3586 = !DILocalVariable(name: "pdata", arg: 3, scope: !3578, file: !1, line: 1230, type: !3581)
!3587 = !DILocation(line: 1230, column: 21, scope: !3578)
!3588 = !DILocalVariable(name: "lindex", arg: 4, scope: !3578, file: !1, line: 1230, type: !1013)
!3589 = !DILocation(line: 1230, column: 41, scope: !3578)
!3590 = !DILocalVariable(name: "findex", arg: 5, scope: !3578, file: !1, line: 1230, type: !93)
!3591 = !DILocation(line: 1230, column: 56, scope: !3578)
!3592 = !DILocalVariable(name: "polyindex", arg: 6, scope: !3578, file: !1, line: 1231, type: !169)
!3593 = !DILocation(line: 1231, column: 19, scope: !3578)
!3594 = !DILocalVariable(name: "mf_len", arg: 7, scope: !3578, file: !1, line: 1232, type: !169)
!3595 = !DILocation(line: 1232, column: 19, scope: !3578)
!3596 = !DILocalVariable(name: "numTex", arg: 8, scope: !3578, file: !1, line: 1235, type: !169)
!3597 = !DILocation(line: 1235, column: 19, scope: !3578)
!3598 = !DILocalVariable(name: "numCol", arg: 9, scope: !3578, file: !1, line: 1236, type: !169)
!3599 = !DILocation(line: 1236, column: 19, scope: !3578)
!3600 = !DILocalVariable(name: "hasPCol", arg: 10, scope: !3578, file: !1, line: 1237, type: !209)
!3601 = !DILocation(line: 1237, column: 20, scope: !3578)
!3602 = !DILocalVariable(name: "hasOrigSpace", arg: 11, scope: !3578, file: !1, line: 1238, type: !209)
!3603 = !DILocation(line: 1238, column: 20, scope: !3578)
!3604 = !DILocalVariable(name: "hasLNor", arg: 12, scope: !3578, file: !1, line: 1239, type: !209)
!3605 = !DILocation(line: 1239, column: 20, scope: !3578)
!3606 = !DILocalVariable(name: "texface", scope: !3578, file: !1, line: 1242, type: !3607)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !4, line: 165, baseType: !1079)
!3609 = !DILocation(line: 1242, column: 10, scope: !3578)
!3610 = !DILocalVariable(name: "texpoly", scope: !3578, file: !1, line: 1243, type: !3611)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTexPoly", file: !4, line: 97, baseType: !974)
!3613 = !DILocation(line: 1243, column: 12, scope: !3578)
!3614 = !DILocalVariable(name: "mcol", scope: !3578, file: !1, line: 1244, type: !3615)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCol", file: !4, line: 76, baseType: !1128)
!3617 = !DILocation(line: 1244, column: 8, scope: !3578)
!3618 = !DILocalVariable(name: "mloopcol", scope: !3578, file: !1, line: 1245, type: !3619)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopCol", file: !4, line: 131, baseType: !1069)
!3621 = !DILocation(line: 1245, column: 12, scope: !3578)
!3622 = !DILocalVariable(name: "mloopuv", scope: !3578, file: !1, line: 1246, type: !135)
!3623 = !DILocation(line: 1246, column: 11, scope: !3578)
!3624 = !DILocalVariable(name: "i", scope: !3578, file: !1, line: 1247, type: !93)
!3625 = !DILocation(line: 1247, column: 6, scope: !3578)
!3626 = !DILocalVariable(name: "j", scope: !3578, file: !1, line: 1247, type: !93)
!3627 = !DILocation(line: 1247, column: 9, scope: !3578)
!3628 = !DILocation(line: 1249, column: 9, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3578, file: !1, line: 1249, column: 2)
!3630 = !DILocation(line: 1249, column: 7, scope: !3629)
!3631 = !DILocation(line: 1249, column: 14, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3629, file: !1, line: 1249, column: 2)
!3633 = !DILocation(line: 1249, column: 18, scope: !3632)
!3634 = !DILocation(line: 1249, column: 16, scope: !3632)
!3635 = !DILocation(line: 1249, column: 2, scope: !3629)
!3636 = !DILocation(line: 1250, column: 30, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3632, file: !1, line: 1249, column: 31)
!3638 = !DILocation(line: 1250, column: 48, scope: !3637)
!3639 = !DILocation(line: 1250, column: 56, scope: !3637)
!3640 = !DILocation(line: 1250, column: 13, scope: !3637)
!3641 = !DILocation(line: 1250, column: 11, scope: !3637)
!3642 = !DILocation(line: 1251, column: 30, scope: !3637)
!3643 = !DILocation(line: 1251, column: 50, scope: !3637)
!3644 = !DILocation(line: 1251, column: 61, scope: !3637)
!3645 = !DILocation(line: 1251, column: 13, scope: !3637)
!3646 = !DILocation(line: 1251, column: 11, scope: !3637)
!3647 = !DILocation(line: 1253, column: 3, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 1253, column: 3)
!3649 = !DILocation(line: 1255, column: 10, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 1255, column: 3)
!3651 = !DILocation(line: 1255, column: 8, scope: !3650)
!3652 = !DILocation(line: 1255, column: 15, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3650, file: !1, line: 1255, column: 3)
!3654 = !DILocation(line: 1255, column: 19, scope: !3653)
!3655 = !DILocation(line: 1255, column: 17, scope: !3653)
!3656 = !DILocation(line: 1255, column: 3, scope: !3650)
!3657 = !DILocation(line: 1256, column: 31, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3653, file: !1, line: 1255, column: 32)
!3659 = !DILocation(line: 1256, column: 55, scope: !3658)
!3660 = !DILocation(line: 1256, column: 62, scope: !3658)
!3661 = !DILocation(line: 1256, column: 66, scope: !3658)
!3662 = !DILocation(line: 1256, column: 14, scope: !3658)
!3663 = !DILocation(line: 1256, column: 12, scope: !3658)
!3664 = !DILocation(line: 1257, column: 15, scope: !3658)
!3665 = !DILocation(line: 1257, column: 24, scope: !3658)
!3666 = !DILocation(line: 1257, column: 27, scope: !3658)
!3667 = !DILocation(line: 1257, column: 31, scope: !3658)
!3668 = !DILocation(line: 1257, column: 40, scope: !3658)
!3669 = !DILocation(line: 1257, column: 4, scope: !3658)
!3670 = !DILocation(line: 1258, column: 3, scope: !3658)
!3671 = !DILocation(line: 1255, column: 28, scope: !3653)
!3672 = !DILocation(line: 1255, column: 3, scope: !3653)
!3673 = distinct !{!3673, !3656, !3674}
!3674 = !DILocation(line: 1258, column: 3, scope: !3650)
!3675 = !DILocation(line: 1259, column: 2, scope: !3637)
!3676 = !DILocation(line: 1249, column: 27, scope: !3632)
!3677 = !DILocation(line: 1249, column: 2, scope: !3632)
!3678 = distinct !{!3678, !3635, !3679}
!3679 = !DILocation(line: 1259, column: 2, scope: !3629)
!3680 = !DILocation(line: 1261, column: 9, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3578, file: !1, line: 1261, column: 2)
!3682 = !DILocation(line: 1261, column: 7, scope: !3681)
!3683 = !DILocation(line: 1261, column: 14, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3681, file: !1, line: 1261, column: 2)
!3685 = !DILocation(line: 1261, column: 18, scope: !3684)
!3686 = !DILocation(line: 1261, column: 16, scope: !3684)
!3687 = !DILocation(line: 1261, column: 2, scope: !3681)
!3688 = !DILocation(line: 1262, column: 27, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3684, file: !1, line: 1261, column: 31)
!3690 = !DILocation(line: 1262, column: 43, scope: !3689)
!3691 = !DILocation(line: 1262, column: 51, scope: !3689)
!3692 = !DILocation(line: 1262, column: 10, scope: !3689)
!3693 = !DILocation(line: 1262, column: 8, scope: !3689)
!3694 = !DILocation(line: 1264, column: 10, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3689, file: !1, line: 1264, column: 3)
!3696 = !DILocation(line: 1264, column: 8, scope: !3695)
!3697 = !DILocation(line: 1264, column: 15, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3695, file: !1, line: 1264, column: 3)
!3699 = !DILocation(line: 1264, column: 19, scope: !3698)
!3700 = !DILocation(line: 1264, column: 17, scope: !3698)
!3701 = !DILocation(line: 1264, column: 3, scope: !3695)
!3702 = !DILocation(line: 1265, column: 32, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3698, file: !1, line: 1264, column: 32)
!3704 = !DILocation(line: 1265, column: 57, scope: !3703)
!3705 = !DILocation(line: 1265, column: 64, scope: !3703)
!3706 = !DILocation(line: 1265, column: 68, scope: !3703)
!3707 = !DILocation(line: 1265, column: 15, scope: !3703)
!3708 = !DILocation(line: 1265, column: 13, scope: !3703)
!3709 = !DILocalVariable(name: "mloopcol__tmp", scope: !3710, file: !1, line: 1266, type: !3711)
!3710 = distinct !DILexicalBlock(scope: !3703, file: !1, line: 1266, column: 4)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3620)
!3713 = !DILocation(line: 1266, column: 4, scope: !3710)
!3714 = !DILocalVariable(name: "mcol__tmp", scope: !3710, file: !1, line: 1266, type: !3615)
!3715 = !DILocation(line: 1267, column: 3, scope: !3703)
!3716 = !DILocation(line: 1264, column: 28, scope: !3698)
!3717 = !DILocation(line: 1264, column: 3, scope: !3698)
!3718 = distinct !{!3718, !3701, !3719}
!3719 = !DILocation(line: 1267, column: 3, scope: !3695)
!3720 = !DILocation(line: 1268, column: 2, scope: !3689)
!3721 = !DILocation(line: 1261, column: 27, scope: !3684)
!3722 = !DILocation(line: 1261, column: 2, scope: !3684)
!3723 = distinct !{!3723, !3687, !3724}
!3724 = !DILocation(line: 1268, column: 2, scope: !3681)
!3725 = !DILocation(line: 1270, column: 6, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3578, file: !1, line: 1270, column: 6)
!3727 = !DILocation(line: 1270, column: 6, scope: !3578)
!3728 = !DILocation(line: 1271, column: 25, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3726, file: !1, line: 1270, column: 15)
!3730 = !DILocation(line: 1271, column: 33, scope: !3729)
!3731 = !DILocation(line: 1271, column: 10, scope: !3729)
!3732 = !DILocation(line: 1271, column: 8, scope: !3729)
!3733 = !DILocation(line: 1273, column: 10, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3729, file: !1, line: 1273, column: 3)
!3735 = !DILocation(line: 1273, column: 8, scope: !3734)
!3736 = !DILocation(line: 1273, column: 15, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3734, file: !1, line: 1273, column: 3)
!3738 = !DILocation(line: 1273, column: 19, scope: !3737)
!3739 = !DILocation(line: 1273, column: 17, scope: !3737)
!3740 = !DILocation(line: 1273, column: 3, scope: !3734)
!3741 = !DILocation(line: 1274, column: 30, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 1273, column: 32)
!3743 = !DILocation(line: 1274, column: 42, scope: !3742)
!3744 = !DILocation(line: 1274, column: 49, scope: !3742)
!3745 = !DILocation(line: 1274, column: 15, scope: !3742)
!3746 = !DILocation(line: 1274, column: 13, scope: !3742)
!3747 = !DILocalVariable(name: "mloopcol__tmp", scope: !3748, file: !1, line: 1275, type: !3711)
!3748 = distinct !DILexicalBlock(scope: !3742, file: !1, line: 1275, column: 4)
!3749 = !DILocation(line: 1275, column: 4, scope: !3748)
!3750 = !DILocalVariable(name: "mcol__tmp", scope: !3748, file: !1, line: 1275, type: !3615)
!3751 = !DILocation(line: 1276, column: 3, scope: !3742)
!3752 = !DILocation(line: 1273, column: 28, scope: !3737)
!3753 = !DILocation(line: 1273, column: 3, scope: !3737)
!3754 = distinct !{!3754, !3740, !3755}
!3755 = !DILocation(line: 1276, column: 3, scope: !3734)
!3756 = !DILocation(line: 1277, column: 2, scope: !3729)
!3757 = !DILocation(line: 1279, column: 6, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3578, file: !1, line: 1279, column: 6)
!3759 = !DILocation(line: 1279, column: 6, scope: !3578)
!3760 = !DILocalVariable(name: "of", scope: !3761, file: !1, line: 1280, type: !3762)
!3761 = distinct !DILexicalBlock(scope: !3758, file: !1, line: 1279, column: 20)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrigSpaceFace", file: !4, line: 180, baseType: !3764)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OrigSpaceFace", file: !4, line: 178, size: 256, elements: !3765)
!3765 = !{!3766}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3764, file: !4, line: 179, baseType: !1082, size: 256)
!3767 = !DILocation(line: 1280, column: 18, scope: !3761)
!3768 = !DILocation(line: 1280, column: 38, scope: !3761)
!3769 = !DILocation(line: 1280, column: 45, scope: !3761)
!3770 = !DILocation(line: 1280, column: 23, scope: !3761)
!3771 = !DILocalVariable(name: "lof", scope: !3761, file: !1, line: 1281, type: !3772)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3773 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrigSpaceLoop", file: !4, line: 184, baseType: !3774)
!3774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OrigSpaceLoop", file: !4, line: 182, size: 64, elements: !3775)
!3775 = !{!3776}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3774, file: !4, line: 183, baseType: !140, size: 64)
!3777 = !DILocation(line: 1281, column: 18, scope: !3761)
!3778 = !DILocation(line: 1283, column: 10, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3761, file: !1, line: 1283, column: 3)
!3780 = !DILocation(line: 1283, column: 8, scope: !3779)
!3781 = !DILocation(line: 1283, column: 15, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3779, file: !1, line: 1283, column: 3)
!3783 = !DILocation(line: 1283, column: 19, scope: !3782)
!3784 = !DILocation(line: 1283, column: 17, scope: !3782)
!3785 = !DILocation(line: 1283, column: 3, scope: !3779)
!3786 = !DILocation(line: 1284, column: 25, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3782, file: !1, line: 1283, column: 32)
!3788 = !DILocation(line: 1284, column: 37, scope: !3787)
!3789 = !DILocation(line: 1284, column: 44, scope: !3787)
!3790 = !DILocation(line: 1284, column: 10, scope: !3787)
!3791 = !DILocation(line: 1284, column: 8, scope: !3787)
!3792 = !DILocation(line: 1285, column: 15, scope: !3787)
!3793 = !DILocation(line: 1285, column: 19, scope: !3787)
!3794 = !DILocation(line: 1285, column: 22, scope: !3787)
!3795 = !DILocation(line: 1285, column: 26, scope: !3787)
!3796 = !DILocation(line: 1285, column: 31, scope: !3787)
!3797 = !DILocation(line: 1285, column: 4, scope: !3787)
!3798 = !DILocation(line: 1286, column: 3, scope: !3787)
!3799 = !DILocation(line: 1283, column: 28, scope: !3782)
!3800 = !DILocation(line: 1283, column: 3, scope: !3782)
!3801 = distinct !{!3801, !3785, !3802}
!3802 = !DILocation(line: 1286, column: 3, scope: !3779)
!3803 = !DILocation(line: 1287, column: 2, scope: !3761)
!3804 = !DILocation(line: 1289, column: 6, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3578, file: !1, line: 1289, column: 6)
!3806 = !DILocation(line: 1289, column: 6, scope: !3578)
!3807 = !DILocalVariable(name: "tlnors", scope: !3808, file: !1, line: 1290, type: !3809)
!3808 = distinct !DILexicalBlock(scope: !3805, file: !1, line: 1289, column: 15)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!3810 = !DILocation(line: 1290, column: 11, scope: !3808)
!3811 = !DILocation(line: 1290, column: 39, scope: !3808)
!3812 = !DILocation(line: 1290, column: 46, scope: !3808)
!3813 = !DILocation(line: 1290, column: 24, scope: !3808)
!3814 = !DILocation(line: 1292, column: 10, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3808, file: !1, line: 1292, column: 3)
!3816 = !DILocation(line: 1292, column: 8, scope: !3815)
!3817 = !DILocation(line: 1292, column: 15, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3815, file: !1, line: 1292, column: 3)
!3819 = !DILocation(line: 1292, column: 19, scope: !3818)
!3820 = !DILocation(line: 1292, column: 17, scope: !3818)
!3821 = !DILocation(line: 1292, column: 3, scope: !3815)
!3822 = !DILocation(line: 1293, column: 29, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3818, file: !1, line: 1292, column: 32)
!3824 = !DILocation(line: 1293, column: 36, scope: !3823)
!3825 = !DILocation(line: 1293, column: 55, scope: !3823)
!3826 = !DILocation(line: 1293, column: 67, scope: !3823)
!3827 = !DILocation(line: 1293, column: 74, scope: !3823)
!3828 = !DILocation(line: 1293, column: 40, scope: !3823)
!3829 = !DILocation(line: 1293, column: 4, scope: !3823)
!3830 = !DILocation(line: 1294, column: 3, scope: !3823)
!3831 = !DILocation(line: 1292, column: 28, scope: !3818)
!3832 = !DILocation(line: 1292, column: 3, scope: !3818)
!3833 = distinct !{!3833, !3821, !3834}
!3834 = !DILocation(line: 1294, column: 3, scope: !3815)
!3835 = !DILocation(line: 1295, column: 2, scope: !3808)
!3836 = !DILocation(line: 1296, column: 1, scope: !3578)
!3837 = distinct !DISubprogram(name: "copy_v2_v2", scope: !658, file: !658, line: 58, type: !659, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3838 = !DILocalVariable(name: "r", arg: 1, scope: !3837, file: !658, line: 58, type: !555)
!3839 = !DILocation(line: 58, column: 31, scope: !3837)
!3840 = !DILocalVariable(name: "a", arg: 2, scope: !3837, file: !658, line: 58, type: !661)
!3841 = !DILocation(line: 58, column: 49, scope: !3837)
!3842 = !DILocation(line: 60, column: 9, scope: !3837)
!3843 = !DILocation(line: 60, column: 2, scope: !3837)
!3844 = !DILocation(line: 60, column: 7, scope: !3837)
!3845 = !DILocation(line: 61, column: 9, scope: !3837)
!3846 = !DILocation(line: 61, column: 2, scope: !3837)
!3847 = !DILocation(line: 61, column: 7, scope: !3837)
!3848 = !DILocation(line: 62, column: 1, scope: !3837)
!3849 = distinct !DISubprogram(name: "BKE_mesh_loops_to_tessdata", scope: !1, file: !1, line: 1305, type: !3850, scopeLine: 1307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{null, !3581, !3581, !3581, !157, !1446, !3852, !169}
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!3853 = !DILocalVariable(name: "fdata", arg: 1, scope: !3849, file: !1, line: 1305, type: !3581)
!3854 = !DILocation(line: 1305, column: 45, scope: !3849)
!3855 = !DILocalVariable(name: "ldata", arg: 2, scope: !3849, file: !1, line: 1305, type: !3581)
!3856 = !DILocation(line: 1305, column: 64, scope: !3849)
!3857 = !DILocalVariable(name: "pdata", arg: 3, scope: !3849, file: !1, line: 1305, type: !3581)
!3858 = !DILocation(line: 1305, column: 83, scope: !3849)
!3859 = !DILocalVariable(name: "mface", arg: 4, scope: !3849, file: !1, line: 1305, type: !157)
!3860 = !DILocation(line: 1305, column: 97, scope: !3849)
!3861 = !DILocalVariable(name: "polyindices", arg: 5, scope: !3849, file: !1, line: 1306, type: !1446)
!3862 = !DILocation(line: 1306, column: 38, scope: !3849)
!3863 = !DILocalVariable(name: "loopindices", arg: 6, scope: !3849, file: !1, line: 1306, type: !3852)
!3864 = !DILocation(line: 1306, column: 66, scope: !3849)
!3865 = !DILocalVariable(name: "num_faces", arg: 7, scope: !3849, file: !1, line: 1306, type: !169)
!3866 = !DILocation(line: 1306, column: 93, scope: !3849)
!3867 = !DILocalVariable(name: "numTex", scope: !3849, file: !1, line: 1312, type: !169)
!3868 = !DILocation(line: 1312, column: 12, scope: !3849)
!3869 = !DILocation(line: 1312, column: 49, scope: !3849)
!3870 = !DILocation(line: 1312, column: 21, scope: !3849)
!3871 = !DILocalVariable(name: "numCol", scope: !3849, file: !1, line: 1313, type: !169)
!3872 = !DILocation(line: 1313, column: 12, scope: !3849)
!3873 = !DILocation(line: 1313, column: 49, scope: !3849)
!3874 = !DILocation(line: 1313, column: 21, scope: !3849)
!3875 = !DILocalVariable(name: "hasPCol", scope: !3849, file: !1, line: 1314, type: !209)
!3876 = !DILocation(line: 1314, column: 13, scope: !3849)
!3877 = !DILocation(line: 1314, column: 44, scope: !3849)
!3878 = !DILocation(line: 1314, column: 23, scope: !3849)
!3879 = !DILocalVariable(name: "hasOrigSpace", scope: !3849, file: !1, line: 1315, type: !209)
!3880 = !DILocation(line: 1315, column: 13, scope: !3849)
!3881 = !DILocation(line: 1315, column: 49, scope: !3849)
!3882 = !DILocation(line: 1315, column: 28, scope: !3849)
!3883 = !DILocalVariable(name: "hasLoopNormal", scope: !3849, file: !1, line: 1316, type: !209)
!3884 = !DILocation(line: 1316, column: 13, scope: !3849)
!3885 = !DILocation(line: 1316, column: 50, scope: !3849)
!3886 = !DILocation(line: 1316, column: 29, scope: !3849)
!3887 = !DILocalVariable(name: "findex", scope: !3849, file: !1, line: 1317, type: !93)
!3888 = !DILocation(line: 1317, column: 6, scope: !3849)
!3889 = !DILocalVariable(name: "i", scope: !3849, file: !1, line: 1317, type: !93)
!3890 = !DILocation(line: 1317, column: 14, scope: !3849)
!3891 = !DILocalVariable(name: "j", scope: !3849, file: !1, line: 1317, type: !93)
!3892 = !DILocation(line: 1317, column: 17, scope: !3849)
!3893 = !DILocalVariable(name: "pidx", scope: !3849, file: !1, line: 1318, type: !168)
!3894 = !DILocation(line: 1318, column: 13, scope: !3849)
!3895 = !DILocalVariable(name: "lidx", scope: !3849, file: !1, line: 1319, type: !3852)
!3896 = !DILocation(line: 1319, column: 17, scope: !3849)
!3897 = !DILocation(line: 1321, column: 9, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3849, file: !1, line: 1321, column: 2)
!3899 = !DILocation(line: 1321, column: 7, scope: !3898)
!3900 = !DILocation(line: 1321, column: 14, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3898, file: !1, line: 1321, column: 2)
!3902 = !DILocation(line: 1321, column: 18, scope: !3901)
!3903 = !DILocation(line: 1321, column: 16, scope: !3901)
!3904 = !DILocation(line: 1321, column: 2, scope: !3898)
!3905 = !DILocalVariable(name: "texface", scope: !3906, file: !1, line: 1322, type: !3607)
!3906 = distinct !DILexicalBlock(scope: !3901, file: !1, line: 1321, column: 31)
!3907 = !DILocation(line: 1322, column: 11, scope: !3906)
!3908 = !DILocation(line: 1322, column: 44, scope: !3906)
!3909 = !DILocation(line: 1322, column: 62, scope: !3906)
!3910 = !DILocation(line: 1322, column: 21, scope: !3906)
!3911 = !DILocalVariable(name: "texpoly", scope: !3906, file: !1, line: 1323, type: !3611)
!3912 = !DILocation(line: 1323, column: 13, scope: !3906)
!3913 = !DILocation(line: 1323, column: 46, scope: !3906)
!3914 = !DILocation(line: 1323, column: 66, scope: !3906)
!3915 = !DILocation(line: 1323, column: 23, scope: !3906)
!3916 = !DILocalVariable(name: "mloopuv", scope: !3906, file: !1, line: 1324, type: !135)
!3917 = !DILocation(line: 1324, column: 12, scope: !3906)
!3918 = !DILocation(line: 1324, column: 45, scope: !3906)
!3919 = !DILocation(line: 1324, column: 64, scope: !3906)
!3920 = !DILocation(line: 1324, column: 22, scope: !3906)
!3921 = !DILocation(line: 1326, column: 15, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3906, file: !1, line: 1326, column: 3)
!3923 = !DILocation(line: 1326, column: 27, scope: !3922)
!3924 = !DILocation(line: 1326, column: 25, scope: !3922)
!3925 = !DILocation(line: 1326, column: 47, scope: !3922)
!3926 = !DILocation(line: 1326, column: 45, scope: !3922)
!3927 = !DILocation(line: 1326, column: 8, scope: !3922)
!3928 = !DILocation(line: 1327, column: 8, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3922, file: !1, line: 1326, column: 3)
!3930 = !DILocation(line: 1327, column: 17, scope: !3929)
!3931 = !DILocation(line: 1327, column: 15, scope: !3929)
!3932 = !DILocation(line: 1326, column: 3, scope: !3922)
!3933 = !DILocation(line: 1330, column: 4, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !1, line: 1330, column: 4)
!3935 = distinct !DILexicalBlock(scope: !3929, file: !1, line: 1329, column: 3)
!3936 = !DILocation(line: 1332, column: 14, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3935, file: !1, line: 1332, column: 4)
!3938 = !DILocation(line: 1332, column: 22, scope: !3937)
!3939 = !DILocation(line: 1332, column: 28, scope: !3937)
!3940 = !DILocation(line: 1332, column: 36, scope: !3937)
!3941 = !DILocation(line: 1332, column: 43, scope: !3937)
!3942 = !DILocation(line: 1332, column: 41, scope: !3937)
!3943 = !DILocation(line: 1332, column: 13, scope: !3937)
!3944 = !DILocation(line: 1332, column: 11, scope: !3937)
!3945 = !DILocation(line: 1332, column: 9, scope: !3937)
!3946 = !DILocation(line: 1332, column: 63, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3937, file: !1, line: 1332, column: 4)
!3948 = !DILocation(line: 1332, column: 4, scope: !3937)
!3949 = !DILocation(line: 1333, column: 16, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3947, file: !1, line: 1332, column: 68)
!3951 = !DILocation(line: 1333, column: 25, scope: !3950)
!3952 = !DILocation(line: 1333, column: 28, scope: !3950)
!3953 = !DILocation(line: 1333, column: 32, scope: !3950)
!3954 = !DILocation(line: 1333, column: 42, scope: !3950)
!3955 = !DILocation(line: 1333, column: 48, scope: !3950)
!3956 = !DILocation(line: 1333, column: 40, scope: !3950)
!3957 = !DILocation(line: 1333, column: 52, scope: !3950)
!3958 = !DILocation(line: 1333, column: 5, scope: !3950)
!3959 = !DILocation(line: 1332, column: 4, scope: !3947)
!3960 = distinct !{!3960, !3948, !3961}
!3961 = !DILocation(line: 1334, column: 4, scope: !3937)
!3962 = !DILocation(line: 1335, column: 3, scope: !3935)
!3963 = !DILocation(line: 1328, column: 12, scope: !3929)
!3964 = !DILocation(line: 1328, column: 20, scope: !3929)
!3965 = !DILocation(line: 1328, column: 30, scope: !3929)
!3966 = !DILocation(line: 1328, column: 41, scope: !3929)
!3967 = !DILocation(line: 1326, column: 3, scope: !3929)
!3968 = distinct !{!3968, !3932, !3969}
!3969 = !DILocation(line: 1335, column: 3, scope: !3922)
!3970 = !DILocation(line: 1336, column: 2, scope: !3906)
!3971 = !DILocation(line: 1321, column: 27, scope: !3901)
!3972 = !DILocation(line: 1321, column: 2, scope: !3901)
!3973 = distinct !{!3973, !3904, !3974}
!3974 = !DILocation(line: 1336, column: 2, scope: !3898)
!3975 = !DILocation(line: 1338, column: 9, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3849, file: !1, line: 1338, column: 2)
!3977 = !DILocation(line: 1338, column: 7, scope: !3976)
!3978 = !DILocation(line: 1338, column: 14, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3976, file: !1, line: 1338, column: 2)
!3980 = !DILocation(line: 1338, column: 18, scope: !3979)
!3981 = !DILocation(line: 1338, column: 16, scope: !3979)
!3982 = !DILocation(line: 1338, column: 2, scope: !3976)
!3983 = !DILocalVariable(name: "mcol", scope: !3984, file: !1, line: 1339, type: !3985)
!3984 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 1338, column: 31)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3616, size: 128, elements: !147)
!3987 = !DILocation(line: 1339, column: 10, scope: !3984)
!3988 = !DILocation(line: 1339, column: 44, scope: !3984)
!3989 = !DILocation(line: 1339, column: 60, scope: !3984)
!3990 = !DILocation(line: 1339, column: 21, scope: !3984)
!3991 = !DILocalVariable(name: "mloopcol", scope: !3984, file: !1, line: 1340, type: !3619)
!3992 = !DILocation(line: 1340, column: 13, scope: !3984)
!3993 = !DILocation(line: 1340, column: 47, scope: !3984)
!3994 = !DILocation(line: 1340, column: 67, scope: !3984)
!3995 = !DILocation(line: 1340, column: 24, scope: !3984)
!3996 = !DILocation(line: 1342, column: 15, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3984, file: !1, line: 1342, column: 3)
!3998 = !DILocation(line: 1342, column: 27, scope: !3997)
!3999 = !DILocation(line: 1342, column: 25, scope: !3997)
!4000 = !DILocation(line: 1342, column: 8, scope: !3997)
!4001 = !DILocation(line: 1342, column: 40, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3997, file: !1, line: 1342, column: 3)
!4003 = !DILocation(line: 1342, column: 49, scope: !4002)
!4004 = !DILocation(line: 1342, column: 47, scope: !4002)
!4005 = !DILocation(line: 1342, column: 3, scope: !3997)
!4006 = !DILocation(line: 1343, column: 14, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !1, line: 1343, column: 4)
!4008 = distinct !DILexicalBlock(scope: !4002, file: !1, line: 1342, column: 86)
!4009 = !DILocation(line: 1343, column: 22, scope: !4007)
!4010 = !DILocation(line: 1343, column: 28, scope: !4007)
!4011 = !DILocation(line: 1343, column: 36, scope: !4007)
!4012 = !DILocation(line: 1343, column: 43, scope: !4007)
!4013 = !DILocation(line: 1343, column: 41, scope: !4007)
!4014 = !DILocation(line: 1343, column: 13, scope: !4007)
!4015 = !DILocation(line: 1343, column: 11, scope: !4007)
!4016 = !DILocation(line: 1343, column: 9, scope: !4007)
!4017 = !DILocation(line: 1343, column: 63, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4007, file: !1, line: 1343, column: 4)
!4019 = !DILocation(line: 1343, column: 4, scope: !4007)
!4020 = !DILocalVariable(name: "mloopcol__tmp", scope: !4021, file: !1, line: 1344, type: !3711)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !1, line: 1344, column: 5)
!4022 = distinct !DILexicalBlock(scope: !4018, file: !1, line: 1343, column: 68)
!4023 = !DILocation(line: 1344, column: 5, scope: !4021)
!4024 = !DILocalVariable(name: "mcol__tmp", scope: !4021, file: !1, line: 1344, type: !3615)
!4025 = !DILocation(line: 1343, column: 4, scope: !4018)
!4026 = distinct !{!4026, !4019, !4027}
!4027 = !DILocation(line: 1345, column: 4, scope: !4007)
!4028 = !DILocation(line: 1346, column: 3, scope: !4008)
!4029 = !DILocation(line: 1342, column: 64, scope: !4002)
!4030 = !DILocation(line: 1342, column: 74, scope: !4002)
!4031 = !DILocation(line: 1342, column: 82, scope: !4002)
!4032 = !DILocation(line: 1342, column: 3, scope: !4002)
!4033 = distinct !{!4033, !4005, !4034}
!4034 = !DILocation(line: 1346, column: 3, scope: !3997)
!4035 = !DILocation(line: 1347, column: 2, scope: !3984)
!4036 = !DILocation(line: 1338, column: 27, scope: !3979)
!4037 = !DILocation(line: 1338, column: 2, scope: !3979)
!4038 = distinct !{!4038, !3982, !4039}
!4039 = !DILocation(line: 1347, column: 2, scope: !3976)
!4040 = !DILocation(line: 1349, column: 6, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3849, file: !1, line: 1349, column: 6)
!4042 = !DILocation(line: 1349, column: 6, scope: !3849)
!4043 = !DILocalVariable(name: "mcol", scope: !4044, file: !1, line: 1350, type: !3985)
!4044 = distinct !DILexicalBlock(scope: !4041, file: !1, line: 1349, column: 15)
!4045 = !DILocation(line: 1350, column: 10, scope: !4044)
!4046 = !DILocation(line: 1350, column: 42, scope: !4044)
!4047 = !DILocation(line: 1350, column: 21, scope: !4044)
!4048 = !DILocalVariable(name: "mloopcol", scope: !4044, file: !1, line: 1351, type: !3619)
!4049 = !DILocation(line: 1351, column: 13, scope: !4044)
!4050 = !DILocation(line: 1351, column: 45, scope: !4044)
!4051 = !DILocation(line: 1351, column: 24, scope: !4044)
!4052 = !DILocation(line: 1353, column: 15, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4044, file: !1, line: 1353, column: 3)
!4054 = !DILocation(line: 1353, column: 27, scope: !4053)
!4055 = !DILocation(line: 1353, column: 25, scope: !4053)
!4056 = !DILocation(line: 1353, column: 8, scope: !4053)
!4057 = !DILocation(line: 1353, column: 40, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4053, file: !1, line: 1353, column: 3)
!4059 = !DILocation(line: 1353, column: 49, scope: !4058)
!4060 = !DILocation(line: 1353, column: 47, scope: !4058)
!4061 = !DILocation(line: 1353, column: 3, scope: !4053)
!4062 = !DILocation(line: 1354, column: 14, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4064, file: !1, line: 1354, column: 4)
!4064 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1353, column: 86)
!4065 = !DILocation(line: 1354, column: 22, scope: !4063)
!4066 = !DILocation(line: 1354, column: 28, scope: !4063)
!4067 = !DILocation(line: 1354, column: 36, scope: !4063)
!4068 = !DILocation(line: 1354, column: 43, scope: !4063)
!4069 = !DILocation(line: 1354, column: 41, scope: !4063)
!4070 = !DILocation(line: 1354, column: 13, scope: !4063)
!4071 = !DILocation(line: 1354, column: 11, scope: !4063)
!4072 = !DILocation(line: 1354, column: 9, scope: !4063)
!4073 = !DILocation(line: 1354, column: 63, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4063, file: !1, line: 1354, column: 4)
!4075 = !DILocation(line: 1354, column: 4, scope: !4063)
!4076 = !DILocalVariable(name: "mloopcol__tmp", scope: !4077, file: !1, line: 1355, type: !3711)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !1, line: 1355, column: 5)
!4078 = distinct !DILexicalBlock(scope: !4074, file: !1, line: 1354, column: 68)
!4079 = !DILocation(line: 1355, column: 5, scope: !4077)
!4080 = !DILocalVariable(name: "mcol__tmp", scope: !4077, file: !1, line: 1355, type: !3615)
!4081 = !DILocation(line: 1354, column: 4, scope: !4074)
!4082 = distinct !{!4082, !4075, !4083}
!4083 = !DILocation(line: 1356, column: 4, scope: !4063)
!4084 = !DILocation(line: 1357, column: 3, scope: !4064)
!4085 = !DILocation(line: 1353, column: 64, scope: !4058)
!4086 = !DILocation(line: 1353, column: 74, scope: !4058)
!4087 = !DILocation(line: 1353, column: 82, scope: !4058)
!4088 = !DILocation(line: 1353, column: 3, scope: !4058)
!4089 = distinct !{!4089, !4061, !4090}
!4090 = !DILocation(line: 1357, column: 3, scope: !4053)
!4091 = !DILocation(line: 1358, column: 2, scope: !4044)
!4092 = !DILocation(line: 1360, column: 6, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !3849, file: !1, line: 1360, column: 6)
!4094 = !DILocation(line: 1360, column: 6, scope: !3849)
!4095 = !DILocalVariable(name: "of", scope: !4096, file: !1, line: 1361, type: !3762)
!4096 = distinct !DILexicalBlock(scope: !4093, file: !1, line: 1360, column: 20)
!4097 = !DILocation(line: 1361, column: 18, scope: !4096)
!4098 = !DILocation(line: 1361, column: 44, scope: !4096)
!4099 = !DILocation(line: 1361, column: 23, scope: !4096)
!4100 = !DILocalVariable(name: "lof", scope: !4096, file: !1, line: 1362, type: !3772)
!4101 = !DILocation(line: 1362, column: 18, scope: !4096)
!4102 = !DILocation(line: 1362, column: 45, scope: !4096)
!4103 = !DILocation(line: 1362, column: 24, scope: !4096)
!4104 = !DILocation(line: 1364, column: 15, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4096, file: !1, line: 1364, column: 3)
!4106 = !DILocation(line: 1364, column: 27, scope: !4105)
!4107 = !DILocation(line: 1364, column: 25, scope: !4105)
!4108 = !DILocation(line: 1364, column: 8, scope: !4105)
!4109 = !DILocation(line: 1364, column: 40, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4105, file: !1, line: 1364, column: 3)
!4111 = !DILocation(line: 1364, column: 49, scope: !4110)
!4112 = !DILocation(line: 1364, column: 47, scope: !4110)
!4113 = !DILocation(line: 1364, column: 3, scope: !4105)
!4114 = !DILocation(line: 1365, column: 14, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4116, file: !1, line: 1365, column: 4)
!4116 = distinct !DILexicalBlock(scope: !4110, file: !1, line: 1364, column: 84)
!4117 = !DILocation(line: 1365, column: 22, scope: !4115)
!4118 = !DILocation(line: 1365, column: 28, scope: !4115)
!4119 = !DILocation(line: 1365, column: 36, scope: !4115)
!4120 = !DILocation(line: 1365, column: 43, scope: !4115)
!4121 = !DILocation(line: 1365, column: 41, scope: !4115)
!4122 = !DILocation(line: 1365, column: 13, scope: !4115)
!4123 = !DILocation(line: 1365, column: 11, scope: !4115)
!4124 = !DILocation(line: 1365, column: 9, scope: !4115)
!4125 = !DILocation(line: 1365, column: 63, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4115, file: !1, line: 1365, column: 4)
!4127 = !DILocation(line: 1365, column: 4, scope: !4115)
!4128 = !DILocation(line: 1366, column: 16, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4126, file: !1, line: 1365, column: 68)
!4130 = !DILocation(line: 1366, column: 20, scope: !4129)
!4131 = !DILocation(line: 1366, column: 23, scope: !4129)
!4132 = !DILocation(line: 1366, column: 27, scope: !4129)
!4133 = !DILocation(line: 1366, column: 33, scope: !4129)
!4134 = !DILocation(line: 1366, column: 39, scope: !4129)
!4135 = !DILocation(line: 1366, column: 31, scope: !4129)
!4136 = !DILocation(line: 1366, column: 43, scope: !4129)
!4137 = !DILocation(line: 1366, column: 5, scope: !4129)
!4138 = !DILocation(line: 1365, column: 4, scope: !4126)
!4139 = distinct !{!4139, !4127, !4140}
!4140 = !DILocation(line: 1367, column: 4, scope: !4115)
!4141 = !DILocation(line: 1368, column: 3, scope: !4116)
!4142 = !DILocation(line: 1364, column: 64, scope: !4110)
!4143 = !DILocation(line: 1364, column: 74, scope: !4110)
!4144 = !DILocation(line: 1364, column: 80, scope: !4110)
!4145 = !DILocation(line: 1364, column: 3, scope: !4110)
!4146 = distinct !{!4146, !4113, !4147}
!4147 = !DILocation(line: 1368, column: 3, scope: !4105)
!4148 = !DILocation(line: 1369, column: 2, scope: !4096)
!4149 = !DILocation(line: 1371, column: 6, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !3849, file: !1, line: 1371, column: 6)
!4151 = !DILocation(line: 1371, column: 6, scope: !3849)
!4152 = !DILocalVariable(name: "fnors", scope: !4153, file: !1, line: 1372, type: !4154)
!4153 = distinct !DILexicalBlock(scope: !4150, file: !1, line: 1371, column: 21)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 64)
!4155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 192, elements: !4156)
!4156 = !{!148, !89}
!4157 = !DILocation(line: 1372, column: 11, scope: !4153)
!4158 = !DILocation(line: 1372, column: 47, scope: !4153)
!4159 = !DILocation(line: 1372, column: 26, scope: !4153)
!4160 = !DILocalVariable(name: "lnors", scope: !4153, file: !1, line: 1373, type: !143)
!4161 = !DILocation(line: 1373, column: 11, scope: !4153)
!4162 = !DILocation(line: 1373, column: 44, scope: !4153)
!4163 = !DILocation(line: 1373, column: 23, scope: !4153)
!4164 = !DILocation(line: 1375, column: 15, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4153, file: !1, line: 1375, column: 3)
!4166 = !DILocation(line: 1375, column: 27, scope: !4165)
!4167 = !DILocation(line: 1375, column: 25, scope: !4165)
!4168 = !DILocation(line: 1375, column: 8, scope: !4165)
!4169 = !DILocation(line: 1375, column: 40, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4165, file: !1, line: 1375, column: 3)
!4171 = !DILocation(line: 1375, column: 49, scope: !4170)
!4172 = !DILocation(line: 1375, column: 47, scope: !4170)
!4173 = !DILocation(line: 1375, column: 3, scope: !4165)
!4174 = !DILocation(line: 1376, column: 14, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !1, line: 1376, column: 4)
!4176 = distinct !DILexicalBlock(scope: !4170, file: !1, line: 1375, column: 87)
!4177 = !DILocation(line: 1376, column: 22, scope: !4175)
!4178 = !DILocation(line: 1376, column: 28, scope: !4175)
!4179 = !DILocation(line: 1376, column: 36, scope: !4175)
!4180 = !DILocation(line: 1376, column: 43, scope: !4175)
!4181 = !DILocation(line: 1376, column: 41, scope: !4175)
!4182 = !DILocation(line: 1376, column: 13, scope: !4175)
!4183 = !DILocation(line: 1376, column: 11, scope: !4175)
!4184 = !DILocation(line: 1376, column: 9, scope: !4175)
!4185 = !DILocation(line: 1376, column: 63, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4175, file: !1, line: 1376, column: 4)
!4187 = !DILocation(line: 1376, column: 4, scope: !4175)
!4188 = !DILocation(line: 1377, column: 32, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4186, file: !1, line: 1376, column: 68)
!4190 = !DILocation(line: 1377, column: 39, scope: !4189)
!4191 = !DILocation(line: 1377, column: 30, scope: !4189)
!4192 = !DILocation(line: 1377, column: 43, scope: !4189)
!4193 = !DILocation(line: 1377, column: 51, scope: !4189)
!4194 = !DILocation(line: 1377, column: 57, scope: !4189)
!4195 = !DILocation(line: 1377, column: 49, scope: !4189)
!4196 = !DILocation(line: 1377, column: 5, scope: !4189)
!4197 = !DILocation(line: 1376, column: 4, scope: !4186)
!4198 = distinct !{!4198, !4187, !4199}
!4199 = !DILocation(line: 1378, column: 4, scope: !4175)
!4200 = !DILocation(line: 1379, column: 3, scope: !4176)
!4201 = !DILocation(line: 1375, column: 64, scope: !4170)
!4202 = !DILocation(line: 1375, column: 74, scope: !4170)
!4203 = !DILocation(line: 1375, column: 83, scope: !4170)
!4204 = !DILocation(line: 1375, column: 3, scope: !4170)
!4205 = distinct !{!4205, !4173, !4206}
!4206 = !DILocation(line: 1379, column: 3, scope: !4165)
!4207 = !DILocation(line: 1380, column: 2, scope: !4153)
!4208 = !DILocation(line: 1381, column: 1, scope: !3849)
!4209 = distinct !DISubprogram(name: "BKE_mesh_recalc_tessellation", scope: !1, file: !1, line: 1390, type: !4210, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{!93, !3581, !3581, !3581, !124, !93, !93, !93, !209}
!4212 = !DILocalVariable(name: "fdata", arg: 1, scope: !4209, file: !1, line: 1390, type: !3581)
!4213 = !DILocation(line: 1390, column: 46, scope: !4209)
!4214 = !DILocalVariable(name: "ldata", arg: 2, scope: !4209, file: !1, line: 1390, type: !3581)
!4215 = !DILocation(line: 1390, column: 65, scope: !4209)
!4216 = !DILocalVariable(name: "pdata", arg: 3, scope: !4209, file: !1, line: 1390, type: !3581)
!4217 = !DILocation(line: 1390, column: 84, scope: !4209)
!4218 = !DILocalVariable(name: "mvert", arg: 4, scope: !4209, file: !1, line: 1391, type: !124)
!4219 = !DILocation(line: 1391, column: 41, scope: !4209)
!4220 = !DILocalVariable(name: "totface", arg: 5, scope: !4209, file: !1, line: 1391, type: !93)
!4221 = !DILocation(line: 1391, column: 52, scope: !4209)
!4222 = !DILocalVariable(name: "totloop", arg: 6, scope: !4209, file: !1, line: 1391, type: !93)
!4223 = !DILocation(line: 1391, column: 65, scope: !4209)
!4224 = !DILocalVariable(name: "totpoly", arg: 7, scope: !4209, file: !1, line: 1391, type: !93)
!4225 = !DILocation(line: 1391, column: 78, scope: !4209)
!4226 = !DILocalVariable(name: "do_face_nor_cpy", arg: 8, scope: !4209, file: !1, line: 1391, type: !209)
!4227 = !DILocation(line: 1391, column: 98, scope: !4209)
!4228 = !DILocalVariable(name: "looptris_tot", scope: !4209, file: !1, line: 1402, type: !169)
!4229 = !DILocation(line: 1402, column: 12, scope: !4209)
!4230 = !DILocation(line: 1402, column: 45, scope: !4209)
!4231 = !DILocation(line: 1402, column: 54, scope: !4209)
!4232 = !DILocation(line: 1402, column: 27, scope: !4209)
!4233 = !DILocalVariable(name: "mp", scope: !4209, file: !1, line: 1404, type: !107)
!4234 = !DILocation(line: 1404, column: 9, scope: !4209)
!4235 = !DILocalVariable(name: "mpoly", scope: !4209, file: !1, line: 1404, type: !107)
!4236 = !DILocation(line: 1404, column: 14, scope: !4209)
!4237 = !DILocalVariable(name: "ml", scope: !4209, file: !1, line: 1405, type: !117)
!4238 = !DILocation(line: 1405, column: 9, scope: !4209)
!4239 = !DILocalVariable(name: "mloop", scope: !4209, file: !1, line: 1405, type: !117)
!4240 = !DILocation(line: 1405, column: 14, scope: !4209)
!4241 = !DILocalVariable(name: "mface", scope: !4209, file: !1, line: 1406, type: !157)
!4242 = !DILocation(line: 1406, column: 9, scope: !4209)
!4243 = !DILocalVariable(name: "mf", scope: !4209, file: !1, line: 1406, type: !157)
!4244 = !DILocation(line: 1406, column: 17, scope: !4209)
!4245 = !DILocalVariable(name: "arena", scope: !4209, file: !1, line: 1407, type: !4246)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4247, size: 64)
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemArena", file: !4248, line: 53, baseType: !4249)
!4248 = !DIFile(filename: "blender/source/blender/blenlib/BLI_memarena.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4249 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !4248, line: 52, flags: DIFlagFwdDecl)
!4250 = !DILocation(line: 1407, column: 12, scope: !4209)
!4251 = !DILocalVariable(name: "mface_to_poly_map", scope: !4209, file: !1, line: 1408, type: !1446)
!4252 = !DILocation(line: 1408, column: 7, scope: !4209)
!4253 = !DILocalVariable(name: "lindices", scope: !4209, file: !1, line: 1409, type: !3852)
!4254 = !DILocation(line: 1409, column: 17, scope: !4209)
!4255 = !DILocalVariable(name: "poly_index", scope: !4209, file: !1, line: 1410, type: !93)
!4256 = !DILocation(line: 1410, column: 6, scope: !4209)
!4257 = !DILocalVariable(name: "mface_index", scope: !4209, file: !1, line: 1410, type: !93)
!4258 = !DILocation(line: 1410, column: 18, scope: !4209)
!4259 = !DILocalVariable(name: "j", scope: !4209, file: !1, line: 1411, type: !5)
!4260 = !DILocation(line: 1411, column: 15, scope: !4209)
!4261 = !DILocation(line: 1413, column: 31, scope: !4209)
!4262 = !DILocation(line: 1413, column: 10, scope: !4209)
!4263 = !DILocation(line: 1413, column: 8, scope: !4209)
!4264 = !DILocation(line: 1414, column: 31, scope: !4209)
!4265 = !DILocation(line: 1414, column: 10, scope: !4209)
!4266 = !DILocation(line: 1414, column: 8, scope: !4209)
!4267 = !DILocation(line: 1419, column: 22, scope: !4209)
!4268 = !DILocation(line: 1419, column: 71, scope: !4209)
!4269 = !DILocation(line: 1419, column: 63, scope: !4209)
!4270 = !DILocation(line: 1419, column: 61, scope: !4209)
!4271 = !DILocation(line: 1419, column: 20, scope: !4209)
!4272 = !DILocation(line: 1420, column: 22, scope: !4209)
!4273 = !DILocation(line: 1420, column: 71, scope: !4209)
!4274 = !DILocation(line: 1420, column: 63, scope: !4209)
!4275 = !DILocation(line: 1420, column: 49, scope: !4209)
!4276 = !DILocation(line: 1420, column: 20, scope: !4209)
!4277 = !DILocation(line: 1421, column: 22, scope: !4209)
!4278 = !DILocation(line: 1421, column: 71, scope: !4209)
!4279 = !DILocation(line: 1421, column: 63, scope: !4209)
!4280 = !DILocation(line: 1421, column: 52, scope: !4209)
!4281 = !DILocation(line: 1421, column: 20, scope: !4209)
!4282 = !DILocation(line: 1423, column: 14, scope: !4209)
!4283 = !DILocation(line: 1424, column: 7, scope: !4209)
!4284 = !DILocation(line: 1424, column: 5, scope: !4209)
!4285 = !DILocation(line: 1425, column: 18, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4209, file: !1, line: 1425, column: 2)
!4287 = !DILocation(line: 1425, column: 7, scope: !4286)
!4288 = !DILocation(line: 1425, column: 23, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4286, file: !1, line: 1425, column: 2)
!4290 = !DILocation(line: 1425, column: 36, scope: !4289)
!4291 = !DILocation(line: 1425, column: 34, scope: !4289)
!4292 = !DILocation(line: 1425, column: 2, scope: !4286)
!4293 = !DILocalVariable(name: "mp_loopstart", scope: !4294, file: !1, line: 1426, type: !1689)
!4294 = distinct !DILexicalBlock(scope: !4289, file: !1, line: 1425, column: 65)
!4295 = !DILocation(line: 1426, column: 22, scope: !4294)
!4296 = !DILocation(line: 1426, column: 51, scope: !4294)
!4297 = !DILocation(line: 1426, column: 55, scope: !4294)
!4298 = !DILocalVariable(name: "mp_totloop", scope: !4294, file: !1, line: 1427, type: !1689)
!4299 = !DILocation(line: 1427, column: 22, scope: !4294)
!4300 = !DILocation(line: 1427, column: 49, scope: !4294)
!4301 = !DILocation(line: 1427, column: 53, scope: !4294)
!4302 = !DILocalVariable(name: "l1", scope: !4294, file: !1, line: 1428, type: !5)
!4303 = !DILocation(line: 1428, column: 16, scope: !4294)
!4304 = !DILocalVariable(name: "l2", scope: !4294, file: !1, line: 1428, type: !5)
!4305 = !DILocation(line: 1428, column: 20, scope: !4294)
!4306 = !DILocalVariable(name: "l3", scope: !4294, file: !1, line: 1428, type: !5)
!4307 = !DILocation(line: 1428, column: 24, scope: !4294)
!4308 = !DILocalVariable(name: "l4", scope: !4294, file: !1, line: 1428, type: !5)
!4309 = !DILocation(line: 1428, column: 28, scope: !4294)
!4310 = !DILocalVariable(name: "lidx", scope: !4294, file: !1, line: 1429, type: !1013)
!4311 = !DILocation(line: 1429, column: 17, scope: !4294)
!4312 = !DILocation(line: 1430, column: 7, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4294, file: !1, line: 1430, column: 7)
!4314 = !DILocation(line: 1430, column: 18, scope: !4313)
!4315 = !DILocation(line: 1430, column: 7, scope: !4294)
!4316 = !DILocation(line: 1432, column: 3, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4313, file: !1, line: 1430, column: 23)
!4318 = !DILocation(line: 1481, column: 12, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4313, file: !1, line: 1481, column: 12)
!4320 = !DILocation(line: 1481, column: 23, scope: !4319)
!4321 = !DILocation(line: 1481, column: 12, scope: !4313)
!4322 = !DILocation(line: 1482, column: 4, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4319, file: !1, line: 1481, column: 29)
!4324 = !DILocation(line: 1483, column: 15, scope: !4323)
!4325 = !DILocation(line: 1484, column: 3, scope: !4323)
!4326 = !DILocation(line: 1485, column: 12, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4319, file: !1, line: 1485, column: 12)
!4328 = !DILocation(line: 1485, column: 23, scope: !4327)
!4329 = !DILocation(line: 1485, column: 12, scope: !4319)
!4330 = !DILocation(line: 1487, column: 4, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4327, file: !1, line: 1485, column: 29)
!4332 = !DILocation(line: 1488, column: 15, scope: !4331)
!4333 = !DILocation(line: 1495, column: 3, scope: !4331)
!4334 = !DILocalVariable(name: "co_curr", scope: !4335, file: !1, line: 1498, type: !661)
!4335 = distinct !DILexicalBlock(scope: !4327, file: !1, line: 1497, column: 8)
!4336 = !DILocation(line: 1498, column: 17, scope: !4335)
!4337 = !DILocalVariable(name: "co_prev", scope: !4335, file: !1, line: 1498, type: !661)
!4338 = !DILocation(line: 1498, column: 27, scope: !4335)
!4339 = !DILocalVariable(name: "normal", scope: !4335, file: !1, line: 1500, type: !129)
!4340 = !DILocation(line: 1500, column: 10, scope: !4335)
!4341 = !DILocalVariable(name: "axis_mat", scope: !4335, file: !1, line: 1502, type: !4342)
!4342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 288, elements: !4343)
!4343 = !{!89, !89}
!4344 = !DILocation(line: 1502, column: 10, scope: !4335)
!4345 = !DILocalVariable(name: "projverts", scope: !4335, file: !1, line: 1503, type: !4346)
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!4347 = !DILocation(line: 1503, column: 12, scope: !4335)
!4348 = !DILocalVariable(name: "tris", scope: !4335, file: !1, line: 1504, type: !4349)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 96, elements: !88)
!4351 = !DILocation(line: 1504, column: 19, scope: !4335)
!4352 = !DILocalVariable(name: "totfilltri", scope: !4335, file: !1, line: 1506, type: !1689)
!4353 = !DILocation(line: 1506, column: 23, scope: !4335)
!4354 = !DILocation(line: 1506, column: 36, scope: !4335)
!4355 = !DILocation(line: 1506, column: 47, scope: !4335)
!4356 = !DILocation(line: 1508, column: 8, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4335, file: !1, line: 1508, column: 8)
!4358 = !DILocation(line: 1508, column: 8, scope: !4335)
!4359 = !DILocation(line: 1509, column: 13, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4357, file: !1, line: 1508, column: 33)
!4361 = !DILocation(line: 1509, column: 11, scope: !4360)
!4362 = !DILocation(line: 1510, column: 4, scope: !4360)
!4363 = !DILocation(line: 1512, column: 30, scope: !4335)
!4364 = !DILocation(line: 1512, column: 61, scope: !4335)
!4365 = !DILocation(line: 1512, column: 53, scope: !4335)
!4366 = !DILocation(line: 1512, column: 51, scope: !4335)
!4367 = !DILocation(line: 1512, column: 11, scope: !4335)
!4368 = !DILocation(line: 1512, column: 9, scope: !4335)
!4369 = !DILocation(line: 1513, column: 35, scope: !4335)
!4370 = !DILocation(line: 1513, column: 71, scope: !4335)
!4371 = !DILocation(line: 1513, column: 63, scope: !4335)
!4372 = !DILocation(line: 1513, column: 61, scope: !4335)
!4373 = !DILocation(line: 1513, column: 16, scope: !4335)
!4374 = !DILocation(line: 1513, column: 14, scope: !4335)
!4375 = !DILocation(line: 1515, column: 12, scope: !4335)
!4376 = !DILocation(line: 1515, column: 4, scope: !4335)
!4377 = !DILocation(line: 1518, column: 9, scope: !4335)
!4378 = !DILocation(line: 1518, column: 17, scope: !4335)
!4379 = !DILocation(line: 1518, column: 15, scope: !4335)
!4380 = !DILocation(line: 1518, column: 7, scope: !4335)
!4381 = !DILocation(line: 1519, column: 14, scope: !4335)
!4382 = !DILocation(line: 1519, column: 20, scope: !4335)
!4383 = !DILocation(line: 1519, column: 23, scope: !4335)
!4384 = !DILocation(line: 1519, column: 34, scope: !4335)
!4385 = !DILocation(line: 1519, column: 39, scope: !4335)
!4386 = !DILocation(line: 1519, column: 42, scope: !4335)
!4387 = !DILocation(line: 1519, column: 12, scope: !4335)
!4388 = !DILocation(line: 1520, column: 11, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4335, file: !1, line: 1520, column: 4)
!4390 = !DILocation(line: 1520, column: 9, scope: !4389)
!4391 = !DILocation(line: 1520, column: 16, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4389, file: !1, line: 1520, column: 4)
!4393 = !DILocation(line: 1520, column: 20, scope: !4392)
!4394 = !DILocation(line: 1520, column: 18, scope: !4392)
!4395 = !DILocation(line: 1520, column: 4, scope: !4389)
!4396 = !DILocation(line: 1521, column: 15, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4392, file: !1, line: 1520, column: 43)
!4398 = !DILocation(line: 1521, column: 21, scope: !4397)
!4399 = !DILocation(line: 1521, column: 25, scope: !4397)
!4400 = !DILocation(line: 1521, column: 28, scope: !4397)
!4401 = !DILocation(line: 1521, column: 13, scope: !4397)
!4402 = !DILocation(line: 1522, column: 30, scope: !4397)
!4403 = !DILocation(line: 1522, column: 38, scope: !4397)
!4404 = !DILocation(line: 1522, column: 47, scope: !4397)
!4405 = !DILocation(line: 1522, column: 5, scope: !4397)
!4406 = !DILocation(line: 1523, column: 15, scope: !4397)
!4407 = !DILocation(line: 1523, column: 13, scope: !4397)
!4408 = !DILocation(line: 1524, column: 4, scope: !4397)
!4409 = !DILocation(line: 1520, column: 33, scope: !4392)
!4410 = !DILocation(line: 1520, column: 39, scope: !4392)
!4411 = !DILocation(line: 1520, column: 4, scope: !4392)
!4412 = distinct !{!4412, !4395, !4413}
!4413 = !DILocation(line: 1524, column: 4, scope: !4389)
!4414 = !DILocation(line: 1525, column: 8, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4335, file: !1, line: 1525, column: 8)
!4416 = !DILocation(line: 1525, column: 8, scope: !4335)
!4417 = !DILocation(line: 1526, column: 5, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 1525, column: 48)
!4419 = !DILocation(line: 1526, column: 15, scope: !4418)
!4420 = !DILocation(line: 1527, column: 4, scope: !4418)
!4421 = !DILocation(line: 1530, column: 27, scope: !4335)
!4422 = !DILocation(line: 1530, column: 37, scope: !4335)
!4423 = !DILocation(line: 1530, column: 4, scope: !4335)
!4424 = !DILocation(line: 1532, column: 9, scope: !4335)
!4425 = !DILocation(line: 1532, column: 17, scope: !4335)
!4426 = !DILocation(line: 1532, column: 15, scope: !4335)
!4427 = !DILocation(line: 1532, column: 7, scope: !4335)
!4428 = !DILocation(line: 1533, column: 11, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4335, file: !1, line: 1533, column: 4)
!4430 = !DILocation(line: 1533, column: 9, scope: !4429)
!4431 = !DILocation(line: 1533, column: 16, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4429, file: !1, line: 1533, column: 4)
!4433 = !DILocation(line: 1533, column: 20, scope: !4432)
!4434 = !DILocation(line: 1533, column: 18, scope: !4432)
!4435 = !DILocation(line: 1533, column: 4, scope: !4429)
!4436 = !DILocation(line: 1534, column: 17, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4432, file: !1, line: 1533, column: 43)
!4438 = !DILocation(line: 1534, column: 27, scope: !4437)
!4439 = !DILocation(line: 1534, column: 31, scope: !4437)
!4440 = !DILocation(line: 1534, column: 41, scope: !4437)
!4441 = !DILocation(line: 1534, column: 47, scope: !4437)
!4442 = !DILocation(line: 1534, column: 51, scope: !4437)
!4443 = !DILocation(line: 1534, column: 54, scope: !4437)
!4444 = !DILocation(line: 1534, column: 5, scope: !4437)
!4445 = !DILocation(line: 1535, column: 4, scope: !4437)
!4446 = !DILocation(line: 1533, column: 33, scope: !4432)
!4447 = !DILocation(line: 1533, column: 39, scope: !4432)
!4448 = !DILocation(line: 1533, column: 4, scope: !4432)
!4449 = distinct !{!4449, !4435, !4450}
!4450 = !DILocation(line: 1535, column: 4, scope: !4429)
!4451 = !DILocation(line: 1537, column: 48, scope: !4335)
!4452 = !DILocation(line: 1537, column: 59, scope: !4335)
!4453 = !DILocation(line: 1537, column: 75, scope: !4335)
!4454 = !DILocation(line: 1537, column: 81, scope: !4335)
!4455 = !DILocation(line: 1537, column: 4, scope: !4335)
!4456 = !DILocation(line: 1540, column: 11, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4335, file: !1, line: 1540, column: 4)
!4458 = !DILocation(line: 1540, column: 9, scope: !4457)
!4459 = !DILocation(line: 1540, column: 16, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4457, file: !1, line: 1540, column: 4)
!4461 = !DILocation(line: 1540, column: 20, scope: !4460)
!4462 = !DILocation(line: 1540, column: 18, scope: !4460)
!4463 = !DILocation(line: 1540, column: 4, scope: !4457)
!4464 = !DILocalVariable(name: "tri", scope: !4465, file: !1, line: 1541, type: !1013)
!4465 = distinct !DILexicalBlock(scope: !4460, file: !1, line: 1540, column: 37)
!4466 = !DILocation(line: 1541, column: 19, scope: !4465)
!4467 = !DILocation(line: 1541, column: 25, scope: !4465)
!4468 = !DILocation(line: 1541, column: 30, scope: !4465)
!4469 = !DILocation(line: 1542, column: 12, scope: !4465)
!4470 = !DILocation(line: 1542, column: 21, scope: !4465)
!4471 = !DILocation(line: 1542, column: 10, scope: !4465)
!4472 = !DILocation(line: 1544, column: 38, scope: !4465)
!4473 = !DILocation(line: 1544, column: 5, scope: !4465)
!4474 = !DILocation(line: 1544, column: 23, scope: !4465)
!4475 = !DILocation(line: 1544, column: 36, scope: !4465)
!4476 = !DILocation(line: 1545, column: 11, scope: !4465)
!4477 = !DILocation(line: 1545, column: 17, scope: !4465)
!4478 = !DILocation(line: 1545, column: 8, scope: !4465)
!4479 = !DILocation(line: 1548, column: 10, scope: !4465)
!4480 = !DILocation(line: 1548, column: 25, scope: !4465)
!4481 = !DILocation(line: 1548, column: 23, scope: !4465)
!4482 = !DILocation(line: 1548, column: 8, scope: !4465)
!4483 = !DILocation(line: 1549, column: 10, scope: !4465)
!4484 = !DILocation(line: 1549, column: 25, scope: !4465)
!4485 = !DILocation(line: 1549, column: 23, scope: !4465)
!4486 = !DILocation(line: 1549, column: 8, scope: !4465)
!4487 = !DILocation(line: 1550, column: 10, scope: !4465)
!4488 = !DILocation(line: 1550, column: 25, scope: !4465)
!4489 = !DILocation(line: 1550, column: 23, scope: !4465)
!4490 = !DILocation(line: 1550, column: 8, scope: !4465)
!4491 = !DILocation(line: 1553, column: 9, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4465, file: !1, line: 1553, column: 9)
!4493 = !DILocation(line: 1553, column: 14, scope: !4492)
!4494 = !DILocation(line: 1553, column: 12, scope: !4492)
!4495 = !DILocation(line: 1553, column: 9, scope: !4465)
!4496 = !DILocalVariable(name: "sw_ap", scope: !4497, file: !1, line: 1553, type: !5)
!4497 = distinct !DILexicalBlock(scope: !4492, file: !1, line: 1553, column: 18)
!4498 = !DILocation(line: 1553, column: 18, scope: !4497)
!4499 = !DILocation(line: 1554, column: 9, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4465, file: !1, line: 1554, column: 9)
!4501 = !DILocation(line: 1554, column: 14, scope: !4500)
!4502 = !DILocation(line: 1554, column: 12, scope: !4500)
!4503 = !DILocation(line: 1554, column: 9, scope: !4465)
!4504 = !DILocalVariable(name: "sw_ap", scope: !4505, file: !1, line: 1554, type: !5)
!4505 = distinct !DILexicalBlock(scope: !4500, file: !1, line: 1554, column: 18)
!4506 = !DILocation(line: 1554, column: 18, scope: !4505)
!4507 = !DILocation(line: 1555, column: 9, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4465, file: !1, line: 1555, column: 9)
!4509 = !DILocation(line: 1555, column: 14, scope: !4508)
!4510 = !DILocation(line: 1555, column: 12, scope: !4508)
!4511 = !DILocation(line: 1555, column: 9, scope: !4465)
!4512 = !DILocalVariable(name: "sw_ap", scope: !4513, file: !1, line: 1555, type: !5)
!4513 = distinct !DILexicalBlock(scope: !4508, file: !1, line: 1555, column: 18)
!4514 = !DILocation(line: 1555, column: 18, scope: !4513)
!4515 = !DILocation(line: 1557, column: 14, scope: !4465)
!4516 = !DILocation(line: 1557, column: 20, scope: !4465)
!4517 = !DILocation(line: 1557, column: 24, scope: !4465)
!4518 = !DILocation(line: 1557, column: 5, scope: !4465)
!4519 = !DILocation(line: 1557, column: 9, scope: !4465)
!4520 = !DILocation(line: 1557, column: 12, scope: !4465)
!4521 = !DILocation(line: 1558, column: 14, scope: !4465)
!4522 = !DILocation(line: 1558, column: 20, scope: !4465)
!4523 = !DILocation(line: 1558, column: 24, scope: !4465)
!4524 = !DILocation(line: 1558, column: 5, scope: !4465)
!4525 = !DILocation(line: 1558, column: 9, scope: !4465)
!4526 = !DILocation(line: 1558, column: 12, scope: !4465)
!4527 = !DILocation(line: 1559, column: 14, scope: !4465)
!4528 = !DILocation(line: 1559, column: 20, scope: !4465)
!4529 = !DILocation(line: 1559, column: 24, scope: !4465)
!4530 = !DILocation(line: 1559, column: 5, scope: !4465)
!4531 = !DILocation(line: 1559, column: 9, scope: !4465)
!4532 = !DILocation(line: 1559, column: 12, scope: !4465)
!4533 = !DILocation(line: 1560, column: 5, scope: !4465)
!4534 = !DILocation(line: 1560, column: 9, scope: !4465)
!4535 = !DILocation(line: 1560, column: 12, scope: !4465)
!4536 = !DILocation(line: 1562, column: 15, scope: !4465)
!4537 = !DILocation(line: 1562, column: 5, scope: !4465)
!4538 = !DILocation(line: 1562, column: 13, scope: !4465)
!4539 = !DILocation(line: 1563, column: 15, scope: !4465)
!4540 = !DILocation(line: 1563, column: 5, scope: !4465)
!4541 = !DILocation(line: 1563, column: 13, scope: !4465)
!4542 = !DILocation(line: 1564, column: 15, scope: !4465)
!4543 = !DILocation(line: 1564, column: 5, scope: !4465)
!4544 = !DILocation(line: 1564, column: 13, scope: !4465)
!4545 = !DILocation(line: 1565, column: 5, scope: !4465)
!4546 = !DILocation(line: 1565, column: 13, scope: !4465)
!4547 = !DILocation(line: 1567, column: 18, scope: !4465)
!4548 = !DILocation(line: 1567, column: 22, scope: !4465)
!4549 = !DILocation(line: 1567, column: 5, scope: !4465)
!4550 = !DILocation(line: 1567, column: 9, scope: !4465)
!4551 = !DILocation(line: 1567, column: 16, scope: !4465)
!4552 = !DILocation(line: 1568, column: 16, scope: !4465)
!4553 = !DILocation(line: 1568, column: 20, scope: !4465)
!4554 = !DILocation(line: 1568, column: 5, scope: !4465)
!4555 = !DILocation(line: 1568, column: 9, scope: !4465)
!4556 = !DILocation(line: 1568, column: 14, scope: !4465)
!4557 = !DILocation(line: 1569, column: 5, scope: !4465)
!4558 = !DILocation(line: 1569, column: 9, scope: !4465)
!4559 = !DILocation(line: 1569, column: 16, scope: !4465)
!4560 = !DILocation(line: 1571, column: 16, scope: !4465)
!4561 = !DILocation(line: 1572, column: 4, scope: !4465)
!4562 = !DILocation(line: 1540, column: 33, scope: !4460)
!4563 = !DILocation(line: 1540, column: 4, scope: !4460)
!4564 = distinct !{!4564, !4463, !4565}
!4565 = !DILocation(line: 1572, column: 4, scope: !4457)
!4566 = !DILocation(line: 1574, column: 23, scope: !4335)
!4567 = !DILocation(line: 1574, column: 4, scope: !4335)
!4568 = !DILocation(line: 1576, column: 2, scope: !4294)
!4569 = !DILocation(line: 1425, column: 55, scope: !4289)
!4570 = !DILocation(line: 1425, column: 61, scope: !4289)
!4571 = !DILocation(line: 1425, column: 2, scope: !4289)
!4572 = distinct !{!4572, !4292, !4573}
!4573 = !DILocation(line: 1576, column: 2, scope: !4286)
!4574 = !DILocation(line: 1578, column: 6, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4209, file: !1, line: 1578, column: 6)
!4576 = !DILocation(line: 1578, column: 6, scope: !4209)
!4577 = !DILocation(line: 1579, column: 21, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4575, file: !1, line: 1578, column: 13)
!4579 = !DILocation(line: 1579, column: 3, scope: !4578)
!4580 = !DILocation(line: 1580, column: 9, scope: !4578)
!4581 = !DILocation(line: 1581, column: 2, scope: !4578)
!4582 = !DILocation(line: 1583, column: 18, scope: !4209)
!4583 = !DILocation(line: 1583, column: 25, scope: !4209)
!4584 = !DILocation(line: 1583, column: 2, scope: !4209)
!4585 = !DILocation(line: 1584, column: 12, scope: !4209)
!4586 = !DILocation(line: 1584, column: 10, scope: !4209)
!4587 = !DILocation(line: 1589, column: 6, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4209, file: !1, line: 1589, column: 6)
!4589 = !DILocation(line: 1589, column: 6, scope: !4209)
!4590 = !DILocation(line: 1590, column: 11, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4588, file: !1, line: 1589, column: 39)
!4592 = !DILocation(line: 1590, column: 9, scope: !4591)
!4593 = !DILocation(line: 1591, column: 23, scope: !4591)
!4594 = !DILocation(line: 1591, column: 21, scope: !4591)
!4595 = !DILocation(line: 1592, column: 2, scope: !4591)
!4596 = !DILocation(line: 1594, column: 23, scope: !4209)
!4597 = !DILocation(line: 1594, column: 51, scope: !4209)
!4598 = !DILocation(line: 1594, column: 58, scope: !4209)
!4599 = !DILocation(line: 1594, column: 2, scope: !4209)
!4600 = !DILocation(line: 1598, column: 23, scope: !4209)
!4601 = !DILocation(line: 1598, column: 55, scope: !4209)
!4602 = !DILocation(line: 1598, column: 74, scope: !4209)
!4603 = !DILocation(line: 1598, column: 2, scope: !4209)
!4604 = !DILocation(line: 1599, column: 28, scope: !4209)
!4605 = !DILocation(line: 1599, column: 35, scope: !4209)
!4606 = !DILocation(line: 1599, column: 42, scope: !4209)
!4607 = !DILocation(line: 1599, column: 49, scope: !4209)
!4608 = !DILocation(line: 1599, column: 2, scope: !4209)
!4609 = !DILocation(line: 1601, column: 6, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4209, file: !1, line: 1601, column: 6)
!4611 = !DILocation(line: 1601, column: 6, scope: !4209)
!4612 = !DILocation(line: 1604, column: 28, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !1, line: 1604, column: 7)
!4614 = distinct !DILexicalBlock(scope: !4610, file: !1, line: 1601, column: 23)
!4615 = !DILocation(line: 1604, column: 7, scope: !4613)
!4616 = !DILocation(line: 1604, column: 7, scope: !4614)
!4617 = !DILocalVariable(name: "pnors", scope: !4618, file: !1, line: 1605, type: !143)
!4618 = distinct !DILexicalBlock(scope: !4613, file: !1, line: 1604, column: 47)
!4619 = !DILocation(line: 1605, column: 12, scope: !4618)
!4620 = !DILocation(line: 1605, column: 45, scope: !4618)
!4621 = !DILocation(line: 1605, column: 24, scope: !4618)
!4622 = !DILocalVariable(name: "fnors", scope: !4618, file: !1, line: 1606, type: !143)
!4623 = !DILocation(line: 1606, column: 12, scope: !4618)
!4624 = !DILocation(line: 1606, column: 45, scope: !4618)
!4625 = !DILocation(line: 1606, column: 80, scope: !4618)
!4626 = !DILocation(line: 1606, column: 24, scope: !4618)
!4627 = !DILocation(line: 1607, column: 21, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1607, column: 4)
!4629 = !DILocation(line: 1607, column: 9, scope: !4628)
!4630 = !DILocation(line: 1607, column: 26, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4628, file: !1, line: 1607, column: 4)
!4632 = !DILocation(line: 1607, column: 40, scope: !4631)
!4633 = !DILocation(line: 1607, column: 38, scope: !4631)
!4634 = !DILocation(line: 1607, column: 4, scope: !4628)
!4635 = !DILocation(line: 1608, column: 16, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 1607, column: 64)
!4637 = !DILocation(line: 1608, column: 22, scope: !4636)
!4638 = !DILocation(line: 1608, column: 36, scope: !4636)
!4639 = !DILocation(line: 1608, column: 42, scope: !4636)
!4640 = !DILocation(line: 1608, column: 60, scope: !4636)
!4641 = !DILocation(line: 1608, column: 5, scope: !4636)
!4642 = !DILocation(line: 1609, column: 4, scope: !4636)
!4643 = !DILocation(line: 1607, column: 60, scope: !4631)
!4644 = !DILocation(line: 1607, column: 4, scope: !4631)
!4645 = distinct !{!4645, !4634, !4646}
!4646 = !DILocation(line: 1609, column: 4, scope: !4628)
!4647 = !DILocation(line: 1610, column: 3, scope: !4618)
!4648 = !DILocation(line: 1611, column: 2, scope: !4614)
!4649 = !DILocation(line: 1620, column: 29, scope: !4209)
!4650 = !DILocation(line: 1620, column: 36, scope: !4209)
!4651 = !DILocation(line: 1620, column: 43, scope: !4209)
!4652 = !DILocation(line: 1620, column: 56, scope: !4209)
!4653 = !DILocation(line: 1620, column: 75, scope: !4209)
!4654 = !DILocation(line: 1620, column: 85, scope: !4209)
!4655 = !DILocation(line: 1620, column: 2, scope: !4209)
!4656 = !DILocation(line: 1627, column: 7, scope: !4209)
!4657 = !DILocation(line: 1627, column: 5, scope: !4209)
!4658 = !DILocation(line: 1628, column: 19, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4209, file: !1, line: 1628, column: 2)
!4660 = !DILocation(line: 1628, column: 7, scope: !4659)
!4661 = !DILocation(line: 1628, column: 24, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 1628, column: 2)
!4663 = !DILocation(line: 1628, column: 38, scope: !4662)
!4664 = !DILocation(line: 1628, column: 36, scope: !4662)
!4665 = !DILocation(line: 1628, column: 2, scope: !4659)
!4666 = !DILocation(line: 1629, column: 7, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1629, column: 7)
!4668 = distinct !DILexicalBlock(scope: !4662, file: !1, line: 1628, column: 68)
!4669 = !DILocation(line: 1629, column: 11, scope: !4667)
!4670 = !DILocation(line: 1629, column: 18, scope: !4667)
!4671 = !DILocation(line: 1629, column: 7, scope: !4668)
!4672 = !DILocation(line: 1630, column: 20, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4667, file: !1, line: 1629, column: 39)
!4674 = !DILocation(line: 1630, column: 24, scope: !4673)
!4675 = !DILocation(line: 1630, column: 31, scope: !4673)
!4676 = !DILocation(line: 1630, column: 4, scope: !4673)
!4677 = !DILocation(line: 1631, column: 4, scope: !4673)
!4678 = !DILocation(line: 1631, column: 8, scope: !4673)
!4679 = !DILocation(line: 1631, column: 15, scope: !4673)
!4680 = !DILocation(line: 1632, column: 3, scope: !4673)
!4681 = !DILocation(line: 1633, column: 2, scope: !4668)
!4682 = !DILocation(line: 1628, column: 58, scope: !4662)
!4683 = !DILocation(line: 1628, column: 64, scope: !4662)
!4684 = !DILocation(line: 1628, column: 2, scope: !4662)
!4685 = distinct !{!4685, !4665, !4686}
!4686 = !DILocation(line: 1633, column: 2, scope: !4659)
!4687 = !DILocation(line: 1636, column: 2, scope: !4209)
!4688 = !DILocation(line: 1636, column: 12, scope: !4209)
!4689 = !DILocation(line: 1638, column: 9, scope: !4209)
!4690 = !DILocation(line: 1638, column: 2, scope: !4209)
!4691 = distinct !DISubprogram(name: "poly_to_tri_count", scope: !4692, file: !4692, line: 222, type: !4693, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!4692 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_geom_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4693 = !DISubroutineType(types: !4694)
!4694 = !{!93, !169, !169}
!4695 = !DILocalVariable(name: "poly_count", arg: 1, scope: !4691, file: !4692, line: 222, type: !169)
!4696 = !DILocation(line: 222, column: 41, scope: !4691)
!4697 = !DILocalVariable(name: "corner_count", arg: 2, scope: !4691, file: !4692, line: 222, type: !169)
!4698 = !DILocation(line: 222, column: 63, scope: !4691)
!4699 = !DILocation(line: 225, column: 9, scope: !4691)
!4700 = !DILocation(line: 225, column: 25, scope: !4691)
!4701 = !DILocation(line: 225, column: 36, scope: !4691)
!4702 = !DILocation(line: 225, column: 22, scope: !4691)
!4703 = !DILocation(line: 225, column: 2, scope: !4691)
!4704 = distinct !DISubprogram(name: "add_newell_cross_v3_v3v3", scope: !658, file: !658, line: 646, type: !1984, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!4705 = !DILocalVariable(name: "n", arg: 1, scope: !4704, file: !658, line: 646, type: !555)
!4706 = !DILocation(line: 646, column: 45, scope: !4704)
!4707 = !DILocalVariable(name: "v_prev", arg: 2, scope: !4704, file: !658, line: 646, type: !661)
!4708 = !DILocation(line: 646, column: 63, scope: !4704)
!4709 = !DILocalVariable(name: "v_curr", arg: 3, scope: !4704, file: !658, line: 646, type: !661)
!4710 = !DILocation(line: 646, column: 86, scope: !4704)
!4711 = !DILocation(line: 648, column: 11, scope: !4704)
!4712 = !DILocation(line: 648, column: 23, scope: !4704)
!4713 = !DILocation(line: 648, column: 21, scope: !4704)
!4714 = !DILocation(line: 648, column: 37, scope: !4704)
!4715 = !DILocation(line: 648, column: 49, scope: !4704)
!4716 = !DILocation(line: 648, column: 47, scope: !4704)
!4717 = !DILocation(line: 648, column: 34, scope: !4704)
!4718 = !DILocation(line: 648, column: 2, scope: !4704)
!4719 = !DILocation(line: 648, column: 7, scope: !4704)
!4720 = !DILocation(line: 649, column: 11, scope: !4704)
!4721 = !DILocation(line: 649, column: 23, scope: !4704)
!4722 = !DILocation(line: 649, column: 21, scope: !4704)
!4723 = !DILocation(line: 649, column: 37, scope: !4704)
!4724 = !DILocation(line: 649, column: 49, scope: !4704)
!4725 = !DILocation(line: 649, column: 47, scope: !4704)
!4726 = !DILocation(line: 649, column: 34, scope: !4704)
!4727 = !DILocation(line: 649, column: 2, scope: !4704)
!4728 = !DILocation(line: 649, column: 7, scope: !4704)
!4729 = !DILocation(line: 650, column: 11, scope: !4704)
!4730 = !DILocation(line: 650, column: 23, scope: !4704)
!4731 = !DILocation(line: 650, column: 21, scope: !4704)
!4732 = !DILocation(line: 650, column: 37, scope: !4704)
!4733 = !DILocation(line: 650, column: 49, scope: !4704)
!4734 = !DILocation(line: 650, column: 47, scope: !4704)
!4735 = !DILocation(line: 650, column: 34, scope: !4704)
!4736 = !DILocation(line: 650, column: 2, scope: !4704)
!4737 = !DILocation(line: 650, column: 7, scope: !4704)
!4738 = !DILocation(line: 651, column: 1, scope: !4704)
!4739 = distinct !DISubprogram(name: "BKE_mesh_mpoly_to_mface", scope: !1, file: !1, line: 1656, type: !4740, scopeLine: 1658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{!93, !4742, !4742, !4742, !93, !93, !93}
!4742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!4743 = !DILocalVariable(name: "fdata", arg: 1, scope: !4739, file: !1, line: 1656, type: !4742)
!4744 = !DILocation(line: 1656, column: 48, scope: !4739)
!4745 = !DILocalVariable(name: "ldata", arg: 2, scope: !4739, file: !1, line: 1656, type: !4742)
!4746 = !DILocation(line: 1656, column: 74, scope: !4739)
!4747 = !DILocalVariable(name: "pdata", arg: 3, scope: !4739, file: !1, line: 1657, type: !4742)
!4748 = !DILocation(line: 1657, column: 48, scope: !4739)
!4749 = !DILocalVariable(name: "totface", arg: 4, scope: !4739, file: !1, line: 1657, type: !93)
!4750 = !DILocation(line: 1657, column: 59, scope: !4739)
!4751 = !DILocalVariable(name: "UNUSED_totloop", arg: 5, scope: !4739, file: !1, line: 1657, type: !93)
!4752 = !DILocation(line: 1657, column: 72, scope: !4739)
!4753 = !DILocalVariable(name: "totpoly", arg: 6, scope: !4739, file: !1, line: 1657, type: !93)
!4754 = !DILocation(line: 1657, column: 93, scope: !4739)
!4755 = !DILocalVariable(name: "mloop", scope: !4739, file: !1, line: 1659, type: !117)
!4756 = !DILocation(line: 1659, column: 9, scope: !4739)
!4757 = !DILocalVariable(name: "lindex", scope: !4739, file: !1, line: 1661, type: !1097)
!4758 = !DILocation(line: 1661, column: 15, scope: !4739)
!4759 = !DILocalVariable(name: "i", scope: !4739, file: !1, line: 1662, type: !93)
!4760 = !DILocation(line: 1662, column: 6, scope: !4739)
!4761 = !DILocalVariable(name: "k", scope: !4739, file: !1, line: 1663, type: !93)
!4762 = !DILocation(line: 1663, column: 6, scope: !4739)
!4763 = !DILocalVariable(name: "mp", scope: !4739, file: !1, line: 1665, type: !107)
!4764 = !DILocation(line: 1665, column: 9, scope: !4739)
!4765 = !DILocalVariable(name: "mpoly", scope: !4739, file: !1, line: 1665, type: !107)
!4766 = !DILocation(line: 1665, column: 14, scope: !4739)
!4767 = !DILocalVariable(name: "mface", scope: !4739, file: !1, line: 1666, type: !157)
!4768 = !DILocation(line: 1666, column: 9, scope: !4739)
!4769 = !DILocalVariable(name: "mf", scope: !4739, file: !1, line: 1666, type: !157)
!4770 = !DILocation(line: 1666, column: 17, scope: !4739)
!4771 = !DILocalVariable(name: "numTex", scope: !4739, file: !1, line: 1668, type: !169)
!4772 = !DILocation(line: 1668, column: 12, scope: !4739)
!4773 = !DILocation(line: 1668, column: 49, scope: !4739)
!4774 = !DILocation(line: 1668, column: 21, scope: !4739)
!4775 = !DILocalVariable(name: "numCol", scope: !4739, file: !1, line: 1669, type: !169)
!4776 = !DILocation(line: 1669, column: 12, scope: !4739)
!4777 = !DILocation(line: 1669, column: 49, scope: !4739)
!4778 = !DILocation(line: 1669, column: 21, scope: !4739)
!4779 = !DILocalVariable(name: "hasPCol", scope: !4739, file: !1, line: 1670, type: !209)
!4780 = !DILocation(line: 1670, column: 13, scope: !4739)
!4781 = !DILocation(line: 1670, column: 44, scope: !4739)
!4782 = !DILocation(line: 1670, column: 23, scope: !4739)
!4783 = !DILocalVariable(name: "hasOrigSpace", scope: !4739, file: !1, line: 1671, type: !209)
!4784 = !DILocation(line: 1671, column: 13, scope: !4739)
!4785 = !DILocation(line: 1671, column: 49, scope: !4739)
!4786 = !DILocation(line: 1671, column: 28, scope: !4739)
!4787 = !DILocalVariable(name: "hasLNor", scope: !4739, file: !1, line: 1672, type: !209)
!4788 = !DILocation(line: 1672, column: 13, scope: !4739)
!4789 = !DILocation(line: 1672, column: 44, scope: !4739)
!4790 = !DILocation(line: 1672, column: 23, scope: !4739)
!4791 = !DILocation(line: 1675, column: 10, scope: !4739)
!4792 = !DILocation(line: 1675, column: 47, scope: !4739)
!4793 = !DILocation(line: 1675, column: 39, scope: !4739)
!4794 = !DILocation(line: 1675, column: 37, scope: !4739)
!4795 = !DILocation(line: 1675, column: 8, scope: !4739)
!4796 = !DILocation(line: 1677, column: 31, scope: !4739)
!4797 = !DILocation(line: 1677, column: 10, scope: !4739)
!4798 = !DILocation(line: 1677, column: 8, scope: !4739)
!4799 = !DILocation(line: 1678, column: 31, scope: !4739)
!4800 = !DILocation(line: 1678, column: 10, scope: !4739)
!4801 = !DILocation(line: 1678, column: 8, scope: !4739)
!4802 = !DILocation(line: 1680, column: 7, scope: !4739)
!4803 = !DILocation(line: 1680, column: 5, scope: !4739)
!4804 = !DILocation(line: 1681, column: 4, scope: !4739)
!4805 = !DILocation(line: 1682, column: 9, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4739, file: !1, line: 1682, column: 2)
!4807 = !DILocation(line: 1682, column: 7, scope: !4806)
!4808 = !DILocation(line: 1682, column: 14, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4806, file: !1, line: 1682, column: 2)
!4810 = !DILocation(line: 1682, column: 18, scope: !4809)
!4811 = !DILocation(line: 1682, column: 16, scope: !4809)
!4812 = !DILocation(line: 1682, column: 2, scope: !4806)
!4813 = !DILocation(line: 1683, column: 7, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !1, line: 1683, column: 7)
!4815 = distinct !DILexicalBlock(scope: !4809, file: !1, line: 1682, column: 38)
!4816 = !DILocation(line: 1683, column: 7, scope: !4815)
!4817 = !DILocalVariable(name: "mp_loopstart", scope: !4818, file: !1, line: 1684, type: !1689)
!4818 = distinct !DILexicalBlock(scope: !4814, file: !1, line: 1683, column: 32)
!4819 = !DILocation(line: 1684, column: 23, scope: !4818)
!4820 = !DILocation(line: 1684, column: 52, scope: !4818)
!4821 = !DILocation(line: 1684, column: 56, scope: !4818)
!4822 = !DILocation(line: 1685, column: 10, scope: !4818)
!4823 = !DILocation(line: 1685, column: 16, scope: !4818)
!4824 = !DILocation(line: 1685, column: 7, scope: !4818)
!4825 = !DILocation(line: 1687, column: 17, scope: !4818)
!4826 = !DILocation(line: 1687, column: 21, scope: !4818)
!4827 = !DILocation(line: 1687, column: 4, scope: !4818)
!4828 = !DILocation(line: 1687, column: 8, scope: !4818)
!4829 = !DILocation(line: 1687, column: 15, scope: !4818)
!4830 = !DILocation(line: 1688, column: 15, scope: !4818)
!4831 = !DILocation(line: 1688, column: 19, scope: !4818)
!4832 = !DILocation(line: 1688, column: 4, scope: !4818)
!4833 = !DILocation(line: 1688, column: 8, scope: !4818)
!4834 = !DILocation(line: 1688, column: 13, scope: !4818)
!4835 = !DILocation(line: 1690, column: 13, scope: !4818)
!4836 = !DILocation(line: 1690, column: 26, scope: !4818)
!4837 = !DILocation(line: 1690, column: 4, scope: !4818)
!4838 = !DILocation(line: 1690, column: 8, scope: !4818)
!4839 = !DILocation(line: 1690, column: 11, scope: !4818)
!4840 = !DILocation(line: 1691, column: 13, scope: !4818)
!4841 = !DILocation(line: 1691, column: 26, scope: !4818)
!4842 = !DILocation(line: 1691, column: 4, scope: !4818)
!4843 = !DILocation(line: 1691, column: 8, scope: !4818)
!4844 = !DILocation(line: 1691, column: 11, scope: !4818)
!4845 = !DILocation(line: 1692, column: 13, scope: !4818)
!4846 = !DILocation(line: 1692, column: 26, scope: !4818)
!4847 = !DILocation(line: 1692, column: 4, scope: !4818)
!4848 = !DILocation(line: 1692, column: 8, scope: !4818)
!4849 = !DILocation(line: 1692, column: 11, scope: !4818)
!4850 = !DILocation(line: 1693, column: 14, scope: !4818)
!4851 = !DILocation(line: 1693, column: 18, scope: !4818)
!4852 = !DILocation(line: 1693, column: 26, scope: !4818)
!4853 = !DILocation(line: 1693, column: 13, scope: !4818)
!4854 = !DILocation(line: 1693, column: 35, scope: !4818)
!4855 = !DILocation(line: 1693, column: 48, scope: !4818)
!4856 = !DILocation(line: 1693, column: 4, scope: !4818)
!4857 = !DILocation(line: 1693, column: 8, scope: !4818)
!4858 = !DILocation(line: 1693, column: 11, scope: !4818)
!4859 = !DILocation(line: 1696, column: 23, scope: !4818)
!4860 = !DILocation(line: 1696, column: 27, scope: !4818)
!4861 = !DILocation(line: 1696, column: 17, scope: !4818)
!4862 = !DILocation(line: 1696, column: 4, scope: !4818)
!4863 = !DILocation(line: 1696, column: 8, scope: !4818)
!4864 = !DILocation(line: 1696, column: 15, scope: !4818)
!4865 = !DILocation(line: 1698, column: 5, scope: !4818)
!4866 = !DILocation(line: 1699, column: 3, scope: !4818)
!4867 = !DILocation(line: 1700, column: 2, scope: !4815)
!4868 = !DILocation(line: 1682, column: 28, scope: !4809)
!4869 = !DILocation(line: 1682, column: 34, scope: !4809)
!4870 = !DILocation(line: 1682, column: 2, scope: !4809)
!4871 = distinct !{!4871, !4812, !4872}
!4872 = !DILocation(line: 1700, column: 2, scope: !4806)
!4873 = !DILocation(line: 1702, column: 18, scope: !4739)
!4874 = !DILocation(line: 1702, column: 25, scope: !4739)
!4875 = !DILocation(line: 1702, column: 2, scope: !4739)
!4876 = !DILocation(line: 1704, column: 12, scope: !4739)
!4877 = !DILocation(line: 1704, column: 10, scope: !4739)
!4878 = !DILocation(line: 1706, column: 23, scope: !4739)
!4879 = !DILocation(line: 1706, column: 51, scope: !4739)
!4880 = !DILocation(line: 1706, column: 58, scope: !4739)
!4881 = !DILocation(line: 1706, column: 2, scope: !4739)
!4882 = !DILocation(line: 1708, column: 28, scope: !4739)
!4883 = !DILocation(line: 1708, column: 35, scope: !4739)
!4884 = !DILocation(line: 1708, column: 42, scope: !4739)
!4885 = !DILocation(line: 1708, column: 49, scope: !4739)
!4886 = !DILocation(line: 1708, column: 2, scope: !4739)
!4887 = !DILocation(line: 1710, column: 7, scope: !4739)
!4888 = !DILocation(line: 1710, column: 5, scope: !4739)
!4889 = !DILocation(line: 1711, column: 4, scope: !4739)
!4890 = !DILocation(line: 1712, column: 9, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4739, file: !1, line: 1712, column: 2)
!4892 = !DILocation(line: 1712, column: 7, scope: !4891)
!4893 = !DILocation(line: 1712, column: 14, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4891, file: !1, line: 1712, column: 2)
!4895 = !DILocation(line: 1712, column: 18, scope: !4894)
!4896 = !DILocation(line: 1712, column: 16, scope: !4894)
!4897 = !DILocation(line: 1712, column: 2, scope: !4891)
!4898 = !DILocation(line: 1713, column: 7, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !1, line: 1713, column: 7)
!4900 = distinct !DILexicalBlock(scope: !4894, file: !1, line: 1712, column: 38)
!4901 = !DILocation(line: 1713, column: 7, scope: !4900)
!4902 = !DILocation(line: 1714, column: 10, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4899, file: !1, line: 1713, column: 32)
!4904 = !DILocation(line: 1714, column: 16, scope: !4903)
!4905 = !DILocation(line: 1714, column: 7, scope: !4903)
!4906 = !DILocation(line: 1716, column: 8, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4903, file: !1, line: 1716, column: 8)
!4908 = !DILocation(line: 1716, column: 12, scope: !4907)
!4909 = !DILocation(line: 1716, column: 19, scope: !4907)
!4910 = !DILocation(line: 1716, column: 8, scope: !4903)
!4911 = !DILocation(line: 1720, column: 17, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4907, file: !1, line: 1716, column: 25)
!4913 = !DILocation(line: 1720, column: 21, scope: !4912)
!4914 = !DILocation(line: 1720, column: 5, scope: !4912)
!4915 = !DILocation(line: 1720, column: 15, scope: !4912)
!4916 = !DILocation(line: 1721, column: 17, scope: !4912)
!4917 = !DILocation(line: 1721, column: 21, scope: !4912)
!4918 = !DILocation(line: 1721, column: 5, scope: !4912)
!4919 = !DILocation(line: 1721, column: 15, scope: !4912)
!4920 = !DILocation(line: 1722, column: 17, scope: !4912)
!4921 = !DILocation(line: 1722, column: 21, scope: !4912)
!4922 = !DILocation(line: 1722, column: 5, scope: !4912)
!4923 = !DILocation(line: 1722, column: 15, scope: !4912)
!4924 = !DILocation(line: 1723, column: 5, scope: !4912)
!4925 = !DILocation(line: 1723, column: 15, scope: !4912)
!4926 = !DILocation(line: 1726, column: 14, scope: !4912)
!4927 = !DILocation(line: 1726, column: 20, scope: !4912)
!4928 = !DILocation(line: 1726, column: 24, scope: !4912)
!4929 = !DILocation(line: 1726, column: 28, scope: !4912)
!4930 = !DILocation(line: 1726, column: 5, scope: !4912)
!4931 = !DILocation(line: 1726, column: 9, scope: !4912)
!4932 = !DILocation(line: 1726, column: 12, scope: !4912)
!4933 = !DILocation(line: 1727, column: 14, scope: !4912)
!4934 = !DILocation(line: 1727, column: 20, scope: !4912)
!4935 = !DILocation(line: 1727, column: 24, scope: !4912)
!4936 = !DILocation(line: 1727, column: 28, scope: !4912)
!4937 = !DILocation(line: 1727, column: 5, scope: !4912)
!4938 = !DILocation(line: 1727, column: 9, scope: !4912)
!4939 = !DILocation(line: 1727, column: 12, scope: !4912)
!4940 = !DILocation(line: 1728, column: 14, scope: !4912)
!4941 = !DILocation(line: 1728, column: 20, scope: !4912)
!4942 = !DILocation(line: 1728, column: 24, scope: !4912)
!4943 = !DILocation(line: 1728, column: 28, scope: !4912)
!4944 = !DILocation(line: 1728, column: 5, scope: !4912)
!4945 = !DILocation(line: 1728, column: 9, scope: !4912)
!4946 = !DILocation(line: 1728, column: 12, scope: !4912)
!4947 = !DILocation(line: 1730, column: 37, scope: !4912)
!4948 = !DILocation(line: 1730, column: 44, scope: !4912)
!4949 = !DILocation(line: 1730, column: 51, scope: !4912)
!4950 = !DILocation(line: 1731, column: 37, scope: !4912)
!4951 = !DILocation(line: 1731, column: 45, scope: !4912)
!4952 = !DILocation(line: 1731, column: 48, scope: !4912)
!4953 = !DILocation(line: 1732, column: 37, scope: !4912)
!4954 = !DILocation(line: 1732, column: 45, scope: !4912)
!4955 = !DILocation(line: 1732, column: 53, scope: !4912)
!4956 = !DILocation(line: 1732, column: 62, scope: !4912)
!4957 = !DILocation(line: 1732, column: 76, scope: !4912)
!4958 = !DILocation(line: 1730, column: 5, scope: !4912)
!4959 = !DILocation(line: 1733, column: 21, scope: !4912)
!4960 = !DILocation(line: 1733, column: 25, scope: !4912)
!4961 = !DILocation(line: 1733, column: 32, scope: !4912)
!4962 = !DILocation(line: 1733, column: 5, scope: !4912)
!4963 = !DILocation(line: 1734, column: 4, scope: !4912)
!4964 = !DILocation(line: 1739, column: 17, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4907, file: !1, line: 1735, column: 9)
!4966 = !DILocation(line: 1739, column: 21, scope: !4965)
!4967 = !DILocation(line: 1739, column: 5, scope: !4965)
!4968 = !DILocation(line: 1739, column: 15, scope: !4965)
!4969 = !DILocation(line: 1740, column: 17, scope: !4965)
!4970 = !DILocation(line: 1740, column: 21, scope: !4965)
!4971 = !DILocation(line: 1740, column: 5, scope: !4965)
!4972 = !DILocation(line: 1740, column: 15, scope: !4965)
!4973 = !DILocation(line: 1741, column: 17, scope: !4965)
!4974 = !DILocation(line: 1741, column: 21, scope: !4965)
!4975 = !DILocation(line: 1741, column: 5, scope: !4965)
!4976 = !DILocation(line: 1741, column: 15, scope: !4965)
!4977 = !DILocation(line: 1742, column: 17, scope: !4965)
!4978 = !DILocation(line: 1742, column: 21, scope: !4965)
!4979 = !DILocation(line: 1742, column: 5, scope: !4965)
!4980 = !DILocation(line: 1742, column: 15, scope: !4965)
!4981 = !DILocation(line: 1745, column: 14, scope: !4965)
!4982 = !DILocation(line: 1745, column: 20, scope: !4965)
!4983 = !DILocation(line: 1745, column: 24, scope: !4965)
!4984 = !DILocation(line: 1745, column: 28, scope: !4965)
!4985 = !DILocation(line: 1745, column: 5, scope: !4965)
!4986 = !DILocation(line: 1745, column: 9, scope: !4965)
!4987 = !DILocation(line: 1745, column: 12, scope: !4965)
!4988 = !DILocation(line: 1746, column: 14, scope: !4965)
!4989 = !DILocation(line: 1746, column: 20, scope: !4965)
!4990 = !DILocation(line: 1746, column: 24, scope: !4965)
!4991 = !DILocation(line: 1746, column: 28, scope: !4965)
!4992 = !DILocation(line: 1746, column: 5, scope: !4965)
!4993 = !DILocation(line: 1746, column: 9, scope: !4965)
!4994 = !DILocation(line: 1746, column: 12, scope: !4965)
!4995 = !DILocation(line: 1747, column: 14, scope: !4965)
!4996 = !DILocation(line: 1747, column: 20, scope: !4965)
!4997 = !DILocation(line: 1747, column: 24, scope: !4965)
!4998 = !DILocation(line: 1747, column: 28, scope: !4965)
!4999 = !DILocation(line: 1747, column: 5, scope: !4965)
!5000 = !DILocation(line: 1747, column: 9, scope: !4965)
!5001 = !DILocation(line: 1747, column: 12, scope: !4965)
!5002 = !DILocation(line: 1748, column: 14, scope: !4965)
!5003 = !DILocation(line: 1748, column: 20, scope: !4965)
!5004 = !DILocation(line: 1748, column: 24, scope: !4965)
!5005 = !DILocation(line: 1748, column: 28, scope: !4965)
!5006 = !DILocation(line: 1748, column: 5, scope: !4965)
!5007 = !DILocation(line: 1748, column: 9, scope: !4965)
!5008 = !DILocation(line: 1748, column: 12, scope: !4965)
!5009 = !DILocation(line: 1750, column: 37, scope: !4965)
!5010 = !DILocation(line: 1750, column: 44, scope: !4965)
!5011 = !DILocation(line: 1750, column: 51, scope: !4965)
!5012 = !DILocation(line: 1751, column: 37, scope: !4965)
!5013 = !DILocation(line: 1751, column: 45, scope: !4965)
!5014 = !DILocation(line: 1751, column: 48, scope: !4965)
!5015 = !DILocation(line: 1752, column: 37, scope: !4965)
!5016 = !DILocation(line: 1752, column: 45, scope: !4965)
!5017 = !DILocation(line: 1752, column: 53, scope: !4965)
!5018 = !DILocation(line: 1752, column: 62, scope: !4965)
!5019 = !DILocation(line: 1752, column: 76, scope: !4965)
!5020 = !DILocation(line: 1750, column: 5, scope: !4965)
!5021 = !DILocation(line: 1753, column: 21, scope: !4965)
!5022 = !DILocation(line: 1753, column: 25, scope: !4965)
!5023 = !DILocation(line: 1753, column: 32, scope: !4965)
!5024 = !DILocation(line: 1753, column: 5, scope: !4965)
!5025 = !DILocation(line: 1756, column: 4, scope: !4903)
!5026 = !DILocation(line: 1756, column: 8, scope: !4903)
!5027 = !DILocation(line: 1756, column: 15, scope: !4903)
!5028 = !DILocation(line: 1758, column: 5, scope: !4903)
!5029 = !DILocation(line: 1759, column: 3, scope: !4903)
!5030 = !DILocation(line: 1760, column: 2, scope: !4900)
!5031 = !DILocation(line: 1712, column: 28, scope: !4894)
!5032 = !DILocation(line: 1712, column: 34, scope: !4894)
!5033 = !DILocation(line: 1712, column: 2, scope: !4894)
!5034 = distinct !{!5034, !4897, !5035}
!5035 = !DILocation(line: 1760, column: 2, scope: !4891)
!5036 = !DILocation(line: 1762, column: 9, scope: !4739)
!5037 = !DILocation(line: 1762, column: 2, scope: !4739)
!5038 = distinct !DISubprogram(name: "BKE_mesh_convert_mfaces_to_mpolys", scope: !1, file: !1, line: 1865, type: !864, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!5039 = !DILocalVariable(name: "mesh", arg: 1, scope: !5038, file: !1, line: 1865, type: !866)
!5040 = !DILocation(line: 1865, column: 46, scope: !5038)
!5041 = !DILocation(line: 1867, column: 40, scope: !5038)
!5042 = !DILocation(line: 1867, column: 46, scope: !5038)
!5043 = !DILocation(line: 1867, column: 51, scope: !5038)
!5044 = !DILocation(line: 1867, column: 57, scope: !5038)
!5045 = !DILocation(line: 1867, column: 65, scope: !5038)
!5046 = !DILocation(line: 1867, column: 71, scope: !5038)
!5047 = !DILocation(line: 1867, column: 79, scope: !5038)
!5048 = !DILocation(line: 1867, column: 85, scope: !5038)
!5049 = !DILocation(line: 1868, column: 39, scope: !5038)
!5050 = !DILocation(line: 1868, column: 45, scope: !5038)
!5051 = !DILocation(line: 1868, column: 54, scope: !5038)
!5052 = !DILocation(line: 1868, column: 60, scope: !5038)
!5053 = !DILocation(line: 1868, column: 69, scope: !5038)
!5054 = !DILocation(line: 1868, column: 75, scope: !5038)
!5055 = !DILocation(line: 1868, column: 84, scope: !5038)
!5056 = !DILocation(line: 1868, column: 90, scope: !5038)
!5057 = !DILocation(line: 1869, column: 39, scope: !5038)
!5058 = !DILocation(line: 1869, column: 45, scope: !5038)
!5059 = !DILocation(line: 1869, column: 52, scope: !5038)
!5060 = !DILocation(line: 1869, column: 58, scope: !5038)
!5061 = !DILocation(line: 1870, column: 40, scope: !5038)
!5062 = !DILocation(line: 1870, column: 46, scope: !5038)
!5063 = !DILocation(line: 1870, column: 56, scope: !5038)
!5064 = !DILocation(line: 1870, column: 62, scope: !5038)
!5065 = !DILocation(line: 1870, column: 72, scope: !5038)
!5066 = !DILocation(line: 1870, column: 78, scope: !5038)
!5067 = !DILocation(line: 1870, column: 86, scope: !5038)
!5068 = !DILocation(line: 1870, column: 92, scope: !5038)
!5069 = !DILocation(line: 1867, column: 2, scope: !5038)
!5070 = !DILocation(line: 1872, column: 38, scope: !5038)
!5071 = !DILocation(line: 1872, column: 2, scope: !5038)
!5072 = !DILocation(line: 1873, column: 1, scope: !5038)
!5073 = distinct !DISubprogram(name: "BKE_mesh_convert_mfaces_to_mpolys_ex", scope: !1, file: !1, line: 1897, type: !5074, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{null, !886, !3581, !3581, !3581, !93, !93, !93, !93, !1413, !157, !1446, !1446, !5076, !5077}
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!5078 = !DILocalVariable(name: "id", arg: 1, scope: !5073, file: !1, line: 1897, type: !886)
!5079 = !DILocation(line: 1897, column: 47, scope: !5073)
!5080 = !DILocalVariable(name: "fdata", arg: 2, scope: !5073, file: !1, line: 1897, type: !3581)
!5081 = !DILocation(line: 1897, column: 63, scope: !5073)
!5082 = !DILocalVariable(name: "ldata", arg: 3, scope: !5073, file: !1, line: 1897, type: !3581)
!5083 = !DILocation(line: 1897, column: 82, scope: !5073)
!5084 = !DILocalVariable(name: "pdata", arg: 4, scope: !5073, file: !1, line: 1897, type: !3581)
!5085 = !DILocation(line: 1897, column: 101, scope: !5073)
!5086 = !DILocalVariable(name: "totedge_i", arg: 5, scope: !5073, file: !1, line: 1898, type: !93)
!5087 = !DILocation(line: 1898, column: 47, scope: !5073)
!5088 = !DILocalVariable(name: "totface_i", arg: 6, scope: !5073, file: !1, line: 1898, type: !93)
!5089 = !DILocation(line: 1898, column: 62, scope: !5073)
!5090 = !DILocalVariable(name: "totloop_i", arg: 7, scope: !5073, file: !1, line: 1898, type: !93)
!5091 = !DILocation(line: 1898, column: 77, scope: !5073)
!5092 = !DILocalVariable(name: "totpoly_i", arg: 8, scope: !5073, file: !1, line: 1898, type: !93)
!5093 = !DILocation(line: 1898, column: 92, scope: !5073)
!5094 = !DILocalVariable(name: "medge", arg: 9, scope: !5073, file: !1, line: 1899, type: !1413)
!5095 = !DILocation(line: 1899, column: 50, scope: !5073)
!5096 = !DILocalVariable(name: "mface", arg: 10, scope: !5073, file: !1, line: 1899, type: !157)
!5097 = !DILocation(line: 1899, column: 64, scope: !5073)
!5098 = !DILocalVariable(name: "r_totloop", arg: 11, scope: !5073, file: !1, line: 1900, type: !1446)
!5099 = !DILocation(line: 1900, column: 48, scope: !5073)
!5100 = !DILocalVariable(name: "r_totpoly", arg: 12, scope: !5073, file: !1, line: 1900, type: !1446)
!5101 = !DILocation(line: 1900, column: 64, scope: !5073)
!5102 = !DILocalVariable(name: "r_mloop", arg: 13, scope: !5073, file: !1, line: 1901, type: !5076)
!5103 = !DILocation(line: 1901, column: 51, scope: !5073)
!5104 = !DILocalVariable(name: "r_mpoly", arg: 14, scope: !5073, file: !1, line: 1901, type: !5077)
!5105 = !DILocation(line: 1901, column: 68, scope: !5073)
!5106 = !DILocalVariable(name: "mf", scope: !5073, file: !1, line: 1903, type: !157)
!5107 = !DILocation(line: 1903, column: 9, scope: !5073)
!5108 = !DILocalVariable(name: "ml", scope: !5073, file: !1, line: 1904, type: !117)
!5109 = !DILocation(line: 1904, column: 9, scope: !5073)
!5110 = !DILocalVariable(name: "mloop", scope: !5073, file: !1, line: 1904, type: !117)
!5111 = !DILocation(line: 1904, column: 14, scope: !5073)
!5112 = !DILocalVariable(name: "mp", scope: !5073, file: !1, line: 1905, type: !107)
!5113 = !DILocation(line: 1905, column: 9, scope: !5073)
!5114 = !DILocalVariable(name: "mpoly", scope: !5073, file: !1, line: 1905, type: !107)
!5115 = !DILocation(line: 1905, column: 14, scope: !5073)
!5116 = !DILocalVariable(name: "me", scope: !5073, file: !1, line: 1906, type: !1413)
!5117 = !DILocation(line: 1906, column: 9, scope: !5073)
!5118 = !DILocalVariable(name: "eh", scope: !5073, file: !1, line: 1907, type: !2879)
!5119 = !DILocation(line: 1907, column: 12, scope: !5073)
!5120 = !DILocalVariable(name: "numTex", scope: !5073, file: !1, line: 1908, type: !93)
!5121 = !DILocation(line: 1908, column: 6, scope: !5073)
!5122 = !DILocalVariable(name: "numCol", scope: !5073, file: !1, line: 1908, type: !93)
!5123 = !DILocation(line: 1908, column: 14, scope: !5073)
!5124 = !DILocalVariable(name: "i", scope: !5073, file: !1, line: 1909, type: !93)
!5125 = !DILocation(line: 1909, column: 6, scope: !5073)
!5126 = !DILocalVariable(name: "j", scope: !5073, file: !1, line: 1909, type: !93)
!5127 = !DILocation(line: 1909, column: 9, scope: !5073)
!5128 = !DILocalVariable(name: "totloop", scope: !5073, file: !1, line: 1909, type: !93)
!5129 = !DILocation(line: 1909, column: 12, scope: !5073)
!5130 = !DILocalVariable(name: "totpoly", scope: !5073, file: !1, line: 1909, type: !93)
!5131 = !DILocation(line: 1909, column: 21, scope: !5073)
!5132 = !DILocalVariable(name: "polyindex", scope: !5073, file: !1, line: 1909, type: !1446)
!5133 = !DILocation(line: 1909, column: 31, scope: !5073)
!5134 = !DILocation(line: 1915, column: 18, scope: !5073)
!5135 = !DILocation(line: 1915, column: 25, scope: !5073)
!5136 = !DILocation(line: 1915, column: 2, scope: !5073)
!5137 = !DILocation(line: 1916, column: 18, scope: !5073)
!5138 = !DILocation(line: 1916, column: 25, scope: !5073)
!5139 = !DILocation(line: 1916, column: 2, scope: !5073)
!5140 = !DILocation(line: 1918, column: 12, scope: !5073)
!5141 = !DILocation(line: 1918, column: 10, scope: !5073)
!5142 = !DILocation(line: 1919, column: 10, scope: !5073)
!5143 = !DILocation(line: 1919, column: 46, scope: !5073)
!5144 = !DILocation(line: 1919, column: 38, scope: !5073)
!5145 = !DILocation(line: 1919, column: 36, scope: !5073)
!5146 = !DILocation(line: 1919, column: 8, scope: !5073)
!5147 = !DILocation(line: 1920, column: 23, scope: !5073)
!5148 = !DILocation(line: 1920, column: 51, scope: !5073)
!5149 = !DILocation(line: 1920, column: 58, scope: !5073)
!5150 = !DILocation(line: 1920, column: 2, scope: !5073)
!5151 = !DILocation(line: 1922, column: 39, scope: !5073)
!5152 = !DILocation(line: 1922, column: 11, scope: !5073)
!5153 = !DILocation(line: 1922, column: 9, scope: !5073)
!5154 = !DILocation(line: 1923, column: 39, scope: !5073)
!5155 = !DILocation(line: 1923, column: 11, scope: !5073)
!5156 = !DILocation(line: 1923, column: 9, scope: !5073)
!5157 = !DILocation(line: 1925, column: 10, scope: !5073)
!5158 = !DILocation(line: 1926, column: 7, scope: !5073)
!5159 = !DILocation(line: 1926, column: 5, scope: !5073)
!5160 = !DILocation(line: 1927, column: 9, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5073, file: !1, line: 1927, column: 2)
!5162 = !DILocation(line: 1927, column: 7, scope: !5161)
!5163 = !DILocation(line: 1927, column: 14, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5161, file: !1, line: 1927, column: 2)
!5165 = !DILocation(line: 1927, column: 18, scope: !5164)
!5166 = !DILocation(line: 1927, column: 16, scope: !5164)
!5167 = !DILocation(line: 1927, column: 2, scope: !5161)
!5168 = !DILocation(line: 1928, column: 14, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5164, file: !1, line: 1927, column: 40)
!5170 = !DILocation(line: 1928, column: 18, scope: !5169)
!5171 = !DILocation(line: 1928, column: 11, scope: !5169)
!5172 = !DILocation(line: 1929, column: 2, scope: !5169)
!5173 = !DILocation(line: 1927, column: 30, scope: !5164)
!5174 = !DILocation(line: 1927, column: 36, scope: !5164)
!5175 = !DILocation(line: 1927, column: 2, scope: !5164)
!5176 = distinct !{!5176, !5167, !5177}
!5177 = !DILocation(line: 1929, column: 2, scope: !5161)
!5178 = !DILocation(line: 1931, column: 10, scope: !5073)
!5179 = !DILocation(line: 1931, column: 46, scope: !5073)
!5180 = !DILocation(line: 1931, column: 38, scope: !5073)
!5181 = !DILocation(line: 1931, column: 36, scope: !5073)
!5182 = !DILocation(line: 1931, column: 8, scope: !5073)
!5183 = !DILocation(line: 1933, column: 23, scope: !5073)
!5184 = !DILocation(line: 1933, column: 51, scope: !5073)
!5185 = !DILocation(line: 1933, column: 58, scope: !5073)
!5186 = !DILocation(line: 1933, column: 2, scope: !5073)
!5187 = !DILocation(line: 1935, column: 26, scope: !5073)
!5188 = !DILocation(line: 1935, column: 33, scope: !5073)
!5189 = !DILocation(line: 1935, column: 40, scope: !5073)
!5190 = !DILocation(line: 1935, column: 47, scope: !5073)
!5191 = !DILocation(line: 1935, column: 56, scope: !5073)
!5192 = !DILocation(line: 1935, column: 2, scope: !5073)
!5193 = !DILocation(line: 1937, column: 6, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5073, file: !1, line: 1937, column: 6)
!5195 = !DILocation(line: 1937, column: 6, scope: !5073)
!5196 = !DILocation(line: 1939, column: 28, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5194, file: !1, line: 1937, column: 10)
!5198 = !DILocation(line: 1939, column: 35, scope: !5197)
!5199 = !DILocation(line: 1939, column: 55, scope: !5197)
!5200 = !DILocation(line: 1939, column: 3, scope: !5197)
!5201 = !DILocation(line: 1940, column: 2, scope: !5197)
!5202 = !DILocation(line: 1942, column: 51, scope: !5073)
!5203 = !DILocation(line: 1942, column: 7, scope: !5073)
!5204 = !DILocation(line: 1942, column: 5, scope: !5073)
!5205 = !DILocation(line: 1945, column: 7, scope: !5073)
!5206 = !DILocation(line: 1945, column: 5, scope: !5073)
!5207 = !DILocation(line: 1946, column: 9, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5073, file: !1, line: 1946, column: 2)
!5209 = !DILocation(line: 1946, column: 7, scope: !5208)
!5210 = !DILocation(line: 1946, column: 14, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5208, file: !1, line: 1946, column: 2)
!5212 = !DILocation(line: 1946, column: 18, scope: !5211)
!5213 = !DILocation(line: 1946, column: 16, scope: !5211)
!5214 = !DILocation(line: 1946, column: 2, scope: !5208)
!5215 = !DILocation(line: 1947, column: 23, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5211, file: !1, line: 1946, column: 40)
!5217 = !DILocation(line: 1947, column: 27, scope: !5216)
!5218 = !DILocation(line: 1947, column: 31, scope: !5216)
!5219 = !DILocation(line: 1947, column: 35, scope: !5216)
!5220 = !DILocation(line: 1947, column: 39, scope: !5216)
!5221 = !DILocation(line: 1947, column: 43, scope: !5216)
!5222 = !DILocation(line: 1947, column: 3, scope: !5216)
!5223 = !DILocation(line: 1950, column: 3, scope: !5216)
!5224 = !DILocation(line: 1950, column: 7, scope: !5216)
!5225 = !DILocation(line: 1950, column: 12, scope: !5216)
!5226 = !DILocation(line: 1951, column: 2, scope: !5216)
!5227 = !DILocation(line: 1946, column: 30, scope: !5211)
!5228 = !DILocation(line: 1946, column: 36, scope: !5211)
!5229 = !DILocation(line: 1946, column: 2, scope: !5211)
!5230 = distinct !{!5230, !5214, !5231}
!5231 = !DILocation(line: 1951, column: 2, scope: !5208)
!5232 = !DILocation(line: 1953, column: 35, scope: !5073)
!5233 = !DILocation(line: 1953, column: 14, scope: !5073)
!5234 = !DILocation(line: 1953, column: 12, scope: !5073)
!5235 = !DILocation(line: 1955, column: 4, scope: !5073)
!5236 = !DILocation(line: 1956, column: 7, scope: !5073)
!5237 = !DILocation(line: 1956, column: 5, scope: !5073)
!5238 = !DILocation(line: 1957, column: 7, scope: !5073)
!5239 = !DILocation(line: 1957, column: 5, scope: !5073)
!5240 = !DILocation(line: 1958, column: 7, scope: !5073)
!5241 = !DILocation(line: 1958, column: 5, scope: !5073)
!5242 = !DILocation(line: 1959, column: 9, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5073, file: !1, line: 1959, column: 2)
!5244 = !DILocation(line: 1959, column: 7, scope: !5243)
!5245 = !DILocation(line: 1959, column: 14, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5243, file: !1, line: 1959, column: 2)
!5247 = !DILocation(line: 1959, column: 18, scope: !5246)
!5248 = !DILocation(line: 1959, column: 16, scope: !5246)
!5249 = !DILocation(line: 1959, column: 2, scope: !5243)
!5250 = !DILocation(line: 1960, column: 19, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5246, file: !1, line: 1959, column: 46)
!5252 = !DILocation(line: 1960, column: 3, scope: !5251)
!5253 = !DILocation(line: 1960, column: 7, scope: !5251)
!5254 = !DILocation(line: 1960, column: 17, scope: !5251)
!5255 = !DILocation(line: 1962, column: 17, scope: !5251)
!5256 = !DILocation(line: 1962, column: 21, scope: !5251)
!5257 = !DILocation(line: 1962, column: 3, scope: !5251)
!5258 = !DILocation(line: 1962, column: 7, scope: !5251)
!5259 = !DILocation(line: 1962, column: 15, scope: !5251)
!5260 = !DILocation(line: 1964, column: 16, scope: !5251)
!5261 = !DILocation(line: 1964, column: 20, scope: !5251)
!5262 = !DILocation(line: 1964, column: 3, scope: !5251)
!5263 = !DILocation(line: 1964, column: 7, scope: !5251)
!5264 = !DILocation(line: 1964, column: 14, scope: !5251)
!5265 = !DILocation(line: 1965, column: 14, scope: !5251)
!5266 = !DILocation(line: 1965, column: 18, scope: !5251)
!5267 = !DILocation(line: 1965, column: 3, scope: !5251)
!5268 = !DILocation(line: 1965, column: 7, scope: !5251)
!5269 = !DILocation(line: 1965, column: 12, scope: !5251)
!5270 = !DILocation(line: 1973, column: 3, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1973, column: 3)
!5272 = !DILocation(line: 1974, column: 3, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1974, column: 3)
!5274 = !DILocation(line: 1975, column: 7, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1975, column: 7)
!5276 = !DILocation(line: 1975, column: 11, scope: !5275)
!5277 = !DILocation(line: 1975, column: 7, scope: !5251)
!5278 = !DILocation(line: 1976, column: 4, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5280, file: !1, line: 1976, column: 4)
!5280 = distinct !DILexicalBlock(scope: !5275, file: !1, line: 1975, column: 15)
!5281 = !DILocation(line: 1977, column: 4, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5280, file: !1, line: 1977, column: 4)
!5283 = !DILocation(line: 1978, column: 3, scope: !5280)
!5284 = !DILocation(line: 1980, column: 4, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !1, line: 1980, column: 4)
!5286 = distinct !DILexicalBlock(scope: !5275, file: !1, line: 1979, column: 8)
!5287 = !DILocation(line: 1985, column: 26, scope: !5251)
!5288 = !DILocation(line: 1985, column: 30, scope: !5251)
!5289 = !DILocation(line: 1985, column: 37, scope: !5251)
!5290 = !DILocation(line: 1985, column: 44, scope: !5251)
!5291 = !DILocation(line: 1985, column: 51, scope: !5251)
!5292 = !DILocation(line: 1985, column: 58, scope: !5251)
!5293 = !DILocation(line: 1985, column: 67, scope: !5251)
!5294 = !DILocation(line: 1985, column: 70, scope: !5251)
!5295 = !DILocation(line: 1985, column: 74, scope: !5251)
!5296 = !DILocation(line: 1985, column: 85, scope: !5251)
!5297 = !DILocation(line: 1985, column: 93, scope: !5251)
!5298 = !DILocation(line: 1985, column: 3, scope: !5251)
!5299 = !DILocation(line: 1987, column: 7, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1987, column: 7)
!5301 = !DILocation(line: 1987, column: 7, scope: !5251)
!5302 = !DILocation(line: 1988, column: 17, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5300, file: !1, line: 1987, column: 18)
!5304 = !DILocation(line: 1988, column: 5, scope: !5303)
!5305 = !DILocation(line: 1988, column: 15, scope: !5303)
!5306 = !DILocation(line: 1989, column: 13, scope: !5303)
!5307 = !DILocation(line: 1990, column: 3, scope: !5303)
!5308 = !DILocation(line: 1991, column: 2, scope: !5251)
!5309 = !DILocation(line: 1959, column: 30, scope: !5246)
!5310 = !DILocation(line: 1959, column: 36, scope: !5246)
!5311 = !DILocation(line: 1959, column: 42, scope: !5246)
!5312 = !DILocation(line: 1959, column: 2, scope: !5246)
!5313 = distinct !{!5313, !5249, !5314}
!5314 = !DILocation(line: 1991, column: 2, scope: !5243)
!5315 = !DILocation(line: 1996, column: 20, scope: !5073)
!5316 = !DILocation(line: 1996, column: 2, scope: !5073)
!5317 = !DILocation(line: 1998, column: 15, scope: !5073)
!5318 = !DILocation(line: 1998, column: 3, scope: !5073)
!5319 = !DILocation(line: 1998, column: 13, scope: !5073)
!5320 = !DILocation(line: 1999, column: 15, scope: !5073)
!5321 = !DILocation(line: 1999, column: 3, scope: !5073)
!5322 = !DILocation(line: 1999, column: 13, scope: !5073)
!5323 = !DILocation(line: 2000, column: 13, scope: !5073)
!5324 = !DILocation(line: 2000, column: 3, scope: !5073)
!5325 = !DILocation(line: 2000, column: 11, scope: !5073)
!5326 = !DILocation(line: 2001, column: 13, scope: !5073)
!5327 = !DILocation(line: 2001, column: 3, scope: !5073)
!5328 = !DILocation(line: 2001, column: 11, scope: !5073)
!5329 = !DILocation(line: 2005, column: 1, scope: !5073)
!5330 = distinct !DISubprogram(name: "BKE_mesh_do_versions_convert_mfaces_to_mpolys", scope: !1, file: !1, line: 1885, type: !864, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!5331 = !DILocalVariable(name: "mesh", arg: 1, scope: !5330, file: !1, line: 1885, type: !866)
!5332 = !DILocation(line: 1885, column: 58, scope: !5330)
!5333 = !DILocation(line: 1887, column: 40, scope: !5330)
!5334 = !DILocation(line: 1887, column: 46, scope: !5330)
!5335 = !DILocation(line: 1887, column: 51, scope: !5330)
!5336 = !DILocation(line: 1887, column: 57, scope: !5330)
!5337 = !DILocation(line: 1887, column: 65, scope: !5330)
!5338 = !DILocation(line: 1887, column: 71, scope: !5330)
!5339 = !DILocation(line: 1887, column: 79, scope: !5330)
!5340 = !DILocation(line: 1887, column: 85, scope: !5330)
!5341 = !DILocation(line: 1888, column: 39, scope: !5330)
!5342 = !DILocation(line: 1888, column: 45, scope: !5330)
!5343 = !DILocation(line: 1888, column: 54, scope: !5330)
!5344 = !DILocation(line: 1888, column: 60, scope: !5330)
!5345 = !DILocation(line: 1888, column: 69, scope: !5330)
!5346 = !DILocation(line: 1888, column: 75, scope: !5330)
!5347 = !DILocation(line: 1888, column: 84, scope: !5330)
!5348 = !DILocation(line: 1888, column: 90, scope: !5330)
!5349 = !DILocation(line: 1889, column: 39, scope: !5330)
!5350 = !DILocation(line: 1889, column: 45, scope: !5330)
!5351 = !DILocation(line: 1889, column: 52, scope: !5330)
!5352 = !DILocation(line: 1889, column: 58, scope: !5330)
!5353 = !DILocation(line: 1890, column: 40, scope: !5330)
!5354 = !DILocation(line: 1890, column: 46, scope: !5330)
!5355 = !DILocation(line: 1890, column: 56, scope: !5330)
!5356 = !DILocation(line: 1890, column: 62, scope: !5330)
!5357 = !DILocation(line: 1890, column: 72, scope: !5330)
!5358 = !DILocation(line: 1890, column: 78, scope: !5330)
!5359 = !DILocation(line: 1890, column: 86, scope: !5330)
!5360 = !DILocation(line: 1890, column: 92, scope: !5330)
!5361 = !DILocation(line: 1887, column: 2, scope: !5330)
!5362 = !DILocation(line: 1892, column: 53, scope: !5330)
!5363 = !DILocation(line: 1892, column: 59, scope: !5330)
!5364 = !DILocation(line: 1892, column: 67, scope: !5330)
!5365 = !DILocation(line: 1892, column: 73, scope: !5330)
!5366 = !DILocation(line: 1892, column: 81, scope: !5330)
!5367 = !DILocation(line: 1892, column: 87, scope: !5330)
!5368 = !DILocation(line: 1892, column: 2, scope: !5330)
!5369 = !DILocation(line: 1894, column: 38, scope: !5330)
!5370 = !DILocation(line: 1894, column: 2, scope: !5330)
!5371 = !DILocation(line: 1895, column: 1, scope: !5330)
!5372 = distinct !DISubprogram(name: "bm_corners_to_loops_ex", scope: !1, file: !1, line: 1767, type: !5373, scopeLine: 1769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !886, !3581, !3581, !3581, !157, !93, !93, !93, !93, !93}
!5375 = !DILocalVariable(name: "id", arg: 1, scope: !5372, file: !1, line: 1767, type: !886)
!5376 = !DILocation(line: 1767, column: 40, scope: !5372)
!5377 = !DILocalVariable(name: "fdata", arg: 2, scope: !5372, file: !1, line: 1767, type: !3581)
!5378 = !DILocation(line: 1767, column: 56, scope: !5372)
!5379 = !DILocalVariable(name: "ldata", arg: 3, scope: !5372, file: !1, line: 1767, type: !3581)
!5380 = !DILocation(line: 1767, column: 75, scope: !5372)
!5381 = !DILocalVariable(name: "pdata", arg: 4, scope: !5372, file: !1, line: 1767, type: !3581)
!5382 = !DILocation(line: 1767, column: 94, scope: !5372)
!5383 = !DILocalVariable(name: "mface", arg: 5, scope: !5372, file: !1, line: 1768, type: !157)
!5384 = !DILocation(line: 1768, column: 43, scope: !5372)
!5385 = !DILocalVariable(name: "totloop", arg: 6, scope: !5372, file: !1, line: 1768, type: !93)
!5386 = !DILocation(line: 1768, column: 54, scope: !5372)
!5387 = !DILocalVariable(name: "findex", arg: 7, scope: !5372, file: !1, line: 1768, type: !93)
!5388 = !DILocation(line: 1768, column: 67, scope: !5372)
!5389 = !DILocalVariable(name: "loopstart", arg: 8, scope: !5372, file: !1, line: 1768, type: !93)
!5390 = !DILocation(line: 1768, column: 79, scope: !5372)
!5391 = !DILocalVariable(name: "numTex", arg: 9, scope: !5372, file: !1, line: 1768, type: !93)
!5392 = !DILocation(line: 1768, column: 94, scope: !5372)
!5393 = !DILocalVariable(name: "numCol", arg: 10, scope: !5372, file: !1, line: 1768, type: !93)
!5394 = !DILocation(line: 1768, column: 106, scope: !5372)
!5395 = !DILocalVariable(name: "texface", scope: !5372, file: !1, line: 1770, type: !3607)
!5396 = !DILocation(line: 1770, column: 10, scope: !5372)
!5397 = !DILocalVariable(name: "texpoly", scope: !5372, file: !1, line: 1771, type: !3611)
!5398 = !DILocation(line: 1771, column: 12, scope: !5372)
!5399 = !DILocalVariable(name: "mcol", scope: !5372, file: !1, line: 1772, type: !3615)
!5400 = !DILocation(line: 1772, column: 8, scope: !5372)
!5401 = !DILocalVariable(name: "mloopcol", scope: !5372, file: !1, line: 1773, type: !3619)
!5402 = !DILocation(line: 1773, column: 12, scope: !5372)
!5403 = !DILocalVariable(name: "mloopuv", scope: !5372, file: !1, line: 1774, type: !135)
!5404 = !DILocation(line: 1774, column: 11, scope: !5372)
!5405 = !DILocalVariable(name: "mf", scope: !5372, file: !1, line: 1775, type: !157)
!5406 = !DILocation(line: 1775, column: 9, scope: !5372)
!5407 = !DILocalVariable(name: "i", scope: !5372, file: !1, line: 1776, type: !93)
!5408 = !DILocation(line: 1776, column: 6, scope: !5372)
!5409 = !DILocation(line: 1778, column: 7, scope: !5372)
!5410 = !DILocation(line: 1778, column: 15, scope: !5372)
!5411 = !DILocation(line: 1778, column: 13, scope: !5372)
!5412 = !DILocation(line: 1778, column: 5, scope: !5372)
!5413 = !DILocation(line: 1780, column: 9, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5372, file: !1, line: 1780, column: 2)
!5415 = !DILocation(line: 1780, column: 7, scope: !5414)
!5416 = !DILocation(line: 1780, column: 14, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5414, file: !1, line: 1780, column: 2)
!5418 = !DILocation(line: 1780, column: 18, scope: !5417)
!5419 = !DILocation(line: 1780, column: 16, scope: !5417)
!5420 = !DILocation(line: 1780, column: 2, scope: !5414)
!5421 = !DILocation(line: 1781, column: 30, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5417, file: !1, line: 1780, column: 31)
!5423 = !DILocation(line: 1781, column: 48, scope: !5422)
!5424 = !DILocation(line: 1781, column: 56, scope: !5422)
!5425 = !DILocation(line: 1781, column: 13, scope: !5422)
!5426 = !DILocation(line: 1781, column: 11, scope: !5422)
!5427 = !DILocation(line: 1782, column: 30, scope: !5422)
!5428 = !DILocation(line: 1782, column: 50, scope: !5422)
!5429 = !DILocation(line: 1782, column: 58, scope: !5422)
!5430 = !DILocation(line: 1782, column: 13, scope: !5422)
!5431 = !DILocation(line: 1782, column: 11, scope: !5422)
!5432 = !DILocation(line: 1784, column: 3, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5422, file: !1, line: 1784, column: 3)
!5434 = !DILocation(line: 1786, column: 30, scope: !5422)
!5435 = !DILocation(line: 1786, column: 49, scope: !5422)
!5436 = !DILocation(line: 1786, column: 60, scope: !5422)
!5437 = !DILocation(line: 1786, column: 13, scope: !5422)
!5438 = !DILocation(line: 1786, column: 11, scope: !5422)
!5439 = !DILocation(line: 1787, column: 14, scope: !5422)
!5440 = !DILocation(line: 1787, column: 23, scope: !5422)
!5441 = !DILocation(line: 1787, column: 27, scope: !5422)
!5442 = !DILocation(line: 1787, column: 36, scope: !5422)
!5443 = !DILocation(line: 1787, column: 3, scope: !5422)
!5444 = !DILocation(line: 1787, column: 51, scope: !5422)
!5445 = !DILocation(line: 1788, column: 14, scope: !5422)
!5446 = !DILocation(line: 1788, column: 23, scope: !5422)
!5447 = !DILocation(line: 1788, column: 27, scope: !5422)
!5448 = !DILocation(line: 1788, column: 36, scope: !5422)
!5449 = !DILocation(line: 1788, column: 3, scope: !5422)
!5450 = !DILocation(line: 1788, column: 51, scope: !5422)
!5451 = !DILocation(line: 1789, column: 14, scope: !5422)
!5452 = !DILocation(line: 1789, column: 23, scope: !5422)
!5453 = !DILocation(line: 1789, column: 27, scope: !5422)
!5454 = !DILocation(line: 1789, column: 36, scope: !5422)
!5455 = !DILocation(line: 1789, column: 3, scope: !5422)
!5456 = !DILocation(line: 1789, column: 51, scope: !5422)
!5457 = !DILocation(line: 1791, column: 7, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5422, file: !1, line: 1791, column: 7)
!5459 = !DILocation(line: 1791, column: 11, scope: !5458)
!5460 = !DILocation(line: 1791, column: 7, scope: !5422)
!5461 = !DILocation(line: 1792, column: 15, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5458, file: !1, line: 1791, column: 15)
!5463 = !DILocation(line: 1792, column: 24, scope: !5462)
!5464 = !DILocation(line: 1792, column: 28, scope: !5462)
!5465 = !DILocation(line: 1792, column: 37, scope: !5462)
!5466 = !DILocation(line: 1792, column: 4, scope: !5462)
!5467 = !DILocation(line: 1792, column: 52, scope: !5462)
!5468 = !DILocation(line: 1793, column: 3, scope: !5462)
!5469 = !DILocation(line: 1794, column: 2, scope: !5422)
!5470 = !DILocation(line: 1780, column: 27, scope: !5417)
!5471 = !DILocation(line: 1780, column: 2, scope: !5417)
!5472 = distinct !{!5472, !5420, !5473}
!5473 = !DILocation(line: 1794, column: 2, scope: !5414)
!5474 = !DILocation(line: 1796, column: 9, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5372, file: !1, line: 1796, column: 2)
!5476 = !DILocation(line: 1796, column: 7, scope: !5475)
!5477 = !DILocation(line: 1796, column: 14, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5475, file: !1, line: 1796, column: 2)
!5479 = !DILocation(line: 1796, column: 18, scope: !5478)
!5480 = !DILocation(line: 1796, column: 16, scope: !5478)
!5481 = !DILocation(line: 1796, column: 2, scope: !5475)
!5482 = !DILocation(line: 1797, column: 31, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5478, file: !1, line: 1796, column: 31)
!5484 = !DILocation(line: 1797, column: 51, scope: !5483)
!5485 = !DILocation(line: 1797, column: 62, scope: !5483)
!5486 = !DILocation(line: 1797, column: 14, scope: !5483)
!5487 = !DILocation(line: 1797, column: 12, scope: !5483)
!5488 = !DILocation(line: 1798, column: 27, scope: !5483)
!5489 = !DILocation(line: 1798, column: 43, scope: !5483)
!5490 = !DILocation(line: 1798, column: 51, scope: !5483)
!5491 = !DILocation(line: 1798, column: 10, scope: !5483)
!5492 = !DILocation(line: 1798, column: 8, scope: !5483)
!5493 = !DILocalVariable(name: "mloopcol__tmp", scope: !5494, file: !1, line: 1800, type: !3619)
!5494 = distinct !DILexicalBlock(scope: !5483, file: !1, line: 1800, column: 3)
!5495 = !DILocation(line: 1800, column: 3, scope: !5494)
!5496 = !DILocalVariable(name: "mcol__tmp", scope: !5494, file: !1, line: 1800, type: !5497)
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5498, size: 64)
!5498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3616)
!5499 = !DILocation(line: 1800, column: 56, scope: !5483)
!5500 = !DILocalVariable(name: "mloopcol__tmp", scope: !5501, file: !1, line: 1801, type: !3619)
!5501 = distinct !DILexicalBlock(scope: !5483, file: !1, line: 1801, column: 3)
!5502 = !DILocation(line: 1801, column: 3, scope: !5501)
!5503 = !DILocalVariable(name: "mcol__tmp", scope: !5501, file: !1, line: 1801, type: !5497)
!5504 = !DILocation(line: 1801, column: 56, scope: !5483)
!5505 = !DILocalVariable(name: "mloopcol__tmp", scope: !5506, file: !1, line: 1802, type: !3619)
!5506 = distinct !DILexicalBlock(scope: !5483, file: !1, line: 1802, column: 3)
!5507 = !DILocation(line: 1802, column: 3, scope: !5506)
!5508 = !DILocalVariable(name: "mcol__tmp", scope: !5506, file: !1, line: 1802, type: !5497)
!5509 = !DILocation(line: 1802, column: 56, scope: !5483)
!5510 = !DILocation(line: 1803, column: 7, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5483, file: !1, line: 1803, column: 7)
!5512 = !DILocation(line: 1803, column: 11, scope: !5511)
!5513 = !DILocation(line: 1803, column: 7, scope: !5483)
!5514 = !DILocalVariable(name: "mloopcol__tmp", scope: !5515, file: !1, line: 1804, type: !3619)
!5515 = distinct !DILexicalBlock(scope: !5516, file: !1, line: 1804, column: 4)
!5516 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1803, column: 15)
!5517 = !DILocation(line: 1804, column: 4, scope: !5515)
!5518 = !DILocalVariable(name: "mcol__tmp", scope: !5515, file: !1, line: 1804, type: !5497)
!5519 = !DILocation(line: 1804, column: 57, scope: !5516)
!5520 = !DILocation(line: 1805, column: 3, scope: !5516)
!5521 = !DILocation(line: 1806, column: 2, scope: !5483)
!5522 = !DILocation(line: 1796, column: 27, scope: !5478)
!5523 = !DILocation(line: 1796, column: 2, scope: !5478)
!5524 = distinct !{!5524, !5481, !5525}
!5525 = !DILocation(line: 1806, column: 2, scope: !5475)
!5526 = !DILocation(line: 1808, column: 27, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5372, file: !1, line: 1808, column: 6)
!5528 = !DILocation(line: 1808, column: 6, scope: !5527)
!5529 = !DILocation(line: 1808, column: 6, scope: !5372)
!5530 = !DILocalVariable(name: "lnors", scope: !5531, file: !1, line: 1809, type: !143)
!5531 = distinct !DILexicalBlock(scope: !5527, file: !1, line: 1808, column: 54)
!5532 = !DILocation(line: 1809, column: 11, scope: !5531)
!5533 = !DILocation(line: 1809, column: 38, scope: !5531)
!5534 = !DILocation(line: 1809, column: 45, scope: !5531)
!5535 = !DILocation(line: 1809, column: 23, scope: !5531)
!5536 = !DILocalVariable(name: "tlnors", scope: !5531, file: !1, line: 1810, type: !3809)
!5537 = !DILocation(line: 1810, column: 11, scope: !5531)
!5538 = !DILocation(line: 1810, column: 39, scope: !5531)
!5539 = !DILocation(line: 1810, column: 46, scope: !5531)
!5540 = !DILocation(line: 1810, column: 24, scope: !5531)
!5541 = !DILocalVariable(name: "max", scope: !5531, file: !1, line: 1811, type: !169)
!5542 = !DILocation(line: 1811, column: 13, scope: !5531)
!5543 = !DILocation(line: 1811, column: 19, scope: !5531)
!5544 = !DILocation(line: 1811, column: 23, scope: !5531)
!5545 = !DILocation(line: 1813, column: 10, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5531, file: !1, line: 1813, column: 3)
!5547 = !DILocation(line: 1813, column: 8, scope: !5546)
!5548 = !DILocation(line: 1813, column: 15, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5546, file: !1, line: 1813, column: 3)
!5550 = !DILocation(line: 1813, column: 19, scope: !5549)
!5551 = !DILocation(line: 1813, column: 17, scope: !5549)
!5552 = !DILocation(line: 1813, column: 3, scope: !5546)
!5553 = !DILocation(line: 1814, column: 30, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5549, file: !1, line: 1813, column: 48)
!5555 = !DILocation(line: 1814, column: 29, scope: !5554)
!5556 = !DILocation(line: 1814, column: 38, scope: !5554)
!5557 = !DILocation(line: 1814, column: 37, scope: !5554)
!5558 = !DILocation(line: 1814, column: 4, scope: !5554)
!5559 = !DILocation(line: 1815, column: 3, scope: !5554)
!5560 = !DILocation(line: 1813, column: 25, scope: !5549)
!5561 = !DILocation(line: 1813, column: 34, scope: !5549)
!5562 = !DILocation(line: 1813, column: 44, scope: !5549)
!5563 = !DILocation(line: 1813, column: 3, scope: !5549)
!5564 = distinct !{!5564, !5552, !5565}
!5565 = !DILocation(line: 1815, column: 3, scope: !5546)
!5566 = !DILocation(line: 1816, column: 2, scope: !5531)
!5567 = !DILocation(line: 1818, column: 27, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5372, file: !1, line: 1818, column: 6)
!5569 = !DILocation(line: 1818, column: 6, scope: !5568)
!5570 = !DILocation(line: 1818, column: 6, scope: !5372)
!5571 = !DILocalVariable(name: "ld", scope: !5572, file: !1, line: 1819, type: !5573)
!5572 = distinct !DILexicalBlock(scope: !5568, file: !1, line: 1818, column: 46)
!5573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5574, size: 64)
!5574 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDisps", file: !4, line: 196, baseType: !5575)
!5575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDisps", file: !4, line: 186, size: 192, elements: !5576)
!5576 = !{!5577, !5578, !5579, !5580}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "totdisp", scope: !5575, file: !4, line: 188, baseType: !93, size: 32)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5575, file: !4, line: 189, baseType: !93, size: 32, offset: 32)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "disps", scope: !5575, file: !4, line: 190, baseType: !143, size: 64, offset: 64)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "hidden", scope: !5575, file: !4, line: 195, baseType: !1013, size: 64, offset: 128)
!5581 = !DILocation(line: 1819, column: 11, scope: !5572)
!5582 = !DILocation(line: 1819, column: 31, scope: !5572)
!5583 = !DILocation(line: 1819, column: 38, scope: !5572)
!5584 = !DILocation(line: 1819, column: 16, scope: !5572)
!5585 = !DILocalVariable(name: "fd", scope: !5572, file: !1, line: 1820, type: !5573)
!5586 = !DILocation(line: 1820, column: 11, scope: !5572)
!5587 = !DILocation(line: 1820, column: 31, scope: !5572)
!5588 = !DILocation(line: 1820, column: 38, scope: !5572)
!5589 = !DILocation(line: 1820, column: 16, scope: !5572)
!5590 = !DILocalVariable(name: "disps", scope: !5572, file: !1, line: 1821, type: !143)
!5591 = !DILocation(line: 1821, column: 11, scope: !5572)
!5592 = !DILocation(line: 1821, column: 23, scope: !5572)
!5593 = !DILocation(line: 1821, column: 27, scope: !5572)
!5594 = !DILocalVariable(name: "tot", scope: !5572, file: !1, line: 1822, type: !93)
!5595 = !DILocation(line: 1822, column: 7, scope: !5572)
!5596 = !DILocation(line: 1822, column: 13, scope: !5572)
!5597 = !DILocation(line: 1822, column: 17, scope: !5572)
!5598 = !DILocalVariable(name: "corners", scope: !5572, file: !1, line: 1823, type: !93)
!5599 = !DILocation(line: 1823, column: 7, scope: !5572)
!5600 = !DILocation(line: 1825, column: 32, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5572, file: !1, line: 1825, column: 7)
!5602 = !DILocation(line: 1825, column: 7, scope: !5601)
!5603 = !DILocation(line: 1825, column: 7, scope: !5572)
!5604 = !DILocation(line: 1826, column: 8, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5606, file: !1, line: 1826, column: 8)
!5606 = distinct !DILexicalBlock(scope: !5601, file: !1, line: 1825, column: 51)
!5607 = !DILocation(line: 1826, column: 11, scope: !5605)
!5608 = !DILocation(line: 1826, column: 14, scope: !5605)
!5609 = !DILocation(line: 1826, column: 21, scope: !5605)
!5610 = !DILocation(line: 1826, column: 8, scope: !5606)
!5611 = !DILocation(line: 1827, column: 29, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5605, file: !1, line: 1826, column: 31)
!5613 = !DILocation(line: 1827, column: 36, scope: !5612)
!5614 = !DILocation(line: 1828, column: 29, scope: !5612)
!5615 = !DILocation(line: 1828, column: 38, scope: !5612)
!5616 = !DILocation(line: 1828, column: 45, scope: !5612)
!5617 = !DILocation(line: 1828, column: 55, scope: !5612)
!5618 = !DILocation(line: 1827, column: 5, scope: !5612)
!5619 = !DILocation(line: 1829, column: 4, scope: !5612)
!5620 = !DILocation(line: 1830, column: 3, scope: !5606)
!5621 = !DILocation(line: 1832, column: 36, scope: !5572)
!5622 = !DILocation(line: 1832, column: 13, scope: !5572)
!5623 = !DILocation(line: 1832, column: 11, scope: !5572)
!5624 = !DILocation(line: 1834, column: 7, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5572, file: !1, line: 1834, column: 7)
!5626 = !DILocation(line: 1834, column: 15, scope: !5625)
!5627 = !DILocation(line: 1834, column: 7, scope: !5572)
!5628 = !DILocation(line: 1839, column: 3, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5625, file: !1, line: 1834, column: 21)
!5630 = !DILocalVariable(name: "side", scope: !5631, file: !1, line: 1841, type: !169)
!5631 = distinct !DILexicalBlock(scope: !5625, file: !1, line: 1840, column: 8)
!5632 = !DILocation(line: 1841, column: 14, scope: !5631)
!5633 = !DILocation(line: 1841, column: 40, scope: !5631)
!5634 = !DILocation(line: 1841, column: 44, scope: !5631)
!5635 = !DILocation(line: 1841, column: 54, scope: !5631)
!5636 = !DILocation(line: 1841, column: 52, scope: !5631)
!5637 = !DILocation(line: 1841, column: 32, scope: !5631)
!5638 = !DILocation(line: 1841, column: 26, scope: !5631)
!5639 = !DILocation(line: 1841, column: 21, scope: !5631)
!5640 = !DILocalVariable(name: "side_sq", scope: !5631, file: !1, line: 1842, type: !169)
!5641 = !DILocation(line: 1842, column: 14, scope: !5631)
!5642 = !DILocation(line: 1842, column: 24, scope: !5631)
!5643 = !DILocation(line: 1842, column: 31, scope: !5631)
!5644 = !DILocation(line: 1842, column: 29, scope: !5631)
!5645 = !DILocalVariable(name: "disps_size", scope: !5631, file: !1, line: 1843, type: !5646)
!5646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !81)
!5647 = !DILocation(line: 1843, column: 17, scope: !5631)
!5648 = !DILocation(line: 1843, column: 57, scope: !5631)
!5649 = !DILocation(line: 1843, column: 49, scope: !5631)
!5650 = !DILocation(line: 1843, column: 47, scope: !5631)
!5651 = !DILocation(line: 1845, column: 11, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5631, file: !1, line: 1845, column: 4)
!5653 = !DILocation(line: 1845, column: 9, scope: !5652)
!5654 = !DILocation(line: 1845, column: 16, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5652, file: !1, line: 1845, column: 4)
!5656 = !DILocation(line: 1845, column: 20, scope: !5655)
!5657 = !DILocation(line: 1845, column: 18, scope: !5655)
!5658 = !DILocation(line: 1845, column: 4, scope: !5652)
!5659 = !DILocation(line: 1846, column: 19, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5655, file: !1, line: 1845, column: 54)
!5661 = !DILocation(line: 1846, column: 5, scope: !5660)
!5662 = !DILocation(line: 1846, column: 9, scope: !5660)
!5663 = !DILocation(line: 1846, column: 17, scope: !5660)
!5664 = !DILocation(line: 1847, column: 35, scope: !5660)
!5665 = !DILocation(line: 1847, column: 28, scope: !5660)
!5666 = !DILocation(line: 1847, column: 40, scope: !5660)
!5667 = !DILocation(line: 1847, column: 23, scope: !5660)
!5668 = !DILocation(line: 1847, column: 48, scope: !5660)
!5669 = !DILocation(line: 1847, column: 17, scope: !5660)
!5670 = !DILocation(line: 1847, column: 64, scope: !5660)
!5671 = !DILocation(line: 1847, column: 5, scope: !5660)
!5672 = !DILocation(line: 1847, column: 9, scope: !5660)
!5673 = !DILocation(line: 1847, column: 15, scope: !5660)
!5674 = !DILocation(line: 1849, column: 9, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5660, file: !1, line: 1849, column: 9)
!5676 = !DILocation(line: 1849, column: 13, scope: !5675)
!5677 = !DILocation(line: 1849, column: 9, scope: !5660)
!5678 = !DILocation(line: 1850, column: 6, scope: !5675)
!5679 = !DILocation(line: 1850, column: 16, scope: !5675)
!5680 = !DILocation(line: 1850, column: 20, scope: !5675)
!5681 = !DILocation(line: 1852, column: 17, scope: !5660)
!5682 = !DILocation(line: 1852, column: 29, scope: !5660)
!5683 = !DILocation(line: 1852, column: 5, scope: !5660)
!5684 = !DILocation(line: 1852, column: 9, scope: !5660)
!5685 = !DILocation(line: 1852, column: 15, scope: !5660)
!5686 = !DILocation(line: 1853, column: 9, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5660, file: !1, line: 1853, column: 9)
!5688 = !DILocation(line: 1853, column: 13, scope: !5687)
!5689 = !DILocation(line: 1853, column: 9, scope: !5660)
!5690 = !DILocation(line: 1854, column: 13, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5687, file: !1, line: 1853, column: 20)
!5692 = !DILocation(line: 1854, column: 17, scope: !5691)
!5693 = !DILocation(line: 1854, column: 6, scope: !5691)
!5694 = !DILocation(line: 1854, column: 24, scope: !5691)
!5695 = !DILocation(line: 1854, column: 31, scope: !5691)
!5696 = !DILocation(line: 1855, column: 5, scope: !5691)
!5697 = !DILocation(line: 1857, column: 13, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5687, file: !1, line: 1856, column: 10)
!5699 = !DILocation(line: 1857, column: 17, scope: !5698)
!5700 = !DILocation(line: 1857, column: 6, scope: !5698)
!5701 = !DILocation(line: 1857, column: 27, scope: !5698)
!5702 = !DILocation(line: 1859, column: 4, scope: !5660)
!5703 = !DILocation(line: 1845, column: 26, scope: !5655)
!5704 = !DILocation(line: 1845, column: 39, scope: !5655)
!5705 = !DILocation(line: 1845, column: 36, scope: !5655)
!5706 = !DILocation(line: 1845, column: 50, scope: !5655)
!5707 = !DILocation(line: 1845, column: 4, scope: !5655)
!5708 = distinct !{!5708, !5658, !5709}
!5709 = !DILocation(line: 1859, column: 4, scope: !5652)
!5710 = !DILocation(line: 1861, column: 2, scope: !5572)
!5711 = !DILocation(line: 1862, column: 1, scope: !5372)
!5712 = distinct !DISubprogram(name: "BKE_mesh_flush_hidden_from_verts_ex", scope: !1, file: !1, line: 2016, type: !5713, scopeLine: 2020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{null, !1694, !2885, !1413, !169, !107, !169}
!5715 = !DILocalVariable(name: "mvert", arg: 1, scope: !5712, file: !1, line: 2016, type: !1694)
!5716 = !DILocation(line: 2016, column: 55, scope: !5712)
!5717 = !DILocalVariable(name: "mloop", arg: 2, scope: !5712, file: !1, line: 2017, type: !2885)
!5718 = !DILocation(line: 2017, column: 55, scope: !5712)
!5719 = !DILocalVariable(name: "medge", arg: 3, scope: !5712, file: !1, line: 2018, type: !1413)
!5720 = !DILocation(line: 2018, column: 49, scope: !5712)
!5721 = !DILocalVariable(name: "totedge", arg: 4, scope: !5712, file: !1, line: 2018, type: !169)
!5722 = !DILocation(line: 2018, column: 66, scope: !5712)
!5723 = !DILocalVariable(name: "mpoly", arg: 5, scope: !5712, file: !1, line: 2019, type: !107)
!5724 = !DILocation(line: 2019, column: 49, scope: !5712)
!5725 = !DILocalVariable(name: "totpoly", arg: 6, scope: !5712, file: !1, line: 2019, type: !169)
!5726 = !DILocation(line: 2019, column: 66, scope: !5712)
!5727 = !DILocalVariable(name: "i", scope: !5712, file: !1, line: 2021, type: !93)
!5728 = !DILocation(line: 2021, column: 6, scope: !5712)
!5729 = !DILocalVariable(name: "j", scope: !5712, file: !1, line: 2021, type: !93)
!5730 = !DILocation(line: 2021, column: 9, scope: !5712)
!5731 = !DILocation(line: 2023, column: 9, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5712, file: !1, line: 2023, column: 2)
!5733 = !DILocation(line: 2023, column: 7, scope: !5732)
!5734 = !DILocation(line: 2023, column: 14, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5732, file: !1, line: 2023, column: 2)
!5736 = !DILocation(line: 2023, column: 18, scope: !5735)
!5737 = !DILocation(line: 2023, column: 16, scope: !5735)
!5738 = !DILocation(line: 2023, column: 2, scope: !5732)
!5739 = !DILocalVariable(name: "e", scope: !5740, file: !1, line: 2024, type: !1413)
!5740 = distinct !DILexicalBlock(scope: !5735, file: !1, line: 2023, column: 32)
!5741 = !DILocation(line: 2024, column: 10, scope: !5740)
!5742 = !DILocation(line: 2024, column: 15, scope: !5740)
!5743 = !DILocation(line: 2024, column: 21, scope: !5740)
!5744 = !DILocation(line: 2025, column: 7, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5740, file: !1, line: 2025, column: 7)
!5746 = !DILocation(line: 2025, column: 13, scope: !5745)
!5747 = !DILocation(line: 2025, column: 16, scope: !5745)
!5748 = !DILocation(line: 2025, column: 20, scope: !5745)
!5749 = !DILocation(line: 2025, column: 25, scope: !5745)
!5750 = !DILocation(line: 2025, column: 35, scope: !5745)
!5751 = !DILocation(line: 2026, column: 7, scope: !5745)
!5752 = !DILocation(line: 2026, column: 13, scope: !5745)
!5753 = !DILocation(line: 2026, column: 16, scope: !5745)
!5754 = !DILocation(line: 2026, column: 20, scope: !5745)
!5755 = !DILocation(line: 2026, column: 25, scope: !5745)
!5756 = !DILocation(line: 2025, column: 7, scope: !5740)
!5757 = !DILocation(line: 2028, column: 4, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5745, file: !1, line: 2027, column: 3)
!5759 = !DILocation(line: 2028, column: 7, scope: !5758)
!5760 = !DILocation(line: 2028, column: 12, scope: !5758)
!5761 = !DILocation(line: 2029, column: 3, scope: !5758)
!5762 = !DILocation(line: 2031, column: 4, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5745, file: !1, line: 2030, column: 8)
!5764 = !DILocation(line: 2031, column: 7, scope: !5763)
!5765 = !DILocation(line: 2031, column: 12, scope: !5763)
!5766 = !DILocation(line: 2033, column: 2, scope: !5740)
!5767 = !DILocation(line: 2023, column: 28, scope: !5735)
!5768 = !DILocation(line: 2023, column: 2, scope: !5735)
!5769 = distinct !{!5769, !5738, !5770}
!5770 = !DILocation(line: 2033, column: 2, scope: !5732)
!5771 = !DILocation(line: 2034, column: 9, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5712, file: !1, line: 2034, column: 2)
!5773 = !DILocation(line: 2034, column: 7, scope: !5772)
!5774 = !DILocation(line: 2034, column: 14, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5772, file: !1, line: 2034, column: 2)
!5776 = !DILocation(line: 2034, column: 18, scope: !5775)
!5777 = !DILocation(line: 2034, column: 16, scope: !5775)
!5778 = !DILocation(line: 2034, column: 2, scope: !5772)
!5779 = !DILocalVariable(name: "p", scope: !5780, file: !1, line: 2035, type: !107)
!5780 = distinct !DILexicalBlock(scope: !5775, file: !1, line: 2034, column: 32)
!5781 = !DILocation(line: 2035, column: 10, scope: !5780)
!5782 = !DILocation(line: 2035, column: 15, scope: !5780)
!5783 = !DILocation(line: 2035, column: 21, scope: !5780)
!5784 = !DILocation(line: 2036, column: 3, scope: !5780)
!5785 = !DILocation(line: 2036, column: 6, scope: !5780)
!5786 = !DILocation(line: 2036, column: 11, scope: !5780)
!5787 = !DILocation(line: 2037, column: 10, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5780, file: !1, line: 2037, column: 3)
!5789 = !DILocation(line: 2037, column: 8, scope: !5788)
!5790 = !DILocation(line: 2037, column: 15, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5788, file: !1, line: 2037, column: 3)
!5792 = !DILocation(line: 2037, column: 19, scope: !5791)
!5793 = !DILocation(line: 2037, column: 22, scope: !5791)
!5794 = !DILocation(line: 2037, column: 17, scope: !5791)
!5795 = !DILocation(line: 2037, column: 3, scope: !5788)
!5796 = !DILocation(line: 2038, column: 8, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5798, file: !1, line: 2038, column: 8)
!5798 = distinct !DILexicalBlock(scope: !5791, file: !1, line: 2037, column: 36)
!5799 = !DILocation(line: 2038, column: 14, scope: !5797)
!5800 = !DILocation(line: 2038, column: 20, scope: !5797)
!5801 = !DILocation(line: 2038, column: 23, scope: !5797)
!5802 = !DILocation(line: 2038, column: 35, scope: !5797)
!5803 = !DILocation(line: 2038, column: 33, scope: !5797)
!5804 = !DILocation(line: 2038, column: 38, scope: !5797)
!5805 = !DILocation(line: 2038, column: 41, scope: !5797)
!5806 = !DILocation(line: 2038, column: 46, scope: !5797)
!5807 = !DILocation(line: 2038, column: 8, scope: !5798)
!5808 = !DILocation(line: 2039, column: 5, scope: !5797)
!5809 = !DILocation(line: 2039, column: 8, scope: !5797)
!5810 = !DILocation(line: 2039, column: 13, scope: !5797)
!5811 = !DILocation(line: 2040, column: 3, scope: !5798)
!5812 = !DILocation(line: 2037, column: 32, scope: !5791)
!5813 = !DILocation(line: 2037, column: 3, scope: !5791)
!5814 = distinct !{!5814, !5795, !5815}
!5815 = !DILocation(line: 2040, column: 3, scope: !5788)
!5816 = !DILocation(line: 2041, column: 2, scope: !5780)
!5817 = !DILocation(line: 2034, column: 28, scope: !5775)
!5818 = !DILocation(line: 2034, column: 2, scope: !5775)
!5819 = distinct !{!5819, !5778, !5820}
!5820 = !DILocation(line: 2041, column: 2, scope: !5772)
!5821 = !DILocation(line: 2042, column: 1, scope: !5712)
!5822 = distinct !DISubprogram(name: "BKE_mesh_flush_hidden_from_verts", scope: !1, file: !1, line: 2043, type: !864, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!5823 = !DILocalVariable(name: "me", arg: 1, scope: !5822, file: !1, line: 2043, type: !866)
!5824 = !DILocation(line: 2043, column: 45, scope: !5822)
!5825 = !DILocation(line: 2045, column: 38, scope: !5822)
!5826 = !DILocation(line: 2045, column: 42, scope: !5822)
!5827 = !DILocation(line: 2045, column: 49, scope: !5822)
!5828 = !DILocation(line: 2045, column: 53, scope: !5822)
!5829 = !DILocation(line: 2046, column: 38, scope: !5822)
!5830 = !DILocation(line: 2046, column: 42, scope: !5822)
!5831 = !DILocation(line: 2046, column: 49, scope: !5822)
!5832 = !DILocation(line: 2046, column: 53, scope: !5822)
!5833 = !DILocation(line: 2047, column: 38, scope: !5822)
!5834 = !DILocation(line: 2047, column: 42, scope: !5822)
!5835 = !DILocation(line: 2047, column: 49, scope: !5822)
!5836 = !DILocation(line: 2047, column: 53, scope: !5822)
!5837 = !DILocation(line: 2045, column: 2, scope: !5822)
!5838 = !DILocation(line: 2048, column: 1, scope: !5822)
!5839 = distinct !DISubprogram(name: "BKE_mesh_flush_hidden_from_polys_ex", scope: !1, file: !1, line: 2050, type: !5840, scopeLine: 2054, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!5840 = !DISubroutineType(types: !5841)
!5841 = !{null, !124, !2885, !1413, !169, !2883, !169}
!5842 = !DILocalVariable(name: "mvert", arg: 1, scope: !5839, file: !1, line: 2050, type: !124)
!5843 = !DILocation(line: 2050, column: 49, scope: !5839)
!5844 = !DILocalVariable(name: "mloop", arg: 2, scope: !5839, file: !1, line: 2051, type: !2885)
!5845 = !DILocation(line: 2051, column: 55, scope: !5839)
!5846 = !DILocalVariable(name: "medge", arg: 3, scope: !5839, file: !1, line: 2052, type: !1413)
!5847 = !DILocation(line: 2052, column: 49, scope: !5839)
!5848 = !DILocalVariable(name: "UNUSED_totedge", arg: 4, scope: !5839, file: !1, line: 2052, type: !169)
!5849 = !DILocation(line: 2052, column: 66, scope: !5839)
!5850 = !DILocalVariable(name: "mpoly", arg: 5, scope: !5839, file: !1, line: 2053, type: !2883)
!5851 = !DILocation(line: 2053, column: 55, scope: !5839)
!5852 = !DILocalVariable(name: "totpoly", arg: 6, scope: !5839, file: !1, line: 2053, type: !169)
!5853 = !DILocation(line: 2053, column: 72, scope: !5839)
!5854 = !DILocalVariable(name: "mp", scope: !5839, file: !1, line: 2055, type: !2883)
!5855 = !DILocation(line: 2055, column: 15, scope: !5839)
!5856 = !DILocalVariable(name: "i", scope: !5839, file: !1, line: 2056, type: !93)
!5857 = !DILocation(line: 2056, column: 6, scope: !5839)
!5858 = !DILocation(line: 2058, column: 6, scope: !5839)
!5859 = !DILocation(line: 2058, column: 4, scope: !5839)
!5860 = !DILocation(line: 2059, column: 12, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5839, file: !1, line: 2059, column: 2)
!5862 = !DILocation(line: 2059, column: 10, scope: !5861)
!5863 = !DILocation(line: 2059, column: 7, scope: !5861)
!5864 = !DILocation(line: 2059, column: 20, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5861, file: !1, line: 2059, column: 2)
!5866 = !DILocation(line: 2059, column: 2, scope: !5861)
!5867 = !DILocation(line: 2060, column: 7, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5869, file: !1, line: 2060, column: 7)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !1, line: 2059, column: 30)
!5870 = !DILocation(line: 2060, column: 11, scope: !5868)
!5871 = !DILocation(line: 2060, column: 16, scope: !5868)
!5872 = !DILocation(line: 2060, column: 7, scope: !5869)
!5873 = !DILocalVariable(name: "ml", scope: !5874, file: !1, line: 2061, type: !2885)
!5874 = distinct !DILexicalBlock(scope: !5868, file: !1, line: 2060, column: 27)
!5875 = !DILocation(line: 2061, column: 17, scope: !5874)
!5876 = !DILocalVariable(name: "j", scope: !5874, file: !1, line: 2062, type: !93)
!5877 = !DILocation(line: 2062, column: 8, scope: !5874)
!5878 = !DILocation(line: 2063, column: 8, scope: !5874)
!5879 = !DILocation(line: 2063, column: 12, scope: !5874)
!5880 = !DILocation(line: 2063, column: 6, scope: !5874)
!5881 = !DILocation(line: 2064, column: 15, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5874, file: !1, line: 2064, column: 4)
!5883 = !DILocation(line: 2064, column: 21, scope: !5882)
!5884 = !DILocation(line: 2064, column: 25, scope: !5882)
!5885 = !DILocation(line: 2064, column: 12, scope: !5882)
!5886 = !DILocation(line: 2064, column: 9, scope: !5882)
!5887 = !DILocation(line: 2064, column: 38, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 2064, column: 4)
!5889 = !DILocation(line: 2064, column: 4, scope: !5882)
!5890 = !DILocation(line: 2065, column: 5, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5888, file: !1, line: 2064, column: 48)
!5892 = !DILocation(line: 2065, column: 11, scope: !5891)
!5893 = !DILocation(line: 2065, column: 15, scope: !5891)
!5894 = !DILocation(line: 2065, column: 18, scope: !5891)
!5895 = !DILocation(line: 2065, column: 23, scope: !5891)
!5896 = !DILocation(line: 2066, column: 5, scope: !5891)
!5897 = !DILocation(line: 2066, column: 11, scope: !5891)
!5898 = !DILocation(line: 2066, column: 15, scope: !5891)
!5899 = !DILocation(line: 2066, column: 18, scope: !5891)
!5900 = !DILocation(line: 2066, column: 23, scope: !5891)
!5901 = !DILocation(line: 2067, column: 4, scope: !5891)
!5902 = !DILocation(line: 2064, column: 44, scope: !5888)
!5903 = !DILocation(line: 2064, column: 4, scope: !5888)
!5904 = distinct !{!5904, !5889, !5905}
!5905 = !DILocation(line: 2067, column: 4, scope: !5882)
!5906 = !DILocation(line: 2068, column: 3, scope: !5874)
!5907 = !DILocation(line: 2069, column: 2, scope: !5869)
!5908 = !DILocation(line: 2059, column: 26, scope: !5865)
!5909 = !DILocation(line: 2059, column: 2, scope: !5865)
!5910 = distinct !{!5910, !5866, !5911}
!5911 = !DILocation(line: 2069, column: 2, scope: !5861)
!5912 = !DILocation(line: 2071, column: 6, scope: !5839)
!5913 = !DILocation(line: 2071, column: 4, scope: !5839)
!5914 = !DILocation(line: 2072, column: 12, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5839, file: !1, line: 2072, column: 2)
!5916 = !DILocation(line: 2072, column: 10, scope: !5915)
!5917 = !DILocation(line: 2072, column: 7, scope: !5915)
!5918 = !DILocation(line: 2072, column: 20, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5915, file: !1, line: 2072, column: 2)
!5920 = !DILocation(line: 2072, column: 2, scope: !5915)
!5921 = !DILocation(line: 2073, column: 8, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5923, file: !1, line: 2073, column: 7)
!5923 = distinct !DILexicalBlock(scope: !5919, file: !1, line: 2072, column: 30)
!5924 = !DILocation(line: 2073, column: 12, scope: !5922)
!5925 = !DILocation(line: 2073, column: 17, scope: !5922)
!5926 = !DILocation(line: 2073, column: 28, scope: !5922)
!5927 = !DILocation(line: 2073, column: 7, scope: !5923)
!5928 = !DILocalVariable(name: "ml", scope: !5929, file: !1, line: 2074, type: !2885)
!5929 = distinct !DILexicalBlock(scope: !5922, file: !1, line: 2073, column: 34)
!5930 = !DILocation(line: 2074, column: 17, scope: !5929)
!5931 = !DILocalVariable(name: "j", scope: !5929, file: !1, line: 2075, type: !93)
!5932 = !DILocation(line: 2075, column: 8, scope: !5929)
!5933 = !DILocation(line: 2076, column: 8, scope: !5929)
!5934 = !DILocation(line: 2076, column: 12, scope: !5929)
!5935 = !DILocation(line: 2076, column: 6, scope: !5929)
!5936 = !DILocation(line: 2077, column: 15, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5929, file: !1, line: 2077, column: 4)
!5938 = !DILocation(line: 2077, column: 21, scope: !5937)
!5939 = !DILocation(line: 2077, column: 25, scope: !5937)
!5940 = !DILocation(line: 2077, column: 12, scope: !5937)
!5941 = !DILocation(line: 2077, column: 9, scope: !5937)
!5942 = !DILocation(line: 2077, column: 38, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5937, file: !1, line: 2077, column: 4)
!5944 = !DILocation(line: 2077, column: 4, scope: !5937)
!5945 = !DILocation(line: 2078, column: 5, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5943, file: !1, line: 2077, column: 48)
!5947 = !DILocation(line: 2078, column: 11, scope: !5946)
!5948 = !DILocation(line: 2078, column: 15, scope: !5946)
!5949 = !DILocation(line: 2078, column: 18, scope: !5946)
!5950 = !DILocation(line: 2078, column: 23, scope: !5946)
!5951 = !DILocation(line: 2079, column: 5, scope: !5946)
!5952 = !DILocation(line: 2079, column: 11, scope: !5946)
!5953 = !DILocation(line: 2079, column: 15, scope: !5946)
!5954 = !DILocation(line: 2079, column: 18, scope: !5946)
!5955 = !DILocation(line: 2079, column: 23, scope: !5946)
!5956 = !DILocation(line: 2080, column: 4, scope: !5946)
!5957 = !DILocation(line: 2077, column: 44, scope: !5943)
!5958 = !DILocation(line: 2077, column: 4, scope: !5943)
!5959 = distinct !{!5959, !5944, !5960}
!5960 = !DILocation(line: 2080, column: 4, scope: !5937)
!5961 = !DILocation(line: 2081, column: 3, scope: !5929)
!5962 = !DILocation(line: 2082, column: 2, scope: !5923)
!5963 = !DILocation(line: 2072, column: 26, scope: !5919)
!5964 = !DILocation(line: 2072, column: 2, scope: !5919)
!5965 = distinct !{!5965, !5920, !5966}
!5966 = !DILocation(line: 2082, column: 2, scope: !5915)
!5967 = !DILocation(line: 2083, column: 1, scope: !5839)
!5968 = distinct !DISubprogram(name: "BKE_mesh_flush_hidden_from_polys", scope: !1, file: !1, line: 2084, type: !864, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!5969 = !DILocalVariable(name: "me", arg: 1, scope: !5968, file: !1, line: 2084, type: !866)
!5970 = !DILocation(line: 2084, column: 45, scope: !5968)
!5971 = !DILocation(line: 2086, column: 38, scope: !5968)
!5972 = !DILocation(line: 2086, column: 42, scope: !5968)
!5973 = !DILocation(line: 2086, column: 49, scope: !5968)
!5974 = !DILocation(line: 2086, column: 53, scope: !5968)
!5975 = !DILocation(line: 2087, column: 38, scope: !5968)
!5976 = !DILocation(line: 2087, column: 42, scope: !5968)
!5977 = !DILocation(line: 2087, column: 49, scope: !5968)
!5978 = !DILocation(line: 2087, column: 53, scope: !5968)
!5979 = !DILocation(line: 2088, column: 38, scope: !5968)
!5980 = !DILocation(line: 2088, column: 42, scope: !5968)
!5981 = !DILocation(line: 2088, column: 49, scope: !5968)
!5982 = !DILocation(line: 2088, column: 53, scope: !5968)
!5983 = !DILocation(line: 2086, column: 2, scope: !5968)
!5984 = !DILocation(line: 2089, column: 1, scope: !5968)
!5985 = distinct !DISubprogram(name: "BKE_mesh_flush_select_from_polys_ex", scope: !1, file: !1, line: 2094, type: !5986, scopeLine: 2098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{null, !124, !169, !2885, !1413, !169, !2883, !169}
!5988 = !DILocalVariable(name: "mvert", arg: 1, scope: !5985, file: !1, line: 2094, type: !124)
!5989 = !DILocation(line: 2094, column: 49, scope: !5985)
!5990 = !DILocalVariable(name: "totvert", arg: 2, scope: !5985, file: !1, line: 2094, type: !169)
!5991 = !DILocation(line: 2094, column: 72, scope: !5985)
!5992 = !DILocalVariable(name: "mloop", arg: 3, scope: !5985, file: !1, line: 2095, type: !2885)
!5993 = !DILocation(line: 2095, column: 55, scope: !5985)
!5994 = !DILocalVariable(name: "medge", arg: 4, scope: !5985, file: !1, line: 2096, type: !1413)
!5995 = !DILocation(line: 2096, column: 49, scope: !5985)
!5996 = !DILocalVariable(name: "totedge", arg: 5, scope: !5985, file: !1, line: 2096, type: !169)
!5997 = !DILocation(line: 2096, column: 72, scope: !5985)
!5998 = !DILocalVariable(name: "mpoly", arg: 6, scope: !5985, file: !1, line: 2097, type: !2883)
!5999 = !DILocation(line: 2097, column: 55, scope: !5985)
!6000 = !DILocalVariable(name: "totpoly", arg: 7, scope: !5985, file: !1, line: 2097, type: !169)
!6001 = !DILocation(line: 2097, column: 72, scope: !5985)
!6002 = !DILocalVariable(name: "mv", scope: !5985, file: !1, line: 2099, type: !124)
!6003 = !DILocation(line: 2099, column: 9, scope: !5985)
!6004 = !DILocalVariable(name: "med", scope: !5985, file: !1, line: 2100, type: !1413)
!6005 = !DILocation(line: 2100, column: 9, scope: !5985)
!6006 = !DILocalVariable(name: "mp", scope: !5985, file: !1, line: 2101, type: !2883)
!6007 = !DILocation(line: 2101, column: 15, scope: !5985)
!6008 = !DILocalVariable(name: "i", scope: !5985, file: !1, line: 2102, type: !93)
!6009 = !DILocation(line: 2102, column: 6, scope: !5985)
!6010 = !DILocation(line: 2104, column: 6, scope: !5985)
!6011 = !DILocation(line: 2104, column: 4, scope: !5985)
!6012 = !DILocation(line: 2105, column: 12, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 2105, column: 2)
!6014 = !DILocation(line: 2105, column: 10, scope: !6013)
!6015 = !DILocation(line: 2105, column: 7, scope: !6013)
!6016 = !DILocation(line: 2105, column: 20, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6013, file: !1, line: 2105, column: 2)
!6018 = !DILocation(line: 2105, column: 2, scope: !6013)
!6019 = !DILocation(line: 2106, column: 3, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6017, file: !1, line: 2105, column: 30)
!6021 = !DILocation(line: 2106, column: 7, scope: !6020)
!6022 = !DILocation(line: 2106, column: 12, scope: !6020)
!6023 = !DILocation(line: 2107, column: 2, scope: !6020)
!6024 = !DILocation(line: 2105, column: 26, scope: !6017)
!6025 = !DILocation(line: 2105, column: 2, scope: !6017)
!6026 = distinct !{!6026, !6018, !6027}
!6027 = !DILocation(line: 2107, column: 2, scope: !6013)
!6028 = !DILocation(line: 2109, column: 6, scope: !5985)
!6029 = !DILocation(line: 2109, column: 4, scope: !5985)
!6030 = !DILocation(line: 2110, column: 13, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 2110, column: 2)
!6032 = !DILocation(line: 2110, column: 11, scope: !6031)
!6033 = !DILocation(line: 2110, column: 7, scope: !6031)
!6034 = !DILocation(line: 2110, column: 21, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6031, file: !1, line: 2110, column: 2)
!6036 = !DILocation(line: 2110, column: 2, scope: !6031)
!6037 = !DILocation(line: 2111, column: 3, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6035, file: !1, line: 2110, column: 32)
!6039 = !DILocation(line: 2111, column: 8, scope: !6038)
!6040 = !DILocation(line: 2111, column: 13, scope: !6038)
!6041 = !DILocation(line: 2112, column: 2, scope: !6038)
!6042 = !DILocation(line: 2110, column: 28, scope: !6035)
!6043 = !DILocation(line: 2110, column: 2, scope: !6035)
!6044 = distinct !{!6044, !6036, !6045}
!6045 = !DILocation(line: 2112, column: 2, scope: !6031)
!6046 = !DILocation(line: 2114, column: 6, scope: !5985)
!6047 = !DILocation(line: 2114, column: 4, scope: !5985)
!6048 = !DILocation(line: 2115, column: 12, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 2115, column: 2)
!6050 = !DILocation(line: 2115, column: 10, scope: !6049)
!6051 = !DILocation(line: 2115, column: 7, scope: !6049)
!6052 = !DILocation(line: 2115, column: 20, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6049, file: !1, line: 2115, column: 2)
!6054 = !DILocation(line: 2115, column: 2, scope: !6049)
!6055 = !DILocation(line: 2118, column: 7, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6057, file: !1, line: 2118, column: 7)
!6057 = distinct !DILexicalBlock(scope: !6053, file: !1, line: 2115, column: 30)
!6058 = !DILocation(line: 2118, column: 11, scope: !6056)
!6059 = !DILocation(line: 2118, column: 16, scope: !6056)
!6060 = !DILocation(line: 2118, column: 7, scope: !6057)
!6061 = !DILocalVariable(name: "ml", scope: !6062, file: !1, line: 2119, type: !2885)
!6062 = distinct !DILexicalBlock(scope: !6056, file: !1, line: 2118, column: 31)
!6063 = !DILocation(line: 2119, column: 17, scope: !6062)
!6064 = !DILocalVariable(name: "j", scope: !6062, file: !1, line: 2120, type: !93)
!6065 = !DILocation(line: 2120, column: 8, scope: !6062)
!6066 = !DILocation(line: 2121, column: 8, scope: !6062)
!6067 = !DILocation(line: 2121, column: 12, scope: !6062)
!6068 = !DILocation(line: 2121, column: 6, scope: !6062)
!6069 = !DILocation(line: 2122, column: 15, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6062, file: !1, line: 2122, column: 4)
!6071 = !DILocation(line: 2122, column: 21, scope: !6070)
!6072 = !DILocation(line: 2122, column: 25, scope: !6070)
!6073 = !DILocation(line: 2122, column: 12, scope: !6070)
!6074 = !DILocation(line: 2122, column: 9, scope: !6070)
!6075 = !DILocation(line: 2122, column: 38, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6070, file: !1, line: 2122, column: 4)
!6077 = !DILocation(line: 2122, column: 4, scope: !6070)
!6078 = !DILocation(line: 2123, column: 5, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6076, file: !1, line: 2122, column: 48)
!6080 = !DILocation(line: 2123, column: 11, scope: !6079)
!6081 = !DILocation(line: 2123, column: 15, scope: !6079)
!6082 = !DILocation(line: 2123, column: 18, scope: !6079)
!6083 = !DILocation(line: 2123, column: 23, scope: !6079)
!6084 = !DILocation(line: 2124, column: 5, scope: !6079)
!6085 = !DILocation(line: 2124, column: 11, scope: !6079)
!6086 = !DILocation(line: 2124, column: 15, scope: !6079)
!6087 = !DILocation(line: 2124, column: 18, scope: !6079)
!6088 = !DILocation(line: 2124, column: 23, scope: !6079)
!6089 = !DILocation(line: 2125, column: 4, scope: !6079)
!6090 = !DILocation(line: 2122, column: 44, scope: !6076)
!6091 = !DILocation(line: 2122, column: 4, scope: !6076)
!6092 = distinct !{!6092, !6077, !6093}
!6093 = !DILocation(line: 2125, column: 4, scope: !6070)
!6094 = !DILocation(line: 2126, column: 3, scope: !6062)
!6095 = !DILocation(line: 2127, column: 2, scope: !6057)
!6096 = !DILocation(line: 2115, column: 26, scope: !6053)
!6097 = !DILocation(line: 2115, column: 2, scope: !6053)
!6098 = distinct !{!6098, !6054, !6099}
!6099 = !DILocation(line: 2127, column: 2, scope: !6049)
!6100 = !DILocation(line: 2128, column: 1, scope: !5985)
!6101 = distinct !DISubprogram(name: "BKE_mesh_flush_select_from_polys", scope: !1, file: !1, line: 2129, type: !864, scopeLine: 2130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!6102 = !DILocalVariable(name: "me", arg: 1, scope: !6101, file: !1, line: 2129, type: !866)
!6103 = !DILocation(line: 2129, column: 45, scope: !6101)
!6104 = !DILocation(line: 2131, column: 38, scope: !6101)
!6105 = !DILocation(line: 2131, column: 42, scope: !6101)
!6106 = !DILocation(line: 2131, column: 49, scope: !6101)
!6107 = !DILocation(line: 2131, column: 53, scope: !6101)
!6108 = !DILocation(line: 2132, column: 35, scope: !6101)
!6109 = !DILocation(line: 2132, column: 39, scope: !6101)
!6110 = !DILocation(line: 2133, column: 35, scope: !6101)
!6111 = !DILocation(line: 2133, column: 39, scope: !6101)
!6112 = !DILocation(line: 2133, column: 46, scope: !6101)
!6113 = !DILocation(line: 2133, column: 50, scope: !6101)
!6114 = !DILocation(line: 2134, column: 35, scope: !6101)
!6115 = !DILocation(line: 2134, column: 39, scope: !6101)
!6116 = !DILocation(line: 2134, column: 46, scope: !6101)
!6117 = !DILocation(line: 2134, column: 50, scope: !6101)
!6118 = !DILocation(line: 2131, column: 2, scope: !6101)
!6119 = !DILocation(line: 2135, column: 1, scope: !6101)
!6120 = distinct !DISubprogram(name: "BKE_mesh_flush_select_from_verts_ex", scope: !1, file: !1, line: 2137, type: !6121, scopeLine: 2141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{null, !1694, !169, !2885, !1413, !169, !107, !169}
!6123 = !DILocalVariable(name: "mvert", arg: 1, scope: !6120, file: !1, line: 2137, type: !1694)
!6124 = !DILocation(line: 2137, column: 55, scope: !6120)
!6125 = !DILocalVariable(name: "UNUSED_totvert", arg: 2, scope: !6120, file: !1, line: 2137, type: !169)
!6126 = !DILocation(line: 2137, column: 72, scope: !6120)
!6127 = !DILocalVariable(name: "mloop", arg: 3, scope: !6120, file: !1, line: 2138, type: !2885)
!6128 = !DILocation(line: 2138, column: 55, scope: !6120)
!6129 = !DILocalVariable(name: "medge", arg: 4, scope: !6120, file: !1, line: 2139, type: !1413)
!6130 = !DILocation(line: 2139, column: 49, scope: !6120)
!6131 = !DILocalVariable(name: "totedge", arg: 5, scope: !6120, file: !1, line: 2139, type: !169)
!6132 = !DILocation(line: 2139, column: 72, scope: !6120)
!6133 = !DILocalVariable(name: "mpoly", arg: 6, scope: !6120, file: !1, line: 2140, type: !107)
!6134 = !DILocation(line: 2140, column: 49, scope: !6120)
!6135 = !DILocalVariable(name: "totpoly", arg: 7, scope: !6120, file: !1, line: 2140, type: !169)
!6136 = !DILocation(line: 2140, column: 72, scope: !6120)
!6137 = !DILocalVariable(name: "med", scope: !6120, file: !1, line: 2142, type: !1413)
!6138 = !DILocation(line: 2142, column: 9, scope: !6120)
!6139 = !DILocalVariable(name: "mp", scope: !6120, file: !1, line: 2143, type: !107)
!6140 = !DILocation(line: 2143, column: 9, scope: !6120)
!6141 = !DILocalVariable(name: "i", scope: !6120, file: !1, line: 2144, type: !93)
!6142 = !DILocation(line: 2144, column: 6, scope: !6120)
!6143 = !DILocation(line: 2147, column: 6, scope: !6120)
!6144 = !DILocation(line: 2147, column: 4, scope: !6120)
!6145 = !DILocation(line: 2148, column: 13, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6120, file: !1, line: 2148, column: 2)
!6147 = !DILocation(line: 2148, column: 11, scope: !6146)
!6148 = !DILocation(line: 2148, column: 7, scope: !6146)
!6149 = !DILocation(line: 2148, column: 21, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6146, file: !1, line: 2148, column: 2)
!6151 = !DILocation(line: 2148, column: 2, scope: !6146)
!6152 = !DILocation(line: 2149, column: 8, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !1, line: 2149, column: 7)
!6154 = distinct !DILexicalBlock(scope: !6150, file: !1, line: 2148, column: 32)
!6155 = !DILocation(line: 2149, column: 13, scope: !6153)
!6156 = !DILocation(line: 2149, column: 18, scope: !6153)
!6157 = !DILocation(line: 2149, column: 29, scope: !6153)
!6158 = !DILocation(line: 2149, column: 7, scope: !6154)
!6159 = !DILocation(line: 2150, column: 9, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !1, line: 2150, column: 8)
!6161 = distinct !DILexicalBlock(scope: !6153, file: !1, line: 2149, column: 35)
!6162 = !DILocation(line: 2150, column: 15, scope: !6160)
!6163 = !DILocation(line: 2150, column: 20, scope: !6160)
!6164 = !DILocation(line: 2150, column: 24, scope: !6160)
!6165 = !DILocation(line: 2150, column: 29, scope: !6160)
!6166 = !DILocation(line: 2150, column: 39, scope: !6160)
!6167 = !DILocation(line: 2150, column: 43, scope: !6160)
!6168 = !DILocation(line: 2150, column: 49, scope: !6160)
!6169 = !DILocation(line: 2150, column: 54, scope: !6160)
!6170 = !DILocation(line: 2150, column: 58, scope: !6160)
!6171 = !DILocation(line: 2150, column: 63, scope: !6160)
!6172 = !DILocation(line: 2150, column: 8, scope: !6161)
!6173 = !DILocation(line: 2151, column: 5, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6160, file: !1, line: 2150, column: 74)
!6175 = !DILocation(line: 2151, column: 10, scope: !6174)
!6176 = !DILocation(line: 2151, column: 15, scope: !6174)
!6177 = !DILocation(line: 2152, column: 4, scope: !6174)
!6178 = !DILocation(line: 2154, column: 5, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6160, file: !1, line: 2153, column: 9)
!6180 = !DILocation(line: 2154, column: 10, scope: !6179)
!6181 = !DILocation(line: 2154, column: 15, scope: !6179)
!6182 = !DILocation(line: 2156, column: 3, scope: !6161)
!6183 = !DILocation(line: 2157, column: 2, scope: !6154)
!6184 = !DILocation(line: 2148, column: 28, scope: !6150)
!6185 = !DILocation(line: 2148, column: 2, scope: !6150)
!6186 = distinct !{!6186, !6151, !6187}
!6187 = !DILocation(line: 2157, column: 2, scope: !6146)
!6188 = !DILocation(line: 2160, column: 6, scope: !6120)
!6189 = !DILocation(line: 2160, column: 4, scope: !6120)
!6190 = !DILocation(line: 2161, column: 12, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6120, file: !1, line: 2161, column: 2)
!6192 = !DILocation(line: 2161, column: 10, scope: !6191)
!6193 = !DILocation(line: 2161, column: 7, scope: !6191)
!6194 = !DILocation(line: 2161, column: 20, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6191, file: !1, line: 2161, column: 2)
!6196 = !DILocation(line: 2161, column: 2, scope: !6191)
!6197 = !DILocation(line: 2162, column: 8, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 2162, column: 7)
!6199 = distinct !DILexicalBlock(scope: !6195, file: !1, line: 2161, column: 30)
!6200 = !DILocation(line: 2162, column: 12, scope: !6198)
!6201 = !DILocation(line: 2162, column: 17, scope: !6198)
!6202 = !DILocation(line: 2162, column: 28, scope: !6198)
!6203 = !DILocation(line: 2162, column: 7, scope: !6199)
!6204 = !DILocalVariable(name: "ok", scope: !6205, file: !1, line: 2163, type: !210)
!6205 = distinct !DILexicalBlock(scope: !6198, file: !1, line: 2162, column: 34)
!6206 = !DILocation(line: 2163, column: 9, scope: !6205)
!6207 = !DILocalVariable(name: "ml", scope: !6205, file: !1, line: 2164, type: !2885)
!6208 = !DILocation(line: 2164, column: 17, scope: !6205)
!6209 = !DILocalVariable(name: "j", scope: !6205, file: !1, line: 2165, type: !93)
!6210 = !DILocation(line: 2165, column: 8, scope: !6205)
!6211 = !DILocation(line: 2166, column: 8, scope: !6205)
!6212 = !DILocation(line: 2166, column: 12, scope: !6205)
!6213 = !DILocation(line: 2166, column: 6, scope: !6205)
!6214 = !DILocation(line: 2167, column: 15, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6205, file: !1, line: 2167, column: 4)
!6216 = !DILocation(line: 2167, column: 21, scope: !6215)
!6217 = !DILocation(line: 2167, column: 25, scope: !6215)
!6218 = !DILocation(line: 2167, column: 12, scope: !6215)
!6219 = !DILocation(line: 2167, column: 9, scope: !6215)
!6220 = !DILocation(line: 2167, column: 38, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6215, file: !1, line: 2167, column: 4)
!6222 = !DILocation(line: 2167, column: 4, scope: !6215)
!6223 = !DILocation(line: 2168, column: 10, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6225, file: !1, line: 2168, column: 9)
!6225 = distinct !DILexicalBlock(scope: !6221, file: !1, line: 2167, column: 48)
!6226 = !DILocation(line: 2168, column: 16, scope: !6224)
!6227 = !DILocation(line: 2168, column: 20, scope: !6224)
!6228 = !DILocation(line: 2168, column: 23, scope: !6224)
!6229 = !DILocation(line: 2168, column: 28, scope: !6224)
!6230 = !DILocation(line: 2168, column: 38, scope: !6224)
!6231 = !DILocation(line: 2168, column: 9, scope: !6225)
!6232 = !DILocation(line: 2169, column: 9, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6224, file: !1, line: 2168, column: 44)
!6234 = !DILocation(line: 2170, column: 6, scope: !6233)
!6235 = !DILocation(line: 2172, column: 4, scope: !6225)
!6236 = !DILocation(line: 2167, column: 44, scope: !6221)
!6237 = !DILocation(line: 2167, column: 4, scope: !6221)
!6238 = distinct !{!6238, !6222, !6239}
!6239 = !DILocation(line: 2172, column: 4, scope: !6215)
!6240 = !DILocation(line: 2174, column: 8, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6205, file: !1, line: 2174, column: 8)
!6242 = !DILocation(line: 2174, column: 8, scope: !6205)
!6243 = !DILocation(line: 2175, column: 5, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !1, line: 2174, column: 12)
!6245 = !DILocation(line: 2175, column: 9, scope: !6244)
!6246 = !DILocation(line: 2175, column: 14, scope: !6244)
!6247 = !DILocation(line: 2176, column: 4, scope: !6244)
!6248 = !DILocation(line: 2178, column: 5, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6241, file: !1, line: 2177, column: 9)
!6250 = !DILocation(line: 2178, column: 9, scope: !6249)
!6251 = !DILocation(line: 2178, column: 14, scope: !6249)
!6252 = !DILocation(line: 2180, column: 3, scope: !6205)
!6253 = !DILocation(line: 2181, column: 2, scope: !6199)
!6254 = !DILocation(line: 2161, column: 26, scope: !6195)
!6255 = !DILocation(line: 2161, column: 2, scope: !6195)
!6256 = distinct !{!6256, !6196, !6257}
!6257 = !DILocation(line: 2181, column: 2, scope: !6191)
!6258 = !DILocation(line: 2182, column: 1, scope: !6120)
!6259 = distinct !DISubprogram(name: "BKE_mesh_flush_select_from_verts", scope: !1, file: !1, line: 2183, type: !864, scopeLine: 2184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!6260 = !DILocalVariable(name: "me", arg: 1, scope: !6259, file: !1, line: 2183, type: !866)
!6261 = !DILocation(line: 2183, column: 45, scope: !6259)
!6262 = !DILocation(line: 2185, column: 38, scope: !6259)
!6263 = !DILocation(line: 2185, column: 42, scope: !6259)
!6264 = !DILocation(line: 2185, column: 49, scope: !6259)
!6265 = !DILocation(line: 2185, column: 53, scope: !6259)
!6266 = !DILocation(line: 2186, column: 38, scope: !6259)
!6267 = !DILocation(line: 2186, column: 42, scope: !6259)
!6268 = !DILocation(line: 2187, column: 38, scope: !6259)
!6269 = !DILocation(line: 2187, column: 42, scope: !6259)
!6270 = !DILocation(line: 2187, column: 49, scope: !6259)
!6271 = !DILocation(line: 2187, column: 53, scope: !6259)
!6272 = !DILocation(line: 2188, column: 38, scope: !6259)
!6273 = !DILocation(line: 2188, column: 42, scope: !6259)
!6274 = !DILocation(line: 2188, column: 49, scope: !6259)
!6275 = !DILocation(line: 2188, column: 53, scope: !6259)
!6276 = !DILocation(line: 2185, column: 2, scope: !6259)
!6277 = !DILocation(line: 2189, column: 1, scope: !6259)
!6278 = distinct !DISubprogram(name: "BKE_mesh_calc_relative_deform", scope: !1, file: !1, line: 2208, type: !6279, scopeLine: 2217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !170)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{null, !2883, !169, !2885, !169, !85, !85, !85, !143}
!6281 = !DILocalVariable(name: "mpoly", arg: 1, scope: !6278, file: !1, line: 2209, type: !2883)
!6282 = !DILocation(line: 2209, column: 22, scope: !6278)
!6283 = !DILocalVariable(name: "totpoly", arg: 2, scope: !6278, file: !1, line: 2209, type: !169)
!6284 = !DILocation(line: 2209, column: 39, scope: !6278)
!6285 = !DILocalVariable(name: "mloop", arg: 3, scope: !6278, file: !1, line: 2210, type: !2885)
!6286 = !DILocation(line: 2210, column: 22, scope: !6278)
!6287 = !DILocalVariable(name: "totvert", arg: 4, scope: !6278, file: !1, line: 2210, type: !169)
!6288 = !DILocation(line: 2210, column: 39, scope: !6278)
!6289 = !DILocalVariable(name: "vert_cos_src", arg: 5, scope: !6278, file: !1, line: 2212, type: !85)
!6290 = !DILocation(line: 2212, column: 23, scope: !6278)
!6291 = !DILocalVariable(name: "vert_cos_dst", arg: 6, scope: !6278, file: !1, line: 2213, type: !85)
!6292 = !DILocation(line: 2213, column: 23, scope: !6278)
!6293 = !DILocalVariable(name: "vert_cos_org", arg: 7, scope: !6278, file: !1, line: 2215, type: !85)
!6294 = !DILocation(line: 2215, column: 23, scope: !6278)
!6295 = !DILocalVariable(name: "vert_cos_new", arg: 8, scope: !6278, file: !1, line: 2216, type: !143)
!6296 = !DILocation(line: 2216, column: 23, scope: !6278)
!6297 = !DILocalVariable(name: "mp", scope: !6278, file: !1, line: 2218, type: !2883)
!6298 = !DILocation(line: 2218, column: 15, scope: !6278)
!6299 = !DILocalVariable(name: "i", scope: !6278, file: !1, line: 2219, type: !93)
!6300 = !DILocation(line: 2219, column: 6, scope: !6278)
!6301 = !DILocalVariable(name: "vert_accum", scope: !6278, file: !1, line: 2221, type: !1446)
!6302 = !DILocation(line: 2221, column: 7, scope: !6278)
!6303 = !DILocation(line: 2221, column: 20, scope: !6278)
!6304 = !DILocation(line: 2221, column: 62, scope: !6278)
!6305 = !DILocation(line: 2221, column: 54, scope: !6278)
!6306 = !DILocation(line: 2221, column: 52, scope: !6278)
!6307 = !DILocation(line: 2223, column: 9, scope: !6278)
!6308 = !DILocation(line: 2223, column: 2, scope: !6278)
!6309 = !DILocation(line: 2223, column: 61, scope: !6278)
!6310 = !DILocation(line: 2223, column: 53, scope: !6278)
!6311 = !DILocation(line: 2223, column: 51, scope: !6278)
!6312 = !DILocation(line: 2225, column: 9, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6278, file: !1, line: 2225, column: 2)
!6314 = !DILocation(line: 2225, column: 19, scope: !6313)
!6315 = !DILocation(line: 2225, column: 17, scope: !6313)
!6316 = !DILocation(line: 2225, column: 7, scope: !6313)
!6317 = !DILocation(line: 2225, column: 26, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6313, file: !1, line: 2225, column: 2)
!6319 = !DILocation(line: 2225, column: 30, scope: !6318)
!6320 = !DILocation(line: 2225, column: 28, scope: !6318)
!6321 = !DILocation(line: 2225, column: 2, scope: !6313)
!6322 = !DILocalVariable(name: "loopstart", scope: !6323, file: !1, line: 2226, type: !2885)
!6323 = distinct !DILexicalBlock(scope: !6318, file: !1, line: 2225, column: 50)
!6324 = !DILocation(line: 2226, column: 16, scope: !6323)
!6325 = !DILocation(line: 2226, column: 28, scope: !6323)
!6326 = !DILocation(line: 2226, column: 36, scope: !6323)
!6327 = !DILocation(line: 2226, column: 40, scope: !6323)
!6328 = !DILocation(line: 2226, column: 34, scope: !6323)
!6329 = !DILocalVariable(name: "j", scope: !6323, file: !1, line: 2227, type: !93)
!6330 = !DILocation(line: 2227, column: 7, scope: !6323)
!6331 = !DILocation(line: 2229, column: 10, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6323, file: !1, line: 2229, column: 3)
!6333 = !DILocation(line: 2229, column: 8, scope: !6332)
!6334 = !DILocation(line: 2229, column: 15, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6332, file: !1, line: 2229, column: 3)
!6336 = !DILocation(line: 2229, column: 19, scope: !6335)
!6337 = !DILocation(line: 2229, column: 23, scope: !6335)
!6338 = !DILocation(line: 2229, column: 17, scope: !6335)
!6339 = !DILocation(line: 2229, column: 3, scope: !6332)
!6340 = !DILocalVariable(name: "v_prev", scope: !6341, file: !1, line: 2230, type: !5)
!6341 = distinct !DILexicalBlock(scope: !6335, file: !1, line: 2229, column: 37)
!6342 = !DILocation(line: 2230, column: 17, scope: !6341)
!6343 = !DILocation(line: 2230, column: 26, scope: !6341)
!6344 = !DILocation(line: 2230, column: 37, scope: !6341)
!6345 = !DILocation(line: 2230, column: 41, scope: !6341)
!6346 = !DILocation(line: 2230, column: 52, scope: !6341)
!6347 = !DILocation(line: 2230, column: 54, scope: !6341)
!6348 = !DILocation(line: 2230, column: 49, scope: !6341)
!6349 = !DILocation(line: 2230, column: 62, scope: !6341)
!6350 = !DILocation(line: 2230, column: 66, scope: !6341)
!6351 = !DILocation(line: 2230, column: 60, scope: !6341)
!6352 = !DILocation(line: 2230, column: 75, scope: !6341)
!6353 = !DILocalVariable(name: "v_curr", scope: !6341, file: !1, line: 2231, type: !5)
!6354 = !DILocation(line: 2231, column: 17, scope: !6341)
!6355 = !DILocation(line: 2231, column: 26, scope: !6341)
!6356 = !DILocation(line: 2231, column: 36, scope: !6341)
!6357 = !DILocation(line: 2231, column: 39, scope: !6341)
!6358 = !DILocalVariable(name: "v_next", scope: !6341, file: !1, line: 2232, type: !5)
!6359 = !DILocation(line: 2232, column: 17, scope: !6341)
!6360 = !DILocation(line: 2232, column: 26, scope: !6341)
!6361 = !DILocation(line: 2232, column: 37, scope: !6341)
!6362 = !DILocation(line: 2232, column: 39, scope: !6341)
!6363 = !DILocation(line: 2232, column: 46, scope: !6341)
!6364 = !DILocation(line: 2232, column: 50, scope: !6341)
!6365 = !DILocation(line: 2232, column: 44, scope: !6341)
!6366 = !DILocation(line: 2232, column: 59, scope: !6341)
!6367 = !DILocalVariable(name: "tvec", scope: !6341, file: !1, line: 2234, type: !129)
!6368 = !DILocation(line: 2234, column: 10, scope: !6341)
!6369 = !DILocation(line: 2237, column: 12, scope: !6341)
!6370 = !DILocation(line: 2237, column: 18, scope: !6341)
!6371 = !DILocation(line: 2237, column: 31, scope: !6341)
!6372 = !DILocation(line: 2238, column: 12, scope: !6341)
!6373 = !DILocation(line: 2238, column: 25, scope: !6341)
!6374 = !DILocation(line: 2238, column: 34, scope: !6341)
!6375 = !DILocation(line: 2238, column: 47, scope: !6341)
!6376 = !DILocation(line: 2238, column: 56, scope: !6341)
!6377 = !DILocation(line: 2238, column: 69, scope: !6341)
!6378 = !DILocation(line: 2239, column: 12, scope: !6341)
!6379 = !DILocation(line: 2239, column: 25, scope: !6341)
!6380 = !DILocation(line: 2239, column: 34, scope: !6341)
!6381 = !DILocation(line: 2239, column: 47, scope: !6341)
!6382 = !DILocation(line: 2239, column: 56, scope: !6341)
!6383 = !DILocation(line: 2239, column: 69, scope: !6341)
!6384 = !DILocation(line: 2236, column: 4, scope: !6341)
!6385 = !DILocation(line: 2241, column: 14, scope: !6341)
!6386 = !DILocation(line: 2241, column: 27, scope: !6341)
!6387 = !DILocation(line: 2241, column: 36, scope: !6341)
!6388 = !DILocation(line: 2241, column: 4, scope: !6341)
!6389 = !DILocation(line: 2242, column: 4, scope: !6341)
!6390 = !DILocation(line: 2242, column: 15, scope: !6341)
!6391 = !DILocation(line: 2242, column: 23, scope: !6341)
!6392 = !DILocation(line: 2243, column: 3, scope: !6341)
!6393 = !DILocation(line: 2229, column: 33, scope: !6335)
!6394 = !DILocation(line: 2229, column: 3, scope: !6335)
!6395 = distinct !{!6395, !6339, !6396}
!6396 = !DILocation(line: 2243, column: 3, scope: !6332)
!6397 = !DILocation(line: 2244, column: 2, scope: !6323)
!6398 = !DILocation(line: 2225, column: 40, scope: !6318)
!6399 = !DILocation(line: 2225, column: 46, scope: !6318)
!6400 = !DILocation(line: 2225, column: 2, scope: !6318)
!6401 = distinct !{!6401, !6321, !6402}
!6402 = !DILocation(line: 2244, column: 2, scope: !6313)
!6403 = !DILocation(line: 2246, column: 9, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6278, file: !1, line: 2246, column: 2)
!6405 = !DILocation(line: 2246, column: 7, scope: !6404)
!6406 = !DILocation(line: 2246, column: 14, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6404, file: !1, line: 2246, column: 2)
!6408 = !DILocation(line: 2246, column: 18, scope: !6407)
!6409 = !DILocation(line: 2246, column: 16, scope: !6407)
!6410 = !DILocation(line: 2246, column: 2, scope: !6404)
!6411 = !DILocation(line: 2247, column: 7, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !1, line: 2247, column: 7)
!6413 = distinct !DILexicalBlock(scope: !6407, file: !1, line: 2246, column: 32)
!6414 = !DILocation(line: 2247, column: 18, scope: !6412)
!6415 = !DILocation(line: 2247, column: 7, scope: !6413)
!6416 = !DILocation(line: 2248, column: 14, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6412, file: !1, line: 2247, column: 22)
!6418 = !DILocation(line: 2248, column: 27, scope: !6417)
!6419 = !DILocation(line: 2248, column: 45, scope: !6417)
!6420 = !DILocation(line: 2248, column: 56, scope: !6417)
!6421 = !DILocation(line: 2248, column: 38, scope: !6417)
!6422 = !DILocation(line: 2248, column: 36, scope: !6417)
!6423 = !DILocation(line: 2248, column: 4, scope: !6417)
!6424 = !DILocation(line: 2249, column: 3, scope: !6417)
!6425 = !DILocation(line: 2251, column: 15, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6412, file: !1, line: 2250, column: 8)
!6427 = !DILocation(line: 2251, column: 28, scope: !6426)
!6428 = !DILocation(line: 2251, column: 32, scope: !6426)
!6429 = !DILocation(line: 2251, column: 45, scope: !6426)
!6430 = !DILocation(line: 2251, column: 4, scope: !6426)
!6431 = !DILocation(line: 2253, column: 2, scope: !6413)
!6432 = !DILocation(line: 2246, column: 28, scope: !6407)
!6433 = !DILocation(line: 2246, column: 2, scope: !6407)
!6434 = distinct !{!6434, !6410, !6435}
!6435 = !DILocation(line: 2253, column: 2, scope: !6404)
!6436 = !DILocation(line: 2255, column: 2, scope: !6278)
!6437 = !DILocation(line: 2255, column: 12, scope: !6278)
!6438 = !DILocation(line: 2256, column: 1, scope: !6278)
!6439 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !658, file: !658, line: 399, type: !2027, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !170)
!6440 = !DILocalVariable(name: "r", arg: 1, scope: !6439, file: !658, line: 399, type: !555)
!6441 = !DILocation(line: 399, column: 32, scope: !6439)
!6442 = !DILocalVariable(name: "a", arg: 2, scope: !6439, file: !658, line: 399, type: !661)
!6443 = !DILocation(line: 399, column: 50, scope: !6439)
!6444 = !DILocalVariable(name: "f", arg: 3, scope: !6439, file: !658, line: 399, type: !84)
!6445 = !DILocation(line: 399, column: 62, scope: !6439)
!6446 = !DILocation(line: 401, column: 9, scope: !6439)
!6447 = !DILocation(line: 401, column: 16, scope: !6439)
!6448 = !DILocation(line: 401, column: 14, scope: !6439)
!6449 = !DILocation(line: 401, column: 2, scope: !6439)
!6450 = !DILocation(line: 401, column: 7, scope: !6439)
!6451 = !DILocation(line: 402, column: 9, scope: !6439)
!6452 = !DILocation(line: 402, column: 16, scope: !6439)
!6453 = !DILocation(line: 402, column: 14, scope: !6439)
!6454 = !DILocation(line: 402, column: 2, scope: !6439)
!6455 = !DILocation(line: 402, column: 7, scope: !6439)
!6456 = !DILocation(line: 403, column: 9, scope: !6439)
!6457 = !DILocation(line: 403, column: 16, scope: !6439)
!6458 = !DILocation(line: 403, column: 14, scope: !6439)
!6459 = !DILocation(line: 403, column: 2, scope: !6439)
!6460 = !DILocation(line: 403, column: 7, scope: !6439)
!6461 = !DILocation(line: 404, column: 1, scope: !6439)
