; ModuleID = 'blender/source/blender/blenkernel/intern/material.c'
source_filename = "blender/source/blender/blenkernel/intern/material.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type opaque
%struct.SpaceNode = type opaque
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type { i32, i8*, [4 x float], %struct.GPUNodeLink*, i8, i8, i16 }
%struct.GPUNodeLink = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Ipo = type opaque
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.ListBase = type { i8*, i8* }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoop = type { i32, i32 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.MetaBall = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Ipo*, %struct.Material**, i8, i8, i16, i16, i16, [3 x float], [3 x float], [3 x float], float, float, float, %struct.MetaElem* }
%struct.MetaElem = type { %struct.MetaElem*, %struct.MetaElem*, %struct.BoundBox*, i16, i16, i16, i16, float, float, float, [4 x float], float, float, float, float, float, float, float, float*, float* }

@defmaterial = common dso_local global %struct.Material zeroinitializer, align 8, !dbg !0
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [13 x i8] c"copymaterial\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@MEM_recallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.BKE_material_resize_id = private unnamed_addr constant [23 x i8] c"BKE_material_resize_id\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"newmatar\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.BKE_material_pop_id = private unnamed_addr constant [20 x i8] c"BKE_material_pop_id\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Negative material index!\0A\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"newmatbits\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"matarray1\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.5 = private unnamed_addr constant [10 x i8] c"matarray2\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"matbits1\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"%s: invalid material index %d, report a bug!\0A\00", align 1
@__func__.object_remove_material_slot = private unnamed_addr constant [28 x i8] c"object_remove_material_slot\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"texpaint_slots\00", align 1
@matcopybuf = internal global %struct.Material zeroinitializer, align 8, !dbg !2669
@matcopied = internal global i16 0, align 2, !dbg !2671
@.str.9 = private unnamed_addr constant [33 x i8] c"Warning: material \22%s\22 skipped.\0A\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"MAMaterial.TF.%0*d\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"TexFace Convert: Material \22%s\22 created.\0A\00", align 1
@.str.12 = private unnamed_addr constant [53 x i8] c"Error: Unable to create Material \22%s\22 for Mesh \22%s\22.\00", align 1
@.str.13 = private unnamed_addr constant [52 x i8] c"Error: Unable to create Material \22%s\22 for Mesh \22%s.\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"%.*s.TF.%0*d\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_def_material() #0 !dbg !2677 {
entry:
  call void @init_material(%struct.Material* @defmaterial), !dbg !2681
  ret void, !dbg !2682
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_material(%struct.Material* %ma) #0 !dbg !2683 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !2686, metadata !DIExpression()), !dbg !2687
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2688
  %ref = getelementptr inbounds %struct.Material, %struct.Material* %0, i32 0, i32 22, !dbg !2689
  store float 0x3FE99999A0000000, float* %ref, align 4, !dbg !2690
  %1 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2691
  %b = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 6, !dbg !2692
  store float 0x3FE99999A0000000, float* %b, align 4, !dbg !2693
  %2 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2694
  %g = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 5, !dbg !2695
  store float 0x3FE99999A0000000, float* %g, align 8, !dbg !2696
  %3 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2697
  %r = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 4, !dbg !2698
  store float 0x3FE99999A0000000, float* %r, align 4, !dbg !2699
  %4 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2700
  %specb = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 9, !dbg !2701
  store float 1.000000e+00, float* %specb, align 8, !dbg !2702
  %5 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2703
  %specg = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 8, !dbg !2704
  store float 1.000000e+00, float* %specg, align 4, !dbg !2705
  %6 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2706
  %specr = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 7, !dbg !2707
  store float 1.000000e+00, float* %specr, align 8, !dbg !2708
  %7 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2709
  %mirb = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 12, !dbg !2710
  store float 1.000000e+00, float* %mirb, align 4, !dbg !2711
  %8 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2712
  %mirg = getelementptr inbounds %struct.Material, %struct.Material* %8, i32 0, i32 11, !dbg !2713
  store float 1.000000e+00, float* %mirg, align 8, !dbg !2714
  %9 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2715
  %mirr = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 10, !dbg !2716
  store float 1.000000e+00, float* %mirr, align 4, !dbg !2717
  %10 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2718
  %spectra = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 19, !dbg !2719
  store float 1.000000e+00, float* %spectra, align 8, !dbg !2720
  %11 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2721
  %amb = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 16, !dbg !2722
  store float 1.000000e+00, float* %amb, align 4, !dbg !2723
  %12 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2724
  %alpha = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 21, !dbg !2725
  store float 1.000000e+00, float* %alpha, align 8, !dbg !2726
  %13 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2727
  %hasize = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 59, !dbg !2728
  store float 5.000000e-01, float* %hasize, align 4, !dbg !2729
  %14 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2730
  %spec = getelementptr inbounds %struct.Material, %struct.Material* %14, i32 0, i32 23, !dbg !2731
  store float 5.000000e-01, float* %spec, align 8, !dbg !2732
  %15 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2733
  %har = getelementptr inbounds %struct.Material, %struct.Material* %15, i32 0, i32 38, !dbg !2734
  store i16 50, i16* %har, align 8, !dbg !2735
  %16 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2736
  %ringc = getelementptr inbounds %struct.Material, %struct.Material* %16, i32 0, i32 58, !dbg !2737
  store i16 4, i16* %ringc, align 2, !dbg !2738
  %17 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2739
  %starc = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 56, !dbg !2740
  store i16 4, i16* %starc, align 2, !dbg !2741
  %18 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2742
  %linec = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 57, !dbg !2743
  store i16 12, i16* %linec, align 8, !dbg !2744
  %19 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2745
  %flarec = getelementptr inbounds %struct.Material, %struct.Material* %19, i32 0, i32 55, !dbg !2746
  store i16 1, i16* %flarec, align 4, !dbg !2747
  %20 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2748
  %subsize = getelementptr inbounds %struct.Material, %struct.Material* %20, i32 0, i32 61, !dbg !2749
  store float 1.000000e+00, float* %subsize, align 4, !dbg !2750
  %21 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2751
  %flaresize = getelementptr inbounds %struct.Material, %struct.Material* %21, i32 0, i32 60, !dbg !2752
  store float 1.000000e+00, float* %flaresize, align 8, !dbg !2753
  %22 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2754
  %flareboost = getelementptr inbounds %struct.Material, %struct.Material* %22, i32 0, i32 62, !dbg !2755
  store float 1.000000e+00, float* %flareboost, align 8, !dbg !2756
  %23 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2757
  %seed2 = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 40, !dbg !2758
  store i8 6, i8* %seed2, align 1, !dbg !2759
  %24 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2760
  %friction = getelementptr inbounds %struct.Material, %struct.Material* %24, i32 0, i32 107, !dbg !2761
  store float 5.000000e-01, float* %friction, align 8, !dbg !2762
  %25 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2763
  %refrac = getelementptr inbounds %struct.Material, %struct.Material* %25, i32 0, i32 86, !dbg !2764
  store float 4.000000e+00, float* %refrac, align 8, !dbg !2765
  %26 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2766
  %roughness = getelementptr inbounds %struct.Material, %struct.Material* %26, i32 0, i32 85, !dbg !2767
  store float 5.000000e-01, float* %roughness, align 4, !dbg !2768
  %27 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2769
  %param = getelementptr inbounds %struct.Material, %struct.Material* %27, i32 0, i32 87, !dbg !2770
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %param, i64 0, i64 0, !dbg !2769
  store float 5.000000e-01, float* %arrayidx, align 4, !dbg !2771
  %28 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2772
  %param1 = getelementptr inbounds %struct.Material, %struct.Material* %28, i32 0, i32 87, !dbg !2773
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %param1, i64 0, i64 1, !dbg !2772
  store float 0x3FB99999A0000000, float* %arrayidx2, align 4, !dbg !2774
  %29 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2775
  %param3 = getelementptr inbounds %struct.Material, %struct.Material* %29, i32 0, i32 87, !dbg !2776
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %param3, i64 0, i64 2, !dbg !2775
  store float 5.000000e-01, float* %arrayidx4, align 4, !dbg !2777
  %30 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2778
  %param5 = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 87, !dbg !2779
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %param5, i64 0, i64 3, !dbg !2778
  store float 0x3FB99999A0000000, float* %arrayidx6, align 4, !dbg !2780
  %31 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2781
  %rms = getelementptr inbounds %struct.Material, %struct.Material* %31, i32 0, i32 88, !dbg !2782
  store float 0x3FB99999A0000000, float* %rms, align 4, !dbg !2783
  %32 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2784
  %darkness = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 89, !dbg !2785
  store float 1.000000e+00, float* %darkness, align 8, !dbg !2786
  %33 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2787
  %strand_end = getelementptr inbounds %struct.Material, %struct.Material* %33, i32 0, i32 64, !dbg !2788
  store float 1.000000e+00, float* %strand_end, align 8, !dbg !2789
  %34 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2790
  %strand_sta = getelementptr inbounds %struct.Material, %struct.Material* %34, i32 0, i32 63, !dbg !2791
  store float 1.000000e+00, float* %strand_sta, align 4, !dbg !2792
  %35 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2793
  %ang = getelementptr inbounds %struct.Material, %struct.Material* %35, i32 0, i32 18, !dbg !2794
  store float 1.000000e+00, float* %ang, align 4, !dbg !2795
  %36 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2796
  %ray_depth = getelementptr inbounds %struct.Material, %struct.Material* %36, i32 0, i32 36, !dbg !2797
  store i16 2, i16* %ray_depth, align 4, !dbg !2798
  %37 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2799
  %ray_depth_tra = getelementptr inbounds %struct.Material, %struct.Material* %37, i32 0, i32 37, !dbg !2800
  store i16 2, i16* %ray_depth_tra, align 2, !dbg !2801
  %38 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2802
  %fresnel_mir = getelementptr inbounds %struct.Material, %struct.Material* %38, i32 0, i32 29, !dbg !2803
  store float 0.000000e+00, float* %fresnel_mir, align 8, !dbg !2804
  %39 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2805
  %fresnel_tra = getelementptr inbounds %struct.Material, %struct.Material* %39, i32 0, i32 31, !dbg !2806
  store float 0.000000e+00, float* %fresnel_tra, align 8, !dbg !2807
  %40 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2808
  %fresnel_tra_i = getelementptr inbounds %struct.Material, %struct.Material* %40, i32 0, i32 32, !dbg !2809
  store float 1.250000e+00, float* %fresnel_tra_i, align 4, !dbg !2810
  %41 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2811
  %fresnel_mir_i = getelementptr inbounds %struct.Material, %struct.Material* %41, i32 0, i32 30, !dbg !2812
  store float 1.250000e+00, float* %fresnel_mir_i, align 4, !dbg !2813
  %42 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2814
  %tx_limit = getelementptr inbounds %struct.Material, %struct.Material* %42, i32 0, i32 34, !dbg !2815
  store float 0.000000e+00, float* %tx_limit, align 4, !dbg !2816
  %43 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2817
  %tx_falloff = getelementptr inbounds %struct.Material, %struct.Material* %43, i32 0, i32 35, !dbg !2818
  store float 1.000000e+00, float* %tx_falloff, align 8, !dbg !2819
  %44 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2820
  %shad_alpha = getelementptr inbounds %struct.Material, %struct.Material* %44, i32 0, i32 72, !dbg !2821
  store float 1.000000e+00, float* %shad_alpha, align 4, !dbg !2822
  %45 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2823
  %vcol_alpha = getelementptr inbounds %struct.Material, %struct.Material* %45, i32 0, i32 130, !dbg !2824
  store i16 0, i16* %vcol_alpha, align 2, !dbg !2825
  %46 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2826
  %gloss_tra = getelementptr inbounds %struct.Material, %struct.Material* %46, i32 0, i32 42, !dbg !2827
  store float 1.000000e+00, float* %gloss_tra, align 8, !dbg !2828
  %47 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2829
  %gloss_mir = getelementptr inbounds %struct.Material, %struct.Material* %47, i32 0, i32 41, !dbg !2830
  store float 1.000000e+00, float* %gloss_mir, align 4, !dbg !2831
  %48 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2832
  %samp_gloss_tra = getelementptr inbounds %struct.Material, %struct.Material* %48, i32 0, i32 44, !dbg !2833
  store i16 18, i16* %samp_gloss_tra, align 2, !dbg !2834
  %49 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2835
  %samp_gloss_mir = getelementptr inbounds %struct.Material, %struct.Material* %49, i32 0, i32 43, !dbg !2836
  store i16 18, i16* %samp_gloss_mir, align 4, !dbg !2837
  %50 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2838
  %adapt_thresh_tra = getelementptr inbounds %struct.Material, %struct.Material* %50, i32 0, i32 46, !dbg !2839
  store float 0x3F747AE140000000, float* %adapt_thresh_tra, align 4, !dbg !2840
  %51 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2841
  %adapt_thresh_mir = getelementptr inbounds %struct.Material, %struct.Material* %51, i32 0, i32 45, !dbg !2842
  store float 0x3F747AE140000000, float* %adapt_thresh_mir, align 8, !dbg !2843
  %52 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2844
  %dist_mir = getelementptr inbounds %struct.Material, %struct.Material* %52, i32 0, i32 48, !dbg !2845
  store float 0.000000e+00, float* %dist_mir, align 4, !dbg !2846
  %53 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2847
  %fadeto_mir = getelementptr inbounds %struct.Material, %struct.Material* %53, i32 0, i32 49, !dbg !2848
  store i16 0, i16* %fadeto_mir, align 8, !dbg !2849
  %54 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2850
  %rampfac_col = getelementptr inbounds %struct.Material, %struct.Material* %54, i32 0, i32 100, !dbg !2851
  store float 1.000000e+00, float* %rampfac_col, align 8, !dbg !2852
  %55 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2853
  %rampfac_spec = getelementptr inbounds %struct.Material, %struct.Material* %55, i32 0, i32 101, !dbg !2854
  store float 1.000000e+00, float* %rampfac_spec, align 4, !dbg !2855
  %56 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2856
  %pr_lamp = getelementptr inbounds %struct.Material, %struct.Material* %56, i32 0, i32 78, !dbg !2857
  store i16 3, i16* %pr_lamp, align 8, !dbg !2858
  %57 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2859
  %pr_type = getelementptr inbounds %struct.Material, %struct.Material* %57, i32 0, i32 76, !dbg !2860
  store i8 1, i8* %pr_type, align 2, !dbg !2861
  %58 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2862
  %sss_radius = getelementptr inbounds %struct.Material, %struct.Material* %58, i32 0, i32 114, !dbg !2863
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %sss_radius, i64 0, i64 0, !dbg !2862
  store float 1.000000e+00, float* %arrayidx7, align 8, !dbg !2864
  %59 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2865
  %sss_radius8 = getelementptr inbounds %struct.Material, %struct.Material* %59, i32 0, i32 114, !dbg !2866
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %sss_radius8, i64 0, i64 1, !dbg !2865
  store float 1.000000e+00, float* %arrayidx9, align 4, !dbg !2867
  %60 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2868
  %sss_radius10 = getelementptr inbounds %struct.Material, %struct.Material* %60, i32 0, i32 114, !dbg !2869
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %sss_radius10, i64 0, i64 2, !dbg !2868
  store float 1.000000e+00, float* %arrayidx11, align 8, !dbg !2870
  %61 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2871
  %sss_col = getelementptr inbounds %struct.Material, %struct.Material* %61, i32 0, i32 115, !dbg !2872
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %sss_col, i64 0, i64 0, !dbg !2871
  store float 1.000000e+00, float* %arrayidx12, align 4, !dbg !2873
  %62 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2874
  %sss_col13 = getelementptr inbounds %struct.Material, %struct.Material* %62, i32 0, i32 115, !dbg !2875
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %sss_col13, i64 0, i64 1, !dbg !2874
  store float 1.000000e+00, float* %arrayidx14, align 4, !dbg !2876
  %63 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2877
  %sss_col15 = getelementptr inbounds %struct.Material, %struct.Material* %63, i32 0, i32 115, !dbg !2878
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %sss_col15, i64 0, i64 2, !dbg !2877
  store float 1.000000e+00, float* %arrayidx16, align 4, !dbg !2879
  %64 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2880
  %sss_error = getelementptr inbounds %struct.Material, %struct.Material* %64, i32 0, i32 116, !dbg !2881
  store float 0x3FA99999A0000000, float* %sss_error, align 8, !dbg !2882
  %65 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2883
  %sss_scale = getelementptr inbounds %struct.Material, %struct.Material* %65, i32 0, i32 117, !dbg !2884
  store float 0x3FB99999A0000000, float* %sss_scale, align 4, !dbg !2885
  %66 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2886
  %sss_ior = getelementptr inbounds %struct.Material, %struct.Material* %66, i32 0, i32 118, !dbg !2887
  store float 0x3FF4CCCCC0000000, float* %sss_ior, align 8, !dbg !2888
  %67 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2889
  %sss_colfac = getelementptr inbounds %struct.Material, %struct.Material* %67, i32 0, i32 119, !dbg !2890
  store float 1.000000e+00, float* %sss_colfac, align 4, !dbg !2891
  %68 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2892
  %sss_texfac = getelementptr inbounds %struct.Material, %struct.Material* %68, i32 0, i32 120, !dbg !2893
  store float 0.000000e+00, float* %sss_texfac, align 8, !dbg !2894
  %69 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2895
  %sss_front = getelementptr inbounds %struct.Material, %struct.Material* %69, i32 0, i32 121, !dbg !2896
  store float 1.000000e+00, float* %sss_front, align 4, !dbg !2897
  %70 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2898
  %sss_back = getelementptr inbounds %struct.Material, %struct.Material* %70, i32 0, i32 122, !dbg !2899
  store float 1.000000e+00, float* %sss_back, align 8, !dbg !2900
  %71 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2901
  %vol = getelementptr inbounds %struct.Material, %struct.Material* %71, i32 0, i32 27, !dbg !2902
  %density = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol, i32 0, i32 0, !dbg !2903
  store float 1.000000e+00, float* %density, align 8, !dbg !2904
  %72 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2905
  %vol17 = getelementptr inbounds %struct.Material, %struct.Material* %72, i32 0, i32 27, !dbg !2906
  %emission = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol17, i32 0, i32 1, !dbg !2907
  store float 0.000000e+00, float* %emission, align 4, !dbg !2908
  %73 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2909
  %vol18 = getelementptr inbounds %struct.Material, %struct.Material* %73, i32 0, i32 27, !dbg !2910
  %scattering = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol18, i32 0, i32 2, !dbg !2911
  store float 1.000000e+00, float* %scattering, align 8, !dbg !2912
  %74 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2913
  %vol19 = getelementptr inbounds %struct.Material, %struct.Material* %74, i32 0, i32 27, !dbg !2914
  %reflection = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol19, i32 0, i32 3, !dbg !2915
  store float 1.000000e+00, float* %reflection, align 4, !dbg !2916
  %75 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2917
  %vol20 = getelementptr inbounds %struct.Material, %struct.Material* %75, i32 0, i32 27, !dbg !2918
  %transmission_col = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol20, i32 0, i32 5, !dbg !2919
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %transmission_col, i64 0, i64 2, !dbg !2917
  store float 1.000000e+00, float* %arrayidx21, align 4, !dbg !2920
  %76 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2921
  %vol22 = getelementptr inbounds %struct.Material, %struct.Material* %76, i32 0, i32 27, !dbg !2922
  %transmission_col23 = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol22, i32 0, i32 5, !dbg !2923
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %transmission_col23, i64 0, i64 1, !dbg !2921
  store float 1.000000e+00, float* %arrayidx24, align 4, !dbg !2924
  %77 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2925
  %vol25 = getelementptr inbounds %struct.Material, %struct.Material* %77, i32 0, i32 27, !dbg !2926
  %transmission_col26 = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol25, i32 0, i32 5, !dbg !2927
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %transmission_col26, i64 0, i64 0, !dbg !2925
  store float 1.000000e+00, float* %arrayidx27, align 4, !dbg !2928
  %78 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2929
  %vol28 = getelementptr inbounds %struct.Material, %struct.Material* %78, i32 0, i32 27, !dbg !2930
  %reflection_col = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol28, i32 0, i32 6, !dbg !2931
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %reflection_col, i64 0, i64 2, !dbg !2929
  store float 1.000000e+00, float* %arrayidx29, align 8, !dbg !2932
  %79 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2933
  %vol30 = getelementptr inbounds %struct.Material, %struct.Material* %79, i32 0, i32 27, !dbg !2934
  %reflection_col31 = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol30, i32 0, i32 6, !dbg !2935
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %reflection_col31, i64 0, i64 1, !dbg !2933
  store float 1.000000e+00, float* %arrayidx32, align 4, !dbg !2936
  %80 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2937
  %vol33 = getelementptr inbounds %struct.Material, %struct.Material* %80, i32 0, i32 27, !dbg !2938
  %reflection_col34 = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol33, i32 0, i32 6, !dbg !2939
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %reflection_col34, i64 0, i64 0, !dbg !2937
  store float 1.000000e+00, float* %arrayidx35, align 8, !dbg !2940
  %81 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2941
  %vol36 = getelementptr inbounds %struct.Material, %struct.Material* %81, i32 0, i32 27, !dbg !2942
  %emission_col = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol36, i32 0, i32 4, !dbg !2943
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %emission_col, i64 0, i64 2, !dbg !2941
  store float 1.000000e+00, float* %arrayidx37, align 8, !dbg !2944
  %82 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2945
  %vol38 = getelementptr inbounds %struct.Material, %struct.Material* %82, i32 0, i32 27, !dbg !2946
  %emission_col39 = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol38, i32 0, i32 4, !dbg !2947
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %emission_col39, i64 0, i64 1, !dbg !2945
  store float 1.000000e+00, float* %arrayidx40, align 4, !dbg !2948
  %83 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2949
  %vol41 = getelementptr inbounds %struct.Material, %struct.Material* %83, i32 0, i32 27, !dbg !2950
  %emission_col42 = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol41, i32 0, i32 4, !dbg !2951
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %emission_col42, i64 0, i64 0, !dbg !2949
  store float 1.000000e+00, float* %arrayidx43, align 8, !dbg !2952
  %84 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2953
  %vol44 = getelementptr inbounds %struct.Material, %struct.Material* %84, i32 0, i32 27, !dbg !2954
  %density_scale = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol44, i32 0, i32 7, !dbg !2955
  store float 1.000000e+00, float* %density_scale, align 4, !dbg !2956
  %85 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2957
  %vol45 = getelementptr inbounds %struct.Material, %struct.Material* %85, i32 0, i32 27, !dbg !2958
  %depth_cutoff = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol45, i32 0, i32 8, !dbg !2959
  store float 0x3F847AE140000000, float* %depth_cutoff, align 8, !dbg !2960
  %86 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2961
  %vol46 = getelementptr inbounds %struct.Material, %struct.Material* %86, i32 0, i32 27, !dbg !2962
  %stepsize_type = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol46, i32 0, i32 10, !dbg !2963
  store i16 0, i16* %stepsize_type, align 8, !dbg !2964
  %87 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2965
  %vol47 = getelementptr inbounds %struct.Material, %struct.Material* %87, i32 0, i32 27, !dbg !2966
  %stepsize = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol47, i32 0, i32 14, !dbg !2967
  store float 0x3FC99999A0000000, float* %stepsize, align 8, !dbg !2968
  %88 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2969
  %vol48 = getelementptr inbounds %struct.Material, %struct.Material* %88, i32 0, i32 27, !dbg !2970
  %shade_type = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol48, i32 0, i32 12, !dbg !2971
  store i16 1, i16* %shade_type, align 4, !dbg !2972
  %89 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2973
  %vol49 = getelementptr inbounds %struct.Material, %struct.Material* %89, i32 0, i32 27, !dbg !2974
  %shadeflag = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol49, i32 0, i32 11, !dbg !2975
  %90 = load i16, i16* %shadeflag, align 2, !dbg !2976
  %conv = sext i16 %90 to i32, !dbg !2976
  %or = or i32 %conv, 8, !dbg !2976
  %conv50 = trunc i32 %or to i16, !dbg !2976
  store i16 %conv50, i16* %shadeflag, align 2, !dbg !2976
  %91 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2977
  %vol51 = getelementptr inbounds %struct.Material, %struct.Material* %91, i32 0, i32 27, !dbg !2978
  %precache_resolution = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol51, i32 0, i32 13, !dbg !2979
  store i16 50, i16* %precache_resolution, align 2, !dbg !2980
  %92 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2981
  %vol52 = getelementptr inbounds %struct.Material, %struct.Material* %92, i32 0, i32 27, !dbg !2982
  %ms_spread = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol52, i32 0, i32 17, !dbg !2983
  store float 0x3FC99999A0000000, float* %ms_spread, align 4, !dbg !2984
  %93 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2985
  %vol53 = getelementptr inbounds %struct.Material, %struct.Material* %93, i32 0, i32 27, !dbg !2986
  %ms_diff = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol53, i32 0, i32 15, !dbg !2987
  store float 1.000000e+00, float* %ms_diff, align 4, !dbg !2988
  %94 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2989
  %vol54 = getelementptr inbounds %struct.Material, %struct.Material* %94, i32 0, i32 27, !dbg !2990
  %ms_intensity = getelementptr inbounds %struct.VolumeSettings, %struct.VolumeSettings* %vol54, i32 0, i32 16, !dbg !2991
  store float 1.000000e+00, float* %ms_intensity, align 8, !dbg !2992
  %95 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2993
  %game = getelementptr inbounds %struct.Material, %struct.Material* %95, i32 0, i32 28, !dbg !2994
  %flag = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game, i32 0, i32 0, !dbg !2995
  store i32 16, i32* %flag, align 8, !dbg !2996
  %96 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !2997
  %game55 = getelementptr inbounds %struct.Material, %struct.Material* %96, i32 0, i32 28, !dbg !2998
  %alpha_blend = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game55, i32 0, i32 1, !dbg !2999
  store i32 0, i32* %alpha_blend, align 4, !dbg !3000
  %97 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3001
  %game56 = getelementptr inbounds %struct.Material, %struct.Material* %97, i32 0, i32 28, !dbg !3002
  %face_orientation = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game56, i32 0, i32 2, !dbg !3003
  store i32 0, i32* %face_orientation, align 8, !dbg !3004
  %98 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3005
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %98, i32 0, i32 51, !dbg !3006
  store i32 54526019, i32* %mode, align 4, !dbg !3007
  %99 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3008
  %mode2 = getelementptr inbounds %struct.Material, %struct.Material* %99, i32 0, i32 53, !dbg !3009
  store i32 1, i32* %mode2, align 4, !dbg !3010
  %100 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3011
  %shade_flag = getelementptr inbounds %struct.Material, %struct.Material* %100, i32 0, i32 50, !dbg !3012
  store i16 4, i16* %shade_flag, align 2, !dbg !3013
  %101 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3014
  %preview = getelementptr inbounds %struct.Material, %struct.Material* %101, i32 0, i32 106, !dbg !3015
  store %struct.PreviewImage* null, %struct.PreviewImage** %preview, align 8, !dbg !3016
  ret void, !dbg !3017
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_material_free(%struct.Material* %ma) #0 !dbg !3018 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !3019, metadata !DIExpression()), !dbg !3020
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3021
  call void @BKE_material_free_ex(%struct.Material* %0, i8 zeroext 1), !dbg !3022
  ret void, !dbg !3023
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_material_free_ex(%struct.Material* %ma, i8 zeroext %do_id_user) #0 !dbg !3024 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %do_id_user.addr = alloca i8, align 1
  %mtex = alloca %struct.MTex*, align 8
  %a = alloca i32, align 4
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !3027, metadata !DIExpression()), !dbg !3028
  store i8 %do_id_user, i8* %do_id_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_id_user.addr, metadata !3029, metadata !DIExpression()), !dbg !3030
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !3031, metadata !DIExpression()), !dbg !3034
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3035, metadata !DIExpression()), !dbg !3036
  store i32 0, i32* %a, align 4, !dbg !3037
  br label %for.cond, !dbg !3039

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !3040
  %cmp = icmp slt i32 %0, 18, !dbg !3042
  br i1 %cmp, label %for.body, label %for.end, !dbg !3043

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3044
  %mtex1 = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 102, !dbg !3046
  %2 = load i32, i32* %a, align 4, !dbg !3047
  %idxprom = sext i32 %2 to i64, !dbg !3044
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex1, i64 0, i64 %idxprom, !dbg !3044
  %3 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !3044
  store %struct.MTex* %3, %struct.MTex** %mtex, align 8, !dbg !3048
  %4 = load i8, i8* %do_id_user.addr, align 1, !dbg !3049
  %conv = zext i8 %4 to i32, !dbg !3049
  %tobool = icmp ne i32 %conv, 0, !dbg !3049
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3051

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !3052
  %tobool2 = icmp ne %struct.MTex* %5, null, !dbg !3052
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !3053

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !3054
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %6, i32 0, i32 5, !dbg !3055
  %7 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3055
  %tobool4 = icmp ne %struct.Tex* %7, null, !dbg !3054
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3056

if.then:                                          ; preds = %land.lhs.true3
  %8 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !3057
  %tex5 = getelementptr inbounds %struct.MTex, %struct.MTex* %8, i32 0, i32 5, !dbg !3058
  %9 = load %struct.Tex*, %struct.Tex** %tex5, align 8, !dbg !3058
  %id = getelementptr inbounds %struct.Tex, %struct.Tex* %9, i32 0, i32 0, !dbg !3059
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !3060
  %10 = load i32, i32* %us, align 4, !dbg !3061
  %dec = add nsw i32 %10, -1, !dbg !3061
  store i32 %dec, i32* %us, align 4, !dbg !3061
  br label %if.end, !dbg !3057

if.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %for.body
  %11 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !3062
  %tobool6 = icmp ne %struct.MTex* %11, null, !dbg !3062
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !3064

if.then7:                                         ; preds = %if.end
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3065
  %13 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !3066
  %14 = bitcast %struct.MTex* %13 to i8*, !dbg !3066
  call void %12(i8* %14), !dbg !3065
  br label %if.end8, !dbg !3065

if.end8:                                          ; preds = %if.then7, %if.end
  br label %for.inc, !dbg !3067

for.inc:                                          ; preds = %if.end8
  %15 = load i32, i32* %a, align 4, !dbg !3068
  %inc = add nsw i32 %15, 1, !dbg !3068
  store i32 %inc, i32* %a, align 4, !dbg !3068
  br label %for.cond, !dbg !3069, !llvm.loop !3070

for.end:                                          ; preds = %for.cond
  %16 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3072
  %ramp_col = getelementptr inbounds %struct.Material, %struct.Material* %16, i32 0, i32 92, !dbg !3074
  %17 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col, align 8, !dbg !3074
  %tobool9 = icmp ne %struct.ColorBand* %17, null, !dbg !3072
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !3075

if.then10:                                        ; preds = %for.end
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3076
  %19 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3077
  %ramp_col11 = getelementptr inbounds %struct.Material, %struct.Material* %19, i32 0, i32 92, !dbg !3078
  %20 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col11, align 8, !dbg !3078
  %21 = bitcast %struct.ColorBand* %20 to i8*, !dbg !3077
  call void %18(i8* %21), !dbg !3076
  br label %if.end12, !dbg !3076

if.end12:                                         ; preds = %if.then10, %for.end
  %22 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3079
  %ramp_spec = getelementptr inbounds %struct.Material, %struct.Material* %22, i32 0, i32 93, !dbg !3081
  %23 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec, align 8, !dbg !3081
  %tobool13 = icmp ne %struct.ColorBand* %23, null, !dbg !3079
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !3082

if.then14:                                        ; preds = %if.end12
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3083
  %25 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3084
  %ramp_spec15 = getelementptr inbounds %struct.Material, %struct.Material* %25, i32 0, i32 93, !dbg !3085
  %26 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec15, align 8, !dbg !3085
  %27 = bitcast %struct.ColorBand* %26 to i8*, !dbg !3084
  call void %24(i8* %27), !dbg !3083
  br label %if.end16, !dbg !3083

if.end16:                                         ; preds = %if.then14, %if.end12
  %28 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3086
  %29 = bitcast %struct.Material* %28 to %struct.ID*, !dbg !3087
  call void @BKE_free_animdata(%struct.ID* %29), !dbg !3088
  %30 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3089
  %preview = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 106, !dbg !3091
  %31 = load %struct.PreviewImage*, %struct.PreviewImage** %preview, align 8, !dbg !3091
  %tobool17 = icmp ne %struct.PreviewImage* %31, null, !dbg !3089
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !3092

if.then18:                                        ; preds = %if.end16
  %32 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3093
  %preview19 = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 106, !dbg !3094
  call void @BKE_previewimg_free(%struct.PreviewImage** %preview19), !dbg !3095
  br label %if.end20, !dbg !3095

if.end20:                                         ; preds = %if.then18, %if.end16
  %33 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3096
  %34 = bitcast %struct.Material* %33 to %struct.ID*, !dbg !3097
  call void @BKE_icon_delete(%struct.ID* %34), !dbg !3098
  %35 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3099
  %id21 = getelementptr inbounds %struct.Material, %struct.Material* %35, i32 0, i32 0, !dbg !3100
  %icon_id = getelementptr inbounds %struct.ID, %struct.ID* %id21, i32 0, i32 7, !dbg !3101
  store i32 0, i32* %icon_id, align 8, !dbg !3102
  %36 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3103
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %36, i32 0, i32 103, !dbg !3105
  %37 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !3105
  %tobool22 = icmp ne %struct.bNodeTree* %37, null, !dbg !3103
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !3106

if.then23:                                        ; preds = %if.end20
  %38 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3107
  %nodetree24 = getelementptr inbounds %struct.Material, %struct.Material* %38, i32 0, i32 103, !dbg !3109
  %39 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree24, align 8, !dbg !3109
  %40 = load i8, i8* %do_id_user.addr, align 1, !dbg !3110
  call void @ntreeFreeTree_ex(%struct.bNodeTree* %39, i8 zeroext %40), !dbg !3111
  %41 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3112
  %42 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3113
  %nodetree25 = getelementptr inbounds %struct.Material, %struct.Material* %42, i32 0, i32 103, !dbg !3114
  %43 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree25, align 8, !dbg !3114
  %44 = bitcast %struct.bNodeTree* %43 to i8*, !dbg !3113
  call void %41(i8* %44), !dbg !3112
  br label %if.end26, !dbg !3115

if.end26:                                         ; preds = %if.then23, %if.end20
  %45 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3116
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %45, i32 0, i32 135, !dbg !3118
  %46 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !3118
  %tobool27 = icmp ne %struct.TexPaintSlot* %46, null, !dbg !3116
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !3119

if.then28:                                        ; preds = %if.end26
  %47 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3120
  %48 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3121
  %texpaintslot29 = getelementptr inbounds %struct.Material, %struct.Material* %48, i32 0, i32 135, !dbg !3122
  %49 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot29, align 8, !dbg !3122
  %50 = bitcast %struct.TexPaintSlot* %49 to i8*, !dbg !3121
  call void %47(i8* %50), !dbg !3120
  br label %if.end30, !dbg !3120

if.end30:                                         ; preds = %if.then28, %if.end26
  %51 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3123
  %gpumaterial = getelementptr inbounds %struct.Material, %struct.Material* %51, i32 0, i32 136, !dbg !3125
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gpumaterial, i32 0, i32 0, !dbg !3126
  %52 = load i8*, i8** %first, align 8, !dbg !3126
  %tobool31 = icmp ne i8* %52, null, !dbg !3123
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !3127

if.then32:                                        ; preds = %if.end30
  %53 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3128
  call void @GPU_material_free(%struct.Material* %53), !dbg !3129
  br label %if.end33, !dbg !3129

if.end33:                                         ; preds = %if.then32, %if.end30
  ret void, !dbg !3130
}

declare dso_local void @BKE_free_animdata(%struct.ID*) #2

declare dso_local void @BKE_previewimg_free(%struct.PreviewImage**) #2

declare dso_local void @BKE_icon_delete(%struct.ID*) #2

declare dso_local void @ntreeFreeTree_ex(%struct.bNodeTree*, i8 zeroext) #2

declare dso_local void @GPU_material_free(%struct.Material*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Material* @BKE_material_add(%struct.Main* %bmain, i8* %name) #0 !dbg !3131 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %ma = alloca %struct.Material*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !3196, metadata !DIExpression()), !dbg !3197
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3198, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !3200, metadata !DIExpression()), !dbg !3201
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !3202
  %1 = load i8*, i8** %name.addr, align 8, !dbg !3203
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %0, i16 signext 16717, i8* %1), !dbg !3204
  %2 = bitcast i8* %call to %struct.Material*, !dbg !3204
  store %struct.Material* %2, %struct.Material** %ma, align 8, !dbg !3205
  %3 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3206
  call void @init_material(%struct.Material* %3), !dbg !3207
  %4 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3208
  ret %struct.Material* %4, !dbg !3209
}

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Material* @BKE_material_copy(%struct.Material* %ma) #0 !dbg !3210 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %man = alloca %struct.Material*, align 8
  %a = alloca i32, align 4
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !3213, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.declare(metadata %struct.Material** %man, metadata !3215, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3217, metadata !DIExpression()), !dbg !3218
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3219
  %id = getelementptr inbounds %struct.Material, %struct.Material* %0, i32 0, i32 0, !dbg !3220
  %call = call i8* @BKE_libblock_copy(%struct.ID* %id), !dbg !3221
  %1 = bitcast i8* %call to %struct.Material*, !dbg !3221
  store %struct.Material* %1, %struct.Material** %man, align 8, !dbg !3222
  %2 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3223
  %group = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 105, !dbg !3224
  %3 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !3224
  %4 = bitcast %struct.Group* %3 to %struct.ID*, !dbg !3225
  call void @id_lib_extern(%struct.ID* %4), !dbg !3226
  store i32 0, i32* %a, align 4, !dbg !3227
  br label %for.cond, !dbg !3229

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %a, align 4, !dbg !3230
  %cmp = icmp slt i32 %5, 18, !dbg !3232
  br i1 %cmp, label %for.body, label %for.end, !dbg !3233

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3234
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 102, !dbg !3237
  %7 = load i32, i32* %a, align 4, !dbg !3238
  %idxprom = sext i32 %7 to i64, !dbg !3234
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !3234
  %8 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !3234
  %tobool = icmp ne %struct.MTex* %8, null, !dbg !3234
  br i1 %tobool, label %if.then, label %if.end, !dbg !3239

if.then:                                          ; preds = %for.body
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3240
  %call1 = call i8* %9(i64 312, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)), !dbg !3240
  %10 = bitcast i8* %call1 to %struct.MTex*, !dbg !3240
  %11 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3242
  %mtex2 = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 102, !dbg !3243
  %12 = load i32, i32* %a, align 4, !dbg !3244
  %idxprom3 = sext i32 %12 to i64, !dbg !3242
  %arrayidx4 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex2, i64 0, i64 %idxprom3, !dbg !3242
  store %struct.MTex* %10, %struct.MTex** %arrayidx4, align 8, !dbg !3245
  %13 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3246
  %mtex5 = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 102, !dbg !3247
  %14 = load i32, i32* %a, align 4, !dbg !3248
  %idxprom6 = sext i32 %14 to i64, !dbg !3246
  %arrayidx7 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex5, i64 0, i64 %idxprom6, !dbg !3246
  %15 = load %struct.MTex*, %struct.MTex** %arrayidx7, align 8, !dbg !3246
  %16 = bitcast %struct.MTex* %15 to i8*, !dbg !3249
  %17 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3250
  %mtex8 = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 102, !dbg !3251
  %18 = load i32, i32* %a, align 4, !dbg !3252
  %idxprom9 = sext i32 %18 to i64, !dbg !3250
  %arrayidx10 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex8, i64 0, i64 %idxprom9, !dbg !3250
  %19 = load %struct.MTex*, %struct.MTex** %arrayidx10, align 8, !dbg !3250
  %20 = bitcast %struct.MTex* %19 to i8*, !dbg !3249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %20, i64 312, i1 false), !dbg !3249
  %21 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3253
  %mtex11 = getelementptr inbounds %struct.Material, %struct.Material* %21, i32 0, i32 102, !dbg !3254
  %22 = load i32, i32* %a, align 4, !dbg !3255
  %idxprom12 = sext i32 %22 to i64, !dbg !3253
  %arrayidx13 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex11, i64 0, i64 %idxprom12, !dbg !3253
  %23 = load %struct.MTex*, %struct.MTex** %arrayidx13, align 8, !dbg !3253
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %23, i32 0, i32 5, !dbg !3256
  %24 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3256
  %25 = bitcast %struct.Tex* %24 to %struct.ID*, !dbg !3257
  call void @id_us_plus(%struct.ID* %25), !dbg !3258
  br label %if.end, !dbg !3259

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3260

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %a, align 4, !dbg !3261
  %inc = add nsw i32 %26, 1, !dbg !3261
  store i32 %inc, i32* %a, align 4, !dbg !3261
  br label %for.cond, !dbg !3262, !llvm.loop !3263

for.end:                                          ; preds = %for.cond
  %27 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3265
  %ramp_col = getelementptr inbounds %struct.Material, %struct.Material* %27, i32 0, i32 92, !dbg !3267
  %28 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col, align 8, !dbg !3267
  %tobool14 = icmp ne %struct.ColorBand* %28, null, !dbg !3265
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !3268

if.then15:                                        ; preds = %for.end
  %29 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3269
  %30 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3270
  %ramp_col16 = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 92, !dbg !3271
  %31 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col16, align 8, !dbg !3271
  %32 = bitcast %struct.ColorBand* %31 to i8*, !dbg !3270
  %call17 = call i8* %29(i8* %32), !dbg !3269
  %33 = bitcast i8* %call17 to %struct.ColorBand*, !dbg !3269
  %34 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3272
  %ramp_col18 = getelementptr inbounds %struct.Material, %struct.Material* %34, i32 0, i32 92, !dbg !3273
  store %struct.ColorBand* %33, %struct.ColorBand** %ramp_col18, align 8, !dbg !3274
  br label %if.end19, !dbg !3272

if.end19:                                         ; preds = %if.then15, %for.end
  %35 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3275
  %ramp_spec = getelementptr inbounds %struct.Material, %struct.Material* %35, i32 0, i32 93, !dbg !3277
  %36 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec, align 8, !dbg !3277
  %tobool20 = icmp ne %struct.ColorBand* %36, null, !dbg !3275
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !3278

if.then21:                                        ; preds = %if.end19
  %37 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3279
  %38 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3280
  %ramp_spec22 = getelementptr inbounds %struct.Material, %struct.Material* %38, i32 0, i32 93, !dbg !3281
  %39 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec22, align 8, !dbg !3281
  %40 = bitcast %struct.ColorBand* %39 to i8*, !dbg !3280
  %call23 = call i8* %37(i8* %40), !dbg !3279
  %41 = bitcast i8* %call23 to %struct.ColorBand*, !dbg !3279
  %42 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3282
  %ramp_spec24 = getelementptr inbounds %struct.Material, %struct.Material* %42, i32 0, i32 93, !dbg !3283
  store %struct.ColorBand* %41, %struct.ColorBand** %ramp_spec24, align 8, !dbg !3284
  br label %if.end25, !dbg !3282

if.end25:                                         ; preds = %if.then21, %if.end19
  %43 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3285
  %preview = getelementptr inbounds %struct.Material, %struct.Material* %43, i32 0, i32 106, !dbg !3287
  %44 = load %struct.PreviewImage*, %struct.PreviewImage** %preview, align 8, !dbg !3287
  %tobool26 = icmp ne %struct.PreviewImage* %44, null, !dbg !3285
  br i1 %tobool26, label %if.then27, label %if.end31, !dbg !3288

if.then27:                                        ; preds = %if.end25
  %45 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3289
  %preview28 = getelementptr inbounds %struct.Material, %struct.Material* %45, i32 0, i32 106, !dbg !3290
  %46 = load %struct.PreviewImage*, %struct.PreviewImage** %preview28, align 8, !dbg !3290
  %call29 = call %struct.PreviewImage* @BKE_previewimg_copy(%struct.PreviewImage* %46), !dbg !3291
  %47 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3292
  %preview30 = getelementptr inbounds %struct.Material, %struct.Material* %47, i32 0, i32 106, !dbg !3293
  store %struct.PreviewImage* %call29, %struct.PreviewImage** %preview30, align 8, !dbg !3294
  br label %if.end31, !dbg !3292

if.end31:                                         ; preds = %if.then27, %if.end25
  %48 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3295
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %48, i32 0, i32 103, !dbg !3297
  %49 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !3297
  %tobool32 = icmp ne %struct.bNodeTree* %49, null, !dbg !3295
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !3298

if.then33:                                        ; preds = %if.end31
  %50 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3299
  %nodetree34 = getelementptr inbounds %struct.Material, %struct.Material* %50, i32 0, i32 103, !dbg !3301
  %51 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree34, align 8, !dbg !3301
  %call35 = call %struct.bNodeTree* @ntreeCopyTree(%struct.bNodeTree* %51), !dbg !3302
  %52 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3303
  %nodetree36 = getelementptr inbounds %struct.Material, %struct.Material* %52, i32 0, i32 103, !dbg !3304
  store %struct.bNodeTree* %call35, %struct.bNodeTree** %nodetree36, align 8, !dbg !3305
  br label %if.end37, !dbg !3306

if.end37:                                         ; preds = %if.then33, %if.end31
  %53 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3307
  %gpumaterial = getelementptr inbounds %struct.Material, %struct.Material* %53, i32 0, i32 136, !dbg !3308
  call void @BLI_listbase_clear(%struct.ListBase* %gpumaterial), !dbg !3309
  %54 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3310
  ret %struct.Material* %54, !dbg !3311
}

declare dso_local i8* @BKE_libblock_copy(%struct.ID*) #2

declare dso_local void @id_lib_extern(%struct.ID*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @id_us_plus(%struct.ID*) #2

declare dso_local %struct.PreviewImage* @BKE_previewimg_copy(%struct.PreviewImage*) #2

declare dso_local %struct.bNodeTree* @ntreeCopyTree(%struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !3312 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !3317, metadata !DIExpression()), !dbg !3318
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !3319
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !3320
  store i8* null, i8** %last, align 8, !dbg !3321
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !3322
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !3323
  store i8* null, i8** %first, align 8, !dbg !3324
  ret void, !dbg !3325
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Material* @localize_material(%struct.Material* %ma) #0 !dbg !3326 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %man = alloca %struct.Material*, align 8
  %a = alloca i32, align 4
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !3327, metadata !DIExpression()), !dbg !3328
  call void @llvm.dbg.declare(metadata %struct.Material** %man, metadata !3329, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3331, metadata !DIExpression()), !dbg !3332
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3333
  %id = getelementptr inbounds %struct.Material, %struct.Material* %0, i32 0, i32 0, !dbg !3334
  %call = call i8* @BKE_libblock_copy_nolib(%struct.ID* %id, i8 zeroext 0), !dbg !3335
  %1 = bitcast i8* %call to %struct.Material*, !dbg !3335
  store %struct.Material* %1, %struct.Material** %man, align 8, !dbg !3336
  store i32 0, i32* %a, align 4, !dbg !3337
  br label %for.cond, !dbg !3339

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %a, align 4, !dbg !3340
  %cmp = icmp slt i32 %2, 18, !dbg !3342
  br i1 %cmp, label %for.body, label %for.end, !dbg !3343

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3344
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 102, !dbg !3347
  %4 = load i32, i32* %a, align 4, !dbg !3348
  %idxprom = sext i32 %4 to i64, !dbg !3344
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !3344
  %5 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !3344
  %tobool = icmp ne %struct.MTex* %5, null, !dbg !3344
  br i1 %tobool, label %if.then, label %if.end, !dbg !3349

if.then:                                          ; preds = %for.body
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3350
  %call1 = call i8* %6(i64 312, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)), !dbg !3350
  %7 = bitcast i8* %call1 to %struct.MTex*, !dbg !3350
  %8 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3352
  %mtex2 = getelementptr inbounds %struct.Material, %struct.Material* %8, i32 0, i32 102, !dbg !3353
  %9 = load i32, i32* %a, align 4, !dbg !3354
  %idxprom3 = sext i32 %9 to i64, !dbg !3352
  %arrayidx4 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex2, i64 0, i64 %idxprom3, !dbg !3352
  store %struct.MTex* %7, %struct.MTex** %arrayidx4, align 8, !dbg !3355
  %10 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3356
  %mtex5 = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 102, !dbg !3357
  %11 = load i32, i32* %a, align 4, !dbg !3358
  %idxprom6 = sext i32 %11 to i64, !dbg !3356
  %arrayidx7 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex5, i64 0, i64 %idxprom6, !dbg !3356
  %12 = load %struct.MTex*, %struct.MTex** %arrayidx7, align 8, !dbg !3356
  %13 = bitcast %struct.MTex* %12 to i8*, !dbg !3359
  %14 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3360
  %mtex8 = getelementptr inbounds %struct.Material, %struct.Material* %14, i32 0, i32 102, !dbg !3361
  %15 = load i32, i32* %a, align 4, !dbg !3362
  %idxprom9 = sext i32 %15 to i64, !dbg !3360
  %arrayidx10 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex8, i64 0, i64 %idxprom9, !dbg !3360
  %16 = load %struct.MTex*, %struct.MTex** %arrayidx10, align 8, !dbg !3360
  %17 = bitcast %struct.MTex* %16 to i8*, !dbg !3359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %17, i64 312, i1 false), !dbg !3359
  br label %if.end, !dbg !3363

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3364

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %a, align 4, !dbg !3365
  %inc = add nsw i32 %18, 1, !dbg !3365
  store i32 %inc, i32* %a, align 4, !dbg !3365
  br label %for.cond, !dbg !3366, !llvm.loop !3367

for.end:                                          ; preds = %for.cond
  %19 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3369
  %ramp_col = getelementptr inbounds %struct.Material, %struct.Material* %19, i32 0, i32 92, !dbg !3371
  %20 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col, align 8, !dbg !3371
  %tobool11 = icmp ne %struct.ColorBand* %20, null, !dbg !3369
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !3372

if.then12:                                        ; preds = %for.end
  %21 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3373
  %22 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3374
  %ramp_col13 = getelementptr inbounds %struct.Material, %struct.Material* %22, i32 0, i32 92, !dbg !3375
  %23 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col13, align 8, !dbg !3375
  %24 = bitcast %struct.ColorBand* %23 to i8*, !dbg !3374
  %call14 = call i8* %21(i8* %24), !dbg !3373
  %25 = bitcast i8* %call14 to %struct.ColorBand*, !dbg !3373
  %26 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3376
  %ramp_col15 = getelementptr inbounds %struct.Material, %struct.Material* %26, i32 0, i32 92, !dbg !3377
  store %struct.ColorBand* %25, %struct.ColorBand** %ramp_col15, align 8, !dbg !3378
  br label %if.end16, !dbg !3376

if.end16:                                         ; preds = %if.then12, %for.end
  %27 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3379
  %ramp_spec = getelementptr inbounds %struct.Material, %struct.Material* %27, i32 0, i32 93, !dbg !3381
  %28 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec, align 8, !dbg !3381
  %tobool17 = icmp ne %struct.ColorBand* %28, null, !dbg !3379
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !3382

if.then18:                                        ; preds = %if.end16
  %29 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3383
  %30 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3384
  %ramp_spec19 = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 93, !dbg !3385
  %31 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec19, align 8, !dbg !3385
  %32 = bitcast %struct.ColorBand* %31 to i8*, !dbg !3384
  %call20 = call i8* %29(i8* %32), !dbg !3383
  %33 = bitcast i8* %call20 to %struct.ColorBand*, !dbg !3383
  %34 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3386
  %ramp_spec21 = getelementptr inbounds %struct.Material, %struct.Material* %34, i32 0, i32 93, !dbg !3387
  store %struct.ColorBand* %33, %struct.ColorBand** %ramp_spec21, align 8, !dbg !3388
  br label %if.end22, !dbg !3386

if.end22:                                         ; preds = %if.then18, %if.end16
  %35 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3389
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %35, i32 0, i32 135, !dbg !3390
  store %struct.TexPaintSlot* null, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !3391
  %36 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3392
  %preview = getelementptr inbounds %struct.Material, %struct.Material* %36, i32 0, i32 106, !dbg !3393
  store %struct.PreviewImage* null, %struct.PreviewImage** %preview, align 8, !dbg !3394
  %37 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3395
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %37, i32 0, i32 103, !dbg !3397
  %38 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !3397
  %tobool23 = icmp ne %struct.bNodeTree* %38, null, !dbg !3395
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !3398

if.then24:                                        ; preds = %if.end22
  %39 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3399
  %nodetree25 = getelementptr inbounds %struct.Material, %struct.Material* %39, i32 0, i32 103, !dbg !3400
  %40 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree25, align 8, !dbg !3400
  %call26 = call %struct.bNodeTree* @ntreeLocalize(%struct.bNodeTree* %40), !dbg !3401
  %41 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3402
  %nodetree27 = getelementptr inbounds %struct.Material, %struct.Material* %41, i32 0, i32 103, !dbg !3403
  store %struct.bNodeTree* %call26, %struct.bNodeTree** %nodetree27, align 8, !dbg !3404
  br label %if.end28, !dbg !3402

if.end28:                                         ; preds = %if.then24, %if.end22
  %42 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3405
  %gpumaterial = getelementptr inbounds %struct.Material, %struct.Material* %42, i32 0, i32 136, !dbg !3406
  call void @BLI_listbase_clear(%struct.ListBase* %gpumaterial), !dbg !3407
  %43 = load %struct.Material*, %struct.Material** %man, align 8, !dbg !3408
  ret %struct.Material* %43, !dbg !3409
}

declare dso_local i8* @BKE_libblock_copy_nolib(%struct.ID*, i8 zeroext) #2

declare dso_local %struct.bNodeTree* @ntreeLocalize(%struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_material_make_local(%struct.Material* %ma) #0 !dbg !3410 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %bmain = alloca %struct.Main*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %cu = alloca %struct.Curve*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  %a = alloca i32, align 4
  %is_local = alloca i8, align 1
  %is_lib = alloca i8, align 1
  %ma_new = alloca %struct.Material*, align 8
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !3411, metadata !DIExpression()), !dbg !3412
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !3413, metadata !DIExpression()), !dbg !3414
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !3415
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !3414
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3416, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3420, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !3422, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !3424, metadata !DIExpression()), !dbg !3425
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3426, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.declare(metadata i8* %is_local, metadata !3428, metadata !DIExpression()), !dbg !3429
  store i8 0, i8* %is_local, align 1, !dbg !3429
  call void @llvm.dbg.declare(metadata i8* %is_lib, metadata !3430, metadata !DIExpression()), !dbg !3431
  store i8 0, i8* %is_lib, align 1, !dbg !3431
  %1 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3432
  %id = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 0, !dbg !3434
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !3435
  %2 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !3435
  %cmp = icmp eq %struct.Library* %2, null, !dbg !3436
  br i1 %cmp, label %if.then, label %if.end, !dbg !3437

if.then:                                          ; preds = %entry
  br label %if.end308, !dbg !3438

if.end:                                           ; preds = %entry
  %3 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3439
  %id1 = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 0, !dbg !3441
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 6, !dbg !3442
  %4 = load i32, i32* %us, align 4, !dbg !3442
  %cmp2 = icmp eq i32 %4, 1, !dbg !3443
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !3444

if.then3:                                         ; preds = %if.end
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3445
  %6 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3447
  %id4 = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 0, !dbg !3448
  call void @id_clear_lib_data(%struct.Main* %5, %struct.ID* %id4), !dbg !3449
  %7 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3450
  call void @extern_local_material(%struct.Material* %7), !dbg !3451
  br label %if.end308, !dbg !3452

if.end5:                                          ; preds = %if.end
  %8 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3453
  %object = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 13, !dbg !3454
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !3455
  %9 = load i8*, i8** %first, align 8, !dbg !3455
  %10 = bitcast i8* %9 to %struct.Object*, !dbg !3453
  store %struct.Object* %10, %struct.Object** %ob, align 8, !dbg !3456
  br label %while.cond, !dbg !3457

while.cond:                                       ; preds = %if.end18, %if.end5
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3458
  %tobool = icmp ne %struct.Object* %11, null, !dbg !3457
  br i1 %tobool, label %while.body, label %while.end, !dbg !3457

while.body:                                       ; preds = %while.cond
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3459
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 29, !dbg !3462
  %13 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !3462
  %tobool6 = icmp ne %struct.Material** %13, null, !dbg !3459
  br i1 %tobool6, label %if.then7, label %if.end18, !dbg !3463

if.then7:                                         ; preds = %while.body
  store i32 0, i32* %a, align 4, !dbg !3464
  br label %for.cond, !dbg !3467

for.cond:                                         ; preds = %for.inc, %if.then7
  %14 = load i32, i32* %a, align 4, !dbg !3468
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3470
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 31, !dbg !3471
  %16 = load i32, i32* %totcol, align 8, !dbg !3471
  %cmp8 = icmp slt i32 %14, %16, !dbg !3472
  br i1 %cmp8, label %for.body, label %for.end, !dbg !3473

for.body:                                         ; preds = %for.cond
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3474
  %mat9 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 29, !dbg !3477
  %18 = load %struct.Material**, %struct.Material*** %mat9, align 8, !dbg !3477
  %19 = load i32, i32* %a, align 4, !dbg !3478
  %idxprom = sext i32 %19 to i64, !dbg !3474
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %18, i64 %idxprom, !dbg !3474
  %20 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !3474
  %21 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3479
  %cmp10 = icmp eq %struct.Material* %20, %21, !dbg !3480
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !3481

if.then11:                                        ; preds = %for.body
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3482
  %id12 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 0, !dbg !3485
  %lib13 = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 3, !dbg !3486
  %23 = load %struct.Library*, %struct.Library** %lib13, align 8, !dbg !3486
  %tobool14 = icmp ne %struct.Library* %23, null, !dbg !3482
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !3487

if.then15:                                        ; preds = %if.then11
  store i8 1, i8* %is_lib, align 1, !dbg !3488
  br label %if.end16, !dbg !3489

if.else:                                          ; preds = %if.then11
  store i8 1, i8* %is_local, align 1, !dbg !3490
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then15
  br label %if.end17, !dbg !3491

if.end17:                                         ; preds = %if.end16, %for.body
  br label %for.inc, !dbg !3492

for.inc:                                          ; preds = %if.end17
  %24 = load i32, i32* %a, align 4, !dbg !3493
  %inc = add nsw i32 %24, 1, !dbg !3493
  store i32 %inc, i32* %a, align 4, !dbg !3493
  br label %for.cond, !dbg !3494, !llvm.loop !3495

for.end:                                          ; preds = %for.cond
  br label %if.end18, !dbg !3497

if.end18:                                         ; preds = %for.end, %while.body
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3498
  %id19 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 0, !dbg !3499
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id19, i32 0, i32 0, !dbg !3500
  %26 = load i8*, i8** %next, align 8, !dbg !3500
  %27 = bitcast i8* %26 to %struct.Object*, !dbg !3498
  store %struct.Object* %27, %struct.Object** %ob, align 8, !dbg !3501
  br label %while.cond, !dbg !3457, !llvm.loop !3502

while.end:                                        ; preds = %while.cond
  %28 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3504
  %mesh = getelementptr inbounds %struct.Main, %struct.Main* %28, i32 0, i32 14, !dbg !3505
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh, i32 0, i32 0, !dbg !3506
  %29 = load i8*, i8** %first20, align 8, !dbg !3506
  %30 = bitcast i8* %29 to %struct.Mesh*, !dbg !3504
  store %struct.Mesh* %30, %struct.Mesh** %me, align 8, !dbg !3507
  br label %while.cond21, !dbg !3508

while.cond21:                                     ; preds = %if.end48, %while.end
  %31 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3509
  %tobool22 = icmp ne %struct.Mesh* %31, null, !dbg !3508
  br i1 %tobool22, label %while.body23, label %while.end51, !dbg !3508

while.body23:                                     ; preds = %while.cond21
  %32 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3510
  %mat24 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %32, i32 0, i32 5, !dbg !3513
  %33 = load %struct.Material**, %struct.Material*** %mat24, align 8, !dbg !3513
  %tobool25 = icmp ne %struct.Material** %33, null, !dbg !3510
  br i1 %tobool25, label %if.then26, label %if.end48, !dbg !3514

if.then26:                                        ; preds = %while.body23
  store i32 0, i32* %a, align 4, !dbg !3515
  br label %for.cond27, !dbg !3518

for.cond27:                                       ; preds = %for.inc45, %if.then26
  %34 = load i32, i32* %a, align 4, !dbg !3519
  %35 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3521
  %totcol28 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %35, i32 0, i32 47, !dbg !3522
  %36 = load i16, i16* %totcol28, align 2, !dbg !3522
  %conv = sext i16 %36 to i32, !dbg !3521
  %cmp29 = icmp slt i32 %34, %conv, !dbg !3523
  br i1 %cmp29, label %for.body31, label %for.end47, !dbg !3524

for.body31:                                       ; preds = %for.cond27
  %37 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3525
  %mat32 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 5, !dbg !3528
  %38 = load %struct.Material**, %struct.Material*** %mat32, align 8, !dbg !3528
  %39 = load i32, i32* %a, align 4, !dbg !3529
  %idxprom33 = sext i32 %39 to i64, !dbg !3525
  %arrayidx34 = getelementptr inbounds %struct.Material*, %struct.Material** %38, i64 %idxprom33, !dbg !3525
  %40 = load %struct.Material*, %struct.Material** %arrayidx34, align 8, !dbg !3525
  %41 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3530
  %cmp35 = icmp eq %struct.Material* %40, %41, !dbg !3531
  br i1 %cmp35, label %if.then37, label %if.end44, !dbg !3532

if.then37:                                        ; preds = %for.body31
  %42 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3533
  %id38 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 0, !dbg !3536
  %lib39 = getelementptr inbounds %struct.ID, %struct.ID* %id38, i32 0, i32 3, !dbg !3537
  %43 = load %struct.Library*, %struct.Library** %lib39, align 8, !dbg !3537
  %tobool40 = icmp ne %struct.Library* %43, null, !dbg !3533
  br i1 %tobool40, label %if.then41, label %if.else42, !dbg !3538

if.then41:                                        ; preds = %if.then37
  store i8 1, i8* %is_lib, align 1, !dbg !3539
  br label %if.end43, !dbg !3540

if.else42:                                        ; preds = %if.then37
  store i8 1, i8* %is_local, align 1, !dbg !3541
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.then41
  br label %if.end44, !dbg !3542

if.end44:                                         ; preds = %if.end43, %for.body31
  br label %for.inc45, !dbg !3543

for.inc45:                                        ; preds = %if.end44
  %44 = load i32, i32* %a, align 4, !dbg !3544
  %inc46 = add nsw i32 %44, 1, !dbg !3544
  store i32 %inc46, i32* %a, align 4, !dbg !3544
  br label %for.cond27, !dbg !3545, !llvm.loop !3546

for.end47:                                        ; preds = %for.cond27
  br label %if.end48, !dbg !3548

if.end48:                                         ; preds = %for.end47, %while.body23
  %45 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3549
  %id49 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %45, i32 0, i32 0, !dbg !3550
  %next50 = getelementptr inbounds %struct.ID, %struct.ID* %id49, i32 0, i32 0, !dbg !3551
  %46 = load i8*, i8** %next50, align 8, !dbg !3551
  %47 = bitcast i8* %46 to %struct.Mesh*, !dbg !3549
  store %struct.Mesh* %47, %struct.Mesh** %me, align 8, !dbg !3552
  br label %while.cond21, !dbg !3508, !llvm.loop !3553

while.end51:                                      ; preds = %while.cond21
  %48 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3555
  %curve = getelementptr inbounds %struct.Main, %struct.Main* %48, i32 0, i32 15, !dbg !3556
  %first52 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curve, i32 0, i32 0, !dbg !3557
  %49 = load i8*, i8** %first52, align 8, !dbg !3557
  %50 = bitcast i8* %49 to %struct.Curve*, !dbg !3555
  store %struct.Curve* %50, %struct.Curve** %cu, align 8, !dbg !3558
  br label %while.cond53, !dbg !3559

while.cond53:                                     ; preds = %if.end81, %while.end51
  %51 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3560
  %tobool54 = icmp ne %struct.Curve* %51, null, !dbg !3559
  br i1 %tobool54, label %while.body55, label %while.end84, !dbg !3559

while.body55:                                     ; preds = %while.cond53
  %52 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3561
  %mat56 = getelementptr inbounds %struct.Curve, %struct.Curve* %52, i32 0, i32 10, !dbg !3564
  %53 = load %struct.Material**, %struct.Material*** %mat56, align 8, !dbg !3564
  %tobool57 = icmp ne %struct.Material** %53, null, !dbg !3561
  br i1 %tobool57, label %if.then58, label %if.end81, !dbg !3565

if.then58:                                        ; preds = %while.body55
  store i32 0, i32* %a, align 4, !dbg !3566
  br label %for.cond59, !dbg !3569

for.cond59:                                       ; preds = %for.inc78, %if.then58
  %54 = load i32, i32* %a, align 4, !dbg !3570
  %55 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3572
  %totcol60 = getelementptr inbounds %struct.Curve, %struct.Curve* %55, i32 0, i32 22, !dbg !3573
  %56 = load i16, i16* %totcol60, align 2, !dbg !3573
  %conv61 = sext i16 %56 to i32, !dbg !3572
  %cmp62 = icmp slt i32 %54, %conv61, !dbg !3574
  br i1 %cmp62, label %for.body64, label %for.end80, !dbg !3575

for.body64:                                       ; preds = %for.cond59
  %57 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3576
  %mat65 = getelementptr inbounds %struct.Curve, %struct.Curve* %57, i32 0, i32 10, !dbg !3579
  %58 = load %struct.Material**, %struct.Material*** %mat65, align 8, !dbg !3579
  %59 = load i32, i32* %a, align 4, !dbg !3580
  %idxprom66 = sext i32 %59 to i64, !dbg !3576
  %arrayidx67 = getelementptr inbounds %struct.Material*, %struct.Material** %58, i64 %idxprom66, !dbg !3576
  %60 = load %struct.Material*, %struct.Material** %arrayidx67, align 8, !dbg !3576
  %61 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3581
  %cmp68 = icmp eq %struct.Material* %60, %61, !dbg !3582
  br i1 %cmp68, label %if.then70, label %if.end77, !dbg !3583

if.then70:                                        ; preds = %for.body64
  %62 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3584
  %id71 = getelementptr inbounds %struct.Curve, %struct.Curve* %62, i32 0, i32 0, !dbg !3587
  %lib72 = getelementptr inbounds %struct.ID, %struct.ID* %id71, i32 0, i32 3, !dbg !3588
  %63 = load %struct.Library*, %struct.Library** %lib72, align 8, !dbg !3588
  %tobool73 = icmp ne %struct.Library* %63, null, !dbg !3584
  br i1 %tobool73, label %if.then74, label %if.else75, !dbg !3589

if.then74:                                        ; preds = %if.then70
  store i8 1, i8* %is_lib, align 1, !dbg !3590
  br label %if.end76, !dbg !3591

if.else75:                                        ; preds = %if.then70
  store i8 1, i8* %is_local, align 1, !dbg !3592
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77, !dbg !3593

if.end77:                                         ; preds = %if.end76, %for.body64
  br label %for.inc78, !dbg !3594

for.inc78:                                        ; preds = %if.end77
  %64 = load i32, i32* %a, align 4, !dbg !3595
  %inc79 = add nsw i32 %64, 1, !dbg !3595
  store i32 %inc79, i32* %a, align 4, !dbg !3595
  br label %for.cond59, !dbg !3596, !llvm.loop !3597

for.end80:                                        ; preds = %for.cond59
  br label %if.end81, !dbg !3599

if.end81:                                         ; preds = %for.end80, %while.body55
  %65 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3600
  %id82 = getelementptr inbounds %struct.Curve, %struct.Curve* %65, i32 0, i32 0, !dbg !3601
  %next83 = getelementptr inbounds %struct.ID, %struct.ID* %id82, i32 0, i32 0, !dbg !3602
  %66 = load i8*, i8** %next83, align 8, !dbg !3602
  %67 = bitcast i8* %66 to %struct.Curve*, !dbg !3600
  store %struct.Curve* %67, %struct.Curve** %cu, align 8, !dbg !3603
  br label %while.cond53, !dbg !3559, !llvm.loop !3604

while.end84:                                      ; preds = %while.cond53
  %68 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3606
  %mball = getelementptr inbounds %struct.Main, %struct.Main* %68, i32 0, i32 16, !dbg !3607
  %first85 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mball, i32 0, i32 0, !dbg !3608
  %69 = load i8*, i8** %first85, align 8, !dbg !3608
  %70 = bitcast i8* %69 to %struct.MetaBall*, !dbg !3606
  store %struct.MetaBall* %70, %struct.MetaBall** %mb, align 8, !dbg !3609
  br label %while.cond86, !dbg !3610

while.cond86:                                     ; preds = %if.end114, %while.end84
  %71 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3611
  %tobool87 = icmp ne %struct.MetaBall* %71, null, !dbg !3610
  br i1 %tobool87, label %while.body88, label %while.end117, !dbg !3610

while.body88:                                     ; preds = %while.cond86
  %72 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3612
  %mat89 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %72, i32 0, i32 6, !dbg !3615
  %73 = load %struct.Material**, %struct.Material*** %mat89, align 8, !dbg !3615
  %tobool90 = icmp ne %struct.Material** %73, null, !dbg !3612
  br i1 %tobool90, label %if.then91, label %if.end114, !dbg !3616

if.then91:                                        ; preds = %while.body88
  store i32 0, i32* %a, align 4, !dbg !3617
  br label %for.cond92, !dbg !3620

for.cond92:                                       ; preds = %for.inc111, %if.then91
  %74 = load i32, i32* %a, align 4, !dbg !3621
  %75 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3623
  %totcol93 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %75, i32 0, i32 9, !dbg !3624
  %76 = load i16, i16* %totcol93, align 2, !dbg !3624
  %conv94 = sext i16 %76 to i32, !dbg !3623
  %cmp95 = icmp slt i32 %74, %conv94, !dbg !3625
  br i1 %cmp95, label %for.body97, label %for.end113, !dbg !3626

for.body97:                                       ; preds = %for.cond92
  %77 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3627
  %mat98 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %77, i32 0, i32 6, !dbg !3630
  %78 = load %struct.Material**, %struct.Material*** %mat98, align 8, !dbg !3630
  %79 = load i32, i32* %a, align 4, !dbg !3631
  %idxprom99 = sext i32 %79 to i64, !dbg !3627
  %arrayidx100 = getelementptr inbounds %struct.Material*, %struct.Material** %78, i64 %idxprom99, !dbg !3627
  %80 = load %struct.Material*, %struct.Material** %arrayidx100, align 8, !dbg !3627
  %81 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3632
  %cmp101 = icmp eq %struct.Material* %80, %81, !dbg !3633
  br i1 %cmp101, label %if.then103, label %if.end110, !dbg !3634

if.then103:                                       ; preds = %for.body97
  %82 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3635
  %id104 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %82, i32 0, i32 0, !dbg !3638
  %lib105 = getelementptr inbounds %struct.ID, %struct.ID* %id104, i32 0, i32 3, !dbg !3639
  %83 = load %struct.Library*, %struct.Library** %lib105, align 8, !dbg !3639
  %tobool106 = icmp ne %struct.Library* %83, null, !dbg !3635
  br i1 %tobool106, label %if.then107, label %if.else108, !dbg !3640

if.then107:                                       ; preds = %if.then103
  store i8 1, i8* %is_lib, align 1, !dbg !3641
  br label %if.end109, !dbg !3642

if.else108:                                       ; preds = %if.then103
  store i8 1, i8* %is_local, align 1, !dbg !3643
  br label %if.end109

if.end109:                                        ; preds = %if.else108, %if.then107
  br label %if.end110, !dbg !3644

if.end110:                                        ; preds = %if.end109, %for.body97
  br label %for.inc111, !dbg !3645

for.inc111:                                       ; preds = %if.end110
  %84 = load i32, i32* %a, align 4, !dbg !3646
  %inc112 = add nsw i32 %84, 1, !dbg !3646
  store i32 %inc112, i32* %a, align 4, !dbg !3646
  br label %for.cond92, !dbg !3647, !llvm.loop !3648

for.end113:                                       ; preds = %for.cond92
  br label %if.end114, !dbg !3650

if.end114:                                        ; preds = %for.end113, %while.body88
  %85 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3651
  %id115 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %85, i32 0, i32 0, !dbg !3652
  %next116 = getelementptr inbounds %struct.ID, %struct.ID* %id115, i32 0, i32 0, !dbg !3653
  %86 = load i8*, i8** %next116, align 8, !dbg !3653
  %87 = bitcast i8* %86 to %struct.MetaBall*, !dbg !3651
  store %struct.MetaBall* %87, %struct.MetaBall** %mb, align 8, !dbg !3654
  br label %while.cond86, !dbg !3610, !llvm.loop !3655

while.end117:                                     ; preds = %while.cond86
  %88 = load i8, i8* %is_local, align 1, !dbg !3657
  %conv118 = zext i8 %88 to i32, !dbg !3657
  %tobool119 = icmp ne i32 %conv118, 0, !dbg !3657
  br i1 %tobool119, label %land.lhs.true, label %if.else125, !dbg !3659

land.lhs.true:                                    ; preds = %while.end117
  %89 = load i8, i8* %is_lib, align 1, !dbg !3660
  %conv120 = zext i8 %89 to i32, !dbg !3660
  %cmp121 = icmp eq i32 %conv120, 0, !dbg !3661
  br i1 %cmp121, label %if.then123, label %if.else125, !dbg !3662

if.then123:                                       ; preds = %land.lhs.true
  %90 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3663
  %91 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3665
  %id124 = getelementptr inbounds %struct.Material, %struct.Material* %91, i32 0, i32 0, !dbg !3666
  call void @id_clear_lib_data(%struct.Main* %90, %struct.ID* %id124), !dbg !3667
  %92 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3668
  call void @extern_local_material(%struct.Material* %92), !dbg !3669
  br label %if.end308, !dbg !3670

if.else125:                                       ; preds = %land.lhs.true, %while.end117
  %93 = load i8, i8* %is_local, align 1, !dbg !3671
  %conv126 = zext i8 %93 to i32, !dbg !3671
  %tobool127 = icmp ne i32 %conv126, 0, !dbg !3671
  br i1 %tobool127, label %land.lhs.true128, label %if.end307, !dbg !3673

land.lhs.true128:                                 ; preds = %if.else125
  %94 = load i8, i8* %is_lib, align 1, !dbg !3674
  %conv129 = zext i8 %94 to i32, !dbg !3674
  %tobool130 = icmp ne i32 %conv129, 0, !dbg !3674
  br i1 %tobool130, label %if.then131, label %if.end307, !dbg !3675

if.then131:                                       ; preds = %land.lhs.true128
  call void @llvm.dbg.declare(metadata %struct.Material** %ma_new, metadata !3676, metadata !DIExpression()), !dbg !3678
  %95 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3679
  %call = call %struct.Material* @BKE_material_copy(%struct.Material* %95), !dbg !3680
  store %struct.Material* %call, %struct.Material** %ma_new, align 8, !dbg !3678
  %96 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3681
  %id132 = getelementptr inbounds %struct.Material, %struct.Material* %96, i32 0, i32 0, !dbg !3682
  %us133 = getelementptr inbounds %struct.ID, %struct.ID* %id132, i32 0, i32 6, !dbg !3683
  store i32 0, i32* %us133, align 4, !dbg !3684
  %97 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3685
  %98 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3686
  %id134 = getelementptr inbounds %struct.Material, %struct.Material* %98, i32 0, i32 0, !dbg !3687
  %lib135 = getelementptr inbounds %struct.ID, %struct.ID* %id134, i32 0, i32 3, !dbg !3688
  %99 = load %struct.Library*, %struct.Library** %lib135, align 8, !dbg !3688
  %100 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3689
  %id136 = getelementptr inbounds %struct.Material, %struct.Material* %100, i32 0, i32 0, !dbg !3690
  call void @BKE_id_lib_local_paths(%struct.Main* %97, %struct.Library* %99, %struct.ID* %id136), !dbg !3691
  %101 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3692
  %object137 = getelementptr inbounds %struct.Main, %struct.Main* %101, i32 0, i32 13, !dbg !3693
  %first138 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object137, i32 0, i32 0, !dbg !3694
  %102 = load i8*, i8** %first138, align 8, !dbg !3694
  %103 = bitcast i8* %102 to %struct.Object*, !dbg !3692
  store %struct.Object* %103, %struct.Object** %ob, align 8, !dbg !3695
  br label %while.cond139, !dbg !3696

while.cond139:                                    ; preds = %if.end174, %if.then131
  %104 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3697
  %tobool140 = icmp ne %struct.Object* %104, null, !dbg !3696
  br i1 %tobool140, label %while.body141, label %while.end177, !dbg !3696

while.body141:                                    ; preds = %while.cond139
  %105 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3698
  %mat142 = getelementptr inbounds %struct.Object, %struct.Object* %105, i32 0, i32 29, !dbg !3701
  %106 = load %struct.Material**, %struct.Material*** %mat142, align 8, !dbg !3701
  %tobool143 = icmp ne %struct.Material** %106, null, !dbg !3698
  br i1 %tobool143, label %if.then144, label %if.end174, !dbg !3702

if.then144:                                       ; preds = %while.body141
  store i32 0, i32* %a, align 4, !dbg !3703
  br label %for.cond145, !dbg !3706

for.cond145:                                      ; preds = %for.inc171, %if.then144
  %107 = load i32, i32* %a, align 4, !dbg !3707
  %108 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3709
  %totcol146 = getelementptr inbounds %struct.Object, %struct.Object* %108, i32 0, i32 31, !dbg !3710
  %109 = load i32, i32* %totcol146, align 8, !dbg !3710
  %cmp147 = icmp slt i32 %107, %109, !dbg !3711
  br i1 %cmp147, label %for.body149, label %for.end173, !dbg !3712

for.body149:                                      ; preds = %for.cond145
  %110 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3713
  %mat150 = getelementptr inbounds %struct.Object, %struct.Object* %110, i32 0, i32 29, !dbg !3716
  %111 = load %struct.Material**, %struct.Material*** %mat150, align 8, !dbg !3716
  %112 = load i32, i32* %a, align 4, !dbg !3717
  %idxprom151 = sext i32 %112 to i64, !dbg !3713
  %arrayidx152 = getelementptr inbounds %struct.Material*, %struct.Material** %111, i64 %idxprom151, !dbg !3713
  %113 = load %struct.Material*, %struct.Material** %arrayidx152, align 8, !dbg !3713
  %114 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3718
  %cmp153 = icmp eq %struct.Material* %113, %114, !dbg !3719
  br i1 %cmp153, label %if.then155, label %if.end170, !dbg !3720

if.then155:                                       ; preds = %for.body149
  %115 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3721
  %id156 = getelementptr inbounds %struct.Object, %struct.Object* %115, i32 0, i32 0, !dbg !3724
  %lib157 = getelementptr inbounds %struct.ID, %struct.ID* %id156, i32 0, i32 3, !dbg !3725
  %116 = load %struct.Library*, %struct.Library** %lib157, align 8, !dbg !3725
  %cmp158 = icmp eq %struct.Library* %116, null, !dbg !3726
  br i1 %cmp158, label %if.then160, label %if.end169, !dbg !3727

if.then160:                                       ; preds = %if.then155
  %117 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3728
  %118 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3730
  %mat161 = getelementptr inbounds %struct.Object, %struct.Object* %118, i32 0, i32 29, !dbg !3731
  %119 = load %struct.Material**, %struct.Material*** %mat161, align 8, !dbg !3731
  %120 = load i32, i32* %a, align 4, !dbg !3732
  %idxprom162 = sext i32 %120 to i64, !dbg !3730
  %arrayidx163 = getelementptr inbounds %struct.Material*, %struct.Material** %119, i64 %idxprom162, !dbg !3730
  store %struct.Material* %117, %struct.Material** %arrayidx163, align 8, !dbg !3733
  %121 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3734
  %id164 = getelementptr inbounds %struct.Material, %struct.Material* %121, i32 0, i32 0, !dbg !3735
  %us165 = getelementptr inbounds %struct.ID, %struct.ID* %id164, i32 0, i32 6, !dbg !3736
  %122 = load i32, i32* %us165, align 4, !dbg !3737
  %inc166 = add nsw i32 %122, 1, !dbg !3737
  store i32 %inc166, i32* %us165, align 4, !dbg !3737
  %123 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3738
  %id167 = getelementptr inbounds %struct.Material, %struct.Material* %123, i32 0, i32 0, !dbg !3739
  %us168 = getelementptr inbounds %struct.ID, %struct.ID* %id167, i32 0, i32 6, !dbg !3740
  %124 = load i32, i32* %us168, align 4, !dbg !3741
  %dec = add nsw i32 %124, -1, !dbg !3741
  store i32 %dec, i32* %us168, align 4, !dbg !3741
  br label %if.end169, !dbg !3742

if.end169:                                        ; preds = %if.then160, %if.then155
  br label %if.end170, !dbg !3743

if.end170:                                        ; preds = %if.end169, %for.body149
  br label %for.inc171, !dbg !3744

for.inc171:                                       ; preds = %if.end170
  %125 = load i32, i32* %a, align 4, !dbg !3745
  %inc172 = add nsw i32 %125, 1, !dbg !3745
  store i32 %inc172, i32* %a, align 4, !dbg !3745
  br label %for.cond145, !dbg !3746, !llvm.loop !3747

for.end173:                                       ; preds = %for.cond145
  br label %if.end174, !dbg !3749

if.end174:                                        ; preds = %for.end173, %while.body141
  %126 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3750
  %id175 = getelementptr inbounds %struct.Object, %struct.Object* %126, i32 0, i32 0, !dbg !3751
  %next176 = getelementptr inbounds %struct.ID, %struct.ID* %id175, i32 0, i32 0, !dbg !3752
  %127 = load i8*, i8** %next176, align 8, !dbg !3752
  %128 = bitcast i8* %127 to %struct.Object*, !dbg !3750
  store %struct.Object* %128, %struct.Object** %ob, align 8, !dbg !3753
  br label %while.cond139, !dbg !3696, !llvm.loop !3754

while.end177:                                     ; preds = %while.cond139
  %129 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3756
  %mesh178 = getelementptr inbounds %struct.Main, %struct.Main* %129, i32 0, i32 14, !dbg !3757
  %first179 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh178, i32 0, i32 0, !dbg !3758
  %130 = load i8*, i8** %first179, align 8, !dbg !3758
  %131 = bitcast i8* %130 to %struct.Mesh*, !dbg !3756
  store %struct.Mesh* %131, %struct.Mesh** %me, align 8, !dbg !3759
  br label %while.cond180, !dbg !3760

while.cond180:                                    ; preds = %if.end217, %while.end177
  %132 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3761
  %tobool181 = icmp ne %struct.Mesh* %132, null, !dbg !3760
  br i1 %tobool181, label %while.body182, label %while.end220, !dbg !3760

while.body182:                                    ; preds = %while.cond180
  %133 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3762
  %mat183 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %133, i32 0, i32 5, !dbg !3765
  %134 = load %struct.Material**, %struct.Material*** %mat183, align 8, !dbg !3765
  %tobool184 = icmp ne %struct.Material** %134, null, !dbg !3762
  br i1 %tobool184, label %if.then185, label %if.end217, !dbg !3766

if.then185:                                       ; preds = %while.body182
  store i32 0, i32* %a, align 4, !dbg !3767
  br label %for.cond186, !dbg !3770

for.cond186:                                      ; preds = %for.inc214, %if.then185
  %135 = load i32, i32* %a, align 4, !dbg !3771
  %136 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3773
  %totcol187 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %136, i32 0, i32 47, !dbg !3774
  %137 = load i16, i16* %totcol187, align 2, !dbg !3774
  %conv188 = sext i16 %137 to i32, !dbg !3773
  %cmp189 = icmp slt i32 %135, %conv188, !dbg !3775
  br i1 %cmp189, label %for.body191, label %for.end216, !dbg !3776

for.body191:                                      ; preds = %for.cond186
  %138 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3777
  %mat192 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %138, i32 0, i32 5, !dbg !3780
  %139 = load %struct.Material**, %struct.Material*** %mat192, align 8, !dbg !3780
  %140 = load i32, i32* %a, align 4, !dbg !3781
  %idxprom193 = sext i32 %140 to i64, !dbg !3777
  %arrayidx194 = getelementptr inbounds %struct.Material*, %struct.Material** %139, i64 %idxprom193, !dbg !3777
  %141 = load %struct.Material*, %struct.Material** %arrayidx194, align 8, !dbg !3777
  %142 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3782
  %cmp195 = icmp eq %struct.Material* %141, %142, !dbg !3783
  br i1 %cmp195, label %if.then197, label %if.end213, !dbg !3784

if.then197:                                       ; preds = %for.body191
  %143 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3785
  %id198 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %143, i32 0, i32 0, !dbg !3788
  %lib199 = getelementptr inbounds %struct.ID, %struct.ID* %id198, i32 0, i32 3, !dbg !3789
  %144 = load %struct.Library*, %struct.Library** %lib199, align 8, !dbg !3789
  %cmp200 = icmp eq %struct.Library* %144, null, !dbg !3790
  br i1 %cmp200, label %if.then202, label %if.end212, !dbg !3791

if.then202:                                       ; preds = %if.then197
  %145 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3792
  %146 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3794
  %mat203 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %146, i32 0, i32 5, !dbg !3795
  %147 = load %struct.Material**, %struct.Material*** %mat203, align 8, !dbg !3795
  %148 = load i32, i32* %a, align 4, !dbg !3796
  %idxprom204 = sext i32 %148 to i64, !dbg !3794
  %arrayidx205 = getelementptr inbounds %struct.Material*, %struct.Material** %147, i64 %idxprom204, !dbg !3794
  store %struct.Material* %145, %struct.Material** %arrayidx205, align 8, !dbg !3797
  %149 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3798
  %id206 = getelementptr inbounds %struct.Material, %struct.Material* %149, i32 0, i32 0, !dbg !3799
  %us207 = getelementptr inbounds %struct.ID, %struct.ID* %id206, i32 0, i32 6, !dbg !3800
  %150 = load i32, i32* %us207, align 4, !dbg !3801
  %inc208 = add nsw i32 %150, 1, !dbg !3801
  store i32 %inc208, i32* %us207, align 4, !dbg !3801
  %151 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3802
  %id209 = getelementptr inbounds %struct.Material, %struct.Material* %151, i32 0, i32 0, !dbg !3803
  %us210 = getelementptr inbounds %struct.ID, %struct.ID* %id209, i32 0, i32 6, !dbg !3804
  %152 = load i32, i32* %us210, align 4, !dbg !3805
  %dec211 = add nsw i32 %152, -1, !dbg !3805
  store i32 %dec211, i32* %us210, align 4, !dbg !3805
  br label %if.end212, !dbg !3806

if.end212:                                        ; preds = %if.then202, %if.then197
  br label %if.end213, !dbg !3807

if.end213:                                        ; preds = %if.end212, %for.body191
  br label %for.inc214, !dbg !3808

for.inc214:                                       ; preds = %if.end213
  %153 = load i32, i32* %a, align 4, !dbg !3809
  %inc215 = add nsw i32 %153, 1, !dbg !3809
  store i32 %inc215, i32* %a, align 4, !dbg !3809
  br label %for.cond186, !dbg !3810, !llvm.loop !3811

for.end216:                                       ; preds = %for.cond186
  br label %if.end217, !dbg !3813

if.end217:                                        ; preds = %for.end216, %while.body182
  %154 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3814
  %id218 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %154, i32 0, i32 0, !dbg !3815
  %next219 = getelementptr inbounds %struct.ID, %struct.ID* %id218, i32 0, i32 0, !dbg !3816
  %155 = load i8*, i8** %next219, align 8, !dbg !3816
  %156 = bitcast i8* %155 to %struct.Mesh*, !dbg !3814
  store %struct.Mesh* %156, %struct.Mesh** %me, align 8, !dbg !3817
  br label %while.cond180, !dbg !3760, !llvm.loop !3818

while.end220:                                     ; preds = %while.cond180
  %157 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3820
  %curve221 = getelementptr inbounds %struct.Main, %struct.Main* %157, i32 0, i32 15, !dbg !3821
  %first222 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curve221, i32 0, i32 0, !dbg !3822
  %158 = load i8*, i8** %first222, align 8, !dbg !3822
  %159 = bitcast i8* %158 to %struct.Curve*, !dbg !3820
  store %struct.Curve* %159, %struct.Curve** %cu, align 8, !dbg !3823
  br label %while.cond223, !dbg !3824

while.cond223:                                    ; preds = %if.end260, %while.end220
  %160 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3825
  %tobool224 = icmp ne %struct.Curve* %160, null, !dbg !3824
  br i1 %tobool224, label %while.body225, label %while.end263, !dbg !3824

while.body225:                                    ; preds = %while.cond223
  %161 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3826
  %mat226 = getelementptr inbounds %struct.Curve, %struct.Curve* %161, i32 0, i32 10, !dbg !3829
  %162 = load %struct.Material**, %struct.Material*** %mat226, align 8, !dbg !3829
  %tobool227 = icmp ne %struct.Material** %162, null, !dbg !3826
  br i1 %tobool227, label %if.then228, label %if.end260, !dbg !3830

if.then228:                                       ; preds = %while.body225
  store i32 0, i32* %a, align 4, !dbg !3831
  br label %for.cond229, !dbg !3834

for.cond229:                                      ; preds = %for.inc257, %if.then228
  %163 = load i32, i32* %a, align 4, !dbg !3835
  %164 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3837
  %totcol230 = getelementptr inbounds %struct.Curve, %struct.Curve* %164, i32 0, i32 22, !dbg !3838
  %165 = load i16, i16* %totcol230, align 2, !dbg !3838
  %conv231 = sext i16 %165 to i32, !dbg !3837
  %cmp232 = icmp slt i32 %163, %conv231, !dbg !3839
  br i1 %cmp232, label %for.body234, label %for.end259, !dbg !3840

for.body234:                                      ; preds = %for.cond229
  %166 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3841
  %mat235 = getelementptr inbounds %struct.Curve, %struct.Curve* %166, i32 0, i32 10, !dbg !3844
  %167 = load %struct.Material**, %struct.Material*** %mat235, align 8, !dbg !3844
  %168 = load i32, i32* %a, align 4, !dbg !3845
  %idxprom236 = sext i32 %168 to i64, !dbg !3841
  %arrayidx237 = getelementptr inbounds %struct.Material*, %struct.Material** %167, i64 %idxprom236, !dbg !3841
  %169 = load %struct.Material*, %struct.Material** %arrayidx237, align 8, !dbg !3841
  %170 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3846
  %cmp238 = icmp eq %struct.Material* %169, %170, !dbg !3847
  br i1 %cmp238, label %if.then240, label %if.end256, !dbg !3848

if.then240:                                       ; preds = %for.body234
  %171 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3849
  %id241 = getelementptr inbounds %struct.Curve, %struct.Curve* %171, i32 0, i32 0, !dbg !3852
  %lib242 = getelementptr inbounds %struct.ID, %struct.ID* %id241, i32 0, i32 3, !dbg !3853
  %172 = load %struct.Library*, %struct.Library** %lib242, align 8, !dbg !3853
  %cmp243 = icmp eq %struct.Library* %172, null, !dbg !3854
  br i1 %cmp243, label %if.then245, label %if.end255, !dbg !3855

if.then245:                                       ; preds = %if.then240
  %173 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3856
  %174 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3858
  %mat246 = getelementptr inbounds %struct.Curve, %struct.Curve* %174, i32 0, i32 10, !dbg !3859
  %175 = load %struct.Material**, %struct.Material*** %mat246, align 8, !dbg !3859
  %176 = load i32, i32* %a, align 4, !dbg !3860
  %idxprom247 = sext i32 %176 to i64, !dbg !3858
  %arrayidx248 = getelementptr inbounds %struct.Material*, %struct.Material** %175, i64 %idxprom247, !dbg !3858
  store %struct.Material* %173, %struct.Material** %arrayidx248, align 8, !dbg !3861
  %177 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3862
  %id249 = getelementptr inbounds %struct.Material, %struct.Material* %177, i32 0, i32 0, !dbg !3863
  %us250 = getelementptr inbounds %struct.ID, %struct.ID* %id249, i32 0, i32 6, !dbg !3864
  %178 = load i32, i32* %us250, align 4, !dbg !3865
  %inc251 = add nsw i32 %178, 1, !dbg !3865
  store i32 %inc251, i32* %us250, align 4, !dbg !3865
  %179 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3866
  %id252 = getelementptr inbounds %struct.Material, %struct.Material* %179, i32 0, i32 0, !dbg !3867
  %us253 = getelementptr inbounds %struct.ID, %struct.ID* %id252, i32 0, i32 6, !dbg !3868
  %180 = load i32, i32* %us253, align 4, !dbg !3869
  %dec254 = add nsw i32 %180, -1, !dbg !3869
  store i32 %dec254, i32* %us253, align 4, !dbg !3869
  br label %if.end255, !dbg !3870

if.end255:                                        ; preds = %if.then245, %if.then240
  br label %if.end256, !dbg !3871

if.end256:                                        ; preds = %if.end255, %for.body234
  br label %for.inc257, !dbg !3872

for.inc257:                                       ; preds = %if.end256
  %181 = load i32, i32* %a, align 4, !dbg !3873
  %inc258 = add nsw i32 %181, 1, !dbg !3873
  store i32 %inc258, i32* %a, align 4, !dbg !3873
  br label %for.cond229, !dbg !3874, !llvm.loop !3875

for.end259:                                       ; preds = %for.cond229
  br label %if.end260, !dbg !3877

if.end260:                                        ; preds = %for.end259, %while.body225
  %182 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3878
  %id261 = getelementptr inbounds %struct.Curve, %struct.Curve* %182, i32 0, i32 0, !dbg !3879
  %next262 = getelementptr inbounds %struct.ID, %struct.ID* %id261, i32 0, i32 0, !dbg !3880
  %183 = load i8*, i8** %next262, align 8, !dbg !3880
  %184 = bitcast i8* %183 to %struct.Curve*, !dbg !3878
  store %struct.Curve* %184, %struct.Curve** %cu, align 8, !dbg !3881
  br label %while.cond223, !dbg !3824, !llvm.loop !3882

while.end263:                                     ; preds = %while.cond223
  %185 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3884
  %mball264 = getelementptr inbounds %struct.Main, %struct.Main* %185, i32 0, i32 16, !dbg !3885
  %first265 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mball264, i32 0, i32 0, !dbg !3886
  %186 = load i8*, i8** %first265, align 8, !dbg !3886
  %187 = bitcast i8* %186 to %struct.MetaBall*, !dbg !3884
  store %struct.MetaBall* %187, %struct.MetaBall** %mb, align 8, !dbg !3887
  br label %while.cond266, !dbg !3888

while.cond266:                                    ; preds = %if.end303, %while.end263
  %188 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3889
  %tobool267 = icmp ne %struct.MetaBall* %188, null, !dbg !3888
  br i1 %tobool267, label %while.body268, label %while.end306, !dbg !3888

while.body268:                                    ; preds = %while.cond266
  %189 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3890
  %mat269 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %189, i32 0, i32 6, !dbg !3893
  %190 = load %struct.Material**, %struct.Material*** %mat269, align 8, !dbg !3893
  %tobool270 = icmp ne %struct.Material** %190, null, !dbg !3890
  br i1 %tobool270, label %if.then271, label %if.end303, !dbg !3894

if.then271:                                       ; preds = %while.body268
  store i32 0, i32* %a, align 4, !dbg !3895
  br label %for.cond272, !dbg !3898

for.cond272:                                      ; preds = %for.inc300, %if.then271
  %191 = load i32, i32* %a, align 4, !dbg !3899
  %192 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3901
  %totcol273 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %192, i32 0, i32 9, !dbg !3902
  %193 = load i16, i16* %totcol273, align 2, !dbg !3902
  %conv274 = sext i16 %193 to i32, !dbg !3901
  %cmp275 = icmp slt i32 %191, %conv274, !dbg !3903
  br i1 %cmp275, label %for.body277, label %for.end302, !dbg !3904

for.body277:                                      ; preds = %for.cond272
  %194 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3905
  %mat278 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %194, i32 0, i32 6, !dbg !3908
  %195 = load %struct.Material**, %struct.Material*** %mat278, align 8, !dbg !3908
  %196 = load i32, i32* %a, align 4, !dbg !3909
  %idxprom279 = sext i32 %196 to i64, !dbg !3905
  %arrayidx280 = getelementptr inbounds %struct.Material*, %struct.Material** %195, i64 %idxprom279, !dbg !3905
  %197 = load %struct.Material*, %struct.Material** %arrayidx280, align 8, !dbg !3905
  %198 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3910
  %cmp281 = icmp eq %struct.Material* %197, %198, !dbg !3911
  br i1 %cmp281, label %if.then283, label %if.end299, !dbg !3912

if.then283:                                       ; preds = %for.body277
  %199 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3913
  %id284 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %199, i32 0, i32 0, !dbg !3916
  %lib285 = getelementptr inbounds %struct.ID, %struct.ID* %id284, i32 0, i32 3, !dbg !3917
  %200 = load %struct.Library*, %struct.Library** %lib285, align 8, !dbg !3917
  %cmp286 = icmp eq %struct.Library* %200, null, !dbg !3918
  br i1 %cmp286, label %if.then288, label %if.end298, !dbg !3919

if.then288:                                       ; preds = %if.then283
  %201 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3920
  %202 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3922
  %mat289 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %202, i32 0, i32 6, !dbg !3923
  %203 = load %struct.Material**, %struct.Material*** %mat289, align 8, !dbg !3923
  %204 = load i32, i32* %a, align 4, !dbg !3924
  %idxprom290 = sext i32 %204 to i64, !dbg !3922
  %arrayidx291 = getelementptr inbounds %struct.Material*, %struct.Material** %203, i64 %idxprom290, !dbg !3922
  store %struct.Material* %201, %struct.Material** %arrayidx291, align 8, !dbg !3925
  %205 = load %struct.Material*, %struct.Material** %ma_new, align 8, !dbg !3926
  %id292 = getelementptr inbounds %struct.Material, %struct.Material* %205, i32 0, i32 0, !dbg !3927
  %us293 = getelementptr inbounds %struct.ID, %struct.ID* %id292, i32 0, i32 6, !dbg !3928
  %206 = load i32, i32* %us293, align 4, !dbg !3929
  %inc294 = add nsw i32 %206, 1, !dbg !3929
  store i32 %inc294, i32* %us293, align 4, !dbg !3929
  %207 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3930
  %id295 = getelementptr inbounds %struct.Material, %struct.Material* %207, i32 0, i32 0, !dbg !3931
  %us296 = getelementptr inbounds %struct.ID, %struct.ID* %id295, i32 0, i32 6, !dbg !3932
  %208 = load i32, i32* %us296, align 4, !dbg !3933
  %dec297 = add nsw i32 %208, -1, !dbg !3933
  store i32 %dec297, i32* %us296, align 4, !dbg !3933
  br label %if.end298, !dbg !3934

if.end298:                                        ; preds = %if.then288, %if.then283
  br label %if.end299, !dbg !3935

if.end299:                                        ; preds = %if.end298, %for.body277
  br label %for.inc300, !dbg !3936

for.inc300:                                       ; preds = %if.end299
  %209 = load i32, i32* %a, align 4, !dbg !3937
  %inc301 = add nsw i32 %209, 1, !dbg !3937
  store i32 %inc301, i32* %a, align 4, !dbg !3937
  br label %for.cond272, !dbg !3938, !llvm.loop !3939

for.end302:                                       ; preds = %for.cond272
  br label %if.end303, !dbg !3941

if.end303:                                        ; preds = %for.end302, %while.body268
  %210 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3942
  %id304 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %210, i32 0, i32 0, !dbg !3943
  %next305 = getelementptr inbounds %struct.ID, %struct.ID* %id304, i32 0, i32 0, !dbg !3944
  %211 = load i8*, i8** %next305, align 8, !dbg !3944
  %212 = bitcast i8* %211 to %struct.MetaBall*, !dbg !3942
  store %struct.MetaBall* %212, %struct.MetaBall** %mb, align 8, !dbg !3945
  br label %while.cond266, !dbg !3888, !llvm.loop !3946

while.end306:                                     ; preds = %while.cond266
  br label %if.end307, !dbg !3948

if.end307:                                        ; preds = %while.end306, %land.lhs.true128, %if.else125
  br label %if.end308

if.end308:                                        ; preds = %if.then, %if.then3, %if.end307, %if.then123
  ret void, !dbg !3949
}

declare dso_local void @id_clear_lib_data(%struct.Main*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @extern_local_material(%struct.Material* %ma) #0 !dbg !3950 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %i = alloca i32, align 4
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !3951, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3953, metadata !DIExpression()), !dbg !3954
  store i32 0, i32* %i, align 4, !dbg !3955
  br label %for.cond, !dbg !3957

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3958
  %cmp = icmp slt i32 %0, 18, !dbg !3960
  br i1 %cmp, label %for.body, label %for.end, !dbg !3961

for.body:                                         ; preds = %for.cond
  %1 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3962
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 102, !dbg !3965
  %2 = load i32, i32* %i, align 4, !dbg !3966
  %idxprom = sext i32 %2 to i64, !dbg !3962
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !3962
  %3 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !3962
  %tobool = icmp ne %struct.MTex* %3, null, !dbg !3962
  br i1 %tobool, label %if.then, label %if.end, !dbg !3967

if.then:                                          ; preds = %for.body
  %4 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !3968
  %mtex1 = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 102, !dbg !3969
  %5 = load i32, i32* %i, align 4, !dbg !3970
  %idxprom2 = sext i32 %5 to i64, !dbg !3968
  %arrayidx3 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex1, i64 0, i64 %idxprom2, !dbg !3968
  %6 = load %struct.MTex*, %struct.MTex** %arrayidx3, align 8, !dbg !3968
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %6, i32 0, i32 5, !dbg !3971
  %7 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3971
  %8 = bitcast %struct.Tex* %7 to %struct.ID*, !dbg !3972
  call void @id_lib_extern(%struct.ID* %8), !dbg !3973
  br label %if.end, !dbg !3973

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3974

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !3975
  %inc = add nsw i32 %9, 1, !dbg !3975
  store i32 %inc, i32* %i, align 4, !dbg !3975
  br label %for.cond, !dbg !3976, !llvm.loop !3977

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3979
}

declare dso_local void @BKE_id_lib_local_paths(%struct.Main*, %struct.Library*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @extern_local_matarar(%struct.Material** %matar, i16 signext %totcol) #0 !dbg !3980 {
entry:
  %matar.addr = alloca %struct.Material**, align 8
  %totcol.addr = alloca i16, align 2
  %i = alloca i16, align 2
  store %struct.Material** %matar, %struct.Material*** %matar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material*** %matar.addr, metadata !3983, metadata !DIExpression()), !dbg !3984
  store i16 %totcol, i16* %totcol.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %totcol.addr, metadata !3985, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.declare(metadata i16* %i, metadata !3987, metadata !DIExpression()), !dbg !3988
  store i16 0, i16* %i, align 2, !dbg !3989
  br label %for.cond, !dbg !3991

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i16, i16* %i, align 2, !dbg !3992
  %conv = sext i16 %0 to i32, !dbg !3992
  %1 = load i16, i16* %totcol.addr, align 2, !dbg !3994
  %conv1 = sext i16 %1 to i32, !dbg !3994
  %cmp = icmp slt i32 %conv, %conv1, !dbg !3995
  br i1 %cmp, label %for.body, label %for.end, !dbg !3996

for.body:                                         ; preds = %for.cond
  %2 = load %struct.Material**, %struct.Material*** %matar.addr, align 8, !dbg !3997
  %3 = load i16, i16* %i, align 2, !dbg !3999
  %idxprom = sext i16 %3 to i64, !dbg !3997
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %2, i64 %idxprom, !dbg !3997
  %4 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !3997
  %5 = bitcast %struct.Material* %4 to %struct.ID*, !dbg !4000
  call void @id_lib_extern(%struct.ID* %5), !dbg !4001
  br label %for.inc, !dbg !4002

for.inc:                                          ; preds = %for.body
  %6 = load i16, i16* %i, align 2, !dbg !4003
  %inc = add i16 %6, 1, !dbg !4003
  store i16 %inc, i16* %i, align 2, !dbg !4003
  br label %for.cond, !dbg !4004, !llvm.loop !4005

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4007
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Material*** @give_matarar(%struct.Object* %ob) #0 !dbg !4008 {
entry:
  %retval = alloca %struct.Material***, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %cu = alloca %struct.Curve*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4012, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4014, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4016, metadata !DIExpression()), !dbg !4017
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !4018, metadata !DIExpression()), !dbg !4019
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4020
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !4022
  %1 = load i16, i16* %type, align 8, !dbg !4022
  %conv = sext i16 %1 to i32, !dbg !4020
  %cmp = icmp eq i32 %conv, 1, !dbg !4023
  br i1 %cmp, label %if.then, label %if.else, !dbg !4024

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4025
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !4027
  %3 = load i8*, i8** %data, align 8, !dbg !4027
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !4025
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !4028
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4029
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 5, !dbg !4030
  store %struct.Material*** %mat, %struct.Material**** %retval, align 8, !dbg !4031
  br label %return, !dbg !4031

if.else:                                          ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4032
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !4032
  %7 = load i16, i16* %type2, align 8, !dbg !4032
  %conv3 = sext i16 %7 to i32, !dbg !4032
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !4032
  br i1 %cmp4, label %if.then15, label %lor.lhs.false, !dbg !4032

lor.lhs.false:                                    ; preds = %if.else
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4032
  %type6 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !4032
  %9 = load i16, i16* %type6, align 8, !dbg !4032
  %conv7 = sext i16 %9 to i32, !dbg !4032
  %cmp8 = icmp eq i32 %conv7, 4, !dbg !4032
  br i1 %cmp8, label %if.then15, label %lor.lhs.false10, !dbg !4032

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4032
  %type11 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !4032
  %11 = load i16, i16* %type11, align 8, !dbg !4032
  %conv12 = sext i16 %11 to i32, !dbg !4032
  %cmp13 = icmp eq i32 %conv12, 3, !dbg !4032
  br i1 %cmp13, label %if.then15, label %if.else18, !dbg !4034

if.then15:                                        ; preds = %lor.lhs.false10, %lor.lhs.false, %if.else
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4035
  %data16 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !4037
  %13 = load i8*, i8** %data16, align 8, !dbg !4037
  %14 = bitcast i8* %13 to %struct.Curve*, !dbg !4035
  store %struct.Curve* %14, %struct.Curve** %cu, align 8, !dbg !4038
  %15 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4039
  %mat17 = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 10, !dbg !4040
  store %struct.Material*** %mat17, %struct.Material**** %retval, align 8, !dbg !4041
  br label %return, !dbg !4041

if.else18:                                        ; preds = %lor.lhs.false10
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4042
  %type19 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 3, !dbg !4044
  %17 = load i16, i16* %type19, align 8, !dbg !4044
  %conv20 = sext i16 %17 to i32, !dbg !4042
  %cmp21 = icmp eq i32 %conv20, 5, !dbg !4045
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !4046

if.then23:                                        ; preds = %if.else18
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4047
  %data24 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 19, !dbg !4049
  %19 = load i8*, i8** %data24, align 8, !dbg !4049
  %20 = bitcast i8* %19 to %struct.MetaBall*, !dbg !4047
  store %struct.MetaBall* %20, %struct.MetaBall** %mb, align 8, !dbg !4050
  %21 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !4051
  %mat25 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %21, i32 0, i32 6, !dbg !4052
  store %struct.Material*** %mat25, %struct.Material**** %retval, align 8, !dbg !4053
  br label %return, !dbg !4053

if.end:                                           ; preds = %if.else18
  br label %if.end26

if.end26:                                         ; preds = %if.end
  br label %if.end27

if.end27:                                         ; preds = %if.end26
  store %struct.Material*** null, %struct.Material**** %retval, align 8, !dbg !4054
  br label %return, !dbg !4054

return:                                           ; preds = %if.end27, %if.then23, %if.then15, %if.then
  %22 = load %struct.Material***, %struct.Material**** %retval, align 8, !dbg !4055
  ret %struct.Material*** %22, !dbg !4055
}

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @give_totcolp(%struct.Object* %ob) #0 !dbg !4056 {
entry:
  %retval = alloca i16*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %cu = alloca %struct.Curve*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4059, metadata !DIExpression()), !dbg !4060
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4061, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4063, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !4065, metadata !DIExpression()), !dbg !4066
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4067
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !4069
  %1 = load i16, i16* %type, align 8, !dbg !4069
  %conv = sext i16 %1 to i32, !dbg !4067
  %cmp = icmp eq i32 %conv, 1, !dbg !4070
  br i1 %cmp, label %if.then, label %if.else, !dbg !4071

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4072
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !4074
  %3 = load i8*, i8** %data, align 8, !dbg !4074
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !4072
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !4075
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4076
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 47, !dbg !4077
  store i16* %totcol, i16** %retval, align 8, !dbg !4078
  br label %return, !dbg !4078

if.else:                                          ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4079
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !4079
  %7 = load i16, i16* %type2, align 8, !dbg !4079
  %conv3 = sext i16 %7 to i32, !dbg !4079
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !4079
  br i1 %cmp4, label %if.then15, label %lor.lhs.false, !dbg !4079

lor.lhs.false:                                    ; preds = %if.else
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4079
  %type6 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !4079
  %9 = load i16, i16* %type6, align 8, !dbg !4079
  %conv7 = sext i16 %9 to i32, !dbg !4079
  %cmp8 = icmp eq i32 %conv7, 4, !dbg !4079
  br i1 %cmp8, label %if.then15, label %lor.lhs.false10, !dbg !4079

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4079
  %type11 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !4079
  %11 = load i16, i16* %type11, align 8, !dbg !4079
  %conv12 = sext i16 %11 to i32, !dbg !4079
  %cmp13 = icmp eq i32 %conv12, 3, !dbg !4079
  br i1 %cmp13, label %if.then15, label %if.else18, !dbg !4081

if.then15:                                        ; preds = %lor.lhs.false10, %lor.lhs.false, %if.else
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4082
  %data16 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !4084
  %13 = load i8*, i8** %data16, align 8, !dbg !4084
  %14 = bitcast i8* %13 to %struct.Curve*, !dbg !4082
  store %struct.Curve* %14, %struct.Curve** %cu, align 8, !dbg !4085
  %15 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4086
  %totcol17 = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 22, !dbg !4087
  store i16* %totcol17, i16** %retval, align 8, !dbg !4088
  br label %return, !dbg !4088

if.else18:                                        ; preds = %lor.lhs.false10
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4089
  %type19 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 3, !dbg !4091
  %17 = load i16, i16* %type19, align 8, !dbg !4091
  %conv20 = sext i16 %17 to i32, !dbg !4089
  %cmp21 = icmp eq i32 %conv20, 5, !dbg !4092
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !4093

if.then23:                                        ; preds = %if.else18
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4094
  %data24 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 19, !dbg !4096
  %19 = load i8*, i8** %data24, align 8, !dbg !4096
  %20 = bitcast i8* %19 to %struct.MetaBall*, !dbg !4094
  store %struct.MetaBall* %20, %struct.MetaBall** %mb, align 8, !dbg !4097
  %21 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !4098
  %totcol25 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %21, i32 0, i32 9, !dbg !4099
  store i16* %totcol25, i16** %retval, align 8, !dbg !4100
  br label %return, !dbg !4100

if.end:                                           ; preds = %if.else18
  br label %if.end26

if.end26:                                         ; preds = %if.end
  br label %if.end27

if.end27:                                         ; preds = %if.end26
  store i16* null, i16** %retval, align 8, !dbg !4101
  br label %return, !dbg !4101

return:                                           ; preds = %if.end27, %if.then23, %if.then15, %if.then
  %22 = load i16*, i16** %retval, align 8, !dbg !4102
  ret i16* %22, !dbg !4102
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Material*** @give_matarar_id(%struct.ID* %id) #0 !dbg !4103 {
entry:
  %retval = alloca %struct.Material***, align 8
  %id.addr = alloca %struct.ID*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4106, metadata !DIExpression()), !dbg !4107
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4108
  %name = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 4, !dbg !4108
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4108
  %1 = bitcast i8* %arraydecay to i16*, !dbg !4108
  %2 = load i16, i16* %1, align 8, !dbg !4108
  %conv = sext i16 %2 to i32, !dbg !4108
  switch i32 %conv, label %sw.epilog [
    i32 17741, label %sw.bb
    i32 21827, label %sw.bb1
    i32 16973, label %sw.bb3
  ], !dbg !4109

sw.bb:                                            ; preds = %entry
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4110
  %4 = bitcast %struct.ID* %3 to %struct.Mesh*, !dbg !4112
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 5, !dbg !4112
  store %struct.Material*** %mat, %struct.Material**** %retval, align 8, !dbg !4113
  br label %return, !dbg !4113

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4114
  %6 = bitcast %struct.ID* %5 to %struct.Curve*, !dbg !4115
  %mat2 = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 10, !dbg !4115
  store %struct.Material*** %mat2, %struct.Material**** %retval, align 8, !dbg !4116
  br label %return, !dbg !4116

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4117
  %8 = bitcast %struct.ID* %7 to %struct.MetaBall*, !dbg !4118
  %mat4 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %8, i32 0, i32 6, !dbg !4118
  store %struct.Material*** %mat4, %struct.Material**** %retval, align 8, !dbg !4119
  br label %return, !dbg !4119

sw.epilog:                                        ; preds = %entry
  store %struct.Material*** null, %struct.Material**** %retval, align 8, !dbg !4120
  br label %return, !dbg !4120

return:                                           ; preds = %sw.epilog, %sw.bb3, %sw.bb1, %sw.bb
  %9 = load %struct.Material***, %struct.Material**** %retval, align 8, !dbg !4121
  ret %struct.Material*** %9, !dbg !4121
}

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @give_totcolp_id(%struct.ID* %id) #0 !dbg !4122 {
entry:
  %retval = alloca i16*, align 8
  %id.addr = alloca %struct.ID*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4125, metadata !DIExpression()), !dbg !4126
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4127
  %name = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 4, !dbg !4127
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4127
  %1 = bitcast i8* %arraydecay to i16*, !dbg !4127
  %2 = load i16, i16* %1, align 8, !dbg !4127
  %conv = sext i16 %2 to i32, !dbg !4127
  switch i32 %conv, label %sw.epilog [
    i32 17741, label %sw.bb
    i32 21827, label %sw.bb1
    i32 16973, label %sw.bb3
  ], !dbg !4128

sw.bb:                                            ; preds = %entry
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4129
  %4 = bitcast %struct.ID* %3 to %struct.Mesh*, !dbg !4131
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 47, !dbg !4131
  store i16* %totcol, i16** %retval, align 8, !dbg !4132
  br label %return, !dbg !4132

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4133
  %6 = bitcast %struct.ID* %5 to %struct.Curve*, !dbg !4134
  %totcol2 = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 22, !dbg !4134
  store i16* %totcol2, i16** %retval, align 8, !dbg !4135
  br label %return, !dbg !4135

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4136
  %8 = bitcast %struct.ID* %7 to %struct.MetaBall*, !dbg !4137
  %totcol4 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %8, i32 0, i32 9, !dbg !4137
  store i16* %totcol4, i16** %retval, align 8, !dbg !4138
  br label %return, !dbg !4138

sw.epilog:                                        ; preds = %entry
  store i16* null, i16** %retval, align 8, !dbg !4139
  br label %return, !dbg !4139

return:                                           ; preds = %sw.epilog, %sw.bb3, %sw.bb1, %sw.bb
  %9 = load i16*, i16** %retval, align 8, !dbg !4140
  ret i16* %9, !dbg !4140
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_material_resize_id(%struct.ID* %id, i16 signext %totcol, i8 zeroext %do_id_user) #0 !dbg !4141 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %totcol.addr = alloca i16, align 2
  %do_id_user.addr = alloca i8, align 1
  %matar = alloca %struct.Material***, align 8
  %totcolp = alloca i16*, align 8
  %i = alloca i16, align 2
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4144, metadata !DIExpression()), !dbg !4145
  store i16 %totcol, i16* %totcol.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %totcol.addr, metadata !4146, metadata !DIExpression()), !dbg !4147
  store i8 %do_id_user, i8* %do_id_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_id_user.addr, metadata !4148, metadata !DIExpression()), !dbg !4149
  call void @llvm.dbg.declare(metadata %struct.Material**** %matar, metadata !4150, metadata !DIExpression()), !dbg !4153
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4154
  %call = call %struct.Material*** @give_matarar_id(%struct.ID* %0), !dbg !4155
  store %struct.Material*** %call, %struct.Material**** %matar, align 8, !dbg !4153
  call void @llvm.dbg.declare(metadata i16** %totcolp, metadata !4156, metadata !DIExpression()), !dbg !4157
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4158
  %call1 = call i16* @give_totcolp_id(%struct.ID* %1), !dbg !4159
  store i16* %call1, i16** %totcolp, align 8, !dbg !4157
  %2 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4160
  %cmp = icmp eq %struct.Material*** %2, null, !dbg !4162
  br i1 %cmp, label %if.then, label %if.end, !dbg !4163

if.then:                                          ; preds = %entry
  br label %return, !dbg !4164

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %do_id_user.addr, align 1, !dbg !4166
  %conv = zext i8 %3 to i32, !dbg !4166
  %tobool = icmp ne i32 %conv, 0, !dbg !4166
  br i1 %tobool, label %land.lhs.true, label %if.end11, !dbg !4168

land.lhs.true:                                    ; preds = %if.end
  %4 = load i16, i16* %totcol.addr, align 2, !dbg !4169
  %conv2 = sext i16 %4 to i32, !dbg !4169
  %5 = load i16*, i16** %totcolp, align 8, !dbg !4170
  %6 = load i16, i16* %5, align 2, !dbg !4171
  %conv3 = sext i16 %6 to i32, !dbg !4172
  %cmp4 = icmp slt i32 %conv2, %conv3, !dbg !4173
  br i1 %cmp4, label %if.then6, label %if.end11, !dbg !4174

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i16* %i, metadata !4175, metadata !DIExpression()), !dbg !4177
  %7 = load i16, i16* %totcol.addr, align 2, !dbg !4178
  store i16 %7, i16* %i, align 2, !dbg !4180
  br label %for.cond, !dbg !4181

for.cond:                                         ; preds = %for.inc, %if.then6
  %8 = load i16, i16* %i, align 2, !dbg !4182
  %conv7 = sext i16 %8 to i32, !dbg !4182
  %9 = load i16*, i16** %totcolp, align 8, !dbg !4184
  %10 = load i16, i16* %9, align 2, !dbg !4185
  %conv8 = sext i16 %10 to i32, !dbg !4186
  %cmp9 = icmp slt i32 %conv7, %conv8, !dbg !4187
  br i1 %cmp9, label %for.body, label %for.end, !dbg !4188

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4189
  %12 = load %struct.Material**, %struct.Material*** %11, align 8, !dbg !4191
  %13 = load i16, i16* %i, align 2, !dbg !4192
  %idxprom = sext i16 %13 to i64, !dbg !4193
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %12, i64 %idxprom, !dbg !4193
  %14 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !4193
  %15 = bitcast %struct.Material* %14 to %struct.ID*, !dbg !4194
  call void @id_us_min(%struct.ID* %15), !dbg !4195
  br label %for.inc, !dbg !4196

for.inc:                                          ; preds = %for.body
  %16 = load i16, i16* %i, align 2, !dbg !4197
  %inc = add i16 %16, 1, !dbg !4197
  store i16 %inc, i16* %i, align 2, !dbg !4197
  br label %for.cond, !dbg !4198, !llvm.loop !4199

for.end:                                          ; preds = %for.cond
  br label %if.end11, !dbg !4201

if.end11:                                         ; preds = %for.end, %land.lhs.true, %if.end
  %17 = load i16, i16* %totcol.addr, align 2, !dbg !4202
  %conv12 = sext i16 %17 to i32, !dbg !4202
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !4204
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !4205

if.then15:                                        ; preds = %if.end11
  %18 = load i16*, i16** %totcolp, align 8, !dbg !4206
  %19 = load i16, i16* %18, align 2, !dbg !4209
  %tobool16 = icmp ne i16 %19, 0, !dbg !4209
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !4210

if.then17:                                        ; preds = %if.then15
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4211
  %21 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4213
  %22 = load %struct.Material**, %struct.Material*** %21, align 8, !dbg !4214
  %23 = bitcast %struct.Material** %22 to i8*, !dbg !4214
  call void %20(i8* %23), !dbg !4211
  %24 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4215
  store %struct.Material** null, %struct.Material*** %24, align 8, !dbg !4216
  br label %if.end18, !dbg !4217

if.end18:                                         ; preds = %if.then17, %if.then15
  br label %if.end21, !dbg !4218

if.else:                                          ; preds = %if.end11
  %25 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_recallocN_id, align 8, !dbg !4219
  %26 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4219
  %27 = load %struct.Material**, %struct.Material*** %26, align 8, !dbg !4219
  %28 = bitcast %struct.Material** %27 to i8*, !dbg !4219
  %29 = load i16, i16* %totcol.addr, align 2, !dbg !4219
  %conv19 = sext i16 %29 to i64, !dbg !4219
  %mul = mul i64 8, %conv19, !dbg !4219
  %call20 = call i8* %25(i8* %28, i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.BKE_material_resize_id, i64 0, i64 0)), !dbg !4219
  %30 = bitcast i8* %call20 to %struct.Material**, !dbg !4219
  %31 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4221
  store %struct.Material** %30, %struct.Material*** %31, align 8, !dbg !4222
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.end18
  %32 = load i16, i16* %totcol.addr, align 2, !dbg !4223
  %33 = load i16*, i16** %totcolp, align 8, !dbg !4224
  store i16 %32, i16* %33, align 2, !dbg !4225
  br label %return, !dbg !4226

return:                                           ; preds = %if.end21, %if.then
  ret void, !dbg !4226
}

declare dso_local void @id_us_min(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_material_append_id(%struct.ID* %id, %struct.Material* %ma) #0 !dbg !4227 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %matar = alloca %struct.Material***, align 8
  %totcol = alloca i16*, align 8
  %mat = alloca %struct.Material**, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4230, metadata !DIExpression()), !dbg !4231
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !4232, metadata !DIExpression()), !dbg !4233
  call void @llvm.dbg.declare(metadata %struct.Material**** %matar, metadata !4234, metadata !DIExpression()), !dbg !4235
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4236
  %call = call %struct.Material*** @give_matarar_id(%struct.ID* %0), !dbg !4238
  store %struct.Material*** %call, %struct.Material**** %matar, align 8, !dbg !4239
  %tobool = icmp ne %struct.Material*** %call, null, !dbg !4239
  br i1 %tobool, label %if.then, label %if.end11, !dbg !4240

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %totcol, metadata !4241, metadata !DIExpression()), !dbg !4243
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4244
  %call1 = call i16* @give_totcolp_id(%struct.ID* %1), !dbg !4245
  store i16* %call1, i16** %totcol, align 8, !dbg !4243
  call void @llvm.dbg.declare(metadata %struct.Material*** %mat, metadata !4246, metadata !DIExpression()), !dbg !4247
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4248
  %3 = load i16*, i16** %totcol, align 8, !dbg !4249
  %4 = load i16, i16* %3, align 2, !dbg !4250
  %conv = sext i16 %4 to i32, !dbg !4251
  %add = add nsw i32 %conv, 1, !dbg !4252
  %conv2 = sext i32 %add to i64, !dbg !4253
  %mul = mul i64 8, %conv2, !dbg !4254
  %call3 = call i8* %2(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)), !dbg !4248
  %5 = bitcast i8* %call3 to %struct.Material**, !dbg !4248
  store %struct.Material** %5, %struct.Material*** %mat, align 8, !dbg !4247
  %6 = load i16*, i16** %totcol, align 8, !dbg !4255
  %7 = load i16, i16* %6, align 2, !dbg !4257
  %tobool4 = icmp ne i16 %7, 0, !dbg !4257
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4258

if.then5:                                         ; preds = %if.then
  %8 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !4259
  %9 = bitcast %struct.Material** %8 to i8*, !dbg !4260
  %10 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4261
  %11 = load %struct.Material**, %struct.Material*** %10, align 8, !dbg !4262
  %12 = bitcast %struct.Material** %11 to i8*, !dbg !4260
  %13 = load i16*, i16** %totcol, align 8, !dbg !4263
  %14 = load i16, i16* %13, align 2, !dbg !4264
  %conv6 = sext i16 %14 to i64, !dbg !4265
  %mul7 = mul i64 8, %conv6, !dbg !4266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %12, i64 %mul7, i1 false), !dbg !4260
  br label %if.end, !dbg !4260

if.end:                                           ; preds = %if.then5, %if.then
  %15 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4267
  %16 = load %struct.Material**, %struct.Material*** %15, align 8, !dbg !4269
  %tobool8 = icmp ne %struct.Material** %16, null, !dbg !4269
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !4270

if.then9:                                         ; preds = %if.end
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4271
  %18 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4272
  %19 = load %struct.Material**, %struct.Material*** %18, align 8, !dbg !4273
  %20 = bitcast %struct.Material** %19 to i8*, !dbg !4273
  call void %17(i8* %20), !dbg !4271
  br label %if.end10, !dbg !4271

if.end10:                                         ; preds = %if.then9, %if.end
  %21 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !4274
  %22 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4275
  store %struct.Material** %21, %struct.Material*** %22, align 8, !dbg !4276
  %23 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !4277
  %24 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4278
  %25 = load %struct.Material**, %struct.Material*** %24, align 8, !dbg !4279
  %26 = load i16*, i16** %totcol, align 8, !dbg !4280
  %27 = load i16, i16* %26, align 2, !dbg !4281
  %inc = add i16 %27, 1, !dbg !4281
  store i16 %inc, i16* %26, align 2, !dbg !4281
  %idxprom = sext i16 %27 to i64, !dbg !4282
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %25, i64 %idxprom, !dbg !4282
  store %struct.Material* %23, %struct.Material** %arrayidx, align 8, !dbg !4283
  %28 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !4284
  %29 = bitcast %struct.Material* %28 to %struct.ID*, !dbg !4285
  call void @id_us_plus(%struct.ID* %29), !dbg !4286
  %30 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4287
  %31 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4288
  call void @test_object_materials(%struct.Main* %30, %struct.ID* %31), !dbg !4289
  br label %if.end11, !dbg !4290

if.end11:                                         ; preds = %if.end10, %entry
  ret void, !dbg !4291
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @test_object_materials(%struct.Main* %bmain, %struct.ID* %id) #0 !dbg !4292 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %ob = alloca %struct.Object*, align 8
  %totcol = alloca i16*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4295, metadata !DIExpression()), !dbg !4296
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4297, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4299, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.declare(metadata i16** %totcol, metadata !4301, metadata !DIExpression()), !dbg !4304
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4305
  %cmp = icmp eq %struct.ID* %0, null, !dbg !4307
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4308

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4309
  %call = call i16* @give_totcolp_id(%struct.ID* %1), !dbg !4310
  store i16* %call, i16** %totcol, align 8, !dbg !4311
  %cmp1 = icmp eq i16* %call, null, !dbg !4312
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4313

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !4314

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4316
  call void @BKE_main_lock(%struct.Main* %2), !dbg !4317
  %3 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4318
  %object = getelementptr inbounds %struct.Main, %struct.Main* %3, i32 0, i32 13, !dbg !4320
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !4321
  %4 = load i8*, i8** %first, align 8, !dbg !4321
  %5 = bitcast i8* %4 to %struct.Object*, !dbg !4318
  store %struct.Object* %5, %struct.Object** %ob, align 8, !dbg !4322
  br label %for.cond, !dbg !4323

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4324
  %tobool = icmp ne %struct.Object* %6, null, !dbg !4326
  br i1 %tobool, label %for.body, label %for.end, !dbg !4326

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4327
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !4330
  %8 = load i8*, i8** %data, align 8, !dbg !4330
  %9 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4331
  %10 = bitcast %struct.ID* %9 to i8*, !dbg !4331
  %cmp2 = icmp eq i8* %8, %10, !dbg !4332
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4333

if.then3:                                         ; preds = %for.body
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4334
  %12 = load i16*, i16** %totcol, align 8, !dbg !4336
  %13 = load i16, i16* %12, align 2, !dbg !4337
  call void @BKE_material_resize_object(%struct.Object* %11, i16 signext %13, i8 zeroext 0), !dbg !4338
  br label %if.end4, !dbg !4339

if.end4:                                          ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !4340

for.inc:                                          ; preds = %if.end4
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4341
  %id5 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 0, !dbg !4342
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 0, !dbg !4343
  %15 = load i8*, i8** %next, align 8, !dbg !4343
  %16 = bitcast i8* %15 to %struct.Object*, !dbg !4341
  store %struct.Object* %16, %struct.Object** %ob, align 8, !dbg !4344
  br label %for.cond, !dbg !4345, !llvm.loop !4346

for.end:                                          ; preds = %for.cond
  %17 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4348
  call void @BKE_main_unlock(%struct.Main* %17), !dbg !4349
  br label %return, !dbg !4350

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !4350
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Material* @BKE_material_pop_id(%struct.ID* %id, i32 %index_i, i8 zeroext %update_data) #0 !dbg !4351 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %index_i.addr = alloca i32, align 4
  %update_data.addr = alloca i8, align 1
  %index = alloca i16, align 2
  %ret = alloca %struct.Material*, align 8
  %matar = alloca %struct.Material***, align 8
  %totcol = alloca i16*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4354, metadata !DIExpression()), !dbg !4355
  store i32 %index_i, i32* %index_i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index_i.addr, metadata !4356, metadata !DIExpression()), !dbg !4357
  store i8 %update_data, i8* %update_data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %update_data.addr, metadata !4358, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.declare(metadata i16* %index, metadata !4360, metadata !DIExpression()), !dbg !4361
  %0 = load i32, i32* %index_i.addr, align 4, !dbg !4362
  %conv = trunc i32 %0 to i16, !dbg !4363
  store i16 %conv, i16* %index, align 2, !dbg !4361
  call void @llvm.dbg.declare(metadata %struct.Material** %ret, metadata !4364, metadata !DIExpression()), !dbg !4365
  store %struct.Material* null, %struct.Material** %ret, align 8, !dbg !4365
  call void @llvm.dbg.declare(metadata %struct.Material**** %matar, metadata !4366, metadata !DIExpression()), !dbg !4367
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4368
  %call = call %struct.Material*** @give_matarar_id(%struct.ID* %1), !dbg !4370
  store %struct.Material*** %call, %struct.Material**** %matar, align 8, !dbg !4371
  %tobool = icmp ne %struct.Material*** %call, null, !dbg !4371
  br i1 %tobool, label %if.then, label %if.end35, !dbg !4372

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %totcol, metadata !4373, metadata !DIExpression()), !dbg !4375
  %2 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4376
  %call1 = call i16* @give_totcolp_id(%struct.ID* %2), !dbg !4377
  store i16* %call1, i16** %totcol, align 8, !dbg !4375
  %3 = load i16, i16* %index, align 2, !dbg !4378
  %conv2 = sext i16 %3 to i32, !dbg !4378
  %cmp = icmp sge i32 %conv2, 0, !dbg !4380
  br i1 %cmp, label %land.lhs.true, label %if.end34, !dbg !4381

land.lhs.true:                                    ; preds = %if.then
  %4 = load i16, i16* %index, align 2, !dbg !4382
  %conv4 = sext i16 %4 to i32, !dbg !4382
  %5 = load i16*, i16** %totcol, align 8, !dbg !4383
  %6 = load i16, i16* %5, align 2, !dbg !4384
  %conv5 = sext i16 %6 to i32, !dbg !4385
  %cmp6 = icmp slt i32 %conv4, %conv5, !dbg !4386
  br i1 %cmp6, label %if.then8, label %if.end34, !dbg !4387

if.then8:                                         ; preds = %land.lhs.true
  %7 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4388
  %8 = load %struct.Material**, %struct.Material*** %7, align 8, !dbg !4390
  %9 = load i16, i16* %index, align 2, !dbg !4391
  %idxprom = sext i16 %9 to i64, !dbg !4392
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %8, i64 %idxprom, !dbg !4392
  %10 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !4392
  store %struct.Material* %10, %struct.Material** %ret, align 8, !dbg !4393
  %11 = load %struct.Material*, %struct.Material** %ret, align 8, !dbg !4394
  %12 = bitcast %struct.Material* %11 to %struct.ID*, !dbg !4395
  call void @id_us_min(%struct.ID* %12), !dbg !4396
  %13 = load i16*, i16** %totcol, align 8, !dbg !4397
  %14 = load i16, i16* %13, align 2, !dbg !4399
  %conv9 = sext i16 %14 to i32, !dbg !4399
  %cmp10 = icmp sle i32 %conv9, 1, !dbg !4400
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !4401

if.then12:                                        ; preds = %if.then8
  %15 = load i16*, i16** %totcol, align 8, !dbg !4402
  store i16 0, i16* %15, align 2, !dbg !4404
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4405
  %17 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4406
  %18 = load %struct.Material**, %struct.Material*** %17, align 8, !dbg !4407
  %19 = bitcast %struct.Material** %18 to i8*, !dbg !4407
  call void %16(i8* %19), !dbg !4405
  %20 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4408
  store %struct.Material** null, %struct.Material*** %20, align 8, !dbg !4409
  br label %if.end30, !dbg !4410

if.else:                                          ; preds = %if.then8
  %21 = load i16, i16* %index, align 2, !dbg !4411
  %conv13 = sext i16 %21 to i32, !dbg !4411
  %add = add nsw i32 %conv13, 1, !dbg !4414
  %22 = load i16*, i16** %totcol, align 8, !dbg !4415
  %23 = load i16, i16* %22, align 2, !dbg !4416
  %conv14 = sext i16 %23 to i32, !dbg !4417
  %cmp15 = icmp ne i32 %add, %conv14, !dbg !4418
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !4419

if.then17:                                        ; preds = %if.else
  %24 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4420
  %25 = load %struct.Material**, %struct.Material*** %24, align 8, !dbg !4421
  %26 = load i16, i16* %index, align 2, !dbg !4422
  %conv18 = sext i16 %26 to i32, !dbg !4422
  %idx.ext = sext i32 %conv18 to i64, !dbg !4423
  %add.ptr = getelementptr inbounds %struct.Material*, %struct.Material** %25, i64 %idx.ext, !dbg !4423
  %27 = bitcast %struct.Material** %add.ptr to i8*, !dbg !4424
  %28 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4425
  %29 = load %struct.Material**, %struct.Material*** %28, align 8, !dbg !4426
  %30 = load i16, i16* %index, align 2, !dbg !4427
  %conv19 = sext i16 %30 to i32, !dbg !4427
  %add20 = add nsw i32 %conv19, 1, !dbg !4428
  %idx.ext21 = sext i32 %add20 to i64, !dbg !4429
  %add.ptr22 = getelementptr inbounds %struct.Material*, %struct.Material** %29, i64 %idx.ext21, !dbg !4429
  %31 = bitcast %struct.Material** %add.ptr22 to i8*, !dbg !4424
  %32 = load i16*, i16** %totcol, align 8, !dbg !4430
  %33 = load i16, i16* %32, align 2, !dbg !4431
  %conv23 = sext i16 %33 to i32, !dbg !4432
  %34 = load i16, i16* %index, align 2, !dbg !4433
  %conv24 = sext i16 %34 to i32, !dbg !4433
  %add25 = add nsw i32 %conv24, 1, !dbg !4434
  %sub = sub nsw i32 %conv23, %add25, !dbg !4435
  %conv26 = sext i32 %sub to i64, !dbg !4436
  %mul = mul i64 8, %conv26, !dbg !4437
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %31, i64 %mul, i1 false), !dbg !4424
  br label %if.end, !dbg !4424

if.end:                                           ; preds = %if.then17, %if.else
  %35 = load i16*, i16** %totcol, align 8, !dbg !4438
  %36 = load i16, i16* %35, align 2, !dbg !4439
  %dec = add i16 %36, -1, !dbg !4439
  store i16 %dec, i16* %35, align 2, !dbg !4439
  %37 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !4440
  %38 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4440
  %39 = load %struct.Material**, %struct.Material*** %38, align 8, !dbg !4440
  %40 = bitcast %struct.Material** %39 to i8*, !dbg !4440
  %41 = load i16*, i16** %totcol, align 8, !dbg !4440
  %42 = load i16, i16* %41, align 2, !dbg !4440
  %conv27 = sext i16 %42 to i64, !dbg !4440
  %mul28 = mul i64 8, %conv27, !dbg !4440
  %call29 = call i8* %37(i8* %40, i64 %mul28, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.BKE_material_pop_id, i64 0, i64 0)), !dbg !4440
  %43 = bitcast i8* %call29 to %struct.Material**, !dbg !4440
  %44 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4441
  store %struct.Material** %43, %struct.Material*** %44, align 8, !dbg !4442
  %45 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4443
  %46 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4444
  call void @test_object_materials(%struct.Main* %45, %struct.ID* %46), !dbg !4445
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then12
  %47 = load i8, i8* %update_data.addr, align 1, !dbg !4446
  %tobool31 = icmp ne i8 %47, 0, !dbg !4446
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !4448

if.then32:                                        ; preds = %if.end30
  %48 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4449
  %49 = load i16, i16* %index, align 2, !dbg !4451
  call void @material_data_index_remove_id(%struct.ID* %48, i16 signext %49), !dbg !4452
  br label %if.end33, !dbg !4453

if.end33:                                         ; preds = %if.then32, %if.end30
  br label %if.end34, !dbg !4454

if.end34:                                         ; preds = %if.end33, %land.lhs.true, %if.then
  br label %if.end35, !dbg !4455

if.end35:                                         ; preds = %if.end34, %entry
  %50 = load %struct.Material*, %struct.Material** %ret, align 8, !dbg !4456
  ret %struct.Material* %50, !dbg !4457
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @material_data_index_remove_id(%struct.ID* %id, i16 signext %index) #0 !dbg !4458 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %index.addr = alloca i16, align 2
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4461, metadata !DIExpression()), !dbg !4462
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !4463, metadata !DIExpression()), !dbg !4464
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4465
  %name = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 4, !dbg !4465
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4465
  %1 = bitcast i8* %arraydecay to i16*, !dbg !4465
  %2 = load i16, i16* %1, align 8, !dbg !4465
  %conv = sext i16 %2 to i32, !dbg !4465
  switch i32 %conv, label %sw.epilog [
    i32 17741, label %sw.bb
    i32 21827, label %sw.bb1
    i32 16973, label %sw.bb3
  ], !dbg !4466

sw.bb:                                            ; preds = %entry
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4467
  %4 = bitcast %struct.ID* %3 to %struct.Mesh*, !dbg !4469
  %5 = load i16, i16* %index.addr, align 2, !dbg !4470
  call void @BKE_mesh_material_index_remove(%struct.Mesh* %4, i16 signext %5), !dbg !4471
  br label %sw.epilog, !dbg !4472

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4473
  %7 = bitcast %struct.ID* %6 to %struct.Curve*, !dbg !4474
  %8 = load i16, i16* %index.addr, align 2, !dbg !4475
  %conv2 = sext i16 %8 to i32, !dbg !4475
  call void @BKE_curve_material_index_remove(%struct.Curve* %7, i32 %conv2), !dbg !4476
  br label %sw.epilog, !dbg !4477

sw.bb3:                                           ; preds = %entry
  br label %sw.epilog, !dbg !4478

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb1, %sw.bb
  ret void, !dbg !4479
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_material_clear_id(%struct.ID* %id, i8 zeroext %update_data) #0 !dbg !4480 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %update_data.addr = alloca i8, align 1
  %matar = alloca %struct.Material***, align 8
  %totcol = alloca i16*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4483, metadata !DIExpression()), !dbg !4484
  store i8 %update_data, i8* %update_data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %update_data.addr, metadata !4485, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.declare(metadata %struct.Material**** %matar, metadata !4487, metadata !DIExpression()), !dbg !4488
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4489
  %call = call %struct.Material*** @give_matarar_id(%struct.ID* %0), !dbg !4491
  store %struct.Material*** %call, %struct.Material**** %matar, align 8, !dbg !4492
  %tobool = icmp ne %struct.Material*** %call, null, !dbg !4492
  br i1 %tobool, label %if.then, label %if.end7, !dbg !4493

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %totcol, metadata !4494, metadata !DIExpression()), !dbg !4496
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4497
  %call1 = call i16* @give_totcolp_id(%struct.ID* %1), !dbg !4498
  store i16* %call1, i16** %totcol, align 8, !dbg !4496
  %2 = load i16*, i16** %totcol, align 8, !dbg !4499
  store i16 0, i16* %2, align 2, !dbg !4500
  %3 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4501
  %4 = load %struct.Material**, %struct.Material*** %3, align 8, !dbg !4503
  %tobool2 = icmp ne %struct.Material** %4, null, !dbg !4503
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4504

if.then3:                                         ; preds = %if.then
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4505
  %6 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4507
  %7 = load %struct.Material**, %struct.Material*** %6, align 8, !dbg !4508
  %8 = bitcast %struct.Material** %7 to i8*, !dbg !4508
  call void %5(i8* %8), !dbg !4505
  %9 = load %struct.Material***, %struct.Material**** %matar, align 8, !dbg !4509
  store %struct.Material** null, %struct.Material*** %9, align 8, !dbg !4510
  br label %if.end, !dbg !4511

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load i8, i8* %update_data.addr, align 1, !dbg !4512
  %tobool4 = icmp ne i8 %10, 0, !dbg !4512
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !4514

if.then5:                                         ; preds = %if.end
  %11 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4515
  call void @material_data_index_clear_id(%struct.ID* %11), !dbg !4517
  br label %if.end6, !dbg !4518

if.end6:                                          ; preds = %if.then5, %if.end
  br label %if.end7, !dbg !4519

if.end7:                                          ; preds = %if.end6, %entry
  ret void, !dbg !4520
}

; Function Attrs: noinline nounwind uwtable
define internal void @material_data_index_clear_id(%struct.ID* %id) #0 !dbg !4521 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4524, metadata !DIExpression()), !dbg !4525
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4526
  %name = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 4, !dbg !4526
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4526
  %1 = bitcast i8* %arraydecay to i16*, !dbg !4526
  %2 = load i16, i16* %1, align 8, !dbg !4526
  %conv = sext i16 %2 to i32, !dbg !4526
  switch i32 %conv, label %sw.epilog [
    i32 17741, label %sw.bb
    i32 21827, label %sw.bb1
    i32 16973, label %sw.bb2
  ], !dbg !4527

sw.bb:                                            ; preds = %entry
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4528
  %4 = bitcast %struct.ID* %3 to %struct.Mesh*, !dbg !4530
  call void @BKE_mesh_material_index_clear(%struct.Mesh* %4), !dbg !4531
  br label %sw.epilog, !dbg !4532

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4533
  %6 = bitcast %struct.ID* %5 to %struct.Curve*, !dbg !4534
  call void @BKE_curve_material_index_clear(%struct.Curve* %6), !dbg !4535
  br label %sw.epilog, !dbg !4536

sw.bb2:                                           ; preds = %entry
  br label %sw.epilog, !dbg !4537

sw.epilog:                                        ; preds = %entry, %sw.bb2, %sw.bb1, %sw.bb
  ret void, !dbg !4538
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Material* @give_current_material(%struct.Object* %ob, i16 signext %act) #0 !dbg !4539 {
entry:
  %retval = alloca %struct.Material*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %act.addr = alloca i16, align 2
  %matarar = alloca %struct.Material***, align 8
  %ma = alloca %struct.Material*, align 8
  %totcolp = alloca i16*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4542, metadata !DIExpression()), !dbg !4543
  store i16 %act, i16* %act.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %act.addr, metadata !4544, metadata !DIExpression()), !dbg !4545
  call void @llvm.dbg.declare(metadata %struct.Material**** %matarar, metadata !4546, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !4548, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.declare(metadata i16** %totcolp, metadata !4550, metadata !DIExpression()), !dbg !4551
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4552
  %cmp = icmp eq %struct.Object* %0, null, !dbg !4554
  br i1 %cmp, label %if.then, label %if.end, !dbg !4555

if.then:                                          ; preds = %entry
  store %struct.Material* null, %struct.Material** %retval, align 8, !dbg !4556
  br label %return, !dbg !4556

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4557
  %call = call i16* @give_totcolp(%struct.Object* %1), !dbg !4558
  store i16* %call, i16** %totcolp, align 8, !dbg !4559
  %2 = load i16*, i16** %totcolp, align 8, !dbg !4560
  %cmp1 = icmp eq i16* %2, null, !dbg !4562
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4563

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4564
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 31, !dbg !4565
  %4 = load i32, i32* %totcol, align 8, !dbg !4565
  %cmp2 = icmp eq i32 %4, 0, !dbg !4566
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4567

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store %struct.Material* null, %struct.Material** %retval, align 8, !dbg !4568
  br label %return, !dbg !4568

if.end4:                                          ; preds = %lor.lhs.false
  %5 = load i16, i16* %act.addr, align 2, !dbg !4569
  %conv = sext i16 %5 to i32, !dbg !4569
  %cmp5 = icmp slt i32 %conv, 0, !dbg !4571
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !4572

if.then7:                                         ; preds = %if.end4
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0)), !dbg !4573
  br label %if.end9, !dbg !4575

if.end9:                                          ; preds = %if.then7, %if.end4
  %6 = load i16, i16* %act.addr, align 2, !dbg !4576
  %conv10 = sext i16 %6 to i32, !dbg !4576
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4578
  %totcol11 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 31, !dbg !4579
  %8 = load i32, i32* %totcol11, align 8, !dbg !4579
  %cmp12 = icmp sgt i32 %conv10, %8, !dbg !4580
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !4581

if.then14:                                        ; preds = %if.end9
  store %struct.Material* null, %struct.Material** %retval, align 8, !dbg !4582
  br label %return, !dbg !4582

if.else:                                          ; preds = %if.end9
  %9 = load i16, i16* %act.addr, align 2, !dbg !4583
  %conv15 = sext i16 %9 to i32, !dbg !4583
  %cmp16 = icmp sle i32 %conv15, 0, !dbg !4585
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !4586

if.then18:                                        ; preds = %if.else
  store %struct.Material* null, %struct.Material** %retval, align 8, !dbg !4587
  br label %return, !dbg !4587

if.end19:                                         ; preds = %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4588
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 30, !dbg !4590
  %11 = load i8*, i8** %matbits, align 8, !dbg !4590
  %tobool = icmp ne i8* %11, null, !dbg !4588
  br i1 %tobool, label %land.lhs.true, label %if.else30, !dbg !4591

land.lhs.true:                                    ; preds = %if.end20
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4592
  %matbits21 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 30, !dbg !4593
  %13 = load i8*, i8** %matbits21, align 8, !dbg !4593
  %14 = load i16, i16* %act.addr, align 2, !dbg !4594
  %conv22 = sext i16 %14 to i32, !dbg !4594
  %sub = sub nsw i32 %conv22, 1, !dbg !4595
  %idxprom = sext i32 %sub to i64, !dbg !4592
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 %idxprom, !dbg !4592
  %15 = load i8, i8* %arrayidx, align 1, !dbg !4592
  %conv23 = zext i8 %15 to i32, !dbg !4592
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !4592
  br i1 %tobool24, label %if.then25, label %if.else30, !dbg !4596

if.then25:                                        ; preds = %land.lhs.true
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4597
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 29, !dbg !4599
  %17 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !4599
  %18 = load i16, i16* %act.addr, align 2, !dbg !4600
  %conv26 = sext i16 %18 to i32, !dbg !4600
  %sub27 = sub nsw i32 %conv26, 1, !dbg !4601
  %idxprom28 = sext i32 %sub27 to i64, !dbg !4597
  %arrayidx29 = getelementptr inbounds %struct.Material*, %struct.Material** %17, i64 %idxprom28, !dbg !4597
  %19 = load %struct.Material*, %struct.Material** %arrayidx29, align 8, !dbg !4597
  store %struct.Material* %19, %struct.Material** %ma, align 8, !dbg !4602
  br label %if.end58, !dbg !4603

if.else30:                                        ; preds = %land.lhs.true, %if.end20
  %20 = load i16*, i16** %totcolp, align 8, !dbg !4604
  %21 = load i16, i16* %20, align 2, !dbg !4607
  %conv31 = sext i16 %21 to i32, !dbg !4607
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4608
  %totcol32 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 31, !dbg !4609
  %23 = load i32, i32* %totcol32, align 8, !dbg !4609
  %cmp33 = icmp slt i32 %conv31, %23, !dbg !4610
  br i1 %cmp33, label %if.then35, label %if.end38, !dbg !4611

if.then35:                                        ; preds = %if.else30
  %24 = load i16*, i16** %totcolp, align 8, !dbg !4612
  %25 = load i16, i16* %24, align 2, !dbg !4613
  %conv36 = sext i16 %25 to i32, !dbg !4613
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4614
  %totcol37 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 31, !dbg !4615
  store i32 %conv36, i32* %totcol37, align 8, !dbg !4616
  br label %if.end38, !dbg !4614

if.end38:                                         ; preds = %if.then35, %if.else30
  %27 = load i16, i16* %act.addr, align 2, !dbg !4617
  %conv39 = sext i16 %27 to i32, !dbg !4617
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4619
  %totcol40 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 31, !dbg !4620
  %29 = load i32, i32* %totcol40, align 8, !dbg !4620
  %cmp41 = icmp sgt i32 %conv39, %29, !dbg !4621
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !4622

if.then43:                                        ; preds = %if.end38
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4623
  %totcol44 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 31, !dbg !4624
  %31 = load i32, i32* %totcol44, align 8, !dbg !4624
  %conv45 = trunc i32 %31 to i16, !dbg !4623
  store i16 %conv45, i16* %act.addr, align 2, !dbg !4625
  br label %if.end46, !dbg !4626

if.end46:                                         ; preds = %if.then43, %if.end38
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4627
  %call47 = call %struct.Material*** @give_matarar(%struct.Object* %32), !dbg !4628
  store %struct.Material*** %call47, %struct.Material**** %matarar, align 8, !dbg !4629
  %33 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !4630
  %tobool48 = icmp ne %struct.Material*** %33, null, !dbg !4630
  br i1 %tobool48, label %land.lhs.true49, label %if.else56, !dbg !4632

land.lhs.true49:                                  ; preds = %if.end46
  %34 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !4633
  %35 = load %struct.Material**, %struct.Material*** %34, align 8, !dbg !4634
  %tobool50 = icmp ne %struct.Material** %35, null, !dbg !4634
  br i1 %tobool50, label %if.then51, label %if.else56, !dbg !4635

if.then51:                                        ; preds = %land.lhs.true49
  %36 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !4636
  %37 = load %struct.Material**, %struct.Material*** %36, align 8, !dbg !4637
  %38 = load i16, i16* %act.addr, align 2, !dbg !4638
  %conv52 = sext i16 %38 to i32, !dbg !4638
  %sub53 = sub nsw i32 %conv52, 1, !dbg !4639
  %idxprom54 = sext i32 %sub53 to i64, !dbg !4640
  %arrayidx55 = getelementptr inbounds %struct.Material*, %struct.Material** %37, i64 %idxprom54, !dbg !4640
  %39 = load %struct.Material*, %struct.Material** %arrayidx55, align 8, !dbg !4640
  store %struct.Material* %39, %struct.Material** %ma, align 8, !dbg !4641
  br label %if.end57, !dbg !4642

if.else56:                                        ; preds = %land.lhs.true49, %if.end46
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !4643
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %if.then51
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then25
  %40 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !4644
  store %struct.Material* %40, %struct.Material** %retval, align 8, !dbg !4645
  br label %return, !dbg !4645

return:                                           ; preds = %if.end58, %if.then18, %if.then14, %if.then3, %if.then
  %41 = load %struct.Material*, %struct.Material** %retval, align 8, !dbg !4646
  ret %struct.Material* %41, !dbg !4646
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ID* @material_from(%struct.Object* %ob, i16 signext %act) #0 !dbg !4647 {
entry:
  %retval = alloca %struct.ID*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %act.addr = alloca i16, align 2
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4650, metadata !DIExpression()), !dbg !4651
  store i16 %act, i16* %act.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %act.addr, metadata !4652, metadata !DIExpression()), !dbg !4653
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4654
  %cmp = icmp eq %struct.Object* %0, null, !dbg !4656
  br i1 %cmp, label %if.then, label %if.end, !dbg !4657

if.then:                                          ; preds = %entry
  store %struct.ID* null, %struct.ID** %retval, align 8, !dbg !4658
  br label %return, !dbg !4658

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4659
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 31, !dbg !4661
  %2 = load i32, i32* %totcol, align 8, !dbg !4661
  %cmp1 = icmp eq i32 %2, 0, !dbg !4662
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4663

if.then2:                                         ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4664
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !4665
  %4 = load i8*, i8** %data, align 8, !dbg !4665
  %5 = bitcast i8* %4 to %struct.ID*, !dbg !4664
  store %struct.ID* %5, %struct.ID** %retval, align 8, !dbg !4666
  br label %return, !dbg !4666

if.end3:                                          ; preds = %if.end
  %6 = load i16, i16* %act.addr, align 2, !dbg !4667
  %conv = sext i16 %6 to i32, !dbg !4667
  %cmp4 = icmp eq i32 %conv, 0, !dbg !4669
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !4670

if.then6:                                         ; preds = %if.end3
  store i16 1, i16* %act.addr, align 2, !dbg !4671
  br label %if.end7, !dbg !4672

if.end7:                                          ; preds = %if.then6, %if.end3
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4673
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 30, !dbg !4675
  %8 = load i8*, i8** %matbits, align 8, !dbg !4675
  %9 = load i16, i16* %act.addr, align 2, !dbg !4676
  %conv8 = sext i16 %9 to i32, !dbg !4676
  %sub = sub nsw i32 %conv8, 1, !dbg !4677
  %idxprom = sext i32 %sub to i64, !dbg !4673
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !4673
  %10 = load i8, i8* %arrayidx, align 1, !dbg !4673
  %tobool = icmp ne i8 %10, 0, !dbg !4673
  br i1 %tobool, label %if.then9, label %if.else, !dbg !4678

if.then9:                                         ; preds = %if.end7
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4679
  %12 = bitcast %struct.Object* %11 to %struct.ID*, !dbg !4680
  store %struct.ID* %12, %struct.ID** %retval, align 8, !dbg !4681
  br label %return, !dbg !4681

if.else:                                          ; preds = %if.end7
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4682
  %data10 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 19, !dbg !4683
  %14 = load i8*, i8** %data10, align 8, !dbg !4683
  %15 = bitcast i8* %14 to %struct.ID*, !dbg !4682
  store %struct.ID* %15, %struct.ID** %retval, align 8, !dbg !4684
  br label %return, !dbg !4684

return:                                           ; preds = %if.else, %if.then9, %if.then2, %if.then
  %16 = load %struct.ID*, %struct.ID** %retval, align 8, !dbg !4685
  ret %struct.ID* %16, !dbg !4685
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Material* @give_node_material(%struct.Material* %ma) #0 !dbg !4686 {
entry:
  %retval = alloca %struct.Material*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !4687, metadata !DIExpression()), !dbg !4688
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !4689
  %tobool = icmp ne %struct.Material* %0, null, !dbg !4689
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !4691

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !4692
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 77, !dbg !4693
  %2 = load i8, i8* %use_nodes, align 1, !dbg !4693
  %conv = zext i8 %2 to i32, !dbg !4692
  %tobool1 = icmp ne i32 %conv, 0, !dbg !4692
  br i1 %tobool1, label %land.lhs.true2, label %if.end7, !dbg !4694

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !4695
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 103, !dbg !4696
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !4696
  %tobool3 = icmp ne %struct.bNodeTree* %4, null, !dbg !4695
  br i1 %tobool3, label %if.then, label %if.end7, !dbg !4697

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !4698, metadata !DIExpression()), !dbg !4700
  %5 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !4701
  %nodetree4 = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 103, !dbg !4702
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree4, align 8, !dbg !4702
  %call = call %struct.bNode* @nodeGetActiveID(%struct.bNodeTree* %6, i16 signext 16717), !dbg !4703
  store %struct.bNode* %call, %struct.bNode** %node, align 8, !dbg !4700
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4704
  %tobool5 = icmp ne %struct.bNode* %7, null, !dbg !4704
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !4706

if.then6:                                         ; preds = %if.then
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4707
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 20, !dbg !4708
  %9 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4708
  %10 = bitcast %struct.ID* %9 to %struct.Material*, !dbg !4709
  store %struct.Material* %10, %struct.Material** %retval, align 8, !dbg !4710
  br label %return, !dbg !4710

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !4711

if.end7:                                          ; preds = %if.end, %land.lhs.true2, %land.lhs.true, %entry
  store %struct.Material* null, %struct.Material** %retval, align 8, !dbg !4712
  br label %return, !dbg !4712

return:                                           ; preds = %if.end7, %if.then6
  %11 = load %struct.Material*, %struct.Material** %retval, align 8, !dbg !4713
  ret %struct.Material* %11, !dbg !4713
}

declare dso_local %struct.bNode* @nodeGetActiveID(%struct.bNodeTree*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_material_resize_object(%struct.Object* %ob, i16 signext %totcol, i8 zeroext %do_id_user) #0 !dbg !4714 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %totcol.addr = alloca i16, align 2
  %do_id_user.addr = alloca i8, align 1
  %newmatar = alloca %struct.Material**, align 8
  %newmatbits = alloca i8*, align 8
  %i = alloca i16, align 2
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4717, metadata !DIExpression()), !dbg !4718
  store i16 %totcol, i16* %totcol.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %totcol.addr, metadata !4719, metadata !DIExpression()), !dbg !4720
  store i8 %do_id_user, i8* %do_id_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_id_user.addr, metadata !4721, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.declare(metadata %struct.Material*** %newmatar, metadata !4723, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.declare(metadata i8** %newmatbits, metadata !4725, metadata !DIExpression()), !dbg !4726
  %0 = load i8, i8* %do_id_user.addr, align 1, !dbg !4727
  %conv = zext i8 %0 to i32, !dbg !4727
  %tobool = icmp ne i32 %conv, 0, !dbg !4727
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4729

land.lhs.true:                                    ; preds = %entry
  %1 = load i16, i16* %totcol.addr, align 2, !dbg !4730
  %conv1 = sext i16 %1 to i32, !dbg !4730
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4731
  %totcol2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 31, !dbg !4732
  %3 = load i32, i32* %totcol2, align 8, !dbg !4732
  %cmp = icmp slt i32 %conv1, %3, !dbg !4733
  br i1 %cmp, label %if.then, label %if.end, !dbg !4734

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i16* %i, metadata !4735, metadata !DIExpression()), !dbg !4737
  %4 = load i16, i16* %totcol.addr, align 2, !dbg !4738
  store i16 %4, i16* %i, align 2, !dbg !4740
  br label %for.cond, !dbg !4741

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i16, i16* %i, align 2, !dbg !4742
  %conv4 = sext i16 %5 to i32, !dbg !4742
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4744
  %totcol5 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 31, !dbg !4745
  %7 = load i32, i32* %totcol5, align 8, !dbg !4745
  %cmp6 = icmp slt i32 %conv4, %7, !dbg !4746
  br i1 %cmp6, label %for.body, label %for.end, !dbg !4747

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4748
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 29, !dbg !4750
  %9 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !4750
  %10 = load i16, i16* %i, align 2, !dbg !4751
  %idxprom = sext i16 %10 to i64, !dbg !4748
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %9, i64 %idxprom, !dbg !4748
  %11 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !4748
  %12 = bitcast %struct.Material* %11 to %struct.ID*, !dbg !4752
  call void @id_us_min(%struct.ID* %12), !dbg !4753
  br label %for.inc, !dbg !4754

for.inc:                                          ; preds = %for.body
  %13 = load i16, i16* %i, align 2, !dbg !4755
  %inc = add i16 %13, 1, !dbg !4755
  store i16 %inc, i16* %i, align 2, !dbg !4755
  br label %for.cond, !dbg !4756, !llvm.loop !4757

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !4759

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  %14 = load i16, i16* %totcol.addr, align 2, !dbg !4760
  %conv8 = sext i16 %14 to i32, !dbg !4760
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !4762
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !4763

if.then11:                                        ; preds = %if.end
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4764
  %totcol12 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 31, !dbg !4767
  %16 = load i32, i32* %totcol12, align 8, !dbg !4767
  %tobool13 = icmp ne i32 %16, 0, !dbg !4764
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !4768

if.then14:                                        ; preds = %if.then11
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4769
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4771
  %mat15 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 29, !dbg !4772
  %19 = load %struct.Material**, %struct.Material*** %mat15, align 8, !dbg !4772
  %20 = bitcast %struct.Material** %19 to i8*, !dbg !4771
  call void %17(i8* %20), !dbg !4769
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4773
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4774
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 30, !dbg !4775
  %23 = load i8*, i8** %matbits, align 8, !dbg !4775
  call void %21(i8* %23), !dbg !4773
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4776
  %mat16 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 29, !dbg !4777
  store %struct.Material** null, %struct.Material*** %mat16, align 8, !dbg !4778
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4779
  %matbits17 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 30, !dbg !4780
  store i8* null, i8** %matbits17, align 8, !dbg !4781
  br label %if.end18, !dbg !4782

if.end18:                                         ; preds = %if.then14, %if.then11
  br label %if.end45, !dbg !4783

if.else:                                          ; preds = %if.end
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4784
  %totcol19 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 31, !dbg !4786
  %27 = load i32, i32* %totcol19, align 8, !dbg !4786
  %28 = load i16, i16* %totcol.addr, align 2, !dbg !4787
  %conv20 = sext i16 %28 to i32, !dbg !4787
  %cmp21 = icmp slt i32 %27, %conv20, !dbg !4788
  br i1 %cmp21, label %if.then23, label %if.end44, !dbg !4789

if.then23:                                        ; preds = %if.else
  %29 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4790
  %30 = load i16, i16* %totcol.addr, align 2, !dbg !4792
  %conv24 = sext i16 %30 to i64, !dbg !4792
  %mul = mul i64 8, %conv24, !dbg !4793
  %call = call i8* %29(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)), !dbg !4790
  %31 = bitcast i8* %call to %struct.Material**, !dbg !4790
  store %struct.Material** %31, %struct.Material*** %newmatar, align 8, !dbg !4794
  %32 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4795
  %33 = load i16, i16* %totcol.addr, align 2, !dbg !4796
  %conv25 = sext i16 %33 to i64, !dbg !4796
  %mul26 = mul i64 1, %conv25, !dbg !4797
  %call27 = call i8* %32(i64 %mul26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)), !dbg !4795
  store i8* %call27, i8** %newmatbits, align 8, !dbg !4798
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4799
  %totcol28 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 31, !dbg !4801
  %35 = load i32, i32* %totcol28, align 8, !dbg !4801
  %tobool29 = icmp ne i32 %35, 0, !dbg !4799
  br i1 %tobool29, label %if.then30, label %if.end41, !dbg !4802

if.then30:                                        ; preds = %if.then23
  %36 = load %struct.Material**, %struct.Material*** %newmatar, align 8, !dbg !4803
  %37 = bitcast %struct.Material** %36 to i8*, !dbg !4805
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4806
  %mat31 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 29, !dbg !4807
  %39 = load %struct.Material**, %struct.Material*** %mat31, align 8, !dbg !4807
  %40 = bitcast %struct.Material** %39 to i8*, !dbg !4805
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4808
  %totcol32 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 31, !dbg !4809
  %42 = load i32, i32* %totcol32, align 8, !dbg !4809
  %conv33 = sext i32 %42 to i64, !dbg !4808
  %mul34 = mul i64 8, %conv33, !dbg !4810
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %40, i64 %mul34, i1 false), !dbg !4805
  %43 = load i8*, i8** %newmatbits, align 8, !dbg !4811
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4812
  %matbits35 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 30, !dbg !4813
  %45 = load i8*, i8** %matbits35, align 8, !dbg !4813
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4814
  %totcol36 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 31, !dbg !4815
  %47 = load i32, i32* %totcol36, align 8, !dbg !4815
  %conv37 = sext i32 %47 to i64, !dbg !4814
  %mul38 = mul i64 1, %conv37, !dbg !4816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %45, i64 %mul38, i1 false), !dbg !4817
  %48 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4818
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4819
  %mat39 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 29, !dbg !4820
  %50 = load %struct.Material**, %struct.Material*** %mat39, align 8, !dbg !4820
  %51 = bitcast %struct.Material** %50 to i8*, !dbg !4819
  call void %48(i8* %51), !dbg !4818
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4821
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4822
  %matbits40 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 30, !dbg !4823
  %54 = load i8*, i8** %matbits40, align 8, !dbg !4823
  call void %52(i8* %54), !dbg !4821
  br label %if.end41, !dbg !4824

if.end41:                                         ; preds = %if.then30, %if.then23
  %55 = load %struct.Material**, %struct.Material*** %newmatar, align 8, !dbg !4825
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4826
  %mat42 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 29, !dbg !4827
  store %struct.Material** %55, %struct.Material*** %mat42, align 8, !dbg !4828
  %57 = load i8*, i8** %newmatbits, align 8, !dbg !4829
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4830
  %matbits43 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 30, !dbg !4831
  store i8* %57, i8** %matbits43, align 8, !dbg !4832
  br label %if.end44, !dbg !4833

if.end44:                                         ; preds = %if.end41, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end18
  %59 = load i16, i16* %totcol.addr, align 2, !dbg !4834
  %conv46 = sext i16 %59 to i32, !dbg !4834
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4835
  %totcol47 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 31, !dbg !4836
  store i32 %conv46, i32* %totcol47, align 8, !dbg !4837
  %61 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4838
  %totcol48 = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 31, !dbg !4840
  %62 = load i32, i32* %totcol48, align 8, !dbg !4840
  %tobool49 = icmp ne i32 %62, 0, !dbg !4838
  br i1 %tobool49, label %land.lhs.true50, label %if.end55, !dbg !4841

land.lhs.true50:                                  ; preds = %if.end45
  %63 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4842
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %63, i32 0, i32 32, !dbg !4843
  %64 = load i32, i32* %actcol, align 4, !dbg !4843
  %cmp51 = icmp eq i32 %64, 0, !dbg !4844
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !4845

if.then53:                                        ; preds = %land.lhs.true50
  %65 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4846
  %actcol54 = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 32, !dbg !4847
  store i32 1, i32* %actcol54, align 4, !dbg !4848
  br label %if.end55, !dbg !4846

if.end55:                                         ; preds = %if.then53, %land.lhs.true50, %if.end45
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4849
  %actcol56 = getelementptr inbounds %struct.Object, %struct.Object* %66, i32 0, i32 32, !dbg !4851
  %67 = load i32, i32* %actcol56, align 4, !dbg !4851
  %68 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4852
  %totcol57 = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 31, !dbg !4853
  %69 = load i32, i32* %totcol57, align 8, !dbg !4853
  %cmp58 = icmp sgt i32 %67, %69, !dbg !4854
  br i1 %cmp58, label %if.then60, label %if.end63, !dbg !4855

if.then60:                                        ; preds = %if.end55
  %70 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4856
  %totcol61 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 31, !dbg !4857
  %71 = load i32, i32* %totcol61, align 8, !dbg !4857
  %72 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4858
  %actcol62 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 32, !dbg !4859
  store i32 %71, i32* %actcol62, align 4, !dbg !4860
  br label %if.end63, !dbg !4858

if.end63:                                         ; preds = %if.then60, %if.end55
  ret void, !dbg !4861
}

declare dso_local void @BKE_main_lock(%struct.Main*) #2

declare dso_local void @BKE_main_unlock(%struct.Main*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @assign_material_id(%struct.ID* %id, %struct.Material* %ma, i16 signext %act) #0 !dbg !4862 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %act.addr = alloca i16, align 2
  %mao = alloca %struct.Material*, align 8
  %matar = alloca %struct.Material**, align 8
  %matarar = alloca %struct.Material***, align 8
  %totcolp = alloca i16*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4865, metadata !DIExpression()), !dbg !4866
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !4867, metadata !DIExpression()), !dbg !4868
  store i16 %act, i16* %act.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %act.addr, metadata !4869, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.declare(metadata %struct.Material** %mao, metadata !4871, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.declare(metadata %struct.Material*** %matar, metadata !4873, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.declare(metadata %struct.Material**** %matarar, metadata !4875, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.declare(metadata i16** %totcolp, metadata !4877, metadata !DIExpression()), !dbg !4878
  %0 = load i16, i16* %act.addr, align 2, !dbg !4879
  %conv = sext i16 %0 to i32, !dbg !4879
  %cmp = icmp sgt i32 %conv, 32766, !dbg !4881
  br i1 %cmp, label %if.then, label %if.end, !dbg !4882

if.then:                                          ; preds = %entry
  br label %return, !dbg !4883

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %act.addr, align 2, !dbg !4884
  %conv2 = sext i16 %1 to i32, !dbg !4884
  %cmp3 = icmp slt i32 %conv2, 1, !dbg !4886
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !4887

if.then5:                                         ; preds = %if.end
  store i16 1, i16* %act.addr, align 2, !dbg !4888
  br label %if.end6, !dbg !4889

if.end6:                                          ; preds = %if.then5, %if.end
  %2 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4890
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %2, i32 0, i32 3, !dbg !4892
  %3 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !4892
  %tobool = icmp ne %struct.Library* %3, null, !dbg !4890
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !4893

if.then7:                                         ; preds = %if.end6
  br label %return, !dbg !4894

if.end8:                                          ; preds = %if.end6
  %4 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4895
  %call = call i16* @give_totcolp_id(%struct.ID* %4), !dbg !4896
  store i16* %call, i16** %totcolp, align 8, !dbg !4897
  %5 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4898
  %call9 = call %struct.Material*** @give_matarar_id(%struct.ID* %5), !dbg !4899
  store %struct.Material*** %call9, %struct.Material**** %matarar, align 8, !dbg !4900
  %6 = load i16*, i16** %totcolp, align 8, !dbg !4901
  %cmp10 = icmp eq i16* %6, null, !dbg !4903
  br i1 %cmp10, label %if.then14, label %lor.lhs.false, !dbg !4904

lor.lhs.false:                                    ; preds = %if.end8
  %7 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !4905
  %cmp12 = icmp eq %struct.Material*** %7, null, !dbg !4906
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !4907

if.then14:                                        ; preds = %lor.lhs.false, %if.end8
  br label %return, !dbg !4908

if.end15:                                         ; preds = %lor.lhs.false
  %8 = load i16, i16* %act.addr, align 2, !dbg !4909
  %conv16 = sext i16 %8 to i32, !dbg !4909
  %9 = load i16*, i16** %totcolp, align 8, !dbg !4911
  %10 = load i16, i16* %9, align 2, !dbg !4912
  %conv17 = sext i16 %10 to i32, !dbg !4912
  %cmp18 = icmp sgt i32 %conv16, %conv17, !dbg !4913
  br i1 %cmp18, label %if.then20, label %if.end28, !dbg !4914

if.then20:                                        ; preds = %if.end15
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4915
  %12 = load i16, i16* %act.addr, align 2, !dbg !4917
  %conv21 = sext i16 %12 to i64, !dbg !4917
  %mul = mul i64 8, %conv21, !dbg !4918
  %call22 = call i8* %11(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)), !dbg !4915
  %13 = bitcast i8* %call22 to %struct.Material**, !dbg !4915
  store %struct.Material** %13, %struct.Material*** %matar, align 8, !dbg !4919
  %14 = load i16*, i16** %totcolp, align 8, !dbg !4920
  %15 = load i16, i16* %14, align 2, !dbg !4922
  %tobool23 = icmp ne i16 %15, 0, !dbg !4922
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !4923

if.then24:                                        ; preds = %if.then20
  %16 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !4924
  %17 = bitcast %struct.Material** %16 to i8*, !dbg !4926
  %18 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !4927
  %19 = load %struct.Material**, %struct.Material*** %18, align 8, !dbg !4928
  %20 = bitcast %struct.Material** %19 to i8*, !dbg !4926
  %21 = load i16*, i16** %totcolp, align 8, !dbg !4929
  %22 = load i16, i16* %21, align 2, !dbg !4930
  %conv25 = sext i16 %22 to i64, !dbg !4931
  %mul26 = mul i64 8, %conv25, !dbg !4932
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %20, i64 %mul26, i1 false), !dbg !4926
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4933
  %24 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !4934
  %25 = load %struct.Material**, %struct.Material*** %24, align 8, !dbg !4935
  %26 = bitcast %struct.Material** %25 to i8*, !dbg !4935
  call void %23(i8* %26), !dbg !4933
  br label %if.end27, !dbg !4936

if.end27:                                         ; preds = %if.then24, %if.then20
  %27 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !4937
  %28 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !4938
  store %struct.Material** %27, %struct.Material*** %28, align 8, !dbg !4939
  %29 = load i16, i16* %act.addr, align 2, !dbg !4940
  %30 = load i16*, i16** %totcolp, align 8, !dbg !4941
  store i16 %29, i16* %30, align 2, !dbg !4942
  br label %if.end28, !dbg !4943

if.end28:                                         ; preds = %if.end27, %if.end15
  %31 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !4944
  %32 = load %struct.Material**, %struct.Material*** %31, align 8, !dbg !4945
  %33 = load i16, i16* %act.addr, align 2, !dbg !4946
  %conv29 = sext i16 %33 to i32, !dbg !4946
  %sub = sub nsw i32 %conv29, 1, !dbg !4947
  %idxprom = sext i32 %sub to i64, !dbg !4948
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %32, i64 %idxprom, !dbg !4948
  %34 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !4948
  store %struct.Material* %34, %struct.Material** %mao, align 8, !dbg !4949
  %35 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !4950
  %tobool30 = icmp ne %struct.Material* %35, null, !dbg !4950
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !4952

if.then31:                                        ; preds = %if.end28
  %36 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !4953
  %id32 = getelementptr inbounds %struct.Material, %struct.Material* %36, i32 0, i32 0, !dbg !4954
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id32, i32 0, i32 6, !dbg !4955
  %37 = load i32, i32* %us, align 4, !dbg !4956
  %dec = add nsw i32 %37, -1, !dbg !4956
  store i32 %dec, i32* %us, align 4, !dbg !4956
  br label %if.end33, !dbg !4953

if.end33:                                         ; preds = %if.then31, %if.end28
  %38 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !4957
  %39 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !4958
  %40 = load %struct.Material**, %struct.Material*** %39, align 8, !dbg !4959
  %41 = load i16, i16* %act.addr, align 2, !dbg !4960
  %conv34 = sext i16 %41 to i32, !dbg !4960
  %sub35 = sub nsw i32 %conv34, 1, !dbg !4961
  %idxprom36 = sext i32 %sub35 to i64, !dbg !4962
  %arrayidx37 = getelementptr inbounds %struct.Material*, %struct.Material** %40, i64 %idxprom36, !dbg !4962
  store %struct.Material* %38, %struct.Material** %arrayidx37, align 8, !dbg !4963
  %42 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !4964
  %tobool38 = icmp ne %struct.Material* %42, null, !dbg !4964
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !4966

if.then39:                                        ; preds = %if.end33
  %43 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !4967
  %44 = bitcast %struct.Material* %43 to %struct.ID*, !dbg !4968
  call void @id_us_plus(%struct.ID* %44), !dbg !4969
  br label %if.end40, !dbg !4969

if.end40:                                         ; preds = %if.then39, %if.end33
  %45 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4970
  %46 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4971
  call void @test_object_materials(%struct.Main* %45, %struct.ID* %46), !dbg !4972
  br label %return, !dbg !4973

return:                                           ; preds = %if.end40, %if.then14, %if.then7, %if.then
  ret void, !dbg !4973
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @assign_material(%struct.Object* %ob, %struct.Material* %ma, i16 signext %act, i32 %assign_type) #0 !dbg !4974 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %act.addr = alloca i16, align 2
  %assign_type.addr = alloca i32, align 4
  %mao = alloca %struct.Material*, align 8
  %matar = alloca %struct.Material**, align 8
  %matarar = alloca %struct.Material***, align 8
  %totcolp = alloca i16*, align 8
  %bit = alloca i8, align 1
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4977, metadata !DIExpression()), !dbg !4978
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !4979, metadata !DIExpression()), !dbg !4980
  store i16 %act, i16* %act.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %act.addr, metadata !4981, metadata !DIExpression()), !dbg !4982
  store i32 %assign_type, i32* %assign_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %assign_type.addr, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata %struct.Material** %mao, metadata !4985, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.declare(metadata %struct.Material*** %matar, metadata !4987, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.declare(metadata %struct.Material**** %matarar, metadata !4989, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.declare(metadata i16** %totcolp, metadata !4991, metadata !DIExpression()), !dbg !4992
  call void @llvm.dbg.declare(metadata i8* %bit, metadata !4993, metadata !DIExpression()), !dbg !4994
  store i8 0, i8* %bit, align 1, !dbg !4994
  %0 = load i16, i16* %act.addr, align 2, !dbg !4995
  %conv = sext i16 %0 to i32, !dbg !4995
  %cmp = icmp sgt i32 %conv, 32766, !dbg !4997
  br i1 %cmp, label %if.then, label %if.end, !dbg !4998

if.then:                                          ; preds = %entry
  br label %return, !dbg !4999

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %act.addr, align 2, !dbg !5000
  %conv2 = sext i16 %1 to i32, !dbg !5000
  %cmp3 = icmp slt i32 %conv2, 1, !dbg !5002
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !5003

if.then5:                                         ; preds = %if.end
  store i16 1, i16* %act.addr, align 2, !dbg !5004
  br label %if.end6, !dbg !5005

if.end6:                                          ; preds = %if.then5, %if.end
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5006
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !5008
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !5009
  %3 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !5009
  %tobool = icmp ne %struct.Library* %3, null, !dbg !5006
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !5010

if.then7:                                         ; preds = %if.end6
  br label %return, !dbg !5011

if.end8:                                          ; preds = %if.end6
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5012
  %call = call i16* @give_totcolp(%struct.Object* %4), !dbg !5013
  store i16* %call, i16** %totcolp, align 8, !dbg !5014
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5015
  %call9 = call %struct.Material*** @give_matarar(%struct.Object* %5), !dbg !5016
  store %struct.Material*** %call9, %struct.Material**** %matarar, align 8, !dbg !5017
  %6 = load i16*, i16** %totcolp, align 8, !dbg !5018
  %cmp10 = icmp eq i16* %6, null, !dbg !5020
  br i1 %cmp10, label %if.then14, label %lor.lhs.false, !dbg !5021

lor.lhs.false:                                    ; preds = %if.end8
  %7 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5022
  %cmp12 = icmp eq %struct.Material*** %7, null, !dbg !5023
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !5024

if.then14:                                        ; preds = %lor.lhs.false, %if.end8
  br label %return, !dbg !5025

if.end15:                                         ; preds = %lor.lhs.false
  %8 = load i16, i16* %act.addr, align 2, !dbg !5026
  %conv16 = sext i16 %8 to i32, !dbg !5026
  %9 = load i16*, i16** %totcolp, align 8, !dbg !5028
  %10 = load i16, i16* %9, align 2, !dbg !5029
  %conv17 = sext i16 %10 to i32, !dbg !5029
  %cmp18 = icmp sgt i32 %conv16, %conv17, !dbg !5030
  br i1 %cmp18, label %if.then20, label %if.end28, !dbg !5031

if.then20:                                        ; preds = %if.end15
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5032
  %12 = load i16, i16* %act.addr, align 2, !dbg !5034
  %conv21 = sext i16 %12 to i64, !dbg !5034
  %mul = mul i64 8, %conv21, !dbg !5035
  %call22 = call i8* %11(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)), !dbg !5032
  %13 = bitcast i8* %call22 to %struct.Material**, !dbg !5032
  store %struct.Material** %13, %struct.Material*** %matar, align 8, !dbg !5036
  %14 = load i16*, i16** %totcolp, align 8, !dbg !5037
  %15 = load i16, i16* %14, align 2, !dbg !5039
  %tobool23 = icmp ne i16 %15, 0, !dbg !5039
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !5040

if.then24:                                        ; preds = %if.then20
  %16 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !5041
  %17 = bitcast %struct.Material** %16 to i8*, !dbg !5043
  %18 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5044
  %19 = load %struct.Material**, %struct.Material*** %18, align 8, !dbg !5045
  %20 = bitcast %struct.Material** %19 to i8*, !dbg !5043
  %21 = load i16*, i16** %totcolp, align 8, !dbg !5046
  %22 = load i16, i16* %21, align 2, !dbg !5047
  %conv25 = sext i16 %22 to i64, !dbg !5048
  %mul26 = mul i64 8, %conv25, !dbg !5049
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %20, i64 %mul26, i1 false), !dbg !5043
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5050
  %24 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5051
  %25 = load %struct.Material**, %struct.Material*** %24, align 8, !dbg !5052
  %26 = bitcast %struct.Material** %25 to i8*, !dbg !5052
  call void %23(i8* %26), !dbg !5050
  br label %if.end27, !dbg !5053

if.end27:                                         ; preds = %if.then24, %if.then20
  %27 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !5054
  %28 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5055
  store %struct.Material** %27, %struct.Material*** %28, align 8, !dbg !5056
  %29 = load i16, i16* %act.addr, align 2, !dbg !5057
  %30 = load i16*, i16** %totcolp, align 8, !dbg !5058
  store i16 %29, i16* %30, align 2, !dbg !5059
  br label %if.end28, !dbg !5060

if.end28:                                         ; preds = %if.end27, %if.end15
  %31 = load i32, i32* %assign_type.addr, align 4, !dbg !5061
  %cmp29 = icmp eq i32 %31, 0, !dbg !5063
  br i1 %cmp29, label %land.lhs.true, label %if.else, !dbg !5064

land.lhs.true:                                    ; preds = %if.end28
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5065
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 31, !dbg !5066
  %33 = load i32, i32* %totcol, align 8, !dbg !5066
  %tobool31 = icmp ne i32 %33, 0, !dbg !5065
  br i1 %tobool31, label %land.lhs.true32, label %if.else, !dbg !5067

land.lhs.true32:                                  ; preds = %land.lhs.true
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5068
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 32, !dbg !5069
  %35 = load i32, i32* %actcol, align 4, !dbg !5069
  %tobool33 = icmp ne i32 %35, 0, !dbg !5068
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !5070

if.then34:                                        ; preds = %land.lhs.true32
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5071
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 30, !dbg !5073
  %37 = load i8*, i8** %matbits, align 8, !dbg !5073
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5074
  %actcol35 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 32, !dbg !5075
  %39 = load i32, i32* %actcol35, align 4, !dbg !5075
  %sub = sub nsw i32 %39, 1, !dbg !5076
  %idxprom = sext i32 %sub to i64, !dbg !5071
  %arrayidx = getelementptr inbounds i8, i8* %37, i64 %idxprom, !dbg !5071
  %40 = load i8, i8* %arrayidx, align 1, !dbg !5071
  store i8 %40, i8* %bit, align 1, !dbg !5077
  br label %if.end40, !dbg !5078

if.else:                                          ; preds = %land.lhs.true32, %land.lhs.true, %if.end28
  %41 = load i32, i32* %assign_type.addr, align 4, !dbg !5079
  switch i32 %41, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb36
    i32 0, label %sw.bb37
  ], !dbg !5081

sw.bb:                                            ; preds = %if.else
  store i8 0, i8* %bit, align 1, !dbg !5082
  br label %sw.epilog, !dbg !5084

sw.bb36:                                          ; preds = %if.else
  store i8 1, i8* %bit, align 1, !dbg !5085
  br label %sw.epilog, !dbg !5086

sw.bb37:                                          ; preds = %if.else
  br label %sw.default, !dbg !5086

sw.default:                                       ; preds = %if.else, %sw.bb37
  %42 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !5087
  %and = and i32 %42, 256, !dbg !5088
  %tobool38 = icmp ne i32 %and, 0, !dbg !5089
  %43 = zext i1 %tobool38 to i64, !dbg !5089
  %cond = select i1 %tobool38, i32 1, i32 0, !dbg !5089
  %conv39 = trunc i32 %cond to i8, !dbg !5089
  store i8 %conv39, i8* %bit, align 1, !dbg !5090
  br label %sw.epilog, !dbg !5091

sw.epilog:                                        ; preds = %sw.default, %sw.bb36, %sw.bb
  br label %if.end40

if.end40:                                         ; preds = %sw.epilog, %if.then34
  %44 = load i16, i16* %act.addr, align 2, !dbg !5092
  %conv41 = sext i16 %44 to i32, !dbg !5092
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5094
  %totcol42 = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 31, !dbg !5095
  %46 = load i32, i32* %totcol42, align 8, !dbg !5095
  %cmp43 = icmp sgt i32 %conv41, %46, !dbg !5096
  br i1 %cmp43, label %if.then45, label %if.end57, !dbg !5097

if.then45:                                        ; preds = %if.end40
  %47 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_recallocN_id, align 8, !dbg !5098
  %48 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5100
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 29, !dbg !5101
  %49 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !5101
  %50 = bitcast %struct.Material** %49 to i8*, !dbg !5100
  %51 = load i16, i16* %act.addr, align 2, !dbg !5102
  %conv46 = sext i16 %51 to i64, !dbg !5102
  %mul47 = mul i64 8, %conv46, !dbg !5103
  %call48 = call i8* %47(i8* %50, i64 %mul47, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)), !dbg !5098
  %52 = bitcast i8* %call48 to %struct.Material**, !dbg !5098
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5104
  %mat49 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 29, !dbg !5105
  store %struct.Material** %52, %struct.Material*** %mat49, align 8, !dbg !5106
  %54 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_recallocN_id, align 8, !dbg !5107
  %55 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5108
  %matbits50 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 30, !dbg !5109
  %56 = load i8*, i8** %matbits50, align 8, !dbg !5109
  %57 = load i16, i16* %act.addr, align 2, !dbg !5110
  %conv51 = sext i16 %57 to i64, !dbg !5110
  %mul52 = mul i64 1, %conv51, !dbg !5111
  %call53 = call i8* %54(i8* %56, i64 %mul52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)), !dbg !5107
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5112
  %matbits54 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 30, !dbg !5113
  store i8* %call53, i8** %matbits54, align 8, !dbg !5114
  %59 = load i16, i16* %act.addr, align 2, !dbg !5115
  %conv55 = sext i16 %59 to i32, !dbg !5115
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5116
  %totcol56 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 31, !dbg !5117
  store i32 %conv55, i32* %totcol56, align 8, !dbg !5118
  br label %if.end57, !dbg !5119

if.end57:                                         ; preds = %if.then45, %if.end40
  %61 = load i8, i8* %bit, align 1, !dbg !5120
  %62 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5121
  %matbits58 = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 30, !dbg !5122
  %63 = load i8*, i8** %matbits58, align 8, !dbg !5122
  %64 = load i16, i16* %act.addr, align 2, !dbg !5123
  %conv59 = sext i16 %64 to i32, !dbg !5123
  %sub60 = sub nsw i32 %conv59, 1, !dbg !5124
  %idxprom61 = sext i32 %sub60 to i64, !dbg !5121
  %arrayidx62 = getelementptr inbounds i8, i8* %63, i64 %idxprom61, !dbg !5121
  store i8 %61, i8* %arrayidx62, align 1, !dbg !5125
  %65 = load i8, i8* %bit, align 1, !dbg !5126
  %conv63 = zext i8 %65 to i32, !dbg !5126
  %cmp64 = icmp eq i32 %conv63, 1, !dbg !5128
  br i1 %cmp64, label %if.then66, label %if.else81, !dbg !5129

if.then66:                                        ; preds = %if.end57
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5130
  %mat67 = getelementptr inbounds %struct.Object, %struct.Object* %66, i32 0, i32 29, !dbg !5132
  %67 = load %struct.Material**, %struct.Material*** %mat67, align 8, !dbg !5132
  %68 = load i16, i16* %act.addr, align 2, !dbg !5133
  %conv68 = sext i16 %68 to i32, !dbg !5133
  %sub69 = sub nsw i32 %conv68, 1, !dbg !5134
  %idxprom70 = sext i32 %sub69 to i64, !dbg !5130
  %arrayidx71 = getelementptr inbounds %struct.Material*, %struct.Material** %67, i64 %idxprom70, !dbg !5130
  %69 = load %struct.Material*, %struct.Material** %arrayidx71, align 8, !dbg !5130
  store %struct.Material* %69, %struct.Material** %mao, align 8, !dbg !5135
  %70 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !5136
  %tobool72 = icmp ne %struct.Material* %70, null, !dbg !5136
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !5138

if.then73:                                        ; preds = %if.then66
  %71 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !5139
  %id74 = getelementptr inbounds %struct.Material, %struct.Material* %71, i32 0, i32 0, !dbg !5140
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id74, i32 0, i32 6, !dbg !5141
  %72 = load i32, i32* %us, align 4, !dbg !5142
  %dec = add nsw i32 %72, -1, !dbg !5142
  store i32 %dec, i32* %us, align 4, !dbg !5142
  br label %if.end75, !dbg !5139

if.end75:                                         ; preds = %if.then73, %if.then66
  %73 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5143
  %74 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5144
  %mat76 = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 29, !dbg !5145
  %75 = load %struct.Material**, %struct.Material*** %mat76, align 8, !dbg !5145
  %76 = load i16, i16* %act.addr, align 2, !dbg !5146
  %conv77 = sext i16 %76 to i32, !dbg !5146
  %sub78 = sub nsw i32 %conv77, 1, !dbg !5147
  %idxprom79 = sext i32 %sub78 to i64, !dbg !5144
  %arrayidx80 = getelementptr inbounds %struct.Material*, %struct.Material** %75, i64 %idxprom79, !dbg !5144
  store %struct.Material* %73, %struct.Material** %arrayidx80, align 8, !dbg !5148
  br label %if.end96, !dbg !5149

if.else81:                                        ; preds = %if.end57
  %77 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5150
  %78 = load %struct.Material**, %struct.Material*** %77, align 8, !dbg !5152
  %79 = load i16, i16* %act.addr, align 2, !dbg !5153
  %conv82 = sext i16 %79 to i32, !dbg !5153
  %sub83 = sub nsw i32 %conv82, 1, !dbg !5154
  %idxprom84 = sext i32 %sub83 to i64, !dbg !5155
  %arrayidx85 = getelementptr inbounds %struct.Material*, %struct.Material** %78, i64 %idxprom84, !dbg !5155
  %80 = load %struct.Material*, %struct.Material** %arrayidx85, align 8, !dbg !5155
  store %struct.Material* %80, %struct.Material** %mao, align 8, !dbg !5156
  %81 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !5157
  %tobool86 = icmp ne %struct.Material* %81, null, !dbg !5157
  br i1 %tobool86, label %if.then87, label %if.end91, !dbg !5159

if.then87:                                        ; preds = %if.else81
  %82 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !5160
  %id88 = getelementptr inbounds %struct.Material, %struct.Material* %82, i32 0, i32 0, !dbg !5161
  %us89 = getelementptr inbounds %struct.ID, %struct.ID* %id88, i32 0, i32 6, !dbg !5162
  %83 = load i32, i32* %us89, align 4, !dbg !5163
  %dec90 = add nsw i32 %83, -1, !dbg !5163
  store i32 %dec90, i32* %us89, align 4, !dbg !5163
  br label %if.end91, !dbg !5160

if.end91:                                         ; preds = %if.then87, %if.else81
  %84 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5164
  %85 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5165
  %86 = load %struct.Material**, %struct.Material*** %85, align 8, !dbg !5166
  %87 = load i16, i16* %act.addr, align 2, !dbg !5167
  %conv92 = sext i16 %87 to i32, !dbg !5167
  %sub93 = sub nsw i32 %conv92, 1, !dbg !5168
  %idxprom94 = sext i32 %sub93 to i64, !dbg !5169
  %arrayidx95 = getelementptr inbounds %struct.Material*, %struct.Material** %86, i64 %idxprom94, !dbg !5169
  store %struct.Material* %84, %struct.Material** %arrayidx95, align 8, !dbg !5170
  br label %if.end96

if.end96:                                         ; preds = %if.end91, %if.end75
  %88 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5171
  %tobool97 = icmp ne %struct.Material* %88, null, !dbg !5171
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !5173

if.then98:                                        ; preds = %if.end96
  %89 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5174
  %90 = bitcast %struct.Material* %89 to %struct.ID*, !dbg !5175
  call void @id_us_plus(%struct.ID* %90), !dbg !5176
  br label %if.end99, !dbg !5176

if.end99:                                         ; preds = %if.then98, %if.end96
  %91 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5177
  %92 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5178
  %data = getelementptr inbounds %struct.Object, %struct.Object* %92, i32 0, i32 19, !dbg !5179
  %93 = load i8*, i8** %data, align 8, !dbg !5179
  %94 = bitcast i8* %93 to %struct.ID*, !dbg !5178
  call void @test_object_materials(%struct.Main* %91, %struct.ID* %94), !dbg !5180
  br label %return, !dbg !5181

return:                                           ; preds = %if.end99, %if.then14, %if.then7, %if.then
  ret void, !dbg !5181
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @assign_matarar(%struct.Object* %ob, %struct.Material*** %matar, i16 signext %totcol) #0 !dbg !5182 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %matar.addr = alloca %struct.Material***, align 8
  %totcol.addr = alloca i16, align 2
  %actcol_orig = alloca i32, align 4
  %i = alloca i16, align 2
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5185, metadata !DIExpression()), !dbg !5186
  store %struct.Material*** %matar, %struct.Material**** %matar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material**** %matar.addr, metadata !5187, metadata !DIExpression()), !dbg !5188
  store i16 %totcol, i16* %totcol.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %totcol.addr, metadata !5189, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.declare(metadata i32* %actcol_orig, metadata !5191, metadata !DIExpression()), !dbg !5192
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5193
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 32, !dbg !5194
  %1 = load i32, i32* %actcol, align 4, !dbg !5194
  store i32 %1, i32* %actcol_orig, align 4, !dbg !5192
  call void @llvm.dbg.declare(metadata i16* %i, metadata !5195, metadata !DIExpression()), !dbg !5196
  br label %while.cond, !dbg !5197

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5198
  %call = call zeroext i8 @object_remove_material_slot(%struct.Object* %2), !dbg !5199
  %tobool = icmp ne i8 %call, 0, !dbg !5197
  br i1 %tobool, label %while.body, label %while.end, !dbg !5197

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !5197, !llvm.loop !5200

while.end:                                        ; preds = %while.cond
  store i16 0, i16* %i, align 2, !dbg !5202
  br label %for.cond, !dbg !5204

for.cond:                                         ; preds = %for.inc, %while.end
  %3 = load i16, i16* %i, align 2, !dbg !5205
  %conv = sext i16 %3 to i32, !dbg !5205
  %4 = load i16, i16* %totcol.addr, align 2, !dbg !5207
  %conv1 = sext i16 %4 to i32, !dbg !5207
  %cmp = icmp slt i32 %conv, %conv1, !dbg !5208
  br i1 %cmp, label %for.body, label %for.end, !dbg !5209

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5210
  %6 = load %struct.Material***, %struct.Material**** %matar.addr, align 8, !dbg !5211
  %7 = load %struct.Material**, %struct.Material*** %6, align 8, !dbg !5212
  %8 = load i16, i16* %i, align 2, !dbg !5213
  %idxprom = sext i16 %8 to i64, !dbg !5214
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %7, i64 %idxprom, !dbg !5214
  %9 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !5214
  %10 = load i16, i16* %i, align 2, !dbg !5215
  %conv3 = sext i16 %10 to i32, !dbg !5215
  %add = add nsw i32 %conv3, 1, !dbg !5216
  %conv4 = trunc i32 %add to i16, !dbg !5215
  call void @assign_material(%struct.Object* %5, %struct.Material* %9, i16 signext %conv4, i32 0), !dbg !5217
  br label %for.inc, !dbg !5217

for.inc:                                          ; preds = %for.body
  %11 = load i16, i16* %i, align 2, !dbg !5218
  %inc = add i16 %11, 1, !dbg !5218
  store i16 %inc, i16* %i, align 2, !dbg !5218
  br label %for.cond, !dbg !5219, !llvm.loop !5220

for.end:                                          ; preds = %for.cond
  %12 = load i32, i32* %actcol_orig, align 4, !dbg !5222
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5224
  %totcol5 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 31, !dbg !5225
  %14 = load i32, i32* %totcol5, align 8, !dbg !5225
  %cmp6 = icmp sgt i32 %12, %14, !dbg !5226
  br i1 %cmp6, label %if.then, label %if.end, !dbg !5227

if.then:                                          ; preds = %for.end
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5228
  %totcol8 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 31, !dbg !5229
  %16 = load i32, i32* %totcol8, align 8, !dbg !5229
  store i32 %16, i32* %actcol_orig, align 4, !dbg !5230
  br label %if.end, !dbg !5231

if.end:                                           ; preds = %if.then, %for.end
  %17 = load i32, i32* %actcol_orig, align 4, !dbg !5232
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5233
  %actcol9 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 32, !dbg !5234
  store i32 %17, i32* %actcol9, align 4, !dbg !5235
  ret void, !dbg !5236
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @object_remove_material_slot(%struct.Object* %ob) #0 !dbg !5237 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %mao = alloca %struct.Material*, align 8
  %matarar = alloca %struct.Material***, align 8
  %obt = alloca %struct.Object*, align 8
  %totcolp = alloca i16*, align 8
  %a = alloca i16, align 2
  %actcol = alloca i16, align 2
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5240, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.declare(metadata %struct.Material** %mao, metadata !5242, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.declare(metadata %struct.Material**** %matarar, metadata !5244, metadata !DIExpression()), !dbg !5245
  call void @llvm.dbg.declare(metadata %struct.Object** %obt, metadata !5246, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.declare(metadata i16** %totcolp, metadata !5248, metadata !DIExpression()), !dbg !5249
  call void @llvm.dbg.declare(metadata i16* %a, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata i16* %actcol, metadata !5252, metadata !DIExpression()), !dbg !5253
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5254
  %cmp = icmp eq %struct.Object* %0, null, !dbg !5256
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5257

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5258
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 31, !dbg !5259
  %2 = load i32, i32* %totcol, align 8, !dbg !5259
  %cmp1 = icmp eq i32 %2, 0, !dbg !5260
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5261

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !5262
  br label %return, !dbg !5262

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5264
  %actcol2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 32, !dbg !5266
  %4 = load i32, i32* %actcol2, align 4, !dbg !5266
  %cmp3 = icmp sle i32 %4, 0, !dbg !5267
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !5268

if.then4:                                         ; preds = %if.end
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5269
  %actcol5 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 32, !dbg !5271
  %6 = load i32, i32* %actcol5, align 4, !dbg !5271
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.object_remove_material_slot, i64 0, i64 0), i32 %6), !dbg !5272
  store i8 0, i8* %retval, align 1, !dbg !5273
  br label %return, !dbg !5273

if.end6:                                          ; preds = %if.end
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5274
  %call7 = call i16* @give_totcolp(%struct.Object* %7), !dbg !5275
  store i16* %call7, i16** %totcolp, align 8, !dbg !5276
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5277
  %call8 = call %struct.Material*** @give_matarar(%struct.Object* %8), !dbg !5278
  store %struct.Material*** %call8, %struct.Material**** %matarar, align 8, !dbg !5279
  %9 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5280
  %cmp9 = icmp eq %struct.Material*** null, %9, !dbg !5280
  br i1 %cmp9, label %if.then12, label %lor.lhs.false10, !dbg !5280

lor.lhs.false10:                                  ; preds = %if.end6
  %10 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5280
  %11 = load %struct.Material**, %struct.Material*** %10, align 8, !dbg !5280
  %cmp11 = icmp eq %struct.Material** null, %11, !dbg !5280
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !5282

if.then12:                                        ; preds = %lor.lhs.false10, %if.end6
  store i8 0, i8* %retval, align 1, !dbg !5283
  br label %return, !dbg !5283

if.end13:                                         ; preds = %lor.lhs.false10
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5285
  %actcol14 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 32, !dbg !5287
  %13 = load i32, i32* %actcol14, align 4, !dbg !5287
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5288
  %totcol15 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 31, !dbg !5289
  %15 = load i32, i32* %totcol15, align 8, !dbg !5289
  %cmp16 = icmp sgt i32 %13, %15, !dbg !5290
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !5291

if.then17:                                        ; preds = %if.end13
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5292
  %totcol18 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 31, !dbg !5294
  %17 = load i32, i32* %totcol18, align 8, !dbg !5294
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5295
  %actcol19 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 32, !dbg !5296
  store i32 %17, i32* %actcol19, align 4, !dbg !5297
  br label %if.end20, !dbg !5298

if.end20:                                         ; preds = %if.then17, %if.end13
  %19 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5299
  %20 = load %struct.Material**, %struct.Material*** %19, align 8, !dbg !5300
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5301
  %actcol21 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 32, !dbg !5302
  %22 = load i32, i32* %actcol21, align 4, !dbg !5302
  %sub = sub nsw i32 %22, 1, !dbg !5303
  %idxprom = sext i32 %sub to i64, !dbg !5304
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %20, i64 %idxprom, !dbg !5304
  %23 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !5304
  store %struct.Material* %23, %struct.Material** %mao, align 8, !dbg !5305
  %24 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !5306
  %tobool = icmp ne %struct.Material* %24, null, !dbg !5306
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !5308

if.then22:                                        ; preds = %if.end20
  %25 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !5309
  %id = getelementptr inbounds %struct.Material, %struct.Material* %25, i32 0, i32 0, !dbg !5310
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !5311
  %26 = load i32, i32* %us, align 4, !dbg !5312
  %dec = add nsw i32 %26, -1, !dbg !5312
  store i32 %dec, i32* %us, align 4, !dbg !5312
  br label %if.end23, !dbg !5309

if.end23:                                         ; preds = %if.then22, %if.end20
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5313
  %actcol24 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 32, !dbg !5315
  %28 = load i32, i32* %actcol24, align 4, !dbg !5315
  %conv = trunc i32 %28 to i16, !dbg !5313
  store i16 %conv, i16* %a, align 2, !dbg !5316
  br label %for.cond, !dbg !5317

for.cond:                                         ; preds = %for.inc, %if.end23
  %29 = load i16, i16* %a, align 2, !dbg !5318
  %conv25 = sext i16 %29 to i32, !dbg !5318
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5320
  %totcol26 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 31, !dbg !5321
  %31 = load i32, i32* %totcol26, align 8, !dbg !5321
  %cmp27 = icmp slt i32 %conv25, %31, !dbg !5322
  br i1 %cmp27, label %for.body, label %for.end, !dbg !5323

for.body:                                         ; preds = %for.cond
  %32 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5324
  %33 = load %struct.Material**, %struct.Material*** %32, align 8, !dbg !5325
  %34 = load i16, i16* %a, align 2, !dbg !5326
  %idxprom29 = sext i16 %34 to i64, !dbg !5327
  %arrayidx30 = getelementptr inbounds %struct.Material*, %struct.Material** %33, i64 %idxprom29, !dbg !5327
  %35 = load %struct.Material*, %struct.Material** %arrayidx30, align 8, !dbg !5327
  %36 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5328
  %37 = load %struct.Material**, %struct.Material*** %36, align 8, !dbg !5329
  %38 = load i16, i16* %a, align 2, !dbg !5330
  %conv31 = sext i16 %38 to i32, !dbg !5330
  %sub32 = sub nsw i32 %conv31, 1, !dbg !5331
  %idxprom33 = sext i32 %sub32 to i64, !dbg !5332
  %arrayidx34 = getelementptr inbounds %struct.Material*, %struct.Material** %37, i64 %idxprom33, !dbg !5332
  store %struct.Material* %35, %struct.Material** %arrayidx34, align 8, !dbg !5333
  br label %for.inc, !dbg !5332

for.inc:                                          ; preds = %for.body
  %39 = load i16, i16* %a, align 2, !dbg !5334
  %inc = add i16 %39, 1, !dbg !5334
  store i16 %inc, i16* %a, align 2, !dbg !5334
  br label %for.cond, !dbg !5335, !llvm.loop !5336

for.end:                                          ; preds = %for.cond
  %40 = load i16*, i16** %totcolp, align 8, !dbg !5338
  %41 = load i16, i16* %40, align 2, !dbg !5339
  %dec35 = add i16 %41, -1, !dbg !5339
  store i16 %dec35, i16* %40, align 2, !dbg !5339
  %42 = load i16*, i16** %totcolp, align 8, !dbg !5340
  %43 = load i16, i16* %42, align 2, !dbg !5342
  %conv36 = sext i16 %43 to i32, !dbg !5342
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !5343
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !5344

if.then39:                                        ; preds = %for.end
  %44 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5345
  %45 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5347
  %46 = load %struct.Material**, %struct.Material*** %45, align 8, !dbg !5348
  %47 = bitcast %struct.Material** %46 to i8*, !dbg !5348
  call void %44(i8* %47), !dbg !5345
  %48 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5349
  store %struct.Material** null, %struct.Material*** %48, align 8, !dbg !5350
  br label %if.end40, !dbg !5351

if.end40:                                         ; preds = %if.then39, %for.end
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5352
  %actcol41 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 32, !dbg !5353
  %50 = load i32, i32* %actcol41, align 4, !dbg !5353
  %conv42 = trunc i32 %50 to i16, !dbg !5352
  store i16 %conv42, i16* %actcol, align 2, !dbg !5354
  %51 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5355
  %object = getelementptr inbounds %struct.Main, %struct.Main* %51, i32 0, i32 13, !dbg !5356
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !5357
  %52 = load i8*, i8** %first, align 8, !dbg !5357
  %53 = bitcast i8* %52 to %struct.Object*, !dbg !5358
  store %struct.Object* %53, %struct.Object** %obt, align 8, !dbg !5359
  br label %while.cond, !dbg !5360

while.cond:                                       ; preds = %if.end101, %if.end40
  %54 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5361
  %tobool43 = icmp ne %struct.Object* %54, null, !dbg !5360
  br i1 %tobool43, label %while.body, label %while.end, !dbg !5360

while.body:                                       ; preds = %while.cond
  %55 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5362
  %data = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 19, !dbg !5365
  %56 = load i8*, i8** %data, align 8, !dbg !5365
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5366
  %data44 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 19, !dbg !5367
  %58 = load i8*, i8** %data44, align 8, !dbg !5367
  %cmp45 = icmp eq i8* %56, %58, !dbg !5368
  br i1 %cmp45, label %if.then47, label %if.end101, !dbg !5369

if.then47:                                        ; preds = %while.body
  %59 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5370
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 29, !dbg !5372
  %60 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !5372
  %61 = load i16, i16* %actcol, align 2, !dbg !5373
  %conv48 = sext i16 %61 to i32, !dbg !5373
  %sub49 = sub nsw i32 %conv48, 1, !dbg !5374
  %idxprom50 = sext i32 %sub49 to i64, !dbg !5370
  %arrayidx51 = getelementptr inbounds %struct.Material*, %struct.Material** %60, i64 %idxprom50, !dbg !5370
  %62 = load %struct.Material*, %struct.Material** %arrayidx51, align 8, !dbg !5370
  store %struct.Material* %62, %struct.Material** %mao, align 8, !dbg !5375
  %63 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !5376
  %tobool52 = icmp ne %struct.Material* %63, null, !dbg !5376
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !5378

if.then53:                                        ; preds = %if.then47
  %64 = load %struct.Material*, %struct.Material** %mao, align 8, !dbg !5379
  %id54 = getelementptr inbounds %struct.Material, %struct.Material* %64, i32 0, i32 0, !dbg !5380
  %us55 = getelementptr inbounds %struct.ID, %struct.ID* %id54, i32 0, i32 6, !dbg !5381
  %65 = load i32, i32* %us55, align 4, !dbg !5382
  %dec56 = add nsw i32 %65, -1, !dbg !5382
  store i32 %dec56, i32* %us55, align 4, !dbg !5382
  br label %if.end57, !dbg !5379

if.end57:                                         ; preds = %if.then53, %if.then47
  %66 = load i16, i16* %actcol, align 2, !dbg !5383
  store i16 %66, i16* %a, align 2, !dbg !5385
  br label %for.cond58, !dbg !5386

for.cond58:                                       ; preds = %for.inc79, %if.end57
  %67 = load i16, i16* %a, align 2, !dbg !5387
  %conv59 = sext i16 %67 to i32, !dbg !5387
  %68 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5389
  %totcol60 = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 31, !dbg !5390
  %69 = load i32, i32* %totcol60, align 8, !dbg !5390
  %cmp61 = icmp slt i32 %conv59, %69, !dbg !5391
  br i1 %cmp61, label %for.body63, label %for.end81, !dbg !5392

for.body63:                                       ; preds = %for.cond58
  %70 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5393
  %mat64 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 29, !dbg !5395
  %71 = load %struct.Material**, %struct.Material*** %mat64, align 8, !dbg !5395
  %72 = load i16, i16* %a, align 2, !dbg !5396
  %idxprom65 = sext i16 %72 to i64, !dbg !5393
  %arrayidx66 = getelementptr inbounds %struct.Material*, %struct.Material** %71, i64 %idxprom65, !dbg !5393
  %73 = load %struct.Material*, %struct.Material** %arrayidx66, align 8, !dbg !5393
  %74 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5397
  %mat67 = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 29, !dbg !5398
  %75 = load %struct.Material**, %struct.Material*** %mat67, align 8, !dbg !5398
  %76 = load i16, i16* %a, align 2, !dbg !5399
  %conv68 = sext i16 %76 to i32, !dbg !5399
  %sub69 = sub nsw i32 %conv68, 1, !dbg !5400
  %idxprom70 = sext i32 %sub69 to i64, !dbg !5397
  %arrayidx71 = getelementptr inbounds %struct.Material*, %struct.Material** %75, i64 %idxprom70, !dbg !5397
  store %struct.Material* %73, %struct.Material** %arrayidx71, align 8, !dbg !5401
  %77 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5402
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 30, !dbg !5403
  %78 = load i8*, i8** %matbits, align 8, !dbg !5403
  %79 = load i16, i16* %a, align 2, !dbg !5404
  %idxprom72 = sext i16 %79 to i64, !dbg !5402
  %arrayidx73 = getelementptr inbounds i8, i8* %78, i64 %idxprom72, !dbg !5402
  %80 = load i8, i8* %arrayidx73, align 1, !dbg !5402
  %81 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5405
  %matbits74 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 30, !dbg !5406
  %82 = load i8*, i8** %matbits74, align 8, !dbg !5406
  %83 = load i16, i16* %a, align 2, !dbg !5407
  %conv75 = sext i16 %83 to i32, !dbg !5407
  %sub76 = sub nsw i32 %conv75, 1, !dbg !5408
  %idxprom77 = sext i32 %sub76 to i64, !dbg !5405
  %arrayidx78 = getelementptr inbounds i8, i8* %82, i64 %idxprom77, !dbg !5405
  store i8 %80, i8* %arrayidx78, align 1, !dbg !5409
  br label %for.inc79, !dbg !5410

for.inc79:                                        ; preds = %for.body63
  %84 = load i16, i16* %a, align 2, !dbg !5411
  %inc80 = add i16 %84, 1, !dbg !5411
  store i16 %inc80, i16* %a, align 2, !dbg !5411
  br label %for.cond58, !dbg !5412, !llvm.loop !5413

for.end81:                                        ; preds = %for.cond58
  %85 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5415
  %totcol82 = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 31, !dbg !5416
  %86 = load i32, i32* %totcol82, align 8, !dbg !5417
  %dec83 = add nsw i32 %86, -1, !dbg !5417
  store i32 %dec83, i32* %totcol82, align 8, !dbg !5417
  %87 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5418
  %actcol84 = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 32, !dbg !5420
  %88 = load i32, i32* %actcol84, align 4, !dbg !5420
  %89 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5421
  %totcol85 = getelementptr inbounds %struct.Object, %struct.Object* %89, i32 0, i32 31, !dbg !5422
  %90 = load i32, i32* %totcol85, align 8, !dbg !5422
  %cmp86 = icmp sgt i32 %88, %90, !dbg !5423
  br i1 %cmp86, label %if.then88, label %if.end91, !dbg !5424

if.then88:                                        ; preds = %for.end81
  %91 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5425
  %totcol89 = getelementptr inbounds %struct.Object, %struct.Object* %91, i32 0, i32 31, !dbg !5426
  %92 = load i32, i32* %totcol89, align 8, !dbg !5426
  %93 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5427
  %actcol90 = getelementptr inbounds %struct.Object, %struct.Object* %93, i32 0, i32 32, !dbg !5428
  store i32 %92, i32* %actcol90, align 4, !dbg !5429
  br label %if.end91, !dbg !5427

if.end91:                                         ; preds = %if.then88, %for.end81
  %94 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5430
  %totcol92 = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 31, !dbg !5432
  %95 = load i32, i32* %totcol92, align 8, !dbg !5432
  %cmp93 = icmp eq i32 %95, 0, !dbg !5433
  br i1 %cmp93, label %if.then95, label %if.end100, !dbg !5434

if.then95:                                        ; preds = %if.end91
  %96 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5435
  %97 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5437
  %mat96 = getelementptr inbounds %struct.Object, %struct.Object* %97, i32 0, i32 29, !dbg !5438
  %98 = load %struct.Material**, %struct.Material*** %mat96, align 8, !dbg !5438
  %99 = bitcast %struct.Material** %98 to i8*, !dbg !5437
  call void %96(i8* %99), !dbg !5435
  %100 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5439
  %101 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5440
  %matbits97 = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 30, !dbg !5441
  %102 = load i8*, i8** %matbits97, align 8, !dbg !5441
  call void %100(i8* %102), !dbg !5439
  %103 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5442
  %mat98 = getelementptr inbounds %struct.Object, %struct.Object* %103, i32 0, i32 29, !dbg !5443
  store %struct.Material** null, %struct.Material*** %mat98, align 8, !dbg !5444
  %104 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5445
  %matbits99 = getelementptr inbounds %struct.Object, %struct.Object* %104, i32 0, i32 30, !dbg !5446
  store i8* null, i8** %matbits99, align 8, !dbg !5447
  br label %if.end100, !dbg !5448

if.end100:                                        ; preds = %if.then95, %if.end91
  br label %if.end101, !dbg !5449

if.end101:                                        ; preds = %if.end100, %while.body
  %105 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !5450
  %id102 = getelementptr inbounds %struct.Object, %struct.Object* %105, i32 0, i32 0, !dbg !5451
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id102, i32 0, i32 0, !dbg !5452
  %106 = load i8*, i8** %next, align 8, !dbg !5452
  %107 = bitcast i8* %106 to %struct.Object*, !dbg !5450
  store %struct.Object* %107, %struct.Object** %obt, align 8, !dbg !5453
  br label %while.cond, !dbg !5360, !llvm.loop !5454

while.end:                                        ; preds = %while.cond
  %108 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5456
  %type = getelementptr inbounds %struct.Object, %struct.Object* %108, i32 0, i32 3, !dbg !5456
  %109 = load i16, i16* %type, align 8, !dbg !5456
  %conv103 = sext i16 %109 to i32, !dbg !5456
  %cmp104 = icmp eq i32 %conv103, 1, !dbg !5456
  br i1 %cmp104, label %if.then121, label %lor.lhs.false106, !dbg !5456

lor.lhs.false106:                                 ; preds = %while.end
  %110 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5456
  %type107 = getelementptr inbounds %struct.Object, %struct.Object* %110, i32 0, i32 3, !dbg !5456
  %111 = load i16, i16* %type107, align 8, !dbg !5456
  %conv108 = sext i16 %111 to i32, !dbg !5456
  %cmp109 = icmp eq i32 %conv108, 2, !dbg !5456
  br i1 %cmp109, label %if.then121, label %lor.lhs.false111, !dbg !5456

lor.lhs.false111:                                 ; preds = %lor.lhs.false106
  %112 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5456
  %type112 = getelementptr inbounds %struct.Object, %struct.Object* %112, i32 0, i32 3, !dbg !5456
  %113 = load i16, i16* %type112, align 8, !dbg !5456
  %conv113 = sext i16 %113 to i32, !dbg !5456
  %cmp114 = icmp eq i32 %conv113, 3, !dbg !5456
  br i1 %cmp114, label %if.then121, label %lor.lhs.false116, !dbg !5456

lor.lhs.false116:                                 ; preds = %lor.lhs.false111
  %114 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5456
  %type117 = getelementptr inbounds %struct.Object, %struct.Object* %114, i32 0, i32 3, !dbg !5456
  %115 = load i16, i16* %type117, align 8, !dbg !5456
  %conv118 = sext i16 %115 to i32, !dbg !5456
  %cmp119 = icmp eq i32 %conv118, 4, !dbg !5456
  br i1 %cmp119, label %if.then121, label %if.end130, !dbg !5458

if.then121:                                       ; preds = %lor.lhs.false116, %lor.lhs.false111, %lor.lhs.false106, %while.end
  %116 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5459
  %data122 = getelementptr inbounds %struct.Object, %struct.Object* %116, i32 0, i32 19, !dbg !5461
  %117 = load i8*, i8** %data122, align 8, !dbg !5461
  %118 = bitcast i8* %117 to %struct.ID*, !dbg !5462
  %119 = load i16, i16* %actcol, align 2, !dbg !5463
  %conv123 = sext i16 %119 to i32, !dbg !5463
  %sub124 = sub nsw i32 %conv123, 1, !dbg !5464
  %conv125 = trunc i32 %sub124 to i16, !dbg !5463
  call void @material_data_index_remove_id(%struct.ID* %118, i16 signext %conv125), !dbg !5465
  %120 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5466
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %120, i32 0, i32 118, !dbg !5468
  %121 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !5468
  %tobool126 = icmp ne %struct.CurveCache* %121, null, !dbg !5466
  br i1 %tobool126, label %if.then127, label %if.end129, !dbg !5469

if.then127:                                       ; preds = %if.then121
  %122 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5470
  %curve_cache128 = getelementptr inbounds %struct.Object, %struct.Object* %122, i32 0, i32 118, !dbg !5472
  %123 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache128, align 8, !dbg !5472
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %123, i32 0, i32 0, !dbg !5473
  call void @BKE_displist_free(%struct.ListBase* %disp), !dbg !5474
  br label %if.end129, !dbg !5475

if.end129:                                        ; preds = %if.then127, %if.then121
  br label %if.end130, !dbg !5476

if.end130:                                        ; preds = %if.end129, %lor.lhs.false116
  store i8 1, i8* %retval, align 1, !dbg !5477
  br label %return, !dbg !5477

return:                                           ; preds = %if.end130, %if.then12, %if.then4, %if.then
  %124 = load i8, i8* %retval, align 1, !dbg !5478
  ret i8 %124, !dbg !5478
}

; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @find_material_index(%struct.Object* %ob, %struct.Material* %ma) #0 !dbg !5479 {
entry:
  %retval = alloca i16, align 2
  %ob.addr = alloca %struct.Object*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %matarar = alloca %struct.Material***, align 8
  %a = alloca i16, align 2
  %totcolp = alloca i16*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5482, metadata !DIExpression()), !dbg !5483
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !5484, metadata !DIExpression()), !dbg !5485
  call void @llvm.dbg.declare(metadata %struct.Material**** %matarar, metadata !5486, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.declare(metadata i16* %a, metadata !5488, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.declare(metadata i16** %totcolp, metadata !5490, metadata !DIExpression()), !dbg !5491
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5492
  %cmp = icmp eq %struct.Material* %0, null, !dbg !5494
  br i1 %cmp, label %if.then, label %if.end, !dbg !5495

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !5496
  br label %return, !dbg !5496

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5497
  %call = call i16* @give_totcolp(%struct.Object* %1), !dbg !5498
  store i16* %call, i16** %totcolp, align 8, !dbg !5499
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5500
  %call1 = call %struct.Material*** @give_matarar(%struct.Object* %2), !dbg !5501
  store %struct.Material*** %call1, %struct.Material**** %matarar, align 8, !dbg !5502
  %3 = load i16*, i16** %totcolp, align 8, !dbg !5503
  %cmp2 = icmp eq i16* %3, null, !dbg !5505
  br i1 %cmp2, label %if.then4, label %lor.lhs.false, !dbg !5506

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5507
  %cmp3 = icmp eq %struct.Material*** %4, null, !dbg !5508
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5509

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i16 0, i16* %retval, align 2, !dbg !5510
  br label %return, !dbg !5510

if.end5:                                          ; preds = %lor.lhs.false
  store i16 0, i16* %a, align 2, !dbg !5511
  br label %for.cond, !dbg !5513

for.cond:                                         ; preds = %for.inc, %if.end5
  %5 = load i16, i16* %a, align 2, !dbg !5514
  %conv = sext i16 %5 to i32, !dbg !5514
  %6 = load i16*, i16** %totcolp, align 8, !dbg !5516
  %7 = load i16, i16* %6, align 2, !dbg !5517
  %conv6 = sext i16 %7 to i32, !dbg !5517
  %cmp7 = icmp slt i32 %conv, %conv6, !dbg !5518
  br i1 %cmp7, label %for.body, label %for.end, !dbg !5519

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !5520
  %9 = load %struct.Material**, %struct.Material*** %8, align 8, !dbg !5522
  %10 = load i16, i16* %a, align 2, !dbg !5523
  %idxprom = sext i16 %10 to i64, !dbg !5524
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %9, i64 %idxprom, !dbg !5524
  %11 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !5524
  %12 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5525
  %cmp9 = icmp eq %struct.Material* %11, %12, !dbg !5526
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !5527

if.then11:                                        ; preds = %for.body
  br label %for.end, !dbg !5528

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !5525

for.inc:                                          ; preds = %if.end12
  %13 = load i16, i16* %a, align 2, !dbg !5529
  %inc = add i16 %13, 1, !dbg !5529
  store i16 %inc, i16* %a, align 2, !dbg !5529
  br label %for.cond, !dbg !5530, !llvm.loop !5531

for.end:                                          ; preds = %if.then11, %for.cond
  %14 = load i16, i16* %a, align 2, !dbg !5533
  %conv13 = sext i16 %14 to i32, !dbg !5533
  %15 = load i16*, i16** %totcolp, align 8, !dbg !5535
  %16 = load i16, i16* %15, align 2, !dbg !5536
  %conv14 = sext i16 %16 to i32, !dbg !5536
  %cmp15 = icmp slt i32 %conv13, %conv14, !dbg !5537
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !5538

if.then17:                                        ; preds = %for.end
  %17 = load i16, i16* %a, align 2, !dbg !5539
  %conv18 = sext i16 %17 to i32, !dbg !5539
  %add = add nsw i32 %conv18, 1, !dbg !5540
  %conv19 = trunc i32 %add to i16, !dbg !5539
  store i16 %conv19, i16* %retval, align 2, !dbg !5541
  br label %return, !dbg !5541

if.end20:                                         ; preds = %for.end
  store i16 0, i16* %retval, align 2, !dbg !5542
  br label %return, !dbg !5542

return:                                           ; preds = %if.end20, %if.then17, %if.then4, %if.then
  %18 = load i16, i16* %retval, align 2, !dbg !5543
  ret i16 %18, !dbg !5543
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @object_add_material_slot(%struct.Object* %ob) #0 !dbg !5544 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5547
  %cmp = icmp eq %struct.Object* %0, null, !dbg !5549
  br i1 %cmp, label %if.then, label %if.end, !dbg !5550

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5551
  br label %return, !dbg !5551

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5552
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 31, !dbg !5554
  %2 = load i32, i32* %totcol, align 8, !dbg !5554
  %cmp1 = icmp sge i32 %2, 32766, !dbg !5555
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5556

if.then2:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !5557
  br label %return, !dbg !5557

if.end3:                                          ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5558
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5559
  %totcol4 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 31, !dbg !5560
  %5 = load i32, i32* %totcol4, align 8, !dbg !5560
  %add = add nsw i32 %5, 1, !dbg !5561
  %conv = trunc i32 %add to i16, !dbg !5559
  call void @assign_material(%struct.Object* %3, %struct.Material* null, i16 signext %conv, i32 0), !dbg !5562
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5563
  %totcol5 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 31, !dbg !5564
  %7 = load i32, i32* %totcol5, align 8, !dbg !5564
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5565
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 32, !dbg !5566
  store i32 %7, i32* %actcol, align 4, !dbg !5567
  store i8 1, i8* %retval, align 1, !dbg !5568
  br label %return, !dbg !5568

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !5569
  ret i8 %9, !dbg !5569
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_render_material(%struct.Material* %mat, i32 %r_mode, float* %amb) #0 !dbg !5570 {
entry:
  %mat.addr = alloca %struct.Material*, align 8
  %r_mode.addr = alloca i32, align 4
  %amb.addr = alloca float*, align 8
  store %struct.Material* %mat, %struct.Material** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %mat.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  store i32 %r_mode, i32* %r_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r_mode.addr, metadata !5575, metadata !DIExpression()), !dbg !5576
  store float* %amb, float** %amb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %amb.addr, metadata !5577, metadata !DIExpression()), !dbg !5578
  %0 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5579
  %1 = load i32, i32* %r_mode.addr, align 4, !dbg !5580
  %2 = load float*, float** %amb.addr, align 8, !dbg !5581
  call void @do_init_render_material(%struct.Material* %0, i32 %1, float* %2), !dbg !5582
  %3 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5583
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 103, !dbg !5585
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !5585
  %tobool = icmp ne %struct.bNodeTree* %4, null, !dbg !5583
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5586

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5587
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 77, !dbg !5588
  %6 = load i8, i8* %use_nodes, align 1, !dbg !5588
  %conv = zext i8 %6 to i32, !dbg !5587
  %tobool1 = icmp ne i32 %conv, 0, !dbg !5587
  br i1 %tobool1, label %if.then, label %if.else, !dbg !5589

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5590
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 51, !dbg !5592
  %8 = load i32, i32* %mode, align 4, !dbg !5592
  %and = and i32 %8, 42148673, !dbg !5593
  %or = or i32 %and, 4, !dbg !5594
  %9 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5595
  %mode_l = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 52, !dbg !5596
  store i32 %or, i32* %mode_l, align 8, !dbg !5597
  %10 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5598
  %mode2 = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 53, !dbg !5599
  %11 = load i32, i32* %mode2, align 4, !dbg !5599
  %and2 = and i32 %11, 1, !dbg !5600
  %12 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5601
  %mode2_l = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 54, !dbg !5602
  store i32 %and2, i32* %mode2_l, align 8, !dbg !5603
  %13 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5604
  %nodetree3 = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 103, !dbg !5605
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree3, align 8, !dbg !5605
  %15 = load i32, i32* %r_mode.addr, align 4, !dbg !5606
  %16 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5607
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %16, i32 0, i32 90, !dbg !5608
  %17 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5609
  %mode_l4 = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 52, !dbg !5610
  call void @ntreeShaderGetTexcoMode(%struct.bNodeTree* %14, i32 %15, i16* %texco, i32* %mode_l4), !dbg !5611
  %18 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5612
  %nodetree5 = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 103, !dbg !5613
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree5, align 8, !dbg !5613
  %20 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5614
  %21 = load i32, i32* %r_mode.addr, align 4, !dbg !5615
  %22 = load float*, float** %amb.addr, align 8, !dbg !5616
  call void @init_render_nodetree(%struct.bNodeTree* %19, %struct.Material* %20, i32 %21, float* %22), !dbg !5617
  %23 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5618
  %nodetree6 = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 103, !dbg !5620
  %24 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree6, align 8, !dbg !5620
  %execdata = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %24, i32 0, i32 27, !dbg !5621
  %25 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata, align 8, !dbg !5621
  %tobool7 = icmp ne %struct.bNodeTreeExec* %25, null, !dbg !5618
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !5622

if.then8:                                         ; preds = %if.then
  %26 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5623
  %nodetree9 = getelementptr inbounds %struct.Material, %struct.Material* %26, i32 0, i32 103, !dbg !5624
  %27 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree9, align 8, !dbg !5624
  %call = call %struct.bNodeTreeExec* @ntreeShaderBeginExecTree(%struct.bNodeTree* %27), !dbg !5625
  %28 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5626
  %nodetree10 = getelementptr inbounds %struct.Material, %struct.Material* %28, i32 0, i32 103, !dbg !5627
  %29 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree10, align 8, !dbg !5627
  %execdata11 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %29, i32 0, i32 27, !dbg !5628
  store %struct.bNodeTreeExec* %call, %struct.bNodeTreeExec** %execdata11, align 8, !dbg !5629
  br label %if.end, !dbg !5626

if.end:                                           ; preds = %if.then8, %if.then
  br label %if.end21, !dbg !5630

if.else:                                          ; preds = %land.lhs.true, %entry
  %30 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5631
  %mode12 = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 51, !dbg !5633
  %31 = load i32, i32* %mode12, align 4, !dbg !5633
  %32 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5634
  %mode_l13 = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 52, !dbg !5635
  store i32 %31, i32* %mode_l13, align 8, !dbg !5636
  %33 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5637
  %mode214 = getelementptr inbounds %struct.Material, %struct.Material* %33, i32 0, i32 53, !dbg !5638
  %34 = load i32, i32* %mode214, align 4, !dbg !5638
  %35 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5639
  %mode2_l15 = getelementptr inbounds %struct.Material, %struct.Material* %35, i32 0, i32 54, !dbg !5640
  store i32 %34, i32* %mode2_l15, align 8, !dbg !5641
  %36 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5642
  %strand_surfnor = getelementptr inbounds %struct.Material, %struct.Material* %36, i32 0, i32 66, !dbg !5644
  %37 = load float, float* %strand_surfnor, align 8, !dbg !5644
  %cmp = fcmp ogt float %37, 0.000000e+00, !dbg !5645
  br i1 %cmp, label %if.then17, label %if.end20, !dbg !5646

if.then17:                                        ; preds = %if.else
  %38 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !5647
  %mode_l18 = getelementptr inbounds %struct.Material, %struct.Material* %38, i32 0, i32 52, !dbg !5648
  %39 = load i32, i32* %mode_l18, align 8, !dbg !5649
  %or19 = or i32 %39, -2147483648, !dbg !5649
  store i32 %or19, i32* %mode_l18, align 8, !dbg !5649
  br label %if.end20, !dbg !5647

if.end20:                                         ; preds = %if.then17, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  ret void, !dbg !5650
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_init_render_material(%struct.Material* %ma, i32 %r_mode, float* %amb) #0 !dbg !5651 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %r_mode.addr = alloca i32, align 4
  %amb.addr = alloca float*, align 8
  %mtex = alloca %struct.MTex*, align 8
  %a = alloca i32, align 4
  %needuv = alloca i32, align 4
  %needtang = alloca i32, align 4
  %group166 = alloca %struct.Group*, align 8
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  store i32 %r_mode, i32* %r_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r_mode.addr, metadata !5654, metadata !DIExpression()), !dbg !5655
  store float* %amb, float** %amb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %amb.addr, metadata !5656, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !5658, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5660, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.declare(metadata i32* %needuv, metadata !5662, metadata !DIExpression()), !dbg !5663
  store i32 0, i32* %needuv, align 4, !dbg !5663
  call void @llvm.dbg.declare(metadata i32* %needtang, metadata !5664, metadata !DIExpression()), !dbg !5665
  store i32 0, i32* %needtang, align 4, !dbg !5665
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5666
  %flarec = getelementptr inbounds %struct.Material, %struct.Material* %0, i32 0, i32 55, !dbg !5668
  %1 = load i16, i16* %flarec, align 4, !dbg !5668
  %conv = sext i16 %1 to i32, !dbg !5666
  %cmp = icmp eq i32 %conv, 0, !dbg !5669
  br i1 %cmp, label %if.then, label %if.end, !dbg !5670

if.then:                                          ; preds = %entry
  %2 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5671
  %flarec2 = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 55, !dbg !5672
  store i16 1, i16* %flarec2, align 4, !dbg !5673
  br label %if.end, !dbg !5671

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %a, align 4, !dbg !5674
  br label %for.cond, !dbg !5676

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %a, align 4, !dbg !5677
  %cmp3 = icmp slt i32 %3, 18, !dbg !5679
  br i1 %cmp3, label %for.body, label %for.end, !dbg !5680

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5681
  %septex = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 73, !dbg !5684
  %5 = load i32, i32* %septex, align 8, !dbg !5684
  %6 = load i32, i32* %a, align 4, !dbg !5685
  %shl = shl i32 1, %6, !dbg !5686
  %and = and i32 %5, %shl, !dbg !5687
  %tobool = icmp ne i32 %and, 0, !dbg !5687
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !5688

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !5689

if.end6:                                          ; preds = %for.body
  %7 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5690
  %mtex7 = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 102, !dbg !5691
  %8 = load i32, i32* %a, align 4, !dbg !5692
  %idxprom = sext i32 %8 to i64, !dbg !5690
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex7, i64 0, i64 %idxprom, !dbg !5690
  %9 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !5690
  store %struct.MTex* %9, %struct.MTex** %mtex, align 8, !dbg !5693
  %10 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5694
  %tobool8 = icmp ne %struct.MTex* %10, null, !dbg !5694
  br i1 %tobool8, label %land.lhs.true, label %if.end85, !dbg !5696

land.lhs.true:                                    ; preds = %if.end6
  %11 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5697
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %11, i32 0, i32 5, !dbg !5698
  %12 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5698
  %tobool9 = icmp ne %struct.Tex* %12, null, !dbg !5697
  br i1 %tobool9, label %land.lhs.true10, label %if.end85, !dbg !5699

land.lhs.true10:                                  ; preds = %land.lhs.true
  %13 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5700
  %tex11 = getelementptr inbounds %struct.MTex, %struct.MTex* %13, i32 0, i32 5, !dbg !5701
  %14 = load %struct.Tex*, %struct.Tex** %tex11, align 8, !dbg !5701
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %14, i32 0, i32 32, !dbg !5702
  %15 = load i16, i16* %type, align 8, !dbg !5702
  %conv12 = sext i16 %15 to i32, !dbg !5700
  %16 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5703
  %tex13 = getelementptr inbounds %struct.MTex, %struct.MTex* %16, i32 0, i32 5, !dbg !5704
  %17 = load %struct.Tex*, %struct.Tex** %tex13, align 8, !dbg !5704
  %use_nodes = getelementptr inbounds %struct.Tex, %struct.Tex* %17, i32 0, i32 61, !dbg !5705
  %18 = load i8, i8* %use_nodes, align 8, !dbg !5705
  %conv14 = zext i8 %18 to i32, !dbg !5703
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !5703
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !5706

land.rhs:                                         ; preds = %land.lhs.true10
  %19 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5707
  %tex16 = getelementptr inbounds %struct.MTex, %struct.MTex* %19, i32 0, i32 5, !dbg !5708
  %20 = load %struct.Tex*, %struct.Tex** %tex16, align 8, !dbg !5708
  %nodetree = getelementptr inbounds %struct.Tex, %struct.Tex* %20, i32 0, i32 52, !dbg !5709
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !5709
  %tobool17 = icmp ne %struct.bNodeTree* %21, null, !dbg !5706
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true10
  %22 = phi i1 [ false, %land.lhs.true10 ], [ %tobool17, %land.rhs ], !dbg !5710
  %land.ext = zext i1 %22 to i32, !dbg !5706
  %or = or i32 %conv12, %land.ext, !dbg !5711
  %tobool18 = icmp ne i32 %or, 0, !dbg !5711
  br i1 %tobool18, label %if.then19, label %if.end85, !dbg !5712

if.then19:                                        ; preds = %land.end
  %23 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5713
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %23, i32 0, i32 0, !dbg !5715
  %24 = load i16, i16* %texco, align 8, !dbg !5715
  %conv20 = sext i16 %24 to i32, !dbg !5713
  %25 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5716
  %texco21 = getelementptr inbounds %struct.Material, %struct.Material* %25, i32 0, i32 90, !dbg !5717
  %26 = load i16, i16* %texco21, align 4, !dbg !5718
  %conv22 = sext i16 %26 to i32, !dbg !5718
  %or23 = or i32 %conv22, %conv20, !dbg !5718
  %conv24 = trunc i32 %or23 to i16, !dbg !5718
  store i16 %conv24, i16* %texco21, align 4, !dbg !5718
  %27 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5719
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %27, i32 0, i32 1, !dbg !5720
  %28 = load i16, i16* %mapto, align 2, !dbg !5720
  %conv25 = sext i16 %28 to i32, !dbg !5719
  %29 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5721
  %mapto26 = getelementptr inbounds %struct.Material, %struct.Material* %29, i32 0, i32 91, !dbg !5722
  %30 = load i16, i16* %mapto26, align 2, !dbg !5723
  %conv27 = sext i16 %30 to i32, !dbg !5723
  %or28 = or i32 %conv27, %conv25, !dbg !5723
  %conv29 = trunc i32 %or28 to i16, !dbg !5723
  store i16 %conv29, i16* %mapto26, align 2, !dbg !5723
  %31 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5724
  %tex30 = getelementptr inbounds %struct.MTex, %struct.MTex* %31, i32 0, i32 5, !dbg !5724
  %32 = load %struct.Tex*, %struct.Tex** %tex30, align 8, !dbg !5724
  %type31 = getelementptr inbounds %struct.Tex, %struct.Tex* %32, i32 0, i32 32, !dbg !5724
  %33 = load i16, i16* %type31, align 8, !dbg !5724
  %conv32 = sext i16 %33 to i32, !dbg !5724
  %cmp33 = icmp eq i32 %conv32, 8, !dbg !5724
  br i1 %cmp33, label %if.then40, label %lor.lhs.false, !dbg !5724

lor.lhs.false:                                    ; preds = %if.then19
  %34 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5724
  %tex35 = getelementptr inbounds %struct.MTex, %struct.MTex* %34, i32 0, i32 5, !dbg !5724
  %35 = load %struct.Tex*, %struct.Tex** %tex35, align 8, !dbg !5724
  %type36 = getelementptr inbounds %struct.Tex, %struct.Tex* %35, i32 0, i32 32, !dbg !5724
  %36 = load i16, i16* %type36, align 8, !dbg !5724
  %conv37 = sext i16 %36 to i32, !dbg !5724
  %cmp38 = icmp eq i32 %conv37, 10, !dbg !5724
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !5726

if.then40:                                        ; preds = %lor.lhs.false, %if.then19
  %37 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5727
  %texco41 = getelementptr inbounds %struct.Material, %struct.Material* %37, i32 0, i32 90, !dbg !5728
  %38 = load i16, i16* %texco41, align 4, !dbg !5729
  %conv42 = sext i16 %38 to i32, !dbg !5729
  %or43 = or i32 %conv42, 512, !dbg !5729
  %conv44 = trunc i32 %or43 to i16, !dbg !5729
  store i16 %conv44, i16* %texco41, align 4, !dbg !5729
  br label %if.end54, !dbg !5727

if.else:                                          ; preds = %lor.lhs.false
  %39 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5730
  %texflag = getelementptr inbounds %struct.MTex, %struct.MTex* %39, i32 0, i32 14, !dbg !5732
  %40 = load i16, i16* %texflag, align 8, !dbg !5732
  %conv45 = sext i16 %40 to i32, !dbg !5730
  %and46 = and i32 %conv45, 9088, !dbg !5733
  %tobool47 = icmp ne i32 %and46, 0, !dbg !5733
  br i1 %tobool47, label %if.then48, label %if.end53, !dbg !5734

if.then48:                                        ; preds = %if.else
  %41 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5735
  %texco49 = getelementptr inbounds %struct.Material, %struct.Material* %41, i32 0, i32 90, !dbg !5736
  %42 = load i16, i16* %texco49, align 4, !dbg !5737
  %conv50 = sext i16 %42 to i32, !dbg !5737
  %or51 = or i32 %conv50, 512, !dbg !5737
  %conv52 = trunc i32 %or51 to i16, !dbg !5737
  store i16 %conv52, i16* %texco49, align 4, !dbg !5737
  br label %if.end53, !dbg !5735

if.end53:                                         ; preds = %if.then48, %if.else
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then40
  %43 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5738
  %texco55 = getelementptr inbounds %struct.Material, %struct.Material* %43, i32 0, i32 90, !dbg !5740
  %44 = load i16, i16* %texco55, align 4, !dbg !5740
  %conv56 = sext i16 %44 to i32, !dbg !5738
  %and57 = and i32 %conv56, 24583, !dbg !5741
  %tobool58 = icmp ne i32 %and57, 0, !dbg !5741
  br i1 %tobool58, label %if.then59, label %if.else60, !dbg !5742

if.then59:                                        ; preds = %if.end54
  store i32 1, i32* %needuv, align 4, !dbg !5743
  br label %if.end74, !dbg !5744

if.else60:                                        ; preds = %if.end54
  %45 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5745
  %texco61 = getelementptr inbounds %struct.Material, %struct.Material* %45, i32 0, i32 90, !dbg !5747
  %46 = load i16, i16* %texco61, align 4, !dbg !5747
  %conv62 = sext i16 %46 to i32, !dbg !5745
  %and63 = and i32 %conv62, 32824, !dbg !5748
  %tobool64 = icmp ne i32 %and63, 0, !dbg !5748
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !5749

if.then65:                                        ; preds = %if.else60
  store i32 1, i32* %needuv, align 4, !dbg !5750
  br label %if.end73, !dbg !5751

if.else66:                                        ; preds = %if.else60
  %47 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5752
  %texco67 = getelementptr inbounds %struct.Material, %struct.Material* %47, i32 0, i32 90, !dbg !5754
  %48 = load i16, i16* %texco67, align 4, !dbg !5754
  %conv68 = sext i16 %48 to i32, !dbg !5752
  %and69 = and i32 %conv68, 192, !dbg !5755
  %tobool70 = icmp ne i32 %and69, 0, !dbg !5755
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !5756

if.then71:                                        ; preds = %if.else66
  store i32 1, i32* %needuv, align 4, !dbg !5757
  br label %if.end72, !dbg !5758

if.end72:                                         ; preds = %if.then71, %if.else66
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then65
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then59
  %49 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5759
  %mapto75 = getelementptr inbounds %struct.Material, %struct.Material* %49, i32 0, i32 91, !dbg !5761
  %50 = load i16, i16* %mapto75, align 2, !dbg !5761
  %conv76 = sext i16 %50 to i32, !dbg !5759
  %and77 = and i32 %conv76, 2, !dbg !5762
  %tobool78 = icmp ne i32 %and77, 0, !dbg !5762
  br i1 %tobool78, label %land.lhs.true79, label %if.end84, !dbg !5763

land.lhs.true79:                                  ; preds = %if.end74
  %51 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5764
  %normapspace = getelementptr inbounds %struct.MTex, %struct.MTex* %51, i32 0, i32 18, !dbg !5765
  %52 = load i16, i16* %normapspace, align 8, !dbg !5765
  %conv80 = sext i16 %52 to i32, !dbg !5764
  %cmp81 = icmp eq i32 %conv80, 3, !dbg !5766
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !5767

if.then83:                                        ; preds = %land.lhs.true79
  store i32 1, i32* %needtang, align 4, !dbg !5768
  br label %if.end84, !dbg !5769

if.end84:                                         ; preds = %if.then83, %land.lhs.true79, %if.end74
  br label %if.end85, !dbg !5770

if.end85:                                         ; preds = %if.end84, %land.end, %land.lhs.true, %if.end6
  br label %for.inc, !dbg !5771

for.inc:                                          ; preds = %if.end85, %if.then5
  %53 = load i32, i32* %a, align 4, !dbg !5772
  %inc = add nsw i32 %53, 1, !dbg !5772
  store i32 %inc, i32* %a, align 4, !dbg !5772
  br label %for.cond, !dbg !5773, !llvm.loop !5774

for.end:                                          ; preds = %for.cond
  %54 = load i32, i32* %needtang, align 4, !dbg !5776
  %tobool86 = icmp ne i32 %54, 0, !dbg !5776
  br i1 %tobool86, label %if.then87, label %if.else89, !dbg !5778

if.then87:                                        ; preds = %for.end
  %55 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5779
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %55, i32 0, i32 51, !dbg !5780
  %56 = load i32, i32* %mode, align 4, !dbg !5781
  %or88 = or i32 %56, 134217728, !dbg !5781
  store i32 %or88, i32* %mode, align 4, !dbg !5781
  br label %if.end92, !dbg !5779

if.else89:                                        ; preds = %for.end
  %57 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5782
  %mode90 = getelementptr inbounds %struct.Material, %struct.Material* %57, i32 0, i32 51, !dbg !5783
  %58 = load i32, i32* %mode90, align 4, !dbg !5784
  %and91 = and i32 %58, -134217729, !dbg !5784
  store i32 %and91, i32* %mode90, align 4, !dbg !5784
  br label %if.end92

if.end92:                                         ; preds = %if.else89, %if.then87
  %59 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5785
  %mode93 = getelementptr inbounds %struct.Material, %struct.Material* %59, i32 0, i32 51, !dbg !5787
  %60 = load i32, i32* %mode93, align 4, !dbg !5787
  %and94 = and i32 %60, 2192, !dbg !5788
  %tobool95 = icmp ne i32 %and94, 0, !dbg !5788
  br i1 %tobool95, label %if.then96, label %if.end105, !dbg !5789

if.then96:                                        ; preds = %if.end92
  store i32 1, i32* %needuv, align 4, !dbg !5790
  %61 = load i32, i32* %r_mode.addr, align 4, !dbg !5792
  %and97 = and i32 %61, 1, !dbg !5794
  %tobool98 = icmp ne i32 %and97, 0, !dbg !5794
  br i1 %tobool98, label %if.then99, label %if.end104, !dbg !5795

if.then99:                                        ; preds = %if.then96
  %62 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5796
  %texco100 = getelementptr inbounds %struct.Material, %struct.Material* %62, i32 0, i32 90, !dbg !5797
  %63 = load i16, i16* %texco100, align 4, !dbg !5798
  %conv101 = sext i16 %63 to i32, !dbg !5798
  %or102 = or i32 %conv101, 512, !dbg !5798
  %conv103 = trunc i32 %or102 to i16, !dbg !5798
  store i16 %conv103, i16* %texco100, align 4, !dbg !5798
  br label %if.end104, !dbg !5796

if.end104:                                        ; preds = %if.then99, %if.then96
  br label %if.end105, !dbg !5799

if.end105:                                        ; preds = %if.end104, %if.end92
  %64 = load i32, i32* %needuv, align 4, !dbg !5800
  %tobool106 = icmp ne i32 %64, 0, !dbg !5800
  br i1 %tobool106, label %if.then107, label %if.end112, !dbg !5802

if.then107:                                       ; preds = %if.end105
  %65 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5803
  %texco108 = getelementptr inbounds %struct.Material, %struct.Material* %65, i32 0, i32 90, !dbg !5804
  %66 = load i16, i16* %texco108, align 4, !dbg !5805
  %conv109 = sext i16 %66 to i32, !dbg !5805
  %or110 = or i32 %conv109, 2048, !dbg !5805
  %conv111 = trunc i32 %or110 to i16, !dbg !5805
  store i16 %conv111, i16* %texco108, align 4, !dbg !5805
  br label %if.end112, !dbg !5803

if.end112:                                        ; preds = %if.then107, %if.end105
  %67 = load i32, i32* %r_mode.addr, align 4, !dbg !5806
  %and113 = and i32 %67, 65536, !dbg !5808
  %tobool114 = icmp ne i32 %and113, 0, !dbg !5808
  br i1 %tobool114, label %if.then115, label %if.end141, !dbg !5809

if.then115:                                       ; preds = %if.end112
  %68 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5810
  %mode116 = getelementptr inbounds %struct.Material, %struct.Material* %68, i32 0, i32 51, !dbg !5813
  %69 = load i32, i32* %mode116, align 4, !dbg !5813
  %and117 = and i32 %69, 786432, !dbg !5814
  %tobool118 = icmp ne i32 %and117, 0, !dbg !5814
  br i1 %tobool118, label %if.then127, label %lor.lhs.false119, !dbg !5815

lor.lhs.false119:                                 ; preds = %if.then115
  %70 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5816
  %mode120 = getelementptr inbounds %struct.Material, %struct.Material* %70, i32 0, i32 51, !dbg !5817
  %71 = load i32, i32* %mode120, align 4, !dbg !5817
  %and121 = and i32 %71, 65536, !dbg !5818
  %tobool122 = icmp ne i32 %and121, 0, !dbg !5818
  br i1 %tobool122, label %land.lhs.true123, label %if.end140, !dbg !5819

land.lhs.true123:                                 ; preds = %lor.lhs.false119
  %72 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5820
  %mode124 = getelementptr inbounds %struct.Material, %struct.Material* %72, i32 0, i32 51, !dbg !5821
  %73 = load i32, i32* %mode124, align 4, !dbg !5821
  %and125 = and i32 %73, 131072, !dbg !5822
  %tobool126 = icmp ne i32 %and125, 0, !dbg !5822
  br i1 %tobool126, label %if.then127, label %if.end140, !dbg !5823

if.then127:                                       ; preds = %land.lhs.true123, %if.then115
  %74 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5824
  %texco128 = getelementptr inbounds %struct.Material, %struct.Material* %74, i32 0, i32 90, !dbg !5826
  %75 = load i16, i16* %texco128, align 4, !dbg !5827
  %conv129 = sext i16 %75 to i32, !dbg !5827
  %or130 = or i32 %conv129, 2055, !dbg !5827
  %conv131 = trunc i32 %or130 to i16, !dbg !5827
  store i16 %conv131, i16* %texco128, align 4, !dbg !5827
  %76 = load i32, i32* %r_mode.addr, align 4, !dbg !5828
  %and132 = and i32 %76, 1, !dbg !5830
  %tobool133 = icmp ne i32 %and132, 0, !dbg !5830
  br i1 %tobool133, label %if.then134, label %if.end139, !dbg !5831

if.then134:                                       ; preds = %if.then127
  %77 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5832
  %texco135 = getelementptr inbounds %struct.Material, %struct.Material* %77, i32 0, i32 90, !dbg !5833
  %78 = load i16, i16* %texco135, align 4, !dbg !5834
  %conv136 = sext i16 %78 to i32, !dbg !5834
  %or137 = or i32 %conv136, 512, !dbg !5834
  %conv138 = trunc i32 %or137 to i16, !dbg !5834
  store i16 %conv138, i16* %texco135, align 4, !dbg !5834
  br label %if.end139, !dbg !5832

if.end139:                                        ; preds = %if.then134, %if.then127
  br label %if.end140, !dbg !5835

if.end140:                                        ; preds = %if.end139, %land.lhs.true123, %lor.lhs.false119
  br label %if.end141, !dbg !5836

if.end141:                                        ; preds = %if.end140, %if.end112
  %79 = load float*, float** %amb.addr, align 8, !dbg !5837
  %tobool142 = icmp ne float* %79, null, !dbg !5837
  br i1 %tobool142, label %if.then143, label %if.end152, !dbg !5839

if.then143:                                       ; preds = %if.end141
  %80 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5840
  %amb144 = getelementptr inbounds %struct.Material, %struct.Material* %80, i32 0, i32 16, !dbg !5842
  %81 = load float, float* %amb144, align 4, !dbg !5842
  %82 = load float*, float** %amb.addr, align 8, !dbg !5843
  %arrayidx145 = getelementptr inbounds float, float* %82, i64 0, !dbg !5843
  %83 = load float, float* %arrayidx145, align 4, !dbg !5843
  %mul = fmul float %81, %83, !dbg !5844
  %84 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5845
  %ambr = getelementptr inbounds %struct.Material, %struct.Material* %84, i32 0, i32 13, !dbg !5846
  store float %mul, float* %ambr, align 8, !dbg !5847
  %85 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5848
  %amb146 = getelementptr inbounds %struct.Material, %struct.Material* %85, i32 0, i32 16, !dbg !5849
  %86 = load float, float* %amb146, align 4, !dbg !5849
  %87 = load float*, float** %amb.addr, align 8, !dbg !5850
  %arrayidx147 = getelementptr inbounds float, float* %87, i64 1, !dbg !5850
  %88 = load float, float* %arrayidx147, align 4, !dbg !5850
  %mul148 = fmul float %86, %88, !dbg !5851
  %89 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5852
  %ambg = getelementptr inbounds %struct.Material, %struct.Material* %89, i32 0, i32 15, !dbg !5853
  store float %mul148, float* %ambg, align 8, !dbg !5854
  %90 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5855
  %amb149 = getelementptr inbounds %struct.Material, %struct.Material* %90, i32 0, i32 16, !dbg !5856
  %91 = load float, float* %amb149, align 4, !dbg !5856
  %92 = load float*, float** %amb.addr, align 8, !dbg !5857
  %arrayidx150 = getelementptr inbounds float, float* %92, i64 2, !dbg !5857
  %93 = load float, float* %arrayidx150, align 4, !dbg !5857
  %mul151 = fmul float %91, %93, !dbg !5858
  %94 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5859
  %ambb = getelementptr inbounds %struct.Material, %struct.Material* %94, i32 0, i32 14, !dbg !5860
  store float %mul151, float* %ambb, align 4, !dbg !5861
  br label %if.end152, !dbg !5862

if.end152:                                        ; preds = %if.then143, %if.end141
  %95 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5863
  %shade_flag = getelementptr inbounds %struct.Material, %struct.Material* %95, i32 0, i32 50, !dbg !5865
  %96 = load i16, i16* %shade_flag, align 2, !dbg !5865
  %conv153 = sext i16 %96 to i32, !dbg !5863
  %and154 = and i32 %conv153, 8, !dbg !5866
  %tobool155 = icmp ne i32 %and154, 0, !dbg !5866
  br i1 %tobool155, label %land.lhs.true156, label %if.end188, !dbg !5867

land.lhs.true156:                                 ; preds = %if.end152
  %97 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5868
  %id = getelementptr inbounds %struct.Material, %struct.Material* %97, i32 0, i32 0, !dbg !5869
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !5870
  %98 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !5870
  %tobool157 = icmp ne %struct.Library* %98, null, !dbg !5868
  br i1 %tobool157, label %land.lhs.true158, label %if.end188, !dbg !5871

land.lhs.true158:                                 ; preds = %land.lhs.true156
  %99 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5872
  %group = getelementptr inbounds %struct.Material, %struct.Material* %99, i32 0, i32 105, !dbg !5873
  %100 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !5873
  %tobool159 = icmp ne %struct.Group* %100, null, !dbg !5872
  br i1 %tobool159, label %land.lhs.true160, label %if.end188, !dbg !5874

land.lhs.true160:                                 ; preds = %land.lhs.true158
  %101 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5875
  %group161 = getelementptr inbounds %struct.Material, %struct.Material* %101, i32 0, i32 105, !dbg !5876
  %102 = load %struct.Group*, %struct.Group** %group161, align 8, !dbg !5876
  %id162 = getelementptr inbounds %struct.Group, %struct.Group* %102, i32 0, i32 0, !dbg !5877
  %lib163 = getelementptr inbounds %struct.ID, %struct.ID* %id162, i32 0, i32 3, !dbg !5878
  %103 = load %struct.Library*, %struct.Library** %lib163, align 8, !dbg !5878
  %tobool164 = icmp ne %struct.Library* %103, null, !dbg !5875
  br i1 %tobool164, label %if.then165, label %if.end188, !dbg !5879

if.then165:                                       ; preds = %land.lhs.true160
  call void @llvm.dbg.declare(metadata %struct.Group** %group166, metadata !5880, metadata !DIExpression()), !dbg !5884
  %104 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5885
  %group167 = getelementptr inbounds %struct.Main, %struct.Main* %104, i32 0, i32 32, !dbg !5887
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group167, i32 0, i32 0, !dbg !5888
  %105 = load i8*, i8** %first, align 8, !dbg !5888
  %106 = bitcast i8* %105 to %struct.Group*, !dbg !5889
  store %struct.Group* %106, %struct.Group** %group166, align 8, !dbg !5890
  br label %for.cond168, !dbg !5891

for.cond168:                                      ; preds = %for.inc185, %if.then165
  %107 = load %struct.Group*, %struct.Group** %group166, align 8, !dbg !5892
  %tobool169 = icmp ne %struct.Group* %107, null, !dbg !5894
  br i1 %tobool169, label %for.body170, label %for.end187, !dbg !5894

for.body170:                                      ; preds = %for.cond168
  %108 = load %struct.Group*, %struct.Group** %group166, align 8, !dbg !5895
  %id171 = getelementptr inbounds %struct.Group, %struct.Group* %108, i32 0, i32 0, !dbg !5898
  %lib172 = getelementptr inbounds %struct.ID, %struct.ID* %id171, i32 0, i32 3, !dbg !5899
  %109 = load %struct.Library*, %struct.Library** %lib172, align 8, !dbg !5899
  %tobool173 = icmp ne %struct.Library* %109, null, !dbg !5895
  br i1 %tobool173, label %if.end184, label %land.lhs.true174, !dbg !5900

land.lhs.true174:                                 ; preds = %for.body170
  %110 = load %struct.Group*, %struct.Group** %group166, align 8, !dbg !5901
  %id175 = getelementptr inbounds %struct.Group, %struct.Group* %110, i32 0, i32 0, !dbg !5902
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id175, i32 0, i32 4, !dbg !5903
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5901
  %111 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5904
  %group176 = getelementptr inbounds %struct.Material, %struct.Material* %111, i32 0, i32 105, !dbg !5905
  %112 = load %struct.Group*, %struct.Group** %group176, align 8, !dbg !5905
  %id177 = getelementptr inbounds %struct.Group, %struct.Group* %112, i32 0, i32 0, !dbg !5906
  %name178 = getelementptr inbounds %struct.ID, %struct.ID* %id177, i32 0, i32 4, !dbg !5907
  %arraydecay179 = getelementptr inbounds [66 x i8], [66 x i8]* %name178, i64 0, i64 0, !dbg !5904
  %call = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay179) #5, !dbg !5908
  %cmp180 = icmp eq i32 %call, 0, !dbg !5909
  br i1 %cmp180, label %if.then182, label %if.end184, !dbg !5910

if.then182:                                       ; preds = %land.lhs.true174
  %113 = load %struct.Group*, %struct.Group** %group166, align 8, !dbg !5911
  %114 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5913
  %group183 = getelementptr inbounds %struct.Material, %struct.Material* %114, i32 0, i32 105, !dbg !5914
  store %struct.Group* %113, %struct.Group** %group183, align 8, !dbg !5915
  br label %if.end184, !dbg !5916

if.end184:                                        ; preds = %if.then182, %land.lhs.true174, %for.body170
  br label %for.inc185, !dbg !5917

for.inc185:                                       ; preds = %if.end184
  %115 = load %struct.Group*, %struct.Group** %group166, align 8, !dbg !5918
  %id186 = getelementptr inbounds %struct.Group, %struct.Group* %115, i32 0, i32 0, !dbg !5919
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id186, i32 0, i32 0, !dbg !5920
  %116 = load i8*, i8** %next, align 8, !dbg !5920
  %117 = bitcast i8* %116 to %struct.Group*, !dbg !5918
  store %struct.Group* %117, %struct.Group** %group166, align 8, !dbg !5921
  br label %for.cond168, !dbg !5922, !llvm.loop !5923

for.end187:                                       ; preds = %for.cond168
  br label %if.end188, !dbg !5925

if.end188:                                        ; preds = %for.end187, %land.lhs.true160, %land.lhs.true158, %land.lhs.true156, %if.end152
  ret void, !dbg !5926
}

declare dso_local void @ntreeShaderGetTexcoMode(%struct.bNodeTree*, i32, i16*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_render_nodetree(%struct.bNodeTree* %ntree, %struct.Material* %basemat, i32 %r_mode, float* %amb) #0 !dbg !5927 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %basemat.addr = alloca %struct.Material*, align 8
  %r_mode.addr = alloca i32, align 4
  %amb.addr = alloca float*, align 8
  %node = alloca %struct.bNode*, align 8
  %ma = alloca %struct.Material*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5930, metadata !DIExpression()), !dbg !5931
  store %struct.Material* %basemat, %struct.Material** %basemat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %basemat.addr, metadata !5932, metadata !DIExpression()), !dbg !5933
  store i32 %r_mode, i32* %r_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r_mode.addr, metadata !5934, metadata !DIExpression()), !dbg !5935
  store float* %amb, float** %amb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %amb.addr, metadata !5936, metadata !DIExpression()), !dbg !5937
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !5938, metadata !DIExpression()), !dbg !5939
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5940
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !5942
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !5943
  %1 = load i8*, i8** %first, align 8, !dbg !5943
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !5940
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !5944
  br label %for.cond, !dbg !5945

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5946
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !5948
  br i1 %tobool, label %for.body, label %for.end, !dbg !5948

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5949
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 20, !dbg !5952
  %5 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !5952
  %tobool1 = icmp ne %struct.ID* %5, null, !dbg !5949
  br i1 %tobool1, label %if.then, label %if.end36, !dbg !5953

if.then:                                          ; preds = %for.body
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5954
  %id2 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 20, !dbg !5954
  %7 = load %struct.ID*, %struct.ID** %id2, align 8, !dbg !5954
  %name = getelementptr inbounds %struct.ID, %struct.ID* %7, i32 0, i32 4, !dbg !5954
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5954
  %8 = bitcast i8* %arraydecay to i16*, !dbg !5954
  %9 = load i16, i16* %8, align 8, !dbg !5954
  %conv = sext i16 %9 to i32, !dbg !5954
  %cmp = icmp eq i32 %conv, 16717, !dbg !5957
  br i1 %cmp, label %if.then4, label %if.else, !dbg !5958

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !5959, metadata !DIExpression()), !dbg !5961
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5962
  %id5 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !5963
  %11 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !5963
  %12 = bitcast %struct.ID* %11 to %struct.Material*, !dbg !5964
  store %struct.Material* %12, %struct.Material** %ma, align 8, !dbg !5961
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5965
  %14 = load %struct.Material*, %struct.Material** %basemat.addr, align 8, !dbg !5967
  %cmp6 = icmp ne %struct.Material* %13, %14, !dbg !5968
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !5969

if.then8:                                         ; preds = %if.then4
  %15 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5970
  %16 = load i32, i32* %r_mode.addr, align 4, !dbg !5972
  %17 = load float*, float** %amb.addr, align 8, !dbg !5973
  call void @do_init_render_material(%struct.Material* %15, i32 %16, float* %17), !dbg !5974
  %18 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5975
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 90, !dbg !5976
  %19 = load i16, i16* %texco, align 4, !dbg !5976
  %conv9 = sext i16 %19 to i32, !dbg !5975
  %20 = load %struct.Material*, %struct.Material** %basemat.addr, align 8, !dbg !5977
  %texco10 = getelementptr inbounds %struct.Material, %struct.Material* %20, i32 0, i32 90, !dbg !5978
  %21 = load i16, i16* %texco10, align 4, !dbg !5979
  %conv11 = sext i16 %21 to i32, !dbg !5979
  %or = or i32 %conv11, %conv9, !dbg !5979
  %conv12 = trunc i32 %or to i16, !dbg !5979
  store i16 %conv12, i16* %texco10, align 4, !dbg !5979
  br label %if.end, !dbg !5980

if.end:                                           ; preds = %if.then8, %if.then4
  %22 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5981
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %22, i32 0, i32 51, !dbg !5982
  %23 = load i32, i32* %mode, align 4, !dbg !5982
  %and = and i32 %23, -42148678, !dbg !5983
  %24 = load %struct.Material*, %struct.Material** %basemat.addr, align 8, !dbg !5984
  %mode_l = getelementptr inbounds %struct.Material, %struct.Material* %24, i32 0, i32 52, !dbg !5985
  %25 = load i32, i32* %mode_l, align 8, !dbg !5986
  %or13 = or i32 %25, %and, !dbg !5986
  store i32 %or13, i32* %mode_l, align 8, !dbg !5986
  %26 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5987
  %mode2 = getelementptr inbounds %struct.Material, %struct.Material* %26, i32 0, i32 53, !dbg !5988
  %27 = load i32, i32* %mode2, align 4, !dbg !5988
  %and14 = and i32 %27, -2, !dbg !5989
  %28 = load %struct.Material*, %struct.Material** %basemat.addr, align 8, !dbg !5990
  %mode2_l = getelementptr inbounds %struct.Material, %struct.Material* %28, i32 0, i32 54, !dbg !5991
  %29 = load i32, i32* %mode2_l, align 8, !dbg !5992
  %or15 = or i32 %29, %and14, !dbg !5992
  store i32 %or15, i32* %mode2_l, align 8, !dbg !5992
  %30 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5993
  %mode16 = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 51, !dbg !5995
  %31 = load i32, i32* %mode16, align 4, !dbg !5995
  %and17 = and i32 %31, 4, !dbg !5996
  %tobool18 = icmp ne i32 %and17, 0, !dbg !5996
  br i1 %tobool18, label %if.end22, label %if.then19, !dbg !5997

if.then19:                                        ; preds = %if.end
  %32 = load %struct.Material*, %struct.Material** %basemat.addr, align 8, !dbg !5998
  %mode_l20 = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 52, !dbg !5999
  %33 = load i32, i32* %mode_l20, align 8, !dbg !6000
  %and21 = and i32 %33, -5, !dbg !6000
  store i32 %and21, i32* %mode_l20, align 8, !dbg !6000
  br label %if.end22, !dbg !5998

if.end22:                                         ; preds = %if.then19, %if.end
  %34 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6001
  %strand_surfnor = getelementptr inbounds %struct.Material, %struct.Material* %34, i32 0, i32 66, !dbg !6003
  %35 = load float, float* %strand_surfnor, align 8, !dbg !6003
  %cmp23 = fcmp ogt float %35, 0.000000e+00, !dbg !6004
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !6005

if.then25:                                        ; preds = %if.end22
  %36 = load %struct.Material*, %struct.Material** %basemat.addr, align 8, !dbg !6006
  %mode_l26 = getelementptr inbounds %struct.Material, %struct.Material* %36, i32 0, i32 52, !dbg !6007
  %37 = load i32, i32* %mode_l26, align 8, !dbg !6008
  %or27 = or i32 %37, -2147483648, !dbg !6008
  store i32 %or27, i32* %mode_l26, align 8, !dbg !6008
  br label %if.end28, !dbg !6006

if.end28:                                         ; preds = %if.then25, %if.end22
  br label %if.end35, !dbg !6009

if.else:                                          ; preds = %if.then
  %38 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6010
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %38, i32 0, i32 8, !dbg !6012
  %39 = load i16, i16* %type, align 4, !dbg !6012
  %conv29 = sext i16 %39 to i32, !dbg !6010
  %cmp30 = icmp eq i32 %conv29, 2, !dbg !6013
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !6014

if.then32:                                        ; preds = %if.else
  %40 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6015
  %id33 = getelementptr inbounds %struct.bNode, %struct.bNode* %40, i32 0, i32 20, !dbg !6016
  %41 = load %struct.ID*, %struct.ID** %id33, align 8, !dbg !6016
  %42 = bitcast %struct.ID* %41 to %struct.bNodeTree*, !dbg !6017
  %43 = load %struct.Material*, %struct.Material** %basemat.addr, align 8, !dbg !6018
  %44 = load i32, i32* %r_mode.addr, align 4, !dbg !6019
  %45 = load float*, float** %amb.addr, align 8, !dbg !6020
  call void @init_render_nodetree(%struct.bNodeTree* %42, %struct.Material* %43, i32 %44, float* %45), !dbg !6021
  br label %if.end34, !dbg !6021

if.end34:                                         ; preds = %if.then32, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end28
  br label %if.end36, !dbg !6022

if.end36:                                         ; preds = %if.end35, %for.body
  br label %for.inc, !dbg !6023

for.inc:                                          ; preds = %if.end36
  %46 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6024
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %46, i32 0, i32 0, !dbg !6025
  %47 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6025
  store %struct.bNode* %47, %struct.bNode** %node, align 8, !dbg !6026
  br label %for.cond, !dbg !6027, !llvm.loop !6028

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6030
}

declare dso_local %struct.bNodeTreeExec* @ntreeShaderBeginExecTree(%struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_render_materials(%struct.Main* %bmain, i32 %r_mode, float* %amb) #0 !dbg !6031 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %r_mode.addr = alloca i32, align 4
  %amb.addr = alloca float*, align 8
  %ma = alloca %struct.Material*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !6034, metadata !DIExpression()), !dbg !6035
  store i32 %r_mode, i32* %r_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r_mode.addr, metadata !6036, metadata !DIExpression()), !dbg !6037
  store float* %amb, float** %amb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %amb.addr, metadata !6038, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !6040, metadata !DIExpression()), !dbg !6041
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6042
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 17, !dbg !6044
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat, i32 0, i32 0, !dbg !6045
  %1 = load i8*, i8** %first, align 8, !dbg !6045
  %2 = bitcast i8* %1 to %struct.Material*, !dbg !6042
  store %struct.Material* %2, %struct.Material** %ma, align 8, !dbg !6046
  br label %for.cond, !dbg !6047

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6048
  %tobool = icmp ne %struct.Material* %3, null, !dbg !6050
  br i1 %tobool, label %for.body, label %for.end, !dbg !6050

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6051
  %id = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 0, !dbg !6054
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !6055
  %5 = load i32, i32* %us, align 4, !dbg !6055
  %tobool1 = icmp ne i32 %5, 0, !dbg !6051
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6056

if.then:                                          ; preds = %for.body
  %6 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6057
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 90, !dbg !6059
  store i16 0, i16* %texco, align 4, !dbg !6060
  %7 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6061
  %mapto = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 91, !dbg !6062
  store i16 0, i16* %mapto, align 2, !dbg !6063
  br label %if.end, !dbg !6064

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6065

for.inc:                                          ; preds = %if.end
  %8 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6066
  %id2 = getelementptr inbounds %struct.Material, %struct.Material* %8, i32 0, i32 0, !dbg !6067
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 0, !dbg !6068
  %9 = load i8*, i8** %next, align 8, !dbg !6068
  %10 = bitcast i8* %9 to %struct.Material*, !dbg !6066
  store %struct.Material* %10, %struct.Material** %ma, align 8, !dbg !6069
  br label %for.cond, !dbg !6070, !llvm.loop !6071

for.end:                                          ; preds = %for.cond
  %11 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6073
  %mat3 = getelementptr inbounds %struct.Main, %struct.Main* %11, i32 0, i32 17, !dbg !6075
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat3, i32 0, i32 0, !dbg !6076
  %12 = load i8*, i8** %first4, align 8, !dbg !6076
  %13 = bitcast i8* %12 to %struct.Material*, !dbg !6073
  store %struct.Material* %13, %struct.Material** %ma, align 8, !dbg !6077
  br label %for.cond5, !dbg !6078

for.cond5:                                        ; preds = %for.inc14, %for.end
  %14 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6079
  %tobool6 = icmp ne %struct.Material* %14, null, !dbg !6081
  br i1 %tobool6, label %for.body7, label %for.end17, !dbg !6081

for.body7:                                        ; preds = %for.cond5
  %15 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6082
  %flag = getelementptr inbounds %struct.Material, %struct.Material* %15, i32 0, i32 3, !dbg !6084
  %16 = load i16, i16* %flag, align 2, !dbg !6085
  %conv = sext i16 %16 to i32, !dbg !6085
  %and = and i32 %conv, -2, !dbg !6085
  %conv8 = trunc i32 %and to i16, !dbg !6085
  store i16 %conv8, i16* %flag, align 2, !dbg !6085
  %17 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6086
  %id9 = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 0, !dbg !6088
  %us10 = getelementptr inbounds %struct.ID, %struct.ID* %id9, i32 0, i32 6, !dbg !6089
  %18 = load i32, i32* %us10, align 4, !dbg !6089
  %tobool11 = icmp ne i32 %18, 0, !dbg !6086
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !6090

if.then12:                                        ; preds = %for.body7
  %19 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6091
  %20 = load i32, i32* %r_mode.addr, align 4, !dbg !6092
  %21 = load float*, float** %amb.addr, align 8, !dbg !6093
  call void @init_render_material(%struct.Material* %19, i32 %20, float* %21), !dbg !6094
  br label %if.end13, !dbg !6094

if.end13:                                         ; preds = %if.then12, %for.body7
  br label %for.inc14, !dbg !6095

for.inc14:                                        ; preds = %if.end13
  %22 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6096
  %id15 = getelementptr inbounds %struct.Material, %struct.Material* %22, i32 0, i32 0, !dbg !6097
  %next16 = getelementptr inbounds %struct.ID, %struct.ID* %id15, i32 0, i32 0, !dbg !6098
  %23 = load i8*, i8** %next16, align 8, !dbg !6098
  %24 = bitcast i8* %23 to %struct.Material*, !dbg !6096
  store %struct.Material* %24, %struct.Material** %ma, align 8, !dbg !6099
  br label %for.cond5, !dbg !6100, !llvm.loop !6101

for.end17:                                        ; preds = %for.cond5
  %25 = load i32, i32* %r_mode.addr, align 4, !dbg !6103
  %26 = load float*, float** %amb.addr, align 8, !dbg !6104
  call void @init_render_material(%struct.Material* @defmaterial, i32 %25, float* %26), !dbg !6105
  ret void, !dbg !6106
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @end_render_material(%struct.Material* %mat) #0 !dbg !6107 {
entry:
  %mat.addr = alloca %struct.Material*, align 8
  store %struct.Material* %mat, %struct.Material** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %mat.addr, metadata !6108, metadata !DIExpression()), !dbg !6109
  %0 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !6110
  %tobool = icmp ne %struct.Material* %0, null, !dbg !6110
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !6112

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !6113
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 103, !dbg !6114
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !6114
  %tobool1 = icmp ne %struct.bNodeTree* %2, null, !dbg !6113
  br i1 %tobool1, label %land.lhs.true2, label %if.end9, !dbg !6115

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !6116
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %3, i32 0, i32 77, !dbg !6117
  %4 = load i8, i8* %use_nodes, align 1, !dbg !6117
  %conv = zext i8 %4 to i32, !dbg !6116
  %tobool3 = icmp ne i32 %conv, 0, !dbg !6116
  br i1 %tobool3, label %if.then, label %if.end9, !dbg !6118

if.then:                                          ; preds = %land.lhs.true2
  %5 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !6119
  %nodetree4 = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 103, !dbg !6122
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree4, align 8, !dbg !6122
  %execdata = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 27, !dbg !6123
  %7 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata, align 8, !dbg !6123
  %tobool5 = icmp ne %struct.bNodeTreeExec* %7, null, !dbg !6119
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !6124

if.then6:                                         ; preds = %if.then
  %8 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !6125
  %nodetree7 = getelementptr inbounds %struct.Material, %struct.Material* %8, i32 0, i32 103, !dbg !6126
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree7, align 8, !dbg !6126
  %execdata8 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 27, !dbg !6127
  %10 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata8, align 8, !dbg !6127
  call void @ntreeShaderEndExecTree(%struct.bNodeTreeExec* %10), !dbg !6128
  br label %if.end, !dbg !6128

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end9, !dbg !6129

if.end9:                                          ; preds = %if.end, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !6130
}

declare dso_local void @ntreeShaderEndExecTree(%struct.bNodeTreeExec*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @end_render_materials(%struct.Main* %bmain) #0 !dbg !6131 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %ma = alloca %struct.Material*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !6134, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !6136, metadata !DIExpression()), !dbg !6137
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6138
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 17, !dbg !6140
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat, i32 0, i32 0, !dbg !6141
  %1 = load i8*, i8** %first, align 8, !dbg !6141
  %2 = bitcast i8* %1 to %struct.Material*, !dbg !6138
  store %struct.Material* %2, %struct.Material** %ma, align 8, !dbg !6142
  br label %for.cond, !dbg !6143

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6144
  %tobool = icmp ne %struct.Material* %3, null, !dbg !6146
  br i1 %tobool, label %for.body, label %for.end, !dbg !6146

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6147
  %id = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 0, !dbg !6149
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !6150
  %5 = load i32, i32* %us, align 4, !dbg !6150
  %tobool1 = icmp ne i32 %5, 0, !dbg !6147
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6151

if.then:                                          ; preds = %for.body
  %6 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6152
  call void @end_render_material(%struct.Material* %6), !dbg !6153
  br label %if.end, !dbg !6153

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6150

for.inc:                                          ; preds = %if.end
  %7 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6154
  %id2 = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 0, !dbg !6155
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 0, !dbg !6156
  %8 = load i8*, i8** %next, align 8, !dbg !6156
  %9 = bitcast i8* %8 to %struct.Material*, !dbg !6154
  store %struct.Material* %9, %struct.Material** %ma, align 8, !dbg !6157
  br label %for.cond, !dbg !6158, !llvm.loop !6159

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6161
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @material_in_material(%struct.Material* %parmat, %struct.Material* %mat) #0 !dbg !6162 {
entry:
  %retval = alloca i8, align 1
  %parmat.addr = alloca %struct.Material*, align 8
  %mat.addr = alloca %struct.Material*, align 8
  store %struct.Material* %parmat, %struct.Material** %parmat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %parmat.addr, metadata !6165, metadata !DIExpression()), !dbg !6166
  store %struct.Material* %mat, %struct.Material** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %mat.addr, metadata !6167, metadata !DIExpression()), !dbg !6168
  %0 = load %struct.Material*, %struct.Material** %parmat.addr, align 8, !dbg !6169
  %1 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !6171
  %cmp = icmp eq %struct.Material* %0, %1, !dbg !6172
  br i1 %cmp, label %if.then, label %if.else, !dbg !6173

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !6174
  br label %return, !dbg !6174

if.else:                                          ; preds = %entry
  %2 = load %struct.Material*, %struct.Material** %parmat.addr, align 8, !dbg !6175
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 103, !dbg !6177
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !6177
  %tobool = icmp ne %struct.bNodeTree* %3, null, !dbg !6175
  br i1 %tobool, label %land.lhs.true, label %if.else4, !dbg !6178

land.lhs.true:                                    ; preds = %if.else
  %4 = load %struct.Material*, %struct.Material** %parmat.addr, align 8, !dbg !6179
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 77, !dbg !6180
  %5 = load i8, i8* %use_nodes, align 1, !dbg !6180
  %conv = zext i8 %5 to i32, !dbg !6179
  %tobool1 = icmp ne i32 %conv, 0, !dbg !6179
  br i1 %tobool1, label %if.then2, label %if.else4, !dbg !6181

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.Material*, %struct.Material** %parmat.addr, align 8, !dbg !6182
  %nodetree3 = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 103, !dbg !6183
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree3, align 8, !dbg !6183
  %8 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !6184
  %call = call zeroext i8 @material_in_nodetree(%struct.bNodeTree* %7, %struct.Material* %8), !dbg !6185
  store i8 %call, i8* %retval, align 1, !dbg !6186
  br label %return, !dbg !6186

if.else4:                                         ; preds = %land.lhs.true, %if.else
  store i8 0, i8* %retval, align 1, !dbg !6187
  br label %return, !dbg !6187

return:                                           ; preds = %if.else4, %if.then2, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !6188
  ret i8 %9, !dbg !6188
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @material_in_nodetree(%struct.bNodeTree* %ntree, %struct.Material* %mat) #0 !dbg !6189 {
entry:
  %retval = alloca i8, align 1
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %mat.addr = alloca %struct.Material*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6192, metadata !DIExpression()), !dbg !6193
  store %struct.Material* %mat, %struct.Material** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %mat.addr, metadata !6194, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6196, metadata !DIExpression()), !dbg !6197
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6198
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !6200
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6201
  %1 = load i8*, i8** %first, align 8, !dbg !6201
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !6198
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !6202
  br label %for.cond, !dbg !6203

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6204
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !6206
  br i1 %tobool, label %for.body, label %for.end, !dbg !6206

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6207
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 20, !dbg !6210
  %5 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6210
  %tobool1 = icmp ne %struct.ID* %5, null, !dbg !6207
  br i1 %tobool1, label %if.then, label %if.end19, !dbg !6211

if.then:                                          ; preds = %for.body
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6212
  %id2 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 20, !dbg !6212
  %7 = load %struct.ID*, %struct.ID** %id2, align 8, !dbg !6212
  %name = getelementptr inbounds %struct.ID, %struct.ID* %7, i32 0, i32 4, !dbg !6212
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !6212
  %8 = bitcast i8* %arraydecay to i16*, !dbg !6212
  %9 = load i16, i16* %8, align 8, !dbg !6212
  %conv = sext i16 %9 to i32, !dbg !6212
  %cmp = icmp eq i32 %conv, 16717, !dbg !6215
  br i1 %cmp, label %if.then4, label %if.else, !dbg !6216

if.then4:                                         ; preds = %if.then
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6217
  %id5 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !6220
  %11 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !6220
  %12 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !6221
  %13 = bitcast %struct.Material* %12 to %struct.ID*, !dbg !6222
  %cmp6 = icmp eq %struct.ID* %11, %13, !dbg !6223
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !6224

if.then8:                                         ; preds = %if.then4
  store i8 1, i8* %retval, align 1, !dbg !6225
  br label %return, !dbg !6225

if.end:                                           ; preds = %if.then4
  br label %if.end18, !dbg !6227

if.else:                                          ; preds = %if.then
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6228
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 8, !dbg !6230
  %15 = load i16, i16* %type, align 4, !dbg !6230
  %conv9 = sext i16 %15 to i32, !dbg !6228
  %cmp10 = icmp eq i32 %conv9, 2, !dbg !6231
  br i1 %cmp10, label %if.then12, label %if.end17, !dbg !6232

if.then12:                                        ; preds = %if.else
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6233
  %id13 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 20, !dbg !6236
  %17 = load %struct.ID*, %struct.ID** %id13, align 8, !dbg !6236
  %18 = bitcast %struct.ID* %17 to %struct.bNodeTree*, !dbg !6237
  %19 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !6238
  %call = call zeroext i8 @material_in_nodetree(%struct.bNodeTree* %18, %struct.Material* %19), !dbg !6239
  %tobool14 = icmp ne i8 %call, 0, !dbg !6239
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !6240

if.then15:                                        ; preds = %if.then12
  store i8 1, i8* %retval, align 1, !dbg !6241
  br label %return, !dbg !6241

if.end16:                                         ; preds = %if.then12
  br label %if.end17, !dbg !6243

if.end17:                                         ; preds = %if.end16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end
  br label %if.end19, !dbg !6244

if.end19:                                         ; preds = %if.end18, %for.body
  br label %for.inc, !dbg !6245

for.inc:                                          ; preds = %if.end19
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6246
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 0, !dbg !6247
  %21 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6247
  store %struct.bNode* %21, %struct.bNode** %node, align 8, !dbg !6248
  br label %for.cond, !dbg !6249, !llvm.loop !6250

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !6252
  br label %return, !dbg !6252

return:                                           ; preds = %for.end, %if.then15, %if.then8
  %22 = load i8, i8* %retval, align 1, !dbg !6253
  ret i8 %22, !dbg !6253
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @material_drivers_update(%struct.Scene* %scene, %struct.Material* %ma, float %ctime) #0 !dbg !6254 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %ctime.addr = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !6261, metadata !DIExpression()), !dbg !6262
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !6263, metadata !DIExpression()), !dbg !6264
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6265
  %id = getelementptr inbounds %struct.Material, %struct.Material* %0, i32 0, i32 0, !dbg !6267
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !6268
  %1 = load i16, i16* %flag, align 2, !dbg !6268
  %conv = sext i16 %1 to i32, !dbg !6265
  %and = and i32 %conv, 1024, !dbg !6269
  %tobool = icmp ne i32 %and, 0, !dbg !6269
  br i1 %tobool, label %if.then, label %if.end, !dbg !6270

if.then:                                          ; preds = %entry
  br label %return, !dbg !6271

if.end:                                           ; preds = %entry
  %2 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6272
  %id1 = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 0, !dbg !6273
  %flag2 = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 5, !dbg !6274
  %3 = load i16, i16* %flag2, align 2, !dbg !6275
  %conv3 = sext i16 %3 to i32, !dbg !6275
  %or = or i32 %conv3, 1024, !dbg !6275
  %conv4 = trunc i32 %or to i16, !dbg !6275
  store i16 %conv4, i16* %flag2, align 2, !dbg !6275
  %4 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6276
  %adt = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 1, !dbg !6278
  %5 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !6278
  %tobool5 = icmp ne %struct.AnimData* %5, null, !dbg !6276
  br i1 %tobool5, label %land.lhs.true, label %if.end11, !dbg !6279

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6280
  %adt6 = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 1, !dbg !6281
  %7 = load %struct.AnimData*, %struct.AnimData** %adt6, align 8, !dbg !6281
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %7, i32 0, i32 5, !dbg !6282
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !6283
  %8 = load i8*, i8** %first, align 8, !dbg !6283
  %tobool7 = icmp ne i8* %8, null, !dbg !6280
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !6284

if.then8:                                         ; preds = %land.lhs.true
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6285
  %10 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6287
  %id9 = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 0, !dbg !6288
  %11 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6289
  %adt10 = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 1, !dbg !6290
  %12 = load %struct.AnimData*, %struct.AnimData** %adt10, align 8, !dbg !6290
  %13 = load float, float* %ctime.addr, align 4, !dbg !6291
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %9, %struct.ID* %id9, %struct.AnimData* %12, float %13, i16 signext 1), !dbg !6292
  br label %if.end11, !dbg !6293

if.end11:                                         ; preds = %if.then8, %land.lhs.true, %if.end
  %14 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6294
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %14, i32 0, i32 103, !dbg !6296
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !6296
  %tobool12 = icmp ne %struct.bNodeTree* %15, null, !dbg !6294
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6297

if.then13:                                        ; preds = %if.end11
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6298
  %17 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6300
  %nodetree14 = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 103, !dbg !6301
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree14, align 8, !dbg !6301
  %19 = load float, float* %ctime.addr, align 4, !dbg !6302
  call void @material_node_drivers_update(%struct.Scene* %16, %struct.bNodeTree* %18, float %19), !dbg !6303
  br label %if.end15, !dbg !6304

if.end15:                                         ; preds = %if.then13, %if.end11
  %20 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6305
  %id16 = getelementptr inbounds %struct.Material, %struct.Material* %20, i32 0, i32 0, !dbg !6306
  %flag17 = getelementptr inbounds %struct.ID, %struct.ID* %id16, i32 0, i32 5, !dbg !6307
  %21 = load i16, i16* %flag17, align 2, !dbg !6308
  %conv18 = sext i16 %21 to i32, !dbg !6308
  %and19 = and i32 %conv18, -1025, !dbg !6308
  %conv20 = trunc i32 %and19 to i16, !dbg !6308
  store i16 %conv20, i16* %flag17, align 2, !dbg !6308
  br label %return, !dbg !6309

return:                                           ; preds = %if.end15, %if.then
  ret void, !dbg !6309
}

declare dso_local void @BKE_animsys_evaluate_animdata(%struct.Scene*, %struct.ID*, %struct.AnimData*, float, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @material_node_drivers_update(%struct.Scene* %scene, %struct.bNodeTree* %ntree, float %ctime) #0 !dbg !6310 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %ctime.addr = alloca float, align 4
  %node = alloca %struct.bNode*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6313, metadata !DIExpression()), !dbg !6314
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6315, metadata !DIExpression()), !dbg !6316
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !6317, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6319, metadata !DIExpression()), !dbg !6320
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6321
  %adt = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 1, !dbg !6323
  %1 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !6323
  %tobool = icmp ne %struct.AnimData* %1, null, !dbg !6321
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6324

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6325
  %adt1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 1, !dbg !6326
  %3 = load %struct.AnimData*, %struct.AnimData** %adt1, align 8, !dbg !6326
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %3, i32 0, i32 5, !dbg !6327
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !6328
  %4 = load i8*, i8** %first, align 8, !dbg !6328
  %tobool2 = icmp ne i8* %4, null, !dbg !6325
  br i1 %tobool2, label %if.then, label %if.end, !dbg !6329

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6330
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6332
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 0, !dbg !6333
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6334
  %adt3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 1, !dbg !6335
  %8 = load %struct.AnimData*, %struct.AnimData** %adt3, align 8, !dbg !6335
  %9 = load float, float* %ctime.addr, align 4, !dbg !6336
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %5, %struct.ID* %id, %struct.AnimData* %8, float %9, i16 signext 1), !dbg !6337
  br label %if.end, !dbg !6338

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6339
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 7, !dbg !6341
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6342
  %11 = load i8*, i8** %first4, align 8, !dbg !6342
  %12 = bitcast i8* %11 to %struct.bNode*, !dbg !6339
  store %struct.bNode* %12, %struct.bNode** %node, align 8, !dbg !6343
  br label %for.cond, !dbg !6344

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6345
  %tobool5 = icmp ne %struct.bNode* %13, null, !dbg !6347
  br i1 %tobool5, label %for.body, label %for.end, !dbg !6347

for.body:                                         ; preds = %for.cond
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6348
  %id6 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 20, !dbg !6351
  %15 = load %struct.ID*, %struct.ID** %id6, align 8, !dbg !6351
  %tobool7 = icmp ne %struct.ID* %15, null, !dbg !6348
  br i1 %tobool7, label %if.then8, label %if.end20, !dbg !6352

if.then8:                                         ; preds = %for.body
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6353
  %id9 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 20, !dbg !6353
  %17 = load %struct.ID*, %struct.ID** %id9, align 8, !dbg !6353
  %name = getelementptr inbounds %struct.ID, %struct.ID* %17, i32 0, i32 4, !dbg !6353
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !6353
  %18 = bitcast i8* %arraydecay to i16*, !dbg !6353
  %19 = load i16, i16* %18, align 8, !dbg !6353
  %conv = sext i16 %19 to i32, !dbg !6353
  %cmp = icmp eq i32 %conv, 16717, !dbg !6356
  br i1 %cmp, label %if.then11, label %if.else, !dbg !6357

if.then11:                                        ; preds = %if.then8
  %20 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6358
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6360
  %id12 = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 20, !dbg !6361
  %22 = load %struct.ID*, %struct.ID** %id12, align 8, !dbg !6361
  %23 = bitcast %struct.ID* %22 to %struct.Material*, !dbg !6362
  %24 = load float, float* %ctime.addr, align 4, !dbg !6363
  call void @material_drivers_update(%struct.Scene* %20, %struct.Material* %23, float %24), !dbg !6364
  br label %if.end19, !dbg !6365

if.else:                                          ; preds = %if.then8
  %25 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6366
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 8, !dbg !6368
  %26 = load i16, i16* %type, align 4, !dbg !6368
  %conv13 = sext i16 %26 to i32, !dbg !6366
  %cmp14 = icmp eq i32 %conv13, 2, !dbg !6369
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !6370

if.then16:                                        ; preds = %if.else
  %27 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6371
  %28 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6373
  %id17 = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 20, !dbg !6374
  %29 = load %struct.ID*, %struct.ID** %id17, align 8, !dbg !6374
  %30 = bitcast %struct.ID* %29 to %struct.bNodeTree*, !dbg !6375
  %31 = load float, float* %ctime.addr, align 4, !dbg !6376
  call void @material_node_drivers_update(%struct.Scene* %27, %struct.bNodeTree* %30, float %31), !dbg !6377
  br label %if.end18, !dbg !6378

if.end18:                                         ; preds = %if.then16, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then11
  br label %if.end20, !dbg !6379

if.end20:                                         ; preds = %if.end19, %for.body
  br label %for.inc, !dbg !6380

for.inc:                                          ; preds = %if.end20
  %32 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6381
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %32, i32 0, i32 0, !dbg !6382
  %33 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6382
  store %struct.bNode* %33, %struct.bNode** %node, align 8, !dbg !6383
  br label %for.cond, !dbg !6384, !llvm.loop !6385

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6387
}

declare dso_local void @BKE_displist_free(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_texpaint_slot_refresh_cache(%struct.Scene* %scene, %struct.Material* %ma) #0 !dbg !6388 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %mtex = alloca %struct.MTex**, align 8
  %count = alloca i16, align 2
  %index = alloca i16, align 2
  %i = alloca i16, align 2
  %use_nodes = alloca i8, align 1
  %is_bi = alloca i8, align 1
  %node = alloca %struct.bNode*, align 8
  %active_node = alloca %struct.bNode*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6391, metadata !DIExpression()), !dbg !6392
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !6393, metadata !DIExpression()), !dbg !6394
  call void @llvm.dbg.declare(metadata %struct.MTex*** %mtex, metadata !6395, metadata !DIExpression()), !dbg !6397
  call void @llvm.dbg.declare(metadata i16* %count, metadata !6398, metadata !DIExpression()), !dbg !6399
  store i16 0, i16* %count, align 2, !dbg !6399
  call void @llvm.dbg.declare(metadata i16* %index, metadata !6400, metadata !DIExpression()), !dbg !6401
  store i16 0, i16* %index, align 2, !dbg !6401
  call void @llvm.dbg.declare(metadata i16* %i, metadata !6402, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.declare(metadata i8* %use_nodes, metadata !6404, metadata !DIExpression()), !dbg !6405
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6406
  %call = call zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene* %0), !dbg !6407
  store i8 %call, i8* %use_nodes, align 1, !dbg !6405
  call void @llvm.dbg.declare(metadata i8* %is_bi, metadata !6408, metadata !DIExpression()), !dbg !6409
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6410
  %call1 = call zeroext i8 @BKE_scene_uses_blender_internal(%struct.Scene* %1), !dbg !6411
  %conv = zext i8 %call1 to i32, !dbg !6411
  %tobool = icmp ne i32 %conv, 0, !dbg !6411
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6412

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6413
  %call2 = call zeroext i8 @BKE_scene_uses_blender_game(%struct.Scene* %2), !dbg !6414
  %conv3 = zext i8 %call2 to i32, !dbg !6414
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !6412
  br label %lor.end, !dbg !6412

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool4, %lor.rhs ]
  %lor.ext = zext i1 %3 to i32, !dbg !6412
  %conv5 = trunc i32 %lor.ext to i8, !dbg !6411
  store i8 %conv5, i8* %is_bi, align 1, !dbg !6409
  %4 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6415
  %tobool6 = icmp ne %struct.Material* %4, null, !dbg !6415
  br i1 %tobool6, label %if.end, label %if.then, !dbg !6417

if.then:                                          ; preds = %lor.end
  br label %return, !dbg !6418

if.end:                                           ; preds = %lor.end
  %5 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6419
  %texpaintslot = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 135, !dbg !6421
  %6 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot, align 8, !dbg !6421
  %tobool7 = icmp ne %struct.TexPaintSlot* %6, null, !dbg !6419
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !6422

if.then8:                                         ; preds = %if.end
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6423
  %8 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6425
  %texpaintslot9 = getelementptr inbounds %struct.Material, %struct.Material* %8, i32 0, i32 135, !dbg !6426
  %9 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot9, align 8, !dbg !6426
  %10 = bitcast %struct.TexPaintSlot* %9 to i8*, !dbg !6425
  call void %7(i8* %10), !dbg !6423
  %11 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6427
  %tot_slots = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 133, !dbg !6428
  store i16 0, i16* %tot_slots, align 8, !dbg !6429
  %12 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6430
  %texpaintslot10 = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 135, !dbg !6431
  store %struct.TexPaintSlot* null, %struct.TexPaintSlot** %texpaintslot10, align 8, !dbg !6432
  br label %if.end11, !dbg !6433

if.end11:                                         ; preds = %if.then8, %if.end
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6434
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 20, !dbg !6436
  %14 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !6436
  %imapaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %14, i32 0, i32 17, !dbg !6437
  %mode = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint, i32 0, i32 6, !dbg !6438
  %15 = load i32, i32* %mode, align 4, !dbg !6438
  %cmp = icmp eq i32 %15, 1, !dbg !6439
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !6440

if.then13:                                        ; preds = %if.end11
  %16 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6441
  %paint_active_slot = getelementptr inbounds %struct.Material, %struct.Material* %16, i32 0, i32 131, !dbg !6443
  store i16 0, i16* %paint_active_slot, align 4, !dbg !6444
  %17 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6445
  %paint_clone_slot = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 132, !dbg !6446
  store i16 0, i16* %paint_clone_slot, align 2, !dbg !6447
  br label %return, !dbg !6448

if.end14:                                         ; preds = %if.end11
  %18 = load i8, i8* %use_nodes, align 1, !dbg !6449
  %conv15 = zext i8 %18 to i32, !dbg !6449
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !6449
  br i1 %tobool16, label %if.then20, label %lor.lhs.false, !dbg !6451

lor.lhs.false:                                    ; preds = %if.end14
  %19 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6452
  %use_nodes17 = getelementptr inbounds %struct.Material, %struct.Material* %19, i32 0, i32 77, !dbg !6453
  %20 = load i8, i8* %use_nodes17, align 1, !dbg !6453
  %conv18 = zext i8 %20 to i32, !dbg !6452
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !6452
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !6454

if.then20:                                        ; preds = %lor.lhs.false, %if.end14
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6455, metadata !DIExpression()), !dbg !6457
  call void @llvm.dbg.declare(metadata %struct.bNode** %active_node, metadata !6458, metadata !DIExpression()), !dbg !6459
  %21 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6460
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %21, i32 0, i32 103, !dbg !6462
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !6462
  %tobool21 = icmp ne %struct.bNodeTree* %22, null, !dbg !6463
  br i1 %tobool21, label %if.end25, label %if.then22, !dbg !6464

if.then22:                                        ; preds = %if.then20
  %23 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6465
  %paint_active_slot23 = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 131, !dbg !6467
  store i16 0, i16* %paint_active_slot23, align 4, !dbg !6468
  %24 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6469
  %paint_clone_slot24 = getelementptr inbounds %struct.Material, %struct.Material* %24, i32 0, i32 132, !dbg !6470
  store i16 0, i16* %paint_clone_slot24, align 2, !dbg !6471
  br label %return, !dbg !6472

if.end25:                                         ; preds = %if.then20
  %25 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6473
  %nodetree26 = getelementptr inbounds %struct.Material, %struct.Material* %25, i32 0, i32 103, !dbg !6475
  %26 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree26, align 8, !dbg !6475
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %26, i32 0, i32 7, !dbg !6476
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6477
  %27 = load i8*, i8** %first, align 8, !dbg !6477
  %28 = bitcast i8* %27 to %struct.bNode*, !dbg !6473
  store %struct.bNode* %28, %struct.bNode** %node, align 8, !dbg !6478
  br label %for.cond, !dbg !6479

for.cond:                                         ; preds = %for.inc, %if.end25
  %29 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6480
  %tobool27 = icmp ne %struct.bNode* %29, null, !dbg !6482
  br i1 %tobool27, label %for.body, label %for.end, !dbg !6482

for.body:                                         ; preds = %for.cond
  %30 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6483
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %30, i32 0, i32 4, !dbg !6486
  %31 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !6486
  %nclass = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %31, i32 0, i32 14, !dbg !6487
  %32 = load i16, i16* %nclass, align 4, !dbg !6487
  %conv28 = sext i16 %32 to i32, !dbg !6483
  %cmp29 = icmp eq i32 %conv28, 13, !dbg !6488
  br i1 %cmp29, label %land.lhs.true, label %if.end37, !dbg !6489

land.lhs.true:                                    ; preds = %for.body
  %33 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6490
  %typeinfo31 = getelementptr inbounds %struct.bNode, %struct.bNode* %33, i32 0, i32 4, !dbg !6491
  %34 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo31, align 8, !dbg !6491
  %type = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %34, i32 0, i32 4, !dbg !6492
  %35 = load i32, i32* %type, align 4, !dbg !6492
  %cmp32 = icmp eq i32 %35, 143, !dbg !6493
  br i1 %cmp32, label %land.lhs.true34, label %if.end37, !dbg !6494

land.lhs.true34:                                  ; preds = %land.lhs.true
  %36 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6495
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %36, i32 0, i32 20, !dbg !6496
  %37 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6496
  %tobool35 = icmp ne %struct.ID* %37, null, !dbg !6495
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !6497

if.then36:                                        ; preds = %land.lhs.true34
  %38 = load i16, i16* %count, align 2, !dbg !6498
  %inc = add i16 %38, 1, !dbg !6498
  store i16 %inc, i16* %count, align 2, !dbg !6498
  br label %if.end37, !dbg !6499

if.end37:                                         ; preds = %if.then36, %land.lhs.true34, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6500

for.inc:                                          ; preds = %if.end37
  %39 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6501
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %39, i32 0, i32 0, !dbg !6502
  %40 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6502
  store %struct.bNode* %40, %struct.bNode** %node, align 8, !dbg !6503
  br label %for.cond, !dbg !6504, !llvm.loop !6505

for.end:                                          ; preds = %for.cond
  %41 = load i16, i16* %count, align 2, !dbg !6507
  %conv38 = sext i16 %41 to i32, !dbg !6507
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !6509
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !6510

if.then41:                                        ; preds = %for.end
  %42 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6511
  %paint_active_slot42 = getelementptr inbounds %struct.Material, %struct.Material* %42, i32 0, i32 131, !dbg !6513
  store i16 0, i16* %paint_active_slot42, align 4, !dbg !6514
  %43 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6515
  %paint_clone_slot43 = getelementptr inbounds %struct.Material, %struct.Material* %43, i32 0, i32 132, !dbg !6516
  store i16 0, i16* %paint_clone_slot43, align 2, !dbg !6517
  br label %return, !dbg !6518

if.end44:                                         ; preds = %for.end
  %44 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6519
  %45 = load i16, i16* %count, align 2, !dbg !6520
  %conv45 = sext i16 %45 to i64, !dbg !6520
  %mul = mul i64 24, %conv45, !dbg !6521
  %call46 = call i8* %44(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)), !dbg !6519
  %46 = bitcast i8* %call46 to %struct.TexPaintSlot*, !dbg !6519
  %47 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6522
  %texpaintslot47 = getelementptr inbounds %struct.Material, %struct.Material* %47, i32 0, i32 135, !dbg !6523
  store %struct.TexPaintSlot* %46, %struct.TexPaintSlot** %texpaintslot47, align 8, !dbg !6524
  %48 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6525
  %nodetree48 = getelementptr inbounds %struct.Material, %struct.Material* %48, i32 0, i32 103, !dbg !6526
  %49 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree48, align 8, !dbg !6526
  %call49 = call %struct.bNode* @nodeGetActiveTexture(%struct.bNodeTree* %49), !dbg !6527
  store %struct.bNode* %call49, %struct.bNode** %active_node, align 8, !dbg !6528
  %50 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6529
  %nodetree50 = getelementptr inbounds %struct.Material, %struct.Material* %50, i32 0, i32 103, !dbg !6531
  %51 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree50, align 8, !dbg !6531
  %nodes51 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %51, i32 0, i32 7, !dbg !6532
  %first52 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes51, i32 0, i32 0, !dbg !6533
  %52 = load i8*, i8** %first52, align 8, !dbg !6533
  %53 = bitcast i8* %52 to %struct.bNode*, !dbg !6529
  store %struct.bNode* %53, %struct.bNode** %node, align 8, !dbg !6534
  br label %for.cond53, !dbg !6535

for.cond53:                                       ; preds = %for.inc79, %if.end44
  %54 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6536
  %tobool54 = icmp ne %struct.bNode* %54, null, !dbg !6538
  br i1 %tobool54, label %for.body55, label %for.end81, !dbg !6538

for.body55:                                       ; preds = %for.cond53
  %55 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6539
  %typeinfo56 = getelementptr inbounds %struct.bNode, %struct.bNode* %55, i32 0, i32 4, !dbg !6542
  %56 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo56, align 8, !dbg !6542
  %nclass57 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %56, i32 0, i32 14, !dbg !6543
  %57 = load i16, i16* %nclass57, align 4, !dbg !6543
  %conv58 = sext i16 %57 to i32, !dbg !6539
  %cmp59 = icmp eq i32 %conv58, 13, !dbg !6544
  br i1 %cmp59, label %land.lhs.true61, label %if.end78, !dbg !6545

land.lhs.true61:                                  ; preds = %for.body55
  %58 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6546
  %typeinfo62 = getelementptr inbounds %struct.bNode, %struct.bNode* %58, i32 0, i32 4, !dbg !6547
  %59 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo62, align 8, !dbg !6547
  %type63 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %59, i32 0, i32 4, !dbg !6548
  %60 = load i32, i32* %type63, align 4, !dbg !6548
  %cmp64 = icmp eq i32 %60, 143, !dbg !6549
  br i1 %cmp64, label %land.lhs.true66, label %if.end78, !dbg !6550

land.lhs.true66:                                  ; preds = %land.lhs.true61
  %61 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6551
  %id67 = getelementptr inbounds %struct.bNode, %struct.bNode* %61, i32 0, i32 20, !dbg !6552
  %62 = load %struct.ID*, %struct.ID** %id67, align 8, !dbg !6552
  %tobool68 = icmp ne %struct.ID* %62, null, !dbg !6551
  br i1 %tobool68, label %if.then69, label %if.end78, !dbg !6553

if.then69:                                        ; preds = %land.lhs.true66
  %63 = load %struct.bNode*, %struct.bNode** %active_node, align 8, !dbg !6554
  %64 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6557
  %cmp70 = icmp eq %struct.bNode* %63, %64, !dbg !6558
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !6559

if.then72:                                        ; preds = %if.then69
  %65 = load i16, i16* %index, align 2, !dbg !6560
  %66 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6561
  %paint_active_slot73 = getelementptr inbounds %struct.Material, %struct.Material* %66, i32 0, i32 131, !dbg !6562
  store i16 %65, i16* %paint_active_slot73, align 4, !dbg !6563
  br label %if.end74, !dbg !6561

if.end74:                                         ; preds = %if.then72, %if.then69
  %67 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6564
  %id75 = getelementptr inbounds %struct.bNode, %struct.bNode* %67, i32 0, i32 20, !dbg !6565
  %68 = load %struct.ID*, %struct.ID** %id75, align 8, !dbg !6565
  %69 = bitcast %struct.ID* %68 to %struct.Image*, !dbg !6566
  %70 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6567
  %texpaintslot76 = getelementptr inbounds %struct.Material, %struct.Material* %70, i32 0, i32 135, !dbg !6568
  %71 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot76, align 8, !dbg !6568
  %72 = load i16, i16* %index, align 2, !dbg !6569
  %inc77 = add i16 %72, 1, !dbg !6569
  store i16 %inc77, i16* %index, align 2, !dbg !6569
  %idxprom = sext i16 %72 to i64, !dbg !6567
  %arrayidx = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %71, i64 %idxprom, !dbg !6567
  %ima = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %arrayidx, i32 0, i32 0, !dbg !6570
  store %struct.Image* %69, %struct.Image** %ima, align 8, !dbg !6571
  br label %if.end78, !dbg !6572

if.end78:                                         ; preds = %if.end74, %land.lhs.true66, %land.lhs.true61, %for.body55
  br label %for.inc79, !dbg !6573

for.inc79:                                        ; preds = %if.end78
  %73 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6574
  %next80 = getelementptr inbounds %struct.bNode, %struct.bNode* %73, i32 0, i32 0, !dbg !6575
  %74 = load %struct.bNode*, %struct.bNode** %next80, align 8, !dbg !6575
  store %struct.bNode* %74, %struct.bNode** %node, align 8, !dbg !6576
  br label %for.cond53, !dbg !6577, !llvm.loop !6578

for.end81:                                        ; preds = %for.cond53
  br label %if.end144, !dbg !6580

if.else:                                          ; preds = %lor.lhs.false
  %75 = load i8, i8* %is_bi, align 1, !dbg !6581
  %tobool82 = icmp ne i8 %75, 0, !dbg !6581
  br i1 %tobool82, label %if.then83, label %if.else140, !dbg !6583

if.then83:                                        ; preds = %if.else
  %76 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6584
  %mtex84 = getelementptr inbounds %struct.Material, %struct.Material* %76, i32 0, i32 102, !dbg !6587
  %arraydecay = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex84, i64 0, i64 0, !dbg !6584
  store %struct.MTex** %arraydecay, %struct.MTex*** %mtex, align 8, !dbg !6588
  store i16 0, i16* %i, align 2, !dbg !6589
  br label %for.cond85, !dbg !6590

for.cond85:                                       ; preds = %for.inc95, %if.then83
  %77 = load i16, i16* %i, align 2, !dbg !6591
  %conv86 = sext i16 %77 to i32, !dbg !6591
  %cmp87 = icmp slt i32 %conv86, 18, !dbg !6593
  br i1 %cmp87, label %for.body89, label %for.end97, !dbg !6594

for.body89:                                       ; preds = %for.cond85
  %78 = load %struct.MTex**, %struct.MTex*** %mtex, align 8, !dbg !6595
  %79 = load %struct.MTex*, %struct.MTex** %78, align 8, !dbg !6598
  %call90 = call zeroext i8 @get_mtex_slot_valid_texpaint(%struct.MTex* %79), !dbg !6599
  %tobool91 = icmp ne i8 %call90, 0, !dbg !6599
  br i1 %tobool91, label %if.then92, label %if.end94, !dbg !6600

if.then92:                                        ; preds = %for.body89
  %80 = load i16, i16* %count, align 2, !dbg !6601
  %inc93 = add i16 %80, 1, !dbg !6601
  store i16 %inc93, i16* %count, align 2, !dbg !6601
  br label %if.end94, !dbg !6603

if.end94:                                         ; preds = %if.then92, %for.body89
  br label %for.inc95, !dbg !6604

for.inc95:                                        ; preds = %if.end94
  %81 = load i16, i16* %i, align 2, !dbg !6605
  %inc96 = add i16 %81, 1, !dbg !6605
  store i16 %inc96, i16* %i, align 2, !dbg !6605
  %82 = load %struct.MTex**, %struct.MTex*** %mtex, align 8, !dbg !6606
  %incdec.ptr = getelementptr inbounds %struct.MTex*, %struct.MTex** %82, i32 1, !dbg !6606
  store %struct.MTex** %incdec.ptr, %struct.MTex*** %mtex, align 8, !dbg !6606
  br label %for.cond85, !dbg !6607, !llvm.loop !6608

for.end97:                                        ; preds = %for.cond85
  %83 = load i16, i16* %count, align 2, !dbg !6610
  %conv98 = sext i16 %83 to i32, !dbg !6610
  %cmp99 = icmp eq i32 %conv98, 0, !dbg !6612
  br i1 %cmp99, label %if.then101, label %if.end104, !dbg !6613

if.then101:                                       ; preds = %for.end97
  %84 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6614
  %paint_active_slot102 = getelementptr inbounds %struct.Material, %struct.Material* %84, i32 0, i32 131, !dbg !6616
  store i16 0, i16* %paint_active_slot102, align 4, !dbg !6617
  %85 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6618
  %paint_clone_slot103 = getelementptr inbounds %struct.Material, %struct.Material* %85, i32 0, i32 132, !dbg !6619
  store i16 0, i16* %paint_clone_slot103, align 2, !dbg !6620
  br label %return, !dbg !6621

if.end104:                                        ; preds = %for.end97
  %86 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6622
  %87 = load i16, i16* %count, align 2, !dbg !6623
  %conv105 = sext i16 %87 to i64, !dbg !6623
  %mul106 = mul i64 24, %conv105, !dbg !6624
  %call107 = call i8* %86(i64 %mul106, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)), !dbg !6622
  %88 = bitcast i8* %call107 to %struct.TexPaintSlot*, !dbg !6622
  %89 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6625
  %texpaintslot108 = getelementptr inbounds %struct.Material, %struct.Material* %89, i32 0, i32 135, !dbg !6626
  store %struct.TexPaintSlot* %88, %struct.TexPaintSlot** %texpaintslot108, align 8, !dbg !6627
  %90 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6628
  %mtex109 = getelementptr inbounds %struct.Material, %struct.Material* %90, i32 0, i32 102, !dbg !6630
  %arraydecay110 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex109, i64 0, i64 0, !dbg !6628
  store %struct.MTex** %arraydecay110, %struct.MTex*** %mtex, align 8, !dbg !6631
  store i16 0, i16* %i, align 2, !dbg !6632
  br label %for.cond111, !dbg !6633

for.cond111:                                      ; preds = %for.inc136, %if.end104
  %91 = load i16, i16* %i, align 2, !dbg !6634
  %conv112 = sext i16 %91 to i32, !dbg !6634
  %cmp113 = icmp slt i32 %conv112, 18, !dbg !6636
  br i1 %cmp113, label %for.body115, label %for.end139, !dbg !6637

for.body115:                                      ; preds = %for.cond111
  %92 = load %struct.MTex**, %struct.MTex*** %mtex, align 8, !dbg !6638
  %93 = load %struct.MTex*, %struct.MTex** %92, align 8, !dbg !6641
  %call116 = call zeroext i8 @get_mtex_slot_valid_texpaint(%struct.MTex* %93), !dbg !6642
  %tobool117 = icmp ne i8 %call116, 0, !dbg !6642
  br i1 %tobool117, label %if.then118, label %if.end135, !dbg !6643

if.then118:                                       ; preds = %for.body115
  %94 = load %struct.MTex**, %struct.MTex*** %mtex, align 8, !dbg !6644
  %95 = load %struct.MTex*, %struct.MTex** %94, align 8, !dbg !6646
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %95, i32 0, i32 5, !dbg !6647
  %96 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !6647
  %ima119 = getelementptr inbounds %struct.Tex, %struct.Tex* %96, i32 0, i32 54, !dbg !6648
  %97 = load %struct.Image*, %struct.Image** %ima119, align 8, !dbg !6648
  %98 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6649
  %texpaintslot120 = getelementptr inbounds %struct.Material, %struct.Material* %98, i32 0, i32 135, !dbg !6650
  %99 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot120, align 8, !dbg !6650
  %100 = load i16, i16* %index, align 2, !dbg !6651
  %idxprom121 = sext i16 %100 to i64, !dbg !6649
  %arrayidx122 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %99, i64 %idxprom121, !dbg !6649
  %ima123 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %arrayidx122, i32 0, i32 0, !dbg !6652
  store %struct.Image* %97, %struct.Image** %ima123, align 8, !dbg !6653
  %101 = load %struct.MTex**, %struct.MTex*** %mtex, align 8, !dbg !6654
  %102 = load %struct.MTex*, %struct.MTex** %101, align 8, !dbg !6655
  %uvname = getelementptr inbounds %struct.MTex, %struct.MTex* %102, i32 0, i32 6, !dbg !6656
  %arraydecay124 = getelementptr inbounds [64 x i8], [64 x i8]* %uvname, i64 0, i64 0, !dbg !6657
  %103 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6658
  %texpaintslot125 = getelementptr inbounds %struct.Material, %struct.Material* %103, i32 0, i32 135, !dbg !6659
  %104 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot125, align 8, !dbg !6659
  %105 = load i16, i16* %index, align 2, !dbg !6660
  %idxprom126 = sext i16 %105 to i64, !dbg !6658
  %arrayidx127 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %104, i64 %idxprom126, !dbg !6658
  %uvname128 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %arrayidx127, i32 0, i32 1, !dbg !6661
  store i8* %arraydecay124, i8** %uvname128, align 8, !dbg !6662
  %106 = load i16, i16* %i, align 2, !dbg !6663
  %conv129 = sext i16 %106 to i32, !dbg !6663
  %107 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6664
  %texpaintslot130 = getelementptr inbounds %struct.Material, %struct.Material* %107, i32 0, i32 135, !dbg !6665
  %108 = load %struct.TexPaintSlot*, %struct.TexPaintSlot** %texpaintslot130, align 8, !dbg !6665
  %109 = load i16, i16* %index, align 2, !dbg !6666
  %idxprom131 = sext i16 %109 to i64, !dbg !6664
  %arrayidx132 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %108, i64 %idxprom131, !dbg !6664
  %index133 = getelementptr inbounds %struct.TexPaintSlot, %struct.TexPaintSlot* %arrayidx132, i32 0, i32 2, !dbg !6667
  store i32 %conv129, i32* %index133, align 8, !dbg !6668
  %110 = load i16, i16* %index, align 2, !dbg !6669
  %inc134 = add i16 %110, 1, !dbg !6669
  store i16 %inc134, i16* %index, align 2, !dbg !6669
  br label %if.end135, !dbg !6670

if.end135:                                        ; preds = %if.then118, %for.body115
  br label %for.inc136, !dbg !6671

for.inc136:                                       ; preds = %if.end135
  %111 = load i16, i16* %i, align 2, !dbg !6672
  %inc137 = add i16 %111, 1, !dbg !6672
  store i16 %inc137, i16* %i, align 2, !dbg !6672
  %112 = load %struct.MTex**, %struct.MTex*** %mtex, align 8, !dbg !6673
  %incdec.ptr138 = getelementptr inbounds %struct.MTex*, %struct.MTex** %112, i32 1, !dbg !6673
  store %struct.MTex** %incdec.ptr138, %struct.MTex*** %mtex, align 8, !dbg !6673
  br label %for.cond111, !dbg !6674, !llvm.loop !6675

for.end139:                                       ; preds = %for.cond111
  br label %if.end143, !dbg !6677

if.else140:                                       ; preds = %if.else
  %113 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6678
  %paint_active_slot141 = getelementptr inbounds %struct.Material, %struct.Material* %113, i32 0, i32 131, !dbg !6680
  store i16 0, i16* %paint_active_slot141, align 4, !dbg !6681
  %114 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6682
  %paint_clone_slot142 = getelementptr inbounds %struct.Material, %struct.Material* %114, i32 0, i32 132, !dbg !6683
  store i16 0, i16* %paint_clone_slot142, align 2, !dbg !6684
  br label %return, !dbg !6685

if.end143:                                        ; preds = %for.end139
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %for.end81
  %115 = load i16, i16* %count, align 2, !dbg !6686
  %116 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6687
  %tot_slots145 = getelementptr inbounds %struct.Material, %struct.Material* %116, i32 0, i32 133, !dbg !6688
  store i16 %115, i16* %tot_slots145, align 8, !dbg !6689
  %117 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6690
  %paint_active_slot146 = getelementptr inbounds %struct.Material, %struct.Material* %117, i32 0, i32 131, !dbg !6692
  %118 = load i16, i16* %paint_active_slot146, align 4, !dbg !6692
  %conv147 = sext i16 %118 to i32, !dbg !6690
  %119 = load i16, i16* %count, align 2, !dbg !6693
  %conv148 = sext i16 %119 to i32, !dbg !6693
  %cmp149 = icmp sge i32 %conv147, %conv148, !dbg !6694
  br i1 %cmp149, label %if.then151, label %if.end155, !dbg !6695

if.then151:                                       ; preds = %if.end144
  %120 = load i16, i16* %count, align 2, !dbg !6696
  %conv152 = sext i16 %120 to i32, !dbg !6696
  %sub = sub nsw i32 %conv152, 1, !dbg !6698
  %conv153 = trunc i32 %sub to i16, !dbg !6696
  %121 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6699
  %paint_active_slot154 = getelementptr inbounds %struct.Material, %struct.Material* %121, i32 0, i32 131, !dbg !6700
  store i16 %conv153, i16* %paint_active_slot154, align 4, !dbg !6701
  br label %if.end155, !dbg !6702

if.end155:                                        ; preds = %if.then151, %if.end144
  %122 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6703
  %paint_clone_slot156 = getelementptr inbounds %struct.Material, %struct.Material* %122, i32 0, i32 132, !dbg !6705
  %123 = load i16, i16* %paint_clone_slot156, align 2, !dbg !6705
  %conv157 = sext i16 %123 to i32, !dbg !6703
  %124 = load i16, i16* %count, align 2, !dbg !6706
  %conv158 = sext i16 %124 to i32, !dbg !6706
  %cmp159 = icmp sge i32 %conv157, %conv158, !dbg !6707
  br i1 %cmp159, label %if.then161, label %if.end166, !dbg !6708

if.then161:                                       ; preds = %if.end155
  %125 = load i16, i16* %count, align 2, !dbg !6709
  %conv162 = sext i16 %125 to i32, !dbg !6709
  %sub163 = sub nsw i32 %conv162, 1, !dbg !6711
  %conv164 = trunc i32 %sub163 to i16, !dbg !6709
  %126 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6712
  %paint_clone_slot165 = getelementptr inbounds %struct.Material, %struct.Material* %126, i32 0, i32 132, !dbg !6713
  store i16 %conv164, i16* %paint_clone_slot165, align 2, !dbg !6714
  br label %if.end166, !dbg !6715

if.end166:                                        ; preds = %if.then161, %if.end155
  br label %return, !dbg !6716

return:                                           ; preds = %if.end166, %if.else140, %if.then101, %if.then41, %if.then22, %if.then13, %if.then
  ret void, !dbg !6717
}

declare dso_local zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene*) #2

declare dso_local zeroext i8 @BKE_scene_uses_blender_internal(%struct.Scene*) #2

declare dso_local zeroext i8 @BKE_scene_uses_blender_game(%struct.Scene*) #2

declare dso_local %struct.bNode* @nodeGetActiveTexture(%struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @get_mtex_slot_valid_texpaint(%struct.MTex* %mtex) #0 !dbg !6718 {
entry:
  %mtex.addr = alloca %struct.MTex*, align 8
  store %struct.MTex* %mtex, %struct.MTex** %mtex.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex.addr, metadata !6721, metadata !DIExpression()), !dbg !6722
  %0 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !6723
  %tobool = icmp ne %struct.MTex* %0, null, !dbg !6723
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !6724

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !6725
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %1, i32 0, i32 0, !dbg !6726
  %2 = load i16, i16* %texco, align 8, !dbg !6726
  %conv = sext i16 %2 to i32, !dbg !6725
  %cmp = icmp eq i32 %conv, 16, !dbg !6727
  br i1 %cmp, label %land.lhs.true2, label %land.end, !dbg !6728

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !6729
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %3, i32 0, i32 5, !dbg !6730
  %4 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !6730
  %tobool3 = icmp ne %struct.Tex* %4, null, !dbg !6729
  br i1 %tobool3, label %land.lhs.true4, label %land.end, !dbg !6731

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %5 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !6732
  %tex5 = getelementptr inbounds %struct.MTex, %struct.MTex* %5, i32 0, i32 5, !dbg !6733
  %6 = load %struct.Tex*, %struct.Tex** %tex5, align 8, !dbg !6733
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %6, i32 0, i32 32, !dbg !6734
  %7 = load i16, i16* %type, align 8, !dbg !6734
  %conv6 = sext i16 %7 to i32, !dbg !6732
  %cmp7 = icmp eq i32 %conv6, 8, !dbg !6735
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !6736

land.rhs:                                         ; preds = %land.lhs.true4
  %8 = load %struct.MTex*, %struct.MTex** %mtex.addr, align 8, !dbg !6737
  %tex9 = getelementptr inbounds %struct.MTex, %struct.MTex* %8, i32 0, i32 5, !dbg !6738
  %9 = load %struct.Tex*, %struct.Tex** %tex9, align 8, !dbg !6738
  %ima = getelementptr inbounds %struct.Tex, %struct.Tex* %9, i32 0, i32 54, !dbg !6739
  %10 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !6739
  %tobool10 = icmp ne %struct.Image* %10, null, !dbg !6736
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %11 = phi i1 [ false, %land.lhs.true4 ], [ false, %land.lhs.true2 ], [ false, %land.lhs.true ], [ false, %entry ], [ %tobool10, %land.rhs ], !dbg !6740
  %land.ext = zext i1 %11 to i32, !dbg !6736
  %conv11 = trunc i32 %land.ext to i8, !dbg !6741
  ret i8 %conv11, !dbg !6742
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_texpaint_slots_refresh_object(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !6743 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %i = alloca i32, align 4
  %ma = alloca %struct.Material*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6746, metadata !DIExpression()), !dbg !6747
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6748, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6750, metadata !DIExpression()), !dbg !6751
  store i32 1, i32* %i, align 4, !dbg !6752
  br label %for.cond, !dbg !6754

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6755
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6757
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 31, !dbg !6758
  %2 = load i32, i32* %totcol, align 8, !dbg !6758
  %add = add nsw i32 %2, 1, !dbg !6759
  %cmp = icmp slt i32 %0, %add, !dbg !6760
  br i1 %cmp, label %for.body, label %for.end, !dbg !6761

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !6762, metadata !DIExpression()), !dbg !6764
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6765
  %4 = load i32, i32* %i, align 4, !dbg !6766
  %conv = trunc i32 %4 to i16, !dbg !6766
  %call = call %struct.Material* @give_current_material(%struct.Object* %3, i16 signext %conv), !dbg !6767
  store %struct.Material* %call, %struct.Material** %ma, align 8, !dbg !6764
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6768
  %6 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6769
  call void @BKE_texpaint_slot_refresh_cache(%struct.Scene* %5, %struct.Material* %6), !dbg !6770
  br label %for.inc, !dbg !6771

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !6772
  %inc = add nsw i32 %7, 1, !dbg !6772
  store i32 %inc, i32* %i, align 4, !dbg !6772
  br label %for.cond, !dbg !6773, !llvm.loop !6774

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6776
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ramp_blend(i32 %type, float* %r_col, float %fac, float* %col) #0 !dbg !6777 {
entry:
  %type.addr = alloca i32, align 4
  %r_col.addr = alloca float*, align 8
  %fac.addr = alloca float, align 4
  %col.addr = alloca float*, align 8
  %tmp = alloca float, align 4
  %facm = alloca float, align 4
  %rH = alloca float, align 4
  %rS = alloca float, align 4
  %rV = alloca float, align 4
  %colH = alloca float, align 4
  %colS = alloca float, align 4
  %colV = alloca float, align 4
  %tmpr = alloca float, align 4
  %tmpg = alloca float, align 4
  %tmpb = alloca float, align 4
  %rH410 = alloca float, align 4
  %rS411 = alloca float, align 4
  %rV412 = alloca float, align 4
  %colH413 = alloca float, align 4
  %colS414 = alloca float, align 4
  %colV415 = alloca float, align 4
  %rH431 = alloca float, align 4
  %rS432 = alloca float, align 4
  %rV433 = alloca float, align 4
  %colH434 = alloca float, align 4
  %colS435 = alloca float, align 4
  %colV436 = alloca float, align 4
  %rH450 = alloca float, align 4
  %rS451 = alloca float, align 4
  %rV452 = alloca float, align 4
  %colH453 = alloca float, align 4
  %colS454 = alloca float, align 4
  %colV455 = alloca float, align 4
  %tmpr456 = alloca float, align 4
  %tmpg457 = alloca float, align 4
  %tmpb458 = alloca float, align 4
  %scr = alloca float, align 4
  %scg = alloca float, align 4
  %scb = alloca float, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6782, metadata !DIExpression()), !dbg !6783
  store float* %r_col, float** %r_col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_col.addr, metadata !6784, metadata !DIExpression()), !dbg !6785
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !6786, metadata !DIExpression()), !dbg !6787
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !6788, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.declare(metadata float* %tmp, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.declare(metadata float* %facm, metadata !6792, metadata !DIExpression()), !dbg !6793
  %0 = load float, float* %fac.addr, align 4, !dbg !6794
  %sub = fsub float 1.000000e+00, %0, !dbg !6795
  store float %sub, float* %facm, align 4, !dbg !6793
  %1 = load i32, i32* %type.addr, align 4, !dbg !6796
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb16
    i32 2, label %sw.bb29
    i32 4, label %sw.bb45
    i32 9, label %sw.bb73
    i32 3, label %sw.bb133
    i32 5, label %sw.bb146
    i32 6, label %sw.bb182
    i32 7, label %sw.bb207
    i32 8, label %sw.bb231
    i32 10, label %sw.bb253
    i32 11, label %sw.bb314
    i32 12, label %sw.bb384
    i32 13, label %sw.bb409
    i32 14, label %sw.bb430
    i32 15, label %sw.bb449
    i32 16, label %sw.bb483
    i32 17, label %sw.bb544
  ], !dbg !6797

sw.bb:                                            ; preds = %entry
  %2 = load float, float* %facm, align 4, !dbg !6798
  %3 = load float*, float** %r_col.addr, align 8, !dbg !6800
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !6800
  %4 = load float, float* %arrayidx, align 4, !dbg !6800
  %mul = fmul float %2, %4, !dbg !6801
  %5 = load float, float* %fac.addr, align 4, !dbg !6802
  %6 = load float*, float** %col.addr, align 8, !dbg !6803
  %arrayidx1 = getelementptr inbounds float, float* %6, i64 0, !dbg !6803
  %7 = load float, float* %arrayidx1, align 4, !dbg !6803
  %mul2 = fmul float %5, %7, !dbg !6804
  %add = fadd float %mul, %mul2, !dbg !6805
  %8 = load float*, float** %r_col.addr, align 8, !dbg !6806
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 0, !dbg !6806
  store float %add, float* %arrayidx3, align 4, !dbg !6807
  %9 = load float, float* %facm, align 4, !dbg !6808
  %10 = load float*, float** %r_col.addr, align 8, !dbg !6809
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 1, !dbg !6809
  %11 = load float, float* %arrayidx4, align 4, !dbg !6809
  %mul5 = fmul float %9, %11, !dbg !6810
  %12 = load float, float* %fac.addr, align 4, !dbg !6811
  %13 = load float*, float** %col.addr, align 8, !dbg !6812
  %arrayidx6 = getelementptr inbounds float, float* %13, i64 1, !dbg !6812
  %14 = load float, float* %arrayidx6, align 4, !dbg !6812
  %mul7 = fmul float %12, %14, !dbg !6813
  %add8 = fadd float %mul5, %mul7, !dbg !6814
  %15 = load float*, float** %r_col.addr, align 8, !dbg !6815
  %arrayidx9 = getelementptr inbounds float, float* %15, i64 1, !dbg !6815
  store float %add8, float* %arrayidx9, align 4, !dbg !6816
  %16 = load float, float* %facm, align 4, !dbg !6817
  %17 = load float*, float** %r_col.addr, align 8, !dbg !6818
  %arrayidx10 = getelementptr inbounds float, float* %17, i64 2, !dbg !6818
  %18 = load float, float* %arrayidx10, align 4, !dbg !6818
  %mul11 = fmul float %16, %18, !dbg !6819
  %19 = load float, float* %fac.addr, align 4, !dbg !6820
  %20 = load float*, float** %col.addr, align 8, !dbg !6821
  %arrayidx12 = getelementptr inbounds float, float* %20, i64 2, !dbg !6821
  %21 = load float, float* %arrayidx12, align 4, !dbg !6821
  %mul13 = fmul float %19, %21, !dbg !6822
  %add14 = fadd float %mul11, %mul13, !dbg !6823
  %22 = load float*, float** %r_col.addr, align 8, !dbg !6824
  %arrayidx15 = getelementptr inbounds float, float* %22, i64 2, !dbg !6824
  store float %add14, float* %arrayidx15, align 4, !dbg !6825
  br label %sw.epilog, !dbg !6826

sw.bb16:                                          ; preds = %entry
  %23 = load float, float* %fac.addr, align 4, !dbg !6827
  %24 = load float*, float** %col.addr, align 8, !dbg !6828
  %arrayidx17 = getelementptr inbounds float, float* %24, i64 0, !dbg !6828
  %25 = load float, float* %arrayidx17, align 4, !dbg !6828
  %mul18 = fmul float %23, %25, !dbg !6829
  %26 = load float*, float** %r_col.addr, align 8, !dbg !6830
  %arrayidx19 = getelementptr inbounds float, float* %26, i64 0, !dbg !6830
  %27 = load float, float* %arrayidx19, align 4, !dbg !6831
  %add20 = fadd float %27, %mul18, !dbg !6831
  store float %add20, float* %arrayidx19, align 4, !dbg !6831
  %28 = load float, float* %fac.addr, align 4, !dbg !6832
  %29 = load float*, float** %col.addr, align 8, !dbg !6833
  %arrayidx21 = getelementptr inbounds float, float* %29, i64 1, !dbg !6833
  %30 = load float, float* %arrayidx21, align 4, !dbg !6833
  %mul22 = fmul float %28, %30, !dbg !6834
  %31 = load float*, float** %r_col.addr, align 8, !dbg !6835
  %arrayidx23 = getelementptr inbounds float, float* %31, i64 1, !dbg !6835
  %32 = load float, float* %arrayidx23, align 4, !dbg !6836
  %add24 = fadd float %32, %mul22, !dbg !6836
  store float %add24, float* %arrayidx23, align 4, !dbg !6836
  %33 = load float, float* %fac.addr, align 4, !dbg !6837
  %34 = load float*, float** %col.addr, align 8, !dbg !6838
  %arrayidx25 = getelementptr inbounds float, float* %34, i64 2, !dbg !6838
  %35 = load float, float* %arrayidx25, align 4, !dbg !6838
  %mul26 = fmul float %33, %35, !dbg !6839
  %36 = load float*, float** %r_col.addr, align 8, !dbg !6840
  %arrayidx27 = getelementptr inbounds float, float* %36, i64 2, !dbg !6840
  %37 = load float, float* %arrayidx27, align 4, !dbg !6841
  %add28 = fadd float %37, %mul26, !dbg !6841
  store float %add28, float* %arrayidx27, align 4, !dbg !6841
  br label %sw.epilog, !dbg !6842

sw.bb29:                                          ; preds = %entry
  %38 = load float, float* %facm, align 4, !dbg !6843
  %39 = load float, float* %fac.addr, align 4, !dbg !6844
  %40 = load float*, float** %col.addr, align 8, !dbg !6845
  %arrayidx30 = getelementptr inbounds float, float* %40, i64 0, !dbg !6845
  %41 = load float, float* %arrayidx30, align 4, !dbg !6845
  %mul31 = fmul float %39, %41, !dbg !6846
  %add32 = fadd float %38, %mul31, !dbg !6847
  %42 = load float*, float** %r_col.addr, align 8, !dbg !6848
  %arrayidx33 = getelementptr inbounds float, float* %42, i64 0, !dbg !6848
  %43 = load float, float* %arrayidx33, align 4, !dbg !6849
  %mul34 = fmul float %43, %add32, !dbg !6849
  store float %mul34, float* %arrayidx33, align 4, !dbg !6849
  %44 = load float, float* %facm, align 4, !dbg !6850
  %45 = load float, float* %fac.addr, align 4, !dbg !6851
  %46 = load float*, float** %col.addr, align 8, !dbg !6852
  %arrayidx35 = getelementptr inbounds float, float* %46, i64 1, !dbg !6852
  %47 = load float, float* %arrayidx35, align 4, !dbg !6852
  %mul36 = fmul float %45, %47, !dbg !6853
  %add37 = fadd float %44, %mul36, !dbg !6854
  %48 = load float*, float** %r_col.addr, align 8, !dbg !6855
  %arrayidx38 = getelementptr inbounds float, float* %48, i64 1, !dbg !6855
  %49 = load float, float* %arrayidx38, align 4, !dbg !6856
  %mul39 = fmul float %49, %add37, !dbg !6856
  store float %mul39, float* %arrayidx38, align 4, !dbg !6856
  %50 = load float, float* %facm, align 4, !dbg !6857
  %51 = load float, float* %fac.addr, align 4, !dbg !6858
  %52 = load float*, float** %col.addr, align 8, !dbg !6859
  %arrayidx40 = getelementptr inbounds float, float* %52, i64 2, !dbg !6859
  %53 = load float, float* %arrayidx40, align 4, !dbg !6859
  %mul41 = fmul float %51, %53, !dbg !6860
  %add42 = fadd float %50, %mul41, !dbg !6861
  %54 = load float*, float** %r_col.addr, align 8, !dbg !6862
  %arrayidx43 = getelementptr inbounds float, float* %54, i64 2, !dbg !6862
  %55 = load float, float* %arrayidx43, align 4, !dbg !6863
  %mul44 = fmul float %55, %add42, !dbg !6863
  store float %mul44, float* %arrayidx43, align 4, !dbg !6863
  br label %sw.epilog, !dbg !6864

sw.bb45:                                          ; preds = %entry
  %56 = load float, float* %facm, align 4, !dbg !6865
  %57 = load float, float* %fac.addr, align 4, !dbg !6866
  %58 = load float*, float** %col.addr, align 8, !dbg !6867
  %arrayidx46 = getelementptr inbounds float, float* %58, i64 0, !dbg !6867
  %59 = load float, float* %arrayidx46, align 4, !dbg !6867
  %sub47 = fsub float 1.000000e+00, %59, !dbg !6868
  %mul48 = fmul float %57, %sub47, !dbg !6869
  %add49 = fadd float %56, %mul48, !dbg !6870
  %60 = load float*, float** %r_col.addr, align 8, !dbg !6871
  %arrayidx50 = getelementptr inbounds float, float* %60, i64 0, !dbg !6871
  %61 = load float, float* %arrayidx50, align 4, !dbg !6871
  %sub51 = fsub float 1.000000e+00, %61, !dbg !6872
  %mul52 = fmul float %add49, %sub51, !dbg !6873
  %sub53 = fsub float 1.000000e+00, %mul52, !dbg !6874
  %62 = load float*, float** %r_col.addr, align 8, !dbg !6875
  %arrayidx54 = getelementptr inbounds float, float* %62, i64 0, !dbg !6875
  store float %sub53, float* %arrayidx54, align 4, !dbg !6876
  %63 = load float, float* %facm, align 4, !dbg !6877
  %64 = load float, float* %fac.addr, align 4, !dbg !6878
  %65 = load float*, float** %col.addr, align 8, !dbg !6879
  %arrayidx55 = getelementptr inbounds float, float* %65, i64 1, !dbg !6879
  %66 = load float, float* %arrayidx55, align 4, !dbg !6879
  %sub56 = fsub float 1.000000e+00, %66, !dbg !6880
  %mul57 = fmul float %64, %sub56, !dbg !6881
  %add58 = fadd float %63, %mul57, !dbg !6882
  %67 = load float*, float** %r_col.addr, align 8, !dbg !6883
  %arrayidx59 = getelementptr inbounds float, float* %67, i64 1, !dbg !6883
  %68 = load float, float* %arrayidx59, align 4, !dbg !6883
  %sub60 = fsub float 1.000000e+00, %68, !dbg !6884
  %mul61 = fmul float %add58, %sub60, !dbg !6885
  %sub62 = fsub float 1.000000e+00, %mul61, !dbg !6886
  %69 = load float*, float** %r_col.addr, align 8, !dbg !6887
  %arrayidx63 = getelementptr inbounds float, float* %69, i64 1, !dbg !6887
  store float %sub62, float* %arrayidx63, align 4, !dbg !6888
  %70 = load float, float* %facm, align 4, !dbg !6889
  %71 = load float, float* %fac.addr, align 4, !dbg !6890
  %72 = load float*, float** %col.addr, align 8, !dbg !6891
  %arrayidx64 = getelementptr inbounds float, float* %72, i64 2, !dbg !6891
  %73 = load float, float* %arrayidx64, align 4, !dbg !6891
  %sub65 = fsub float 1.000000e+00, %73, !dbg !6892
  %mul66 = fmul float %71, %sub65, !dbg !6893
  %add67 = fadd float %70, %mul66, !dbg !6894
  %74 = load float*, float** %r_col.addr, align 8, !dbg !6895
  %arrayidx68 = getelementptr inbounds float, float* %74, i64 2, !dbg !6895
  %75 = load float, float* %arrayidx68, align 4, !dbg !6895
  %sub69 = fsub float 1.000000e+00, %75, !dbg !6896
  %mul70 = fmul float %add67, %sub69, !dbg !6897
  %sub71 = fsub float 1.000000e+00, %mul70, !dbg !6898
  %76 = load float*, float** %r_col.addr, align 8, !dbg !6899
  %arrayidx72 = getelementptr inbounds float, float* %76, i64 2, !dbg !6899
  store float %sub71, float* %arrayidx72, align 4, !dbg !6900
  br label %sw.epilog, !dbg !6901

sw.bb73:                                          ; preds = %entry
  %77 = load float*, float** %r_col.addr, align 8, !dbg !6902
  %arrayidx74 = getelementptr inbounds float, float* %77, i64 0, !dbg !6902
  %78 = load float, float* %arrayidx74, align 4, !dbg !6902
  %cmp = fcmp olt float %78, 5.000000e-01, !dbg !6904
  br i1 %cmp, label %if.then, label %if.else, !dbg !6905

if.then:                                          ; preds = %sw.bb73
  %79 = load float, float* %facm, align 4, !dbg !6906
  %80 = load float, float* %fac.addr, align 4, !dbg !6907
  %mul75 = fmul float 2.000000e+00, %80, !dbg !6908
  %81 = load float*, float** %col.addr, align 8, !dbg !6909
  %arrayidx76 = getelementptr inbounds float, float* %81, i64 0, !dbg !6909
  %82 = load float, float* %arrayidx76, align 4, !dbg !6909
  %mul77 = fmul float %mul75, %82, !dbg !6910
  %add78 = fadd float %79, %mul77, !dbg !6911
  %83 = load float*, float** %r_col.addr, align 8, !dbg !6912
  %arrayidx79 = getelementptr inbounds float, float* %83, i64 0, !dbg !6912
  %84 = load float, float* %arrayidx79, align 4, !dbg !6913
  %mul80 = fmul float %84, %add78, !dbg !6913
  store float %mul80, float* %arrayidx79, align 4, !dbg !6913
  br label %if.end, !dbg !6912

if.else:                                          ; preds = %sw.bb73
  %85 = load float, float* %facm, align 4, !dbg !6914
  %86 = load float, float* %fac.addr, align 4, !dbg !6915
  %mul81 = fmul float 2.000000e+00, %86, !dbg !6916
  %87 = load float*, float** %col.addr, align 8, !dbg !6917
  %arrayidx82 = getelementptr inbounds float, float* %87, i64 0, !dbg !6917
  %88 = load float, float* %arrayidx82, align 4, !dbg !6917
  %sub83 = fsub float 1.000000e+00, %88, !dbg !6918
  %mul84 = fmul float %mul81, %sub83, !dbg !6919
  %add85 = fadd float %85, %mul84, !dbg !6920
  %89 = load float*, float** %r_col.addr, align 8, !dbg !6921
  %arrayidx86 = getelementptr inbounds float, float* %89, i64 0, !dbg !6921
  %90 = load float, float* %arrayidx86, align 4, !dbg !6921
  %sub87 = fsub float 1.000000e+00, %90, !dbg !6922
  %mul88 = fmul float %add85, %sub87, !dbg !6923
  %sub89 = fsub float 1.000000e+00, %mul88, !dbg !6924
  %91 = load float*, float** %r_col.addr, align 8, !dbg !6925
  %arrayidx90 = getelementptr inbounds float, float* %91, i64 0, !dbg !6925
  store float %sub89, float* %arrayidx90, align 4, !dbg !6926
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %92 = load float*, float** %r_col.addr, align 8, !dbg !6927
  %arrayidx91 = getelementptr inbounds float, float* %92, i64 1, !dbg !6927
  %93 = load float, float* %arrayidx91, align 4, !dbg !6927
  %cmp92 = fcmp olt float %93, 5.000000e-01, !dbg !6929
  br i1 %cmp92, label %if.then93, label %if.else100, !dbg !6930

if.then93:                                        ; preds = %if.end
  %94 = load float, float* %facm, align 4, !dbg !6931
  %95 = load float, float* %fac.addr, align 4, !dbg !6932
  %mul94 = fmul float 2.000000e+00, %95, !dbg !6933
  %96 = load float*, float** %col.addr, align 8, !dbg !6934
  %arrayidx95 = getelementptr inbounds float, float* %96, i64 1, !dbg !6934
  %97 = load float, float* %arrayidx95, align 4, !dbg !6934
  %mul96 = fmul float %mul94, %97, !dbg !6935
  %add97 = fadd float %94, %mul96, !dbg !6936
  %98 = load float*, float** %r_col.addr, align 8, !dbg !6937
  %arrayidx98 = getelementptr inbounds float, float* %98, i64 1, !dbg !6937
  %99 = load float, float* %arrayidx98, align 4, !dbg !6938
  %mul99 = fmul float %99, %add97, !dbg !6938
  store float %mul99, float* %arrayidx98, align 4, !dbg !6938
  br label %if.end111, !dbg !6937

if.else100:                                       ; preds = %if.end
  %100 = load float, float* %facm, align 4, !dbg !6939
  %101 = load float, float* %fac.addr, align 4, !dbg !6940
  %mul101 = fmul float 2.000000e+00, %101, !dbg !6941
  %102 = load float*, float** %col.addr, align 8, !dbg !6942
  %arrayidx102 = getelementptr inbounds float, float* %102, i64 1, !dbg !6942
  %103 = load float, float* %arrayidx102, align 4, !dbg !6942
  %sub103 = fsub float 1.000000e+00, %103, !dbg !6943
  %mul104 = fmul float %mul101, %sub103, !dbg !6944
  %add105 = fadd float %100, %mul104, !dbg !6945
  %104 = load float*, float** %r_col.addr, align 8, !dbg !6946
  %arrayidx106 = getelementptr inbounds float, float* %104, i64 1, !dbg !6946
  %105 = load float, float* %arrayidx106, align 4, !dbg !6946
  %sub107 = fsub float 1.000000e+00, %105, !dbg !6947
  %mul108 = fmul float %add105, %sub107, !dbg !6948
  %sub109 = fsub float 1.000000e+00, %mul108, !dbg !6949
  %106 = load float*, float** %r_col.addr, align 8, !dbg !6950
  %arrayidx110 = getelementptr inbounds float, float* %106, i64 1, !dbg !6950
  store float %sub109, float* %arrayidx110, align 4, !dbg !6951
  br label %if.end111

if.end111:                                        ; preds = %if.else100, %if.then93
  %107 = load float*, float** %r_col.addr, align 8, !dbg !6952
  %arrayidx112 = getelementptr inbounds float, float* %107, i64 2, !dbg !6952
  %108 = load float, float* %arrayidx112, align 4, !dbg !6952
  %cmp113 = fcmp olt float %108, 5.000000e-01, !dbg !6954
  br i1 %cmp113, label %if.then114, label %if.else121, !dbg !6955

if.then114:                                       ; preds = %if.end111
  %109 = load float, float* %facm, align 4, !dbg !6956
  %110 = load float, float* %fac.addr, align 4, !dbg !6957
  %mul115 = fmul float 2.000000e+00, %110, !dbg !6958
  %111 = load float*, float** %col.addr, align 8, !dbg !6959
  %arrayidx116 = getelementptr inbounds float, float* %111, i64 2, !dbg !6959
  %112 = load float, float* %arrayidx116, align 4, !dbg !6959
  %mul117 = fmul float %mul115, %112, !dbg !6960
  %add118 = fadd float %109, %mul117, !dbg !6961
  %113 = load float*, float** %r_col.addr, align 8, !dbg !6962
  %arrayidx119 = getelementptr inbounds float, float* %113, i64 2, !dbg !6962
  %114 = load float, float* %arrayidx119, align 4, !dbg !6963
  %mul120 = fmul float %114, %add118, !dbg !6963
  store float %mul120, float* %arrayidx119, align 4, !dbg !6963
  br label %if.end132, !dbg !6962

if.else121:                                       ; preds = %if.end111
  %115 = load float, float* %facm, align 4, !dbg !6964
  %116 = load float, float* %fac.addr, align 4, !dbg !6965
  %mul122 = fmul float 2.000000e+00, %116, !dbg !6966
  %117 = load float*, float** %col.addr, align 8, !dbg !6967
  %arrayidx123 = getelementptr inbounds float, float* %117, i64 2, !dbg !6967
  %118 = load float, float* %arrayidx123, align 4, !dbg !6967
  %sub124 = fsub float 1.000000e+00, %118, !dbg !6968
  %mul125 = fmul float %mul122, %sub124, !dbg !6969
  %add126 = fadd float %115, %mul125, !dbg !6970
  %119 = load float*, float** %r_col.addr, align 8, !dbg !6971
  %arrayidx127 = getelementptr inbounds float, float* %119, i64 2, !dbg !6971
  %120 = load float, float* %arrayidx127, align 4, !dbg !6971
  %sub128 = fsub float 1.000000e+00, %120, !dbg !6972
  %mul129 = fmul float %add126, %sub128, !dbg !6973
  %sub130 = fsub float 1.000000e+00, %mul129, !dbg !6974
  %121 = load float*, float** %r_col.addr, align 8, !dbg !6975
  %arrayidx131 = getelementptr inbounds float, float* %121, i64 2, !dbg !6975
  store float %sub130, float* %arrayidx131, align 4, !dbg !6976
  br label %if.end132

if.end132:                                        ; preds = %if.else121, %if.then114
  br label %sw.epilog, !dbg !6977

sw.bb133:                                         ; preds = %entry
  %122 = load float, float* %fac.addr, align 4, !dbg !6978
  %123 = load float*, float** %col.addr, align 8, !dbg !6979
  %arrayidx134 = getelementptr inbounds float, float* %123, i64 0, !dbg !6979
  %124 = load float, float* %arrayidx134, align 4, !dbg !6979
  %mul135 = fmul float %122, %124, !dbg !6980
  %125 = load float*, float** %r_col.addr, align 8, !dbg !6981
  %arrayidx136 = getelementptr inbounds float, float* %125, i64 0, !dbg !6981
  %126 = load float, float* %arrayidx136, align 4, !dbg !6982
  %sub137 = fsub float %126, %mul135, !dbg !6982
  store float %sub137, float* %arrayidx136, align 4, !dbg !6982
  %127 = load float, float* %fac.addr, align 4, !dbg !6983
  %128 = load float*, float** %col.addr, align 8, !dbg !6984
  %arrayidx138 = getelementptr inbounds float, float* %128, i64 1, !dbg !6984
  %129 = load float, float* %arrayidx138, align 4, !dbg !6984
  %mul139 = fmul float %127, %129, !dbg !6985
  %130 = load float*, float** %r_col.addr, align 8, !dbg !6986
  %arrayidx140 = getelementptr inbounds float, float* %130, i64 1, !dbg !6986
  %131 = load float, float* %arrayidx140, align 4, !dbg !6987
  %sub141 = fsub float %131, %mul139, !dbg !6987
  store float %sub141, float* %arrayidx140, align 4, !dbg !6987
  %132 = load float, float* %fac.addr, align 4, !dbg !6988
  %133 = load float*, float** %col.addr, align 8, !dbg !6989
  %arrayidx142 = getelementptr inbounds float, float* %133, i64 2, !dbg !6989
  %134 = load float, float* %arrayidx142, align 4, !dbg !6989
  %mul143 = fmul float %132, %134, !dbg !6990
  %135 = load float*, float** %r_col.addr, align 8, !dbg !6991
  %arrayidx144 = getelementptr inbounds float, float* %135, i64 2, !dbg !6991
  %136 = load float, float* %arrayidx144, align 4, !dbg !6992
  %sub145 = fsub float %136, %mul143, !dbg !6992
  store float %sub145, float* %arrayidx144, align 4, !dbg !6992
  br label %sw.epilog, !dbg !6993

sw.bb146:                                         ; preds = %entry
  %137 = load float*, float** %col.addr, align 8, !dbg !6994
  %arrayidx147 = getelementptr inbounds float, float* %137, i64 0, !dbg !6994
  %138 = load float, float* %arrayidx147, align 4, !dbg !6994
  %cmp148 = fcmp une float %138, 0.000000e+00, !dbg !6996
  br i1 %cmp148, label %if.then149, label %if.end157, !dbg !6997

if.then149:                                       ; preds = %sw.bb146
  %139 = load float, float* %facm, align 4, !dbg !6998
  %140 = load float*, float** %r_col.addr, align 8, !dbg !6999
  %arrayidx150 = getelementptr inbounds float, float* %140, i64 0, !dbg !6999
  %141 = load float, float* %arrayidx150, align 4, !dbg !6999
  %mul151 = fmul float %139, %141, !dbg !7000
  %142 = load float, float* %fac.addr, align 4, !dbg !7001
  %143 = load float*, float** %r_col.addr, align 8, !dbg !7002
  %arrayidx152 = getelementptr inbounds float, float* %143, i64 0, !dbg !7002
  %144 = load float, float* %arrayidx152, align 4, !dbg !7002
  %mul153 = fmul float %142, %144, !dbg !7003
  %145 = load float*, float** %col.addr, align 8, !dbg !7004
  %arrayidx154 = getelementptr inbounds float, float* %145, i64 0, !dbg !7004
  %146 = load float, float* %arrayidx154, align 4, !dbg !7004
  %div = fdiv float %mul153, %146, !dbg !7005
  %add155 = fadd float %mul151, %div, !dbg !7006
  %147 = load float*, float** %r_col.addr, align 8, !dbg !7007
  %arrayidx156 = getelementptr inbounds float, float* %147, i64 0, !dbg !7007
  store float %add155, float* %arrayidx156, align 4, !dbg !7008
  br label %if.end157, !dbg !7007

if.end157:                                        ; preds = %if.then149, %sw.bb146
  %148 = load float*, float** %col.addr, align 8, !dbg !7009
  %arrayidx158 = getelementptr inbounds float, float* %148, i64 1, !dbg !7009
  %149 = load float, float* %arrayidx158, align 4, !dbg !7009
  %cmp159 = fcmp une float %149, 0.000000e+00, !dbg !7011
  br i1 %cmp159, label %if.then160, label %if.end169, !dbg !7012

if.then160:                                       ; preds = %if.end157
  %150 = load float, float* %facm, align 4, !dbg !7013
  %151 = load float*, float** %r_col.addr, align 8, !dbg !7014
  %arrayidx161 = getelementptr inbounds float, float* %151, i64 1, !dbg !7014
  %152 = load float, float* %arrayidx161, align 4, !dbg !7014
  %mul162 = fmul float %150, %152, !dbg !7015
  %153 = load float, float* %fac.addr, align 4, !dbg !7016
  %154 = load float*, float** %r_col.addr, align 8, !dbg !7017
  %arrayidx163 = getelementptr inbounds float, float* %154, i64 1, !dbg !7017
  %155 = load float, float* %arrayidx163, align 4, !dbg !7017
  %mul164 = fmul float %153, %155, !dbg !7018
  %156 = load float*, float** %col.addr, align 8, !dbg !7019
  %arrayidx165 = getelementptr inbounds float, float* %156, i64 1, !dbg !7019
  %157 = load float, float* %arrayidx165, align 4, !dbg !7019
  %div166 = fdiv float %mul164, %157, !dbg !7020
  %add167 = fadd float %mul162, %div166, !dbg !7021
  %158 = load float*, float** %r_col.addr, align 8, !dbg !7022
  %arrayidx168 = getelementptr inbounds float, float* %158, i64 1, !dbg !7022
  store float %add167, float* %arrayidx168, align 4, !dbg !7023
  br label %if.end169, !dbg !7022

if.end169:                                        ; preds = %if.then160, %if.end157
  %159 = load float*, float** %col.addr, align 8, !dbg !7024
  %arrayidx170 = getelementptr inbounds float, float* %159, i64 2, !dbg !7024
  %160 = load float, float* %arrayidx170, align 4, !dbg !7024
  %cmp171 = fcmp une float %160, 0.000000e+00, !dbg !7026
  br i1 %cmp171, label %if.then172, label %if.end181, !dbg !7027

if.then172:                                       ; preds = %if.end169
  %161 = load float, float* %facm, align 4, !dbg !7028
  %162 = load float*, float** %r_col.addr, align 8, !dbg !7029
  %arrayidx173 = getelementptr inbounds float, float* %162, i64 2, !dbg !7029
  %163 = load float, float* %arrayidx173, align 4, !dbg !7029
  %mul174 = fmul float %161, %163, !dbg !7030
  %164 = load float, float* %fac.addr, align 4, !dbg !7031
  %165 = load float*, float** %r_col.addr, align 8, !dbg !7032
  %arrayidx175 = getelementptr inbounds float, float* %165, i64 2, !dbg !7032
  %166 = load float, float* %arrayidx175, align 4, !dbg !7032
  %mul176 = fmul float %164, %166, !dbg !7033
  %167 = load float*, float** %col.addr, align 8, !dbg !7034
  %arrayidx177 = getelementptr inbounds float, float* %167, i64 2, !dbg !7034
  %168 = load float, float* %arrayidx177, align 4, !dbg !7034
  %div178 = fdiv float %mul176, %168, !dbg !7035
  %add179 = fadd float %mul174, %div178, !dbg !7036
  %169 = load float*, float** %r_col.addr, align 8, !dbg !7037
  %arrayidx180 = getelementptr inbounds float, float* %169, i64 2, !dbg !7037
  store float %add179, float* %arrayidx180, align 4, !dbg !7038
  br label %if.end181, !dbg !7037

if.end181:                                        ; preds = %if.then172, %if.end169
  br label %sw.epilog, !dbg !7039

sw.bb182:                                         ; preds = %entry
  %170 = load float, float* %facm, align 4, !dbg !7040
  %171 = load float*, float** %r_col.addr, align 8, !dbg !7041
  %arrayidx183 = getelementptr inbounds float, float* %171, i64 0, !dbg !7041
  %172 = load float, float* %arrayidx183, align 4, !dbg !7041
  %mul184 = fmul float %170, %172, !dbg !7042
  %173 = load float, float* %fac.addr, align 4, !dbg !7043
  %174 = load float*, float** %r_col.addr, align 8, !dbg !7044
  %arrayidx185 = getelementptr inbounds float, float* %174, i64 0, !dbg !7044
  %175 = load float, float* %arrayidx185, align 4, !dbg !7044
  %176 = load float*, float** %col.addr, align 8, !dbg !7045
  %arrayidx186 = getelementptr inbounds float, float* %176, i64 0, !dbg !7045
  %177 = load float, float* %arrayidx186, align 4, !dbg !7045
  %sub187 = fsub float %175, %177, !dbg !7046
  %178 = call float @llvm.fabs.f32(float %sub187), !dbg !7047
  %mul188 = fmul float %173, %178, !dbg !7048
  %add189 = fadd float %mul184, %mul188, !dbg !7049
  %179 = load float*, float** %r_col.addr, align 8, !dbg !7050
  %arrayidx190 = getelementptr inbounds float, float* %179, i64 0, !dbg !7050
  store float %add189, float* %arrayidx190, align 4, !dbg !7051
  %180 = load float, float* %facm, align 4, !dbg !7052
  %181 = load float*, float** %r_col.addr, align 8, !dbg !7053
  %arrayidx191 = getelementptr inbounds float, float* %181, i64 1, !dbg !7053
  %182 = load float, float* %arrayidx191, align 4, !dbg !7053
  %mul192 = fmul float %180, %182, !dbg !7054
  %183 = load float, float* %fac.addr, align 4, !dbg !7055
  %184 = load float*, float** %r_col.addr, align 8, !dbg !7056
  %arrayidx193 = getelementptr inbounds float, float* %184, i64 1, !dbg !7056
  %185 = load float, float* %arrayidx193, align 4, !dbg !7056
  %186 = load float*, float** %col.addr, align 8, !dbg !7057
  %arrayidx194 = getelementptr inbounds float, float* %186, i64 1, !dbg !7057
  %187 = load float, float* %arrayidx194, align 4, !dbg !7057
  %sub195 = fsub float %185, %187, !dbg !7058
  %188 = call float @llvm.fabs.f32(float %sub195), !dbg !7059
  %mul196 = fmul float %183, %188, !dbg !7060
  %add197 = fadd float %mul192, %mul196, !dbg !7061
  %189 = load float*, float** %r_col.addr, align 8, !dbg !7062
  %arrayidx198 = getelementptr inbounds float, float* %189, i64 1, !dbg !7062
  store float %add197, float* %arrayidx198, align 4, !dbg !7063
  %190 = load float, float* %facm, align 4, !dbg !7064
  %191 = load float*, float** %r_col.addr, align 8, !dbg !7065
  %arrayidx199 = getelementptr inbounds float, float* %191, i64 2, !dbg !7065
  %192 = load float, float* %arrayidx199, align 4, !dbg !7065
  %mul200 = fmul float %190, %192, !dbg !7066
  %193 = load float, float* %fac.addr, align 4, !dbg !7067
  %194 = load float*, float** %r_col.addr, align 8, !dbg !7068
  %arrayidx201 = getelementptr inbounds float, float* %194, i64 2, !dbg !7068
  %195 = load float, float* %arrayidx201, align 4, !dbg !7068
  %196 = load float*, float** %col.addr, align 8, !dbg !7069
  %arrayidx202 = getelementptr inbounds float, float* %196, i64 2, !dbg !7069
  %197 = load float, float* %arrayidx202, align 4, !dbg !7069
  %sub203 = fsub float %195, %197, !dbg !7070
  %198 = call float @llvm.fabs.f32(float %sub203), !dbg !7071
  %mul204 = fmul float %193, %198, !dbg !7072
  %add205 = fadd float %mul200, %mul204, !dbg !7073
  %199 = load float*, float** %r_col.addr, align 8, !dbg !7074
  %arrayidx206 = getelementptr inbounds float, float* %199, i64 2, !dbg !7074
  store float %add205, float* %arrayidx206, align 4, !dbg !7075
  br label %sw.epilog, !dbg !7076

sw.bb207:                                         ; preds = %entry
  %200 = load float*, float** %r_col.addr, align 8, !dbg !7077
  %arrayidx208 = getelementptr inbounds float, float* %200, i64 0, !dbg !7077
  %201 = load float, float* %arrayidx208, align 4, !dbg !7077
  %202 = load float*, float** %col.addr, align 8, !dbg !7078
  %arrayidx209 = getelementptr inbounds float, float* %202, i64 0, !dbg !7078
  %203 = load float, float* %arrayidx209, align 4, !dbg !7078
  %call = call float @min_ff(float %201, float %203), !dbg !7079
  %204 = load float, float* %fac.addr, align 4, !dbg !7080
  %mul210 = fmul float %call, %204, !dbg !7081
  %205 = load float*, float** %r_col.addr, align 8, !dbg !7082
  %arrayidx211 = getelementptr inbounds float, float* %205, i64 0, !dbg !7082
  %206 = load float, float* %arrayidx211, align 4, !dbg !7082
  %207 = load float, float* %facm, align 4, !dbg !7083
  %mul212 = fmul float %206, %207, !dbg !7084
  %add213 = fadd float %mul210, %mul212, !dbg !7085
  %208 = load float*, float** %r_col.addr, align 8, !dbg !7086
  %arrayidx214 = getelementptr inbounds float, float* %208, i64 0, !dbg !7086
  store float %add213, float* %arrayidx214, align 4, !dbg !7087
  %209 = load float*, float** %r_col.addr, align 8, !dbg !7088
  %arrayidx215 = getelementptr inbounds float, float* %209, i64 1, !dbg !7088
  %210 = load float, float* %arrayidx215, align 4, !dbg !7088
  %211 = load float*, float** %col.addr, align 8, !dbg !7089
  %arrayidx216 = getelementptr inbounds float, float* %211, i64 1, !dbg !7089
  %212 = load float, float* %arrayidx216, align 4, !dbg !7089
  %call217 = call float @min_ff(float %210, float %212), !dbg !7090
  %213 = load float, float* %fac.addr, align 4, !dbg !7091
  %mul218 = fmul float %call217, %213, !dbg !7092
  %214 = load float*, float** %r_col.addr, align 8, !dbg !7093
  %arrayidx219 = getelementptr inbounds float, float* %214, i64 1, !dbg !7093
  %215 = load float, float* %arrayidx219, align 4, !dbg !7093
  %216 = load float, float* %facm, align 4, !dbg !7094
  %mul220 = fmul float %215, %216, !dbg !7095
  %add221 = fadd float %mul218, %mul220, !dbg !7096
  %217 = load float*, float** %r_col.addr, align 8, !dbg !7097
  %arrayidx222 = getelementptr inbounds float, float* %217, i64 1, !dbg !7097
  store float %add221, float* %arrayidx222, align 4, !dbg !7098
  %218 = load float*, float** %r_col.addr, align 8, !dbg !7099
  %arrayidx223 = getelementptr inbounds float, float* %218, i64 2, !dbg !7099
  %219 = load float, float* %arrayidx223, align 4, !dbg !7099
  %220 = load float*, float** %col.addr, align 8, !dbg !7100
  %arrayidx224 = getelementptr inbounds float, float* %220, i64 2, !dbg !7100
  %221 = load float, float* %arrayidx224, align 4, !dbg !7100
  %call225 = call float @min_ff(float %219, float %221), !dbg !7101
  %222 = load float, float* %fac.addr, align 4, !dbg !7102
  %mul226 = fmul float %call225, %222, !dbg !7103
  %223 = load float*, float** %r_col.addr, align 8, !dbg !7104
  %arrayidx227 = getelementptr inbounds float, float* %223, i64 2, !dbg !7104
  %224 = load float, float* %arrayidx227, align 4, !dbg !7104
  %225 = load float, float* %facm, align 4, !dbg !7105
  %mul228 = fmul float %224, %225, !dbg !7106
  %add229 = fadd float %mul226, %mul228, !dbg !7107
  %226 = load float*, float** %r_col.addr, align 8, !dbg !7108
  %arrayidx230 = getelementptr inbounds float, float* %226, i64 2, !dbg !7108
  store float %add229, float* %arrayidx230, align 4, !dbg !7109
  br label %sw.epilog, !dbg !7110

sw.bb231:                                         ; preds = %entry
  %227 = load float, float* %fac.addr, align 4, !dbg !7111
  %228 = load float*, float** %col.addr, align 8, !dbg !7112
  %arrayidx232 = getelementptr inbounds float, float* %228, i64 0, !dbg !7112
  %229 = load float, float* %arrayidx232, align 4, !dbg !7112
  %mul233 = fmul float %227, %229, !dbg !7113
  store float %mul233, float* %tmp, align 4, !dbg !7114
  %230 = load float, float* %tmp, align 4, !dbg !7115
  %231 = load float*, float** %r_col.addr, align 8, !dbg !7117
  %arrayidx234 = getelementptr inbounds float, float* %231, i64 0, !dbg !7117
  %232 = load float, float* %arrayidx234, align 4, !dbg !7117
  %cmp235 = fcmp ogt float %230, %232, !dbg !7118
  br i1 %cmp235, label %if.then236, label %if.end238, !dbg !7119

if.then236:                                       ; preds = %sw.bb231
  %233 = load float, float* %tmp, align 4, !dbg !7120
  %234 = load float*, float** %r_col.addr, align 8, !dbg !7121
  %arrayidx237 = getelementptr inbounds float, float* %234, i64 0, !dbg !7121
  store float %233, float* %arrayidx237, align 4, !dbg !7122
  br label %if.end238, !dbg !7121

if.end238:                                        ; preds = %if.then236, %sw.bb231
  %235 = load float, float* %fac.addr, align 4, !dbg !7123
  %236 = load float*, float** %col.addr, align 8, !dbg !7124
  %arrayidx239 = getelementptr inbounds float, float* %236, i64 1, !dbg !7124
  %237 = load float, float* %arrayidx239, align 4, !dbg !7124
  %mul240 = fmul float %235, %237, !dbg !7125
  store float %mul240, float* %tmp, align 4, !dbg !7126
  %238 = load float, float* %tmp, align 4, !dbg !7127
  %239 = load float*, float** %r_col.addr, align 8, !dbg !7129
  %arrayidx241 = getelementptr inbounds float, float* %239, i64 1, !dbg !7129
  %240 = load float, float* %arrayidx241, align 4, !dbg !7129
  %cmp242 = fcmp ogt float %238, %240, !dbg !7130
  br i1 %cmp242, label %if.then243, label %if.end245, !dbg !7131

if.then243:                                       ; preds = %if.end238
  %241 = load float, float* %tmp, align 4, !dbg !7132
  %242 = load float*, float** %r_col.addr, align 8, !dbg !7133
  %arrayidx244 = getelementptr inbounds float, float* %242, i64 1, !dbg !7133
  store float %241, float* %arrayidx244, align 4, !dbg !7134
  br label %if.end245, !dbg !7133

if.end245:                                        ; preds = %if.then243, %if.end238
  %243 = load float, float* %fac.addr, align 4, !dbg !7135
  %244 = load float*, float** %col.addr, align 8, !dbg !7136
  %arrayidx246 = getelementptr inbounds float, float* %244, i64 2, !dbg !7136
  %245 = load float, float* %arrayidx246, align 4, !dbg !7136
  %mul247 = fmul float %243, %245, !dbg !7137
  store float %mul247, float* %tmp, align 4, !dbg !7138
  %246 = load float, float* %tmp, align 4, !dbg !7139
  %247 = load float*, float** %r_col.addr, align 8, !dbg !7141
  %arrayidx248 = getelementptr inbounds float, float* %247, i64 2, !dbg !7141
  %248 = load float, float* %arrayidx248, align 4, !dbg !7141
  %cmp249 = fcmp ogt float %246, %248, !dbg !7142
  br i1 %cmp249, label %if.then250, label %if.end252, !dbg !7143

if.then250:                                       ; preds = %if.end245
  %249 = load float, float* %tmp, align 4, !dbg !7144
  %250 = load float*, float** %r_col.addr, align 8, !dbg !7145
  %arrayidx251 = getelementptr inbounds float, float* %250, i64 2, !dbg !7145
  store float %249, float* %arrayidx251, align 4, !dbg !7146
  br label %if.end252, !dbg !7145

if.end252:                                        ; preds = %if.then250, %if.end245
  br label %sw.epilog, !dbg !7147

sw.bb253:                                         ; preds = %entry
  %251 = load float*, float** %r_col.addr, align 8, !dbg !7148
  %arrayidx254 = getelementptr inbounds float, float* %251, i64 0, !dbg !7148
  %252 = load float, float* %arrayidx254, align 4, !dbg !7148
  %cmp255 = fcmp une float %252, 0.000000e+00, !dbg !7150
  br i1 %cmp255, label %if.then256, label %if.end273, !dbg !7151

if.then256:                                       ; preds = %sw.bb253
  %253 = load float, float* %fac.addr, align 4, !dbg !7152
  %254 = load float*, float** %col.addr, align 8, !dbg !7154
  %arrayidx257 = getelementptr inbounds float, float* %254, i64 0, !dbg !7154
  %255 = load float, float* %arrayidx257, align 4, !dbg !7154
  %mul258 = fmul float %253, %255, !dbg !7155
  %sub259 = fsub float 1.000000e+00, %mul258, !dbg !7156
  store float %sub259, float* %tmp, align 4, !dbg !7157
  %256 = load float, float* %tmp, align 4, !dbg !7158
  %cmp260 = fcmp ole float %256, 0.000000e+00, !dbg !7160
  br i1 %cmp260, label %if.then261, label %if.else263, !dbg !7161

if.then261:                                       ; preds = %if.then256
  %257 = load float*, float** %r_col.addr, align 8, !dbg !7162
  %arrayidx262 = getelementptr inbounds float, float* %257, i64 0, !dbg !7162
  store float 1.000000e+00, float* %arrayidx262, align 4, !dbg !7163
  br label %if.end272, !dbg !7162

if.else263:                                       ; preds = %if.then256
  %258 = load float*, float** %r_col.addr, align 8, !dbg !7164
  %arrayidx264 = getelementptr inbounds float, float* %258, i64 0, !dbg !7164
  %259 = load float, float* %arrayidx264, align 4, !dbg !7164
  %260 = load float, float* %tmp, align 4, !dbg !7166
  %div265 = fdiv float %259, %260, !dbg !7167
  store float %div265, float* %tmp, align 4, !dbg !7168
  %cmp266 = fcmp ogt float %div265, 1.000000e+00, !dbg !7169
  br i1 %cmp266, label %if.then267, label %if.else269, !dbg !7170

if.then267:                                       ; preds = %if.else263
  %261 = load float*, float** %r_col.addr, align 8, !dbg !7171
  %arrayidx268 = getelementptr inbounds float, float* %261, i64 0, !dbg !7171
  store float 1.000000e+00, float* %arrayidx268, align 4, !dbg !7172
  br label %if.end271, !dbg !7171

if.else269:                                       ; preds = %if.else263
  %262 = load float, float* %tmp, align 4, !dbg !7173
  %263 = load float*, float** %r_col.addr, align 8, !dbg !7174
  %arrayidx270 = getelementptr inbounds float, float* %263, i64 0, !dbg !7174
  store float %262, float* %arrayidx270, align 4, !dbg !7175
  br label %if.end271

if.end271:                                        ; preds = %if.else269, %if.then267
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %if.then261
  br label %if.end273, !dbg !7176

if.end273:                                        ; preds = %if.end272, %sw.bb253
  %264 = load float*, float** %r_col.addr, align 8, !dbg !7177
  %arrayidx274 = getelementptr inbounds float, float* %264, i64 1, !dbg !7177
  %265 = load float, float* %arrayidx274, align 4, !dbg !7177
  %cmp275 = fcmp une float %265, 0.000000e+00, !dbg !7179
  br i1 %cmp275, label %if.then276, label %if.end293, !dbg !7180

if.then276:                                       ; preds = %if.end273
  %266 = load float, float* %fac.addr, align 4, !dbg !7181
  %267 = load float*, float** %col.addr, align 8, !dbg !7183
  %arrayidx277 = getelementptr inbounds float, float* %267, i64 1, !dbg !7183
  %268 = load float, float* %arrayidx277, align 4, !dbg !7183
  %mul278 = fmul float %266, %268, !dbg !7184
  %sub279 = fsub float 1.000000e+00, %mul278, !dbg !7185
  store float %sub279, float* %tmp, align 4, !dbg !7186
  %269 = load float, float* %tmp, align 4, !dbg !7187
  %cmp280 = fcmp ole float %269, 0.000000e+00, !dbg !7189
  br i1 %cmp280, label %if.then281, label %if.else283, !dbg !7190

if.then281:                                       ; preds = %if.then276
  %270 = load float*, float** %r_col.addr, align 8, !dbg !7191
  %arrayidx282 = getelementptr inbounds float, float* %270, i64 1, !dbg !7191
  store float 1.000000e+00, float* %arrayidx282, align 4, !dbg !7192
  br label %if.end292, !dbg !7191

if.else283:                                       ; preds = %if.then276
  %271 = load float*, float** %r_col.addr, align 8, !dbg !7193
  %arrayidx284 = getelementptr inbounds float, float* %271, i64 1, !dbg !7193
  %272 = load float, float* %arrayidx284, align 4, !dbg !7193
  %273 = load float, float* %tmp, align 4, !dbg !7195
  %div285 = fdiv float %272, %273, !dbg !7196
  store float %div285, float* %tmp, align 4, !dbg !7197
  %cmp286 = fcmp ogt float %div285, 1.000000e+00, !dbg !7198
  br i1 %cmp286, label %if.then287, label %if.else289, !dbg !7199

if.then287:                                       ; preds = %if.else283
  %274 = load float*, float** %r_col.addr, align 8, !dbg !7200
  %arrayidx288 = getelementptr inbounds float, float* %274, i64 1, !dbg !7200
  store float 1.000000e+00, float* %arrayidx288, align 4, !dbg !7201
  br label %if.end291, !dbg !7200

if.else289:                                       ; preds = %if.else283
  %275 = load float, float* %tmp, align 4, !dbg !7202
  %276 = load float*, float** %r_col.addr, align 8, !dbg !7203
  %arrayidx290 = getelementptr inbounds float, float* %276, i64 1, !dbg !7203
  store float %275, float* %arrayidx290, align 4, !dbg !7204
  br label %if.end291

if.end291:                                        ; preds = %if.else289, %if.then287
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %if.then281
  br label %if.end293, !dbg !7205

if.end293:                                        ; preds = %if.end292, %if.end273
  %277 = load float*, float** %r_col.addr, align 8, !dbg !7206
  %arrayidx294 = getelementptr inbounds float, float* %277, i64 2, !dbg !7206
  %278 = load float, float* %arrayidx294, align 4, !dbg !7206
  %cmp295 = fcmp une float %278, 0.000000e+00, !dbg !7208
  br i1 %cmp295, label %if.then296, label %if.end313, !dbg !7209

if.then296:                                       ; preds = %if.end293
  %279 = load float, float* %fac.addr, align 4, !dbg !7210
  %280 = load float*, float** %col.addr, align 8, !dbg !7212
  %arrayidx297 = getelementptr inbounds float, float* %280, i64 2, !dbg !7212
  %281 = load float, float* %arrayidx297, align 4, !dbg !7212
  %mul298 = fmul float %279, %281, !dbg !7213
  %sub299 = fsub float 1.000000e+00, %mul298, !dbg !7214
  store float %sub299, float* %tmp, align 4, !dbg !7215
  %282 = load float, float* %tmp, align 4, !dbg !7216
  %cmp300 = fcmp ole float %282, 0.000000e+00, !dbg !7218
  br i1 %cmp300, label %if.then301, label %if.else303, !dbg !7219

if.then301:                                       ; preds = %if.then296
  %283 = load float*, float** %r_col.addr, align 8, !dbg !7220
  %arrayidx302 = getelementptr inbounds float, float* %283, i64 2, !dbg !7220
  store float 1.000000e+00, float* %arrayidx302, align 4, !dbg !7221
  br label %if.end312, !dbg !7220

if.else303:                                       ; preds = %if.then296
  %284 = load float*, float** %r_col.addr, align 8, !dbg !7222
  %arrayidx304 = getelementptr inbounds float, float* %284, i64 2, !dbg !7222
  %285 = load float, float* %arrayidx304, align 4, !dbg !7222
  %286 = load float, float* %tmp, align 4, !dbg !7224
  %div305 = fdiv float %285, %286, !dbg !7225
  store float %div305, float* %tmp, align 4, !dbg !7226
  %cmp306 = fcmp ogt float %div305, 1.000000e+00, !dbg !7227
  br i1 %cmp306, label %if.then307, label %if.else309, !dbg !7228

if.then307:                                       ; preds = %if.else303
  %287 = load float*, float** %r_col.addr, align 8, !dbg !7229
  %arrayidx308 = getelementptr inbounds float, float* %287, i64 2, !dbg !7229
  store float 1.000000e+00, float* %arrayidx308, align 4, !dbg !7230
  br label %if.end311, !dbg !7229

if.else309:                                       ; preds = %if.else303
  %288 = load float, float* %tmp, align 4, !dbg !7231
  %289 = load float*, float** %r_col.addr, align 8, !dbg !7232
  %arrayidx310 = getelementptr inbounds float, float* %289, i64 2, !dbg !7232
  store float %288, float* %arrayidx310, align 4, !dbg !7233
  br label %if.end311

if.end311:                                        ; preds = %if.else309, %if.then307
  br label %if.end312

if.end312:                                        ; preds = %if.end311, %if.then301
  br label %if.end313, !dbg !7234

if.end313:                                        ; preds = %if.end312, %if.end293
  br label %sw.epilog, !dbg !7235

sw.bb314:                                         ; preds = %entry
  %290 = load float, float* %facm, align 4, !dbg !7236
  %291 = load float, float* %fac.addr, align 4, !dbg !7237
  %292 = load float*, float** %col.addr, align 8, !dbg !7238
  %arrayidx315 = getelementptr inbounds float, float* %292, i64 0, !dbg !7238
  %293 = load float, float* %arrayidx315, align 4, !dbg !7238
  %mul316 = fmul float %291, %293, !dbg !7239
  %add317 = fadd float %290, %mul316, !dbg !7240
  store float %add317, float* %tmp, align 4, !dbg !7241
  %294 = load float, float* %tmp, align 4, !dbg !7242
  %cmp318 = fcmp ole float %294, 0.000000e+00, !dbg !7244
  br i1 %cmp318, label %if.then319, label %if.else321, !dbg !7245

if.then319:                                       ; preds = %sw.bb314
  %295 = load float*, float** %r_col.addr, align 8, !dbg !7246
  %arrayidx320 = getelementptr inbounds float, float* %295, i64 0, !dbg !7246
  store float 0.000000e+00, float* %arrayidx320, align 4, !dbg !7247
  br label %if.end337, !dbg !7246

if.else321:                                       ; preds = %sw.bb314
  %296 = load float*, float** %r_col.addr, align 8, !dbg !7248
  %arrayidx322 = getelementptr inbounds float, float* %296, i64 0, !dbg !7248
  %297 = load float, float* %arrayidx322, align 4, !dbg !7248
  %sub323 = fsub float 1.000000e+00, %297, !dbg !7250
  %298 = load float, float* %tmp, align 4, !dbg !7251
  %div324 = fdiv float %sub323, %298, !dbg !7252
  %sub325 = fsub float 1.000000e+00, %div324, !dbg !7253
  store float %sub325, float* %tmp, align 4, !dbg !7254
  %cmp326 = fcmp olt float %sub325, 0.000000e+00, !dbg !7255
  br i1 %cmp326, label %if.then327, label %if.else329, !dbg !7256

if.then327:                                       ; preds = %if.else321
  %299 = load float*, float** %r_col.addr, align 8, !dbg !7257
  %arrayidx328 = getelementptr inbounds float, float* %299, i64 0, !dbg !7257
  store float 0.000000e+00, float* %arrayidx328, align 4, !dbg !7258
  br label %if.end336, !dbg !7257

if.else329:                                       ; preds = %if.else321
  %300 = load float, float* %tmp, align 4, !dbg !7259
  %cmp330 = fcmp ogt float %300, 1.000000e+00, !dbg !7261
  br i1 %cmp330, label %if.then331, label %if.else333, !dbg !7262

if.then331:                                       ; preds = %if.else329
  %301 = load float*, float** %r_col.addr, align 8, !dbg !7263
  %arrayidx332 = getelementptr inbounds float, float* %301, i64 0, !dbg !7263
  store float 1.000000e+00, float* %arrayidx332, align 4, !dbg !7264
  br label %if.end335, !dbg !7263

if.else333:                                       ; preds = %if.else329
  %302 = load float, float* %tmp, align 4, !dbg !7265
  %303 = load float*, float** %r_col.addr, align 8, !dbg !7266
  %arrayidx334 = getelementptr inbounds float, float* %303, i64 0, !dbg !7266
  store float %302, float* %arrayidx334, align 4, !dbg !7267
  br label %if.end335

if.end335:                                        ; preds = %if.else333, %if.then331
  br label %if.end336

if.end336:                                        ; preds = %if.end335, %if.then327
  br label %if.end337

if.end337:                                        ; preds = %if.end336, %if.then319
  %304 = load float, float* %facm, align 4, !dbg !7268
  %305 = load float, float* %fac.addr, align 4, !dbg !7269
  %306 = load float*, float** %col.addr, align 8, !dbg !7270
  %arrayidx338 = getelementptr inbounds float, float* %306, i64 1, !dbg !7270
  %307 = load float, float* %arrayidx338, align 4, !dbg !7270
  %mul339 = fmul float %305, %307, !dbg !7271
  %add340 = fadd float %304, %mul339, !dbg !7272
  store float %add340, float* %tmp, align 4, !dbg !7273
  %308 = load float, float* %tmp, align 4, !dbg !7274
  %cmp341 = fcmp ole float %308, 0.000000e+00, !dbg !7276
  br i1 %cmp341, label %if.then342, label %if.else344, !dbg !7277

if.then342:                                       ; preds = %if.end337
  %309 = load float*, float** %r_col.addr, align 8, !dbg !7278
  %arrayidx343 = getelementptr inbounds float, float* %309, i64 1, !dbg !7278
  store float 0.000000e+00, float* %arrayidx343, align 4, !dbg !7279
  br label %if.end360, !dbg !7278

if.else344:                                       ; preds = %if.end337
  %310 = load float*, float** %r_col.addr, align 8, !dbg !7280
  %arrayidx345 = getelementptr inbounds float, float* %310, i64 1, !dbg !7280
  %311 = load float, float* %arrayidx345, align 4, !dbg !7280
  %sub346 = fsub float 1.000000e+00, %311, !dbg !7282
  %312 = load float, float* %tmp, align 4, !dbg !7283
  %div347 = fdiv float %sub346, %312, !dbg !7284
  %sub348 = fsub float 1.000000e+00, %div347, !dbg !7285
  store float %sub348, float* %tmp, align 4, !dbg !7286
  %cmp349 = fcmp olt float %sub348, 0.000000e+00, !dbg !7287
  br i1 %cmp349, label %if.then350, label %if.else352, !dbg !7288

if.then350:                                       ; preds = %if.else344
  %313 = load float*, float** %r_col.addr, align 8, !dbg !7289
  %arrayidx351 = getelementptr inbounds float, float* %313, i64 1, !dbg !7289
  store float 0.000000e+00, float* %arrayidx351, align 4, !dbg !7290
  br label %if.end359, !dbg !7289

if.else352:                                       ; preds = %if.else344
  %314 = load float, float* %tmp, align 4, !dbg !7291
  %cmp353 = fcmp ogt float %314, 1.000000e+00, !dbg !7293
  br i1 %cmp353, label %if.then354, label %if.else356, !dbg !7294

if.then354:                                       ; preds = %if.else352
  %315 = load float*, float** %r_col.addr, align 8, !dbg !7295
  %arrayidx355 = getelementptr inbounds float, float* %315, i64 1, !dbg !7295
  store float 1.000000e+00, float* %arrayidx355, align 4, !dbg !7296
  br label %if.end358, !dbg !7295

if.else356:                                       ; preds = %if.else352
  %316 = load float, float* %tmp, align 4, !dbg !7297
  %317 = load float*, float** %r_col.addr, align 8, !dbg !7298
  %arrayidx357 = getelementptr inbounds float, float* %317, i64 1, !dbg !7298
  store float %316, float* %arrayidx357, align 4, !dbg !7299
  br label %if.end358

if.end358:                                        ; preds = %if.else356, %if.then354
  br label %if.end359

if.end359:                                        ; preds = %if.end358, %if.then350
  br label %if.end360

if.end360:                                        ; preds = %if.end359, %if.then342
  %318 = load float, float* %facm, align 4, !dbg !7300
  %319 = load float, float* %fac.addr, align 4, !dbg !7301
  %320 = load float*, float** %col.addr, align 8, !dbg !7302
  %arrayidx361 = getelementptr inbounds float, float* %320, i64 2, !dbg !7302
  %321 = load float, float* %arrayidx361, align 4, !dbg !7302
  %mul362 = fmul float %319, %321, !dbg !7303
  %add363 = fadd float %318, %mul362, !dbg !7304
  store float %add363, float* %tmp, align 4, !dbg !7305
  %322 = load float, float* %tmp, align 4, !dbg !7306
  %cmp364 = fcmp ole float %322, 0.000000e+00, !dbg !7308
  br i1 %cmp364, label %if.then365, label %if.else367, !dbg !7309

if.then365:                                       ; preds = %if.end360
  %323 = load float*, float** %r_col.addr, align 8, !dbg !7310
  %arrayidx366 = getelementptr inbounds float, float* %323, i64 2, !dbg !7310
  store float 0.000000e+00, float* %arrayidx366, align 4, !dbg !7311
  br label %if.end383, !dbg !7310

if.else367:                                       ; preds = %if.end360
  %324 = load float*, float** %r_col.addr, align 8, !dbg !7312
  %arrayidx368 = getelementptr inbounds float, float* %324, i64 2, !dbg !7312
  %325 = load float, float* %arrayidx368, align 4, !dbg !7312
  %sub369 = fsub float 1.000000e+00, %325, !dbg !7314
  %326 = load float, float* %tmp, align 4, !dbg !7315
  %div370 = fdiv float %sub369, %326, !dbg !7316
  %sub371 = fsub float 1.000000e+00, %div370, !dbg !7317
  store float %sub371, float* %tmp, align 4, !dbg !7318
  %cmp372 = fcmp olt float %sub371, 0.000000e+00, !dbg !7319
  br i1 %cmp372, label %if.then373, label %if.else375, !dbg !7320

if.then373:                                       ; preds = %if.else367
  %327 = load float*, float** %r_col.addr, align 8, !dbg !7321
  %arrayidx374 = getelementptr inbounds float, float* %327, i64 2, !dbg !7321
  store float 0.000000e+00, float* %arrayidx374, align 4, !dbg !7322
  br label %if.end382, !dbg !7321

if.else375:                                       ; preds = %if.else367
  %328 = load float, float* %tmp, align 4, !dbg !7323
  %cmp376 = fcmp ogt float %328, 1.000000e+00, !dbg !7325
  br i1 %cmp376, label %if.then377, label %if.else379, !dbg !7326

if.then377:                                       ; preds = %if.else375
  %329 = load float*, float** %r_col.addr, align 8, !dbg !7327
  %arrayidx378 = getelementptr inbounds float, float* %329, i64 2, !dbg !7327
  store float 1.000000e+00, float* %arrayidx378, align 4, !dbg !7328
  br label %if.end381, !dbg !7327

if.else379:                                       ; preds = %if.else375
  %330 = load float, float* %tmp, align 4, !dbg !7329
  %331 = load float*, float** %r_col.addr, align 8, !dbg !7330
  %arrayidx380 = getelementptr inbounds float, float* %331, i64 2, !dbg !7330
  store float %330, float* %arrayidx380, align 4, !dbg !7331
  br label %if.end381

if.end381:                                        ; preds = %if.else379, %if.then377
  br label %if.end382

if.end382:                                        ; preds = %if.end381, %if.then373
  br label %if.end383

if.end383:                                        ; preds = %if.end382, %if.then365
  br label %sw.epilog, !dbg !7332

sw.bb384:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %rH, metadata !7333, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.declare(metadata float* %rS, metadata !7336, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.declare(metadata float* %rV, metadata !7338, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.declare(metadata float* %colH, metadata !7340, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.declare(metadata float* %colS, metadata !7342, metadata !DIExpression()), !dbg !7343
  call void @llvm.dbg.declare(metadata float* %colV, metadata !7344, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.declare(metadata float* %tmpr, metadata !7346, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.declare(metadata float* %tmpg, metadata !7348, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.declare(metadata float* %tmpb, metadata !7350, metadata !DIExpression()), !dbg !7351
  %332 = load float*, float** %col.addr, align 8, !dbg !7352
  %arrayidx385 = getelementptr inbounds float, float* %332, i64 0, !dbg !7352
  %333 = load float, float* %arrayidx385, align 4, !dbg !7352
  %334 = load float*, float** %col.addr, align 8, !dbg !7353
  %arrayidx386 = getelementptr inbounds float, float* %334, i64 1, !dbg !7353
  %335 = load float, float* %arrayidx386, align 4, !dbg !7353
  %336 = load float*, float** %col.addr, align 8, !dbg !7354
  %arrayidx387 = getelementptr inbounds float, float* %336, i64 2, !dbg !7354
  %337 = load float, float* %arrayidx387, align 4, !dbg !7354
  call void @rgb_to_hsv(float %333, float %335, float %337, float* %colH, float* %colS, float* %colV), !dbg !7355
  %338 = load float, float* %colS, align 4, !dbg !7356
  %cmp388 = fcmp une float %338, 0.000000e+00, !dbg !7358
  br i1 %cmp388, label %if.then389, label %if.end408, !dbg !7359

if.then389:                                       ; preds = %sw.bb384
  %339 = load float*, float** %r_col.addr, align 8, !dbg !7360
  %arrayidx390 = getelementptr inbounds float, float* %339, i64 0, !dbg !7360
  %340 = load float, float* %arrayidx390, align 4, !dbg !7360
  %341 = load float*, float** %r_col.addr, align 8, !dbg !7362
  %arrayidx391 = getelementptr inbounds float, float* %341, i64 1, !dbg !7362
  %342 = load float, float* %arrayidx391, align 4, !dbg !7362
  %343 = load float*, float** %r_col.addr, align 8, !dbg !7363
  %arrayidx392 = getelementptr inbounds float, float* %343, i64 2, !dbg !7363
  %344 = load float, float* %arrayidx392, align 4, !dbg !7363
  call void @rgb_to_hsv(float %340, float %342, float %344, float* %rH, float* %rS, float* %rV), !dbg !7364
  %345 = load float, float* %colH, align 4, !dbg !7365
  %346 = load float, float* %rS, align 4, !dbg !7366
  %347 = load float, float* %rV, align 4, !dbg !7367
  call void @hsv_to_rgb(float %345, float %346, float %347, float* %tmpr, float* %tmpg, float* %tmpb), !dbg !7368
  %348 = load float, float* %facm, align 4, !dbg !7369
  %349 = load float*, float** %r_col.addr, align 8, !dbg !7370
  %arrayidx393 = getelementptr inbounds float, float* %349, i64 0, !dbg !7370
  %350 = load float, float* %arrayidx393, align 4, !dbg !7370
  %mul394 = fmul float %348, %350, !dbg !7371
  %351 = load float, float* %fac.addr, align 4, !dbg !7372
  %352 = load float, float* %tmpr, align 4, !dbg !7373
  %mul395 = fmul float %351, %352, !dbg !7374
  %add396 = fadd float %mul394, %mul395, !dbg !7375
  %353 = load float*, float** %r_col.addr, align 8, !dbg !7376
  %arrayidx397 = getelementptr inbounds float, float* %353, i64 0, !dbg !7376
  store float %add396, float* %arrayidx397, align 4, !dbg !7377
  %354 = load float, float* %facm, align 4, !dbg !7378
  %355 = load float*, float** %r_col.addr, align 8, !dbg !7379
  %arrayidx398 = getelementptr inbounds float, float* %355, i64 1, !dbg !7379
  %356 = load float, float* %arrayidx398, align 4, !dbg !7379
  %mul399 = fmul float %354, %356, !dbg !7380
  %357 = load float, float* %fac.addr, align 4, !dbg !7381
  %358 = load float, float* %tmpg, align 4, !dbg !7382
  %mul400 = fmul float %357, %358, !dbg !7383
  %add401 = fadd float %mul399, %mul400, !dbg !7384
  %359 = load float*, float** %r_col.addr, align 8, !dbg !7385
  %arrayidx402 = getelementptr inbounds float, float* %359, i64 1, !dbg !7385
  store float %add401, float* %arrayidx402, align 4, !dbg !7386
  %360 = load float, float* %facm, align 4, !dbg !7387
  %361 = load float*, float** %r_col.addr, align 8, !dbg !7388
  %arrayidx403 = getelementptr inbounds float, float* %361, i64 2, !dbg !7388
  %362 = load float, float* %arrayidx403, align 4, !dbg !7388
  %mul404 = fmul float %360, %362, !dbg !7389
  %363 = load float, float* %fac.addr, align 4, !dbg !7390
  %364 = load float, float* %tmpb, align 4, !dbg !7391
  %mul405 = fmul float %363, %364, !dbg !7392
  %add406 = fadd float %mul404, %mul405, !dbg !7393
  %365 = load float*, float** %r_col.addr, align 8, !dbg !7394
  %arrayidx407 = getelementptr inbounds float, float* %365, i64 2, !dbg !7394
  store float %add406, float* %arrayidx407, align 4, !dbg !7395
  br label %if.end408, !dbg !7396

if.end408:                                        ; preds = %if.then389, %sw.bb384
  br label %sw.epilog, !dbg !7397

sw.bb409:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %rH410, metadata !7398, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.declare(metadata float* %rS411, metadata !7401, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.declare(metadata float* %rV412, metadata !7403, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.declare(metadata float* %colH413, metadata !7405, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.declare(metadata float* %colS414, metadata !7407, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.declare(metadata float* %colV415, metadata !7409, metadata !DIExpression()), !dbg !7410
  %366 = load float*, float** %r_col.addr, align 8, !dbg !7411
  %arrayidx416 = getelementptr inbounds float, float* %366, i64 0, !dbg !7411
  %367 = load float, float* %arrayidx416, align 4, !dbg !7411
  %368 = load float*, float** %r_col.addr, align 8, !dbg !7412
  %arrayidx417 = getelementptr inbounds float, float* %368, i64 1, !dbg !7412
  %369 = load float, float* %arrayidx417, align 4, !dbg !7412
  %370 = load float*, float** %r_col.addr, align 8, !dbg !7413
  %arrayidx418 = getelementptr inbounds float, float* %370, i64 2, !dbg !7413
  %371 = load float, float* %arrayidx418, align 4, !dbg !7413
  call void @rgb_to_hsv(float %367, float %369, float %371, float* %rH410, float* %rS411, float* %rV412), !dbg !7414
  %372 = load float, float* %rS411, align 4, !dbg !7415
  %cmp419 = fcmp une float %372, 0.000000e+00, !dbg !7417
  br i1 %cmp419, label %if.then420, label %if.end429, !dbg !7418

if.then420:                                       ; preds = %sw.bb409
  %373 = load float*, float** %col.addr, align 8, !dbg !7419
  %arrayidx421 = getelementptr inbounds float, float* %373, i64 0, !dbg !7419
  %374 = load float, float* %arrayidx421, align 4, !dbg !7419
  %375 = load float*, float** %col.addr, align 8, !dbg !7421
  %arrayidx422 = getelementptr inbounds float, float* %375, i64 1, !dbg !7421
  %376 = load float, float* %arrayidx422, align 4, !dbg !7421
  %377 = load float*, float** %col.addr, align 8, !dbg !7422
  %arrayidx423 = getelementptr inbounds float, float* %377, i64 2, !dbg !7422
  %378 = load float, float* %arrayidx423, align 4, !dbg !7422
  call void @rgb_to_hsv(float %374, float %376, float %378, float* %colH413, float* %colS414, float* %colV415), !dbg !7423
  %379 = load float, float* %rH410, align 4, !dbg !7424
  %380 = load float, float* %facm, align 4, !dbg !7425
  %381 = load float, float* %rS411, align 4, !dbg !7426
  %mul424 = fmul float %380, %381, !dbg !7427
  %382 = load float, float* %fac.addr, align 4, !dbg !7428
  %383 = load float, float* %colS414, align 4, !dbg !7429
  %mul425 = fmul float %382, %383, !dbg !7430
  %add426 = fadd float %mul424, %mul425, !dbg !7431
  %384 = load float, float* %rV412, align 4, !dbg !7432
  %385 = load float*, float** %r_col.addr, align 8, !dbg !7433
  %add.ptr = getelementptr inbounds float, float* %385, i64 0, !dbg !7434
  %386 = load float*, float** %r_col.addr, align 8, !dbg !7435
  %add.ptr427 = getelementptr inbounds float, float* %386, i64 1, !dbg !7436
  %387 = load float*, float** %r_col.addr, align 8, !dbg !7437
  %add.ptr428 = getelementptr inbounds float, float* %387, i64 2, !dbg !7438
  call void @hsv_to_rgb(float %379, float %add426, float %384, float* %add.ptr, float* %add.ptr427, float* %add.ptr428), !dbg !7439
  br label %if.end429, !dbg !7440

if.end429:                                        ; preds = %if.then420, %sw.bb409
  br label %sw.epilog, !dbg !7441

sw.bb430:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %rH431, metadata !7442, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.declare(metadata float* %rS432, metadata !7445, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.declare(metadata float* %rV433, metadata !7447, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.declare(metadata float* %colH434, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.declare(metadata float* %colS435, metadata !7451, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.declare(metadata float* %colV436, metadata !7453, metadata !DIExpression()), !dbg !7454
  %388 = load float*, float** %r_col.addr, align 8, !dbg !7455
  %arrayidx437 = getelementptr inbounds float, float* %388, i64 0, !dbg !7455
  %389 = load float, float* %arrayidx437, align 4, !dbg !7455
  %390 = load float*, float** %r_col.addr, align 8, !dbg !7456
  %arrayidx438 = getelementptr inbounds float, float* %390, i64 1, !dbg !7456
  %391 = load float, float* %arrayidx438, align 4, !dbg !7456
  %392 = load float*, float** %r_col.addr, align 8, !dbg !7457
  %arrayidx439 = getelementptr inbounds float, float* %392, i64 2, !dbg !7457
  %393 = load float, float* %arrayidx439, align 4, !dbg !7457
  call void @rgb_to_hsv(float %389, float %391, float %393, float* %rH431, float* %rS432, float* %rV433), !dbg !7458
  %394 = load float*, float** %col.addr, align 8, !dbg !7459
  %arrayidx440 = getelementptr inbounds float, float* %394, i64 0, !dbg !7459
  %395 = load float, float* %arrayidx440, align 4, !dbg !7459
  %396 = load float*, float** %col.addr, align 8, !dbg !7460
  %arrayidx441 = getelementptr inbounds float, float* %396, i64 1, !dbg !7460
  %397 = load float, float* %arrayidx441, align 4, !dbg !7460
  %398 = load float*, float** %col.addr, align 8, !dbg !7461
  %arrayidx442 = getelementptr inbounds float, float* %398, i64 2, !dbg !7461
  %399 = load float, float* %arrayidx442, align 4, !dbg !7461
  call void @rgb_to_hsv(float %395, float %397, float %399, float* %colH434, float* %colS435, float* %colV436), !dbg !7462
  %400 = load float, float* %rH431, align 4, !dbg !7463
  %401 = load float, float* %rS432, align 4, !dbg !7464
  %402 = load float, float* %facm, align 4, !dbg !7465
  %403 = load float, float* %rV433, align 4, !dbg !7466
  %mul443 = fmul float %402, %403, !dbg !7467
  %404 = load float, float* %fac.addr, align 4, !dbg !7468
  %405 = load float, float* %colV436, align 4, !dbg !7469
  %mul444 = fmul float %404, %405, !dbg !7470
  %add445 = fadd float %mul443, %mul444, !dbg !7471
  %406 = load float*, float** %r_col.addr, align 8, !dbg !7472
  %add.ptr446 = getelementptr inbounds float, float* %406, i64 0, !dbg !7473
  %407 = load float*, float** %r_col.addr, align 8, !dbg !7474
  %add.ptr447 = getelementptr inbounds float, float* %407, i64 1, !dbg !7475
  %408 = load float*, float** %r_col.addr, align 8, !dbg !7476
  %add.ptr448 = getelementptr inbounds float, float* %408, i64 2, !dbg !7477
  call void @hsv_to_rgb(float %400, float %401, float %add445, float* %add.ptr446, float* %add.ptr447, float* %add.ptr448), !dbg !7478
  br label %sw.epilog, !dbg !7479

sw.bb449:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %rH450, metadata !7480, metadata !DIExpression()), !dbg !7482
  call void @llvm.dbg.declare(metadata float* %rS451, metadata !7483, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.declare(metadata float* %rV452, metadata !7485, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.declare(metadata float* %colH453, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.declare(metadata float* %colS454, metadata !7489, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.declare(metadata float* %colV455, metadata !7491, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.declare(metadata float* %tmpr456, metadata !7493, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.declare(metadata float* %tmpg457, metadata !7495, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.declare(metadata float* %tmpb458, metadata !7497, metadata !DIExpression()), !dbg !7498
  %409 = load float*, float** %col.addr, align 8, !dbg !7499
  %arrayidx459 = getelementptr inbounds float, float* %409, i64 0, !dbg !7499
  %410 = load float, float* %arrayidx459, align 4, !dbg !7499
  %411 = load float*, float** %col.addr, align 8, !dbg !7500
  %arrayidx460 = getelementptr inbounds float, float* %411, i64 1, !dbg !7500
  %412 = load float, float* %arrayidx460, align 4, !dbg !7500
  %413 = load float*, float** %col.addr, align 8, !dbg !7501
  %arrayidx461 = getelementptr inbounds float, float* %413, i64 2, !dbg !7501
  %414 = load float, float* %arrayidx461, align 4, !dbg !7501
  call void @rgb_to_hsv(float %410, float %412, float %414, float* %colH453, float* %colS454, float* %colV455), !dbg !7502
  %415 = load float, float* %colS454, align 4, !dbg !7503
  %cmp462 = fcmp une float %415, 0.000000e+00, !dbg !7505
  br i1 %cmp462, label %if.then463, label %if.end482, !dbg !7506

if.then463:                                       ; preds = %sw.bb449
  %416 = load float*, float** %r_col.addr, align 8, !dbg !7507
  %arrayidx464 = getelementptr inbounds float, float* %416, i64 0, !dbg !7507
  %417 = load float, float* %arrayidx464, align 4, !dbg !7507
  %418 = load float*, float** %r_col.addr, align 8, !dbg !7509
  %arrayidx465 = getelementptr inbounds float, float* %418, i64 1, !dbg !7509
  %419 = load float, float* %arrayidx465, align 4, !dbg !7509
  %420 = load float*, float** %r_col.addr, align 8, !dbg !7510
  %arrayidx466 = getelementptr inbounds float, float* %420, i64 2, !dbg !7510
  %421 = load float, float* %arrayidx466, align 4, !dbg !7510
  call void @rgb_to_hsv(float %417, float %419, float %421, float* %rH450, float* %rS451, float* %rV452), !dbg !7511
  %422 = load float, float* %colH453, align 4, !dbg !7512
  %423 = load float, float* %colS454, align 4, !dbg !7513
  %424 = load float, float* %rV452, align 4, !dbg !7514
  call void @hsv_to_rgb(float %422, float %423, float %424, float* %tmpr456, float* %tmpg457, float* %tmpb458), !dbg !7515
  %425 = load float, float* %facm, align 4, !dbg !7516
  %426 = load float*, float** %r_col.addr, align 8, !dbg !7517
  %arrayidx467 = getelementptr inbounds float, float* %426, i64 0, !dbg !7517
  %427 = load float, float* %arrayidx467, align 4, !dbg !7517
  %mul468 = fmul float %425, %427, !dbg !7518
  %428 = load float, float* %fac.addr, align 4, !dbg !7519
  %429 = load float, float* %tmpr456, align 4, !dbg !7520
  %mul469 = fmul float %428, %429, !dbg !7521
  %add470 = fadd float %mul468, %mul469, !dbg !7522
  %430 = load float*, float** %r_col.addr, align 8, !dbg !7523
  %arrayidx471 = getelementptr inbounds float, float* %430, i64 0, !dbg !7523
  store float %add470, float* %arrayidx471, align 4, !dbg !7524
  %431 = load float, float* %facm, align 4, !dbg !7525
  %432 = load float*, float** %r_col.addr, align 8, !dbg !7526
  %arrayidx472 = getelementptr inbounds float, float* %432, i64 1, !dbg !7526
  %433 = load float, float* %arrayidx472, align 4, !dbg !7526
  %mul473 = fmul float %431, %433, !dbg !7527
  %434 = load float, float* %fac.addr, align 4, !dbg !7528
  %435 = load float, float* %tmpg457, align 4, !dbg !7529
  %mul474 = fmul float %434, %435, !dbg !7530
  %add475 = fadd float %mul473, %mul474, !dbg !7531
  %436 = load float*, float** %r_col.addr, align 8, !dbg !7532
  %arrayidx476 = getelementptr inbounds float, float* %436, i64 1, !dbg !7532
  store float %add475, float* %arrayidx476, align 4, !dbg !7533
  %437 = load float, float* %facm, align 4, !dbg !7534
  %438 = load float*, float** %r_col.addr, align 8, !dbg !7535
  %arrayidx477 = getelementptr inbounds float, float* %438, i64 2, !dbg !7535
  %439 = load float, float* %arrayidx477, align 4, !dbg !7535
  %mul478 = fmul float %437, %439, !dbg !7536
  %440 = load float, float* %fac.addr, align 4, !dbg !7537
  %441 = load float, float* %tmpb458, align 4, !dbg !7538
  %mul479 = fmul float %440, %441, !dbg !7539
  %add480 = fadd float %mul478, %mul479, !dbg !7540
  %442 = load float*, float** %r_col.addr, align 8, !dbg !7541
  %arrayidx481 = getelementptr inbounds float, float* %442, i64 2, !dbg !7541
  store float %add480, float* %arrayidx481, align 4, !dbg !7542
  br label %if.end482, !dbg !7543

if.end482:                                        ; preds = %if.then463, %sw.bb449
  br label %sw.epilog, !dbg !7544

sw.bb483:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %scr, metadata !7545, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.declare(metadata float* %scg, metadata !7548, metadata !DIExpression()), !dbg !7549
  call void @llvm.dbg.declare(metadata float* %scb, metadata !7550, metadata !DIExpression()), !dbg !7551
  %443 = load float*, float** %col.addr, align 8, !dbg !7552
  %arrayidx484 = getelementptr inbounds float, float* %443, i64 0, !dbg !7552
  %444 = load float, float* %arrayidx484, align 4, !dbg !7552
  %sub485 = fsub float 1.000000e+00, %444, !dbg !7553
  %445 = load float*, float** %r_col.addr, align 8, !dbg !7554
  %arrayidx486 = getelementptr inbounds float, float* %445, i64 0, !dbg !7554
  %446 = load float, float* %arrayidx486, align 4, !dbg !7554
  %sub487 = fsub float 1.000000e+00, %446, !dbg !7555
  %mul488 = fmul float %sub485, %sub487, !dbg !7556
  %sub489 = fsub float 1.000000e+00, %mul488, !dbg !7557
  store float %sub489, float* %scr, align 4, !dbg !7558
  %447 = load float*, float** %col.addr, align 8, !dbg !7559
  %arrayidx490 = getelementptr inbounds float, float* %447, i64 1, !dbg !7559
  %448 = load float, float* %arrayidx490, align 4, !dbg !7559
  %sub491 = fsub float 1.000000e+00, %448, !dbg !7560
  %449 = load float*, float** %r_col.addr, align 8, !dbg !7561
  %arrayidx492 = getelementptr inbounds float, float* %449, i64 1, !dbg !7561
  %450 = load float, float* %arrayidx492, align 4, !dbg !7561
  %sub493 = fsub float 1.000000e+00, %450, !dbg !7562
  %mul494 = fmul float %sub491, %sub493, !dbg !7563
  %sub495 = fsub float 1.000000e+00, %mul494, !dbg !7564
  store float %sub495, float* %scg, align 4, !dbg !7565
  %451 = load float*, float** %col.addr, align 8, !dbg !7566
  %arrayidx496 = getelementptr inbounds float, float* %451, i64 2, !dbg !7566
  %452 = load float, float* %arrayidx496, align 4, !dbg !7566
  %sub497 = fsub float 1.000000e+00, %452, !dbg !7567
  %453 = load float*, float** %r_col.addr, align 8, !dbg !7568
  %arrayidx498 = getelementptr inbounds float, float* %453, i64 2, !dbg !7568
  %454 = load float, float* %arrayidx498, align 4, !dbg !7568
  %sub499 = fsub float 1.000000e+00, %454, !dbg !7569
  %mul500 = fmul float %sub497, %sub499, !dbg !7570
  %sub501 = fsub float 1.000000e+00, %mul500, !dbg !7571
  store float %sub501, float* %scb, align 4, !dbg !7572
  %455 = load float, float* %facm, align 4, !dbg !7573
  %456 = load float*, float** %r_col.addr, align 8, !dbg !7574
  %arrayidx502 = getelementptr inbounds float, float* %456, i64 0, !dbg !7574
  %457 = load float, float* %arrayidx502, align 4, !dbg !7574
  %mul503 = fmul float %455, %457, !dbg !7575
  %458 = load float, float* %fac.addr, align 4, !dbg !7576
  %459 = load float*, float** %r_col.addr, align 8, !dbg !7577
  %arrayidx504 = getelementptr inbounds float, float* %459, i64 0, !dbg !7577
  %460 = load float, float* %arrayidx504, align 4, !dbg !7577
  %sub505 = fsub float 1.000000e+00, %460, !dbg !7578
  %461 = load float*, float** %col.addr, align 8, !dbg !7579
  %arrayidx506 = getelementptr inbounds float, float* %461, i64 0, !dbg !7579
  %462 = load float, float* %arrayidx506, align 4, !dbg !7579
  %mul507 = fmul float %sub505, %462, !dbg !7580
  %463 = load float*, float** %r_col.addr, align 8, !dbg !7581
  %arrayidx508 = getelementptr inbounds float, float* %463, i64 0, !dbg !7581
  %464 = load float, float* %arrayidx508, align 4, !dbg !7581
  %mul509 = fmul float %mul507, %464, !dbg !7582
  %465 = load float*, float** %r_col.addr, align 8, !dbg !7583
  %arrayidx510 = getelementptr inbounds float, float* %465, i64 0, !dbg !7583
  %466 = load float, float* %arrayidx510, align 4, !dbg !7583
  %467 = load float, float* %scr, align 4, !dbg !7584
  %mul511 = fmul float %466, %467, !dbg !7585
  %add512 = fadd float %mul509, %mul511, !dbg !7586
  %mul513 = fmul float %458, %add512, !dbg !7587
  %add514 = fadd float %mul503, %mul513, !dbg !7588
  %468 = load float*, float** %r_col.addr, align 8, !dbg !7589
  %arrayidx515 = getelementptr inbounds float, float* %468, i64 0, !dbg !7589
  store float %add514, float* %arrayidx515, align 4, !dbg !7590
  %469 = load float, float* %facm, align 4, !dbg !7591
  %470 = load float*, float** %r_col.addr, align 8, !dbg !7592
  %arrayidx516 = getelementptr inbounds float, float* %470, i64 1, !dbg !7592
  %471 = load float, float* %arrayidx516, align 4, !dbg !7592
  %mul517 = fmul float %469, %471, !dbg !7593
  %472 = load float, float* %fac.addr, align 4, !dbg !7594
  %473 = load float*, float** %r_col.addr, align 8, !dbg !7595
  %arrayidx518 = getelementptr inbounds float, float* %473, i64 1, !dbg !7595
  %474 = load float, float* %arrayidx518, align 4, !dbg !7595
  %sub519 = fsub float 1.000000e+00, %474, !dbg !7596
  %475 = load float*, float** %col.addr, align 8, !dbg !7597
  %arrayidx520 = getelementptr inbounds float, float* %475, i64 1, !dbg !7597
  %476 = load float, float* %arrayidx520, align 4, !dbg !7597
  %mul521 = fmul float %sub519, %476, !dbg !7598
  %477 = load float*, float** %r_col.addr, align 8, !dbg !7599
  %arrayidx522 = getelementptr inbounds float, float* %477, i64 1, !dbg !7599
  %478 = load float, float* %arrayidx522, align 4, !dbg !7599
  %mul523 = fmul float %mul521, %478, !dbg !7600
  %479 = load float*, float** %r_col.addr, align 8, !dbg !7601
  %arrayidx524 = getelementptr inbounds float, float* %479, i64 1, !dbg !7601
  %480 = load float, float* %arrayidx524, align 4, !dbg !7601
  %481 = load float, float* %scg, align 4, !dbg !7602
  %mul525 = fmul float %480, %481, !dbg !7603
  %add526 = fadd float %mul523, %mul525, !dbg !7604
  %mul527 = fmul float %472, %add526, !dbg !7605
  %add528 = fadd float %mul517, %mul527, !dbg !7606
  %482 = load float*, float** %r_col.addr, align 8, !dbg !7607
  %arrayidx529 = getelementptr inbounds float, float* %482, i64 1, !dbg !7607
  store float %add528, float* %arrayidx529, align 4, !dbg !7608
  %483 = load float, float* %facm, align 4, !dbg !7609
  %484 = load float*, float** %r_col.addr, align 8, !dbg !7610
  %arrayidx530 = getelementptr inbounds float, float* %484, i64 2, !dbg !7610
  %485 = load float, float* %arrayidx530, align 4, !dbg !7610
  %mul531 = fmul float %483, %485, !dbg !7611
  %486 = load float, float* %fac.addr, align 4, !dbg !7612
  %487 = load float*, float** %r_col.addr, align 8, !dbg !7613
  %arrayidx532 = getelementptr inbounds float, float* %487, i64 2, !dbg !7613
  %488 = load float, float* %arrayidx532, align 4, !dbg !7613
  %sub533 = fsub float 1.000000e+00, %488, !dbg !7614
  %489 = load float*, float** %col.addr, align 8, !dbg !7615
  %arrayidx534 = getelementptr inbounds float, float* %489, i64 2, !dbg !7615
  %490 = load float, float* %arrayidx534, align 4, !dbg !7615
  %mul535 = fmul float %sub533, %490, !dbg !7616
  %491 = load float*, float** %r_col.addr, align 8, !dbg !7617
  %arrayidx536 = getelementptr inbounds float, float* %491, i64 2, !dbg !7617
  %492 = load float, float* %arrayidx536, align 4, !dbg !7617
  %mul537 = fmul float %mul535, %492, !dbg !7618
  %493 = load float*, float** %r_col.addr, align 8, !dbg !7619
  %arrayidx538 = getelementptr inbounds float, float* %493, i64 2, !dbg !7619
  %494 = load float, float* %arrayidx538, align 4, !dbg !7619
  %495 = load float, float* %scb, align 4, !dbg !7620
  %mul539 = fmul float %494, %495, !dbg !7621
  %add540 = fadd float %mul537, %mul539, !dbg !7622
  %mul541 = fmul float %486, %add540, !dbg !7623
  %add542 = fadd float %mul531, %mul541, !dbg !7624
  %496 = load float*, float** %r_col.addr, align 8, !dbg !7625
  %arrayidx543 = getelementptr inbounds float, float* %496, i64 2, !dbg !7625
  store float %add542, float* %arrayidx543, align 4, !dbg !7626
  br label %sw.epilog, !dbg !7627

sw.bb544:                                         ; preds = %entry
  %497 = load float*, float** %col.addr, align 8, !dbg !7628
  %arrayidx545 = getelementptr inbounds float, float* %497, i64 0, !dbg !7628
  %498 = load float, float* %arrayidx545, align 4, !dbg !7628
  %cmp546 = fcmp ogt float %498, 5.000000e-01, !dbg !7630
  br i1 %cmp546, label %if.then547, label %if.else555, !dbg !7631

if.then547:                                       ; preds = %sw.bb544
  %499 = load float*, float** %r_col.addr, align 8, !dbg !7632
  %arrayidx548 = getelementptr inbounds float, float* %499, i64 0, !dbg !7632
  %500 = load float, float* %arrayidx548, align 4, !dbg !7632
  %501 = load float, float* %fac.addr, align 4, !dbg !7633
  %502 = load float*, float** %col.addr, align 8, !dbg !7634
  %arrayidx549 = getelementptr inbounds float, float* %502, i64 0, !dbg !7634
  %503 = load float, float* %arrayidx549, align 4, !dbg !7634
  %sub550 = fsub float %503, 5.000000e-01, !dbg !7635
  %mul551 = fmul float 2.000000e+00, %sub550, !dbg !7636
  %mul552 = fmul float %501, %mul551, !dbg !7637
  %add553 = fadd float %500, %mul552, !dbg !7638
  %504 = load float*, float** %r_col.addr, align 8, !dbg !7639
  %arrayidx554 = getelementptr inbounds float, float* %504, i64 0, !dbg !7639
  store float %add553, float* %arrayidx554, align 4, !dbg !7640
  br label %if.end563, !dbg !7639

if.else555:                                       ; preds = %sw.bb544
  %505 = load float*, float** %r_col.addr, align 8, !dbg !7641
  %arrayidx556 = getelementptr inbounds float, float* %505, i64 0, !dbg !7641
  %506 = load float, float* %arrayidx556, align 4, !dbg !7641
  %507 = load float, float* %fac.addr, align 4, !dbg !7642
  %508 = load float*, float** %col.addr, align 8, !dbg !7643
  %arrayidx557 = getelementptr inbounds float, float* %508, i64 0, !dbg !7643
  %509 = load float, float* %arrayidx557, align 4, !dbg !7643
  %mul558 = fmul float 2.000000e+00, %509, !dbg !7644
  %sub559 = fsub float %mul558, 1.000000e+00, !dbg !7645
  %mul560 = fmul float %507, %sub559, !dbg !7646
  %add561 = fadd float %506, %mul560, !dbg !7647
  %510 = load float*, float** %r_col.addr, align 8, !dbg !7648
  %arrayidx562 = getelementptr inbounds float, float* %510, i64 0, !dbg !7648
  store float %add561, float* %arrayidx562, align 4, !dbg !7649
  br label %if.end563

if.end563:                                        ; preds = %if.else555, %if.then547
  %511 = load float*, float** %col.addr, align 8, !dbg !7650
  %arrayidx564 = getelementptr inbounds float, float* %511, i64 1, !dbg !7650
  %512 = load float, float* %arrayidx564, align 4, !dbg !7650
  %cmp565 = fcmp ogt float %512, 5.000000e-01, !dbg !7652
  br i1 %cmp565, label %if.then566, label %if.else574, !dbg !7653

if.then566:                                       ; preds = %if.end563
  %513 = load float*, float** %r_col.addr, align 8, !dbg !7654
  %arrayidx567 = getelementptr inbounds float, float* %513, i64 1, !dbg !7654
  %514 = load float, float* %arrayidx567, align 4, !dbg !7654
  %515 = load float, float* %fac.addr, align 4, !dbg !7655
  %516 = load float*, float** %col.addr, align 8, !dbg !7656
  %arrayidx568 = getelementptr inbounds float, float* %516, i64 1, !dbg !7656
  %517 = load float, float* %arrayidx568, align 4, !dbg !7656
  %sub569 = fsub float %517, 5.000000e-01, !dbg !7657
  %mul570 = fmul float 2.000000e+00, %sub569, !dbg !7658
  %mul571 = fmul float %515, %mul570, !dbg !7659
  %add572 = fadd float %514, %mul571, !dbg !7660
  %518 = load float*, float** %r_col.addr, align 8, !dbg !7661
  %arrayidx573 = getelementptr inbounds float, float* %518, i64 1, !dbg !7661
  store float %add572, float* %arrayidx573, align 4, !dbg !7662
  br label %if.end582, !dbg !7661

if.else574:                                       ; preds = %if.end563
  %519 = load float*, float** %r_col.addr, align 8, !dbg !7663
  %arrayidx575 = getelementptr inbounds float, float* %519, i64 1, !dbg !7663
  %520 = load float, float* %arrayidx575, align 4, !dbg !7663
  %521 = load float, float* %fac.addr, align 4, !dbg !7664
  %522 = load float*, float** %col.addr, align 8, !dbg !7665
  %arrayidx576 = getelementptr inbounds float, float* %522, i64 1, !dbg !7665
  %523 = load float, float* %arrayidx576, align 4, !dbg !7665
  %mul577 = fmul float 2.000000e+00, %523, !dbg !7666
  %sub578 = fsub float %mul577, 1.000000e+00, !dbg !7667
  %mul579 = fmul float %521, %sub578, !dbg !7668
  %add580 = fadd float %520, %mul579, !dbg !7669
  %524 = load float*, float** %r_col.addr, align 8, !dbg !7670
  %arrayidx581 = getelementptr inbounds float, float* %524, i64 1, !dbg !7670
  store float %add580, float* %arrayidx581, align 4, !dbg !7671
  br label %if.end582

if.end582:                                        ; preds = %if.else574, %if.then566
  %525 = load float*, float** %col.addr, align 8, !dbg !7672
  %arrayidx583 = getelementptr inbounds float, float* %525, i64 2, !dbg !7672
  %526 = load float, float* %arrayidx583, align 4, !dbg !7672
  %cmp584 = fcmp ogt float %526, 5.000000e-01, !dbg !7674
  br i1 %cmp584, label %if.then585, label %if.else593, !dbg !7675

if.then585:                                       ; preds = %if.end582
  %527 = load float*, float** %r_col.addr, align 8, !dbg !7676
  %arrayidx586 = getelementptr inbounds float, float* %527, i64 2, !dbg !7676
  %528 = load float, float* %arrayidx586, align 4, !dbg !7676
  %529 = load float, float* %fac.addr, align 4, !dbg !7677
  %530 = load float*, float** %col.addr, align 8, !dbg !7678
  %arrayidx587 = getelementptr inbounds float, float* %530, i64 2, !dbg !7678
  %531 = load float, float* %arrayidx587, align 4, !dbg !7678
  %sub588 = fsub float %531, 5.000000e-01, !dbg !7679
  %mul589 = fmul float 2.000000e+00, %sub588, !dbg !7680
  %mul590 = fmul float %529, %mul589, !dbg !7681
  %add591 = fadd float %528, %mul590, !dbg !7682
  %532 = load float*, float** %r_col.addr, align 8, !dbg !7683
  %arrayidx592 = getelementptr inbounds float, float* %532, i64 2, !dbg !7683
  store float %add591, float* %arrayidx592, align 4, !dbg !7684
  br label %if.end601, !dbg !7683

if.else593:                                       ; preds = %if.end582
  %533 = load float*, float** %r_col.addr, align 8, !dbg !7685
  %arrayidx594 = getelementptr inbounds float, float* %533, i64 2, !dbg !7685
  %534 = load float, float* %arrayidx594, align 4, !dbg !7685
  %535 = load float, float* %fac.addr, align 4, !dbg !7686
  %536 = load float*, float** %col.addr, align 8, !dbg !7687
  %arrayidx595 = getelementptr inbounds float, float* %536, i64 2, !dbg !7687
  %537 = load float, float* %arrayidx595, align 4, !dbg !7687
  %mul596 = fmul float 2.000000e+00, %537, !dbg !7688
  %sub597 = fsub float %mul596, 1.000000e+00, !dbg !7689
  %mul598 = fmul float %535, %sub597, !dbg !7690
  %add599 = fadd float %534, %mul598, !dbg !7691
  %538 = load float*, float** %r_col.addr, align 8, !dbg !7692
  %arrayidx600 = getelementptr inbounds float, float* %538, i64 2, !dbg !7692
  store float %add599, float* %arrayidx600, align 4, !dbg !7693
  br label %if.end601

if.end601:                                        ; preds = %if.else593, %if.then585
  br label %sw.epilog, !dbg !7694

sw.epilog:                                        ; preds = %entry, %if.end601, %sw.bb483, %if.end482, %sw.bb430, %if.end429, %if.end408, %if.end383, %if.end313, %if.end252, %sw.bb207, %sw.bb182, %if.end181, %sw.bb133, %if.end132, %sw.bb45, %sw.bb29, %sw.bb16, %sw.bb
  ret void, !dbg !7695
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !7696 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7700, metadata !DIExpression()), !dbg !7701
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !7702, metadata !DIExpression()), !dbg !7703
  %0 = load float, float* %a.addr, align 4, !dbg !7704
  %1 = load float, float* %b.addr, align 4, !dbg !7705
  %cmp = fcmp olt float %0, %1, !dbg !7706
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7707

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !7708
  br label %cond.end, !dbg !7707

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !7709
  br label %cond.end, !dbg !7707

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7707
  ret float %cond, !dbg !7710
}

declare dso_local void @rgb_to_hsv(float, float, float, float*, float*, float*) #2

declare dso_local void @hsv_to_rgb(float, float, float, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @clear_matcopybuf() #0 !dbg !7711 {
entry:
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.Material* @matcopybuf to i8*), i8 0, i64 944, i1 false), !dbg !7712
  store i16 0, i16* @matcopied, align 2, !dbg !7713
  ret void, !dbg !7714
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_matcopybuf() #0 !dbg !7715 {
entry:
  %a = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7716, metadata !DIExpression()), !dbg !7717
  store i32 0, i32* %a, align 4, !dbg !7718
  br label %for.cond, !dbg !7720

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !7721
  %cmp = icmp slt i32 %0, 18, !dbg !7723
  br i1 %cmp, label %for.body, label %for.end, !dbg !7724

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %a, align 4, !dbg !7725
  %idxprom = sext i32 %1 to i64, !dbg !7728
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 102), i64 0, i64 %idxprom, !dbg !7728
  %2 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !7728
  %tobool = icmp ne %struct.MTex* %2, null, !dbg !7728
  br i1 %tobool, label %if.then, label %if.end, !dbg !7729

if.then:                                          ; preds = %for.body
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7730
  %4 = load i32, i32* %a, align 4, !dbg !7732
  %idxprom1 = sext i32 %4 to i64, !dbg !7733
  %arrayidx2 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 102), i64 0, i64 %idxprom1, !dbg !7733
  %5 = load %struct.MTex*, %struct.MTex** %arrayidx2, align 8, !dbg !7733
  %6 = bitcast %struct.MTex* %5 to i8*, !dbg !7733
  call void %3(i8* %6), !dbg !7730
  %7 = load i32, i32* %a, align 4, !dbg !7734
  %idxprom3 = sext i32 %7 to i64, !dbg !7735
  %arrayidx4 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 102), i64 0, i64 %idxprom3, !dbg !7735
  store %struct.MTex* null, %struct.MTex** %arrayidx4, align 8, !dbg !7736
  br label %if.end, !dbg !7737

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7738

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %a, align 4, !dbg !7739
  %inc = add nsw i32 %8, 1, !dbg !7739
  store i32 %inc, i32* %a, align 4, !dbg !7739
  br label %for.cond, !dbg !7740, !llvm.loop !7741

for.end:                                          ; preds = %for.cond
  %9 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 92), align 8, !dbg !7743
  %tobool5 = icmp ne %struct.ColorBand* %9, null, !dbg !7745
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7746

if.then6:                                         ; preds = %for.end
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7747
  %11 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 92), align 8, !dbg !7748
  %12 = bitcast %struct.ColorBand* %11 to i8*, !dbg !7749
  call void %10(i8* %12), !dbg !7747
  br label %if.end7, !dbg !7747

if.end7:                                          ; preds = %if.then6, %for.end
  %13 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 93), align 8, !dbg !7750
  %tobool8 = icmp ne %struct.ColorBand* %13, null, !dbg !7752
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7753

if.then9:                                         ; preds = %if.end7
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7754
  %15 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 93), align 8, !dbg !7755
  %16 = bitcast %struct.ColorBand* %15 to i8*, !dbg !7756
  call void %14(i8* %16), !dbg !7754
  br label %if.end10, !dbg !7754

if.end10:                                         ; preds = %if.then9, %if.end7
  store %struct.ColorBand* null, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 92), align 8, !dbg !7757
  store %struct.ColorBand* null, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 93), align 8, !dbg !7758
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 103), align 8, !dbg !7759
  %tobool11 = icmp ne %struct.bNodeTree* %17, null, !dbg !7761
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7762

if.then12:                                        ; preds = %if.end10
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 103), align 8, !dbg !7763
  call void @ntreeFreeTree_ex(%struct.bNodeTree* %18, i8 zeroext 0), !dbg !7765
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7766
  %20 = load %struct.bNodeTree*, %struct.bNodeTree** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 103), align 8, !dbg !7767
  %21 = bitcast %struct.bNodeTree* %20 to i8*, !dbg !7768
  call void %19(i8* %21), !dbg !7766
  store %struct.bNodeTree* null, %struct.bNodeTree** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 103), align 8, !dbg !7769
  br label %if.end13, !dbg !7770

if.end13:                                         ; preds = %if.then12, %if.end10
  store i16 0, i16* @matcopied, align 2, !dbg !7771
  ret void, !dbg !7772
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @copy_matcopybuf(%struct.Material* %ma) #0 !dbg !7773 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %a = alloca i32, align 4
  %mtex = alloca %struct.MTex*, align 8
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7776, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !7778, metadata !DIExpression()), !dbg !7779
  %0 = load i16, i16* @matcopied, align 2, !dbg !7780
  %tobool = icmp ne i16 %0, 0, !dbg !7780
  br i1 %tobool, label %if.then, label %if.end, !dbg !7782

if.then:                                          ; preds = %entry
  call void @free_matcopybuf(), !dbg !7783
  br label %if.end, !dbg !7783

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7784
  %2 = bitcast %struct.Material* %1 to i8*, !dbg !7785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.Material* @matcopybuf to i8*), i8* align 8 %2, i64 944, i1 false), !dbg !7785
  %3 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 92), align 8, !dbg !7786
  %tobool1 = icmp ne %struct.ColorBand* %3, null, !dbg !7788
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7789

if.then2:                                         ; preds = %if.end
  %4 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7790
  %5 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 92), align 8, !dbg !7791
  %6 = bitcast %struct.ColorBand* %5 to i8*, !dbg !7792
  %call = call i8* %4(i8* %6), !dbg !7790
  %7 = bitcast i8* %call to %struct.ColorBand*, !dbg !7790
  store %struct.ColorBand* %7, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 92), align 8, !dbg !7793
  br label %if.end3, !dbg !7794

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 93), align 8, !dbg !7795
  %tobool4 = icmp ne %struct.ColorBand* %8, null, !dbg !7797
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !7798

if.then5:                                         ; preds = %if.end3
  %9 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7799
  %10 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 93), align 8, !dbg !7800
  %11 = bitcast %struct.ColorBand* %10 to i8*, !dbg !7801
  %call6 = call i8* %9(i8* %11), !dbg !7799
  %12 = bitcast i8* %call6 to %struct.ColorBand*, !dbg !7799
  store %struct.ColorBand* %12, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 93), align 8, !dbg !7802
  br label %if.end7, !dbg !7803

if.end7:                                          ; preds = %if.then5, %if.end3
  store i32 0, i32* %a, align 4, !dbg !7804
  br label %for.cond, !dbg !7806

for.cond:                                         ; preds = %for.inc, %if.end7
  %13 = load i32, i32* %a, align 4, !dbg !7807
  %cmp = icmp slt i32 %13, 18, !dbg !7809
  br i1 %cmp, label %for.body, label %for.end, !dbg !7810

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %a, align 4, !dbg !7811
  %idxprom = sext i32 %14 to i64, !dbg !7813
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 102), i64 0, i64 %idxprom, !dbg !7813
  %15 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !7813
  store %struct.MTex* %15, %struct.MTex** %mtex, align 8, !dbg !7814
  %16 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7815
  %tobool8 = icmp ne %struct.MTex* %16, null, !dbg !7815
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !7817

if.then9:                                         ; preds = %for.body
  %17 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7818
  %18 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7820
  %19 = bitcast %struct.MTex* %18 to i8*, !dbg !7820
  %call10 = call i8* %17(i8* %19), !dbg !7818
  %20 = bitcast i8* %call10 to %struct.MTex*, !dbg !7818
  %21 = load i32, i32* %a, align 4, !dbg !7821
  %idxprom11 = sext i32 %21 to i64, !dbg !7822
  %arrayidx12 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 102), i64 0, i64 %idxprom11, !dbg !7822
  store %struct.MTex* %20, %struct.MTex** %arrayidx12, align 8, !dbg !7823
  br label %if.end13, !dbg !7824

if.end13:                                         ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !7825

for.inc:                                          ; preds = %if.end13
  %22 = load i32, i32* %a, align 4, !dbg !7826
  %inc = add nsw i32 %22, 1, !dbg !7826
  store i32 %inc, i32* %a, align 4, !dbg !7826
  br label %for.cond, !dbg !7827, !llvm.loop !7828

for.end:                                          ; preds = %for.cond
  %23 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7830
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 103, !dbg !7831
  %24 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !7831
  %25 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7832
  %call14 = call %struct.bNodeTree* @ntreeCopyTree_ex(%struct.bNodeTree* %24, %struct.Main* %25, i8 zeroext 0), !dbg !7833
  store %struct.bNodeTree* %call14, %struct.bNodeTree** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 103), align 8, !dbg !7834
  store %struct.PreviewImage* null, %struct.PreviewImage** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 106), align 8, !dbg !7835
  call void @BLI_listbase_clear(%struct.ListBase* getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 136)), !dbg !7836
  store i16 1, i16* @matcopied, align 2, !dbg !7837
  ret void, !dbg !7838
}

declare dso_local %struct.bNodeTree* @ntreeCopyTree_ex(%struct.bNodeTree*, %struct.Main*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @paste_matcopybuf(%struct.Material* %ma) #0 !dbg !7839 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %a = alloca i32, align 4
  %mtex = alloca %struct.MTex*, align 8
  %id = alloca %struct.ID, align 8
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !7840, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7842, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !7844, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.declare(metadata %struct.ID* %id, metadata !7846, metadata !DIExpression()), !dbg !7847
  %0 = load i16, i16* @matcopied, align 2, !dbg !7848
  %conv = sext i16 %0 to i32, !dbg !7848
  %cmp = icmp eq i32 %conv, 0, !dbg !7850
  br i1 %cmp, label %if.then, label %if.end, !dbg !7851

if.then:                                          ; preds = %entry
  br label %return, !dbg !7852

if.end:                                           ; preds = %entry
  %1 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7853
  %ramp_col = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 92, !dbg !7855
  %2 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col, align 8, !dbg !7855
  %tobool = icmp ne %struct.ColorBand* %2, null, !dbg !7853
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !7856

if.then2:                                         ; preds = %if.end
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7857
  %4 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7858
  %ramp_col3 = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 92, !dbg !7859
  %5 = load %struct.ColorBand*, %struct.ColorBand** %ramp_col3, align 8, !dbg !7859
  %6 = bitcast %struct.ColorBand* %5 to i8*, !dbg !7858
  call void %3(i8* %6), !dbg !7857
  br label %if.end4, !dbg !7857

if.end4:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7860
  %ramp_spec = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 93, !dbg !7862
  %8 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec, align 8, !dbg !7862
  %tobool5 = icmp ne %struct.ColorBand* %8, null, !dbg !7860
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !7863

if.then6:                                         ; preds = %if.end4
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7864
  %10 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7865
  %ramp_spec7 = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 93, !dbg !7866
  %11 = load %struct.ColorBand*, %struct.ColorBand** %ramp_spec7, align 8, !dbg !7866
  %12 = bitcast %struct.ColorBand* %11 to i8*, !dbg !7865
  call void %9(i8* %12), !dbg !7864
  br label %if.end8, !dbg !7864

if.end8:                                          ; preds = %if.then6, %if.end4
  store i32 0, i32* %a, align 4, !dbg !7867
  br label %for.cond, !dbg !7869

for.cond:                                         ; preds = %for.inc, %if.end8
  %13 = load i32, i32* %a, align 4, !dbg !7870
  %cmp9 = icmp slt i32 %13, 18, !dbg !7872
  br i1 %cmp9, label %for.body, label %for.end, !dbg !7873

for.body:                                         ; preds = %for.cond
  %14 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7874
  %mtex11 = getelementptr inbounds %struct.Material, %struct.Material* %14, i32 0, i32 102, !dbg !7876
  %15 = load i32, i32* %a, align 4, !dbg !7877
  %idxprom = sext i32 %15 to i64, !dbg !7874
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex11, i64 0, i64 %idxprom, !dbg !7874
  %16 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !7874
  store %struct.MTex* %16, %struct.MTex** %mtex, align 8, !dbg !7878
  %17 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7879
  %tobool12 = icmp ne %struct.MTex* %17, null, !dbg !7879
  br i1 %tobool12, label %land.lhs.true, label %if.end17, !dbg !7881

land.lhs.true:                                    ; preds = %for.body
  %18 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7882
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %18, i32 0, i32 5, !dbg !7883
  %19 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7883
  %tobool13 = icmp ne %struct.Tex* %19, null, !dbg !7882
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !7884

if.then14:                                        ; preds = %land.lhs.true
  %20 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7885
  %tex15 = getelementptr inbounds %struct.MTex, %struct.MTex* %20, i32 0, i32 5, !dbg !7886
  %21 = load %struct.Tex*, %struct.Tex** %tex15, align 8, !dbg !7886
  %id16 = getelementptr inbounds %struct.Tex, %struct.Tex* %21, i32 0, i32 0, !dbg !7887
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id16, i32 0, i32 6, !dbg !7888
  %22 = load i32, i32* %us, align 4, !dbg !7889
  %dec = add nsw i32 %22, -1, !dbg !7889
  store i32 %dec, i32* %us, align 4, !dbg !7889
  br label %if.end17, !dbg !7885

if.end17:                                         ; preds = %if.then14, %land.lhs.true, %for.body
  %23 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7890
  %tobool18 = icmp ne %struct.MTex* %23, null, !dbg !7890
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !7892

if.then19:                                        ; preds = %if.end17
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7893
  %25 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7894
  %26 = bitcast %struct.MTex* %25 to i8*, !dbg !7894
  call void %24(i8* %26), !dbg !7893
  br label %if.end20, !dbg !7893

if.end20:                                         ; preds = %if.then19, %if.end17
  br label %for.inc, !dbg !7895

for.inc:                                          ; preds = %if.end20
  %27 = load i32, i32* %a, align 4, !dbg !7896
  %inc = add nsw i32 %27, 1, !dbg !7896
  store i32 %inc, i32* %a, align 4, !dbg !7896
  br label %for.cond, !dbg !7897, !llvm.loop !7898

for.end:                                          ; preds = %for.cond
  %28 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7900
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %28, i32 0, i32 103, !dbg !7902
  %29 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !7902
  %tobool21 = icmp ne %struct.bNodeTree* %29, null, !dbg !7900
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !7903

if.then22:                                        ; preds = %for.end
  %30 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7904
  %nodetree23 = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 103, !dbg !7906
  %31 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree23, align 8, !dbg !7906
  call void @ntreeFreeTree(%struct.bNodeTree* %31), !dbg !7907
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7908
  %33 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7909
  %nodetree24 = getelementptr inbounds %struct.Material, %struct.Material* %33, i32 0, i32 103, !dbg !7910
  %34 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree24, align 8, !dbg !7910
  %35 = bitcast %struct.bNodeTree* %34 to i8*, !dbg !7909
  call void %32(i8* %35), !dbg !7908
  br label %if.end25, !dbg !7911

if.end25:                                         ; preds = %if.then22, %for.end
  %36 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7912
  call void @GPU_material_free(%struct.Material* %36), !dbg !7913
  %37 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7914
  %id26 = getelementptr inbounds %struct.Material, %struct.Material* %37, i32 0, i32 0, !dbg !7915
  %38 = bitcast %struct.ID* %id to i8*, !dbg !7915
  %39 = bitcast %struct.ID* %id26 to i8*, !dbg !7915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 120, i1 false), !dbg !7915
  %40 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7916
  %41 = bitcast %struct.Material* %40 to i8*, !dbg !7917
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 bitcast (%struct.Material* @matcopybuf to i8*), i64 944, i1 false), !dbg !7917
  %42 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7918
  %id27 = getelementptr inbounds %struct.Material, %struct.Material* %42, i32 0, i32 0, !dbg !7919
  %43 = bitcast %struct.ID* %id27 to i8*, !dbg !7920
  %44 = bitcast %struct.ID* %id to i8*, !dbg !7920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 120, i1 false), !dbg !7920
  %45 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 92), align 8, !dbg !7921
  %tobool28 = icmp ne %struct.ColorBand* %45, null, !dbg !7923
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !7924

if.then29:                                        ; preds = %if.end25
  %46 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7925
  %47 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 92), align 8, !dbg !7926
  %48 = bitcast %struct.ColorBand* %47 to i8*, !dbg !7927
  %call = call i8* %46(i8* %48), !dbg !7925
  %49 = bitcast i8* %call to %struct.ColorBand*, !dbg !7925
  %50 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7928
  %ramp_col30 = getelementptr inbounds %struct.Material, %struct.Material* %50, i32 0, i32 92, !dbg !7929
  store %struct.ColorBand* %49, %struct.ColorBand** %ramp_col30, align 8, !dbg !7930
  br label %if.end31, !dbg !7928

if.end31:                                         ; preds = %if.then29, %if.end25
  %51 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 93), align 8, !dbg !7931
  %tobool32 = icmp ne %struct.ColorBand* %51, null, !dbg !7933
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !7934

if.then33:                                        ; preds = %if.end31
  %52 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7935
  %53 = load %struct.ColorBand*, %struct.ColorBand** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 93), align 8, !dbg !7936
  %54 = bitcast %struct.ColorBand* %53 to i8*, !dbg !7937
  %call34 = call i8* %52(i8* %54), !dbg !7935
  %55 = bitcast i8* %call34 to %struct.ColorBand*, !dbg !7935
  %56 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7938
  %ramp_spec35 = getelementptr inbounds %struct.Material, %struct.Material* %56, i32 0, i32 93, !dbg !7939
  store %struct.ColorBand* %55, %struct.ColorBand** %ramp_spec35, align 8, !dbg !7940
  br label %if.end36, !dbg !7938

if.end36:                                         ; preds = %if.then33, %if.end31
  store i32 0, i32* %a, align 4, !dbg !7941
  br label %for.cond37, !dbg !7943

for.cond37:                                       ; preds = %for.inc67, %if.end36
  %57 = load i32, i32* %a, align 4, !dbg !7944
  %cmp38 = icmp slt i32 %57, 18, !dbg !7946
  br i1 %cmp38, label %for.body40, label %for.end69, !dbg !7947

for.body40:                                       ; preds = %for.cond37
  %58 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7948
  %mtex41 = getelementptr inbounds %struct.Material, %struct.Material* %58, i32 0, i32 102, !dbg !7950
  %59 = load i32, i32* %a, align 4, !dbg !7951
  %idxprom42 = sext i32 %59 to i64, !dbg !7948
  %arrayidx43 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex41, i64 0, i64 %idxprom42, !dbg !7948
  %60 = load %struct.MTex*, %struct.MTex** %arrayidx43, align 8, !dbg !7948
  store %struct.MTex* %60, %struct.MTex** %mtex, align 8, !dbg !7952
  %61 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7953
  %tobool44 = icmp ne %struct.MTex* %61, null, !dbg !7953
  br i1 %tobool44, label %if.then45, label %if.end66, !dbg !7955

if.then45:                                        ; preds = %for.body40
  %62 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7956
  %63 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7958
  %64 = bitcast %struct.MTex* %63 to i8*, !dbg !7958
  %call46 = call i8* %62(i8* %64), !dbg !7956
  %65 = bitcast i8* %call46 to %struct.MTex*, !dbg !7956
  %66 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7959
  %mtex47 = getelementptr inbounds %struct.Material, %struct.Material* %66, i32 0, i32 102, !dbg !7960
  %67 = load i32, i32* %a, align 4, !dbg !7961
  %idxprom48 = sext i32 %67 to i64, !dbg !7959
  %arrayidx49 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex47, i64 0, i64 %idxprom48, !dbg !7959
  store %struct.MTex* %65, %struct.MTex** %arrayidx49, align 8, !dbg !7962
  %68 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7963
  %tex50 = getelementptr inbounds %struct.MTex, %struct.MTex* %68, i32 0, i32 5, !dbg !7965
  %69 = load %struct.Tex*, %struct.Tex** %tex50, align 8, !dbg !7965
  %tobool51 = icmp ne %struct.Tex* %69, null, !dbg !7963
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !7966

if.then52:                                        ; preds = %if.then45
  %70 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7967
  %tex53 = getelementptr inbounds %struct.Main, %struct.Main* %70, i32 0, i32 18, !dbg !7970
  %71 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7971
  %tex54 = getelementptr inbounds %struct.MTex, %struct.MTex* %71, i32 0, i32 5, !dbg !7972
  %72 = load %struct.Tex*, %struct.Tex** %tex54, align 8, !dbg !7972
  %73 = bitcast %struct.Tex* %72 to i8*, !dbg !7971
  %call55 = call i32 @BLI_findindex(%struct.ListBase* %tex53, i8* %73), !dbg !7973
  %cmp56 = icmp ne i32 %call55, -1, !dbg !7974
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !7975

if.then58:                                        ; preds = %if.then52
  %74 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !7976
  %tex59 = getelementptr inbounds %struct.MTex, %struct.MTex* %74, i32 0, i32 5, !dbg !7978
  %75 = load %struct.Tex*, %struct.Tex** %tex59, align 8, !dbg !7978
  %76 = bitcast %struct.Tex* %75 to %struct.ID*, !dbg !7979
  call void @id_us_plus(%struct.ID* %76), !dbg !7980
  br label %if.end64, !dbg !7981

if.else:                                          ; preds = %if.then52
  %77 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7982
  %mtex60 = getelementptr inbounds %struct.Material, %struct.Material* %77, i32 0, i32 102, !dbg !7984
  %78 = load i32, i32* %a, align 4, !dbg !7985
  %idxprom61 = sext i32 %78 to i64, !dbg !7982
  %arrayidx62 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex60, i64 0, i64 %idxprom61, !dbg !7982
  %79 = load %struct.MTex*, %struct.MTex** %arrayidx62, align 8, !dbg !7982
  %tex63 = getelementptr inbounds %struct.MTex, %struct.MTex* %79, i32 0, i32 5, !dbg !7986
  store %struct.Tex* null, %struct.Tex** %tex63, align 8, !dbg !7987
  br label %if.end64

if.end64:                                         ; preds = %if.else, %if.then58
  br label %if.end65, !dbg !7988

if.end65:                                         ; preds = %if.end64, %if.then45
  br label %if.end66, !dbg !7989

if.end66:                                         ; preds = %if.end65, %for.body40
  br label %for.inc67, !dbg !7990

for.inc67:                                        ; preds = %if.end66
  %80 = load i32, i32* %a, align 4, !dbg !7991
  %inc68 = add nsw i32 %80, 1, !dbg !7991
  store i32 %inc68, i32* %a, align 4, !dbg !7991
  br label %for.cond37, !dbg !7992, !llvm.loop !7993

for.end69:                                        ; preds = %for.cond37
  %81 = load %struct.bNodeTree*, %struct.bNodeTree** getelementptr inbounds (%struct.Material, %struct.Material* @matcopybuf, i32 0, i32 103), align 8, !dbg !7995
  %82 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7996
  %call70 = call %struct.bNodeTree* @ntreeCopyTree_ex(%struct.bNodeTree* %81, %struct.Main* %82, i8 zeroext 0), !dbg !7997
  %83 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !7998
  %nodetree71 = getelementptr inbounds %struct.Material, %struct.Material* %83, i32 0, i32 103, !dbg !7999
  store %struct.bNodeTree* %call70, %struct.bNodeTree** %nodetree71, align 8, !dbg !8000
  br label %return, !dbg !8001

return:                                           ; preds = %for.end69, %if.then
  ret void, !dbg !8001
}

declare dso_local void @ntreeFreeTree(%struct.bNodeTree*) #2

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @do_version_tface(%struct.Main* %main) #0 !dbg !8002 {
entry:
  %main.addr = alloca %struct.Main*, align 8
  %me = alloca %struct.Mesh*, align 8
  %ma = alloca %struct.Material*, align 8
  %mf = alloca %struct.MFace*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %cdl = alloca %struct.CustomDataLayer*, align 8
  %a = alloca i32, align 4
  %flag = alloca i32, align 4
  %index = alloca i32, align 4
  %fileload = alloca i32, align 4
  %nomaterialslots = alloca i32, align 4
  %nowarning = alloca i32, align 4
  store %struct.Main* %main, %struct.Main** %main.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %main.addr, metadata !8005, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8007, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !8009, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !8011, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !8015, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %cdl, metadata !8017, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8019, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8023, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.declare(metadata i32* %fileload, metadata !8025, metadata !DIExpression()), !dbg !8026
  store i32 1, i32* %fileload, align 4, !dbg !8026
  call void @llvm.dbg.declare(metadata i32* %nomaterialslots, metadata !8027, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.declare(metadata i32* %nowarning, metadata !8029, metadata !DIExpression()), !dbg !8030
  store i32 1, i32* %nowarning, align 4, !dbg !8030
  %0 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8031
  %mesh = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 14, !dbg !8033
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh, i32 0, i32 0, !dbg !8034
  %1 = load i8*, i8** %first, align 8, !dbg !8034
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !8031
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !8035
  br label %for.cond, !dbg !8036

for.cond:                                         ; preds = %for.inc146, %entry
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8037
  %tobool = icmp ne %struct.Mesh* %3, null, !dbg !8039
  br i1 %tobool, label %for.body, label %for.end148, !dbg !8039

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8040
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 0, !dbg !8043
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !8044
  %5 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !8044
  %tobool1 = icmp ne %struct.Library* %5, null, !dbg !8040
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8045

if.then:                                          ; preds = %for.body
  br label %for.inc146, !dbg !8046

if.end:                                           ; preds = %for.body
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8047
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 23, !dbg !8048
  %call = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %fdata, i32 5), !dbg !8049
  store i32 %call, i32* %index, align 4, !dbg !8050
  %7 = load i32, i32* %index, align 4, !dbg !8051
  %cmp = icmp eq i32 %7, -1, !dbg !8052
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8053

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !8053

cond.false:                                       ; preds = %if.end
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8054
  %fdata2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 23, !dbg !8055
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata2, i32 0, i32 0, !dbg !8056
  %9 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !8056
  %10 = load i32, i32* %index, align 4, !dbg !8057
  %idxprom = sext i32 %10 to i64, !dbg !8054
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %9, i64 %idxprom, !dbg !8054
  br label %cond.end, !dbg !8053

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.CustomDataLayer* [ null, %cond.true ], [ %arrayidx, %cond.false ], !dbg !8053
  store %struct.CustomDataLayer* %cond, %struct.CustomDataLayer** %cdl, align 8, !dbg !8058
  %11 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdl, align 8, !dbg !8059
  %tobool3 = icmp ne %struct.CustomDataLayer* %11, null, !dbg !8059
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !8061

if.then4:                                         ; preds = %cond.end
  br label %for.inc146, !dbg !8062

if.end5:                                          ; preds = %cond.end
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8063
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 47, !dbg !8064
  %13 = load i16, i16* %totcol, align 2, !dbg !8064
  %conv = sext i16 %13 to i32, !dbg !8063
  %cmp6 = icmp eq i32 %conv, 0, !dbg !8065
  %14 = zext i1 %cmp6 to i64, !dbg !8063
  %cond8 = select i1 %cmp6, i32 1, i32 0, !dbg !8063
  store i32 %cond8, i32* %nomaterialslots, align 4, !dbg !8066
  store i32 0, i32* %a, align 4, !dbg !8067
  %15 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8069
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 12, !dbg !8070
  %16 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8070
  store %struct.MFace* %16, %struct.MFace** %mf, align 8, !dbg !8071
  br label %for.cond9, !dbg !8072

for.cond9:                                        ; preds = %for.inc, %if.end5
  %17 = load i32, i32* %a, align 4, !dbg !8073
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8075
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 28, !dbg !8076
  %19 = load i32, i32* %totface, align 8, !dbg !8076
  %cmp10 = icmp slt i32 %17, %19, !dbg !8077
  br i1 %cmp10, label %for.body12, label %for.end, !dbg !8078

for.body12:                                       ; preds = %for.cond9
  %20 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdl, align 8, !dbg !8079
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %20, i32 0, i32 9, !dbg !8081
  %21 = load i8*, i8** %data, align 8, !dbg !8081
  %22 = bitcast i8* %21 to %struct.MTFace*, !dbg !8082
  %23 = load i32, i32* %a, align 4, !dbg !8083
  %idx.ext = sext i32 %23 to i64, !dbg !8084
  %add.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %22, i64 %idx.ext, !dbg !8084
  store %struct.MTFace* %add.ptr, %struct.MTFace** %tf, align 8, !dbg !8085
  %24 = load i32, i32* %fileload, align 4, !dbg !8086
  %tobool13 = icmp ne i32 %24, 0, !dbg !8086
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !8088

if.then14:                                        ; preds = %for.body12
  %25 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8089
  %mode = getelementptr inbounds %struct.MTFace, %struct.MTFace* %25, i32 0, i32 4, !dbg !8090
  %26 = load i16, i16* %mode, align 2, !dbg !8091
  %conv15 = sext i16 %26 to i32, !dbg !8091
  %and = and i32 %conv15, -33, !dbg !8091
  %conv16 = trunc i32 %and to i16, !dbg !8091
  store i16 %conv16, i16* %mode, align 2, !dbg !8091
  br label %if.end27, !dbg !8089

if.else:                                          ; preds = %for.body12
  %27 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8092
  %mode17 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %27, i32 0, i32 4, !dbg !8095
  %28 = load i16, i16* %mode17, align 2, !dbg !8095
  %conv18 = sext i16 %28 to i32, !dbg !8092
  %and19 = and i32 %conv18, 32, !dbg !8096
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8096
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !8097

if.then21:                                        ; preds = %if.else
  br label %for.inc, !dbg !8098

if.else22:                                        ; preds = %if.else
  %29 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8099
  %mode23 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %29, i32 0, i32 4, !dbg !8100
  %30 = load i16, i16* %mode23, align 2, !dbg !8101
  %conv24 = sext i16 %30 to i32, !dbg !8101
  %or = or i32 %conv24, 32, !dbg !8101
  %conv25 = trunc i32 %or to i16, !dbg !8101
  store i16 %conv25, i16* %mode23, align 2, !dbg !8101
  br label %if.end26

if.end26:                                         ; preds = %if.else22
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then14
  %31 = load i32, i32* %nomaterialslots, align 4, !dbg !8102
  %tobool28 = icmp ne i32 %31, 0, !dbg !8102
  br i1 %tobool28, label %if.then29, label %if.else38, !dbg !8104

if.then29:                                        ; preds = %if.end27
  %32 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8105
  %call30 = call i32 @encode_tfaceflag(%struct.MTFace* %32, i32 1), !dbg !8107
  store i32 %call30, i32* %flag, align 4, !dbg !8108
  %33 = load i32, i32* %flag, align 4, !dbg !8109
  %call31 = call i32 @check_tfaceneedmaterial(i32 %33), !dbg !8111
  %tobool32 = icmp ne i32 %call31, 0, !dbg !8111
  br i1 %tobool32, label %if.then33, label %if.else35, !dbg !8112

if.then33:                                        ; preds = %if.then29
  %34 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8113
  %35 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8115
  %36 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8116
  %37 = load i32, i32* %flag, align 4, !dbg !8117
  %call34 = call signext i16 @convert_tfacenomaterial(%struct.Main* %34, %struct.Mesh* %35, %struct.MTFace* %36, i32 %37), !dbg !8118
  %38 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8119
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %38, i32 0, i32 4, !dbg !8120
  store i16 %call34, i16* %mat_nr, align 4, !dbg !8121
  br label %if.end37, !dbg !8122

if.else35:                                        ; preds = %if.then29
  %39 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8123
  %mat_nr36 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 4, !dbg !8125
  store i16 -1, i16* %mat_nr36, align 4, !dbg !8126
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then33
  br label %if.end102, !dbg !8127

if.else38:                                        ; preds = %if.end27
  %40 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8128
  %mat_nr39 = getelementptr inbounds %struct.MFace, %struct.MFace* %40, i32 0, i32 4, !dbg !8130
  %41 = load i16, i16* %mat_nr39, align 4, !dbg !8130
  %conv40 = sext i16 %41 to i32, !dbg !8128
  %42 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8131
  %totcol41 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 47, !dbg !8132
  %43 = load i16, i16* %totcol41, align 2, !dbg !8132
  %conv42 = sext i16 %43 to i32, !dbg !8131
  %cmp43 = icmp slt i32 %conv40, %conv42, !dbg !8133
  br i1 %cmp43, label %if.then45, label %if.else100, !dbg !8134

if.then45:                                        ; preds = %if.else38
  %44 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8135
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %44, i32 0, i32 5, !dbg !8137
  %45 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !8137
  %46 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8138
  %mat_nr46 = getelementptr inbounds %struct.MFace, %struct.MFace* %46, i32 0, i32 4, !dbg !8139
  %47 = load i16, i16* %mat_nr46, align 4, !dbg !8139
  %idxprom47 = sext i16 %47 to i64, !dbg !8135
  %arrayidx48 = getelementptr inbounds %struct.Material*, %struct.Material** %45, i64 %idxprom47, !dbg !8135
  %48 = load %struct.Material*, %struct.Material** %arrayidx48, align 8, !dbg !8135
  store %struct.Material* %48, %struct.Material** %ma, align 8, !dbg !8140
  %49 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8141
  %tobool49 = icmp ne %struct.Material* %49, null, !dbg !8141
  br i1 %tobool49, label %if.else58, label %if.then50, !dbg !8143

if.then50:                                        ; preds = %if.then45
  %50 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8144
  %call51 = call i32 @encode_tfaceflag(%struct.MTFace* %50, i32 1), !dbg !8146
  store i32 %call51, i32* %flag, align 4, !dbg !8147
  %51 = load i32, i32* %flag, align 4, !dbg !8148
  %call52 = call i32 @check_tfaceneedmaterial(i32 %51), !dbg !8150
  %tobool53 = icmp ne i32 %call52, 0, !dbg !8150
  br i1 %tobool53, label %if.then54, label %if.end57, !dbg !8151

if.then54:                                        ; preds = %if.then50
  %52 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8152
  %53 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8153
  %54 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8154
  %55 = load i32, i32* %flag, align 4, !dbg !8155
  %call55 = call signext i16 @convert_tfacenomaterial(%struct.Main* %52, %struct.Mesh* %53, %struct.MTFace* %54, i32 %55), !dbg !8156
  %56 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8157
  %mat_nr56 = getelementptr inbounds %struct.MFace, %struct.MFace* %56, i32 0, i32 4, !dbg !8158
  store i16 %call55, i16* %mat_nr56, align 4, !dbg !8159
  br label %if.end57, !dbg !8157

if.end57:                                         ; preds = %if.then54, %if.then50
  br label %for.inc, !dbg !8160

if.else58:                                        ; preds = %if.then45
  %57 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8161
  %id59 = getelementptr inbounds %struct.Material, %struct.Material* %57, i32 0, i32 0, !dbg !8163
  %lib60 = getelementptr inbounds %struct.ID, %struct.ID* %id59, i32 0, i32 3, !dbg !8164
  %58 = load %struct.Library*, %struct.Library** %lib60, align 8, !dbg !8164
  %tobool61 = icmp ne %struct.Library* %58, null, !dbg !8161
  br i1 %tobool61, label %if.then62, label %if.else63, !dbg !8165

if.then62:                                        ; preds = %if.else58
  br label %for.inc, !dbg !8166

if.else63:                                        ; preds = %if.else58
  %59 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8167
  %game = getelementptr inbounds %struct.Material, %struct.Material* %59, i32 0, i32 28, !dbg !8169
  %flag64 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game, i32 0, i32 0, !dbg !8170
  %60 = load i32, i32* %flag64, align 8, !dbg !8170
  %cmp65 = icmp eq i32 %60, -99999, !dbg !8171
  br i1 %cmp65, label %if.then67, label %if.else68, !dbg !8172

if.then67:                                        ; preds = %if.else63
  br label %for.inc, !dbg !8173

if.else68:                                        ; preds = %if.else63
  %61 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8174
  %62 = load i32, i32* %fileload, align 4, !dbg !8176
  %tobool69 = icmp ne i32 %62, 0, !dbg !8177
  %63 = zext i1 %tobool69 to i64, !dbg !8177
  %cond70 = select i1 %tobool69, i32 0, i32 1, !dbg !8177
  %call71 = call i32 @encode_tfaceflag(%struct.MTFace* %61, i32 %cond70), !dbg !8178
  store i32 %call71, i32* %flag, align 4, !dbg !8179
  %64 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8180
  %game72 = getelementptr inbounds %struct.Material, %struct.Material* %64, i32 0, i32 28, !dbg !8182
  %flag73 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game72, i32 0, i32 0, !dbg !8183
  %65 = load i32, i32* %flag73, align 8, !dbg !8183
  %cmp74 = icmp eq i32 %65, 0, !dbg !8184
  br i1 %cmp74, label %if.then76, label %if.else79, !dbg !8185

if.then76:                                        ; preds = %if.else68
  %66 = load i32, i32* %flag, align 4, !dbg !8186
  %sub = sub nsw i32 0, %66, !dbg !8187
  %67 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8188
  %game77 = getelementptr inbounds %struct.Material, %struct.Material* %67, i32 0, i32 28, !dbg !8189
  %flag78 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game77, i32 0, i32 0, !dbg !8190
  store i32 %sub, i32* %flag78, align 8, !dbg !8191
  br label %if.end96, !dbg !8188

if.else79:                                        ; preds = %if.else68
  %68 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8192
  %game80 = getelementptr inbounds %struct.Material, %struct.Material* %68, i32 0, i32 28, !dbg !8194
  %flag81 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game80, i32 0, i32 0, !dbg !8195
  %69 = load i32, i32* %flag81, align 8, !dbg !8195
  %70 = load i32, i32* %flag, align 4, !dbg !8196
  %sub82 = sub nsw i32 0, %70, !dbg !8197
  %cmp83 = icmp ne i32 %69, %sub82, !dbg !8198
  br i1 %cmp83, label %if.then85, label %if.else88, !dbg !8199

if.then85:                                        ; preds = %if.else79
  %71 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8200
  %game86 = getelementptr inbounds %struct.Material, %struct.Material* %71, i32 0, i32 28, !dbg !8202
  %flag87 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game86, i32 0, i32 0, !dbg !8203
  store i32 -99999, i32* %flag87, align 8, !dbg !8204
  br label %for.inc, !dbg !8205

if.else88:                                        ; preds = %if.else79
  %72 = load i32, i32* %flag, align 4, !dbg !8206
  %sub89 = sub nsw i32 0, %72, !dbg !8208
  %73 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8209
  %game90 = getelementptr inbounds %struct.Material, %struct.Material* %73, i32 0, i32 28, !dbg !8210
  %flag91 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game90, i32 0, i32 0, !dbg !8211
  store i32 %sub89, i32* %flag91, align 8, !dbg !8212
  %74 = load i32, i32* %fileload, align 4, !dbg !8213
  %tobool92 = icmp ne i32 %74, 0, !dbg !8213
  br i1 %tobool92, label %if.end94, label %if.then93, !dbg !8215

if.then93:                                        ; preds = %if.else88
  %75 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8216
  %76 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8217
  %tpage = getelementptr inbounds %struct.MTFace, %struct.MTFace* %76, i32 0, i32 1, !dbg !8218
  %77 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !8218
  call void @set_facetexture_flags(%struct.Material* %75, %struct.Image* %77), !dbg !8219
  br label %if.end94, !dbg !8219

if.end94:                                         ; preds = %if.then93, %if.else88
  br label %if.end95

if.end95:                                         ; preds = %if.end94
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then76
  br label %if.end97

if.end97:                                         ; preds = %if.end96
  br label %if.end98

if.end98:                                         ; preds = %if.end97
  br label %if.end99

if.end99:                                         ; preds = %if.end98
  br label %if.end101, !dbg !8220

if.else100:                                       ; preds = %if.else38
  br label %for.inc, !dbg !8221

if.end101:                                        ; preds = %if.end99
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end37
  br label %for.inc, !dbg !8223

for.inc:                                          ; preds = %if.end102, %if.else100, %if.then85, %if.then67, %if.then62, %if.end57, %if.then21
  %78 = load i32, i32* %a, align 4, !dbg !8224
  %inc = add nsw i32 %78, 1, !dbg !8224
  store i32 %inc, i32* %a, align 4, !dbg !8224
  %79 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8225
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %79, i32 1, !dbg !8225
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !8225
  br label %for.cond9, !dbg !8226, !llvm.loop !8227

for.end:                                          ; preds = %for.cond9
  %80 = load i32, i32* %nomaterialslots, align 4, !dbg !8229
  %tobool103 = icmp ne i32 %80, 0, !dbg !8229
  br i1 %tobool103, label %if.then104, label %if.end145, !dbg !8231

if.then104:                                       ; preds = %for.end
  %81 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8232
  %totcol105 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 47, !dbg !8235
  %82 = load i16, i16* %totcol105, align 2, !dbg !8235
  %conv106 = sext i16 %82 to i32, !dbg !8232
  %cmp107 = icmp sgt i32 %conv106, 0, !dbg !8236
  br i1 %cmp107, label %if.then109, label %if.else132, !dbg !8237

if.then109:                                       ; preds = %if.then104
  store i32 0, i32* %a, align 4, !dbg !8238
  %83 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8241
  %mface110 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %83, i32 0, i32 12, !dbg !8242
  %84 = load %struct.MFace*, %struct.MFace** %mface110, align 8, !dbg !8242
  store %struct.MFace* %84, %struct.MFace** %mf, align 8, !dbg !8243
  br label %for.cond111, !dbg !8244

for.cond111:                                      ; preds = %for.inc128, %if.then109
  %85 = load i32, i32* %a, align 4, !dbg !8245
  %86 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8247
  %totface112 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %86, i32 0, i32 28, !dbg !8248
  %87 = load i32, i32* %totface112, align 8, !dbg !8248
  %cmp113 = icmp slt i32 %85, %87, !dbg !8249
  br i1 %cmp113, label %for.body115, label %for.end131, !dbg !8250

for.body115:                                      ; preds = %for.cond111
  %88 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8251
  %mat_nr116 = getelementptr inbounds %struct.MFace, %struct.MFace* %88, i32 0, i32 4, !dbg !8254
  %89 = load i16, i16* %mat_nr116, align 4, !dbg !8254
  %conv117 = sext i16 %89 to i32, !dbg !8251
  %cmp118 = icmp eq i32 %conv117, -1, !dbg !8255
  br i1 %cmp118, label %if.then120, label %if.end127, !dbg !8256

if.then120:                                       ; preds = %for.body115
  %90 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdl, align 8, !dbg !8257
  %data121 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %90, i32 0, i32 9, !dbg !8259
  %91 = load i8*, i8** %data121, align 8, !dbg !8259
  %92 = bitcast i8* %91 to %struct.MTFace*, !dbg !8260
  %93 = load i32, i32* %a, align 4, !dbg !8261
  %idx.ext122 = sext i32 %93 to i64, !dbg !8262
  %add.ptr123 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %92, i64 %idx.ext122, !dbg !8262
  store %struct.MTFace* %add.ptr123, %struct.MTFace** %tf, align 8, !dbg !8263
  %94 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8264
  %95 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8265
  %96 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8266
  %97 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8267
  %call124 = call i32 @encode_tfaceflag(%struct.MTFace* %97, i32 1), !dbg !8268
  %call125 = call signext i16 @convert_tfacenomaterial(%struct.Main* %94, %struct.Mesh* %95, %struct.MTFace* %96, i32 %call124), !dbg !8269
  %98 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8270
  %mat_nr126 = getelementptr inbounds %struct.MFace, %struct.MFace* %98, i32 0, i32 4, !dbg !8271
  store i16 %call125, i16* %mat_nr126, align 4, !dbg !8272
  br label %if.end127, !dbg !8273

if.end127:                                        ; preds = %if.then120, %for.body115
  br label %for.inc128, !dbg !8274

for.inc128:                                       ; preds = %if.end127
  %99 = load i32, i32* %a, align 4, !dbg !8275
  %inc129 = add nsw i32 %99, 1, !dbg !8275
  store i32 %inc129, i32* %a, align 4, !dbg !8275
  %100 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8276
  %incdec.ptr130 = getelementptr inbounds %struct.MFace, %struct.MFace* %100, i32 1, !dbg !8276
  store %struct.MFace* %incdec.ptr130, %struct.MFace** %mf, align 8, !dbg !8276
  br label %for.cond111, !dbg !8277, !llvm.loop !8278

for.end131:                                       ; preds = %for.cond111
  br label %if.end144, !dbg !8280

if.else132:                                       ; preds = %if.then104
  store i32 0, i32* %a, align 4, !dbg !8281
  %101 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8284
  %mface133 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %101, i32 0, i32 12, !dbg !8285
  %102 = load %struct.MFace*, %struct.MFace** %mface133, align 8, !dbg !8285
  store %struct.MFace* %102, %struct.MFace** %mf, align 8, !dbg !8286
  br label %for.cond134, !dbg !8287

for.cond134:                                      ; preds = %for.inc140, %if.else132
  %103 = load i32, i32* %a, align 4, !dbg !8288
  %104 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8290
  %totface135 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %104, i32 0, i32 28, !dbg !8291
  %105 = load i32, i32* %totface135, align 8, !dbg !8291
  %cmp136 = icmp slt i32 %103, %105, !dbg !8292
  br i1 %cmp136, label %for.body138, label %for.end143, !dbg !8293

for.body138:                                      ; preds = %for.cond134
  %106 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8294
  %mat_nr139 = getelementptr inbounds %struct.MFace, %struct.MFace* %106, i32 0, i32 4, !dbg !8296
  store i16 0, i16* %mat_nr139, align 4, !dbg !8297
  br label %for.inc140, !dbg !8298

for.inc140:                                       ; preds = %for.body138
  %107 = load i32, i32* %a, align 4, !dbg !8299
  %inc141 = add nsw i32 %107, 1, !dbg !8299
  store i32 %inc141, i32* %a, align 4, !dbg !8299
  %108 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8300
  %incdec.ptr142 = getelementptr inbounds %struct.MFace, %struct.MFace* %108, i32 1, !dbg !8300
  store %struct.MFace* %incdec.ptr142, %struct.MFace** %mf, align 8, !dbg !8300
  br label %for.cond134, !dbg !8301, !llvm.loop !8302

for.end143:                                       ; preds = %for.cond134
  br label %if.end144

if.end144:                                        ; preds = %for.end143, %for.end131
  br label %if.end145, !dbg !8304

if.end145:                                        ; preds = %if.end144, %for.end
  br label %for.inc146, !dbg !8305

for.inc146:                                       ; preds = %if.end145, %if.then4, %if.then
  %109 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8306
  %id147 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %109, i32 0, i32 0, !dbg !8307
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id147, i32 0, i32 0, !dbg !8308
  %110 = load i8*, i8** %next, align 8, !dbg !8308
  %111 = bitcast i8* %110 to %struct.Mesh*, !dbg !8306
  store %struct.Mesh* %111, %struct.Mesh** %me, align 8, !dbg !8309
  br label %for.cond, !dbg !8310, !llvm.loop !8311

for.end148:                                       ; preds = %for.cond
  %112 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8313
  %mat149 = getelementptr inbounds %struct.Main, %struct.Main* %112, i32 0, i32 17, !dbg !8315
  %first150 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat149, i32 0, i32 0, !dbg !8316
  %113 = load i8*, i8** %first150, align 8, !dbg !8316
  %114 = bitcast i8* %113 to %struct.Material*, !dbg !8313
  store %struct.Material* %114, %struct.Material** %ma, align 8, !dbg !8317
  store i32 0, i32* %a, align 4, !dbg !8318
  br label %for.cond151, !dbg !8319

for.cond151:                                      ; preds = %for.inc264, %for.end148
  %115 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8320
  %tobool152 = icmp ne %struct.Material* %115, null, !dbg !8322
  br i1 %tobool152, label %for.body153, label %for.end268, !dbg !8322

for.body153:                                      ; preds = %for.cond151
  %116 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8323
  %id154 = getelementptr inbounds %struct.Material, %struct.Material* %116, i32 0, i32 0, !dbg !8326
  %lib155 = getelementptr inbounds %struct.ID, %struct.ID* %id154, i32 0, i32 3, !dbg !8327
  %117 = load %struct.Library*, %struct.Library** %lib155, align 8, !dbg !8327
  %tobool156 = icmp ne %struct.Library* %117, null, !dbg !8323
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !8328

if.then157:                                       ; preds = %for.body153
  br label %for.inc264, !dbg !8329

if.end158:                                        ; preds = %for.body153
  %118 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8330
  %game159 = getelementptr inbounds %struct.Material, %struct.Material* %118, i32 0, i32 28, !dbg !8332
  %flag160 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game159, i32 0, i32 0, !dbg !8333
  %119 = load i32, i32* %flag160, align 8, !dbg !8333
  %cmp161 = icmp eq i32 %119, -99999, !dbg !8334
  br i1 %cmp161, label %if.then163, label %if.else173, !dbg !8335

if.then163:                                       ; preds = %if.end158
  %120 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8336
  %game164 = getelementptr inbounds %struct.Material, %struct.Material* %120, i32 0, i32 28, !dbg !8338
  %flag165 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game164, i32 0, i32 0, !dbg !8339
  store i32 0, i32* %flag165, align 8, !dbg !8340
  %121 = load i32, i32* %fileload, align 4, !dbg !8341
  %tobool166 = icmp ne i32 %121, 0, !dbg !8341
  br i1 %tobool166, label %if.then167, label %if.else171, !dbg !8343

if.then167:                                       ; preds = %if.then163
  %122 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8344
  %id168 = getelementptr inbounds %struct.Material, %struct.Material* %122, i32 0, i32 0, !dbg !8346
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id168, i32 0, i32 4, !dbg !8347
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8344
  %add.ptr169 = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !8348
  %call170 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %add.ptr169), !dbg !8349
  store i32 0, i32* %nowarning, align 4, !dbg !8350
  br label %if.end172, !dbg !8351

if.else171:                                       ; preds = %if.then163
  %123 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8352
  %124 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8354
  call void @convert_tfacematerial(%struct.Main* %123, %struct.Material* %124), !dbg !8355
  br label %if.end172

if.end172:                                        ; preds = %if.else171, %if.then167
  br label %for.inc264, !dbg !8356

if.else173:                                       ; preds = %if.end158
  %125 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8357
  %game174 = getelementptr inbounds %struct.Material, %struct.Material* %125, i32 0, i32 28, !dbg !8359
  %flag175 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game174, i32 0, i32 0, !dbg !8360
  %126 = load i32, i32* %flag175, align 8, !dbg !8360
  %cmp176 = icmp slt i32 %126, 0, !dbg !8361
  br i1 %cmp176, label %if.then178, label %if.else256, !dbg !8362

if.then178:                                       ; preds = %if.else173
  %127 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8363
  %128 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8365
  %game179 = getelementptr inbounds %struct.Material, %struct.Material* %128, i32 0, i32 28, !dbg !8366
  %flag180 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game179, i32 0, i32 0, !dbg !8367
  %129 = load i32, i32* %flag180, align 8, !dbg !8367
  %sub181 = sub nsw i32 0, %129, !dbg !8368
  call void @decode_tfaceflag(%struct.Material* %127, i32 %sub181, i32 1), !dbg !8369
  %130 = load i32, i32* %fileload, align 4, !dbg !8370
  %tobool182 = icmp ne i32 %130, 0, !dbg !8370
  br i1 %tobool182, label %if.then183, label %if.end255, !dbg !8372

if.then183:                                       ; preds = %if.then178
  %131 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8373
  %mesh184 = getelementptr inbounds %struct.Main, %struct.Main* %131, i32 0, i32 14, !dbg !8376
  %first185 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh184, i32 0, i32 0, !dbg !8377
  %132 = load i8*, i8** %first185, align 8, !dbg !8377
  %133 = bitcast i8* %132 to %struct.Mesh*, !dbg !8373
  store %struct.Mesh* %133, %struct.Mesh** %me, align 8, !dbg !8378
  br label %for.cond186, !dbg !8379

for.cond186:                                      ; preds = %for.inc251, %if.then183
  %134 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8380
  %tobool187 = icmp ne %struct.Mesh* %134, null, !dbg !8382
  br i1 %tobool187, label %for.body188, label %for.end254, !dbg !8382

for.body188:                                      ; preds = %for.cond186
  store i32 0, i32* %a, align 4, !dbg !8383
  br label %for.cond189, !dbg !8386

for.cond189:                                      ; preds = %for.inc202, %for.body188
  %135 = load i32, i32* %a, align 4, !dbg !8387
  %136 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8389
  %totcol190 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %136, i32 0, i32 47, !dbg !8390
  %137 = load i16, i16* %totcol190, align 2, !dbg !8390
  %conv191 = sext i16 %137 to i32, !dbg !8389
  %cmp192 = icmp slt i32 %135, %conv191, !dbg !8391
  br i1 %cmp192, label %for.body194, label %for.end204, !dbg !8392

for.body194:                                      ; preds = %for.cond189
  %138 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8393
  %mat195 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %138, i32 0, i32 5, !dbg !8395
  %139 = load %struct.Material**, %struct.Material*** %mat195, align 8, !dbg !8395
  %140 = load i32, i32* %a, align 4, !dbg !8396
  %idxprom196 = sext i32 %140 to i64, !dbg !8393
  %arrayidx197 = getelementptr inbounds %struct.Material*, %struct.Material** %139, i64 %idxprom196, !dbg !8393
  %141 = load %struct.Material*, %struct.Material** %arrayidx197, align 8, !dbg !8393
  %142 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8397
  %cmp198 = icmp eq %struct.Material* %141, %142, !dbg !8398
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !8399

if.then200:                                       ; preds = %for.body194
  br label %for.end204, !dbg !8400

if.end201:                                        ; preds = %for.body194
  br label %for.inc202, !dbg !8397

for.inc202:                                       ; preds = %if.end201
  %143 = load i32, i32* %a, align 4, !dbg !8401
  %inc203 = add nsw i32 %143, 1, !dbg !8401
  store i32 %inc203, i32* %a, align 4, !dbg !8401
  br label %for.cond189, !dbg !8402, !llvm.loop !8403

for.end204:                                       ; preds = %if.then200, %for.cond189
  %144 = load i32, i32* %a, align 4, !dbg !8405
  %145 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8407
  %totcol205 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %145, i32 0, i32 47, !dbg !8408
  %146 = load i16, i16* %totcol205, align 2, !dbg !8408
  %conv206 = sext i16 %146 to i32, !dbg !8407
  %cmp207 = icmp eq i32 %144, %conv206, !dbg !8409
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !8410

if.then209:                                       ; preds = %for.end204
  br label %for.inc251, !dbg !8411

if.end210:                                        ; preds = %for.end204
  %147 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8412
  %fdata211 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %147, i32 0, i32 23, !dbg !8413
  %call212 = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %fdata211, i32 5), !dbg !8414
  store i32 %call212, i32* %index, align 4, !dbg !8415
  %148 = load i32, i32* %index, align 4, !dbg !8416
  %cmp213 = icmp eq i32 %148, -1, !dbg !8417
  br i1 %cmp213, label %cond.true215, label %cond.false216, !dbg !8418

cond.true215:                                     ; preds = %if.end210
  br label %cond.end221, !dbg !8418

cond.false216:                                    ; preds = %if.end210
  %149 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8419
  %fdata217 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %149, i32 0, i32 23, !dbg !8420
  %layers218 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata217, i32 0, i32 0, !dbg !8421
  %150 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers218, align 8, !dbg !8421
  %151 = load i32, i32* %index, align 4, !dbg !8422
  %idxprom219 = sext i32 %151 to i64, !dbg !8419
  %arrayidx220 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %150, i64 %idxprom219, !dbg !8419
  br label %cond.end221, !dbg !8418

cond.end221:                                      ; preds = %cond.false216, %cond.true215
  %cond222 = phi %struct.CustomDataLayer* [ null, %cond.true215 ], [ %arrayidx220, %cond.false216 ], !dbg !8418
  store %struct.CustomDataLayer* %cond222, %struct.CustomDataLayer** %cdl, align 8, !dbg !8423
  %152 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdl, align 8, !dbg !8424
  %tobool223 = icmp ne %struct.CustomDataLayer* %152, null, !dbg !8424
  br i1 %tobool223, label %if.end225, label %if.then224, !dbg !8426

if.then224:                                       ; preds = %cond.end221
  br label %for.inc251, !dbg !8427

if.end225:                                        ; preds = %cond.end221
  store i32 0, i32* %a, align 4, !dbg !8428
  %153 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8430
  %mface226 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %153, i32 0, i32 12, !dbg !8431
  %154 = load %struct.MFace*, %struct.MFace** %mface226, align 8, !dbg !8431
  store %struct.MFace* %154, %struct.MFace** %mf, align 8, !dbg !8432
  br label %for.cond227, !dbg !8433

for.cond227:                                      ; preds = %for.inc247, %if.end225
  %155 = load i32, i32* %a, align 4, !dbg !8434
  %156 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8436
  %totface228 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %156, i32 0, i32 28, !dbg !8437
  %157 = load i32, i32* %totface228, align 8, !dbg !8437
  %cmp229 = icmp slt i32 %155, %157, !dbg !8438
  br i1 %cmp229, label %for.body231, label %for.end250, !dbg !8439

for.body231:                                      ; preds = %for.cond227
  %158 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8440
  %mat232 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %158, i32 0, i32 5, !dbg !8443
  %159 = load %struct.Material**, %struct.Material*** %mat232, align 8, !dbg !8443
  %160 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8444
  %mat_nr233 = getelementptr inbounds %struct.MFace, %struct.MFace* %160, i32 0, i32 4, !dbg !8445
  %161 = load i16, i16* %mat_nr233, align 4, !dbg !8445
  %idxprom234 = sext i16 %161 to i64, !dbg !8440
  %arrayidx235 = getelementptr inbounds %struct.Material*, %struct.Material** %159, i64 %idxprom234, !dbg !8440
  %162 = load %struct.Material*, %struct.Material** %arrayidx235, align 8, !dbg !8440
  %163 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8446
  %cmp236 = icmp eq %struct.Material* %162, %163, !dbg !8447
  br i1 %cmp236, label %if.then238, label %if.end246, !dbg !8448

if.then238:                                       ; preds = %for.body231
  %164 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdl, align 8, !dbg !8449
  %data239 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %164, i32 0, i32 9, !dbg !8451
  %165 = load i8*, i8** %data239, align 8, !dbg !8451
  %166 = bitcast i8* %165 to %struct.MTFace*, !dbg !8452
  %167 = load i32, i32* %a, align 4, !dbg !8453
  %idx.ext240 = sext i32 %167 to i64, !dbg !8454
  %add.ptr241 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %166, i64 %idx.ext240, !dbg !8454
  store %struct.MTFace* %add.ptr241, %struct.MTFace** %tf, align 8, !dbg !8455
  %168 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8456
  %mode242 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %168, i32 0, i32 4, !dbg !8457
  %169 = load i16, i16* %mode242, align 2, !dbg !8458
  %conv243 = sext i16 %169 to i32, !dbg !8458
  %or244 = or i32 %conv243, 32, !dbg !8458
  %conv245 = trunc i32 %or244 to i16, !dbg !8458
  store i16 %conv245, i16* %mode242, align 2, !dbg !8458
  br label %if.end246, !dbg !8459

if.end246:                                        ; preds = %if.then238, %for.body231
  br label %for.inc247, !dbg !8460

for.inc247:                                       ; preds = %if.end246
  %170 = load i32, i32* %a, align 4, !dbg !8461
  %inc248 = add nsw i32 %170, 1, !dbg !8461
  store i32 %inc248, i32* %a, align 4, !dbg !8461
  %171 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8462
  %incdec.ptr249 = getelementptr inbounds %struct.MFace, %struct.MFace* %171, i32 1, !dbg !8462
  store %struct.MFace* %incdec.ptr249, %struct.MFace** %mf, align 8, !dbg !8462
  br label %for.cond227, !dbg !8463, !llvm.loop !8464

for.end250:                                       ; preds = %for.cond227
  br label %for.inc251, !dbg !8466

for.inc251:                                       ; preds = %for.end250, %if.then224, %if.then209
  %172 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8467
  %id252 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %172, i32 0, i32 0, !dbg !8468
  %next253 = getelementptr inbounds %struct.ID, %struct.ID* %id252, i32 0, i32 0, !dbg !8469
  %173 = load i8*, i8** %next253, align 8, !dbg !8469
  %174 = bitcast i8* %173 to %struct.Mesh*, !dbg !8467
  store %struct.Mesh* %174, %struct.Mesh** %me, align 8, !dbg !8470
  br label %for.cond186, !dbg !8471, !llvm.loop !8472

for.end254:                                       ; preds = %for.cond186
  br label %if.end255, !dbg !8474

if.end255:                                        ; preds = %for.end254, %if.then178
  br label %if.end262, !dbg !8475

if.else256:                                       ; preds = %if.else173
  %175 = load i32, i32* %fileload, align 4, !dbg !8476
  %tobool257 = icmp ne i32 %175, 0, !dbg !8476
  br i1 %tobool257, label %if.then258, label %if.end261, !dbg !8479

if.then258:                                       ; preds = %if.else256
  %176 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8480
  %game259 = getelementptr inbounds %struct.Material, %struct.Material* %176, i32 0, i32 28, !dbg !8482
  %flag260 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game259, i32 0, i32 0, !dbg !8483
  store i32 16, i32* %flag260, align 8, !dbg !8484
  br label %if.end261, !dbg !8485

if.end261:                                        ; preds = %if.then258, %if.else256
  br label %if.end262

if.end262:                                        ; preds = %if.end261, %if.end255
  br label %if.end263

if.end263:                                        ; preds = %if.end262
  br label %for.inc264, !dbg !8486

for.inc264:                                       ; preds = %if.end263, %if.end172, %if.then157
  %177 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8487
  %id265 = getelementptr inbounds %struct.Material, %struct.Material* %177, i32 0, i32 0, !dbg !8488
  %next266 = getelementptr inbounds %struct.ID, %struct.ID* %id265, i32 0, i32 0, !dbg !8489
  %178 = load i8*, i8** %next266, align 8, !dbg !8489
  %179 = bitcast i8* %178 to %struct.Material*, !dbg !8487
  store %struct.Material* %179, %struct.Material** %ma, align 8, !dbg !8490
  %180 = load i32, i32* %a, align 4, !dbg !8491
  %inc267 = add nsw i32 %180, 1, !dbg !8491
  store i32 %inc267, i32* %a, align 4, !dbg !8491
  br label %for.cond151, !dbg !8492, !llvm.loop !8493

for.end268:                                       ; preds = %for.cond151
  %181 = load i32, i32* %nowarning, align 4, !dbg !8495
  ret i32 %181, !dbg !8496
}

declare dso_local i32 @CustomData_get_active_layer_index(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @encode_tfaceflag(%struct.MTFace* %tf, i32 %convertall) #0 !dbg !8497 {
entry:
  %tf.addr = alloca %struct.MTFace*, align 8
  %convertall.addr = alloca i32, align 4
  %flag = alloca i32, align 4
  store %struct.MTFace* %tf, %struct.MTFace** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf.addr, metadata !8500, metadata !DIExpression()), !dbg !8501
  store i32 %convertall, i32* %convertall.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %convertall.addr, metadata !8502, metadata !DIExpression()), !dbg !8503
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !8504, metadata !DIExpression()), !dbg !8505
  %0 = load %struct.MTFace*, %struct.MTFace** %tf.addr, align 8, !dbg !8506
  %mode = getelementptr inbounds %struct.MTFace, %struct.MTFace* %0, i32 0, i32 4, !dbg !8507
  %1 = load i16, i16* %mode, align 2, !dbg !8507
  %conv = sext i16 %1 to i32, !dbg !8506
  store i32 %conv, i32* %flag, align 4, !dbg !8505
  %2 = load i32, i32* %convertall.addr, align 4, !dbg !8508
  %tobool = icmp ne i32 %2, 0, !dbg !8508
  br i1 %tobool, label %if.end, label %if.then, !dbg !8510

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %flag, align 4, !dbg !8511
  %and = and i32 %3, -2049, !dbg !8511
  store i32 %and, i32* %flag, align 4, !dbg !8511
  br label %if.end, !dbg !8513

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %flag, align 4, !dbg !8514
  %and1 = and i32 %4, -5, !dbg !8514
  store i32 %and1, i32* %flag, align 4, !dbg !8514
  %5 = load i32, i32* %flag, align 4, !dbg !8515
  %and2 = and i32 %5, -9, !dbg !8515
  store i32 %and2, i32* %flag, align 4, !dbg !8515
  %6 = load i32, i32* %flag, align 4, !dbg !8516
  %and3 = and i32 %6, -65, !dbg !8516
  store i32 %and3, i32* %flag, align 4, !dbg !8516
  %7 = load i32, i32* %flag, align 4, !dbg !8517
  %and4 = and i32 %7, -33, !dbg !8517
  store i32 %and4, i32* %flag, align 4, !dbg !8517
  %8 = load i32, i32* %flag, align 4, !dbg !8518
  %and5 = and i32 %8, -17, !dbg !8518
  store i32 %and5, i32* %flag, align 4, !dbg !8518
  %9 = load %struct.MTFace*, %struct.MTFace** %tf.addr, align 8, !dbg !8519
  %transp = getelementptr inbounds %struct.MTFace, %struct.MTFace* %9, i32 0, i32 3, !dbg !8520
  %10 = load i8, i8* %transp, align 1, !dbg !8520
  %conv6 = zext i8 %10 to i32, !dbg !8519
  %shl = shl i32 %conv6, 15, !dbg !8521
  %11 = load i32, i32* %flag, align 4, !dbg !8522
  %or = or i32 %11, %shl, !dbg !8522
  store i32 %or, i32* %flag, align 4, !dbg !8522
  %12 = load i32, i32* %flag, align 4, !dbg !8523
  %add = add nsw i32 %12, 1, !dbg !8524
  ret i32 %add, !dbg !8525
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_tfaceneedmaterial(i32 %flag) #0 !dbg !8526 {
entry:
  %retval = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8529, metadata !DIExpression()), !dbg !8530
  %0 = load i32, i32* %flag.addr, align 4, !dbg !8531
  %sub = sub nsw i32 %0, 1, !dbg !8531
  store i32 %sub, i32* %flag.addr, align 4, !dbg !8531
  %1 = load i32, i32* %flag.addr, align 4, !dbg !8532
  %and = and i32 %1, -2049, !dbg !8532
  store i32 %and, i32* %flag.addr, align 4, !dbg !8532
  %2 = load i32, i32* %flag.addr, align 4, !dbg !8533
  %and1 = and i32 %2, -9, !dbg !8533
  store i32 %and1, i32* %flag.addr, align 4, !dbg !8533
  %3 = load i32, i32* %flag.addr, align 4, !dbg !8534
  %and2 = and i32 %3, -65, !dbg !8534
  store i32 %and2, i32* %flag.addr, align 4, !dbg !8534
  %4 = load i32, i32* %flag.addr, align 4, !dbg !8535
  %and3 = and i32 %4, -17, !dbg !8535
  store i32 %and3, i32* %flag.addr, align 4, !dbg !8535
  %5 = load i32, i32* %flag.addr, align 4, !dbg !8536
  %and4 = and i32 %5, -65537, !dbg !8536
  store i32 %and4, i32* %flag.addr, align 4, !dbg !8536
  %6 = load i32, i32* %flag.addr, align 4, !dbg !8537
  %and5 = and i32 %6, -5, !dbg !8537
  store i32 %and5, i32* %flag.addr, align 4, !dbg !8537
  %7 = load i32, i32* %flag.addr, align 4, !dbg !8538
  %cmp = icmp eq i32 %7, 1, !dbg !8540
  br i1 %cmp, label %if.then, label %if.else, !dbg !8541

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8542
  br label %return, !dbg !8542

if.else:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8543
  br label %return, !dbg !8543

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !8544
  ret i32 %8, !dbg !8544
}

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @convert_tfacenomaterial(%struct.Main* %main, %struct.Mesh* %me, %struct.MTFace* %tf, i32 %flag) #0 !dbg !8545 {
entry:
  %main.addr = alloca %struct.Main*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %tf.addr = alloca %struct.MTFace*, align 8
  %flag.addr = alloca i32, align 4
  %ma = alloca %struct.Material*, align 8
  %idname = alloca [66 x i8], align 16
  %mat_nr = alloca i16, align 2
  store %struct.Main* %main, %struct.Main** %main.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %main.addr, metadata !8548, metadata !DIExpression()), !dbg !8549
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  store %struct.MTFace* %tf, %struct.MTFace** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf.addr, metadata !8552, metadata !DIExpression()), !dbg !8553
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8554, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !8556, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.declare(metadata [66 x i8]* %idname, metadata !8558, metadata !DIExpression()), !dbg !8559
  call void @llvm.dbg.declare(metadata i16* %mat_nr, metadata !8560, metadata !DIExpression()), !dbg !8561
  store i16 -1, i16* %mat_nr, align 2, !dbg !8561
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %idname, i64 0, i64 0, !dbg !8562
  %0 = load i32, i32* %flag.addr, align 4, !dbg !8563
  %call = call i32 @integer_getdigits(i32 %0), !dbg !8564
  %1 = load i32, i32* %flag.addr, align 4, !dbg !8565
  %call1 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 66, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i32 %call, i32 %1), !dbg !8566
  %2 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8567
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %2, i32 0, i32 17, !dbg !8569
  %arraydecay2 = getelementptr inbounds [66 x i8], [66 x i8]* %idname, i64 0, i64 0, !dbg !8570
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 2, !dbg !8571
  %call3 = call i8* @BLI_findstring(%struct.ListBase* %mat, i8* %add.ptr, i32 34), !dbg !8572
  %3 = bitcast i8* %call3 to %struct.Material*, !dbg !8572
  store %struct.Material* %3, %struct.Material** %ma, align 8, !dbg !8573
  %tobool = icmp ne %struct.Material* %3, null, !dbg !8573
  br i1 %tobool, label %if.then, label %if.else, !dbg !8574

if.then:                                          ; preds = %entry
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8575
  %5 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8577
  %call4 = call signext i16 @mesh_getmaterialnumber(%struct.Mesh* %4, %struct.Material* %5), !dbg !8578
  store i16 %call4, i16* %mat_nr, align 2, !dbg !8579
  %6 = load i16, i16* %mat_nr, align 2, !dbg !8580
  %conv = sext i16 %6 to i32, !dbg !8580
  %cmp = icmp eq i32 %conv, -1, !dbg !8582
  br i1 %cmp, label %if.then6, label %if.end, !dbg !8583

if.then6:                                         ; preds = %if.then
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8584
  %8 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8585
  %call7 = call signext i16 @mesh_addmaterial(%struct.Mesh* %7, %struct.Material* %8), !dbg !8586
  store i16 %call7, i16* %mat_nr, align 2, !dbg !8587
  br label %if.end, !dbg !8588

if.end:                                           ; preds = %if.then6, %if.then
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8589
  %10 = load %struct.MTFace*, %struct.MTFace** %tf.addr, align 8, !dbg !8590
  %tpage = getelementptr inbounds %struct.MTFace, %struct.MTFace* %10, i32 0, i32 1, !dbg !8591
  %11 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !8591
  call void @set_facetexture_flags(%struct.Material* %9, %struct.Image* %11), !dbg !8592
  br label %if.end26, !dbg !8593

if.else:                                          ; preds = %entry
  %12 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8594
  %arraydecay8 = getelementptr inbounds [66 x i8], [66 x i8]* %idname, i64 0, i64 0, !dbg !8596
  %add.ptr9 = getelementptr inbounds i8, i8* %arraydecay8, i64 2, !dbg !8597
  %call10 = call %struct.Material* @BKE_material_add(%struct.Main* %12, i8* %add.ptr9), !dbg !8598
  store %struct.Material* %call10, %struct.Material** %ma, align 8, !dbg !8599
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8600
  %tobool11 = icmp ne %struct.Material* %13, null, !dbg !8600
  br i1 %tobool11, label %if.then12, label %if.else19, !dbg !8602

if.then12:                                        ; preds = %if.else
  %arraydecay13 = getelementptr inbounds [66 x i8], [66 x i8]* %idname, i64 0, i64 0, !dbg !8603
  %add.ptr14 = getelementptr inbounds i8, i8* %arraydecay13, i64 2, !dbg !8605
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i8* %add.ptr14), !dbg !8606
  %14 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8607
  %15 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8608
  %call16 = call signext i16 @mesh_addmaterial(%struct.Mesh* %14, %struct.Material* %15), !dbg !8609
  store i16 %call16, i16* %mat_nr, align 2, !dbg !8610
  %16 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8611
  %17 = load %struct.MTFace*, %struct.MTFace** %tf.addr, align 8, !dbg !8612
  %tpage17 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %17, i32 0, i32 1, !dbg !8613
  %18 = load %struct.Image*, %struct.Image** %tpage17, align 8, !dbg !8613
  call void @set_facetexture_flags(%struct.Material* %16, %struct.Image* %18), !dbg !8614
  %19 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8615
  %20 = load i32, i32* %flag.addr, align 4, !dbg !8616
  call void @decode_tfaceflag(%struct.Material* %19, i32 %20, i32 1), !dbg !8617
  %21 = load i32, i32* %flag.addr, align 4, !dbg !8618
  %sub = sub nsw i32 0, %21, !dbg !8619
  %22 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8620
  %game = getelementptr inbounds %struct.Material, %struct.Material* %22, i32 0, i32 28, !dbg !8621
  %flag18 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %game, i32 0, i32 0, !dbg !8622
  store i32 %sub, i32* %flag18, align 8, !dbg !8623
  %23 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8624
  %24 = bitcast %struct.Material* %23 to %struct.ID*, !dbg !8625
  call void @id_us_min(%struct.ID* %24), !dbg !8626
  br label %if.end25, !dbg !8627

if.else19:                                        ; preds = %if.else
  %arraydecay20 = getelementptr inbounds [66 x i8], [66 x i8]* %idname, i64 0, i64 0, !dbg !8628
  %add.ptr21 = getelementptr inbounds i8, i8* %arraydecay20, i64 2, !dbg !8630
  %25 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8631
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 0, !dbg !8632
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8633
  %arraydecay22 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8631
  %add.ptr23 = getelementptr inbounds i8, i8* %arraydecay22, i64 2, !dbg !8634
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.12, i64 0, i64 0), i8* %add.ptr21, i8* %add.ptr23), !dbg !8635
  br label %if.end25

if.end25:                                         ; preds = %if.else19, %if.then12
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end
  %26 = load %struct.MTFace*, %struct.MTFace** %tf.addr, align 8, !dbg !8636
  %mode = getelementptr inbounds %struct.MTFace, %struct.MTFace* %26, i32 0, i32 4, !dbg !8637
  %27 = load i16, i16* %mode, align 2, !dbg !8638
  %conv27 = sext i16 %27 to i32, !dbg !8638
  %or = or i32 %conv27, 32, !dbg !8638
  %conv28 = trunc i32 %or to i16, !dbg !8638
  store i16 %conv28, i16* %mode, align 2, !dbg !8638
  %28 = load i16, i16* %mat_nr, align 2, !dbg !8639
  ret i16 %28, !dbg !8640
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_facetexture_flags(%struct.Material* %ma, %struct.Image* %image) #0 !dbg !8641 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %image.addr = alloca %struct.Image*, align 8
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !8644, metadata !DIExpression()), !dbg !8645
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !8646, metadata !DIExpression()), !dbg !8647
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !8648
  %tobool = icmp ne %struct.Image* %0, null, !dbg !8648
  br i1 %tobool, label %if.then, label %if.end5, !dbg !8650

if.then:                                          ; preds = %entry
  %1 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !8651
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 51, !dbg !8653
  %2 = load i32, i32* %mode, align 4, !dbg !8654
  %or = or i32 %2, 2048, !dbg !8654
  store i32 %or, i32* %mode, align 4, !dbg !8654
  %3 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !8655
  %call = call zeroext i8 @BKE_image_has_alpha(%struct.Image* %3), !dbg !8657
  %tobool1 = icmp ne i8 %call, 0, !dbg !8657
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8658

if.then2:                                         ; preds = %if.then
  %4 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !8659
  %mode3 = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 51, !dbg !8660
  %5 = load i32, i32* %mode3, align 4, !dbg !8661
  %or4 = or i32 %5, 536870912, !dbg !8661
  store i32 %or4, i32* %mode3, align 4, !dbg !8661
  br label %if.end, !dbg !8659

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end5, !dbg !8662

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !8663
}

; Function Attrs: noinline nounwind uwtable
define internal void @convert_tfacematerial(%struct.Main* %main, %struct.Material* %ma) #0 !dbg !8664 {
entry:
  %main.addr = alloca %struct.Main*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mat_new = alloca %struct.Material*, align 8
  %mf = alloca %struct.MFace*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %flag = alloca i32, align 4
  %index = alloca i32, align 4
  %a = alloca i32, align 4
  %mat_nr = alloca i16, align 2
  %cdl = alloca %struct.CustomDataLayer*, align 8
  %idname = alloca [66 x i8], align 16
  store %struct.Main* %main, %struct.Main** %main.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %main.addr, metadata !8667, metadata !DIExpression()), !dbg !8668
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !8669, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8671, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.declare(metadata %struct.Material** %mat_new, metadata !8673, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !8675, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !8677, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !8679, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8681, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8683, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.declare(metadata i16* %mat_nr, metadata !8685, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %cdl, metadata !8687, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.declare(metadata [66 x i8]* %idname, metadata !8689, metadata !DIExpression()), !dbg !8690
  %0 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8691
  %mesh = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 14, !dbg !8693
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh, i32 0, i32 0, !dbg !8694
  %1 = load i8*, i8** %first, align 8, !dbg !8694
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !8691
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !8695
  br label %for.cond, !dbg !8696

for.cond:                                         ; preds = %for.inc88, %entry
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8697
  %tobool = icmp ne %struct.Mesh* %3, null, !dbg !8699
  br i1 %tobool, label %for.body, label %for.end90, !dbg !8699

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %a, align 4, !dbg !8700
  br label %for.cond1, !dbg !8703

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %a, align 4, !dbg !8704
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8706
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 47, !dbg !8707
  %6 = load i16, i16* %totcol, align 2, !dbg !8707
  %conv = sext i16 %6 to i32, !dbg !8706
  %cmp = icmp slt i32 %4, %conv, !dbg !8708
  br i1 %cmp, label %for.body3, label %for.end, !dbg !8709

for.body3:                                        ; preds = %for.cond1
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8710
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 5, !dbg !8712
  %8 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !8712
  %9 = load i32, i32* %a, align 4, !dbg !8713
  %idxprom = sext i32 %9 to i64, !dbg !8710
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %8, i64 %idxprom, !dbg !8710
  %10 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !8710
  %11 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !8714
  %cmp4 = icmp eq %struct.Material* %10, %11, !dbg !8715
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8716

if.then:                                          ; preds = %for.body3
  br label %for.end, !dbg !8717

if.end:                                           ; preds = %for.body3
  br label %for.inc, !dbg !8714

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %a, align 4, !dbg !8718
  %inc = add nsw i32 %12, 1, !dbg !8718
  store i32 %inc, i32* %a, align 4, !dbg !8718
  br label %for.cond1, !dbg !8719, !llvm.loop !8720

for.end:                                          ; preds = %if.then, %for.cond1
  %13 = load i32, i32* %a, align 4, !dbg !8722
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8724
  %totcol6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 47, !dbg !8725
  %15 = load i16, i16* %totcol6, align 2, !dbg !8725
  %conv7 = sext i16 %15 to i32, !dbg !8724
  %cmp8 = icmp eq i32 %13, %conv7, !dbg !8726
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8727

if.then10:                                        ; preds = %for.end
  br label %for.inc88, !dbg !8728

if.end11:                                         ; preds = %for.end
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8729
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 23, !dbg !8730
  %call = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %fdata, i32 5), !dbg !8731
  store i32 %call, i32* %index, align 4, !dbg !8732
  %17 = load i32, i32* %index, align 4, !dbg !8733
  %cmp12 = icmp eq i32 %17, -1, !dbg !8734
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !8735

cond.true:                                        ; preds = %if.end11
  br label %cond.end, !dbg !8735

cond.false:                                       ; preds = %if.end11
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8736
  %fdata14 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 23, !dbg !8737
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata14, i32 0, i32 0, !dbg !8738
  %19 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !8738
  %20 = load i32, i32* %index, align 4, !dbg !8739
  %idxprom15 = sext i32 %20 to i64, !dbg !8736
  %arrayidx16 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %19, i64 %idxprom15, !dbg !8736
  br label %cond.end, !dbg !8735

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.CustomDataLayer* [ null, %cond.true ], [ %arrayidx16, %cond.false ], !dbg !8735
  store %struct.CustomDataLayer* %cond, %struct.CustomDataLayer** %cdl, align 8, !dbg !8740
  %21 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdl, align 8, !dbg !8741
  %tobool17 = icmp ne %struct.CustomDataLayer* %21, null, !dbg !8741
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !8743

if.then18:                                        ; preds = %cond.end
  br label %for.inc88, !dbg !8744

if.end19:                                         ; preds = %cond.end
  store i32 0, i32* %a, align 4, !dbg !8745
  %22 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8747
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 12, !dbg !8748
  %23 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8748
  store %struct.MFace* %23, %struct.MFace** %mf, align 8, !dbg !8749
  br label %for.cond20, !dbg !8750

for.cond20:                                       ; preds = %for.inc67, %if.end19
  %24 = load i32, i32* %a, align 4, !dbg !8751
  %25 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8753
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %25, i32 0, i32 28, !dbg !8754
  %26 = load i32, i32* %totface, align 8, !dbg !8754
  %cmp21 = icmp slt i32 %24, %26, !dbg !8755
  br i1 %cmp21, label %for.body23, label %for.end69, !dbg !8756

for.body23:                                       ; preds = %for.cond20
  %27 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8757
  %mat24 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 5, !dbg !8760
  %28 = load %struct.Material**, %struct.Material*** %mat24, align 8, !dbg !8760
  %29 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8761
  %mat_nr25 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i32 0, i32 4, !dbg !8762
  %30 = load i16, i16* %mat_nr25, align 4, !dbg !8762
  %idxprom26 = sext i16 %30 to i64, !dbg !8757
  %arrayidx27 = getelementptr inbounds %struct.Material*, %struct.Material** %28, i64 %idxprom26, !dbg !8757
  %31 = load %struct.Material*, %struct.Material** %arrayidx27, align 8, !dbg !8757
  %32 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !8763
  %cmp28 = icmp ne %struct.Material* %31, %32, !dbg !8764
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !8765

if.then30:                                        ; preds = %for.body23
  br label %for.inc67, !dbg !8766

if.end31:                                         ; preds = %for.body23
  %33 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %cdl, align 8, !dbg !8767
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %33, i32 0, i32 9, !dbg !8768
  %34 = load i8*, i8** %data, align 8, !dbg !8768
  %35 = bitcast i8* %34 to %struct.MTFace*, !dbg !8769
  %36 = load i32, i32* %a, align 4, !dbg !8770
  %idx.ext = sext i32 %36 to i64, !dbg !8771
  %add.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %35, i64 %idx.ext, !dbg !8771
  store %struct.MTFace* %add.ptr, %struct.MTFace** %tf, align 8, !dbg !8772
  %37 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8773
  %call32 = call i32 @encode_tfaceflag(%struct.MTFace* %37, i32 1), !dbg !8774
  store i32 %call32, i32* %flag, align 4, !dbg !8775
  %38 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !8776
  %id = getelementptr inbounds %struct.Material, %struct.Material* %38, i32 0, i32 0, !dbg !8777
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8778
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8776
  %39 = bitcast [66 x i8]* %idname to i8*, !dbg !8779
  %40 = load i32, i32* %flag, align 4, !dbg !8780
  call void @calculate_tface_materialname(i8* %arraydecay, i8* %39, i32 %40), !dbg !8781
  %41 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !8782
  %mat33 = getelementptr inbounds %struct.Main, %struct.Main* %41, i32 0, i32 17, !dbg !8784
  %arraydecay34 = getelementptr inbounds [66 x i8], [66 x i8]* %idname, i64 0, i64 0, !dbg !8785
  %add.ptr35 = getelementptr inbounds i8, i8* %arraydecay34, i64 2, !dbg !8786
  %call36 = call i8* @BLI_findstring(%struct.ListBase* %mat33, i8* %add.ptr35, i32 34), !dbg !8787
  %42 = bitcast i8* %call36 to %struct.Material*, !dbg !8787
  store %struct.Material* %42, %struct.Material** %mat_new, align 8, !dbg !8788
  %tobool37 = icmp ne %struct.Material* %42, null, !dbg !8788
  br i1 %tobool37, label %if.then38, label %if.else, !dbg !8789

if.then38:                                        ; preds = %if.end31
  %43 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8790
  %44 = load %struct.Material*, %struct.Material** %mat_new, align 8, !dbg !8792
  %call39 = call signext i16 @mesh_getmaterialnumber(%struct.Mesh* %43, %struct.Material* %44), !dbg !8793
  store i16 %call39, i16* %mat_nr, align 2, !dbg !8794
  %45 = load i16, i16* %mat_nr, align 2, !dbg !8795
  %conv40 = sext i16 %45 to i32, !dbg !8795
  %cmp41 = icmp eq i32 %conv40, -1, !dbg !8797
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !8798

if.then43:                                        ; preds = %if.then38
  %46 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8799
  %47 = load %struct.Material*, %struct.Material** %mat_new, align 8, !dbg !8800
  %call44 = call signext i16 @mesh_addmaterial(%struct.Mesh* %46, %struct.Material* %47), !dbg !8801
  store i16 %call44, i16* %mat_nr, align 2, !dbg !8802
  br label %if.end45, !dbg !8803

if.end45:                                         ; preds = %if.then43, %if.then38
  br label %if.end65, !dbg !8804

if.else:                                          ; preds = %if.end31
  %48 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !8805
  %call46 = call %struct.Material* @BKE_material_copy(%struct.Material* %48), !dbg !8807
  store %struct.Material* %call46, %struct.Material** %mat_new, align 8, !dbg !8808
  %49 = load %struct.Material*, %struct.Material** %mat_new, align 8, !dbg !8809
  %tobool47 = icmp ne %struct.Material* %49, null, !dbg !8809
  br i1 %tobool47, label %if.then48, label %if.else55, !dbg !8811

if.then48:                                        ; preds = %if.else
  %50 = load %struct.Material*, %struct.Material** %mat_new, align 8, !dbg !8812
  %id49 = getelementptr inbounds %struct.Material, %struct.Material* %50, i32 0, i32 0, !dbg !8814
  %name50 = getelementptr inbounds %struct.ID, %struct.ID* %id49, i32 0, i32 4, !dbg !8815
  %arraydecay51 = getelementptr inbounds [66 x i8], [66 x i8]* %name50, i64 0, i64 0, !dbg !8812
  %arraydecay52 = getelementptr inbounds [66 x i8], [66 x i8]* %idname, i64 0, i64 0, !dbg !8816
  %call53 = call i8* @BLI_strncpy(i8* %arraydecay51, i8* %arraydecay52, i64 66), !dbg !8817
  %51 = load %struct.Material*, %struct.Material** %mat_new, align 8, !dbg !8818
  %52 = bitcast %struct.Material* %51 to %struct.ID*, !dbg !8819
  call void @id_us_min(%struct.ID* %52), !dbg !8820
  %53 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8821
  %54 = load %struct.Material*, %struct.Material** %mat_new, align 8, !dbg !8822
  %call54 = call signext i16 @mesh_addmaterial(%struct.Mesh* %53, %struct.Material* %54), !dbg !8823
  store i16 %call54, i16* %mat_nr, align 2, !dbg !8824
  %55 = load %struct.Material*, %struct.Material** %mat_new, align 8, !dbg !8825
  %56 = load i32, i32* %flag, align 4, !dbg !8826
  call void @decode_tfaceflag(%struct.Material* %55, i32 %56, i32 1), !dbg !8827
  br label %if.end64, !dbg !8828

if.else55:                                        ; preds = %if.else
  %arraydecay56 = getelementptr inbounds [66 x i8], [66 x i8]* %idname, i64 0, i64 0, !dbg !8829
  %add.ptr57 = getelementptr inbounds i8, i8* %arraydecay56, i64 2, !dbg !8831
  %57 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8832
  %id58 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %57, i32 0, i32 0, !dbg !8833
  %name59 = getelementptr inbounds %struct.ID, %struct.ID* %id58, i32 0, i32 4, !dbg !8834
  %arraydecay60 = getelementptr inbounds [66 x i8], [66 x i8]* %name59, i64 0, i64 0, !dbg !8832
  %add.ptr61 = getelementptr inbounds i8, i8* %arraydecay60, i64 2, !dbg !8835
  %call62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i8* %add.ptr57, i8* %add.ptr61), !dbg !8836
  %58 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8837
  %mat_nr63 = getelementptr inbounds %struct.MFace, %struct.MFace* %58, i32 0, i32 4, !dbg !8838
  %59 = load i16, i16* %mat_nr63, align 4, !dbg !8838
  store i16 %59, i16* %mat_nr, align 2, !dbg !8839
  br label %for.inc67, !dbg !8840

if.end64:                                         ; preds = %if.then48
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end45
  %60 = load %struct.Material*, %struct.Material** %mat_new, align 8, !dbg !8841
  %61 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !8842
  %tpage = getelementptr inbounds %struct.MTFace, %struct.MTFace* %61, i32 0, i32 1, !dbg !8843
  %62 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !8843
  call void @set_facetexture_flags(%struct.Material* %60, %struct.Image* %62), !dbg !8844
  %63 = load i16, i16* %mat_nr, align 2, !dbg !8845
  %64 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8846
  %mat_nr66 = getelementptr inbounds %struct.MFace, %struct.MFace* %64, i32 0, i32 4, !dbg !8847
  store i16 %63, i16* %mat_nr66, align 4, !dbg !8848
  br label %for.inc67, !dbg !8849

for.inc67:                                        ; preds = %if.end65, %if.else55, %if.then30
  %65 = load i32, i32* %a, align 4, !dbg !8850
  %inc68 = add nsw i32 %65, 1, !dbg !8850
  store i32 %inc68, i32* %a, align 4, !dbg !8850
  %66 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !8851
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %66, i32 1, !dbg !8851
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !8851
  br label %for.cond20, !dbg !8852, !llvm.loop !8853

for.end69:                                        ; preds = %for.cond20
  store i32 0, i32* %a, align 4, !dbg !8855
  br label %for.cond70, !dbg !8857

for.cond70:                                       ; preds = %if.end86, %for.end69
  %67 = load i32, i32* %a, align 4, !dbg !8858
  %68 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8860
  %totcol71 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %68, i32 0, i32 47, !dbg !8861
  %69 = load i16, i16* %totcol71, align 2, !dbg !8861
  %conv72 = sext i16 %69 to i32, !dbg !8860
  %cmp73 = icmp slt i32 %67, %conv72, !dbg !8862
  br i1 %cmp73, label %for.body75, label %for.end87, !dbg !8863

for.body75:                                       ; preds = %for.cond70
  %70 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8864
  %mat76 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %70, i32 0, i32 5, !dbg !8867
  %71 = load %struct.Material**, %struct.Material*** %mat76, align 8, !dbg !8867
  %72 = load i32, i32* %a, align 4, !dbg !8868
  %idxprom77 = sext i32 %72 to i64, !dbg !8864
  %arrayidx78 = getelementptr inbounds %struct.Material*, %struct.Material** %71, i64 %idxprom77, !dbg !8864
  %73 = load %struct.Material*, %struct.Material** %arrayidx78, align 8, !dbg !8864
  %74 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !8869
  %cmp79 = icmp eq %struct.Material* %73, %74, !dbg !8870
  br i1 %cmp79, label %if.then81, label %if.else84, !dbg !8871

if.then81:                                        ; preds = %for.body75
  %75 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8872
  %id82 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %75, i32 0, i32 0, !dbg !8874
  %76 = load i32, i32* %a, align 4, !dbg !8875
  %call83 = call %struct.Material* @BKE_material_pop_id(%struct.ID* %id82, i32 %76, i8 zeroext 1), !dbg !8876
  br label %if.end86, !dbg !8877

if.else84:                                        ; preds = %for.body75
  %77 = load i32, i32* %a, align 4, !dbg !8878
  %inc85 = add nsw i32 %77, 1, !dbg !8878
  store i32 %inc85, i32* %a, align 4, !dbg !8878
  br label %if.end86

if.end86:                                         ; preds = %if.else84, %if.then81
  br label %for.cond70, !dbg !8880, !llvm.loop !8881

for.end87:                                        ; preds = %for.cond70
  br label %for.inc88, !dbg !8883

for.inc88:                                        ; preds = %for.end87, %if.then18, %if.then10
  %78 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8884
  %id89 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %78, i32 0, i32 0, !dbg !8885
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id89, i32 0, i32 0, !dbg !8886
  %79 = load i8*, i8** %next, align 8, !dbg !8886
  %80 = bitcast i8* %79 to %struct.Mesh*, !dbg !8884
  store %struct.Mesh* %80, %struct.Mesh** %me, align 8, !dbg !8887
  br label %for.cond, !dbg !8888, !llvm.loop !8889

for.end90:                                        ; preds = %for.cond
  ret void, !dbg !8891
}

; Function Attrs: noinline nounwind uwtable
define internal void @decode_tfaceflag(%struct.Material* %ma, i32 %flag, i32 %convertall) #0 !dbg !8892 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %flag.addr = alloca i32, align 4
  %convertall.addr = alloca i32, align 4
  %alphablend = alloca i32, align 4
  %game = alloca %struct.GameSettings*, align 8
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !8895, metadata !DIExpression()), !dbg !8896
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8897, metadata !DIExpression()), !dbg !8898
  store i32 %convertall, i32* %convertall.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %convertall.addr, metadata !8899, metadata !DIExpression()), !dbg !8900
  call void @llvm.dbg.declare(metadata i32* %alphablend, metadata !8901, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.declare(metadata %struct.GameSettings** %game, metadata !8903, metadata !DIExpression()), !dbg !8906
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !8907
  %game1 = getelementptr inbounds %struct.Material, %struct.Material* %0, i32 0, i32 28, !dbg !8908
  store %struct.GameSettings* %game1, %struct.GameSettings** %game, align 8, !dbg !8906
  %1 = load i32, i32* %flag.addr, align 4, !dbg !8909
  %sub = sub nsw i32 %1, 1, !dbg !8909
  store i32 %sub, i32* %flag.addr, align 4, !dbg !8909
  %2 = load i32, i32* %flag.addr, align 4, !dbg !8910
  %shr = ashr i32 %2, 15, !dbg !8911
  store i32 %shr, i32* %alphablend, align 4, !dbg !8912
  %3 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !8913
  %flag2 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %3, i32 0, i32 0, !dbg !8914
  store i32 0, i32* %flag2, align 4, !dbg !8915
  %4 = load i32, i32* %flag.addr, align 4, !dbg !8916
  %and = and i32 %4, 1, !dbg !8918
  %cmp = icmp eq i32 %and, 0, !dbg !8919
  br i1 %cmp, label %if.then, label %if.end, !dbg !8920

if.then:                                          ; preds = %entry
  %5 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !8921
  %flag3 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %5, i32 0, i32 0, !dbg !8922
  %6 = load i32, i32* %flag3, align 4, !dbg !8923
  %or = or i32 %6, 128, !dbg !8923
  store i32 %or, i32* %flag3, align 4, !dbg !8923
  br label %if.end, !dbg !8924

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %convertall.addr, align 4, !dbg !8925
  %tobool = icmp ne i32 %7, 0, !dbg !8925
  br i1 %tobool, label %if.then4, label %if.end11, !dbg !8927

if.then4:                                         ; preds = %if.end
  %8 = load i32, i32* %flag.addr, align 4, !dbg !8928
  %and5 = and i32 %8, 2048, !dbg !8931
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8931
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !8932

if.then7:                                         ; preds = %if.then4
  %9 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !8933
  %shade_flag = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 50, !dbg !8934
  %10 = load i16, i16* %shade_flag, align 2, !dbg !8935
  %conv = sext i16 %10 to i32, !dbg !8935
  %or8 = or i32 %conv, 2, !dbg !8935
  %conv9 = trunc i32 %or8 to i16, !dbg !8935
  store i16 %conv9, i16* %shade_flag, align 2, !dbg !8935
  br label %if.end10, !dbg !8933

if.end10:                                         ; preds = %if.then7, %if.then4
  br label %if.end11, !dbg !8936

if.end11:                                         ; preds = %if.end10, %if.end
  %11 = load i32, i32* %flag.addr, align 4, !dbg !8937
  %and12 = and i32 %11, 512, !dbg !8939
  %cmp13 = icmp eq i32 %and12, 0, !dbg !8940
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !8941

if.then15:                                        ; preds = %if.end11
  %12 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !8942
  %flag16 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %12, i32 0, i32 0, !dbg !8943
  %13 = load i32, i32* %flag16, align 4, !dbg !8944
  %or17 = or i32 %13, 16, !dbg !8944
  store i32 %or17, i32* %flag16, align 4, !dbg !8944
  br label %if.end18, !dbg !8945

if.end18:                                         ; preds = %if.then15, %if.end11
  %14 = load i32, i32* %flag.addr, align 4, !dbg !8946
  %and19 = and i32 %14, 1024, !dbg !8948
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8948
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !8949

if.then21:                                        ; preds = %if.end18
  %15 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !8950
  %flag22 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %15, i32 0, i32 0, !dbg !8951
  %16 = load i32, i32* %flag22, align 4, !dbg !8952
  %or23 = or i32 %16, 256, !dbg !8952
  store i32 %or23, i32* %flag22, align 4, !dbg !8952
  br label %if.end24, !dbg !8953

if.end24:                                         ; preds = %if.then21, %if.end18
  %17 = load i32, i32* %flag.addr, align 4, !dbg !8954
  %and25 = and i32 %17, 16384, !dbg !8956
  %tobool26 = icmp ne i32 %and25, 0, !dbg !8956
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !8957

if.then27:                                        ; preds = %if.end24
  %18 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !8958
  %flag28 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %18, i32 0, i32 0, !dbg !8959
  %19 = load i32, i32* %flag28, align 4, !dbg !8960
  %or29 = or i32 %19, 64, !dbg !8960
  store i32 %or29, i32* %flag28, align 4, !dbg !8960
  br label %if.end30, !dbg !8961

if.end30:                                         ; preds = %if.then27, %if.end24
  %20 = load i32, i32* %flag.addr, align 4, !dbg !8962
  %and31 = and i32 %20, 256, !dbg !8964
  %tobool32 = icmp ne i32 %and31, 0, !dbg !8964
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !8965

if.then33:                                        ; preds = %if.end30
  %21 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !8966
  %face_orientation = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %21, i32 0, i32 2, !dbg !8967
  %22 = load i32, i32* %face_orientation, align 4, !dbg !8968
  %or34 = or i32 %22, 512, !dbg !8968
  store i32 %or34, i32* %face_orientation, align 4, !dbg !8968
  br label %if.end48, !dbg !8969

if.else:                                          ; preds = %if.end30
  %23 = load i32, i32* %flag.addr, align 4, !dbg !8970
  %and35 = and i32 %23, 4096, !dbg !8972
  %tobool36 = icmp ne i32 %and35, 0, !dbg !8972
  br i1 %tobool36, label %if.then37, label %if.else40, !dbg !8973

if.then37:                                        ; preds = %if.else
  %24 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !8974
  %face_orientation38 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %24, i32 0, i32 2, !dbg !8975
  %25 = load i32, i32* %face_orientation38, align 4, !dbg !8976
  %or39 = or i32 %25, 1024, !dbg !8976
  store i32 %or39, i32* %face_orientation38, align 4, !dbg !8976
  br label %if.end47, !dbg !8977

if.else40:                                        ; preds = %if.else
  %26 = load i32, i32* %flag.addr, align 4, !dbg !8978
  %and41 = and i32 %26, 8192, !dbg !8980
  %tobool42 = icmp ne i32 %and41, 0, !dbg !8980
  br i1 %tobool42, label %if.then43, label %if.end46, !dbg !8981

if.then43:                                        ; preds = %if.else40
  %27 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !8982
  %face_orientation44 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %27, i32 0, i32 2, !dbg !8983
  %28 = load i32, i32* %face_orientation44, align 4, !dbg !8984
  %or45 = or i32 %28, 2048, !dbg !8984
  store i32 %or45, i32* %face_orientation44, align 4, !dbg !8984
  br label %if.end46, !dbg !8985

if.end46:                                         ; preds = %if.then43, %if.else40
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then37
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then33
  %29 = load i32, i32* %flag.addr, align 4, !dbg !8986
  %and49 = and i32 %29, 2, !dbg !8988
  %tobool50 = icmp ne i32 %and49, 0, !dbg !8988
  br i1 %tobool50, label %land.lhs.true, label %if.else56, !dbg !8989

land.lhs.true:                                    ; preds = %if.end48
  %30 = load i32, i32* %alphablend, align 4, !dbg !8990
  %cmp51 = icmp eq i32 %30, 2, !dbg !8990
  br i1 %cmp51, label %if.then55, label %lor.lhs.false, !dbg !8990

lor.lhs.false:                                    ; preds = %land.lhs.true
  %31 = load i32, i32* %alphablend, align 4, !dbg !8990
  %cmp53 = icmp eq i32 %31, 1, !dbg !8990
  br i1 %cmp53, label %if.then55, label %if.else56, !dbg !8991

if.then55:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %32 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !8992
  %alpha_blend = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %32, i32 0, i32 1, !dbg !8993
  store i32 8, i32* %alpha_blend, align 4, !dbg !8994
  br label %if.end74, !dbg !8995

if.else56:                                        ; preds = %lor.lhs.false, %if.end48
  %33 = load i32, i32* %alphablend, align 4, !dbg !8996
  %and57 = and i32 %33, 2, !dbg !8998
  %tobool58 = icmp ne i32 %and57, 0, !dbg !8998
  br i1 %tobool58, label %if.then59, label %if.else61, !dbg !8999

if.then59:                                        ; preds = %if.else56
  %34 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !9000
  %alpha_blend60 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %34, i32 0, i32 1, !dbg !9001
  store i32 2, i32* %alpha_blend60, align 4, !dbg !9002
  br label %if.end73, !dbg !9003

if.else61:                                        ; preds = %if.else56
  %35 = load i32, i32* %alphablend, align 4, !dbg !9004
  %and62 = and i32 %35, 1, !dbg !9006
  %tobool63 = icmp ne i32 %and62, 0, !dbg !9006
  br i1 %tobool63, label %if.then64, label %if.else66, !dbg !9007

if.then64:                                        ; preds = %if.else61
  %36 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !9008
  %alpha_blend65 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %36, i32 0, i32 1, !dbg !9009
  store i32 1, i32* %alpha_blend65, align 4, !dbg !9010
  br label %if.end72, !dbg !9011

if.else66:                                        ; preds = %if.else61
  %37 = load i32, i32* %alphablend, align 4, !dbg !9012
  %and67 = and i32 %37, 4, !dbg !9014
  %tobool68 = icmp ne i32 %and67, 0, !dbg !9014
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !9015

if.then69:                                        ; preds = %if.else66
  %38 = load %struct.GameSettings*, %struct.GameSettings** %game, align 8, !dbg !9016
  %alpha_blend70 = getelementptr inbounds %struct.GameSettings, %struct.GameSettings* %38, i32 0, i32 1, !dbg !9017
  store i32 4, i32* %alpha_blend70, align 4, !dbg !9018
  br label %if.end71, !dbg !9019

if.end71:                                         ; preds = %if.then69, %if.else66
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then64
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then59
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then55
  ret void, !dbg !9020
}

declare dso_local void @BKE_mesh_material_index_remove(%struct.Mesh*, i16 signext) #2

declare dso_local void @BKE_curve_material_index_remove(%struct.Curve*, i32) #2

declare dso_local void @BKE_mesh_material_index_clear(%struct.Mesh*) #2

declare dso_local void @BKE_curve_material_index_clear(%struct.Curve*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @integer_getdigits(i32 %number) #0 !dbg !9021 {
entry:
  %retval = alloca i32, align 4
  %number.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !9022, metadata !DIExpression()), !dbg !9023
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9024, metadata !DIExpression()), !dbg !9025
  store i32 0, i32* %i, align 4, !dbg !9025
  %0 = load i32, i32* %number.addr, align 4, !dbg !9026
  %cmp = icmp eq i32 %0, 0, !dbg !9028
  br i1 %cmp, label %if.then, label %if.end, !dbg !9029

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9030
  br label %return, !dbg !9030

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !9031

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load i32, i32* %number.addr, align 4, !dbg !9032
  %cmp1 = icmp ne i32 %1, 0, !dbg !9033
  br i1 %cmp1, label %while.body, label %while.end, !dbg !9031

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %number.addr, align 4, !dbg !9034
  %div = sdiv i32 %2, 10, !dbg !9036
  store i32 %div, i32* %number.addr, align 4, !dbg !9037
  %3 = load i32, i32* %i, align 4, !dbg !9038
  %inc = add nsw i32 %3, 1, !dbg !9038
  store i32 %inc, i32* %i, align 4, !dbg !9038
  br label %while.cond, !dbg !9031, !llvm.loop !9039

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %i, align 4, !dbg !9041
  store i32 %4, i32* %retval, align 4, !dbg !9042
  br label %return, !dbg !9042

return:                                           ; preds = %while.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9043
  ret i32 %5, !dbg !9043
}

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @mesh_getmaterialnumber(%struct.Mesh* %me, %struct.Material* %ma) #0 !dbg !9044 {
entry:
  %retval = alloca i16, align 2
  %me.addr = alloca %struct.Mesh*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %a = alloca i16, align 2
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !9047, metadata !DIExpression()), !dbg !9048
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.declare(metadata i16* %a, metadata !9051, metadata !DIExpression()), !dbg !9052
  store i16 0, i16* %a, align 2, !dbg !9053
  br label %for.cond, !dbg !9055

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i16, i16* %a, align 2, !dbg !9056
  %conv = sext i16 %0 to i32, !dbg !9056
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9058
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 47, !dbg !9059
  %2 = load i16, i16* %totcol, align 2, !dbg !9059
  %conv1 = sext i16 %2 to i32, !dbg !9058
  %cmp = icmp slt i32 %conv, %conv1, !dbg !9060
  br i1 %cmp, label %for.body, label %for.end, !dbg !9061

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9062
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 5, !dbg !9065
  %4 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !9065
  %5 = load i16, i16* %a, align 2, !dbg !9066
  %idxprom = sext i16 %5 to i64, !dbg !9062
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %4, i64 %idxprom, !dbg !9062
  %6 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !9062
  %7 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !9067
  %cmp3 = icmp eq %struct.Material* %6, %7, !dbg !9068
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9069

if.then:                                          ; preds = %for.body
  %8 = load i16, i16* %a, align 2, !dbg !9070
  store i16 %8, i16* %retval, align 2, !dbg !9072
  br label %return, !dbg !9072

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9073

for.inc:                                          ; preds = %if.end
  %9 = load i16, i16* %a, align 2, !dbg !9074
  %inc = add i16 %9, 1, !dbg !9074
  store i16 %inc, i16* %a, align 2, !dbg !9074
  br label %for.cond, !dbg !9075, !llvm.loop !9076

for.end:                                          ; preds = %for.cond
  store i16 -1, i16* %retval, align 2, !dbg !9078
  br label %return, !dbg !9078

return:                                           ; preds = %for.end, %if.then
  %10 = load i16, i16* %retval, align 2, !dbg !9079
  ret i16 %10, !dbg !9079
}

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @mesh_addmaterial(%struct.Mesh* %me, %struct.Material* %ma) #0 !dbg !9080 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !9081, metadata !DIExpression()), !dbg !9082
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !9083, metadata !DIExpression()), !dbg !9084
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9085
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 0, !dbg !9086
  call void @BKE_material_append_id(%struct.ID* %id, %struct.Material* null), !dbg !9087
  %1 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !9088
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9089
  %mat = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 5, !dbg !9090
  %3 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !9090
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9091
  %totcol = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 47, !dbg !9092
  %5 = load i16, i16* %totcol, align 2, !dbg !9092
  %conv = sext i16 %5 to i32, !dbg !9091
  %sub = sub nsw i32 %conv, 1, !dbg !9093
  %idxprom = sext i32 %sub to i64, !dbg !9089
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %3, i64 %idxprom, !dbg !9089
  store %struct.Material* %1, %struct.Material** %arrayidx, align 8, !dbg !9094
  %6 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !9095
  %id1 = getelementptr inbounds %struct.Material, %struct.Material* %6, i32 0, i32 0, !dbg !9096
  call void @id_us_plus(%struct.ID* %id1), !dbg !9097
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9098
  %totcol2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 47, !dbg !9099
  %8 = load i16, i16* %totcol2, align 2, !dbg !9099
  %conv3 = sext i16 %8 to i32, !dbg !9098
  %sub4 = sub nsw i32 %conv3, 1, !dbg !9100
  %conv5 = trunc i32 %sub4 to i16, !dbg !9098
  ret i16 %conv5, !dbg !9101
}

declare dso_local zeroext i8 @BKE_image_has_alpha(%struct.Image*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @calculate_tface_materialname(i8* %matname, i8* %newname, i32 %flag) #0 !dbg !9102 {
entry:
  %matname.addr = alloca i8*, align 8
  %newname.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %digits = alloca i32, align 4
  store i8* %matname, i8** %matname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %matname.addr, metadata !9105, metadata !DIExpression()), !dbg !9106
  store i8* %newname, i8** %newname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newname.addr, metadata !9107, metadata !DIExpression()), !dbg !9108
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9109, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %digits, metadata !9111, metadata !DIExpression()), !dbg !9112
  %0 = load i32, i32* %flag.addr, align 4, !dbg !9113
  %call = call i32 @integer_getdigits(i32 %0), !dbg !9114
  store i32 %call, i32* %digits, align 4, !dbg !9112
  %1 = load i8*, i8** %newname.addr, align 8, !dbg !9115
  %2 = load i32, i32* %digits, align 4, !dbg !9116
  %add = add nsw i32 %2, 5, !dbg !9117
  %sub = sub nsw i32 66, %add, !dbg !9118
  %3 = load i8*, i8** %matname.addr, align 8, !dbg !9119
  %4 = load i32, i32* %digits, align 4, !dbg !9120
  %5 = load i32, i32* %flag.addr, align 4, !dbg !9121
  %call1 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %1, i64 66, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i32 %sub, i8* %3, i32 %4, i32 %5), !dbg !9122
  ret void, !dbg !9123
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2673, !2674, !2675}
!llvm.ident = !{!2676}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "defmaterial", scope: !2, file: !3, line: 73, type: !2661, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !141, globals: !2668, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/material.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !19, !33, !39, !62, !68, !73, !117, !134}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "GPUType", file: !6, line: 69, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/gpu/GPU_material.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18}
!9 = !DIEnumerator(name: "GPU_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "GPU_FLOAT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "GPU_VEC2", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "GPU_VEC3", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "GPU_VEC4", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "GPU_MAT3", value: 9, isUnsigned: true)
!15 = !DIEnumerator(name: "GPU_MAT4", value: 16, isUnsigned: true)
!16 = !DIEnumerator(name: "GPU_TEX2D", value: 1002, isUnsigned: true)
!17 = !DIEnumerator(name: "GPU_SHADOW2D", value: 1003, isUnsigned: true)
!18 = !DIEnumerator(name: "GPU_ATTRIB", value: 3001, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 339, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!21 = !{!22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32}
!22 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!25 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!26 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!27 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!28 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!29 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!30 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!31 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 72, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_material.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38}
!36 = !DIEnumerator(name: "BKE_MAT_ASSIGN_USERPREF", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "BKE_MAT_ASSIGN_OBDATA", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "BKE_MAT_ASSIGN_OBJECT", value: 2, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserPref_Flag", file: !40, line: 569, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!42 = !DIEnumerator(name: "USER_AUTOSAVE", value: 1, isUnsigned: true)
!43 = !DIEnumerator(name: "USER_SCENEGLOBAL", value: 16, isUnsigned: true)
!44 = !DIEnumerator(name: "USER_TRACKBALL", value: 32, isUnsigned: true)
!45 = !DIEnumerator(name: "USER_MAT_ON_OB", value: 256, isUnsigned: true)
!46 = !DIEnumerator(name: "USER_TOOLTIPS", value: 2048, isUnsigned: true)
!47 = !DIEnumerator(name: "USER_TWOBUTTONMOUSE", value: 4096, isUnsigned: true)
!48 = !DIEnumerator(name: "USER_NONUMPAD", value: 8192, isUnsigned: true)
!49 = !DIEnumerator(name: "USER_LMOUSESELECT", value: 16384, isUnsigned: true)
!50 = !DIEnumerator(name: "USER_FILECOMPRESS", value: 32768, isUnsigned: true)
!51 = !DIEnumerator(name: "USER_SAVE_PREVIEWS", value: 65536, isUnsigned: true)
!52 = !DIEnumerator(name: "USER_CUSTOM_RANGE", value: 131072, isUnsigned: true)
!53 = !DIEnumerator(name: "USER_ADD_EDITMODE", value: 262144, isUnsigned: true)
!54 = !DIEnumerator(name: "USER_ADD_VIEWALIGNED", value: 524288, isUnsigned: true)
!55 = !DIEnumerator(name: "USER_RELPATHS", value: 1048576, isUnsigned: true)
!56 = !DIEnumerator(name: "USER_RELEASECONFIRM", value: 2097152, isUnsigned: true)
!57 = !DIEnumerator(name: "USER_SCRIPT_AUTOEXEC_DISABLE", value: 4194304, isUnsigned: true)
!58 = !DIEnumerator(name: "USER_FILENOUI", value: 8388608, isUnsigned: true)
!59 = !DIEnumerator(name: "USER_NONEGFRAMES", value: 16777216, isUnsigned: true)
!60 = !DIEnumerator(name: "USER_TXT_TABSTOSPACES_DISABLE", value: 33554432, isUnsigned: true)
!61 = !DIEnumerator(name: "USER_TOOLTIPS_PYTHON", value: 67108864, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Recalc", file: !63, line: 899, baseType: !7, size: 32, elements: !64)
!63 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!64 = !{!65, !66, !67}
!65 = !DIEnumerator(name: "ADT_RECALC_DRIVERS", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "ADT_RECALC_ANIM", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "ADT_RECALC_ALL", value: 3, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ImagePaintMode", file: !69, line: 1717, baseType: !7, size: 32, elements: !70)
!69 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!70 = !{!71, !72}
!71 = !DIEnumerator(name: "IMAGEPAINT_MODE_MATERIAL", value: 0, isUnsigned: true)
!72 = !DIEnumerator(name: "IMAGEPAINT_MODE_IMAGE", value: 1, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !74, line: 76, baseType: !7, size: 32, elements: !75)
!74 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!75 = !{!76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116}
!76 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!80 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!81 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!82 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!83 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!84 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!85 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!86 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!87 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!88 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!89 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!90 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!91 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!92 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!93 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!94 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!95 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!96 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!97 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!98 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!99 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!100 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!101 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!104 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!105 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!106 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!107 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!108 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!109 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!110 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!111 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!112 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!115 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!116 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !118, line: 368, baseType: !7, size: 32, elements: !119)
!118 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!119 = !{!120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!120 = !DIEnumerator(name: "TF_DYNAMIC", value: 1, isUnsigned: true)
!121 = !DIEnumerator(name: "TF_ALPHASORT", value: 2, isUnsigned: true)
!122 = !DIEnumerator(name: "TF_TEX", value: 4, isUnsigned: true)
!123 = !DIEnumerator(name: "TF_SHAREDVERT", value: 8, isUnsigned: true)
!124 = !DIEnumerator(name: "TF_LIGHT", value: 16, isUnsigned: true)
!125 = !DIEnumerator(name: "TF_CONVERTED", value: 32, isUnsigned: true)
!126 = !DIEnumerator(name: "TF_SHAREDCOL", value: 64, isUnsigned: true)
!127 = !DIEnumerator(name: "TF_BILLBOARD", value: 256, isUnsigned: true)
!128 = !DIEnumerator(name: "TF_TWOSIDE", value: 512, isUnsigned: true)
!129 = !DIEnumerator(name: "TF_INVISIBLE", value: 1024, isUnsigned: true)
!130 = !DIEnumerator(name: "TF_OBCOL", value: 2048, isUnsigned: true)
!131 = !DIEnumerator(name: "TF_BILLBOARD2", value: 4096, isUnsigned: true)
!132 = !DIEnumerator(name: "TF_SHADOW", value: 8192, isUnsigned: true)
!133 = !DIEnumerator(name: "TF_BMFONT", value: 16384, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !118, line: 390, baseType: !7, size: 32, elements: !135)
!135 = !{!136, !137, !138, !139, !140}
!136 = !DIEnumerator(name: "TF_SOLID", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "TF_ADD", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "TF_ALPHA", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "TF_CLIP", value: 4, isUnsigned: true)
!140 = !DIEnumerator(name: "TF_SUB", value: 3, isUnsigned: true)
!141 = !{!142, !151, !148, !213, !214, !215, !2509, !2611, !176, !2660, !2662, !2664, !2666, !178}
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !144, line: 130, baseType: !145)
!144 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !144, line: 117, size: 960, elements: !146)
!146 = !{!147, !149, !150, !152, !171, !175, !177, !179, !180, !181}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !145, file: !144, line: 118, baseType: !148, size: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !145, file: !144, line: 118, baseType: !148, size: 64, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !145, file: !144, line: 119, baseType: !151, size: 64, offset: 128)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !145, file: !144, line: 120, baseType: !153, size: 64, offset: 192)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !144, line: 136, size: 17600, elements: !155)
!155 = !{!156, !157, !158, !161, !166, !167, !168}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !154, file: !144, line: 137, baseType: !143, size: 960)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !154, file: !144, line: 138, baseType: !142, size: 64, offset: 960)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !154, file: !144, line: 139, baseType: !159, size: 64, offset: 1024)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !144, line: 43, flags: DIFlagFwdDecl)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !154, file: !144, line: 140, baseType: !162, size: 8192, offset: 1088)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 8192, elements: !164)
!163 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!164 = !{!165}
!165 = !DISubrange(count: 1024)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !154, file: !144, line: 141, baseType: !162, size: 8192, offset: 9280)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !154, file: !144, line: 148, baseType: !153, size: 64, offset: 17472)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !154, file: !144, line: 150, baseType: !169, size: 64, offset: 17536)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !144, line: 45, flags: DIFlagFwdDecl)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !145, file: !144, line: 121, baseType: !172, size: 528, offset: 256)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 528, elements: !173)
!173 = !{!174}
!174 = !DISubrange(count: 66)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !145, file: !144, line: 126, baseType: !176, size: 16, offset: 784)
!176 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !145, file: !144, line: 127, baseType: !178, size: 32, offset: 800)
!178 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !145, file: !144, line: 128, baseType: !178, size: 32, offset: 832)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !145, file: !144, line: 128, baseType: !178, size: 32, offset: 864)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !145, file: !144, line: 129, baseType: !182, size: 64, offset: 896)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !144, line: 75, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !144, line: 62, size: 1024, elements: !185)
!185 = !{!186, !188, !189, !190, !191, !192, !196, !197, !211, !212}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !184, file: !144, line: 63, baseType: !187, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !184, file: !144, line: 63, baseType: !187, size: 64, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !184, file: !144, line: 64, baseType: !163, size: 8, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !184, file: !144, line: 64, baseType: !163, size: 8, offset: 136)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !184, file: !144, line: 65, baseType: !176, size: 16, offset: 144)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !184, file: !144, line: 66, baseType: !193, size: 512, offset: 160)
!193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 512, elements: !194)
!194 = !{!195}
!195 = !DISubrange(count: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !184, file: !144, line: 67, baseType: !178, size: 32, offset: 672)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !184, file: !144, line: 69, baseType: !198, size: 256, offset: 704)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !144, line: 60, baseType: !199)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !144, line: 48, size: 256, elements: !200)
!200 = !{!201, !202, !209, !210}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !199, file: !144, line: 49, baseType: !148, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !199, file: !144, line: 58, baseType: !203, size: 128, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !204, line: 71, baseType: !205)
!204 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !204, line: 69, size: 128, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !205, file: !204, line: 70, baseType: !148, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !205, file: !204, line: 70, baseType: !148, size: 64, offset: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !199, file: !144, line: 59, baseType: !178, size: 32, offset: 192)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !199, file: !144, line: 59, baseType: !178, size: 32, offset: 224)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !184, file: !144, line: 70, baseType: !178, size: 32, offset: 960)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !184, file: !144, line: 74, baseType: !178, size: 32, offset: 992)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !217, line: 133, baseType: !218)
!217 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !217, line: 58, size: 11008, elements: !219)
!219 = !{!220, !221, !291, !302, !306, !310, !2315, !2321, !2330, !2340, !2346, !2352, !2360, !2371, !2384, !2397, !2405, !2414, !2415, !2423, !2425, !2428, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !218, file: !217, line: 59, baseType: !143, size: 960)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !218, file: !217, line: 60, baseType: !222, size: 64, offset: 960)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !63, line: 838, size: 768, elements: !224)
!224 = !{!225, !240, !241, !251, !252, !284, !285, !286, !287, !288, !289, !290}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !223, file: !63, line: 840, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !228, line: 499, baseType: !229)
!228 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !228, line: 486, size: 1600, elements: !230)
!230 = !{!231, !232, !233, !234, !235, !236, !237, !238, !239}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !229, file: !228, line: 487, baseType: !143, size: 960)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !229, file: !228, line: 489, baseType: !203, size: 128, offset: 960)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !229, file: !228, line: 490, baseType: !203, size: 128, offset: 1088)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !229, file: !228, line: 491, baseType: !203, size: 128, offset: 1216)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !229, file: !228, line: 492, baseType: !203, size: 128, offset: 1344)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !229, file: !228, line: 494, baseType: !178, size: 32, offset: 1472)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !229, file: !228, line: 495, baseType: !178, size: 32, offset: 1504)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !229, file: !228, line: 497, baseType: !178, size: 32, offset: 1536)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !229, file: !228, line: 498, baseType: !178, size: 32, offset: 1568)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !223, file: !63, line: 844, baseType: !226, size: 64, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !223, file: !63, line: 848, baseType: !242, size: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !63, line: 549, baseType: !244)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !63, line: 544, size: 320, elements: !245)
!245 = !{!246, !248, !249, !250}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !244, file: !63, line: 545, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !244, file: !63, line: 545, baseType: !247, size: 64, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !244, file: !63, line: 547, baseType: !226, size: 64, offset: 128)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !244, file: !63, line: 548, baseType: !203, size: 128, offset: 192)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !223, file: !63, line: 851, baseType: !203, size: 128, offset: 192)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !223, file: !63, line: 853, baseType: !253, size: 64, offset: 320)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !63, line: 594, baseType: !255)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !63, line: 561, size: 1664, elements: !256)
!256 = !{!257, !259, !260, !261, !262, !263, !264, !265, !266, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !255, file: !63, line: 562, baseType: !258, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !255, file: !63, line: 562, baseType: !258, size: 64, offset: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !255, file: !63, line: 564, baseType: !203, size: 128, offset: 128)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !255, file: !63, line: 565, baseType: !226, size: 64, offset: 256)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !255, file: !63, line: 566, baseType: !242, size: 64, offset: 320)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !255, file: !63, line: 568, baseType: !203, size: 128, offset: 384)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !255, file: !63, line: 569, baseType: !203, size: 128, offset: 512)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !255, file: !63, line: 571, baseType: !193, size: 512, offset: 640)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !255, file: !63, line: 573, baseType: !267, size: 32, offset: 1152)
!267 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !255, file: !63, line: 574, baseType: !267, size: 32, offset: 1184)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !255, file: !63, line: 576, baseType: !267, size: 32, offset: 1216)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !255, file: !63, line: 576, baseType: !267, size: 32, offset: 1248)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !255, file: !63, line: 577, baseType: !267, size: 32, offset: 1280)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !255, file: !63, line: 577, baseType: !267, size: 32, offset: 1312)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !255, file: !63, line: 579, baseType: !267, size: 32, offset: 1344)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !255, file: !63, line: 580, baseType: !267, size: 32, offset: 1376)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !255, file: !63, line: 582, baseType: !267, size: 32, offset: 1408)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !255, file: !63, line: 582, baseType: !267, size: 32, offset: 1440)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !255, file: !63, line: 583, baseType: !176, size: 16, offset: 1472)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !255, file: !63, line: 585, baseType: !176, size: 16, offset: 1488)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !255, file: !63, line: 586, baseType: !176, size: 16, offset: 1504)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !255, file: !63, line: 588, baseType: !176, size: 16, offset: 1520)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !255, file: !63, line: 590, baseType: !148, size: 64, offset: 1536)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !255, file: !63, line: 592, baseType: !178, size: 32, offset: 1600)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !255, file: !63, line: 593, baseType: !178, size: 32, offset: 1632)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !223, file: !63, line: 858, baseType: !203, size: 128, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !223, file: !63, line: 859, baseType: !203, size: 128, offset: 512)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !223, file: !63, line: 862, baseType: !178, size: 32, offset: 640)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !223, file: !63, line: 863, baseType: !178, size: 32, offset: 672)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !223, file: !63, line: 866, baseType: !176, size: 16, offset: 704)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !223, file: !63, line: 867, baseType: !176, size: 16, offset: 720)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !223, file: !63, line: 868, baseType: !267, size: 32, offset: 736)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !218, file: !217, line: 62, baseType: !292, size: 64, offset: 1024)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !20, line: 97, size: 832, elements: !294)
!294 = !{!295, !300, !301}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !293, file: !20, line: 98, baseType: !296, size: 768)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 768, elements: !297)
!297 = !{!298, !299}
!298 = !DISubrange(count: 8)
!299 = !DISubrange(count: 3)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !293, file: !20, line: 99, baseType: !178, size: 32, offset: 768)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !293, file: !20, line: 99, baseType: !178, size: 32, offset: 800)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !218, file: !217, line: 64, baseType: !303, size: 64, offset: 1088)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !305, line: 46, flags: DIFlagFwdDecl)
!305 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!306 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !218, file: !217, line: 65, baseType: !307, size: 64, offset: 1152)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !309, line: 45, flags: DIFlagFwdDecl)
!309 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!310 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !218, file: !217, line: 66, baseType: !311, size: 64, offset: 1216)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !314, line: 93, size: 7552, elements: !315)
!314 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!315 = !{!316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !366, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !435, !436, !437, !438, !439, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2314}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !313, file: !314, line: 94, baseType: !143, size: 960)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !313, file: !314, line: 95, baseType: !222, size: 64, offset: 960)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !313, file: !314, line: 97, baseType: !176, size: 16, offset: 1024)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !313, file: !314, line: 97, baseType: !176, size: 16, offset: 1040)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !313, file: !314, line: 99, baseType: !267, size: 32, offset: 1056)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !313, file: !314, line: 99, baseType: !267, size: 32, offset: 1088)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !313, file: !314, line: 99, baseType: !267, size: 32, offset: 1120)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !313, file: !314, line: 100, baseType: !267, size: 32, offset: 1152)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !313, file: !314, line: 100, baseType: !267, size: 32, offset: 1184)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !313, file: !314, line: 100, baseType: !267, size: 32, offset: 1216)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !313, file: !314, line: 101, baseType: !267, size: 32, offset: 1248)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !313, file: !314, line: 101, baseType: !267, size: 32, offset: 1280)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !313, file: !314, line: 101, baseType: !267, size: 32, offset: 1312)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !313, file: !314, line: 102, baseType: !267, size: 32, offset: 1344)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !313, file: !314, line: 102, baseType: !267, size: 32, offset: 1376)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !313, file: !314, line: 102, baseType: !267, size: 32, offset: 1408)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !313, file: !314, line: 103, baseType: !267, size: 32, offset: 1440)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !313, file: !314, line: 103, baseType: !267, size: 32, offset: 1472)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !313, file: !314, line: 103, baseType: !267, size: 32, offset: 1504)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !313, file: !314, line: 103, baseType: !267, size: 32, offset: 1536)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !313, file: !314, line: 103, baseType: !267, size: 32, offset: 1568)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !313, file: !314, line: 104, baseType: !267, size: 32, offset: 1600)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !313, file: !314, line: 104, baseType: !267, size: 32, offset: 1632)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !313, file: !314, line: 104, baseType: !267, size: 32, offset: 1664)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !313, file: !314, line: 104, baseType: !267, size: 32, offset: 1696)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !313, file: !314, line: 104, baseType: !267, size: 32, offset: 1728)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !313, file: !314, line: 105, baseType: !267, size: 32, offset: 1760)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !313, file: !314, line: 108, baseType: !344, size: 704, offset: 1792)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !314, line: 53, size: 704, elements: !345)
!345 = !{!346, !347, !348, !349, !350, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !344, file: !314, line: 54, baseType: !267, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !344, file: !314, line: 55, baseType: !267, size: 32, offset: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !344, file: !314, line: 56, baseType: !267, size: 32, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !344, file: !314, line: 57, baseType: !267, size: 32, offset: 96)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !344, file: !314, line: 59, baseType: !351, size: 96, offset: 128)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 96, elements: !352)
!352 = !{!299}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !344, file: !314, line: 60, baseType: !351, size: 96, offset: 224)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !344, file: !314, line: 61, baseType: !351, size: 96, offset: 320)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !344, file: !314, line: 63, baseType: !267, size: 32, offset: 416)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !344, file: !314, line: 64, baseType: !267, size: 32, offset: 448)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !344, file: !314, line: 65, baseType: !267, size: 32, offset: 480)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !344, file: !314, line: 67, baseType: !176, size: 16, offset: 512)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !344, file: !314, line: 68, baseType: !176, size: 16, offset: 528)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !344, file: !314, line: 69, baseType: !176, size: 16, offset: 544)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !344, file: !314, line: 70, baseType: !176, size: 16, offset: 560)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !344, file: !314, line: 72, baseType: !267, size: 32, offset: 576)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !344, file: !314, line: 73, baseType: !267, size: 32, offset: 608)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !344, file: !314, line: 74, baseType: !267, size: 32, offset: 640)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !344, file: !314, line: 75, baseType: !267, size: 32, offset: 672)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !313, file: !314, line: 109, baseType: !367, size: 128, offset: 2496)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !314, line: 79, size: 128, elements: !368)
!368 = !{!369, !370, !371, !372}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !367, file: !314, line: 80, baseType: !178, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !367, file: !314, line: 81, baseType: !178, size: 32, offset: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !367, file: !314, line: 82, baseType: !178, size: 32, offset: 64)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !367, file: !314, line: 83, baseType: !178, size: 32, offset: 96)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !313, file: !314, line: 111, baseType: !267, size: 32, offset: 2624)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !313, file: !314, line: 111, baseType: !267, size: 32, offset: 2656)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !313, file: !314, line: 112, baseType: !267, size: 32, offset: 2688)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !313, file: !314, line: 112, baseType: !267, size: 32, offset: 2720)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !313, file: !314, line: 113, baseType: !267, size: 32, offset: 2752)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !313, file: !314, line: 114, baseType: !267, size: 32, offset: 2784)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !313, file: !314, line: 114, baseType: !267, size: 32, offset: 2816)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !313, file: !314, line: 115, baseType: !176, size: 16, offset: 2848)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !313, file: !314, line: 115, baseType: !176, size: 16, offset: 2864)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !313, file: !314, line: 116, baseType: !176, size: 16, offset: 2880)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !313, file: !314, line: 117, baseType: !163, size: 8, offset: 2896)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !313, file: !314, line: 117, baseType: !163, size: 8, offset: 2904)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !313, file: !314, line: 119, baseType: !267, size: 32, offset: 2912)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !313, file: !314, line: 119, baseType: !267, size: 32, offset: 2944)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !313, file: !314, line: 120, baseType: !176, size: 16, offset: 2976)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !313, file: !314, line: 120, baseType: !176, size: 16, offset: 2992)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !313, file: !314, line: 121, baseType: !267, size: 32, offset: 3008)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !313, file: !314, line: 121, baseType: !267, size: 32, offset: 3040)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !313, file: !314, line: 122, baseType: !267, size: 32, offset: 3072)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !313, file: !314, line: 123, baseType: !267, size: 32, offset: 3104)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !313, file: !314, line: 124, baseType: !176, size: 16, offset: 3136)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !313, file: !314, line: 125, baseType: !176, size: 16, offset: 3152)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !313, file: !314, line: 127, baseType: !178, size: 32, offset: 3168)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !313, file: !314, line: 127, baseType: !178, size: 32, offset: 3200)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !313, file: !314, line: 128, baseType: !178, size: 32, offset: 3232)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !313, file: !314, line: 128, baseType: !178, size: 32, offset: 3264)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !313, file: !314, line: 129, baseType: !176, size: 16, offset: 3296)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !313, file: !314, line: 129, baseType: !176, size: 16, offset: 3312)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !313, file: !314, line: 129, baseType: !176, size: 16, offset: 3328)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !313, file: !314, line: 129, baseType: !176, size: 16, offset: 3344)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !313, file: !314, line: 130, baseType: !267, size: 32, offset: 3360)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !313, file: !314, line: 130, baseType: !267, size: 32, offset: 3392)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !313, file: !314, line: 130, baseType: !267, size: 32, offset: 3424)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !313, file: !314, line: 130, baseType: !267, size: 32, offset: 3456)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !313, file: !314, line: 131, baseType: !267, size: 32, offset: 3488)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !313, file: !314, line: 131, baseType: !267, size: 32, offset: 3520)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !313, file: !314, line: 131, baseType: !267, size: 32, offset: 3552)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !313, file: !314, line: 131, baseType: !267, size: 32, offset: 3584)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !313, file: !314, line: 132, baseType: !267, size: 32, offset: 3616)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !313, file: !314, line: 132, baseType: !267, size: 32, offset: 3648)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !313, file: !314, line: 133, baseType: !193, size: 512, offset: 3680)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !313, file: !314, line: 135, baseType: !267, size: 32, offset: 4192)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !313, file: !314, line: 136, baseType: !267, size: 32, offset: 4224)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !313, file: !314, line: 137, baseType: !267, size: 32, offset: 4256)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !313, file: !314, line: 138, baseType: !178, size: 32, offset: 4288)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !313, file: !314, line: 141, baseType: !163, size: 8, offset: 4320)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !313, file: !314, line: 141, baseType: !163, size: 8, offset: 4328)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !313, file: !314, line: 141, baseType: !163, size: 8, offset: 4336)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !313, file: !314, line: 141, baseType: !163, size: 8, offset: 4344)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !313, file: !314, line: 142, baseType: !176, size: 16, offset: 4352)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !313, file: !314, line: 142, baseType: !176, size: 16, offset: 4368)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !313, file: !314, line: 142, baseType: !176, size: 16, offset: 4384)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !313, file: !314, line: 145, baseType: !163, size: 8, offset: 4400)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !313, file: !314, line: 145, baseType: !163, size: 8, offset: 4408)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !313, file: !314, line: 148, baseType: !176, size: 16, offset: 4416)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !313, file: !314, line: 148, baseType: !176, size: 16, offset: 4432)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !313, file: !314, line: 149, baseType: !267, size: 32, offset: 4448)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !313, file: !314, line: 149, baseType: !267, size: 32, offset: 4480)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !313, file: !314, line: 152, baseType: !432, size: 128, offset: 4512)
!432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 128, elements: !433)
!433 = !{!434}
!434 = !DISubrange(count: 4)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !313, file: !314, line: 153, baseType: !267, size: 32, offset: 4640)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !313, file: !314, line: 154, baseType: !267, size: 32, offset: 4672)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !313, file: !314, line: 157, baseType: !176, size: 16, offset: 4704)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !313, file: !314, line: 157, baseType: !176, size: 16, offset: 4720)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !313, file: !314, line: 160, baseType: !440, size: 64, offset: 4736)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !305, line: 113, size: 6208, elements: !442)
!442 = !{!443, !444, !445, !446, !447, !448, !452}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !441, file: !305, line: 114, baseType: !176, size: 16)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !441, file: !305, line: 114, baseType: !176, size: 16, offset: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !441, file: !305, line: 115, baseType: !163, size: 8, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !441, file: !305, line: 115, baseType: !163, size: 8, offset: 40)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !441, file: !305, line: 116, baseType: !163, size: 8, offset: 48)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !441, file: !305, line: 117, baseType: !449, size: 8, offset: 56)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 8, elements: !450)
!450 = !{!451}
!451 = !DISubrange(count: 1)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !441, file: !305, line: 119, baseType: !453, size: 6144, offset: 64)
!453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 6144, elements: !463)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !305, line: 109, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !305, line: 106, size: 192, elements: !456)
!456 = !{!457, !458, !459, !460, !461, !462}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !455, file: !305, line: 107, baseType: !267, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !455, file: !305, line: 107, baseType: !267, size: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !455, file: !305, line: 107, baseType: !267, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !455, file: !305, line: 107, baseType: !267, size: 32, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !455, file: !305, line: 107, baseType: !267, size: 32, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !455, file: !305, line: 108, baseType: !178, size: 32, offset: 160)
!463 = !{!464}
!464 = !DISubrange(count: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !313, file: !314, line: 161, baseType: !440, size: 64, offset: 4800)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !313, file: !314, line: 162, baseType: !163, size: 8, offset: 4864)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !313, file: !314, line: 162, baseType: !163, size: 8, offset: 4872)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !313, file: !314, line: 163, baseType: !163, size: 8, offset: 4880)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !313, file: !314, line: 163, baseType: !163, size: 8, offset: 4888)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !313, file: !314, line: 164, baseType: !176, size: 16, offset: 4896)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !313, file: !314, line: 164, baseType: !176, size: 16, offset: 4912)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !313, file: !314, line: 165, baseType: !267, size: 32, offset: 4928)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !313, file: !314, line: 165, baseType: !267, size: 32, offset: 4960)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !313, file: !314, line: 167, baseType: !475, size: 1152, offset: 4992)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 1152, elements: !2272)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !305, line: 57, size: 2496, elements: !478)
!478 = !{!479, !480, !481, !482, !483, !2069, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !477, file: !305, line: 59, baseType: !176, size: 16)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !477, file: !305, line: 59, baseType: !176, size: 16, offset: 16)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !477, file: !305, line: 59, baseType: !176, size: 16, offset: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !477, file: !305, line: 59, baseType: !176, size: 16, offset: 48)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !477, file: !305, line: 60, baseType: !484, size: 64, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !20, line: 115, size: 11392, elements: !486)
!486 = !{!487, !488, !489, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !507, !508, !549, !550, !553, !554, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !654, !655, !656, !657, !658, !659, !660, !661, !662, !665, !668, !677, !678, !679, !680, !681, !684, !706, !709, !710, !716, !717, !718, !719, !720, !721, !723, !726, !729, !733, !2057, !2058}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !485, file: !20, line: 116, baseType: !143, size: 960)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !485, file: !20, line: 117, baseType: !222, size: 64, offset: 960)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !485, file: !20, line: 119, baseType: !490, size: 64, offset: 1024)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !20, line: 57, flags: DIFlagFwdDecl)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !485, file: !20, line: 121, baseType: !176, size: 16, offset: 1088)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !485, file: !20, line: 121, baseType: !176, size: 16, offset: 1104)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !485, file: !20, line: 122, baseType: !178, size: 32, offset: 1120)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !485, file: !20, line: 122, baseType: !178, size: 32, offset: 1152)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !485, file: !20, line: 122, baseType: !178, size: 32, offset: 1184)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !485, file: !20, line: 123, baseType: !193, size: 512, offset: 1216)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !485, file: !20, line: 124, baseType: !484, size: 64, offset: 1728)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !485, file: !20, line: 124, baseType: !484, size: 64, offset: 1792)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !485, file: !20, line: 127, baseType: !484, size: 64, offset: 1856)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !485, file: !20, line: 127, baseType: !484, size: 64, offset: 1920)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !485, file: !20, line: 127, baseType: !484, size: 64, offset: 1984)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !485, file: !20, line: 128, baseType: !303, size: 64, offset: 2048)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !485, file: !20, line: 130, baseType: !292, size: 64, offset: 2112)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !485, file: !20, line: 131, baseType: !506, size: 64, offset: 2176)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !485, file: !20, line: 132, baseType: !506, size: 64, offset: 2240)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !485, file: !20, line: 133, baseType: !509, size: 64, offset: 2304)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !228, line: 334, size: 1728, elements: !511)
!511 = !{!512, !513, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !548}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !510, file: !228, line: 335, baseType: !203, size: 128)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !510, file: !228, line: 336, baseType: !514, size: 64, offset: 128)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !228, line: 47, flags: DIFlagFwdDecl)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !510, file: !228, line: 338, baseType: !176, size: 16, offset: 192)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !510, file: !228, line: 338, baseType: !176, size: 16, offset: 208)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !510, file: !228, line: 339, baseType: !7, size: 32, offset: 224)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !510, file: !228, line: 340, baseType: !178, size: 32, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !510, file: !228, line: 342, baseType: !267, size: 32, offset: 288)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !510, file: !228, line: 343, baseType: !351, size: 96, offset: 320)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !510, file: !228, line: 344, baseType: !351, size: 96, offset: 416)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !510, file: !228, line: 347, baseType: !203, size: 128, offset: 512)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !510, file: !228, line: 349, baseType: !178, size: 32, offset: 640)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !510, file: !228, line: 350, baseType: !178, size: 32, offset: 672)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !510, file: !228, line: 351, baseType: !148, size: 64, offset: 704)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !510, file: !228, line: 352, baseType: !148, size: 64, offset: 768)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !510, file: !228, line: 354, baseType: !529, size: 384, offset: 832)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !228, line: 116, baseType: !530)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !228, line: 94, size: 384, elements: !531)
!531 = !{!532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !530, file: !228, line: 96, baseType: !178, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !530, file: !228, line: 96, baseType: !178, size: 32, offset: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !530, file: !228, line: 97, baseType: !178, size: 32, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !530, file: !228, line: 97, baseType: !178, size: 32, offset: 96)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !530, file: !228, line: 99, baseType: !176, size: 16, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !530, file: !228, line: 100, baseType: !176, size: 16, offset: 144)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !530, file: !228, line: 102, baseType: !176, size: 16, offset: 160)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !530, file: !228, line: 105, baseType: !176, size: 16, offset: 176)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !530, file: !228, line: 108, baseType: !176, size: 16, offset: 192)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !530, file: !228, line: 109, baseType: !176, size: 16, offset: 208)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !530, file: !228, line: 111, baseType: !176, size: 16, offset: 224)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !530, file: !228, line: 112, baseType: !176, size: 16, offset: 240)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !530, file: !228, line: 114, baseType: !178, size: 32, offset: 256)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !530, file: !228, line: 114, baseType: !178, size: 32, offset: 288)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !530, file: !228, line: 115, baseType: !178, size: 32, offset: 320)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !530, file: !228, line: 115, baseType: !178, size: 32, offset: 352)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !510, file: !228, line: 355, baseType: !193, size: 512, offset: 1216)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !485, file: !20, line: 134, baseType: !148, size: 64, offset: 2368)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !485, file: !20, line: 136, baseType: !551, size: 64, offset: 2432)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !69, line: 61, flags: DIFlagFwdDecl)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !485, file: !20, line: 138, baseType: !529, size: 384, offset: 2496)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !485, file: !20, line: 139, baseType: !555, size: 64, offset: 2880)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !228, line: 80, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !228, line: 72, size: 192, elements: !558)
!558 = !{!559, !566, !567, !568, !569}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !557, file: !228, line: 73, baseType: !560, size: 64)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !228, line: 59, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !228, line: 56, size: 128, elements: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !562, file: !228, line: 57, baseType: !351, size: 96)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !562, file: !228, line: 58, baseType: !178, size: 32, offset: 96)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !557, file: !228, line: 74, baseType: !178, size: 32, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !557, file: !228, line: 76, baseType: !178, size: 32, offset: 96)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !557, file: !228, line: 77, baseType: !178, size: 32, offset: 128)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !557, file: !228, line: 79, baseType: !178, size: 32, offset: 160)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !485, file: !20, line: 141, baseType: !203, size: 128, offset: 2944)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !485, file: !20, line: 142, baseType: !203, size: 128, offset: 3072)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !485, file: !20, line: 143, baseType: !203, size: 128, offset: 3200)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !485, file: !20, line: 144, baseType: !203, size: 128, offset: 3328)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !485, file: !20, line: 146, baseType: !178, size: 32, offset: 3456)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !485, file: !20, line: 147, baseType: !178, size: 32, offset: 3488)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !485, file: !20, line: 150, baseType: !311, size: 64, offset: 3520)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !485, file: !20, line: 151, baseType: !213, size: 64, offset: 3584)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !485, file: !20, line: 152, baseType: !178, size: 32, offset: 3648)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !485, file: !20, line: 153, baseType: !178, size: 32, offset: 3680)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !485, file: !20, line: 156, baseType: !351, size: 96, offset: 3712)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !485, file: !20, line: 156, baseType: !351, size: 96, offset: 3808)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !485, file: !20, line: 156, baseType: !351, size: 96, offset: 3904)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !485, file: !20, line: 157, baseType: !351, size: 96, offset: 4000)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !485, file: !20, line: 158, baseType: !351, size: 96, offset: 4096)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !485, file: !20, line: 159, baseType: !351, size: 96, offset: 4192)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !485, file: !20, line: 160, baseType: !351, size: 96, offset: 4288)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !485, file: !20, line: 160, baseType: !351, size: 96, offset: 4384)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !485, file: !20, line: 161, baseType: !432, size: 128, offset: 4480)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !485, file: !20, line: 161, baseType: !432, size: 128, offset: 4608)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !485, file: !20, line: 162, baseType: !351, size: 96, offset: 4736)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !485, file: !20, line: 162, baseType: !351, size: 96, offset: 4832)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !485, file: !20, line: 163, baseType: !267, size: 32, offset: 4928)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !485, file: !20, line: 163, baseType: !267, size: 32, offset: 4960)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !485, file: !20, line: 164, baseType: !595, size: 512, offset: 4992)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 512, elements: !596)
!596 = !{!434, !434}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !485, file: !20, line: 165, baseType: !595, size: 512, offset: 5504)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !485, file: !20, line: 166, baseType: !595, size: 512, offset: 6016)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !485, file: !20, line: 167, baseType: !595, size: 512, offset: 6528)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !485, file: !20, line: 176, baseType: !595, size: 512, offset: 7040)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !485, file: !20, line: 178, baseType: !7, size: 32, offset: 7552)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !485, file: !20, line: 180, baseType: !176, size: 16, offset: 7584)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !485, file: !20, line: 181, baseType: !176, size: 16, offset: 7600)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !485, file: !20, line: 183, baseType: !176, size: 16, offset: 7616)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !485, file: !20, line: 183, baseType: !176, size: 16, offset: 7632)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !485, file: !20, line: 184, baseType: !176, size: 16, offset: 7648)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !485, file: !20, line: 184, baseType: !176, size: 16, offset: 7664)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !485, file: !20, line: 185, baseType: !176, size: 16, offset: 7680)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !485, file: !20, line: 186, baseType: !176, size: 16, offset: 7696)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !485, file: !20, line: 187, baseType: !176, size: 16, offset: 7712)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !485, file: !20, line: 188, baseType: !163, size: 8, offset: 7728)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !485, file: !20, line: 189, baseType: !163, size: 8, offset: 7736)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !485, file: !20, line: 192, baseType: !178, size: 32, offset: 7744)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !485, file: !20, line: 192, baseType: !178, size: 32, offset: 7776)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !485, file: !20, line: 192, baseType: !178, size: 32, offset: 7808)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !485, file: !20, line: 192, baseType: !178, size: 32, offset: 7840)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !485, file: !20, line: 194, baseType: !178, size: 32, offset: 7872)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !485, file: !20, line: 202, baseType: !267, size: 32, offset: 7904)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !485, file: !20, line: 202, baseType: !267, size: 32, offset: 7936)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !485, file: !20, line: 202, baseType: !267, size: 32, offset: 7968)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !485, file: !20, line: 211, baseType: !267, size: 32, offset: 8000)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !485, file: !20, line: 212, baseType: !267, size: 32, offset: 8032)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !485, file: !20, line: 213, baseType: !267, size: 32, offset: 8064)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !485, file: !20, line: 214, baseType: !267, size: 32, offset: 8096)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !485, file: !20, line: 215, baseType: !267, size: 32, offset: 8128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !485, file: !20, line: 216, baseType: !267, size: 32, offset: 8160)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !485, file: !20, line: 219, baseType: !267, size: 32, offset: 8192)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !485, file: !20, line: 220, baseType: !267, size: 32, offset: 8224)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !485, file: !20, line: 221, baseType: !267, size: 32, offset: 8256)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !485, file: !20, line: 224, baseType: !631, size: 16, offset: 8288)
!631 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !485, file: !20, line: 224, baseType: !631, size: 16, offset: 8304)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !485, file: !20, line: 226, baseType: !176, size: 16, offset: 8320)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !485, file: !20, line: 228, baseType: !163, size: 8, offset: 8336)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !485, file: !20, line: 229, baseType: !163, size: 8, offset: 8344)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !485, file: !20, line: 231, baseType: !176, size: 16, offset: 8352)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !485, file: !20, line: 232, baseType: !163, size: 8, offset: 8368)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !485, file: !20, line: 233, baseType: !163, size: 8, offset: 8376)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !485, file: !20, line: 234, baseType: !267, size: 32, offset: 8384)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !485, file: !20, line: 235, baseType: !267, size: 32, offset: 8416)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !485, file: !20, line: 237, baseType: !203, size: 128, offset: 8448)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !485, file: !20, line: 238, baseType: !203, size: 128, offset: 8576)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !485, file: !20, line: 239, baseType: !203, size: 128, offset: 8704)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !485, file: !20, line: 240, baseType: !203, size: 128, offset: 8832)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !485, file: !20, line: 242, baseType: !267, size: 32, offset: 8960)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !485, file: !20, line: 244, baseType: !176, size: 16, offset: 8992)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !485, file: !20, line: 245, baseType: !631, size: 16, offset: 9008)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !485, file: !20, line: 246, baseType: !432, size: 128, offset: 9024)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !485, file: !20, line: 248, baseType: !178, size: 32, offset: 9152)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !485, file: !20, line: 249, baseType: !178, size: 32, offset: 9184)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !485, file: !20, line: 251, baseType: !652, size: 64, offset: 9216)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !20, line: 251, flags: DIFlagFwdDecl)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !485, file: !20, line: 253, baseType: !163, size: 8, offset: 9280)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !485, file: !20, line: 254, baseType: !163, size: 8, offset: 9288)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !485, file: !20, line: 255, baseType: !176, size: 16, offset: 9296)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !485, file: !20, line: 256, baseType: !351, size: 96, offset: 9312)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !485, file: !20, line: 258, baseType: !203, size: 128, offset: 9408)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !485, file: !20, line: 259, baseType: !203, size: 128, offset: 9536)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !485, file: !20, line: 260, baseType: !203, size: 128, offset: 9664)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !485, file: !20, line: 261, baseType: !203, size: 128, offset: 9792)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !485, file: !20, line: 263, baseType: !663, size: 64, offset: 9920)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !20, line: 52, flags: DIFlagFwdDecl)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !485, file: !20, line: 264, baseType: !666, size: 64, offset: 9984)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !20, line: 53, flags: DIFlagFwdDecl)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !485, file: !20, line: 265, baseType: !669, size: 64, offset: 10048)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !671, line: 51, size: 1216, elements: !672)
!671 = !DIFile(filename: "blender/source/blender/makesdna/DNA_group_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!672 = !{!673, !674, !675, !676}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !670, file: !671, line: 52, baseType: !143, size: 960)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "gobject", scope: !670, file: !671, line: 54, baseType: !203, size: 128, offset: 960)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !670, file: !671, line: 59, baseType: !7, size: 32, offset: 1088)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_ofs", scope: !670, file: !671, line: 60, baseType: !351, size: 96, offset: 1120)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !485, file: !20, line: 267, baseType: !163, size: 8, offset: 10112)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !485, file: !20, line: 268, baseType: !163, size: 8, offset: 10120)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !485, file: !20, line: 269, baseType: !176, size: 16, offset: 10128)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !485, file: !20, line: 270, baseType: !267, size: 32, offset: 10144)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !485, file: !20, line: 272, baseType: !682, size: 64, offset: 10176)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !20, line: 54, flags: DIFlagFwdDecl)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !485, file: !20, line: 275, baseType: !685, size: 64, offset: 10240)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !687, line: 49, size: 448, elements: !688)
!687 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!688 = !{!689, !690, !691, !692}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !686, file: !687, line: 50, baseType: !203, size: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !686, file: !687, line: 51, baseType: !203, size: 128, offset: 128)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !686, file: !687, line: 52, baseType: !203, size: 128, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !686, file: !687, line: 53, baseType: !693, size: 64, offset: 384)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !309, line: 65, size: 128, elements: !695)
!695 = !{!696, !704, !705}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !694, file: !309, line: 66, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !309, line: 56, size: 320, elements: !699)
!699 = !{!700, !701, !702, !703}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !698, file: !309, line: 57, baseType: !432, size: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !698, file: !309, line: 58, baseType: !432, size: 128, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !698, file: !309, line: 59, baseType: !267, size: 32, offset: 256)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !698, file: !309, line: 59, baseType: !267, size: 32, offset: 288)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !694, file: !309, line: 67, baseType: !178, size: 32, offset: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !694, file: !309, line: 68, baseType: !267, size: 32, offset: 96)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !485, file: !20, line: 277, baseType: !707, size: 64, offset: 10304)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !217, line: 40, flags: DIFlagFwdDecl)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !485, file: !20, line: 277, baseType: !707, size: 64, offset: 10368)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !485, file: !20, line: 278, baseType: !711, size: 64, offset: 10432)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !712, line: 27, baseType: !713)
!712 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !714, line: 45, baseType: !715)
!714 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!715 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !485, file: !20, line: 279, baseType: !711, size: 64, offset: 10496)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !485, file: !20, line: 280, baseType: !7, size: 32, offset: 10560)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !485, file: !20, line: 281, baseType: !7, size: 32, offset: 10592)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !485, file: !20, line: 283, baseType: !203, size: 128, offset: 10624)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !485, file: !20, line: 284, baseType: !203, size: 128, offset: 10752)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !485, file: !20, line: 285, baseType: !722, size: 64, offset: 10880)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !485, file: !20, line: 287, baseType: !724, size: 64, offset: 10944)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !20, line: 59, flags: DIFlagFwdDecl)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !485, file: !20, line: 288, baseType: !727, size: 64, offset: 11008)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !20, line: 288, flags: DIFlagFwdDecl)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !485, file: !20, line: 290, baseType: !730, size: 64, offset: 11072)
!730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 64, elements: !731)
!731 = !{!732}
!732 = !DISubrange(count: 2)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !485, file: !20, line: 291, baseType: !734, size: 64, offset: 11136)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !736, line: 65, baseType: !737)
!736 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !736, line: 50, size: 320, elements: !738)
!738 = !{!739, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !737, file: !736, line: 51, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !69, line: 1216, size: 39680, elements: !742)
!742 = !{!743, !744, !745, !746, !1309, !1310, !1311, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1338, !1625, !1628, !1917, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1939, !1940, !1941, !1942, !1943, !1951, !2018, !2025, !2026, !2033, !2036, !2037, !2038, !2039, !2040, !2041}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !741, file: !69, line: 1217, baseType: !143, size: 960)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !741, file: !69, line: 1218, baseType: !222, size: 64, offset: 960)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !741, file: !69, line: 1220, baseType: !484, size: 64, offset: 1024)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !741, file: !69, line: 1221, baseType: !747, size: 64, offset: 1088)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !749, line: 52, size: 4224, elements: !750)
!749 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !820, !821, !822, !823, !824, !825, !827, !843}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !748, file: !749, line: 53, baseType: !143, size: 960)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !748, file: !749, line: 54, baseType: !222, size: 64, offset: 960)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !748, file: !749, line: 56, baseType: !176, size: 16, offset: 1024)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !748, file: !749, line: 56, baseType: !176, size: 16, offset: 1040)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !748, file: !749, line: 57, baseType: !176, size: 16, offset: 1056)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !748, file: !749, line: 57, baseType: !176, size: 16, offset: 1072)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !748, file: !749, line: 59, baseType: !267, size: 32, offset: 1088)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !748, file: !749, line: 59, baseType: !267, size: 32, offset: 1120)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !748, file: !749, line: 59, baseType: !267, size: 32, offset: 1152)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !748, file: !749, line: 60, baseType: !267, size: 32, offset: 1184)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !748, file: !749, line: 60, baseType: !267, size: 32, offset: 1216)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !748, file: !749, line: 60, baseType: !267, size: 32, offset: 1248)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !748, file: !749, line: 61, baseType: !267, size: 32, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !748, file: !749, line: 61, baseType: !267, size: 32, offset: 1312)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !748, file: !749, line: 61, baseType: !267, size: 32, offset: 1344)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !748, file: !749, line: 68, baseType: !267, size: 32, offset: 1376)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !748, file: !749, line: 68, baseType: !267, size: 32, offset: 1408)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !748, file: !749, line: 68, baseType: !267, size: 32, offset: 1440)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !748, file: !749, line: 69, baseType: !267, size: 32, offset: 1472)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !748, file: !749, line: 69, baseType: !267, size: 32, offset: 1504)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !748, file: !749, line: 74, baseType: !267, size: 32, offset: 1536)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !748, file: !749, line: 79, baseType: !267, size: 32, offset: 1568)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !748, file: !749, line: 81, baseType: !176, size: 16, offset: 1600)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !748, file: !749, line: 91, baseType: !176, size: 16, offset: 1616)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !748, file: !749, line: 92, baseType: !176, size: 16, offset: 1632)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !748, file: !749, line: 93, baseType: !176, size: 16, offset: 1648)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !748, file: !749, line: 94, baseType: !176, size: 16, offset: 1664)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !748, file: !749, line: 94, baseType: !176, size: 16, offset: 1680)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !748, file: !749, line: 94, baseType: !176, size: 16, offset: 1696)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !748, file: !749, line: 94, baseType: !176, size: 16, offset: 1712)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !748, file: !749, line: 96, baseType: !267, size: 32, offset: 1728)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !748, file: !749, line: 96, baseType: !267, size: 32, offset: 1760)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !748, file: !749, line: 96, baseType: !267, size: 32, offset: 1792)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !748, file: !749, line: 96, baseType: !267, size: 32, offset: 1824)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !748, file: !749, line: 98, baseType: !267, size: 32, offset: 1856)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !748, file: !749, line: 98, baseType: !267, size: 32, offset: 1888)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !748, file: !749, line: 98, baseType: !267, size: 32, offset: 1920)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !748, file: !749, line: 98, baseType: !267, size: 32, offset: 1952)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !748, file: !749, line: 99, baseType: !267, size: 32, offset: 1984)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !748, file: !749, line: 99, baseType: !267, size: 32, offset: 2016)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !748, file: !749, line: 100, baseType: !267, size: 32, offset: 2048)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !748, file: !749, line: 100, baseType: !267, size: 32, offset: 2080)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !748, file: !749, line: 103, baseType: !176, size: 16, offset: 2112)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !748, file: !749, line: 103, baseType: !176, size: 16, offset: 2128)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !748, file: !749, line: 103, baseType: !176, size: 16, offset: 2144)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !748, file: !749, line: 103, baseType: !176, size: 16, offset: 2160)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !748, file: !749, line: 106, baseType: !267, size: 32, offset: 2176)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !748, file: !749, line: 106, baseType: !267, size: 32, offset: 2208)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !748, file: !749, line: 106, baseType: !267, size: 32, offset: 2240)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !748, file: !749, line: 106, baseType: !267, size: 32, offset: 2272)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !748, file: !749, line: 107, baseType: !176, size: 16, offset: 2304)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !748, file: !749, line: 107, baseType: !176, size: 16, offset: 2320)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !748, file: !749, line: 107, baseType: !176, size: 16, offset: 2336)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !748, file: !749, line: 107, baseType: !176, size: 16, offset: 2352)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !748, file: !749, line: 108, baseType: !267, size: 32, offset: 2368)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !748, file: !749, line: 108, baseType: !267, size: 32, offset: 2400)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !748, file: !749, line: 109, baseType: !267, size: 32, offset: 2432)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !748, file: !749, line: 109, baseType: !267, size: 32, offset: 2464)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !748, file: !749, line: 110, baseType: !267, size: 32, offset: 2496)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !748, file: !749, line: 110, baseType: !267, size: 32, offset: 2528)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !748, file: !749, line: 110, baseType: !267, size: 32, offset: 2560)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !748, file: !749, line: 111, baseType: !176, size: 16, offset: 2592)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !748, file: !749, line: 111, baseType: !176, size: 16, offset: 2608)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !748, file: !749, line: 112, baseType: !176, size: 16, offset: 2624)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !748, file: !749, line: 112, baseType: !176, size: 16, offset: 2640)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !748, file: !749, line: 112, baseType: !176, size: 16, offset: 2656)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !748, file: !749, line: 115, baseType: !176, size: 16, offset: 2672)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !748, file: !749, line: 118, baseType: !819, size: 64, offset: 2688)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !748, file: !749, line: 118, baseType: !819, size: 64, offset: 2752)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !748, file: !749, line: 121, baseType: !303, size: 64, offset: 2816)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !748, file: !749, line: 122, baseType: !475, size: 1152, offset: 2880)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !748, file: !749, line: 123, baseType: !176, size: 16, offset: 4032)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !748, file: !749, line: 123, baseType: !176, size: 16, offset: 4048)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !748, file: !749, line: 123, baseType: !826, size: 32, offset: 4064)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 32, elements: !731)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !748, file: !749, line: 126, baseType: !828, size: 64, offset: 4096)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !144, line: 159, size: 448, elements: !830)
!830 = !{!831, !833, !834, !835, !836, !839}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !829, file: !144, line: 161, baseType: !832, size: 64)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !731)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !829, file: !144, line: 162, baseType: !832, size: 64, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !829, file: !144, line: 163, baseType: !826, size: 32, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !829, file: !144, line: 164, baseType: !826, size: 32, offset: 160)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !829, file: !144, line: 165, baseType: !837, size: 128, offset: 192)
!837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !838, size: 128, elements: !731)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !829, file: !144, line: 166, baseType: !840, size: 128, offset: 320)
!840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !841, size: 128, elements: !731)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !144, line: 46, flags: DIFlagFwdDecl)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !748, file: !749, line: 129, baseType: !844, size: 64, offset: 4160)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !846, line: 328, size: 3456, elements: !847)
!846 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!847 = !{!848, !849, !850, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1287, !1288, !1289, !1292, !1296, !1300, !1304, !1305, !1306, !1307, !1308}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !845, file: !846, line: 329, baseType: !143, size: 960)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !845, file: !846, line: 330, baseType: !222, size: 64, offset: 960)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !845, file: !846, line: 332, baseType: !851, size: 64, offset: 1024)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !853, line: 283, size: 4096, elements: !854)
!853 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!854 = !{!855, !856, !857, !858, !862, !863, !867, !1227, !1235, !1239, !1245, !1249, !1250, !1251, !1252, !1256, !1257}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !852, file: !853, line: 284, baseType: !178, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !852, file: !853, line: 285, baseType: !193, size: 512, offset: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !852, file: !853, line: 287, baseType: !193, size: 512, offset: 544)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !852, file: !853, line: 288, baseType: !859, size: 2048, offset: 1056)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 2048, elements: !860)
!860 = !{!861}
!861 = !DISubrange(count: 256)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !852, file: !853, line: 289, baseType: !178, size: 32, offset: 3104)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !852, file: !853, line: 292, baseType: !864, size: 64, offset: 3136)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !844}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !852, file: !853, line: 293, baseType: !868, size: 64, offset: 3200)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{null, !844, !871}
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !846, line: 167, size: 3712, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1219, !1220, !1221, !1222, !1223, !1224}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !872, file: !846, line: 168, baseType: !871, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !872, file: !846, line: 168, baseType: !871, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !872, file: !846, line: 168, baseType: !871, size: 64, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !872, file: !846, line: 170, baseType: !182, size: 64, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !872, file: !846, line: 172, baseType: !879, size: 64, offset: 256)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !853, line: 144, size: 6016, elements: !881)
!881 = !{!882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !1058, !1059, !1060, !1074, !1078, !1082, !1083, !1090, !1094, !1098, !1099, !1100, !1101, !1105, !1106, !1110, !1114, !1118, !1122, !1126, !1130, !1134, !1135, !1142, !1144, !1153, !1174}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !880, file: !853, line: 145, baseType: !148, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !880, file: !853, line: 145, baseType: !148, size: 64, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !880, file: !853, line: 146, baseType: !176, size: 16, offset: 128)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !880, file: !853, line: 148, baseType: !193, size: 512, offset: 144)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !880, file: !853, line: 149, baseType: !178, size: 32, offset: 672)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !880, file: !853, line: 151, baseType: !193, size: 512, offset: 704)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !880, file: !853, line: 152, baseType: !859, size: 2048, offset: 1216)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !880, file: !853, line: 153, baseType: !178, size: 32, offset: 3264)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !880, file: !853, line: 155, baseType: !267, size: 32, offset: 3296)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !880, file: !853, line: 155, baseType: !267, size: 32, offset: 3328)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !880, file: !853, line: 155, baseType: !267, size: 32, offset: 3360)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !880, file: !853, line: 156, baseType: !267, size: 32, offset: 3392)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !880, file: !853, line: 156, baseType: !267, size: 32, offset: 3424)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !880, file: !853, line: 156, baseType: !267, size: 32, offset: 3456)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !880, file: !853, line: 157, baseType: !176, size: 16, offset: 3488)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !880, file: !853, line: 157, baseType: !176, size: 16, offset: 3504)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !880, file: !853, line: 157, baseType: !176, size: 16, offset: 3520)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !880, file: !853, line: 160, baseType: !900, size: 64, offset: 3584)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !853, line: 109, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !853, line: 98, size: 1408, elements: !903)
!903 = !{!904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !1057}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !902, file: !853, line: 99, baseType: !178, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !902, file: !853, line: 99, baseType: !178, size: 32, offset: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !902, file: !853, line: 100, baseType: !193, size: 512, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !902, file: !853, line: 101, baseType: !267, size: 32, offset: 576)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !902, file: !853, line: 101, baseType: !267, size: 32, offset: 608)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !902, file: !853, line: 101, baseType: !267, size: 32, offset: 640)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !902, file: !853, line: 101, baseType: !267, size: 32, offset: 672)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !902, file: !853, line: 102, baseType: !267, size: 32, offset: 704)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !902, file: !853, line: 102, baseType: !267, size: 32, offset: 736)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !902, file: !853, line: 103, baseType: !178, size: 32, offset: 768)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !902, file: !853, line: 104, baseType: !178, size: 32, offset: 800)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !902, file: !853, line: 107, baseType: !916, size: 64, offset: 832)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !846, line: 87, size: 2816, elements: !918)
!918 = !{!919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1042}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !917, file: !846, line: 88, baseType: !916, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !917, file: !846, line: 88, baseType: !916, size: 64, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !917, file: !846, line: 88, baseType: !916, size: 64, offset: 128)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !917, file: !846, line: 90, baseType: !182, size: 64, offset: 192)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !917, file: !846, line: 92, baseType: !193, size: 512, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !917, file: !846, line: 94, baseType: !193, size: 512, offset: 768)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !917, file: !846, line: 99, baseType: !148, size: 64, offset: 1280)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !917, file: !846, line: 101, baseType: !176, size: 16, offset: 1344)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !917, file: !846, line: 101, baseType: !176, size: 16, offset: 1360)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !917, file: !846, line: 102, baseType: !176, size: 16, offset: 1376)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !917, file: !846, line: 103, baseType: !176, size: 16, offset: 1392)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !917, file: !846, line: 104, baseType: !931, size: 64, offset: 1408)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !853, line: 114, size: 1600, elements: !933)
!933 = !{!934, !935, !958, !962, !966, !970, !974, !978, !979, !983, !1012, !1013, !1014}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !932, file: !853, line: 115, baseType: !193, size: 512)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !932, file: !853, line: 117, baseType: !936, size: 64, offset: 512)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !939, !942, !944, !944, !956}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !941, line: 40, flags: DIFlagFwdDecl)
!941 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_animsys.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !853, line: 73, flags: DIFlagFwdDecl)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !946, line: 55, size: 192, elements: !947)
!946 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!947 = !{!948, !952, !955}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !945, file: !946, line: 58, baseType: !949, size: 64)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !945, file: !946, line: 56, size: 64, elements: !950)
!950 = !{!951}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !949, file: !946, line: 57, baseType: !148, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !945, file: !946, line: 60, baseType: !953, size: 64, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !846, line: 335, flags: DIFlagFwdDecl)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !945, file: !946, line: 61, baseType: !148, size: 64, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !932, file: !853, line: 118, baseType: !959, size: 64, offset: 576)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{null, !939, !944, !944, !819}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !932, file: !853, line: 120, baseType: !963, size: 64, offset: 640)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DISubroutineType(types: !965)
!965 = !{null, !939, !942, !944}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !932, file: !853, line: 121, baseType: !967, size: 64, offset: 704)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !939, !944, !819}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !932, file: !853, line: 122, baseType: !971, size: 64, offset: 768)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !844, !916, !953}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !932, file: !853, line: 123, baseType: !975, size: 64, offset: 832)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !844, !916, !871, !916, !956}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !932, file: !853, line: 124, baseType: !975, size: 64, offset: 896)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !932, file: !853, line: 125, baseType: !980, size: 64, offset: 960)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{null, !844, !916, !871, !916}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !932, file: !853, line: 128, baseType: !984, size: 256, offset: 1024)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !946, line: 436, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !946, line: 430, size: 256, elements: !986)
!986 = !{!987, !988, !991, !1007}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !985, file: !946, line: 431, baseType: !148, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !985, file: !946, line: 432, baseType: !989, size: 64, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !946, line: 417, baseType: !954)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !985, file: !946, line: 433, baseType: !992, size: 64, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !946, line: 408, baseType: !993)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{!178, !939, !944, !996, !998}
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !946, line: 38, flags: DIFlagFwdDecl)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !946, line: 348, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !946, line: 337, size: 256, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1006}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1000, file: !946, line: 339, baseType: !148, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1000, file: !946, line: 342, baseType: !996, size: 64, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1000, file: !946, line: 345, baseType: !178, size: 32, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1000, file: !946, line: 347, baseType: !178, size: 32, offset: 160)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1000, file: !946, line: 347, baseType: !178, size: 32, offset: 192)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !985, file: !946, line: 434, baseType: !1008, size: 64, offset: 192)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !946, line: 409, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !148}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !932, file: !853, line: 129, baseType: !984, size: 256, offset: 1280)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !932, file: !853, line: 132, baseType: !178, size: 32, offset: 1536)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !932, file: !853, line: 132, baseType: !178, size: 32, offset: 1568)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !917, file: !846, line: 105, baseType: !193, size: 512, offset: 1472)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !917, file: !846, line: 107, baseType: !267, size: 32, offset: 1984)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !917, file: !846, line: 107, baseType: !267, size: 32, offset: 2016)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !917, file: !846, line: 109, baseType: !148, size: 64, offset: 2048)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !917, file: !846, line: 112, baseType: !176, size: 16, offset: 2112)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !917, file: !846, line: 114, baseType: !176, size: 16, offset: 2128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !917, file: !846, line: 115, baseType: !178, size: 32, offset: 2144)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !917, file: !846, line: 117, baseType: !148, size: 64, offset: 2176)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !917, file: !846, line: 122, baseType: !178, size: 32, offset: 2240)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !917, file: !846, line: 124, baseType: !178, size: 32, offset: 2272)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !917, file: !846, line: 126, baseType: !916, size: 64, offset: 2304)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !917, file: !846, line: 128, baseType: !1027, size: 64, offset: 2368)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !846, line: 298, size: 448, elements: !1029)
!1029 = !{!1030, !1031, !1032, !1035, !1036, !1039, !1040, !1041}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1028, file: !846, line: 299, baseType: !1027, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1028, file: !846, line: 299, baseType: !1027, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !1028, file: !846, line: 301, baseType: !1033, size: 64, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !846, line: 218, baseType: !872)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !1028, file: !846, line: 301, baseType: !1033, size: 64, offset: 192)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !1028, file: !846, line: 302, baseType: !1037, size: 64, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !846, line: 132, baseType: !917)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !1028, file: !846, line: 302, baseType: !1037, size: 64, offset: 320)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1028, file: !846, line: 304, baseType: !178, size: 32, offset: 384)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1028, file: !846, line: 305, baseType: !178, size: 32, offset: 416)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !917, file: !846, line: 131, baseType: !1043, size: 384, offset: 2432)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !846, line: 73, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !846, line: 62, size: 384, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1044, file: !846, line: 63, baseType: !432, size: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1044, file: !846, line: 64, baseType: !267, size: 32, offset: 128)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1044, file: !846, line: 64, baseType: !267, size: 32, offset: 160)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1044, file: !846, line: 65, baseType: !148, size: 64, offset: 192)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !1044, file: !846, line: 66, baseType: !176, size: 16, offset: 256)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !1044, file: !846, line: 67, baseType: !176, size: 16, offset: 272)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !1044, file: !846, line: 68, baseType: !176, size: 16, offset: 288)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !1044, file: !846, line: 69, baseType: !176, size: 16, offset: 304)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1044, file: !846, line: 70, baseType: !176, size: 16, offset: 320)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1044, file: !846, line: 71, baseType: !176, size: 16, offset: 336)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1044, file: !846, line: 72, baseType: !826, size: 32, offset: 352)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !902, file: !853, line: 108, baseType: !193, size: 512, offset: 896)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !880, file: !853, line: 160, baseType: !900, size: 64, offset: 3648)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !880, file: !853, line: 162, baseType: !193, size: 512, offset: 3712)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !880, file: !853, line: 165, baseType: !1061, size: 64, offset: 4224)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{null, !1064, !1066, !1068, !844, !871, !1070}
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !940)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !853, line: 81, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !846, line: 43, flags: DIFlagFwdDecl)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !846, line: 274, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !846, line: 271, size: 32, elements: !1072)
!1072 = !{!1073}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1071, file: !846, line: 273, baseType: !7, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !880, file: !853, line: 168, baseType: !1075, size: 64, offset: 4288)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{null, !1064, !844, !871}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !880, file: !853, line: 171, baseType: !1079, size: 64, offset: 4352)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{null, !942, !939, !944}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !880, file: !853, line: 173, baseType: !1079, size: 64, offset: 4416)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !880, file: !853, line: 176, baseType: !1084, size: 64, offset: 4480)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{null, !1068, !1087, !871, !178, !178}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1089, line: 136, flags: DIFlagFwdDecl)
!1089 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !880, file: !853, line: 179, baseType: !1091, size: 64, offset: 4544)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{null, !844, !871, !213, !178}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !880, file: !853, line: 181, baseType: !1095, size: 64, offset: 4608)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!178, !871, !178, !178}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !880, file: !853, line: 183, baseType: !1095, size: 64, offset: 4672)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !880, file: !853, line: 185, baseType: !1095, size: 64, offset: 4736)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !880, file: !853, line: 188, baseType: !868, size: 64, offset: 4800)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !880, file: !853, line: 190, baseType: !1102, size: 64, offset: 4864)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !844, !871, !151}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !880, file: !853, line: 193, baseType: !868, size: 64, offset: 4928)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !880, file: !853, line: 195, baseType: !1107, size: 64, offset: 4992)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{null, !871}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !880, file: !853, line: 197, baseType: !1111, size: 64, offset: 5056)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !844, !871, !871}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !880, file: !853, line: 200, baseType: !1115, size: 64, offset: 5120)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !1064, !944}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !880, file: !853, line: 201, baseType: !1119, size: 64, offset: 5184)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{null, !944}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !880, file: !853, line: 202, baseType: !1123, size: 64, offset: 5248)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !944, !871}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !880, file: !853, line: 205, baseType: !1127, size: 64, offset: 5312)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!178, !879, !844}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !880, file: !853, line: 207, baseType: !1131, size: 64, offset: 5376)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!178, !871, !844}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !880, file: !853, line: 210, baseType: !868, size: 64, offset: 5440)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !880, file: !853, line: 213, baseType: !1136, size: 64, offset: 5504)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !853, line: 135, baseType: !1137)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!148, !1140, !871, !1070}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !853, line: 62, flags: DIFlagFwdDecl)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !880, file: !853, line: 214, baseType: !1143, size: 64, offset: 5568)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !853, line: 136, baseType: !1009)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !880, file: !853, line: 215, baseType: !1145, size: 64, offset: 5632)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !853, line: 137, baseType: !1146)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{null, !148, !178, !871, !1149, !1151, !1151}
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !853, line: 63, flags: DIFlagFwdDecl)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !880, file: !853, line: 217, baseType: !1154, size: 64, offset: 5696)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !853, line: 138, baseType: !1155)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!178, !1158, !871, !1149, !1160, !1160}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !853, line: 64, flags: DIFlagFwdDecl)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !6, line: 106, size: 384, elements: !1162)
!1162 = !{!1163, !1165, !1166, !1167, !1170, !1172, !1173}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1161, file: !6, line: 107, baseType: !1164, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUType", file: !6, line: 80, baseType: !5)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1161, file: !6, line: 108, baseType: !956, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1161, file: !6, line: 109, baseType: !432, size: 128, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1161, file: !6, line: 110, baseType: !1168, size: 64, offset: 256)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeLink", file: !6, line: 55, flags: DIFlagFwdDecl)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !1161, file: !6, line: 111, baseType: !1171, size: 8, offset: 320)
!1171 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !1161, file: !6, line: 112, baseType: !1171, size: 8, offset: 328)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !1161, file: !6, line: 113, baseType: !176, size: 16, offset: 336)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !880, file: !853, line: 220, baseType: !984, size: 256, offset: 5760)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !872, file: !846, line: 173, baseType: !193, size: 512, offset: 320)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !872, file: !846, line: 175, baseType: !193, size: 512, offset: 832)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !872, file: !846, line: 176, baseType: !178, size: 32, offset: 1344)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !872, file: !846, line: 177, baseType: !176, size: 16, offset: 1376)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !872, file: !846, line: 177, baseType: !176, size: 16, offset: 1392)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !872, file: !846, line: 178, baseType: !176, size: 16, offset: 1408)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !872, file: !846, line: 178, baseType: !176, size: 16, offset: 1424)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !872, file: !846, line: 179, baseType: !176, size: 16, offset: 1440)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !872, file: !846, line: 179, baseType: !176, size: 16, offset: 1456)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !872, file: !846, line: 180, baseType: !176, size: 16, offset: 1472)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !872, file: !846, line: 181, baseType: !176, size: 16, offset: 1488)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !872, file: !846, line: 182, baseType: !351, size: 96, offset: 1504)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !872, file: !846, line: 184, baseType: !203, size: 128, offset: 1600)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !872, file: !846, line: 184, baseType: !203, size: 128, offset: 1728)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !872, file: !846, line: 185, baseType: !871, size: 64, offset: 1856)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !872, file: !846, line: 186, baseType: !151, size: 64, offset: 1920)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !872, file: !846, line: 187, baseType: !148, size: 64, offset: 1984)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !872, file: !846, line: 188, baseType: !871, size: 64, offset: 2048)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !872, file: !846, line: 189, baseType: !203, size: 128, offset: 2112)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !872, file: !846, line: 191, baseType: !267, size: 32, offset: 2240)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !872, file: !846, line: 191, baseType: !267, size: 32, offset: 2272)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !872, file: !846, line: 192, baseType: !267, size: 32, offset: 2304)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !872, file: !846, line: 192, baseType: !267, size: 32, offset: 2336)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !872, file: !846, line: 193, baseType: !267, size: 32, offset: 2368)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !872, file: !846, line: 194, baseType: !267, size: 32, offset: 2400)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !872, file: !846, line: 194, baseType: !267, size: 32, offset: 2432)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !872, file: !846, line: 196, baseType: !178, size: 32, offset: 2464)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !872, file: !846, line: 198, baseType: !193, size: 512, offset: 2496)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !872, file: !846, line: 199, baseType: !176, size: 16, offset: 3008)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !872, file: !846, line: 199, baseType: !176, size: 16, offset: 3024)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !872, file: !846, line: 200, baseType: !267, size: 32, offset: 3040)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !872, file: !846, line: 200, baseType: !267, size: 32, offset: 3072)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !872, file: !846, line: 202, baseType: !176, size: 16, offset: 3104)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !872, file: !846, line: 202, baseType: !176, size: 16, offset: 3120)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !872, file: !846, line: 203, baseType: !148, size: 64, offset: 3136)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !872, file: !846, line: 204, baseType: !1211, size: 128, offset: 3200)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1212, line: 95, baseType: !1213)
!1212 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1212, line: 92, size: 128, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1213, file: !1212, line: 93, baseType: !267, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1213, file: !1212, line: 93, baseType: !267, size: 32, offset: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1213, file: !1212, line: 94, baseType: !267, size: 32, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1213, file: !1212, line: 94, baseType: !267, size: 32, offset: 96)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !872, file: !846, line: 205, baseType: !1211, size: 128, offset: 3328)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !872, file: !846, line: 206, baseType: !1211, size: 128, offset: 3456)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !872, file: !846, line: 215, baseType: !176, size: 16, offset: 3584)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !872, file: !846, line: 215, baseType: !176, size: 16, offset: 3600)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !872, file: !846, line: 216, baseType: !178, size: 32, offset: 3616)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !872, file: !846, line: 217, baseType: !1225, size: 64, offset: 3648)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !846, line: 51, flags: DIFlagFwdDecl)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !852, file: !853, line: 294, baseType: !1228, size: 64, offset: 3264)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{null, !740, !148, !1231}
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !853, line: 282, baseType: !1232)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{null, !148, !178, !956}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !852, file: !853, line: 296, baseType: !1236, size: 64, offset: 3328)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!178, !1064, !851}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !852, file: !853, line: 298, baseType: !1240, size: 64, offset: 3392)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{null, !1064, !851, !1243, !1244, !1244}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !852, file: !853, line: 302, baseType: !1246, size: 64, offset: 3456)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{null, !844, !844}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !852, file: !853, line: 303, baseType: !1246, size: 64, offset: 3520)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !852, file: !853, line: 304, baseType: !1246, size: 64, offset: 3584)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !852, file: !853, line: 307, baseType: !864, size: 64, offset: 3648)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !852, file: !853, line: 309, baseType: !1253, size: 64, offset: 3712)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!178, !844, !1027}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !852, file: !853, line: 311, baseType: !868, size: 64, offset: 3776)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !852, file: !853, line: 314, baseType: !984, size: 256, offset: 3840)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !845, file: !846, line: 333, baseType: !193, size: 512, offset: 1088)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !845, file: !846, line: 335, baseType: !953, size: 64, offset: 1600)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !845, file: !846, line: 337, baseType: !551, size: 64, offset: 1664)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !845, file: !846, line: 338, baseType: !730, size: 64, offset: 1728)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !845, file: !846, line: 340, baseType: !203, size: 128, offset: 1792)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !845, file: !846, line: 340, baseType: !203, size: 128, offset: 1920)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !845, file: !846, line: 342, baseType: !178, size: 32, offset: 2048)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !845, file: !846, line: 342, baseType: !178, size: 32, offset: 2080)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !845, file: !846, line: 343, baseType: !178, size: 32, offset: 2112)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !845, file: !846, line: 345, baseType: !178, size: 32, offset: 2144)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !845, file: !846, line: 346, baseType: !178, size: 32, offset: 2176)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !845, file: !846, line: 347, baseType: !176, size: 16, offset: 2208)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !845, file: !846, line: 348, baseType: !176, size: 16, offset: 2224)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !845, file: !846, line: 349, baseType: !178, size: 32, offset: 2240)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !845, file: !846, line: 351, baseType: !178, size: 32, offset: 2272)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !845, file: !846, line: 353, baseType: !176, size: 16, offset: 2304)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !845, file: !846, line: 354, baseType: !176, size: 16, offset: 2320)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !845, file: !846, line: 355, baseType: !178, size: 32, offset: 2336)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !845, file: !846, line: 357, baseType: !1211, size: 128, offset: 2368)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !845, file: !846, line: 363, baseType: !203, size: 128, offset: 2496)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !845, file: !846, line: 363, baseType: !203, size: 128, offset: 2624)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !845, file: !846, line: 368, baseType: !1280, size: 64, offset: 2752)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !853, line: 500, size: 64, elements: !1282)
!1282 = !{!1283}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1281, file: !853, line: 502, baseType: !1284, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1286, line: 48, baseType: !515)
!1286 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !845, file: !846, line: 372, baseType: !1070, size: 32, offset: 2816)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !845, file: !846, line: 373, baseType: !178, size: 32, offset: 2848)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !845, file: !846, line: 382, baseType: !1290, size: 64, offset: 2880)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !846, line: 46, flags: DIFlagFwdDecl)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !845, file: !846, line: 385, baseType: !1293, size: 64, offset: 2944)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{null, !148, !267}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !845, file: !846, line: 386, baseType: !1297, size: 64, offset: 3008)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{null, !148, !213}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !845, file: !846, line: 387, baseType: !1301, size: 64, offset: 3072)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!178, !148}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !845, file: !846, line: 388, baseType: !1009, size: 64, offset: 3136)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !845, file: !846, line: 389, baseType: !148, size: 64, offset: 3200)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !845, file: !846, line: 389, baseType: !148, size: 64, offset: 3264)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !845, file: !846, line: 389, baseType: !148, size: 64, offset: 3328)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !845, file: !846, line: 389, baseType: !148, size: 64, offset: 3392)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !741, file: !69, line: 1223, baseType: !740, size: 64, offset: 1152)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !741, file: !69, line: 1225, baseType: !203, size: 128, offset: 1216)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !741, file: !69, line: 1226, baseType: !1312, size: 64, offset: 1344)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !69, line: 69, size: 320, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1313, file: !69, line: 70, baseType: !1312, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1313, file: !69, line: 70, baseType: !1312, size: 64, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1313, file: !69, line: 71, baseType: !7, size: 32, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1313, file: !69, line: 71, baseType: !7, size: 32, offset: 160)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1313, file: !69, line: 72, baseType: !178, size: 32, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1313, file: !69, line: 73, baseType: !176, size: 16, offset: 224)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1313, file: !69, line: 73, baseType: !176, size: 16, offset: 240)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1313, file: !69, line: 74, baseType: !484, size: 64, offset: 256)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !741, file: !69, line: 1227, baseType: !484, size: 64, offset: 1408)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !741, file: !69, line: 1229, baseType: !351, size: 96, offset: 1472)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !741, file: !69, line: 1230, baseType: !351, size: 96, offset: 1568)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !741, file: !69, line: 1231, baseType: !351, size: 96, offset: 1664)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !741, file: !69, line: 1231, baseType: !351, size: 96, offset: 1760)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !741, file: !69, line: 1233, baseType: !7, size: 32, offset: 1856)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !741, file: !69, line: 1234, baseType: !178, size: 32, offset: 1888)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !741, file: !69, line: 1235, baseType: !7, size: 32, offset: 1920)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !741, file: !69, line: 1237, baseType: !176, size: 16, offset: 1952)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !741, file: !69, line: 1239, baseType: !163, size: 8, offset: 1968)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !741, file: !69, line: 1240, baseType: !449, size: 8, offset: 1976)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !741, file: !69, line: 1242, baseType: !844, size: 64, offset: 1984)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !741, file: !69, line: 1244, baseType: !1336, size: 64, offset: 2048)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !69, line: 59, flags: DIFlagFwdDecl)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !741, file: !69, line: 1246, baseType: !1339, size: 64, offset: 2112)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !69, line: 1067, size: 5184, elements: !1341)
!1341 = !{!1342, !1380, !1381, !1396, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1418, !1497, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1608}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1340, file: !69, line: 1068, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !69, line: 934, baseType: !1345)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !69, line: 925, size: 576, elements: !1346)
!1346 = !{!1347, !1363, !1364, !1365, !1366, !1367, !1379}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1345, file: !69, line: 926, baseType: !1348, size: 320)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !69, line: 830, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !69, line: 813, size: 320, elements: !1350)
!1350 = !{!1351, !1354, !1357, !1358, !1360, !1361, !1362}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1349, file: !69, line: 814, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !69, line: 51, flags: DIFlagFwdDecl)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1349, file: !69, line: 815, baseType: !1355, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !69, line: 815, flags: DIFlagFwdDecl)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1349, file: !69, line: 818, baseType: !148, size: 64, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1349, file: !69, line: 819, baseType: !1359, size: 32, offset: 192)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1171, size: 32, elements: !433)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1349, file: !69, line: 822, baseType: !178, size: 32, offset: 224)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1349, file: !69, line: 826, baseType: !178, size: 32, offset: 256)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1349, file: !69, line: 829, baseType: !178, size: 32, offset: 288)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1345, file: !69, line: 928, baseType: !176, size: 16, offset: 320)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1345, file: !69, line: 928, baseType: !176, size: 16, offset: 336)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1345, file: !69, line: 929, baseType: !178, size: 32, offset: 352)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1345, file: !69, line: 930, baseType: !838, size: 64, offset: 384)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1345, file: !69, line: 931, baseType: !1368, size: 64, offset: 448)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !118, line: 59, size: 128, elements: !1370)
!1370 = !{!1371, !1377, !1378}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1369, file: !118, line: 60, baseType: !1372, size: 64)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !118, line: 54, size: 64, elements: !1374)
!1374 = !{!1375, !1376}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1373, file: !118, line: 55, baseType: !178, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1373, file: !118, line: 56, baseType: !267, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1369, file: !118, line: 61, baseType: !178, size: 32, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1369, file: !118, line: 62, baseType: !178, size: 32, offset: 96)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1345, file: !69, line: 933, baseType: !148, size: 64, offset: 512)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1340, file: !69, line: 1069, baseType: !1343, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1340, file: !69, line: 1070, baseType: !1382, size: 64, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !69, line: 916, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !69, line: 891, size: 704, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1390, !1391, !1392, !1393, !1394, !1395}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1384, file: !69, line: 892, baseType: !1348, size: 320)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1384, file: !69, line: 896, baseType: !178, size: 32, offset: 320)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1384, file: !69, line: 900, baseType: !1389, size: 96, offset: 352)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 96, elements: !352)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1384, file: !69, line: 903, baseType: !267, size: 32, offset: 448)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1384, file: !69, line: 906, baseType: !178, size: 32, offset: 480)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1384, file: !69, line: 909, baseType: !267, size: 32, offset: 512)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1384, file: !69, line: 912, baseType: !267, size: 32, offset: 544)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1384, file: !69, line: 914, baseType: !484, size: 64, offset: 576)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1384, file: !69, line: 915, baseType: !148, size: 64, offset: 640)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1340, file: !69, line: 1071, baseType: !1397, size: 64, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !69, line: 920, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !69, line: 918, size: 320, elements: !1400)
!1400 = !{!1401}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1399, file: !69, line: 919, baseType: !1348, size: 320)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1340, file: !69, line: 1075, baseType: !267, size: 32, offset: 256)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1340, file: !69, line: 1077, baseType: !267, size: 32, offset: 288)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1340, file: !69, line: 1078, baseType: !267, size: 32, offset: 320)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1340, file: !69, line: 1079, baseType: !176, size: 16, offset: 352)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1340, file: !69, line: 1082, baseType: !176, size: 16, offset: 368)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1340, file: !69, line: 1085, baseType: !163, size: 8, offset: 384)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1340, file: !69, line: 1086, baseType: !163, size: 8, offset: 392)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1340, file: !69, line: 1087, baseType: !163, size: 8, offset: 400)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1340, file: !69, line: 1088, baseType: !163, size: 8, offset: 408)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1340, file: !69, line: 1090, baseType: !267, size: 32, offset: 416)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1340, file: !69, line: 1093, baseType: !176, size: 16, offset: 448)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1340, file: !69, line: 1096, baseType: !163, size: 8, offset: 464)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1340, file: !69, line: 1098, baseType: !1415, size: 40, offset: 472)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 40, elements: !1416)
!1416 = !{!1417}
!1417 = !DISubrange(count: 5)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1340, file: !69, line: 1101, baseType: !1419, size: 832, offset: 512)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !69, line: 836, size: 832, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1493, !1494, !1495, !1496}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1419, file: !69, line: 837, baseType: !1348, size: 320)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1419, file: !69, line: 839, baseType: !176, size: 16, offset: 320)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1419, file: !69, line: 839, baseType: !176, size: 16, offset: 336)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1419, file: !69, line: 842, baseType: !176, size: 16, offset: 352)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1419, file: !69, line: 842, baseType: !176, size: 16, offset: 368)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1419, file: !69, line: 843, baseType: !826, size: 32, offset: 384)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1419, file: !69, line: 845, baseType: !178, size: 32, offset: 416)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1419, file: !69, line: 847, baseType: !148, size: 64, offset: 448)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1419, file: !69, line: 848, baseType: !1430, size: 64, offset: 512)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !736, line: 77, size: 15424, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1438, !1439, !1442, !1445, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1482, !1483, !1487}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1431, file: !736, line: 78, baseType: !143, size: 960)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1431, file: !736, line: 80, baseType: !162, size: 8192, offset: 960)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1431, file: !736, line: 82, baseType: !1436, size: 64, offset: 9152)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !736, line: 43, flags: DIFlagFwdDecl)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1431, file: !736, line: 83, baseType: !841, size: 64, offset: 9216)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1431, file: !736, line: 86, baseType: !1440, size: 64, offset: 9280)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !736, line: 41, flags: DIFlagFwdDecl)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1431, file: !736, line: 87, baseType: !1443, size: 64, offset: 9344)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !736, line: 44, flags: DIFlagFwdDecl)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1431, file: !736, line: 89, baseType: !1446, size: 512, offset: 9408)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1443, size: 512, elements: !1447)
!1447 = !{!298}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1431, file: !736, line: 90, baseType: !176, size: 16, offset: 9920)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1431, file: !736, line: 90, baseType: !176, size: 16, offset: 9936)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1431, file: !736, line: 92, baseType: !176, size: 16, offset: 9952)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1431, file: !736, line: 92, baseType: !176, size: 16, offset: 9968)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1431, file: !736, line: 93, baseType: !176, size: 16, offset: 9984)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1431, file: !736, line: 93, baseType: !176, size: 16, offset: 10000)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1431, file: !736, line: 94, baseType: !178, size: 32, offset: 10016)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1431, file: !736, line: 97, baseType: !176, size: 16, offset: 10048)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1431, file: !736, line: 97, baseType: !176, size: 16, offset: 10064)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1431, file: !736, line: 98, baseType: !176, size: 16, offset: 10080)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1431, file: !736, line: 98, baseType: !176, size: 16, offset: 10096)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1431, file: !736, line: 99, baseType: !176, size: 16, offset: 10112)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1431, file: !736, line: 99, baseType: !176, size: 16, offset: 10128)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1431, file: !736, line: 100, baseType: !7, size: 32, offset: 10144)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1431, file: !736, line: 101, baseType: !838, size: 64, offset: 10176)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1431, file: !736, line: 103, baseType: !169, size: 64, offset: 10240)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1431, file: !736, line: 104, baseType: !828, size: 64, offset: 10304)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1431, file: !736, line: 107, baseType: !267, size: 32, offset: 10368)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1431, file: !736, line: 108, baseType: !178, size: 32, offset: 10400)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1431, file: !736, line: 109, baseType: !176, size: 16, offset: 10432)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1431, file: !736, line: 110, baseType: !176, size: 16, offset: 10448)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1431, file: !736, line: 113, baseType: !178, size: 32, offset: 10464)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1431, file: !736, line: 113, baseType: !178, size: 32, offset: 10496)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1431, file: !736, line: 114, baseType: !163, size: 8, offset: 10528)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1431, file: !736, line: 114, baseType: !163, size: 8, offset: 10536)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1431, file: !736, line: 115, baseType: !176, size: 16, offset: 10544)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1431, file: !736, line: 116, baseType: !432, size: 128, offset: 10560)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1431, file: !736, line: 119, baseType: !267, size: 32, offset: 10688)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1431, file: !736, line: 119, baseType: !267, size: 32, offset: 10720)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1431, file: !736, line: 122, baseType: !1478, size: 512, offset: 10752)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1089, line: 182, baseType: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1089, line: 180, size: 512, elements: !1480)
!1480 = !{!1481}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1479, file: !1089, line: 181, baseType: !193, size: 512)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1431, file: !736, line: 123, baseType: !163, size: 8, offset: 11264)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1431, file: !736, line: 125, baseType: !1484, size: 56, offset: 11272)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 56, elements: !1485)
!1485 = !{!1486}
!1486 = !DISubrange(count: 7)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1431, file: !736, line: 126, baseType: !1488, size: 4096, offset: 11328)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 4096, elements: !1447)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !736, line: 69, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !736, line: 67, size: 512, elements: !1491)
!1491 = !{!1492}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1490, file: !736, line: 68, baseType: !193, size: 512)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1419, file: !69, line: 849, baseType: !1430, size: 64, offset: 576)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1419, file: !69, line: 850, baseType: !1430, size: 64, offset: 640)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1419, file: !69, line: 851, baseType: !351, size: 96, offset: 704)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1419, file: !69, line: 852, baseType: !267, size: 32, offset: 800)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1340, file: !69, line: 1104, baseType: !1498, size: 1344, offset: 1344)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !69, line: 867, size: 1344, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503, !1504, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1498, file: !69, line: 868, baseType: !176, size: 16)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1498, file: !69, line: 869, baseType: !176, size: 16, offset: 16)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1498, file: !69, line: 870, baseType: !176, size: 16, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1498, file: !69, line: 871, baseType: !176, size: 16, offset: 48)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1498, file: !69, line: 873, baseType: !1505, size: 896, offset: 64)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1506, size: 896, elements: !1485)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !69, line: 864, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !69, line: 859, size: 128, elements: !1508)
!1508 = !{!1509, !1510, !1511, !1512, !1513, !1514}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1507, file: !69, line: 860, baseType: !176, size: 16)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1507, file: !69, line: 861, baseType: !176, size: 16, offset: 16)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1507, file: !69, line: 861, baseType: !176, size: 16, offset: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1507, file: !69, line: 861, baseType: !176, size: 16, offset: 48)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1507, file: !69, line: 862, baseType: !178, size: 32, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1507, file: !69, line: 863, baseType: !267, size: 32, offset: 96)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1498, file: !69, line: 874, baseType: !148, size: 64, offset: 960)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1498, file: !69, line: 876, baseType: !267, size: 32, offset: 1024)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1498, file: !69, line: 876, baseType: !267, size: 32, offset: 1056)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1498, file: !69, line: 878, baseType: !178, size: 32, offset: 1088)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1498, file: !69, line: 879, baseType: !178, size: 32, offset: 1120)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1498, file: !69, line: 881, baseType: !178, size: 32, offset: 1152)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1498, file: !69, line: 881, baseType: !178, size: 32, offset: 1184)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1498, file: !69, line: 883, baseType: !740, size: 64, offset: 1216)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1498, file: !69, line: 884, baseType: !484, size: 64, offset: 1280)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1340, file: !69, line: 1107, baseType: !267, size: 32, offset: 2688)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1340, file: !69, line: 1110, baseType: !267, size: 32, offset: 2720)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1340, file: !69, line: 1113, baseType: !176, size: 16, offset: 2752)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1340, file: !69, line: 1113, baseType: !176, size: 16, offset: 2768)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1340, file: !69, line: 1116, baseType: !163, size: 8, offset: 2784)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1340, file: !69, line: 1117, baseType: !449, size: 8, offset: 2792)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1340, file: !69, line: 1120, baseType: !176, size: 16, offset: 2800)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1340, file: !69, line: 1121, baseType: !267, size: 32, offset: 2816)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1340, file: !69, line: 1122, baseType: !267, size: 32, offset: 2848)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1340, file: !69, line: 1123, baseType: !267, size: 32, offset: 2880)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1340, file: !69, line: 1124, baseType: !267, size: 32, offset: 2912)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1340, file: !69, line: 1125, baseType: !267, size: 32, offset: 2944)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1340, file: !69, line: 1126, baseType: !267, size: 32, offset: 2976)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1340, file: !69, line: 1127, baseType: !267, size: 32, offset: 3008)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1340, file: !69, line: 1128, baseType: !267, size: 32, offset: 3040)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1340, file: !69, line: 1129, baseType: !267, size: 32, offset: 3072)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1340, file: !69, line: 1130, baseType: !267, size: 32, offset: 3104)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1340, file: !69, line: 1131, baseType: !176, size: 16, offset: 3136)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1340, file: !69, line: 1132, baseType: !163, size: 8, offset: 3152)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1340, file: !69, line: 1133, baseType: !163, size: 8, offset: 3160)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1340, file: !69, line: 1134, baseType: !1545, size: 24, offset: 3168)
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 24, elements: !352)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1340, file: !69, line: 1135, baseType: !163, size: 8, offset: 3192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1340, file: !69, line: 1138, baseType: !484, size: 64, offset: 3200)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1340, file: !69, line: 1139, baseType: !163, size: 8, offset: 3264)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1340, file: !69, line: 1140, baseType: !163, size: 8, offset: 3272)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1340, file: !69, line: 1141, baseType: !163, size: 8, offset: 3280)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1340, file: !69, line: 1142, baseType: !163, size: 8, offset: 3288)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1340, file: !69, line: 1143, baseType: !163, size: 8, offset: 3296)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1340, file: !69, line: 1144, baseType: !1554, size: 64, offset: 3304)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 64, elements: !1447)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1340, file: !69, line: 1145, baseType: !1554, size: 64, offset: 3368)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1340, file: !69, line: 1148, baseType: !163, size: 8, offset: 3432)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1340, file: !69, line: 1149, baseType: !163, size: 8, offset: 3440)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1340, file: !69, line: 1152, baseType: !163, size: 8, offset: 3448)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1340, file: !69, line: 1152, baseType: !163, size: 8, offset: 3456)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1340, file: !69, line: 1153, baseType: !163, size: 8, offset: 3464)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1340, file: !69, line: 1154, baseType: !176, size: 16, offset: 3472)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1340, file: !69, line: 1154, baseType: !176, size: 16, offset: 3488)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1340, file: !69, line: 1155, baseType: !176, size: 16, offset: 3504)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1340, file: !69, line: 1155, baseType: !176, size: 16, offset: 3520)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1340, file: !69, line: 1156, baseType: !163, size: 8, offset: 3536)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1340, file: !69, line: 1157, baseType: !163, size: 8, offset: 3544)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1340, file: !69, line: 1159, baseType: !163, size: 8, offset: 3552)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1340, file: !69, line: 1160, baseType: !163, size: 8, offset: 3560)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1340, file: !69, line: 1161, baseType: !163, size: 8, offset: 3568)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1340, file: !69, line: 1162, baseType: !163, size: 8, offset: 3576)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1340, file: !69, line: 1165, baseType: !178, size: 32, offset: 3584)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1340, file: !69, line: 1166, baseType: !178, size: 32, offset: 3616)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1340, file: !69, line: 1167, baseType: !178, size: 32, offset: 3648)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1340, file: !69, line: 1168, baseType: !178, size: 32, offset: 3680)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1340, file: !69, line: 1171, baseType: !176, size: 16, offset: 3712)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1340, file: !69, line: 1171, baseType: !176, size: 16, offset: 3728)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1340, file: !69, line: 1172, baseType: !178, size: 32, offset: 3744)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1340, file: !69, line: 1173, baseType: !267, size: 32, offset: 3776)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1340, file: !69, line: 1174, baseType: !267, size: 32, offset: 3808)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1340, file: !69, line: 1177, baseType: !1581, size: 1024, offset: 3840)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !69, line: 963, size: 1024, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1606, !1607}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1581, file: !69, line: 965, baseType: !178, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1581, file: !69, line: 968, baseType: !267, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1581, file: !69, line: 971, baseType: !267, size: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1581, file: !69, line: 974, baseType: !267, size: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1581, file: !69, line: 977, baseType: !351, size: 96, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1581, file: !69, line: 979, baseType: !351, size: 96, offset: 224)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1581, file: !69, line: 982, baseType: !178, size: 32, offset: 320)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1581, file: !69, line: 987, baseType: !730, size: 64, offset: 352)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1581, file: !69, line: 989, baseType: !267, size: 32, offset: 416)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1581, file: !69, line: 994, baseType: !178, size: 32, offset: 448)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1581, file: !69, line: 995, baseType: !178, size: 32, offset: 480)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1581, file: !69, line: 997, baseType: !163, size: 8, offset: 512)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1581, file: !69, line: 998, baseType: !1484, size: 56, offset: 520)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1581, file: !69, line: 1000, baseType: !267, size: 32, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1581, file: !69, line: 1003, baseType: !730, size: 64, offset: 608)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1581, file: !69, line: 1006, baseType: !178, size: 32, offset: 672)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1581, file: !69, line: 1009, baseType: !267, size: 32, offset: 704)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1581, file: !69, line: 1012, baseType: !730, size: 64, offset: 736)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1581, file: !69, line: 1015, baseType: !730, size: 64, offset: 800)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1581, file: !69, line: 1018, baseType: !178, size: 32, offset: 864)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1581, file: !69, line: 1019, baseType: !1604, size: 64, offset: 896)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !69, line: 63, flags: DIFlagFwdDecl)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1581, file: !69, line: 1023, baseType: !267, size: 32, offset: 960)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1581, file: !69, line: 1024, baseType: !178, size: 32, offset: 992)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1340, file: !69, line: 1179, baseType: !1609, size: 320, offset: 4864)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !69, line: 1043, size: 320, elements: !1610)
!1610 = !{!1611, !1612, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1609, file: !69, line: 1044, baseType: !163, size: 8)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1609, file: !69, line: 1045, baseType: !1613, size: 16, offset: 8)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 16, elements: !731)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1609, file: !69, line: 1048, baseType: !163, size: 8, offset: 24)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1609, file: !69, line: 1049, baseType: !267, size: 32, offset: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1609, file: !69, line: 1049, baseType: !267, size: 32, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1609, file: !69, line: 1052, baseType: !267, size: 32, offset: 96)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1609, file: !69, line: 1052, baseType: !267, size: 32, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1609, file: !69, line: 1053, baseType: !163, size: 8, offset: 160)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1609, file: !69, line: 1054, baseType: !1545, size: 24, offset: 168)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1609, file: !69, line: 1057, baseType: !267, size: 32, offset: 192)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1609, file: !69, line: 1057, baseType: !267, size: 32, offset: 224)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1609, file: !69, line: 1060, baseType: !267, size: 32, offset: 256)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1609, file: !69, line: 1060, baseType: !267, size: 32, offset: 288)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !741, file: !69, line: 1247, baseType: !1626, size: 64, offset: 2176)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !69, line: 60, flags: DIFlagFwdDecl)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !741, file: !69, line: 1251, baseType: !1629, size: 31872, offset: 2240)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !69, line: 403, size: 31872, elements: !1630)
!1630 = !{!1631, !1706, !1726, !1735, !1755, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1895, !1896, !1897, !1899, !1915, !1916}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1629, file: !69, line: 404, baseType: !1632, size: 1984)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !69, line: 259, size: 1984, elements: !1633)
!1633 = !{!1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1651, !1701}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1632, file: !69, line: 260, baseType: !163, size: 8)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1632, file: !69, line: 263, baseType: !163, size: 8, offset: 8)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1632, file: !69, line: 266, baseType: !163, size: 8, offset: 16)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1632, file: !69, line: 267, baseType: !163, size: 8, offset: 24)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1632, file: !69, line: 269, baseType: !163, size: 8, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1632, file: !69, line: 270, baseType: !163, size: 8, offset: 40)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1632, file: !69, line: 276, baseType: !163, size: 8, offset: 48)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1632, file: !69, line: 279, baseType: !163, size: 8, offset: 56)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1632, file: !69, line: 280, baseType: !176, size: 16, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1632, file: !69, line: 280, baseType: !176, size: 16, offset: 80)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1632, file: !69, line: 281, baseType: !267, size: 32, offset: 96)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1632, file: !69, line: 284, baseType: !163, size: 8, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1632, file: !69, line: 285, baseType: !163, size: 8, offset: 136)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1632, file: !69, line: 287, baseType: !1648, size: 48, offset: 144)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 48, elements: !1649)
!1649 = !{!1650}
!1650 = !DISubrange(count: 6)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1632, file: !69, line: 290, baseType: !1652, size: 1280, offset: 192)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1089, line: 174, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1089, line: 166, size: 1280, elements: !1654)
!1654 = !{!1655, !1656, !1657, !1658, !1659, !1660, !1661, !1700}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1653, file: !1089, line: 167, baseType: !178, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1653, file: !1089, line: 167, baseType: !178, size: 32, offset: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1653, file: !1089, line: 168, baseType: !193, size: 512, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1653, file: !1089, line: 169, baseType: !193, size: 512, offset: 576)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1653, file: !1089, line: 170, baseType: !267, size: 32, offset: 1088)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1653, file: !1089, line: 171, baseType: !267, size: 32, offset: 1120)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1653, file: !1089, line: 172, baseType: !1662, size: 64, offset: 1152)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1089, line: 72, size: 3072, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1669, !1670, !1671, !1696, !1697, !1698, !1699}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1663, file: !1089, line: 73, baseType: !178, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1663, file: !1089, line: 73, baseType: !178, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1663, file: !1089, line: 74, baseType: !178, size: 32, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1663, file: !1089, line: 75, baseType: !178, size: 32, offset: 96)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1663, file: !1089, line: 77, baseType: !1211, size: 128, offset: 128)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1663, file: !1089, line: 77, baseType: !1211, size: 128, offset: 256)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1663, file: !1089, line: 79, baseType: !1672, size: 2304, offset: 384)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1673, size: 2304, elements: !433)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1089, line: 67, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1089, line: 55, size: 576, elements: !1675)
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1692, !1693, !1694, !1695}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1674, file: !1089, line: 56, baseType: !176, size: 16)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1674, file: !1089, line: 56, baseType: !176, size: 16, offset: 16)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1674, file: !1089, line: 58, baseType: !267, size: 32, offset: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1674, file: !1089, line: 59, baseType: !267, size: 32, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1674, file: !1089, line: 59, baseType: !267, size: 32, offset: 96)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1674, file: !1089, line: 60, baseType: !730, size: 64, offset: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1674, file: !1089, line: 60, baseType: !730, size: 64, offset: 192)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1674, file: !1089, line: 61, baseType: !1684, size: 64, offset: 256)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1089, line: 47, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1089, line: 44, size: 96, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1686, file: !1089, line: 45, baseType: !267, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1686, file: !1089, line: 45, baseType: !267, size: 32, offset: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1686, file: !1089, line: 46, baseType: !176, size: 16, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1686, file: !1089, line: 46, baseType: !176, size: 16, offset: 80)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1674, file: !1089, line: 62, baseType: !1684, size: 64, offset: 320)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1674, file: !1089, line: 64, baseType: !1684, size: 64, offset: 384)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1674, file: !1089, line: 65, baseType: !730, size: 64, offset: 448)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1674, file: !1089, line: 66, baseType: !730, size: 64, offset: 512)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1663, file: !1089, line: 80, baseType: !351, size: 96, offset: 2688)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1663, file: !1089, line: 80, baseType: !351, size: 96, offset: 2784)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1663, file: !1089, line: 81, baseType: !351, size: 96, offset: 2880)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1663, file: !1089, line: 83, baseType: !351, size: 96, offset: 2976)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1653, file: !1089, line: 173, baseType: !148, size: 64, offset: 1216)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1632, file: !69, line: 291, baseType: !1702, size: 512, offset: 1472)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1089, line: 178, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1089, line: 176, size: 512, elements: !1704)
!1704 = !{!1705}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1703, file: !1089, line: 177, baseType: !193, size: 512)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1629, file: !69, line: 406, baseType: !1707, size: 64, offset: 1984)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !69, line: 80, size: 1472, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1708, file: !69, line: 81, baseType: !148, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1708, file: !69, line: 82, baseType: !148, size: 64, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1708, file: !69, line: 83, baseType: !7, size: 32, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1708, file: !69, line: 84, baseType: !7, size: 32, offset: 160)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1708, file: !69, line: 86, baseType: !7, size: 32, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1708, file: !69, line: 87, baseType: !7, size: 32, offset: 224)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1708, file: !69, line: 88, baseType: !7, size: 32, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1708, file: !69, line: 89, baseType: !7, size: 32, offset: 288)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1708, file: !69, line: 90, baseType: !7, size: 32, offset: 320)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1708, file: !69, line: 91, baseType: !7, size: 32, offset: 352)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1708, file: !69, line: 92, baseType: !7, size: 32, offset: 384)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1708, file: !69, line: 93, baseType: !7, size: 32, offset: 416)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1708, file: !69, line: 95, baseType: !1723, size: 1024, offset: 448)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 1024, elements: !1724)
!1724 = !{!1725}
!1725 = !DISubrange(count: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1629, file: !69, line: 407, baseType: !1727, size: 64, offset: 2048)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !69, line: 98, size: 1216, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1728, file: !69, line: 100, baseType: !148, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1728, file: !69, line: 101, baseType: !148, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1728, file: !69, line: 103, baseType: !7, size: 32, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1728, file: !69, line: 104, baseType: !7, size: 32, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1728, file: !69, line: 106, baseType: !1723, size: 1024, offset: 192)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1629, file: !69, line: 408, baseType: !1736, size: 512, offset: 2112)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !69, line: 109, size: 512, elements: !1737)
!1737 = !{!1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1736, file: !69, line: 111, baseType: !178, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1736, file: !69, line: 112, baseType: !178, size: 32, offset: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1736, file: !69, line: 115, baseType: !178, size: 32, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1736, file: !69, line: 116, baseType: !178, size: 32, offset: 96)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1736, file: !69, line: 117, baseType: !178, size: 32, offset: 128)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1736, file: !69, line: 118, baseType: !178, size: 32, offset: 160)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1736, file: !69, line: 119, baseType: !178, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1736, file: !69, line: 120, baseType: !178, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1736, file: !69, line: 121, baseType: !178, size: 32, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1736, file: !69, line: 122, baseType: !178, size: 32, offset: 288)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1736, file: !69, line: 125, baseType: !178, size: 32, offset: 320)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1736, file: !69, line: 126, baseType: !178, size: 32, offset: 352)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1736, file: !69, line: 127, baseType: !176, size: 16, offset: 384)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1736, file: !69, line: 128, baseType: !176, size: 16, offset: 400)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1736, file: !69, line: 129, baseType: !178, size: 32, offset: 416)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1736, file: !69, line: 130, baseType: !178, size: 32, offset: 448)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1736, file: !69, line: 131, baseType: !178, size: 32, offset: 480)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1629, file: !69, line: 409, baseType: !1756, size: 576, offset: 2624)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !69, line: 134, size: 576, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1756, file: !69, line: 135, baseType: !178, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1756, file: !69, line: 136, baseType: !178, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1756, file: !69, line: 137, baseType: !178, size: 32, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1756, file: !69, line: 138, baseType: !178, size: 32, offset: 96)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1756, file: !69, line: 139, baseType: !178, size: 32, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1756, file: !69, line: 140, baseType: !178, size: 32, offset: 160)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1756, file: !69, line: 141, baseType: !178, size: 32, offset: 192)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1756, file: !69, line: 142, baseType: !178, size: 32, offset: 224)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1756, file: !69, line: 143, baseType: !267, size: 32, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1756, file: !69, line: 144, baseType: !178, size: 32, offset: 288)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1756, file: !69, line: 145, baseType: !178, size: 32, offset: 320)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1756, file: !69, line: 147, baseType: !178, size: 32, offset: 352)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1756, file: !69, line: 148, baseType: !178, size: 32, offset: 384)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1756, file: !69, line: 149, baseType: !178, size: 32, offset: 416)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1756, file: !69, line: 150, baseType: !178, size: 32, offset: 448)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1756, file: !69, line: 151, baseType: !178, size: 32, offset: 480)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1756, file: !69, line: 152, baseType: !182, size: 64, offset: 512)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1629, file: !69, line: 411, baseType: !178, size: 32, offset: 3200)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1629, file: !69, line: 411, baseType: !178, size: 32, offset: 3232)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1629, file: !69, line: 411, baseType: !178, size: 32, offset: 3264)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1629, file: !69, line: 412, baseType: !267, size: 32, offset: 3296)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1629, file: !69, line: 413, baseType: !178, size: 32, offset: 3328)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1629, file: !69, line: 413, baseType: !178, size: 32, offset: 3360)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1629, file: !69, line: 415, baseType: !178, size: 32, offset: 3392)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1629, file: !69, line: 415, baseType: !178, size: 32, offset: 3424)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1629, file: !69, line: 416, baseType: !176, size: 16, offset: 3456)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1629, file: !69, line: 416, baseType: !176, size: 16, offset: 3472)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1629, file: !69, line: 418, baseType: !267, size: 32, offset: 3488)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1629, file: !69, line: 418, baseType: !267, size: 32, offset: 3520)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1629, file: !69, line: 421, baseType: !267, size: 32, offset: 3552)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1629, file: !69, line: 421, baseType: !267, size: 32, offset: 3584)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1629, file: !69, line: 421, baseType: !267, size: 32, offset: 3616)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1629, file: !69, line: 425, baseType: !176, size: 16, offset: 3648)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1629, file: !69, line: 425, baseType: !176, size: 16, offset: 3664)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1629, file: !69, line: 425, baseType: !176, size: 16, offset: 3680)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1629, file: !69, line: 426, baseType: !176, size: 16, offset: 3696)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1629, file: !69, line: 428, baseType: !176, size: 16, offset: 3712)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1629, file: !69, line: 428, baseType: !176, size: 16, offset: 3728)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1629, file: !69, line: 431, baseType: !178, size: 32, offset: 3744)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1629, file: !69, line: 433, baseType: !176, size: 16, offset: 3776)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1629, file: !69, line: 435, baseType: !176, size: 16, offset: 3792)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1629, file: !69, line: 437, baseType: !176, size: 16, offset: 3808)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1629, file: !69, line: 439, baseType: !176, size: 16, offset: 3824)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1629, file: !69, line: 441, baseType: !176, size: 16, offset: 3840)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1629, file: !69, line: 443, baseType: !176, size: 16, offset: 3856)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1629, file: !69, line: 449, baseType: !178, size: 32, offset: 3872)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1629, file: !69, line: 453, baseType: !178, size: 32, offset: 3904)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1629, file: !69, line: 458, baseType: !176, size: 16, offset: 3936)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1629, file: !69, line: 462, baseType: !176, size: 16, offset: 3952)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1629, file: !69, line: 467, baseType: !178, size: 32, offset: 3968)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1629, file: !69, line: 467, baseType: !178, size: 32, offset: 4000)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1629, file: !69, line: 469, baseType: !176, size: 16, offset: 4032)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1629, file: !69, line: 469, baseType: !176, size: 16, offset: 4048)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1629, file: !69, line: 469, baseType: !176, size: 16, offset: 4064)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1629, file: !69, line: 469, baseType: !176, size: 16, offset: 4080)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1629, file: !69, line: 474, baseType: !176, size: 16, offset: 4096)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1629, file: !69, line: 475, baseType: !163, size: 8, offset: 4112)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1629, file: !69, line: 476, baseType: !163, size: 8, offset: 4120)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1629, file: !69, line: 481, baseType: !178, size: 32, offset: 4128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1629, file: !69, line: 486, baseType: !178, size: 32, offset: 4160)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1629, file: !69, line: 491, baseType: !178, size: 32, offset: 4192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1629, file: !69, line: 496, baseType: !176, size: 16, offset: 4224)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1629, file: !69, line: 498, baseType: !176, size: 16, offset: 4240)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1629, file: !69, line: 501, baseType: !176, size: 16, offset: 4256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1629, file: !69, line: 502, baseType: !176, size: 16, offset: 4272)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1629, file: !69, line: 508, baseType: !176, size: 16, offset: 4288)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1629, file: !69, line: 513, baseType: !176, size: 16, offset: 4304)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1629, file: !69, line: 515, baseType: !176, size: 16, offset: 4320)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1629, file: !69, line: 515, baseType: !176, size: 16, offset: 4336)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1629, file: !69, line: 519, baseType: !1211, size: 128, offset: 4352)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1629, file: !69, line: 519, baseType: !1211, size: 128, offset: 4480)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1629, file: !69, line: 520, baseType: !1830, size: 128, offset: 4608)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1212, line: 89, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1212, line: 86, size: 128, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1836}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1831, file: !1212, line: 87, baseType: !178, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1831, file: !1212, line: 87, baseType: !178, size: 32, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1831, file: !1212, line: 88, baseType: !178, size: 32, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1831, file: !1212, line: 88, baseType: !178, size: 32, offset: 96)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1629, file: !69, line: 523, baseType: !203, size: 128, offset: 4736)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1629, file: !69, line: 524, baseType: !176, size: 16, offset: 4864)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1629, file: !69, line: 527, baseType: !176, size: 16, offset: 4880)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1629, file: !69, line: 532, baseType: !267, size: 32, offset: 4896)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1629, file: !69, line: 532, baseType: !267, size: 32, offset: 4928)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1629, file: !69, line: 534, baseType: !267, size: 32, offset: 4960)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1629, file: !69, line: 538, baseType: !267, size: 32, offset: 4992)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1629, file: !69, line: 542, baseType: !178, size: 32, offset: 5024)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1629, file: !69, line: 545, baseType: !267, size: 32, offset: 5056)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1629, file: !69, line: 545, baseType: !267, size: 32, offset: 5088)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1629, file: !69, line: 545, baseType: !267, size: 32, offset: 5120)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1629, file: !69, line: 548, baseType: !267, size: 32, offset: 5152)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1629, file: !69, line: 551, baseType: !176, size: 16, offset: 5184)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1629, file: !69, line: 551, baseType: !176, size: 16, offset: 5200)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1629, file: !69, line: 551, baseType: !176, size: 16, offset: 5216)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1629, file: !69, line: 551, baseType: !176, size: 16, offset: 5232)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1629, file: !69, line: 552, baseType: !176, size: 16, offset: 5248)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1629, file: !69, line: 552, baseType: !176, size: 16, offset: 5264)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1629, file: !69, line: 553, baseType: !267, size: 32, offset: 5280)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1629, file: !69, line: 553, baseType: !267, size: 32, offset: 5312)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1629, file: !69, line: 554, baseType: !176, size: 16, offset: 5344)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1629, file: !69, line: 554, baseType: !176, size: 16, offset: 5360)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1629, file: !69, line: 555, baseType: !267, size: 32, offset: 5376)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1629, file: !69, line: 555, baseType: !267, size: 32, offset: 5408)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1629, file: !69, line: 558, baseType: !162, size: 8192, offset: 5440)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1629, file: !69, line: 561, baseType: !178, size: 32, offset: 13632)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1629, file: !69, line: 562, baseType: !176, size: 16, offset: 13664)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1629, file: !69, line: 562, baseType: !176, size: 16, offset: 13680)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1629, file: !69, line: 565, baseType: !1866, size: 6144, offset: 13696)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 6144, elements: !1867)
!1867 = !{!1868}
!1868 = !DISubrange(count: 768)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1629, file: !69, line: 568, baseType: !432, size: 128, offset: 19840)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1629, file: !69, line: 569, baseType: !432, size: 128, offset: 19968)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1629, file: !69, line: 572, baseType: !163, size: 8, offset: 20096)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1629, file: !69, line: 573, baseType: !163, size: 8, offset: 20104)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1629, file: !69, line: 574, baseType: !163, size: 8, offset: 20112)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1629, file: !69, line: 575, baseType: !1415, size: 40, offset: 20120)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1629, file: !69, line: 578, baseType: !178, size: 32, offset: 20160)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1629, file: !69, line: 579, baseType: !176, size: 16, offset: 20192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1629, file: !69, line: 580, baseType: !176, size: 16, offset: 20208)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1629, file: !69, line: 581, baseType: !267, size: 32, offset: 20224)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1629, file: !69, line: 582, baseType: !267, size: 32, offset: 20256)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1629, file: !69, line: 585, baseType: !176, size: 16, offset: 20288)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1629, file: !69, line: 585, baseType: !176, size: 16, offset: 20304)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1629, file: !69, line: 586, baseType: !267, size: 32, offset: 20320)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1629, file: !69, line: 589, baseType: !176, size: 16, offset: 20352)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1629, file: !69, line: 589, baseType: !176, size: 16, offset: 20368)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1629, file: !69, line: 590, baseType: !178, size: 32, offset: 20384)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1629, file: !69, line: 593, baseType: !176, size: 16, offset: 20416)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1629, file: !69, line: 593, baseType: !176, size: 16, offset: 20432)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1629, file: !69, line: 594, baseType: !176, size: 16, offset: 20448)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1629, file: !69, line: 594, baseType: !176, size: 16, offset: 20464)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1629, file: !69, line: 595, baseType: !267, size: 32, offset: 20480)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1629, file: !69, line: 596, baseType: !267, size: 32, offset: 20512)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1629, file: !69, line: 597, baseType: !1893, size: 64, offset: 20544)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !63, line: 205, flags: DIFlagFwdDecl)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1629, file: !69, line: 600, baseType: !178, size: 32, offset: 20608)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1629, file: !69, line: 601, baseType: !267, size: 32, offset: 20640)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1629, file: !69, line: 604, baseType: !1898, size: 256, offset: 20672)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 256, elements: !463)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1629, file: !69, line: 607, baseType: !1900, size: 10880, offset: 20928)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !69, line: 364, size: 10880, elements: !1901)
!1901 = !{!1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1900, file: !69, line: 365, baseType: !1632, size: 1984)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1900, file: !69, line: 367, baseType: !162, size: 8192, offset: 1984)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1900, file: !69, line: 369, baseType: !176, size: 16, offset: 10176)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1900, file: !69, line: 369, baseType: !176, size: 16, offset: 10192)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1900, file: !69, line: 370, baseType: !176, size: 16, offset: 10208)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1900, file: !69, line: 370, baseType: !176, size: 16, offset: 10224)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1900, file: !69, line: 372, baseType: !267, size: 32, offset: 10240)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1900, file: !69, line: 373, baseType: !267, size: 32, offset: 10272)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1900, file: !69, line: 375, baseType: !1545, size: 24, offset: 10304)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1900, file: !69, line: 376, baseType: !163, size: 8, offset: 10328)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1900, file: !69, line: 378, baseType: !163, size: 8, offset: 10336)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1900, file: !69, line: 379, baseType: !1545, size: 24, offset: 10344)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1900, file: !69, line: 381, baseType: !193, size: 512, offset: 10368)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1629, file: !69, line: 609, baseType: !178, size: 32, offset: 31808)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1629, file: !69, line: 610, baseType: !178, size: 32, offset: 31840)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !741, file: !69, line: 1252, baseType: !1918, size: 256, offset: 34112)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !69, line: 158, size: 256, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1918, file: !69, line: 159, baseType: !178, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1918, file: !69, line: 160, baseType: !267, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1918, file: !69, line: 161, baseType: !267, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1918, file: !69, line: 162, baseType: !267, size: 32, offset: 96)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1918, file: !69, line: 163, baseType: !178, size: 32, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1918, file: !69, line: 164, baseType: !176, size: 16, offset: 160)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1918, file: !69, line: 165, baseType: !176, size: 16, offset: 176)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1918, file: !69, line: 166, baseType: !267, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1918, file: !69, line: 167, baseType: !267, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !741, file: !69, line: 1254, baseType: !203, size: 128, offset: 34368)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !741, file: !69, line: 1255, baseType: !203, size: 128, offset: 34496)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !741, file: !69, line: 1257, baseType: !148, size: 64, offset: 34624)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !741, file: !69, line: 1258, baseType: !148, size: 64, offset: 34688)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !741, file: !69, line: 1259, baseType: !148, size: 64, offset: 34752)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !741, file: !69, line: 1260, baseType: !148, size: 64, offset: 34816)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !741, file: !69, line: 1262, baseType: !148, size: 64, offset: 34880)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !741, file: !69, line: 1265, baseType: !1937, size: 64, offset: 34944)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !69, line: 1265, flags: DIFlagFwdDecl)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !741, file: !69, line: 1266, baseType: !176, size: 16, offset: 35008)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !741, file: !69, line: 1267, baseType: !176, size: 16, offset: 35024)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !741, file: !69, line: 1270, baseType: !178, size: 32, offset: 35040)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !741, file: !69, line: 1271, baseType: !203, size: 128, offset: 35072)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !741, file: !69, line: 1274, baseType: !1944, size: 128, offset: 35200)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !69, line: 650, size: 128, elements: !1945)
!1945 = !{!1946, !1947, !1948, !1949, !1950}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1944, file: !69, line: 651, baseType: !351, size: 96)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1944, file: !69, line: 652, baseType: !163, size: 8, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1944, file: !69, line: 652, baseType: !163, size: 8, offset: 104)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1944, file: !69, line: 652, baseType: !163, size: 8, offset: 112)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1944, file: !69, line: 652, baseType: !163, size: 8, offset: 120)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !741, file: !69, line: 1275, baseType: !1952, size: 1472, offset: 35328)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !69, line: 676, size: 1472, elements: !1953)
!1953 = !{!1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1966, !1976, !1977, !1978, !1979, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1952, file: !69, line: 679, baseType: !1944, size: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1952, file: !69, line: 680, baseType: !176, size: 16, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1952, file: !69, line: 680, baseType: !176, size: 16, offset: 144)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1952, file: !69, line: 680, baseType: !176, size: 16, offset: 160)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1952, file: !69, line: 680, baseType: !176, size: 16, offset: 176)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1952, file: !69, line: 681, baseType: !176, size: 16, offset: 192)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1952, file: !69, line: 681, baseType: !176, size: 16, offset: 208)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1952, file: !69, line: 681, baseType: !176, size: 16, offset: 224)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1952, file: !69, line: 681, baseType: !176, size: 16, offset: 240)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1952, file: !69, line: 682, baseType: !176, size: 16, offset: 256)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1952, file: !69, line: 682, baseType: !1965, size: 48, offset: 272)
!1965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 48, elements: !352)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1952, file: !69, line: 685, baseType: !1967, size: 192, offset: 320)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !69, line: 633, size: 192, elements: !1968)
!1968 = !{!1969, !1970, !1971, !1972, !1973, !1974, !1975}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1967, file: !69, line: 634, baseType: !176, size: 16)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1967, file: !69, line: 634, baseType: !176, size: 16, offset: 16)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1967, file: !69, line: 635, baseType: !176, size: 16, offset: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1967, file: !69, line: 635, baseType: !176, size: 16, offset: 48)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1967, file: !69, line: 636, baseType: !267, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1967, file: !69, line: 636, baseType: !267, size: 32, offset: 96)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1967, file: !69, line: 637, baseType: !1893, size: 64, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1952, file: !69, line: 686, baseType: !176, size: 16, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1952, file: !69, line: 686, baseType: !176, size: 16, offset: 528)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1952, file: !69, line: 687, baseType: !267, size: 32, offset: 544)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1952, file: !69, line: 688, baseType: !1980, size: 448, offset: 576)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !69, line: 674, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !69, line: 659, size: 448, elements: !1982)
!1982 = !{!1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1981, file: !69, line: 660, baseType: !267, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1981, file: !69, line: 661, baseType: !267, size: 32, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1981, file: !69, line: 662, baseType: !267, size: 32, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1981, file: !69, line: 663, baseType: !267, size: 32, offset: 96)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1981, file: !69, line: 664, baseType: !267, size: 32, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1981, file: !69, line: 665, baseType: !267, size: 32, offset: 160)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1981, file: !69, line: 666, baseType: !267, size: 32, offset: 192)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1981, file: !69, line: 667, baseType: !267, size: 32, offset: 224)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1981, file: !69, line: 668, baseType: !267, size: 32, offset: 256)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1981, file: !69, line: 669, baseType: !267, size: 32, offset: 288)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1981, file: !69, line: 670, baseType: !178, size: 32, offset: 320)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1981, file: !69, line: 671, baseType: !267, size: 32, offset: 352)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1981, file: !69, line: 672, baseType: !267, size: 32, offset: 384)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1981, file: !69, line: 673, baseType: !176, size: 16, offset: 416)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1981, file: !69, line: 673, baseType: !176, size: 16, offset: 432)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1952, file: !69, line: 692, baseType: !267, size: 32, offset: 1024)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1952, file: !69, line: 697, baseType: !267, size: 32, offset: 1056)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1952, file: !69, line: 703, baseType: !178, size: 32, offset: 1088)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1952, file: !69, line: 704, baseType: !176, size: 16, offset: 1120)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1952, file: !69, line: 704, baseType: !176, size: 16, offset: 1136)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1952, file: !69, line: 705, baseType: !176, size: 16, offset: 1152)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1952, file: !69, line: 706, baseType: !176, size: 16, offset: 1168)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1952, file: !69, line: 707, baseType: !176, size: 16, offset: 1184)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1952, file: !69, line: 708, baseType: !176, size: 16, offset: 1200)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1952, file: !69, line: 709, baseType: !176, size: 16, offset: 1216)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1952, file: !69, line: 709, baseType: !176, size: 16, offset: 1232)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1952, file: !69, line: 709, baseType: !176, size: 16, offset: 1248)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1952, file: !69, line: 709, baseType: !176, size: 16, offset: 1264)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1952, file: !69, line: 710, baseType: !176, size: 16, offset: 1280)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1952, file: !69, line: 711, baseType: !176, size: 16, offset: 1296)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1952, file: !69, line: 712, baseType: !267, size: 32, offset: 1312)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1952, file: !69, line: 713, baseType: !267, size: 32, offset: 1344)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1952, file: !69, line: 713, baseType: !267, size: 32, offset: 1376)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1952, file: !69, line: 713, baseType: !267, size: 32, offset: 1408)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1952, file: !69, line: 713, baseType: !267, size: 32, offset: 1440)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !741, file: !69, line: 1278, baseType: !2019, size: 64, offset: 36800)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !69, line: 1197, size: 64, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2019, file: !69, line: 1199, baseType: !267, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2019, file: !69, line: 1200, baseType: !163, size: 8, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2019, file: !69, line: 1201, baseType: !163, size: 8, offset: 40)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2019, file: !69, line: 1202, baseType: !176, size: 16, offset: 48)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !741, file: !69, line: 1281, baseType: !551, size: 64, offset: 36864)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !741, file: !69, line: 1284, baseType: !2027, size: 192, offset: 36928)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !69, line: 1208, size: 192, elements: !2028)
!2028 = !{!2029, !2030, !2031, !2032}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2027, file: !69, line: 1209, baseType: !351, size: 96)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2027, file: !69, line: 1210, baseType: !178, size: 32, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2027, file: !69, line: 1210, baseType: !178, size: 32, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2027, file: !69, line: 1210, baseType: !178, size: 32, offset: 160)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !741, file: !69, line: 1287, baseType: !2034, size: 64, offset: 37120)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !69, line: 62, flags: DIFlagFwdDecl)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !741, file: !69, line: 1289, baseType: !711, size: 64, offset: 37184)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !741, file: !69, line: 1290, baseType: !711, size: 64, offset: 37248)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !741, file: !69, line: 1293, baseType: !1652, size: 1280, offset: 37312)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !741, file: !69, line: 1294, baseType: !1702, size: 512, offset: 38592)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !741, file: !69, line: 1295, baseType: !1478, size: 512, offset: 39104)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !741, file: !69, line: 1298, baseType: !2042, size: 64, offset: 39616)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !69, line: 1298, flags: DIFlagFwdDecl)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !737, file: !736, line: 53, baseType: !178, size: 32, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !737, file: !736, line: 54, baseType: !178, size: 32, offset: 96)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !737, file: !736, line: 55, baseType: !178, size: 32, offset: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !737, file: !736, line: 55, baseType: !178, size: 32, offset: 160)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !737, file: !736, line: 56, baseType: !163, size: 8, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !737, file: !736, line: 56, baseType: !163, size: 8, offset: 200)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !737, file: !736, line: 57, baseType: !163, size: 8, offset: 208)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !737, file: !736, line: 57, baseType: !163, size: 8, offset: 216)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !737, file: !736, line: 59, baseType: !176, size: 16, offset: 224)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !737, file: !736, line: 59, baseType: !176, size: 16, offset: 240)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !737, file: !736, line: 59, baseType: !176, size: 16, offset: 256)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !737, file: !736, line: 61, baseType: !176, size: 16, offset: 272)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !737, file: !736, line: 63, baseType: !178, size: 32, offset: 288)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !485, file: !20, line: 293, baseType: !203, size: 128, offset: 11200)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !485, file: !20, line: 294, baseType: !2059, size: 64, offset: 11328)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !20, line: 113, baseType: !2061)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !20, line: 108, size: 256, elements: !2062)
!2062 = !{!2063, !2065, !2066, !2067, !2068}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2061, file: !20, line: 109, baseType: !2064, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2061, file: !20, line: 109, baseType: !2064, size: 64, offset: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2061, file: !20, line: 110, baseType: !484, size: 64, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2061, file: !20, line: 111, baseType: !178, size: 32, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2061, file: !20, line: 112, baseType: !267, size: 32, offset: 224)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !477, file: !305, line: 61, baseType: !2070, size: 64, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !305, line: 202, size: 3328, elements: !2072)
!2072 = !{!2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2153, !2154, !2183, !2203, !2211, !2212}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2071, file: !305, line: 203, baseType: !143, size: 960)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2071, file: !305, line: 204, baseType: !222, size: 64, offset: 960)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !2071, file: !305, line: 206, baseType: !267, size: 32, offset: 1024)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !2071, file: !305, line: 206, baseType: !267, size: 32, offset: 1056)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !2071, file: !305, line: 207, baseType: !267, size: 32, offset: 1088)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !2071, file: !305, line: 207, baseType: !267, size: 32, offset: 1120)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !2071, file: !305, line: 207, baseType: !267, size: 32, offset: 1152)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !2071, file: !305, line: 207, baseType: !267, size: 32, offset: 1184)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !2071, file: !305, line: 207, baseType: !267, size: 32, offset: 1216)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !2071, file: !305, line: 207, baseType: !267, size: 32, offset: 1248)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !2071, file: !305, line: 208, baseType: !267, size: 32, offset: 1280)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2071, file: !305, line: 208, baseType: !267, size: 32, offset: 1312)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !2071, file: !305, line: 211, baseType: !267, size: 32, offset: 1344)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !2071, file: !305, line: 211, baseType: !267, size: 32, offset: 1376)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !2071, file: !305, line: 211, baseType: !267, size: 32, offset: 1408)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !2071, file: !305, line: 211, baseType: !267, size: 32, offset: 1440)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !2071, file: !305, line: 211, baseType: !267, size: 32, offset: 1472)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !2071, file: !305, line: 214, baseType: !267, size: 32, offset: 1504)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !2071, file: !305, line: 214, baseType: !267, size: 32, offset: 1536)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !2071, file: !305, line: 217, baseType: !267, size: 32, offset: 1568)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !2071, file: !305, line: 218, baseType: !267, size: 32, offset: 1600)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !2071, file: !305, line: 219, baseType: !267, size: 32, offset: 1632)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !2071, file: !305, line: 220, baseType: !267, size: 32, offset: 1664)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !2071, file: !305, line: 221, baseType: !267, size: 32, offset: 1696)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !2071, file: !305, line: 222, baseType: !176, size: 16, offset: 1728)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !2071, file: !305, line: 222, baseType: !176, size: 16, offset: 1744)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !2071, file: !305, line: 224, baseType: !176, size: 16, offset: 1760)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !2071, file: !305, line: 224, baseType: !176, size: 16, offset: 1776)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !2071, file: !305, line: 227, baseType: !176, size: 16, offset: 1792)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !2071, file: !305, line: 227, baseType: !176, size: 16, offset: 1808)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !2071, file: !305, line: 229, baseType: !176, size: 16, offset: 1824)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2071, file: !305, line: 229, baseType: !176, size: 16, offset: 1840)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2071, file: !305, line: 230, baseType: !176, size: 16, offset: 1856)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2071, file: !305, line: 230, baseType: !176, size: 16, offset: 1872)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !2071, file: !305, line: 232, baseType: !267, size: 32, offset: 1888)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !2071, file: !305, line: 232, baseType: !267, size: 32, offset: 1920)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !2071, file: !305, line: 232, baseType: !267, size: 32, offset: 1952)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !2071, file: !305, line: 232, baseType: !267, size: 32, offset: 1984)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !2071, file: !305, line: 233, baseType: !178, size: 32, offset: 2016)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !2071, file: !305, line: 234, baseType: !178, size: 32, offset: 2048)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !2071, file: !305, line: 235, baseType: !176, size: 16, offset: 2080)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !2071, file: !305, line: 235, baseType: !176, size: 16, offset: 2096)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2071, file: !305, line: 236, baseType: !176, size: 16, offset: 2112)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2071, file: !305, line: 239, baseType: !176, size: 16, offset: 2128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2071, file: !305, line: 240, baseType: !178, size: 32, offset: 2144)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2071, file: !305, line: 241, baseType: !178, size: 32, offset: 2176)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2071, file: !305, line: 241, baseType: !178, size: 32, offset: 2208)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2071, file: !305, line: 241, baseType: !178, size: 32, offset: 2240)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !2071, file: !305, line: 243, baseType: !267, size: 32, offset: 2272)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !2071, file: !305, line: 243, baseType: !267, size: 32, offset: 2304)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2071, file: !305, line: 244, baseType: !267, size: 32, offset: 2336)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2071, file: !305, line: 246, baseType: !737, size: 320, offset: 2368)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2071, file: !305, line: 248, baseType: !844, size: 64, offset: 2688)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2071, file: !305, line: 249, baseType: !303, size: 64, offset: 2752)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2071, file: !305, line: 250, baseType: !1430, size: 64, offset: 2816)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2071, file: !305, line: 251, baseType: !440, size: 64, offset: 2880)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2071, file: !305, line: 252, baseType: !2130, size: 64, offset: 2944)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !305, line: 122, size: 1600, elements: !2132)
!2132 = !{!2133, !2134, !2135, !2137, !2138, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2131, file: !305, line: 123, baseType: !484, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2131, file: !305, line: 124, baseType: !1430, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2131, file: !305, line: 125, baseType: !2136, size: 384, offset: 128)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 384, elements: !1649)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2131, file: !305, line: 126, baseType: !595, size: 512, offset: 512)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2131, file: !305, line: 127, baseType: !2139, size: 288, offset: 1024)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 288, elements: !2140)
!2140 = !{!299, !299}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2131, file: !305, line: 128, baseType: !176, size: 16, offset: 1312)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2131, file: !305, line: 128, baseType: !176, size: 16, offset: 1328)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2131, file: !305, line: 129, baseType: !267, size: 32, offset: 1344)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2131, file: !305, line: 129, baseType: !267, size: 32, offset: 1376)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2131, file: !305, line: 130, baseType: !267, size: 32, offset: 1408)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2131, file: !305, line: 131, baseType: !7, size: 32, offset: 1440)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2131, file: !305, line: 132, baseType: !176, size: 16, offset: 1472)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2131, file: !305, line: 132, baseType: !176, size: 16, offset: 1488)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2131, file: !305, line: 133, baseType: !178, size: 32, offset: 1504)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2131, file: !305, line: 133, baseType: !178, size: 32, offset: 1536)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2131, file: !305, line: 134, baseType: !176, size: 16, offset: 1568)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2131, file: !305, line: 134, baseType: !176, size: 16, offset: 1584)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2071, file: !305, line: 253, baseType: !828, size: 64, offset: 3008)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2071, file: !305, line: 254, baseType: !2155, size: 64, offset: 3072)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !305, line: 137, size: 832, elements: !2157)
!2157 = !{!2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2156, file: !305, line: 138, baseType: !176, size: 16)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2156, file: !305, line: 140, baseType: !176, size: 16, offset: 16)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2156, file: !305, line: 141, baseType: !267, size: 32, offset: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2156, file: !305, line: 142, baseType: !267, size: 32, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2156, file: !305, line: 143, baseType: !176, size: 16, offset: 96)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2156, file: !305, line: 144, baseType: !176, size: 16, offset: 112)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2156, file: !305, line: 145, baseType: !178, size: 32, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2156, file: !305, line: 147, baseType: !178, size: 32, offset: 160)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2156, file: !305, line: 149, baseType: !484, size: 64, offset: 192)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2156, file: !305, line: 150, baseType: !178, size: 32, offset: 256)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2156, file: !305, line: 151, baseType: !176, size: 16, offset: 288)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2156, file: !305, line: 152, baseType: !176, size: 16, offset: 304)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2156, file: !305, line: 154, baseType: !148, size: 64, offset: 320)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2156, file: !305, line: 155, baseType: !819, size: 64, offset: 384)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2156, file: !305, line: 157, baseType: !267, size: 32, offset: 448)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2156, file: !305, line: 158, baseType: !176, size: 16, offset: 480)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2156, file: !305, line: 159, baseType: !176, size: 16, offset: 496)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2156, file: !305, line: 160, baseType: !176, size: 16, offset: 512)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2156, file: !305, line: 161, baseType: !1965, size: 48, offset: 528)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2156, file: !305, line: 162, baseType: !267, size: 32, offset: 576)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2156, file: !305, line: 164, baseType: !267, size: 32, offset: 608)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2156, file: !305, line: 164, baseType: !267, size: 32, offset: 640)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2156, file: !305, line: 164, baseType: !267, size: 32, offset: 672)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2156, file: !305, line: 165, baseType: !440, size: 64, offset: 704)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2156, file: !305, line: 167, baseType: !1662, size: 64, offset: 768)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2071, file: !305, line: 255, baseType: !2184, size: 64, offset: 3136)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !305, line: 170, size: 8704, elements: !2186)
!2186 = !{!2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2185, file: !305, line: 171, baseType: !1389, size: 96)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2185, file: !305, line: 172, baseType: !178, size: 32, offset: 96)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2185, file: !305, line: 173, baseType: !176, size: 16, offset: 128)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2185, file: !305, line: 174, baseType: !176, size: 16, offset: 144)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2185, file: !305, line: 175, baseType: !176, size: 16, offset: 160)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2185, file: !305, line: 176, baseType: !176, size: 16, offset: 176)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2185, file: !305, line: 177, baseType: !176, size: 16, offset: 192)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2185, file: !305, line: 178, baseType: !176, size: 16, offset: 208)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2185, file: !305, line: 179, baseType: !178, size: 32, offset: 224)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2185, file: !305, line: 181, baseType: !484, size: 64, offset: 256)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2185, file: !305, line: 182, baseType: !267, size: 32, offset: 320)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2185, file: !305, line: 183, baseType: !178, size: 32, offset: 352)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2185, file: !305, line: 184, baseType: !162, size: 8192, offset: 384)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2185, file: !305, line: 187, baseType: !819, size: 64, offset: 8576)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2185, file: !305, line: 188, baseType: !178, size: 32, offset: 8640)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2185, file: !305, line: 189, baseType: !178, size: 32, offset: 8672)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !2071, file: !305, line: 256, baseType: !2204, size: 64, offset: 3200)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !305, line: 193, size: 640, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2205, file: !305, line: 194, baseType: !484, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2205, file: !305, line: 195, baseType: !193, size: 512, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2205, file: !305, line: 197, baseType: !178, size: 32, offset: 576)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2205, file: !305, line: 198, baseType: !178, size: 32, offset: 608)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2071, file: !305, line: 258, baseType: !163, size: 8, offset: 3264)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2071, file: !305, line: 259, baseType: !1484, size: 56, offset: 3272)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !477, file: !305, line: 62, baseType: !193, size: 512, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !477, file: !305, line: 64, baseType: !163, size: 8, offset: 704)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !477, file: !305, line: 64, baseType: !163, size: 8, offset: 712)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !477, file: !305, line: 64, baseType: !163, size: 8, offset: 720)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !477, file: !305, line: 64, baseType: !163, size: 8, offset: 728)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !477, file: !305, line: 65, baseType: !351, size: 96, offset: 736)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !477, file: !305, line: 65, baseType: !351, size: 96, offset: 832)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !477, file: !305, line: 65, baseType: !267, size: 32, offset: 928)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !477, file: !305, line: 67, baseType: !176, size: 16, offset: 960)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !477, file: !305, line: 67, baseType: !176, size: 16, offset: 976)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !477, file: !305, line: 67, baseType: !176, size: 16, offset: 992)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !477, file: !305, line: 67, baseType: !176, size: 16, offset: 1008)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !477, file: !305, line: 68, baseType: !176, size: 16, offset: 1024)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !477, file: !305, line: 68, baseType: !176, size: 16, offset: 1040)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !477, file: !305, line: 69, baseType: !163, size: 8, offset: 1056)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !477, file: !305, line: 69, baseType: !1484, size: 56, offset: 1064)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !477, file: !305, line: 70, baseType: !267, size: 32, offset: 1120)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !477, file: !305, line: 70, baseType: !267, size: 32, offset: 1152)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !477, file: !305, line: 70, baseType: !267, size: 32, offset: 1184)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !477, file: !305, line: 70, baseType: !267, size: 32, offset: 1216)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !477, file: !305, line: 71, baseType: !267, size: 32, offset: 1248)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !477, file: !305, line: 71, baseType: !267, size: 32, offset: 1280)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !477, file: !305, line: 74, baseType: !267, size: 32, offset: 1312)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !477, file: !305, line: 74, baseType: !267, size: 32, offset: 1344)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !477, file: !305, line: 77, baseType: !267, size: 32, offset: 1376)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !477, file: !305, line: 77, baseType: !267, size: 32, offset: 1408)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !477, file: !305, line: 77, baseType: !267, size: 32, offset: 1440)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !477, file: !305, line: 78, baseType: !267, size: 32, offset: 1472)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !477, file: !305, line: 78, baseType: !267, size: 32, offset: 1504)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !477, file: !305, line: 78, baseType: !267, size: 32, offset: 1536)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !477, file: !305, line: 79, baseType: !267, size: 32, offset: 1568)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !477, file: !305, line: 79, baseType: !267, size: 32, offset: 1600)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !477, file: !305, line: 79, baseType: !267, size: 32, offset: 1632)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !477, file: !305, line: 79, baseType: !267, size: 32, offset: 1664)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !477, file: !305, line: 80, baseType: !267, size: 32, offset: 1696)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !477, file: !305, line: 80, baseType: !267, size: 32, offset: 1728)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !477, file: !305, line: 80, baseType: !267, size: 32, offset: 1760)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !477, file: !305, line: 81, baseType: !267, size: 32, offset: 1792)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !477, file: !305, line: 81, baseType: !267, size: 32, offset: 1824)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !477, file: !305, line: 81, baseType: !267, size: 32, offset: 1856)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !477, file: !305, line: 82, baseType: !267, size: 32, offset: 1888)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !477, file: !305, line: 82, baseType: !267, size: 32, offset: 1920)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !477, file: !305, line: 82, baseType: !267, size: 32, offset: 1952)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !477, file: !305, line: 85, baseType: !267, size: 32, offset: 1984)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !477, file: !305, line: 85, baseType: !267, size: 32, offset: 2016)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !477, file: !305, line: 85, baseType: !267, size: 32, offset: 2048)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !477, file: !305, line: 85, baseType: !267, size: 32, offset: 2080)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !477, file: !305, line: 86, baseType: !267, size: 32, offset: 2112)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !477, file: !305, line: 86, baseType: !267, size: 32, offset: 2144)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !477, file: !305, line: 86, baseType: !267, size: 32, offset: 2176)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !477, file: !305, line: 86, baseType: !267, size: 32, offset: 2208)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !477, file: !305, line: 87, baseType: !267, size: 32, offset: 2240)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !477, file: !305, line: 87, baseType: !267, size: 32, offset: 2272)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !477, file: !305, line: 87, baseType: !267, size: 32, offset: 2304)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !477, file: !305, line: 87, baseType: !267, size: 32, offset: 2336)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !477, file: !305, line: 90, baseType: !267, size: 32, offset: 2368)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !477, file: !305, line: 93, baseType: !267, size: 32, offset: 2400)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !477, file: !305, line: 93, baseType: !267, size: 32, offset: 2432)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !477, file: !305, line: 93, baseType: !267, size: 32, offset: 2464)
!2272 = !{!2273}
!2273 = !DISubrange(count: 18)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !313, file: !314, line: 168, baseType: !844, size: 64, offset: 6144)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !313, file: !314, line: 169, baseType: !303, size: 64, offset: 6208)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !313, file: !314, line: 170, baseType: !669, size: 64, offset: 6272)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !313, file: !314, line: 171, baseType: !828, size: 64, offset: 6336)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !313, file: !314, line: 174, baseType: !267, size: 32, offset: 6400)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !313, file: !314, line: 174, baseType: !267, size: 32, offset: 6432)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !313, file: !314, line: 174, baseType: !267, size: 32, offset: 6464)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !313, file: !314, line: 175, baseType: !267, size: 32, offset: 6496)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !313, file: !314, line: 175, baseType: !267, size: 32, offset: 6528)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !313, file: !314, line: 176, baseType: !176, size: 16, offset: 6560)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !313, file: !314, line: 176, baseType: !176, size: 16, offset: 6576)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !313, file: !314, line: 179, baseType: !351, size: 96, offset: 6592)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !313, file: !314, line: 179, baseType: !351, size: 96, offset: 6688)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !313, file: !314, line: 180, baseType: !267, size: 32, offset: 6784)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !313, file: !314, line: 180, baseType: !267, size: 32, offset: 6816)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !313, file: !314, line: 180, baseType: !267, size: 32, offset: 6848)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !313, file: !314, line: 181, baseType: !267, size: 32, offset: 6880)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !313, file: !314, line: 181, baseType: !267, size: 32, offset: 6912)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !313, file: !314, line: 182, baseType: !267, size: 32, offset: 6944)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !313, file: !314, line: 182, baseType: !267, size: 32, offset: 6976)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !313, file: !314, line: 183, baseType: !176, size: 16, offset: 7008)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !313, file: !314, line: 183, baseType: !176, size: 16, offset: 7024)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !313, file: !314, line: 185, baseType: !178, size: 32, offset: 7040)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !313, file: !314, line: 186, baseType: !176, size: 16, offset: 7072)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !313, file: !314, line: 187, baseType: !176, size: 16, offset: 7088)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !313, file: !314, line: 190, baseType: !432, size: 128, offset: 7104)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !313, file: !314, line: 191, baseType: !176, size: 16, offset: 7232)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !313, file: !314, line: 192, baseType: !176, size: 16, offset: 7248)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !313, file: !314, line: 195, baseType: !176, size: 16, offset: 7264)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !313, file: !314, line: 196, baseType: !176, size: 16, offset: 7280)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !313, file: !314, line: 197, baseType: !176, size: 16, offset: 7296)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !313, file: !314, line: 198, baseType: !1965, size: 48, offset: 7312)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !313, file: !314, line: 200, baseType: !2307, size: 64, offset: 7360)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !314, line: 86, size: 192, elements: !2309)
!2309 = !{!2310, !2311, !2312, !2313}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2308, file: !314, line: 87, baseType: !1430, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2308, file: !314, line: 88, baseType: !213, size: 64, offset: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2308, file: !314, line: 89, baseType: !178, size: 32, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2308, file: !314, line: 90, baseType: !178, size: 32, offset: 160)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !313, file: !314, line: 202, baseType: !203, size: 128, offset: 7424)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !218, file: !217, line: 67, baseType: !2316, size: 64, offset: 1280)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !118, line: 154, size: 64, elements: !2318)
!2318 = !{!2319, !2320}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2317, file: !118, line: 155, baseType: !178, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2317, file: !118, line: 156, baseType: !178, size: 32, offset: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !218, file: !217, line: 71, baseType: !2322, size: 64, offset: 1344)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !118, line: 79, size: 96, elements: !2324)
!2324 = !{!2325, !2326, !2327, !2328, !2329}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !2323, file: !118, line: 81, baseType: !178, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2323, file: !118, line: 82, baseType: !178, size: 32, offset: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2323, file: !118, line: 83, baseType: !176, size: 16, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2323, file: !118, line: 84, baseType: !163, size: 8, offset: 80)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2323, file: !118, line: 84, baseType: !163, size: 8, offset: 88)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !218, file: !217, line: 72, baseType: !2331, size: 64, offset: 1408)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !118, line: 93, size: 128, elements: !2333)
!2333 = !{!2334, !2335, !2336, !2337, !2338, !2339}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2332, file: !118, line: 94, baseType: !1430, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2332, file: !118, line: 95, baseType: !163, size: 8, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2332, file: !118, line: 95, baseType: !163, size: 8, offset: 72)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2332, file: !118, line: 96, baseType: !176, size: 16, offset: 80)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2332, file: !118, line: 96, baseType: !176, size: 16, offset: 96)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2332, file: !118, line: 96, baseType: !176, size: 16, offset: 112)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !218, file: !217, line: 73, baseType: !2341, size: 64, offset: 1472)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !118, line: 88, size: 64, elements: !2343)
!2343 = !{!2344, !2345}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2342, file: !118, line: 89, baseType: !7, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2342, file: !118, line: 90, baseType: !7, size: 32, offset: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !218, file: !217, line: 74, baseType: !2347, size: 64, offset: 1536)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 64)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !118, line: 109, size: 96, elements: !2349)
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2348, file: !118, line: 110, baseType: !730, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2348, file: !118, line: 111, baseType: !178, size: 32, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !218, file: !217, line: 75, baseType: !2353, size: 64, offset: 1600)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !118, line: 129, size: 32, elements: !2355)
!2355 = !{!2356, !2357, !2358, !2359}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2354, file: !118, line: 130, baseType: !163, size: 8)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2354, file: !118, line: 130, baseType: !163, size: 8, offset: 8)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2354, file: !118, line: 130, baseType: !163, size: 8, offset: 16)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2354, file: !118, line: 130, baseType: !163, size: 8, offset: 24)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !218, file: !217, line: 80, baseType: !2361, size: 64, offset: 1664)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !118, line: 42, size: 160, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2362, file: !118, line: 43, baseType: !7, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2362, file: !118, line: 43, baseType: !7, size: 32, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2362, file: !118, line: 43, baseType: !7, size: 32, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2362, file: !118, line: 43, baseType: !7, size: 32, offset: 96)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2362, file: !118, line: 44, baseType: !176, size: 16, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !2362, file: !118, line: 45, baseType: !163, size: 8, offset: 144)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2362, file: !118, line: 45, baseType: !163, size: 8, offset: 152)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !218, file: !217, line: 81, baseType: !2372, size: 64, offset: 1728)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !118, line: 160, size: 384, elements: !2374)
!2374 = !{!2375, !2378, !2379, !2380, !2381, !2382, !2383}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2373, file: !118, line: 161, baseType: !2376, size: 256)
!2376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 256, elements: !2377)
!2377 = !{!434, !732}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2373, file: !118, line: 162, baseType: !1430, size: 64, offset: 256)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2373, file: !118, line: 163, baseType: !163, size: 8, offset: 320)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2373, file: !118, line: 163, baseType: !163, size: 8, offset: 328)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2373, file: !118, line: 164, baseType: !176, size: 16, offset: 336)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2373, file: !118, line: 164, baseType: !176, size: 16, offset: 352)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2373, file: !118, line: 164, baseType: !176, size: 16, offset: 368)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !218, file: !217, line: 82, baseType: !2385, size: 64, offset: 1792)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !217, line: 136, size: 512, elements: !2387)
!2387 = !{!2388, !2389, !2390, !2392, !2393, !2394, !2395, !2396}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2386, file: !217, line: 137, baseType: !148, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2386, file: !217, line: 138, baseType: !2376, size: 256, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2386, file: !217, line: 139, baseType: !2391, size: 128, offset: 320)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !433)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2386, file: !217, line: 140, baseType: !163, size: 8, offset: 448)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2386, file: !217, line: 140, baseType: !163, size: 8, offset: 456)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2386, file: !217, line: 141, baseType: !176, size: 16, offset: 464)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2386, file: !217, line: 141, baseType: !176, size: 16, offset: 480)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2386, file: !217, line: 141, baseType: !176, size: 16, offset: 496)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !218, file: !217, line: 83, baseType: !2398, size: 64, offset: 1856)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !118, line: 65, size: 160, elements: !2400)
!2400 = !{!2401, !2402, !2403, !2404}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2399, file: !118, line: 66, baseType: !351, size: 96)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2399, file: !118, line: 67, baseType: !1965, size: 48, offset: 96)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2399, file: !118, line: 68, baseType: !163, size: 8, offset: 144)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !2399, file: !118, line: 68, baseType: !163, size: 8, offset: 152)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !218, file: !217, line: 84, baseType: !2406, size: 64, offset: 1920)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !118, line: 48, size: 96, elements: !2408)
!2408 = !{!2409, !2410, !2411, !2412, !2413}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2407, file: !118, line: 49, baseType: !7, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2407, file: !118, line: 49, baseType: !7, size: 32, offset: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !2407, file: !118, line: 50, baseType: !163, size: 8, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !2407, file: !118, line: 50, baseType: !163, size: 8, offset: 72)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2407, file: !118, line: 51, baseType: !176, size: 16, offset: 80)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !218, file: !217, line: 85, baseType: !1368, size: 64, offset: 1984)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !218, file: !217, line: 89, baseType: !2416, size: 64, offset: 2048)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !118, line: 74, size: 32, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2417, file: !118, line: 75, baseType: !163, size: 8)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2417, file: !118, line: 75, baseType: !163, size: 8, offset: 8)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2417, file: !118, line: 75, baseType: !163, size: 8, offset: 16)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2417, file: !118, line: 75, baseType: !163, size: 8, offset: 24)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !218, file: !217, line: 90, baseType: !2424, size: 64, offset: 2112)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !218, file: !217, line: 93, baseType: !2426, size: 64, offset: 2176)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !217, line: 93, flags: DIFlagFwdDecl)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !218, file: !217, line: 95, baseType: !2429, size: 1600, offset: 2240)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !74, line: 64, size: 1600, elements: !2430)
!2430 = !{!2431, !2446, !2450, !2451, !2452, !2453, !2456}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2429, file: !74, line: 65, baseType: !2432, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !74, line: 53, baseType: !2434)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !74, line: 42, size: 832, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2434, file: !74, line: 43, baseType: !178, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2434, file: !74, line: 44, baseType: !178, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2434, file: !74, line: 45, baseType: !178, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2434, file: !74, line: 46, baseType: !178, size: 32, offset: 96)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !2434, file: !74, line: 47, baseType: !178, size: 32, offset: 128)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !2434, file: !74, line: 48, baseType: !178, size: 32, offset: 160)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !2434, file: !74, line: 49, baseType: !178, size: 32, offset: 192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2434, file: !74, line: 50, baseType: !178, size: 32, offset: 224)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2434, file: !74, line: 51, baseType: !193, size: 512, offset: 256)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2434, file: !74, line: 52, baseType: !148, size: 64, offset: 768)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !2429, file: !74, line: 66, baseType: !2447, size: 1312, offset: 64)
!2447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 1312, elements: !2448)
!2448 = !{!2449}
!2449 = !DISubrange(count: 41)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !2429, file: !74, line: 69, baseType: !178, size: 32, offset: 1376)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !2429, file: !74, line: 69, baseType: !178, size: 32, offset: 1408)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !2429, file: !74, line: 70, baseType: !178, size: 32, offset: 1440)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2429, file: !74, line: 71, baseType: !2454, size: 64, offset: 1472)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !74, line: 71, flags: DIFlagFwdDecl)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !2429, file: !74, line: 72, baseType: !2457, size: 64, offset: 1536)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !74, line: 59, baseType: !2459)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !74, line: 57, size: 8192, elements: !2460)
!2460 = !{!2461}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !2459, file: !74, line: 58, baseType: !162, size: 8192)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !218, file: !217, line: 95, baseType: !2429, size: 1600, offset: 3840)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !218, file: !217, line: 95, baseType: !2429, size: 1600, offset: 5440)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !218, file: !217, line: 98, baseType: !2429, size: 1600, offset: 7040)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !218, file: !217, line: 98, baseType: !2429, size: 1600, offset: 8640)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !218, file: !217, line: 101, baseType: !178, size: 32, offset: 10240)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !218, file: !217, line: 101, baseType: !178, size: 32, offset: 10272)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !218, file: !217, line: 101, baseType: !178, size: 32, offset: 10304)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !218, file: !217, line: 101, baseType: !178, size: 32, offset: 10336)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !218, file: !217, line: 104, baseType: !178, size: 32, offset: 10368)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !218, file: !217, line: 104, baseType: !178, size: 32, offset: 10400)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !218, file: !217, line: 111, baseType: !178, size: 32, offset: 10432)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !218, file: !217, line: 114, baseType: !351, size: 96, offset: 10464)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !218, file: !217, line: 115, baseType: !351, size: 96, offset: 10560)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !218, file: !217, line: 116, baseType: !351, size: 96, offset: 10656)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !218, file: !217, line: 118, baseType: !178, size: 32, offset: 10752)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !218, file: !217, line: 119, baseType: !176, size: 16, offset: 10784)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !218, file: !217, line: 119, baseType: !176, size: 16, offset: 10800)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !218, file: !217, line: 120, baseType: !267, size: 32, offset: 10816)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !218, file: !217, line: 121, baseType: !178, size: 32, offset: 10848)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !218, file: !217, line: 124, baseType: !163, size: 8, offset: 10880)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !218, file: !217, line: 124, baseType: !163, size: 8, offset: 10888)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !218, file: !217, line: 126, baseType: !163, size: 8, offset: 10896)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !218, file: !217, line: 126, baseType: !163, size: 8, offset: 10904)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !218, file: !217, line: 127, baseType: !163, size: 8, offset: 10912)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !218, file: !217, line: 128, baseType: !163, size: 8, offset: 10920)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !218, file: !217, line: 130, baseType: !176, size: 16, offset: 10928)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !218, file: !217, line: 132, baseType: !2489, size: 64, offset: 10944)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !118, line: 233, size: 3584, elements: !2491)
!2491 = !{!2492, !2493, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2506, !2507, !2508}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !2490, file: !118, line: 234, baseType: !203, size: 128)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2490, file: !118, line: 235, baseType: !2494, size: 64, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !118, line: 69, baseType: !2399)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !2490, file: !118, line: 237, baseType: !1171, size: 8, offset: 192)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2490, file: !118, line: 237, baseType: !1171, size: 8, offset: 200)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !2490, file: !118, line: 237, baseType: !1171, size: 8, offset: 208)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !2490, file: !118, line: 237, baseType: !1171, size: 8, offset: 216)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !2490, file: !118, line: 237, baseType: !1171, size: 8, offset: 224)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !2490, file: !118, line: 237, baseType: !1171, size: 8, offset: 232)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !2490, file: !118, line: 238, baseType: !1171, size: 8, offset: 240)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2490, file: !118, line: 238, baseType: !1171, size: 8, offset: 248)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2490, file: !118, line: 241, baseType: !2505, size: 1600, offset: 256)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !74, line: 73, baseType: !2429)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !2490, file: !118, line: 242, baseType: !2505, size: 1600, offset: 1856)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !2490, file: !118, line: 243, baseType: !214, size: 64, offset: 3456)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !2490, file: !118, line: 244, baseType: !213, size: 64, offset: 3520)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !309, line: 273, baseType: !2511)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !309, line: 193, size: 4224, elements: !2512)
!2512 = !{!2513, !2514, !2515, !2516, !2517, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2578, !2579, !2582, !2583, !2584, !2585, !2593, !2594, !2595, !2604, !2605, !2606, !2607, !2608, !2609, !2610}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2511, file: !309, line: 194, baseType: !143, size: 960)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2511, file: !309, line: 195, baseType: !222, size: 64, offset: 960)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2511, file: !309, line: 197, baseType: !292, size: 64, offset: 1024)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !2511, file: !309, line: 199, baseType: !203, size: 128, offset: 1088)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !2511, file: !309, line: 201, baseType: !2518, size: 64, offset: 1216)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !309, line: 191, baseType: !2520)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !309, line: 180, size: 256, elements: !2521)
!2521 = !{!2522, !2523, !2524, !2525}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !2520, file: !309, line: 182, baseType: !203, size: 128)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !2520, file: !309, line: 185, baseType: !514, size: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2520, file: !309, line: 188, baseType: !178, size: 32, offset: 192)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2520, file: !309, line: 190, baseType: !2526, size: 32, offset: 224)
!2526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 32, elements: !433)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !2511, file: !309, line: 203, baseType: !484, size: 64, offset: 1280)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !2511, file: !309, line: 203, baseType: !484, size: 64, offset: 1344)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !2511, file: !309, line: 203, baseType: !484, size: 64, offset: 1408)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2511, file: !309, line: 204, baseType: !303, size: 64, offset: 1472)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2511, file: !309, line: 205, baseType: !307, size: 64, offset: 1536)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2511, file: !309, line: 206, baseType: !311, size: 64, offset: 1600)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2511, file: !309, line: 209, baseType: !351, size: 96, offset: 1664)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2511, file: !309, line: 210, baseType: !351, size: 96, offset: 1760)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2511, file: !309, line: 211, baseType: !351, size: 96, offset: 1856)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2511, file: !309, line: 213, baseType: !176, size: 16, offset: 1952)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !2511, file: !309, line: 215, baseType: !176, size: 16, offset: 1968)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !2511, file: !309, line: 216, baseType: !176, size: 16, offset: 1984)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !2511, file: !309, line: 216, baseType: !176, size: 16, offset: 2000)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !2511, file: !309, line: 217, baseType: !267, size: 32, offset: 2016)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !2511, file: !309, line: 217, baseType: !267, size: 32, offset: 2048)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !2511, file: !309, line: 219, baseType: !178, size: 32, offset: 2080)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !2511, file: !309, line: 220, baseType: !176, size: 16, offset: 2112)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2511, file: !309, line: 220, baseType: !176, size: 16, offset: 2128)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2511, file: !309, line: 221, baseType: !178, size: 32, offset: 2144)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2511, file: !309, line: 222, baseType: !267, size: 32, offset: 2176)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !2511, file: !309, line: 222, baseType: !267, size: 32, offset: 2208)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !2511, file: !309, line: 222, baseType: !267, size: 32, offset: 2240)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !2511, file: !309, line: 225, baseType: !176, size: 16, offset: 2272)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !2511, file: !309, line: 225, baseType: !176, size: 16, offset: 2288)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !2511, file: !309, line: 226, baseType: !176, size: 16, offset: 2304)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !2511, file: !309, line: 226, baseType: !176, size: 16, offset: 2320)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !2511, file: !309, line: 229, baseType: !178, size: 32, offset: 2336)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !2511, file: !309, line: 231, baseType: !178, size: 32, offset: 2368)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2511, file: !309, line: 233, baseType: !2526, size: 32, offset: 2400)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !2511, file: !309, line: 236, baseType: !176, size: 16, offset: 2432)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !2511, file: !309, line: 237, baseType: !163, size: 8, offset: 2448)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2511, file: !309, line: 237, baseType: !163, size: 8, offset: 2456)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !2511, file: !309, line: 238, baseType: !267, size: 32, offset: 2464)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !2511, file: !309, line: 238, baseType: !267, size: 32, offset: 2496)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !2511, file: !309, line: 238, baseType: !267, size: 32, offset: 2528)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !2511, file: !309, line: 238, baseType: !267, size: 32, offset: 2560)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !2511, file: !309, line: 238, baseType: !267, size: 32, offset: 2592)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !2511, file: !309, line: 238, baseType: !267, size: 32, offset: 2624)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !2511, file: !309, line: 238, baseType: !267, size: 32, offset: 2656)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2511, file: !309, line: 239, baseType: !267, size: 32, offset: 2688)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2511, file: !309, line: 239, baseType: !267, size: 32, offset: 2720)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !2511, file: !309, line: 240, baseType: !267, size: 32, offset: 2752)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2511, file: !309, line: 244, baseType: !178, size: 32, offset: 2784)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !2511, file: !309, line: 245, baseType: !178, size: 32, offset: 2816)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !2511, file: !309, line: 245, baseType: !178, size: 32, offset: 2848)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !2511, file: !309, line: 248, baseType: !178, size: 32, offset: 2880)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2511, file: !309, line: 249, baseType: !178, size: 32, offset: 2912)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2511, file: !309, line: 250, baseType: !213, size: 64, offset: 2944)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !2511, file: !309, line: 251, baseType: !2576, size: 64, offset: 3008)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !309, line: 50, flags: DIFlagFwdDecl)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2511, file: !309, line: 253, baseType: !193, size: 512, offset: 3072)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2511, file: !309, line: 254, baseType: !2580, size: 64, offset: 3584)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !309, line: 47, flags: DIFlagFwdDecl)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !2511, file: !309, line: 255, baseType: !2580, size: 64, offset: 3648)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !2511, file: !309, line: 256, baseType: !2580, size: 64, offset: 3712)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !2511, file: !309, line: 257, baseType: !2580, size: 64, offset: 3776)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !2511, file: !309, line: 259, baseType: !2586, size: 64, offset: 3840)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !309, line: 176, size: 128, elements: !2588)
!2588 = !{!2589, !2590, !2591, !2592}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2587, file: !309, line: 177, baseType: !267, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2587, file: !309, line: 177, baseType: !267, size: 32, offset: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2587, file: !309, line: 177, baseType: !267, size: 32, offset: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2587, file: !309, line: 177, baseType: !267, size: 32, offset: 96)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !2511, file: !309, line: 260, baseType: !178, size: 32, offset: 3904)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !2511, file: !309, line: 260, baseType: !178, size: 32, offset: 3936)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !2511, file: !309, line: 262, baseType: !2596, size: 64, offset: 3968)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !309, line: 168, size: 64, elements: !2598)
!2598 = !{!2599, !2600, !2601, !2602, !2603}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !2597, file: !309, line: 169, baseType: !176, size: 16)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2597, file: !309, line: 170, baseType: !176, size: 16, offset: 16)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2597, file: !309, line: 171, baseType: !163, size: 8, offset: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2597, file: !309, line: 172, baseType: !163, size: 8, offset: 40)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2597, file: !309, line: 173, baseType: !176, size: 16, offset: 48)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !2511, file: !309, line: 263, baseType: !2597, size: 64, offset: 4032)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2511, file: !309, line: 267, baseType: !267, size: 32, offset: 4096)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !2511, file: !309, line: 268, baseType: !267, size: 32, offset: 4128)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !2511, file: !309, line: 268, baseType: !267, size: 32, offset: 4160)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !2511, file: !309, line: 269, baseType: !163, size: 8, offset: 4192)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !2511, file: !309, line: 269, baseType: !163, size: 8, offset: 4200)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2511, file: !309, line: 271, baseType: !1613, size: 16, offset: 4208)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaBall", file: !2613, line: 95, baseType: !2614)
!2613 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meta_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaBall", file: !2613, line: 64, size: 1984, elements: !2615)
!2615 = !{!2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2614, file: !2613, line: 65, baseType: !143, size: 960)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2614, file: !2613, line: 66, baseType: !222, size: 64, offset: 960)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !2614, file: !2613, line: 68, baseType: !203, size: 128, offset: 1024)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !2614, file: !2613, line: 69, baseType: !203, size: 128, offset: 1152)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "editelems", scope: !2614, file: !2613, line: 70, baseType: !722, size: 64, offset: 1280)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2614, file: !2613, line: 71, baseType: !303, size: 64, offset: 1344)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2614, file: !2613, line: 74, baseType: !311, size: 64, offset: 1408)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2614, file: !2613, line: 76, baseType: !163, size: 8, offset: 1472)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !2614, file: !2613, line: 76, baseType: !163, size: 8, offset: 1480)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2614, file: !2613, line: 77, baseType: !176, size: 16, offset: 1488)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !2614, file: !2613, line: 78, baseType: !176, size: 16, offset: 1504)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2614, file: !2613, line: 78, baseType: !176, size: 16, offset: 1520)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2614, file: !2613, line: 81, baseType: !351, size: 96, offset: 1536)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2614, file: !2613, line: 82, baseType: !351, size: 96, offset: 1632)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2614, file: !2613, line: 83, baseType: !351, size: 96, offset: 1728)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "wiresize", scope: !2614, file: !2613, line: 85, baseType: !267, size: 32, offset: 1824)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "rendersize", scope: !2614, file: !2613, line: 85, baseType: !267, size: 32, offset: 1856)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "thresh", scope: !2614, file: !2613, line: 90, baseType: !267, size: 32, offset: 1888)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "lastelem", scope: !2614, file: !2613, line: 94, baseType: !2635, size: 64, offset: 1920)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaElem", file: !2613, line: 62, baseType: !2637)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaElem", file: !2613, line: 44, size: 832, elements: !2638)
!2638 = !{!2639, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2637, file: !2613, line: 45, baseType: !2640, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2637, file: !2613, line: 45, baseType: !2640, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2637, file: !2613, line: 47, baseType: !292, size: 64, offset: 128)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2637, file: !2613, line: 49, baseType: !176, size: 16, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2637, file: !2613, line: 49, baseType: !176, size: 16, offset: 208)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "selcol1", scope: !2637, file: !2613, line: 49, baseType: !176, size: 16, offset: 224)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "selcol2", scope: !2637, file: !2613, line: 49, baseType: !176, size: 16, offset: 240)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2637, file: !2613, line: 50, baseType: !267, size: 32, offset: 256)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2637, file: !2613, line: 50, baseType: !267, size: 32, offset: 288)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !2637, file: !2613, line: 50, baseType: !267, size: 32, offset: 320)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !2637, file: !2613, line: 51, baseType: !432, size: 128, offset: 352)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "expx", scope: !2637, file: !2613, line: 52, baseType: !267, size: 32, offset: 480)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "expy", scope: !2637, file: !2613, line: 53, baseType: !267, size: 32, offset: 512)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "expz", scope: !2637, file: !2613, line: 54, baseType: !267, size: 32, offset: 544)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2637, file: !2613, line: 55, baseType: !267, size: 32, offset: 576)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "rad2", scope: !2637, file: !2613, line: 56, baseType: !267, size: 32, offset: 608)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2637, file: !2613, line: 57, baseType: !267, size: 32, offset: 640)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2637, file: !2613, line: 58, baseType: !267, size: 32, offset: 672)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2637, file: !2613, line: 60, baseType: !819, size: 64, offset: 704)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2637, file: !2613, line: 60, baseType: !819, size: 64, offset: 768)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !314, line: 203, baseType: !313)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !736, line: 127, baseType: !1431)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !118, line: 165, baseType: !2373)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !846, line: 391, baseType: !845)
!2668 = !{!0, !2669, !2671}
!2669 = !DIGlobalVariableExpression(var: !2670, expr: !DIExpression())
!2670 = distinct !DIGlobalVariable(name: "matcopybuf", scope: !2, file: !3, line: 1646, type: !2661, isLocal: true, isDefinition: true)
!2671 = !DIGlobalVariableExpression(var: !2672, expr: !DIExpression())
!2672 = distinct !DIGlobalVariable(name: "matcopied", scope: !2, file: !3, line: 1647, type: !176, isLocal: true, isDefinition: true)
!2673 = !{i32 7, !"Dwarf Version", i32 4}
!2674 = !{i32 2, !"Debug Info Version", i32 3}
!2675 = !{i32 1, !"wchar_size", i32 4}
!2676 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2677 = distinct !DISubprogram(name: "init_def_material", scope: !3, file: !3, line: 76, type: !2678, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{null}
!2680 = !{}
!2681 = !DILocation(line: 78, column: 2, scope: !2677)
!2682 = !DILocation(line: 79, column: 1, scope: !2677)
!2683 = distinct !DISubprogram(name: "init_material", scope: !3, file: !3, line: 122, type: !2684, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{null, !2660}
!2686 = !DILocalVariable(name: "ma", arg: 1, scope: !2683, file: !3, line: 122, type: !2660)
!2687 = !DILocation(line: 122, column: 30, scope: !2683)
!2688 = !DILocation(line: 124, column: 26, scope: !2683)
!2689 = !DILocation(line: 124, column: 30, scope: !2683)
!2690 = !DILocation(line: 124, column: 34, scope: !2683)
!2691 = !DILocation(line: 124, column: 18, scope: !2683)
!2692 = !DILocation(line: 124, column: 22, scope: !2683)
!2693 = !DILocation(line: 124, column: 24, scope: !2683)
!2694 = !DILocation(line: 124, column: 10, scope: !2683)
!2695 = !DILocation(line: 124, column: 14, scope: !2683)
!2696 = !DILocation(line: 124, column: 16, scope: !2683)
!2697 = !DILocation(line: 124, column: 2, scope: !2683)
!2698 = !DILocation(line: 124, column: 6, scope: !2683)
!2699 = !DILocation(line: 124, column: 8, scope: !2683)
!2700 = !DILocation(line: 125, column: 26, scope: !2683)
!2701 = !DILocation(line: 125, column: 30, scope: !2683)
!2702 = !DILocation(line: 125, column: 36, scope: !2683)
!2703 = !DILocation(line: 125, column: 14, scope: !2683)
!2704 = !DILocation(line: 125, column: 18, scope: !2683)
!2705 = !DILocation(line: 125, column: 24, scope: !2683)
!2706 = !DILocation(line: 125, column: 2, scope: !2683)
!2707 = !DILocation(line: 125, column: 6, scope: !2683)
!2708 = !DILocation(line: 125, column: 12, scope: !2683)
!2709 = !DILocation(line: 126, column: 24, scope: !2683)
!2710 = !DILocation(line: 126, column: 28, scope: !2683)
!2711 = !DILocation(line: 126, column: 33, scope: !2683)
!2712 = !DILocation(line: 126, column: 13, scope: !2683)
!2713 = !DILocation(line: 126, column: 17, scope: !2683)
!2714 = !DILocation(line: 126, column: 22, scope: !2683)
!2715 = !DILocation(line: 126, column: 2, scope: !2683)
!2716 = !DILocation(line: 126, column: 6, scope: !2683)
!2717 = !DILocation(line: 126, column: 11, scope: !2683)
!2718 = !DILocation(line: 127, column: 2, scope: !2683)
!2719 = !DILocation(line: 127, column: 6, scope: !2683)
!2720 = !DILocation(line: 127, column: 14, scope: !2683)
!2721 = !DILocation(line: 128, column: 2, scope: !2683)
!2722 = !DILocation(line: 128, column: 6, scope: !2683)
!2723 = !DILocation(line: 128, column: 10, scope: !2683)
!2724 = !DILocation(line: 129, column: 2, scope: !2683)
!2725 = !DILocation(line: 129, column: 6, scope: !2683)
!2726 = !DILocation(line: 129, column: 12, scope: !2683)
!2727 = !DILocation(line: 130, column: 13, scope: !2683)
!2728 = !DILocation(line: 130, column: 17, scope: !2683)
!2729 = !DILocation(line: 130, column: 24, scope: !2683)
!2730 = !DILocation(line: 130, column: 2, scope: !2683)
!2731 = !DILocation(line: 130, column: 6, scope: !2683)
!2732 = !DILocation(line: 130, column: 11, scope: !2683)
!2733 = !DILocation(line: 131, column: 2, scope: !2683)
!2734 = !DILocation(line: 131, column: 6, scope: !2683)
!2735 = !DILocation(line: 131, column: 10, scope: !2683)
!2736 = !DILocation(line: 132, column: 14, scope: !2683)
!2737 = !DILocation(line: 132, column: 18, scope: !2683)
!2738 = !DILocation(line: 132, column: 24, scope: !2683)
!2739 = !DILocation(line: 132, column: 2, scope: !2683)
!2740 = !DILocation(line: 132, column: 6, scope: !2683)
!2741 = !DILocation(line: 132, column: 12, scope: !2683)
!2742 = !DILocation(line: 133, column: 2, scope: !2683)
!2743 = !DILocation(line: 133, column: 6, scope: !2683)
!2744 = !DILocation(line: 133, column: 12, scope: !2683)
!2745 = !DILocation(line: 134, column: 2, scope: !2683)
!2746 = !DILocation(line: 134, column: 6, scope: !2683)
!2747 = !DILocation(line: 134, column: 13, scope: !2683)
!2748 = !DILocation(line: 135, column: 18, scope: !2683)
!2749 = !DILocation(line: 135, column: 22, scope: !2683)
!2750 = !DILocation(line: 135, column: 30, scope: !2683)
!2751 = !DILocation(line: 135, column: 2, scope: !2683)
!2752 = !DILocation(line: 135, column: 6, scope: !2683)
!2753 = !DILocation(line: 135, column: 16, scope: !2683)
!2754 = !DILocation(line: 136, column: 2, scope: !2683)
!2755 = !DILocation(line: 136, column: 6, scope: !2683)
!2756 = !DILocation(line: 136, column: 17, scope: !2683)
!2757 = !DILocation(line: 137, column: 2, scope: !2683)
!2758 = !DILocation(line: 137, column: 6, scope: !2683)
!2759 = !DILocation(line: 137, column: 12, scope: !2683)
!2760 = !DILocation(line: 138, column: 2, scope: !2683)
!2761 = !DILocation(line: 138, column: 6, scope: !2683)
!2762 = !DILocation(line: 138, column: 15, scope: !2683)
!2763 = !DILocation(line: 139, column: 2, scope: !2683)
!2764 = !DILocation(line: 139, column: 6, scope: !2683)
!2765 = !DILocation(line: 139, column: 13, scope: !2683)
!2766 = !DILocation(line: 140, column: 2, scope: !2683)
!2767 = !DILocation(line: 140, column: 6, scope: !2683)
!2768 = !DILocation(line: 140, column: 16, scope: !2683)
!2769 = !DILocation(line: 141, column: 2, scope: !2683)
!2770 = !DILocation(line: 141, column: 6, scope: !2683)
!2771 = !DILocation(line: 141, column: 15, scope: !2683)
!2772 = !DILocation(line: 142, column: 2, scope: !2683)
!2773 = !DILocation(line: 142, column: 6, scope: !2683)
!2774 = !DILocation(line: 142, column: 15, scope: !2683)
!2775 = !DILocation(line: 143, column: 2, scope: !2683)
!2776 = !DILocation(line: 143, column: 6, scope: !2683)
!2777 = !DILocation(line: 143, column: 15, scope: !2683)
!2778 = !DILocation(line: 144, column: 2, scope: !2683)
!2779 = !DILocation(line: 144, column: 6, scope: !2683)
!2780 = !DILocation(line: 144, column: 15, scope: !2683)
!2781 = !DILocation(line: 145, column: 2, scope: !2683)
!2782 = !DILocation(line: 145, column: 6, scope: !2683)
!2783 = !DILocation(line: 145, column: 10, scope: !2683)
!2784 = !DILocation(line: 146, column: 2, scope: !2683)
!2785 = !DILocation(line: 146, column: 6, scope: !2683)
!2786 = !DILocation(line: 146, column: 15, scope: !2683)
!2787 = !DILocation(line: 148, column: 19, scope: !2683)
!2788 = !DILocation(line: 148, column: 23, scope: !2683)
!2789 = !DILocation(line: 148, column: 34, scope: !2683)
!2790 = !DILocation(line: 148, column: 2, scope: !2683)
!2791 = !DILocation(line: 148, column: 6, scope: !2683)
!2792 = !DILocation(line: 148, column: 17, scope: !2683)
!2793 = !DILocation(line: 150, column: 2, scope: !2683)
!2794 = !DILocation(line: 150, column: 6, scope: !2683)
!2795 = !DILocation(line: 150, column: 10, scope: !2683)
!2796 = !DILocation(line: 151, column: 2, scope: !2683)
!2797 = !DILocation(line: 151, column: 6, scope: !2683)
!2798 = !DILocation(line: 151, column: 16, scope: !2683)
!2799 = !DILocation(line: 152, column: 2, scope: !2683)
!2800 = !DILocation(line: 152, column: 6, scope: !2683)
!2801 = !DILocation(line: 152, column: 20, scope: !2683)
!2802 = !DILocation(line: 153, column: 2, scope: !2683)
!2803 = !DILocation(line: 153, column: 6, scope: !2683)
!2804 = !DILocation(line: 153, column: 18, scope: !2683)
!2805 = !DILocation(line: 154, column: 2, scope: !2683)
!2806 = !DILocation(line: 154, column: 6, scope: !2683)
!2807 = !DILocation(line: 154, column: 18, scope: !2683)
!2808 = !DILocation(line: 155, column: 2, scope: !2683)
!2809 = !DILocation(line: 155, column: 6, scope: !2683)
!2810 = !DILocation(line: 155, column: 20, scope: !2683)
!2811 = !DILocation(line: 156, column: 2, scope: !2683)
!2812 = !DILocation(line: 156, column: 6, scope: !2683)
!2813 = !DILocation(line: 156, column: 20, scope: !2683)
!2814 = !DILocation(line: 157, column: 2, scope: !2683)
!2815 = !DILocation(line: 157, column: 6, scope: !2683)
!2816 = !DILocation(line: 157, column: 15, scope: !2683)
!2817 = !DILocation(line: 158, column: 2, scope: !2683)
!2818 = !DILocation(line: 158, column: 6, scope: !2683)
!2819 = !DILocation(line: 158, column: 17, scope: !2683)
!2820 = !DILocation(line: 159, column: 2, scope: !2683)
!2821 = !DILocation(line: 159, column: 6, scope: !2683)
!2822 = !DILocation(line: 159, column: 17, scope: !2683)
!2823 = !DILocation(line: 160, column: 2, scope: !2683)
!2824 = !DILocation(line: 160, column: 6, scope: !2683)
!2825 = !DILocation(line: 160, column: 17, scope: !2683)
!2826 = !DILocation(line: 162, column: 18, scope: !2683)
!2827 = !DILocation(line: 162, column: 22, scope: !2683)
!2828 = !DILocation(line: 162, column: 32, scope: !2683)
!2829 = !DILocation(line: 162, column: 2, scope: !2683)
!2830 = !DILocation(line: 162, column: 6, scope: !2683)
!2831 = !DILocation(line: 162, column: 16, scope: !2683)
!2832 = !DILocation(line: 163, column: 23, scope: !2683)
!2833 = !DILocation(line: 163, column: 27, scope: !2683)
!2834 = !DILocation(line: 163, column: 42, scope: !2683)
!2835 = !DILocation(line: 163, column: 2, scope: !2683)
!2836 = !DILocation(line: 163, column: 6, scope: !2683)
!2837 = !DILocation(line: 163, column: 21, scope: !2683)
!2838 = !DILocation(line: 164, column: 25, scope: !2683)
!2839 = !DILocation(line: 164, column: 29, scope: !2683)
!2840 = !DILocation(line: 164, column: 46, scope: !2683)
!2841 = !DILocation(line: 164, column: 2, scope: !2683)
!2842 = !DILocation(line: 164, column: 6, scope: !2683)
!2843 = !DILocation(line: 164, column: 23, scope: !2683)
!2844 = !DILocation(line: 165, column: 2, scope: !2683)
!2845 = !DILocation(line: 165, column: 6, scope: !2683)
!2846 = !DILocation(line: 165, column: 15, scope: !2683)
!2847 = !DILocation(line: 166, column: 2, scope: !2683)
!2848 = !DILocation(line: 166, column: 6, scope: !2683)
!2849 = !DILocation(line: 166, column: 17, scope: !2683)
!2850 = !DILocation(line: 168, column: 2, scope: !2683)
!2851 = !DILocation(line: 168, column: 6, scope: !2683)
!2852 = !DILocation(line: 168, column: 18, scope: !2683)
!2853 = !DILocation(line: 169, column: 2, scope: !2683)
!2854 = !DILocation(line: 169, column: 6, scope: !2683)
!2855 = !DILocation(line: 169, column: 19, scope: !2683)
!2856 = !DILocation(line: 170, column: 2, scope: !2683)
!2857 = !DILocation(line: 170, column: 6, scope: !2683)
!2858 = !DILocation(line: 170, column: 14, scope: !2683)
!2859 = !DILocation(line: 171, column: 2, scope: !2683)
!2860 = !DILocation(line: 171, column: 6, scope: !2683)
!2861 = !DILocation(line: 171, column: 14, scope: !2683)
!2862 = !DILocation(line: 173, column: 2, scope: !2683)
!2863 = !DILocation(line: 173, column: 6, scope: !2683)
!2864 = !DILocation(line: 173, column: 20, scope: !2683)
!2865 = !DILocation(line: 174, column: 2, scope: !2683)
!2866 = !DILocation(line: 174, column: 6, scope: !2683)
!2867 = !DILocation(line: 174, column: 20, scope: !2683)
!2868 = !DILocation(line: 175, column: 2, scope: !2683)
!2869 = !DILocation(line: 175, column: 6, scope: !2683)
!2870 = !DILocation(line: 175, column: 20, scope: !2683)
!2871 = !DILocation(line: 176, column: 2, scope: !2683)
!2872 = !DILocation(line: 176, column: 6, scope: !2683)
!2873 = !DILocation(line: 176, column: 17, scope: !2683)
!2874 = !DILocation(line: 177, column: 2, scope: !2683)
!2875 = !DILocation(line: 177, column: 6, scope: !2683)
!2876 = !DILocation(line: 177, column: 17, scope: !2683)
!2877 = !DILocation(line: 178, column: 2, scope: !2683)
!2878 = !DILocation(line: 178, column: 6, scope: !2683)
!2879 = !DILocation(line: 178, column: 17, scope: !2683)
!2880 = !DILocation(line: 179, column: 2, scope: !2683)
!2881 = !DILocation(line: 179, column: 6, scope: !2683)
!2882 = !DILocation(line: 179, column: 16, scope: !2683)
!2883 = !DILocation(line: 180, column: 2, scope: !2683)
!2884 = !DILocation(line: 180, column: 6, scope: !2683)
!2885 = !DILocation(line: 180, column: 16, scope: !2683)
!2886 = !DILocation(line: 181, column: 2, scope: !2683)
!2887 = !DILocation(line: 181, column: 6, scope: !2683)
!2888 = !DILocation(line: 181, column: 14, scope: !2683)
!2889 = !DILocation(line: 182, column: 2, scope: !2683)
!2890 = !DILocation(line: 182, column: 6, scope: !2683)
!2891 = !DILocation(line: 182, column: 17, scope: !2683)
!2892 = !DILocation(line: 183, column: 2, scope: !2683)
!2893 = !DILocation(line: 183, column: 6, scope: !2683)
!2894 = !DILocation(line: 183, column: 17, scope: !2683)
!2895 = !DILocation(line: 184, column: 2, scope: !2683)
!2896 = !DILocation(line: 184, column: 6, scope: !2683)
!2897 = !DILocation(line: 184, column: 16, scope: !2683)
!2898 = !DILocation(line: 185, column: 2, scope: !2683)
!2899 = !DILocation(line: 185, column: 6, scope: !2683)
!2900 = !DILocation(line: 185, column: 15, scope: !2683)
!2901 = !DILocation(line: 187, column: 2, scope: !2683)
!2902 = !DILocation(line: 187, column: 6, scope: !2683)
!2903 = !DILocation(line: 187, column: 10, scope: !2683)
!2904 = !DILocation(line: 187, column: 18, scope: !2683)
!2905 = !DILocation(line: 188, column: 2, scope: !2683)
!2906 = !DILocation(line: 188, column: 6, scope: !2683)
!2907 = !DILocation(line: 188, column: 10, scope: !2683)
!2908 = !DILocation(line: 188, column: 19, scope: !2683)
!2909 = !DILocation(line: 189, column: 2, scope: !2683)
!2910 = !DILocation(line: 189, column: 6, scope: !2683)
!2911 = !DILocation(line: 189, column: 10, scope: !2683)
!2912 = !DILocation(line: 189, column: 21, scope: !2683)
!2913 = !DILocation(line: 190, column: 2, scope: !2683)
!2914 = !DILocation(line: 190, column: 6, scope: !2683)
!2915 = !DILocation(line: 190, column: 10, scope: !2683)
!2916 = !DILocation(line: 190, column: 21, scope: !2683)
!2917 = !DILocation(line: 191, column: 62, scope: !2683)
!2918 = !DILocation(line: 191, column: 66, scope: !2683)
!2919 = !DILocation(line: 191, column: 70, scope: !2683)
!2920 = !DILocation(line: 191, column: 90, scope: !2683)
!2921 = !DILocation(line: 191, column: 32, scope: !2683)
!2922 = !DILocation(line: 191, column: 36, scope: !2683)
!2923 = !DILocation(line: 191, column: 40, scope: !2683)
!2924 = !DILocation(line: 191, column: 60, scope: !2683)
!2925 = !DILocation(line: 191, column: 2, scope: !2683)
!2926 = !DILocation(line: 191, column: 6, scope: !2683)
!2927 = !DILocation(line: 191, column: 10, scope: !2683)
!2928 = !DILocation(line: 191, column: 30, scope: !2683)
!2929 = !DILocation(line: 192, column: 58, scope: !2683)
!2930 = !DILocation(line: 192, column: 62, scope: !2683)
!2931 = !DILocation(line: 192, column: 66, scope: !2683)
!2932 = !DILocation(line: 192, column: 84, scope: !2683)
!2933 = !DILocation(line: 192, column: 30, scope: !2683)
!2934 = !DILocation(line: 192, column: 34, scope: !2683)
!2935 = !DILocation(line: 192, column: 38, scope: !2683)
!2936 = !DILocation(line: 192, column: 56, scope: !2683)
!2937 = !DILocation(line: 192, column: 2, scope: !2683)
!2938 = !DILocation(line: 192, column: 6, scope: !2683)
!2939 = !DILocation(line: 192, column: 10, scope: !2683)
!2940 = !DILocation(line: 192, column: 28, scope: !2683)
!2941 = !DILocation(line: 193, column: 54, scope: !2683)
!2942 = !DILocation(line: 193, column: 58, scope: !2683)
!2943 = !DILocation(line: 193, column: 62, scope: !2683)
!2944 = !DILocation(line: 193, column: 78, scope: !2683)
!2945 = !DILocation(line: 193, column: 28, scope: !2683)
!2946 = !DILocation(line: 193, column: 32, scope: !2683)
!2947 = !DILocation(line: 193, column: 36, scope: !2683)
!2948 = !DILocation(line: 193, column: 52, scope: !2683)
!2949 = !DILocation(line: 193, column: 2, scope: !2683)
!2950 = !DILocation(line: 193, column: 6, scope: !2683)
!2951 = !DILocation(line: 193, column: 10, scope: !2683)
!2952 = !DILocation(line: 193, column: 26, scope: !2683)
!2953 = !DILocation(line: 194, column: 2, scope: !2683)
!2954 = !DILocation(line: 194, column: 6, scope: !2683)
!2955 = !DILocation(line: 194, column: 10, scope: !2683)
!2956 = !DILocation(line: 194, column: 24, scope: !2683)
!2957 = !DILocation(line: 195, column: 2, scope: !2683)
!2958 = !DILocation(line: 195, column: 6, scope: !2683)
!2959 = !DILocation(line: 195, column: 10, scope: !2683)
!2960 = !DILocation(line: 195, column: 23, scope: !2683)
!2961 = !DILocation(line: 196, column: 2, scope: !2683)
!2962 = !DILocation(line: 196, column: 6, scope: !2683)
!2963 = !DILocation(line: 196, column: 10, scope: !2683)
!2964 = !DILocation(line: 196, column: 24, scope: !2683)
!2965 = !DILocation(line: 197, column: 2, scope: !2683)
!2966 = !DILocation(line: 197, column: 6, scope: !2683)
!2967 = !DILocation(line: 197, column: 10, scope: !2683)
!2968 = !DILocation(line: 197, column: 19, scope: !2683)
!2969 = !DILocation(line: 198, column: 2, scope: !2683)
!2970 = !DILocation(line: 198, column: 6, scope: !2683)
!2971 = !DILocation(line: 198, column: 10, scope: !2683)
!2972 = !DILocation(line: 198, column: 21, scope: !2683)
!2973 = !DILocation(line: 199, column: 2, scope: !2683)
!2974 = !DILocation(line: 199, column: 6, scope: !2683)
!2975 = !DILocation(line: 199, column: 10, scope: !2683)
!2976 = !DILocation(line: 199, column: 20, scope: !2683)
!2977 = !DILocation(line: 200, column: 2, scope: !2683)
!2978 = !DILocation(line: 200, column: 6, scope: !2683)
!2979 = !DILocation(line: 200, column: 10, scope: !2683)
!2980 = !DILocation(line: 200, column: 30, scope: !2683)
!2981 = !DILocation(line: 201, column: 2, scope: !2683)
!2982 = !DILocation(line: 201, column: 6, scope: !2683)
!2983 = !DILocation(line: 201, column: 10, scope: !2683)
!2984 = !DILocation(line: 201, column: 20, scope: !2683)
!2985 = !DILocation(line: 202, column: 2, scope: !2683)
!2986 = !DILocation(line: 202, column: 6, scope: !2683)
!2987 = !DILocation(line: 202, column: 10, scope: !2683)
!2988 = !DILocation(line: 202, column: 18, scope: !2683)
!2989 = !DILocation(line: 203, column: 2, scope: !2683)
!2990 = !DILocation(line: 203, column: 6, scope: !2683)
!2991 = !DILocation(line: 203, column: 10, scope: !2683)
!2992 = !DILocation(line: 203, column: 23, scope: !2683)
!2993 = !DILocation(line: 205, column: 2, scope: !2683)
!2994 = !DILocation(line: 205, column: 6, scope: !2683)
!2995 = !DILocation(line: 205, column: 11, scope: !2683)
!2996 = !DILocation(line: 205, column: 16, scope: !2683)
!2997 = !DILocation(line: 206, column: 2, scope: !2683)
!2998 = !DILocation(line: 206, column: 6, scope: !2683)
!2999 = !DILocation(line: 206, column: 11, scope: !2683)
!3000 = !DILocation(line: 206, column: 23, scope: !2683)
!3001 = !DILocation(line: 207, column: 2, scope: !2683)
!3002 = !DILocation(line: 207, column: 6, scope: !2683)
!3003 = !DILocation(line: 207, column: 11, scope: !2683)
!3004 = !DILocation(line: 207, column: 28, scope: !2683)
!3005 = !DILocation(line: 209, column: 2, scope: !2683)
!3006 = !DILocation(line: 209, column: 6, scope: !2683)
!3007 = !DILocation(line: 209, column: 11, scope: !2683)
!3008 = !DILocation(line: 210, column: 2, scope: !2683)
!3009 = !DILocation(line: 210, column: 6, scope: !2683)
!3010 = !DILocation(line: 210, column: 12, scope: !2683)
!3011 = !DILocation(line: 211, column: 2, scope: !2683)
!3012 = !DILocation(line: 211, column: 6, scope: !2683)
!3013 = !DILocation(line: 211, column: 17, scope: !2683)
!3014 = !DILocation(line: 212, column: 2, scope: !2683)
!3015 = !DILocation(line: 212, column: 6, scope: !2683)
!3016 = !DILocation(line: 212, column: 14, scope: !2683)
!3017 = !DILocation(line: 213, column: 1, scope: !2683)
!3018 = distinct !DISubprogram(name: "BKE_material_free", scope: !3, file: !3, line: 82, type: !2684, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!3019 = !DILocalVariable(name: "ma", arg: 1, scope: !3018, file: !3, line: 82, type: !2660)
!3020 = !DILocation(line: 82, column: 34, scope: !3018)
!3021 = !DILocation(line: 84, column: 23, scope: !3018)
!3022 = !DILocation(line: 84, column: 2, scope: !3018)
!3023 = !DILocation(line: 85, column: 1, scope: !3018)
!3024 = distinct !DISubprogram(name: "BKE_material_free_ex", scope: !3, file: !3, line: 88, type: !3025, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{null, !2660, !1171}
!3027 = !DILocalVariable(name: "ma", arg: 1, scope: !3024, file: !3, line: 88, type: !2660)
!3028 = !DILocation(line: 88, column: 37, scope: !3024)
!3029 = !DILocalVariable(name: "do_id_user", arg: 2, scope: !3024, file: !3, line: 88, type: !1171)
!3030 = !DILocation(line: 88, column: 46, scope: !3024)
!3031 = !DILocalVariable(name: "mtex", scope: !3024, file: !3, line: 90, type: !3032)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTex", file: !305, line: 94, baseType: !477)
!3034 = !DILocation(line: 90, column: 8, scope: !3024)
!3035 = !DILocalVariable(name: "a", scope: !3024, file: !3, line: 91, type: !178)
!3036 = !DILocation(line: 91, column: 6, scope: !3024)
!3037 = !DILocation(line: 93, column: 9, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 93, column: 2)
!3039 = !DILocation(line: 93, column: 7, scope: !3038)
!3040 = !DILocation(line: 93, column: 14, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 93, column: 2)
!3042 = !DILocation(line: 93, column: 16, scope: !3041)
!3043 = !DILocation(line: 93, column: 2, scope: !3038)
!3044 = !DILocation(line: 94, column: 10, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 93, column: 33)
!3046 = !DILocation(line: 94, column: 14, scope: !3045)
!3047 = !DILocation(line: 94, column: 19, scope: !3045)
!3048 = !DILocation(line: 94, column: 8, scope: !3045)
!3049 = !DILocation(line: 95, column: 7, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 95, column: 7)
!3051 = !DILocation(line: 95, column: 18, scope: !3050)
!3052 = !DILocation(line: 95, column: 21, scope: !3050)
!3053 = !DILocation(line: 95, column: 26, scope: !3050)
!3054 = !DILocation(line: 95, column: 29, scope: !3050)
!3055 = !DILocation(line: 95, column: 35, scope: !3050)
!3056 = !DILocation(line: 95, column: 7, scope: !3045)
!3057 = !DILocation(line: 95, column: 40, scope: !3050)
!3058 = !DILocation(line: 95, column: 46, scope: !3050)
!3059 = !DILocation(line: 95, column: 51, scope: !3050)
!3060 = !DILocation(line: 95, column: 54, scope: !3050)
!3061 = !DILocation(line: 95, column: 56, scope: !3050)
!3062 = !DILocation(line: 96, column: 7, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 96, column: 7)
!3064 = !DILocation(line: 96, column: 7, scope: !3045)
!3065 = !DILocation(line: 96, column: 13, scope: !3063)
!3066 = !DILocation(line: 96, column: 23, scope: !3063)
!3067 = !DILocation(line: 97, column: 2, scope: !3045)
!3068 = !DILocation(line: 93, column: 29, scope: !3041)
!3069 = !DILocation(line: 93, column: 2, scope: !3041)
!3070 = distinct !{!3070, !3043, !3071}
!3071 = !DILocation(line: 97, column: 2, scope: !3038)
!3072 = !DILocation(line: 99, column: 6, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 99, column: 6)
!3074 = !DILocation(line: 99, column: 10, scope: !3073)
!3075 = !DILocation(line: 99, column: 6, scope: !3024)
!3076 = !DILocation(line: 99, column: 20, scope: !3073)
!3077 = !DILocation(line: 99, column: 30, scope: !3073)
!3078 = !DILocation(line: 99, column: 34, scope: !3073)
!3079 = !DILocation(line: 100, column: 6, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 100, column: 6)
!3081 = !DILocation(line: 100, column: 10, scope: !3080)
!3082 = !DILocation(line: 100, column: 6, scope: !3024)
!3083 = !DILocation(line: 100, column: 21, scope: !3080)
!3084 = !DILocation(line: 100, column: 31, scope: !3080)
!3085 = !DILocation(line: 100, column: 35, scope: !3080)
!3086 = !DILocation(line: 102, column: 26, scope: !3024)
!3087 = !DILocation(line: 102, column: 20, scope: !3024)
!3088 = !DILocation(line: 102, column: 2, scope: !3024)
!3089 = !DILocation(line: 104, column: 6, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 104, column: 6)
!3091 = !DILocation(line: 104, column: 10, scope: !3090)
!3092 = !DILocation(line: 104, column: 6, scope: !3024)
!3093 = !DILocation(line: 105, column: 24, scope: !3090)
!3094 = !DILocation(line: 105, column: 28, scope: !3090)
!3095 = !DILocation(line: 105, column: 3, scope: !3090)
!3096 = !DILocation(line: 106, column: 31, scope: !3024)
!3097 = !DILocation(line: 106, column: 18, scope: !3024)
!3098 = !DILocation(line: 106, column: 2, scope: !3024)
!3099 = !DILocation(line: 107, column: 2, scope: !3024)
!3100 = !DILocation(line: 107, column: 6, scope: !3024)
!3101 = !DILocation(line: 107, column: 9, scope: !3024)
!3102 = !DILocation(line: 107, column: 17, scope: !3024)
!3103 = !DILocation(line: 110, column: 6, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 110, column: 6)
!3105 = !DILocation(line: 110, column: 10, scope: !3104)
!3106 = !DILocation(line: 110, column: 6, scope: !3024)
!3107 = !DILocation(line: 111, column: 20, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 110, column: 20)
!3109 = !DILocation(line: 111, column: 24, scope: !3108)
!3110 = !DILocation(line: 111, column: 34, scope: !3108)
!3111 = !DILocation(line: 111, column: 3, scope: !3108)
!3112 = !DILocation(line: 112, column: 3, scope: !3108)
!3113 = !DILocation(line: 112, column: 13, scope: !3108)
!3114 = !DILocation(line: 112, column: 17, scope: !3108)
!3115 = !DILocation(line: 113, column: 2, scope: !3108)
!3116 = !DILocation(line: 115, column: 6, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 115, column: 6)
!3118 = !DILocation(line: 115, column: 10, scope: !3117)
!3119 = !DILocation(line: 115, column: 6, scope: !3024)
!3120 = !DILocation(line: 116, column: 3, scope: !3117)
!3121 = !DILocation(line: 116, column: 13, scope: !3117)
!3122 = !DILocation(line: 116, column: 17, scope: !3117)
!3123 = !DILocation(line: 118, column: 6, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 118, column: 6)
!3125 = !DILocation(line: 118, column: 10, scope: !3124)
!3126 = !DILocation(line: 118, column: 22, scope: !3124)
!3127 = !DILocation(line: 118, column: 6, scope: !3024)
!3128 = !DILocation(line: 119, column: 21, scope: !3124)
!3129 = !DILocation(line: 119, column: 3, scope: !3124)
!3130 = !DILocation(line: 120, column: 1, scope: !3024)
!3131 = distinct !DISubprogram(name: "BKE_material_add", scope: !3, file: !3, line: 215, type: !3132, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!312, !3134, !956}
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !3136, line: 104, baseType: !3137)
!3136 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !3136, line: 53, size: 15232, elements: !3138)
!3138 = !{!3139, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3193}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3137, file: !3136, line: 54, baseType: !3140, size: 64)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3137, file: !3136, line: 54, baseType: !3140, size: 64, offset: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3137, file: !3136, line: 55, baseType: !162, size: 8192, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !3137, file: !3136, line: 56, baseType: !176, size: 16, offset: 8320)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !3137, file: !3136, line: 56, baseType: !176, size: 16, offset: 8336)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !3137, file: !3136, line: 57, baseType: !176, size: 16, offset: 8352)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !3137, file: !3136, line: 57, baseType: !176, size: 16, offset: 8368)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !3137, file: !3136, line: 58, baseType: !711, size: 64, offset: 8384)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !3137, file: !3136, line: 59, baseType: !3149, size: 128, offset: 8448)
!3149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 128, elements: !3150)
!3150 = !{!3151}
!3151 = !DISubrange(count: 16)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !3137, file: !3136, line: 60, baseType: !176, size: 16, offset: 8576)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !3137, file: !3136, line: 62, baseType: !153, size: 64, offset: 8640)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3137, file: !3136, line: 63, baseType: !203, size: 128, offset: 8704)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !3137, file: !3136, line: 64, baseType: !203, size: 128, offset: 8832)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3137, file: !3136, line: 65, baseType: !203, size: 128, offset: 8960)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !3137, file: !3136, line: 66, baseType: !203, size: 128, offset: 9088)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3137, file: !3136, line: 67, baseType: !203, size: 128, offset: 9216)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !3137, file: !3136, line: 68, baseType: !203, size: 128, offset: 9344)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3137, file: !3136, line: 69, baseType: !203, size: 128, offset: 9472)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3137, file: !3136, line: 70, baseType: !203, size: 128, offset: 9600)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3137, file: !3136, line: 71, baseType: !203, size: 128, offset: 9728)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3137, file: !3136, line: 72, baseType: !203, size: 128, offset: 9856)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3137, file: !3136, line: 73, baseType: !203, size: 128, offset: 9984)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3137, file: !3136, line: 74, baseType: !203, size: 128, offset: 10112)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3137, file: !3136, line: 75, baseType: !203, size: 128, offset: 10240)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3137, file: !3136, line: 76, baseType: !203, size: 128, offset: 10368)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3137, file: !3136, line: 77, baseType: !203, size: 128, offset: 10496)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3137, file: !3136, line: 78, baseType: !203, size: 128, offset: 10624)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3137, file: !3136, line: 79, baseType: !203, size: 128, offset: 10752)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3137, file: !3136, line: 80, baseType: !203, size: 128, offset: 10880)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3137, file: !3136, line: 81, baseType: !203, size: 128, offset: 11008)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3137, file: !3136, line: 82, baseType: !203, size: 128, offset: 11136)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !3137, file: !3136, line: 83, baseType: !203, size: 128, offset: 11264)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3137, file: !3136, line: 84, baseType: !203, size: 128, offset: 11392)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !3137, file: !3136, line: 85, baseType: !203, size: 128, offset: 11520)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3137, file: !3136, line: 86, baseType: !203, size: 128, offset: 11648)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3137, file: !3136, line: 87, baseType: !203, size: 128, offset: 11776)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3137, file: !3136, line: 88, baseType: !203, size: 128, offset: 11904)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3137, file: !3136, line: 89, baseType: !203, size: 128, offset: 12032)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !3137, file: !3136, line: 90, baseType: !203, size: 128, offset: 12160)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !3137, file: !3136, line: 91, baseType: !203, size: 128, offset: 12288)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3137, file: !3136, line: 92, baseType: !203, size: 128, offset: 12416)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !3137, file: !3136, line: 93, baseType: !203, size: 128, offset: 12544)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3137, file: !3136, line: 94, baseType: !203, size: 128, offset: 12672)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3137, file: !3136, line: 95, baseType: !203, size: 128, offset: 12800)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3137, file: !3136, line: 96, baseType: !203, size: 128, offset: 12928)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !3137, file: !3136, line: 98, baseType: !859, size: 2048, offset: 13056)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3137, file: !3136, line: 101, baseType: !3190, size: 64, offset: 15104)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !3192, line: 65, flags: DIFlagFwdDecl)
!3192 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_displist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3137, file: !3136, line: 103, baseType: !3194, size: 64, offset: 15168)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !3136, line: 51, flags: DIFlagFwdDecl)
!3196 = !DILocalVariable(name: "bmain", arg: 1, scope: !3131, file: !3, line: 215, type: !3134)
!3197 = !DILocation(line: 215, column: 34, scope: !3131)
!3198 = !DILocalVariable(name: "name", arg: 2, scope: !3131, file: !3, line: 215, type: !956)
!3199 = !DILocation(line: 215, column: 53, scope: !3131)
!3200 = !DILocalVariable(name: "ma", scope: !3131, file: !3, line: 217, type: !2660)
!3201 = !DILocation(line: 217, column: 12, scope: !3131)
!3202 = !DILocation(line: 219, column: 26, scope: !3131)
!3203 = !DILocation(line: 219, column: 40, scope: !3131)
!3204 = !DILocation(line: 219, column: 7, scope: !3131)
!3205 = !DILocation(line: 219, column: 5, scope: !3131)
!3206 = !DILocation(line: 221, column: 16, scope: !3131)
!3207 = !DILocation(line: 221, column: 2, scope: !3131)
!3208 = !DILocation(line: 223, column: 9, scope: !3131)
!3209 = !DILocation(line: 223, column: 2, scope: !3131)
!3210 = distinct !DISubprogram(name: "BKE_material_copy", scope: !3, file: !3, line: 227, type: !3211, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!312, !2660}
!3213 = !DILocalVariable(name: "ma", arg: 1, scope: !3210, file: !3, line: 227, type: !2660)
!3214 = !DILocation(line: 227, column: 39, scope: !3210)
!3215 = !DILocalVariable(name: "man", scope: !3210, file: !3, line: 229, type: !2660)
!3216 = !DILocation(line: 229, column: 12, scope: !3210)
!3217 = !DILocalVariable(name: "a", scope: !3210, file: !3, line: 230, type: !178)
!3218 = !DILocation(line: 230, column: 6, scope: !3210)
!3219 = !DILocation(line: 232, column: 27, scope: !3210)
!3220 = !DILocation(line: 232, column: 31, scope: !3210)
!3221 = !DILocation(line: 232, column: 8, scope: !3210)
!3222 = !DILocation(line: 232, column: 6, scope: !3210)
!3223 = !DILocation(line: 234, column: 22, scope: !3210)
!3224 = !DILocation(line: 234, column: 27, scope: !3210)
!3225 = !DILocation(line: 234, column: 16, scope: !3210)
!3226 = !DILocation(line: 234, column: 2, scope: !3210)
!3227 = !DILocation(line: 236, column: 9, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 236, column: 2)
!3229 = !DILocation(line: 236, column: 7, scope: !3228)
!3230 = !DILocation(line: 236, column: 14, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3228, file: !3, line: 236, column: 2)
!3232 = !DILocation(line: 236, column: 16, scope: !3231)
!3233 = !DILocation(line: 236, column: 2, scope: !3228)
!3234 = !DILocation(line: 237, column: 7, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 237, column: 7)
!3236 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 236, column: 33)
!3237 = !DILocation(line: 237, column: 11, scope: !3235)
!3238 = !DILocation(line: 237, column: 16, scope: !3235)
!3239 = !DILocation(line: 237, column: 7, scope: !3236)
!3240 = !DILocation(line: 238, column: 19, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 237, column: 20)
!3242 = !DILocation(line: 238, column: 4, scope: !3241)
!3243 = !DILocation(line: 238, column: 9, scope: !3241)
!3244 = !DILocation(line: 238, column: 14, scope: !3241)
!3245 = !DILocation(line: 238, column: 17, scope: !3241)
!3246 = !DILocation(line: 239, column: 11, scope: !3241)
!3247 = !DILocation(line: 239, column: 16, scope: !3241)
!3248 = !DILocation(line: 239, column: 21, scope: !3241)
!3249 = !DILocation(line: 239, column: 4, scope: !3241)
!3250 = !DILocation(line: 239, column: 25, scope: !3241)
!3251 = !DILocation(line: 239, column: 29, scope: !3241)
!3252 = !DILocation(line: 239, column: 34, scope: !3241)
!3253 = !DILocation(line: 240, column: 21, scope: !3241)
!3254 = !DILocation(line: 240, column: 26, scope: !3241)
!3255 = !DILocation(line: 240, column: 31, scope: !3241)
!3256 = !DILocation(line: 240, column: 35, scope: !3241)
!3257 = !DILocation(line: 240, column: 15, scope: !3241)
!3258 = !DILocation(line: 240, column: 4, scope: !3241)
!3259 = !DILocation(line: 241, column: 3, scope: !3241)
!3260 = !DILocation(line: 242, column: 2, scope: !3236)
!3261 = !DILocation(line: 236, column: 29, scope: !3231)
!3262 = !DILocation(line: 236, column: 2, scope: !3231)
!3263 = distinct !{!3263, !3233, !3264}
!3264 = !DILocation(line: 242, column: 2, scope: !3228)
!3265 = !DILocation(line: 244, column: 6, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 244, column: 6)
!3267 = !DILocation(line: 244, column: 10, scope: !3266)
!3268 = !DILocation(line: 244, column: 6, scope: !3210)
!3269 = !DILocation(line: 244, column: 36, scope: !3266)
!3270 = !DILocation(line: 244, column: 50, scope: !3266)
!3271 = !DILocation(line: 244, column: 54, scope: !3266)
!3272 = !DILocation(line: 244, column: 20, scope: !3266)
!3273 = !DILocation(line: 244, column: 25, scope: !3266)
!3274 = !DILocation(line: 244, column: 34, scope: !3266)
!3275 = !DILocation(line: 245, column: 6, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 245, column: 6)
!3277 = !DILocation(line: 245, column: 10, scope: !3276)
!3278 = !DILocation(line: 245, column: 6, scope: !3210)
!3279 = !DILocation(line: 245, column: 38, scope: !3276)
!3280 = !DILocation(line: 245, column: 52, scope: !3276)
!3281 = !DILocation(line: 245, column: 56, scope: !3276)
!3282 = !DILocation(line: 245, column: 21, scope: !3276)
!3283 = !DILocation(line: 245, column: 26, scope: !3276)
!3284 = !DILocation(line: 245, column: 36, scope: !3276)
!3285 = !DILocation(line: 247, column: 6, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 247, column: 6)
!3287 = !DILocation(line: 247, column: 10, scope: !3286)
!3288 = !DILocation(line: 247, column: 6, scope: !3210)
!3289 = !DILocation(line: 247, column: 54, scope: !3286)
!3290 = !DILocation(line: 247, column: 58, scope: !3286)
!3291 = !DILocation(line: 247, column: 34, scope: !3286)
!3292 = !DILocation(line: 247, column: 19, scope: !3286)
!3293 = !DILocation(line: 247, column: 24, scope: !3286)
!3294 = !DILocation(line: 247, column: 32, scope: !3286)
!3295 = !DILocation(line: 249, column: 6, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 249, column: 6)
!3297 = !DILocation(line: 249, column: 10, scope: !3296)
!3298 = !DILocation(line: 249, column: 6, scope: !3210)
!3299 = !DILocation(line: 250, column: 33, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 249, column: 20)
!3301 = !DILocation(line: 250, column: 37, scope: !3300)
!3302 = !DILocation(line: 250, column: 19, scope: !3300)
!3303 = !DILocation(line: 250, column: 3, scope: !3300)
!3304 = !DILocation(line: 250, column: 8, scope: !3300)
!3305 = !DILocation(line: 250, column: 17, scope: !3300)
!3306 = !DILocation(line: 251, column: 2, scope: !3300)
!3307 = !DILocation(line: 253, column: 22, scope: !3210)
!3308 = !DILocation(line: 253, column: 27, scope: !3210)
!3309 = !DILocation(line: 253, column: 2, scope: !3210)
!3310 = !DILocation(line: 255, column: 9, scope: !3210)
!3311 = !DILocation(line: 255, column: 2, scope: !3210)
!3312 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !3313, file: !3313, line: 89, type: !3314, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!3313 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3314 = !DISubroutineType(types: !3315)
!3315 = !{null, !3316}
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!3317 = !DILocalVariable(name: "lb", arg: 1, scope: !3312, file: !3313, line: 89, type: !3316)
!3318 = !DILocation(line: 89, column: 53, scope: !3312)
!3319 = !DILocation(line: 89, column: 71, scope: !3312)
!3320 = !DILocation(line: 89, column: 75, scope: !3312)
!3321 = !DILocation(line: 89, column: 80, scope: !3312)
!3322 = !DILocation(line: 89, column: 59, scope: !3312)
!3323 = !DILocation(line: 89, column: 63, scope: !3312)
!3324 = !DILocation(line: 89, column: 69, scope: !3312)
!3325 = !DILocation(line: 89, column: 93, scope: !3312)
!3326 = distinct !DISubprogram(name: "localize_material", scope: !3, file: !3, line: 259, type: !3211, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!3327 = !DILocalVariable(name: "ma", arg: 1, scope: !3326, file: !3, line: 259, type: !2660)
!3328 = !DILocation(line: 259, column: 39, scope: !3326)
!3329 = !DILocalVariable(name: "man", scope: !3326, file: !3, line: 261, type: !2660)
!3330 = !DILocation(line: 261, column: 12, scope: !3326)
!3331 = !DILocalVariable(name: "a", scope: !3326, file: !3, line: 262, type: !178)
!3332 = !DILocation(line: 262, column: 6, scope: !3326)
!3333 = !DILocation(line: 264, column: 33, scope: !3326)
!3334 = !DILocation(line: 264, column: 37, scope: !3326)
!3335 = !DILocation(line: 264, column: 8, scope: !3326)
!3336 = !DILocation(line: 264, column: 6, scope: !3326)
!3337 = !DILocation(line: 267, column: 9, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 267, column: 2)
!3339 = !DILocation(line: 267, column: 7, scope: !3338)
!3340 = !DILocation(line: 267, column: 14, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3338, file: !3, line: 267, column: 2)
!3342 = !DILocation(line: 267, column: 16, scope: !3341)
!3343 = !DILocation(line: 267, column: 2, scope: !3338)
!3344 = !DILocation(line: 268, column: 7, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3346, file: !3, line: 268, column: 7)
!3346 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 267, column: 33)
!3347 = !DILocation(line: 268, column: 11, scope: !3345)
!3348 = !DILocation(line: 268, column: 16, scope: !3345)
!3349 = !DILocation(line: 268, column: 7, scope: !3346)
!3350 = !DILocation(line: 269, column: 19, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 268, column: 20)
!3352 = !DILocation(line: 269, column: 4, scope: !3351)
!3353 = !DILocation(line: 269, column: 9, scope: !3351)
!3354 = !DILocation(line: 269, column: 14, scope: !3351)
!3355 = !DILocation(line: 269, column: 17, scope: !3351)
!3356 = !DILocation(line: 270, column: 11, scope: !3351)
!3357 = !DILocation(line: 270, column: 16, scope: !3351)
!3358 = !DILocation(line: 270, column: 21, scope: !3351)
!3359 = !DILocation(line: 270, column: 4, scope: !3351)
!3360 = !DILocation(line: 270, column: 25, scope: !3351)
!3361 = !DILocation(line: 270, column: 29, scope: !3351)
!3362 = !DILocation(line: 270, column: 34, scope: !3351)
!3363 = !DILocation(line: 271, column: 3, scope: !3351)
!3364 = !DILocation(line: 272, column: 2, scope: !3346)
!3365 = !DILocation(line: 267, column: 29, scope: !3341)
!3366 = !DILocation(line: 267, column: 2, scope: !3341)
!3367 = distinct !{!3367, !3343, !3368}
!3368 = !DILocation(line: 272, column: 2, scope: !3338)
!3369 = !DILocation(line: 274, column: 6, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 274, column: 6)
!3371 = !DILocation(line: 274, column: 10, scope: !3370)
!3372 = !DILocation(line: 274, column: 6, scope: !3326)
!3373 = !DILocation(line: 274, column: 36, scope: !3370)
!3374 = !DILocation(line: 274, column: 50, scope: !3370)
!3375 = !DILocation(line: 274, column: 54, scope: !3370)
!3376 = !DILocation(line: 274, column: 20, scope: !3370)
!3377 = !DILocation(line: 274, column: 25, scope: !3370)
!3378 = !DILocation(line: 274, column: 34, scope: !3370)
!3379 = !DILocation(line: 275, column: 6, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 275, column: 6)
!3381 = !DILocation(line: 275, column: 10, scope: !3380)
!3382 = !DILocation(line: 275, column: 6, scope: !3326)
!3383 = !DILocation(line: 275, column: 38, scope: !3380)
!3384 = !DILocation(line: 275, column: 52, scope: !3380)
!3385 = !DILocation(line: 275, column: 56, scope: !3380)
!3386 = !DILocation(line: 275, column: 21, scope: !3380)
!3387 = !DILocation(line: 275, column: 26, scope: !3380)
!3388 = !DILocation(line: 275, column: 36, scope: !3380)
!3389 = !DILocation(line: 277, column: 2, scope: !3326)
!3390 = !DILocation(line: 277, column: 7, scope: !3326)
!3391 = !DILocation(line: 277, column: 20, scope: !3326)
!3392 = !DILocation(line: 278, column: 2, scope: !3326)
!3393 = !DILocation(line: 278, column: 7, scope: !3326)
!3394 = !DILocation(line: 278, column: 15, scope: !3326)
!3395 = !DILocation(line: 280, column: 6, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 280, column: 6)
!3397 = !DILocation(line: 280, column: 10, scope: !3396)
!3398 = !DILocation(line: 280, column: 6, scope: !3326)
!3399 = !DILocation(line: 281, column: 33, scope: !3396)
!3400 = !DILocation(line: 281, column: 37, scope: !3396)
!3401 = !DILocation(line: 281, column: 19, scope: !3396)
!3402 = !DILocation(line: 281, column: 3, scope: !3396)
!3403 = !DILocation(line: 281, column: 8, scope: !3396)
!3404 = !DILocation(line: 281, column: 17, scope: !3396)
!3405 = !DILocation(line: 283, column: 22, scope: !3326)
!3406 = !DILocation(line: 283, column: 27, scope: !3326)
!3407 = !DILocation(line: 283, column: 2, scope: !3326)
!3408 = !DILocation(line: 285, column: 9, scope: !3326)
!3409 = !DILocation(line: 285, column: 2, scope: !3326)
!3410 = distinct !DISubprogram(name: "BKE_material_make_local", scope: !3, file: !3, line: 296, type: !2684, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!3411 = !DILocalVariable(name: "ma", arg: 1, scope: !3410, file: !3, line: 296, type: !2660)
!3412 = !DILocation(line: 296, column: 40, scope: !3410)
!3413 = !DILocalVariable(name: "bmain", scope: !3410, file: !3, line: 298, type: !3134)
!3414 = !DILocation(line: 298, column: 8, scope: !3410)
!3415 = !DILocation(line: 298, column: 18, scope: !3410)
!3416 = !DILocalVariable(name: "ob", scope: !3410, file: !3, line: 299, type: !3417)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !20, line: 295, baseType: !485)
!3419 = !DILocation(line: 299, column: 10, scope: !3410)
!3420 = !DILocalVariable(name: "me", scope: !3410, file: !3, line: 300, type: !215)
!3421 = !DILocation(line: 300, column: 8, scope: !3410)
!3422 = !DILocalVariable(name: "cu", scope: !3410, file: !3, line: 301, type: !2509)
!3423 = !DILocation(line: 301, column: 9, scope: !3410)
!3424 = !DILocalVariable(name: "mb", scope: !3410, file: !3, line: 302, type: !2611)
!3425 = !DILocation(line: 302, column: 12, scope: !3410)
!3426 = !DILocalVariable(name: "a", scope: !3410, file: !3, line: 303, type: !178)
!3427 = !DILocation(line: 303, column: 6, scope: !3410)
!3428 = !DILocalVariable(name: "is_local", scope: !3410, file: !3, line: 304, type: !1171)
!3429 = !DILocation(line: 304, column: 7, scope: !3410)
!3430 = !DILocalVariable(name: "is_lib", scope: !3410, file: !3, line: 304, type: !1171)
!3431 = !DILocation(line: 304, column: 25, scope: !3410)
!3432 = !DILocation(line: 311, column: 6, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 311, column: 6)
!3434 = !DILocation(line: 311, column: 10, scope: !3433)
!3435 = !DILocation(line: 311, column: 13, scope: !3433)
!3436 = !DILocation(line: 311, column: 17, scope: !3433)
!3437 = !DILocation(line: 311, column: 6, scope: !3410)
!3438 = !DILocation(line: 311, column: 26, scope: !3433)
!3439 = !DILocation(line: 314, column: 6, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 314, column: 6)
!3441 = !DILocation(line: 314, column: 10, scope: !3440)
!3442 = !DILocation(line: 314, column: 13, scope: !3440)
!3443 = !DILocation(line: 314, column: 16, scope: !3440)
!3444 = !DILocation(line: 314, column: 6, scope: !3410)
!3445 = !DILocation(line: 315, column: 21, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 314, column: 22)
!3447 = !DILocation(line: 315, column: 29, scope: !3446)
!3448 = !DILocation(line: 315, column: 33, scope: !3446)
!3449 = !DILocation(line: 315, column: 3, scope: !3446)
!3450 = !DILocation(line: 316, column: 25, scope: !3446)
!3451 = !DILocation(line: 316, column: 3, scope: !3446)
!3452 = !DILocation(line: 317, column: 3, scope: !3446)
!3453 = !DILocation(line: 323, column: 7, scope: !3410)
!3454 = !DILocation(line: 323, column: 14, scope: !3410)
!3455 = !DILocation(line: 323, column: 21, scope: !3410)
!3456 = !DILocation(line: 323, column: 5, scope: !3410)
!3457 = !DILocation(line: 324, column: 2, scope: !3410)
!3458 = !DILocation(line: 324, column: 9, scope: !3410)
!3459 = !DILocation(line: 325, column: 7, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 325, column: 7)
!3461 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 324, column: 13)
!3462 = !DILocation(line: 325, column: 11, scope: !3460)
!3463 = !DILocation(line: 325, column: 7, scope: !3461)
!3464 = !DILocation(line: 326, column: 11, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 326, column: 4)
!3466 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 325, column: 16)
!3467 = !DILocation(line: 326, column: 9, scope: !3465)
!3468 = !DILocation(line: 326, column: 16, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 326, column: 4)
!3470 = !DILocation(line: 326, column: 20, scope: !3469)
!3471 = !DILocation(line: 326, column: 24, scope: !3469)
!3472 = !DILocation(line: 326, column: 18, scope: !3469)
!3473 = !DILocation(line: 326, column: 4, scope: !3465)
!3474 = !DILocation(line: 327, column: 9, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 327, column: 9)
!3476 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 326, column: 37)
!3477 = !DILocation(line: 327, column: 13, scope: !3475)
!3478 = !DILocation(line: 327, column: 17, scope: !3475)
!3479 = !DILocation(line: 327, column: 23, scope: !3475)
!3480 = !DILocation(line: 327, column: 20, scope: !3475)
!3481 = !DILocation(line: 327, column: 9, scope: !3476)
!3482 = !DILocation(line: 328, column: 10, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 328, column: 10)
!3484 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 327, column: 27)
!3485 = !DILocation(line: 328, column: 14, scope: !3483)
!3486 = !DILocation(line: 328, column: 17, scope: !3483)
!3487 = !DILocation(line: 328, column: 10, scope: !3484)
!3488 = !DILocation(line: 328, column: 29, scope: !3483)
!3489 = !DILocation(line: 328, column: 22, scope: !3483)
!3490 = !DILocation(line: 329, column: 20, scope: !3483)
!3491 = !DILocation(line: 330, column: 5, scope: !3484)
!3492 = !DILocation(line: 331, column: 4, scope: !3476)
!3493 = !DILocation(line: 326, column: 33, scope: !3469)
!3494 = !DILocation(line: 326, column: 4, scope: !3469)
!3495 = distinct !{!3495, !3473, !3496}
!3496 = !DILocation(line: 331, column: 4, scope: !3465)
!3497 = !DILocation(line: 332, column: 3, scope: !3466)
!3498 = !DILocation(line: 333, column: 8, scope: !3461)
!3499 = !DILocation(line: 333, column: 12, scope: !3461)
!3500 = !DILocation(line: 333, column: 15, scope: !3461)
!3501 = !DILocation(line: 333, column: 6, scope: !3461)
!3502 = distinct !{!3502, !3457, !3503}
!3503 = !DILocation(line: 334, column: 2, scope: !3410)
!3504 = !DILocation(line: 336, column: 7, scope: !3410)
!3505 = !DILocation(line: 336, column: 14, scope: !3410)
!3506 = !DILocation(line: 336, column: 19, scope: !3410)
!3507 = !DILocation(line: 336, column: 5, scope: !3410)
!3508 = !DILocation(line: 337, column: 2, scope: !3410)
!3509 = !DILocation(line: 337, column: 9, scope: !3410)
!3510 = !DILocation(line: 338, column: 7, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 338, column: 7)
!3512 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 337, column: 13)
!3513 = !DILocation(line: 338, column: 11, scope: !3511)
!3514 = !DILocation(line: 338, column: 7, scope: !3512)
!3515 = !DILocation(line: 339, column: 11, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 339, column: 4)
!3517 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 338, column: 16)
!3518 = !DILocation(line: 339, column: 9, scope: !3516)
!3519 = !DILocation(line: 339, column: 16, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 339, column: 4)
!3521 = !DILocation(line: 339, column: 20, scope: !3520)
!3522 = !DILocation(line: 339, column: 24, scope: !3520)
!3523 = !DILocation(line: 339, column: 18, scope: !3520)
!3524 = !DILocation(line: 339, column: 4, scope: !3516)
!3525 = !DILocation(line: 340, column: 9, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 340, column: 9)
!3527 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 339, column: 37)
!3528 = !DILocation(line: 340, column: 13, scope: !3526)
!3529 = !DILocation(line: 340, column: 17, scope: !3526)
!3530 = !DILocation(line: 340, column: 23, scope: !3526)
!3531 = !DILocation(line: 340, column: 20, scope: !3526)
!3532 = !DILocation(line: 340, column: 9, scope: !3527)
!3533 = !DILocation(line: 341, column: 10, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 341, column: 10)
!3535 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 340, column: 27)
!3536 = !DILocation(line: 341, column: 14, scope: !3534)
!3537 = !DILocation(line: 341, column: 17, scope: !3534)
!3538 = !DILocation(line: 341, column: 10, scope: !3535)
!3539 = !DILocation(line: 341, column: 29, scope: !3534)
!3540 = !DILocation(line: 341, column: 22, scope: !3534)
!3541 = !DILocation(line: 342, column: 20, scope: !3534)
!3542 = !DILocation(line: 343, column: 5, scope: !3535)
!3543 = !DILocation(line: 344, column: 4, scope: !3527)
!3544 = !DILocation(line: 339, column: 33, scope: !3520)
!3545 = !DILocation(line: 339, column: 4, scope: !3520)
!3546 = distinct !{!3546, !3524, !3547}
!3547 = !DILocation(line: 344, column: 4, scope: !3516)
!3548 = !DILocation(line: 345, column: 3, scope: !3517)
!3549 = !DILocation(line: 346, column: 8, scope: !3512)
!3550 = !DILocation(line: 346, column: 12, scope: !3512)
!3551 = !DILocation(line: 346, column: 15, scope: !3512)
!3552 = !DILocation(line: 346, column: 6, scope: !3512)
!3553 = distinct !{!3553, !3508, !3554}
!3554 = !DILocation(line: 347, column: 2, scope: !3410)
!3555 = !DILocation(line: 349, column: 7, scope: !3410)
!3556 = !DILocation(line: 349, column: 14, scope: !3410)
!3557 = !DILocation(line: 349, column: 20, scope: !3410)
!3558 = !DILocation(line: 349, column: 5, scope: !3410)
!3559 = !DILocation(line: 350, column: 2, scope: !3410)
!3560 = !DILocation(line: 350, column: 9, scope: !3410)
!3561 = !DILocation(line: 351, column: 7, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 351, column: 7)
!3563 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 350, column: 13)
!3564 = !DILocation(line: 351, column: 11, scope: !3562)
!3565 = !DILocation(line: 351, column: 7, scope: !3563)
!3566 = !DILocation(line: 352, column: 11, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 352, column: 4)
!3568 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 351, column: 16)
!3569 = !DILocation(line: 352, column: 9, scope: !3567)
!3570 = !DILocation(line: 352, column: 16, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3567, file: !3, line: 352, column: 4)
!3572 = !DILocation(line: 352, column: 20, scope: !3571)
!3573 = !DILocation(line: 352, column: 24, scope: !3571)
!3574 = !DILocation(line: 352, column: 18, scope: !3571)
!3575 = !DILocation(line: 352, column: 4, scope: !3567)
!3576 = !DILocation(line: 353, column: 9, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 353, column: 9)
!3578 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 352, column: 37)
!3579 = !DILocation(line: 353, column: 13, scope: !3577)
!3580 = !DILocation(line: 353, column: 17, scope: !3577)
!3581 = !DILocation(line: 353, column: 23, scope: !3577)
!3582 = !DILocation(line: 353, column: 20, scope: !3577)
!3583 = !DILocation(line: 353, column: 9, scope: !3578)
!3584 = !DILocation(line: 354, column: 10, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !3, line: 354, column: 10)
!3586 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 353, column: 27)
!3587 = !DILocation(line: 354, column: 14, scope: !3585)
!3588 = !DILocation(line: 354, column: 17, scope: !3585)
!3589 = !DILocation(line: 354, column: 10, scope: !3586)
!3590 = !DILocation(line: 354, column: 29, scope: !3585)
!3591 = !DILocation(line: 354, column: 22, scope: !3585)
!3592 = !DILocation(line: 355, column: 20, scope: !3585)
!3593 = !DILocation(line: 356, column: 5, scope: !3586)
!3594 = !DILocation(line: 357, column: 4, scope: !3578)
!3595 = !DILocation(line: 352, column: 33, scope: !3571)
!3596 = !DILocation(line: 352, column: 4, scope: !3571)
!3597 = distinct !{!3597, !3575, !3598}
!3598 = !DILocation(line: 357, column: 4, scope: !3567)
!3599 = !DILocation(line: 358, column: 3, scope: !3568)
!3600 = !DILocation(line: 359, column: 8, scope: !3563)
!3601 = !DILocation(line: 359, column: 12, scope: !3563)
!3602 = !DILocation(line: 359, column: 15, scope: !3563)
!3603 = !DILocation(line: 359, column: 6, scope: !3563)
!3604 = distinct !{!3604, !3559, !3605}
!3605 = !DILocation(line: 360, column: 2, scope: !3410)
!3606 = !DILocation(line: 362, column: 7, scope: !3410)
!3607 = !DILocation(line: 362, column: 14, scope: !3410)
!3608 = !DILocation(line: 362, column: 20, scope: !3410)
!3609 = !DILocation(line: 362, column: 5, scope: !3410)
!3610 = !DILocation(line: 363, column: 2, scope: !3410)
!3611 = !DILocation(line: 363, column: 9, scope: !3410)
!3612 = !DILocation(line: 364, column: 7, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 364, column: 7)
!3614 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 363, column: 13)
!3615 = !DILocation(line: 364, column: 11, scope: !3613)
!3616 = !DILocation(line: 364, column: 7, scope: !3614)
!3617 = !DILocation(line: 365, column: 11, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 365, column: 4)
!3619 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 364, column: 16)
!3620 = !DILocation(line: 365, column: 9, scope: !3618)
!3621 = !DILocation(line: 365, column: 16, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 365, column: 4)
!3623 = !DILocation(line: 365, column: 20, scope: !3622)
!3624 = !DILocation(line: 365, column: 24, scope: !3622)
!3625 = !DILocation(line: 365, column: 18, scope: !3622)
!3626 = !DILocation(line: 365, column: 4, scope: !3618)
!3627 = !DILocation(line: 366, column: 9, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 366, column: 9)
!3629 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 365, column: 37)
!3630 = !DILocation(line: 366, column: 13, scope: !3628)
!3631 = !DILocation(line: 366, column: 17, scope: !3628)
!3632 = !DILocation(line: 366, column: 23, scope: !3628)
!3633 = !DILocation(line: 366, column: 20, scope: !3628)
!3634 = !DILocation(line: 366, column: 9, scope: !3629)
!3635 = !DILocation(line: 367, column: 10, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 367, column: 10)
!3637 = distinct !DILexicalBlock(scope: !3628, file: !3, line: 366, column: 27)
!3638 = !DILocation(line: 367, column: 14, scope: !3636)
!3639 = !DILocation(line: 367, column: 17, scope: !3636)
!3640 = !DILocation(line: 367, column: 10, scope: !3637)
!3641 = !DILocation(line: 367, column: 29, scope: !3636)
!3642 = !DILocation(line: 367, column: 22, scope: !3636)
!3643 = !DILocation(line: 368, column: 20, scope: !3636)
!3644 = !DILocation(line: 369, column: 5, scope: !3637)
!3645 = !DILocation(line: 370, column: 4, scope: !3629)
!3646 = !DILocation(line: 365, column: 33, scope: !3622)
!3647 = !DILocation(line: 365, column: 4, scope: !3622)
!3648 = distinct !{!3648, !3626, !3649}
!3649 = !DILocation(line: 370, column: 4, scope: !3618)
!3650 = !DILocation(line: 371, column: 3, scope: !3619)
!3651 = !DILocation(line: 372, column: 8, scope: !3614)
!3652 = !DILocation(line: 372, column: 12, scope: !3614)
!3653 = !DILocation(line: 372, column: 15, scope: !3614)
!3654 = !DILocation(line: 372, column: 6, scope: !3614)
!3655 = distinct !{!3655, !3610, !3656}
!3656 = !DILocation(line: 373, column: 2, scope: !3410)
!3657 = !DILocation(line: 376, column: 6, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 376, column: 6)
!3659 = !DILocation(line: 376, column: 15, scope: !3658)
!3660 = !DILocation(line: 376, column: 18, scope: !3658)
!3661 = !DILocation(line: 376, column: 25, scope: !3658)
!3662 = !DILocation(line: 376, column: 6, scope: !3410)
!3663 = !DILocation(line: 377, column: 21, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 376, column: 35)
!3665 = !DILocation(line: 377, column: 29, scope: !3664)
!3666 = !DILocation(line: 377, column: 33, scope: !3664)
!3667 = !DILocation(line: 377, column: 3, scope: !3664)
!3668 = !DILocation(line: 378, column: 25, scope: !3664)
!3669 = !DILocation(line: 378, column: 3, scope: !3664)
!3670 = !DILocation(line: 379, column: 2, scope: !3664)
!3671 = !DILocation(line: 381, column: 11, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 381, column: 11)
!3673 = !DILocation(line: 381, column: 20, scope: !3672)
!3674 = !DILocation(line: 381, column: 23, scope: !3672)
!3675 = !DILocation(line: 381, column: 11, scope: !3658)
!3676 = !DILocalVariable(name: "ma_new", scope: !3677, file: !3, line: 382, type: !2660)
!3677 = distinct !DILexicalBlock(scope: !3672, file: !3, line: 381, column: 31)
!3678 = !DILocation(line: 382, column: 13, scope: !3677)
!3679 = !DILocation(line: 382, column: 40, scope: !3677)
!3680 = !DILocation(line: 382, column: 22, scope: !3677)
!3681 = !DILocation(line: 384, column: 3, scope: !3677)
!3682 = !DILocation(line: 384, column: 11, scope: !3677)
!3683 = !DILocation(line: 384, column: 14, scope: !3677)
!3684 = !DILocation(line: 384, column: 17, scope: !3677)
!3685 = !DILocation(line: 387, column: 26, scope: !3677)
!3686 = !DILocation(line: 387, column: 33, scope: !3677)
!3687 = !DILocation(line: 387, column: 37, scope: !3677)
!3688 = !DILocation(line: 387, column: 40, scope: !3677)
!3689 = !DILocation(line: 387, column: 46, scope: !3677)
!3690 = !DILocation(line: 387, column: 54, scope: !3677)
!3691 = !DILocation(line: 387, column: 3, scope: !3677)
!3692 = !DILocation(line: 390, column: 8, scope: !3677)
!3693 = !DILocation(line: 390, column: 15, scope: !3677)
!3694 = !DILocation(line: 390, column: 22, scope: !3677)
!3695 = !DILocation(line: 390, column: 6, scope: !3677)
!3696 = !DILocation(line: 391, column: 3, scope: !3677)
!3697 = !DILocation(line: 391, column: 10, scope: !3677)
!3698 = !DILocation(line: 392, column: 8, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 392, column: 8)
!3700 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 391, column: 14)
!3701 = !DILocation(line: 392, column: 12, scope: !3699)
!3702 = !DILocation(line: 392, column: 8, scope: !3700)
!3703 = !DILocation(line: 393, column: 12, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 393, column: 5)
!3705 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 392, column: 17)
!3706 = !DILocation(line: 393, column: 10, scope: !3704)
!3707 = !DILocation(line: 393, column: 17, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3704, file: !3, line: 393, column: 5)
!3709 = !DILocation(line: 393, column: 21, scope: !3708)
!3710 = !DILocation(line: 393, column: 25, scope: !3708)
!3711 = !DILocation(line: 393, column: 19, scope: !3708)
!3712 = !DILocation(line: 393, column: 5, scope: !3704)
!3713 = !DILocation(line: 394, column: 10, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 394, column: 10)
!3715 = distinct !DILexicalBlock(scope: !3708, file: !3, line: 393, column: 38)
!3716 = !DILocation(line: 394, column: 14, scope: !3714)
!3717 = !DILocation(line: 394, column: 18, scope: !3714)
!3718 = !DILocation(line: 394, column: 24, scope: !3714)
!3719 = !DILocation(line: 394, column: 21, scope: !3714)
!3720 = !DILocation(line: 394, column: 10, scope: !3715)
!3721 = !DILocation(line: 395, column: 11, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !3, line: 395, column: 11)
!3723 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 394, column: 28)
!3724 = !DILocation(line: 395, column: 15, scope: !3722)
!3725 = !DILocation(line: 395, column: 18, scope: !3722)
!3726 = !DILocation(line: 395, column: 22, scope: !3722)
!3727 = !DILocation(line: 395, column: 11, scope: !3723)
!3728 = !DILocation(line: 396, column: 21, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 395, column: 31)
!3730 = !DILocation(line: 396, column: 8, scope: !3729)
!3731 = !DILocation(line: 396, column: 12, scope: !3729)
!3732 = !DILocation(line: 396, column: 16, scope: !3729)
!3733 = !DILocation(line: 396, column: 19, scope: !3729)
!3734 = !DILocation(line: 397, column: 8, scope: !3729)
!3735 = !DILocation(line: 397, column: 16, scope: !3729)
!3736 = !DILocation(line: 397, column: 19, scope: !3729)
!3737 = !DILocation(line: 397, column: 21, scope: !3729)
!3738 = !DILocation(line: 398, column: 8, scope: !3729)
!3739 = !DILocation(line: 398, column: 12, scope: !3729)
!3740 = !DILocation(line: 398, column: 15, scope: !3729)
!3741 = !DILocation(line: 398, column: 17, scope: !3729)
!3742 = !DILocation(line: 399, column: 7, scope: !3729)
!3743 = !DILocation(line: 400, column: 6, scope: !3723)
!3744 = !DILocation(line: 401, column: 5, scope: !3715)
!3745 = !DILocation(line: 393, column: 34, scope: !3708)
!3746 = !DILocation(line: 393, column: 5, scope: !3708)
!3747 = distinct !{!3747, !3712, !3748}
!3748 = !DILocation(line: 401, column: 5, scope: !3704)
!3749 = !DILocation(line: 402, column: 4, scope: !3705)
!3750 = !DILocation(line: 403, column: 9, scope: !3700)
!3751 = !DILocation(line: 403, column: 13, scope: !3700)
!3752 = !DILocation(line: 403, column: 16, scope: !3700)
!3753 = !DILocation(line: 403, column: 7, scope: !3700)
!3754 = distinct !{!3754, !3696, !3755}
!3755 = !DILocation(line: 404, column: 3, scope: !3677)
!3756 = !DILocation(line: 406, column: 8, scope: !3677)
!3757 = !DILocation(line: 406, column: 15, scope: !3677)
!3758 = !DILocation(line: 406, column: 20, scope: !3677)
!3759 = !DILocation(line: 406, column: 6, scope: !3677)
!3760 = !DILocation(line: 407, column: 3, scope: !3677)
!3761 = !DILocation(line: 407, column: 10, scope: !3677)
!3762 = !DILocation(line: 408, column: 8, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 408, column: 8)
!3764 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 407, column: 14)
!3765 = !DILocation(line: 408, column: 12, scope: !3763)
!3766 = !DILocation(line: 408, column: 8, scope: !3764)
!3767 = !DILocation(line: 409, column: 12, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 409, column: 5)
!3769 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 408, column: 17)
!3770 = !DILocation(line: 409, column: 10, scope: !3768)
!3771 = !DILocation(line: 409, column: 17, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 409, column: 5)
!3773 = !DILocation(line: 409, column: 21, scope: !3772)
!3774 = !DILocation(line: 409, column: 25, scope: !3772)
!3775 = !DILocation(line: 409, column: 19, scope: !3772)
!3776 = !DILocation(line: 409, column: 5, scope: !3768)
!3777 = !DILocation(line: 410, column: 10, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 410, column: 10)
!3779 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 409, column: 38)
!3780 = !DILocation(line: 410, column: 14, scope: !3778)
!3781 = !DILocation(line: 410, column: 18, scope: !3778)
!3782 = !DILocation(line: 410, column: 24, scope: !3778)
!3783 = !DILocation(line: 410, column: 21, scope: !3778)
!3784 = !DILocation(line: 410, column: 10, scope: !3779)
!3785 = !DILocation(line: 411, column: 11, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 411, column: 11)
!3787 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 410, column: 28)
!3788 = !DILocation(line: 411, column: 15, scope: !3786)
!3789 = !DILocation(line: 411, column: 18, scope: !3786)
!3790 = !DILocation(line: 411, column: 22, scope: !3786)
!3791 = !DILocation(line: 411, column: 11, scope: !3787)
!3792 = !DILocation(line: 412, column: 21, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 411, column: 31)
!3794 = !DILocation(line: 412, column: 8, scope: !3793)
!3795 = !DILocation(line: 412, column: 12, scope: !3793)
!3796 = !DILocation(line: 412, column: 16, scope: !3793)
!3797 = !DILocation(line: 412, column: 19, scope: !3793)
!3798 = !DILocation(line: 413, column: 8, scope: !3793)
!3799 = !DILocation(line: 413, column: 16, scope: !3793)
!3800 = !DILocation(line: 413, column: 19, scope: !3793)
!3801 = !DILocation(line: 413, column: 21, scope: !3793)
!3802 = !DILocation(line: 414, column: 8, scope: !3793)
!3803 = !DILocation(line: 414, column: 12, scope: !3793)
!3804 = !DILocation(line: 414, column: 15, scope: !3793)
!3805 = !DILocation(line: 414, column: 17, scope: !3793)
!3806 = !DILocation(line: 415, column: 7, scope: !3793)
!3807 = !DILocation(line: 416, column: 6, scope: !3787)
!3808 = !DILocation(line: 417, column: 5, scope: !3779)
!3809 = !DILocation(line: 409, column: 34, scope: !3772)
!3810 = !DILocation(line: 409, column: 5, scope: !3772)
!3811 = distinct !{!3811, !3776, !3812}
!3812 = !DILocation(line: 417, column: 5, scope: !3768)
!3813 = !DILocation(line: 418, column: 4, scope: !3769)
!3814 = !DILocation(line: 419, column: 9, scope: !3764)
!3815 = !DILocation(line: 419, column: 13, scope: !3764)
!3816 = !DILocation(line: 419, column: 16, scope: !3764)
!3817 = !DILocation(line: 419, column: 7, scope: !3764)
!3818 = distinct !{!3818, !3760, !3819}
!3819 = !DILocation(line: 420, column: 3, scope: !3677)
!3820 = !DILocation(line: 422, column: 8, scope: !3677)
!3821 = !DILocation(line: 422, column: 15, scope: !3677)
!3822 = !DILocation(line: 422, column: 21, scope: !3677)
!3823 = !DILocation(line: 422, column: 6, scope: !3677)
!3824 = !DILocation(line: 423, column: 3, scope: !3677)
!3825 = !DILocation(line: 423, column: 10, scope: !3677)
!3826 = !DILocation(line: 424, column: 8, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 424, column: 8)
!3828 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 423, column: 14)
!3829 = !DILocation(line: 424, column: 12, scope: !3827)
!3830 = !DILocation(line: 424, column: 8, scope: !3828)
!3831 = !DILocation(line: 425, column: 12, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 425, column: 5)
!3833 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 424, column: 17)
!3834 = !DILocation(line: 425, column: 10, scope: !3832)
!3835 = !DILocation(line: 425, column: 17, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 425, column: 5)
!3837 = !DILocation(line: 425, column: 21, scope: !3836)
!3838 = !DILocation(line: 425, column: 25, scope: !3836)
!3839 = !DILocation(line: 425, column: 19, scope: !3836)
!3840 = !DILocation(line: 425, column: 5, scope: !3832)
!3841 = !DILocation(line: 426, column: 10, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 426, column: 10)
!3843 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 425, column: 38)
!3844 = !DILocation(line: 426, column: 14, scope: !3842)
!3845 = !DILocation(line: 426, column: 18, scope: !3842)
!3846 = !DILocation(line: 426, column: 24, scope: !3842)
!3847 = !DILocation(line: 426, column: 21, scope: !3842)
!3848 = !DILocation(line: 426, column: 10, scope: !3843)
!3849 = !DILocation(line: 427, column: 11, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 427, column: 11)
!3851 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 426, column: 28)
!3852 = !DILocation(line: 427, column: 15, scope: !3850)
!3853 = !DILocation(line: 427, column: 18, scope: !3850)
!3854 = !DILocation(line: 427, column: 22, scope: !3850)
!3855 = !DILocation(line: 427, column: 11, scope: !3851)
!3856 = !DILocation(line: 428, column: 21, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 427, column: 31)
!3858 = !DILocation(line: 428, column: 8, scope: !3857)
!3859 = !DILocation(line: 428, column: 12, scope: !3857)
!3860 = !DILocation(line: 428, column: 16, scope: !3857)
!3861 = !DILocation(line: 428, column: 19, scope: !3857)
!3862 = !DILocation(line: 429, column: 8, scope: !3857)
!3863 = !DILocation(line: 429, column: 16, scope: !3857)
!3864 = !DILocation(line: 429, column: 19, scope: !3857)
!3865 = !DILocation(line: 429, column: 21, scope: !3857)
!3866 = !DILocation(line: 430, column: 8, scope: !3857)
!3867 = !DILocation(line: 430, column: 12, scope: !3857)
!3868 = !DILocation(line: 430, column: 15, scope: !3857)
!3869 = !DILocation(line: 430, column: 17, scope: !3857)
!3870 = !DILocation(line: 431, column: 7, scope: !3857)
!3871 = !DILocation(line: 432, column: 6, scope: !3851)
!3872 = !DILocation(line: 433, column: 5, scope: !3843)
!3873 = !DILocation(line: 425, column: 34, scope: !3836)
!3874 = !DILocation(line: 425, column: 5, scope: !3836)
!3875 = distinct !{!3875, !3840, !3876}
!3876 = !DILocation(line: 433, column: 5, scope: !3832)
!3877 = !DILocation(line: 434, column: 4, scope: !3833)
!3878 = !DILocation(line: 435, column: 9, scope: !3828)
!3879 = !DILocation(line: 435, column: 13, scope: !3828)
!3880 = !DILocation(line: 435, column: 16, scope: !3828)
!3881 = !DILocation(line: 435, column: 7, scope: !3828)
!3882 = distinct !{!3882, !3824, !3883}
!3883 = !DILocation(line: 436, column: 3, scope: !3677)
!3884 = !DILocation(line: 438, column: 8, scope: !3677)
!3885 = !DILocation(line: 438, column: 15, scope: !3677)
!3886 = !DILocation(line: 438, column: 21, scope: !3677)
!3887 = !DILocation(line: 438, column: 6, scope: !3677)
!3888 = !DILocation(line: 439, column: 3, scope: !3677)
!3889 = !DILocation(line: 439, column: 10, scope: !3677)
!3890 = !DILocation(line: 440, column: 8, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 440, column: 8)
!3892 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 439, column: 14)
!3893 = !DILocation(line: 440, column: 12, scope: !3891)
!3894 = !DILocation(line: 440, column: 8, scope: !3892)
!3895 = !DILocation(line: 441, column: 12, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 441, column: 5)
!3897 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 440, column: 17)
!3898 = !DILocation(line: 441, column: 10, scope: !3896)
!3899 = !DILocation(line: 441, column: 17, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3896, file: !3, line: 441, column: 5)
!3901 = !DILocation(line: 441, column: 21, scope: !3900)
!3902 = !DILocation(line: 441, column: 25, scope: !3900)
!3903 = !DILocation(line: 441, column: 19, scope: !3900)
!3904 = !DILocation(line: 441, column: 5, scope: !3896)
!3905 = !DILocation(line: 442, column: 10, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 442, column: 10)
!3907 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 441, column: 38)
!3908 = !DILocation(line: 442, column: 14, scope: !3906)
!3909 = !DILocation(line: 442, column: 18, scope: !3906)
!3910 = !DILocation(line: 442, column: 24, scope: !3906)
!3911 = !DILocation(line: 442, column: 21, scope: !3906)
!3912 = !DILocation(line: 442, column: 10, scope: !3907)
!3913 = !DILocation(line: 443, column: 11, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !3, line: 443, column: 11)
!3915 = distinct !DILexicalBlock(scope: !3906, file: !3, line: 442, column: 28)
!3916 = !DILocation(line: 443, column: 15, scope: !3914)
!3917 = !DILocation(line: 443, column: 18, scope: !3914)
!3918 = !DILocation(line: 443, column: 22, scope: !3914)
!3919 = !DILocation(line: 443, column: 11, scope: !3915)
!3920 = !DILocation(line: 444, column: 21, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3914, file: !3, line: 443, column: 31)
!3922 = !DILocation(line: 444, column: 8, scope: !3921)
!3923 = !DILocation(line: 444, column: 12, scope: !3921)
!3924 = !DILocation(line: 444, column: 16, scope: !3921)
!3925 = !DILocation(line: 444, column: 19, scope: !3921)
!3926 = !DILocation(line: 445, column: 8, scope: !3921)
!3927 = !DILocation(line: 445, column: 16, scope: !3921)
!3928 = !DILocation(line: 445, column: 19, scope: !3921)
!3929 = !DILocation(line: 445, column: 21, scope: !3921)
!3930 = !DILocation(line: 446, column: 8, scope: !3921)
!3931 = !DILocation(line: 446, column: 12, scope: !3921)
!3932 = !DILocation(line: 446, column: 15, scope: !3921)
!3933 = !DILocation(line: 446, column: 17, scope: !3921)
!3934 = !DILocation(line: 447, column: 7, scope: !3921)
!3935 = !DILocation(line: 448, column: 6, scope: !3915)
!3936 = !DILocation(line: 449, column: 5, scope: !3907)
!3937 = !DILocation(line: 441, column: 34, scope: !3900)
!3938 = !DILocation(line: 441, column: 5, scope: !3900)
!3939 = distinct !{!3939, !3904, !3940}
!3940 = !DILocation(line: 449, column: 5, scope: !3896)
!3941 = !DILocation(line: 450, column: 4, scope: !3897)
!3942 = !DILocation(line: 451, column: 9, scope: !3892)
!3943 = !DILocation(line: 451, column: 13, scope: !3892)
!3944 = !DILocation(line: 451, column: 16, scope: !3892)
!3945 = !DILocation(line: 451, column: 7, scope: !3892)
!3946 = distinct !{!3946, !3888, !3947}
!3947 = !DILocation(line: 452, column: 3, scope: !3677)
!3948 = !DILocation(line: 453, column: 2, scope: !3677)
!3949 = !DILocation(line: 454, column: 1, scope: !3410)
!3950 = distinct !DISubprogram(name: "extern_local_material", scope: !3, file: !3, line: 288, type: !2684, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!3951 = !DILocalVariable(name: "ma", arg: 1, scope: !3950, file: !3, line: 288, type: !2660)
!3952 = !DILocation(line: 288, column: 45, scope: !3950)
!3953 = !DILocalVariable(name: "i", scope: !3950, file: !3, line: 290, type: !178)
!3954 = !DILocation(line: 290, column: 6, scope: !3950)
!3955 = !DILocation(line: 291, column: 9, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 291, column: 2)
!3957 = !DILocation(line: 291, column: 7, scope: !3956)
!3958 = !DILocation(line: 291, column: 14, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 291, column: 2)
!3960 = !DILocation(line: 291, column: 16, scope: !3959)
!3961 = !DILocation(line: 291, column: 2, scope: !3956)
!3962 = !DILocation(line: 292, column: 7, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 292, column: 7)
!3964 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 291, column: 33)
!3965 = !DILocation(line: 292, column: 11, scope: !3963)
!3966 = !DILocation(line: 292, column: 16, scope: !3963)
!3967 = !DILocation(line: 292, column: 7, scope: !3964)
!3968 = !DILocation(line: 292, column: 40, scope: !3963)
!3969 = !DILocation(line: 292, column: 44, scope: !3963)
!3970 = !DILocation(line: 292, column: 49, scope: !3963)
!3971 = !DILocation(line: 292, column: 53, scope: !3963)
!3972 = !DILocation(line: 292, column: 34, scope: !3963)
!3973 = !DILocation(line: 292, column: 20, scope: !3963)
!3974 = !DILocation(line: 293, column: 2, scope: !3964)
!3975 = !DILocation(line: 291, column: 29, scope: !3959)
!3976 = !DILocation(line: 291, column: 2, scope: !3959)
!3977 = distinct !{!3977, !3961, !3978}
!3978 = !DILocation(line: 293, column: 2, scope: !3956)
!3979 = !DILocation(line: 294, column: 1, scope: !3950)
!3980 = distinct !DISubprogram(name: "extern_local_matarar", scope: !3, file: !3, line: 457, type: !3981, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{null, !311, !176}
!3983 = !DILocalVariable(name: "matar", arg: 1, scope: !3980, file: !3, line: 457, type: !311)
!3984 = !DILocation(line: 457, column: 45, scope: !3980)
!3985 = !DILocalVariable(name: "totcol", arg: 2, scope: !3980, file: !3, line: 457, type: !176)
!3986 = !DILocation(line: 457, column: 58, scope: !3980)
!3987 = !DILocalVariable(name: "i", scope: !3980, file: !3, line: 459, type: !176)
!3988 = !DILocation(line: 459, column: 8, scope: !3980)
!3989 = !DILocation(line: 460, column: 9, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 460, column: 2)
!3991 = !DILocation(line: 460, column: 7, scope: !3990)
!3992 = !DILocation(line: 460, column: 14, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 460, column: 2)
!3994 = !DILocation(line: 460, column: 18, scope: !3993)
!3995 = !DILocation(line: 460, column: 16, scope: !3993)
!3996 = !DILocation(line: 460, column: 2, scope: !3990)
!3997 = !DILocation(line: 461, column: 23, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 460, column: 31)
!3999 = !DILocation(line: 461, column: 29, scope: !3998)
!4000 = !DILocation(line: 461, column: 17, scope: !3998)
!4001 = !DILocation(line: 461, column: 3, scope: !3998)
!4002 = !DILocation(line: 462, column: 2, scope: !3998)
!4003 = !DILocation(line: 460, column: 27, scope: !3993)
!4004 = !DILocation(line: 460, column: 2, scope: !3993)
!4005 = distinct !{!4005, !3996, !4006}
!4006 = !DILocation(line: 462, column: 2, scope: !3990)
!4007 = !DILocation(line: 463, column: 1, scope: !3980)
!4008 = distinct !DISubprogram(name: "give_matarar", scope: !3, file: !3, line: 465, type: !4009, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!4011, !3417}
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!4012 = !DILocalVariable(name: "ob", arg: 1, scope: !4008, file: !3, line: 465, type: !3417)
!4013 = !DILocation(line: 465, column: 34, scope: !4008)
!4014 = !DILocalVariable(name: "me", scope: !4008, file: !3, line: 467, type: !215)
!4015 = !DILocation(line: 467, column: 8, scope: !4008)
!4016 = !DILocalVariable(name: "cu", scope: !4008, file: !3, line: 468, type: !2509)
!4017 = !DILocation(line: 468, column: 9, scope: !4008)
!4018 = !DILocalVariable(name: "mb", scope: !4008, file: !3, line: 469, type: !2611)
!4019 = !DILocation(line: 469, column: 12, scope: !4008)
!4020 = !DILocation(line: 471, column: 6, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 471, column: 6)
!4022 = !DILocation(line: 471, column: 10, scope: !4021)
!4023 = !DILocation(line: 471, column: 15, scope: !4021)
!4024 = !DILocation(line: 471, column: 6, scope: !4008)
!4025 = !DILocation(line: 472, column: 8, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 471, column: 27)
!4027 = !DILocation(line: 472, column: 12, scope: !4026)
!4028 = !DILocation(line: 472, column: 6, scope: !4026)
!4029 = !DILocation(line: 473, column: 12, scope: !4026)
!4030 = !DILocation(line: 473, column: 16, scope: !4026)
!4031 = !DILocation(line: 473, column: 3, scope: !4026)
!4032 = !DILocation(line: 475, column: 11, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 475, column: 11)
!4034 = !DILocation(line: 475, column: 11, scope: !4021)
!4035 = !DILocation(line: 476, column: 8, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 475, column: 55)
!4037 = !DILocation(line: 476, column: 12, scope: !4036)
!4038 = !DILocation(line: 476, column: 6, scope: !4036)
!4039 = !DILocation(line: 477, column: 12, scope: !4036)
!4040 = !DILocation(line: 477, column: 16, scope: !4036)
!4041 = !DILocation(line: 477, column: 3, scope: !4036)
!4042 = !DILocation(line: 479, column: 11, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 479, column: 11)
!4044 = !DILocation(line: 479, column: 15, scope: !4043)
!4045 = !DILocation(line: 479, column: 20, scope: !4043)
!4046 = !DILocation(line: 479, column: 11, scope: !4033)
!4047 = !DILocation(line: 480, column: 8, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 479, column: 33)
!4049 = !DILocation(line: 480, column: 12, scope: !4048)
!4050 = !DILocation(line: 480, column: 6, scope: !4048)
!4051 = !DILocation(line: 481, column: 12, scope: !4048)
!4052 = !DILocation(line: 481, column: 16, scope: !4048)
!4053 = !DILocation(line: 481, column: 3, scope: !4048)
!4054 = !DILocation(line: 483, column: 2, scope: !4008)
!4055 = !DILocation(line: 484, column: 1, scope: !4008)
!4056 = distinct !DISubprogram(name: "give_totcolp", scope: !3, file: !3, line: 486, type: !4057, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!214, !3417}
!4059 = !DILocalVariable(name: "ob", arg: 1, scope: !4056, file: !3, line: 486, type: !3417)
!4060 = !DILocation(line: 486, column: 29, scope: !4056)
!4061 = !DILocalVariable(name: "me", scope: !4056, file: !3, line: 488, type: !215)
!4062 = !DILocation(line: 488, column: 8, scope: !4056)
!4063 = !DILocalVariable(name: "cu", scope: !4056, file: !3, line: 489, type: !2509)
!4064 = !DILocation(line: 489, column: 9, scope: !4056)
!4065 = !DILocalVariable(name: "mb", scope: !4056, file: !3, line: 490, type: !2611)
!4066 = !DILocation(line: 490, column: 12, scope: !4056)
!4067 = !DILocation(line: 492, column: 6, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 492, column: 6)
!4069 = !DILocation(line: 492, column: 10, scope: !4068)
!4070 = !DILocation(line: 492, column: 15, scope: !4068)
!4071 = !DILocation(line: 492, column: 6, scope: !4056)
!4072 = !DILocation(line: 493, column: 8, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 492, column: 27)
!4074 = !DILocation(line: 493, column: 12, scope: !4073)
!4075 = !DILocation(line: 493, column: 6, scope: !4073)
!4076 = !DILocation(line: 494, column: 12, scope: !4073)
!4077 = !DILocation(line: 494, column: 16, scope: !4073)
!4078 = !DILocation(line: 494, column: 3, scope: !4073)
!4079 = !DILocation(line: 496, column: 11, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 496, column: 11)
!4081 = !DILocation(line: 496, column: 11, scope: !4068)
!4082 = !DILocation(line: 497, column: 8, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 496, column: 55)
!4084 = !DILocation(line: 497, column: 12, scope: !4083)
!4085 = !DILocation(line: 497, column: 6, scope: !4083)
!4086 = !DILocation(line: 498, column: 12, scope: !4083)
!4087 = !DILocation(line: 498, column: 16, scope: !4083)
!4088 = !DILocation(line: 498, column: 3, scope: !4083)
!4089 = !DILocation(line: 500, column: 11, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 500, column: 11)
!4091 = !DILocation(line: 500, column: 15, scope: !4090)
!4092 = !DILocation(line: 500, column: 20, scope: !4090)
!4093 = !DILocation(line: 500, column: 11, scope: !4080)
!4094 = !DILocation(line: 501, column: 8, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 500, column: 33)
!4096 = !DILocation(line: 501, column: 12, scope: !4095)
!4097 = !DILocation(line: 501, column: 6, scope: !4095)
!4098 = !DILocation(line: 502, column: 12, scope: !4095)
!4099 = !DILocation(line: 502, column: 16, scope: !4095)
!4100 = !DILocation(line: 502, column: 3, scope: !4095)
!4101 = !DILocation(line: 504, column: 2, scope: !4056)
!4102 = !DILocation(line: 505, column: 1, scope: !4056)
!4103 = distinct !DISubprogram(name: "give_matarar_id", scope: !3, file: !3, line: 508, type: !4104, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!4011, !142}
!4106 = !DILocalVariable(name: "id", arg: 1, scope: !4103, file: !3, line: 508, type: !142)
!4107 = !DILocation(line: 508, column: 33, scope: !4103)
!4108 = !DILocation(line: 513, column: 10, scope: !4103)
!4109 = !DILocation(line: 513, column: 2, scope: !4103)
!4110 = !DILocation(line: 515, column: 22, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 513, column: 24)
!4112 = !DILocation(line: 515, column: 27, scope: !4111)
!4113 = !DILocation(line: 515, column: 4, scope: !4111)
!4114 = !DILocation(line: 517, column: 23, scope: !4111)
!4115 = !DILocation(line: 517, column: 28, scope: !4111)
!4116 = !DILocation(line: 517, column: 4, scope: !4111)
!4117 = !DILocation(line: 519, column: 26, scope: !4111)
!4118 = !DILocation(line: 519, column: 31, scope: !4111)
!4119 = !DILocation(line: 519, column: 4, scope: !4111)
!4120 = !DILocation(line: 521, column: 2, scope: !4103)
!4121 = !DILocation(line: 522, column: 1, scope: !4103)
!4122 = distinct !DISubprogram(name: "give_totcolp_id", scope: !3, file: !3, line: 524, type: !4123, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{!214, !142}
!4125 = !DILocalVariable(name: "id", arg: 1, scope: !4122, file: !3, line: 524, type: !142)
!4126 = !DILocation(line: 524, column: 28, scope: !4122)
!4127 = !DILocation(line: 529, column: 10, scope: !4122)
!4128 = !DILocation(line: 529, column: 2, scope: !4122)
!4129 = !DILocation(line: 531, column: 22, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 529, column: 24)
!4131 = !DILocation(line: 531, column: 27, scope: !4130)
!4132 = !DILocation(line: 531, column: 4, scope: !4130)
!4133 = !DILocation(line: 533, column: 23, scope: !4130)
!4134 = !DILocation(line: 533, column: 28, scope: !4130)
!4135 = !DILocation(line: 533, column: 4, scope: !4130)
!4136 = !DILocation(line: 535, column: 26, scope: !4130)
!4137 = !DILocation(line: 535, column: 31, scope: !4130)
!4138 = !DILocation(line: 535, column: 4, scope: !4130)
!4139 = !DILocation(line: 537, column: 2, scope: !4122)
!4140 = !DILocation(line: 538, column: 1, scope: !4122)
!4141 = distinct !DISubprogram(name: "BKE_material_resize_id", scope: !3, file: !3, line: 576, type: !4142, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{null, !151, !176, !1171}
!4144 = !DILocalVariable(name: "id", arg: 1, scope: !4141, file: !3, line: 576, type: !151)
!4145 = !DILocation(line: 576, column: 40, scope: !4141)
!4146 = !DILocalVariable(name: "totcol", arg: 2, scope: !4141, file: !3, line: 576, type: !176)
!4147 = !DILocation(line: 576, column: 50, scope: !4141)
!4148 = !DILocalVariable(name: "do_id_user", arg: 3, scope: !4141, file: !3, line: 576, type: !1171)
!4149 = !DILocation(line: 576, column: 63, scope: !4141)
!4150 = !DILocalVariable(name: "matar", scope: !4141, file: !3, line: 578, type: !4151)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!4153 = !DILocation(line: 578, column: 14, scope: !4141)
!4154 = !DILocation(line: 578, column: 38, scope: !4141)
!4155 = !DILocation(line: 578, column: 22, scope: !4141)
!4156 = !DILocalVariable(name: "totcolp", scope: !4141, file: !3, line: 579, type: !214)
!4157 = !DILocation(line: 579, column: 9, scope: !4141)
!4158 = !DILocation(line: 579, column: 35, scope: !4141)
!4159 = !DILocation(line: 579, column: 19, scope: !4141)
!4160 = !DILocation(line: 581, column: 6, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 581, column: 6)
!4162 = !DILocation(line: 581, column: 12, scope: !4161)
!4163 = !DILocation(line: 581, column: 6, scope: !4141)
!4164 = !DILocation(line: 582, column: 3, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 581, column: 21)
!4166 = !DILocation(line: 585, column: 6, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 585, column: 6)
!4168 = !DILocation(line: 585, column: 17, scope: !4167)
!4169 = !DILocation(line: 585, column: 20, scope: !4167)
!4170 = !DILocation(line: 585, column: 31, scope: !4167)
!4171 = !DILocation(line: 585, column: 30, scope: !4167)
!4172 = !DILocation(line: 585, column: 29, scope: !4167)
!4173 = !DILocation(line: 585, column: 27, scope: !4167)
!4174 = !DILocation(line: 585, column: 6, scope: !4141)
!4175 = !DILocalVariable(name: "i", scope: !4176, file: !3, line: 586, type: !176)
!4176 = distinct !DILexicalBlock(scope: !4167, file: !3, line: 585, column: 41)
!4177 = !DILocation(line: 586, column: 9, scope: !4176)
!4178 = !DILocation(line: 587, column: 12, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 587, column: 3)
!4180 = !DILocation(line: 587, column: 10, scope: !4179)
!4181 = !DILocation(line: 587, column: 8, scope: !4179)
!4182 = !DILocation(line: 587, column: 20, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 587, column: 3)
!4184 = !DILocation(line: 587, column: 26, scope: !4183)
!4185 = !DILocation(line: 587, column: 25, scope: !4183)
!4186 = !DILocation(line: 587, column: 24, scope: !4183)
!4187 = !DILocation(line: 587, column: 22, scope: !4183)
!4188 = !DILocation(line: 587, column: 3, scope: !4179)
!4189 = !DILocation(line: 588, column: 22, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 587, column: 41)
!4191 = !DILocation(line: 588, column: 21, scope: !4190)
!4192 = !DILocation(line: 588, column: 29, scope: !4190)
!4193 = !DILocation(line: 588, column: 20, scope: !4190)
!4194 = !DILocation(line: 588, column: 14, scope: !4190)
!4195 = !DILocation(line: 588, column: 4, scope: !4190)
!4196 = !DILocation(line: 589, column: 3, scope: !4190)
!4197 = !DILocation(line: 587, column: 37, scope: !4183)
!4198 = !DILocation(line: 587, column: 3, scope: !4183)
!4199 = distinct !{!4199, !4188, !4200}
!4200 = !DILocation(line: 589, column: 3, scope: !4179)
!4201 = !DILocation(line: 590, column: 2, scope: !4176)
!4202 = !DILocation(line: 592, column: 6, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 592, column: 6)
!4204 = !DILocation(line: 592, column: 13, scope: !4203)
!4205 = !DILocation(line: 592, column: 6, scope: !4141)
!4206 = !DILocation(line: 593, column: 8, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 593, column: 7)
!4208 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 592, column: 19)
!4209 = !DILocation(line: 593, column: 7, scope: !4207)
!4210 = !DILocation(line: 593, column: 7, scope: !4208)
!4211 = !DILocation(line: 594, column: 4, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 593, column: 17)
!4213 = !DILocation(line: 594, column: 15, scope: !4212)
!4214 = !DILocation(line: 594, column: 14, scope: !4212)
!4215 = !DILocation(line: 595, column: 5, scope: !4212)
!4216 = !DILocation(line: 595, column: 11, scope: !4212)
!4217 = !DILocation(line: 596, column: 3, scope: !4212)
!4218 = !DILocation(line: 597, column: 2, scope: !4208)
!4219 = !DILocation(line: 599, column: 12, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 598, column: 7)
!4221 = !DILocation(line: 599, column: 4, scope: !4220)
!4222 = !DILocation(line: 599, column: 10, scope: !4220)
!4223 = !DILocation(line: 601, column: 13, scope: !4141)
!4224 = !DILocation(line: 601, column: 3, scope: !4141)
!4225 = !DILocation(line: 601, column: 11, scope: !4141)
!4226 = !DILocation(line: 602, column: 1, scope: !4141)
!4227 = distinct !DISubprogram(name: "BKE_material_append_id", scope: !3, file: !3, line: 604, type: !4228, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{null, !142, !2660}
!4230 = !DILocalVariable(name: "id", arg: 1, scope: !4227, file: !3, line: 604, type: !142)
!4231 = !DILocation(line: 604, column: 33, scope: !4227)
!4232 = !DILocalVariable(name: "ma", arg: 2, scope: !4227, file: !3, line: 604, type: !2660)
!4233 = !DILocation(line: 604, column: 47, scope: !4227)
!4234 = !DILocalVariable(name: "matar", scope: !4227, file: !3, line: 606, type: !4151)
!4235 = !DILocation(line: 606, column: 14, scope: !4227)
!4236 = !DILocation(line: 607, column: 31, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 607, column: 6)
!4238 = !DILocation(line: 607, column: 15, scope: !4237)
!4239 = !DILocation(line: 607, column: 13, scope: !4237)
!4240 = !DILocation(line: 607, column: 6, scope: !4227)
!4241 = !DILocalVariable(name: "totcol", scope: !4242, file: !3, line: 608, type: !214)
!4242 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 607, column: 37)
!4243 = !DILocation(line: 608, column: 10, scope: !4242)
!4244 = !DILocation(line: 608, column: 35, scope: !4242)
!4245 = !DILocation(line: 608, column: 19, scope: !4242)
!4246 = !DILocalVariable(name: "mat", scope: !4242, file: !3, line: 609, type: !4152)
!4247 = !DILocation(line: 609, column: 14, scope: !4242)
!4248 = !DILocation(line: 609, column: 20, scope: !4242)
!4249 = !DILocation(line: 609, column: 52, scope: !4242)
!4250 = !DILocation(line: 609, column: 51, scope: !4242)
!4251 = !DILocation(line: 609, column: 50, scope: !4242)
!4252 = !DILocation(line: 609, column: 60, scope: !4242)
!4253 = !DILocation(line: 609, column: 49, scope: !4242)
!4254 = !DILocation(line: 609, column: 47, scope: !4242)
!4255 = !DILocation(line: 610, column: 8, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 610, column: 7)
!4257 = !DILocation(line: 610, column: 7, scope: !4256)
!4258 = !DILocation(line: 610, column: 7, scope: !4242)
!4259 = !DILocation(line: 610, column: 23, scope: !4256)
!4260 = !DILocation(line: 610, column: 16, scope: !4256)
!4261 = !DILocation(line: 610, column: 29, scope: !4256)
!4262 = !DILocation(line: 610, column: 28, scope: !4256)
!4263 = !DILocation(line: 610, column: 55, scope: !4256)
!4264 = !DILocation(line: 610, column: 54, scope: !4256)
!4265 = !DILocation(line: 610, column: 53, scope: !4256)
!4266 = !DILocation(line: 610, column: 51, scope: !4256)
!4267 = !DILocation(line: 611, column: 8, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 611, column: 7)
!4269 = !DILocation(line: 611, column: 7, scope: !4268)
!4270 = !DILocation(line: 611, column: 7, scope: !4242)
!4271 = !DILocation(line: 611, column: 15, scope: !4268)
!4272 = !DILocation(line: 611, column: 26, scope: !4268)
!4273 = !DILocation(line: 611, column: 25, scope: !4268)
!4274 = !DILocation(line: 613, column: 12, scope: !4242)
!4275 = !DILocation(line: 613, column: 4, scope: !4242)
!4276 = !DILocation(line: 613, column: 10, scope: !4242)
!4277 = !DILocation(line: 614, column: 27, scope: !4242)
!4278 = !DILocation(line: 614, column: 5, scope: !4242)
!4279 = !DILocation(line: 614, column: 4, scope: !4242)
!4280 = !DILocation(line: 614, column: 14, scope: !4242)
!4281 = !DILocation(line: 614, column: 21, scope: !4242)
!4282 = !DILocation(line: 614, column: 3, scope: !4242)
!4283 = !DILocation(line: 614, column: 25, scope: !4242)
!4284 = !DILocation(line: 616, column: 20, scope: !4242)
!4285 = !DILocation(line: 616, column: 14, scope: !4242)
!4286 = !DILocation(line: 616, column: 3, scope: !4242)
!4287 = !DILocation(line: 617, column: 27, scope: !4242)
!4288 = !DILocation(line: 617, column: 33, scope: !4242)
!4289 = !DILocation(line: 617, column: 3, scope: !4242)
!4290 = !DILocation(line: 618, column: 2, scope: !4242)
!4291 = !DILocation(line: 619, column: 1, scope: !4227)
!4292 = distinct !DISubprogram(name: "test_object_materials", scope: !3, file: !3, line: 778, type: !4293, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{null, !3134, !142}
!4295 = !DILocalVariable(name: "bmain", arg: 1, scope: !4292, file: !3, line: 778, type: !3134)
!4296 = !DILocation(line: 778, column: 34, scope: !4292)
!4297 = !DILocalVariable(name: "id", arg: 2, scope: !4292, file: !3, line: 778, type: !142)
!4298 = !DILocation(line: 778, column: 45, scope: !4292)
!4299 = !DILocalVariable(name: "ob", scope: !4292, file: !3, line: 781, type: !3417)
!4300 = !DILocation(line: 781, column: 10, scope: !4292)
!4301 = !DILocalVariable(name: "totcol", scope: !4292, file: !3, line: 782, type: !4302)
!4302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4303, size: 64)
!4303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!4304 = !DILocation(line: 782, column: 15, scope: !4292)
!4305 = !DILocation(line: 784, column: 6, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 784, column: 6)
!4307 = !DILocation(line: 784, column: 9, scope: !4306)
!4308 = !DILocation(line: 784, column: 17, scope: !4306)
!4309 = !DILocation(line: 784, column: 46, scope: !4306)
!4310 = !DILocation(line: 784, column: 30, scope: !4306)
!4311 = !DILocation(line: 784, column: 28, scope: !4306)
!4312 = !DILocation(line: 784, column: 51, scope: !4306)
!4313 = !DILocation(line: 784, column: 6, scope: !4292)
!4314 = !DILocation(line: 785, column: 3, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 784, column: 60)
!4316 = !DILocation(line: 788, column: 16, scope: !4292)
!4317 = !DILocation(line: 788, column: 2, scope: !4292)
!4318 = !DILocation(line: 789, column: 12, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 789, column: 2)
!4320 = !DILocation(line: 789, column: 19, scope: !4319)
!4321 = !DILocation(line: 789, column: 26, scope: !4319)
!4322 = !DILocation(line: 789, column: 10, scope: !4319)
!4323 = !DILocation(line: 789, column: 7, scope: !4319)
!4324 = !DILocation(line: 789, column: 33, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 789, column: 2)
!4326 = !DILocation(line: 789, column: 2, scope: !4319)
!4327 = !DILocation(line: 790, column: 7, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 790, column: 7)
!4329 = distinct !DILexicalBlock(scope: !4325, file: !3, line: 789, column: 55)
!4330 = !DILocation(line: 790, column: 11, scope: !4328)
!4331 = !DILocation(line: 790, column: 19, scope: !4328)
!4332 = !DILocation(line: 790, column: 16, scope: !4328)
!4333 = !DILocation(line: 790, column: 7, scope: !4329)
!4334 = !DILocation(line: 791, column: 31, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 790, column: 23)
!4336 = !DILocation(line: 791, column: 36, scope: !4335)
!4337 = !DILocation(line: 791, column: 35, scope: !4335)
!4338 = !DILocation(line: 791, column: 4, scope: !4335)
!4339 = !DILocation(line: 792, column: 3, scope: !4335)
!4340 = !DILocation(line: 793, column: 2, scope: !4329)
!4341 = !DILocation(line: 789, column: 42, scope: !4325)
!4342 = !DILocation(line: 789, column: 46, scope: !4325)
!4343 = !DILocation(line: 789, column: 49, scope: !4325)
!4344 = !DILocation(line: 789, column: 40, scope: !4325)
!4345 = !DILocation(line: 789, column: 2, scope: !4325)
!4346 = distinct !{!4346, !4326, !4347}
!4347 = !DILocation(line: 793, column: 2, scope: !4319)
!4348 = !DILocation(line: 794, column: 18, scope: !4292)
!4349 = !DILocation(line: 794, column: 2, scope: !4292)
!4350 = !DILocation(line: 795, column: 1, scope: !4292)
!4351 = distinct !DISubprogram(name: "BKE_material_pop_id", scope: !3, file: !3, line: 621, type: !4352, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4352 = !DISubroutineType(types: !4353)
!4353 = !{!312, !142, !178, !1171}
!4354 = !DILocalVariable(name: "id", arg: 1, scope: !4351, file: !3, line: 621, type: !142)
!4355 = !DILocation(line: 621, column: 35, scope: !4351)
!4356 = !DILocalVariable(name: "index_i", arg: 2, scope: !4351, file: !3, line: 621, type: !178)
!4357 = !DILocation(line: 621, column: 43, scope: !4351)
!4358 = !DILocalVariable(name: "update_data", arg: 3, scope: !4351, file: !3, line: 621, type: !1171)
!4359 = !DILocation(line: 621, column: 57, scope: !4351)
!4360 = !DILocalVariable(name: "index", scope: !4351, file: !3, line: 623, type: !176)
!4361 = !DILocation(line: 623, column: 8, scope: !4351)
!4362 = !DILocation(line: 623, column: 23, scope: !4351)
!4363 = !DILocation(line: 623, column: 16, scope: !4351)
!4364 = !DILocalVariable(name: "ret", scope: !4351, file: !3, line: 624, type: !2660)
!4365 = !DILocation(line: 624, column: 12, scope: !4351)
!4366 = !DILocalVariable(name: "matar", scope: !4351, file: !3, line: 625, type: !4151)
!4367 = !DILocation(line: 625, column: 14, scope: !4351)
!4368 = !DILocation(line: 626, column: 31, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 626, column: 6)
!4370 = !DILocation(line: 626, column: 15, scope: !4369)
!4371 = !DILocation(line: 626, column: 13, scope: !4369)
!4372 = !DILocation(line: 626, column: 6, scope: !4351)
!4373 = !DILocalVariable(name: "totcol", scope: !4374, file: !3, line: 627, type: !214)
!4374 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 626, column: 37)
!4375 = !DILocation(line: 627, column: 10, scope: !4374)
!4376 = !DILocation(line: 627, column: 35, scope: !4374)
!4377 = !DILocation(line: 627, column: 19, scope: !4374)
!4378 = !DILocation(line: 628, column: 7, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 628, column: 7)
!4380 = !DILocation(line: 628, column: 13, scope: !4379)
!4381 = !DILocation(line: 628, column: 18, scope: !4379)
!4382 = !DILocation(line: 628, column: 21, scope: !4379)
!4383 = !DILocation(line: 628, column: 31, scope: !4379)
!4384 = !DILocation(line: 628, column: 30, scope: !4379)
!4385 = !DILocation(line: 628, column: 29, scope: !4379)
!4386 = !DILocation(line: 628, column: 27, scope: !4379)
!4387 = !DILocation(line: 628, column: 7, scope: !4374)
!4388 = !DILocation(line: 629, column: 12, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 628, column: 40)
!4390 = !DILocation(line: 629, column: 11, scope: !4389)
!4391 = !DILocation(line: 629, column: 19, scope: !4389)
!4392 = !DILocation(line: 629, column: 10, scope: !4389)
!4393 = !DILocation(line: 629, column: 8, scope: !4389)
!4394 = !DILocation(line: 630, column: 20, scope: !4389)
!4395 = !DILocation(line: 630, column: 14, scope: !4389)
!4396 = !DILocation(line: 630, column: 4, scope: !4389)
!4397 = !DILocation(line: 632, column: 9, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 632, column: 8)
!4399 = !DILocation(line: 632, column: 8, scope: !4398)
!4400 = !DILocation(line: 632, column: 16, scope: !4398)
!4401 = !DILocation(line: 632, column: 8, scope: !4389)
!4402 = !DILocation(line: 633, column: 6, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 632, column: 22)
!4404 = !DILocation(line: 633, column: 13, scope: !4403)
!4405 = !DILocation(line: 634, column: 5, scope: !4403)
!4406 = !DILocation(line: 634, column: 16, scope: !4403)
!4407 = !DILocation(line: 634, column: 15, scope: !4403)
!4408 = !DILocation(line: 635, column: 6, scope: !4403)
!4409 = !DILocation(line: 635, column: 12, scope: !4403)
!4410 = !DILocation(line: 636, column: 4, scope: !4403)
!4411 = !DILocation(line: 638, column: 9, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 638, column: 9)
!4413 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 637, column: 9)
!4414 = !DILocation(line: 638, column: 15, scope: !4412)
!4415 = !DILocation(line: 638, column: 24, scope: !4412)
!4416 = !DILocation(line: 638, column: 23, scope: !4412)
!4417 = !DILocation(line: 638, column: 22, scope: !4412)
!4418 = !DILocation(line: 638, column: 19, scope: !4412)
!4419 = !DILocation(line: 638, column: 9, scope: !4413)
!4420 = !DILocation(line: 639, column: 16, scope: !4412)
!4421 = !DILocation(line: 639, column: 15, scope: !4412)
!4422 = !DILocation(line: 639, column: 25, scope: !4412)
!4423 = !DILocation(line: 639, column: 23, scope: !4412)
!4424 = !DILocation(line: 639, column: 6, scope: !4412)
!4425 = !DILocation(line: 639, column: 34, scope: !4412)
!4426 = !DILocation(line: 639, column: 33, scope: !4412)
!4427 = !DILocation(line: 639, column: 44, scope: !4412)
!4428 = !DILocation(line: 639, column: 50, scope: !4412)
!4429 = !DILocation(line: 639, column: 41, scope: !4412)
!4430 = !DILocation(line: 639, column: 76, scope: !4412)
!4431 = !DILocation(line: 639, column: 75, scope: !4412)
!4432 = !DILocation(line: 639, column: 74, scope: !4412)
!4433 = !DILocation(line: 639, column: 87, scope: !4412)
!4434 = !DILocation(line: 639, column: 93, scope: !4412)
!4435 = !DILocation(line: 639, column: 84, scope: !4412)
!4436 = !DILocation(line: 639, column: 73, scope: !4412)
!4437 = !DILocation(line: 639, column: 71, scope: !4412)
!4438 = !DILocation(line: 641, column: 7, scope: !4413)
!4439 = !DILocation(line: 641, column: 14, scope: !4413)
!4440 = !DILocation(line: 642, column: 14, scope: !4413)
!4441 = !DILocation(line: 642, column: 6, scope: !4413)
!4442 = !DILocation(line: 642, column: 12, scope: !4413)
!4443 = !DILocation(line: 643, column: 29, scope: !4413)
!4444 = !DILocation(line: 643, column: 35, scope: !4413)
!4445 = !DILocation(line: 643, column: 5, scope: !4413)
!4446 = !DILocation(line: 646, column: 8, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 646, column: 8)
!4448 = !DILocation(line: 646, column: 8, scope: !4389)
!4449 = !DILocation(line: 648, column: 35, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4447, file: !3, line: 646, column: 21)
!4451 = !DILocation(line: 648, column: 39, scope: !4450)
!4452 = !DILocation(line: 648, column: 5, scope: !4450)
!4453 = !DILocation(line: 649, column: 4, scope: !4450)
!4454 = !DILocation(line: 650, column: 3, scope: !4389)
!4455 = !DILocation(line: 651, column: 2, scope: !4374)
!4456 = !DILocation(line: 653, column: 9, scope: !4351)
!4457 = !DILocation(line: 653, column: 2, scope: !4351)
!4458 = distinct !DISubprogram(name: "material_data_index_remove_id", scope: !3, file: !3, line: 540, type: !4459, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{null, !142, !176}
!4461 = !DILocalVariable(name: "id", arg: 1, scope: !4458, file: !3, line: 540, type: !142)
!4462 = !DILocation(line: 540, column: 47, scope: !4458)
!4463 = !DILocalVariable(name: "index", arg: 2, scope: !4458, file: !3, line: 540, type: !176)
!4464 = !DILocation(line: 540, column: 57, scope: !4458)
!4465 = !DILocation(line: 545, column: 10, scope: !4458)
!4466 = !DILocation(line: 545, column: 2, scope: !4458)
!4467 = !DILocation(line: 547, column: 43, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 545, column: 24)
!4469 = !DILocation(line: 547, column: 35, scope: !4468)
!4470 = !DILocation(line: 547, column: 47, scope: !4468)
!4471 = !DILocation(line: 547, column: 4, scope: !4468)
!4472 = !DILocation(line: 548, column: 4, scope: !4468)
!4473 = !DILocation(line: 550, column: 45, scope: !4468)
!4474 = !DILocation(line: 550, column: 36, scope: !4468)
!4475 = !DILocation(line: 550, column: 49, scope: !4468)
!4476 = !DILocation(line: 550, column: 4, scope: !4468)
!4477 = !DILocation(line: 551, column: 4, scope: !4468)
!4478 = !DILocation(line: 554, column: 4, scope: !4468)
!4479 = !DILocation(line: 556, column: 1, scope: !4458)
!4480 = distinct !DISubprogram(name: "BKE_material_clear_id", scope: !3, file: !3, line: 656, type: !4481, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{null, !151, !1171}
!4483 = !DILocalVariable(name: "id", arg: 1, scope: !4480, file: !3, line: 656, type: !151)
!4484 = !DILocation(line: 656, column: 39, scope: !4480)
!4485 = !DILocalVariable(name: "update_data", arg: 2, scope: !4480, file: !3, line: 656, type: !1171)
!4486 = !DILocation(line: 656, column: 48, scope: !4480)
!4487 = !DILocalVariable(name: "matar", scope: !4480, file: !3, line: 658, type: !4151)
!4488 = !DILocation(line: 658, column: 14, scope: !4480)
!4489 = !DILocation(line: 659, column: 31, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4480, file: !3, line: 659, column: 6)
!4491 = !DILocation(line: 659, column: 15, scope: !4490)
!4492 = !DILocation(line: 659, column: 13, scope: !4490)
!4493 = !DILocation(line: 659, column: 6, scope: !4480)
!4494 = !DILocalVariable(name: "totcol", scope: !4495, file: !3, line: 660, type: !214)
!4495 = distinct !DILexicalBlock(scope: !4490, file: !3, line: 659, column: 37)
!4496 = !DILocation(line: 660, column: 10, scope: !4495)
!4497 = !DILocation(line: 660, column: 35, scope: !4495)
!4498 = !DILocation(line: 660, column: 19, scope: !4495)
!4499 = !DILocation(line: 661, column: 4, scope: !4495)
!4500 = !DILocation(line: 661, column: 11, scope: !4495)
!4501 = !DILocation(line: 662, column: 8, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 662, column: 7)
!4503 = !DILocation(line: 662, column: 7, scope: !4502)
!4504 = !DILocation(line: 662, column: 7, scope: !4495)
!4505 = !DILocation(line: 663, column: 4, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 662, column: 15)
!4507 = !DILocation(line: 663, column: 15, scope: !4506)
!4508 = !DILocation(line: 663, column: 14, scope: !4506)
!4509 = !DILocation(line: 664, column: 5, scope: !4506)
!4510 = !DILocation(line: 664, column: 11, scope: !4506)
!4511 = !DILocation(line: 665, column: 3, scope: !4506)
!4512 = !DILocation(line: 667, column: 7, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 667, column: 7)
!4514 = !DILocation(line: 667, column: 7, scope: !4495)
!4515 = !DILocation(line: 669, column: 33, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 667, column: 20)
!4517 = !DILocation(line: 669, column: 4, scope: !4516)
!4518 = !DILocation(line: 670, column: 3, scope: !4516)
!4519 = !DILocation(line: 671, column: 2, scope: !4495)
!4520 = !DILocation(line: 672, column: 1, scope: !4480)
!4521 = distinct !DISubprogram(name: "material_data_index_clear_id", scope: !3, file: !3, line: 558, type: !4522, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{null, !142}
!4524 = !DILocalVariable(name: "id", arg: 1, scope: !4521, file: !3, line: 558, type: !142)
!4525 = !DILocation(line: 558, column: 46, scope: !4521)
!4526 = !DILocation(line: 563, column: 10, scope: !4521)
!4527 = !DILocation(line: 563, column: 2, scope: !4521)
!4528 = !DILocation(line: 565, column: 42, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 563, column: 24)
!4530 = !DILocation(line: 565, column: 34, scope: !4529)
!4531 = !DILocation(line: 565, column: 4, scope: !4529)
!4532 = !DILocation(line: 566, column: 4, scope: !4529)
!4533 = !DILocation(line: 568, column: 44, scope: !4529)
!4534 = !DILocation(line: 568, column: 35, scope: !4529)
!4535 = !DILocation(line: 568, column: 4, scope: !4529)
!4536 = !DILocation(line: 569, column: 4, scope: !4529)
!4537 = !DILocation(line: 572, column: 4, scope: !4529)
!4538 = !DILocation(line: 574, column: 1, scope: !4521)
!4539 = distinct !DISubprogram(name: "give_current_material", scope: !3, file: !3, line: 674, type: !4540, scopeLine: 675, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4540 = !DISubroutineType(types: !4541)
!4541 = !{!312, !3417, !176}
!4542 = !DILocalVariable(name: "ob", arg: 1, scope: !4539, file: !3, line: 674, type: !3417)
!4543 = !DILocation(line: 674, column: 41, scope: !4539)
!4544 = !DILocalVariable(name: "act", arg: 2, scope: !4539, file: !3, line: 674, type: !176)
!4545 = !DILocation(line: 674, column: 51, scope: !4539)
!4546 = !DILocalVariable(name: "matarar", scope: !4539, file: !3, line: 676, type: !4151)
!4547 = !DILocation(line: 676, column: 14, scope: !4539)
!4548 = !DILocalVariable(name: "ma", scope: !4539, file: !3, line: 676, type: !2660)
!4549 = !DILocation(line: 676, column: 24, scope: !4539)
!4550 = !DILocalVariable(name: "totcolp", scope: !4539, file: !3, line: 677, type: !4302)
!4551 = !DILocation(line: 677, column: 15, scope: !4539)
!4552 = !DILocation(line: 679, column: 6, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 679, column: 6)
!4554 = !DILocation(line: 679, column: 9, scope: !4553)
!4555 = !DILocation(line: 679, column: 6, scope: !4539)
!4556 = !DILocation(line: 679, column: 18, scope: !4553)
!4557 = !DILocation(line: 682, column: 25, scope: !4539)
!4558 = !DILocation(line: 682, column: 12, scope: !4539)
!4559 = !DILocation(line: 682, column: 10, scope: !4539)
!4560 = !DILocation(line: 683, column: 6, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 683, column: 6)
!4562 = !DILocation(line: 683, column: 14, scope: !4561)
!4563 = !DILocation(line: 683, column: 22, scope: !4561)
!4564 = !DILocation(line: 683, column: 25, scope: !4561)
!4565 = !DILocation(line: 683, column: 29, scope: !4561)
!4566 = !DILocation(line: 683, column: 36, scope: !4561)
!4567 = !DILocation(line: 683, column: 6, scope: !4539)
!4568 = !DILocation(line: 683, column: 42, scope: !4561)
!4569 = !DILocation(line: 685, column: 6, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 685, column: 6)
!4571 = !DILocation(line: 685, column: 10, scope: !4570)
!4572 = !DILocation(line: 685, column: 6, scope: !4539)
!4573 = !DILocation(line: 686, column: 3, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 685, column: 15)
!4575 = !DILocation(line: 687, column: 2, scope: !4574)
!4576 = !DILocation(line: 690, column: 6, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 690, column: 6)
!4578 = !DILocation(line: 690, column: 12, scope: !4577)
!4579 = !DILocation(line: 690, column: 16, scope: !4577)
!4580 = !DILocation(line: 690, column: 10, scope: !4577)
!4581 = !DILocation(line: 690, column: 6, scope: !4539)
!4582 = !DILocation(line: 691, column: 3, scope: !4577)
!4583 = !DILocation(line: 692, column: 11, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 692, column: 11)
!4585 = !DILocation(line: 692, column: 15, scope: !4584)
!4586 = !DILocation(line: 692, column: 11, scope: !4577)
!4587 = !DILocation(line: 693, column: 3, scope: !4584)
!4588 = !DILocation(line: 695, column: 6, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 695, column: 6)
!4590 = !DILocation(line: 695, column: 10, scope: !4589)
!4591 = !DILocation(line: 695, column: 18, scope: !4589)
!4592 = !DILocation(line: 695, column: 21, scope: !4589)
!4593 = !DILocation(line: 695, column: 25, scope: !4589)
!4594 = !DILocation(line: 695, column: 33, scope: !4589)
!4595 = !DILocation(line: 695, column: 37, scope: !4589)
!4596 = !DILocation(line: 695, column: 6, scope: !4539)
!4597 = !DILocation(line: 696, column: 8, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 695, column: 43)
!4599 = !DILocation(line: 696, column: 12, scope: !4598)
!4600 = !DILocation(line: 696, column: 16, scope: !4598)
!4601 = !DILocation(line: 696, column: 20, scope: !4598)
!4602 = !DILocation(line: 696, column: 6, scope: !4598)
!4603 = !DILocation(line: 697, column: 2, scope: !4598)
!4604 = !DILocation(line: 701, column: 8, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 701, column: 7)
!4606 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 698, column: 7)
!4607 = !DILocation(line: 701, column: 7, scope: !4605)
!4608 = !DILocation(line: 701, column: 18, scope: !4605)
!4609 = !DILocation(line: 701, column: 22, scope: !4605)
!4610 = !DILocation(line: 701, column: 16, scope: !4605)
!4611 = !DILocation(line: 701, column: 7, scope: !4606)
!4612 = !DILocation(line: 702, column: 18, scope: !4605)
!4613 = !DILocation(line: 702, column: 17, scope: !4605)
!4614 = !DILocation(line: 702, column: 4, scope: !4605)
!4615 = !DILocation(line: 702, column: 8, scope: !4605)
!4616 = !DILocation(line: 702, column: 15, scope: !4605)
!4617 = !DILocation(line: 703, column: 7, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 703, column: 7)
!4619 = !DILocation(line: 703, column: 13, scope: !4618)
!4620 = !DILocation(line: 703, column: 17, scope: !4618)
!4621 = !DILocation(line: 703, column: 11, scope: !4618)
!4622 = !DILocation(line: 703, column: 7, scope: !4606)
!4623 = !DILocation(line: 703, column: 31, scope: !4618)
!4624 = !DILocation(line: 703, column: 35, scope: !4618)
!4625 = !DILocation(line: 703, column: 29, scope: !4618)
!4626 = !DILocation(line: 703, column: 25, scope: !4618)
!4627 = !DILocation(line: 705, column: 26, scope: !4606)
!4628 = !DILocation(line: 705, column: 13, scope: !4606)
!4629 = !DILocation(line: 705, column: 11, scope: !4606)
!4630 = !DILocation(line: 707, column: 7, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 707, column: 7)
!4632 = !DILocation(line: 707, column: 15, scope: !4631)
!4633 = !DILocation(line: 707, column: 19, scope: !4631)
!4634 = !DILocation(line: 707, column: 18, scope: !4631)
!4635 = !DILocation(line: 707, column: 7, scope: !4606)
!4636 = !DILocation(line: 707, column: 35, scope: !4631)
!4637 = !DILocation(line: 707, column: 34, scope: !4631)
!4638 = !DILocation(line: 707, column: 44, scope: !4631)
!4639 = !DILocation(line: 707, column: 48, scope: !4631)
!4640 = !DILocation(line: 707, column: 33, scope: !4631)
!4641 = !DILocation(line: 707, column: 31, scope: !4631)
!4642 = !DILocation(line: 707, column: 28, scope: !4631)
!4643 = !DILocation(line: 708, column: 11, scope: !4631)
!4644 = !DILocation(line: 712, column: 9, scope: !4539)
!4645 = !DILocation(line: 712, column: 2, scope: !4539)
!4646 = !DILocation(line: 713, column: 1, scope: !4539)
!4647 = distinct !DISubprogram(name: "material_from", scope: !3, file: !3, line: 715, type: !4648, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!151, !3417, !176}
!4650 = !DILocalVariable(name: "ob", arg: 1, scope: !4647, file: !3, line: 715, type: !3417)
!4651 = !DILocation(line: 715, column: 27, scope: !4647)
!4652 = !DILocalVariable(name: "act", arg: 2, scope: !4647, file: !3, line: 715, type: !176)
!4653 = !DILocation(line: 715, column: 37, scope: !4647)
!4654 = !DILocation(line: 718, column: 6, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 718, column: 6)
!4656 = !DILocation(line: 718, column: 9, scope: !4655)
!4657 = !DILocation(line: 718, column: 6, scope: !4647)
!4658 = !DILocation(line: 718, column: 18, scope: !4655)
!4659 = !DILocation(line: 720, column: 6, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 720, column: 6)
!4661 = !DILocation(line: 720, column: 10, scope: !4660)
!4662 = !DILocation(line: 720, column: 17, scope: !4660)
!4663 = !DILocation(line: 720, column: 6, scope: !4647)
!4664 = !DILocation(line: 720, column: 30, scope: !4660)
!4665 = !DILocation(line: 720, column: 34, scope: !4660)
!4666 = !DILocation(line: 720, column: 23, scope: !4660)
!4667 = !DILocation(line: 721, column: 6, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 721, column: 6)
!4669 = !DILocation(line: 721, column: 10, scope: !4668)
!4670 = !DILocation(line: 721, column: 6, scope: !4647)
!4671 = !DILocation(line: 721, column: 20, scope: !4668)
!4672 = !DILocation(line: 721, column: 16, scope: !4668)
!4673 = !DILocation(line: 723, column: 6, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 723, column: 6)
!4675 = !DILocation(line: 723, column: 10, scope: !4674)
!4676 = !DILocation(line: 723, column: 18, scope: !4674)
!4677 = !DILocation(line: 723, column: 22, scope: !4674)
!4678 = !DILocation(line: 723, column: 6, scope: !4647)
!4679 = !DILocation(line: 723, column: 41, scope: !4674)
!4680 = !DILocation(line: 723, column: 35, scope: !4674)
!4681 = !DILocation(line: 723, column: 28, scope: !4674)
!4682 = !DILocation(line: 724, column: 14, scope: !4674)
!4683 = !DILocation(line: 724, column: 18, scope: !4674)
!4684 = !DILocation(line: 724, column: 7, scope: !4674)
!4685 = !DILocation(line: 725, column: 1, scope: !4647)
!4686 = distinct !DISubprogram(name: "give_node_material", scope: !3, file: !3, line: 727, type: !3211, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4687 = !DILocalVariable(name: "ma", arg: 1, scope: !4686, file: !3, line: 727, type: !2660)
!4688 = !DILocation(line: 727, column: 40, scope: !4686)
!4689 = !DILocation(line: 729, column: 6, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 729, column: 6)
!4691 = !DILocation(line: 729, column: 9, scope: !4690)
!4692 = !DILocation(line: 729, column: 12, scope: !4690)
!4693 = !DILocation(line: 729, column: 16, scope: !4690)
!4694 = !DILocation(line: 729, column: 26, scope: !4690)
!4695 = !DILocation(line: 729, column: 29, scope: !4690)
!4696 = !DILocation(line: 729, column: 33, scope: !4690)
!4697 = !DILocation(line: 729, column: 6, scope: !4686)
!4698 = !DILocalVariable(name: "node", scope: !4699, file: !3, line: 730, type: !1033)
!4699 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 729, column: 43)
!4700 = !DILocation(line: 730, column: 10, scope: !4699)
!4701 = !DILocation(line: 730, column: 33, scope: !4699)
!4702 = !DILocation(line: 730, column: 37, scope: !4699)
!4703 = !DILocation(line: 730, column: 17, scope: !4699)
!4704 = !DILocation(line: 732, column: 7, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 732, column: 7)
!4706 = !DILocation(line: 732, column: 7, scope: !4699)
!4707 = !DILocation(line: 733, column: 23, scope: !4705)
!4708 = !DILocation(line: 733, column: 29, scope: !4705)
!4709 = !DILocation(line: 733, column: 11, scope: !4705)
!4710 = !DILocation(line: 733, column: 4, scope: !4705)
!4711 = !DILocation(line: 734, column: 2, scope: !4699)
!4712 = !DILocation(line: 736, column: 2, scope: !4686)
!4713 = !DILocation(line: 737, column: 1, scope: !4686)
!4714 = distinct !DISubprogram(name: "BKE_material_resize_object", scope: !3, file: !3, line: 739, type: !4715, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{null, !3417, !4303, !1171}
!4717 = !DILocalVariable(name: "ob", arg: 1, scope: !4714, file: !3, line: 739, type: !3417)
!4718 = !DILocation(line: 739, column: 41, scope: !4714)
!4719 = !DILocalVariable(name: "totcol", arg: 2, scope: !4714, file: !3, line: 739, type: !4303)
!4720 = !DILocation(line: 739, column: 57, scope: !4714)
!4721 = !DILocalVariable(name: "do_id_user", arg: 3, scope: !4714, file: !3, line: 739, type: !1171)
!4722 = !DILocation(line: 739, column: 70, scope: !4714)
!4723 = !DILocalVariable(name: "newmatar", scope: !4714, file: !3, line: 741, type: !4152)
!4724 = !DILocation(line: 741, column: 13, scope: !4714)
!4725 = !DILocalVariable(name: "newmatbits", scope: !4714, file: !3, line: 742, type: !213)
!4726 = !DILocation(line: 742, column: 8, scope: !4714)
!4727 = !DILocation(line: 744, column: 6, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 744, column: 6)
!4729 = !DILocation(line: 744, column: 17, scope: !4728)
!4730 = !DILocation(line: 744, column: 20, scope: !4728)
!4731 = !DILocation(line: 744, column: 29, scope: !4728)
!4732 = !DILocation(line: 744, column: 33, scope: !4728)
!4733 = !DILocation(line: 744, column: 27, scope: !4728)
!4734 = !DILocation(line: 744, column: 6, scope: !4714)
!4735 = !DILocalVariable(name: "i", scope: !4736, file: !3, line: 745, type: !176)
!4736 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 744, column: 41)
!4737 = !DILocation(line: 745, column: 9, scope: !4736)
!4738 = !DILocation(line: 746, column: 12, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 746, column: 3)
!4740 = !DILocation(line: 746, column: 10, scope: !4739)
!4741 = !DILocation(line: 746, column: 8, scope: !4739)
!4742 = !DILocation(line: 746, column: 20, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 746, column: 3)
!4744 = !DILocation(line: 746, column: 24, scope: !4743)
!4745 = !DILocation(line: 746, column: 28, scope: !4743)
!4746 = !DILocation(line: 746, column: 22, scope: !4743)
!4747 = !DILocation(line: 746, column: 3, scope: !4739)
!4748 = !DILocation(line: 747, column: 20, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 746, column: 41)
!4750 = !DILocation(line: 747, column: 24, scope: !4749)
!4751 = !DILocation(line: 747, column: 28, scope: !4749)
!4752 = !DILocation(line: 747, column: 14, scope: !4749)
!4753 = !DILocation(line: 747, column: 4, scope: !4749)
!4754 = !DILocation(line: 748, column: 3, scope: !4749)
!4755 = !DILocation(line: 746, column: 37, scope: !4743)
!4756 = !DILocation(line: 746, column: 3, scope: !4743)
!4757 = distinct !{!4757, !4747, !4758}
!4758 = !DILocation(line: 748, column: 3, scope: !4739)
!4759 = !DILocation(line: 749, column: 2, scope: !4736)
!4760 = !DILocation(line: 751, column: 6, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 751, column: 6)
!4762 = !DILocation(line: 751, column: 13, scope: !4761)
!4763 = !DILocation(line: 751, column: 6, scope: !4714)
!4764 = !DILocation(line: 752, column: 7, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 752, column: 7)
!4766 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 751, column: 19)
!4767 = !DILocation(line: 752, column: 11, scope: !4765)
!4768 = !DILocation(line: 752, column: 7, scope: !4766)
!4769 = !DILocation(line: 753, column: 4, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 752, column: 19)
!4771 = !DILocation(line: 753, column: 14, scope: !4770)
!4772 = !DILocation(line: 753, column: 18, scope: !4770)
!4773 = !DILocation(line: 754, column: 4, scope: !4770)
!4774 = !DILocation(line: 754, column: 14, scope: !4770)
!4775 = !DILocation(line: 754, column: 18, scope: !4770)
!4776 = !DILocation(line: 755, column: 4, scope: !4770)
!4777 = !DILocation(line: 755, column: 8, scope: !4770)
!4778 = !DILocation(line: 755, column: 12, scope: !4770)
!4779 = !DILocation(line: 756, column: 4, scope: !4770)
!4780 = !DILocation(line: 756, column: 8, scope: !4770)
!4781 = !DILocation(line: 756, column: 16, scope: !4770)
!4782 = !DILocation(line: 757, column: 3, scope: !4770)
!4783 = !DILocation(line: 758, column: 2, scope: !4766)
!4784 = !DILocation(line: 759, column: 11, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 759, column: 11)
!4786 = !DILocation(line: 759, column: 15, scope: !4785)
!4787 = !DILocation(line: 759, column: 24, scope: !4785)
!4788 = !DILocation(line: 759, column: 22, scope: !4785)
!4789 = !DILocation(line: 759, column: 11, scope: !4761)
!4790 = !DILocation(line: 760, column: 14, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 759, column: 32)
!4792 = !DILocation(line: 760, column: 43, scope: !4791)
!4793 = !DILocation(line: 760, column: 41, scope: !4791)
!4794 = !DILocation(line: 760, column: 12, scope: !4791)
!4795 = !DILocation(line: 761, column: 16, scope: !4791)
!4796 = !DILocation(line: 761, column: 43, scope: !4791)
!4797 = !DILocation(line: 761, column: 41, scope: !4791)
!4798 = !DILocation(line: 761, column: 14, scope: !4791)
!4799 = !DILocation(line: 762, column: 7, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 762, column: 7)
!4801 = !DILocation(line: 762, column: 11, scope: !4800)
!4802 = !DILocation(line: 762, column: 7, scope: !4791)
!4803 = !DILocation(line: 763, column: 11, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 762, column: 19)
!4805 = !DILocation(line: 763, column: 4, scope: !4804)
!4806 = !DILocation(line: 763, column: 21, scope: !4804)
!4807 = !DILocation(line: 763, column: 25, scope: !4804)
!4808 = !DILocation(line: 763, column: 47, scope: !4804)
!4809 = !DILocation(line: 763, column: 51, scope: !4804)
!4810 = !DILocation(line: 763, column: 45, scope: !4804)
!4811 = !DILocation(line: 764, column: 11, scope: !4804)
!4812 = !DILocation(line: 764, column: 23, scope: !4804)
!4813 = !DILocation(line: 764, column: 27, scope: !4804)
!4814 = !DILocation(line: 764, column: 51, scope: !4804)
!4815 = !DILocation(line: 764, column: 55, scope: !4804)
!4816 = !DILocation(line: 764, column: 49, scope: !4804)
!4817 = !DILocation(line: 764, column: 4, scope: !4804)
!4818 = !DILocation(line: 765, column: 4, scope: !4804)
!4819 = !DILocation(line: 765, column: 14, scope: !4804)
!4820 = !DILocation(line: 765, column: 18, scope: !4804)
!4821 = !DILocation(line: 766, column: 4, scope: !4804)
!4822 = !DILocation(line: 766, column: 14, scope: !4804)
!4823 = !DILocation(line: 766, column: 18, scope: !4804)
!4824 = !DILocation(line: 767, column: 3, scope: !4804)
!4825 = !DILocation(line: 768, column: 13, scope: !4791)
!4826 = !DILocation(line: 768, column: 3, scope: !4791)
!4827 = !DILocation(line: 768, column: 7, scope: !4791)
!4828 = !DILocation(line: 768, column: 11, scope: !4791)
!4829 = !DILocation(line: 769, column: 17, scope: !4791)
!4830 = !DILocation(line: 769, column: 3, scope: !4791)
!4831 = !DILocation(line: 769, column: 7, scope: !4791)
!4832 = !DILocation(line: 769, column: 15, scope: !4791)
!4833 = !DILocation(line: 770, column: 2, scope: !4791)
!4834 = !DILocation(line: 773, column: 15, scope: !4714)
!4835 = !DILocation(line: 773, column: 2, scope: !4714)
!4836 = !DILocation(line: 773, column: 6, scope: !4714)
!4837 = !DILocation(line: 773, column: 13, scope: !4714)
!4838 = !DILocation(line: 774, column: 6, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 774, column: 6)
!4840 = !DILocation(line: 774, column: 10, scope: !4839)
!4841 = !DILocation(line: 774, column: 17, scope: !4839)
!4842 = !DILocation(line: 774, column: 20, scope: !4839)
!4843 = !DILocation(line: 774, column: 24, scope: !4839)
!4844 = !DILocation(line: 774, column: 31, scope: !4839)
!4845 = !DILocation(line: 774, column: 6, scope: !4714)
!4846 = !DILocation(line: 774, column: 37, scope: !4839)
!4847 = !DILocation(line: 774, column: 41, scope: !4839)
!4848 = !DILocation(line: 774, column: 48, scope: !4839)
!4849 = !DILocation(line: 775, column: 6, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 775, column: 6)
!4851 = !DILocation(line: 775, column: 10, scope: !4850)
!4852 = !DILocation(line: 775, column: 19, scope: !4850)
!4853 = !DILocation(line: 775, column: 23, scope: !4850)
!4854 = !DILocation(line: 775, column: 17, scope: !4850)
!4855 = !DILocation(line: 775, column: 6, scope: !4714)
!4856 = !DILocation(line: 775, column: 44, scope: !4850)
!4857 = !DILocation(line: 775, column: 48, scope: !4850)
!4858 = !DILocation(line: 775, column: 31, scope: !4850)
!4859 = !DILocation(line: 775, column: 35, scope: !4850)
!4860 = !DILocation(line: 775, column: 42, scope: !4850)
!4861 = !DILocation(line: 776, column: 1, scope: !4714)
!4862 = distinct !DISubprogram(name: "assign_material_id", scope: !3, file: !3, line: 797, type: !4863, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{null, !142, !2660, !176}
!4865 = !DILocalVariable(name: "id", arg: 1, scope: !4862, file: !3, line: 797, type: !142)
!4866 = !DILocation(line: 797, column: 29, scope: !4862)
!4867 = !DILocalVariable(name: "ma", arg: 2, scope: !4862, file: !3, line: 797, type: !2660)
!4868 = !DILocation(line: 797, column: 43, scope: !4862)
!4869 = !DILocalVariable(name: "act", arg: 3, scope: !4862, file: !3, line: 797, type: !176)
!4870 = !DILocation(line: 797, column: 53, scope: !4862)
!4871 = !DILocalVariable(name: "mao", scope: !4862, file: !3, line: 799, type: !2660)
!4872 = !DILocation(line: 799, column: 12, scope: !4862)
!4873 = !DILocalVariable(name: "matar", scope: !4862, file: !3, line: 799, type: !4152)
!4874 = !DILocation(line: 799, column: 19, scope: !4862)
!4875 = !DILocalVariable(name: "matarar", scope: !4862, file: !3, line: 799, type: !4151)
!4876 = !DILocation(line: 799, column: 29, scope: !4862)
!4877 = !DILocalVariable(name: "totcolp", scope: !4862, file: !3, line: 800, type: !214)
!4878 = !DILocation(line: 800, column: 9, scope: !4862)
!4879 = !DILocation(line: 802, column: 6, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 802, column: 6)
!4881 = !DILocation(line: 802, column: 10, scope: !4880)
!4882 = !DILocation(line: 802, column: 6, scope: !4862)
!4883 = !DILocation(line: 802, column: 20, scope: !4880)
!4884 = !DILocation(line: 803, column: 6, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 803, column: 6)
!4886 = !DILocation(line: 803, column: 10, scope: !4885)
!4887 = !DILocation(line: 803, column: 6, scope: !4862)
!4888 = !DILocation(line: 803, column: 19, scope: !4885)
!4889 = !DILocation(line: 803, column: 15, scope: !4885)
!4890 = !DILocation(line: 807, column: 6, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 807, column: 6)
!4892 = !DILocation(line: 807, column: 10, scope: !4891)
!4893 = !DILocation(line: 807, column: 6, scope: !4862)
!4894 = !DILocation(line: 807, column: 15, scope: !4891)
!4895 = !DILocation(line: 811, column: 28, scope: !4862)
!4896 = !DILocation(line: 811, column: 12, scope: !4862)
!4897 = !DILocation(line: 811, column: 10, scope: !4862)
!4898 = !DILocation(line: 812, column: 28, scope: !4862)
!4899 = !DILocation(line: 812, column: 12, scope: !4862)
!4900 = !DILocation(line: 812, column: 10, scope: !4862)
!4901 = !DILocation(line: 814, column: 6, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 814, column: 6)
!4903 = !DILocation(line: 814, column: 14, scope: !4902)
!4904 = !DILocation(line: 814, column: 22, scope: !4902)
!4905 = !DILocation(line: 814, column: 25, scope: !4902)
!4906 = !DILocation(line: 814, column: 33, scope: !4902)
!4907 = !DILocation(line: 814, column: 6, scope: !4862)
!4908 = !DILocation(line: 814, column: 42, scope: !4902)
!4909 = !DILocation(line: 816, column: 6, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 816, column: 6)
!4911 = !DILocation(line: 816, column: 13, scope: !4910)
!4912 = !DILocation(line: 816, column: 12, scope: !4910)
!4913 = !DILocation(line: 816, column: 10, scope: !4910)
!4914 = !DILocation(line: 816, column: 6, scope: !4862)
!4915 = !DILocation(line: 817, column: 11, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 816, column: 22)
!4917 = !DILocation(line: 817, column: 40, scope: !4916)
!4918 = !DILocation(line: 817, column: 38, scope: !4916)
!4919 = !DILocation(line: 817, column: 9, scope: !4916)
!4920 = !DILocation(line: 819, column: 8, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 819, column: 7)
!4922 = !DILocation(line: 819, column: 7, scope: !4921)
!4923 = !DILocation(line: 819, column: 7, scope: !4916)
!4924 = !DILocation(line: 820, column: 11, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 819, column: 17)
!4926 = !DILocation(line: 820, column: 4, scope: !4925)
!4927 = !DILocation(line: 820, column: 19, scope: !4925)
!4928 = !DILocation(line: 820, column: 18, scope: !4925)
!4929 = !DILocation(line: 820, column: 47, scope: !4925)
!4930 = !DILocation(line: 820, column: 46, scope: !4925)
!4931 = !DILocation(line: 820, column: 45, scope: !4925)
!4932 = !DILocation(line: 820, column: 43, scope: !4925)
!4933 = !DILocation(line: 821, column: 4, scope: !4925)
!4934 = !DILocation(line: 821, column: 15, scope: !4925)
!4935 = !DILocation(line: 821, column: 14, scope: !4925)
!4936 = !DILocation(line: 822, column: 3, scope: !4925)
!4937 = !DILocation(line: 824, column: 14, scope: !4916)
!4938 = !DILocation(line: 824, column: 4, scope: !4916)
!4939 = !DILocation(line: 824, column: 12, scope: !4916)
!4940 = !DILocation(line: 825, column: 14, scope: !4916)
!4941 = !DILocation(line: 825, column: 4, scope: !4916)
!4942 = !DILocation(line: 825, column: 12, scope: !4916)
!4943 = !DILocation(line: 826, column: 2, scope: !4916)
!4944 = !DILocation(line: 829, column: 10, scope: !4862)
!4945 = !DILocation(line: 829, column: 9, scope: !4862)
!4946 = !DILocation(line: 829, column: 19, scope: !4862)
!4947 = !DILocation(line: 829, column: 23, scope: !4862)
!4948 = !DILocation(line: 829, column: 8, scope: !4862)
!4949 = !DILocation(line: 829, column: 6, scope: !4862)
!4950 = !DILocation(line: 830, column: 6, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 830, column: 6)
!4952 = !DILocation(line: 830, column: 6, scope: !4862)
!4953 = !DILocation(line: 830, column: 11, scope: !4951)
!4954 = !DILocation(line: 830, column: 16, scope: !4951)
!4955 = !DILocation(line: 830, column: 19, scope: !4951)
!4956 = !DILocation(line: 830, column: 21, scope: !4951)
!4957 = !DILocation(line: 831, column: 24, scope: !4862)
!4958 = !DILocation(line: 831, column: 4, scope: !4862)
!4959 = !DILocation(line: 831, column: 3, scope: !4862)
!4960 = !DILocation(line: 831, column: 13, scope: !4862)
!4961 = !DILocation(line: 831, column: 17, scope: !4862)
!4962 = !DILocation(line: 831, column: 2, scope: !4862)
!4963 = !DILocation(line: 831, column: 22, scope: !4862)
!4964 = !DILocation(line: 833, column: 6, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 833, column: 6)
!4966 = !DILocation(line: 833, column: 6, scope: !4862)
!4967 = !DILocation(line: 834, column: 20, scope: !4965)
!4968 = !DILocation(line: 834, column: 14, scope: !4965)
!4969 = !DILocation(line: 834, column: 3, scope: !4965)
!4970 = !DILocation(line: 836, column: 26, scope: !4862)
!4971 = !DILocation(line: 836, column: 32, scope: !4862)
!4972 = !DILocation(line: 836, column: 2, scope: !4862)
!4973 = !DILocation(line: 837, column: 1, scope: !4862)
!4974 = distinct !DISubprogram(name: "assign_material", scope: !3, file: !3, line: 839, type: !4975, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{null, !3417, !2660, !176, !178}
!4977 = !DILocalVariable(name: "ob", arg: 1, scope: !4974, file: !3, line: 839, type: !3417)
!4978 = !DILocation(line: 839, column: 30, scope: !4974)
!4979 = !DILocalVariable(name: "ma", arg: 2, scope: !4974, file: !3, line: 839, type: !2660)
!4980 = !DILocation(line: 839, column: 44, scope: !4974)
!4981 = !DILocalVariable(name: "act", arg: 3, scope: !4974, file: !3, line: 839, type: !176)
!4982 = !DILocation(line: 839, column: 54, scope: !4974)
!4983 = !DILocalVariable(name: "assign_type", arg: 4, scope: !4974, file: !3, line: 839, type: !178)
!4984 = !DILocation(line: 839, column: 63, scope: !4974)
!4985 = !DILocalVariable(name: "mao", scope: !4974, file: !3, line: 841, type: !2660)
!4986 = !DILocation(line: 841, column: 12, scope: !4974)
!4987 = !DILocalVariable(name: "matar", scope: !4974, file: !3, line: 841, type: !4152)
!4988 = !DILocation(line: 841, column: 19, scope: !4974)
!4989 = !DILocalVariable(name: "matarar", scope: !4974, file: !3, line: 841, type: !4151)
!4990 = !DILocation(line: 841, column: 29, scope: !4974)
!4991 = !DILocalVariable(name: "totcolp", scope: !4974, file: !3, line: 842, type: !214)
!4992 = !DILocation(line: 842, column: 9, scope: !4974)
!4993 = !DILocalVariable(name: "bit", scope: !4974, file: !3, line: 843, type: !163)
!4994 = !DILocation(line: 843, column: 7, scope: !4974)
!4995 = !DILocation(line: 845, column: 6, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 845, column: 6)
!4997 = !DILocation(line: 845, column: 10, scope: !4996)
!4998 = !DILocation(line: 845, column: 6, scope: !4974)
!4999 = !DILocation(line: 845, column: 20, scope: !4996)
!5000 = !DILocation(line: 846, column: 6, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 846, column: 6)
!5002 = !DILocation(line: 846, column: 10, scope: !5001)
!5003 = !DILocation(line: 846, column: 6, scope: !4974)
!5004 = !DILocation(line: 846, column: 19, scope: !5001)
!5005 = !DILocation(line: 846, column: 15, scope: !5001)
!5006 = !DILocation(line: 850, column: 6, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 850, column: 6)
!5008 = !DILocation(line: 850, column: 10, scope: !5007)
!5009 = !DILocation(line: 850, column: 13, scope: !5007)
!5010 = !DILocation(line: 850, column: 6, scope: !4974)
!5011 = !DILocation(line: 850, column: 18, scope: !5007)
!5012 = !DILocation(line: 854, column: 25, scope: !4974)
!5013 = !DILocation(line: 854, column: 12, scope: !4974)
!5014 = !DILocation(line: 854, column: 10, scope: !4974)
!5015 = !DILocation(line: 855, column: 25, scope: !4974)
!5016 = !DILocation(line: 855, column: 12, scope: !4974)
!5017 = !DILocation(line: 855, column: 10, scope: !4974)
!5018 = !DILocation(line: 857, column: 6, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 857, column: 6)
!5020 = !DILocation(line: 857, column: 14, scope: !5019)
!5021 = !DILocation(line: 857, column: 22, scope: !5019)
!5022 = !DILocation(line: 857, column: 25, scope: !5019)
!5023 = !DILocation(line: 857, column: 33, scope: !5019)
!5024 = !DILocation(line: 857, column: 6, scope: !4974)
!5025 = !DILocation(line: 857, column: 42, scope: !5019)
!5026 = !DILocation(line: 859, column: 6, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 859, column: 6)
!5028 = !DILocation(line: 859, column: 13, scope: !5027)
!5029 = !DILocation(line: 859, column: 12, scope: !5027)
!5030 = !DILocation(line: 859, column: 10, scope: !5027)
!5031 = !DILocation(line: 859, column: 6, scope: !4974)
!5032 = !DILocation(line: 860, column: 11, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 859, column: 22)
!5034 = !DILocation(line: 860, column: 40, scope: !5033)
!5035 = !DILocation(line: 860, column: 38, scope: !5033)
!5036 = !DILocation(line: 860, column: 9, scope: !5033)
!5037 = !DILocation(line: 862, column: 8, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 862, column: 7)
!5039 = !DILocation(line: 862, column: 7, scope: !5038)
!5040 = !DILocation(line: 862, column: 7, scope: !5033)
!5041 = !DILocation(line: 863, column: 11, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 862, column: 17)
!5043 = !DILocation(line: 863, column: 4, scope: !5042)
!5044 = !DILocation(line: 863, column: 19, scope: !5042)
!5045 = !DILocation(line: 863, column: 18, scope: !5042)
!5046 = !DILocation(line: 863, column: 47, scope: !5042)
!5047 = !DILocation(line: 863, column: 46, scope: !5042)
!5048 = !DILocation(line: 863, column: 45, scope: !5042)
!5049 = !DILocation(line: 863, column: 43, scope: !5042)
!5050 = !DILocation(line: 864, column: 4, scope: !5042)
!5051 = !DILocation(line: 864, column: 15, scope: !5042)
!5052 = !DILocation(line: 864, column: 14, scope: !5042)
!5053 = !DILocation(line: 865, column: 3, scope: !5042)
!5054 = !DILocation(line: 867, column: 14, scope: !5033)
!5055 = !DILocation(line: 867, column: 4, scope: !5033)
!5056 = !DILocation(line: 867, column: 12, scope: !5033)
!5057 = !DILocation(line: 868, column: 14, scope: !5033)
!5058 = !DILocation(line: 868, column: 4, scope: !5033)
!5059 = !DILocation(line: 868, column: 12, scope: !5033)
!5060 = !DILocation(line: 869, column: 2, scope: !5033)
!5061 = !DILocation(line: 872, column: 6, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 872, column: 6)
!5063 = !DILocation(line: 872, column: 18, scope: !5062)
!5064 = !DILocation(line: 872, column: 45, scope: !5062)
!5065 = !DILocation(line: 872, column: 48, scope: !5062)
!5066 = !DILocation(line: 872, column: 52, scope: !5062)
!5067 = !DILocation(line: 872, column: 59, scope: !5062)
!5068 = !DILocation(line: 872, column: 62, scope: !5062)
!5069 = !DILocation(line: 872, column: 66, scope: !5062)
!5070 = !DILocation(line: 872, column: 6, scope: !4974)
!5071 = !DILocation(line: 874, column: 9, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 872, column: 74)
!5073 = !DILocation(line: 874, column: 13, scope: !5072)
!5074 = !DILocation(line: 874, column: 21, scope: !5072)
!5075 = !DILocation(line: 874, column: 25, scope: !5072)
!5076 = !DILocation(line: 874, column: 32, scope: !5072)
!5077 = !DILocation(line: 874, column: 7, scope: !5072)
!5078 = !DILocation(line: 875, column: 2, scope: !5072)
!5079 = !DILocation(line: 877, column: 11, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 876, column: 7)
!5081 = !DILocation(line: 877, column: 3, scope: !5080)
!5082 = !DILocation(line: 879, column: 9, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 877, column: 24)
!5084 = !DILocation(line: 880, column: 5, scope: !5083)
!5085 = !DILocation(line: 882, column: 9, scope: !5083)
!5086 = !DILocation(line: 883, column: 5, scope: !5083)
!5087 = !DILocation(line: 886, column: 14, scope: !5083)
!5088 = !DILocation(line: 886, column: 19, scope: !5083)
!5089 = !DILocation(line: 886, column: 11, scope: !5083)
!5090 = !DILocation(line: 886, column: 9, scope: !5083)
!5091 = !DILocation(line: 887, column: 5, scope: !5083)
!5092 = !DILocation(line: 891, column: 6, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 891, column: 6)
!5094 = !DILocation(line: 891, column: 12, scope: !5093)
!5095 = !DILocation(line: 891, column: 16, scope: !5093)
!5096 = !DILocation(line: 891, column: 10, scope: !5093)
!5097 = !DILocation(line: 891, column: 6, scope: !4974)
!5098 = !DILocation(line: 893, column: 13, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 891, column: 24)
!5100 = !DILocation(line: 893, column: 30, scope: !5099)
!5101 = !DILocation(line: 893, column: 34, scope: !5099)
!5102 = !DILocation(line: 893, column: 56, scope: !5099)
!5103 = !DILocation(line: 893, column: 54, scope: !5099)
!5104 = !DILocation(line: 893, column: 3, scope: !5099)
!5105 = !DILocation(line: 893, column: 7, scope: !5099)
!5106 = !DILocation(line: 893, column: 11, scope: !5099)
!5107 = !DILocation(line: 894, column: 17, scope: !5099)
!5108 = !DILocation(line: 894, column: 34, scope: !5099)
!5109 = !DILocation(line: 894, column: 38, scope: !5099)
!5110 = !DILocation(line: 894, column: 62, scope: !5099)
!5111 = !DILocation(line: 894, column: 60, scope: !5099)
!5112 = !DILocation(line: 894, column: 3, scope: !5099)
!5113 = !DILocation(line: 894, column: 7, scope: !5099)
!5114 = !DILocation(line: 894, column: 15, scope: !5099)
!5115 = !DILocation(line: 895, column: 16, scope: !5099)
!5116 = !DILocation(line: 895, column: 3, scope: !5099)
!5117 = !DILocation(line: 895, column: 7, scope: !5099)
!5118 = !DILocation(line: 895, column: 14, scope: !5099)
!5119 = !DILocation(line: 896, column: 2, scope: !5099)
!5120 = !DILocation(line: 900, column: 25, scope: !4974)
!5121 = !DILocation(line: 900, column: 2, scope: !4974)
!5122 = !DILocation(line: 900, column: 6, scope: !4974)
!5123 = !DILocation(line: 900, column: 14, scope: !4974)
!5124 = !DILocation(line: 900, column: 18, scope: !4974)
!5125 = !DILocation(line: 900, column: 23, scope: !4974)
!5126 = !DILocation(line: 901, column: 6, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 901, column: 6)
!5128 = !DILocation(line: 901, column: 10, scope: !5127)
!5129 = !DILocation(line: 901, column: 6, scope: !4974)
!5130 = !DILocation(line: 902, column: 9, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 901, column: 16)
!5132 = !DILocation(line: 902, column: 13, scope: !5131)
!5133 = !DILocation(line: 902, column: 17, scope: !5131)
!5134 = !DILocation(line: 902, column: 21, scope: !5131)
!5135 = !DILocation(line: 902, column: 7, scope: !5131)
!5136 = !DILocation(line: 903, column: 7, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 903, column: 7)
!5138 = !DILocation(line: 903, column: 7, scope: !5131)
!5139 = !DILocation(line: 903, column: 12, scope: !5137)
!5140 = !DILocation(line: 903, column: 17, scope: !5137)
!5141 = !DILocation(line: 903, column: 20, scope: !5137)
!5142 = !DILocation(line: 903, column: 22, scope: !5137)
!5143 = !DILocation(line: 904, column: 22, scope: !5131)
!5144 = !DILocation(line: 904, column: 3, scope: !5131)
!5145 = !DILocation(line: 904, column: 7, scope: !5131)
!5146 = !DILocation(line: 904, column: 11, scope: !5131)
!5147 = !DILocation(line: 904, column: 15, scope: !5131)
!5148 = !DILocation(line: 904, column: 20, scope: !5131)
!5149 = !DILocation(line: 905, column: 2, scope: !5131)
!5150 = !DILocation(line: 907, column: 11, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 906, column: 7)
!5152 = !DILocation(line: 907, column: 10, scope: !5151)
!5153 = !DILocation(line: 907, column: 20, scope: !5151)
!5154 = !DILocation(line: 907, column: 24, scope: !5151)
!5155 = !DILocation(line: 907, column: 9, scope: !5151)
!5156 = !DILocation(line: 907, column: 7, scope: !5151)
!5157 = !DILocation(line: 908, column: 7, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 908, column: 7)
!5159 = !DILocation(line: 908, column: 7, scope: !5151)
!5160 = !DILocation(line: 908, column: 12, scope: !5158)
!5161 = !DILocation(line: 908, column: 17, scope: !5158)
!5162 = !DILocation(line: 908, column: 20, scope: !5158)
!5163 = !DILocation(line: 908, column: 22, scope: !5158)
!5164 = !DILocation(line: 909, column: 25, scope: !5151)
!5165 = !DILocation(line: 909, column: 5, scope: !5151)
!5166 = !DILocation(line: 909, column: 4, scope: !5151)
!5167 = !DILocation(line: 909, column: 14, scope: !5151)
!5168 = !DILocation(line: 909, column: 18, scope: !5151)
!5169 = !DILocation(line: 909, column: 3, scope: !5151)
!5170 = !DILocation(line: 909, column: 23, scope: !5151)
!5171 = !DILocation(line: 912, column: 6, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 912, column: 6)
!5173 = !DILocation(line: 912, column: 6, scope: !4974)
!5174 = !DILocation(line: 913, column: 20, scope: !5172)
!5175 = !DILocation(line: 913, column: 14, scope: !5172)
!5176 = !DILocation(line: 913, column: 3, scope: !5172)
!5177 = !DILocation(line: 914, column: 26, scope: !4974)
!5178 = !DILocation(line: 914, column: 32, scope: !4974)
!5179 = !DILocation(line: 914, column: 36, scope: !4974)
!5180 = !DILocation(line: 914, column: 2, scope: !4974)
!5181 = !DILocation(line: 915, column: 1, scope: !4974)
!5182 = distinct !DISubprogram(name: "assign_matarar", scope: !3, file: !3, line: 918, type: !5183, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!5183 = !DISubroutineType(types: !5184)
!5184 = !{null, !484, !4011, !176}
!5185 = !DILocalVariable(name: "ob", arg: 1, scope: !5182, file: !3, line: 918, type: !484)
!5186 = !DILocation(line: 918, column: 36, scope: !5182)
!5187 = !DILocalVariable(name: "matar", arg: 2, scope: !5182, file: !3, line: 918, type: !4011)
!5188 = !DILocation(line: 918, column: 59, scope: !5182)
!5189 = !DILocalVariable(name: "totcol", arg: 3, scope: !5182, file: !3, line: 918, type: !176)
!5190 = !DILocation(line: 918, column: 72, scope: !5182)
!5191 = !DILocalVariable(name: "actcol_orig", scope: !5182, file: !3, line: 920, type: !178)
!5192 = !DILocation(line: 920, column: 6, scope: !5182)
!5193 = !DILocation(line: 920, column: 20, scope: !5182)
!5194 = !DILocation(line: 920, column: 24, scope: !5182)
!5195 = !DILocalVariable(name: "i", scope: !5182, file: !3, line: 921, type: !176)
!5196 = !DILocation(line: 921, column: 8, scope: !5182)
!5197 = !DILocation(line: 923, column: 2, scope: !5182)
!5198 = !DILocation(line: 923, column: 37, scope: !5182)
!5199 = !DILocation(line: 923, column: 9, scope: !5182)
!5200 = distinct !{!5200, !5197, !5201}
!5201 = !DILocation(line: 923, column: 43, scope: !5182)
!5202 = !DILocation(line: 926, column: 9, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 926, column: 2)
!5204 = !DILocation(line: 926, column: 7, scope: !5203)
!5205 = !DILocation(line: 926, column: 14, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 926, column: 2)
!5207 = !DILocation(line: 926, column: 18, scope: !5206)
!5208 = !DILocation(line: 926, column: 16, scope: !5206)
!5209 = !DILocation(line: 926, column: 2, scope: !5203)
!5210 = !DILocation(line: 927, column: 19, scope: !5206)
!5211 = !DILocation(line: 927, column: 25, scope: !5206)
!5212 = !DILocation(line: 927, column: 24, scope: !5206)
!5213 = !DILocation(line: 927, column: 32, scope: !5206)
!5214 = !DILocation(line: 927, column: 23, scope: !5206)
!5215 = !DILocation(line: 927, column: 36, scope: !5206)
!5216 = !DILocation(line: 927, column: 38, scope: !5206)
!5217 = !DILocation(line: 927, column: 3, scope: !5206)
!5218 = !DILocation(line: 926, column: 27, scope: !5206)
!5219 = !DILocation(line: 926, column: 2, scope: !5206)
!5220 = distinct !{!5220, !5209, !5221}
!5221 = !DILocation(line: 927, column: 66, scope: !5203)
!5222 = !DILocation(line: 929, column: 6, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 929, column: 6)
!5224 = !DILocation(line: 929, column: 20, scope: !5223)
!5225 = !DILocation(line: 929, column: 24, scope: !5223)
!5226 = !DILocation(line: 929, column: 18, scope: !5223)
!5227 = !DILocation(line: 929, column: 6, scope: !5182)
!5228 = !DILocation(line: 930, column: 17, scope: !5223)
!5229 = !DILocation(line: 930, column: 21, scope: !5223)
!5230 = !DILocation(line: 930, column: 15, scope: !5223)
!5231 = !DILocation(line: 930, column: 3, scope: !5223)
!5232 = !DILocation(line: 932, column: 15, scope: !5182)
!5233 = !DILocation(line: 932, column: 2, scope: !5182)
!5234 = !DILocation(line: 932, column: 6, scope: !5182)
!5235 = !DILocation(line: 932, column: 13, scope: !5182)
!5236 = !DILocation(line: 933, column: 1, scope: !5182)
!5237 = distinct !DISubprogram(name: "object_remove_material_slot", scope: !3, file: !3, line: 1222, type: !5238, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{!1171, !3417}
!5240 = !DILocalVariable(name: "ob", arg: 1, scope: !5237, file: !3, line: 1222, type: !3417)
!5241 = !DILocation(line: 1222, column: 42, scope: !5237)
!5242 = !DILocalVariable(name: "mao", scope: !5237, file: !3, line: 1224, type: !2660)
!5243 = !DILocation(line: 1224, column: 12, scope: !5237)
!5244 = !DILocalVariable(name: "matarar", scope: !5237, file: !3, line: 1224, type: !4151)
!5245 = !DILocation(line: 1224, column: 20, scope: !5237)
!5246 = !DILocalVariable(name: "obt", scope: !5237, file: !3, line: 1225, type: !3417)
!5247 = !DILocation(line: 1225, column: 10, scope: !5237)
!5248 = !DILocalVariable(name: "totcolp", scope: !5237, file: !3, line: 1226, type: !214)
!5249 = !DILocation(line: 1226, column: 9, scope: !5237)
!5250 = !DILocalVariable(name: "a", scope: !5237, file: !3, line: 1227, type: !176)
!5251 = !DILocation(line: 1227, column: 8, scope: !5237)
!5252 = !DILocalVariable(name: "actcol", scope: !5237, file: !3, line: 1227, type: !176)
!5253 = !DILocation(line: 1227, column: 11, scope: !5237)
!5254 = !DILocation(line: 1229, column: 6, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1229, column: 6)
!5256 = !DILocation(line: 1229, column: 9, scope: !5255)
!5257 = !DILocation(line: 1229, column: 17, scope: !5255)
!5258 = !DILocation(line: 1229, column: 20, scope: !5255)
!5259 = !DILocation(line: 1229, column: 24, scope: !5255)
!5260 = !DILocation(line: 1229, column: 31, scope: !5255)
!5261 = !DILocation(line: 1229, column: 6, scope: !5237)
!5262 = !DILocation(line: 1230, column: 3, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 1229, column: 37)
!5264 = !DILocation(line: 1234, column: 6, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1234, column: 6)
!5266 = !DILocation(line: 1234, column: 10, scope: !5265)
!5267 = !DILocation(line: 1234, column: 17, scope: !5265)
!5268 = !DILocation(line: 1234, column: 6, scope: !5237)
!5269 = !DILocation(line: 1235, column: 70, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 1234, column: 23)
!5271 = !DILocation(line: 1235, column: 74, scope: !5270)
!5272 = !DILocation(line: 1235, column: 3, scope: !5270)
!5273 = !DILocation(line: 1237, column: 3, scope: !5270)
!5274 = !DILocation(line: 1246, column: 25, scope: !5237)
!5275 = !DILocation(line: 1246, column: 12, scope: !5237)
!5276 = !DILocation(line: 1246, column: 10, scope: !5237)
!5277 = !DILocation(line: 1247, column: 25, scope: !5237)
!5278 = !DILocation(line: 1247, column: 12, scope: !5237)
!5279 = !DILocation(line: 1247, column: 10, scope: !5237)
!5280 = !DILocation(line: 1249, column: 6, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1249, column: 6)
!5282 = !DILocation(line: 1249, column: 6, scope: !5237)
!5283 = !DILocation(line: 1250, column: 3, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1249, column: 37)
!5285 = !DILocation(line: 1254, column: 6, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1254, column: 6)
!5287 = !DILocation(line: 1254, column: 10, scope: !5286)
!5288 = !DILocation(line: 1254, column: 19, scope: !5286)
!5289 = !DILocation(line: 1254, column: 23, scope: !5286)
!5290 = !DILocation(line: 1254, column: 17, scope: !5286)
!5291 = !DILocation(line: 1254, column: 6, scope: !5237)
!5292 = !DILocation(line: 1255, column: 16, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 1254, column: 31)
!5294 = !DILocation(line: 1255, column: 20, scope: !5293)
!5295 = !DILocation(line: 1255, column: 3, scope: !5293)
!5296 = !DILocation(line: 1255, column: 7, scope: !5293)
!5297 = !DILocation(line: 1255, column: 14, scope: !5293)
!5298 = !DILocation(line: 1256, column: 2, scope: !5293)
!5299 = !DILocation(line: 1259, column: 10, scope: !5237)
!5300 = !DILocation(line: 1259, column: 9, scope: !5237)
!5301 = !DILocation(line: 1259, column: 19, scope: !5237)
!5302 = !DILocation(line: 1259, column: 23, scope: !5237)
!5303 = !DILocation(line: 1259, column: 30, scope: !5237)
!5304 = !DILocation(line: 1259, column: 8, scope: !5237)
!5305 = !DILocation(line: 1259, column: 6, scope: !5237)
!5306 = !DILocation(line: 1260, column: 6, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1260, column: 6)
!5308 = !DILocation(line: 1260, column: 6, scope: !5237)
!5309 = !DILocation(line: 1260, column: 11, scope: !5307)
!5310 = !DILocation(line: 1260, column: 16, scope: !5307)
!5311 = !DILocation(line: 1260, column: 19, scope: !5307)
!5312 = !DILocation(line: 1260, column: 21, scope: !5307)
!5313 = !DILocation(line: 1262, column: 11, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1262, column: 2)
!5315 = !DILocation(line: 1262, column: 15, scope: !5314)
!5316 = !DILocation(line: 1262, column: 9, scope: !5314)
!5317 = !DILocation(line: 1262, column: 7, scope: !5314)
!5318 = !DILocation(line: 1262, column: 23, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 1262, column: 2)
!5320 = !DILocation(line: 1262, column: 27, scope: !5319)
!5321 = !DILocation(line: 1262, column: 31, scope: !5319)
!5322 = !DILocation(line: 1262, column: 25, scope: !5319)
!5323 = !DILocation(line: 1262, column: 2, scope: !5314)
!5324 = !DILocation(line: 1263, column: 25, scope: !5319)
!5325 = !DILocation(line: 1263, column: 24, scope: !5319)
!5326 = !DILocation(line: 1263, column: 34, scope: !5319)
!5327 = !DILocation(line: 1263, column: 23, scope: !5319)
!5328 = !DILocation(line: 1263, column: 5, scope: !5319)
!5329 = !DILocation(line: 1263, column: 4, scope: !5319)
!5330 = !DILocation(line: 1263, column: 14, scope: !5319)
!5331 = !DILocation(line: 1263, column: 16, scope: !5319)
!5332 = !DILocation(line: 1263, column: 3, scope: !5319)
!5333 = !DILocation(line: 1263, column: 21, scope: !5319)
!5334 = !DILocation(line: 1262, column: 40, scope: !5319)
!5335 = !DILocation(line: 1262, column: 2, scope: !5319)
!5336 = distinct !{!5336, !5323, !5337}
!5337 = !DILocation(line: 1263, column: 35, scope: !5314)
!5338 = !DILocation(line: 1264, column: 4, scope: !5237)
!5339 = !DILocation(line: 1264, column: 12, scope: !5237)
!5340 = !DILocation(line: 1266, column: 7, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1266, column: 6)
!5342 = !DILocation(line: 1266, column: 6, scope: !5341)
!5343 = !DILocation(line: 1266, column: 15, scope: !5341)
!5344 = !DILocation(line: 1266, column: 6, scope: !5237)
!5345 = !DILocation(line: 1267, column: 3, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 1266, column: 21)
!5347 = !DILocation(line: 1267, column: 14, scope: !5346)
!5348 = !DILocation(line: 1267, column: 13, scope: !5346)
!5349 = !DILocation(line: 1268, column: 4, scope: !5346)
!5350 = !DILocation(line: 1268, column: 12, scope: !5346)
!5351 = !DILocation(line: 1269, column: 2, scope: !5346)
!5352 = !DILocation(line: 1271, column: 11, scope: !5237)
!5353 = !DILocation(line: 1271, column: 15, scope: !5237)
!5354 = !DILocation(line: 1271, column: 9, scope: !5237)
!5355 = !DILocation(line: 1272, column: 10, scope: !5237)
!5356 = !DILocation(line: 1272, column: 16, scope: !5237)
!5357 = !DILocation(line: 1272, column: 23, scope: !5237)
!5358 = !DILocation(line: 1272, column: 8, scope: !5237)
!5359 = !DILocation(line: 1272, column: 6, scope: !5237)
!5360 = !DILocation(line: 1273, column: 2, scope: !5237)
!5361 = !DILocation(line: 1273, column: 9, scope: !5237)
!5362 = !DILocation(line: 1275, column: 7, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 1275, column: 7)
!5364 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1273, column: 14)
!5365 = !DILocation(line: 1275, column: 12, scope: !5363)
!5366 = !DILocation(line: 1275, column: 20, scope: !5363)
!5367 = !DILocation(line: 1275, column: 24, scope: !5363)
!5368 = !DILocation(line: 1275, column: 17, scope: !5363)
!5369 = !DILocation(line: 1275, column: 7, scope: !5364)
!5370 = !DILocation(line: 1278, column: 10, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 1275, column: 30)
!5372 = !DILocation(line: 1278, column: 15, scope: !5371)
!5373 = !DILocation(line: 1278, column: 19, scope: !5371)
!5374 = !DILocation(line: 1278, column: 26, scope: !5371)
!5375 = !DILocation(line: 1278, column: 8, scope: !5371)
!5376 = !DILocation(line: 1279, column: 8, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1279, column: 8)
!5378 = !DILocation(line: 1279, column: 8, scope: !5371)
!5379 = !DILocation(line: 1279, column: 13, scope: !5377)
!5380 = !DILocation(line: 1279, column: 18, scope: !5377)
!5381 = !DILocation(line: 1279, column: 21, scope: !5377)
!5382 = !DILocation(line: 1279, column: 23, scope: !5377)
!5383 = !DILocation(line: 1281, column: 13, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1281, column: 4)
!5385 = !DILocation(line: 1281, column: 11, scope: !5384)
!5386 = !DILocation(line: 1281, column: 9, scope: !5384)
!5387 = !DILocation(line: 1281, column: 21, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1281, column: 4)
!5389 = !DILocation(line: 1281, column: 25, scope: !5388)
!5390 = !DILocation(line: 1281, column: 30, scope: !5388)
!5391 = !DILocation(line: 1281, column: 23, scope: !5388)
!5392 = !DILocation(line: 1281, column: 4, scope: !5384)
!5393 = !DILocation(line: 1282, column: 23, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1281, column: 43)
!5395 = !DILocation(line: 1282, column: 28, scope: !5394)
!5396 = !DILocation(line: 1282, column: 32, scope: !5394)
!5397 = !DILocation(line: 1282, column: 5, scope: !5394)
!5398 = !DILocation(line: 1282, column: 10, scope: !5394)
!5399 = !DILocation(line: 1282, column: 14, scope: !5394)
!5400 = !DILocation(line: 1282, column: 16, scope: !5394)
!5401 = !DILocation(line: 1282, column: 21, scope: !5394)
!5402 = !DILocation(line: 1283, column: 27, scope: !5394)
!5403 = !DILocation(line: 1283, column: 32, scope: !5394)
!5404 = !DILocation(line: 1283, column: 40, scope: !5394)
!5405 = !DILocation(line: 1283, column: 5, scope: !5394)
!5406 = !DILocation(line: 1283, column: 10, scope: !5394)
!5407 = !DILocation(line: 1283, column: 18, scope: !5394)
!5408 = !DILocation(line: 1283, column: 20, scope: !5394)
!5409 = !DILocation(line: 1283, column: 25, scope: !5394)
!5410 = !DILocation(line: 1284, column: 4, scope: !5394)
!5411 = !DILocation(line: 1281, column: 39, scope: !5388)
!5412 = !DILocation(line: 1281, column: 4, scope: !5388)
!5413 = distinct !{!5413, !5392, !5414}
!5414 = !DILocation(line: 1284, column: 4, scope: !5384)
!5415 = !DILocation(line: 1285, column: 4, scope: !5371)
!5416 = !DILocation(line: 1285, column: 9, scope: !5371)
!5417 = !DILocation(line: 1285, column: 15, scope: !5371)
!5418 = !DILocation(line: 1286, column: 8, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1286, column: 8)
!5420 = !DILocation(line: 1286, column: 13, scope: !5419)
!5421 = !DILocation(line: 1286, column: 22, scope: !5419)
!5422 = !DILocation(line: 1286, column: 27, scope: !5419)
!5423 = !DILocation(line: 1286, column: 20, scope: !5419)
!5424 = !DILocation(line: 1286, column: 8, scope: !5371)
!5425 = !DILocation(line: 1286, column: 49, scope: !5419)
!5426 = !DILocation(line: 1286, column: 54, scope: !5419)
!5427 = !DILocation(line: 1286, column: 35, scope: !5419)
!5428 = !DILocation(line: 1286, column: 40, scope: !5419)
!5429 = !DILocation(line: 1286, column: 47, scope: !5419)
!5430 = !DILocation(line: 1288, column: 8, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1288, column: 8)
!5432 = !DILocation(line: 1288, column: 13, scope: !5431)
!5433 = !DILocation(line: 1288, column: 20, scope: !5431)
!5434 = !DILocation(line: 1288, column: 8, scope: !5371)
!5435 = !DILocation(line: 1289, column: 5, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 1288, column: 26)
!5437 = !DILocation(line: 1289, column: 15, scope: !5436)
!5438 = !DILocation(line: 1289, column: 20, scope: !5436)
!5439 = !DILocation(line: 1290, column: 5, scope: !5436)
!5440 = !DILocation(line: 1290, column: 15, scope: !5436)
!5441 = !DILocation(line: 1290, column: 20, scope: !5436)
!5442 = !DILocation(line: 1291, column: 5, scope: !5436)
!5443 = !DILocation(line: 1291, column: 10, scope: !5436)
!5444 = !DILocation(line: 1291, column: 14, scope: !5436)
!5445 = !DILocation(line: 1292, column: 5, scope: !5436)
!5446 = !DILocation(line: 1292, column: 10, scope: !5436)
!5447 = !DILocation(line: 1292, column: 18, scope: !5436)
!5448 = !DILocation(line: 1293, column: 4, scope: !5436)
!5449 = !DILocation(line: 1294, column: 3, scope: !5371)
!5450 = !DILocation(line: 1295, column: 9, scope: !5364)
!5451 = !DILocation(line: 1295, column: 14, scope: !5364)
!5452 = !DILocation(line: 1295, column: 17, scope: !5364)
!5453 = !DILocation(line: 1295, column: 7, scope: !5364)
!5454 = distinct !{!5454, !5360, !5455}
!5455 = !DILocation(line: 1296, column: 2, scope: !5237)
!5456 = !DILocation(line: 1299, column: 6, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1299, column: 6)
!5458 = !DILocation(line: 1299, column: 6, scope: !5237)
!5459 = !DILocation(line: 1300, column: 39, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1299, column: 59)
!5461 = !DILocation(line: 1300, column: 43, scope: !5460)
!5462 = !DILocation(line: 1300, column: 33, scope: !5460)
!5463 = !DILocation(line: 1300, column: 49, scope: !5460)
!5464 = !DILocation(line: 1300, column: 56, scope: !5460)
!5465 = !DILocation(line: 1300, column: 3, scope: !5460)
!5466 = !DILocation(line: 1301, column: 7, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 1301, column: 7)
!5468 = !DILocation(line: 1301, column: 11, scope: !5467)
!5469 = !DILocation(line: 1301, column: 7, scope: !5460)
!5470 = !DILocation(line: 1302, column: 23, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 1301, column: 24)
!5472 = !DILocation(line: 1302, column: 27, scope: !5471)
!5473 = !DILocation(line: 1302, column: 40, scope: !5471)
!5474 = !DILocation(line: 1302, column: 4, scope: !5471)
!5475 = !DILocation(line: 1303, column: 3, scope: !5471)
!5476 = !DILocation(line: 1304, column: 2, scope: !5460)
!5477 = !DILocation(line: 1306, column: 2, scope: !5237)
!5478 = !DILocation(line: 1307, column: 1, scope: !5237)
!5479 = distinct !DISubprogram(name: "find_material_index", scope: !3, file: !3, line: 936, type: !5480, scopeLine: 937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{!176, !3417, !2660}
!5482 = !DILocalVariable(name: "ob", arg: 1, scope: !5479, file: !3, line: 936, type: !3417)
!5483 = !DILocation(line: 936, column: 35, scope: !5479)
!5484 = !DILocalVariable(name: "ma", arg: 2, scope: !5479, file: !3, line: 936, type: !2660)
!5485 = !DILocation(line: 936, column: 49, scope: !5479)
!5486 = !DILocalVariable(name: "matarar", scope: !5479, file: !3, line: 938, type: !4151)
!5487 = !DILocation(line: 938, column: 14, scope: !5479)
!5488 = !DILocalVariable(name: "a", scope: !5479, file: !3, line: 939, type: !176)
!5489 = !DILocation(line: 939, column: 8, scope: !5479)
!5490 = !DILocalVariable(name: "totcolp", scope: !5479, file: !3, line: 939, type: !214)
!5491 = !DILocation(line: 939, column: 12, scope: !5479)
!5492 = !DILocation(line: 941, column: 6, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 941, column: 6)
!5494 = !DILocation(line: 941, column: 9, scope: !5493)
!5495 = !DILocation(line: 941, column: 6, scope: !5479)
!5496 = !DILocation(line: 941, column: 18, scope: !5493)
!5497 = !DILocation(line: 943, column: 25, scope: !5479)
!5498 = !DILocation(line: 943, column: 12, scope: !5479)
!5499 = !DILocation(line: 943, column: 10, scope: !5479)
!5500 = !DILocation(line: 944, column: 25, scope: !5479)
!5501 = !DILocation(line: 944, column: 12, scope: !5479)
!5502 = !DILocation(line: 944, column: 10, scope: !5479)
!5503 = !DILocation(line: 946, column: 6, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 946, column: 6)
!5505 = !DILocation(line: 946, column: 14, scope: !5504)
!5506 = !DILocation(line: 946, column: 22, scope: !5504)
!5507 = !DILocation(line: 946, column: 25, scope: !5504)
!5508 = !DILocation(line: 946, column: 33, scope: !5504)
!5509 = !DILocation(line: 946, column: 6, scope: !5479)
!5510 = !DILocation(line: 946, column: 42, scope: !5504)
!5511 = !DILocation(line: 948, column: 9, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 948, column: 2)
!5513 = !DILocation(line: 948, column: 7, scope: !5512)
!5514 = !DILocation(line: 948, column: 14, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 948, column: 2)
!5516 = !DILocation(line: 948, column: 19, scope: !5515)
!5517 = !DILocation(line: 948, column: 18, scope: !5515)
!5518 = !DILocation(line: 948, column: 16, scope: !5515)
!5519 = !DILocation(line: 948, column: 2, scope: !5512)
!5520 = !DILocation(line: 949, column: 9, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 949, column: 7)
!5522 = !DILocation(line: 949, column: 8, scope: !5521)
!5523 = !DILocation(line: 949, column: 18, scope: !5521)
!5524 = !DILocation(line: 949, column: 7, scope: !5521)
!5525 = !DILocation(line: 949, column: 24, scope: !5521)
!5526 = !DILocation(line: 949, column: 21, scope: !5521)
!5527 = !DILocation(line: 949, column: 7, scope: !5515)
!5528 = !DILocation(line: 950, column: 4, scope: !5521)
!5529 = !DILocation(line: 948, column: 29, scope: !5515)
!5530 = !DILocation(line: 948, column: 2, scope: !5515)
!5531 = distinct !{!5531, !5519, !5532}
!5532 = !DILocation(line: 950, column: 4, scope: !5512)
!5533 = !DILocation(line: 951, column: 6, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 951, column: 6)
!5535 = !DILocation(line: 951, column: 11, scope: !5534)
!5536 = !DILocation(line: 951, column: 10, scope: !5534)
!5537 = !DILocation(line: 951, column: 8, scope: !5534)
!5538 = !DILocation(line: 951, column: 6, scope: !5479)
!5539 = !DILocation(line: 952, column: 10, scope: !5534)
!5540 = !DILocation(line: 952, column: 12, scope: !5534)
!5541 = !DILocation(line: 952, column: 3, scope: !5534)
!5542 = !DILocation(line: 953, column: 2, scope: !5479)
!5543 = !DILocation(line: 954, column: 1, scope: !5479)
!5544 = distinct !DISubprogram(name: "object_add_material_slot", scope: !3, file: !3, line: 956, type: !5238, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!5545 = !DILocalVariable(name: "ob", arg: 1, scope: !5544, file: !3, line: 956, type: !3417)
!5546 = !DILocation(line: 956, column: 39, scope: !5544)
!5547 = !DILocation(line: 958, column: 6, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 958, column: 6)
!5549 = !DILocation(line: 958, column: 9, scope: !5548)
!5550 = !DILocation(line: 958, column: 6, scope: !5544)
!5551 = !DILocation(line: 958, column: 18, scope: !5548)
!5552 = !DILocation(line: 959, column: 6, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 959, column: 6)
!5554 = !DILocation(line: 959, column: 10, scope: !5553)
!5555 = !DILocation(line: 959, column: 17, scope: !5553)
!5556 = !DILocation(line: 959, column: 6, scope: !5544)
!5557 = !DILocation(line: 959, column: 28, scope: !5553)
!5558 = !DILocation(line: 961, column: 18, scope: !5544)
!5559 = !DILocation(line: 961, column: 28, scope: !5544)
!5560 = !DILocation(line: 961, column: 32, scope: !5544)
!5561 = !DILocation(line: 961, column: 39, scope: !5544)
!5562 = !DILocation(line: 961, column: 2, scope: !5544)
!5563 = !DILocation(line: 962, column: 15, scope: !5544)
!5564 = !DILocation(line: 962, column: 19, scope: !5544)
!5565 = !DILocation(line: 962, column: 2, scope: !5544)
!5566 = !DILocation(line: 962, column: 6, scope: !5544)
!5567 = !DILocation(line: 962, column: 13, scope: !5544)
!5568 = !DILocation(line: 963, column: 2, scope: !5544)
!5569 = !DILocation(line: 964, column: 1, scope: !5544)
!5570 = distinct !DISubprogram(name: "init_render_material", scope: !3, file: !3, line: 1061, type: !5571, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{null, !2660, !178, !819}
!5573 = !DILocalVariable(name: "mat", arg: 1, scope: !5570, file: !3, line: 1061, type: !2660)
!5574 = !DILocation(line: 1061, column: 37, scope: !5570)
!5575 = !DILocalVariable(name: "r_mode", arg: 2, scope: !5570, file: !3, line: 1061, type: !178)
!5576 = !DILocation(line: 1061, column: 46, scope: !5570)
!5577 = !DILocalVariable(name: "amb", arg: 3, scope: !5570, file: !3, line: 1061, type: !819)
!5578 = !DILocation(line: 1061, column: 61, scope: !5570)
!5579 = !DILocation(line: 1064, column: 26, scope: !5570)
!5580 = !DILocation(line: 1064, column: 31, scope: !5570)
!5581 = !DILocation(line: 1064, column: 39, scope: !5570)
!5582 = !DILocation(line: 1064, column: 2, scope: !5570)
!5583 = !DILocation(line: 1066, column: 6, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 1066, column: 6)
!5585 = !DILocation(line: 1066, column: 11, scope: !5584)
!5586 = !DILocation(line: 1066, column: 20, scope: !5584)
!5587 = !DILocation(line: 1066, column: 23, scope: !5584)
!5588 = !DILocation(line: 1066, column: 28, scope: !5584)
!5589 = !DILocation(line: 1066, column: 6, scope: !5570)
!5590 = !DILocation(line: 1070, column: 18, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 1066, column: 39)
!5592 = !DILocation(line: 1070, column: 23, scope: !5591)
!5593 = !DILocation(line: 1070, column: 28, scope: !5591)
!5594 = !DILocation(line: 1070, column: 48, scope: !5591)
!5595 = !DILocation(line: 1070, column: 3, scope: !5591)
!5596 = !DILocation(line: 1070, column: 8, scope: !5591)
!5597 = !DILocation(line: 1070, column: 15, scope: !5591)
!5598 = !DILocation(line: 1071, column: 18, scope: !5591)
!5599 = !DILocation(line: 1071, column: 23, scope: !5591)
!5600 = !DILocation(line: 1071, column: 29, scope: !5591)
!5601 = !DILocation(line: 1071, column: 3, scope: !5591)
!5602 = !DILocation(line: 1071, column: 8, scope: !5591)
!5603 = !DILocation(line: 1071, column: 16, scope: !5591)
!5604 = !DILocation(line: 1074, column: 27, scope: !5591)
!5605 = !DILocation(line: 1074, column: 32, scope: !5591)
!5606 = !DILocation(line: 1074, column: 42, scope: !5591)
!5607 = !DILocation(line: 1074, column: 51, scope: !5591)
!5608 = !DILocation(line: 1074, column: 56, scope: !5591)
!5609 = !DILocation(line: 1074, column: 64, scope: !5591)
!5610 = !DILocation(line: 1074, column: 69, scope: !5591)
!5611 = !DILocation(line: 1074, column: 3, scope: !5591)
!5612 = !DILocation(line: 1076, column: 24, scope: !5591)
!5613 = !DILocation(line: 1076, column: 29, scope: !5591)
!5614 = !DILocation(line: 1076, column: 39, scope: !5591)
!5615 = !DILocation(line: 1076, column: 44, scope: !5591)
!5616 = !DILocation(line: 1076, column: 52, scope: !5591)
!5617 = !DILocation(line: 1076, column: 3, scope: !5591)
!5618 = !DILocation(line: 1078, column: 8, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 1078, column: 7)
!5620 = !DILocation(line: 1078, column: 13, scope: !5619)
!5621 = !DILocation(line: 1078, column: 23, scope: !5619)
!5622 = !DILocation(line: 1078, column: 7, scope: !5591)
!5623 = !DILocation(line: 1079, column: 55, scope: !5619)
!5624 = !DILocation(line: 1079, column: 60, scope: !5619)
!5625 = !DILocation(line: 1079, column: 30, scope: !5619)
!5626 = !DILocation(line: 1079, column: 4, scope: !5619)
!5627 = !DILocation(line: 1079, column: 9, scope: !5619)
!5628 = !DILocation(line: 1079, column: 19, scope: !5619)
!5629 = !DILocation(line: 1079, column: 28, scope: !5619)
!5630 = !DILocation(line: 1080, column: 2, scope: !5591)
!5631 = !DILocation(line: 1082, column: 17, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 1081, column: 7)
!5633 = !DILocation(line: 1082, column: 22, scope: !5632)
!5634 = !DILocation(line: 1082, column: 3, scope: !5632)
!5635 = !DILocation(line: 1082, column: 8, scope: !5632)
!5636 = !DILocation(line: 1082, column: 15, scope: !5632)
!5637 = !DILocation(line: 1083, column: 18, scope: !5632)
!5638 = !DILocation(line: 1083, column: 23, scope: !5632)
!5639 = !DILocation(line: 1083, column: 3, scope: !5632)
!5640 = !DILocation(line: 1083, column: 8, scope: !5632)
!5641 = !DILocation(line: 1083, column: 16, scope: !5632)
!5642 = !DILocation(line: 1085, column: 7, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 1085, column: 7)
!5644 = !DILocation(line: 1085, column: 12, scope: !5643)
!5645 = !DILocation(line: 1085, column: 27, scope: !5643)
!5646 = !DILocation(line: 1085, column: 7, scope: !5632)
!5647 = !DILocation(line: 1086, column: 4, scope: !5643)
!5648 = !DILocation(line: 1086, column: 9, scope: !5643)
!5649 = !DILocation(line: 1086, column: 16, scope: !5643)
!5650 = !DILocation(line: 1088, column: 1, scope: !5570)
!5651 = distinct !DISubprogram(name: "do_init_render_material", scope: !3, file: !3, line: 966, type: !5571, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!5652 = !DILocalVariable(name: "ma", arg: 1, scope: !5651, file: !3, line: 966, type: !2660)
!5653 = !DILocation(line: 966, column: 47, scope: !5651)
!5654 = !DILocalVariable(name: "r_mode", arg: 2, scope: !5651, file: !3, line: 966, type: !178)
!5655 = !DILocation(line: 966, column: 55, scope: !5651)
!5656 = !DILocalVariable(name: "amb", arg: 3, scope: !5651, file: !3, line: 966, type: !819)
!5657 = !DILocation(line: 966, column: 70, scope: !5651)
!5658 = !DILocalVariable(name: "mtex", scope: !5651, file: !3, line: 968, type: !3032)
!5659 = !DILocation(line: 968, column: 8, scope: !5651)
!5660 = !DILocalVariable(name: "a", scope: !5651, file: !3, line: 969, type: !178)
!5661 = !DILocation(line: 969, column: 6, scope: !5651)
!5662 = !DILocalVariable(name: "needuv", scope: !5651, file: !3, line: 969, type: !178)
!5663 = !DILocation(line: 969, column: 9, scope: !5651)
!5664 = !DILocalVariable(name: "needtang", scope: !5651, file: !3, line: 969, type: !178)
!5665 = !DILocation(line: 969, column: 21, scope: !5651)
!5666 = !DILocation(line: 971, column: 6, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 971, column: 6)
!5668 = !DILocation(line: 971, column: 10, scope: !5667)
!5669 = !DILocation(line: 971, column: 17, scope: !5667)
!5670 = !DILocation(line: 971, column: 6, scope: !5651)
!5671 = !DILocation(line: 971, column: 23, scope: !5667)
!5672 = !DILocation(line: 971, column: 27, scope: !5667)
!5673 = !DILocation(line: 971, column: 34, scope: !5667)
!5674 = !DILocation(line: 974, column: 9, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 974, column: 2)
!5676 = !DILocation(line: 974, column: 7, scope: !5675)
!5677 = !DILocation(line: 974, column: 14, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 974, column: 2)
!5679 = !DILocation(line: 974, column: 16, scope: !5678)
!5680 = !DILocation(line: 974, column: 2, scope: !5675)
!5681 = !DILocation(line: 977, column: 7, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 977, column: 7)
!5683 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 974, column: 33)
!5684 = !DILocation(line: 977, column: 11, scope: !5682)
!5685 = !DILocation(line: 977, column: 26, scope: !5682)
!5686 = !DILocation(line: 977, column: 23, scope: !5682)
!5687 = !DILocation(line: 977, column: 18, scope: !5682)
!5688 = !DILocation(line: 977, column: 7, scope: !5683)
!5689 = !DILocation(line: 977, column: 30, scope: !5682)
!5690 = !DILocation(line: 979, column: 10, scope: !5683)
!5691 = !DILocation(line: 979, column: 14, scope: !5683)
!5692 = !DILocation(line: 979, column: 19, scope: !5683)
!5693 = !DILocation(line: 979, column: 8, scope: !5683)
!5694 = !DILocation(line: 980, column: 7, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 980, column: 7)
!5696 = !DILocation(line: 980, column: 12, scope: !5695)
!5697 = !DILocation(line: 980, column: 15, scope: !5695)
!5698 = !DILocation(line: 980, column: 21, scope: !5695)
!5699 = !DILocation(line: 980, column: 25, scope: !5695)
!5700 = !DILocation(line: 980, column: 29, scope: !5695)
!5701 = !DILocation(line: 980, column: 35, scope: !5695)
!5702 = !DILocation(line: 980, column: 40, scope: !5695)
!5703 = !DILocation(line: 980, column: 48, scope: !5695)
!5704 = !DILocation(line: 980, column: 54, scope: !5695)
!5705 = !DILocation(line: 980, column: 59, scope: !5695)
!5706 = !DILocation(line: 980, column: 69, scope: !5695)
!5707 = !DILocation(line: 980, column: 72, scope: !5695)
!5708 = !DILocation(line: 980, column: 78, scope: !5695)
!5709 = !DILocation(line: 980, column: 83, scope: !5695)
!5710 = !DILocation(line: 0, scope: !5695)
!5711 = !DILocation(line: 980, column: 45, scope: !5695)
!5712 = !DILocation(line: 980, column: 7, scope: !5683)
!5713 = !DILocation(line: 982, column: 17, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 980, column: 96)
!5715 = !DILocation(line: 982, column: 23, scope: !5714)
!5716 = !DILocation(line: 982, column: 4, scope: !5714)
!5717 = !DILocation(line: 982, column: 8, scope: !5714)
!5718 = !DILocation(line: 982, column: 14, scope: !5714)
!5719 = !DILocation(line: 983, column: 17, scope: !5714)
!5720 = !DILocation(line: 983, column: 23, scope: !5714)
!5721 = !DILocation(line: 983, column: 4, scope: !5714)
!5722 = !DILocation(line: 983, column: 8, scope: !5714)
!5723 = !DILocation(line: 983, column: 14, scope: !5714)
!5724 = !DILocation(line: 986, column: 8, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 986, column: 8)
!5726 = !DILocation(line: 986, column: 8, scope: !5714)
!5727 = !DILocation(line: 986, column: 54, scope: !5725)
!5728 = !DILocation(line: 986, column: 58, scope: !5725)
!5729 = !DILocation(line: 986, column: 64, scope: !5725)
!5730 = !DILocation(line: 987, column: 13, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 987, column: 13)
!5732 = !DILocation(line: 987, column: 19, scope: !5731)
!5733 = !DILocation(line: 987, column: 27, scope: !5731)
!5734 = !DILocation(line: 987, column: 13, scope: !5725)
!5735 = !DILocation(line: 987, column: 103, scope: !5731)
!5736 = !DILocation(line: 987, column: 107, scope: !5731)
!5737 = !DILocation(line: 987, column: 113, scope: !5731)
!5738 = !DILocation(line: 989, column: 8, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 989, column: 8)
!5740 = !DILocation(line: 989, column: 12, scope: !5739)
!5741 = !DILocation(line: 989, column: 18, scope: !5739)
!5742 = !DILocation(line: 989, column: 8, scope: !5714)
!5743 = !DILocation(line: 989, column: 97, scope: !5739)
!5744 = !DILocation(line: 989, column: 90, scope: !5739)
!5745 = !DILocation(line: 990, column: 13, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 990, column: 13)
!5747 = !DILocation(line: 990, column: 17, scope: !5746)
!5748 = !DILocation(line: 990, column: 23, scope: !5746)
!5749 = !DILocation(line: 990, column: 13, scope: !5739)
!5750 = !DILocation(line: 990, column: 86, scope: !5746)
!5751 = !DILocation(line: 990, column: 79, scope: !5746)
!5752 = !DILocation(line: 991, column: 13, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 991, column: 13)
!5754 = !DILocation(line: 991, column: 17, scope: !5753)
!5755 = !DILocation(line: 991, column: 23, scope: !5753)
!5756 = !DILocation(line: 991, column: 13, scope: !5746)
!5757 = !DILocation(line: 991, column: 63, scope: !5753)
!5758 = !DILocation(line: 991, column: 56, scope: !5753)
!5759 = !DILocation(line: 993, column: 9, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 993, column: 8)
!5761 = !DILocation(line: 993, column: 13, scope: !5760)
!5762 = !DILocation(line: 993, column: 19, scope: !5760)
!5763 = !DILocation(line: 993, column: 31, scope: !5760)
!5764 = !DILocation(line: 993, column: 35, scope: !5760)
!5765 = !DILocation(line: 993, column: 41, scope: !5760)
!5766 = !DILocation(line: 993, column: 53, scope: !5760)
!5767 = !DILocation(line: 993, column: 8, scope: !5714)
!5768 = !DILocation(line: 994, column: 14, scope: !5760)
!5769 = !DILocation(line: 994, column: 5, scope: !5760)
!5770 = !DILocation(line: 995, column: 3, scope: !5714)
!5771 = !DILocation(line: 996, column: 2, scope: !5683)
!5772 = !DILocation(line: 974, column: 29, scope: !5678)
!5773 = !DILocation(line: 974, column: 2, scope: !5678)
!5774 = distinct !{!5774, !5680, !5775}
!5775 = !DILocation(line: 996, column: 2, scope: !5675)
!5776 = !DILocation(line: 998, column: 6, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 998, column: 6)
!5778 = !DILocation(line: 998, column: 6, scope: !5651)
!5779 = !DILocation(line: 998, column: 16, scope: !5777)
!5780 = !DILocation(line: 998, column: 20, scope: !5777)
!5781 = !DILocation(line: 998, column: 25, scope: !5777)
!5782 = !DILocation(line: 999, column: 7, scope: !5777)
!5783 = !DILocation(line: 999, column: 11, scope: !5777)
!5784 = !DILocation(line: 999, column: 16, scope: !5777)
!5785 = !DILocation(line: 1001, column: 6, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1001, column: 6)
!5787 = !DILocation(line: 1001, column: 10, scope: !5786)
!5788 = !DILocation(line: 1001, column: 15, scope: !5786)
!5789 = !DILocation(line: 1001, column: 6, scope: !5651)
!5790 = !DILocation(line: 1002, column: 10, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 1001, column: 66)
!5792 = !DILocation(line: 1003, column: 7, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 1003, column: 7)
!5794 = !DILocation(line: 1003, column: 14, scope: !5793)
!5795 = !DILocation(line: 1003, column: 7, scope: !5791)
!5796 = !DILocation(line: 1003, column: 23, scope: !5793)
!5797 = !DILocation(line: 1003, column: 27, scope: !5793)
!5798 = !DILocation(line: 1003, column: 33, scope: !5793)
!5799 = !DILocation(line: 1004, column: 2, scope: !5791)
!5800 = !DILocation(line: 1005, column: 6, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1005, column: 6)
!5802 = !DILocation(line: 1005, column: 6, scope: !5651)
!5803 = !DILocation(line: 1005, column: 14, scope: !5801)
!5804 = !DILocation(line: 1005, column: 18, scope: !5801)
!5805 = !DILocation(line: 1005, column: 24, scope: !5801)
!5806 = !DILocation(line: 1008, column: 6, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1008, column: 6)
!5808 = !DILocation(line: 1008, column: 13, scope: !5807)
!5809 = !DILocation(line: 1008, column: 6, scope: !5651)
!5810 = !DILocation(line: 1009, column: 8, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 1009, column: 7)
!5812 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1008, column: 27)
!5813 = !DILocation(line: 1009, column: 12, scope: !5811)
!5814 = !DILocation(line: 1009, column: 17, scope: !5811)
!5815 = !DILocation(line: 1009, column: 51, scope: !5811)
!5816 = !DILocation(line: 1009, column: 56, scope: !5811)
!5817 = !DILocation(line: 1009, column: 60, scope: !5811)
!5818 = !DILocation(line: 1009, column: 65, scope: !5811)
!5819 = !DILocation(line: 1009, column: 78, scope: !5811)
!5820 = !DILocation(line: 1009, column: 82, scope: !5811)
!5821 = !DILocation(line: 1009, column: 86, scope: !5811)
!5822 = !DILocation(line: 1009, column: 91, scope: !5811)
!5823 = !DILocation(line: 1009, column: 7, scope: !5812)
!5824 = !DILocation(line: 1010, column: 4, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 1009, column: 109)
!5826 = !DILocation(line: 1010, column: 8, scope: !5825)
!5827 = !DILocation(line: 1010, column: 14, scope: !5825)
!5828 = !DILocation(line: 1011, column: 8, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1011, column: 8)
!5830 = !DILocation(line: 1011, column: 15, scope: !5829)
!5831 = !DILocation(line: 1011, column: 8, scope: !5825)
!5832 = !DILocation(line: 1011, column: 24, scope: !5829)
!5833 = !DILocation(line: 1011, column: 28, scope: !5829)
!5834 = !DILocation(line: 1011, column: 34, scope: !5829)
!5835 = !DILocation(line: 1012, column: 3, scope: !5825)
!5836 = !DILocation(line: 1013, column: 2, scope: !5812)
!5837 = !DILocation(line: 1015, column: 6, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1015, column: 6)
!5839 = !DILocation(line: 1015, column: 6, scope: !5651)
!5840 = !DILocation(line: 1016, column: 14, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 1015, column: 11)
!5842 = !DILocation(line: 1016, column: 18, scope: !5841)
!5843 = !DILocation(line: 1016, column: 24, scope: !5841)
!5844 = !DILocation(line: 1016, column: 22, scope: !5841)
!5845 = !DILocation(line: 1016, column: 3, scope: !5841)
!5846 = !DILocation(line: 1016, column: 7, scope: !5841)
!5847 = !DILocation(line: 1016, column: 12, scope: !5841)
!5848 = !DILocation(line: 1017, column: 14, scope: !5841)
!5849 = !DILocation(line: 1017, column: 18, scope: !5841)
!5850 = !DILocation(line: 1017, column: 24, scope: !5841)
!5851 = !DILocation(line: 1017, column: 22, scope: !5841)
!5852 = !DILocation(line: 1017, column: 3, scope: !5841)
!5853 = !DILocation(line: 1017, column: 7, scope: !5841)
!5854 = !DILocation(line: 1017, column: 12, scope: !5841)
!5855 = !DILocation(line: 1018, column: 14, scope: !5841)
!5856 = !DILocation(line: 1018, column: 18, scope: !5841)
!5857 = !DILocation(line: 1018, column: 24, scope: !5841)
!5858 = !DILocation(line: 1018, column: 22, scope: !5841)
!5859 = !DILocation(line: 1018, column: 3, scope: !5841)
!5860 = !DILocation(line: 1018, column: 7, scope: !5841)
!5861 = !DILocation(line: 1018, column: 12, scope: !5841)
!5862 = !DILocation(line: 1019, column: 2, scope: !5841)
!5863 = !DILocation(line: 1022, column: 7, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1022, column: 6)
!5865 = !DILocation(line: 1022, column: 11, scope: !5864)
!5866 = !DILocation(line: 1022, column: 22, scope: !5864)
!5867 = !DILocation(line: 1022, column: 40, scope: !5864)
!5868 = !DILocation(line: 1022, column: 43, scope: !5864)
!5869 = !DILocation(line: 1022, column: 47, scope: !5864)
!5870 = !DILocation(line: 1022, column: 50, scope: !5864)
!5871 = !DILocation(line: 1022, column: 54, scope: !5864)
!5872 = !DILocation(line: 1022, column: 57, scope: !5864)
!5873 = !DILocation(line: 1022, column: 61, scope: !5864)
!5874 = !DILocation(line: 1022, column: 67, scope: !5864)
!5875 = !DILocation(line: 1022, column: 70, scope: !5864)
!5876 = !DILocation(line: 1022, column: 74, scope: !5864)
!5877 = !DILocation(line: 1022, column: 81, scope: !5864)
!5878 = !DILocation(line: 1022, column: 84, scope: !5864)
!5879 = !DILocation(line: 1022, column: 6, scope: !5651)
!5880 = !DILocalVariable(name: "group", scope: !5881, file: !3, line: 1023, type: !5882)
!5881 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 1022, column: 89)
!5882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5883, size: 64)
!5883 = !DIDerivedType(tag: DW_TAG_typedef, name: "Group", file: !671, line: 61, baseType: !670)
!5884 = !DILocation(line: 1023, column: 10, scope: !5881)
!5885 = !DILocation(line: 1025, column: 18, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 1025, column: 3)
!5887 = !DILocation(line: 1025, column: 24, scope: !5886)
!5888 = !DILocation(line: 1025, column: 30, scope: !5886)
!5889 = !DILocation(line: 1025, column: 16, scope: !5886)
!5890 = !DILocation(line: 1025, column: 14, scope: !5886)
!5891 = !DILocation(line: 1025, column: 8, scope: !5886)
!5892 = !DILocation(line: 1025, column: 37, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 1025, column: 3)
!5894 = !DILocation(line: 1025, column: 3, scope: !5886)
!5895 = !DILocation(line: 1026, column: 9, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1026, column: 8)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 1025, column: 68)
!5898 = !DILocation(line: 1026, column: 16, scope: !5896)
!5899 = !DILocation(line: 1026, column: 19, scope: !5896)
!5900 = !DILocation(line: 1026, column: 23, scope: !5896)
!5901 = !DILocation(line: 1026, column: 33, scope: !5896)
!5902 = !DILocation(line: 1026, column: 40, scope: !5896)
!5903 = !DILocation(line: 1026, column: 43, scope: !5896)
!5904 = !DILocation(line: 1026, column: 49, scope: !5896)
!5905 = !DILocation(line: 1026, column: 53, scope: !5896)
!5906 = !DILocation(line: 1026, column: 60, scope: !5896)
!5907 = !DILocation(line: 1026, column: 63, scope: !5896)
!5908 = !DILocation(line: 1026, column: 26, scope: !5896)
!5909 = !DILocation(line: 1026, column: 69, scope: !5896)
!5910 = !DILocation(line: 1026, column: 8, scope: !5897)
!5911 = !DILocation(line: 1027, column: 17, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1026, column: 75)
!5913 = !DILocation(line: 1027, column: 5, scope: !5912)
!5914 = !DILocation(line: 1027, column: 9, scope: !5912)
!5915 = !DILocation(line: 1027, column: 15, scope: !5912)
!5916 = !DILocation(line: 1028, column: 4, scope: !5912)
!5917 = !DILocation(line: 1029, column: 3, scope: !5897)
!5918 = !DILocation(line: 1025, column: 52, scope: !5893)
!5919 = !DILocation(line: 1025, column: 59, scope: !5893)
!5920 = !DILocation(line: 1025, column: 62, scope: !5893)
!5921 = !DILocation(line: 1025, column: 50, scope: !5893)
!5922 = !DILocation(line: 1025, column: 3, scope: !5893)
!5923 = distinct !{!5923, !5894, !5924}
!5924 = !DILocation(line: 1029, column: 3, scope: !5886)
!5925 = !DILocation(line: 1030, column: 2, scope: !5881)
!5926 = !DILocation(line: 1031, column: 1, scope: !5651)
!5927 = distinct !DISubprogram(name: "init_render_nodetree", scope: !3, file: !3, line: 1033, type: !5928, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{null, !2666, !2660, !178, !819}
!5930 = !DILocalVariable(name: "ntree", arg: 1, scope: !5927, file: !3, line: 1033, type: !2666)
!5931 = !DILocation(line: 1033, column: 45, scope: !5927)
!5932 = !DILocalVariable(name: "basemat", arg: 2, scope: !5927, file: !3, line: 1033, type: !2660)
!5933 = !DILocation(line: 1033, column: 62, scope: !5927)
!5934 = !DILocalVariable(name: "r_mode", arg: 3, scope: !5927, file: !3, line: 1033, type: !178)
!5935 = !DILocation(line: 1033, column: 75, scope: !5927)
!5936 = !DILocalVariable(name: "amb", arg: 4, scope: !5927, file: !3, line: 1033, type: !819)
!5937 = !DILocation(line: 1033, column: 90, scope: !5927)
!5938 = !DILocalVariable(name: "node", scope: !5927, file: !3, line: 1035, type: !1033)
!5939 = !DILocation(line: 1035, column: 9, scope: !5927)
!5940 = !DILocation(line: 1037, column: 14, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1037, column: 2)
!5942 = !DILocation(line: 1037, column: 21, scope: !5941)
!5943 = !DILocation(line: 1037, column: 27, scope: !5941)
!5944 = !DILocation(line: 1037, column: 12, scope: !5941)
!5945 = !DILocation(line: 1037, column: 7, scope: !5941)
!5946 = !DILocation(line: 1037, column: 34, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1037, column: 2)
!5948 = !DILocation(line: 1037, column: 2, scope: !5941)
!5949 = !DILocation(line: 1038, column: 7, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1038, column: 7)
!5951 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 1037, column: 59)
!5952 = !DILocation(line: 1038, column: 13, scope: !5950)
!5953 = !DILocation(line: 1038, column: 7, scope: !5951)
!5954 = !DILocation(line: 1039, column: 8, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5956, file: !3, line: 1039, column: 8)
!5956 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 1038, column: 17)
!5957 = !DILocation(line: 1039, column: 27, scope: !5955)
!5958 = !DILocation(line: 1039, column: 8, scope: !5956)
!5959 = !DILocalVariable(name: "ma", scope: !5960, file: !3, line: 1040, type: !2660)
!5960 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 1039, column: 37)
!5961 = !DILocation(line: 1040, column: 15, scope: !5960)
!5962 = !DILocation(line: 1040, column: 32, scope: !5960)
!5963 = !DILocation(line: 1040, column: 38, scope: !5960)
!5964 = !DILocation(line: 1040, column: 20, scope: !5960)
!5965 = !DILocation(line: 1041, column: 9, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 1041, column: 9)
!5967 = !DILocation(line: 1041, column: 15, scope: !5966)
!5968 = !DILocation(line: 1041, column: 12, scope: !5966)
!5969 = !DILocation(line: 1041, column: 9, scope: !5960)
!5970 = !DILocation(line: 1042, column: 30, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5966, file: !3, line: 1041, column: 24)
!5972 = !DILocation(line: 1042, column: 34, scope: !5971)
!5973 = !DILocation(line: 1042, column: 42, scope: !5971)
!5974 = !DILocation(line: 1042, column: 6, scope: !5971)
!5975 = !DILocation(line: 1043, column: 24, scope: !5971)
!5976 = !DILocation(line: 1043, column: 28, scope: !5971)
!5977 = !DILocation(line: 1043, column: 6, scope: !5971)
!5978 = !DILocation(line: 1043, column: 15, scope: !5971)
!5979 = !DILocation(line: 1043, column: 21, scope: !5971)
!5980 = !DILocation(line: 1044, column: 5, scope: !5971)
!5981 = !DILocation(line: 1046, column: 24, scope: !5960)
!5982 = !DILocation(line: 1046, column: 28, scope: !5960)
!5983 = !DILocation(line: 1046, column: 33, scope: !5960)
!5984 = !DILocation(line: 1046, column: 5, scope: !5960)
!5985 = !DILocation(line: 1046, column: 14, scope: !5960)
!5986 = !DILocation(line: 1046, column: 21, scope: !5960)
!5987 = !DILocation(line: 1047, column: 25, scope: !5960)
!5988 = !DILocation(line: 1047, column: 29, scope: !5960)
!5989 = !DILocation(line: 1047, column: 35, scope: !5960)
!5990 = !DILocation(line: 1047, column: 5, scope: !5960)
!5991 = !DILocation(line: 1047, column: 14, scope: !5960)
!5992 = !DILocation(line: 1047, column: 22, scope: !5960)
!5993 = !DILocation(line: 1049, column: 11, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 1049, column: 9)
!5995 = !DILocation(line: 1049, column: 15, scope: !5994)
!5996 = !DILocation(line: 1049, column: 20, scope: !5994)
!5997 = !DILocation(line: 1049, column: 9, scope: !5960)
!5998 = !DILocation(line: 1050, column: 6, scope: !5994)
!5999 = !DILocation(line: 1050, column: 15, scope: !5994)
!6000 = !DILocation(line: 1050, column: 22, scope: !5994)
!6001 = !DILocation(line: 1052, column: 9, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 1052, column: 9)
!6003 = !DILocation(line: 1052, column: 13, scope: !6002)
!6004 = !DILocation(line: 1052, column: 28, scope: !6002)
!6005 = !DILocation(line: 1052, column: 9, scope: !5960)
!6006 = !DILocation(line: 1053, column: 6, scope: !6002)
!6007 = !DILocation(line: 1053, column: 15, scope: !6002)
!6008 = !DILocation(line: 1053, column: 22, scope: !6002)
!6009 = !DILocation(line: 1054, column: 4, scope: !5960)
!6010 = !DILocation(line: 1055, column: 13, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 1055, column: 13)
!6012 = !DILocation(line: 1055, column: 19, scope: !6011)
!6013 = !DILocation(line: 1055, column: 24, scope: !6011)
!6014 = !DILocation(line: 1055, column: 13, scope: !5955)
!6015 = !DILocation(line: 1056, column: 39, scope: !6011)
!6016 = !DILocation(line: 1056, column: 45, scope: !6011)
!6017 = !DILocation(line: 1056, column: 26, scope: !6011)
!6018 = !DILocation(line: 1056, column: 49, scope: !6011)
!6019 = !DILocation(line: 1056, column: 58, scope: !6011)
!6020 = !DILocation(line: 1056, column: 66, scope: !6011)
!6021 = !DILocation(line: 1056, column: 5, scope: !6011)
!6022 = !DILocation(line: 1057, column: 3, scope: !5956)
!6023 = !DILocation(line: 1058, column: 2, scope: !5951)
!6024 = !DILocation(line: 1037, column: 47, scope: !5947)
!6025 = !DILocation(line: 1037, column: 53, scope: !5947)
!6026 = !DILocation(line: 1037, column: 45, scope: !5947)
!6027 = !DILocation(line: 1037, column: 2, scope: !5947)
!6028 = distinct !{!6028, !5948, !6029}
!6029 = !DILocation(line: 1058, column: 2, scope: !5941)
!6030 = !DILocation(line: 1059, column: 1, scope: !5927)
!6031 = distinct !DISubprogram(name: "init_render_materials", scope: !3, file: !3, line: 1090, type: !6032, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{null, !3134, !178, !819}
!6034 = !DILocalVariable(name: "bmain", arg: 1, scope: !6031, file: !3, line: 1090, type: !3134)
!6035 = !DILocation(line: 1090, column: 34, scope: !6031)
!6036 = !DILocalVariable(name: "r_mode", arg: 2, scope: !6031, file: !3, line: 1090, type: !178)
!6037 = !DILocation(line: 1090, column: 45, scope: !6031)
!6038 = !DILocalVariable(name: "amb", arg: 3, scope: !6031, file: !3, line: 1090, type: !819)
!6039 = !DILocation(line: 1090, column: 60, scope: !6031)
!6040 = !DILocalVariable(name: "ma", scope: !6031, file: !3, line: 1092, type: !2660)
!6041 = !DILocation(line: 1092, column: 12, scope: !6031)
!6042 = !DILocation(line: 1097, column: 12, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 1097, column: 2)
!6044 = !DILocation(line: 1097, column: 19, scope: !6043)
!6045 = !DILocation(line: 1097, column: 23, scope: !6043)
!6046 = !DILocation(line: 1097, column: 10, scope: !6043)
!6047 = !DILocation(line: 1097, column: 7, scope: !6043)
!6048 = !DILocation(line: 1097, column: 30, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 1097, column: 2)
!6050 = !DILocation(line: 1097, column: 2, scope: !6043)
!6051 = !DILocation(line: 1098, column: 7, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 1098, column: 7)
!6053 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 1097, column: 52)
!6054 = !DILocation(line: 1098, column: 11, scope: !6052)
!6055 = !DILocation(line: 1098, column: 14, scope: !6052)
!6056 = !DILocation(line: 1098, column: 7, scope: !6053)
!6057 = !DILocation(line: 1099, column: 4, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 1098, column: 18)
!6059 = !DILocation(line: 1099, column: 8, scope: !6058)
!6060 = !DILocation(line: 1099, column: 14, scope: !6058)
!6061 = !DILocation(line: 1100, column: 4, scope: !6058)
!6062 = !DILocation(line: 1100, column: 8, scope: !6058)
!6063 = !DILocation(line: 1100, column: 14, scope: !6058)
!6064 = !DILocation(line: 1101, column: 3, scope: !6058)
!6065 = !DILocation(line: 1102, column: 2, scope: !6053)
!6066 = !DILocation(line: 1097, column: 39, scope: !6049)
!6067 = !DILocation(line: 1097, column: 43, scope: !6049)
!6068 = !DILocation(line: 1097, column: 46, scope: !6049)
!6069 = !DILocation(line: 1097, column: 37, scope: !6049)
!6070 = !DILocation(line: 1097, column: 2, scope: !6049)
!6071 = distinct !{!6071, !6050, !6072}
!6072 = !DILocation(line: 1102, column: 2, scope: !6043)
!6073 = !DILocation(line: 1105, column: 12, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 1105, column: 2)
!6075 = !DILocation(line: 1105, column: 19, scope: !6074)
!6076 = !DILocation(line: 1105, column: 23, scope: !6074)
!6077 = !DILocation(line: 1105, column: 10, scope: !6074)
!6078 = !DILocation(line: 1105, column: 7, scope: !6074)
!6079 = !DILocation(line: 1105, column: 30, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6074, file: !3, line: 1105, column: 2)
!6081 = !DILocation(line: 1105, column: 2, scope: !6074)
!6082 = !DILocation(line: 1107, column: 3, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 1105, column: 52)
!6084 = !DILocation(line: 1107, column: 7, scope: !6083)
!6085 = !DILocation(line: 1107, column: 12, scope: !6083)
!6086 = !DILocation(line: 1108, column: 7, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 1108, column: 7)
!6088 = !DILocation(line: 1108, column: 11, scope: !6087)
!6089 = !DILocation(line: 1108, column: 14, scope: !6087)
!6090 = !DILocation(line: 1108, column: 7, scope: !6083)
!6091 = !DILocation(line: 1109, column: 25, scope: !6087)
!6092 = !DILocation(line: 1109, column: 29, scope: !6087)
!6093 = !DILocation(line: 1109, column: 37, scope: !6087)
!6094 = !DILocation(line: 1109, column: 4, scope: !6087)
!6095 = !DILocation(line: 1110, column: 2, scope: !6083)
!6096 = !DILocation(line: 1105, column: 39, scope: !6080)
!6097 = !DILocation(line: 1105, column: 43, scope: !6080)
!6098 = !DILocation(line: 1105, column: 46, scope: !6080)
!6099 = !DILocation(line: 1105, column: 37, scope: !6080)
!6100 = !DILocation(line: 1105, column: 2, scope: !6080)
!6101 = distinct !{!6101, !6081, !6102}
!6102 = !DILocation(line: 1110, column: 2, scope: !6074)
!6103 = !DILocation(line: 1112, column: 37, scope: !6031)
!6104 = !DILocation(line: 1112, column: 45, scope: !6031)
!6105 = !DILocation(line: 1112, column: 2, scope: !6031)
!6106 = !DILocation(line: 1113, column: 1, scope: !6031)
!6107 = distinct !DISubprogram(name: "end_render_material", scope: !3, file: !3, line: 1116, type: !2684, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6108 = !DILocalVariable(name: "mat", arg: 1, scope: !6107, file: !3, line: 1116, type: !2660)
!6109 = !DILocation(line: 1116, column: 36, scope: !6107)
!6110 = !DILocation(line: 1118, column: 6, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 1118, column: 6)
!6112 = !DILocation(line: 1118, column: 10, scope: !6111)
!6113 = !DILocation(line: 1118, column: 13, scope: !6111)
!6114 = !DILocation(line: 1118, column: 18, scope: !6111)
!6115 = !DILocation(line: 1118, column: 27, scope: !6111)
!6116 = !DILocation(line: 1118, column: 30, scope: !6111)
!6117 = !DILocation(line: 1118, column: 35, scope: !6111)
!6118 = !DILocation(line: 1118, column: 6, scope: !6107)
!6119 = !DILocation(line: 1119, column: 7, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 1119, column: 7)
!6121 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 1118, column: 46)
!6122 = !DILocation(line: 1119, column: 12, scope: !6120)
!6123 = !DILocation(line: 1119, column: 22, scope: !6120)
!6124 = !DILocation(line: 1119, column: 7, scope: !6121)
!6125 = !DILocation(line: 1120, column: 27, scope: !6120)
!6126 = !DILocation(line: 1120, column: 32, scope: !6120)
!6127 = !DILocation(line: 1120, column: 42, scope: !6120)
!6128 = !DILocation(line: 1120, column: 4, scope: !6120)
!6129 = !DILocation(line: 1121, column: 2, scope: !6121)
!6130 = !DILocation(line: 1122, column: 1, scope: !6107)
!6131 = distinct !DISubprogram(name: "end_render_materials", scope: !3, file: !3, line: 1124, type: !6132, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6132 = !DISubroutineType(types: !6133)
!6133 = !{null, !3134}
!6134 = !DILocalVariable(name: "bmain", arg: 1, scope: !6131, file: !3, line: 1124, type: !3134)
!6135 = !DILocation(line: 1124, column: 33, scope: !6131)
!6136 = !DILocalVariable(name: "ma", scope: !6131, file: !3, line: 1126, type: !2660)
!6137 = !DILocation(line: 1126, column: 12, scope: !6131)
!6138 = !DILocation(line: 1127, column: 12, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1127, column: 2)
!6140 = !DILocation(line: 1127, column: 19, scope: !6139)
!6141 = !DILocation(line: 1127, column: 23, scope: !6139)
!6142 = !DILocation(line: 1127, column: 10, scope: !6139)
!6143 = !DILocation(line: 1127, column: 7, scope: !6139)
!6144 = !DILocation(line: 1127, column: 30, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 1127, column: 2)
!6146 = !DILocation(line: 1127, column: 2, scope: !6139)
!6147 = !DILocation(line: 1128, column: 7, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 1128, column: 7)
!6149 = !DILocation(line: 1128, column: 11, scope: !6148)
!6150 = !DILocation(line: 1128, column: 14, scope: !6148)
!6151 = !DILocation(line: 1128, column: 7, scope: !6145)
!6152 = !DILocation(line: 1129, column: 24, scope: !6148)
!6153 = !DILocation(line: 1129, column: 4, scope: !6148)
!6154 = !DILocation(line: 1127, column: 39, scope: !6145)
!6155 = !DILocation(line: 1127, column: 43, scope: !6145)
!6156 = !DILocation(line: 1127, column: 46, scope: !6145)
!6157 = !DILocation(line: 1127, column: 37, scope: !6145)
!6158 = !DILocation(line: 1127, column: 2, scope: !6145)
!6159 = distinct !{!6159, !6146, !6160}
!6160 = !DILocation(line: 1129, column: 26, scope: !6139)
!6161 = !DILocation(line: 1130, column: 1, scope: !6131)
!6162 = distinct !DISubprogram(name: "material_in_material", scope: !3, file: !3, line: 1154, type: !6163, scopeLine: 1155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6163 = !DISubroutineType(types: !6164)
!6164 = !{!1171, !2660, !2660}
!6165 = !DILocalVariable(name: "parmat", arg: 1, scope: !6162, file: !3, line: 1154, type: !2660)
!6166 = !DILocation(line: 1154, column: 37, scope: !6162)
!6167 = !DILocalVariable(name: "mat", arg: 2, scope: !6162, file: !3, line: 1154, type: !2660)
!6168 = !DILocation(line: 1154, column: 55, scope: !6162)
!6169 = !DILocation(line: 1156, column: 6, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 1156, column: 6)
!6171 = !DILocation(line: 1156, column: 16, scope: !6170)
!6172 = !DILocation(line: 1156, column: 13, scope: !6170)
!6173 = !DILocation(line: 1156, column: 6, scope: !6162)
!6174 = !DILocation(line: 1157, column: 3, scope: !6170)
!6175 = !DILocation(line: 1158, column: 11, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1158, column: 11)
!6177 = !DILocation(line: 1158, column: 19, scope: !6176)
!6178 = !DILocation(line: 1158, column: 28, scope: !6176)
!6179 = !DILocation(line: 1158, column: 31, scope: !6176)
!6180 = !DILocation(line: 1158, column: 39, scope: !6176)
!6181 = !DILocation(line: 1158, column: 11, scope: !6170)
!6182 = !DILocation(line: 1159, column: 31, scope: !6176)
!6183 = !DILocation(line: 1159, column: 39, scope: !6176)
!6184 = !DILocation(line: 1159, column: 49, scope: !6176)
!6185 = !DILocation(line: 1159, column: 10, scope: !6176)
!6186 = !DILocation(line: 1159, column: 3, scope: !6176)
!6187 = !DILocation(line: 1161, column: 3, scope: !6176)
!6188 = !DILocation(line: 1162, column: 1, scope: !6162)
!6189 = distinct !DISubprogram(name: "material_in_nodetree", scope: !3, file: !3, line: 1132, type: !6190, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6190 = !DISubroutineType(types: !6191)
!6191 = !{!1171, !2666, !2660}
!6192 = !DILocalVariable(name: "ntree", arg: 1, scope: !6189, file: !3, line: 1132, type: !2666)
!6193 = !DILocation(line: 1132, column: 45, scope: !6189)
!6194 = !DILocalVariable(name: "mat", arg: 2, scope: !6189, file: !3, line: 1132, type: !2660)
!6195 = !DILocation(line: 1132, column: 62, scope: !6189)
!6196 = !DILocalVariable(name: "node", scope: !6189, file: !3, line: 1134, type: !1033)
!6197 = !DILocation(line: 1134, column: 9, scope: !6189)
!6198 = !DILocation(line: 1136, column: 14, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 1136, column: 2)
!6200 = !DILocation(line: 1136, column: 21, scope: !6199)
!6201 = !DILocation(line: 1136, column: 27, scope: !6199)
!6202 = !DILocation(line: 1136, column: 12, scope: !6199)
!6203 = !DILocation(line: 1136, column: 7, scope: !6199)
!6204 = !DILocation(line: 1136, column: 34, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 1136, column: 2)
!6206 = !DILocation(line: 1136, column: 2, scope: !6199)
!6207 = !DILocation(line: 1137, column: 7, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 1137, column: 7)
!6209 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1136, column: 59)
!6210 = !DILocation(line: 1137, column: 13, scope: !6208)
!6211 = !DILocation(line: 1137, column: 7, scope: !6209)
!6212 = !DILocation(line: 1138, column: 8, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 1138, column: 8)
!6214 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 1137, column: 17)
!6215 = !DILocation(line: 1138, column: 27, scope: !6213)
!6216 = !DILocation(line: 1138, column: 8, scope: !6214)
!6217 = !DILocation(line: 1139, column: 9, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 1139, column: 9)
!6219 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 1138, column: 37)
!6220 = !DILocation(line: 1139, column: 15, scope: !6218)
!6221 = !DILocation(line: 1139, column: 27, scope: !6218)
!6222 = !DILocation(line: 1139, column: 21, scope: !6218)
!6223 = !DILocation(line: 1139, column: 18, scope: !6218)
!6224 = !DILocation(line: 1139, column: 9, scope: !6219)
!6225 = !DILocation(line: 1140, column: 6, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1139, column: 32)
!6227 = !DILocation(line: 1142, column: 4, scope: !6219)
!6228 = !DILocation(line: 1143, column: 13, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 1143, column: 13)
!6230 = !DILocation(line: 1143, column: 19, scope: !6229)
!6231 = !DILocation(line: 1143, column: 24, scope: !6229)
!6232 = !DILocation(line: 1143, column: 13, scope: !6213)
!6233 = !DILocation(line: 1144, column: 43, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 1144, column: 9)
!6235 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 1143, column: 39)
!6236 = !DILocation(line: 1144, column: 49, scope: !6234)
!6237 = !DILocation(line: 1144, column: 30, scope: !6234)
!6238 = !DILocation(line: 1144, column: 53, scope: !6234)
!6239 = !DILocation(line: 1144, column: 9, scope: !6234)
!6240 = !DILocation(line: 1144, column: 9, scope: !6235)
!6241 = !DILocation(line: 1145, column: 6, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 1144, column: 59)
!6243 = !DILocation(line: 1147, column: 4, scope: !6235)
!6244 = !DILocation(line: 1148, column: 3, scope: !6214)
!6245 = !DILocation(line: 1149, column: 2, scope: !6209)
!6246 = !DILocation(line: 1136, column: 47, scope: !6205)
!6247 = !DILocation(line: 1136, column: 53, scope: !6205)
!6248 = !DILocation(line: 1136, column: 45, scope: !6205)
!6249 = !DILocation(line: 1136, column: 2, scope: !6205)
!6250 = distinct !{!6250, !6206, !6251}
!6251 = !DILocation(line: 1149, column: 2, scope: !6199)
!6252 = !DILocation(line: 1151, column: 2, scope: !6189)
!6253 = !DILocation(line: 1152, column: 1, scope: !6189)
!6254 = distinct !DISubprogram(name: "material_drivers_update", scope: !3, file: !3, line: 1195, type: !6255, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6255 = !DISubroutineType(types: !6256)
!6256 = !{null, !6257, !2660, !267}
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 64)
!6258 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !69, line: 1299, baseType: !741)
!6259 = !DILocalVariable(name: "scene", arg: 1, scope: !6254, file: !3, line: 1195, type: !6257)
!6260 = !DILocation(line: 1195, column: 37, scope: !6254)
!6261 = !DILocalVariable(name: "ma", arg: 2, scope: !6254, file: !3, line: 1195, type: !2660)
!6262 = !DILocation(line: 1195, column: 54, scope: !6254)
!6263 = !DILocalVariable(name: "ctime", arg: 3, scope: !6254, file: !3, line: 1195, type: !267)
!6264 = !DILocation(line: 1195, column: 64, scope: !6254)
!6265 = !DILocation(line: 1204, column: 6, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 1204, column: 6)
!6267 = !DILocation(line: 1204, column: 10, scope: !6266)
!6268 = !DILocation(line: 1204, column: 13, scope: !6266)
!6269 = !DILocation(line: 1204, column: 18, scope: !6266)
!6270 = !DILocation(line: 1204, column: 6, scope: !6254)
!6271 = !DILocation(line: 1205, column: 3, scope: !6266)
!6272 = !DILocation(line: 1207, column: 2, scope: !6254)
!6273 = !DILocation(line: 1207, column: 6, scope: !6254)
!6274 = !DILocation(line: 1207, column: 9, scope: !6254)
!6275 = !DILocation(line: 1207, column: 14, scope: !6254)
!6276 = !DILocation(line: 1210, column: 6, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 1210, column: 6)
!6278 = !DILocation(line: 1210, column: 10, scope: !6277)
!6279 = !DILocation(line: 1210, column: 14, scope: !6277)
!6280 = !DILocation(line: 1210, column: 17, scope: !6277)
!6281 = !DILocation(line: 1210, column: 21, scope: !6277)
!6282 = !DILocation(line: 1210, column: 26, scope: !6277)
!6283 = !DILocation(line: 1210, column: 34, scope: !6277)
!6284 = !DILocation(line: 1210, column: 6, scope: !6254)
!6285 = !DILocation(line: 1211, column: 33, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1210, column: 41)
!6287 = !DILocation(line: 1211, column: 41, scope: !6286)
!6288 = !DILocation(line: 1211, column: 45, scope: !6286)
!6289 = !DILocation(line: 1211, column: 49, scope: !6286)
!6290 = !DILocation(line: 1211, column: 53, scope: !6286)
!6291 = !DILocation(line: 1211, column: 58, scope: !6286)
!6292 = !DILocation(line: 1211, column: 3, scope: !6286)
!6293 = !DILocation(line: 1212, column: 2, scope: !6286)
!6294 = !DILocation(line: 1215, column: 6, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 1215, column: 6)
!6296 = !DILocation(line: 1215, column: 10, scope: !6295)
!6297 = !DILocation(line: 1215, column: 6, scope: !6254)
!6298 = !DILocation(line: 1216, column: 32, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 1215, column: 20)
!6300 = !DILocation(line: 1216, column: 39, scope: !6299)
!6301 = !DILocation(line: 1216, column: 43, scope: !6299)
!6302 = !DILocation(line: 1216, column: 53, scope: !6299)
!6303 = !DILocation(line: 1216, column: 3, scope: !6299)
!6304 = !DILocation(line: 1217, column: 2, scope: !6299)
!6305 = !DILocation(line: 1219, column: 2, scope: !6254)
!6306 = !DILocation(line: 1219, column: 6, scope: !6254)
!6307 = !DILocation(line: 1219, column: 9, scope: !6254)
!6308 = !DILocation(line: 1219, column: 14, scope: !6254)
!6309 = !DILocation(line: 1220, column: 1, scope: !6254)
!6310 = distinct !DISubprogram(name: "material_node_drivers_update", scope: !3, file: !3, line: 1168, type: !6311, scopeLine: 1169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{null, !6257, !2666, !267}
!6313 = !DILocalVariable(name: "scene", arg: 1, scope: !6310, file: !3, line: 1168, type: !6257)
!6314 = !DILocation(line: 1168, column: 49, scope: !6310)
!6315 = !DILocalVariable(name: "ntree", arg: 2, scope: !6310, file: !3, line: 1168, type: !2666)
!6316 = !DILocation(line: 1168, column: 67, scope: !6310)
!6317 = !DILocalVariable(name: "ctime", arg: 3, scope: !6310, file: !3, line: 1168, type: !267)
!6318 = !DILocation(line: 1168, column: 80, scope: !6310)
!6319 = !DILocalVariable(name: "node", scope: !6310, file: !3, line: 1170, type: !1033)
!6320 = !DILocation(line: 1170, column: 9, scope: !6310)
!6321 = !DILocation(line: 1173, column: 6, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 1173, column: 6)
!6323 = !DILocation(line: 1173, column: 13, scope: !6322)
!6324 = !DILocation(line: 1173, column: 17, scope: !6322)
!6325 = !DILocation(line: 1173, column: 20, scope: !6322)
!6326 = !DILocation(line: 1173, column: 27, scope: !6322)
!6327 = !DILocation(line: 1173, column: 32, scope: !6322)
!6328 = !DILocation(line: 1173, column: 40, scope: !6322)
!6329 = !DILocation(line: 1173, column: 6, scope: !6310)
!6330 = !DILocation(line: 1174, column: 33, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 1173, column: 47)
!6332 = !DILocation(line: 1174, column: 41, scope: !6331)
!6333 = !DILocation(line: 1174, column: 48, scope: !6331)
!6334 = !DILocation(line: 1174, column: 52, scope: !6331)
!6335 = !DILocation(line: 1174, column: 59, scope: !6331)
!6336 = !DILocation(line: 1174, column: 64, scope: !6331)
!6337 = !DILocation(line: 1174, column: 3, scope: !6331)
!6338 = !DILocation(line: 1175, column: 2, scope: !6331)
!6339 = !DILocation(line: 1178, column: 14, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 1178, column: 2)
!6341 = !DILocation(line: 1178, column: 21, scope: !6340)
!6342 = !DILocation(line: 1178, column: 27, scope: !6340)
!6343 = !DILocation(line: 1178, column: 12, scope: !6340)
!6344 = !DILocation(line: 1178, column: 7, scope: !6340)
!6345 = !DILocation(line: 1178, column: 34, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1178, column: 2)
!6347 = !DILocation(line: 1178, column: 2, scope: !6340)
!6348 = !DILocation(line: 1179, column: 7, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 1179, column: 7)
!6350 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 1178, column: 59)
!6351 = !DILocation(line: 1179, column: 13, scope: !6349)
!6352 = !DILocation(line: 1179, column: 7, scope: !6350)
!6353 = !DILocation(line: 1180, column: 8, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1180, column: 8)
!6355 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 1179, column: 17)
!6356 = !DILocation(line: 1180, column: 27, scope: !6354)
!6357 = !DILocation(line: 1180, column: 8, scope: !6355)
!6358 = !DILocation(line: 1181, column: 29, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 1180, column: 37)
!6360 = !DILocation(line: 1181, column: 48, scope: !6359)
!6361 = !DILocation(line: 1181, column: 54, scope: !6359)
!6362 = !DILocation(line: 1181, column: 36, scope: !6359)
!6363 = !DILocation(line: 1181, column: 58, scope: !6359)
!6364 = !DILocation(line: 1181, column: 5, scope: !6359)
!6365 = !DILocation(line: 1182, column: 4, scope: !6359)
!6366 = !DILocation(line: 1183, column: 13, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 1183, column: 13)
!6368 = !DILocation(line: 1183, column: 19, scope: !6367)
!6369 = !DILocation(line: 1183, column: 24, scope: !6367)
!6370 = !DILocation(line: 1183, column: 13, scope: !6354)
!6371 = !DILocation(line: 1184, column: 34, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 1183, column: 39)
!6373 = !DILocation(line: 1184, column: 54, scope: !6372)
!6374 = !DILocation(line: 1184, column: 60, scope: !6372)
!6375 = !DILocation(line: 1184, column: 41, scope: !6372)
!6376 = !DILocation(line: 1184, column: 64, scope: !6372)
!6377 = !DILocation(line: 1184, column: 5, scope: !6372)
!6378 = !DILocation(line: 1185, column: 4, scope: !6372)
!6379 = !DILocation(line: 1186, column: 3, scope: !6355)
!6380 = !DILocation(line: 1187, column: 2, scope: !6350)
!6381 = !DILocation(line: 1178, column: 47, scope: !6346)
!6382 = !DILocation(line: 1178, column: 53, scope: !6346)
!6383 = !DILocation(line: 1178, column: 45, scope: !6346)
!6384 = !DILocation(line: 1178, column: 2, scope: !6346)
!6385 = distinct !{!6385, !6347, !6386}
!6386 = !DILocation(line: 1187, column: 2, scope: !6340)
!6387 = !DILocation(line: 1188, column: 1, scope: !6310)
!6388 = distinct !DISubprogram(name: "BKE_texpaint_slot_refresh_cache", scope: !3, file: !3, line: 1316, type: !6389, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6389 = !DISubroutineType(types: !6390)
!6390 = !{null, !6257, !2660}
!6391 = !DILocalVariable(name: "scene", arg: 1, scope: !6388, file: !3, line: 1316, type: !6257)
!6392 = !DILocation(line: 1316, column: 45, scope: !6388)
!6393 = !DILocalVariable(name: "ma", arg: 2, scope: !6388, file: !3, line: 1316, type: !2660)
!6394 = !DILocation(line: 1316, column: 62, scope: !6388)
!6395 = !DILocalVariable(name: "mtex", scope: !6388, file: !3, line: 1318, type: !6396)
!6396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!6397 = !DILocation(line: 1318, column: 9, scope: !6388)
!6398 = !DILocalVariable(name: "count", scope: !6388, file: !3, line: 1319, type: !176)
!6399 = !DILocation(line: 1319, column: 8, scope: !6388)
!6400 = !DILocalVariable(name: "index", scope: !6388, file: !3, line: 1320, type: !176)
!6401 = !DILocation(line: 1320, column: 8, scope: !6388)
!6402 = !DILocalVariable(name: "i", scope: !6388, file: !3, line: 1320, type: !176)
!6403 = !DILocation(line: 1320, column: 19, scope: !6388)
!6404 = !DILocalVariable(name: "use_nodes", scope: !6388, file: !3, line: 1322, type: !1171)
!6405 = !DILocation(line: 1322, column: 7, scope: !6388)
!6406 = !DILocation(line: 1322, column: 51, scope: !6388)
!6407 = !DILocation(line: 1322, column: 19, scope: !6388)
!6408 = !DILocalVariable(name: "is_bi", scope: !6388, file: !3, line: 1323, type: !1171)
!6409 = !DILocation(line: 1323, column: 7, scope: !6388)
!6410 = !DILocation(line: 1323, column: 47, scope: !6388)
!6411 = !DILocation(line: 1323, column: 15, scope: !6388)
!6412 = !DILocation(line: 1323, column: 54, scope: !6388)
!6413 = !DILocation(line: 1323, column: 85, scope: !6388)
!6414 = !DILocation(line: 1323, column: 57, scope: !6388)
!6415 = !DILocation(line: 1325, column: 7, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1325, column: 6)
!6417 = !DILocation(line: 1325, column: 6, scope: !6388)
!6418 = !DILocation(line: 1326, column: 3, scope: !6416)
!6419 = !DILocation(line: 1328, column: 6, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1328, column: 6)
!6421 = !DILocation(line: 1328, column: 10, scope: !6420)
!6422 = !DILocation(line: 1328, column: 6, scope: !6388)
!6423 = !DILocation(line: 1329, column: 3, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 1328, column: 24)
!6425 = !DILocation(line: 1329, column: 13, scope: !6424)
!6426 = !DILocation(line: 1329, column: 17, scope: !6424)
!6427 = !DILocation(line: 1330, column: 3, scope: !6424)
!6428 = !DILocation(line: 1330, column: 7, scope: !6424)
!6429 = !DILocation(line: 1330, column: 17, scope: !6424)
!6430 = !DILocation(line: 1331, column: 3, scope: !6424)
!6431 = !DILocation(line: 1331, column: 7, scope: !6424)
!6432 = !DILocation(line: 1331, column: 20, scope: !6424)
!6433 = !DILocation(line: 1332, column: 2, scope: !6424)
!6434 = !DILocation(line: 1334, column: 6, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1334, column: 6)
!6436 = !DILocation(line: 1334, column: 13, scope: !6435)
!6437 = !DILocation(line: 1334, column: 27, scope: !6435)
!6438 = !DILocation(line: 1334, column: 36, scope: !6435)
!6439 = !DILocation(line: 1334, column: 41, scope: !6435)
!6440 = !DILocation(line: 1334, column: 6, scope: !6388)
!6441 = !DILocation(line: 1335, column: 3, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 1334, column: 67)
!6443 = !DILocation(line: 1335, column: 7, scope: !6442)
!6444 = !DILocation(line: 1335, column: 25, scope: !6442)
!6445 = !DILocation(line: 1336, column: 3, scope: !6442)
!6446 = !DILocation(line: 1336, column: 7, scope: !6442)
!6447 = !DILocation(line: 1336, column: 24, scope: !6442)
!6448 = !DILocation(line: 1337, column: 3, scope: !6442)
!6449 = !DILocation(line: 1340, column: 6, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1340, column: 6)
!6451 = !DILocation(line: 1340, column: 16, scope: !6450)
!6452 = !DILocation(line: 1340, column: 19, scope: !6450)
!6453 = !DILocation(line: 1340, column: 23, scope: !6450)
!6454 = !DILocation(line: 1340, column: 6, scope: !6388)
!6455 = !DILocalVariable(name: "node", scope: !6456, file: !3, line: 1341, type: !1033)
!6456 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1340, column: 34)
!6457 = !DILocation(line: 1341, column: 10, scope: !6456)
!6458 = !DILocalVariable(name: "active_node", scope: !6456, file: !3, line: 1341, type: !1033)
!6459 = !DILocation(line: 1341, column: 17, scope: !6456)
!6460 = !DILocation(line: 1343, column: 9, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 1343, column: 7)
!6462 = !DILocation(line: 1343, column: 13, scope: !6461)
!6463 = !DILocation(line: 1343, column: 8, scope: !6461)
!6464 = !DILocation(line: 1343, column: 7, scope: !6456)
!6465 = !DILocation(line: 1344, column: 4, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 1343, column: 24)
!6467 = !DILocation(line: 1344, column: 8, scope: !6466)
!6468 = !DILocation(line: 1344, column: 26, scope: !6466)
!6469 = !DILocation(line: 1345, column: 4, scope: !6466)
!6470 = !DILocation(line: 1345, column: 8, scope: !6466)
!6471 = !DILocation(line: 1345, column: 25, scope: !6466)
!6472 = !DILocation(line: 1346, column: 4, scope: !6466)
!6473 = !DILocation(line: 1349, column: 15, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 1349, column: 3)
!6475 = !DILocation(line: 1349, column: 19, scope: !6474)
!6476 = !DILocation(line: 1349, column: 29, scope: !6474)
!6477 = !DILocation(line: 1349, column: 35, scope: !6474)
!6478 = !DILocation(line: 1349, column: 13, scope: !6474)
!6479 = !DILocation(line: 1349, column: 8, scope: !6474)
!6480 = !DILocation(line: 1349, column: 42, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 1349, column: 3)
!6482 = !DILocation(line: 1349, column: 3, scope: !6474)
!6483 = !DILocation(line: 1350, column: 8, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1350, column: 8)
!6485 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 1349, column: 67)
!6486 = !DILocation(line: 1350, column: 14, scope: !6484)
!6487 = !DILocation(line: 1350, column: 24, scope: !6484)
!6488 = !DILocation(line: 1350, column: 31, scope: !6484)
!6489 = !DILocation(line: 1350, column: 53, scope: !6484)
!6490 = !DILocation(line: 1350, column: 56, scope: !6484)
!6491 = !DILocation(line: 1350, column: 62, scope: !6484)
!6492 = !DILocation(line: 1350, column: 72, scope: !6484)
!6493 = !DILocation(line: 1350, column: 77, scope: !6484)
!6494 = !DILocation(line: 1350, column: 98, scope: !6484)
!6495 = !DILocation(line: 1350, column: 101, scope: !6484)
!6496 = !DILocation(line: 1350, column: 107, scope: !6484)
!6497 = !DILocation(line: 1350, column: 8, scope: !6485)
!6498 = !DILocation(line: 1351, column: 10, scope: !6484)
!6499 = !DILocation(line: 1351, column: 5, scope: !6484)
!6500 = !DILocation(line: 1352, column: 3, scope: !6485)
!6501 = !DILocation(line: 1349, column: 55, scope: !6481)
!6502 = !DILocation(line: 1349, column: 61, scope: !6481)
!6503 = !DILocation(line: 1349, column: 53, scope: !6481)
!6504 = !DILocation(line: 1349, column: 3, scope: !6481)
!6505 = distinct !{!6505, !6482, !6506}
!6506 = !DILocation(line: 1352, column: 3, scope: !6474)
!6507 = !DILocation(line: 1354, column: 7, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 1354, column: 7)
!6509 = !DILocation(line: 1354, column: 13, scope: !6508)
!6510 = !DILocation(line: 1354, column: 7, scope: !6456)
!6511 = !DILocation(line: 1355, column: 4, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1354, column: 19)
!6513 = !DILocation(line: 1355, column: 8, scope: !6512)
!6514 = !DILocation(line: 1355, column: 26, scope: !6512)
!6515 = !DILocation(line: 1356, column: 4, scope: !6512)
!6516 = !DILocation(line: 1356, column: 8, scope: !6512)
!6517 = !DILocation(line: 1356, column: 25, scope: !6512)
!6518 = !DILocation(line: 1357, column: 4, scope: !6512)
!6519 = !DILocation(line: 1359, column: 22, scope: !6456)
!6520 = !DILocation(line: 1359, column: 62, scope: !6456)
!6521 = !DILocation(line: 1359, column: 60, scope: !6456)
!6522 = !DILocation(line: 1359, column: 3, scope: !6456)
!6523 = !DILocation(line: 1359, column: 7, scope: !6456)
!6524 = !DILocation(line: 1359, column: 20, scope: !6456)
!6525 = !DILocation(line: 1361, column: 38, scope: !6456)
!6526 = !DILocation(line: 1361, column: 42, scope: !6456)
!6527 = !DILocation(line: 1361, column: 17, scope: !6456)
!6528 = !DILocation(line: 1361, column: 15, scope: !6456)
!6529 = !DILocation(line: 1363, column: 15, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 1363, column: 3)
!6531 = !DILocation(line: 1363, column: 19, scope: !6530)
!6532 = !DILocation(line: 1363, column: 29, scope: !6530)
!6533 = !DILocation(line: 1363, column: 35, scope: !6530)
!6534 = !DILocation(line: 1363, column: 13, scope: !6530)
!6535 = !DILocation(line: 1363, column: 8, scope: !6530)
!6536 = !DILocation(line: 1363, column: 42, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1363, column: 3)
!6538 = !DILocation(line: 1363, column: 3, scope: !6530)
!6539 = !DILocation(line: 1364, column: 8, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1364, column: 8)
!6541 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 1363, column: 67)
!6542 = !DILocation(line: 1364, column: 14, scope: !6540)
!6543 = !DILocation(line: 1364, column: 24, scope: !6540)
!6544 = !DILocation(line: 1364, column: 31, scope: !6540)
!6545 = !DILocation(line: 1364, column: 53, scope: !6540)
!6546 = !DILocation(line: 1364, column: 56, scope: !6540)
!6547 = !DILocation(line: 1364, column: 62, scope: !6540)
!6548 = !DILocation(line: 1364, column: 72, scope: !6540)
!6549 = !DILocation(line: 1364, column: 77, scope: !6540)
!6550 = !DILocation(line: 1364, column: 98, scope: !6540)
!6551 = !DILocation(line: 1364, column: 101, scope: !6540)
!6552 = !DILocation(line: 1364, column: 107, scope: !6540)
!6553 = !DILocation(line: 1364, column: 8, scope: !6541)
!6554 = !DILocation(line: 1365, column: 9, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 1365, column: 9)
!6556 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 1364, column: 111)
!6557 = !DILocation(line: 1365, column: 24, scope: !6555)
!6558 = !DILocation(line: 1365, column: 21, scope: !6555)
!6559 = !DILocation(line: 1365, column: 9, scope: !6556)
!6560 = !DILocation(line: 1366, column: 30, scope: !6555)
!6561 = !DILocation(line: 1366, column: 6, scope: !6555)
!6562 = !DILocation(line: 1366, column: 10, scope: !6555)
!6563 = !DILocation(line: 1366, column: 28, scope: !6555)
!6564 = !DILocation(line: 1367, column: 46, scope: !6556)
!6565 = !DILocation(line: 1367, column: 52, scope: !6556)
!6566 = !DILocation(line: 1367, column: 37, scope: !6556)
!6567 = !DILocation(line: 1367, column: 5, scope: !6556)
!6568 = !DILocation(line: 1367, column: 9, scope: !6556)
!6569 = !DILocation(line: 1367, column: 27, scope: !6556)
!6570 = !DILocation(line: 1367, column: 31, scope: !6556)
!6571 = !DILocation(line: 1367, column: 35, scope: !6556)
!6572 = !DILocation(line: 1368, column: 4, scope: !6556)
!6573 = !DILocation(line: 1369, column: 3, scope: !6541)
!6574 = !DILocation(line: 1363, column: 55, scope: !6537)
!6575 = !DILocation(line: 1363, column: 61, scope: !6537)
!6576 = !DILocation(line: 1363, column: 53, scope: !6537)
!6577 = !DILocation(line: 1363, column: 3, scope: !6537)
!6578 = distinct !{!6578, !6538, !6579}
!6579 = !DILocation(line: 1369, column: 3, scope: !6530)
!6580 = !DILocation(line: 1370, column: 2, scope: !6456)
!6581 = !DILocation(line: 1371, column: 11, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1371, column: 11)
!6583 = !DILocation(line: 1371, column: 11, scope: !6450)
!6584 = !DILocation(line: 1372, column: 15, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 1372, column: 3)
!6586 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 1371, column: 18)
!6587 = !DILocation(line: 1372, column: 19, scope: !6585)
!6588 = !DILocation(line: 1372, column: 13, scope: !6585)
!6589 = !DILocation(line: 1372, column: 27, scope: !6585)
!6590 = !DILocation(line: 1372, column: 8, scope: !6585)
!6591 = !DILocation(line: 1372, column: 32, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 1372, column: 3)
!6593 = !DILocation(line: 1372, column: 34, scope: !6592)
!6594 = !DILocation(line: 1372, column: 3, scope: !6585)
!6595 = !DILocation(line: 1373, column: 38, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 1373, column: 8)
!6597 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 1372, column: 59)
!6598 = !DILocation(line: 1373, column: 37, scope: !6596)
!6599 = !DILocation(line: 1373, column: 8, scope: !6596)
!6600 = !DILocation(line: 1373, column: 8, scope: !6597)
!6601 = !DILocation(line: 1374, column: 10, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1373, column: 45)
!6603 = !DILocation(line: 1375, column: 4, scope: !6602)
!6604 = !DILocation(line: 1376, column: 3, scope: !6597)
!6605 = !DILocation(line: 1372, column: 47, scope: !6592)
!6606 = !DILocation(line: 1372, column: 55, scope: !6592)
!6607 = !DILocation(line: 1372, column: 3, scope: !6592)
!6608 = distinct !{!6608, !6594, !6609}
!6609 = !DILocation(line: 1376, column: 3, scope: !6585)
!6610 = !DILocation(line: 1378, column: 7, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 1378, column: 7)
!6612 = !DILocation(line: 1378, column: 13, scope: !6611)
!6613 = !DILocation(line: 1378, column: 7, scope: !6586)
!6614 = !DILocation(line: 1379, column: 4, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 1378, column: 19)
!6616 = !DILocation(line: 1379, column: 8, scope: !6615)
!6617 = !DILocation(line: 1379, column: 26, scope: !6615)
!6618 = !DILocation(line: 1380, column: 4, scope: !6615)
!6619 = !DILocation(line: 1380, column: 8, scope: !6615)
!6620 = !DILocation(line: 1380, column: 25, scope: !6615)
!6621 = !DILocation(line: 1381, column: 4, scope: !6615)
!6622 = !DILocation(line: 1384, column: 22, scope: !6586)
!6623 = !DILocation(line: 1384, column: 62, scope: !6586)
!6624 = !DILocation(line: 1384, column: 60, scope: !6586)
!6625 = !DILocation(line: 1384, column: 3, scope: !6586)
!6626 = !DILocation(line: 1384, column: 7, scope: !6586)
!6627 = !DILocation(line: 1384, column: 20, scope: !6586)
!6628 = !DILocation(line: 1386, column: 15, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 1386, column: 3)
!6630 = !DILocation(line: 1386, column: 19, scope: !6629)
!6631 = !DILocation(line: 1386, column: 13, scope: !6629)
!6632 = !DILocation(line: 1386, column: 27, scope: !6629)
!6633 = !DILocation(line: 1386, column: 8, scope: !6629)
!6634 = !DILocation(line: 1386, column: 32, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1386, column: 3)
!6636 = !DILocation(line: 1386, column: 34, scope: !6635)
!6637 = !DILocation(line: 1386, column: 3, scope: !6629)
!6638 = !DILocation(line: 1387, column: 38, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 1387, column: 8)
!6640 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 1386, column: 59)
!6641 = !DILocation(line: 1387, column: 37, scope: !6639)
!6642 = !DILocation(line: 1387, column: 8, scope: !6639)
!6643 = !DILocation(line: 1387, column: 8, scope: !6640)
!6644 = !DILocation(line: 1388, column: 37, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 1387, column: 45)
!6646 = !DILocation(line: 1388, column: 36, scope: !6645)
!6647 = !DILocation(line: 1388, column: 44, scope: !6645)
!6648 = !DILocation(line: 1388, column: 49, scope: !6645)
!6649 = !DILocation(line: 1388, column: 5, scope: !6645)
!6650 = !DILocation(line: 1388, column: 9, scope: !6645)
!6651 = !DILocation(line: 1388, column: 22, scope: !6645)
!6652 = !DILocation(line: 1388, column: 29, scope: !6645)
!6653 = !DILocation(line: 1388, column: 33, scope: !6645)
!6654 = !DILocation(line: 1389, column: 40, scope: !6645)
!6655 = !DILocation(line: 1389, column: 39, scope: !6645)
!6656 = !DILocation(line: 1389, column: 47, scope: !6645)
!6657 = !DILocation(line: 1389, column: 38, scope: !6645)
!6658 = !DILocation(line: 1389, column: 5, scope: !6645)
!6659 = !DILocation(line: 1389, column: 9, scope: !6645)
!6660 = !DILocation(line: 1389, column: 22, scope: !6645)
!6661 = !DILocation(line: 1389, column: 29, scope: !6645)
!6662 = !DILocation(line: 1389, column: 36, scope: !6645)
!6663 = !DILocation(line: 1390, column: 37, scope: !6645)
!6664 = !DILocation(line: 1390, column: 5, scope: !6645)
!6665 = !DILocation(line: 1390, column: 9, scope: !6645)
!6666 = !DILocation(line: 1390, column: 22, scope: !6645)
!6667 = !DILocation(line: 1390, column: 29, scope: !6645)
!6668 = !DILocation(line: 1390, column: 35, scope: !6645)
!6669 = !DILocation(line: 1392, column: 10, scope: !6645)
!6670 = !DILocation(line: 1393, column: 4, scope: !6645)
!6671 = !DILocation(line: 1394, column: 3, scope: !6640)
!6672 = !DILocation(line: 1386, column: 47, scope: !6635)
!6673 = !DILocation(line: 1386, column: 55, scope: !6635)
!6674 = !DILocation(line: 1386, column: 3, scope: !6635)
!6675 = distinct !{!6675, !6637, !6676}
!6676 = !DILocation(line: 1394, column: 3, scope: !6629)
!6677 = !DILocation(line: 1395, column: 2, scope: !6586)
!6678 = !DILocation(line: 1397, column: 3, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 1396, column: 7)
!6680 = !DILocation(line: 1397, column: 7, scope: !6679)
!6681 = !DILocation(line: 1397, column: 25, scope: !6679)
!6682 = !DILocation(line: 1398, column: 3, scope: !6679)
!6683 = !DILocation(line: 1398, column: 7, scope: !6679)
!6684 = !DILocation(line: 1398, column: 24, scope: !6679)
!6685 = !DILocation(line: 1399, column: 3, scope: !6679)
!6686 = !DILocation(line: 1403, column: 18, scope: !6388)
!6687 = !DILocation(line: 1403, column: 2, scope: !6388)
!6688 = !DILocation(line: 1403, column: 6, scope: !6388)
!6689 = !DILocation(line: 1403, column: 16, scope: !6388)
!6690 = !DILocation(line: 1406, column: 6, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1406, column: 6)
!6692 = !DILocation(line: 1406, column: 10, scope: !6691)
!6693 = !DILocation(line: 1406, column: 31, scope: !6691)
!6694 = !DILocation(line: 1406, column: 28, scope: !6691)
!6695 = !DILocation(line: 1406, column: 6, scope: !6388)
!6696 = !DILocation(line: 1407, column: 27, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 1406, column: 38)
!6698 = !DILocation(line: 1407, column: 33, scope: !6697)
!6699 = !DILocation(line: 1407, column: 3, scope: !6697)
!6700 = !DILocation(line: 1407, column: 7, scope: !6697)
!6701 = !DILocation(line: 1407, column: 25, scope: !6697)
!6702 = !DILocation(line: 1408, column: 2, scope: !6697)
!6703 = !DILocation(line: 1410, column: 6, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1410, column: 6)
!6705 = !DILocation(line: 1410, column: 10, scope: !6704)
!6706 = !DILocation(line: 1410, column: 30, scope: !6704)
!6707 = !DILocation(line: 1410, column: 27, scope: !6704)
!6708 = !DILocation(line: 1410, column: 6, scope: !6388)
!6709 = !DILocation(line: 1411, column: 26, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 1410, column: 37)
!6711 = !DILocation(line: 1411, column: 32, scope: !6710)
!6712 = !DILocation(line: 1411, column: 3, scope: !6710)
!6713 = !DILocation(line: 1411, column: 7, scope: !6710)
!6714 = !DILocation(line: 1411, column: 24, scope: !6710)
!6715 = !DILocation(line: 1412, column: 2, scope: !6710)
!6716 = !DILocation(line: 1414, column: 2, scope: !6388)
!6717 = !DILocation(line: 1415, column: 1, scope: !6388)
!6718 = distinct !DISubprogram(name: "get_mtex_slot_valid_texpaint", scope: !3, file: !3, line: 1309, type: !6719, scopeLine: 1310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6719 = !DISubroutineType(types: !6720)
!6720 = !{!1171, !476}
!6721 = !DILocalVariable(name: "mtex", arg: 1, scope: !6718, file: !3, line: 1309, type: !476)
!6722 = !DILocation(line: 1309, column: 55, scope: !6718)
!6723 = !DILocation(line: 1311, column: 10, scope: !6718)
!6724 = !DILocation(line: 1311, column: 15, scope: !6718)
!6725 = !DILocation(line: 1311, column: 19, scope: !6718)
!6726 = !DILocation(line: 1311, column: 25, scope: !6718)
!6727 = !DILocation(line: 1311, column: 31, scope: !6718)
!6728 = !DILocation(line: 1311, column: 44, scope: !6718)
!6729 = !DILocation(line: 1312, column: 10, scope: !6718)
!6730 = !DILocation(line: 1312, column: 16, scope: !6718)
!6731 = !DILocation(line: 1312, column: 20, scope: !6718)
!6732 = !DILocation(line: 1312, column: 24, scope: !6718)
!6733 = !DILocation(line: 1312, column: 30, scope: !6718)
!6734 = !DILocation(line: 1312, column: 35, scope: !6718)
!6735 = !DILocation(line: 1312, column: 40, scope: !6718)
!6736 = !DILocation(line: 1312, column: 54, scope: !6718)
!6737 = !DILocation(line: 1313, column: 10, scope: !6718)
!6738 = !DILocation(line: 1313, column: 16, scope: !6718)
!6739 = !DILocation(line: 1313, column: 21, scope: !6718)
!6740 = !DILocation(line: 0, scope: !6718)
!6741 = !DILocation(line: 1311, column: 9, scope: !6718)
!6742 = !DILocation(line: 1311, column: 2, scope: !6718)
!6743 = distinct !DISubprogram(name: "BKE_texpaint_slots_refresh_object", scope: !3, file: !3, line: 1417, type: !6744, scopeLine: 1418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6744 = !DISubroutineType(types: !6745)
!6745 = !{null, !6257, !484}
!6746 = !DILocalVariable(name: "scene", arg: 1, scope: !6743, file: !3, line: 1417, type: !6257)
!6747 = !DILocation(line: 1417, column: 47, scope: !6743)
!6748 = !DILocalVariable(name: "ob", arg: 2, scope: !6743, file: !3, line: 1417, type: !484)
!6749 = !DILocation(line: 1417, column: 69, scope: !6743)
!6750 = !DILocalVariable(name: "i", scope: !6743, file: !3, line: 1419, type: !178)
!6751 = !DILocation(line: 1419, column: 6, scope: !6743)
!6752 = !DILocation(line: 1421, column: 9, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1421, column: 2)
!6754 = !DILocation(line: 1421, column: 7, scope: !6753)
!6755 = !DILocation(line: 1421, column: 14, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1421, column: 2)
!6757 = !DILocation(line: 1421, column: 18, scope: !6756)
!6758 = !DILocation(line: 1421, column: 22, scope: !6756)
!6759 = !DILocation(line: 1421, column: 29, scope: !6756)
!6760 = !DILocation(line: 1421, column: 16, scope: !6756)
!6761 = !DILocation(line: 1421, column: 2, scope: !6753)
!6762 = !DILocalVariable(name: "ma", scope: !6763, file: !3, line: 1422, type: !2660)
!6763 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1421, column: 39)
!6764 = !DILocation(line: 1422, column: 13, scope: !6763)
!6765 = !DILocation(line: 1422, column: 40, scope: !6763)
!6766 = !DILocation(line: 1422, column: 44, scope: !6763)
!6767 = !DILocation(line: 1422, column: 18, scope: !6763)
!6768 = !DILocation(line: 1423, column: 35, scope: !6763)
!6769 = !DILocation(line: 1423, column: 42, scope: !6763)
!6770 = !DILocation(line: 1423, column: 3, scope: !6763)
!6771 = !DILocation(line: 1424, column: 2, scope: !6763)
!6772 = !DILocation(line: 1421, column: 35, scope: !6756)
!6773 = !DILocation(line: 1421, column: 2, scope: !6756)
!6774 = distinct !{!6774, !6761, !6775}
!6775 = !DILocation(line: 1424, column: 2, scope: !6753)
!6776 = !DILocation(line: 1425, column: 1, scope: !6743)
!6777 = distinct !DISubprogram(name: "ramp_blend", scope: !3, file: !3, line: 1429, type: !6778, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!6778 = !DISubroutineType(types: !6779)
!6779 = !{null, !178, !819, !6780, !6781}
!6780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!6781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6780, size: 64)
!6782 = !DILocalVariable(name: "type", arg: 1, scope: !6777, file: !3, line: 1429, type: !178)
!6783 = !DILocation(line: 1429, column: 21, scope: !6777)
!6784 = !DILocalVariable(name: "r_col", arg: 2, scope: !6777, file: !3, line: 1429, type: !819)
!6785 = !DILocation(line: 1429, column: 33, scope: !6777)
!6786 = !DILocalVariable(name: "fac", arg: 3, scope: !6777, file: !3, line: 1429, type: !6780)
!6787 = !DILocation(line: 1429, column: 55, scope: !6777)
!6788 = !DILocalVariable(name: "col", arg: 4, scope: !6777, file: !3, line: 1429, type: !6781)
!6789 = !DILocation(line: 1429, column: 72, scope: !6777)
!6790 = !DILocalVariable(name: "tmp", scope: !6777, file: !3, line: 1431, type: !267)
!6791 = !DILocation(line: 1431, column: 8, scope: !6777)
!6792 = !DILocalVariable(name: "facm", scope: !6777, file: !3, line: 1431, type: !267)
!6793 = !DILocation(line: 1431, column: 13, scope: !6777)
!6794 = !DILocation(line: 1431, column: 27, scope: !6777)
!6795 = !DILocation(line: 1431, column: 25, scope: !6777)
!6796 = !DILocation(line: 1433, column: 10, scope: !6777)
!6797 = !DILocation(line: 1433, column: 2, scope: !6777)
!6798 = !DILocation(line: 1435, column: 15, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 1433, column: 16)
!6800 = !DILocation(line: 1435, column: 23, scope: !6799)
!6801 = !DILocation(line: 1435, column: 20, scope: !6799)
!6802 = !DILocation(line: 1435, column: 35, scope: !6799)
!6803 = !DILocation(line: 1435, column: 41, scope: !6799)
!6804 = !DILocation(line: 1435, column: 39, scope: !6799)
!6805 = !DILocation(line: 1435, column: 33, scope: !6799)
!6806 = !DILocation(line: 1435, column: 4, scope: !6799)
!6807 = !DILocation(line: 1435, column: 13, scope: !6799)
!6808 = !DILocation(line: 1436, column: 15, scope: !6799)
!6809 = !DILocation(line: 1436, column: 23, scope: !6799)
!6810 = !DILocation(line: 1436, column: 20, scope: !6799)
!6811 = !DILocation(line: 1436, column: 35, scope: !6799)
!6812 = !DILocation(line: 1436, column: 41, scope: !6799)
!6813 = !DILocation(line: 1436, column: 39, scope: !6799)
!6814 = !DILocation(line: 1436, column: 33, scope: !6799)
!6815 = !DILocation(line: 1436, column: 4, scope: !6799)
!6816 = !DILocation(line: 1436, column: 13, scope: !6799)
!6817 = !DILocation(line: 1437, column: 15, scope: !6799)
!6818 = !DILocation(line: 1437, column: 23, scope: !6799)
!6819 = !DILocation(line: 1437, column: 20, scope: !6799)
!6820 = !DILocation(line: 1437, column: 35, scope: !6799)
!6821 = !DILocation(line: 1437, column: 41, scope: !6799)
!6822 = !DILocation(line: 1437, column: 39, scope: !6799)
!6823 = !DILocation(line: 1437, column: 33, scope: !6799)
!6824 = !DILocation(line: 1437, column: 4, scope: !6799)
!6825 = !DILocation(line: 1437, column: 13, scope: !6799)
!6826 = !DILocation(line: 1438, column: 4, scope: !6799)
!6827 = !DILocation(line: 1440, column: 16, scope: !6799)
!6828 = !DILocation(line: 1440, column: 22, scope: !6799)
!6829 = !DILocation(line: 1440, column: 20, scope: !6799)
!6830 = !DILocation(line: 1440, column: 4, scope: !6799)
!6831 = !DILocation(line: 1440, column: 13, scope: !6799)
!6832 = !DILocation(line: 1441, column: 16, scope: !6799)
!6833 = !DILocation(line: 1441, column: 22, scope: !6799)
!6834 = !DILocation(line: 1441, column: 20, scope: !6799)
!6835 = !DILocation(line: 1441, column: 4, scope: !6799)
!6836 = !DILocation(line: 1441, column: 13, scope: !6799)
!6837 = !DILocation(line: 1442, column: 16, scope: !6799)
!6838 = !DILocation(line: 1442, column: 22, scope: !6799)
!6839 = !DILocation(line: 1442, column: 20, scope: !6799)
!6840 = !DILocation(line: 1442, column: 4, scope: !6799)
!6841 = !DILocation(line: 1442, column: 13, scope: !6799)
!6842 = !DILocation(line: 1443, column: 4, scope: !6799)
!6843 = !DILocation(line: 1445, column: 17, scope: !6799)
!6844 = !DILocation(line: 1445, column: 24, scope: !6799)
!6845 = !DILocation(line: 1445, column: 30, scope: !6799)
!6846 = !DILocation(line: 1445, column: 28, scope: !6799)
!6847 = !DILocation(line: 1445, column: 22, scope: !6799)
!6848 = !DILocation(line: 1445, column: 4, scope: !6799)
!6849 = !DILocation(line: 1445, column: 13, scope: !6799)
!6850 = !DILocation(line: 1446, column: 17, scope: !6799)
!6851 = !DILocation(line: 1446, column: 24, scope: !6799)
!6852 = !DILocation(line: 1446, column: 30, scope: !6799)
!6853 = !DILocation(line: 1446, column: 28, scope: !6799)
!6854 = !DILocation(line: 1446, column: 22, scope: !6799)
!6855 = !DILocation(line: 1446, column: 4, scope: !6799)
!6856 = !DILocation(line: 1446, column: 13, scope: !6799)
!6857 = !DILocation(line: 1447, column: 17, scope: !6799)
!6858 = !DILocation(line: 1447, column: 24, scope: !6799)
!6859 = !DILocation(line: 1447, column: 30, scope: !6799)
!6860 = !DILocation(line: 1447, column: 28, scope: !6799)
!6861 = !DILocation(line: 1447, column: 22, scope: !6799)
!6862 = !DILocation(line: 1447, column: 4, scope: !6799)
!6863 = !DILocation(line: 1447, column: 13, scope: !6799)
!6864 = !DILocation(line: 1448, column: 4, scope: !6799)
!6865 = !DILocation(line: 1450, column: 23, scope: !6799)
!6866 = !DILocation(line: 1450, column: 30, scope: !6799)
!6867 = !DILocation(line: 1450, column: 44, scope: !6799)
!6868 = !DILocation(line: 1450, column: 42, scope: !6799)
!6869 = !DILocation(line: 1450, column: 34, scope: !6799)
!6870 = !DILocation(line: 1450, column: 28, scope: !6799)
!6871 = !DILocation(line: 1450, column: 63, scope: !6799)
!6872 = !DILocation(line: 1450, column: 61, scope: !6799)
!6873 = !DILocation(line: 1450, column: 53, scope: !6799)
!6874 = !DILocation(line: 1450, column: 20, scope: !6799)
!6875 = !DILocation(line: 1450, column: 4, scope: !6799)
!6876 = !DILocation(line: 1450, column: 13, scope: !6799)
!6877 = !DILocation(line: 1451, column: 23, scope: !6799)
!6878 = !DILocation(line: 1451, column: 30, scope: !6799)
!6879 = !DILocation(line: 1451, column: 44, scope: !6799)
!6880 = !DILocation(line: 1451, column: 42, scope: !6799)
!6881 = !DILocation(line: 1451, column: 34, scope: !6799)
!6882 = !DILocation(line: 1451, column: 28, scope: !6799)
!6883 = !DILocation(line: 1451, column: 63, scope: !6799)
!6884 = !DILocation(line: 1451, column: 61, scope: !6799)
!6885 = !DILocation(line: 1451, column: 53, scope: !6799)
!6886 = !DILocation(line: 1451, column: 20, scope: !6799)
!6887 = !DILocation(line: 1451, column: 4, scope: !6799)
!6888 = !DILocation(line: 1451, column: 13, scope: !6799)
!6889 = !DILocation(line: 1452, column: 23, scope: !6799)
!6890 = !DILocation(line: 1452, column: 30, scope: !6799)
!6891 = !DILocation(line: 1452, column: 44, scope: !6799)
!6892 = !DILocation(line: 1452, column: 42, scope: !6799)
!6893 = !DILocation(line: 1452, column: 34, scope: !6799)
!6894 = !DILocation(line: 1452, column: 28, scope: !6799)
!6895 = !DILocation(line: 1452, column: 63, scope: !6799)
!6896 = !DILocation(line: 1452, column: 61, scope: !6799)
!6897 = !DILocation(line: 1452, column: 53, scope: !6799)
!6898 = !DILocation(line: 1452, column: 20, scope: !6799)
!6899 = !DILocation(line: 1452, column: 4, scope: !6799)
!6900 = !DILocation(line: 1452, column: 13, scope: !6799)
!6901 = !DILocation(line: 1453, column: 4, scope: !6799)
!6902 = !DILocation(line: 1455, column: 8, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1455, column: 8)
!6904 = !DILocation(line: 1455, column: 17, scope: !6903)
!6905 = !DILocation(line: 1455, column: 8, scope: !6799)
!6906 = !DILocation(line: 1456, column: 18, scope: !6903)
!6907 = !DILocation(line: 1456, column: 32, scope: !6903)
!6908 = !DILocation(line: 1456, column: 30, scope: !6903)
!6909 = !DILocation(line: 1456, column: 38, scope: !6903)
!6910 = !DILocation(line: 1456, column: 36, scope: !6903)
!6911 = !DILocation(line: 1456, column: 23, scope: !6903)
!6912 = !DILocation(line: 1456, column: 5, scope: !6903)
!6913 = !DILocation(line: 1456, column: 14, scope: !6903)
!6914 = !DILocation(line: 1458, column: 24, scope: !6903)
!6915 = !DILocation(line: 1458, column: 38, scope: !6903)
!6916 = !DILocation(line: 1458, column: 36, scope: !6903)
!6917 = !DILocation(line: 1458, column: 52, scope: !6903)
!6918 = !DILocation(line: 1458, column: 50, scope: !6903)
!6919 = !DILocation(line: 1458, column: 42, scope: !6903)
!6920 = !DILocation(line: 1458, column: 29, scope: !6903)
!6921 = !DILocation(line: 1458, column: 71, scope: !6903)
!6922 = !DILocation(line: 1458, column: 69, scope: !6903)
!6923 = !DILocation(line: 1458, column: 61, scope: !6903)
!6924 = !DILocation(line: 1458, column: 21, scope: !6903)
!6925 = !DILocation(line: 1458, column: 5, scope: !6903)
!6926 = !DILocation(line: 1458, column: 14, scope: !6903)
!6927 = !DILocation(line: 1459, column: 8, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1459, column: 8)
!6929 = !DILocation(line: 1459, column: 17, scope: !6928)
!6930 = !DILocation(line: 1459, column: 8, scope: !6799)
!6931 = !DILocation(line: 1460, column: 18, scope: !6928)
!6932 = !DILocation(line: 1460, column: 32, scope: !6928)
!6933 = !DILocation(line: 1460, column: 30, scope: !6928)
!6934 = !DILocation(line: 1460, column: 38, scope: !6928)
!6935 = !DILocation(line: 1460, column: 36, scope: !6928)
!6936 = !DILocation(line: 1460, column: 23, scope: !6928)
!6937 = !DILocation(line: 1460, column: 5, scope: !6928)
!6938 = !DILocation(line: 1460, column: 14, scope: !6928)
!6939 = !DILocation(line: 1462, column: 24, scope: !6928)
!6940 = !DILocation(line: 1462, column: 38, scope: !6928)
!6941 = !DILocation(line: 1462, column: 36, scope: !6928)
!6942 = !DILocation(line: 1462, column: 52, scope: !6928)
!6943 = !DILocation(line: 1462, column: 50, scope: !6928)
!6944 = !DILocation(line: 1462, column: 42, scope: !6928)
!6945 = !DILocation(line: 1462, column: 29, scope: !6928)
!6946 = !DILocation(line: 1462, column: 71, scope: !6928)
!6947 = !DILocation(line: 1462, column: 69, scope: !6928)
!6948 = !DILocation(line: 1462, column: 61, scope: !6928)
!6949 = !DILocation(line: 1462, column: 21, scope: !6928)
!6950 = !DILocation(line: 1462, column: 5, scope: !6928)
!6951 = !DILocation(line: 1462, column: 14, scope: !6928)
!6952 = !DILocation(line: 1463, column: 8, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1463, column: 8)
!6954 = !DILocation(line: 1463, column: 17, scope: !6953)
!6955 = !DILocation(line: 1463, column: 8, scope: !6799)
!6956 = !DILocation(line: 1464, column: 18, scope: !6953)
!6957 = !DILocation(line: 1464, column: 32, scope: !6953)
!6958 = !DILocation(line: 1464, column: 30, scope: !6953)
!6959 = !DILocation(line: 1464, column: 38, scope: !6953)
!6960 = !DILocation(line: 1464, column: 36, scope: !6953)
!6961 = !DILocation(line: 1464, column: 23, scope: !6953)
!6962 = !DILocation(line: 1464, column: 5, scope: !6953)
!6963 = !DILocation(line: 1464, column: 14, scope: !6953)
!6964 = !DILocation(line: 1466, column: 24, scope: !6953)
!6965 = !DILocation(line: 1466, column: 38, scope: !6953)
!6966 = !DILocation(line: 1466, column: 36, scope: !6953)
!6967 = !DILocation(line: 1466, column: 52, scope: !6953)
!6968 = !DILocation(line: 1466, column: 50, scope: !6953)
!6969 = !DILocation(line: 1466, column: 42, scope: !6953)
!6970 = !DILocation(line: 1466, column: 29, scope: !6953)
!6971 = !DILocation(line: 1466, column: 71, scope: !6953)
!6972 = !DILocation(line: 1466, column: 69, scope: !6953)
!6973 = !DILocation(line: 1466, column: 61, scope: !6953)
!6974 = !DILocation(line: 1466, column: 21, scope: !6953)
!6975 = !DILocation(line: 1466, column: 5, scope: !6953)
!6976 = !DILocation(line: 1466, column: 14, scope: !6953)
!6977 = !DILocation(line: 1467, column: 4, scope: !6799)
!6978 = !DILocation(line: 1469, column: 16, scope: !6799)
!6979 = !DILocation(line: 1469, column: 22, scope: !6799)
!6980 = !DILocation(line: 1469, column: 20, scope: !6799)
!6981 = !DILocation(line: 1469, column: 4, scope: !6799)
!6982 = !DILocation(line: 1469, column: 13, scope: !6799)
!6983 = !DILocation(line: 1470, column: 16, scope: !6799)
!6984 = !DILocation(line: 1470, column: 22, scope: !6799)
!6985 = !DILocation(line: 1470, column: 20, scope: !6799)
!6986 = !DILocation(line: 1470, column: 4, scope: !6799)
!6987 = !DILocation(line: 1470, column: 13, scope: !6799)
!6988 = !DILocation(line: 1471, column: 16, scope: !6799)
!6989 = !DILocation(line: 1471, column: 22, scope: !6799)
!6990 = !DILocation(line: 1471, column: 20, scope: !6799)
!6991 = !DILocation(line: 1471, column: 4, scope: !6799)
!6992 = !DILocation(line: 1471, column: 13, scope: !6799)
!6993 = !DILocation(line: 1472, column: 4, scope: !6799)
!6994 = !DILocation(line: 1474, column: 8, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1474, column: 8)
!6996 = !DILocation(line: 1474, column: 15, scope: !6995)
!6997 = !DILocation(line: 1474, column: 8, scope: !6799)
!6998 = !DILocation(line: 1475, column: 16, scope: !6995)
!6999 = !DILocation(line: 1475, column: 24, scope: !6995)
!7000 = !DILocation(line: 1475, column: 21, scope: !6995)
!7001 = !DILocation(line: 1475, column: 36, scope: !6995)
!7002 = !DILocation(line: 1475, column: 43, scope: !6995)
!7003 = !DILocation(line: 1475, column: 40, scope: !6995)
!7004 = !DILocation(line: 1475, column: 55, scope: !6995)
!7005 = !DILocation(line: 1475, column: 53, scope: !6995)
!7006 = !DILocation(line: 1475, column: 34, scope: !6995)
!7007 = !DILocation(line: 1475, column: 5, scope: !6995)
!7008 = !DILocation(line: 1475, column: 14, scope: !6995)
!7009 = !DILocation(line: 1476, column: 8, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1476, column: 8)
!7011 = !DILocation(line: 1476, column: 15, scope: !7010)
!7012 = !DILocation(line: 1476, column: 8, scope: !6799)
!7013 = !DILocation(line: 1477, column: 16, scope: !7010)
!7014 = !DILocation(line: 1477, column: 24, scope: !7010)
!7015 = !DILocation(line: 1477, column: 21, scope: !7010)
!7016 = !DILocation(line: 1477, column: 36, scope: !7010)
!7017 = !DILocation(line: 1477, column: 43, scope: !7010)
!7018 = !DILocation(line: 1477, column: 40, scope: !7010)
!7019 = !DILocation(line: 1477, column: 55, scope: !7010)
!7020 = !DILocation(line: 1477, column: 53, scope: !7010)
!7021 = !DILocation(line: 1477, column: 34, scope: !7010)
!7022 = !DILocation(line: 1477, column: 5, scope: !7010)
!7023 = !DILocation(line: 1477, column: 14, scope: !7010)
!7024 = !DILocation(line: 1478, column: 8, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1478, column: 8)
!7026 = !DILocation(line: 1478, column: 15, scope: !7025)
!7027 = !DILocation(line: 1478, column: 8, scope: !6799)
!7028 = !DILocation(line: 1479, column: 16, scope: !7025)
!7029 = !DILocation(line: 1479, column: 24, scope: !7025)
!7030 = !DILocation(line: 1479, column: 21, scope: !7025)
!7031 = !DILocation(line: 1479, column: 36, scope: !7025)
!7032 = !DILocation(line: 1479, column: 43, scope: !7025)
!7033 = !DILocation(line: 1479, column: 40, scope: !7025)
!7034 = !DILocation(line: 1479, column: 55, scope: !7025)
!7035 = !DILocation(line: 1479, column: 53, scope: !7025)
!7036 = !DILocation(line: 1479, column: 34, scope: !7025)
!7037 = !DILocation(line: 1479, column: 5, scope: !7025)
!7038 = !DILocation(line: 1479, column: 14, scope: !7025)
!7039 = !DILocation(line: 1480, column: 4, scope: !6799)
!7040 = !DILocation(line: 1482, column: 15, scope: !6799)
!7041 = !DILocation(line: 1482, column: 23, scope: !6799)
!7042 = !DILocation(line: 1482, column: 20, scope: !6799)
!7043 = !DILocation(line: 1482, column: 35, scope: !6799)
!7044 = !DILocation(line: 1482, column: 47, scope: !6799)
!7045 = !DILocation(line: 1482, column: 58, scope: !6799)
!7046 = !DILocation(line: 1482, column: 56, scope: !6799)
!7047 = !DILocation(line: 1482, column: 41, scope: !6799)
!7048 = !DILocation(line: 1482, column: 39, scope: !6799)
!7049 = !DILocation(line: 1482, column: 33, scope: !6799)
!7050 = !DILocation(line: 1482, column: 4, scope: !6799)
!7051 = !DILocation(line: 1482, column: 13, scope: !6799)
!7052 = !DILocation(line: 1483, column: 15, scope: !6799)
!7053 = !DILocation(line: 1483, column: 23, scope: !6799)
!7054 = !DILocation(line: 1483, column: 20, scope: !6799)
!7055 = !DILocation(line: 1483, column: 35, scope: !6799)
!7056 = !DILocation(line: 1483, column: 47, scope: !6799)
!7057 = !DILocation(line: 1483, column: 58, scope: !6799)
!7058 = !DILocation(line: 1483, column: 56, scope: !6799)
!7059 = !DILocation(line: 1483, column: 41, scope: !6799)
!7060 = !DILocation(line: 1483, column: 39, scope: !6799)
!7061 = !DILocation(line: 1483, column: 33, scope: !6799)
!7062 = !DILocation(line: 1483, column: 4, scope: !6799)
!7063 = !DILocation(line: 1483, column: 13, scope: !6799)
!7064 = !DILocation(line: 1484, column: 15, scope: !6799)
!7065 = !DILocation(line: 1484, column: 23, scope: !6799)
!7066 = !DILocation(line: 1484, column: 20, scope: !6799)
!7067 = !DILocation(line: 1484, column: 35, scope: !6799)
!7068 = !DILocation(line: 1484, column: 47, scope: !6799)
!7069 = !DILocation(line: 1484, column: 58, scope: !6799)
!7070 = !DILocation(line: 1484, column: 56, scope: !6799)
!7071 = !DILocation(line: 1484, column: 41, scope: !6799)
!7072 = !DILocation(line: 1484, column: 39, scope: !6799)
!7073 = !DILocation(line: 1484, column: 33, scope: !6799)
!7074 = !DILocation(line: 1484, column: 4, scope: !6799)
!7075 = !DILocation(line: 1484, column: 13, scope: !6799)
!7076 = !DILocation(line: 1485, column: 4, scope: !6799)
!7077 = !DILocation(line: 1487, column: 22, scope: !6799)
!7078 = !DILocation(line: 1487, column: 32, scope: !6799)
!7079 = !DILocation(line: 1487, column: 15, scope: !6799)
!7080 = !DILocation(line: 1487, column: 42, scope: !6799)
!7081 = !DILocation(line: 1487, column: 40, scope: !6799)
!7082 = !DILocation(line: 1487, column: 48, scope: !6799)
!7083 = !DILocation(line: 1487, column: 59, scope: !6799)
!7084 = !DILocation(line: 1487, column: 57, scope: !6799)
!7085 = !DILocation(line: 1487, column: 46, scope: !6799)
!7086 = !DILocation(line: 1487, column: 4, scope: !6799)
!7087 = !DILocation(line: 1487, column: 13, scope: !6799)
!7088 = !DILocation(line: 1488, column: 22, scope: !6799)
!7089 = !DILocation(line: 1488, column: 32, scope: !6799)
!7090 = !DILocation(line: 1488, column: 15, scope: !6799)
!7091 = !DILocation(line: 1488, column: 42, scope: !6799)
!7092 = !DILocation(line: 1488, column: 40, scope: !6799)
!7093 = !DILocation(line: 1488, column: 48, scope: !6799)
!7094 = !DILocation(line: 1488, column: 59, scope: !6799)
!7095 = !DILocation(line: 1488, column: 57, scope: !6799)
!7096 = !DILocation(line: 1488, column: 46, scope: !6799)
!7097 = !DILocation(line: 1488, column: 4, scope: !6799)
!7098 = !DILocation(line: 1488, column: 13, scope: !6799)
!7099 = !DILocation(line: 1489, column: 22, scope: !6799)
!7100 = !DILocation(line: 1489, column: 32, scope: !6799)
!7101 = !DILocation(line: 1489, column: 15, scope: !6799)
!7102 = !DILocation(line: 1489, column: 42, scope: !6799)
!7103 = !DILocation(line: 1489, column: 40, scope: !6799)
!7104 = !DILocation(line: 1489, column: 48, scope: !6799)
!7105 = !DILocation(line: 1489, column: 59, scope: !6799)
!7106 = !DILocation(line: 1489, column: 57, scope: !6799)
!7107 = !DILocation(line: 1489, column: 46, scope: !6799)
!7108 = !DILocation(line: 1489, column: 4, scope: !6799)
!7109 = !DILocation(line: 1489, column: 13, scope: !6799)
!7110 = !DILocation(line: 1490, column: 4, scope: !6799)
!7111 = !DILocation(line: 1492, column: 10, scope: !6799)
!7112 = !DILocation(line: 1492, column: 16, scope: !6799)
!7113 = !DILocation(line: 1492, column: 14, scope: !6799)
!7114 = !DILocation(line: 1492, column: 8, scope: !6799)
!7115 = !DILocation(line: 1493, column: 8, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1493, column: 8)
!7117 = !DILocation(line: 1493, column: 14, scope: !7116)
!7118 = !DILocation(line: 1493, column: 12, scope: !7116)
!7119 = !DILocation(line: 1493, column: 8, scope: !6799)
!7120 = !DILocation(line: 1493, column: 35, scope: !7116)
!7121 = !DILocation(line: 1493, column: 24, scope: !7116)
!7122 = !DILocation(line: 1493, column: 33, scope: !7116)
!7123 = !DILocation(line: 1494, column: 10, scope: !6799)
!7124 = !DILocation(line: 1494, column: 16, scope: !6799)
!7125 = !DILocation(line: 1494, column: 14, scope: !6799)
!7126 = !DILocation(line: 1494, column: 8, scope: !6799)
!7127 = !DILocation(line: 1495, column: 8, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1495, column: 8)
!7129 = !DILocation(line: 1495, column: 14, scope: !7128)
!7130 = !DILocation(line: 1495, column: 12, scope: !7128)
!7131 = !DILocation(line: 1495, column: 8, scope: !6799)
!7132 = !DILocation(line: 1495, column: 35, scope: !7128)
!7133 = !DILocation(line: 1495, column: 24, scope: !7128)
!7134 = !DILocation(line: 1495, column: 33, scope: !7128)
!7135 = !DILocation(line: 1496, column: 10, scope: !6799)
!7136 = !DILocation(line: 1496, column: 16, scope: !6799)
!7137 = !DILocation(line: 1496, column: 14, scope: !6799)
!7138 = !DILocation(line: 1496, column: 8, scope: !6799)
!7139 = !DILocation(line: 1497, column: 8, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1497, column: 8)
!7141 = !DILocation(line: 1497, column: 14, scope: !7140)
!7142 = !DILocation(line: 1497, column: 12, scope: !7140)
!7143 = !DILocation(line: 1497, column: 8, scope: !6799)
!7144 = !DILocation(line: 1497, column: 35, scope: !7140)
!7145 = !DILocation(line: 1497, column: 24, scope: !7140)
!7146 = !DILocation(line: 1497, column: 33, scope: !7140)
!7147 = !DILocation(line: 1498, column: 4, scope: !6799)
!7148 = !DILocation(line: 1500, column: 8, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1500, column: 8)
!7150 = !DILocation(line: 1500, column: 17, scope: !7149)
!7151 = !DILocation(line: 1500, column: 8, scope: !6799)
!7152 = !DILocation(line: 1501, column: 18, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1500, column: 26)
!7154 = !DILocation(line: 1501, column: 24, scope: !7153)
!7155 = !DILocation(line: 1501, column: 22, scope: !7153)
!7156 = !DILocation(line: 1501, column: 16, scope: !7153)
!7157 = !DILocation(line: 1501, column: 9, scope: !7153)
!7158 = !DILocation(line: 1502, column: 9, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 1502, column: 9)
!7160 = !DILocation(line: 1502, column: 13, scope: !7159)
!7161 = !DILocation(line: 1502, column: 9, scope: !7153)
!7162 = !DILocation(line: 1503, column: 6, scope: !7159)
!7163 = !DILocation(line: 1503, column: 15, scope: !7159)
!7164 = !DILocation(line: 1504, column: 22, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 1504, column: 14)
!7166 = !DILocation(line: 1504, column: 34, scope: !7165)
!7167 = !DILocation(line: 1504, column: 32, scope: !7165)
!7168 = !DILocation(line: 1504, column: 19, scope: !7165)
!7169 = !DILocation(line: 1504, column: 39, scope: !7165)
!7170 = !DILocation(line: 1504, column: 14, scope: !7159)
!7171 = !DILocation(line: 1505, column: 6, scope: !7165)
!7172 = !DILocation(line: 1505, column: 15, scope: !7165)
!7173 = !DILocation(line: 1507, column: 17, scope: !7165)
!7174 = !DILocation(line: 1507, column: 6, scope: !7165)
!7175 = !DILocation(line: 1507, column: 15, scope: !7165)
!7176 = !DILocation(line: 1508, column: 4, scope: !7153)
!7177 = !DILocation(line: 1509, column: 8, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1509, column: 8)
!7179 = !DILocation(line: 1509, column: 17, scope: !7178)
!7180 = !DILocation(line: 1509, column: 8, scope: !6799)
!7181 = !DILocation(line: 1510, column: 18, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 1509, column: 26)
!7183 = !DILocation(line: 1510, column: 24, scope: !7182)
!7184 = !DILocation(line: 1510, column: 22, scope: !7182)
!7185 = !DILocation(line: 1510, column: 16, scope: !7182)
!7186 = !DILocation(line: 1510, column: 9, scope: !7182)
!7187 = !DILocation(line: 1511, column: 9, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1511, column: 9)
!7189 = !DILocation(line: 1511, column: 13, scope: !7188)
!7190 = !DILocation(line: 1511, column: 9, scope: !7182)
!7191 = !DILocation(line: 1512, column: 6, scope: !7188)
!7192 = !DILocation(line: 1512, column: 15, scope: !7188)
!7193 = !DILocation(line: 1513, column: 22, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1513, column: 14)
!7195 = !DILocation(line: 1513, column: 34, scope: !7194)
!7196 = !DILocation(line: 1513, column: 32, scope: !7194)
!7197 = !DILocation(line: 1513, column: 19, scope: !7194)
!7198 = !DILocation(line: 1513, column: 39, scope: !7194)
!7199 = !DILocation(line: 1513, column: 14, scope: !7188)
!7200 = !DILocation(line: 1514, column: 6, scope: !7194)
!7201 = !DILocation(line: 1514, column: 15, scope: !7194)
!7202 = !DILocation(line: 1516, column: 17, scope: !7194)
!7203 = !DILocation(line: 1516, column: 6, scope: !7194)
!7204 = !DILocation(line: 1516, column: 15, scope: !7194)
!7205 = !DILocation(line: 1517, column: 4, scope: !7182)
!7206 = !DILocation(line: 1518, column: 8, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1518, column: 8)
!7208 = !DILocation(line: 1518, column: 17, scope: !7207)
!7209 = !DILocation(line: 1518, column: 8, scope: !6799)
!7210 = !DILocation(line: 1519, column: 18, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 1518, column: 26)
!7212 = !DILocation(line: 1519, column: 24, scope: !7211)
!7213 = !DILocation(line: 1519, column: 22, scope: !7211)
!7214 = !DILocation(line: 1519, column: 16, scope: !7211)
!7215 = !DILocation(line: 1519, column: 9, scope: !7211)
!7216 = !DILocation(line: 1520, column: 9, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1520, column: 9)
!7218 = !DILocation(line: 1520, column: 13, scope: !7217)
!7219 = !DILocation(line: 1520, column: 9, scope: !7211)
!7220 = !DILocation(line: 1521, column: 6, scope: !7217)
!7221 = !DILocation(line: 1521, column: 15, scope: !7217)
!7222 = !DILocation(line: 1522, column: 22, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 1522, column: 14)
!7224 = !DILocation(line: 1522, column: 34, scope: !7223)
!7225 = !DILocation(line: 1522, column: 32, scope: !7223)
!7226 = !DILocation(line: 1522, column: 19, scope: !7223)
!7227 = !DILocation(line: 1522, column: 39, scope: !7223)
!7228 = !DILocation(line: 1522, column: 14, scope: !7217)
!7229 = !DILocation(line: 1523, column: 6, scope: !7223)
!7230 = !DILocation(line: 1523, column: 15, scope: !7223)
!7231 = !DILocation(line: 1525, column: 17, scope: !7223)
!7232 = !DILocation(line: 1525, column: 6, scope: !7223)
!7233 = !DILocation(line: 1525, column: 15, scope: !7223)
!7234 = !DILocation(line: 1526, column: 4, scope: !7211)
!7235 = !DILocation(line: 1527, column: 4, scope: !6799)
!7236 = !DILocation(line: 1529, column: 10, scope: !6799)
!7237 = !DILocation(line: 1529, column: 17, scope: !6799)
!7238 = !DILocation(line: 1529, column: 23, scope: !6799)
!7239 = !DILocation(line: 1529, column: 21, scope: !6799)
!7240 = !DILocation(line: 1529, column: 15, scope: !6799)
!7241 = !DILocation(line: 1529, column: 8, scope: !6799)
!7242 = !DILocation(line: 1531, column: 8, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1531, column: 8)
!7244 = !DILocation(line: 1531, column: 12, scope: !7243)
!7245 = !DILocation(line: 1531, column: 8, scope: !6799)
!7246 = !DILocation(line: 1532, column: 5, scope: !7243)
!7247 = !DILocation(line: 1532, column: 14, scope: !7243)
!7248 = !DILocation(line: 1533, column: 37, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 1533, column: 13)
!7250 = !DILocation(line: 1533, column: 34, scope: !7249)
!7251 = !DILocation(line: 1533, column: 50, scope: !7249)
!7252 = !DILocation(line: 1533, column: 48, scope: !7249)
!7253 = !DILocation(line: 1533, column: 26, scope: !7249)
!7254 = !DILocation(line: 1533, column: 18, scope: !7249)
!7255 = !DILocation(line: 1533, column: 56, scope: !7249)
!7256 = !DILocation(line: 1533, column: 13, scope: !7243)
!7257 = !DILocation(line: 1534, column: 5, scope: !7249)
!7258 = !DILocation(line: 1534, column: 14, scope: !7249)
!7259 = !DILocation(line: 1535, column: 13, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 1535, column: 13)
!7261 = !DILocation(line: 1535, column: 17, scope: !7260)
!7262 = !DILocation(line: 1535, column: 13, scope: !7249)
!7263 = !DILocation(line: 1536, column: 5, scope: !7260)
!7264 = !DILocation(line: 1536, column: 14, scope: !7260)
!7265 = !DILocation(line: 1538, column: 16, scope: !7260)
!7266 = !DILocation(line: 1538, column: 5, scope: !7260)
!7267 = !DILocation(line: 1538, column: 14, scope: !7260)
!7268 = !DILocation(line: 1540, column: 10, scope: !6799)
!7269 = !DILocation(line: 1540, column: 17, scope: !6799)
!7270 = !DILocation(line: 1540, column: 23, scope: !6799)
!7271 = !DILocation(line: 1540, column: 21, scope: !6799)
!7272 = !DILocation(line: 1540, column: 15, scope: !6799)
!7273 = !DILocation(line: 1540, column: 8, scope: !6799)
!7274 = !DILocation(line: 1541, column: 8, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1541, column: 8)
!7276 = !DILocation(line: 1541, column: 12, scope: !7275)
!7277 = !DILocation(line: 1541, column: 8, scope: !6799)
!7278 = !DILocation(line: 1542, column: 5, scope: !7275)
!7279 = !DILocation(line: 1542, column: 14, scope: !7275)
!7280 = !DILocation(line: 1543, column: 37, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 1543, column: 13)
!7282 = !DILocation(line: 1543, column: 34, scope: !7281)
!7283 = !DILocation(line: 1543, column: 50, scope: !7281)
!7284 = !DILocation(line: 1543, column: 48, scope: !7281)
!7285 = !DILocation(line: 1543, column: 26, scope: !7281)
!7286 = !DILocation(line: 1543, column: 18, scope: !7281)
!7287 = !DILocation(line: 1543, column: 56, scope: !7281)
!7288 = !DILocation(line: 1543, column: 13, scope: !7275)
!7289 = !DILocation(line: 1544, column: 5, scope: !7281)
!7290 = !DILocation(line: 1544, column: 14, scope: !7281)
!7291 = !DILocation(line: 1545, column: 13, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 1545, column: 13)
!7293 = !DILocation(line: 1545, column: 17, scope: !7292)
!7294 = !DILocation(line: 1545, column: 13, scope: !7281)
!7295 = !DILocation(line: 1546, column: 5, scope: !7292)
!7296 = !DILocation(line: 1546, column: 14, scope: !7292)
!7297 = !DILocation(line: 1548, column: 16, scope: !7292)
!7298 = !DILocation(line: 1548, column: 5, scope: !7292)
!7299 = !DILocation(line: 1548, column: 14, scope: !7292)
!7300 = !DILocation(line: 1550, column: 10, scope: !6799)
!7301 = !DILocation(line: 1550, column: 17, scope: !6799)
!7302 = !DILocation(line: 1550, column: 23, scope: !6799)
!7303 = !DILocation(line: 1550, column: 21, scope: !6799)
!7304 = !DILocation(line: 1550, column: 15, scope: !6799)
!7305 = !DILocation(line: 1550, column: 8, scope: !6799)
!7306 = !DILocation(line: 1551, column: 8, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1551, column: 8)
!7308 = !DILocation(line: 1551, column: 12, scope: !7307)
!7309 = !DILocation(line: 1551, column: 8, scope: !6799)
!7310 = !DILocation(line: 1552, column: 5, scope: !7307)
!7311 = !DILocation(line: 1552, column: 14, scope: !7307)
!7312 = !DILocation(line: 1553, column: 37, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1553, column: 13)
!7314 = !DILocation(line: 1553, column: 34, scope: !7313)
!7315 = !DILocation(line: 1553, column: 50, scope: !7313)
!7316 = !DILocation(line: 1553, column: 48, scope: !7313)
!7317 = !DILocation(line: 1553, column: 26, scope: !7313)
!7318 = !DILocation(line: 1553, column: 18, scope: !7313)
!7319 = !DILocation(line: 1553, column: 56, scope: !7313)
!7320 = !DILocation(line: 1553, column: 13, scope: !7307)
!7321 = !DILocation(line: 1554, column: 5, scope: !7313)
!7322 = !DILocation(line: 1554, column: 14, scope: !7313)
!7323 = !DILocation(line: 1555, column: 13, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1555, column: 13)
!7325 = !DILocation(line: 1555, column: 17, scope: !7324)
!7326 = !DILocation(line: 1555, column: 13, scope: !7313)
!7327 = !DILocation(line: 1556, column: 5, scope: !7324)
!7328 = !DILocation(line: 1556, column: 14, scope: !7324)
!7329 = !DILocation(line: 1558, column: 16, scope: !7324)
!7330 = !DILocation(line: 1558, column: 5, scope: !7324)
!7331 = !DILocation(line: 1558, column: 14, scope: !7324)
!7332 = !DILocation(line: 1559, column: 4, scope: !6799)
!7333 = !DILocalVariable(name: "rH", scope: !7334, file: !3, line: 1562, type: !267)
!7334 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1561, column: 3)
!7335 = !DILocation(line: 1562, column: 10, scope: !7334)
!7336 = !DILocalVariable(name: "rS", scope: !7334, file: !3, line: 1562, type: !267)
!7337 = !DILocation(line: 1562, column: 14, scope: !7334)
!7338 = !DILocalVariable(name: "rV", scope: !7334, file: !3, line: 1562, type: !267)
!7339 = !DILocation(line: 1562, column: 18, scope: !7334)
!7340 = !DILocalVariable(name: "colH", scope: !7334, file: !3, line: 1563, type: !267)
!7341 = !DILocation(line: 1563, column: 10, scope: !7334)
!7342 = !DILocalVariable(name: "colS", scope: !7334, file: !3, line: 1563, type: !267)
!7343 = !DILocation(line: 1563, column: 16, scope: !7334)
!7344 = !DILocalVariable(name: "colV", scope: !7334, file: !3, line: 1563, type: !267)
!7345 = !DILocation(line: 1563, column: 22, scope: !7334)
!7346 = !DILocalVariable(name: "tmpr", scope: !7334, file: !3, line: 1564, type: !267)
!7347 = !DILocation(line: 1564, column: 10, scope: !7334)
!7348 = !DILocalVariable(name: "tmpg", scope: !7334, file: !3, line: 1564, type: !267)
!7349 = !DILocation(line: 1564, column: 16, scope: !7334)
!7350 = !DILocalVariable(name: "tmpb", scope: !7334, file: !3, line: 1564, type: !267)
!7351 = !DILocation(line: 1564, column: 22, scope: !7334)
!7352 = !DILocation(line: 1565, column: 15, scope: !7334)
!7353 = !DILocation(line: 1565, column: 23, scope: !7334)
!7354 = !DILocation(line: 1565, column: 31, scope: !7334)
!7355 = !DILocation(line: 1565, column: 4, scope: !7334)
!7356 = !DILocation(line: 1566, column: 8, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1566, column: 8)
!7358 = !DILocation(line: 1566, column: 13, scope: !7357)
!7359 = !DILocation(line: 1566, column: 8, scope: !7334)
!7360 = !DILocation(line: 1567, column: 16, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 1566, column: 19)
!7362 = !DILocation(line: 1567, column: 26, scope: !7361)
!7363 = !DILocation(line: 1567, column: 36, scope: !7361)
!7364 = !DILocation(line: 1567, column: 5, scope: !7361)
!7365 = !DILocation(line: 1568, column: 16, scope: !7361)
!7366 = !DILocation(line: 1568, column: 22, scope: !7361)
!7367 = !DILocation(line: 1568, column: 26, scope: !7361)
!7368 = !DILocation(line: 1568, column: 5, scope: !7361)
!7369 = !DILocation(line: 1569, column: 16, scope: !7361)
!7370 = !DILocation(line: 1569, column: 24, scope: !7361)
!7371 = !DILocation(line: 1569, column: 21, scope: !7361)
!7372 = !DILocation(line: 1569, column: 36, scope: !7361)
!7373 = !DILocation(line: 1569, column: 42, scope: !7361)
!7374 = !DILocation(line: 1569, column: 40, scope: !7361)
!7375 = !DILocation(line: 1569, column: 34, scope: !7361)
!7376 = !DILocation(line: 1569, column: 5, scope: !7361)
!7377 = !DILocation(line: 1569, column: 14, scope: !7361)
!7378 = !DILocation(line: 1570, column: 16, scope: !7361)
!7379 = !DILocation(line: 1570, column: 24, scope: !7361)
!7380 = !DILocation(line: 1570, column: 21, scope: !7361)
!7381 = !DILocation(line: 1570, column: 36, scope: !7361)
!7382 = !DILocation(line: 1570, column: 42, scope: !7361)
!7383 = !DILocation(line: 1570, column: 40, scope: !7361)
!7384 = !DILocation(line: 1570, column: 34, scope: !7361)
!7385 = !DILocation(line: 1570, column: 5, scope: !7361)
!7386 = !DILocation(line: 1570, column: 14, scope: !7361)
!7387 = !DILocation(line: 1571, column: 16, scope: !7361)
!7388 = !DILocation(line: 1571, column: 24, scope: !7361)
!7389 = !DILocation(line: 1571, column: 21, scope: !7361)
!7390 = !DILocation(line: 1571, column: 36, scope: !7361)
!7391 = !DILocation(line: 1571, column: 42, scope: !7361)
!7392 = !DILocation(line: 1571, column: 40, scope: !7361)
!7393 = !DILocation(line: 1571, column: 34, scope: !7361)
!7394 = !DILocation(line: 1571, column: 5, scope: !7361)
!7395 = !DILocation(line: 1571, column: 14, scope: !7361)
!7396 = !DILocation(line: 1572, column: 4, scope: !7361)
!7397 = !DILocation(line: 1573, column: 4, scope: !7334)
!7398 = !DILocalVariable(name: "rH", scope: !7399, file: !3, line: 1577, type: !267)
!7399 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1576, column: 3)
!7400 = !DILocation(line: 1577, column: 10, scope: !7399)
!7401 = !DILocalVariable(name: "rS", scope: !7399, file: !3, line: 1577, type: !267)
!7402 = !DILocation(line: 1577, column: 14, scope: !7399)
!7403 = !DILocalVariable(name: "rV", scope: !7399, file: !3, line: 1577, type: !267)
!7404 = !DILocation(line: 1577, column: 18, scope: !7399)
!7405 = !DILocalVariable(name: "colH", scope: !7399, file: !3, line: 1578, type: !267)
!7406 = !DILocation(line: 1578, column: 10, scope: !7399)
!7407 = !DILocalVariable(name: "colS", scope: !7399, file: !3, line: 1578, type: !267)
!7408 = !DILocation(line: 1578, column: 16, scope: !7399)
!7409 = !DILocalVariable(name: "colV", scope: !7399, file: !3, line: 1578, type: !267)
!7410 = !DILocation(line: 1578, column: 22, scope: !7399)
!7411 = !DILocation(line: 1579, column: 15, scope: !7399)
!7412 = !DILocation(line: 1579, column: 25, scope: !7399)
!7413 = !DILocation(line: 1579, column: 35, scope: !7399)
!7414 = !DILocation(line: 1579, column: 4, scope: !7399)
!7415 = !DILocation(line: 1580, column: 8, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 1580, column: 8)
!7417 = !DILocation(line: 1580, column: 11, scope: !7416)
!7418 = !DILocation(line: 1580, column: 8, scope: !7399)
!7419 = !DILocation(line: 1581, column: 16, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 1580, column: 17)
!7421 = !DILocation(line: 1581, column: 24, scope: !7420)
!7422 = !DILocation(line: 1581, column: 32, scope: !7420)
!7423 = !DILocation(line: 1581, column: 5, scope: !7420)
!7424 = !DILocation(line: 1582, column: 16, scope: !7420)
!7425 = !DILocation(line: 1582, column: 21, scope: !7420)
!7426 = !DILocation(line: 1582, column: 28, scope: !7420)
!7427 = !DILocation(line: 1582, column: 26, scope: !7420)
!7428 = !DILocation(line: 1582, column: 33, scope: !7420)
!7429 = !DILocation(line: 1582, column: 39, scope: !7420)
!7430 = !DILocation(line: 1582, column: 37, scope: !7420)
!7431 = !DILocation(line: 1582, column: 31, scope: !7420)
!7432 = !DILocation(line: 1582, column: 46, scope: !7420)
!7433 = !DILocation(line: 1582, column: 50, scope: !7420)
!7434 = !DILocation(line: 1582, column: 56, scope: !7420)
!7435 = !DILocation(line: 1582, column: 61, scope: !7420)
!7436 = !DILocation(line: 1582, column: 67, scope: !7420)
!7437 = !DILocation(line: 1582, column: 72, scope: !7420)
!7438 = !DILocation(line: 1582, column: 78, scope: !7420)
!7439 = !DILocation(line: 1582, column: 5, scope: !7420)
!7440 = !DILocation(line: 1583, column: 4, scope: !7420)
!7441 = !DILocation(line: 1584, column: 4, scope: !7399)
!7442 = !DILocalVariable(name: "rH", scope: !7443, file: !3, line: 1588, type: !267)
!7443 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1587, column: 3)
!7444 = !DILocation(line: 1588, column: 10, scope: !7443)
!7445 = !DILocalVariable(name: "rS", scope: !7443, file: !3, line: 1588, type: !267)
!7446 = !DILocation(line: 1588, column: 14, scope: !7443)
!7447 = !DILocalVariable(name: "rV", scope: !7443, file: !3, line: 1588, type: !267)
!7448 = !DILocation(line: 1588, column: 18, scope: !7443)
!7449 = !DILocalVariable(name: "colH", scope: !7443, file: !3, line: 1589, type: !267)
!7450 = !DILocation(line: 1589, column: 10, scope: !7443)
!7451 = !DILocalVariable(name: "colS", scope: !7443, file: !3, line: 1589, type: !267)
!7452 = !DILocation(line: 1589, column: 16, scope: !7443)
!7453 = !DILocalVariable(name: "colV", scope: !7443, file: !3, line: 1589, type: !267)
!7454 = !DILocation(line: 1589, column: 22, scope: !7443)
!7455 = !DILocation(line: 1590, column: 15, scope: !7443)
!7456 = !DILocation(line: 1590, column: 25, scope: !7443)
!7457 = !DILocation(line: 1590, column: 35, scope: !7443)
!7458 = !DILocation(line: 1590, column: 4, scope: !7443)
!7459 = !DILocation(line: 1591, column: 15, scope: !7443)
!7460 = !DILocation(line: 1591, column: 23, scope: !7443)
!7461 = !DILocation(line: 1591, column: 31, scope: !7443)
!7462 = !DILocation(line: 1591, column: 4, scope: !7443)
!7463 = !DILocation(line: 1592, column: 15, scope: !7443)
!7464 = !DILocation(line: 1592, column: 19, scope: !7443)
!7465 = !DILocation(line: 1592, column: 24, scope: !7443)
!7466 = !DILocation(line: 1592, column: 31, scope: !7443)
!7467 = !DILocation(line: 1592, column: 29, scope: !7443)
!7468 = !DILocation(line: 1592, column: 36, scope: !7443)
!7469 = !DILocation(line: 1592, column: 42, scope: !7443)
!7470 = !DILocation(line: 1592, column: 40, scope: !7443)
!7471 = !DILocation(line: 1592, column: 34, scope: !7443)
!7472 = !DILocation(line: 1592, column: 49, scope: !7443)
!7473 = !DILocation(line: 1592, column: 55, scope: !7443)
!7474 = !DILocation(line: 1592, column: 60, scope: !7443)
!7475 = !DILocation(line: 1592, column: 66, scope: !7443)
!7476 = !DILocation(line: 1592, column: 71, scope: !7443)
!7477 = !DILocation(line: 1592, column: 77, scope: !7443)
!7478 = !DILocation(line: 1592, column: 4, scope: !7443)
!7479 = !DILocation(line: 1593, column: 4, scope: !7443)
!7480 = !DILocalVariable(name: "rH", scope: !7481, file: !3, line: 1597, type: !267)
!7481 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1596, column: 3)
!7482 = !DILocation(line: 1597, column: 10, scope: !7481)
!7483 = !DILocalVariable(name: "rS", scope: !7481, file: !3, line: 1597, type: !267)
!7484 = !DILocation(line: 1597, column: 14, scope: !7481)
!7485 = !DILocalVariable(name: "rV", scope: !7481, file: !3, line: 1597, type: !267)
!7486 = !DILocation(line: 1597, column: 18, scope: !7481)
!7487 = !DILocalVariable(name: "colH", scope: !7481, file: !3, line: 1598, type: !267)
!7488 = !DILocation(line: 1598, column: 10, scope: !7481)
!7489 = !DILocalVariable(name: "colS", scope: !7481, file: !3, line: 1598, type: !267)
!7490 = !DILocation(line: 1598, column: 16, scope: !7481)
!7491 = !DILocalVariable(name: "colV", scope: !7481, file: !3, line: 1598, type: !267)
!7492 = !DILocation(line: 1598, column: 22, scope: !7481)
!7493 = !DILocalVariable(name: "tmpr", scope: !7481, file: !3, line: 1599, type: !267)
!7494 = !DILocation(line: 1599, column: 10, scope: !7481)
!7495 = !DILocalVariable(name: "tmpg", scope: !7481, file: !3, line: 1599, type: !267)
!7496 = !DILocation(line: 1599, column: 16, scope: !7481)
!7497 = !DILocalVariable(name: "tmpb", scope: !7481, file: !3, line: 1599, type: !267)
!7498 = !DILocation(line: 1599, column: 22, scope: !7481)
!7499 = !DILocation(line: 1600, column: 15, scope: !7481)
!7500 = !DILocation(line: 1600, column: 23, scope: !7481)
!7501 = !DILocation(line: 1600, column: 31, scope: !7481)
!7502 = !DILocation(line: 1600, column: 4, scope: !7481)
!7503 = !DILocation(line: 1601, column: 8, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 1601, column: 8)
!7505 = !DILocation(line: 1601, column: 13, scope: !7504)
!7506 = !DILocation(line: 1601, column: 8, scope: !7481)
!7507 = !DILocation(line: 1602, column: 16, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 1601, column: 19)
!7509 = !DILocation(line: 1602, column: 26, scope: !7508)
!7510 = !DILocation(line: 1602, column: 36, scope: !7508)
!7511 = !DILocation(line: 1602, column: 5, scope: !7508)
!7512 = !DILocation(line: 1603, column: 16, scope: !7508)
!7513 = !DILocation(line: 1603, column: 22, scope: !7508)
!7514 = !DILocation(line: 1603, column: 28, scope: !7508)
!7515 = !DILocation(line: 1603, column: 5, scope: !7508)
!7516 = !DILocation(line: 1604, column: 16, scope: !7508)
!7517 = !DILocation(line: 1604, column: 24, scope: !7508)
!7518 = !DILocation(line: 1604, column: 21, scope: !7508)
!7519 = !DILocation(line: 1604, column: 36, scope: !7508)
!7520 = !DILocation(line: 1604, column: 42, scope: !7508)
!7521 = !DILocation(line: 1604, column: 40, scope: !7508)
!7522 = !DILocation(line: 1604, column: 34, scope: !7508)
!7523 = !DILocation(line: 1604, column: 5, scope: !7508)
!7524 = !DILocation(line: 1604, column: 14, scope: !7508)
!7525 = !DILocation(line: 1605, column: 16, scope: !7508)
!7526 = !DILocation(line: 1605, column: 24, scope: !7508)
!7527 = !DILocation(line: 1605, column: 21, scope: !7508)
!7528 = !DILocation(line: 1605, column: 36, scope: !7508)
!7529 = !DILocation(line: 1605, column: 42, scope: !7508)
!7530 = !DILocation(line: 1605, column: 40, scope: !7508)
!7531 = !DILocation(line: 1605, column: 34, scope: !7508)
!7532 = !DILocation(line: 1605, column: 5, scope: !7508)
!7533 = !DILocation(line: 1605, column: 14, scope: !7508)
!7534 = !DILocation(line: 1606, column: 16, scope: !7508)
!7535 = !DILocation(line: 1606, column: 24, scope: !7508)
!7536 = !DILocation(line: 1606, column: 21, scope: !7508)
!7537 = !DILocation(line: 1606, column: 36, scope: !7508)
!7538 = !DILocation(line: 1606, column: 42, scope: !7508)
!7539 = !DILocation(line: 1606, column: 40, scope: !7508)
!7540 = !DILocation(line: 1606, column: 34, scope: !7508)
!7541 = !DILocation(line: 1606, column: 5, scope: !7508)
!7542 = !DILocation(line: 1606, column: 14, scope: !7508)
!7543 = !DILocation(line: 1607, column: 4, scope: !7508)
!7544 = !DILocation(line: 1608, column: 4, scope: !7481)
!7545 = !DILocalVariable(name: "scr", scope: !7546, file: !3, line: 1612, type: !267)
!7546 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1611, column: 3)
!7547 = !DILocation(line: 1612, column: 10, scope: !7546)
!7548 = !DILocalVariable(name: "scg", scope: !7546, file: !3, line: 1612, type: !267)
!7549 = !DILocation(line: 1612, column: 15, scope: !7546)
!7550 = !DILocalVariable(name: "scb", scope: !7546, file: !3, line: 1612, type: !267)
!7551 = !DILocation(line: 1612, column: 20, scope: !7546)
!7552 = !DILocation(line: 1615, column: 25, scope: !7546)
!7553 = !DILocation(line: 1615, column: 23, scope: !7546)
!7554 = !DILocation(line: 1615, column: 43, scope: !7546)
!7555 = !DILocation(line: 1615, column: 41, scope: !7546)
!7556 = !DILocation(line: 1615, column: 33, scope: !7546)
!7557 = !DILocation(line: 1615, column: 15, scope: !7546)
!7558 = !DILocation(line: 1615, column: 8, scope: !7546)
!7559 = !DILocation(line: 1616, column: 25, scope: !7546)
!7560 = !DILocation(line: 1616, column: 23, scope: !7546)
!7561 = !DILocation(line: 1616, column: 43, scope: !7546)
!7562 = !DILocation(line: 1616, column: 41, scope: !7546)
!7563 = !DILocation(line: 1616, column: 33, scope: !7546)
!7564 = !DILocation(line: 1616, column: 15, scope: !7546)
!7565 = !DILocation(line: 1616, column: 8, scope: !7546)
!7566 = !DILocation(line: 1617, column: 25, scope: !7546)
!7567 = !DILocation(line: 1617, column: 23, scope: !7546)
!7568 = !DILocation(line: 1617, column: 43, scope: !7546)
!7569 = !DILocation(line: 1617, column: 41, scope: !7546)
!7570 = !DILocation(line: 1617, column: 33, scope: !7546)
!7571 = !DILocation(line: 1617, column: 15, scope: !7546)
!7572 = !DILocation(line: 1617, column: 8, scope: !7546)
!7573 = !DILocation(line: 1619, column: 15, scope: !7546)
!7574 = !DILocation(line: 1619, column: 23, scope: !7546)
!7575 = !DILocation(line: 1619, column: 20, scope: !7546)
!7576 = !DILocation(line: 1619, column: 35, scope: !7546)
!7577 = !DILocation(line: 1619, column: 51, scope: !7546)
!7578 = !DILocation(line: 1619, column: 49, scope: !7546)
!7579 = !DILocation(line: 1619, column: 63, scope: !7546)
!7580 = !DILocation(line: 1619, column: 61, scope: !7546)
!7581 = !DILocation(line: 1619, column: 73, scope: !7546)
!7582 = !DILocation(line: 1619, column: 70, scope: !7546)
!7583 = !DILocation(line: 1619, column: 87, scope: !7546)
!7584 = !DILocation(line: 1619, column: 98, scope: !7546)
!7585 = !DILocation(line: 1619, column: 96, scope: !7546)
!7586 = !DILocation(line: 1619, column: 84, scope: !7546)
!7587 = !DILocation(line: 1619, column: 39, scope: !7546)
!7588 = !DILocation(line: 1619, column: 33, scope: !7546)
!7589 = !DILocation(line: 1619, column: 4, scope: !7546)
!7590 = !DILocation(line: 1619, column: 13, scope: !7546)
!7591 = !DILocation(line: 1620, column: 15, scope: !7546)
!7592 = !DILocation(line: 1620, column: 23, scope: !7546)
!7593 = !DILocation(line: 1620, column: 20, scope: !7546)
!7594 = !DILocation(line: 1620, column: 35, scope: !7546)
!7595 = !DILocation(line: 1620, column: 51, scope: !7546)
!7596 = !DILocation(line: 1620, column: 49, scope: !7546)
!7597 = !DILocation(line: 1620, column: 63, scope: !7546)
!7598 = !DILocation(line: 1620, column: 61, scope: !7546)
!7599 = !DILocation(line: 1620, column: 73, scope: !7546)
!7600 = !DILocation(line: 1620, column: 70, scope: !7546)
!7601 = !DILocation(line: 1620, column: 87, scope: !7546)
!7602 = !DILocation(line: 1620, column: 98, scope: !7546)
!7603 = !DILocation(line: 1620, column: 96, scope: !7546)
!7604 = !DILocation(line: 1620, column: 84, scope: !7546)
!7605 = !DILocation(line: 1620, column: 39, scope: !7546)
!7606 = !DILocation(line: 1620, column: 33, scope: !7546)
!7607 = !DILocation(line: 1620, column: 4, scope: !7546)
!7608 = !DILocation(line: 1620, column: 13, scope: !7546)
!7609 = !DILocation(line: 1621, column: 15, scope: !7546)
!7610 = !DILocation(line: 1621, column: 23, scope: !7546)
!7611 = !DILocation(line: 1621, column: 20, scope: !7546)
!7612 = !DILocation(line: 1621, column: 35, scope: !7546)
!7613 = !DILocation(line: 1621, column: 51, scope: !7546)
!7614 = !DILocation(line: 1621, column: 49, scope: !7546)
!7615 = !DILocation(line: 1621, column: 63, scope: !7546)
!7616 = !DILocation(line: 1621, column: 61, scope: !7546)
!7617 = !DILocation(line: 1621, column: 73, scope: !7546)
!7618 = !DILocation(line: 1621, column: 70, scope: !7546)
!7619 = !DILocation(line: 1621, column: 87, scope: !7546)
!7620 = !DILocation(line: 1621, column: 98, scope: !7546)
!7621 = !DILocation(line: 1621, column: 96, scope: !7546)
!7622 = !DILocation(line: 1621, column: 84, scope: !7546)
!7623 = !DILocation(line: 1621, column: 39, scope: !7546)
!7624 = !DILocation(line: 1621, column: 33, scope: !7546)
!7625 = !DILocation(line: 1621, column: 4, scope: !7546)
!7626 = !DILocation(line: 1621, column: 13, scope: !7546)
!7627 = !DILocation(line: 1622, column: 4, scope: !7546)
!7628 = !DILocation(line: 1625, column: 8, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1625, column: 8)
!7630 = !DILocation(line: 1625, column: 15, scope: !7629)
!7631 = !DILocation(line: 1625, column: 8, scope: !6799)
!7632 = !DILocation(line: 1626, column: 16, scope: !7629)
!7633 = !DILocation(line: 1626, column: 27, scope: !7629)
!7634 = !DILocation(line: 1626, column: 42, scope: !7629)
!7635 = !DILocation(line: 1626, column: 49, scope: !7629)
!7636 = !DILocation(line: 1626, column: 39, scope: !7629)
!7637 = !DILocation(line: 1626, column: 31, scope: !7629)
!7638 = !DILocation(line: 1626, column: 25, scope: !7629)
!7639 = !DILocation(line: 1626, column: 5, scope: !7629)
!7640 = !DILocation(line: 1626, column: 14, scope: !7629)
!7641 = !DILocation(line: 1628, column: 16, scope: !7629)
!7642 = !DILocation(line: 1628, column: 27, scope: !7629)
!7643 = !DILocation(line: 1628, column: 42, scope: !7629)
!7644 = !DILocation(line: 1628, column: 39, scope: !7629)
!7645 = !DILocation(line: 1628, column: 50, scope: !7629)
!7646 = !DILocation(line: 1628, column: 31, scope: !7629)
!7647 = !DILocation(line: 1628, column: 25, scope: !7629)
!7648 = !DILocation(line: 1628, column: 5, scope: !7629)
!7649 = !DILocation(line: 1628, column: 14, scope: !7629)
!7650 = !DILocation(line: 1629, column: 8, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1629, column: 8)
!7652 = !DILocation(line: 1629, column: 15, scope: !7651)
!7653 = !DILocation(line: 1629, column: 8, scope: !6799)
!7654 = !DILocation(line: 1630, column: 16, scope: !7651)
!7655 = !DILocation(line: 1630, column: 27, scope: !7651)
!7656 = !DILocation(line: 1630, column: 42, scope: !7651)
!7657 = !DILocation(line: 1630, column: 49, scope: !7651)
!7658 = !DILocation(line: 1630, column: 39, scope: !7651)
!7659 = !DILocation(line: 1630, column: 31, scope: !7651)
!7660 = !DILocation(line: 1630, column: 25, scope: !7651)
!7661 = !DILocation(line: 1630, column: 5, scope: !7651)
!7662 = !DILocation(line: 1630, column: 14, scope: !7651)
!7663 = !DILocation(line: 1632, column: 16, scope: !7651)
!7664 = !DILocation(line: 1632, column: 27, scope: !7651)
!7665 = !DILocation(line: 1632, column: 42, scope: !7651)
!7666 = !DILocation(line: 1632, column: 39, scope: !7651)
!7667 = !DILocation(line: 1632, column: 50, scope: !7651)
!7668 = !DILocation(line: 1632, column: 31, scope: !7651)
!7669 = !DILocation(line: 1632, column: 25, scope: !7651)
!7670 = !DILocation(line: 1632, column: 5, scope: !7651)
!7671 = !DILocation(line: 1632, column: 14, scope: !7651)
!7672 = !DILocation(line: 1633, column: 8, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1633, column: 8)
!7674 = !DILocation(line: 1633, column: 15, scope: !7673)
!7675 = !DILocation(line: 1633, column: 8, scope: !6799)
!7676 = !DILocation(line: 1634, column: 16, scope: !7673)
!7677 = !DILocation(line: 1634, column: 27, scope: !7673)
!7678 = !DILocation(line: 1634, column: 42, scope: !7673)
!7679 = !DILocation(line: 1634, column: 49, scope: !7673)
!7680 = !DILocation(line: 1634, column: 39, scope: !7673)
!7681 = !DILocation(line: 1634, column: 31, scope: !7673)
!7682 = !DILocation(line: 1634, column: 25, scope: !7673)
!7683 = !DILocation(line: 1634, column: 5, scope: !7673)
!7684 = !DILocation(line: 1634, column: 14, scope: !7673)
!7685 = !DILocation(line: 1636, column: 16, scope: !7673)
!7686 = !DILocation(line: 1636, column: 27, scope: !7673)
!7687 = !DILocation(line: 1636, column: 42, scope: !7673)
!7688 = !DILocation(line: 1636, column: 39, scope: !7673)
!7689 = !DILocation(line: 1636, column: 50, scope: !7673)
!7690 = !DILocation(line: 1636, column: 31, scope: !7673)
!7691 = !DILocation(line: 1636, column: 25, scope: !7673)
!7692 = !DILocation(line: 1636, column: 5, scope: !7673)
!7693 = !DILocation(line: 1636, column: 14, scope: !7673)
!7694 = !DILocation(line: 1637, column: 4, scope: !6799)
!7695 = !DILocation(line: 1639, column: 1, scope: !6777)
!7696 = distinct !DISubprogram(name: "min_ff", scope: !7697, file: !7697, line: 202, type: !7698, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!7697 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!267, !267, !267}
!7700 = !DILocalVariable(name: "a", arg: 1, scope: !7696, file: !7697, line: 202, type: !267)
!7701 = !DILocation(line: 202, column: 28, scope: !7696)
!7702 = !DILocalVariable(name: "b", arg: 2, scope: !7696, file: !7697, line: 202, type: !267)
!7703 = !DILocation(line: 202, column: 37, scope: !7696)
!7704 = !DILocation(line: 204, column: 10, scope: !7696)
!7705 = !DILocation(line: 204, column: 14, scope: !7696)
!7706 = !DILocation(line: 204, column: 12, scope: !7696)
!7707 = !DILocation(line: 204, column: 9, scope: !7696)
!7708 = !DILocation(line: 204, column: 19, scope: !7696)
!7709 = !DILocation(line: 204, column: 23, scope: !7696)
!7710 = !DILocation(line: 204, column: 2, scope: !7696)
!7711 = distinct !DISubprogram(name: "clear_matcopybuf", scope: !3, file: !3, line: 1649, type: !2678, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!7712 = !DILocation(line: 1651, column: 2, scope: !7711)
!7713 = !DILocation(line: 1652, column: 12, scope: !7711)
!7714 = !DILocation(line: 1653, column: 1, scope: !7711)
!7715 = distinct !DISubprogram(name: "free_matcopybuf", scope: !3, file: !3, line: 1655, type: !2678, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!7716 = !DILocalVariable(name: "a", scope: !7715, file: !3, line: 1657, type: !178)
!7717 = !DILocation(line: 1657, column: 6, scope: !7715)
!7718 = !DILocation(line: 1659, column: 9, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1659, column: 2)
!7720 = !DILocation(line: 1659, column: 7, scope: !7719)
!7721 = !DILocation(line: 1659, column: 14, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 1659, column: 2)
!7723 = !DILocation(line: 1659, column: 16, scope: !7722)
!7724 = !DILocation(line: 1659, column: 2, scope: !7719)
!7725 = !DILocation(line: 1660, column: 23, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 1660, column: 7)
!7727 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 1659, column: 33)
!7728 = !DILocation(line: 1660, column: 7, scope: !7726)
!7729 = !DILocation(line: 1660, column: 7, scope: !7727)
!7730 = !DILocation(line: 1661, column: 4, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 1660, column: 27)
!7732 = !DILocation(line: 1661, column: 30, scope: !7731)
!7733 = !DILocation(line: 1661, column: 14, scope: !7731)
!7734 = !DILocation(line: 1662, column: 20, scope: !7731)
!7735 = !DILocation(line: 1662, column: 4, scope: !7731)
!7736 = !DILocation(line: 1662, column: 23, scope: !7731)
!7737 = !DILocation(line: 1663, column: 3, scope: !7731)
!7738 = !DILocation(line: 1664, column: 2, scope: !7727)
!7739 = !DILocation(line: 1659, column: 29, scope: !7722)
!7740 = !DILocation(line: 1659, column: 2, scope: !7722)
!7741 = distinct !{!7741, !7724, !7742}
!7742 = !DILocation(line: 1664, column: 2, scope: !7719)
!7743 = !DILocation(line: 1666, column: 17, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1666, column: 6)
!7745 = !DILocation(line: 1666, column: 6, scope: !7744)
!7746 = !DILocation(line: 1666, column: 6, scope: !7715)
!7747 = !DILocation(line: 1666, column: 27, scope: !7744)
!7748 = !DILocation(line: 1666, column: 48, scope: !7744)
!7749 = !DILocation(line: 1666, column: 37, scope: !7744)
!7750 = !DILocation(line: 1667, column: 17, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1667, column: 6)
!7752 = !DILocation(line: 1667, column: 6, scope: !7751)
!7753 = !DILocation(line: 1667, column: 6, scope: !7715)
!7754 = !DILocation(line: 1667, column: 28, scope: !7751)
!7755 = !DILocation(line: 1667, column: 49, scope: !7751)
!7756 = !DILocation(line: 1667, column: 38, scope: !7751)
!7757 = !DILocation(line: 1669, column: 22, scope: !7715)
!7758 = !DILocation(line: 1670, column: 23, scope: !7715)
!7759 = !DILocation(line: 1672, column: 17, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1672, column: 6)
!7761 = !DILocation(line: 1672, column: 6, scope: !7760)
!7762 = !DILocation(line: 1672, column: 6, scope: !7715)
!7763 = !DILocation(line: 1673, column: 31, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 1672, column: 27)
!7765 = !DILocation(line: 1673, column: 3, scope: !7764)
!7766 = !DILocation(line: 1674, column: 3, scope: !7764)
!7767 = !DILocation(line: 1674, column: 24, scope: !7764)
!7768 = !DILocation(line: 1674, column: 13, scope: !7764)
!7769 = !DILocation(line: 1675, column: 23, scope: !7764)
!7770 = !DILocation(line: 1676, column: 2, scope: !7764)
!7771 = !DILocation(line: 1678, column: 12, scope: !7715)
!7772 = !DILocation(line: 1679, column: 1, scope: !7715)
!7773 = distinct !DISubprogram(name: "copy_matcopybuf", scope: !3, file: !3, line: 1681, type: !2684, scopeLine: 1682, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!7774 = !DILocalVariable(name: "ma", arg: 1, scope: !7773, file: !3, line: 1681, type: !2660)
!7775 = !DILocation(line: 1681, column: 32, scope: !7773)
!7776 = !DILocalVariable(name: "a", scope: !7773, file: !3, line: 1683, type: !178)
!7777 = !DILocation(line: 1683, column: 6, scope: !7773)
!7778 = !DILocalVariable(name: "mtex", scope: !7773, file: !3, line: 1684, type: !3032)
!7779 = !DILocation(line: 1684, column: 8, scope: !7773)
!7780 = !DILocation(line: 1686, column: 6, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 1686, column: 6)
!7782 = !DILocation(line: 1686, column: 6, scope: !7773)
!7783 = !DILocation(line: 1687, column: 3, scope: !7781)
!7784 = !DILocation(line: 1689, column: 22, scope: !7773)
!7785 = !DILocation(line: 1689, column: 2, scope: !7773)
!7786 = !DILocation(line: 1690, column: 17, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 1690, column: 6)
!7788 = !DILocation(line: 1690, column: 6, scope: !7787)
!7789 = !DILocation(line: 1690, column: 6, scope: !7773)
!7790 = !DILocation(line: 1690, column: 49, scope: !7787)
!7791 = !DILocation(line: 1690, column: 74, scope: !7787)
!7792 = !DILocation(line: 1690, column: 63, scope: !7787)
!7793 = !DILocation(line: 1690, column: 47, scope: !7787)
!7794 = !DILocation(line: 1690, column: 27, scope: !7787)
!7795 = !DILocation(line: 1691, column: 17, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 1691, column: 6)
!7797 = !DILocation(line: 1691, column: 6, scope: !7796)
!7798 = !DILocation(line: 1691, column: 6, scope: !7773)
!7799 = !DILocation(line: 1691, column: 51, scope: !7796)
!7800 = !DILocation(line: 1691, column: 76, scope: !7796)
!7801 = !DILocation(line: 1691, column: 65, scope: !7796)
!7802 = !DILocation(line: 1691, column: 49, scope: !7796)
!7803 = !DILocation(line: 1691, column: 28, scope: !7796)
!7804 = !DILocation(line: 1693, column: 9, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 1693, column: 2)
!7806 = !DILocation(line: 1693, column: 7, scope: !7805)
!7807 = !DILocation(line: 1693, column: 14, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7805, file: !3, line: 1693, column: 2)
!7809 = !DILocation(line: 1693, column: 16, scope: !7808)
!7810 = !DILocation(line: 1693, column: 2, scope: !7805)
!7811 = !DILocation(line: 1694, column: 26, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 1693, column: 33)
!7813 = !DILocation(line: 1694, column: 10, scope: !7812)
!7814 = !DILocation(line: 1694, column: 8, scope: !7812)
!7815 = !DILocation(line: 1695, column: 7, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 1695, column: 7)
!7817 = !DILocation(line: 1695, column: 7, scope: !7812)
!7818 = !DILocation(line: 1696, column: 25, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 1695, column: 13)
!7820 = !DILocation(line: 1696, column: 39, scope: !7819)
!7821 = !DILocation(line: 1696, column: 20, scope: !7819)
!7822 = !DILocation(line: 1696, column: 4, scope: !7819)
!7823 = !DILocation(line: 1696, column: 23, scope: !7819)
!7824 = !DILocation(line: 1697, column: 3, scope: !7819)
!7825 = !DILocation(line: 1698, column: 2, scope: !7812)
!7826 = !DILocation(line: 1693, column: 29, scope: !7808)
!7827 = !DILocation(line: 1693, column: 2, scope: !7808)
!7828 = distinct !{!7828, !7810, !7829}
!7829 = !DILocation(line: 1698, column: 2, scope: !7805)
!7830 = !DILocation(line: 1699, column: 41, scope: !7773)
!7831 = !DILocation(line: 1699, column: 45, scope: !7773)
!7832 = !DILocation(line: 1699, column: 57, scope: !7773)
!7833 = !DILocation(line: 1699, column: 24, scope: !7773)
!7834 = !DILocation(line: 1699, column: 22, scope: !7773)
!7835 = !DILocation(line: 1700, column: 21, scope: !7773)
!7836 = !DILocation(line: 1701, column: 2, scope: !7773)
!7837 = !DILocation(line: 1702, column: 12, scope: !7773)
!7838 = !DILocation(line: 1703, column: 1, scope: !7773)
!7839 = distinct !DISubprogram(name: "paste_matcopybuf", scope: !3, file: !3, line: 1705, type: !2684, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!7840 = !DILocalVariable(name: "ma", arg: 1, scope: !7839, file: !3, line: 1705, type: !2660)
!7841 = !DILocation(line: 1705, column: 33, scope: !7839)
!7842 = !DILocalVariable(name: "a", scope: !7839, file: !3, line: 1707, type: !178)
!7843 = !DILocation(line: 1707, column: 6, scope: !7839)
!7844 = !DILocalVariable(name: "mtex", scope: !7839, file: !3, line: 1708, type: !3032)
!7845 = !DILocation(line: 1708, column: 8, scope: !7839)
!7846 = !DILocalVariable(name: "id", scope: !7839, file: !3, line: 1709, type: !143)
!7847 = !DILocation(line: 1709, column: 5, scope: !7839)
!7848 = !DILocation(line: 1711, column: 6, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1711, column: 6)
!7850 = !DILocation(line: 1711, column: 16, scope: !7849)
!7851 = !DILocation(line: 1711, column: 6, scope: !7839)
!7852 = !DILocation(line: 1712, column: 3, scope: !7849)
!7853 = !DILocation(line: 1714, column: 6, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1714, column: 6)
!7855 = !DILocation(line: 1714, column: 10, scope: !7854)
!7856 = !DILocation(line: 1714, column: 6, scope: !7839)
!7857 = !DILocation(line: 1714, column: 20, scope: !7854)
!7858 = !DILocation(line: 1714, column: 30, scope: !7854)
!7859 = !DILocation(line: 1714, column: 34, scope: !7854)
!7860 = !DILocation(line: 1715, column: 6, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1715, column: 6)
!7862 = !DILocation(line: 1715, column: 10, scope: !7861)
!7863 = !DILocation(line: 1715, column: 6, scope: !7839)
!7864 = !DILocation(line: 1715, column: 21, scope: !7861)
!7865 = !DILocation(line: 1715, column: 31, scope: !7861)
!7866 = !DILocation(line: 1715, column: 35, scope: !7861)
!7867 = !DILocation(line: 1716, column: 9, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1716, column: 2)
!7869 = !DILocation(line: 1716, column: 7, scope: !7868)
!7870 = !DILocation(line: 1716, column: 14, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 1716, column: 2)
!7872 = !DILocation(line: 1716, column: 16, scope: !7871)
!7873 = !DILocation(line: 1716, column: 2, scope: !7868)
!7874 = !DILocation(line: 1717, column: 10, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 1716, column: 33)
!7876 = !DILocation(line: 1717, column: 14, scope: !7875)
!7877 = !DILocation(line: 1717, column: 19, scope: !7875)
!7878 = !DILocation(line: 1717, column: 8, scope: !7875)
!7879 = !DILocation(line: 1718, column: 7, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 1718, column: 7)
!7881 = !DILocation(line: 1718, column: 12, scope: !7880)
!7882 = !DILocation(line: 1718, column: 15, scope: !7880)
!7883 = !DILocation(line: 1718, column: 21, scope: !7880)
!7884 = !DILocation(line: 1718, column: 7, scope: !7875)
!7885 = !DILocation(line: 1718, column: 26, scope: !7880)
!7886 = !DILocation(line: 1718, column: 32, scope: !7880)
!7887 = !DILocation(line: 1718, column: 37, scope: !7880)
!7888 = !DILocation(line: 1718, column: 40, scope: !7880)
!7889 = !DILocation(line: 1718, column: 42, scope: !7880)
!7890 = !DILocation(line: 1719, column: 7, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 1719, column: 7)
!7892 = !DILocation(line: 1719, column: 7, scope: !7875)
!7893 = !DILocation(line: 1719, column: 13, scope: !7891)
!7894 = !DILocation(line: 1719, column: 23, scope: !7891)
!7895 = !DILocation(line: 1720, column: 2, scope: !7875)
!7896 = !DILocation(line: 1716, column: 29, scope: !7871)
!7897 = !DILocation(line: 1716, column: 2, scope: !7871)
!7898 = distinct !{!7898, !7873, !7899}
!7899 = !DILocation(line: 1720, column: 2, scope: !7868)
!7900 = !DILocation(line: 1722, column: 6, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1722, column: 6)
!7902 = !DILocation(line: 1722, column: 10, scope: !7901)
!7903 = !DILocation(line: 1722, column: 6, scope: !7839)
!7904 = !DILocation(line: 1723, column: 17, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 1722, column: 20)
!7906 = !DILocation(line: 1723, column: 21, scope: !7905)
!7907 = !DILocation(line: 1723, column: 3, scope: !7905)
!7908 = !DILocation(line: 1724, column: 3, scope: !7905)
!7909 = !DILocation(line: 1724, column: 13, scope: !7905)
!7910 = !DILocation(line: 1724, column: 17, scope: !7905)
!7911 = !DILocation(line: 1725, column: 2, scope: !7905)
!7912 = !DILocation(line: 1727, column: 20, scope: !7839)
!7913 = !DILocation(line: 1727, column: 2, scope: !7839)
!7914 = !DILocation(line: 1729, column: 8, scope: !7839)
!7915 = !DILocation(line: 1729, column: 12, scope: !7839)
!7916 = !DILocation(line: 1730, column: 9, scope: !7839)
!7917 = !DILocation(line: 1730, column: 2, scope: !7839)
!7918 = !DILocation(line: 1731, column: 3, scope: !7839)
!7919 = !DILocation(line: 1731, column: 7, scope: !7839)
!7920 = !DILocation(line: 1731, column: 13, scope: !7839)
!7921 = !DILocation(line: 1733, column: 17, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1733, column: 6)
!7923 = !DILocation(line: 1733, column: 6, scope: !7922)
!7924 = !DILocation(line: 1733, column: 6, scope: !7839)
!7925 = !DILocation(line: 1733, column: 42, scope: !7922)
!7926 = !DILocation(line: 1733, column: 67, scope: !7922)
!7927 = !DILocation(line: 1733, column: 56, scope: !7922)
!7928 = !DILocation(line: 1733, column: 27, scope: !7922)
!7929 = !DILocation(line: 1733, column: 31, scope: !7922)
!7930 = !DILocation(line: 1733, column: 40, scope: !7922)
!7931 = !DILocation(line: 1734, column: 17, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1734, column: 6)
!7933 = !DILocation(line: 1734, column: 6, scope: !7932)
!7934 = !DILocation(line: 1734, column: 6, scope: !7839)
!7935 = !DILocation(line: 1734, column: 44, scope: !7932)
!7936 = !DILocation(line: 1734, column: 69, scope: !7932)
!7937 = !DILocation(line: 1734, column: 58, scope: !7932)
!7938 = !DILocation(line: 1734, column: 28, scope: !7932)
!7939 = !DILocation(line: 1734, column: 32, scope: !7932)
!7940 = !DILocation(line: 1734, column: 42, scope: !7932)
!7941 = !DILocation(line: 1736, column: 9, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1736, column: 2)
!7943 = !DILocation(line: 1736, column: 7, scope: !7942)
!7944 = !DILocation(line: 1736, column: 14, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 1736, column: 2)
!7946 = !DILocation(line: 1736, column: 16, scope: !7945)
!7947 = !DILocation(line: 1736, column: 2, scope: !7942)
!7948 = !DILocation(line: 1737, column: 10, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 1736, column: 33)
!7950 = !DILocation(line: 1737, column: 14, scope: !7949)
!7951 = !DILocation(line: 1737, column: 19, scope: !7949)
!7952 = !DILocation(line: 1737, column: 8, scope: !7949)
!7953 = !DILocation(line: 1738, column: 7, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 1738, column: 7)
!7955 = !DILocation(line: 1738, column: 7, scope: !7949)
!7956 = !DILocation(line: 1739, column: 18, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 1738, column: 13)
!7958 = !DILocation(line: 1739, column: 32, scope: !7957)
!7959 = !DILocation(line: 1739, column: 4, scope: !7957)
!7960 = !DILocation(line: 1739, column: 8, scope: !7957)
!7961 = !DILocation(line: 1739, column: 13, scope: !7957)
!7962 = !DILocation(line: 1739, column: 16, scope: !7957)
!7963 = !DILocation(line: 1740, column: 8, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 1740, column: 8)
!7965 = !DILocation(line: 1740, column: 14, scope: !7964)
!7966 = !DILocation(line: 1740, column: 8, scope: !7957)
!7967 = !DILocation(line: 1742, column: 26, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 1742, column: 9)
!7969 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 1740, column: 19)
!7970 = !DILocation(line: 1742, column: 32, scope: !7968)
!7971 = !DILocation(line: 1742, column: 37, scope: !7968)
!7972 = !DILocation(line: 1742, column: 43, scope: !7968)
!7973 = !DILocation(line: 1742, column: 9, scope: !7968)
!7974 = !DILocation(line: 1742, column: 48, scope: !7968)
!7975 = !DILocation(line: 1742, column: 9, scope: !7969)
!7976 = !DILocation(line: 1743, column: 23, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 1742, column: 55)
!7978 = !DILocation(line: 1743, column: 29, scope: !7977)
!7979 = !DILocation(line: 1743, column: 17, scope: !7977)
!7980 = !DILocation(line: 1743, column: 6, scope: !7977)
!7981 = !DILocation(line: 1744, column: 5, scope: !7977)
!7982 = !DILocation(line: 1746, column: 6, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 1745, column: 10)
!7984 = !DILocation(line: 1746, column: 10, scope: !7983)
!7985 = !DILocation(line: 1746, column: 15, scope: !7983)
!7986 = !DILocation(line: 1746, column: 19, scope: !7983)
!7987 = !DILocation(line: 1746, column: 23, scope: !7983)
!7988 = !DILocation(line: 1748, column: 4, scope: !7969)
!7989 = !DILocation(line: 1749, column: 3, scope: !7957)
!7990 = !DILocation(line: 1750, column: 2, scope: !7949)
!7991 = !DILocation(line: 1736, column: 29, scope: !7945)
!7992 = !DILocation(line: 1736, column: 2, scope: !7945)
!7993 = distinct !{!7993, !7947, !7994}
!7994 = !DILocation(line: 1750, column: 2, scope: !7942)
!7995 = !DILocation(line: 1752, column: 45, scope: !7839)
!7996 = !DILocation(line: 1752, column: 57, scope: !7839)
!7997 = !DILocation(line: 1752, column: 17, scope: !7839)
!7998 = !DILocation(line: 1752, column: 2, scope: !7839)
!7999 = !DILocation(line: 1752, column: 6, scope: !7839)
!8000 = !DILocation(line: 1752, column: 15, scope: !7839)
!8001 = !DILocation(line: 1753, column: 1, scope: !7839)
!8002 = distinct !DISubprogram(name: "do_version_tface", scope: !3, file: !3, line: 2044, type: !8003, scopeLine: 2045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!178, !3134}
!8005 = !DILocalVariable(name: "main", arg: 1, scope: !8002, file: !3, line: 2044, type: !3134)
!8006 = !DILocation(line: 2044, column: 28, scope: !8002)
!8007 = !DILocalVariable(name: "me", scope: !8002, file: !3, line: 2046, type: !215)
!8008 = !DILocation(line: 2046, column: 8, scope: !8002)
!8009 = !DILocalVariable(name: "ma", scope: !8002, file: !3, line: 2047, type: !2660)
!8010 = !DILocation(line: 2047, column: 12, scope: !8002)
!8011 = !DILocalVariable(name: "mf", scope: !8002, file: !3, line: 2048, type: !8012)
!8012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8013, size: 64)
!8013 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !118, line: 46, baseType: !2362)
!8014 = !DILocation(line: 2048, column: 9, scope: !8002)
!8015 = !DILocalVariable(name: "tf", scope: !8002, file: !3, line: 2049, type: !2664)
!8016 = !DILocation(line: 2049, column: 10, scope: !8002)
!8017 = !DILocalVariable(name: "cdl", scope: !8002, file: !3, line: 2050, type: !2432)
!8018 = !DILocation(line: 2050, column: 19, scope: !8002)
!8019 = !DILocalVariable(name: "a", scope: !8002, file: !3, line: 2051, type: !178)
!8020 = !DILocation(line: 2051, column: 6, scope: !8002)
!8021 = !DILocalVariable(name: "flag", scope: !8002, file: !3, line: 2052, type: !178)
!8022 = !DILocation(line: 2052, column: 6, scope: !8002)
!8023 = !DILocalVariable(name: "index", scope: !8002, file: !3, line: 2053, type: !178)
!8024 = !DILocation(line: 2053, column: 6, scope: !8002)
!8025 = !DILocalVariable(name: "fileload", scope: !8002, file: !3, line: 2056, type: !178)
!8026 = !DILocation(line: 2056, column: 6, scope: !8002)
!8027 = !DILocalVariable(name: "nomaterialslots", scope: !8002, file: !3, line: 2062, type: !178)
!8028 = !DILocation(line: 2062, column: 6, scope: !8002)
!8029 = !DILocalVariable(name: "nowarning", scope: !8002, file: !3, line: 2065, type: !178)
!8030 = !DILocation(line: 2065, column: 6, scope: !8002)
!8031 = !DILocation(line: 2074, column: 12, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 2074, column: 2)
!8033 = !DILocation(line: 2074, column: 18, scope: !8032)
!8034 = !DILocation(line: 2074, column: 23, scope: !8032)
!8035 = !DILocation(line: 2074, column: 10, scope: !8032)
!8036 = !DILocation(line: 2074, column: 7, scope: !8032)
!8037 = !DILocation(line: 2074, column: 30, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 2074, column: 2)
!8039 = !DILocation(line: 2074, column: 2, scope: !8032)
!8040 = !DILocation(line: 2075, column: 7, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 2075, column: 7)
!8042 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 2074, column: 52)
!8043 = !DILocation(line: 2075, column: 11, scope: !8041)
!8044 = !DILocation(line: 2075, column: 14, scope: !8041)
!8045 = !DILocation(line: 2075, column: 7, scope: !8042)
!8046 = !DILocation(line: 2075, column: 19, scope: !8041)
!8047 = !DILocation(line: 2078, column: 46, scope: !8042)
!8048 = !DILocation(line: 2078, column: 50, scope: !8042)
!8049 = !DILocation(line: 2078, column: 11, scope: !8042)
!8050 = !DILocation(line: 2078, column: 9, scope: !8042)
!8051 = !DILocation(line: 2079, column: 10, scope: !8042)
!8052 = !DILocation(line: 2079, column: 16, scope: !8042)
!8053 = !DILocation(line: 2079, column: 9, scope: !8042)
!8054 = !DILocation(line: 2079, column: 33, scope: !8042)
!8055 = !DILocation(line: 2079, column: 37, scope: !8042)
!8056 = !DILocation(line: 2079, column: 43, scope: !8042)
!8057 = !DILocation(line: 2079, column: 50, scope: !8042)
!8058 = !DILocation(line: 2079, column: 7, scope: !8042)
!8059 = !DILocation(line: 2080, column: 8, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 2080, column: 7)
!8061 = !DILocation(line: 2080, column: 7, scope: !8042)
!8062 = !DILocation(line: 2080, column: 13, scope: !8060)
!8063 = !DILocation(line: 2082, column: 22, scope: !8042)
!8064 = !DILocation(line: 2082, column: 26, scope: !8042)
!8065 = !DILocation(line: 2082, column: 33, scope: !8042)
!8066 = !DILocation(line: 2082, column: 19, scope: !8042)
!8067 = !DILocation(line: 2085, column: 10, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 2085, column: 3)
!8069 = !DILocation(line: 2085, column: 20, scope: !8068)
!8070 = !DILocation(line: 2085, column: 24, scope: !8068)
!8071 = !DILocation(line: 2085, column: 18, scope: !8068)
!8072 = !DILocation(line: 2085, column: 8, scope: !8068)
!8073 = !DILocation(line: 2085, column: 31, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2085, column: 3)
!8075 = !DILocation(line: 2085, column: 35, scope: !8074)
!8076 = !DILocation(line: 2085, column: 39, scope: !8074)
!8077 = !DILocation(line: 2085, column: 33, scope: !8074)
!8078 = !DILocation(line: 2085, column: 3, scope: !8068)
!8079 = !DILocation(line: 2087, column: 20, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2085, column: 59)
!8081 = !DILocation(line: 2087, column: 25, scope: !8080)
!8082 = !DILocation(line: 2087, column: 10, scope: !8080)
!8083 = !DILocation(line: 2087, column: 33, scope: !8080)
!8084 = !DILocation(line: 2087, column: 31, scope: !8080)
!8085 = !DILocation(line: 2087, column: 7, scope: !8080)
!8086 = !DILocation(line: 2090, column: 8, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 2090, column: 8)
!8088 = !DILocation(line: 2090, column: 8, scope: !8080)
!8089 = !DILocation(line: 2091, column: 5, scope: !8087)
!8090 = !DILocation(line: 2091, column: 9, scope: !8087)
!8091 = !DILocation(line: 2091, column: 14, scope: !8087)
!8092 = !DILocation(line: 2093, column: 10, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 2093, column: 9)
!8094 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 2092, column: 9)
!8095 = !DILocation(line: 2093, column: 14, scope: !8093)
!8096 = !DILocation(line: 2093, column: 19, scope: !8093)
!8097 = !DILocation(line: 2093, column: 9, scope: !8094)
!8098 = !DILocation(line: 2093, column: 36, scope: !8093)
!8099 = !DILocation(line: 2094, column: 10, scope: !8093)
!8100 = !DILocation(line: 2094, column: 14, scope: !8093)
!8101 = !DILocation(line: 2094, column: 19, scope: !8093)
!8102 = !DILocation(line: 2098, column: 8, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 2098, column: 8)
!8104 = !DILocation(line: 2098, column: 8, scope: !8080)
!8105 = !DILocation(line: 2099, column: 29, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 2098, column: 25)
!8107 = !DILocation(line: 2099, column: 12, scope: !8106)
!8108 = !DILocation(line: 2099, column: 10, scope: !8106)
!8109 = !DILocation(line: 2102, column: 33, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 2102, column: 9)
!8111 = !DILocation(line: 2102, column: 9, scope: !8110)
!8112 = !DILocation(line: 2102, column: 9, scope: !8106)
!8113 = !DILocation(line: 2103, column: 43, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 2102, column: 40)
!8115 = !DILocation(line: 2103, column: 49, scope: !8114)
!8116 = !DILocation(line: 2103, column: 53, scope: !8114)
!8117 = !DILocation(line: 2103, column: 57, scope: !8114)
!8118 = !DILocation(line: 2103, column: 19, scope: !8114)
!8119 = !DILocation(line: 2103, column: 6, scope: !8114)
!8120 = !DILocation(line: 2103, column: 10, scope: !8114)
!8121 = !DILocation(line: 2103, column: 17, scope: !8114)
!8122 = !DILocation(line: 2104, column: 5, scope: !8114)
!8123 = !DILocation(line: 2107, column: 6, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 2106, column: 10)
!8125 = !DILocation(line: 2107, column: 10, scope: !8124)
!8126 = !DILocation(line: 2107, column: 17, scope: !8124)
!8127 = !DILocation(line: 2109, column: 4, scope: !8106)
!8128 = !DILocation(line: 2110, column: 13, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 2110, column: 13)
!8130 = !DILocation(line: 2110, column: 17, scope: !8129)
!8131 = !DILocation(line: 2110, column: 26, scope: !8129)
!8132 = !DILocation(line: 2110, column: 30, scope: !8129)
!8133 = !DILocation(line: 2110, column: 24, scope: !8129)
!8134 = !DILocation(line: 2110, column: 13, scope: !8103)
!8135 = !DILocation(line: 2111, column: 10, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 2110, column: 38)
!8137 = !DILocation(line: 2111, column: 14, scope: !8136)
!8138 = !DILocation(line: 2111, column: 18, scope: !8136)
!8139 = !DILocation(line: 2111, column: 22, scope: !8136)
!8140 = !DILocation(line: 2111, column: 8, scope: !8136)
!8141 = !DILocation(line: 2114, column: 10, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 2114, column: 9)
!8143 = !DILocation(line: 2114, column: 9, scope: !8136)
!8144 = !DILocation(line: 2116, column: 30, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 2114, column: 14)
!8146 = !DILocation(line: 2116, column: 13, scope: !8145)
!8147 = !DILocation(line: 2116, column: 11, scope: !8145)
!8148 = !DILocation(line: 2119, column: 34, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 2119, column: 10)
!8150 = !DILocation(line: 2119, column: 10, scope: !8149)
!8151 = !DILocation(line: 2119, column: 10, scope: !8145)
!8152 = !DILocation(line: 2120, column: 44, scope: !8149)
!8153 = !DILocation(line: 2120, column: 50, scope: !8149)
!8154 = !DILocation(line: 2120, column: 54, scope: !8149)
!8155 = !DILocation(line: 2120, column: 58, scope: !8149)
!8156 = !DILocation(line: 2120, column: 20, scope: !8149)
!8157 = !DILocation(line: 2120, column: 7, scope: !8149)
!8158 = !DILocation(line: 2120, column: 11, scope: !8149)
!8159 = !DILocation(line: 2120, column: 18, scope: !8149)
!8160 = !DILocation(line: 2122, column: 6, scope: !8145)
!8161 = !DILocation(line: 2129, column: 14, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 2129, column: 14)
!8163 = !DILocation(line: 2129, column: 18, scope: !8162)
!8164 = !DILocation(line: 2129, column: 21, scope: !8162)
!8165 = !DILocation(line: 2129, column: 14, scope: !8142)
!8166 = !DILocation(line: 2130, column: 6, scope: !8162)
!8167 = !DILocation(line: 2133, column: 14, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 2133, column: 14)
!8169 = !DILocation(line: 2133, column: 18, scope: !8168)
!8170 = !DILocation(line: 2133, column: 23, scope: !8168)
!8171 = !DILocation(line: 2133, column: 28, scope: !8168)
!8172 = !DILocation(line: 2133, column: 14, scope: !8162)
!8173 = !DILocation(line: 2134, column: 6, scope: !8168)
!8174 = !DILocation(line: 2138, column: 30, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 2137, column: 10)
!8176 = !DILocation(line: 2138, column: 36, scope: !8175)
!8177 = !DILocation(line: 2138, column: 35, scope: !8175)
!8178 = !DILocation(line: 2138, column: 13, scope: !8175)
!8179 = !DILocation(line: 2138, column: 11, scope: !8175)
!8180 = !DILocation(line: 2141, column: 10, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2141, column: 10)
!8182 = !DILocation(line: 2141, column: 14, scope: !8181)
!8183 = !DILocation(line: 2141, column: 19, scope: !8181)
!8184 = !DILocation(line: 2141, column: 24, scope: !8181)
!8185 = !DILocation(line: 2141, column: 10, scope: !8175)
!8186 = !DILocation(line: 2142, column: 24, scope: !8181)
!8187 = !DILocation(line: 2142, column: 23, scope: !8181)
!8188 = !DILocation(line: 2142, column: 7, scope: !8181)
!8189 = !DILocation(line: 2142, column: 11, scope: !8181)
!8190 = !DILocation(line: 2142, column: 16, scope: !8181)
!8191 = !DILocation(line: 2142, column: 21, scope: !8181)
!8192 = !DILocation(line: 2145, column: 15, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 2145, column: 15)
!8194 = !DILocation(line: 2145, column: 19, scope: !8193)
!8195 = !DILocation(line: 2145, column: 24, scope: !8193)
!8196 = !DILocation(line: 2145, column: 33, scope: !8193)
!8197 = !DILocation(line: 2145, column: 32, scope: !8193)
!8198 = !DILocation(line: 2145, column: 29, scope: !8193)
!8199 = !DILocation(line: 2145, column: 15, scope: !8181)
!8200 = !DILocation(line: 2146, column: 7, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 2145, column: 39)
!8202 = !DILocation(line: 2146, column: 11, scope: !8201)
!8203 = !DILocation(line: 2146, column: 16, scope: !8201)
!8204 = !DILocation(line: 2146, column: 21, scope: !8201)
!8205 = !DILocation(line: 2147, column: 7, scope: !8201)
!8206 = !DILocation(line: 2152, column: 24, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 2151, column: 11)
!8208 = !DILocation(line: 2152, column: 23, scope: !8207)
!8209 = !DILocation(line: 2152, column: 7, scope: !8207)
!8210 = !DILocation(line: 2152, column: 11, scope: !8207)
!8211 = !DILocation(line: 2152, column: 16, scope: !8207)
!8212 = !DILocation(line: 2152, column: 21, scope: !8207)
!8213 = !DILocation(line: 2158, column: 12, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 2158, column: 11)
!8215 = !DILocation(line: 2158, column: 11, scope: !8207)
!8216 = !DILocation(line: 2159, column: 30, scope: !8214)
!8217 = !DILocation(line: 2159, column: 34, scope: !8214)
!8218 = !DILocation(line: 2159, column: 38, scope: !8214)
!8219 = !DILocation(line: 2159, column: 8, scope: !8214)
!8220 = !DILocation(line: 2162, column: 4, scope: !8136)
!8221 = !DILocation(line: 2164, column: 5, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 2163, column: 9)
!8223 = !DILocation(line: 2166, column: 3, scope: !8080)
!8224 = !DILocation(line: 2085, column: 49, scope: !8074)
!8225 = !DILocation(line: 2085, column: 55, scope: !8074)
!8226 = !DILocation(line: 2085, column: 3, scope: !8074)
!8227 = distinct !{!8227, !8078, !8228}
!8228 = !DILocation(line: 2166, column: 3, scope: !8068)
!8229 = !DILocation(line: 2170, column: 7, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 2170, column: 7)
!8231 = !DILocation(line: 2170, column: 7, scope: !8042)
!8232 = !DILocation(line: 2171, column: 8, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 2171, column: 8)
!8234 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 2170, column: 24)
!8235 = !DILocation(line: 2171, column: 12, scope: !8233)
!8236 = !DILocation(line: 2171, column: 19, scope: !8233)
!8237 = !DILocation(line: 2171, column: 8, scope: !8234)
!8238 = !DILocation(line: 2172, column: 12, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 2172, column: 5)
!8240 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 2171, column: 24)
!8241 = !DILocation(line: 2172, column: 22, scope: !8239)
!8242 = !DILocation(line: 2172, column: 26, scope: !8239)
!8243 = !DILocation(line: 2172, column: 20, scope: !8239)
!8244 = !DILocation(line: 2172, column: 10, scope: !8239)
!8245 = !DILocation(line: 2172, column: 33, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 2172, column: 5)
!8247 = !DILocation(line: 2172, column: 37, scope: !8246)
!8248 = !DILocation(line: 2172, column: 41, scope: !8246)
!8249 = !DILocation(line: 2172, column: 35, scope: !8246)
!8250 = !DILocation(line: 2172, column: 5, scope: !8239)
!8251 = !DILocation(line: 2173, column: 10, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 2173, column: 10)
!8253 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 2172, column: 61)
!8254 = !DILocation(line: 2173, column: 14, scope: !8252)
!8255 = !DILocation(line: 2173, column: 21, scope: !8252)
!8256 = !DILocation(line: 2173, column: 10, scope: !8253)
!8257 = !DILocation(line: 2175, column: 23, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 2173, column: 28)
!8259 = !DILocation(line: 2175, column: 28, scope: !8258)
!8260 = !DILocation(line: 2175, column: 13, scope: !8258)
!8261 = !DILocation(line: 2175, column: 36, scope: !8258)
!8262 = !DILocation(line: 2175, column: 34, scope: !8258)
!8263 = !DILocation(line: 2175, column: 10, scope: !8258)
!8264 = !DILocation(line: 2176, column: 44, scope: !8258)
!8265 = !DILocation(line: 2176, column: 50, scope: !8258)
!8266 = !DILocation(line: 2176, column: 54, scope: !8258)
!8267 = !DILocation(line: 2176, column: 75, scope: !8258)
!8268 = !DILocation(line: 2176, column: 58, scope: !8258)
!8269 = !DILocation(line: 2176, column: 20, scope: !8258)
!8270 = !DILocation(line: 2176, column: 7, scope: !8258)
!8271 = !DILocation(line: 2176, column: 11, scope: !8258)
!8272 = !DILocation(line: 2176, column: 18, scope: !8258)
!8273 = !DILocation(line: 2177, column: 6, scope: !8258)
!8274 = !DILocation(line: 2178, column: 5, scope: !8253)
!8275 = !DILocation(line: 2172, column: 51, scope: !8246)
!8276 = !DILocation(line: 2172, column: 57, scope: !8246)
!8277 = !DILocation(line: 2172, column: 5, scope: !8246)
!8278 = distinct !{!8278, !8250, !8279}
!8279 = !DILocation(line: 2178, column: 5, scope: !8239)
!8280 = !DILocation(line: 2179, column: 4, scope: !8240)
!8281 = !DILocation(line: 2181, column: 12, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 2181, column: 5)
!8283 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 2180, column: 9)
!8284 = !DILocation(line: 2181, column: 22, scope: !8282)
!8285 = !DILocation(line: 2181, column: 26, scope: !8282)
!8286 = !DILocation(line: 2181, column: 20, scope: !8282)
!8287 = !DILocation(line: 2181, column: 10, scope: !8282)
!8288 = !DILocation(line: 2181, column: 33, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2181, column: 5)
!8290 = !DILocation(line: 2181, column: 37, scope: !8289)
!8291 = !DILocation(line: 2181, column: 41, scope: !8289)
!8292 = !DILocation(line: 2181, column: 35, scope: !8289)
!8293 = !DILocation(line: 2181, column: 5, scope: !8282)
!8294 = !DILocation(line: 2182, column: 6, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8289, file: !3, line: 2181, column: 61)
!8296 = !DILocation(line: 2182, column: 10, scope: !8295)
!8297 = !DILocation(line: 2182, column: 17, scope: !8295)
!8298 = !DILocation(line: 2183, column: 5, scope: !8295)
!8299 = !DILocation(line: 2181, column: 51, scope: !8289)
!8300 = !DILocation(line: 2181, column: 57, scope: !8289)
!8301 = !DILocation(line: 2181, column: 5, scope: !8289)
!8302 = distinct !{!8302, !8293, !8303}
!8303 = !DILocation(line: 2183, column: 5, scope: !8282)
!8304 = !DILocation(line: 2185, column: 3, scope: !8234)
!8305 = !DILocation(line: 2187, column: 2, scope: !8042)
!8306 = !DILocation(line: 2074, column: 39, scope: !8038)
!8307 = !DILocation(line: 2074, column: 43, scope: !8038)
!8308 = !DILocation(line: 2074, column: 46, scope: !8038)
!8309 = !DILocation(line: 2074, column: 37, scope: !8038)
!8310 = !DILocation(line: 2074, column: 2, scope: !8038)
!8311 = distinct !{!8311, !8039, !8312}
!8312 = !DILocation(line: 2187, column: 2, scope: !8032)
!8313 = !DILocation(line: 2193, column: 12, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 2193, column: 2)
!8315 = !DILocation(line: 2193, column: 18, scope: !8314)
!8316 = !DILocation(line: 2193, column: 22, scope: !8314)
!8317 = !DILocation(line: 2193, column: 10, scope: !8314)
!8318 = !DILocation(line: 2193, column: 31, scope: !8314)
!8319 = !DILocation(line: 2193, column: 7, scope: !8314)
!8320 = !DILocation(line: 2193, column: 36, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 2193, column: 2)
!8322 = !DILocation(line: 2193, column: 2, scope: !8314)
!8323 = !DILocation(line: 2194, column: 7, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 2194, column: 7)
!8325 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 2193, column: 63)
!8326 = !DILocation(line: 2194, column: 11, scope: !8324)
!8327 = !DILocation(line: 2194, column: 14, scope: !8324)
!8328 = !DILocation(line: 2194, column: 7, scope: !8325)
!8329 = !DILocation(line: 2194, column: 19, scope: !8324)
!8330 = !DILocation(line: 2197, column: 7, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 2197, column: 7)
!8332 = !DILocation(line: 2197, column: 11, scope: !8331)
!8333 = !DILocation(line: 2197, column: 16, scope: !8331)
!8334 = !DILocation(line: 2197, column: 21, scope: !8331)
!8335 = !DILocation(line: 2197, column: 7, scope: !8325)
!8336 = !DILocation(line: 2198, column: 4, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 2197, column: 42)
!8338 = !DILocation(line: 2198, column: 8, scope: !8337)
!8339 = !DILocation(line: 2198, column: 13, scope: !8337)
!8340 = !DILocation(line: 2198, column: 18, scope: !8337)
!8341 = !DILocation(line: 2199, column: 8, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 2199, column: 8)
!8343 = !DILocation(line: 2199, column: 8, scope: !8337)
!8344 = !DILocation(line: 2200, column: 51, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 2199, column: 18)
!8346 = !DILocation(line: 2200, column: 55, scope: !8345)
!8347 = !DILocation(line: 2200, column: 58, scope: !8345)
!8348 = !DILocation(line: 2200, column: 63, scope: !8345)
!8349 = !DILocation(line: 2200, column: 5, scope: !8345)
!8350 = !DILocation(line: 2201, column: 15, scope: !8345)
!8351 = !DILocation(line: 2202, column: 4, scope: !8345)
!8352 = !DILocation(line: 2204, column: 27, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 2203, column: 9)
!8354 = !DILocation(line: 2204, column: 33, scope: !8353)
!8355 = !DILocation(line: 2204, column: 5, scope: !8353)
!8356 = !DILocation(line: 2206, column: 4, scope: !8337)
!8357 = !DILocation(line: 2211, column: 12, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 2211, column: 12)
!8359 = !DILocation(line: 2211, column: 16, scope: !8358)
!8360 = !DILocation(line: 2211, column: 21, scope: !8358)
!8361 = !DILocation(line: 2211, column: 26, scope: !8358)
!8362 = !DILocation(line: 2211, column: 12, scope: !8331)
!8363 = !DILocation(line: 2212, column: 21, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 2211, column: 31)
!8365 = !DILocation(line: 2212, column: 27, scope: !8364)
!8366 = !DILocation(line: 2212, column: 31, scope: !8364)
!8367 = !DILocation(line: 2212, column: 36, scope: !8364)
!8368 = !DILocation(line: 2212, column: 25, scope: !8364)
!8369 = !DILocation(line: 2212, column: 4, scope: !8364)
!8370 = !DILocation(line: 2216, column: 8, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 2216, column: 8)
!8372 = !DILocation(line: 2216, column: 8, scope: !8364)
!8373 = !DILocation(line: 2217, column: 15, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 2217, column: 5)
!8375 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 2216, column: 18)
!8376 = !DILocation(line: 2217, column: 21, scope: !8374)
!8377 = !DILocation(line: 2217, column: 26, scope: !8374)
!8378 = !DILocation(line: 2217, column: 13, scope: !8374)
!8379 = !DILocation(line: 2217, column: 10, scope: !8374)
!8380 = !DILocation(line: 2217, column: 33, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 2217, column: 5)
!8382 = !DILocation(line: 2217, column: 5, scope: !8374)
!8383 = !DILocation(line: 2219, column: 13, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 2219, column: 6)
!8385 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 2217, column: 55)
!8386 = !DILocation(line: 2219, column: 11, scope: !8384)
!8387 = !DILocation(line: 2219, column: 18, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 2219, column: 6)
!8389 = !DILocation(line: 2219, column: 22, scope: !8388)
!8390 = !DILocation(line: 2219, column: 26, scope: !8388)
!8391 = !DILocation(line: 2219, column: 20, scope: !8388)
!8392 = !DILocation(line: 2219, column: 6, scope: !8384)
!8393 = !DILocation(line: 2220, column: 11, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2220, column: 11)
!8395 = !DILocation(line: 2220, column: 15, scope: !8394)
!8396 = !DILocation(line: 2220, column: 19, scope: !8394)
!8397 = !DILocation(line: 2220, column: 25, scope: !8394)
!8398 = !DILocation(line: 2220, column: 22, scope: !8394)
!8399 = !DILocation(line: 2220, column: 11, scope: !8388)
!8400 = !DILocation(line: 2220, column: 29, scope: !8394)
!8401 = !DILocation(line: 2219, column: 35, scope: !8388)
!8402 = !DILocation(line: 2219, column: 6, scope: !8388)
!8403 = distinct !{!8403, !8392, !8404}
!8404 = !DILocation(line: 2220, column: 29, scope: !8384)
!8405 = !DILocation(line: 2223, column: 10, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 2223, column: 10)
!8407 = !DILocation(line: 2223, column: 15, scope: !8406)
!8408 = !DILocation(line: 2223, column: 19, scope: !8406)
!8409 = !DILocation(line: 2223, column: 12, scope: !8406)
!8410 = !DILocation(line: 2223, column: 10, scope: !8385)
!8411 = !DILocation(line: 2223, column: 27, scope: !8406)
!8412 = !DILocation(line: 2226, column: 49, scope: !8385)
!8413 = !DILocation(line: 2226, column: 53, scope: !8385)
!8414 = !DILocation(line: 2226, column: 14, scope: !8385)
!8415 = !DILocation(line: 2226, column: 12, scope: !8385)
!8416 = !DILocation(line: 2227, column: 13, scope: !8385)
!8417 = !DILocation(line: 2227, column: 19, scope: !8385)
!8418 = !DILocation(line: 2227, column: 12, scope: !8385)
!8419 = !DILocation(line: 2227, column: 36, scope: !8385)
!8420 = !DILocation(line: 2227, column: 40, scope: !8385)
!8421 = !DILocation(line: 2227, column: 46, scope: !8385)
!8422 = !DILocation(line: 2227, column: 53, scope: !8385)
!8423 = !DILocation(line: 2227, column: 10, scope: !8385)
!8424 = !DILocation(line: 2228, column: 11, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 2228, column: 10)
!8426 = !DILocation(line: 2228, column: 10, scope: !8385)
!8427 = !DILocation(line: 2228, column: 16, scope: !8425)
!8428 = !DILocation(line: 2231, column: 13, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 2231, column: 6)
!8430 = !DILocation(line: 2231, column: 23, scope: !8429)
!8431 = !DILocation(line: 2231, column: 27, scope: !8429)
!8432 = !DILocation(line: 2231, column: 21, scope: !8429)
!8433 = !DILocation(line: 2231, column: 11, scope: !8429)
!8434 = !DILocation(line: 2231, column: 34, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2231, column: 6)
!8436 = !DILocation(line: 2231, column: 38, scope: !8435)
!8437 = !DILocation(line: 2231, column: 42, scope: !8435)
!8438 = !DILocation(line: 2231, column: 36, scope: !8435)
!8439 = !DILocation(line: 2231, column: 6, scope: !8429)
!8440 = !DILocation(line: 2232, column: 11, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 2232, column: 11)
!8442 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 2231, column: 62)
!8443 = !DILocation(line: 2232, column: 15, scope: !8441)
!8444 = !DILocation(line: 2232, column: 19, scope: !8441)
!8445 = !DILocation(line: 2232, column: 23, scope: !8441)
!8446 = !DILocation(line: 2232, column: 34, scope: !8441)
!8447 = !DILocation(line: 2232, column: 31, scope: !8441)
!8448 = !DILocation(line: 2232, column: 11, scope: !8442)
!8449 = !DILocation(line: 2234, column: 24, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 2232, column: 38)
!8451 = !DILocation(line: 2234, column: 29, scope: !8450)
!8452 = !DILocation(line: 2234, column: 14, scope: !8450)
!8453 = !DILocation(line: 2234, column: 37, scope: !8450)
!8454 = !DILocation(line: 2234, column: 35, scope: !8450)
!8455 = !DILocation(line: 2234, column: 11, scope: !8450)
!8456 = !DILocation(line: 2235, column: 8, scope: !8450)
!8457 = !DILocation(line: 2235, column: 12, scope: !8450)
!8458 = !DILocation(line: 2235, column: 17, scope: !8450)
!8459 = !DILocation(line: 2236, column: 7, scope: !8450)
!8460 = !DILocation(line: 2237, column: 6, scope: !8442)
!8461 = !DILocation(line: 2231, column: 52, scope: !8435)
!8462 = !DILocation(line: 2231, column: 58, scope: !8435)
!8463 = !DILocation(line: 2231, column: 6, scope: !8435)
!8464 = distinct !{!8464, !8439, !8465}
!8465 = !DILocation(line: 2237, column: 6, scope: !8429)
!8466 = !DILocation(line: 2238, column: 5, scope: !8385)
!8467 = !DILocation(line: 2217, column: 42, scope: !8381)
!8468 = !DILocation(line: 2217, column: 46, scope: !8381)
!8469 = !DILocation(line: 2217, column: 49, scope: !8381)
!8470 = !DILocation(line: 2217, column: 40, scope: !8381)
!8471 = !DILocation(line: 2217, column: 5, scope: !8381)
!8472 = distinct !{!8472, !8382, !8473}
!8473 = !DILocation(line: 2238, column: 5, scope: !8374)
!8474 = !DILocation(line: 2239, column: 4, scope: !8375)
!8475 = !DILocation(line: 2240, column: 3, scope: !8364)
!8476 = !DILocation(line: 2244, column: 8, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 2244, column: 8)
!8478 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 2243, column: 8)
!8479 = !DILocation(line: 2244, column: 8, scope: !8478)
!8480 = !DILocation(line: 2245, column: 5, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 2244, column: 18)
!8482 = !DILocation(line: 2245, column: 9, scope: !8481)
!8483 = !DILocation(line: 2245, column: 14, scope: !8481)
!8484 = !DILocation(line: 2245, column: 19, scope: !8481)
!8485 = !DILocation(line: 2246, column: 4, scope: !8481)
!8486 = !DILocation(line: 2248, column: 2, scope: !8325)
!8487 = !DILocation(line: 2193, column: 45, scope: !8321)
!8488 = !DILocation(line: 2193, column: 49, scope: !8321)
!8489 = !DILocation(line: 2193, column: 52, scope: !8321)
!8490 = !DILocation(line: 2193, column: 43, scope: !8321)
!8491 = !DILocation(line: 2193, column: 59, scope: !8321)
!8492 = !DILocation(line: 2193, column: 2, scope: !8321)
!8493 = distinct !{!8493, !8322, !8494}
!8494 = !DILocation(line: 2248, column: 2, scope: !8314)
!8495 = !DILocation(line: 2250, column: 9, scope: !8002)
!8496 = !DILocation(line: 2250, column: 2, scope: !8002)
!8497 = distinct !DISubprogram(name: "encode_tfaceflag", scope: !3, file: !3, line: 1758, type: !8498, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!8498 = !DISubroutineType(types: !8499)
!8499 = !{!178, !2664, !178}
!8500 = !DILocalVariable(name: "tf", arg: 1, scope: !8497, file: !3, line: 1758, type: !2664)
!8501 = !DILocation(line: 1758, column: 37, scope: !8497)
!8502 = !DILocalVariable(name: "convertall", arg: 2, scope: !8497, file: !3, line: 1758, type: !178)
!8503 = !DILocation(line: 1758, column: 45, scope: !8497)
!8504 = !DILocalVariable(name: "flag", scope: !8497, file: !3, line: 1761, type: !178)
!8505 = !DILocation(line: 1761, column: 6, scope: !8497)
!8506 = !DILocation(line: 1761, column: 13, scope: !8497)
!8507 = !DILocation(line: 1761, column: 17, scope: !8497)
!8508 = !DILocation(line: 1764, column: 7, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 1764, column: 6)
!8510 = !DILocation(line: 1764, column: 6, scope: !8497)
!8511 = !DILocation(line: 1765, column: 8, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 1764, column: 19)
!8513 = !DILocation(line: 1766, column: 2, scope: !8512)
!8514 = !DILocation(line: 1769, column: 7, scope: !8497)
!8515 = !DILocation(line: 1770, column: 7, scope: !8497)
!8516 = !DILocation(line: 1771, column: 7, scope: !8497)
!8517 = !DILocation(line: 1772, column: 7, scope: !8497)
!8518 = !DILocation(line: 1775, column: 7, scope: !8497)
!8519 = !DILocation(line: 1778, column: 10, scope: !8497)
!8520 = !DILocation(line: 1778, column: 14, scope: !8497)
!8521 = !DILocation(line: 1778, column: 21, scope: !8497)
!8522 = !DILocation(line: 1778, column: 7, scope: !8497)
!8523 = !DILocation(line: 1781, column: 9, scope: !8497)
!8524 = !DILocation(line: 1781, column: 14, scope: !8497)
!8525 = !DILocation(line: 1781, column: 2, scope: !8497)
!8526 = distinct !DISubprogram(name: "check_tfaceneedmaterial", scope: !3, file: !3, line: 1822, type: !8527, scopeLine: 1823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!8527 = !DISubroutineType(types: !8528)
!8528 = !{!178, !178}
!8529 = !DILocalVariable(name: "flag", arg: 1, scope: !8526, file: !3, line: 1822, type: !178)
!8530 = !DILocation(line: 1822, column: 40, scope: !8526)
!8531 = !DILocation(line: 1828, column: 7, scope: !8526)
!8532 = !DILocation(line: 1831, column: 7, scope: !8526)
!8533 = !DILocation(line: 1832, column: 7, scope: !8526)
!8534 = !DILocation(line: 1833, column: 7, scope: !8526)
!8535 = !DILocation(line: 1836, column: 7, scope: !8526)
!8536 = !DILocation(line: 1839, column: 7, scope: !8526)
!8537 = !DILocation(line: 1841, column: 7, scope: !8526)
!8538 = !DILocation(line: 1844, column: 6, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1844, column: 6)
!8540 = !DILocation(line: 1844, column: 11, scope: !8539)
!8541 = !DILocation(line: 1844, column: 6, scope: !8526)
!8542 = !DILocation(line: 1845, column: 3, scope: !8539)
!8543 = !DILocation(line: 1848, column: 3, scope: !8539)
!8544 = !DILocation(line: 1849, column: 1, scope: !8526)
!8545 = distinct !DISubprogram(name: "convert_tfacenomaterial", scope: !3, file: !3, line: 1913, type: !8546, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{!176, !3134, !215, !2664, !178}
!8548 = !DILocalVariable(name: "main", arg: 1, scope: !8545, file: !3, line: 1913, type: !3134)
!8549 = !DILocation(line: 1913, column: 44, scope: !8545)
!8550 = !DILocalVariable(name: "me", arg: 2, scope: !8545, file: !3, line: 1913, type: !215)
!8551 = !DILocation(line: 1913, column: 56, scope: !8545)
!8552 = !DILocalVariable(name: "tf", arg: 3, scope: !8545, file: !3, line: 1913, type: !2664)
!8553 = !DILocation(line: 1913, column: 68, scope: !8545)
!8554 = !DILocalVariable(name: "flag", arg: 4, scope: !8545, file: !3, line: 1913, type: !178)
!8555 = !DILocation(line: 1913, column: 76, scope: !8545)
!8556 = !DILocalVariable(name: "ma", scope: !8545, file: !3, line: 1915, type: !2660)
!8557 = !DILocation(line: 1915, column: 12, scope: !8545)
!8558 = !DILocalVariable(name: "idname", scope: !8545, file: !3, line: 1916, type: !172)
!8559 = !DILocation(line: 1916, column: 7, scope: !8545)
!8560 = !DILocalVariable(name: "mat_nr", scope: !8545, file: !3, line: 1917, type: !176)
!8561 = !DILocation(line: 1917, column: 8, scope: !8545)
!8562 = !DILocation(line: 1920, column: 15, scope: !8545)
!8563 = !DILocation(line: 1920, column: 79, scope: !8545)
!8564 = !DILocation(line: 1920, column: 61, scope: !8545)
!8565 = !DILocation(line: 1920, column: 86, scope: !8545)
!8566 = !DILocation(line: 1920, column: 2, scope: !8545)
!8567 = !DILocation(line: 1922, column: 28, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 1922, column: 6)
!8569 = !DILocation(line: 1922, column: 34, scope: !8568)
!8570 = !DILocation(line: 1922, column: 39, scope: !8568)
!8571 = !DILocation(line: 1922, column: 46, scope: !8568)
!8572 = !DILocation(line: 1922, column: 12, scope: !8568)
!8573 = !DILocation(line: 1922, column: 10, scope: !8568)
!8574 = !DILocation(line: 1922, column: 6, scope: !8545)
!8575 = !DILocation(line: 1923, column: 35, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 1922, column: 77)
!8577 = !DILocation(line: 1923, column: 39, scope: !8576)
!8578 = !DILocation(line: 1923, column: 12, scope: !8576)
!8579 = !DILocation(line: 1923, column: 10, scope: !8576)
!8580 = !DILocation(line: 1925, column: 7, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 1925, column: 7)
!8582 = !DILocation(line: 1925, column: 14, scope: !8581)
!8583 = !DILocation(line: 1925, column: 7, scope: !8576)
!8584 = !DILocation(line: 1925, column: 47, scope: !8581)
!8585 = !DILocation(line: 1925, column: 51, scope: !8581)
!8586 = !DILocation(line: 1925, column: 30, scope: !8581)
!8587 = !DILocation(line: 1925, column: 28, scope: !8581)
!8588 = !DILocation(line: 1925, column: 21, scope: !8581)
!8589 = !DILocation(line: 1928, column: 25, scope: !8576)
!8590 = !DILocation(line: 1928, column: 29, scope: !8576)
!8591 = !DILocation(line: 1928, column: 33, scope: !8576)
!8592 = !DILocation(line: 1928, column: 3, scope: !8576)
!8593 = !DILocation(line: 1929, column: 2, scope: !8576)
!8594 = !DILocation(line: 1932, column: 25, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 1931, column: 7)
!8596 = !DILocation(line: 1932, column: 31, scope: !8595)
!8597 = !DILocation(line: 1932, column: 38, scope: !8595)
!8598 = !DILocation(line: 1932, column: 8, scope: !8595)
!8599 = !DILocation(line: 1932, column: 6, scope: !8595)
!8600 = !DILocation(line: 1934, column: 7, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 1934, column: 7)
!8602 = !DILocation(line: 1934, column: 7, scope: !8595)
!8603 = !DILocation(line: 1935, column: 58, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1934, column: 11)
!8605 = !DILocation(line: 1935, column: 65, scope: !8604)
!8606 = !DILocation(line: 1935, column: 4, scope: !8604)
!8607 = !DILocation(line: 1936, column: 30, scope: !8604)
!8608 = !DILocation(line: 1936, column: 34, scope: !8604)
!8609 = !DILocation(line: 1936, column: 13, scope: !8604)
!8610 = !DILocation(line: 1936, column: 11, scope: !8604)
!8611 = !DILocation(line: 1939, column: 26, scope: !8604)
!8612 = !DILocation(line: 1939, column: 30, scope: !8604)
!8613 = !DILocation(line: 1939, column: 34, scope: !8604)
!8614 = !DILocation(line: 1939, column: 4, scope: !8604)
!8615 = !DILocation(line: 1941, column: 21, scope: !8604)
!8616 = !DILocation(line: 1941, column: 25, scope: !8604)
!8617 = !DILocation(line: 1941, column: 4, scope: !8604)
!8618 = !DILocation(line: 1945, column: 21, scope: !8604)
!8619 = !DILocation(line: 1945, column: 20, scope: !8604)
!8620 = !DILocation(line: 1945, column: 4, scope: !8604)
!8621 = !DILocation(line: 1945, column: 8, scope: !8604)
!8622 = !DILocation(line: 1945, column: 13, scope: !8604)
!8623 = !DILocation(line: 1945, column: 18, scope: !8604)
!8624 = !DILocation(line: 1946, column: 20, scope: !8604)
!8625 = !DILocation(line: 1946, column: 14, scope: !8604)
!8626 = !DILocation(line: 1946, column: 4, scope: !8604)
!8627 = !DILocation(line: 1947, column: 3, scope: !8604)
!8628 = !DILocation(line: 1949, column: 71, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1948, column: 8)
!8630 = !DILocation(line: 1949, column: 78, scope: !8629)
!8631 = !DILocation(line: 1949, column: 83, scope: !8629)
!8632 = !DILocation(line: 1949, column: 87, scope: !8629)
!8633 = !DILocation(line: 1949, column: 90, scope: !8629)
!8634 = !DILocation(line: 1949, column: 95, scope: !8629)
!8635 = !DILocation(line: 1949, column: 4, scope: !8629)
!8636 = !DILocation(line: 1954, column: 2, scope: !8545)
!8637 = !DILocation(line: 1954, column: 6, scope: !8545)
!8638 = !DILocation(line: 1954, column: 11, scope: !8545)
!8639 = !DILocation(line: 1955, column: 9, scope: !8545)
!8640 = !DILocation(line: 1955, column: 2, scope: !8545)
!8641 = distinct !DISubprogram(name: "set_facetexture_flags", scope: !3, file: !3, line: 1901, type: !8642, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!8642 = !DISubroutineType(types: !8643)
!8643 = !{null, !2660, !2662}
!8644 = !DILocalVariable(name: "ma", arg: 1, scope: !8641, file: !3, line: 1901, type: !2660)
!8645 = !DILocation(line: 1901, column: 45, scope: !8641)
!8646 = !DILocalVariable(name: "image", arg: 2, scope: !8641, file: !3, line: 1901, type: !2662)
!8647 = !DILocation(line: 1901, column: 56, scope: !8641)
!8648 = !DILocation(line: 1903, column: 6, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 1903, column: 6)
!8650 = !DILocation(line: 1903, column: 6, scope: !8641)
!8651 = !DILocation(line: 1904, column: 3, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 1903, column: 13)
!8653 = !DILocation(line: 1904, column: 7, scope: !8652)
!8654 = !DILocation(line: 1904, column: 12, scope: !8652)
!8655 = !DILocation(line: 1907, column: 27, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 1907, column: 7)
!8657 = !DILocation(line: 1907, column: 7, scope: !8656)
!8658 = !DILocation(line: 1907, column: 7, scope: !8652)
!8659 = !DILocation(line: 1908, column: 4, scope: !8656)
!8660 = !DILocation(line: 1908, column: 8, scope: !8656)
!8661 = !DILocation(line: 1908, column: 13, scope: !8656)
!8662 = !DILocation(line: 1909, column: 2, scope: !8652)
!8663 = !DILocation(line: 1910, column: 1, scope: !8641)
!8664 = distinct !DISubprogram(name: "convert_tfacematerial", scope: !3, file: !3, line: 1959, type: !8665, scopeLine: 1960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!8665 = !DISubroutineType(types: !8666)
!8666 = !{null, !3134, !2660}
!8667 = !DILocalVariable(name: "main", arg: 1, scope: !8664, file: !3, line: 1959, type: !3134)
!8668 = !DILocation(line: 1959, column: 41, scope: !8664)
!8669 = !DILocalVariable(name: "ma", arg: 2, scope: !8664, file: !3, line: 1959, type: !2660)
!8670 = !DILocation(line: 1959, column: 57, scope: !8664)
!8671 = !DILocalVariable(name: "me", scope: !8664, file: !3, line: 1961, type: !215)
!8672 = !DILocation(line: 1961, column: 8, scope: !8664)
!8673 = !DILocalVariable(name: "mat_new", scope: !8664, file: !3, line: 1962, type: !2660)
!8674 = !DILocation(line: 1962, column: 12, scope: !8664)
!8675 = !DILocalVariable(name: "mf", scope: !8664, file: !3, line: 1963, type: !8012)
!8676 = !DILocation(line: 1963, column: 9, scope: !8664)
!8677 = !DILocalVariable(name: "tf", scope: !8664, file: !3, line: 1964, type: !2664)
!8678 = !DILocation(line: 1964, column: 10, scope: !8664)
!8679 = !DILocalVariable(name: "flag", scope: !8664, file: !3, line: 1965, type: !178)
!8680 = !DILocation(line: 1965, column: 6, scope: !8664)
!8681 = !DILocalVariable(name: "index", scope: !8664, file: !3, line: 1965, type: !178)
!8682 = !DILocation(line: 1965, column: 12, scope: !8664)
!8683 = !DILocalVariable(name: "a", scope: !8664, file: !3, line: 1966, type: !178)
!8684 = !DILocation(line: 1966, column: 6, scope: !8664)
!8685 = !DILocalVariable(name: "mat_nr", scope: !8664, file: !3, line: 1967, type: !176)
!8686 = !DILocation(line: 1967, column: 8, scope: !8664)
!8687 = !DILocalVariable(name: "cdl", scope: !8664, file: !3, line: 1968, type: !2432)
!8688 = !DILocation(line: 1968, column: 19, scope: !8664)
!8689 = !DILocalVariable(name: "idname", scope: !8664, file: !3, line: 1969, type: !172)
!8690 = !DILocation(line: 1969, column: 7, scope: !8664)
!8691 = !DILocation(line: 1971, column: 12, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 1971, column: 2)
!8693 = !DILocation(line: 1971, column: 18, scope: !8692)
!8694 = !DILocation(line: 1971, column: 23, scope: !8692)
!8695 = !DILocation(line: 1971, column: 10, scope: !8692)
!8696 = !DILocation(line: 1971, column: 7, scope: !8692)
!8697 = !DILocation(line: 1971, column: 30, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 1971, column: 2)
!8699 = !DILocation(line: 1971, column: 2, scope: !8692)
!8700 = !DILocation(line: 1973, column: 10, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1973, column: 3)
!8702 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 1971, column: 52)
!8703 = !DILocation(line: 1973, column: 8, scope: !8701)
!8704 = !DILocation(line: 1973, column: 15, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 1973, column: 3)
!8706 = !DILocation(line: 1973, column: 19, scope: !8705)
!8707 = !DILocation(line: 1973, column: 23, scope: !8705)
!8708 = !DILocation(line: 1973, column: 17, scope: !8705)
!8709 = !DILocation(line: 1973, column: 3, scope: !8701)
!8710 = !DILocation(line: 1974, column: 8, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 1974, column: 8)
!8712 = !DILocation(line: 1974, column: 12, scope: !8711)
!8713 = !DILocation(line: 1974, column: 16, scope: !8711)
!8714 = !DILocation(line: 1974, column: 22, scope: !8711)
!8715 = !DILocation(line: 1974, column: 19, scope: !8711)
!8716 = !DILocation(line: 1974, column: 8, scope: !8705)
!8717 = !DILocation(line: 1974, column: 26, scope: !8711)
!8718 = !DILocation(line: 1973, column: 32, scope: !8705)
!8719 = !DILocation(line: 1973, column: 3, scope: !8705)
!8720 = distinct !{!8720, !8709, !8721}
!8721 = !DILocation(line: 1974, column: 26, scope: !8701)
!8722 = !DILocation(line: 1977, column: 7, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1977, column: 7)
!8724 = !DILocation(line: 1977, column: 12, scope: !8723)
!8725 = !DILocation(line: 1977, column: 16, scope: !8723)
!8726 = !DILocation(line: 1977, column: 9, scope: !8723)
!8727 = !DILocation(line: 1977, column: 7, scope: !8702)
!8728 = !DILocation(line: 1977, column: 24, scope: !8723)
!8729 = !DILocation(line: 1980, column: 46, scope: !8702)
!8730 = !DILocation(line: 1980, column: 50, scope: !8702)
!8731 = !DILocation(line: 1980, column: 11, scope: !8702)
!8732 = !DILocation(line: 1980, column: 9, scope: !8702)
!8733 = !DILocation(line: 1981, column: 10, scope: !8702)
!8734 = !DILocation(line: 1981, column: 16, scope: !8702)
!8735 = !DILocation(line: 1981, column: 9, scope: !8702)
!8736 = !DILocation(line: 1981, column: 33, scope: !8702)
!8737 = !DILocation(line: 1981, column: 37, scope: !8702)
!8738 = !DILocation(line: 1981, column: 43, scope: !8702)
!8739 = !DILocation(line: 1981, column: 50, scope: !8702)
!8740 = !DILocation(line: 1981, column: 7, scope: !8702)
!8741 = !DILocation(line: 1982, column: 8, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1982, column: 7)
!8743 = !DILocation(line: 1982, column: 7, scope: !8702)
!8744 = !DILocation(line: 1982, column: 13, scope: !8742)
!8745 = !DILocation(line: 1985, column: 10, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1985, column: 3)
!8747 = !DILocation(line: 1985, column: 20, scope: !8746)
!8748 = !DILocation(line: 1985, column: 24, scope: !8746)
!8749 = !DILocation(line: 1985, column: 18, scope: !8746)
!8750 = !DILocation(line: 1985, column: 8, scope: !8746)
!8751 = !DILocation(line: 1985, column: 31, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8746, file: !3, line: 1985, column: 3)
!8753 = !DILocation(line: 1985, column: 35, scope: !8752)
!8754 = !DILocation(line: 1985, column: 39, scope: !8752)
!8755 = !DILocation(line: 1985, column: 33, scope: !8752)
!8756 = !DILocation(line: 1985, column: 3, scope: !8746)
!8757 = !DILocation(line: 1986, column: 8, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 1986, column: 8)
!8759 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 1985, column: 59)
!8760 = !DILocation(line: 1986, column: 12, scope: !8758)
!8761 = !DILocation(line: 1986, column: 16, scope: !8758)
!8762 = !DILocation(line: 1986, column: 20, scope: !8758)
!8763 = !DILocation(line: 1986, column: 31, scope: !8758)
!8764 = !DILocation(line: 1986, column: 28, scope: !8758)
!8765 = !DILocation(line: 1986, column: 8, scope: !8759)
!8766 = !DILocation(line: 1986, column: 35, scope: !8758)
!8767 = !DILocation(line: 1989, column: 20, scope: !8759)
!8768 = !DILocation(line: 1989, column: 25, scope: !8759)
!8769 = !DILocation(line: 1989, column: 10, scope: !8759)
!8770 = !DILocation(line: 1989, column: 33, scope: !8759)
!8771 = !DILocation(line: 1989, column: 31, scope: !8759)
!8772 = !DILocation(line: 1989, column: 7, scope: !8759)
!8773 = !DILocation(line: 1990, column: 28, scope: !8759)
!8774 = !DILocation(line: 1990, column: 11, scope: !8759)
!8775 = !DILocation(line: 1990, column: 9, scope: !8759)
!8776 = !DILocation(line: 1993, column: 33, scope: !8759)
!8777 = !DILocation(line: 1993, column: 37, scope: !8759)
!8778 = !DILocation(line: 1993, column: 40, scope: !8759)
!8779 = !DILocation(line: 1993, column: 46, scope: !8759)
!8780 = !DILocation(line: 1993, column: 63, scope: !8759)
!8781 = !DILocation(line: 1993, column: 4, scope: !8759)
!8782 = !DILocation(line: 1995, column: 35, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 1995, column: 8)
!8784 = !DILocation(line: 1995, column: 41, scope: !8783)
!8785 = !DILocation(line: 1995, column: 46, scope: !8783)
!8786 = !DILocation(line: 1995, column: 53, scope: !8783)
!8787 = !DILocation(line: 1995, column: 19, scope: !8783)
!8788 = !DILocation(line: 1995, column: 17, scope: !8783)
!8789 = !DILocation(line: 1995, column: 8, scope: !8759)
!8790 = !DILocation(line: 1997, column: 37, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 1995, column: 84)
!8792 = !DILocation(line: 1997, column: 41, scope: !8791)
!8793 = !DILocation(line: 1997, column: 14, scope: !8791)
!8794 = !DILocation(line: 1997, column: 12, scope: !8791)
!8795 = !DILocation(line: 1999, column: 9, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 1999, column: 9)
!8797 = !DILocation(line: 1999, column: 16, scope: !8796)
!8798 = !DILocation(line: 1999, column: 9, scope: !8791)
!8799 = !DILocation(line: 1999, column: 49, scope: !8796)
!8800 = !DILocation(line: 1999, column: 53, scope: !8796)
!8801 = !DILocation(line: 1999, column: 32, scope: !8796)
!8802 = !DILocation(line: 1999, column: 30, scope: !8796)
!8803 = !DILocation(line: 1999, column: 23, scope: !8796)
!8804 = !DILocation(line: 2000, column: 4, scope: !8791)
!8805 = !DILocation(line: 2003, column: 33, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2002, column: 9)
!8807 = !DILocation(line: 2003, column: 15, scope: !8806)
!8808 = !DILocation(line: 2003, column: 13, scope: !8806)
!8809 = !DILocation(line: 2004, column: 9, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 2004, column: 9)
!8811 = !DILocation(line: 2004, column: 9, scope: !8806)
!8812 = !DILocation(line: 2006, column: 18, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8810, file: !3, line: 2004, column: 18)
!8814 = !DILocation(line: 2006, column: 27, scope: !8813)
!8815 = !DILocation(line: 2006, column: 30, scope: !8813)
!8816 = !DILocation(line: 2006, column: 36, scope: !8813)
!8817 = !DILocation(line: 2006, column: 6, scope: !8813)
!8818 = !DILocation(line: 2007, column: 22, scope: !8813)
!8819 = !DILocation(line: 2007, column: 16, scope: !8813)
!8820 = !DILocation(line: 2007, column: 6, scope: !8813)
!8821 = !DILocation(line: 2009, column: 32, scope: !8813)
!8822 = !DILocation(line: 2009, column: 36, scope: !8813)
!8823 = !DILocation(line: 2009, column: 15, scope: !8813)
!8824 = !DILocation(line: 2009, column: 13, scope: !8813)
!8825 = !DILocation(line: 2010, column: 23, scope: !8813)
!8826 = !DILocation(line: 2010, column: 32, scope: !8813)
!8827 = !DILocation(line: 2010, column: 6, scope: !8813)
!8828 = !DILocation(line: 2011, column: 5, scope: !8813)
!8829 = !DILocation(line: 2013, column: 71, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8810, file: !3, line: 2012, column: 10)
!8831 = !DILocation(line: 2013, column: 78, scope: !8830)
!8832 = !DILocation(line: 2013, column: 83, scope: !8830)
!8833 = !DILocation(line: 2013, column: 87, scope: !8830)
!8834 = !DILocation(line: 2013, column: 90, scope: !8830)
!8835 = !DILocation(line: 2013, column: 95, scope: !8830)
!8836 = !DILocation(line: 2013, column: 6, scope: !8830)
!8837 = !DILocation(line: 2014, column: 15, scope: !8830)
!8838 = !DILocation(line: 2014, column: 19, scope: !8830)
!8839 = !DILocation(line: 2014, column: 13, scope: !8830)
!8840 = !DILocation(line: 2015, column: 6, scope: !8830)
!8841 = !DILocation(line: 2024, column: 26, scope: !8759)
!8842 = !DILocation(line: 2024, column: 35, scope: !8759)
!8843 = !DILocation(line: 2024, column: 39, scope: !8759)
!8844 = !DILocation(line: 2024, column: 4, scope: !8759)
!8845 = !DILocation(line: 2027, column: 17, scope: !8759)
!8846 = !DILocation(line: 2027, column: 4, scope: !8759)
!8847 = !DILocation(line: 2027, column: 8, scope: !8759)
!8848 = !DILocation(line: 2027, column: 15, scope: !8759)
!8849 = !DILocation(line: 2028, column: 3, scope: !8759)
!8850 = !DILocation(line: 1985, column: 49, scope: !8752)
!8851 = !DILocation(line: 1985, column: 55, scope: !8752)
!8852 = !DILocation(line: 1985, column: 3, scope: !8752)
!8853 = distinct !{!8853, !8756, !8854}
!8854 = !DILocation(line: 2028, column: 3, scope: !8746)
!8855 = !DILocation(line: 2030, column: 10, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2030, column: 3)
!8857 = !DILocation(line: 2030, column: 8, scope: !8856)
!8858 = !DILocation(line: 2030, column: 15, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 2030, column: 3)
!8860 = !DILocation(line: 2030, column: 19, scope: !8859)
!8861 = !DILocation(line: 2030, column: 23, scope: !8859)
!8862 = !DILocation(line: 2030, column: 17, scope: !8859)
!8863 = !DILocation(line: 2030, column: 3, scope: !8856)
!8864 = !DILocation(line: 2031, column: 8, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 2031, column: 8)
!8866 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 2030, column: 33)
!8867 = !DILocation(line: 2031, column: 12, scope: !8865)
!8868 = !DILocation(line: 2031, column: 16, scope: !8865)
!8869 = !DILocation(line: 2031, column: 22, scope: !8865)
!8870 = !DILocation(line: 2031, column: 19, scope: !8865)
!8871 = !DILocation(line: 2031, column: 8, scope: !8866)
!8872 = !DILocation(line: 2032, column: 26, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 2031, column: 26)
!8874 = !DILocation(line: 2032, column: 30, scope: !8873)
!8875 = !DILocation(line: 2032, column: 34, scope: !8873)
!8876 = !DILocation(line: 2032, column: 5, scope: !8873)
!8877 = !DILocation(line: 2033, column: 4, scope: !8873)
!8878 = !DILocation(line: 2035, column: 6, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 2034, column: 9)
!8880 = !DILocation(line: 2030, column: 3, scope: !8859)
!8881 = distinct !{!8881, !8863, !8882}
!8882 = !DILocation(line: 2037, column: 3, scope: !8856)
!8883 = !DILocation(line: 2038, column: 2, scope: !8702)
!8884 = !DILocation(line: 1971, column: 39, scope: !8698)
!8885 = !DILocation(line: 1971, column: 43, scope: !8698)
!8886 = !DILocation(line: 1971, column: 46, scope: !8698)
!8887 = !DILocation(line: 1971, column: 37, scope: !8698)
!8888 = !DILocation(line: 1971, column: 2, scope: !8698)
!8889 = distinct !{!8889, !8699, !8890}
!8890 = !DILocation(line: 2038, column: 2, scope: !8692)
!8891 = !DILocation(line: 2039, column: 1, scope: !8664)
!8892 = distinct !DISubprogram(name: "decode_tfaceflag", scope: !3, file: !3, line: 1785, type: !8893, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!8893 = !DISubroutineType(types: !8894)
!8894 = !{null, !2660, !178, !178}
!8895 = !DILocalVariable(name: "ma", arg: 1, scope: !8892, file: !3, line: 1785, type: !2660)
!8896 = !DILocation(line: 1785, column: 40, scope: !8892)
!8897 = !DILocalVariable(name: "flag", arg: 2, scope: !8892, file: !3, line: 1785, type: !178)
!8898 = !DILocation(line: 1785, column: 48, scope: !8892)
!8899 = !DILocalVariable(name: "convertall", arg: 3, scope: !8892, file: !3, line: 1785, type: !178)
!8900 = !DILocation(line: 1785, column: 58, scope: !8892)
!8901 = !DILocalVariable(name: "alphablend", scope: !8892, file: !3, line: 1787, type: !178)
!8902 = !DILocation(line: 1787, column: 6, scope: !8892)
!8903 = !DILocalVariable(name: "game", scope: !8892, file: !3, line: 1788, type: !8904)
!8904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8905, size: 64)
!8905 = !DIDerivedType(tag: DW_TAG_typedef, name: "GameSettings", file: !314, line: 84, baseType: !367)
!8906 = !DILocation(line: 1788, column: 16, scope: !8892)
!8907 = !DILocation(line: 1788, column: 24, scope: !8892)
!8908 = !DILocation(line: 1788, column: 28, scope: !8892)
!8909 = !DILocation(line: 1791, column: 7, scope: !8892)
!8910 = !DILocation(line: 1793, column: 15, scope: !8892)
!8911 = !DILocation(line: 1793, column: 20, scope: !8892)
!8912 = !DILocation(line: 1793, column: 13, scope: !8892)
!8913 = !DILocation(line: 1794, column: 4, scope: !8892)
!8914 = !DILocation(line: 1794, column: 10, scope: !8892)
!8915 = !DILocation(line: 1794, column: 15, scope: !8892)
!8916 = !DILocation(line: 1797, column: 7, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 1797, column: 6)
!8918 = !DILocation(line: 1797, column: 12, scope: !8917)
!8919 = !DILocation(line: 1797, column: 26, scope: !8917)
!8920 = !DILocation(line: 1797, column: 6, scope: !8892)
!8921 = !DILocation(line: 1797, column: 34, scope: !8917)
!8922 = !DILocation(line: 1797, column: 40, scope: !8917)
!8923 = !DILocation(line: 1797, column: 48, scope: !8917)
!8924 = !DILocation(line: 1797, column: 32, scope: !8917)
!8925 = !DILocation(line: 1800, column: 6, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 1800, column: 6)
!8927 = !DILocation(line: 1800, column: 6, scope: !8892)
!8928 = !DILocation(line: 1801, column: 7, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 1801, column: 7)
!8930 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 1800, column: 18)
!8931 = !DILocation(line: 1801, column: 12, scope: !8929)
!8932 = !DILocation(line: 1801, column: 7, scope: !8930)
!8933 = !DILocation(line: 1801, column: 24, scope: !8929)
!8934 = !DILocation(line: 1801, column: 28, scope: !8929)
!8935 = !DILocation(line: 1801, column: 39, scope: !8929)
!8936 = !DILocation(line: 1802, column: 2, scope: !8930)
!8937 = !DILocation(line: 1805, column: 7, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 1805, column: 6)
!8939 = !DILocation(line: 1805, column: 12, scope: !8938)
!8940 = !DILocation(line: 1805, column: 26, scope: !8938)
!8941 = !DILocation(line: 1805, column: 6, scope: !8892)
!8942 = !DILocation(line: 1805, column: 34, scope: !8938)
!8943 = !DILocation(line: 1805, column: 40, scope: !8938)
!8944 = !DILocation(line: 1805, column: 45, scope: !8938)
!8945 = !DILocation(line: 1805, column: 32, scope: !8938)
!8946 = !DILocation(line: 1806, column: 6, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 1806, column: 6)
!8948 = !DILocation(line: 1806, column: 11, scope: !8947)
!8949 = !DILocation(line: 1806, column: 6, scope: !8892)
!8950 = !DILocation(line: 1806, column: 29, scope: !8947)
!8951 = !DILocation(line: 1806, column: 35, scope: !8947)
!8952 = !DILocation(line: 1806, column: 40, scope: !8947)
!8953 = !DILocation(line: 1806, column: 27, scope: !8947)
!8954 = !DILocation(line: 1807, column: 6, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 1807, column: 6)
!8956 = !DILocation(line: 1807, column: 11, scope: !8955)
!8957 = !DILocation(line: 1807, column: 6, scope: !8892)
!8958 = !DILocation(line: 1807, column: 26, scope: !8955)
!8959 = !DILocation(line: 1807, column: 32, scope: !8955)
!8960 = !DILocation(line: 1807, column: 37, scope: !8955)
!8961 = !DILocation(line: 1807, column: 24, scope: !8955)
!8962 = !DILocation(line: 1810, column: 6, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 1810, column: 6)
!8964 = !DILocation(line: 1810, column: 11, scope: !8963)
!8965 = !DILocation(line: 1810, column: 6, scope: !8892)
!8966 = !DILocation(line: 1810, column: 29, scope: !8963)
!8967 = !DILocation(line: 1810, column: 35, scope: !8963)
!8968 = !DILocation(line: 1810, column: 52, scope: !8963)
!8969 = !DILocation(line: 1810, column: 27, scope: !8963)
!8970 = !DILocation(line: 1811, column: 11, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 1811, column: 11)
!8972 = !DILocation(line: 1811, column: 16, scope: !8971)
!8973 = !DILocation(line: 1811, column: 11, scope: !8963)
!8974 = !DILocation(line: 1811, column: 35, scope: !8971)
!8975 = !DILocation(line: 1811, column: 41, scope: !8971)
!8976 = !DILocation(line: 1811, column: 58, scope: !8971)
!8977 = !DILocation(line: 1811, column: 33, scope: !8971)
!8978 = !DILocation(line: 1812, column: 11, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 1812, column: 11)
!8980 = !DILocation(line: 1812, column: 16, scope: !8979)
!8981 = !DILocation(line: 1812, column: 11, scope: !8971)
!8982 = !DILocation(line: 1812, column: 31, scope: !8979)
!8983 = !DILocation(line: 1812, column: 37, scope: !8979)
!8984 = !DILocation(line: 1812, column: 54, scope: !8979)
!8985 = !DILocation(line: 1812, column: 29, scope: !8979)
!8986 = !DILocation(line: 1815, column: 6, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 1815, column: 6)
!8988 = !DILocation(line: 1815, column: 11, scope: !8987)
!8989 = !DILocation(line: 1815, column: 26, scope: !8987)
!8990 = !DILocation(line: 1815, column: 29, scope: !8987)
!8991 = !DILocation(line: 1815, column: 6, scope: !8892)
!8992 = !DILocation(line: 1815, column: 67, scope: !8987)
!8993 = !DILocation(line: 1815, column: 73, scope: !8987)
!8994 = !DILocation(line: 1815, column: 85, scope: !8987)
!8995 = !DILocation(line: 1815, column: 65, scope: !8987)
!8996 = !DILocation(line: 1816, column: 11, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 1816, column: 11)
!8998 = !DILocation(line: 1816, column: 22, scope: !8997)
!8999 = !DILocation(line: 1816, column: 11, scope: !8987)
!9000 = !DILocation(line: 1816, column: 36, scope: !8997)
!9001 = !DILocation(line: 1816, column: 42, scope: !8997)
!9002 = !DILocation(line: 1816, column: 54, scope: !8997)
!9003 = !DILocation(line: 1816, column: 34, scope: !8997)
!9004 = !DILocation(line: 1817, column: 11, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 1817, column: 11)
!9006 = !DILocation(line: 1817, column: 22, scope: !9005)
!9007 = !DILocation(line: 1817, column: 11, scope: !8997)
!9008 = !DILocation(line: 1817, column: 34, scope: !9005)
!9009 = !DILocation(line: 1817, column: 40, scope: !9005)
!9010 = !DILocation(line: 1817, column: 52, scope: !9005)
!9011 = !DILocation(line: 1817, column: 32, scope: !9005)
!9012 = !DILocation(line: 1818, column: 11, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 1818, column: 11)
!9014 = !DILocation(line: 1818, column: 22, scope: !9013)
!9015 = !DILocation(line: 1818, column: 11, scope: !9005)
!9016 = !DILocation(line: 1818, column: 35, scope: !9013)
!9017 = !DILocation(line: 1818, column: 41, scope: !9013)
!9018 = !DILocation(line: 1818, column: 53, scope: !9013)
!9019 = !DILocation(line: 1818, column: 33, scope: !9013)
!9020 = !DILocation(line: 1819, column: 1, scope: !8892)
!9021 = distinct !DISubprogram(name: "integer_getdigits", scope: !3, file: !3, line: 1853, type: !8527, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!9022 = !DILocalVariable(name: "number", arg: 1, scope: !9021, file: !3, line: 1853, type: !178)
!9023 = !DILocation(line: 1853, column: 34, scope: !9021)
!9024 = !DILocalVariable(name: "i", scope: !9021, file: !3, line: 1855, type: !178)
!9025 = !DILocation(line: 1855, column: 6, scope: !9021)
!9026 = !DILocation(line: 1856, column: 6, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 1856, column: 6)
!9028 = !DILocation(line: 1856, column: 13, scope: !9027)
!9029 = !DILocation(line: 1856, column: 6, scope: !9021)
!9030 = !DILocation(line: 1856, column: 19, scope: !9027)
!9031 = !DILocation(line: 1858, column: 2, scope: !9021)
!9032 = !DILocation(line: 1858, column: 9, scope: !9021)
!9033 = !DILocation(line: 1858, column: 16, scope: !9021)
!9034 = !DILocation(line: 1859, column: 18, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 1858, column: 22)
!9036 = !DILocation(line: 1859, column: 25, scope: !9035)
!9037 = !DILocation(line: 1859, column: 10, scope: !9035)
!9038 = !DILocation(line: 1860, column: 4, scope: !9035)
!9039 = distinct !{!9039, !9031, !9040}
!9040 = !DILocation(line: 1861, column: 2, scope: !9021)
!9041 = !DILocation(line: 1862, column: 9, scope: !9021)
!9042 = !DILocation(line: 1862, column: 2, scope: !9021)
!9043 = !DILocation(line: 1863, column: 1, scope: !9021)
!9044 = distinct !DISubprogram(name: "mesh_getmaterialnumber", scope: !3, file: !3, line: 1877, type: !9045, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!9045 = !DISubroutineType(types: !9046)
!9046 = !{!176, !215, !2660}
!9047 = !DILocalVariable(name: "me", arg: 1, scope: !9044, file: !3, line: 1877, type: !215)
!9048 = !DILocation(line: 1877, column: 43, scope: !9044)
!9049 = !DILocalVariable(name: "ma", arg: 2, scope: !9044, file: !3, line: 1877, type: !2660)
!9050 = !DILocation(line: 1877, column: 57, scope: !9044)
!9051 = !DILocalVariable(name: "a", scope: !9044, file: !3, line: 1879, type: !176)
!9052 = !DILocation(line: 1879, column: 8, scope: !9044)
!9053 = !DILocation(line: 1881, column: 9, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 1881, column: 2)
!9055 = !DILocation(line: 1881, column: 7, scope: !9054)
!9056 = !DILocation(line: 1881, column: 14, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 1881, column: 2)
!9058 = !DILocation(line: 1881, column: 18, scope: !9057)
!9059 = !DILocation(line: 1881, column: 22, scope: !9057)
!9060 = !DILocation(line: 1881, column: 16, scope: !9057)
!9061 = !DILocation(line: 1881, column: 2, scope: !9054)
!9062 = !DILocation(line: 1882, column: 7, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 1882, column: 7)
!9064 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 1881, column: 35)
!9065 = !DILocation(line: 1882, column: 11, scope: !9063)
!9066 = !DILocation(line: 1882, column: 15, scope: !9063)
!9067 = !DILocation(line: 1882, column: 21, scope: !9063)
!9068 = !DILocation(line: 1882, column: 18, scope: !9063)
!9069 = !DILocation(line: 1882, column: 7, scope: !9064)
!9070 = !DILocation(line: 1883, column: 11, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1882, column: 25)
!9072 = !DILocation(line: 1883, column: 4, scope: !9071)
!9073 = !DILocation(line: 1885, column: 2, scope: !9064)
!9074 = !DILocation(line: 1881, column: 31, scope: !9057)
!9075 = !DILocation(line: 1881, column: 2, scope: !9057)
!9076 = distinct !{!9076, !9061, !9077}
!9077 = !DILocation(line: 1885, column: 2, scope: !9054)
!9078 = !DILocation(line: 1887, column: 2, scope: !9044)
!9079 = !DILocation(line: 1888, column: 1, scope: !9044)
!9080 = distinct !DISubprogram(name: "mesh_addmaterial", scope: !3, file: !3, line: 1891, type: !9045, scopeLine: 1892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!9081 = !DILocalVariable(name: "me", arg: 1, scope: !9080, file: !3, line: 1891, type: !215)
!9082 = !DILocation(line: 1891, column: 37, scope: !9080)
!9083 = !DILocalVariable(name: "ma", arg: 2, scope: !9080, file: !3, line: 1891, type: !2660)
!9084 = !DILocation(line: 1891, column: 51, scope: !9080)
!9085 = !DILocation(line: 1893, column: 26, scope: !9080)
!9086 = !DILocation(line: 1893, column: 30, scope: !9080)
!9087 = !DILocation(line: 1893, column: 2, scope: !9080)
!9088 = !DILocation(line: 1894, column: 28, scope: !9080)
!9089 = !DILocation(line: 1894, column: 2, scope: !9080)
!9090 = !DILocation(line: 1894, column: 6, scope: !9080)
!9091 = !DILocation(line: 1894, column: 10, scope: !9080)
!9092 = !DILocation(line: 1894, column: 14, scope: !9080)
!9093 = !DILocation(line: 1894, column: 21, scope: !9080)
!9094 = !DILocation(line: 1894, column: 26, scope: !9080)
!9095 = !DILocation(line: 1896, column: 14, scope: !9080)
!9096 = !DILocation(line: 1896, column: 18, scope: !9080)
!9097 = !DILocation(line: 1896, column: 2, scope: !9080)
!9098 = !DILocation(line: 1898, column: 9, scope: !9080)
!9099 = !DILocation(line: 1898, column: 13, scope: !9080)
!9100 = !DILocation(line: 1898, column: 20, scope: !9080)
!9101 = !DILocation(line: 1898, column: 2, scope: !9080)
!9102 = distinct !DISubprogram(name: "calculate_tface_materialname", scope: !3, file: !3, line: 1865, type: !9103, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2680)
!9103 = !DISubroutineType(types: !9104)
!9104 = !{null, !213, !213, !178}
!9105 = !DILocalVariable(name: "matname", arg: 1, scope: !9102, file: !3, line: 1865, type: !213)
!9106 = !DILocation(line: 1865, column: 48, scope: !9102)
!9107 = !DILocalVariable(name: "newname", arg: 2, scope: !9102, file: !3, line: 1865, type: !213)
!9108 = !DILocation(line: 1865, column: 63, scope: !9102)
!9109 = !DILocalVariable(name: "flag", arg: 3, scope: !9102, file: !3, line: 1865, type: !178)
!9110 = !DILocation(line: 1865, column: 76, scope: !9102)
!9111 = !DILocalVariable(name: "digits", scope: !9102, file: !3, line: 1870, type: !178)
!9112 = !DILocation(line: 1870, column: 6, scope: !9102)
!9113 = !DILocation(line: 1870, column: 33, scope: !9102)
!9114 = !DILocation(line: 1870, column: 15, scope: !9102)
!9115 = !DILocation(line: 1873, column: 15, scope: !9102)
!9116 = !DILocation(line: 1873, column: 68, scope: !9102)
!9117 = !DILocation(line: 1873, column: 75, scope: !9102)
!9118 = !DILocation(line: 1873, column: 65, scope: !9102)
!9119 = !DILocation(line: 1873, column: 81, scope: !9102)
!9120 = !DILocation(line: 1873, column: 90, scope: !9102)
!9121 = !DILocation(line: 1873, column: 98, scope: !9102)
!9122 = !DILocation(line: 1873, column: 2, scope: !9102)
!9123 = !DILocation(line: 1874, column: 1, scope: !9102)
