; ModuleID = 'blender/source/blender/render/intern/source/rendercore.c'
source_filename = "blender/source/blender/render/intern/source/rendercore.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.Text = type opaque
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.RenderEngine = type opaque
%struct.RayObject = type { %struct.RayObjectAPI*, %struct.RayObjectControl }
%struct.RayObjectAPI = type { i32 (%struct.RayObject*, %struct.Isect*)*, void (%struct.RayObject*, %struct.RayObject*)*, void (%struct.RayObject*)*, void (%struct.RayObject*)*, void (%struct.RayObject*, float*, float*)*, float (%struct.RayObject*)*, void (%struct.RayObject*, %struct.RayHint*, float*, float*)* }
%struct.Isect = type { [3 x float], [3 x float], float, [3 x float], [3 x float], [6 x i32], [3 x float], i32, i32, i32, i32, i8*, float, float, i32, %struct.anon, %struct.anon, %struct.RayObject*, %struct.RayHint* }
%struct.anon = type { i8*, i8* }
%struct.RayHint = type { %union.anon }
%union.anon = type { %struct.LCTSHint }
%struct.LCTSHint = type { i32, [256 x %struct.RayObject*] }
%struct.RayObjectControl = type { i8*, i32 (i8*)* }
%struct.RayFace = type { [4 x float], [4 x float], [4 x float], [3 x float], i32, i8*, i8* }
%struct.VlakPrimitive = type { %struct.ObjectInstanceRen*, %struct.VlakRen* }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type { %struct.VertRen*, float*, float*, float*, float*, float*, i32* }
%struct.VlakTableNode = type { %struct.VlakRen*, %struct.MTFace*, %struct.MCol*, i32*, i32, i32, float*, float*, %struct.RadFace** }
%struct.MTFace = type opaque
%struct.MCol = type opaque
%struct.RadFace = type { [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.StrandTableNode = type { %struct.StrandRen*, float*, float*, float*, i32*, %struct.MCol*, float*, i32, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.anim = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.GHash = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.ListBase = type { i8*, i8* }
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.ImagePool = type opaque
%struct.EvaluationContext = type opaque
%struct.RenderPart = type { %struct.RenderPart*, %struct.RenderPart*, %struct.RenderResult*, %struct.ListBase, i32*, i32*, i32*, i32*, i64*, i32*, i32*, i32*, i64*, %struct.rcti, i32, i32, i32, i16, i16, i16, i16, i8* }
%struct.ZbufSolidData = type { %struct.RenderLayer*, %struct.ListBase*, float* }
%struct.PixStrMain = type { %struct.PixStrMain*, %struct.PixStrMain*, %struct.PixStr*, i32 }
%struct.PixStr = type { %struct.PixStr*, i32, i32, i32, i32, i16, i16 }
%struct.ZSpan = type { i32, i32, i32, i32, i32, i32, float*, float*, float*, float*, float*, float*, float, float, float, float, i32*, i32*, i32*, i32*, i32*, i32*, %struct.APixstr*, %struct.APixstr*, %struct.APixstrand*, %struct.ListBase*, i32, float, i32, i32, i32, float, i8*, void (i8*, i32, i32, i32, i32, i32)*, void (%struct.ZSpan*, i32, i32, float*, float*, float*, float*)*, void (%struct.ZSpan*, i32, i32, float*, float*)* }
%struct.APixstr = type { [4 x i16], [4 x i32], [4 x i32], [4 x i32], [4 x i16], %struct.APixstr* }
%struct.APixstrand = type { [4 x i16], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x float], [4 x float], %struct.APixstrand* }
%struct.ShadeSample = type { i32, [16 x %struct.RenderLayer*], [16 x %struct.ShadeInput], [16 x %struct.ShadeResult] }
%struct.ShadeInput = type { %struct.Material*, %struct.VlakRen*, %struct.StrandRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, i32, [3 x float], i16, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, i16, i16, i16, i16, i16, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], float, [4 x float], [3 x float], [3 x float], [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputCol], i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], i32, i32, i32, [3 x float], i32, i32, i32, [3 x float], float, i8, i8, i16, i16, i16, i32, i32, i32, i32, %struct.Group*, %struct.Material* }
%struct.ShadeInputUV = type { [3 x float], [3 x float], [3 x float], i8* }
%struct.ShadeInputCol = type { [4 x float], i8* }
%struct.ShadeResult = type { [4 x float], [4 x float], float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float] }
%struct.RenderPass = type { %struct.RenderPass*, %struct.RenderPass*, i32, i32, [64 x i8], [8 x i8], float*, i32, i32, i32 }
%struct.GroupObject = type { %struct.GroupObject*, %struct.GroupObject*, %struct.Object*, i8*, i16, [6 x i8] }
%struct.LampRen = type { %struct.LampRen*, %struct.LampRen*, float, float, float, [3 x float], i16, i32, float, float, float, float, float, float, float, float, float, i32, float, float, [3 x float], float, float, float, float, float, float, i16, float, float, %struct.CurveMapping*, i16, i16, float, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, [1 x i16], [1 x i16], float, float, float, float, %struct.SunSky*, %struct.ShadBuf*, float*, [3 x [3 x float]], float, [3 x float], float, [4 x [4 x float]], [3 x [3 x float]], [8 x [3 x float]], float, %struct.LampShadowSample*, [1 x %struct.RayObject*], [18 x %struct.MTex*], i32, i32 }
%struct.SunSky = type { i16, i16, i16, float, float, float, [3 x float], float, float, float, float, [5 x float], [5 x float], [5 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.ShadBuf = type { i16, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float*, float*, float, float, float, float, float, [3 x i32], i32, i32, %struct.ListBase, [1 x %struct.ISBData*] }
%struct.ISBData = type { i16*, %struct.ISBShadfacA**, %struct.MemArena*, i32, i32, i32, i32 }
%struct.ISBShadfacA = type { %struct.ISBShadfacA*, i32, i32, float }
%struct.LampShadowSample = type { [16 x %struct.LampShadowSubSample] }
%struct.LampShadowSubSample = type { i32, [4 x float] }
%struct.ZBufSSSHandle = type { %struct.RenderPart*, %struct.ListBase, i32 }

@R = external dso_local global %struct.Render, align 8
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [6 x i8] c"recto\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"rectp\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"rectz\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"rectmask\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.4 = private unnamed_addr constant [12 x i8] c"zbufDArectd\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"rectedge\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"alpha layer\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.7 = private unnamed_addr constant [10 x i8] c"rectbacko\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"rectbackp\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"rectbackz\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"SSSCo\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"SSSColor\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"SSSArea\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"pixstrMain\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"pixstr\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"solidmask\00", align 1
@hashvectf = external dso_local constant [0 x float], align 4

; Function Attrs: noinline nounwind uwtable
define dso_local void @calc_view_vector(float* %view, float %x, float %y) #0 !dbg !1833 {
entry:
  %view.addr = alloca float*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  store float* %view, float** %view.addr, align 8
  call void @llvm.dbg.declare(metadata float** %view.addr, metadata !1837, metadata !DIExpression()), !dbg !1838
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1839, metadata !DIExpression()), !dbg !1840
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !1841, metadata !DIExpression()), !dbg !1842
  %0 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 36), align 8, !dbg !1843
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !1843
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1843

cond.true:                                        ; preds = %entry
  %1 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 36), align 8, !dbg !1843
  %fneg = fneg float %1, !dbg !1843
  br label %cond.end, !dbg !1843

cond.false:                                       ; preds = %entry
  %2 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 36), align 8, !dbg !1843
  br label %cond.end, !dbg !1843

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %2, %cond.false ], !dbg !1843
  %fneg1 = fneg float %cond, !dbg !1844
  %3 = load float*, float** %view.addr, align 8, !dbg !1845
  %arrayidx = getelementptr inbounds float, float* %3, i64 2, !dbg !1845
  store float %fneg1, float* %arrayidx, align 4, !dbg !1846
  %4 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !1847
  %and = and i32 %4, 8, !dbg !1849
  %tobool = icmp ne i32 %and, 0, !dbg !1849
  br i1 %tobool, label %if.then, label %if.else, !dbg !1850

if.then:                                          ; preds = %cond.end
  %5 = load float*, float** %view.addr, align 8, !dbg !1851
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !1851
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !1853
  %6 = load float*, float** %view.addr, align 8, !dbg !1854
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !1854
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !1855
  br label %if.end30, !dbg !1856

if.else:                                          ; preds = %cond.end
  %7 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !1857
  %and4 = and i32 %7, 1024, !dbg !1860
  %tobool5 = icmp ne i32 %and4, 0, !dbg !1860
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !1861

if.then6:                                         ; preds = %if.else
  %8 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 28), align 8, !dbg !1862
  %9 = load float, float* %x.addr, align 4, !dbg !1864
  %sub = fsub float %9, %8, !dbg !1864
  store float %sub, float* %x.addr, align 4, !dbg !1864
  br label %if.end, !dbg !1865

if.end:                                           ; preds = %if.then6, %if.else
  %10 = load float, float* %x.addr, align 4, !dbg !1866
  %11 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !1867
  %conv = sitofp i32 %11 to float, !dbg !1868
  %div = fdiv float %10, %conv, !dbg !1869
  store float %div, float* %x.addr, align 4, !dbg !1870
  %12 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 16, i32 0), align 4, !dbg !1871
  %13 = load float, float* %x.addr, align 4, !dbg !1872
  %call = call float @BLI_rctf_size_x(%struct.rctf* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 16)), !dbg !1873
  %mul = fmul float %13, %call, !dbg !1874
  %add = fadd float %12, %mul, !dbg !1875
  %14 = load float*, float** %view.addr, align 8, !dbg !1876
  %arrayidx7 = getelementptr inbounds float, float* %14, i64 0, !dbg !1876
  store float %add, float* %arrayidx7, align 4, !dbg !1877
  %15 = load float, float* %y.addr, align 4, !dbg !1878
  %16 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !1879
  %conv8 = sitofp i32 %16 to float, !dbg !1880
  %div9 = fdiv float %15, %conv8, !dbg !1881
  store float %div9, float* %y.addr, align 4, !dbg !1882
  %17 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 16, i32 2), align 4, !dbg !1883
  %18 = load float, float* %y.addr, align 4, !dbg !1884
  %call10 = call float @BLI_rctf_size_y(%struct.rctf* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 16)), !dbg !1885
  %mul11 = fmul float %18, %call10, !dbg !1886
  %add12 = fadd float %17, %mul11, !dbg !1887
  %19 = load float*, float** %view.addr, align 8, !dbg !1888
  %arrayidx13 = getelementptr inbounds float, float* %19, i64 1, !dbg !1888
  store float %add12, float* %arrayidx13, align 4, !dbg !1889
  %20 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !1890
  %and14 = and i32 %20, 1024, !dbg !1892
  %tobool15 = icmp ne i32 %and14, 0, !dbg !1892
  br i1 %tobool15, label %if.then16, label %if.end29, !dbg !1893

if.then16:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %u, metadata !1894, metadata !DIExpression()), !dbg !1896
  %21 = load float*, float** %view.addr, align 8, !dbg !1897
  %arrayidx17 = getelementptr inbounds float, float* %21, i64 0, !dbg !1897
  %22 = load float, float* %arrayidx17, align 4, !dbg !1897
  %23 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 29), align 4, !dbg !1898
  %add18 = fadd float %22, %23, !dbg !1899
  store float %add18, float* %u, align 4, !dbg !1896
  call void @llvm.dbg.declare(metadata float* %v, metadata !1900, metadata !DIExpression()), !dbg !1901
  %24 = load float*, float** %view.addr, align 8, !dbg !1902
  %arrayidx19 = getelementptr inbounds float, float* %24, i64 2, !dbg !1902
  %25 = load float, float* %arrayidx19, align 4, !dbg !1902
  store float %25, float* %v, align 4, !dbg !1901
  %26 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 27), align 4, !dbg !1903
  %27 = load float, float* %u, align 4, !dbg !1904
  %mul20 = fmul float %26, %27, !dbg !1905
  %28 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 26), align 8, !dbg !1906
  %29 = load float, float* %v, align 4, !dbg !1907
  %mul21 = fmul float %28, %29, !dbg !1908
  %add22 = fadd float %mul20, %mul21, !dbg !1909
  %30 = load float*, float** %view.addr, align 8, !dbg !1910
  %arrayidx23 = getelementptr inbounds float, float* %30, i64 0, !dbg !1910
  store float %add22, float* %arrayidx23, align 4, !dbg !1911
  %31 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 26), align 8, !dbg !1912
  %fneg24 = fneg float %31, !dbg !1913
  %32 = load float, float* %u, align 4, !dbg !1914
  %mul25 = fmul float %fneg24, %32, !dbg !1915
  %33 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 27), align 4, !dbg !1916
  %34 = load float, float* %v, align 4, !dbg !1917
  %mul26 = fmul float %33, %34, !dbg !1918
  %add27 = fadd float %mul25, %mul26, !dbg !1919
  %35 = load float*, float** %view.addr, align 8, !dbg !1920
  %arrayidx28 = getelementptr inbounds float, float* %35, i64 2, !dbg !1920
  store float %add27, float* %arrayidx28, align 4, !dbg !1921
  br label %if.end29, !dbg !1922

if.end29:                                         ; preds = %if.then16, %if.end
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then
  ret void, !dbg !1923
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_x(%struct.rctf* %rct) #0 !dbg !1924 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !1930, metadata !DIExpression()), !dbg !1931
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !1932
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !1933
  %1 = load float, float* %xmax, align 4, !dbg !1933
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !1934
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !1935
  %3 = load float, float* %xmin, align 4, !dbg !1935
  %sub = fsub float %1, %3, !dbg !1936
  ret float %sub, !dbg !1937
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_y(%struct.rctf* %rct) #0 !dbg !1938 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !1939, metadata !DIExpression()), !dbg !1940
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !1941
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 3, !dbg !1942
  %1 = load float, float* %ymax, align 4, !dbg !1942
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !1943
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 2, !dbg !1944
  %3 = load float, float* %ymin, align 4, !dbg !1944
  %sub = fsub float %1, %3, !dbg !1945
  ret float %sub, !dbg !1946
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @calc_renderco_ortho(float* %co, float %x, float %y, i32 %z) #0 !dbg !1947 {
entry:
  %co.addr = alloca float*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca i32, align 4
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  %zco = alloca float, align 4
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !1950, metadata !DIExpression()), !dbg !1951
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !1952, metadata !DIExpression()), !dbg !1953
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !1954, metadata !DIExpression()), !dbg !1955
  store i32 %z, i32* %z.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %z.addr, metadata !1956, metadata !DIExpression()), !dbg !1957
  call void @llvm.dbg.declare(metadata float* %fx, metadata !1958, metadata !DIExpression()), !dbg !1959
  %0 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !1960
  %conv = sitofp i32 %0 to float, !dbg !1961
  %1 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 0, i64 0), align 8, !dbg !1962
  %mul = fmul float %conv, %1, !dbg !1963
  %div = fdiv float 2.000000e+00, %mul, !dbg !1964
  store float %div, float* %fx, align 4, !dbg !1959
  call void @llvm.dbg.declare(metadata float* %fy, metadata !1965, metadata !DIExpression()), !dbg !1966
  %2 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !1967
  %conv1 = sitofp i32 %2 to float, !dbg !1968
  %3 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 1, i64 1), align 4, !dbg !1969
  %mul2 = fmul float %conv1, %3, !dbg !1970
  %div3 = fdiv float 2.000000e+00, %mul2, !dbg !1971
  store float %div3, float* %fy, align 4, !dbg !1966
  call void @llvm.dbg.declare(metadata float* %zco, metadata !1972, metadata !DIExpression()), !dbg !1973
  %4 = load float, float* %x.addr, align 4, !dbg !1974
  %5 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !1975
  %conv4 = sitofp i32 %5 to float, !dbg !1976
  %mul5 = fmul float 5.000000e-01, %conv4, !dbg !1977
  %sub = fsub float %4, %mul5, !dbg !1978
  %6 = load float, float* %fx, align 4, !dbg !1979
  %mul6 = fmul float %sub, %6, !dbg !1980
  %7 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 3, i64 0), align 8, !dbg !1981
  %8 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 0, i64 0), align 8, !dbg !1982
  %div7 = fdiv float %7, %8, !dbg !1983
  %sub8 = fsub float %mul6, %div7, !dbg !1984
  %9 = load float*, float** %co.addr, align 8, !dbg !1985
  %arrayidx = getelementptr inbounds float, float* %9, i64 0, !dbg !1985
  store float %sub8, float* %arrayidx, align 4, !dbg !1986
  %10 = load float, float* %y.addr, align 4, !dbg !1987
  %11 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !1988
  %conv9 = sitofp i32 %11 to float, !dbg !1989
  %mul10 = fmul float 5.000000e-01, %conv9, !dbg !1990
  %sub11 = fsub float %10, %mul10, !dbg !1991
  %12 = load float, float* %fy, align 4, !dbg !1992
  %mul12 = fmul float %sub11, %12, !dbg !1993
  %13 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 3, i64 1), align 4, !dbg !1994
  %14 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 1, i64 1), align 4, !dbg !1995
  %div13 = fdiv float %13, %14, !dbg !1996
  %sub14 = fsub float %mul12, %div13, !dbg !1997
  %15 = load float*, float** %co.addr, align 8, !dbg !1998
  %arrayidx15 = getelementptr inbounds float, float* %15, i64 1, !dbg !1998
  store float %sub14, float* %arrayidx15, align 4, !dbg !1999
  %16 = load i32, i32* %z.addr, align 4, !dbg !2000
  %conv16 = sitofp i32 %16 to float, !dbg !2001
  %div17 = fdiv float %conv16, 0x41E0000000000000, !dbg !2002
  store float %div17, float* %zco, align 4, !dbg !2003
  %17 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 3, i64 2), align 8, !dbg !2004
  %18 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 2, i64 3), align 4, !dbg !2005
  %19 = load float, float* %zco, align 4, !dbg !2006
  %mul18 = fmul float %18, %19, !dbg !2007
  %20 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 2, i64 2), align 8, !dbg !2008
  %sub19 = fsub float %mul18, %20, !dbg !2009
  %div20 = fdiv float %17, %sub19, !dbg !2010
  %21 = load float*, float** %co.addr, align 8, !dbg !2011
  %arrayidx21 = getelementptr inbounds float, float* %21, i64 2, !dbg !2011
  store float %div20, float* %arrayidx21, align 4, !dbg !2012
  ret void, !dbg !2013
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @calc_renderco_zbuf(float* %co, float* %view, i32 %z) #0 !dbg !2014 {
entry:
  %co.addr = alloca float*, align 8
  %view.addr = alloca float*, align 8
  %z.addr = alloca i32, align 4
  %fac = alloca float, align 4
  %zco = alloca float, align 4
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !2019, metadata !DIExpression()), !dbg !2020
  store float* %view, float** %view.addr, align 8
  call void @llvm.dbg.declare(metadata float** %view.addr, metadata !2021, metadata !DIExpression()), !dbg !2022
  store i32 %z, i32* %z.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %z.addr, metadata !2023, metadata !DIExpression()), !dbg !2024
  call void @llvm.dbg.declare(metadata float* %fac, metadata !2025, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.declare(metadata float* %zco, metadata !2027, metadata !DIExpression()), !dbg !2028
  %0 = load i32, i32* %z.addr, align 4, !dbg !2029
  %conv = sitofp i32 %0 to float, !dbg !2030
  %div = fdiv float %conv, 0x41E0000000000000, !dbg !2031
  store float %div, float* %zco, align 4, !dbg !2032
  %1 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 3, i64 2), align 8, !dbg !2033
  %2 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 2, i64 3), align 4, !dbg !2034
  %3 = load float, float* %zco, align 4, !dbg !2035
  %mul = fmul float %2, %3, !dbg !2036
  %4 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 2, i64 2), align 8, !dbg !2037
  %sub = fsub float %mul, %4, !dbg !2038
  %div1 = fdiv float %1, %sub, !dbg !2039
  %5 = load float*, float** %co.addr, align 8, !dbg !2040
  %arrayidx = getelementptr inbounds float, float* %5, i64 2, !dbg !2040
  store float %div1, float* %arrayidx, align 4, !dbg !2041
  %6 = load float*, float** %co.addr, align 8, !dbg !2042
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 2, !dbg !2042
  %7 = load float, float* %arrayidx2, align 4, !dbg !2042
  %8 = load float*, float** %view.addr, align 8, !dbg !2043
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 2, !dbg !2043
  %9 = load float, float* %arrayidx3, align 4, !dbg !2043
  %div4 = fdiv float %7, %9, !dbg !2044
  store float %div4, float* %fac, align 4, !dbg !2045
  %10 = load float, float* %fac, align 4, !dbg !2046
  %11 = load float*, float** %view.addr, align 8, !dbg !2047
  %arrayidx5 = getelementptr inbounds float, float* %11, i64 0, !dbg !2047
  %12 = load float, float* %arrayidx5, align 4, !dbg !2047
  %mul6 = fmul float %10, %12, !dbg !2048
  %13 = load float*, float** %co.addr, align 8, !dbg !2049
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 0, !dbg !2049
  store float %mul6, float* %arrayidx7, align 4, !dbg !2050
  %14 = load float, float* %fac, align 4, !dbg !2051
  %15 = load float*, float** %view.addr, align 8, !dbg !2052
  %arrayidx8 = getelementptr inbounds float, float* %15, i64 1, !dbg !2052
  %16 = load float, float* %arrayidx8, align 4, !dbg !2052
  %mul9 = fmul float %14, %16, !dbg !2053
  %17 = load float*, float** %co.addr, align 8, !dbg !2054
  %arrayidx10 = getelementptr inbounds float, float* %17, i64 1, !dbg !2054
  store float %mul9, float* %arrayidx10, align 4, !dbg !2055
  ret void, !dbg !2056
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @count_mask(i16 zeroext %mask) #0 !dbg !2057 {
entry:
  %retval = alloca i32, align 4
  %mask.addr = alloca i16, align 2
  store i16 %mask, i16* %mask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mask.addr, metadata !2060, metadata !DIExpression()), !dbg !2061
  %0 = load %struct.SampleTables*, %struct.SampleTables** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 38), align 8, !dbg !2062
  %tobool = icmp ne %struct.SampleTables* %0, null, !dbg !2064
  br i1 %tobool, label %if.then, label %if.end, !dbg !2065

if.then:                                          ; preds = %entry
  %1 = load %struct.SampleTables*, %struct.SampleTables** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 38), align 8, !dbg !2066
  %cmask = getelementptr inbounds %struct.SampleTables, %struct.SampleTables* %1, i32 0, i32 3, !dbg !2067
  %2 = load i16, i16* %mask.addr, align 2, !dbg !2068
  %conv = zext i16 %2 to i32, !dbg !2068
  %and = and i32 %conv, 255, !dbg !2069
  %idxprom = sext i32 %and to i64, !dbg !2070
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %cmask, i64 0, i64 %idxprom, !dbg !2070
  %3 = load i8, i8* %arrayidx, align 1, !dbg !2070
  %conv1 = zext i8 %3 to i32, !dbg !2070
  %4 = load %struct.SampleTables*, %struct.SampleTables** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 38), align 8, !dbg !2071
  %cmask2 = getelementptr inbounds %struct.SampleTables, %struct.SampleTables* %4, i32 0, i32 3, !dbg !2072
  %5 = load i16, i16* %mask.addr, align 2, !dbg !2073
  %conv3 = zext i16 %5 to i32, !dbg !2073
  %shr = ashr i32 %conv3, 8, !dbg !2074
  %idxprom4 = sext i32 %shr to i64, !dbg !2075
  %arrayidx5 = getelementptr inbounds [256 x i8], [256 x i8]* %cmask2, i64 0, i64 %idxprom4, !dbg !2075
  %6 = load i8, i8* %arrayidx5, align 1, !dbg !2075
  %conv6 = zext i8 %6 to i32, !dbg !2075
  %add = add nsw i32 %conv1, %conv6, !dbg !2076
  store i32 %add, i32* %retval, align 4, !dbg !2077
  br label %return, !dbg !2077

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2078
  br label %return, !dbg !2078

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !2079
  ret i32 %7, !dbg !2079
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @get_sample_layers(%struct.RenderPart* %pa, %struct.RenderLayer* %rl, %struct.RenderLayer** %rlpp) #0 !dbg !2080 {
entry:
  %retval = alloca i32, align 4
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %rlpp.addr = alloca %struct.RenderLayer**, align 8
  %sample = alloca i32, align 4
  %nr = alloca i32, align 4
  %rr = alloca %struct.RenderResult*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !2115, metadata !DIExpression()), !dbg !2116
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !2117, metadata !DIExpression()), !dbg !2118
  store %struct.RenderLayer** %rlpp, %struct.RenderLayer*** %rlpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer*** %rlpp.addr, metadata !2119, metadata !DIExpression()), !dbg !2120
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2121
  %fullresult = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 3, !dbg !2123
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fullresult, i32 0, i32 0, !dbg !2124
  %1 = load i8*, i8** %first, align 8, !dbg !2124
  %tobool = icmp ne i8* %1, null, !dbg !2121
  br i1 %tobool, label %if.then, label %if.else, !dbg !2125

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !2126, metadata !DIExpression()), !dbg !2128
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !2129, metadata !DIExpression()), !dbg !2130
  %2 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2131
  %result = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %2, i32 0, i32 2, !dbg !2132
  %3 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !2132
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %3, i32 0, i32 12, !dbg !2133
  %4 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !2134
  %5 = bitcast %struct.RenderLayer* %4 to i8*, !dbg !2134
  %call = call i32 @BLI_findindex(%struct.ListBase* %layers, i8* %5), !dbg !2135
  store i32 %call, i32* %nr, align 4, !dbg !2130
  store i32 0, i32* %sample, align 4, !dbg !2136
  br label %for.cond, !dbg !2138

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %sample, align 4, !dbg !2139
  %7 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !2141
  %conv = sext i16 %7 to i32, !dbg !2142
  %cmp = icmp slt i32 %6, %conv, !dbg !2143
  br i1 %cmp, label %for.body, label %for.end, !dbg !2144

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr, metadata !2145, metadata !DIExpression()), !dbg !2147
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2148
  %fullresult2 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 3, !dbg !2149
  %9 = load i32, i32* %sample, align 4, !dbg !2150
  %call3 = call i8* @BLI_findlink(%struct.ListBase* %fullresult2, i32 %9), !dbg !2151
  %10 = bitcast i8* %call3 to %struct.RenderResult*, !dbg !2151
  store %struct.RenderResult* %10, %struct.RenderResult** %rr, align 8, !dbg !2147
  %11 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !2152
  %layers4 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %11, i32 0, i32 12, !dbg !2153
  %12 = load i32, i32* %nr, align 4, !dbg !2154
  %call5 = call i8* @BLI_findlink(%struct.ListBase* %layers4, i32 %12), !dbg !2155
  %13 = bitcast i8* %call5 to %struct.RenderLayer*, !dbg !2155
  %14 = load %struct.RenderLayer**, %struct.RenderLayer*** %rlpp.addr, align 8, !dbg !2156
  %15 = load i32, i32* %sample, align 4, !dbg !2157
  %idxprom = sext i32 %15 to i64, !dbg !2156
  %arrayidx = getelementptr inbounds %struct.RenderLayer*, %struct.RenderLayer** %14, i64 %idxprom, !dbg !2156
  store %struct.RenderLayer* %13, %struct.RenderLayer** %arrayidx, align 8, !dbg !2158
  br label %for.inc, !dbg !2159

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %sample, align 4, !dbg !2160
  %inc = add nsw i32 %16, 1, !dbg !2160
  store i32 %inc, i32* %sample, align 4, !dbg !2160
  br label %for.cond, !dbg !2161, !llvm.loop !2162

for.end:                                          ; preds = %for.cond
  %17 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !2164
  %conv6 = sext i16 %17 to i32, !dbg !2165
  store i32 %conv6, i32* %retval, align 4, !dbg !2166
  br label %return, !dbg !2166

if.else:                                          ; preds = %entry
  %18 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !2167
  %19 = load %struct.RenderLayer**, %struct.RenderLayer*** %rlpp.addr, align 8, !dbg !2169
  %arrayidx7 = getelementptr inbounds %struct.RenderLayer*, %struct.RenderLayer** %19, i64 0, !dbg !2169
  store %struct.RenderLayer* %18, %struct.RenderLayer** %arrayidx7, align 8, !dbg !2170
  store i32 1, i32* %retval, align 4, !dbg !2171
  br label %return, !dbg !2171

return:                                           ; preds = %if.else, %for.end
  %20 = load i32, i32* %retval, align 4, !dbg !2172
  ret i32 %20, !dbg !2172
}

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbufshadeDA_tile(%struct.RenderPart* %pa) #0 !dbg !2173 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rr = alloca %struct.RenderResult*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  %psmlist = alloca %struct.ListBase, align 8
  %edgerect = alloca float*, align 8
  %sdata = alloca %struct.ZbufSolidData, align 8
  %ztramask = alloca i16*, align 8
  %solidmask = alloca i16*, align 8
  %sw_ap = alloca float*, align 8
  %sw_ap120 = alloca float*, align 8
  %sps = alloca i16*, align 8
  %spz = alloca i16*, align 8
  %fullmask = alloca i16, align 2
  %fcol = alloca float*, align 8
  %acol = alloca float*, align 8
  %x = alloca i32, align 4
  %fcol156 = alloca float*, align 8
  %acol158 = alloca float*, align 8
  %x160 = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !2176, metadata !DIExpression()), !dbg !2177
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr, metadata !2178, metadata !DIExpression()), !dbg !2179
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2180
  %result = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 2, !dbg !2181
  %1 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !2181
  store %struct.RenderResult* %1, %struct.RenderResult** %rr, align 8, !dbg !2179
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !2182, metadata !DIExpression()), !dbg !2183
  call void @llvm.dbg.declare(metadata %struct.ListBase* %psmlist, metadata !2184, metadata !DIExpression()), !dbg !2185
  %2 = bitcast %struct.ListBase* %psmlist to i8*, !dbg !2185
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !2185
  call void @llvm.dbg.declare(metadata float** %edgerect, metadata !2186, metadata !DIExpression()), !dbg !2187
  store float* null, float** %edgerect, align 8, !dbg !2187
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2188
  %4 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2189
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %4, i32 0, i32 14, !dbg !2190
  %5 = load i32, i32* %rectx, align 8, !dbg !2190
  %conv = sext i32 %5 to i64, !dbg !2189
  %mul = mul i64 4, %conv, !dbg !2191
  %6 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2192
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %6, i32 0, i32 15, !dbg !2193
  %7 = load i32, i32* %recty, align 4, !dbg !2193
  %conv1 = sext i32 %7 to i64, !dbg !2192
  %mul2 = mul i64 %mul, %conv1, !dbg !2194
  %call = call i8* %3(i64 %mul2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)), !dbg !2188
  %8 = bitcast i8* %call to i32*, !dbg !2188
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2195
  %recto = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 4, !dbg !2196
  store i32* %8, i32** %recto, align 8, !dbg !2197
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2198
  %11 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2199
  %rectx3 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %11, i32 0, i32 14, !dbg !2200
  %12 = load i32, i32* %rectx3, align 8, !dbg !2200
  %conv4 = sext i32 %12 to i64, !dbg !2199
  %mul5 = mul i64 4, %conv4, !dbg !2201
  %13 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2202
  %recty6 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %13, i32 0, i32 15, !dbg !2203
  %14 = load i32, i32* %recty6, align 4, !dbg !2203
  %conv7 = sext i32 %14 to i64, !dbg !2202
  %mul8 = mul i64 %mul5, %conv7, !dbg !2204
  %call9 = call i8* %10(i64 %mul8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)), !dbg !2198
  %15 = bitcast i8* %call9 to i32*, !dbg !2198
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2205
  %rectp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 5, !dbg !2206
  store i32* %15, i32** %rectp, align 8, !dbg !2207
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2208
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2209
  %rectx10 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 14, !dbg !2210
  %19 = load i32, i32* %rectx10, align 8, !dbg !2210
  %conv11 = sext i32 %19 to i64, !dbg !2209
  %mul12 = mul i64 4, %conv11, !dbg !2211
  %20 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2212
  %recty13 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %20, i32 0, i32 15, !dbg !2213
  %21 = load i32, i32* %recty13, align 4, !dbg !2213
  %conv14 = sext i32 %21 to i64, !dbg !2212
  %mul15 = mul i64 %mul12, %conv14, !dbg !2214
  %call16 = call i8* %17(i64 %mul15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)), !dbg !2208
  %22 = bitcast i8* %call16 to i32*, !dbg !2208
  %23 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2215
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %23, i32 0, i32 6, !dbg !2216
  store i32* %22, i32** %rectz, align 8, !dbg !2217
  %24 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !2218
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %24, i32 0, i32 12, !dbg !2220
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !2221
  %25 = load i8*, i8** %first, align 8, !dbg !2221
  %26 = bitcast i8* %25 to %struct.RenderLayer*, !dbg !2218
  store %struct.RenderLayer* %26, %struct.RenderLayer** %rl, align 8, !dbg !2222
  br label %for.cond, !dbg !2223

for.cond:                                         ; preds = %for.inc218, %entry
  %27 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2224
  %tobool = icmp ne %struct.RenderLayer* %27, null, !dbg !2226
  br i1 %tobool, label %for.body, label %for.end219, !dbg !2226

for.body:                                         ; preds = %for.cond
  %28 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2227
  %layflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %28, i32 0, i32 6, !dbg !2230
  %29 = load i32, i32* %layflag, align 8, !dbg !2230
  %and = and i32 %29, 262144, !dbg !2231
  %tobool17 = icmp ne i32 %and, 0, !dbg !2231
  br i1 %tobool17, label %land.lhs.true, label %if.end, !dbg !2232

land.lhs.true:                                    ; preds = %for.body
  %30 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2233
  %layflag18 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %30, i32 0, i32 6, !dbg !2234
  %31 = load i32, i32* %layflag18, align 8, !dbg !2234
  %and19 = and i32 %31, 524288, !dbg !2235
  %tobool20 = icmp ne i32 %and19, 0, !dbg !2235
  br i1 %tobool20, label %if.then, label %if.end, !dbg !2236

if.then:                                          ; preds = %land.lhs.true
  %32 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2237
  %33 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2238
  %rectx21 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %33, i32 0, i32 14, !dbg !2239
  %34 = load i32, i32* %rectx21, align 8, !dbg !2239
  %conv22 = sext i32 %34 to i64, !dbg !2238
  %mul23 = mul i64 4, %conv22, !dbg !2240
  %35 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2241
  %recty24 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %35, i32 0, i32 15, !dbg !2242
  %36 = load i32, i32* %recty24, align 4, !dbg !2242
  %conv25 = sext i32 %36 to i64, !dbg !2241
  %mul26 = mul i64 %mul23, %conv25, !dbg !2243
  %call27 = call i8* %32(i64 %mul26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)), !dbg !2237
  %37 = bitcast i8* %call27 to i32*, !dbg !2237
  %38 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2244
  %rectmask = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %38, i32 0, i32 7, !dbg !2245
  store i32* %37, i32** %rectmask, align 8, !dbg !2246
  br label %if.end, !dbg !2244

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %call28 = call %struct.PixStrMain* @addpsmain(%struct.ListBase* %psmlist), !dbg !2247
  %39 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2248
  %40 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2249
  %rectx29 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %40, i32 0, i32 14, !dbg !2250
  %41 = load i32, i32* %rectx29, align 8, !dbg !2250
  %conv30 = sext i32 %41 to i64, !dbg !2249
  %mul31 = mul i64 8, %conv30, !dbg !2251
  %42 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2252
  %recty32 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %42, i32 0, i32 15, !dbg !2253
  %43 = load i32, i32* %recty32, align 4, !dbg !2253
  %conv33 = sext i32 %43 to i64, !dbg !2252
  %mul34 = mul i64 %mul31, %conv33, !dbg !2254
  %add = add i64 %mul34, 4, !dbg !2255
  %call35 = call i8* %39(i64 %add, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)), !dbg !2248
  %44 = bitcast i8* %call35 to i64*, !dbg !2248
  %45 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2256
  %rectdaps = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %45, i32 0, i32 8, !dbg !2257
  store i64* %44, i64** %rectdaps, align 8, !dbg !2258
  %46 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2259
  %layflag36 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %46, i32 0, i32 6, !dbg !2261
  %47 = load i32, i32* %layflag36, align 8, !dbg !2261
  %and37 = and i32 %47, 8, !dbg !2262
  %tobool38 = icmp ne i32 %and37, 0, !dbg !2262
  br i1 %tobool38, label %if.then39, label %if.end51, !dbg !2263

if.then39:                                        ; preds = %if.end
  %48 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !2264
  %and40 = and i32 %48, 32, !dbg !2266
  %tobool41 = icmp ne i32 %and40, 0, !dbg !2266
  br i1 %tobool41, label %if.then42, label %if.end50, !dbg !2267

if.then42:                                        ; preds = %if.then39
  %49 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2268
  %50 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2269
  %rectx43 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %50, i32 0, i32 14, !dbg !2270
  %51 = load i32, i32* %rectx43, align 8, !dbg !2270
  %conv44 = sext i32 %51 to i64, !dbg !2269
  %mul45 = mul i64 4, %conv44, !dbg !2271
  %52 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2272
  %recty46 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %52, i32 0, i32 15, !dbg !2273
  %53 = load i32, i32* %recty46, align 4, !dbg !2273
  %conv47 = sext i32 %53 to i64, !dbg !2272
  %mul48 = mul i64 %mul45, %conv47, !dbg !2274
  %call49 = call i8* %49(i64 %mul48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)), !dbg !2268
  %54 = bitcast i8* %call49 to float*, !dbg !2268
  store float* %54, float** %edgerect, align 8, !dbg !2275
  br label %if.end50, !dbg !2276

if.end50:                                         ; preds = %if.then42, %if.then39
  br label %if.end51, !dbg !2277

if.end51:                                         ; preds = %if.end50, %if.end
  %55 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2278
  %sample = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %55, i32 0, i32 19, !dbg !2280
  store i16 0, i16* %sample, align 8, !dbg !2281
  br label %for.cond52, !dbg !2278

for.cond52:                                       ; preds = %for.inc, %if.end51
  %56 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2282
  %sample53 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %56, i32 0, i32 19, !dbg !2284
  %57 = load i16, i16* %sample53, align 8, !dbg !2284
  %conv54 = sext i16 %57 to i32, !dbg !2282
  %58 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !2285
  %conv55 = sext i16 %58 to i32, !dbg !2286
  %cmp = icmp slt i32 %conv54, %conv55, !dbg !2287
  br i1 %cmp, label %for.body57, label %for.end, !dbg !2288

for.body57:                                       ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata %struct.ZbufSolidData* %sdata, metadata !2289, metadata !DIExpression()), !dbg !2291
  %59 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2292
  %rl58 = getelementptr inbounds %struct.ZbufSolidData, %struct.ZbufSolidData* %sdata, i32 0, i32 0, !dbg !2293
  store %struct.RenderLayer* %59, %struct.RenderLayer** %rl58, align 8, !dbg !2294
  %psmlist59 = getelementptr inbounds %struct.ZbufSolidData, %struct.ZbufSolidData* %sdata, i32 0, i32 1, !dbg !2295
  store %struct.ListBase* %psmlist, %struct.ListBase** %psmlist59, align 8, !dbg !2296
  %60 = load float*, float** %edgerect, align 8, !dbg !2297
  %edgerect60 = getelementptr inbounds %struct.ZbufSolidData, %struct.ZbufSolidData* %sdata, i32 0, i32 2, !dbg !2298
  store float* %60, float** %edgerect60, align 8, !dbg !2299
  %61 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2300
  %62 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2301
  %63 = bitcast %struct.ZbufSolidData* %sdata to i8*, !dbg !2302
  call void @zbuffer_solid(%struct.RenderPart* %61, %struct.RenderLayer* %62, void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)* @make_pixelstructs, i8* %63), !dbg !2303
  %64 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !2304
  %65 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !2306
  %call61 = call i32 %64(i8* %65), !dbg !2307
  %tobool62 = icmp ne i32 %call61, 0, !dbg !2307
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !2308

if.then63:                                        ; preds = %for.body57
  br label %for.end, !dbg !2309

if.end64:                                         ; preds = %for.body57
  br label %for.inc, !dbg !2310

for.inc:                                          ; preds = %if.end64
  %66 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2311
  %sample65 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %66, i32 0, i32 19, !dbg !2312
  %67 = load i16, i16* %sample65, align 8, !dbg !2313
  %conv66 = sext i16 %67 to i32, !dbg !2313
  %add67 = add nsw i32 %conv66, 4, !dbg !2313
  %conv68 = trunc i32 %add67 to i16, !dbg !2313
  store i16 %conv68, i16* %sample65, align 8, !dbg !2313
  br label %for.cond52, !dbg !2314, !llvm.loop !2315

for.end:                                          ; preds = %if.then63, %for.cond52
  %68 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2317
  %layflag69 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %68, i32 0, i32 6, !dbg !2319
  %69 = load i32, i32* %layflag69, align 8, !dbg !2319
  %and70 = and i32 %69, 1, !dbg !2320
  %tobool71 = icmp ne i32 %and70, 0, !dbg !2320
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !2321

if.then72:                                        ; preds = %for.end
  %70 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2322
  %71 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2323
  call void @shadeDA_tile(%struct.RenderPart* %70, %struct.RenderLayer* %71), !dbg !2324
  br label %if.end73, !dbg !2324

if.end73:                                         ; preds = %if.then72, %for.end
  %72 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !2325
  %conv74 = sext i16 %72 to i32, !dbg !2327
  %and75 = and i32 %conv74, 8, !dbg !2328
  %tobool76 = icmp ne i32 %and75, 0, !dbg !2328
  br i1 %tobool76, label %if.then77, label %if.end83, !dbg !2329

if.then77:                                        ; preds = %if.end73
  %73 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2330
  %layflag78 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %73, i32 0, i32 6, !dbg !2332
  %74 = load i32, i32* %layflag78, align 8, !dbg !2332
  %and79 = and i32 %74, 4, !dbg !2333
  %tobool80 = icmp ne i32 %and79, 0, !dbg !2333
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !2334

if.then81:                                        ; preds = %if.then77
  %75 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2335
  %76 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2336
  call void @lamphalo_tile(%struct.RenderPart* %75, %struct.RenderLayer* %76), !dbg !2337
  br label %if.end82, !dbg !2337

if.end82:                                         ; preds = %if.then81, %if.then77
  br label %if.end83, !dbg !2338

if.end83:                                         ; preds = %if.end82, %if.end73
  %77 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !2339
  %conv84 = sext i16 %77 to i32, !dbg !2341
  %and85 = and i32 %conv84, 2, !dbg !2342
  %tobool86 = icmp ne i32 %and85, 0, !dbg !2342
  br i1 %tobool86, label %if.then87, label %if.end93, !dbg !2343

if.then87:                                        ; preds = %if.end83
  %78 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2344
  %layflag88 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %78, i32 0, i32 6, !dbg !2346
  %79 = load i32, i32* %layflag88, align 8, !dbg !2346
  %and89 = and i32 %79, 4, !dbg !2347
  %tobool90 = icmp ne i32 %and89, 0, !dbg !2347
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !2348

if.then91:                                        ; preds = %if.then87
  %80 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2349
  %81 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2350
  call void @halo_tile(%struct.RenderPart* %80, %struct.RenderLayer* %81), !dbg !2351
  br label %if.end92, !dbg !2351

if.end92:                                         ; preds = %if.then91, %if.then87
  br label %if.end93, !dbg !2352

if.end93:                                         ; preds = %if.end92, %if.end83
  %82 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !2353
  %conv94 = sext i16 %82 to i32, !dbg !2355
  %and95 = and i32 %conv94, 1, !dbg !2356
  %tobool96 = icmp ne i32 %and95, 0, !dbg !2356
  br i1 %tobool96, label %if.then98, label %lor.lhs.false, !dbg !2357

lor.lhs.false:                                    ; preds = %if.end93
  %83 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 63), align 4, !dbg !2358
  %tobool97 = icmp ne i32 %83, 0, !dbg !2359
  br i1 %tobool97, label %if.then98, label %if.end182, !dbg !2360

if.then98:                                        ; preds = %lor.lhs.false, %if.end93
  %84 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2361
  %layflag99 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %84, i32 0, i32 6, !dbg !2364
  %85 = load i32, i32* %layflag99, align 8, !dbg !2364
  %and100 = and i32 %85, 34, !dbg !2365
  %tobool101 = icmp ne i32 %and100, 0, !dbg !2365
  br i1 %tobool101, label %if.then102, label %if.end181, !dbg !2366

if.then102:                                       ; preds = %if.then98
  %86 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2367
  %fullresult = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %86, i32 0, i32 3, !dbg !2370
  %first103 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fullresult, i32 0, i32 0, !dbg !2371
  %87 = load i8*, i8** %first103, align 8, !dbg !2371
  %tobool104 = icmp ne i8* %87, null, !dbg !2367
  br i1 %tobool104, label %if.then105, label %if.else, !dbg !2372

if.then105:                                       ; preds = %if.then102
  %88 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2373
  %89 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2375
  %90 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2376
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %90, i32 0, i32 11, !dbg !2377
  %91 = load float*, float** %rectf, align 8, !dbg !2377
  %call106 = call i16* @zbuffer_transp_shade(%struct.RenderPart* %88, %struct.RenderLayer* %89, float* %91, %struct.ListBase* %psmlist), !dbg !2378
  br label %if.end180, !dbg !2379

if.else:                                          ; preds = %if.then102
  call void @llvm.dbg.declare(metadata i16** %ztramask, metadata !2380, metadata !DIExpression()), !dbg !2383
  call void @llvm.dbg.declare(metadata i16** %solidmask, metadata !2384, metadata !DIExpression()), !dbg !2385
  store i16* null, i16** %solidmask, align 8, !dbg !2385
  %92 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2386
  %93 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2387
  %rectx107 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %93, i32 0, i32 14, !dbg !2388
  %94 = load i32, i32* %rectx107, align 8, !dbg !2388
  %conv108 = sext i32 %94 to i64, !dbg !2387
  %mul109 = mul i64 16, %conv108, !dbg !2389
  %95 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2390
  %recty110 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %95, i32 0, i32 15, !dbg !2391
  %96 = load i32, i32* %recty110, align 4, !dbg !2391
  %conv111 = sext i32 %96 to i64, !dbg !2390
  %mul112 = mul i64 %mul109, %conv111, !dbg !2392
  %call113 = call i8* %92(i64 %mul112, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)), !dbg !2386
  %97 = bitcast i8* %call113 to float*, !dbg !2386
  %98 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2393
  %acolrect = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %98, i32 0, i32 12, !dbg !2394
  store float* %97, float** %acolrect, align 8, !dbg !2395
  call void @llvm.dbg.declare(metadata float** %sw_ap, metadata !2396, metadata !DIExpression()), !dbg !2398
  %99 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2398
  %acolrect114 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %99, i32 0, i32 12, !dbg !2398
  %100 = load float*, float** %acolrect114, align 8, !dbg !2398
  store float* %100, float** %sw_ap, align 8, !dbg !2398
  %101 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2398
  %rectf115 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %101, i32 0, i32 11, !dbg !2398
  %102 = load float*, float** %rectf115, align 8, !dbg !2398
  %103 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2398
  %acolrect116 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %103, i32 0, i32 12, !dbg !2398
  store float* %102, float** %acolrect116, align 8, !dbg !2398
  %104 = load float*, float** %sw_ap, align 8, !dbg !2398
  %105 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2398
  %rectf117 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %105, i32 0, i32 11, !dbg !2398
  store float* %104, float** %rectf117, align 8, !dbg !2398
  %106 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2399
  %107 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2400
  %108 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2401
  %rectf118 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %108, i32 0, i32 11, !dbg !2402
  %109 = load float*, float** %rectf118, align 8, !dbg !2402
  %call119 = call i16* @zbuffer_transp_shade(%struct.RenderPart* %106, %struct.RenderLayer* %107, float* %109, %struct.ListBase* %psmlist), !dbg !2403
  store i16* %call119, i16** %ztramask, align 8, !dbg !2404
  call void @llvm.dbg.declare(metadata float** %sw_ap120, metadata !2405, metadata !DIExpression()), !dbg !2407
  %110 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2407
  %acolrect121 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %110, i32 0, i32 12, !dbg !2407
  %111 = load float*, float** %acolrect121, align 8, !dbg !2407
  store float* %111, float** %sw_ap120, align 8, !dbg !2407
  %112 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2407
  %rectf122 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %112, i32 0, i32 11, !dbg !2407
  %113 = load float*, float** %rectf122, align 8, !dbg !2407
  %114 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2407
  %acolrect123 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %114, i32 0, i32 12, !dbg !2407
  store float* %113, float** %acolrect123, align 8, !dbg !2407
  %115 = load float*, float** %sw_ap120, align 8, !dbg !2407
  %116 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2407
  %rectf124 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %116, i32 0, i32 11, !dbg !2407
  store float* %115, float** %rectf124, align 8, !dbg !2407
  %117 = load i16*, i16** %ztramask, align 8, !dbg !2408
  %tobool125 = icmp ne i16* %117, null, !dbg !2408
  br i1 %tobool125, label %if.then126, label %if.end128, !dbg !2410

if.then126:                                       ; preds = %if.else
  %118 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2411
  %call127 = call i16* @make_solid_mask(%struct.RenderPart* %118), !dbg !2412
  store i16* %call127, i16** %solidmask, align 8, !dbg !2413
  br label %if.end128, !dbg !2414

if.end128:                                        ; preds = %if.then126, %if.else
  %119 = load i16*, i16** %ztramask, align 8, !dbg !2415
  %tobool129 = icmp ne i16* %119, null, !dbg !2415
  br i1 %tobool129, label %land.lhs.true130, label %if.else155, !dbg !2417

land.lhs.true130:                                 ; preds = %if.end128
  %120 = load i16*, i16** %solidmask, align 8, !dbg !2418
  %tobool131 = icmp ne i16* %120, null, !dbg !2418
  br i1 %tobool131, label %if.then132, label %if.else155, !dbg !2419

if.then132:                                       ; preds = %land.lhs.true130
  call void @llvm.dbg.declare(metadata i16** %sps, metadata !2420, metadata !DIExpression()), !dbg !2422
  %121 = load i16*, i16** %solidmask, align 8, !dbg !2423
  store i16* %121, i16** %sps, align 8, !dbg !2422
  call void @llvm.dbg.declare(metadata i16** %spz, metadata !2424, metadata !DIExpression()), !dbg !2425
  %122 = load i16*, i16** %ztramask, align 8, !dbg !2426
  store i16* %122, i16** %spz, align 8, !dbg !2425
  call void @llvm.dbg.declare(metadata i16* %fullmask, metadata !2427, metadata !DIExpression()), !dbg !2428
  %123 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !2429
  %conv133 = sext i16 %123 to i32, !dbg !2430
  %shl = shl i32 1, %conv133, !dbg !2431
  %sub = sub nsw i32 %shl, 1, !dbg !2432
  %conv134 = trunc i32 %sub to i16, !dbg !2433
  store i16 %conv134, i16* %fullmask, align 2, !dbg !2428
  call void @llvm.dbg.declare(metadata float** %fcol, metadata !2434, metadata !DIExpression()), !dbg !2435
  %124 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2436
  %rectf135 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %124, i32 0, i32 11, !dbg !2437
  %125 = load float*, float** %rectf135, align 8, !dbg !2437
  store float* %125, float** %fcol, align 8, !dbg !2435
  call void @llvm.dbg.declare(metadata float** %acol, metadata !2438, metadata !DIExpression()), !dbg !2439
  %126 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2440
  %acolrect136 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %126, i32 0, i32 12, !dbg !2441
  %127 = load float*, float** %acolrect136, align 8, !dbg !2441
  store float* %127, float** %acol, align 8, !dbg !2439
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2442, metadata !DIExpression()), !dbg !2443
  %128 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2444
  %rectx137 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %128, i32 0, i32 14, !dbg !2446
  %129 = load i32, i32* %rectx137, align 8, !dbg !2446
  %130 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2447
  %recty138 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %130, i32 0, i32 15, !dbg !2448
  %131 = load i32, i32* %recty138, align 4, !dbg !2448
  %mul139 = mul nsw i32 %129, %131, !dbg !2449
  store i32 %mul139, i32* %x, align 4, !dbg !2450
  br label %for.cond140, !dbg !2451

for.cond140:                                      ; preds = %for.inc151, %if.then132
  %132 = load i32, i32* %x, align 4, !dbg !2452
  %cmp141 = icmp sgt i32 %132, 0, !dbg !2454
  br i1 %cmp141, label %for.body143, label %for.end154, !dbg !2455

for.body143:                                      ; preds = %for.cond140
  %133 = load i16*, i16** %sps, align 8, !dbg !2456
  %134 = load i16, i16* %133, align 2, !dbg !2459
  %conv144 = zext i16 %134 to i32, !dbg !2459
  %135 = load i16, i16* %fullmask, align 2, !dbg !2460
  %conv145 = zext i16 %135 to i32, !dbg !2460
  %cmp146 = icmp eq i32 %conv144, %conv145, !dbg !2461
  br i1 %cmp146, label %if.then148, label %if.else149, !dbg !2462

if.then148:                                       ; preds = %for.body143
  %136 = load float*, float** %fcol, align 8, !dbg !2463
  %137 = load float*, float** %acol, align 8, !dbg !2464
  call void @addAlphaOverFloat(float* %136, float* %137), !dbg !2465
  br label %if.end150, !dbg !2465

if.else149:                                       ; preds = %for.body143
  %138 = load float*, float** %fcol, align 8, !dbg !2466
  %139 = load float*, float** %acol, align 8, !dbg !2467
  %140 = load i16*, i16** %sps, align 8, !dbg !2468
  %141 = load i16, i16* %140, align 2, !dbg !2469
  %142 = load i16*, i16** %spz, align 8, !dbg !2470
  %143 = load i16, i16* %142, align 2, !dbg !2471
  call void @addAlphaOverFloatMask(float* %138, float* %139, i16 zeroext %141, i16 zeroext %143), !dbg !2472
  br label %if.end150

if.end150:                                        ; preds = %if.else149, %if.then148
  br label %for.inc151, !dbg !2473

for.inc151:                                       ; preds = %if.end150
  %144 = load i32, i32* %x, align 4, !dbg !2474
  %dec = add nsw i32 %144, -1, !dbg !2474
  store i32 %dec, i32* %x, align 4, !dbg !2474
  %145 = load float*, float** %acol, align 8, !dbg !2475
  %add.ptr = getelementptr inbounds float, float* %145, i64 4, !dbg !2475
  store float* %add.ptr, float** %acol, align 8, !dbg !2475
  %146 = load float*, float** %fcol, align 8, !dbg !2476
  %add.ptr152 = getelementptr inbounds float, float* %146, i64 4, !dbg !2476
  store float* %add.ptr152, float** %fcol, align 8, !dbg !2476
  %147 = load i16*, i16** %sps, align 8, !dbg !2477
  %incdec.ptr = getelementptr inbounds i16, i16* %147, i32 1, !dbg !2477
  store i16* %incdec.ptr, i16** %sps, align 8, !dbg !2477
  %148 = load i16*, i16** %spz, align 8, !dbg !2478
  %incdec.ptr153 = getelementptr inbounds i16, i16* %148, i32 1, !dbg !2478
  store i16* %incdec.ptr153, i16** %spz, align 8, !dbg !2478
  br label %for.cond140, !dbg !2479, !llvm.loop !2480

for.end154:                                       ; preds = %for.cond140
  br label %if.end173, !dbg !2482

if.else155:                                       ; preds = %land.lhs.true130, %if.end128
  call void @llvm.dbg.declare(metadata float** %fcol156, metadata !2483, metadata !DIExpression()), !dbg !2485
  %149 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2486
  %rectf157 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %149, i32 0, i32 11, !dbg !2487
  %150 = load float*, float** %rectf157, align 8, !dbg !2487
  store float* %150, float** %fcol156, align 8, !dbg !2485
  call void @llvm.dbg.declare(metadata float** %acol158, metadata !2488, metadata !DIExpression()), !dbg !2489
  %151 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2490
  %acolrect159 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %151, i32 0, i32 12, !dbg !2491
  %152 = load float*, float** %acolrect159, align 8, !dbg !2491
  store float* %152, float** %acol158, align 8, !dbg !2489
  call void @llvm.dbg.declare(metadata i32* %x160, metadata !2492, metadata !DIExpression()), !dbg !2493
  %153 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2494
  %rectx161 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %153, i32 0, i32 14, !dbg !2496
  %154 = load i32, i32* %rectx161, align 8, !dbg !2496
  %155 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2497
  %recty162 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %155, i32 0, i32 15, !dbg !2498
  %156 = load i32, i32* %recty162, align 4, !dbg !2498
  %mul163 = mul nsw i32 %154, %156, !dbg !2499
  store i32 %mul163, i32* %x160, align 4, !dbg !2500
  br label %for.cond164, !dbg !2501

for.cond164:                                      ; preds = %for.inc168, %if.else155
  %157 = load i32, i32* %x160, align 4, !dbg !2502
  %cmp165 = icmp sgt i32 %157, 0, !dbg !2504
  br i1 %cmp165, label %for.body167, label %for.end172, !dbg !2505

for.body167:                                      ; preds = %for.cond164
  %158 = load float*, float** %fcol156, align 8, !dbg !2506
  %159 = load float*, float** %acol158, align 8, !dbg !2508
  call void @addAlphaOverFloat(float* %158, float* %159), !dbg !2509
  br label %for.inc168, !dbg !2510

for.inc168:                                       ; preds = %for.body167
  %160 = load i32, i32* %x160, align 4, !dbg !2511
  %dec169 = add nsw i32 %160, -1, !dbg !2511
  store i32 %dec169, i32* %x160, align 4, !dbg !2511
  %161 = load float*, float** %acol158, align 8, !dbg !2512
  %add.ptr170 = getelementptr inbounds float, float* %161, i64 4, !dbg !2512
  store float* %add.ptr170, float** %acol158, align 8, !dbg !2512
  %162 = load float*, float** %fcol156, align 8, !dbg !2513
  %add.ptr171 = getelementptr inbounds float, float* %162, i64 4, !dbg !2513
  store float* %add.ptr171, float** %fcol156, align 8, !dbg !2513
  br label %for.cond164, !dbg !2514, !llvm.loop !2515

for.end172:                                       ; preds = %for.cond164
  br label %if.end173

if.end173:                                        ; preds = %for.end172, %for.end154
  %163 = load i16*, i16** %solidmask, align 8, !dbg !2517
  %tobool174 = icmp ne i16* %163, null, !dbg !2517
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !2519

if.then175:                                       ; preds = %if.end173
  %164 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2520
  %165 = load i16*, i16** %solidmask, align 8, !dbg !2521
  %166 = bitcast i16* %165 to i8*, !dbg !2521
  call void %164(i8* %166), !dbg !2520
  br label %if.end176, !dbg !2520

if.end176:                                        ; preds = %if.then175, %if.end173
  %167 = load i16*, i16** %ztramask, align 8, !dbg !2522
  %tobool177 = icmp ne i16* %167, null, !dbg !2522
  br i1 %tobool177, label %if.then178, label %if.end179, !dbg !2524

if.then178:                                       ; preds = %if.end176
  %168 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2525
  %169 = load i16*, i16** %ztramask, align 8, !dbg !2526
  %170 = bitcast i16* %169 to i8*, !dbg !2526
  call void %168(i8* %170), !dbg !2525
  br label %if.end179, !dbg !2525

if.end179:                                        ; preds = %if.then178, %if.end176
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.then105
  br label %if.end181, !dbg !2527

if.end181:                                        ; preds = %if.end180, %if.then98
  br label %if.end182, !dbg !2528

if.end182:                                        ; preds = %if.end181, %lor.lhs.false
  %171 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2529
  %layflag183 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %171, i32 0, i32 6, !dbg !2531
  %172 = load i32, i32* %layflag183, align 8, !dbg !2531
  %and184 = and i32 %172, 16, !dbg !2532
  %tobool185 = icmp ne i32 %and184, 0, !dbg !2532
  br i1 %tobool185, label %if.then186, label %if.end187, !dbg !2533

if.then186:                                       ; preds = %if.end182
  %173 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2534
  %174 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2535
  call void @atm_tile(%struct.RenderPart* %173, %struct.RenderLayer* %174), !dbg !2536
  br label %if.end187, !dbg !2536

if.end187:                                        ; preds = %if.then186, %if.end182
  %175 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2537
  %layflag188 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %175, i32 0, i32 6, !dbg !2539
  %176 = load i32, i32* %layflag188, align 8, !dbg !2539
  %and189 = and i32 %176, 16, !dbg !2540
  %tobool190 = icmp ne i32 %and189, 0, !dbg !2540
  br i1 %tobool190, label %if.then191, label %if.end192, !dbg !2541

if.then191:                                       ; preds = %if.end187
  %177 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2542
  %178 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2543
  call void @sky_tile(%struct.RenderPart* %177, %struct.RenderLayer* %178), !dbg !2544
  br label %if.end192, !dbg !2544

if.end192:                                        ; preds = %if.then191, %if.end187
  %179 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2545
  %layflag193 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %179, i32 0, i32 6, !dbg !2547
  %180 = load i32, i32* %layflag193, align 8, !dbg !2547
  %and194 = and i32 %180, 8, !dbg !2548
  %tobool195 = icmp ne i32 %and194, 0, !dbg !2548
  br i1 %tobool195, label %if.then196, label %if.end202, !dbg !2549

if.then196:                                       ; preds = %if.end192
  %181 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !2550
  %and197 = and i32 %181, 32, !dbg !2552
  %tobool198 = icmp ne i32 %and197, 0, !dbg !2552
  br i1 %tobool198, label %if.then199, label %if.end201, !dbg !2553

if.then199:                                       ; preds = %if.then196
  %182 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2554
  %183 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2555
  %rectf200 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %183, i32 0, i32 11, !dbg !2556
  %184 = load float*, float** %rectf200, align 8, !dbg !2556
  %185 = load float*, float** %edgerect, align 8, !dbg !2557
  call void @edge_enhance_add(%struct.RenderPart* %182, float* %184, float* %185), !dbg !2558
  br label %if.end201, !dbg !2558

if.end201:                                        ; preds = %if.then199, %if.then196
  br label %if.end202, !dbg !2559

if.end202:                                        ; preds = %if.end201, %if.end192
  %186 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2560
  %passflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %186, i32 0, i32 7, !dbg !2562
  %187 = load i32, i32* %passflag, align 4, !dbg !2562
  %and203 = and i32 %187, 512, !dbg !2563
  %tobool204 = icmp ne i32 %and203, 0, !dbg !2563
  br i1 %tobool204, label %if.then205, label %if.end206, !dbg !2564

if.then205:                                       ; preds = %if.end202
  %188 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2565
  %189 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2566
  call void @reset_sky_speed(%struct.RenderPart* %188, %struct.RenderLayer* %189), !dbg !2567
  br label %if.end206, !dbg !2567

if.end206:                                        ; preds = %if.then205, %if.end202
  %190 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2568
  %191 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2569
  call void @clamp_alpha_rgb_range(%struct.RenderPart* %190, %struct.RenderLayer* %191), !dbg !2570
  %192 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2571
  %193 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2572
  %rectdaps207 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %193, i32 0, i32 8, !dbg !2573
  %194 = load i64*, i64** %rectdaps207, align 8, !dbg !2573
  %195 = bitcast i64* %194 to i8*, !dbg !2572
  call void %192(i8* %195), !dbg !2571
  %196 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2574
  %rectdaps208 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %196, i32 0, i32 8, !dbg !2575
  store i64* null, i64** %rectdaps208, align 8, !dbg !2576
  call void @freeps(%struct.ListBase* %psmlist), !dbg !2577
  %197 = load float*, float** %edgerect, align 8, !dbg !2578
  %tobool209 = icmp ne float* %197, null, !dbg !2578
  br i1 %tobool209, label %if.then210, label %if.end211, !dbg !2580

if.then210:                                       ; preds = %if.end206
  %198 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2581
  %199 = load float*, float** %edgerect, align 8, !dbg !2582
  %200 = bitcast float* %199 to i8*, !dbg !2582
  call void %198(i8* %200), !dbg !2581
  br label %if.end211, !dbg !2581

if.end211:                                        ; preds = %if.then210, %if.end206
  store float* null, float** %edgerect, align 8, !dbg !2583
  %201 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2584
  %rectmask212 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %201, i32 0, i32 7, !dbg !2586
  %202 = load i32*, i32** %rectmask212, align 8, !dbg !2586
  %tobool213 = icmp ne i32* %202, null, !dbg !2584
  br i1 %tobool213, label %if.then214, label %if.end217, !dbg !2587

if.then214:                                       ; preds = %if.end211
  %203 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2588
  %204 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2590
  %rectmask215 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %204, i32 0, i32 7, !dbg !2591
  %205 = load i32*, i32** %rectmask215, align 8, !dbg !2591
  %206 = bitcast i32* %205 to i8*, !dbg !2590
  call void %203(i8* %206), !dbg !2588
  %207 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2592
  %rectmask216 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %207, i32 0, i32 7, !dbg !2593
  store i32* null, i32** %rectmask216, align 8, !dbg !2594
  br label %if.end217, !dbg !2595

if.end217:                                        ; preds = %if.then214, %if.end211
  br label %for.inc218, !dbg !2596

for.inc218:                                       ; preds = %if.end217
  %208 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2597
  %next = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %208, i32 0, i32 0, !dbg !2598
  %209 = load %struct.RenderLayer*, %struct.RenderLayer** %next, align 8, !dbg !2598
  store %struct.RenderLayer* %209, %struct.RenderLayer** %rl, align 8, !dbg !2599
  br label %for.cond, !dbg !2600, !llvm.loop !2601

for.end219:                                       ; preds = %for.cond
  %210 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2603
  %211 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2604
  %recto220 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %211, i32 0, i32 4, !dbg !2605
  %212 = load i32*, i32** %recto220, align 8, !dbg !2605
  %213 = bitcast i32* %212 to i8*, !dbg !2604
  call void %210(i8* %213), !dbg !2603
  %214 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2606
  %recto221 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %214, i32 0, i32 4, !dbg !2607
  store i32* null, i32** %recto221, align 8, !dbg !2608
  %215 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2609
  %216 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2610
  %rectp222 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %216, i32 0, i32 5, !dbg !2611
  %217 = load i32*, i32** %rectp222, align 8, !dbg !2611
  %218 = bitcast i32* %217 to i8*, !dbg !2610
  call void %215(i8* %218), !dbg !2609
  %219 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2612
  %rectp223 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %219, i32 0, i32 5, !dbg !2613
  store i32* null, i32** %rectp223, align 8, !dbg !2614
  %220 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2615
  %221 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2616
  %rectz224 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %221, i32 0, i32 6, !dbg !2617
  %222 = load i32*, i32** %rectz224, align 8, !dbg !2617
  %223 = bitcast i32* %222 to i8*, !dbg !2616
  call void %220(i8* %223), !dbg !2615
  %224 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2618
  %rectz225 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %224, i32 0, i32 6, !dbg !2619
  store i32* null, i32** %rectz225, align 8, !dbg !2620
  %225 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !2621
  %renrect = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %225, i32 0, i32 13, !dbg !2622
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect, i32 0, i32 3, !dbg !2623
  store volatile i32 0, i32* %ymax, align 4, !dbg !2624
  %226 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !2625
  %renrect226 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %226, i32 0, i32 13, !dbg !2626
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect226, i32 0, i32 2, !dbg !2627
  store volatile i32 0, i32* %ymin, align 8, !dbg !2628
  %227 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !2629
  %call227 = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* @R, %struct.RenderResult* %227), !dbg !2630
  %228 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !2631
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %228, i32 0, i32 14, !dbg !2632
  store %struct.RenderLayer* %call227, %struct.RenderLayer** %renlay, align 8, !dbg !2633
  ret void, !dbg !2634
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.PixStrMain* @addpsmain(%struct.ListBase* %lb) #0 !dbg !2635 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %psm = alloca %struct.PixStrMain*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !2638, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.declare(metadata %struct.PixStrMain** %psm, metadata !2640, metadata !DIExpression()), !dbg !2641
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2642
  %call = call i8* %0(i64 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)), !dbg !2642
  %1 = bitcast i8* %call to %struct.PixStrMain*, !dbg !2643
  store %struct.PixStrMain* %1, %struct.PixStrMain** %psm, align 8, !dbg !2644
  %2 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2645
  %3 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !2646
  %4 = bitcast %struct.PixStrMain* %3 to i8*, !dbg !2646
  call void @BLI_addtail(%struct.ListBase* %2, i8* %4), !dbg !2647
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2648
  %call1 = call i8* %5(i64 131072, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)), !dbg !2648
  %6 = bitcast i8* %call1 to %struct.PixStr*, !dbg !2649
  %7 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !2650
  %ps = getelementptr inbounds %struct.PixStrMain, %struct.PixStrMain* %7, i32 0, i32 2, !dbg !2651
  store %struct.PixStr* %6, %struct.PixStr** %ps, align 8, !dbg !2652
  %8 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !2653
  %counter = getelementptr inbounds %struct.PixStrMain, %struct.PixStrMain* %8, i32 0, i32 3, !dbg !2654
  store i32 0, i32* %counter, align 8, !dbg !2655
  %9 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !2656
  ret %struct.PixStrMain* %9, !dbg !2657
}

declare dso_local void @zbuffer_solid(%struct.RenderPart*, %struct.RenderLayer*, void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @make_pixelstructs(%struct.RenderPart* %pa, %struct.ZSpan* %zspan, i32 %sample, i8* %data) #0 !dbg !2658 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %zspan.addr = alloca %struct.ZSpan*, align 8
  %sample.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %sdata = alloca %struct.ZbufSolidData*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %rd = alloca i64*, align 8
  %ro = alloca i32*, align 8
  %rp = alloca i32*, align 8
  %rz = alloca i32*, align 8
  %rm = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !2740, metadata !DIExpression()), !dbg !2741
  store %struct.ZSpan* %zspan, %struct.ZSpan** %zspan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ZSpan** %zspan.addr, metadata !2742, metadata !DIExpression()), !dbg !2743
  store i32 %sample, i32* %sample.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sample.addr, metadata !2744, metadata !DIExpression()), !dbg !2745
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2746, metadata !DIExpression()), !dbg !2747
  call void @llvm.dbg.declare(metadata %struct.ZbufSolidData** %sdata, metadata !2748, metadata !DIExpression()), !dbg !2749
  %0 = load i8*, i8** %data.addr, align 8, !dbg !2750
  %1 = bitcast i8* %0 to %struct.ZbufSolidData*, !dbg !2751
  store %struct.ZbufSolidData* %1, %struct.ZbufSolidData** %sdata, align 8, !dbg !2749
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !2752, metadata !DIExpression()), !dbg !2753
  %2 = load %struct.ZbufSolidData*, %struct.ZbufSolidData** %sdata, align 8, !dbg !2754
  %psmlist = getelementptr inbounds %struct.ZbufSolidData, %struct.ZbufSolidData* %2, i32 0, i32 1, !dbg !2755
  %3 = load %struct.ListBase*, %struct.ListBase** %psmlist, align 8, !dbg !2755
  store %struct.ListBase* %3, %struct.ListBase** %lb, align 8, !dbg !2753
  call void @llvm.dbg.declare(metadata i64** %rd, metadata !2756, metadata !DIExpression()), !dbg !2757
  %4 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2758
  %rectdaps = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %4, i32 0, i32 8, !dbg !2759
  %5 = load i64*, i64** %rectdaps, align 8, !dbg !2759
  store i64* %5, i64** %rd, align 8, !dbg !2757
  call void @llvm.dbg.declare(metadata i32** %ro, metadata !2760, metadata !DIExpression()), !dbg !2763
  %6 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2764
  %recto = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %6, i32 0, i32 20, !dbg !2765
  %7 = load i32*, i32** %recto, align 8, !dbg !2765
  store i32* %7, i32** %ro, align 8, !dbg !2763
  call void @llvm.dbg.declare(metadata i32** %rp, metadata !2766, metadata !DIExpression()), !dbg !2767
  %8 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2768
  %rectp = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %8, i32 0, i32 19, !dbg !2769
  %9 = load i32*, i32** %rectp, align 8, !dbg !2769
  store i32* %9, i32** %rp, align 8, !dbg !2767
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !2770, metadata !DIExpression()), !dbg !2771
  %10 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2772
  %rectz = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %10, i32 0, i32 16, !dbg !2773
  %11 = load i32*, i32** %rectz, align 8, !dbg !2773
  store i32* %11, i32** %rz, align 8, !dbg !2771
  call void @llvm.dbg.declare(metadata i32** %rm, metadata !2774, metadata !DIExpression()), !dbg !2775
  %12 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2776
  %rectmask = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %12, i32 0, i32 21, !dbg !2777
  %13 = load i32*, i32** %rectmask, align 8, !dbg !2777
  store i32* %13, i32** %rm, align 8, !dbg !2775
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2778, metadata !DIExpression()), !dbg !2779
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2780, metadata !DIExpression()), !dbg !2781
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !2782, metadata !DIExpression()), !dbg !2783
  %14 = load i32, i32* %sample.addr, align 4, !dbg !2784
  %shl = shl i32 1, %14, !dbg !2785
  store i32 %shl, i32* %mask, align 4, !dbg !2783
  store i32 0, i32* %y, align 4, !dbg !2786
  br label %for.cond, !dbg !2788

for.cond:                                         ; preds = %for.inc10, %entry
  %15 = load i32, i32* %y, align 4, !dbg !2789
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2791
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 15, !dbg !2792
  %17 = load i32, i32* %recty, align 4, !dbg !2792
  %cmp = icmp slt i32 %15, %17, !dbg !2793
  br i1 %cmp, label %for.body, label %for.end12, !dbg !2794

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !2795
  br label %for.cond1, !dbg !2798

for.cond1:                                        ; preds = %for.inc, %for.body
  %18 = load i32, i32* %x, align 4, !dbg !2799
  %19 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2801
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %19, i32 0, i32 14, !dbg !2802
  %20 = load i32, i32* %rectx, align 8, !dbg !2802
  %cmp2 = icmp slt i32 %18, %20, !dbg !2803
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !2804

for.body3:                                        ; preds = %for.cond1
  %21 = load i32*, i32** %rp, align 8, !dbg !2805
  %22 = load i32, i32* %21, align 4, !dbg !2808
  %tobool = icmp ne i32 %22, 0, !dbg !2808
  br i1 %tobool, label %if.then, label %if.end, !dbg !2809

if.then:                                          ; preds = %for.body3
  %23 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !2810
  %24 = load i64*, i64** %rd, align 8, !dbg !2812
  %25 = load i32*, i32** %ro, align 8, !dbg !2813
  %26 = load i32, i32* %25, align 4, !dbg !2814
  %27 = load i32*, i32** %rp, align 8, !dbg !2815
  %28 = load i32, i32* %27, align 4, !dbg !2816
  %29 = load i32*, i32** %rz, align 8, !dbg !2817
  %30 = load i32, i32* %29, align 4, !dbg !2818
  %31 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2819
  %rectmask4 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %31, i32 0, i32 21, !dbg !2820
  %32 = load i32*, i32** %rectmask4, align 8, !dbg !2820
  %tobool5 = icmp ne i32* %32, null, !dbg !2821
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !2821

cond.true:                                        ; preds = %if.then
  %33 = load i32*, i32** %rm, align 8, !dbg !2822
  %34 = load i32, i32* %33, align 4, !dbg !2823
  br label %cond.end, !dbg !2821

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !2821

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ 0, %cond.false ], !dbg !2821
  %35 = load i32, i32* %mask, align 4, !dbg !2824
  %conv = trunc i32 %35 to i16, !dbg !2824
  call void @addps(%struct.ListBase* %23, i64* %24, i32 %26, i32 %28, i32 %30, i32 %cond, i16 zeroext %conv), !dbg !2825
  br label %if.end, !dbg !2826

if.end:                                           ; preds = %cond.end, %for.body3
  br label %for.inc, !dbg !2827

for.inc:                                          ; preds = %if.end
  %36 = load i32, i32* %x, align 4, !dbg !2828
  %inc = add nsw i32 %36, 1, !dbg !2828
  store i32 %inc, i32* %x, align 4, !dbg !2828
  %37 = load i64*, i64** %rd, align 8, !dbg !2829
  %incdec.ptr = getelementptr inbounds i64, i64* %37, i32 1, !dbg !2829
  store i64* %incdec.ptr, i64** %rd, align 8, !dbg !2829
  %38 = load i32*, i32** %rp, align 8, !dbg !2830
  %incdec.ptr6 = getelementptr inbounds i32, i32* %38, i32 1, !dbg !2830
  store i32* %incdec.ptr6, i32** %rp, align 8, !dbg !2830
  %39 = load i32*, i32** %ro, align 8, !dbg !2831
  %incdec.ptr7 = getelementptr inbounds i32, i32* %39, i32 1, !dbg !2831
  store i32* %incdec.ptr7, i32** %ro, align 8, !dbg !2831
  %40 = load i32*, i32** %rz, align 8, !dbg !2832
  %incdec.ptr8 = getelementptr inbounds i32, i32* %40, i32 1, !dbg !2832
  store i32* %incdec.ptr8, i32** %rz, align 8, !dbg !2832
  %41 = load i32*, i32** %rm, align 8, !dbg !2833
  %incdec.ptr9 = getelementptr inbounds i32, i32* %41, i32 1, !dbg !2833
  store i32* %incdec.ptr9, i32** %rm, align 8, !dbg !2833
  br label %for.cond1, !dbg !2834, !llvm.loop !2835

for.end:                                          ; preds = %for.cond1
  br label %for.inc10, !dbg !2837

for.inc10:                                        ; preds = %for.end
  %42 = load i32, i32* %y, align 4, !dbg !2838
  %inc11 = add nsw i32 %42, 1, !dbg !2838
  store i32 %inc11, i32* %y, align 4, !dbg !2838
  br label %for.cond, !dbg !2839, !llvm.loop !2840

for.end12:                                        ; preds = %for.cond
  %43 = load %struct.ZbufSolidData*, %struct.ZbufSolidData** %sdata, align 8, !dbg !2842
  %rl = getelementptr inbounds %struct.ZbufSolidData, %struct.ZbufSolidData* %43, i32 0, i32 0, !dbg !2844
  %44 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !2844
  %layflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %44, i32 0, i32 6, !dbg !2845
  %45 = load i32, i32* %layflag, align 8, !dbg !2845
  %and = and i32 %45, 8, !dbg !2846
  %tobool13 = icmp ne i32 %and, 0, !dbg !2846
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !2847

if.then14:                                        ; preds = %for.end12
  %46 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !2848
  %and15 = and i32 %46, 32, !dbg !2850
  %tobool16 = icmp ne i32 %and15, 0, !dbg !2850
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !2851

if.then17:                                        ; preds = %if.then14
  %47 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2852
  %48 = load %struct.ZbufSolidData*, %struct.ZbufSolidData** %sdata, align 8, !dbg !2853
  %edgerect = getelementptr inbounds %struct.ZbufSolidData, %struct.ZbufSolidData* %48, i32 0, i32 2, !dbg !2854
  %49 = load float*, float** %edgerect, align 8, !dbg !2854
  %50 = load %struct.ZSpan*, %struct.ZSpan** %zspan.addr, align 8, !dbg !2855
  %rectz18 = getelementptr inbounds %struct.ZSpan, %struct.ZSpan* %50, i32 0, i32 16, !dbg !2856
  %51 = load i32*, i32** %rectz18, align 8, !dbg !2856
  call void @edge_enhance_tile(%struct.RenderPart* %47, float* %49, i32* %51), !dbg !2857
  br label %if.end19, !dbg !2857

if.end19:                                         ; preds = %if.then17, %if.then14
  br label %if.end20, !dbg !2858

if.end20:                                         ; preds = %if.end19, %for.end12
  ret void, !dbg !2859
}

; Function Attrs: noinline nounwind uwtable
define internal void @shadeDA_tile(%struct.RenderPart* %pa, %struct.RenderLayer* %rl) #0 !dbg !2860 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %rr = alloca %struct.RenderResult*, align 8
  %ssamp = alloca %struct.ShadeSample, align 8
  %rd = alloca i64*, align 8
  %rectdaps = alloca i64*, align 8
  %samp = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %seed = alloca i32, align 4
  %crop = alloca i32, align 4
  %offs = alloca i32, align 4
  %od = alloca i32, align 4
  %a = alloca i32, align 4
  %smask = alloca i32, align 4
  %mask46 = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !2863, metadata !DIExpression()), !dbg !2864
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !2865, metadata !DIExpression()), !dbg !2866
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr, metadata !2867, metadata !DIExpression()), !dbg !2868
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !2869
  %result = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 2, !dbg !2870
  %1 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !2870
  store %struct.RenderResult* %1, %struct.RenderResult** %rr, align 8, !dbg !2868
  call void @llvm.dbg.declare(metadata %struct.ShadeSample* %ssamp, metadata !2871, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.declare(metadata i64** %rd, metadata !3409, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.declare(metadata i64** %rectdaps, metadata !3411, metadata !DIExpression()), !dbg !3412
  %2 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3413
  %rectdaps1 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %2, i32 0, i32 8, !dbg !3414
  %3 = load i64*, i64** %rectdaps1, align 8, !dbg !3414
  store i64* %3, i64** %rectdaps, align 8, !dbg !3412
  call void @llvm.dbg.declare(metadata i32* %samp, metadata !3415, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3417, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3419, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !3421, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.declare(metadata i32* %crop, metadata !3423, metadata !DIExpression()), !dbg !3424
  store i32 0, i32* %crop, align 4, !dbg !3424
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !3425, metadata !DIExpression()), !dbg !3426
  store i32 0, i32* %offs, align 4, !dbg !3426
  call void @llvm.dbg.declare(metadata i32* %od, metadata !3427, metadata !DIExpression()), !dbg !3428
  %4 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !3429
  %5 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !3431
  %call = call i32 %4(i8* %5), !dbg !3432
  %tobool = icmp ne i32 %call, 0, !dbg !3432
  br i1 %tobool, label %if.then, label %if.end, !dbg !3433

if.then:                                          ; preds = %entry
  br label %if.end114, !dbg !3434

if.end:                                           ; preds = %entry
  %6 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !3435
  %and = and i32 %6, 2, !dbg !3437
  %tobool2 = icmp ne i32 %and, 0, !dbg !3437
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !3438

if.then3:                                         ; preds = %if.end
  %7 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3439
  call void @ISB_create(%struct.RenderPart* %7, %struct.APixstr* null), !dbg !3440
  br label %if.end4, !dbg !3440

if.end4:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3441
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 14, !dbg !3442
  %9 = load i32, i32* %rectx, align 8, !dbg !3442
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3443
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 13, !dbg !3444
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !3445
  %11 = load i32, i32* %ymin, align 8, !dbg !3445
  %mul = mul nsw i32 %9, %11, !dbg !3446
  store i32 %mul, i32* %seed, align 4, !dbg !3447
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3448
  %13 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !3449
  call void @shade_sample_initialize(%struct.ShadeSample* %ssamp, %struct.RenderPart* %12, %struct.RenderLayer* %13), !dbg !3450
  %14 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 56), align 8, !dbg !3451
  %tobool5 = icmp ne i8* %14, null, !dbg !3453
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !3454

if.then6:                                         ; preds = %if.end4
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3455
  call void @cache_occ_samples(%struct.Render* @R, %struct.RenderPart* %15, %struct.ShadeSample* %ssamp), !dbg !3456
  br label %if.end7, !dbg !3456

if.end7:                                          ; preds = %if.then6, %if.end4
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3457
  %crop8 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 17, !dbg !3459
  %17 = load i16, i16* %crop8, align 4, !dbg !3459
  %tobool9 = icmp ne i16 %17, 0, !dbg !3457
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !3460

if.then10:                                        ; preds = %if.end7
  store i32 1, i32* %crop, align 4, !dbg !3461
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3463
  %rectx11 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 14, !dbg !3464
  %19 = load i32, i32* %rectx11, align 8, !dbg !3464
  %add = add nsw i32 %19, 1, !dbg !3465
  %20 = load i64*, i64** %rectdaps, align 8, !dbg !3466
  %idx.ext = sext i32 %add to i64, !dbg !3466
  %add.ptr = getelementptr inbounds i64, i64* %20, i64 %idx.ext, !dbg !3466
  store i64* %add.ptr, i64** %rectdaps, align 8, !dbg !3466
  %21 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3467
  %rectx12 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %21, i32 0, i32 14, !dbg !3468
  %22 = load i32, i32* %rectx12, align 8, !dbg !3468
  %add13 = add nsw i32 %22, 1, !dbg !3469
  store i32 %add13, i32* %offs, align 4, !dbg !3470
  br label %if.end14, !dbg !3471

if.end14:                                         ; preds = %if.then10, %if.end7
  %23 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !3472
  %renrect = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %23, i32 0, i32 13, !dbg !3473
  %ymin15 = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect, i32 0, i32 2, !dbg !3474
  store volatile i32 0, i32* %ymin15, align 8, !dbg !3475
  %24 = load i32, i32* %crop, align 4, !dbg !3476
  %mul16 = mul nsw i32 -2, %24, !dbg !3477
  %25 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !3478
  %renrect17 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %25, i32 0, i32 13, !dbg !3479
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect17, i32 0, i32 3, !dbg !3480
  store volatile i32 %mul16, i32* %ymax, align 4, !dbg !3481
  %26 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !3482
  %27 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !3483
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %27, i32 0, i32 14, !dbg !3484
  store %struct.RenderLayer* %26, %struct.RenderLayer** %renlay, align 8, !dbg !3485
  %28 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3486
  %disprect18 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %28, i32 0, i32 13, !dbg !3488
  %ymin19 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect18, i32 0, i32 2, !dbg !3489
  %29 = load i32, i32* %ymin19, align 8, !dbg !3489
  %30 = load i32, i32* %crop, align 4, !dbg !3490
  %add20 = add nsw i32 %29, %30, !dbg !3491
  store i32 %add20, i32* %y, align 4, !dbg !3492
  br label %for.cond, !dbg !3493

for.cond:                                         ; preds = %for.inc101, %if.end14
  %31 = load i32, i32* %y, align 4, !dbg !3494
  %32 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3496
  %disprect21 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %32, i32 0, i32 13, !dbg !3497
  %ymax22 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect21, i32 0, i32 3, !dbg !3498
  %33 = load i32, i32* %ymax22, align 4, !dbg !3498
  %34 = load i32, i32* %crop, align 4, !dbg !3499
  %sub = sub nsw i32 %33, %34, !dbg !3500
  %cmp = icmp slt i32 %31, %sub, !dbg !3501
  br i1 %cmp, label %for.body, label %for.end106, !dbg !3502

for.body:                                         ; preds = %for.cond
  %35 = load i64*, i64** %rectdaps, align 8, !dbg !3503
  store i64* %35, i64** %rd, align 8, !dbg !3505
  %36 = load i32, i32* %offs, align 4, !dbg !3506
  store i32 %36, i32* %od, align 4, !dbg !3507
  %37 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3508
  %disprect23 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %37, i32 0, i32 13, !dbg !3510
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect23, i32 0, i32 0, !dbg !3511
  %38 = load i32, i32* %xmin, align 8, !dbg !3511
  %39 = load i32, i32* %crop, align 4, !dbg !3512
  %add24 = add nsw i32 %38, %39, !dbg !3513
  store i32 %add24, i32* %x, align 4, !dbg !3514
  br label %for.cond25, !dbg !3515

for.cond25:                                       ; preds = %for.inc84, %for.body
  %40 = load i32, i32* %x, align 4, !dbg !3516
  %41 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3518
  %disprect26 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %41, i32 0, i32 13, !dbg !3519
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect26, i32 0, i32 1, !dbg !3520
  %42 = load i32, i32* %xmax, align 4, !dbg !3520
  %43 = load i32, i32* %crop, align 4, !dbg !3521
  %sub27 = sub nsw i32 %42, %43, !dbg !3522
  %cmp28 = icmp slt i32 %40, %sub27, !dbg !3523
  br i1 %cmp28, label %for.body29, label %for.end87, !dbg !3524

for.body29:                                       ; preds = %for.cond25
  %44 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3525
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %44, i32 0, i32 20, !dbg !3527
  %45 = load i16, i16* %thread, align 2, !dbg !3527
  %conv = sext i16 %45 to i32, !dbg !3525
  %46 = load i32, i32* %seed, align 4, !dbg !3528
  %inc = add nsw i32 %46, 1, !dbg !3528
  store i32 %inc, i32* %seed, align 4, !dbg !3528
  call void @BLI_thread_srandom(i32 %conv, i32 %46), !dbg !3529
  %47 = load i64*, i64** %rd, align 8, !dbg !3530
  %48 = load i64, i64* %47, align 8, !dbg !3532
  %tobool30 = icmp ne i64 %48, 0, !dbg !3532
  br i1 %tobool30, label %if.then31, label %if.end83, !dbg !3533

if.then31:                                        ; preds = %for.body29
  %49 = load i64*, i64** %rd, align 8, !dbg !3534
  %50 = load i64, i64* %49, align 8, !dbg !3537
  %51 = inttoptr i64 %50 to %struct.PixStr*, !dbg !3538
  %52 = load i32, i32* %x, align 4, !dbg !3539
  %53 = load i32, i32* %y, align 4, !dbg !3540
  %call32 = call i32 @shade_samples(%struct.ShadeSample* %ssamp, %struct.PixStr* %51, i32 %52, i32 %53), !dbg !3541
  %tobool33 = icmp ne i32 %call32, 0, !dbg !3541
  br i1 %tobool33, label %if.then34, label %if.end82, !dbg !3542

if.then34:                                        ; preds = %if.then31
  %54 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3543
  %fullresult = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %54, i32 0, i32 3, !dbg !3546
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fullresult, i32 0, i32 0, !dbg !3547
  %55 = load i8*, i8** %first, align 8, !dbg !3547
  %tobool35 = icmp ne i8* %55, null, !dbg !3543
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !3548

if.then36:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3549, metadata !DIExpression()), !dbg !3551
  store i32 0, i32* %samp, align 4, !dbg !3552
  br label %for.cond37, !dbg !3554

for.cond37:                                       ; preds = %for.inc59, %if.then36
  %56 = load i32, i32* %samp, align 4, !dbg !3555
  %tot = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 0, !dbg !3557
  %57 = load i32, i32* %tot, align 8, !dbg !3557
  %cmp38 = icmp slt i32 %56, %57, !dbg !3558
  br i1 %cmp38, label %for.body40, label %for.end61, !dbg !3559

for.body40:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata i32* %smask, metadata !3560, metadata !DIExpression()), !dbg !3562
  %shi = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !3563
  %58 = load i32, i32* %samp, align 4, !dbg !3564
  %idxprom = sext i32 %58 to i64, !dbg !3565
  %arrayidx = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi, i64 0, i64 %idxprom, !dbg !3565
  %mask = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx, i32 0, i32 105, !dbg !3566
  %59 = load i32, i32* %mask, align 4, !dbg !3566
  store i32 %59, i32* %smask, align 4, !dbg !3562
  store i32 0, i32* %a, align 4, !dbg !3567
  br label %for.cond41, !dbg !3569

for.cond41:                                       ; preds = %for.inc, %for.body40
  %60 = load i32, i32* %a, align 4, !dbg !3570
  %61 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !3572
  %conv42 = sext i16 %61 to i32, !dbg !3573
  %cmp43 = icmp slt i32 %60, %conv42, !dbg !3574
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !3575

for.body45:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata i32* %mask46, metadata !3576, metadata !DIExpression()), !dbg !3578
  %62 = load i32, i32* %a, align 4, !dbg !3579
  %shl = shl i32 1, %62, !dbg !3580
  store i32 %shl, i32* %mask46, align 4, !dbg !3578
  %63 = load i32, i32* %smask, align 4, !dbg !3581
  %64 = load i32, i32* %mask46, align 4, !dbg !3583
  %and47 = and i32 %63, %64, !dbg !3584
  %tobool48 = icmp ne i32 %and47, 0, !dbg !3584
  br i1 %tobool48, label %if.then49, label %if.end57, !dbg !3585

if.then49:                                        ; preds = %for.body45
  %rlpp = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 1, !dbg !3586
  %65 = load i32, i32* %a, align 4, !dbg !3587
  %idxprom50 = sext i32 %65 to i64, !dbg !3588
  %arrayidx51 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom50, !dbg !3588
  %66 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx51, align 8, !dbg !3588
  %67 = load i32, i32* %od, align 4, !dbg !3589
  %shi52 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !3590
  %68 = load i32, i32* %samp, align 4, !dbg !3591
  %idxprom53 = sext i32 %68 to i64, !dbg !3592
  %arrayidx54 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi52, i64 0, i64 %idxprom53, !dbg !3592
  %shr = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 3, !dbg !3593
  %69 = load i32, i32* %samp, align 4, !dbg !3594
  %idxprom55 = sext i32 %69 to i64, !dbg !3595
  %arrayidx56 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %shr, i64 0, i64 %idxprom55, !dbg !3595
  call void @add_passes(%struct.RenderLayer* %66, i32 %67, %struct.ShadeInput* %arrayidx54, %struct.ShadeResult* %arrayidx56), !dbg !3596
  br label %if.end57, !dbg !3596

if.end57:                                         ; preds = %if.then49, %for.body45
  br label %for.inc, !dbg !3597

for.inc:                                          ; preds = %if.end57
  %70 = load i32, i32* %a, align 4, !dbg !3598
  %inc58 = add nsw i32 %70, 1, !dbg !3598
  store i32 %inc58, i32* %a, align 4, !dbg !3598
  br label %for.cond41, !dbg !3599, !llvm.loop !3600

for.end:                                          ; preds = %for.cond41
  br label %for.inc59, !dbg !3602

for.inc59:                                        ; preds = %for.end
  %71 = load i32, i32* %samp, align 4, !dbg !3603
  %inc60 = add nsw i32 %71, 1, !dbg !3603
  store i32 %inc60, i32* %samp, align 4, !dbg !3603
  br label %for.cond37, !dbg !3604, !llvm.loop !3605

for.end61:                                        ; preds = %for.cond37
  br label %if.end81, !dbg !3607

if.else:                                          ; preds = %if.then34
  store i32 0, i32* %samp, align 4, !dbg !3608
  br label %for.cond62, !dbg !3611

for.cond62:                                       ; preds = %for.inc78, %if.else
  %72 = load i32, i32* %samp, align 4, !dbg !3612
  %tot63 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 0, !dbg !3614
  %73 = load i32, i32* %tot63, align 8, !dbg !3614
  %cmp64 = icmp slt i32 %72, %73, !dbg !3615
  br i1 %cmp64, label %for.body66, label %for.end80, !dbg !3616

for.body66:                                       ; preds = %for.cond62
  %74 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !3617
  %shi67 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !3618
  %75 = load i32, i32* %samp, align 4, !dbg !3619
  %idxprom68 = sext i32 %75 to i64, !dbg !3620
  %arrayidx69 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi67, i64 0, i64 %idxprom68, !dbg !3620
  %mask70 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx69, i32 0, i32 105, !dbg !3621
  %76 = load i32, i32* %mask70, align 4, !dbg !3621
  %77 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3622
  %rectx71 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %77, i32 0, i32 14, !dbg !3623
  %78 = load i32, i32* %rectx71, align 8, !dbg !3623
  %79 = load i32, i32* %od, align 4, !dbg !3624
  %shi72 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !3625
  %80 = load i32, i32* %samp, align 4, !dbg !3626
  %idxprom73 = sext i32 %80 to i64, !dbg !3627
  %arrayidx74 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi72, i64 0, i64 %idxprom73, !dbg !3627
  %shr75 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 3, !dbg !3628
  %81 = load i32, i32* %samp, align 4, !dbg !3629
  %idxprom76 = sext i32 %81 to i64, !dbg !3630
  %arrayidx77 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %shr75, i64 0, i64 %idxprom76, !dbg !3630
  call void @add_filt_passes(%struct.RenderLayer* %74, i32 %76, i32 %78, i32 %79, %struct.ShadeInput* %arrayidx74, %struct.ShadeResult* %arrayidx77), !dbg !3631
  br label %for.inc78, !dbg !3631

for.inc78:                                        ; preds = %for.body66
  %82 = load i32, i32* %samp, align 4, !dbg !3632
  %inc79 = add nsw i32 %82, 1, !dbg !3632
  store i32 %inc79, i32* %samp, align 4, !dbg !3632
  br label %for.cond62, !dbg !3633, !llvm.loop !3634

for.end80:                                        ; preds = %for.cond62
  br label %if.end81

if.end81:                                         ; preds = %for.end80, %for.end61
  br label %if.end82, !dbg !3636

if.end82:                                         ; preds = %if.end81, %if.then31
  br label %if.end83, !dbg !3637

if.end83:                                         ; preds = %if.end82, %for.body29
  br label %for.inc84, !dbg !3638

for.inc84:                                        ; preds = %if.end83
  %83 = load i32, i32* %x, align 4, !dbg !3639
  %inc85 = add nsw i32 %83, 1, !dbg !3639
  store i32 %inc85, i32* %x, align 4, !dbg !3639
  %84 = load i64*, i64** %rd, align 8, !dbg !3640
  %incdec.ptr = getelementptr inbounds i64, i64* %84, i32 1, !dbg !3640
  store i64* %incdec.ptr, i64** %rd, align 8, !dbg !3640
  %85 = load i32, i32* %od, align 4, !dbg !3641
  %inc86 = add nsw i32 %85, 1, !dbg !3641
  store i32 %inc86, i32* %od, align 4, !dbg !3641
  br label %for.cond25, !dbg !3642, !llvm.loop !3643

for.end87:                                        ; preds = %for.cond25
  %86 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3645
  %rectx88 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %86, i32 0, i32 14, !dbg !3646
  %87 = load i32, i32* %rectx88, align 8, !dbg !3646
  %88 = load i64*, i64** %rectdaps, align 8, !dbg !3647
  %idx.ext89 = sext i32 %87 to i64, !dbg !3647
  %add.ptr90 = getelementptr inbounds i64, i64* %88, i64 %idx.ext89, !dbg !3647
  store i64* %add.ptr90, i64** %rectdaps, align 8, !dbg !3647
  %89 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3648
  %rectx91 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %89, i32 0, i32 14, !dbg !3649
  %90 = load i32, i32* %rectx91, align 8, !dbg !3649
  %91 = load i32, i32* %offs, align 4, !dbg !3650
  %add92 = add nsw i32 %91, %90, !dbg !3650
  store i32 %add92, i32* %offs, align 4, !dbg !3650
  %92 = load i32, i32* %y, align 4, !dbg !3651
  %and93 = and i32 %92, 1, !dbg !3653
  %tobool94 = icmp ne i32 %and93, 0, !dbg !3653
  br i1 %tobool94, label %if.then95, label %if.end100, !dbg !3654

if.then95:                                        ; preds = %for.end87
  %93 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !3655
  %94 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !3657
  %call96 = call i32 %93(i8* %94), !dbg !3658
  %tobool97 = icmp ne i32 %call96, 0, !dbg !3658
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !3659

if.then98:                                        ; preds = %if.then95
  br label %for.end106, !dbg !3660

if.end99:                                         ; preds = %if.then95
  br label %if.end100, !dbg !3661

if.end100:                                        ; preds = %if.end99, %for.end87
  br label %for.inc101, !dbg !3662

for.inc101:                                       ; preds = %if.end100
  %95 = load i32, i32* %y, align 4, !dbg !3663
  %inc102 = add nsw i32 %95, 1, !dbg !3663
  store i32 %inc102, i32* %y, align 4, !dbg !3663
  %96 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !3664
  %renrect103 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %96, i32 0, i32 13, !dbg !3665
  %ymax104 = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect103, i32 0, i32 3, !dbg !3666
  %97 = load volatile i32, i32* %ymax104, align 4, !dbg !3667
  %inc105 = add nsw i32 %97, 1, !dbg !3667
  store volatile i32 %inc105, i32* %ymax104, align 4, !dbg !3667
  br label %for.cond, !dbg !3668, !llvm.loop !3669

for.end106:                                       ; preds = %if.then98, %for.cond
  %98 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !3671
  %renlay107 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %98, i32 0, i32 14, !dbg !3672
  store %struct.RenderLayer* null, %struct.RenderLayer** %renlay107, align 8, !dbg !3673
  %99 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !3674
  %and108 = and i32 %99, 2, !dbg !3676
  %tobool109 = icmp ne i32 %and108, 0, !dbg !3676
  br i1 %tobool109, label %if.then110, label %if.end111, !dbg !3677

if.then110:                                       ; preds = %for.end106
  %100 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3678
  call void @ISB_free(%struct.RenderPart* %100), !dbg !3679
  br label %if.end111, !dbg !3679

if.end111:                                        ; preds = %if.then110, %for.end106
  %101 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 56), align 8, !dbg !3680
  %tobool112 = icmp ne i8* %101, null, !dbg !3682
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !3683

if.then113:                                       ; preds = %if.end111
  %102 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3684
  call void @free_occ_samples(%struct.Render* @R, %struct.RenderPart* %102), !dbg !3685
  br label %if.end114, !dbg !3685

if.end114:                                        ; preds = %if.then, %if.then113, %if.end111
  ret void, !dbg !3686
}

; Function Attrs: noinline nounwind uwtable
define internal void @lamphalo_tile(%struct.RenderPart* %pa, %struct.RenderLayer* %rl) #0 !dbg !3687 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %rlpp = alloca [16 x %struct.RenderLayer*], align 16
  %shi = alloca %struct.ShadeInput, align 8
  %pass = alloca float*, align 8
  %fac = alloca float, align 4
  %col = alloca [4 x float], align 16
  %rd = alloca i64*, align 8
  %rz = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sample = alloca i32, align 4
  %totsample = alloca i32, align 4
  %fullsample = alloca i32, align 4
  %od = alloca i32, align 4
  %ps = alloca %struct.PixStr*, align 8
  %count = alloca i32, align 4
  %totsamp = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !3688, metadata !DIExpression()), !dbg !3689
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !3690, metadata !DIExpression()), !dbg !3691
  call void @llvm.dbg.declare(metadata [16 x %struct.RenderLayer*]* %rlpp, metadata !3692, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.declare(metadata %struct.ShadeInput* %shi, metadata !3694, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.declare(metadata float** %pass, metadata !3696, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.declare(metadata float* %fac, metadata !3698, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !3700, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.declare(metadata i64** %rd, metadata !3702, metadata !DIExpression()), !dbg !3703
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3704
  %rectdaps = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 8, !dbg !3705
  %1 = load i64*, i64** %rectdaps, align 8, !dbg !3705
  store i64* %1, i64** %rd, align 8, !dbg !3703
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !3706, metadata !DIExpression()), !dbg !3707
  %2 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3708
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %2, i32 0, i32 6, !dbg !3709
  %3 = load i32*, i32** %rectz, align 8, !dbg !3709
  store i32* %3, i32** %rz, align 8, !dbg !3707
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3710, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3712, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.declare(metadata i32* %totsample, metadata !3716, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.declare(metadata i32* %fullsample, metadata !3718, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.declare(metadata i32* %od, metadata !3720, metadata !DIExpression()), !dbg !3721
  %4 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3722
  %5 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !3723
  %arraydecay = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 0, !dbg !3724
  %call = call i32 @get_sample_layers(%struct.RenderPart* %4, %struct.RenderLayer* %5, %struct.RenderLayer** %arraydecay), !dbg !3725
  store i32 %call, i32* %totsample, align 4, !dbg !3726
  %6 = load i32, i32* %totsample, align 4, !dbg !3727
  %cmp = icmp sgt i32 %6, 1, !dbg !3728
  %conv = zext i1 %cmp to i32, !dbg !3728
  store i32 %conv, i32* %fullsample, align 4, !dbg !3729
  %7 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3730
  %8 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !3731
  call void @shade_input_initialize(%struct.ShadeInput* %shi, %struct.RenderPart* %7, %struct.RenderLayer* %8, i32 0), !dbg !3732
  store i32 0, i32* %od, align 4, !dbg !3733
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3735
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 13, !dbg !3736
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !3737
  %10 = load i32, i32* %ymin, align 8, !dbg !3737
  store i32 %10, i32* %y, align 4, !dbg !3738
  br label %for.cond, !dbg !3739

for.cond:                                         ; preds = %for.inc243, %entry
  %11 = load i32, i32* %y, align 4, !dbg !3740
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3742
  %disprect1 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %12, i32 0, i32 13, !dbg !3743
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect1, i32 0, i32 3, !dbg !3744
  %13 = load i32, i32* %ymax, align 4, !dbg !3744
  %cmp2 = icmp slt i32 %11, %13, !dbg !3745
  br i1 %cmp2, label %for.body, label %for.end245, !dbg !3746

for.body:                                         ; preds = %for.cond
  %14 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3747
  %disprect4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %14, i32 0, i32 13, !dbg !3750
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect4, i32 0, i32 0, !dbg !3751
  %15 = load i32, i32* %xmin, align 8, !dbg !3751
  store i32 %15, i32* %x, align 4, !dbg !3752
  br label %for.cond5, !dbg !3753

for.cond5:                                        ; preds = %for.inc230, %for.body
  %16 = load i32, i32* %x, align 4, !dbg !3754
  %17 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !3756
  %disprect6 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %17, i32 0, i32 13, !dbg !3757
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect6, i32 0, i32 1, !dbg !3758
  %18 = load i32, i32* %xmax, align 4, !dbg !3758
  %cmp7 = icmp slt i32 %16, %18, !dbg !3759
  br i1 %cmp7, label %for.body9, label %for.end234, !dbg !3760

for.body9:                                        ; preds = %for.cond5
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !3761
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !3763
  %19 = load i32, i32* %x, align 4, !dbg !3764
  %conv11 = sitofp i32 %19 to float, !dbg !3764
  %20 = load i32, i32* %y, align 4, !dbg !3765
  %conv12 = sitofp i32 %20 to float, !dbg !3765
  call void @calc_view_vector(float* %arraydecay10, float %conv11, float %conv12), !dbg !3766
  %21 = load i64*, i64** %rd, align 8, !dbg !3767
  %tobool = icmp ne i64* %21, null, !dbg !3767
  br i1 %tobool, label %land.lhs.true, label %if.else176, !dbg !3769

land.lhs.true:                                    ; preds = %for.body9
  %22 = load i64*, i64** %rd, align 8, !dbg !3770
  %23 = load i64, i64* %22, align 8, !dbg !3771
  %tobool13 = icmp ne i64 %23, 0, !dbg !3771
  br i1 %tobool13, label %if.then, label %if.else176, !dbg !3772

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.PixStr** %ps, metadata !3773, metadata !DIExpression()), !dbg !3775
  %24 = load i64*, i64** %rd, align 8, !dbg !3776
  %25 = load i64, i64* %24, align 8, !dbg !3777
  %26 = inttoptr i64 %25 to %struct.PixStr*, !dbg !3778
  store %struct.PixStr* %26, %struct.PixStr** %ps, align 8, !dbg !3775
  call void @llvm.dbg.declare(metadata i32* %count, metadata !3779, metadata !DIExpression()), !dbg !3780
  call void @llvm.dbg.declare(metadata i32* %totsamp, metadata !3781, metadata !DIExpression()), !dbg !3782
  store i32 0, i32* %totsamp, align 4, !dbg !3782
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !3783, metadata !DIExpression()), !dbg !3784
  store i32 0, i32* %mask, align 4, !dbg !3784
  br label %while.cond, !dbg !3785

while.cond:                                       ; preds = %if.end93, %if.then
  %27 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !3786
  %tobool14 = icmp ne %struct.PixStr* %27, null, !dbg !3785
  br i1 %tobool14, label %while.body, label %while.end, !dbg !3785

while.body:                                       ; preds = %while.cond
  %28 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !3787
  %and = and i32 %28, 8, !dbg !3790
  %tobool15 = icmp ne i32 %and, 0, !dbg !3790
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !3791

if.then16:                                        ; preds = %while.body
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !3792
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3793
  %29 = load i32, i32* %x, align 4, !dbg !3794
  %conv18 = sitofp i32 %29 to float, !dbg !3795
  %30 = load i32, i32* %y, align 4, !dbg !3796
  %conv19 = sitofp i32 %30 to float, !dbg !3797
  %31 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !3798
  %z = getelementptr inbounds %struct.PixStr, %struct.PixStr* %31, i32 0, i32 3, !dbg !3799
  %32 = load i32, i32* %z, align 8, !dbg !3799
  call void @calc_renderco_ortho(float* %arraydecay17, float %conv18, float %conv19, i32 %32), !dbg !3800
  br label %if.end, !dbg !3800

if.else:                                          ; preds = %while.body
  %co20 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !3801
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co20, i64 0, i64 0, !dbg !3802
  %view22 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !3803
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %view22, i64 0, i64 0, !dbg !3804
  %33 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !3805
  %z24 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %33, i32 0, i32 3, !dbg !3806
  %34 = load i32, i32* %z24, align 8, !dbg !3806
  call void @calc_renderco_zbuf(float* %arraydecay21, float* %arraydecay23, i32 %34), !dbg !3807
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then16
  %35 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !3808
  %mask25 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %35, i32 0, i32 5, !dbg !3809
  %36 = load i16, i16* %mask25, align 8, !dbg !3809
  %call26 = call i32 @count_mask(i16 zeroext %36), !dbg !3810
  store i32 %call26, i32* %count, align 4, !dbg !3811
  %37 = load i32, i32* %totsamp, align 4, !dbg !3812
  %add = add nsw i32 %37, %call26, !dbg !3812
  store i32 %add, i32* %totsamp, align 4, !dbg !3812
  %38 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !3813
  %mask27 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %38, i32 0, i32 5, !dbg !3814
  %39 = load i16, i16* %mask27, align 8, !dbg !3814
  %conv28 = zext i16 %39 to i32, !dbg !3813
  %40 = load i32, i32* %mask, align 4, !dbg !3815
  %or = or i32 %40, %conv28, !dbg !3815
  store i32 %or, i32* %mask, align 4, !dbg !3815
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !3816
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !3817
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !3818
  store float 0.000000e+00, float* %arrayidx29, align 8, !dbg !3819
  %arrayidx30 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !3820
  store float 0.000000e+00, float* %arrayidx30, align 4, !dbg !3821
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !3822
  store float 0.000000e+00, float* %arrayidx31, align 16, !dbg !3823
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !3824
  call void @renderspothalo(%struct.ShadeInput* %shi, float* %arraydecay32, float 1.000000e+00), !dbg !3825
  %41 = load i32, i32* %fullsample, align 4, !dbg !3826
  %tobool33 = icmp ne i32 %41, 0, !dbg !3826
  br i1 %tobool33, label %if.then34, label %if.else64, !dbg !3828

if.then34:                                        ; preds = %if.end
  store i32 0, i32* %sample, align 4, !dbg !3829
  br label %for.cond35, !dbg !3832

for.cond35:                                       ; preds = %for.inc, %if.then34
  %42 = load i32, i32* %sample, align 4, !dbg !3833
  %43 = load i32, i32* %totsample, align 4, !dbg !3835
  %cmp36 = icmp slt i32 %42, %43, !dbg !3836
  br i1 %cmp36, label %for.body38, label %for.end, !dbg !3837

for.body38:                                       ; preds = %for.cond35
  %44 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !3838
  %mask39 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %44, i32 0, i32 5, !dbg !3841
  %45 = load i16, i16* %mask39, align 8, !dbg !3841
  %conv40 = zext i16 %45 to i32, !dbg !3838
  %46 = load i32, i32* %sample, align 4, !dbg !3842
  %shl = shl i32 1, %46, !dbg !3843
  %and41 = and i32 %conv40, %shl, !dbg !3844
  %tobool42 = icmp ne i32 %and41, 0, !dbg !3844
  br i1 %tobool42, label %if.then43, label %if.end63, !dbg !3845

if.then43:                                        ; preds = %for.body38
  %47 = load i32, i32* %sample, align 4, !dbg !3846
  %idxprom = sext i32 %47 to i64, !dbg !3848
  %arrayidx44 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom, !dbg !3848
  %48 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx44, align 8, !dbg !3848
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %48, i32 0, i32 11, !dbg !3849
  %49 = load float*, float** %rectf, align 8, !dbg !3849
  %50 = load i32, i32* %od, align 4, !dbg !3850
  %mul = mul nsw i32 %50, 4, !dbg !3851
  %idx.ext = sext i32 %mul to i64, !dbg !3852
  %add.ptr = getelementptr inbounds float, float* %49, i64 %idx.ext, !dbg !3852
  store float* %add.ptr, float** %pass, align 8, !dbg !3853
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !3854
  %51 = load float, float* %arrayidx45, align 16, !dbg !3854
  %52 = load float*, float** %pass, align 8, !dbg !3855
  %arrayidx46 = getelementptr inbounds float, float* %52, i64 0, !dbg !3855
  %53 = load float, float* %arrayidx46, align 4, !dbg !3856
  %add47 = fadd float %53, %51, !dbg !3856
  store float %add47, float* %arrayidx46, align 4, !dbg !3856
  %arrayidx48 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !3857
  %54 = load float, float* %arrayidx48, align 4, !dbg !3857
  %55 = load float*, float** %pass, align 8, !dbg !3858
  %arrayidx49 = getelementptr inbounds float, float* %55, i64 1, !dbg !3858
  %56 = load float, float* %arrayidx49, align 4, !dbg !3859
  %add50 = fadd float %56, %54, !dbg !3859
  store float %add50, float* %arrayidx49, align 4, !dbg !3859
  %arrayidx51 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !3860
  %57 = load float, float* %arrayidx51, align 8, !dbg !3860
  %58 = load float*, float** %pass, align 8, !dbg !3861
  %arrayidx52 = getelementptr inbounds float, float* %58, i64 2, !dbg !3861
  %59 = load float, float* %arrayidx52, align 4, !dbg !3862
  %add53 = fadd float %59, %57, !dbg !3862
  store float %add53, float* %arrayidx52, align 4, !dbg !3862
  %arrayidx54 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !3863
  %60 = load float, float* %arrayidx54, align 4, !dbg !3863
  %61 = load float*, float** %pass, align 8, !dbg !3864
  %arrayidx55 = getelementptr inbounds float, float* %61, i64 3, !dbg !3864
  %62 = load float, float* %arrayidx55, align 4, !dbg !3865
  %add56 = fadd float %62, %60, !dbg !3865
  store float %add56, float* %arrayidx55, align 4, !dbg !3865
  %63 = load float*, float** %pass, align 8, !dbg !3866
  %arrayidx57 = getelementptr inbounds float, float* %63, i64 3, !dbg !3866
  %64 = load float, float* %arrayidx57, align 4, !dbg !3866
  %cmp58 = fcmp ogt float %64, 1.000000e+00, !dbg !3868
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !3869

if.then60:                                        ; preds = %if.then43
  %65 = load float*, float** %pass, align 8, !dbg !3870
  %arrayidx61 = getelementptr inbounds float, float* %65, i64 3, !dbg !3870
  store float 1.000000e+00, float* %arrayidx61, align 4, !dbg !3871
  br label %if.end62, !dbg !3870

if.end62:                                         ; preds = %if.then60, %if.then43
  br label %if.end63, !dbg !3872

if.end63:                                         ; preds = %if.end62, %for.body38
  br label %for.inc, !dbg !3873

for.inc:                                          ; preds = %if.end63
  %66 = load i32, i32* %sample, align 4, !dbg !3874
  %inc = add nsw i32 %66, 1, !dbg !3874
  store i32 %inc, i32* %sample, align 4, !dbg !3874
  br label %for.cond35, !dbg !3875, !llvm.loop !3876

for.end:                                          ; preds = %for.cond35
  br label %if.end93, !dbg !3878

if.else64:                                        ; preds = %if.end
  %67 = load i32, i32* %count, align 4, !dbg !3879
  %conv65 = sitofp i32 %67 to float, !dbg !3881
  %68 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !3882
  %conv66 = sitofp i16 %68 to float, !dbg !3883
  %div = fdiv float %conv65, %conv66, !dbg !3884
  store float %div, float* %fac, align 4, !dbg !3885
  %69 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !3886
  %rectf67 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %69, i32 0, i32 11, !dbg !3887
  %70 = load float*, float** %rectf67, align 8, !dbg !3887
  %71 = load i32, i32* %od, align 4, !dbg !3888
  %mul68 = mul nsw i32 %71, 4, !dbg !3889
  %idx.ext69 = sext i32 %mul68 to i64, !dbg !3890
  %add.ptr70 = getelementptr inbounds float, float* %70, i64 %idx.ext69, !dbg !3890
  store float* %add.ptr70, float** %pass, align 8, !dbg !3891
  %72 = load float, float* %fac, align 4, !dbg !3892
  %arrayidx71 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !3893
  %73 = load float, float* %arrayidx71, align 16, !dbg !3893
  %mul72 = fmul float %72, %73, !dbg !3894
  %74 = load float*, float** %pass, align 8, !dbg !3895
  %arrayidx73 = getelementptr inbounds float, float* %74, i64 0, !dbg !3895
  %75 = load float, float* %arrayidx73, align 4, !dbg !3896
  %add74 = fadd float %75, %mul72, !dbg !3896
  store float %add74, float* %arrayidx73, align 4, !dbg !3896
  %76 = load float, float* %fac, align 4, !dbg !3897
  %arrayidx75 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !3898
  %77 = load float, float* %arrayidx75, align 4, !dbg !3898
  %mul76 = fmul float %76, %77, !dbg !3899
  %78 = load float*, float** %pass, align 8, !dbg !3900
  %arrayidx77 = getelementptr inbounds float, float* %78, i64 1, !dbg !3900
  %79 = load float, float* %arrayidx77, align 4, !dbg !3901
  %add78 = fadd float %79, %mul76, !dbg !3901
  store float %add78, float* %arrayidx77, align 4, !dbg !3901
  %80 = load float, float* %fac, align 4, !dbg !3902
  %arrayidx79 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !3903
  %81 = load float, float* %arrayidx79, align 8, !dbg !3903
  %mul80 = fmul float %80, %81, !dbg !3904
  %82 = load float*, float** %pass, align 8, !dbg !3905
  %arrayidx81 = getelementptr inbounds float, float* %82, i64 2, !dbg !3905
  %83 = load float, float* %arrayidx81, align 4, !dbg !3906
  %add82 = fadd float %83, %mul80, !dbg !3906
  store float %add82, float* %arrayidx81, align 4, !dbg !3906
  %84 = load float, float* %fac, align 4, !dbg !3907
  %arrayidx83 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !3908
  %85 = load float, float* %arrayidx83, align 4, !dbg !3908
  %mul84 = fmul float %84, %85, !dbg !3909
  %86 = load float*, float** %pass, align 8, !dbg !3910
  %arrayidx85 = getelementptr inbounds float, float* %86, i64 3, !dbg !3910
  %87 = load float, float* %arrayidx85, align 4, !dbg !3911
  %add86 = fadd float %87, %mul84, !dbg !3911
  store float %add86, float* %arrayidx85, align 4, !dbg !3911
  %88 = load float*, float** %pass, align 8, !dbg !3912
  %arrayidx87 = getelementptr inbounds float, float* %88, i64 3, !dbg !3912
  %89 = load float, float* %arrayidx87, align 4, !dbg !3912
  %cmp88 = fcmp ogt float %89, 1.000000e+00, !dbg !3914
  br i1 %cmp88, label %if.then90, label %if.end92, !dbg !3915

if.then90:                                        ; preds = %if.else64
  %90 = load float*, float** %pass, align 8, !dbg !3916
  %arrayidx91 = getelementptr inbounds float, float* %90, i64 3, !dbg !3916
  store float 1.000000e+00, float* %arrayidx91, align 4, !dbg !3917
  br label %if.end92, !dbg !3916

if.end92:                                         ; preds = %if.then90, %if.else64
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %for.end
  %91 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !3918
  %next = getelementptr inbounds %struct.PixStr, %struct.PixStr* %91, i32 0, i32 0, !dbg !3919
  %92 = load %struct.PixStr*, %struct.PixStr** %next, align 8, !dbg !3919
  store %struct.PixStr* %92, %struct.PixStr** %ps, align 8, !dbg !3920
  br label %while.cond, !dbg !3785, !llvm.loop !3921

while.end:                                        ; preds = %while.cond
  %93 = load i32, i32* %totsamp, align 4, !dbg !3923
  %94 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !3925
  %conv94 = sext i16 %94 to i32, !dbg !3926
  %cmp95 = icmp slt i32 %93, %conv94, !dbg !3927
  br i1 %cmp95, label %if.then97, label %if.end175, !dbg !3928

if.then97:                                        ; preds = %while.end
  %co98 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !3929
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %co98, i64 0, i64 2, !dbg !3931
  store float 0.000000e+00, float* %arrayidx99, align 8, !dbg !3932
  %arrayidx100 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !3933
  store float 0.000000e+00, float* %arrayidx100, align 4, !dbg !3934
  %arrayidx101 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !3935
  store float 0.000000e+00, float* %arrayidx101, align 8, !dbg !3936
  %arrayidx102 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !3937
  store float 0.000000e+00, float* %arrayidx102, align 4, !dbg !3938
  %arrayidx103 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !3939
  store float 0.000000e+00, float* %arrayidx103, align 16, !dbg !3940
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !3941
  call void @renderspothalo(%struct.ShadeInput* %shi, float* %arraydecay104, float 1.000000e+00), !dbg !3942
  %95 = load i32, i32* %fullsample, align 4, !dbg !3943
  %tobool105 = icmp ne i32 %95, 0, !dbg !3943
  br i1 %tobool105, label %if.then106, label %if.else143, !dbg !3945

if.then106:                                       ; preds = %if.then97
  store i32 0, i32* %sample, align 4, !dbg !3946
  br label %for.cond107, !dbg !3949

for.cond107:                                      ; preds = %for.inc140, %if.then106
  %96 = load i32, i32* %sample, align 4, !dbg !3950
  %97 = load i32, i32* %totsample, align 4, !dbg !3952
  %cmp108 = icmp slt i32 %96, %97, !dbg !3953
  br i1 %cmp108, label %for.body110, label %for.end142, !dbg !3954

for.body110:                                      ; preds = %for.cond107
  %98 = load i32, i32* %mask, align 4, !dbg !3955
  %99 = load i32, i32* %sample, align 4, !dbg !3958
  %shl111 = shl i32 1, %99, !dbg !3959
  %and112 = and i32 %98, %shl111, !dbg !3960
  %tobool113 = icmp ne i32 %and112, 0, !dbg !3960
  br i1 %tobool113, label %if.end139, label %if.then114, !dbg !3961

if.then114:                                       ; preds = %for.body110
  %100 = load i32, i32* %sample, align 4, !dbg !3962
  %idxprom115 = sext i32 %100 to i64, !dbg !3964
  %arrayidx116 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom115, !dbg !3964
  %101 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx116, align 8, !dbg !3964
  %rectf117 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %101, i32 0, i32 11, !dbg !3965
  %102 = load float*, float** %rectf117, align 8, !dbg !3965
  %103 = load i32, i32* %od, align 4, !dbg !3966
  %mul118 = mul nsw i32 %103, 4, !dbg !3967
  %idx.ext119 = sext i32 %mul118 to i64, !dbg !3968
  %add.ptr120 = getelementptr inbounds float, float* %102, i64 %idx.ext119, !dbg !3968
  store float* %add.ptr120, float** %pass, align 8, !dbg !3969
  %arrayidx121 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !3970
  %104 = load float, float* %arrayidx121, align 16, !dbg !3970
  %105 = load float*, float** %pass, align 8, !dbg !3971
  %arrayidx122 = getelementptr inbounds float, float* %105, i64 0, !dbg !3971
  %106 = load float, float* %arrayidx122, align 4, !dbg !3972
  %add123 = fadd float %106, %104, !dbg !3972
  store float %add123, float* %arrayidx122, align 4, !dbg !3972
  %arrayidx124 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !3973
  %107 = load float, float* %arrayidx124, align 4, !dbg !3973
  %108 = load float*, float** %pass, align 8, !dbg !3974
  %arrayidx125 = getelementptr inbounds float, float* %108, i64 1, !dbg !3974
  %109 = load float, float* %arrayidx125, align 4, !dbg !3975
  %add126 = fadd float %109, %107, !dbg !3975
  store float %add126, float* %arrayidx125, align 4, !dbg !3975
  %arrayidx127 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !3976
  %110 = load float, float* %arrayidx127, align 8, !dbg !3976
  %111 = load float*, float** %pass, align 8, !dbg !3977
  %arrayidx128 = getelementptr inbounds float, float* %111, i64 2, !dbg !3977
  %112 = load float, float* %arrayidx128, align 4, !dbg !3978
  %add129 = fadd float %112, %110, !dbg !3978
  store float %add129, float* %arrayidx128, align 4, !dbg !3978
  %arrayidx130 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !3979
  %113 = load float, float* %arrayidx130, align 4, !dbg !3979
  %114 = load float*, float** %pass, align 8, !dbg !3980
  %arrayidx131 = getelementptr inbounds float, float* %114, i64 3, !dbg !3980
  %115 = load float, float* %arrayidx131, align 4, !dbg !3981
  %add132 = fadd float %115, %113, !dbg !3981
  store float %add132, float* %arrayidx131, align 4, !dbg !3981
  %116 = load float*, float** %pass, align 8, !dbg !3982
  %arrayidx133 = getelementptr inbounds float, float* %116, i64 3, !dbg !3982
  %117 = load float, float* %arrayidx133, align 4, !dbg !3982
  %cmp134 = fcmp ogt float %117, 1.000000e+00, !dbg !3984
  br i1 %cmp134, label %if.then136, label %if.end138, !dbg !3985

if.then136:                                       ; preds = %if.then114
  %118 = load float*, float** %pass, align 8, !dbg !3986
  %arrayidx137 = getelementptr inbounds float, float* %118, i64 3, !dbg !3986
  store float 1.000000e+00, float* %arrayidx137, align 4, !dbg !3987
  br label %if.end138, !dbg !3986

if.end138:                                        ; preds = %if.then136, %if.then114
  br label %if.end139, !dbg !3988

if.end139:                                        ; preds = %if.end138, %for.body110
  br label %for.inc140, !dbg !3989

for.inc140:                                       ; preds = %if.end139
  %119 = load i32, i32* %sample, align 4, !dbg !3990
  %inc141 = add nsw i32 %119, 1, !dbg !3990
  store i32 %inc141, i32* %sample, align 4, !dbg !3990
  br label %for.cond107, !dbg !3991, !llvm.loop !3992

for.end142:                                       ; preds = %for.cond107
  br label %if.end174, !dbg !3994

if.else143:                                       ; preds = %if.then97
  %120 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !3995
  %conv144 = sitofp i16 %120 to float, !dbg !3997
  %121 = load i32, i32* %totsamp, align 4, !dbg !3998
  %conv145 = sitofp i32 %121 to float, !dbg !3998
  %sub = fsub float %conv144, %conv145, !dbg !3999
  %122 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !4000
  %conv146 = sitofp i16 %122 to float, !dbg !4001
  %div147 = fdiv float %sub, %conv146, !dbg !4002
  store float %div147, float* %fac, align 4, !dbg !4003
  %123 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !4004
  %rectf148 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %123, i32 0, i32 11, !dbg !4005
  %124 = load float*, float** %rectf148, align 8, !dbg !4005
  %125 = load i32, i32* %od, align 4, !dbg !4006
  %mul149 = mul nsw i32 %125, 4, !dbg !4007
  %idx.ext150 = sext i32 %mul149 to i64, !dbg !4008
  %add.ptr151 = getelementptr inbounds float, float* %124, i64 %idx.ext150, !dbg !4008
  store float* %add.ptr151, float** %pass, align 8, !dbg !4009
  %126 = load float, float* %fac, align 4, !dbg !4010
  %arrayidx152 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !4011
  %127 = load float, float* %arrayidx152, align 16, !dbg !4011
  %mul153 = fmul float %126, %127, !dbg !4012
  %128 = load float*, float** %pass, align 8, !dbg !4013
  %arrayidx154 = getelementptr inbounds float, float* %128, i64 0, !dbg !4013
  %129 = load float, float* %arrayidx154, align 4, !dbg !4014
  %add155 = fadd float %129, %mul153, !dbg !4014
  store float %add155, float* %arrayidx154, align 4, !dbg !4014
  %130 = load float, float* %fac, align 4, !dbg !4015
  %arrayidx156 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !4016
  %131 = load float, float* %arrayidx156, align 4, !dbg !4016
  %mul157 = fmul float %130, %131, !dbg !4017
  %132 = load float*, float** %pass, align 8, !dbg !4018
  %arrayidx158 = getelementptr inbounds float, float* %132, i64 1, !dbg !4018
  %133 = load float, float* %arrayidx158, align 4, !dbg !4019
  %add159 = fadd float %133, %mul157, !dbg !4019
  store float %add159, float* %arrayidx158, align 4, !dbg !4019
  %134 = load float, float* %fac, align 4, !dbg !4020
  %arrayidx160 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !4021
  %135 = load float, float* %arrayidx160, align 8, !dbg !4021
  %mul161 = fmul float %134, %135, !dbg !4022
  %136 = load float*, float** %pass, align 8, !dbg !4023
  %arrayidx162 = getelementptr inbounds float, float* %136, i64 2, !dbg !4023
  %137 = load float, float* %arrayidx162, align 4, !dbg !4024
  %add163 = fadd float %137, %mul161, !dbg !4024
  store float %add163, float* %arrayidx162, align 4, !dbg !4024
  %138 = load float, float* %fac, align 4, !dbg !4025
  %arrayidx164 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !4026
  %139 = load float, float* %arrayidx164, align 4, !dbg !4026
  %mul165 = fmul float %138, %139, !dbg !4027
  %140 = load float*, float** %pass, align 8, !dbg !4028
  %arrayidx166 = getelementptr inbounds float, float* %140, i64 3, !dbg !4028
  %141 = load float, float* %arrayidx166, align 4, !dbg !4029
  %add167 = fadd float %141, %mul165, !dbg !4029
  store float %add167, float* %arrayidx166, align 4, !dbg !4029
  %142 = load float*, float** %pass, align 8, !dbg !4030
  %arrayidx168 = getelementptr inbounds float, float* %142, i64 3, !dbg !4030
  %143 = load float, float* %arrayidx168, align 4, !dbg !4030
  %cmp169 = fcmp ogt float %143, 1.000000e+00, !dbg !4032
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !4033

if.then171:                                       ; preds = %if.else143
  %144 = load float*, float** %pass, align 8, !dbg !4034
  %arrayidx172 = getelementptr inbounds float, float* %144, i64 3, !dbg !4034
  store float 1.000000e+00, float* %arrayidx172, align 4, !dbg !4035
  br label %if.end173, !dbg !4034

if.end173:                                        ; preds = %if.then171, %if.else143
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %for.end142
  br label %if.end175, !dbg !4036

if.end175:                                        ; preds = %if.end174, %while.end
  br label %if.end226, !dbg !4037

if.else176:                                       ; preds = %land.lhs.true, %for.body9
  %145 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !4038
  %and177 = and i32 %145, 8, !dbg !4041
  %tobool178 = icmp ne i32 %and177, 0, !dbg !4041
  br i1 %tobool178, label %if.then179, label %if.else184, !dbg !4042

if.then179:                                       ; preds = %if.else176
  %co180 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !4043
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %co180, i64 0, i64 0, !dbg !4044
  %146 = load i32, i32* %x, align 4, !dbg !4045
  %conv182 = sitofp i32 %146 to float, !dbg !4046
  %147 = load i32, i32* %y, align 4, !dbg !4047
  %conv183 = sitofp i32 %147 to float, !dbg !4048
  %148 = load i32*, i32** %rz, align 8, !dbg !4049
  %149 = load i32, i32* %148, align 4, !dbg !4050
  call void @calc_renderco_ortho(float* %arraydecay181, float %conv182, float %conv183, i32 %149), !dbg !4051
  br label %if.end189, !dbg !4051

if.else184:                                       ; preds = %if.else176
  %co185 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 29, !dbg !4052
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %co185, i64 0, i64 0, !dbg !4053
  %view187 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 30, !dbg !4054
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %view187, i64 0, i64 0, !dbg !4055
  %150 = load i32*, i32** %rz, align 8, !dbg !4056
  %151 = load i32, i32* %150, align 4, !dbg !4057
  call void @calc_renderco_zbuf(float* %arraydecay186, float* %arraydecay188, i32 %151), !dbg !4058
  br label %if.end189

if.end189:                                        ; preds = %if.else184, %if.then179
  %arrayidx190 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !4059
  store float 0.000000e+00, float* %arrayidx190, align 4, !dbg !4060
  %arrayidx191 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !4061
  store float 0.000000e+00, float* %arrayidx191, align 8, !dbg !4062
  %arrayidx192 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !4063
  store float 0.000000e+00, float* %arrayidx192, align 4, !dbg !4064
  %arrayidx193 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !4065
  store float 0.000000e+00, float* %arrayidx193, align 16, !dbg !4066
  %arraydecay194 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !4067
  call void @renderspothalo(%struct.ShadeInput* %shi, float* %arraydecay194, float 1.000000e+00), !dbg !4068
  store i32 0, i32* %sample, align 4, !dbg !4069
  br label %for.cond195, !dbg !4071

for.cond195:                                      ; preds = %for.inc223, %if.end189
  %152 = load i32, i32* %sample, align 4, !dbg !4072
  %153 = load i32, i32* %totsample, align 4, !dbg !4074
  %cmp196 = icmp slt i32 %152, %153, !dbg !4075
  br i1 %cmp196, label %for.body198, label %for.end225, !dbg !4076

for.body198:                                      ; preds = %for.cond195
  %154 = load i32, i32* %sample, align 4, !dbg !4077
  %idxprom199 = sext i32 %154 to i64, !dbg !4079
  %arrayidx200 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom199, !dbg !4079
  %155 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx200, align 8, !dbg !4079
  %rectf201 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %155, i32 0, i32 11, !dbg !4080
  %156 = load float*, float** %rectf201, align 8, !dbg !4080
  %157 = load i32, i32* %od, align 4, !dbg !4081
  %mul202 = mul nsw i32 %157, 4, !dbg !4082
  %idx.ext203 = sext i32 %mul202 to i64, !dbg !4083
  %add.ptr204 = getelementptr inbounds float, float* %156, i64 %idx.ext203, !dbg !4083
  store float* %add.ptr204, float** %pass, align 8, !dbg !4084
  %arrayidx205 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !4085
  %158 = load float, float* %arrayidx205, align 16, !dbg !4085
  %159 = load float*, float** %pass, align 8, !dbg !4086
  %arrayidx206 = getelementptr inbounds float, float* %159, i64 0, !dbg !4086
  %160 = load float, float* %arrayidx206, align 4, !dbg !4087
  %add207 = fadd float %160, %158, !dbg !4087
  store float %add207, float* %arrayidx206, align 4, !dbg !4087
  %arrayidx208 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !4088
  %161 = load float, float* %arrayidx208, align 4, !dbg !4088
  %162 = load float*, float** %pass, align 8, !dbg !4089
  %arrayidx209 = getelementptr inbounds float, float* %162, i64 1, !dbg !4089
  %163 = load float, float* %arrayidx209, align 4, !dbg !4090
  %add210 = fadd float %163, %161, !dbg !4090
  store float %add210, float* %arrayidx209, align 4, !dbg !4090
  %arrayidx211 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !4091
  %164 = load float, float* %arrayidx211, align 8, !dbg !4091
  %165 = load float*, float** %pass, align 8, !dbg !4092
  %arrayidx212 = getelementptr inbounds float, float* %165, i64 2, !dbg !4092
  %166 = load float, float* %arrayidx212, align 4, !dbg !4093
  %add213 = fadd float %166, %164, !dbg !4093
  store float %add213, float* %arrayidx212, align 4, !dbg !4093
  %arrayidx214 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !4094
  %167 = load float, float* %arrayidx214, align 4, !dbg !4094
  %168 = load float*, float** %pass, align 8, !dbg !4095
  %arrayidx215 = getelementptr inbounds float, float* %168, i64 3, !dbg !4095
  %169 = load float, float* %arrayidx215, align 4, !dbg !4096
  %add216 = fadd float %169, %167, !dbg !4096
  store float %add216, float* %arrayidx215, align 4, !dbg !4096
  %170 = load float*, float** %pass, align 8, !dbg !4097
  %arrayidx217 = getelementptr inbounds float, float* %170, i64 3, !dbg !4097
  %171 = load float, float* %arrayidx217, align 4, !dbg !4097
  %cmp218 = fcmp ogt float %171, 1.000000e+00, !dbg !4099
  br i1 %cmp218, label %if.then220, label %if.end222, !dbg !4100

if.then220:                                       ; preds = %for.body198
  %172 = load float*, float** %pass, align 8, !dbg !4101
  %arrayidx221 = getelementptr inbounds float, float* %172, i64 3, !dbg !4101
  store float 1.000000e+00, float* %arrayidx221, align 4, !dbg !4102
  br label %if.end222, !dbg !4101

if.end222:                                        ; preds = %if.then220, %for.body198
  br label %for.inc223, !dbg !4103

for.inc223:                                       ; preds = %if.end222
  %173 = load i32, i32* %sample, align 4, !dbg !4104
  %inc224 = add nsw i32 %173, 1, !dbg !4104
  store i32 %inc224, i32* %sample, align 4, !dbg !4104
  br label %for.cond195, !dbg !4105, !llvm.loop !4106

for.end225:                                       ; preds = %for.cond195
  br label %if.end226

if.end226:                                        ; preds = %for.end225, %if.end175
  %174 = load i64*, i64** %rd, align 8, !dbg !4108
  %tobool227 = icmp ne i64* %174, null, !dbg !4108
  br i1 %tobool227, label %if.then228, label %if.end229, !dbg !4110

if.then228:                                       ; preds = %if.end226
  %175 = load i64*, i64** %rd, align 8, !dbg !4111
  %incdec.ptr = getelementptr inbounds i64, i64* %175, i32 1, !dbg !4111
  store i64* %incdec.ptr, i64** %rd, align 8, !dbg !4111
  br label %if.end229, !dbg !4112

if.end229:                                        ; preds = %if.then228, %if.end226
  br label %for.inc230, !dbg !4113

for.inc230:                                       ; preds = %if.end229
  %176 = load i32, i32* %x, align 4, !dbg !4114
  %inc231 = add nsw i32 %176, 1, !dbg !4114
  store i32 %inc231, i32* %x, align 4, !dbg !4114
  %177 = load i32*, i32** %rz, align 8, !dbg !4115
  %incdec.ptr232 = getelementptr inbounds i32, i32* %177, i32 1, !dbg !4115
  store i32* %incdec.ptr232, i32** %rz, align 8, !dbg !4115
  %178 = load i32, i32* %od, align 4, !dbg !4116
  %inc233 = add nsw i32 %178, 1, !dbg !4116
  store i32 %inc233, i32* %od, align 4, !dbg !4116
  br label %for.cond5, !dbg !4117, !llvm.loop !4118

for.end234:                                       ; preds = %for.cond5
  %179 = load i32, i32* %y, align 4, !dbg !4120
  %and235 = and i32 %179, 1, !dbg !4122
  %tobool236 = icmp ne i32 %and235, 0, !dbg !4122
  br i1 %tobool236, label %if.then237, label %if.end242, !dbg !4123

if.then237:                                       ; preds = %for.end234
  %180 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !4124
  %181 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !4126
  %call238 = call i32 %180(i8* %181), !dbg !4127
  %tobool239 = icmp ne i32 %call238, 0, !dbg !4127
  br i1 %tobool239, label %if.then240, label %if.end241, !dbg !4128

if.then240:                                       ; preds = %if.then237
  br label %for.end245, !dbg !4129

if.end241:                                        ; preds = %if.then237
  br label %if.end242, !dbg !4130

if.end242:                                        ; preds = %if.end241, %for.end234
  br label %for.inc243, !dbg !4131

for.inc243:                                       ; preds = %if.end242
  %182 = load i32, i32* %y, align 4, !dbg !4132
  %inc244 = add nsw i32 %182, 1, !dbg !4132
  store i32 %inc244, i32* %y, align 4, !dbg !4132
  br label %for.cond, !dbg !4133, !llvm.loop !4134

for.end245:                                       ; preds = %if.then240, %for.cond
  ret void, !dbg !4136
}

; Function Attrs: noinline nounwind uwtable
define internal void @halo_tile(%struct.RenderPart* %pa, %struct.RenderLayer* %rl) #0 !dbg !4137 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %rlpp = alloca [16 x %struct.RenderLayer*], align 16
  %har = alloca %struct.HaloRen*, align 8
  %disprect = alloca %struct.rcti, align 4
  %testrect = alloca %struct.rcti, align 4
  %dist = alloca float, align 4
  %xsq = alloca float, align 4
  %ysq = alloca float, align 4
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %col = alloca [4 x float], align 16
  %rd = alloca i64*, align 8
  %a = alloca i32, align 4
  %rz = alloca i32*, align 8
  %zz = alloca i32, align 4
  %y = alloca i32, align 4
  %sample = alloca i32, align 4
  %totsample = alloca i32, align 4
  %od = alloca i32, align 4
  %minx = alloca i16, align 2
  %maxx = alloca i16, align 2
  %miny = alloca i16, align 2
  %maxy = alloca i16, align 2
  %x = alloca i16, align 2
  %lay = alloca i32, align 4
  %rectofs = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !4138, metadata !DIExpression()), !dbg !4139
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !4140, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.declare(metadata [16 x %struct.RenderLayer*]* %rlpp, metadata !4142, metadata !DIExpression()), !dbg !4143
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har, metadata !4144, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.declare(metadata %struct.rcti* %disprect, metadata !4148, metadata !DIExpression()), !dbg !4149
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4150
  %disprect1 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 13, !dbg !4151
  %1 = bitcast %struct.rcti* %disprect to i8*, !dbg !4151
  %2 = bitcast %struct.rcti* %disprect1 to i8*, !dbg !4151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 8 %2, i64 16, i1 false), !dbg !4151
  call void @llvm.dbg.declare(metadata %struct.rcti* %testrect, metadata !4152, metadata !DIExpression()), !dbg !4153
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4154
  %disprect2 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %3, i32 0, i32 13, !dbg !4155
  %4 = bitcast %struct.rcti* %testrect to i8*, !dbg !4155
  %5 = bitcast %struct.rcti* %disprect2 to i8*, !dbg !4155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 16, i1 false), !dbg !4155
  call void @llvm.dbg.declare(metadata float* %dist, metadata !4156, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.declare(metadata float* %xsq, metadata !4158, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.declare(metadata float* %ysq, metadata !4160, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.declare(metadata float* %xn, metadata !4162, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.declare(metadata float* %yn, metadata !4164, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !4166, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.declare(metadata i64** %rd, metadata !4168, metadata !DIExpression()), !dbg !4169
  store i64* null, i64** %rd, align 8, !dbg !4169
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4170, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !4172, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.declare(metadata i32* %zz, metadata !4174, metadata !DIExpression()), !dbg !4175
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4176, metadata !DIExpression()), !dbg !4177
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !4178, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.declare(metadata i32* %totsample, metadata !4180, metadata !DIExpression()), !dbg !4181
  call void @llvm.dbg.declare(metadata i32* %od, metadata !4182, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.declare(metadata i16* %minx, metadata !4184, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.declare(metadata i16* %maxx, metadata !4186, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.declare(metadata i16* %miny, metadata !4188, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.declare(metadata i16* %maxy, metadata !4190, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.declare(metadata i16* %x, metadata !4192, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !4194, metadata !DIExpression()), !dbg !4195
  %6 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !4196
  %lay3 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %6, i32 0, i32 3, !dbg !4197
  %7 = load i32, i32* %lay3, align 4, !dbg !4197
  store i32 %7, i32* %lay, align 4, !dbg !4195
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4198
  %crop = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 17, !dbg !4200
  %9 = load i16, i16* %crop, align 4, !dbg !4200
  %tobool = icmp ne i16 %9, 0, !dbg !4198
  br i1 %tobool, label %if.then, label %if.end, !dbg !4201

if.then:                                          ; preds = %entry
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4202
  %crop4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 17, !dbg !4204
  %11 = load i16, i16* %crop4, align 4, !dbg !4204
  %conv = sext i16 %11 to i32, !dbg !4202
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 0, !dbg !4205
  %12 = load i32, i32* %xmin, align 4, !dbg !4206
  %add = add nsw i32 %12, %conv, !dbg !4206
  store i32 %add, i32* %xmin, align 4, !dbg !4206
  %13 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4207
  %crop5 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %13, i32 0, i32 17, !dbg !4208
  %14 = load i16, i16* %crop5, align 4, !dbg !4208
  %conv6 = sext i16 %14 to i32, !dbg !4207
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 1, !dbg !4209
  %15 = load i32, i32* %xmax, align 4, !dbg !4210
  %sub = sub nsw i32 %15, %conv6, !dbg !4210
  store i32 %sub, i32* %xmax, align 4, !dbg !4210
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4211
  %crop7 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 17, !dbg !4212
  %17 = load i16, i16* %crop7, align 4, !dbg !4212
  %conv8 = sext i16 %17 to i32, !dbg !4211
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 2, !dbg !4213
  %18 = load i32, i32* %ymin, align 4, !dbg !4214
  %add9 = add nsw i32 %18, %conv8, !dbg !4214
  store i32 %add9, i32* %ymin, align 4, !dbg !4214
  %19 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4215
  %crop10 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %19, i32 0, i32 17, !dbg !4216
  %20 = load i16, i16* %crop10, align 4, !dbg !4216
  %conv11 = sext i16 %20 to i32, !dbg !4215
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 3, !dbg !4217
  %21 = load i32, i32* %ymax, align 4, !dbg !4218
  %sub12 = sub nsw i32 %21, %conv11, !dbg !4218
  store i32 %sub12, i32* %ymax, align 4, !dbg !4218
  br label %if.end, !dbg !4219

if.end:                                           ; preds = %if.then, %entry
  %22 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4220
  %23 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !4221
  %arraydecay = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 0, !dbg !4222
  %call = call i32 @get_sample_layers(%struct.RenderPart* %22, %struct.RenderLayer* %23, %struct.RenderLayer** %arraydecay), !dbg !4223
  store i32 %call, i32* %totsample, align 4, !dbg !4224
  store i32 0, i32* %a, align 4, !dbg !4225
  br label %for.cond, !dbg !4227

for.cond:                                         ; preds = %for.inc160, %if.end
  %24 = load i32, i32* %a, align 4, !dbg !4228
  %25 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 62), align 8, !dbg !4230
  %cmp = icmp slt i32 %24, %25, !dbg !4231
  br i1 %cmp, label %for.body, label %for.end162, !dbg !4232

for.body:                                         ; preds = %for.cond
  %26 = load %struct.HaloRen**, %struct.HaloRen*** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 65), align 8, !dbg !4233
  %27 = load i32, i32* %a, align 4, !dbg !4235
  %idxprom = sext i32 %27 to i64, !dbg !4236
  %arrayidx = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %26, i64 %idxprom, !dbg !4236
  %28 = load %struct.HaloRen*, %struct.HaloRen** %arrayidx, align 8, !dbg !4236
  store %struct.HaloRen* %28, %struct.HaloRen** %har, align 8, !dbg !4237
  %29 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4238
  %lay14 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %29, i32 0, i32 28, !dbg !4240
  %30 = load i32, i32* %lay14, align 8, !dbg !4240
  %31 = load i32, i32* %lay, align 4, !dbg !4241
  %and = and i32 %30, %31, !dbg !4242
  %cmp15 = icmp eq i32 %and, 0, !dbg !4243
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !4244

if.then17:                                        ; preds = %for.body
  br label %if.end155, !dbg !4245

if.else:                                          ; preds = %for.body
  %ymin18 = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 2, !dbg !4247
  %32 = load i32, i32* %ymin18, align 4, !dbg !4247
  %33 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4249
  %maxy19 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %33, i32 0, i32 1, !dbg !4250
  %34 = load i16, i16* %maxy19, align 2, !dbg !4250
  %conv20 = sext i16 %34 to i32, !dbg !4249
  %cmp21 = icmp sgt i32 %32, %conv20, !dbg !4251
  br i1 %cmp21, label %if.then23, label %if.else24, !dbg !4252

if.then23:                                        ; preds = %if.else
  br label %if.end154, !dbg !4253

if.else24:                                        ; preds = %if.else
  %ymax25 = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 3, !dbg !4255
  %35 = load i32, i32* %ymax25, align 4, !dbg !4255
  %36 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4257
  %miny26 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %36, i32 0, i32 0, !dbg !4258
  %37 = load i16, i16* %miny26, align 8, !dbg !4258
  %conv27 = sext i16 %37 to i32, !dbg !4257
  %cmp28 = icmp slt i32 %35, %conv27, !dbg !4259
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !4260

if.then30:                                        ; preds = %if.else24
  br label %if.end153, !dbg !4261

if.else31:                                        ; preds = %if.else24
  %38 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4263
  %xs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %38, i32 0, i32 3, !dbg !4265
  %39 = load float, float* %xs, align 8, !dbg !4265
  %40 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4266
  %rad = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %40, i32 0, i32 5, !dbg !4267
  %41 = load float, float* %rad, align 8, !dbg !4267
  %sub32 = fsub float %39, %41, !dbg !4268
  %conv33 = fpext float %sub32 to double, !dbg !4263
  %42 = call double @llvm.floor.f64(double %conv33), !dbg !4269
  %conv34 = fptosi double %42 to i16, !dbg !4269
  store i16 %conv34, i16* %minx, align 2, !dbg !4270
  %43 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4271
  %xs35 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %43, i32 0, i32 3, !dbg !4272
  %44 = load float, float* %xs35, align 8, !dbg !4272
  %45 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4273
  %rad36 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %45, i32 0, i32 5, !dbg !4274
  %46 = load float, float* %rad36, align 8, !dbg !4274
  %add37 = fadd float %44, %46, !dbg !4275
  %conv38 = fpext float %add37 to double, !dbg !4271
  %47 = call double @llvm.ceil.f64(double %conv38), !dbg !4276
  %conv39 = fptosi double %47 to i16, !dbg !4276
  store i16 %conv39, i16* %maxx, align 2, !dbg !4277
  %xmin40 = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 0, !dbg !4278
  %48 = load i32, i32* %xmin40, align 4, !dbg !4278
  %49 = load i16, i16* %maxx, align 2, !dbg !4280
  %conv41 = sext i16 %49 to i32, !dbg !4280
  %cmp42 = icmp sgt i32 %48, %conv41, !dbg !4281
  br i1 %cmp42, label %if.then44, label %if.else45, !dbg !4282

if.then44:                                        ; preds = %if.else31
  br label %if.end152, !dbg !4283

if.else45:                                        ; preds = %if.else31
  %xmax46 = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 1, !dbg !4285
  %50 = load i32, i32* %xmax46, align 4, !dbg !4285
  %51 = load i16, i16* %minx, align 2, !dbg !4287
  %conv47 = sext i16 %51 to i32, !dbg !4287
  %cmp48 = icmp slt i32 %50, %conv47, !dbg !4288
  br i1 %cmp48, label %if.then50, label %if.else51, !dbg !4289

if.then50:                                        ; preds = %if.else45
  br label %if.end151, !dbg !4290

if.else51:                                        ; preds = %if.else45
  %52 = load i16, i16* %minx, align 2, !dbg !4292
  %conv52 = sext i16 %52 to i32, !dbg !4292
  %xmin53 = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 0, !dbg !4294
  %53 = load i32, i32* %xmin53, align 4, !dbg !4294
  %call54 = call i32 @max_ii(i32 %conv52, i32 %53), !dbg !4295
  %conv55 = trunc i32 %call54 to i16, !dbg !4295
  store i16 %conv55, i16* %minx, align 2, !dbg !4296
  %54 = load i16, i16* %maxx, align 2, !dbg !4297
  %conv56 = sext i16 %54 to i32, !dbg !4297
  %xmax57 = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 1, !dbg !4298
  %55 = load i32, i32* %xmax57, align 4, !dbg !4298
  %call58 = call i32 @min_ii(i32 %conv56, i32 %55), !dbg !4299
  %conv59 = trunc i32 %call58 to i16, !dbg !4299
  store i16 %conv59, i16* %maxx, align 2, !dbg !4300
  %56 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4301
  %miny60 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %56, i32 0, i32 0, !dbg !4302
  %57 = load i16, i16* %miny60, align 8, !dbg !4302
  %conv61 = sext i16 %57 to i32, !dbg !4301
  %ymin62 = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 2, !dbg !4303
  %58 = load i32, i32* %ymin62, align 4, !dbg !4303
  %call63 = call i32 @max_ii(i32 %conv61, i32 %58), !dbg !4304
  %conv64 = trunc i32 %call63 to i16, !dbg !4304
  store i16 %conv64, i16* %miny, align 2, !dbg !4305
  %59 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4306
  %maxy65 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %59, i32 0, i32 1, !dbg !4307
  %60 = load i16, i16* %maxy65, align 2, !dbg !4307
  %conv66 = sext i16 %60 to i32, !dbg !4306
  %ymax67 = getelementptr inbounds %struct.rcti, %struct.rcti* %testrect, i32 0, i32 3, !dbg !4308
  %61 = load i32, i32* %ymax67, align 4, !dbg !4308
  %call68 = call i32 @min_ii(i32 %conv66, i32 %61), !dbg !4309
  %conv69 = trunc i32 %call68 to i16, !dbg !4309
  store i16 %conv69, i16* %maxy, align 2, !dbg !4310
  %62 = load i16, i16* %miny, align 2, !dbg !4311
  %conv70 = sext i16 %62 to i32, !dbg !4311
  store i32 %conv70, i32* %y, align 4, !dbg !4313
  br label %for.cond71, !dbg !4314

for.cond71:                                       ; preds = %for.inc148, %if.else51
  %63 = load i32, i32* %y, align 4, !dbg !4315
  %64 = load i16, i16* %maxy, align 2, !dbg !4317
  %conv72 = sext i16 %64 to i32, !dbg !4317
  %cmp73 = icmp slt i32 %63, %conv72, !dbg !4318
  br i1 %cmp73, label %for.body75, label %for.end150, !dbg !4319

for.body75:                                       ; preds = %for.cond71
  call void @llvm.dbg.declare(metadata i32* %rectofs, metadata !4320, metadata !DIExpression()), !dbg !4322
  %65 = load i32, i32* %y, align 4, !dbg !4323
  %ymin76 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !4324
  %66 = load i32, i32* %ymin76, align 4, !dbg !4324
  %sub77 = sub nsw i32 %65, %66, !dbg !4325
  %67 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4326
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %67, i32 0, i32 14, !dbg !4327
  %68 = load i32, i32* %rectx, align 8, !dbg !4327
  %mul = mul nsw i32 %sub77, %68, !dbg !4328
  %69 = load i16, i16* %minx, align 2, !dbg !4329
  %conv78 = sext i16 %69 to i32, !dbg !4329
  %xmin79 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !4330
  %70 = load i32, i32* %xmin79, align 4, !dbg !4330
  %sub80 = sub nsw i32 %conv78, %70, !dbg !4331
  %add81 = add nsw i32 %mul, %sub80, !dbg !4332
  store i32 %add81, i32* %rectofs, align 4, !dbg !4322
  %71 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4333
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %71, i32 0, i32 6, !dbg !4334
  %72 = load i32*, i32** %rectz, align 8, !dbg !4334
  %73 = load i32, i32* %rectofs, align 4, !dbg !4335
  %idx.ext = sext i32 %73 to i64, !dbg !4336
  %add.ptr = getelementptr inbounds i32, i32* %72, i64 %idx.ext, !dbg !4336
  store i32* %add.ptr, i32** %rz, align 8, !dbg !4337
  %74 = load i32, i32* %rectofs, align 4, !dbg !4338
  store i32 %74, i32* %od, align 4, !dbg !4339
  %75 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4340
  %rectdaps = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %75, i32 0, i32 8, !dbg !4342
  %76 = load i64*, i64** %rectdaps, align 8, !dbg !4342
  %tobool82 = icmp ne i64* %76, null, !dbg !4340
  br i1 %tobool82, label %if.then83, label %if.end87, !dbg !4343

if.then83:                                        ; preds = %for.body75
  %77 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4344
  %rectdaps84 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %77, i32 0, i32 8, !dbg !4345
  %78 = load i64*, i64** %rectdaps84, align 8, !dbg !4345
  %79 = load i32, i32* %rectofs, align 4, !dbg !4346
  %idx.ext85 = sext i32 %79 to i64, !dbg !4347
  %add.ptr86 = getelementptr inbounds i64, i64* %78, i64 %idx.ext85, !dbg !4347
  store i64* %add.ptr86, i64** %rd, align 8, !dbg !4348
  br label %if.end87, !dbg !4349

if.end87:                                         ; preds = %if.then83, %for.body75
  %80 = load i32, i32* %y, align 4, !dbg !4350
  %conv88 = sitofp i32 %80 to float, !dbg !4350
  %81 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4351
  %ys = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %81, i32 0, i32 4, !dbg !4352
  %82 = load float, float* %ys, align 4, !dbg !4352
  %sub89 = fsub float %conv88, %82, !dbg !4353
  %83 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 24), align 8, !dbg !4354
  %mul90 = fmul float %sub89, %83, !dbg !4355
  store float %mul90, float* %yn, align 4, !dbg !4356
  %84 = load float, float* %yn, align 4, !dbg !4357
  %85 = load float, float* %yn, align 4, !dbg !4358
  %mul91 = fmul float %84, %85, !dbg !4359
  store float %mul91, float* %ysq, align 4, !dbg !4360
  %86 = load i16, i16* %minx, align 2, !dbg !4361
  store i16 %86, i16* %x, align 2, !dbg !4363
  br label %for.cond92, !dbg !4364

for.cond92:                                       ; preds = %for.inc143, %if.end87
  %87 = load i16, i16* %x, align 2, !dbg !4365
  %conv93 = sext i16 %87 to i32, !dbg !4365
  %88 = load i16, i16* %maxx, align 2, !dbg !4367
  %conv94 = sext i16 %88 to i32, !dbg !4367
  %cmp95 = icmp slt i32 %conv93, %conv94, !dbg !4368
  br i1 %cmp95, label %for.body97, label %for.end147, !dbg !4369

for.body97:                                       ; preds = %for.cond92
  %89 = load i16, i16* %x, align 2, !dbg !4370
  %conv98 = sext i16 %89 to i32, !dbg !4370
  %conv99 = sitofp i32 %conv98 to float, !dbg !4370
  %90 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4372
  %xs100 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %90, i32 0, i32 3, !dbg !4373
  %91 = load float, float* %xs100, align 8, !dbg !4373
  %sub101 = fsub float %conv99, %91, !dbg !4374
  store float %sub101, float* %xn, align 4, !dbg !4375
  %92 = load float, float* %xn, align 4, !dbg !4376
  %93 = load float, float* %xn, align 4, !dbg !4377
  %mul102 = fmul float %92, %93, !dbg !4378
  store float %mul102, float* %xsq, align 4, !dbg !4379
  %94 = load float, float* %xsq, align 4, !dbg !4380
  %95 = load float, float* %ysq, align 4, !dbg !4381
  %add103 = fadd float %94, %95, !dbg !4382
  store float %add103, float* %dist, align 4, !dbg !4383
  %96 = load float, float* %dist, align 4, !dbg !4384
  %97 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4386
  %radsq = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %97, i32 0, i32 6, !dbg !4387
  %98 = load float, float* %radsq, align 4, !dbg !4387
  %cmp104 = fcmp olt float %96, %98, !dbg !4388
  br i1 %cmp104, label %if.then106, label %if.end139, !dbg !4389

if.then106:                                       ; preds = %for.body97
  %99 = load i64*, i64** %rd, align 8, !dbg !4390
  %tobool107 = icmp ne i64* %99, null, !dbg !4390
  br i1 %tobool107, label %land.lhs.true, label %if.else111, !dbg !4393

land.lhs.true:                                    ; preds = %if.then106
  %100 = load i64*, i64** %rd, align 8, !dbg !4394
  %101 = load i64, i64* %100, align 8, !dbg !4395
  %tobool108 = icmp ne i64 %101, 0, !dbg !4395
  br i1 %tobool108, label %if.then109, label %if.else111, !dbg !4396

if.then109:                                       ; preds = %land.lhs.true
  %102 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4397
  %arraydecay110 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 0, !dbg !4399
  %103 = load i32, i32* %totsample, align 4, !dbg !4400
  %104 = load i32, i32* %od, align 4, !dbg !4401
  %105 = load float, float* %dist, align 4, !dbg !4402
  %106 = load float, float* %xn, align 4, !dbg !4403
  %107 = load float, float* %yn, align 4, !dbg !4404
  %108 = load i64*, i64** %rd, align 8, !dbg !4405
  %109 = load i64, i64* %108, align 8, !dbg !4406
  %110 = inttoptr i64 %109 to %struct.PixStr*, !dbg !4407
  call void @halo_pixelstruct(%struct.HaloRen* %102, %struct.RenderLayer** %arraydecay110, i32 %103, i32 %104, float %105, float %106, float %107, %struct.PixStr* %110), !dbg !4408
  br label %if.end138, !dbg !4409

if.else111:                                       ; preds = %land.lhs.true, %if.then106
  %111 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4410
  %112 = load i32*, i32** %rz, align 8, !dbg !4412
  %113 = load i32, i32* %112, align 4, !dbg !4413
  %call112 = call i32 @calchalo_z(%struct.HaloRen* %111, i32 %113), !dbg !4414
  store i32 %call112, i32* %zz, align 4, !dbg !4415
  %114 = load i32, i32* %zz, align 4, !dbg !4416
  %115 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4418
  %zs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %115, i32 0, i32 15, !dbg !4419
  %116 = load i32, i32* %zs, align 8, !dbg !4419
  %cmp113 = icmp sgt i32 %114, %116, !dbg !4420
  br i1 %cmp113, label %if.then120, label %lor.lhs.false, !dbg !4421

lor.lhs.false:                                    ; preds = %if.else111
  %117 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4422
  %mat = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %117, i32 0, i32 29, !dbg !4423
  %118 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !4423
  %tobool115 = icmp ne %struct.Material* %118, null, !dbg !4422
  br i1 %tobool115, label %land.lhs.true116, label %if.end137, !dbg !4424

land.lhs.true116:                                 ; preds = %lor.lhs.false
  %119 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4425
  %mat117 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %119, i32 0, i32 29, !dbg !4426
  %120 = load %struct.Material*, %struct.Material** %mat117, align 8, !dbg !4426
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %120, i32 0, i32 51, !dbg !4427
  %121 = load i32, i32* %mode, align 4, !dbg !4427
  %and118 = and i32 %121, 16, !dbg !4428
  %tobool119 = icmp ne i32 %and118, 0, !dbg !4428
  br i1 %tobool119, label %if.then120, label %if.end137, !dbg !4429

if.then120:                                       ; preds = %land.lhs.true116, %if.else111
  %122 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4430
  %arraydecay121 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !4433
  %123 = load i32, i32* %zz, align 4, !dbg !4434
  %124 = load float, float* %dist, align 4, !dbg !4435
  %125 = load float, float* %xn, align 4, !dbg !4436
  %126 = load float, float* %yn, align 4, !dbg !4437
  %127 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4438
  %flarec = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %127, i32 0, i32 25, !dbg !4439
  %128 = load i16, i16* %flarec, align 4, !dbg !4439
  %call122 = call i32 @shadeHaloFloat(%struct.HaloRen* %122, float* %arraydecay121, i32 %123, float %124, float %125, float %126, i16 signext %128), !dbg !4440
  %tobool123 = icmp ne i32 %call122, 0, !dbg !4440
  br i1 %tobool123, label %if.then124, label %if.end136, !dbg !4441

if.then124:                                       ; preds = %if.then120
  store i32 0, i32* %sample, align 4, !dbg !4442
  br label %for.cond125, !dbg !4445

for.cond125:                                      ; preds = %for.inc, %if.then124
  %129 = load i32, i32* %sample, align 4, !dbg !4446
  %130 = load i32, i32* %totsample, align 4, !dbg !4448
  %cmp126 = icmp slt i32 %129, %130, !dbg !4449
  br i1 %cmp126, label %for.body128, label %for.end, !dbg !4450

for.body128:                                      ; preds = %for.cond125
  %131 = load i32, i32* %sample, align 4, !dbg !4451
  %idxprom129 = sext i32 %131 to i64, !dbg !4452
  %arrayidx130 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom129, !dbg !4452
  %132 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx130, align 8, !dbg !4452
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %132, i32 0, i32 11, !dbg !4453
  %133 = load float*, float** %rectf, align 8, !dbg !4453
  %134 = load i32, i32* %od, align 4, !dbg !4454
  %mul131 = mul nsw i32 %134, 4, !dbg !4455
  %idx.ext132 = sext i32 %mul131 to i64, !dbg !4456
  %add.ptr133 = getelementptr inbounds float, float* %133, i64 %idx.ext132, !dbg !4456
  %arraydecay134 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !4457
  %135 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !4458
  %add135 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %135, i32 0, i32 20, !dbg !4459
  %136 = load i8, i8* %add135, align 2, !dbg !4459
  call void @addalphaAddfacFloat(float* %add.ptr133, float* %arraydecay134, i8 zeroext %136), !dbg !4460
  br label %for.inc, !dbg !4460

for.inc:                                          ; preds = %for.body128
  %137 = load i32, i32* %sample, align 4, !dbg !4461
  %inc = add nsw i32 %137, 1, !dbg !4461
  store i32 %inc, i32* %sample, align 4, !dbg !4461
  br label %for.cond125, !dbg !4462, !llvm.loop !4463

for.end:                                          ; preds = %for.cond125
  br label %if.end136, !dbg !4465

if.end136:                                        ; preds = %for.end, %if.then120
  br label %if.end137, !dbg !4466

if.end137:                                        ; preds = %if.end136, %land.lhs.true116, %lor.lhs.false
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then109
  br label %if.end139, !dbg !4467

if.end139:                                        ; preds = %if.end138, %for.body97
  %138 = load i64*, i64** %rd, align 8, !dbg !4468
  %tobool140 = icmp ne i64* %138, null, !dbg !4468
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !4470

if.then141:                                       ; preds = %if.end139
  %139 = load i64*, i64** %rd, align 8, !dbg !4471
  %incdec.ptr = getelementptr inbounds i64, i64* %139, i32 1, !dbg !4471
  store i64* %incdec.ptr, i64** %rd, align 8, !dbg !4471
  br label %if.end142, !dbg !4472

if.end142:                                        ; preds = %if.then141, %if.end139
  br label %for.inc143, !dbg !4473

for.inc143:                                       ; preds = %if.end142
  %140 = load i16, i16* %x, align 2, !dbg !4474
  %inc144 = add i16 %140, 1, !dbg !4474
  store i16 %inc144, i16* %x, align 2, !dbg !4474
  %141 = load i32*, i32** %rz, align 8, !dbg !4475
  %incdec.ptr145 = getelementptr inbounds i32, i32* %141, i32 1, !dbg !4475
  store i32* %incdec.ptr145, i32** %rz, align 8, !dbg !4475
  %142 = load i32, i32* %od, align 4, !dbg !4476
  %inc146 = add nsw i32 %142, 1, !dbg !4476
  store i32 %inc146, i32* %od, align 4, !dbg !4476
  br label %for.cond92, !dbg !4477, !llvm.loop !4478

for.end147:                                       ; preds = %for.cond92
  br label %for.inc148, !dbg !4480

for.inc148:                                       ; preds = %for.end147
  %143 = load i32, i32* %y, align 4, !dbg !4481
  %inc149 = add nsw i32 %143, 1, !dbg !4481
  store i32 %inc149, i32* %y, align 4, !dbg !4481
  br label %for.cond71, !dbg !4482, !llvm.loop !4483

for.end150:                                       ; preds = %for.cond71
  br label %if.end151

if.end151:                                        ; preds = %for.end150, %if.then50
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then44
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then30
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.then23
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then17
  %144 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !4485
  %145 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !4487
  %call156 = call i32 %144(i8* %145), !dbg !4488
  %tobool157 = icmp ne i32 %call156, 0, !dbg !4488
  br i1 %tobool157, label %if.then158, label %if.end159, !dbg !4489

if.then158:                                       ; preds = %if.end155
  br label %for.end162, !dbg !4490

if.end159:                                        ; preds = %if.end155
  br label %for.inc160, !dbg !4491

for.inc160:                                       ; preds = %if.end159
  %146 = load i32, i32* %a, align 4, !dbg !4492
  %inc161 = add nsw i32 %146, 1, !dbg !4492
  store i32 %inc161, i32* %a, align 4, !dbg !4492
  br label %for.cond, !dbg !4493, !llvm.loop !4494

for.end162:                                       ; preds = %if.then158, %for.cond
  ret void, !dbg !4496
}

declare dso_local i16* @zbuffer_transp_shade(%struct.RenderPart*, %struct.RenderLayer*, float*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal i16* @make_solid_mask(%struct.RenderPart* %pa) #0 !dbg !4497 {
entry:
  %retval = alloca i16*, align 8
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rd = alloca i64*, align 8
  %solidmask = alloca i16*, align 8
  %sp = alloca i16*, align 8
  %x = alloca i32, align 4
  %ps = alloca %struct.PixStr*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !4500, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.declare(metadata i64** %rd, metadata !4502, metadata !DIExpression()), !dbg !4503
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4504
  %rectdaps = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 8, !dbg !4505
  %1 = load i64*, i64** %rectdaps, align 8, !dbg !4505
  store i64* %1, i64** %rd, align 8, !dbg !4503
  call void @llvm.dbg.declare(metadata i16** %solidmask, metadata !4506, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.declare(metadata i16** %sp, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4510, metadata !DIExpression()), !dbg !4511
  %2 = load i64*, i64** %rd, align 8, !dbg !4512
  %cmp = icmp eq i64* %2, null, !dbg !4514
  br i1 %cmp, label %if.then, label %if.end, !dbg !4515

if.then:                                          ; preds = %entry
  store i16* null, i16** %retval, align 8, !dbg !4516
  br label %return, !dbg !4516

if.end:                                           ; preds = %entry
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4517
  %4 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4518
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %4, i32 0, i32 14, !dbg !4519
  %5 = load i32, i32* %rectx, align 8, !dbg !4519
  %conv = sext i32 %5 to i64, !dbg !4518
  %mul = mul i64 2, %conv, !dbg !4520
  %6 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4521
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %6, i32 0, i32 15, !dbg !4522
  %7 = load i32, i32* %recty, align 4, !dbg !4522
  %conv1 = sext i32 %7 to i64, !dbg !4521
  %mul2 = mul i64 %mul, %conv1, !dbg !4523
  %call = call i8* %3(i64 %mul2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)), !dbg !4517
  %8 = bitcast i8* %call to i16*, !dbg !4517
  store i16* %8, i16** %solidmask, align 8, !dbg !4524
  store i16* %8, i16** %sp, align 8, !dbg !4525
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4526
  %rectx3 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 14, !dbg !4528
  %10 = load i32, i32* %rectx3, align 8, !dbg !4528
  %11 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4529
  %recty4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %11, i32 0, i32 15, !dbg !4530
  %12 = load i32, i32* %recty4, align 4, !dbg !4530
  %mul5 = mul nsw i32 %10, %12, !dbg !4531
  store i32 %mul5, i32* %x, align 4, !dbg !4532
  br label %for.cond, !dbg !4533

for.cond:                                         ; preds = %for.inc18, %if.end
  %13 = load i32, i32* %x, align 4, !dbg !4534
  %cmp6 = icmp sgt i32 %13, 0, !dbg !4536
  br i1 %cmp6, label %for.body, label %for.end20, !dbg !4537

for.body:                                         ; preds = %for.cond
  %14 = load i64*, i64** %rd, align 8, !dbg !4538
  %15 = load i64, i64* %14, align 8, !dbg !4541
  %tobool = icmp ne i64 %15, 0, !dbg !4541
  br i1 %tobool, label %if.then8, label %if.else, !dbg !4542

if.then8:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.PixStr** %ps, metadata !4543, metadata !DIExpression()), !dbg !4545
  %16 = load i64*, i64** %rd, align 8, !dbg !4546
  %17 = load i64, i64* %16, align 8, !dbg !4547
  %18 = inttoptr i64 %17 to %struct.PixStr*, !dbg !4548
  store %struct.PixStr* %18, %struct.PixStr** %ps, align 8, !dbg !4545
  %19 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !4549
  %mask = getelementptr inbounds %struct.PixStr, %struct.PixStr* %19, i32 0, i32 5, !dbg !4550
  %20 = load i16, i16* %mask, align 8, !dbg !4550
  %21 = load i16*, i16** %sp, align 8, !dbg !4551
  store i16 %20, i16* %21, align 2, !dbg !4552
  %22 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !4553
  %next = getelementptr inbounds %struct.PixStr, %struct.PixStr* %22, i32 0, i32 0, !dbg !4555
  %23 = load %struct.PixStr*, %struct.PixStr** %next, align 8, !dbg !4555
  store %struct.PixStr* %23, %struct.PixStr** %ps, align 8, !dbg !4556
  br label %for.cond9, !dbg !4557

for.cond9:                                        ; preds = %for.inc, %if.then8
  %24 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !4558
  %tobool10 = icmp ne %struct.PixStr* %24, null, !dbg !4560
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !4560

for.body11:                                       ; preds = %for.cond9
  %25 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !4561
  %mask12 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %25, i32 0, i32 5, !dbg !4562
  %26 = load i16, i16* %mask12, align 8, !dbg !4562
  %conv13 = zext i16 %26 to i32, !dbg !4561
  %27 = load i16*, i16** %sp, align 8, !dbg !4563
  %28 = load i16, i16* %27, align 2, !dbg !4564
  %conv14 = zext i16 %28 to i32, !dbg !4564
  %or = or i32 %conv14, %conv13, !dbg !4564
  %conv15 = trunc i32 %or to i16, !dbg !4564
  store i16 %conv15, i16* %27, align 2, !dbg !4564
  br label %for.inc, !dbg !4565

for.inc:                                          ; preds = %for.body11
  %29 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !4566
  %next16 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %29, i32 0, i32 0, !dbg !4567
  %30 = load %struct.PixStr*, %struct.PixStr** %next16, align 8, !dbg !4567
  store %struct.PixStr* %30, %struct.PixStr** %ps, align 8, !dbg !4568
  br label %for.cond9, !dbg !4569, !llvm.loop !4570

for.end:                                          ; preds = %for.cond9
  br label %if.end17, !dbg !4572

if.else:                                          ; preds = %for.body
  %31 = load i16*, i16** %sp, align 8, !dbg !4573
  store i16 0, i16* %31, align 2, !dbg !4574
  br label %if.end17

if.end17:                                         ; preds = %if.else, %for.end
  br label %for.inc18, !dbg !4575

for.inc18:                                        ; preds = %if.end17
  %32 = load i32, i32* %x, align 4, !dbg !4576
  %dec = add nsw i32 %32, -1, !dbg !4576
  store i32 %dec, i32* %x, align 4, !dbg !4576
  %33 = load i64*, i64** %rd, align 8, !dbg !4577
  %incdec.ptr = getelementptr inbounds i64, i64* %33, i32 1, !dbg !4577
  store i64* %incdec.ptr, i64** %rd, align 8, !dbg !4577
  %34 = load i16*, i16** %sp, align 8, !dbg !4578
  %incdec.ptr19 = getelementptr inbounds i16, i16* %34, i32 1, !dbg !4578
  store i16* %incdec.ptr19, i16** %sp, align 8, !dbg !4578
  br label %for.cond, !dbg !4579, !llvm.loop !4580

for.end20:                                        ; preds = %for.cond
  %35 = load i16*, i16** %solidmask, align 8, !dbg !4582
  store i16* %35, i16** %retval, align 8, !dbg !4583
  br label %return, !dbg !4583

return:                                           ; preds = %for.end20, %if.then
  %36 = load i16*, i16** %retval, align 8, !dbg !4584
  ret i16* %36, !dbg !4584
}

declare dso_local void @addAlphaOverFloat(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @addAlphaOverFloatMask(float* %dest, float* %source, i16 zeroext %dmask, i16 zeroext %smask) #0 !dbg !4585 {
entry:
  %dest.addr = alloca float*, align 8
  %source.addr = alloca float*, align 8
  %dmask.addr = alloca i16, align 2
  %smask.addr = alloca i16, align 2
  %shared = alloca i16, align 2
  %mul = alloca float, align 4
  %shared_bits = alloca float, align 4
  %tot_bits = alloca float, align 4
  %add = alloca float, align 4
  store float* %dest, float** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dest.addr, metadata !4588, metadata !DIExpression()), !dbg !4589
  store float* %source, float** %source.addr, align 8
  call void @llvm.dbg.declare(metadata float** %source.addr, metadata !4590, metadata !DIExpression()), !dbg !4591
  store i16 %dmask, i16* %dmask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dmask.addr, metadata !4592, metadata !DIExpression()), !dbg !4593
  store i16 %smask, i16* %smask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %smask.addr, metadata !4594, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.declare(metadata i16* %shared, metadata !4596, metadata !DIExpression()), !dbg !4597
  %0 = load i16, i16* %dmask.addr, align 2, !dbg !4598
  %conv = zext i16 %0 to i32, !dbg !4598
  %1 = load i16, i16* %smask.addr, align 2, !dbg !4599
  %conv1 = zext i16 %1 to i32, !dbg !4599
  %and = and i32 %conv, %conv1, !dbg !4600
  %conv2 = trunc i32 %and to i16, !dbg !4598
  store i16 %conv2, i16* %shared, align 2, !dbg !4597
  call void @llvm.dbg.declare(metadata float* %mul, metadata !4601, metadata !DIExpression()), !dbg !4602
  %2 = load float*, float** %source.addr, align 8, !dbg !4603
  %arrayidx = getelementptr inbounds float, float* %2, i64 3, !dbg !4603
  %3 = load float, float* %arrayidx, align 4, !dbg !4603
  %sub = fsub float 1.000000e+00, %3, !dbg !4604
  store float %sub, float* %mul, align 4, !dbg !4602
  %4 = load i16, i16* %shared, align 2, !dbg !4605
  %tobool = icmp ne i16 %4, 0, !dbg !4605
  br i1 %tobool, label %if.then, label %if.else, !dbg !4607

if.then:                                          ; preds = %entry
  %5 = load i16, i16* %shared, align 2, !dbg !4608
  %conv3 = zext i16 %5 to i32, !dbg !4608
  %6 = load i16, i16* %dmask.addr, align 2, !dbg !4611
  %conv4 = zext i16 %6 to i32, !dbg !4611
  %cmp = icmp ne i32 %conv3, %conv4, !dbg !4612
  br i1 %cmp, label %if.then6, label %if.end, !dbg !4613

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata float* %shared_bits, metadata !4614, metadata !DIExpression()), !dbg !4616
  %7 = load i16, i16* %shared, align 2, !dbg !4617
  %call = call i32 @count_mask(i16 zeroext %7), !dbg !4618
  %conv7 = sitofp i32 %call to float, !dbg !4619
  store float %conv7, float* %shared_bits, align 4, !dbg !4616
  call void @llvm.dbg.declare(metadata float* %tot_bits, metadata !4620, metadata !DIExpression()), !dbg !4621
  %8 = load i16, i16* %smask.addr, align 2, !dbg !4622
  %conv8 = zext i16 %8 to i32, !dbg !4622
  %9 = load i16, i16* %dmask.addr, align 2, !dbg !4623
  %conv9 = zext i16 %9 to i32, !dbg !4623
  %or = or i32 %conv8, %conv9, !dbg !4624
  %conv10 = trunc i32 %or to i16, !dbg !4622
  %call11 = call i32 @count_mask(i16 zeroext %conv10), !dbg !4625
  %conv12 = sitofp i32 %call11 to float, !dbg !4626
  store float %conv12, float* %tot_bits, align 4, !dbg !4621
  call void @llvm.dbg.declare(metadata float* %add, metadata !4627, metadata !DIExpression()), !dbg !4628
  %10 = load float, float* %tot_bits, align 4, !dbg !4629
  %11 = load float, float* %shared_bits, align 4, !dbg !4630
  %sub13 = fsub float %10, %11, !dbg !4631
  %12 = load float, float* %tot_bits, align 4, !dbg !4632
  %div = fdiv float %sub13, %12, !dbg !4633
  store float %div, float* %add, align 4, !dbg !4628
  %13 = load float, float* %add, align 4, !dbg !4634
  %14 = load float, float* %add, align 4, !dbg !4635
  %sub14 = fsub float 1.000000e+00, %14, !dbg !4636
  %15 = load float, float* %mul, align 4, !dbg !4637
  %mul15 = fmul float %sub14, %15, !dbg !4638
  %add16 = fadd float %13, %mul15, !dbg !4639
  store float %add16, float* %mul, align 4, !dbg !4640
  br label %if.end, !dbg !4641

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end35, !dbg !4642

if.else:                                          ; preds = %entry
  %16 = load i16, i16* %dmask.addr, align 2, !dbg !4643
  %conv17 = zext i16 %16 to i32, !dbg !4643
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !4643
  br i1 %tobool18, label %land.lhs.true, label %if.end34, !dbg !4645

land.lhs.true:                                    ; preds = %if.else
  %17 = load i16, i16* %smask.addr, align 2, !dbg !4646
  %conv19 = zext i16 %17 to i32, !dbg !4646
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !4646
  br i1 %tobool20, label %if.then21, label %if.end34, !dbg !4647

if.then21:                                        ; preds = %land.lhs.true
  %18 = load float*, float** %source.addr, align 8, !dbg !4648
  %arrayidx22 = getelementptr inbounds float, float* %18, i64 0, !dbg !4648
  %19 = load float, float* %arrayidx22, align 4, !dbg !4648
  %20 = load float*, float** %dest.addr, align 8, !dbg !4650
  %arrayidx23 = getelementptr inbounds float, float* %20, i64 0, !dbg !4650
  %21 = load float, float* %arrayidx23, align 4, !dbg !4651
  %add24 = fadd float %21, %19, !dbg !4651
  store float %add24, float* %arrayidx23, align 4, !dbg !4651
  %22 = load float*, float** %source.addr, align 8, !dbg !4652
  %arrayidx25 = getelementptr inbounds float, float* %22, i64 1, !dbg !4652
  %23 = load float, float* %arrayidx25, align 4, !dbg !4652
  %24 = load float*, float** %dest.addr, align 8, !dbg !4653
  %arrayidx26 = getelementptr inbounds float, float* %24, i64 1, !dbg !4653
  %25 = load float, float* %arrayidx26, align 4, !dbg !4654
  %add27 = fadd float %25, %23, !dbg !4654
  store float %add27, float* %arrayidx26, align 4, !dbg !4654
  %26 = load float*, float** %source.addr, align 8, !dbg !4655
  %arrayidx28 = getelementptr inbounds float, float* %26, i64 2, !dbg !4655
  %27 = load float, float* %arrayidx28, align 4, !dbg !4655
  %28 = load float*, float** %dest.addr, align 8, !dbg !4656
  %arrayidx29 = getelementptr inbounds float, float* %28, i64 2, !dbg !4656
  %29 = load float, float* %arrayidx29, align 4, !dbg !4657
  %add30 = fadd float %29, %27, !dbg !4657
  store float %add30, float* %arrayidx29, align 4, !dbg !4657
  %30 = load float*, float** %source.addr, align 8, !dbg !4658
  %arrayidx31 = getelementptr inbounds float, float* %30, i64 3, !dbg !4658
  %31 = load float, float* %arrayidx31, align 4, !dbg !4658
  %32 = load float*, float** %dest.addr, align 8, !dbg !4659
  %arrayidx32 = getelementptr inbounds float, float* %32, i64 3, !dbg !4659
  %33 = load float, float* %arrayidx32, align 4, !dbg !4660
  %add33 = fadd float %33, %31, !dbg !4660
  store float %add33, float* %arrayidx32, align 4, !dbg !4660
  br label %return, !dbg !4661

if.end34:                                         ; preds = %land.lhs.true, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end
  %34 = load float, float* %mul, align 4, !dbg !4662
  %35 = load float*, float** %dest.addr, align 8, !dbg !4663
  %arrayidx36 = getelementptr inbounds float, float* %35, i64 0, !dbg !4663
  %36 = load float, float* %arrayidx36, align 4, !dbg !4663
  %mul37 = fmul float %34, %36, !dbg !4664
  %37 = load float*, float** %source.addr, align 8, !dbg !4665
  %arrayidx38 = getelementptr inbounds float, float* %37, i64 0, !dbg !4665
  %38 = load float, float* %arrayidx38, align 4, !dbg !4665
  %add39 = fadd float %mul37, %38, !dbg !4666
  %39 = load float*, float** %dest.addr, align 8, !dbg !4667
  %arrayidx40 = getelementptr inbounds float, float* %39, i64 0, !dbg !4667
  store float %add39, float* %arrayidx40, align 4, !dbg !4668
  %40 = load float, float* %mul, align 4, !dbg !4669
  %41 = load float*, float** %dest.addr, align 8, !dbg !4670
  %arrayidx41 = getelementptr inbounds float, float* %41, i64 1, !dbg !4670
  %42 = load float, float* %arrayidx41, align 4, !dbg !4670
  %mul42 = fmul float %40, %42, !dbg !4671
  %43 = load float*, float** %source.addr, align 8, !dbg !4672
  %arrayidx43 = getelementptr inbounds float, float* %43, i64 1, !dbg !4672
  %44 = load float, float* %arrayidx43, align 4, !dbg !4672
  %add44 = fadd float %mul42, %44, !dbg !4673
  %45 = load float*, float** %dest.addr, align 8, !dbg !4674
  %arrayidx45 = getelementptr inbounds float, float* %45, i64 1, !dbg !4674
  store float %add44, float* %arrayidx45, align 4, !dbg !4675
  %46 = load float, float* %mul, align 4, !dbg !4676
  %47 = load float*, float** %dest.addr, align 8, !dbg !4677
  %arrayidx46 = getelementptr inbounds float, float* %47, i64 2, !dbg !4677
  %48 = load float, float* %arrayidx46, align 4, !dbg !4677
  %mul47 = fmul float %46, %48, !dbg !4678
  %49 = load float*, float** %source.addr, align 8, !dbg !4679
  %arrayidx48 = getelementptr inbounds float, float* %49, i64 2, !dbg !4679
  %50 = load float, float* %arrayidx48, align 4, !dbg !4679
  %add49 = fadd float %mul47, %50, !dbg !4680
  %51 = load float*, float** %dest.addr, align 8, !dbg !4681
  %arrayidx50 = getelementptr inbounds float, float* %51, i64 2, !dbg !4681
  store float %add49, float* %arrayidx50, align 4, !dbg !4682
  %52 = load float, float* %mul, align 4, !dbg !4683
  %53 = load float*, float** %dest.addr, align 8, !dbg !4684
  %arrayidx51 = getelementptr inbounds float, float* %53, i64 3, !dbg !4684
  %54 = load float, float* %arrayidx51, align 4, !dbg !4684
  %mul52 = fmul float %52, %54, !dbg !4685
  %55 = load float*, float** %source.addr, align 8, !dbg !4686
  %arrayidx53 = getelementptr inbounds float, float* %55, i64 3, !dbg !4686
  %56 = load float, float* %arrayidx53, align 4, !dbg !4686
  %add54 = fadd float %mul52, %56, !dbg !4687
  %57 = load float*, float** %dest.addr, align 8, !dbg !4688
  %arrayidx55 = getelementptr inbounds float, float* %57, i64 3, !dbg !4688
  store float %add54, float* %arrayidx55, align 4, !dbg !4689
  br label %return, !dbg !4690

return:                                           ; preds = %if.end35, %if.then21
  ret void, !dbg !4690
}

; Function Attrs: noinline nounwind uwtable
define internal void @atm_tile(%struct.RenderPart* %pa, %struct.RenderLayer* %rl) #0 !dbg !4691 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %zpass = alloca %struct.RenderPass*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %lar = alloca %struct.LampRen*, align 8
  %rlpp = alloca [16 x %struct.RenderLayer*], align 16
  %totsample = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %od = alloca i32, align 4
  %sample = alloca i32, align 4
  %zrect = alloca float*, align 8
  %rgbrect = alloca float*, align 8
  %rgb = alloca [3 x float], align 4
  %done = alloca i8, align 1
  %tmp_rgb = alloca [3 x float], align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !4692, metadata !DIExpression()), !dbg !4693
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !4694, metadata !DIExpression()), !dbg !4695
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %zpass, metadata !4696, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !4713, metadata !DIExpression()), !dbg !4725
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !4726, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.declare(metadata [16 x %struct.RenderLayer*]* %rlpp, metadata !4902, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.declare(metadata i32* %totsample, metadata !4904, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4906, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4908, metadata !DIExpression()), !dbg !4909
  call void @llvm.dbg.declare(metadata i32* %od, metadata !4910, metadata !DIExpression()), !dbg !4911
  store i32 0, i32* %od, align 4, !dbg !4911
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4912
  %1 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !4913
  %arraydecay = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 0, !dbg !4914
  %call = call i32 @get_sample_layers(%struct.RenderPart* %0, %struct.RenderLayer* %1, %struct.RenderLayer** %arraydecay), !dbg !4915
  store i32 %call, i32* %totsample, align 4, !dbg !4916
  %2 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4917
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %2, i32 0, i32 6, !dbg !4919
  %3 = load i32*, i32** %rectz, align 8, !dbg !4919
  %cmp = icmp eq i32* %3, null, !dbg !4920
  br i1 %cmp, label %if.then, label %if.end, !dbg !4921

if.then:                                          ; preds = %entry
  br label %for.end137, !dbg !4922

if.end:                                           ; preds = %entry
  %4 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !4923
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %4, i32 0, i32 18, !dbg !4925
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !4926
  %5 = load i8*, i8** %first, align 8, !dbg !4926
  %6 = bitcast i8* %5 to %struct.RenderPass*, !dbg !4923
  store %struct.RenderPass* %6, %struct.RenderPass** %zpass, align 8, !dbg !4927
  br label %for.cond, !dbg !4928

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.RenderPass*, %struct.RenderPass** %zpass, align 8, !dbg !4929
  %tobool = icmp ne %struct.RenderPass* %7, null, !dbg !4931
  br i1 %tobool, label %for.body, label %for.end, !dbg !4931

for.body:                                         ; preds = %for.cond
  %8 = load %struct.RenderPass*, %struct.RenderPass** %zpass, align 8, !dbg !4932
  %passtype = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %8, i32 0, i32 2, !dbg !4934
  %9 = load i32, i32* %passtype, align 8, !dbg !4934
  %cmp1 = icmp eq i32 %9, 2, !dbg !4935
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4936

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !4937

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !4938

for.inc:                                          ; preds = %if.end3
  %10 = load %struct.RenderPass*, %struct.RenderPass** %zpass, align 8, !dbg !4939
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %10, i32 0, i32 0, !dbg !4940
  %11 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !4940
  store %struct.RenderPass* %11, %struct.RenderPass** %zpass, align 8, !dbg !4941
  br label %for.cond, !dbg !4942, !llvm.loop !4943

for.end:                                          ; preds = %if.then2, %for.cond
  %12 = load %struct.RenderPass*, %struct.RenderPass** %zpass, align 8, !dbg !4945
  %cmp4 = icmp eq %struct.RenderPass* %12, null, !dbg !4947
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4948

if.then5:                                         ; preds = %for.end
  br label %for.end137, !dbg !4949

if.end6:                                          ; preds = %for.end
  %13 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 66, i32 0), align 8, !dbg !4950
  %14 = bitcast i8* %13 to %struct.GroupObject*, !dbg !4952
  store %struct.GroupObject* %14, %struct.GroupObject** %go, align 8, !dbg !4953
  br label %for.cond7, !dbg !4954

for.cond7:                                        ; preds = %for.inc19, %if.end6
  %15 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !4955
  %tobool8 = icmp ne %struct.GroupObject* %15, null, !dbg !4957
  br i1 %tobool8, label %for.body9, label %for.end21, !dbg !4957

for.body9:                                        ; preds = %for.cond7
  %16 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !4958
  %lampren = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %16, i32 0, i32 3, !dbg !4960
  %17 = load i8*, i8** %lampren, align 8, !dbg !4960
  %18 = bitcast i8* %17 to %struct.LampRen*, !dbg !4958
  store %struct.LampRen* %18, %struct.LampRen** %lar, align 8, !dbg !4961
  %19 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4962
  %type = getelementptr inbounds %struct.LampRen, %struct.LampRen* %19, i32 0, i32 6, !dbg !4964
  %20 = load i16, i16* %type, align 8, !dbg !4964
  %conv = sext i16 %20 to i32, !dbg !4962
  %cmp10 = icmp eq i32 %conv, 1, !dbg !4965
  br i1 %cmp10, label %land.lhs.true, label %if.end18, !dbg !4966

land.lhs.true:                                    ; preds = %for.body9
  %21 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4967
  %sunsky = getelementptr inbounds %struct.LampRen, %struct.LampRen* %21, i32 0, i32 56, !dbg !4968
  %22 = load %struct.SunSky*, %struct.SunSky** %sunsky, align 8, !dbg !4968
  %tobool12 = icmp ne %struct.SunSky* %22, null, !dbg !4967
  br i1 %tobool12, label %land.lhs.true13, label %if.end18, !dbg !4969

land.lhs.true13:                                  ; preds = %land.lhs.true
  %23 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4970
  %sunsky14 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %23, i32 0, i32 56, !dbg !4971
  %24 = load %struct.SunSky*, %struct.SunSky** %sunsky14, align 8, !dbg !4971
  %effect_type = getelementptr inbounds %struct.SunSky, %struct.SunSky* %24, i32 0, i32 0, !dbg !4972
  %25 = load i16, i16* %effect_type, align 4, !dbg !4972
  %conv15 = sext i16 %25 to i32, !dbg !4970
  %and = and i32 %conv15, 2, !dbg !4973
  %tobool16 = icmp ne i32 %and, 0, !dbg !4973
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !4974

if.then17:                                        ; preds = %land.lhs.true13
  br label %for.end21, !dbg !4975

if.end18:                                         ; preds = %land.lhs.true13, %land.lhs.true, %for.body9
  br label %for.inc19, !dbg !4976

for.inc19:                                        ; preds = %if.end18
  %26 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !4977
  %next20 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %26, i32 0, i32 0, !dbg !4978
  %27 = load %struct.GroupObject*, %struct.GroupObject** %next20, align 8, !dbg !4978
  store %struct.GroupObject* %27, %struct.GroupObject** %go, align 8, !dbg !4979
  br label %for.cond7, !dbg !4980, !llvm.loop !4981

for.end21:                                        ; preds = %if.then17, %for.cond7
  %28 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !4983
  %cmp22 = icmp eq %struct.GroupObject* %28, null, !dbg !4985
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !4986

if.then24:                                        ; preds = %for.end21
  br label %for.end137, !dbg !4987

if.end25:                                         ; preds = %for.end21
  %29 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4988
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %29, i32 0, i32 13, !dbg !4990
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !4991
  %30 = load i32, i32* %ymin, align 8, !dbg !4991
  store i32 %30, i32* %y, align 4, !dbg !4992
  br label %for.cond26, !dbg !4993

for.cond26:                                       ; preds = %for.inc135, %if.end25
  %31 = load i32, i32* %y, align 4, !dbg !4994
  %32 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !4996
  %disprect27 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %32, i32 0, i32 13, !dbg !4997
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect27, i32 0, i32 3, !dbg !4998
  %33 = load i32, i32* %ymax, align 4, !dbg !4998
  %cmp28 = icmp slt i32 %31, %33, !dbg !4999
  br i1 %cmp28, label %for.body30, label %for.end137, !dbg !5000

for.body30:                                       ; preds = %for.cond26
  %34 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5001
  %disprect31 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 13, !dbg !5004
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect31, i32 0, i32 0, !dbg !5005
  %35 = load i32, i32* %xmin, align 8, !dbg !5005
  store i32 %35, i32* %x, align 4, !dbg !5006
  br label %for.cond32, !dbg !5007

for.cond32:                                       ; preds = %for.inc131, %for.body30
  %36 = load i32, i32* %x, align 4, !dbg !5008
  %37 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5010
  %disprect33 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %37, i32 0, i32 13, !dbg !5011
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect33, i32 0, i32 1, !dbg !5012
  %38 = load i32, i32* %xmax, align 4, !dbg !5012
  %cmp34 = icmp slt i32 %36, %38, !dbg !5013
  br i1 %cmp34, label %for.body36, label %for.end134, !dbg !5014

for.body36:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !5015, metadata !DIExpression()), !dbg !5017
  store i32 0, i32* %sample, align 4, !dbg !5018
  br label %for.cond37, !dbg !5020

for.cond37:                                       ; preds = %for.inc129, %for.body36
  %39 = load i32, i32* %sample, align 4, !dbg !5021
  %40 = load i32, i32* %totsample, align 4, !dbg !5023
  %cmp38 = icmp slt i32 %39, %40, !dbg !5024
  br i1 %cmp38, label %for.body40, label %for.end130, !dbg !5025

for.body40:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata float** %zrect, metadata !5026, metadata !DIExpression()), !dbg !5028
  %41 = load i32, i32* %sample, align 4, !dbg !5029
  %idxprom = sext i32 %41 to i64, !dbg !5030
  %arrayidx = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom, !dbg !5030
  %42 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx, align 8, !dbg !5030
  %call41 = call float* @RE_RenderLayerGetPass(%struct.RenderLayer* %42, i32 2), !dbg !5031
  %43 = load i32, i32* %od, align 4, !dbg !5032
  %idx.ext = sext i32 %43 to i64, !dbg !5033
  %add.ptr = getelementptr inbounds float, float* %call41, i64 %idx.ext, !dbg !5033
  store float* %add.ptr, float** %zrect, align 8, !dbg !5028
  call void @llvm.dbg.declare(metadata float** %rgbrect, metadata !5034, metadata !DIExpression()), !dbg !5035
  %44 = load i32, i32* %sample, align 4, !dbg !5036
  %idxprom42 = sext i32 %44 to i64, !dbg !5037
  %arrayidx43 = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom42, !dbg !5037
  %45 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx43, align 8, !dbg !5037
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %45, i32 0, i32 11, !dbg !5038
  %46 = load float*, float** %rectf, align 8, !dbg !5038
  %47 = load i32, i32* %od, align 4, !dbg !5039
  %mul = mul nsw i32 4, %47, !dbg !5040
  %idx.ext44 = sext i32 %mul to i64, !dbg !5041
  %add.ptr45 = getelementptr inbounds float, float* %46, i64 %idx.ext44, !dbg !5041
  store float* %add.ptr45, float** %rgbrect, align 8, !dbg !5035
  call void @llvm.dbg.declare(metadata [3 x float]* %rgb, metadata !5042, metadata !DIExpression()), !dbg !5043
  %48 = bitcast [3 x float]* %rgb to i8*, !dbg !5043
  call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 12, i1 false), !dbg !5043
  call void @llvm.dbg.declare(metadata i8* %done, metadata !5044, metadata !DIExpression()), !dbg !5045
  store i8 0, i8* %done, align 1, !dbg !5045
  %49 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 66, i32 0), align 8, !dbg !5046
  %50 = bitcast i8* %49 to %struct.GroupObject*, !dbg !5048
  store %struct.GroupObject* %50, %struct.GroupObject** %go, align 8, !dbg !5049
  br label %for.cond46, !dbg !5050

for.cond46:                                       ; preds = %for.inc122, %for.body40
  %51 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5051
  %tobool47 = icmp ne %struct.GroupObject* %51, null, !dbg !5053
  br i1 %tobool47, label %for.body48, label %for.end124, !dbg !5053

for.body48:                                       ; preds = %for.cond46
  %52 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5054
  %lampren49 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %52, i32 0, i32 3, !dbg !5056
  %53 = load i8*, i8** %lampren49, align 8, !dbg !5056
  %54 = bitcast i8* %53 to %struct.LampRen*, !dbg !5054
  store %struct.LampRen* %54, %struct.LampRen** %lar, align 8, !dbg !5057
  %55 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5058
  %type50 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %55, i32 0, i32 6, !dbg !5060
  %56 = load i16, i16* %type50, align 8, !dbg !5060
  %conv51 = sext i16 %56 to i32, !dbg !5058
  %cmp52 = icmp eq i32 %conv51, 1, !dbg !5061
  br i1 %cmp52, label %land.lhs.true54, label %if.end121, !dbg !5062

land.lhs.true54:                                  ; preds = %for.body48
  %57 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5063
  %sunsky55 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %57, i32 0, i32 56, !dbg !5064
  %58 = load %struct.SunSky*, %struct.SunSky** %sunsky55, align 8, !dbg !5064
  %tobool56 = icmp ne %struct.SunSky* %58, null, !dbg !5063
  br i1 %tobool56, label %if.then57, label %if.end121, !dbg !5065

if.then57:                                        ; preds = %land.lhs.true54
  %59 = load float*, float** %zrect, align 8, !dbg !5066
  %60 = load float, float* %59, align 4, !dbg !5069
  %cmp58 = fcmp oge float %60, 0x42370CDC20000000, !dbg !5070
  br i1 %cmp58, label %if.then63, label %lor.lhs.false, !dbg !5071

lor.lhs.false:                                    ; preds = %if.then57
  %61 = load float*, float** %rgbrect, align 8, !dbg !5072
  %arrayidx60 = getelementptr inbounds float, float* %61, i64 3, !dbg !5072
  %62 = load float, float* %arrayidx60, align 4, !dbg !5072
  %cmp61 = fcmp oeq float %62, 0.000000e+00, !dbg !5073
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !5074

if.then63:                                        ; preds = %lor.lhs.false, %if.then57
  br label %for.inc122, !dbg !5075

if.end64:                                         ; preds = %lor.lhs.false
  %63 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5077
  %sunsky65 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %63, i32 0, i32 56, !dbg !5079
  %64 = load %struct.SunSky*, %struct.SunSky** %sunsky65, align 8, !dbg !5079
  %effect_type66 = getelementptr inbounds %struct.SunSky, %struct.SunSky* %64, i32 0, i32 0, !dbg !5080
  %65 = load i16, i16* %effect_type66, align 4, !dbg !5080
  %conv67 = sext i16 %65 to i32, !dbg !5077
  %and68 = and i32 %conv67, 2, !dbg !5081
  %tobool69 = icmp ne i32 %and68, 0, !dbg !5081
  br i1 %tobool69, label %if.then70, label %if.end120, !dbg !5082

if.then70:                                        ; preds = %if.end64
  call void @llvm.dbg.declare(metadata [3 x float]* %tmp_rgb, metadata !5083, metadata !DIExpression()), !dbg !5085
  %66 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5086
  %ob = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %66, i32 0, i32 2, !dbg !5088
  %67 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5088
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 47, !dbg !5089
  %arrayidx71 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 2, !dbg !5086
  %arrayidx72 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx71, i64 0, i64 2, !dbg !5086
  %68 = load float, float* %arrayidx72, align 8, !dbg !5086
  %cmp73 = fcmp olt float %68, 0.000000e+00, !dbg !5090
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !5091

if.then75:                                        ; preds = %if.then70
  br label %for.inc122, !dbg !5092

if.end76:                                         ; preds = %if.then70
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %tmp_rgb, i64 0, i64 0, !dbg !5094
  %69 = load float*, float** %rgbrect, align 8, !dbg !5095
  call void @copy_v3_v3(float* %arraydecay77, float* %69), !dbg !5096
  %70 = load float*, float** %rgbrect, align 8, !dbg !5097
  %arrayidx78 = getelementptr inbounds float, float* %70, i64 3, !dbg !5097
  %71 = load float, float* %arrayidx78, align 4, !dbg !5097
  %cmp79 = fcmp une float %71, 1.000000e+00, !dbg !5099
  br i1 %cmp79, label %if.then81, label %if.end84, !dbg !5100

if.then81:                                        ; preds = %if.end76
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %tmp_rgb, i64 0, i64 0, !dbg !5101
  %72 = load float*, float** %rgbrect, align 8, !dbg !5103
  %arrayidx83 = getelementptr inbounds float, float* %72, i64 3, !dbg !5103
  %73 = load float, float* %arrayidx83, align 4, !dbg !5103
  %div = fdiv float 1.000000e+00, %73, !dbg !5104
  call void @mul_v3_fl(float* %arraydecay82, float %div), !dbg !5105
  br label %if.end84, !dbg !5106

if.end84:                                         ; preds = %if.then81, %if.end76
  %74 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !5107
  %sunsky85 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %74, i32 0, i32 56, !dbg !5108
  %75 = load %struct.SunSky*, %struct.SunSky** %sunsky85, align 8, !dbg !5108
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %tmp_rgb, i64 0, i64 0, !dbg !5109
  %76 = load i32, i32* %x, align 4, !dbg !5110
  %conv87 = sitofp i32 %76 to float, !dbg !5110
  %77 = load i32, i32* %y, align 4, !dbg !5111
  %conv88 = sitofp i32 %77 to float, !dbg !5111
  %78 = load float*, float** %zrect, align 8, !dbg !5112
  %79 = load float, float* %78, align 4, !dbg !5113
  call void @shadeAtmPixel(%struct.SunSky* %75, float* %arraydecay86, float %conv87, float %conv88, float %79), !dbg !5114
  %80 = load float*, float** %rgbrect, align 8, !dbg !5115
  %arrayidx89 = getelementptr inbounds float, float* %80, i64 3, !dbg !5115
  %81 = load float, float* %arrayidx89, align 4, !dbg !5115
  %cmp90 = fcmp une float %81, 1.000000e+00, !dbg !5117
  br i1 %cmp90, label %if.then92, label %if.end95, !dbg !5118

if.then92:                                        ; preds = %if.end84
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %tmp_rgb, i64 0, i64 0, !dbg !5119
  %82 = load float*, float** %rgbrect, align 8, !dbg !5121
  %arrayidx94 = getelementptr inbounds float, float* %82, i64 3, !dbg !5121
  %83 = load float, float* %arrayidx94, align 4, !dbg !5121
  call void @mul_v3_fl(float* %arraydecay93, float %83), !dbg !5122
  br label %if.end95, !dbg !5123

if.end95:                                         ; preds = %if.then92, %if.end84
  %84 = load i8, i8* %done, align 1, !dbg !5124
  %conv96 = zext i8 %84 to i32, !dbg !5124
  %cmp97 = icmp eq i32 %conv96, 0, !dbg !5126
  br i1 %cmp97, label %if.then99, label %if.else, !dbg !5127

if.then99:                                        ; preds = %if.end95
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5128
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %tmp_rgb, i64 0, i64 0, !dbg !5130
  call void @copy_v3_v3(float* %arraydecay100, float* %arraydecay101), !dbg !5131
  store i8 1, i8* %done, align 1, !dbg !5132
  br label %if.end119, !dbg !5133

if.else:                                          ; preds = %if.end95
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5134
  %85 = load float, float* %arrayidx102, align 4, !dbg !5134
  %mul103 = fmul float 5.000000e-01, %85, !dbg !5136
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %tmp_rgb, i64 0, i64 0, !dbg !5137
  %86 = load float, float* %arrayidx104, align 4, !dbg !5137
  %mul105 = fmul float 5.000000e-01, %86, !dbg !5138
  %add = fadd float %mul103, %mul105, !dbg !5139
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5140
  store float %add, float* %arrayidx106, align 4, !dbg !5141
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 1, !dbg !5142
  %87 = load float, float* %arrayidx107, align 4, !dbg !5142
  %mul108 = fmul float 5.000000e-01, %87, !dbg !5143
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %tmp_rgb, i64 0, i64 1, !dbg !5144
  %88 = load float, float* %arrayidx109, align 4, !dbg !5144
  %mul110 = fmul float 5.000000e-01, %88, !dbg !5145
  %add111 = fadd float %mul108, %mul110, !dbg !5146
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 1, !dbg !5147
  store float %add111, float* %arrayidx112, align 4, !dbg !5148
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 2, !dbg !5149
  %89 = load float, float* %arrayidx113, align 4, !dbg !5149
  %mul114 = fmul float 5.000000e-01, %89, !dbg !5150
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %tmp_rgb, i64 0, i64 2, !dbg !5151
  %90 = load float, float* %arrayidx115, align 4, !dbg !5151
  %mul116 = fmul float 5.000000e-01, %90, !dbg !5152
  %add117 = fadd float %mul114, %mul116, !dbg !5153
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 2, !dbg !5154
  store float %add117, float* %arrayidx118, align 4, !dbg !5155
  br label %if.end119

if.end119:                                        ; preds = %if.else, %if.then99
  br label %if.end120, !dbg !5156

if.end120:                                        ; preds = %if.end119, %if.end64
  br label %if.end121, !dbg !5157

if.end121:                                        ; preds = %if.end120, %land.lhs.true54, %for.body48
  br label %for.inc122, !dbg !5158

for.inc122:                                       ; preds = %if.end121, %if.then75, %if.then63
  %91 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !5159
  %next123 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %91, i32 0, i32 0, !dbg !5160
  %92 = load %struct.GroupObject*, %struct.GroupObject** %next123, align 8, !dbg !5160
  store %struct.GroupObject* %92, %struct.GroupObject** %go, align 8, !dbg !5161
  br label %for.cond46, !dbg !5162, !llvm.loop !5163

for.end124:                                       ; preds = %for.cond46
  %93 = load i8, i8* %done, align 1, !dbg !5165
  %tobool125 = icmp ne i8 %93, 0, !dbg !5165
  br i1 %tobool125, label %if.then126, label %if.end128, !dbg !5167

if.then126:                                       ; preds = %for.end124
  %94 = load float*, float** %rgbrect, align 8, !dbg !5168
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %rgb, i64 0, i64 0, !dbg !5170
  call void @copy_v3_v3(float* %94, float* %arraydecay127), !dbg !5171
  br label %if.end128, !dbg !5172

if.end128:                                        ; preds = %if.then126, %for.end124
  br label %for.inc129, !dbg !5173

for.inc129:                                       ; preds = %if.end128
  %95 = load i32, i32* %sample, align 4, !dbg !5174
  %inc = add nsw i32 %95, 1, !dbg !5174
  store i32 %inc, i32* %sample, align 4, !dbg !5174
  br label %for.cond37, !dbg !5175, !llvm.loop !5176

for.end130:                                       ; preds = %for.cond37
  br label %for.inc131, !dbg !5178

for.inc131:                                       ; preds = %for.end130
  %96 = load i32, i32* %x, align 4, !dbg !5179
  %inc132 = add nsw i32 %96, 1, !dbg !5179
  store i32 %inc132, i32* %x, align 4, !dbg !5179
  %97 = load i32, i32* %od, align 4, !dbg !5180
  %inc133 = add nsw i32 %97, 1, !dbg !5180
  store i32 %inc133, i32* %od, align 4, !dbg !5180
  br label %for.cond32, !dbg !5181, !llvm.loop !5182

for.end134:                                       ; preds = %for.cond32
  br label %for.inc135, !dbg !5184

for.inc135:                                       ; preds = %for.end134
  %98 = load i32, i32* %y, align 4, !dbg !5185
  %inc136 = add nsw i32 %98, 1, !dbg !5185
  store i32 %inc136, i32* %y, align 4, !dbg !5185
  br label %for.cond26, !dbg !5186, !llvm.loop !5187

for.end137:                                       ; preds = %if.then, %if.then5, %if.then24, %for.cond26
  ret void, !dbg !5189
}

; Function Attrs: noinline nounwind uwtable
define internal void @sky_tile(%struct.RenderPart* %pa, %struct.RenderLayer* %rl) #0 !dbg !5190 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %rlpp = alloca [16 x %struct.RenderLayer*], align 16
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %od = alloca i32, align 4
  %totsample = alloca i32, align 4
  %col = alloca [4 x float], align 16
  %sample = alloca i32, align 4
  %done = alloca i8, align 1
  %pass = alloca float*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5191, metadata !DIExpression()), !dbg !5192
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !5193, metadata !DIExpression()), !dbg !5194
  call void @llvm.dbg.declare(metadata [16 x %struct.RenderLayer*]* %rlpp, metadata !5195, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5197, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5199, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.declare(metadata i32* %od, metadata !5201, metadata !DIExpression()), !dbg !5202
  store i32 0, i32* %od, align 4, !dbg !5202
  call void @llvm.dbg.declare(metadata i32* %totsample, metadata !5203, metadata !DIExpression()), !dbg !5204
  %0 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 53), align 8, !dbg !5205
  %conv = sext i16 %0 to i32, !dbg !5207
  %cmp = icmp ne i32 %conv, 0, !dbg !5208
  br i1 %cmp, label %if.then, label %if.end, !dbg !5209

if.then:                                          ; preds = %entry
  br label %for.end48, !dbg !5210

if.end:                                           ; preds = %entry
  %1 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5211
  %2 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5212
  %arraydecay = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 0, !dbg !5213
  %call = call i32 @get_sample_layers(%struct.RenderPart* %1, %struct.RenderLayer* %2, %struct.RenderLayer** %arraydecay), !dbg !5214
  store i32 %call, i32* %totsample, align 4, !dbg !5215
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5216
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %3, i32 0, i32 13, !dbg !5218
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !5219
  %4 = load i32, i32* %ymin, align 8, !dbg !5219
  store i32 %4, i32* %y, align 4, !dbg !5220
  br label %for.cond, !dbg !5221

for.cond:                                         ; preds = %for.inc46, %if.end
  %5 = load i32, i32* %y, align 4, !dbg !5222
  %6 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5224
  %disprect2 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %6, i32 0, i32 13, !dbg !5225
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect2, i32 0, i32 3, !dbg !5226
  %7 = load i32, i32* %ymax, align 4, !dbg !5226
  %cmp3 = icmp slt i32 %5, %7, !dbg !5227
  br i1 %cmp3, label %for.body, label %for.end48, !dbg !5228

for.body:                                         ; preds = %for.cond
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5229
  %disprect5 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 13, !dbg !5232
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect5, i32 0, i32 0, !dbg !5233
  %9 = load i32, i32* %xmin, align 8, !dbg !5233
  store i32 %9, i32* %x, align 4, !dbg !5234
  br label %for.cond6, !dbg !5235

for.cond6:                                        ; preds = %for.inc37, %for.body
  %10 = load i32, i32* %x, align 4, !dbg !5236
  %11 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5238
  %disprect7 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %11, i32 0, i32 13, !dbg !5239
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect7, i32 0, i32 1, !dbg !5240
  %12 = load i32, i32* %xmax, align 4, !dbg !5240
  %cmp8 = icmp slt i32 %10, %12, !dbg !5241
  br i1 %cmp8, label %for.body10, label %for.end39, !dbg !5242

for.body10:                                       ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !5243, metadata !DIExpression()), !dbg !5245
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !5246, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.declare(metadata i8* %done, metadata !5248, metadata !DIExpression()), !dbg !5249
  store i8 0, i8* %done, align 1, !dbg !5249
  store i32 0, i32* %sample, align 4, !dbg !5250
  br label %for.cond11, !dbg !5252

for.cond11:                                       ; preds = %for.inc, %for.body10
  %13 = load i32, i32* %sample, align 4, !dbg !5253
  %14 = load i32, i32* %totsample, align 4, !dbg !5255
  %cmp12 = icmp slt i32 %13, %14, !dbg !5256
  br i1 %cmp12, label %for.body14, label %for.end, !dbg !5257

for.body14:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata float** %pass, metadata !5258, metadata !DIExpression()), !dbg !5260
  %15 = load i32, i32* %sample, align 4, !dbg !5261
  %idxprom = sext i32 %15 to i64, !dbg !5262
  %arrayidx = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom, !dbg !5262
  %16 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx, align 8, !dbg !5262
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %16, i32 0, i32 11, !dbg !5263
  %17 = load float*, float** %rectf, align 8, !dbg !5263
  %18 = load i32, i32* %od, align 4, !dbg !5264
  %idx.ext = sext i32 %18 to i64, !dbg !5265
  %add.ptr = getelementptr inbounds float, float* %17, i64 %idx.ext, !dbg !5265
  store float* %add.ptr, float** %pass, align 8, !dbg !5260
  %19 = load float*, float** %pass, align 8, !dbg !5266
  %arrayidx15 = getelementptr inbounds float, float* %19, i64 3, !dbg !5266
  %20 = load float, float* %arrayidx15, align 4, !dbg !5266
  %cmp16 = fcmp olt float %20, 1.000000e+00, !dbg !5268
  br i1 %cmp16, label %if.then18, label %if.end36, !dbg !5269

if.then18:                                        ; preds = %for.body14
  %21 = load i8, i8* %done, align 1, !dbg !5270
  %conv19 = zext i8 %21 to i32, !dbg !5270
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !5273
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !5274

if.then22:                                        ; preds = %if.then18
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !5275
  %22 = load i32, i32* %x, align 4, !dbg !5277
  %conv24 = sitofp i32 %22 to float, !dbg !5277
  %23 = load i32, i32* %y, align 4, !dbg !5278
  %conv25 = sitofp i32 %23 to float, !dbg !5278
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5279
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %24, i32 0, i32 20, !dbg !5280
  %25 = load i16, i16* %thread, align 2, !dbg !5280
  call void @shadeSkyPixel(float* %arraydecay23, float %conv24, float %conv25, i16 signext %25), !dbg !5281
  store i8 1, i8* %done, align 1, !dbg !5282
  br label %if.end26, !dbg !5283

if.end26:                                         ; preds = %if.then22, %if.then18
  %26 = load float*, float** %pass, align 8, !dbg !5284
  %arrayidx27 = getelementptr inbounds float, float* %26, i64 3, !dbg !5284
  %27 = load float, float* %arrayidx27, align 4, !dbg !5284
  %cmp28 = fcmp oeq float %27, 0.000000e+00, !dbg !5286
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !5287

if.then30:                                        ; preds = %if.end26
  %28 = load float*, float** %pass, align 8, !dbg !5288
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !5290
  call void @copy_v4_v4(float* %28, float* %arraydecay31), !dbg !5291
  %29 = load float*, float** %pass, align 8, !dbg !5292
  %arrayidx32 = getelementptr inbounds float, float* %29, i64 3, !dbg !5292
  store float 1.000000e+00, float* %arrayidx32, align 4, !dbg !5293
  br label %if.end35, !dbg !5294

if.else:                                          ; preds = %if.end26
  %30 = load float*, float** %pass, align 8, !dbg !5295
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !5297
  call void @addAlphaUnderFloat(float* %30, float* %arraydecay33), !dbg !5298
  %31 = load float*, float** %pass, align 8, !dbg !5299
  %arrayidx34 = getelementptr inbounds float, float* %31, i64 3, !dbg !5299
  store float 1.000000e+00, float* %arrayidx34, align 4, !dbg !5300
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then30
  br label %if.end36, !dbg !5301

if.end36:                                         ; preds = %if.end35, %for.body14
  br label %for.inc, !dbg !5302

for.inc:                                          ; preds = %if.end36
  %32 = load i32, i32* %sample, align 4, !dbg !5303
  %inc = add nsw i32 %32, 1, !dbg !5303
  store i32 %inc, i32* %sample, align 4, !dbg !5303
  br label %for.cond11, !dbg !5304, !llvm.loop !5305

for.end:                                          ; preds = %for.cond11
  br label %for.inc37, !dbg !5307

for.inc37:                                        ; preds = %for.end
  %33 = load i32, i32* %x, align 4, !dbg !5308
  %inc38 = add nsw i32 %33, 1, !dbg !5308
  store i32 %inc38, i32* %x, align 4, !dbg !5308
  %34 = load i32, i32* %od, align 4, !dbg !5309
  %add = add nsw i32 %34, 4, !dbg !5309
  store i32 %add, i32* %od, align 4, !dbg !5309
  br label %for.cond6, !dbg !5310, !llvm.loop !5311

for.end39:                                        ; preds = %for.cond6
  %35 = load i32, i32* %y, align 4, !dbg !5313
  %and = and i32 %35, 1, !dbg !5315
  %tobool = icmp ne i32 %and, 0, !dbg !5315
  br i1 %tobool, label %if.then40, label %if.end45, !dbg !5316

if.then40:                                        ; preds = %for.end39
  %36 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !5317
  %37 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !5319
  %call41 = call i32 %36(i8* %37), !dbg !5320
  %tobool42 = icmp ne i32 %call41, 0, !dbg !5320
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !5321

if.then43:                                        ; preds = %if.then40
  br label %for.end48, !dbg !5322

if.end44:                                         ; preds = %if.then40
  br label %if.end45, !dbg !5323

if.end45:                                         ; preds = %if.end44, %for.end39
  br label %for.inc46, !dbg !5324

for.inc46:                                        ; preds = %if.end45
  %38 = load i32, i32* %y, align 4, !dbg !5325
  %inc47 = add nsw i32 %38, 1, !dbg !5325
  store i32 %inc47, i32* %y, align 4, !dbg !5325
  br label %for.cond, !dbg !5326, !llvm.loop !5327

for.end48:                                        ; preds = %if.then, %if.then43, %for.cond
  ret void, !dbg !5329
}

; Function Attrs: noinline nounwind uwtable
define internal void @edge_enhance_add(%struct.RenderPart* %pa, float* %rectf, float* %arect) #0 !dbg !5330 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rectf.addr = alloca float*, align 8
  %arect.addr = alloca float*, align 8
  %addcol = alloca [4 x float], align 16
  %pix = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5333, metadata !DIExpression()), !dbg !5334
  store float* %rectf, float** %rectf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf.addr, metadata !5335, metadata !DIExpression()), !dbg !5336
  store float* %arect, float** %arect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %arect.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  call void @llvm.dbg.declare(metadata [4 x float]* %addcol, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.declare(metadata i32* %pix, metadata !5341, metadata !DIExpression()), !dbg !5342
  %0 = load float*, float** %arect.addr, align 8, !dbg !5343
  %cmp = icmp eq float* %0, null, !dbg !5345
  br i1 %cmp, label %if.then, label %if.end, !dbg !5346

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !5347

if.end:                                           ; preds = %entry
  %1 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5348
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %1, i32 0, i32 14, !dbg !5350
  %2 = load i32, i32* %rectx, align 8, !dbg !5350
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5351
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %3, i32 0, i32 15, !dbg !5352
  %4 = load i32, i32* %recty, align 4, !dbg !5352
  %mul = mul nsw i32 %2, %4, !dbg !5353
  store i32 %mul, i32* %pix, align 4, !dbg !5354
  br label %for.cond, !dbg !5355

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %pix, align 4, !dbg !5356
  %cmp1 = icmp sgt i32 %5, 0, !dbg !5358
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5359

for.body:                                         ; preds = %for.cond
  %6 = load float*, float** %arect.addr, align 8, !dbg !5360
  %7 = load float, float* %6, align 4, !dbg !5363
  %cmp2 = fcmp une float %7, 0.000000e+00, !dbg !5364
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !5365

if.then3:                                         ; preds = %for.body
  %8 = load float*, float** %arect.addr, align 8, !dbg !5366
  %9 = load float, float* %8, align 4, !dbg !5368
  %10 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 17), align 4, !dbg !5369
  %mul4 = fmul float %9, %10, !dbg !5370
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %addcol, i64 0, i64 0, !dbg !5371
  store float %mul4, float* %arrayidx, align 16, !dbg !5372
  %11 = load float*, float** %arect.addr, align 8, !dbg !5373
  %12 = load float, float* %11, align 4, !dbg !5374
  %13 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 18), align 8, !dbg !5375
  %mul5 = fmul float %12, %13, !dbg !5376
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %addcol, i64 0, i64 1, !dbg !5377
  store float %mul5, float* %arrayidx6, align 4, !dbg !5378
  %14 = load float*, float** %arect.addr, align 8, !dbg !5379
  %15 = load float, float* %14, align 4, !dbg !5380
  %16 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 19), align 4, !dbg !5381
  %mul7 = fmul float %15, %16, !dbg !5382
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %addcol, i64 0, i64 2, !dbg !5383
  store float %mul7, float* %arrayidx8, align 8, !dbg !5384
  %17 = load float*, float** %arect.addr, align 8, !dbg !5385
  %18 = load float, float* %17, align 4, !dbg !5386
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %addcol, i64 0, i64 3, !dbg !5387
  store float %18, float* %arrayidx9, align 4, !dbg !5388
  %19 = load float*, float** %rectf.addr, align 8, !dbg !5389
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %addcol, i64 0, i64 0, !dbg !5390
  call void @addAlphaOverFloat(float* %19, float* %arraydecay), !dbg !5391
  br label %if.end10, !dbg !5392

if.end10:                                         ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !5393

for.inc:                                          ; preds = %if.end10
  %20 = load i32, i32* %pix, align 4, !dbg !5394
  %dec = add nsw i32 %20, -1, !dbg !5394
  store i32 %dec, i32* %pix, align 4, !dbg !5394
  %21 = load float*, float** %arect.addr, align 8, !dbg !5395
  %incdec.ptr = getelementptr inbounds float, float* %21, i32 1, !dbg !5395
  store float* %incdec.ptr, float** %arect.addr, align 8, !dbg !5395
  %22 = load float*, float** %rectf.addr, align 8, !dbg !5396
  %add.ptr = getelementptr inbounds float, float* %22, i64 4, !dbg !5396
  store float* %add.ptr, float** %rectf.addr, align 8, !dbg !5396
  br label %for.cond, !dbg !5397, !llvm.loop !5398

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !5400
}

; Function Attrs: noinline nounwind uwtable
define internal void @reset_sky_speed(%struct.RenderPart* %pa, %struct.RenderLayer* %rl) #0 !dbg !5401 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %rlpp = alloca [16 x %struct.RenderLayer*], align 16
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %sample = alloca i32, align 4
  %totsample = alloca i32, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5402, metadata !DIExpression()), !dbg !5403
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.declare(metadata [16 x %struct.RenderLayer*]* %rlpp, metadata !5406, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5408, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5410, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !5412, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.declare(metadata i32* %totsample, metadata !5414, metadata !DIExpression()), !dbg !5415
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5416
  %1 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5417
  %arraydecay = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 0, !dbg !5418
  %call = call i32 @get_sample_layers(%struct.RenderPart* %0, %struct.RenderLayer* %1, %struct.RenderLayer** %arraydecay), !dbg !5419
  store i32 %call, i32* %totsample, align 4, !dbg !5420
  store i32 0, i32* %sample, align 4, !dbg !5421
  br label %for.cond, !dbg !5423

for.cond:                                         ; preds = %for.inc14, %entry
  %2 = load i32, i32* %sample, align 4, !dbg !5424
  %3 = load i32, i32* %totsample, align 4, !dbg !5426
  %cmp = icmp slt i32 %2, %3, !dbg !5427
  br i1 %cmp, label %for.body, label %for.end15, !dbg !5428

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %sample, align 4, !dbg !5429
  %idxprom = sext i32 %4 to i64, !dbg !5431
  %arrayidx = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom, !dbg !5431
  %5 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx, align 8, !dbg !5431
  %call1 = call float* @RE_RenderLayerGetPass(%struct.RenderLayer* %5, i32 512), !dbg !5432
  store float* %call1, float** %fp, align 8, !dbg !5433
  %6 = load float*, float** %fp, align 8, !dbg !5434
  %cmp2 = icmp eq float* %6, null, !dbg !5436
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5437

if.then:                                          ; preds = %for.body
  br label %for.end15, !dbg !5438

if.end:                                           ; preds = %for.body
  %7 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5439
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %7, i32 0, i32 14, !dbg !5441
  %8 = load i32, i32* %rectx, align 8, !dbg !5441
  %mul = mul nsw i32 4, %8, !dbg !5442
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5443
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 15, !dbg !5444
  %10 = load i32, i32* %recty, align 4, !dbg !5444
  %mul3 = mul nsw i32 %mul, %10, !dbg !5445
  %sub = sub nsw i32 %mul3, 1, !dbg !5446
  store i32 %sub, i32* %a, align 4, !dbg !5447
  br label %for.cond4, !dbg !5448

for.cond4:                                        ; preds = %for.inc, %if.end
  %11 = load i32, i32* %a, align 4, !dbg !5449
  %cmp5 = icmp sge i32 %11, 0, !dbg !5451
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !5452

for.body6:                                        ; preds = %for.cond4
  %12 = load float*, float** %fp, align 8, !dbg !5453
  %13 = load i32, i32* %a, align 4, !dbg !5455
  %idxprom7 = sext i32 %13 to i64, !dbg !5453
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 %idxprom7, !dbg !5453
  %14 = load float, float* %arrayidx8, align 4, !dbg !5453
  %cmp9 = fcmp oeq float %14, 1.000000e+04, !dbg !5456
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !5457

if.then10:                                        ; preds = %for.body6
  %15 = load float*, float** %fp, align 8, !dbg !5458
  %16 = load i32, i32* %a, align 4, !dbg !5459
  %idxprom11 = sext i32 %16 to i64, !dbg !5458
  %arrayidx12 = getelementptr inbounds float, float* %15, i64 %idxprom11, !dbg !5458
  store float 0.000000e+00, float* %arrayidx12, align 4, !dbg !5460
  br label %if.end13, !dbg !5458

if.end13:                                         ; preds = %if.then10, %for.body6
  br label %for.inc, !dbg !5461

for.inc:                                          ; preds = %if.end13
  %17 = load i32, i32* %a, align 4, !dbg !5462
  %dec = add nsw i32 %17, -1, !dbg !5462
  store i32 %dec, i32* %a, align 4, !dbg !5462
  br label %for.cond4, !dbg !5463, !llvm.loop !5464

for.end:                                          ; preds = %for.cond4
  br label %for.inc14, !dbg !5466

for.inc14:                                        ; preds = %for.end
  %18 = load i32, i32* %sample, align 4, !dbg !5467
  %inc = add nsw i32 %18, 1, !dbg !5467
  store i32 %inc, i32* %sample, align 4, !dbg !5467
  br label %for.cond, !dbg !5468, !llvm.loop !5469

for.end15:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !5471
}

; Function Attrs: noinline nounwind uwtable
define internal void @clamp_alpha_rgb_range(%struct.RenderPart* %pa, %struct.RenderLayer* %rl) #0 !dbg !5472 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %rlpp = alloca [16 x %struct.RenderLayer*], align 16
  %y = alloca i32, align 4
  %sample = alloca i32, align 4
  %totsample = alloca i32, align 4
  %rectf = alloca float*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5473, metadata !DIExpression()), !dbg !5474
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.declare(metadata [16 x %struct.RenderLayer*]* %rlpp, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !5481, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.declare(metadata i32* %totsample, metadata !5483, metadata !DIExpression()), !dbg !5484
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5485
  %1 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !5486
  %arraydecay = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 0, !dbg !5487
  %call = call i32 @get_sample_layers(%struct.RenderPart* %0, %struct.RenderLayer* %1, %struct.RenderLayer** %arraydecay), !dbg !5488
  store i32 %call, i32* %totsample, align 4, !dbg !5489
  %2 = load i32, i32* %totsample, align 4, !dbg !5490
  %cmp = icmp sgt i32 %2, 1, !dbg !5492
  br i1 %cmp, label %if.then, label %if.end, !dbg !5493

if.then:                                          ; preds = %entry
  br label %for.end37, !dbg !5494

if.end:                                           ; preds = %entry
  store i32 0, i32* %sample, align 4, !dbg !5495
  br label %for.cond, !dbg !5497

for.cond:                                         ; preds = %for.inc36, %if.end
  %3 = load i32, i32* %sample, align 4, !dbg !5498
  %4 = load i32, i32* %totsample, align 4, !dbg !5500
  %cmp1 = icmp slt i32 %3, %4, !dbg !5501
  br i1 %cmp1, label %for.body, label %for.end37, !dbg !5502

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %rectf, metadata !5503, metadata !DIExpression()), !dbg !5505
  %5 = load i32, i32* %sample, align 4, !dbg !5506
  %idxprom = sext i32 %5 to i64, !dbg !5507
  %arrayidx = getelementptr inbounds [16 x %struct.RenderLayer*], [16 x %struct.RenderLayer*]* %rlpp, i64 0, i64 %idxprom, !dbg !5507
  %6 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx, align 8, !dbg !5507
  %rectf2 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %6, i32 0, i32 11, !dbg !5508
  %7 = load float*, float** %rectf2, align 8, !dbg !5508
  store float* %7, float** %rectf, align 8, !dbg !5505
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5509
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 14, !dbg !5511
  %9 = load i32, i32* %rectx, align 8, !dbg !5511
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5512
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 15, !dbg !5513
  %11 = load i32, i32* %recty, align 4, !dbg !5513
  %mul = mul nsw i32 %9, %11, !dbg !5514
  store i32 %mul, i32* %y, align 4, !dbg !5515
  br label %for.cond3, !dbg !5516

for.cond3:                                        ; preds = %for.inc, %for.body
  %12 = load i32, i32* %y, align 4, !dbg !5517
  %cmp4 = icmp sgt i32 %12, 0, !dbg !5519
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !5520

for.body5:                                        ; preds = %for.cond3
  %13 = load float*, float** %rectf, align 8, !dbg !5521
  %arrayidx6 = getelementptr inbounds float, float* %13, i64 0, !dbg !5521
  %14 = load float, float* %arrayidx6, align 4, !dbg !5521
  %cmp7 = fcmp ogt float %14, 0.000000e+00, !dbg !5521
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5521

cond.true:                                        ; preds = %for.body5
  %15 = load float*, float** %rectf, align 8, !dbg !5521
  %arrayidx8 = getelementptr inbounds float, float* %15, i64 0, !dbg !5521
  %16 = load float, float* %arrayidx8, align 4, !dbg !5521
  br label %cond.end, !dbg !5521

cond.false:                                       ; preds = %for.body5
  br label %cond.end, !dbg !5521

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %16, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !5521
  %17 = load float*, float** %rectf, align 8, !dbg !5523
  %arrayidx9 = getelementptr inbounds float, float* %17, i64 0, !dbg !5523
  store float %cond, float* %arrayidx9, align 4, !dbg !5524
  %18 = load float*, float** %rectf, align 8, !dbg !5525
  %arrayidx10 = getelementptr inbounds float, float* %18, i64 1, !dbg !5525
  %19 = load float, float* %arrayidx10, align 4, !dbg !5525
  %cmp11 = fcmp ogt float %19, 0.000000e+00, !dbg !5525
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !5525

cond.true12:                                      ; preds = %cond.end
  %20 = load float*, float** %rectf, align 8, !dbg !5525
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 1, !dbg !5525
  %21 = load float, float* %arrayidx13, align 4, !dbg !5525
  br label %cond.end15, !dbg !5525

cond.false14:                                     ; preds = %cond.end
  br label %cond.end15, !dbg !5525

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi float [ %21, %cond.true12 ], [ 0.000000e+00, %cond.false14 ], !dbg !5525
  %22 = load float*, float** %rectf, align 8, !dbg !5526
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !5526
  store float %cond16, float* %arrayidx17, align 4, !dbg !5527
  %23 = load float*, float** %rectf, align 8, !dbg !5528
  %arrayidx18 = getelementptr inbounds float, float* %23, i64 2, !dbg !5528
  %24 = load float, float* %arrayidx18, align 4, !dbg !5528
  %cmp19 = fcmp ogt float %24, 0.000000e+00, !dbg !5528
  br i1 %cmp19, label %cond.true20, label %cond.false22, !dbg !5528

cond.true20:                                      ; preds = %cond.end15
  %25 = load float*, float** %rectf, align 8, !dbg !5528
  %arrayidx21 = getelementptr inbounds float, float* %25, i64 2, !dbg !5528
  %26 = load float, float* %arrayidx21, align 4, !dbg !5528
  br label %cond.end23, !dbg !5528

cond.false22:                                     ; preds = %cond.end15
  br label %cond.end23, !dbg !5528

cond.end23:                                       ; preds = %cond.false22, %cond.true20
  %cond24 = phi float [ %26, %cond.true20 ], [ 0.000000e+00, %cond.false22 ], !dbg !5528
  %27 = load float*, float** %rectf, align 8, !dbg !5529
  %arrayidx25 = getelementptr inbounds float, float* %27, i64 2, !dbg !5529
  store float %cond24, float* %arrayidx25, align 4, !dbg !5530
  %28 = load float*, float** %rectf, align 8, !dbg !5531
  %arrayidx26 = getelementptr inbounds float, float* %28, i64 3, !dbg !5531
  %29 = load float, float* %arrayidx26, align 4, !dbg !5531
  %cmp27 = fcmp olt float %29, 0.000000e+00, !dbg !5531
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !5534

if.then28:                                        ; preds = %cond.end23
  %30 = load float*, float** %rectf, align 8, !dbg !5531
  %arrayidx29 = getelementptr inbounds float, float* %30, i64 3, !dbg !5531
  store float 0.000000e+00, float* %arrayidx29, align 4, !dbg !5531
  br label %if.end35, !dbg !5531

if.else:                                          ; preds = %cond.end23
  %31 = load float*, float** %rectf, align 8, !dbg !5535
  %arrayidx30 = getelementptr inbounds float, float* %31, i64 3, !dbg !5535
  %32 = load float, float* %arrayidx30, align 4, !dbg !5535
  %cmp31 = fcmp ogt float %32, 1.000000e+00, !dbg !5535
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !5531

if.then32:                                        ; preds = %if.else
  %33 = load float*, float** %rectf, align 8, !dbg !5535
  %arrayidx33 = getelementptr inbounds float, float* %33, i64 3, !dbg !5535
  store float 1.000000e+00, float* %arrayidx33, align 4, !dbg !5535
  br label %if.end34, !dbg !5535

if.end34:                                         ; preds = %if.then32, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then28
  br label %for.inc, !dbg !5537

for.inc:                                          ; preds = %if.end35
  %34 = load i32, i32* %y, align 4, !dbg !5538
  %dec = add nsw i32 %34, -1, !dbg !5538
  store i32 %dec, i32* %y, align 4, !dbg !5538
  %35 = load float*, float** %rectf, align 8, !dbg !5539
  %add.ptr = getelementptr inbounds float, float* %35, i64 4, !dbg !5539
  store float* %add.ptr, float** %rectf, align 8, !dbg !5539
  br label %for.cond3, !dbg !5540, !llvm.loop !5541

for.end:                                          ; preds = %for.cond3
  br label %for.inc36, !dbg !5543

for.inc36:                                        ; preds = %for.end
  %36 = load i32, i32* %sample, align 4, !dbg !5544
  %inc = add nsw i32 %36, 1, !dbg !5544
  store i32 %inc, i32* %sample, align 4, !dbg !5544
  br label %for.cond, !dbg !5545, !llvm.loop !5546

for.end37:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !5548
}

; Function Attrs: noinline nounwind uwtable
define internal void @freeps(%struct.ListBase* %lb) #0 !dbg !5549 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %psm = alloca %struct.PixStrMain*, align 8
  %psmnext = alloca %struct.PixStrMain*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !5552, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.declare(metadata %struct.PixStrMain** %psm, metadata !5554, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.declare(metadata %struct.PixStrMain** %psmnext, metadata !5556, metadata !DIExpression()), !dbg !5557
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5558
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5560
  %1 = load i8*, i8** %first, align 8, !dbg !5560
  %2 = bitcast i8* %1 to %struct.PixStrMain*, !dbg !5558
  store %struct.PixStrMain* %2, %struct.PixStrMain** %psm, align 8, !dbg !5561
  br label %for.cond, !dbg !5562

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !5563
  %tobool = icmp ne %struct.PixStrMain* %3, null, !dbg !5565
  br i1 %tobool, label %for.body, label %for.end, !dbg !5565

for.body:                                         ; preds = %for.cond
  %4 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !5566
  %next = getelementptr inbounds %struct.PixStrMain, %struct.PixStrMain* %4, i32 0, i32 0, !dbg !5568
  %5 = load %struct.PixStrMain*, %struct.PixStrMain** %next, align 8, !dbg !5568
  store %struct.PixStrMain* %5, %struct.PixStrMain** %psmnext, align 8, !dbg !5569
  %6 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !5570
  %ps = getelementptr inbounds %struct.PixStrMain, %struct.PixStrMain* %6, i32 0, i32 2, !dbg !5572
  %7 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !5572
  %tobool1 = icmp ne %struct.PixStr* %7, null, !dbg !5570
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5573

if.then:                                          ; preds = %for.body
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5574
  %9 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !5575
  %ps2 = getelementptr inbounds %struct.PixStrMain, %struct.PixStrMain* %9, i32 0, i32 2, !dbg !5576
  %10 = load %struct.PixStr*, %struct.PixStr** %ps2, align 8, !dbg !5576
  %11 = bitcast %struct.PixStr* %10 to i8*, !dbg !5575
  call void %8(i8* %11), !dbg !5574
  br label %if.end, !dbg !5574

if.end:                                           ; preds = %if.then, %for.body
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5577
  %13 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !5578
  %14 = bitcast %struct.PixStrMain* %13 to i8*, !dbg !5578
  call void %12(i8* %14), !dbg !5577
  br label %for.inc, !dbg !5579

for.inc:                                          ; preds = %if.end
  %15 = load %struct.PixStrMain*, %struct.PixStrMain** %psmnext, align 8, !dbg !5580
  store %struct.PixStrMain* %15, %struct.PixStrMain** %psm, align 8, !dbg !5581
  br label %for.cond, !dbg !5582, !llvm.loop !5583

for.end:                                          ; preds = %for.cond
  %16 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5585
  call void @BLI_listbase_clear(%struct.ListBase* %16), !dbg !5586
  ret void, !dbg !5587
}

declare dso_local %struct.RenderLayer* @render_get_active_layer(%struct.Render*, %struct.RenderResult*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbufshade_tile(%struct.RenderPart* %pa) #0 !dbg !5588 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %ssamp = alloca %struct.ShadeSample, align 8
  %rr = alloca %struct.RenderResult*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  %ps = alloca %struct.PixStr, align 8
  %edgerect = alloca float*, align 8
  %fcol = alloca float*, align 8
  %ro = alloca i32*, align 8
  %rp = alloca i32*, align 8
  %rz = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %offs = alloca i32, align 4
  %seed = alloca i32, align 4
  %fcol143 = alloca float*, align 8
  %acol = alloca float*, align 8
  %x144 = alloca i32, align 4
  %sw_ap = alloca float*, align 8
  %sw_ap158 = alloca float*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5589, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.declare(metadata %struct.ShadeSample* %ssamp, metadata !5591, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr, metadata !5593, metadata !DIExpression()), !dbg !5594
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5595
  %result = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 2, !dbg !5596
  %1 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !5596
  store %struct.RenderResult* %1, %struct.RenderResult** %rr, align 8, !dbg !5594
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !5597, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.declare(metadata %struct.PixStr* %ps, metadata !5599, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.declare(metadata float** %edgerect, metadata !5601, metadata !DIExpression()), !dbg !5602
  store float* null, float** %edgerect, align 8, !dbg !5602
  %next = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 0, !dbg !5603
  store %struct.PixStr* null, %struct.PixStr** %next, align 8, !dbg !5604
  %mask = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 5, !dbg !5605
  store i16 -1, i16* %mask, align 8, !dbg !5606
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5607
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5608
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %3, i32 0, i32 14, !dbg !5609
  %4 = load i32, i32* %rectx, align 8, !dbg !5609
  %conv = sext i32 %4 to i64, !dbg !5608
  %mul = mul i64 4, %conv, !dbg !5610
  %5 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5611
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %5, i32 0, i32 15, !dbg !5612
  %6 = load i32, i32* %recty, align 4, !dbg !5612
  %conv1 = sext i32 %6 to i64, !dbg !5611
  %mul2 = mul i64 %mul, %conv1, !dbg !5613
  %call = call i8* %2(i64 %mul2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)), !dbg !5607
  %7 = bitcast i8* %call to i32*, !dbg !5607
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5614
  %recto = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 4, !dbg !5615
  store i32* %7, i32** %recto, align 8, !dbg !5616
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5617
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5618
  %rectx3 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 14, !dbg !5619
  %11 = load i32, i32* %rectx3, align 8, !dbg !5619
  %conv4 = sext i32 %11 to i64, !dbg !5618
  %mul5 = mul i64 4, %conv4, !dbg !5620
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5621
  %recty6 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %12, i32 0, i32 15, !dbg !5622
  %13 = load i32, i32* %recty6, align 4, !dbg !5622
  %conv7 = sext i32 %13 to i64, !dbg !5621
  %mul8 = mul i64 %mul5, %conv7, !dbg !5623
  %call9 = call i8* %9(i64 %mul8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)), !dbg !5617
  %14 = bitcast i8* %call9 to i32*, !dbg !5617
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5624
  %rectp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %15, i32 0, i32 5, !dbg !5625
  store i32* %14, i32** %rectp, align 8, !dbg !5626
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5627
  %17 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5628
  %rectx10 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %17, i32 0, i32 14, !dbg !5629
  %18 = load i32, i32* %rectx10, align 8, !dbg !5629
  %conv11 = sext i32 %18 to i64, !dbg !5628
  %mul12 = mul i64 4, %conv11, !dbg !5630
  %19 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5631
  %recty13 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %19, i32 0, i32 15, !dbg !5632
  %20 = load i32, i32* %recty13, align 4, !dbg !5632
  %conv14 = sext i32 %20 to i64, !dbg !5631
  %mul15 = mul i64 %mul12, %conv14, !dbg !5633
  %call16 = call i8* %16(i64 %mul15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)), !dbg !5627
  %21 = bitcast i8* %call16 to i32*, !dbg !5627
  %22 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5634
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %22, i32 0, i32 6, !dbg !5635
  store i32* %21, i32** %rectz, align 8, !dbg !5636
  %23 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !5637
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %23, i32 0, i32 12, !dbg !5639
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !5640
  %24 = load i8*, i8** %first, align 8, !dbg !5640
  %25 = bitcast i8* %24 to %struct.RenderLayer*, !dbg !5637
  store %struct.RenderLayer* %25, %struct.RenderLayer** %rl, align 8, !dbg !5641
  br label %for.cond, !dbg !5642

for.cond:                                         ; preds = %for.inc215, %entry
  %26 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5643
  %tobool = icmp ne %struct.RenderLayer* %26, null, !dbg !5645
  br i1 %tobool, label %for.body, label %for.end217, !dbg !5645

for.body:                                         ; preds = %for.cond
  %27 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5646
  %layflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %27, i32 0, i32 6, !dbg !5649
  %28 = load i32, i32* %layflag, align 8, !dbg !5649
  %and = and i32 %28, 262144, !dbg !5650
  %tobool17 = icmp ne i32 %and, 0, !dbg !5650
  br i1 %tobool17, label %land.lhs.true, label %if.end, !dbg !5651

land.lhs.true:                                    ; preds = %for.body
  %29 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5652
  %layflag18 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %29, i32 0, i32 6, !dbg !5653
  %30 = load i32, i32* %layflag18, align 8, !dbg !5653
  %and19 = and i32 %30, 524288, !dbg !5654
  %tobool20 = icmp ne i32 %and19, 0, !dbg !5654
  br i1 %tobool20, label %if.then, label %if.end, !dbg !5655

if.then:                                          ; preds = %land.lhs.true
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5656
  %32 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5657
  %rectx21 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %32, i32 0, i32 14, !dbg !5658
  %33 = load i32, i32* %rectx21, align 8, !dbg !5658
  %conv22 = sext i32 %33 to i64, !dbg !5657
  %mul23 = mul i64 4, %conv22, !dbg !5659
  %34 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5660
  %recty24 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 15, !dbg !5661
  %35 = load i32, i32* %recty24, align 4, !dbg !5661
  %conv25 = sext i32 %35 to i64, !dbg !5660
  %mul26 = mul i64 %mul23, %conv25, !dbg !5662
  %call27 = call i8* %31(i64 %mul26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)), !dbg !5656
  %36 = bitcast i8* %call27 to i32*, !dbg !5656
  %37 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5663
  %rectmask = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %37, i32 0, i32 7, !dbg !5664
  store i32* %36, i32** %rectmask, align 8, !dbg !5665
  br label %if.end, !dbg !5663

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %38 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5666
  %39 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5667
  call void @shade_sample_initialize(%struct.ShadeSample* %ssamp, %struct.RenderPart* %38, %struct.RenderLayer* %39), !dbg !5668
  %40 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5669
  %41 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5670
  call void @zbuffer_solid(%struct.RenderPart* %40, %struct.RenderLayer* %41, void (%struct.RenderPart*, %struct.ZSpan*, i32, i8*)* null, i8* null), !dbg !5671
  %42 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !5672
  %43 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !5674
  %call28 = call i32 %42(i8* %43), !dbg !5675
  %tobool29 = icmp ne i32 %call28, 0, !dbg !5675
  br i1 %tobool29, label %if.end113, label %if.then30, !dbg !5676

if.then30:                                        ; preds = %if.end
  %44 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5677
  %layflag31 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %44, i32 0, i32 6, !dbg !5680
  %45 = load i32, i32* %layflag31, align 8, !dbg !5680
  %and32 = and i32 %45, 8, !dbg !5681
  %tobool33 = icmp ne i32 %and32, 0, !dbg !5681
  br i1 %tobool33, label %if.then34, label %if.end47, !dbg !5682

if.then34:                                        ; preds = %if.then30
  %46 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !5683
  %and35 = and i32 %46, 32, !dbg !5686
  %tobool36 = icmp ne i32 %and35, 0, !dbg !5686
  br i1 %tobool36, label %if.then37, label %if.end46, !dbg !5687

if.then37:                                        ; preds = %if.then34
  %47 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5688
  %48 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5690
  %rectx38 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %48, i32 0, i32 14, !dbg !5691
  %49 = load i32, i32* %rectx38, align 8, !dbg !5691
  %conv39 = sext i32 %49 to i64, !dbg !5690
  %mul40 = mul i64 4, %conv39, !dbg !5692
  %50 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5693
  %recty41 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %50, i32 0, i32 15, !dbg !5694
  %51 = load i32, i32* %recty41, align 4, !dbg !5694
  %conv42 = sext i32 %51 to i64, !dbg !5693
  %mul43 = mul i64 %mul40, %conv42, !dbg !5695
  %call44 = call i8* %47(i64 %mul43, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)), !dbg !5688
  %52 = bitcast i8* %call44 to float*, !dbg !5688
  store float* %52, float** %edgerect, align 8, !dbg !5696
  %53 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5697
  %54 = load float*, float** %edgerect, align 8, !dbg !5698
  %55 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5699
  %rectz45 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %55, i32 0, i32 6, !dbg !5700
  %56 = load i32*, i32** %rectz45, align 8, !dbg !5700
  call void @edge_enhance_tile(%struct.RenderPart* %53, float* %54, i32* %56), !dbg !5701
  br label %if.end46, !dbg !5702

if.end46:                                         ; preds = %if.then37, %if.then34
  br label %if.end47, !dbg !5703

if.end47:                                         ; preds = %if.end46, %if.then30
  %57 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !5704
  %renrect = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %57, i32 0, i32 13, !dbg !5705
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect, i32 0, i32 2, !dbg !5706
  store volatile i32 0, i32* %ymin, align 8, !dbg !5707
  %58 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5708
  %59 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !5709
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %59, i32 0, i32 14, !dbg !5710
  store %struct.RenderLayer* %58, %struct.RenderLayer** %renlay, align 8, !dbg !5711
  %60 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5712
  %layflag48 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %60, i32 0, i32 6, !dbg !5714
  %61 = load i32, i32* %layflag48, align 8, !dbg !5714
  %and49 = and i32 %61, 1, !dbg !5715
  %tobool50 = icmp ne i32 %and49, 0, !dbg !5715
  br i1 %tobool50, label %if.then51, label %if.end111, !dbg !5716

if.then51:                                        ; preds = %if.end47
  call void @llvm.dbg.declare(metadata float** %fcol, metadata !5717, metadata !DIExpression()), !dbg !5719
  %62 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5720
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %62, i32 0, i32 11, !dbg !5721
  %63 = load float*, float** %rectf, align 8, !dbg !5721
  store float* %63, float** %fcol, align 8, !dbg !5719
  call void @llvm.dbg.declare(metadata i32** %ro, metadata !5722, metadata !DIExpression()), !dbg !5723
  %64 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5724
  %recto52 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %64, i32 0, i32 4, !dbg !5725
  %65 = load i32*, i32** %recto52, align 8, !dbg !5725
  store i32* %65, i32** %ro, align 8, !dbg !5723
  call void @llvm.dbg.declare(metadata i32** %rp, metadata !5726, metadata !DIExpression()), !dbg !5727
  %66 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5728
  %rectp53 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %66, i32 0, i32 5, !dbg !5729
  %67 = load i32*, i32** %rectp53, align 8, !dbg !5729
  store i32* %67, i32** %rp, align 8, !dbg !5727
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !5730, metadata !DIExpression()), !dbg !5731
  %68 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5732
  %rectz54 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %68, i32 0, i32 6, !dbg !5733
  %69 = load i32*, i32** %rectz54, align 8, !dbg !5733
  store i32* %69, i32** %rz, align 8, !dbg !5731
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5734, metadata !DIExpression()), !dbg !5735
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5736, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !5738, metadata !DIExpression()), !dbg !5739
  store i32 0, i32* %offs, align 4, !dbg !5739
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !5740, metadata !DIExpression()), !dbg !5741
  %70 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5742
  %rectx55 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %70, i32 0, i32 14, !dbg !5743
  %71 = load i32, i32* %rectx55, align 8, !dbg !5743
  %72 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5744
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %72, i32 0, i32 13, !dbg !5745
  %ymin56 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !5746
  %73 = load i32, i32* %ymin56, align 8, !dbg !5746
  %mul57 = mul nsw i32 %71, %73, !dbg !5747
  store i32 %mul57, i32* %seed, align 4, !dbg !5748
  %74 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !5749
  %and58 = and i32 %74, 2, !dbg !5751
  %tobool59 = icmp ne i32 %and58, 0, !dbg !5751
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !5752

if.then60:                                        ; preds = %if.then51
  %75 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5753
  call void @ISB_create(%struct.RenderPart* %75, %struct.APixstr* null), !dbg !5754
  br label %if.end61, !dbg !5754

if.end61:                                         ; preds = %if.then60, %if.then51
  %76 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 56), align 8, !dbg !5755
  %tobool62 = icmp ne i8* %76, null, !dbg !5757
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !5758

if.then63:                                        ; preds = %if.end61
  %77 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5759
  call void @cache_occ_samples(%struct.Render* @R, %struct.RenderPart* %77, %struct.ShadeSample* %ssamp), !dbg !5760
  br label %if.end64, !dbg !5760

if.end64:                                         ; preds = %if.then63, %if.end61
  %78 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5761
  %disprect65 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %78, i32 0, i32 13, !dbg !5763
  %ymin66 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect65, i32 0, i32 2, !dbg !5764
  %79 = load i32, i32* %ymin66, align 8, !dbg !5764
  store i32 %79, i32* %y, align 4, !dbg !5765
  br label %for.cond67, !dbg !5766

for.cond67:                                       ; preds = %for.inc98, %if.end64
  %80 = load i32, i32* %y, align 4, !dbg !5767
  %81 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5769
  %disprect68 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %81, i32 0, i32 13, !dbg !5770
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect68, i32 0, i32 3, !dbg !5771
  %82 = load i32, i32* %ymax, align 4, !dbg !5771
  %cmp = icmp slt i32 %80, %82, !dbg !5772
  br i1 %cmp, label %for.body70, label %for.end103, !dbg !5773

for.body70:                                       ; preds = %for.cond67
  %83 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5774
  %disprect71 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %83, i32 0, i32 13, !dbg !5777
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect71, i32 0, i32 0, !dbg !5778
  %84 = load i32, i32* %xmin, align 8, !dbg !5778
  store i32 %84, i32* %x, align 4, !dbg !5779
  br label %for.cond72, !dbg !5780

for.cond72:                                       ; preds = %for.inc, %for.body70
  %85 = load i32, i32* %x, align 4, !dbg !5781
  %86 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5783
  %disprect73 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %86, i32 0, i32 13, !dbg !5784
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect73, i32 0, i32 1, !dbg !5785
  %87 = load i32, i32* %xmax, align 4, !dbg !5785
  %cmp74 = icmp slt i32 %85, %87, !dbg !5786
  br i1 %cmp74, label %for.body76, label %for.end, !dbg !5787

for.body76:                                       ; preds = %for.cond72
  %88 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5788
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %88, i32 0, i32 20, !dbg !5790
  %89 = load i16, i16* %thread, align 2, !dbg !5790
  %conv77 = sext i16 %89 to i32, !dbg !5788
  %90 = load i32, i32* %seed, align 4, !dbg !5791
  %inc = add nsw i32 %90, 1, !dbg !5791
  store i32 %inc, i32* %seed, align 4, !dbg !5791
  call void @BLI_thread_srandom(i32 %conv77, i32 %90), !dbg !5792
  %91 = load i32*, i32** %rp, align 8, !dbg !5793
  %92 = load i32, i32* %91, align 4, !dbg !5795
  %tobool78 = icmp ne i32 %92, 0, !dbg !5795
  br i1 %tobool78, label %if.then79, label %if.end85, !dbg !5796

if.then79:                                        ; preds = %for.body76
  %93 = load i32*, i32** %ro, align 8, !dbg !5797
  %94 = load i32, i32* %93, align 4, !dbg !5799
  %obi = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 1, !dbg !5800
  store i32 %94, i32* %obi, align 8, !dbg !5801
  %95 = load i32*, i32** %rp, align 8, !dbg !5802
  %96 = load i32, i32* %95, align 4, !dbg !5803
  %facenr = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 2, !dbg !5804
  store i32 %96, i32* %facenr, align 4, !dbg !5805
  %97 = load i32*, i32** %rz, align 8, !dbg !5806
  %98 = load i32, i32* %97, align 4, !dbg !5807
  %z = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 3, !dbg !5808
  store i32 %98, i32* %z, align 8, !dbg !5809
  %99 = load i32, i32* %x, align 4, !dbg !5810
  %100 = load i32, i32* %y, align 4, !dbg !5812
  %call80 = call i32 @shade_samples(%struct.ShadeSample* %ssamp, %struct.PixStr* %ps, i32 %99, i32 %100), !dbg !5813
  %tobool81 = icmp ne i32 %call80, 0, !dbg !5813
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !5814

if.then82:                                        ; preds = %if.then79
  %101 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5815
  %102 = load i32, i32* %offs, align 4, !dbg !5817
  %shi = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !5818
  %arraydecay = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi, i64 0, i64 0, !dbg !5819
  %shr = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 3, !dbg !5820
  %arraydecay83 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %shr, i64 0, i64 0, !dbg !5821
  call void @add_passes(%struct.RenderLayer* %101, i32 %102, %struct.ShadeInput* %arraydecay, %struct.ShadeResult* %arraydecay83), !dbg !5822
  br label %if.end84, !dbg !5823

if.end84:                                         ; preds = %if.then82, %if.then79
  br label %if.end85, !dbg !5824

if.end85:                                         ; preds = %if.end84, %for.body76
  br label %for.inc, !dbg !5825

for.inc:                                          ; preds = %if.end85
  %103 = load i32, i32* %x, align 4, !dbg !5826
  %inc86 = add nsw i32 %103, 1, !dbg !5826
  store i32 %inc86, i32* %x, align 4, !dbg !5826
  %104 = load i32*, i32** %ro, align 8, !dbg !5827
  %incdec.ptr = getelementptr inbounds i32, i32* %104, i32 1, !dbg !5827
  store i32* %incdec.ptr, i32** %ro, align 8, !dbg !5827
  %105 = load i32*, i32** %rz, align 8, !dbg !5828
  %incdec.ptr87 = getelementptr inbounds i32, i32* %105, i32 1, !dbg !5828
  store i32* %incdec.ptr87, i32** %rz, align 8, !dbg !5828
  %106 = load i32*, i32** %rp, align 8, !dbg !5829
  %incdec.ptr88 = getelementptr inbounds i32, i32* %106, i32 1, !dbg !5829
  store i32* %incdec.ptr88, i32** %rp, align 8, !dbg !5829
  %107 = load float*, float** %fcol, align 8, !dbg !5830
  %add.ptr = getelementptr inbounds float, float* %107, i64 4, !dbg !5830
  store float* %add.ptr, float** %fcol, align 8, !dbg !5830
  %108 = load i32, i32* %offs, align 4, !dbg !5831
  %inc89 = add nsw i32 %108, 1, !dbg !5831
  store i32 %inc89, i32* %offs, align 4, !dbg !5831
  br label %for.cond72, !dbg !5832, !llvm.loop !5833

for.end:                                          ; preds = %for.cond72
  %109 = load i32, i32* %y, align 4, !dbg !5835
  %and90 = and i32 %109, 1, !dbg !5837
  %tobool91 = icmp ne i32 %and90, 0, !dbg !5837
  br i1 %tobool91, label %if.then92, label %if.end97, !dbg !5838

if.then92:                                        ; preds = %for.end
  %110 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !5839
  %111 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !5841
  %call93 = call i32 %110(i8* %111), !dbg !5842
  %tobool94 = icmp ne i32 %call93, 0, !dbg !5842
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !5843

if.then95:                                        ; preds = %if.then92
  br label %for.end103, !dbg !5844

if.end96:                                         ; preds = %if.then92
  br label %if.end97, !dbg !5845

if.end97:                                         ; preds = %if.end96, %for.end
  br label %for.inc98, !dbg !5846

for.inc98:                                        ; preds = %if.end97
  %112 = load i32, i32* %y, align 4, !dbg !5847
  %inc99 = add nsw i32 %112, 1, !dbg !5847
  store i32 %inc99, i32* %y, align 4, !dbg !5847
  %113 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !5848
  %renrect100 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %113, i32 0, i32 13, !dbg !5849
  %ymax101 = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect100, i32 0, i32 3, !dbg !5850
  %114 = load volatile i32, i32* %ymax101, align 4, !dbg !5851
  %inc102 = add nsw i32 %114, 1, !dbg !5851
  store volatile i32 %inc102, i32* %ymax101, align 4, !dbg !5851
  br label %for.cond67, !dbg !5852, !llvm.loop !5853

for.end103:                                       ; preds = %if.then95, %for.cond67
  %115 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 56), align 8, !dbg !5855
  %tobool104 = icmp ne i8* %115, null, !dbg !5857
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !5858

if.then105:                                       ; preds = %for.end103
  %116 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5859
  call void @free_occ_samples(%struct.Render* @R, %struct.RenderPart* %116), !dbg !5860
  br label %if.end106, !dbg !5860

if.end106:                                        ; preds = %if.then105, %for.end103
  %117 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !5861
  %and107 = and i32 %117, 2, !dbg !5863
  %tobool108 = icmp ne i32 %and107, 0, !dbg !5863
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !5864

if.then109:                                       ; preds = %if.end106
  %118 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5865
  call void @ISB_free(%struct.RenderPart* %118), !dbg !5866
  br label %if.end110, !dbg !5866

if.end110:                                        ; preds = %if.then109, %if.end106
  br label %if.end111, !dbg !5867

if.end111:                                        ; preds = %if.end110, %if.end47
  %119 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !5868
  %renlay112 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %119, i32 0, i32 14, !dbg !5869
  store %struct.RenderLayer* null, %struct.RenderLayer** %renlay112, align 8, !dbg !5870
  br label %if.end113, !dbg !5871

if.end113:                                        ; preds = %if.end111, %if.end
  %120 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !5872
  %conv114 = sext i16 %120 to i32, !dbg !5874
  %and115 = and i32 %conv114, 8, !dbg !5875
  %tobool116 = icmp ne i32 %and115, 0, !dbg !5875
  br i1 %tobool116, label %if.then117, label %if.end123, !dbg !5876

if.then117:                                       ; preds = %if.end113
  %121 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5877
  %layflag118 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %121, i32 0, i32 6, !dbg !5879
  %122 = load i32, i32* %layflag118, align 8, !dbg !5879
  %and119 = and i32 %122, 4, !dbg !5880
  %tobool120 = icmp ne i32 %and119, 0, !dbg !5880
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !5881

if.then121:                                       ; preds = %if.then117
  %123 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5882
  %124 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5883
  call void @lamphalo_tile(%struct.RenderPart* %123, %struct.RenderLayer* %124), !dbg !5884
  br label %if.end122, !dbg !5884

if.end122:                                        ; preds = %if.then121, %if.then117
  br label %if.end123, !dbg !5885

if.end123:                                        ; preds = %if.end122, %if.end113
  %125 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !5886
  %conv124 = sext i16 %125 to i32, !dbg !5888
  %and125 = and i32 %conv124, 2, !dbg !5889
  %tobool126 = icmp ne i32 %and125, 0, !dbg !5889
  br i1 %tobool126, label %if.then127, label %if.end133, !dbg !5890

if.then127:                                       ; preds = %if.end123
  %126 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5891
  %layflag128 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %126, i32 0, i32 6, !dbg !5893
  %127 = load i32, i32* %layflag128, align 8, !dbg !5893
  %and129 = and i32 %127, 4, !dbg !5894
  %tobool130 = icmp ne i32 %and129, 0, !dbg !5894
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !5895

if.then131:                                       ; preds = %if.then127
  %128 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5896
  %129 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5897
  call void @halo_tile(%struct.RenderPart* %128, %struct.RenderLayer* %129), !dbg !5898
  br label %if.end132, !dbg !5898

if.end132:                                        ; preds = %if.then131, %if.then127
  br label %if.end133, !dbg !5899

if.end133:                                        ; preds = %if.end132, %if.end123
  %130 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !5900
  %conv134 = sext i16 %130 to i32, !dbg !5902
  %and135 = and i32 %conv134, 1, !dbg !5903
  %tobool136 = icmp ne i32 %and135, 0, !dbg !5903
  br i1 %tobool136, label %if.then138, label %lor.lhs.false, !dbg !5904

lor.lhs.false:                                    ; preds = %if.end133
  %131 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 63), align 4, !dbg !5905
  %tobool137 = icmp ne i32 %131, 0, !dbg !5906
  br i1 %tobool137, label %if.then138, label %if.end177, !dbg !5907

if.then138:                                       ; preds = %lor.lhs.false, %if.end133
  %132 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5908
  %layflag139 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %132, i32 0, i32 6, !dbg !5911
  %133 = load i32, i32* %layflag139, align 8, !dbg !5911
  %and140 = and i32 %133, 34, !dbg !5912
  %tobool141 = icmp ne i32 %and140, 0, !dbg !5912
  br i1 %tobool141, label %if.then142, label %if.end176, !dbg !5913

if.then142:                                       ; preds = %if.then138
  call void @llvm.dbg.declare(metadata float** %fcol143, metadata !5914, metadata !DIExpression()), !dbg !5916
  call void @llvm.dbg.declare(metadata float** %acol, metadata !5917, metadata !DIExpression()), !dbg !5918
  call void @llvm.dbg.declare(metadata i32* %x144, metadata !5919, metadata !DIExpression()), !dbg !5920
  %134 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5921
  %135 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5922
  %rectx145 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %135, i32 0, i32 14, !dbg !5923
  %136 = load i32, i32* %rectx145, align 8, !dbg !5923
  %conv146 = sext i32 %136 to i64, !dbg !5922
  %mul147 = mul i64 16, %conv146, !dbg !5924
  %137 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5925
  %recty148 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %137, i32 0, i32 15, !dbg !5926
  %138 = load i32, i32* %recty148, align 4, !dbg !5926
  %conv149 = sext i32 %138 to i64, !dbg !5925
  %mul150 = mul i64 %mul147, %conv149, !dbg !5927
  %call151 = call i8* %134(i64 %mul150, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)), !dbg !5921
  %139 = bitcast i8* %call151 to float*, !dbg !5921
  %140 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5928
  %acolrect = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %140, i32 0, i32 12, !dbg !5929
  store float* %139, float** %acolrect, align 8, !dbg !5930
  call void @llvm.dbg.declare(metadata float** %sw_ap, metadata !5931, metadata !DIExpression()), !dbg !5933
  %141 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5933
  %acolrect152 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %141, i32 0, i32 12, !dbg !5933
  %142 = load float*, float** %acolrect152, align 8, !dbg !5933
  store float* %142, float** %sw_ap, align 8, !dbg !5933
  %143 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5933
  %rectf153 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %143, i32 0, i32 11, !dbg !5933
  %144 = load float*, float** %rectf153, align 8, !dbg !5933
  %145 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5933
  %acolrect154 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %145, i32 0, i32 12, !dbg !5933
  store float* %144, float** %acolrect154, align 8, !dbg !5933
  %146 = load float*, float** %sw_ap, align 8, !dbg !5933
  %147 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5933
  %rectf155 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %147, i32 0, i32 11, !dbg !5933
  store float* %146, float** %rectf155, align 8, !dbg !5933
  %148 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5934
  %149 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5935
  %150 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5936
  %rectf156 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %150, i32 0, i32 11, !dbg !5937
  %151 = load float*, float** %rectf156, align 8, !dbg !5937
  %call157 = call i16* @zbuffer_transp_shade(%struct.RenderPart* %148, %struct.RenderLayer* %149, float* %151, %struct.ListBase* null), !dbg !5938
  call void @llvm.dbg.declare(metadata float** %sw_ap158, metadata !5939, metadata !DIExpression()), !dbg !5941
  %152 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5941
  %acolrect159 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %152, i32 0, i32 12, !dbg !5941
  %153 = load float*, float** %acolrect159, align 8, !dbg !5941
  store float* %153, float** %sw_ap158, align 8, !dbg !5941
  %154 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5941
  %rectf160 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %154, i32 0, i32 11, !dbg !5941
  %155 = load float*, float** %rectf160, align 8, !dbg !5941
  %156 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5941
  %acolrect161 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %156, i32 0, i32 12, !dbg !5941
  store float* %155, float** %acolrect161, align 8, !dbg !5941
  %157 = load float*, float** %sw_ap158, align 8, !dbg !5941
  %158 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5941
  %rectf162 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %158, i32 0, i32 11, !dbg !5941
  store float* %157, float** %rectf162, align 8, !dbg !5941
  %159 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5942
  %rectf163 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %159, i32 0, i32 11, !dbg !5943
  %160 = load float*, float** %rectf163, align 8, !dbg !5943
  store float* %160, float** %fcol143, align 8, !dbg !5944
  %161 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5945
  %acolrect164 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %161, i32 0, i32 12, !dbg !5946
  %162 = load float*, float** %acolrect164, align 8, !dbg !5946
  store float* %162, float** %acol, align 8, !dbg !5947
  %163 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5948
  %rectx165 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %163, i32 0, i32 14, !dbg !5950
  %164 = load i32, i32* %rectx165, align 8, !dbg !5950
  %165 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5951
  %recty166 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %165, i32 0, i32 15, !dbg !5952
  %166 = load i32, i32* %recty166, align 4, !dbg !5952
  %mul167 = mul nsw i32 %164, %166, !dbg !5953
  store i32 %mul167, i32* %x144, align 4, !dbg !5954
  br label %for.cond168, !dbg !5955

for.cond168:                                      ; preds = %for.inc172, %if.then142
  %167 = load i32, i32* %x144, align 4, !dbg !5956
  %cmp169 = icmp sgt i32 %167, 0, !dbg !5958
  br i1 %cmp169, label %for.body171, label %for.end175, !dbg !5959

for.body171:                                      ; preds = %for.cond168
  %168 = load float*, float** %fcol143, align 8, !dbg !5960
  %169 = load float*, float** %acol, align 8, !dbg !5962
  call void @addAlphaOverFloat(float* %168, float* %169), !dbg !5963
  br label %for.inc172, !dbg !5964

for.inc172:                                       ; preds = %for.body171
  %170 = load i32, i32* %x144, align 4, !dbg !5965
  %dec = add nsw i32 %170, -1, !dbg !5965
  store i32 %dec, i32* %x144, align 4, !dbg !5965
  %171 = load float*, float** %acol, align 8, !dbg !5966
  %add.ptr173 = getelementptr inbounds float, float* %171, i64 4, !dbg !5966
  store float* %add.ptr173, float** %acol, align 8, !dbg !5966
  %172 = load float*, float** %fcol143, align 8, !dbg !5967
  %add.ptr174 = getelementptr inbounds float, float* %172, i64 4, !dbg !5967
  store float* %add.ptr174, float** %fcol143, align 8, !dbg !5967
  br label %for.cond168, !dbg !5968, !llvm.loop !5969

for.end175:                                       ; preds = %for.cond168
  br label %if.end176, !dbg !5971

if.end176:                                        ; preds = %for.end175, %if.then138
  br label %if.end177, !dbg !5972

if.end177:                                        ; preds = %if.end176, %lor.lhs.false
  %173 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5973
  %layflag178 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %173, i32 0, i32 6, !dbg !5975
  %174 = load i32, i32* %layflag178, align 8, !dbg !5975
  %and179 = and i32 %174, 16, !dbg !5976
  %tobool180 = icmp ne i32 %and179, 0, !dbg !5976
  br i1 %tobool180, label %if.then181, label %if.end182, !dbg !5977

if.then181:                                       ; preds = %if.end177
  %175 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5978
  %176 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5979
  call void @atm_tile(%struct.RenderPart* %175, %struct.RenderLayer* %176), !dbg !5980
  br label %if.end182, !dbg !5980

if.end182:                                        ; preds = %if.then181, %if.end177
  %177 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5981
  %layflag183 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %177, i32 0, i32 6, !dbg !5983
  %178 = load i32, i32* %layflag183, align 8, !dbg !5983
  %and184 = and i32 %178, 16, !dbg !5984
  %tobool185 = icmp ne i32 %and184, 0, !dbg !5984
  br i1 %tobool185, label %if.then186, label %if.end187, !dbg !5985

if.then186:                                       ; preds = %if.end182
  %179 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5986
  %180 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5987
  call void @sky_tile(%struct.RenderPart* %179, %struct.RenderLayer* %180), !dbg !5988
  br label %if.end187, !dbg !5988

if.end187:                                        ; preds = %if.then186, %if.end182
  %181 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !5989
  %182 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !5991
  %call188 = call i32 %181(i8* %182), !dbg !5992
  %tobool189 = icmp ne i32 %call188, 0, !dbg !5992
  br i1 %tobool189, label %if.end201, label %if.then190, !dbg !5993

if.then190:                                       ; preds = %if.end187
  %183 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !5994
  %layflag191 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %183, i32 0, i32 6, !dbg !5997
  %184 = load i32, i32* %layflag191, align 8, !dbg !5997
  %and192 = and i32 %184, 8, !dbg !5998
  %tobool193 = icmp ne i32 %and192, 0, !dbg !5998
  br i1 %tobool193, label %if.then194, label %if.end200, !dbg !5999

if.then194:                                       ; preds = %if.then190
  %185 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !6000
  %and195 = and i32 %185, 32, !dbg !6002
  %tobool196 = icmp ne i32 %and195, 0, !dbg !6002
  br i1 %tobool196, label %if.then197, label %if.end199, !dbg !6003

if.then197:                                       ; preds = %if.then194
  %186 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6004
  %187 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6005
  %rectf198 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %187, i32 0, i32 11, !dbg !6006
  %188 = load float*, float** %rectf198, align 8, !dbg !6006
  %189 = load float*, float** %edgerect, align 8, !dbg !6007
  call void @edge_enhance_add(%struct.RenderPart* %186, float* %188, float* %189), !dbg !6008
  br label %if.end199, !dbg !6008

if.end199:                                        ; preds = %if.then197, %if.then194
  br label %if.end200, !dbg !6009

if.end200:                                        ; preds = %if.end199, %if.then190
  br label %if.end201, !dbg !6010

if.end201:                                        ; preds = %if.end200, %if.end187
  %190 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6011
  %passflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %190, i32 0, i32 7, !dbg !6013
  %191 = load i32, i32* %passflag, align 4, !dbg !6013
  %and202 = and i32 %191, 512, !dbg !6014
  %tobool203 = icmp ne i32 %and202, 0, !dbg !6014
  br i1 %tobool203, label %if.then204, label %if.end205, !dbg !6015

if.then204:                                       ; preds = %if.end201
  %192 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6016
  %193 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6017
  call void @reset_sky_speed(%struct.RenderPart* %192, %struct.RenderLayer* %193), !dbg !6018
  br label %if.end205, !dbg !6018

if.end205:                                        ; preds = %if.then204, %if.end201
  %194 = load float*, float** %edgerect, align 8, !dbg !6019
  %tobool206 = icmp ne float* %194, null, !dbg !6019
  br i1 %tobool206, label %if.then207, label %if.end208, !dbg !6021

if.then207:                                       ; preds = %if.end205
  %195 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6022
  %196 = load float*, float** %edgerect, align 8, !dbg !6023
  %197 = bitcast float* %196 to i8*, !dbg !6023
  call void %195(i8* %197), !dbg !6022
  br label %if.end208, !dbg !6022

if.end208:                                        ; preds = %if.then207, %if.end205
  store float* null, float** %edgerect, align 8, !dbg !6024
  %198 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6025
  %rectmask209 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %198, i32 0, i32 7, !dbg !6027
  %199 = load i32*, i32** %rectmask209, align 8, !dbg !6027
  %tobool210 = icmp ne i32* %199, null, !dbg !6025
  br i1 %tobool210, label %if.then211, label %if.end214, !dbg !6028

if.then211:                                       ; preds = %if.end208
  %200 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6029
  %201 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6031
  %rectmask212 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %201, i32 0, i32 7, !dbg !6032
  %202 = load i32*, i32** %rectmask212, align 8, !dbg !6032
  %203 = bitcast i32* %202 to i8*, !dbg !6031
  call void %200(i8* %203), !dbg !6029
  %204 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6033
  %rectmask213 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %204, i32 0, i32 7, !dbg !6034
  store i32* null, i32** %rectmask213, align 8, !dbg !6035
  br label %if.end214, !dbg !6036

if.end214:                                        ; preds = %if.then211, %if.end208
  br label %for.inc215, !dbg !6037

for.inc215:                                       ; preds = %if.end214
  %205 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6038
  %next216 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %205, i32 0, i32 0, !dbg !6039
  %206 = load %struct.RenderLayer*, %struct.RenderLayer** %next216, align 8, !dbg !6039
  store %struct.RenderLayer* %206, %struct.RenderLayer** %rl, align 8, !dbg !6040
  br label %for.cond, !dbg !6041, !llvm.loop !6042

for.end217:                                       ; preds = %for.cond
  %207 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !6044
  %renrect218 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %207, i32 0, i32 13, !dbg !6045
  %ymax219 = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect218, i32 0, i32 3, !dbg !6046
  store volatile i32 0, i32* %ymax219, align 4, !dbg !6047
  %208 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !6048
  %renrect220 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %208, i32 0, i32 13, !dbg !6049
  %ymin221 = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect220, i32 0, i32 2, !dbg !6050
  store volatile i32 0, i32* %ymin221, align 8, !dbg !6051
  %209 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !6052
  %call222 = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* @R, %struct.RenderResult* %209), !dbg !6053
  %210 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !6054
  %renlay223 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %210, i32 0, i32 14, !dbg !6055
  store %struct.RenderLayer* %call222, %struct.RenderLayer** %renlay223, align 8, !dbg !6056
  %211 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6057
  %212 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6058
  %recto224 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %212, i32 0, i32 4, !dbg !6059
  %213 = load i32*, i32** %recto224, align 8, !dbg !6059
  %214 = bitcast i32* %213 to i8*, !dbg !6058
  call void %211(i8* %214), !dbg !6057
  %215 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6060
  %recto225 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %215, i32 0, i32 4, !dbg !6061
  store i32* null, i32** %recto225, align 8, !dbg !6062
  %216 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6063
  %217 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6064
  %rectp226 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %217, i32 0, i32 5, !dbg !6065
  %218 = load i32*, i32** %rectp226, align 8, !dbg !6065
  %219 = bitcast i32* %218 to i8*, !dbg !6064
  call void %216(i8* %219), !dbg !6063
  %220 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6066
  %rectp227 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %220, i32 0, i32 5, !dbg !6067
  store i32* null, i32** %rectp227, align 8, !dbg !6068
  %221 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6069
  %222 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6070
  %rectz228 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %222, i32 0, i32 6, !dbg !6071
  %223 = load i32*, i32** %rectz228, align 8, !dbg !6071
  %224 = bitcast i32* %223 to i8*, !dbg !6070
  call void %221(i8* %224), !dbg !6069
  %225 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6072
  %rectz229 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %225, i32 0, i32 6, !dbg !6073
  store i32* null, i32** %rectz229, align 8, !dbg !6074
  ret void, !dbg !6075
}

declare dso_local void @shade_sample_initialize(%struct.ShadeSample*, %struct.RenderPart*, %struct.RenderLayer*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @edge_enhance_tile(%struct.RenderPart* %pa, float* %rectf, i32* %rectz) #0 !dbg !6076 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %rectf.addr = alloca float*, align 8
  %rectz.addr = alloca i32*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %col = alloca i32, align 4
  %rz = alloca i32*, align 8
  %rz1 = alloca i32*, align 8
  %rz2 = alloca i32*, align 8
  %rz3 = alloca i32*, align 8
  %zval1 = alloca i32, align 4
  %zval2 = alloca i32, align 4
  %zval3 = alloca i32, align 4
  %rf = alloca float*, align 8
  %fcol = alloca float, align 4
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !6079, metadata !DIExpression()), !dbg !6080
  store float* %rectf, float** %rectf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf.addr, metadata !6081, metadata !DIExpression()), !dbg !6082
  store i32* %rectz, i32** %rectz.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rectz.addr, metadata !6083, metadata !DIExpression()), !dbg !6084
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6085, metadata !DIExpression()), !dbg !6086
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6087, metadata !DIExpression()), !dbg !6088
  call void @llvm.dbg.declare(metadata i32* %col, metadata !6089, metadata !DIExpression()), !dbg !6090
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !6091, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.declare(metadata i32** %rz1, metadata !6093, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.declare(metadata i32** %rz2, metadata !6095, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.declare(metadata i32** %rz3, metadata !6097, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.declare(metadata i32* %zval1, metadata !6099, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.declare(metadata i32* %zval2, metadata !6101, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.declare(metadata i32* %zval3, metadata !6103, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.declare(metadata float** %rf, metadata !6105, metadata !DIExpression()), !dbg !6106
  %0 = load i32*, i32** %rectz.addr, align 8, !dbg !6107
  store i32* %0, i32** %rz, align 8, !dbg !6108
  %1 = load i32*, i32** %rz, align 8, !dbg !6109
  %cmp = icmp eq i32* %1, null, !dbg !6111
  br i1 %cmp, label %if.then, label %if.end, !dbg !6112

if.then:                                          ; preds = %entry
  br label %for.end101, !dbg !6113

if.end:                                           ; preds = %entry
  store i32 0, i32* %y, align 4, !dbg !6114
  br label %for.cond, !dbg !6116

for.cond:                                         ; preds = %for.inc5, %if.end
  %2 = load i32, i32* %y, align 4, !dbg !6117
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6119
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %3, i32 0, i32 15, !dbg !6120
  %4 = load i32, i32* %recty, align 4, !dbg !6120
  %cmp1 = icmp slt i32 %2, %4, !dbg !6121
  br i1 %cmp1, label %for.body, label %for.end7, !dbg !6122

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !6123
  br label %for.cond2, !dbg !6125

for.cond2:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %x, align 4, !dbg !6126
  %6 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6128
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %6, i32 0, i32 14, !dbg !6129
  %7 = load i32, i32* %rectx, align 8, !dbg !6129
  %cmp3 = icmp slt i32 %5, %7, !dbg !6130
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !6131

for.body4:                                        ; preds = %for.cond2
  %8 = load i32*, i32** %rz, align 8, !dbg !6132
  %9 = load i32, i32* %8, align 4, !dbg !6133
  %shr = ashr i32 %9, 4, !dbg !6133
  store i32 %shr, i32* %8, align 4, !dbg !6133
  br label %for.inc, !dbg !6134

for.inc:                                          ; preds = %for.body4
  %10 = load i32, i32* %x, align 4, !dbg !6135
  %inc = add nsw i32 %10, 1, !dbg !6135
  store i32 %inc, i32* %x, align 4, !dbg !6135
  %11 = load i32*, i32** %rz, align 8, !dbg !6136
  %incdec.ptr = getelementptr inbounds i32, i32* %11, i32 1, !dbg !6136
  store i32* %incdec.ptr, i32** %rz, align 8, !dbg !6136
  br label %for.cond2, !dbg !6137, !llvm.loop !6138

for.end:                                          ; preds = %for.cond2
  br label %for.inc5, !dbg !6139

for.inc5:                                         ; preds = %for.end
  %12 = load i32, i32* %y, align 4, !dbg !6140
  %inc6 = add nsw i32 %12, 1, !dbg !6140
  store i32 %inc6, i32* %y, align 4, !dbg !6140
  br label %for.cond, !dbg !6141, !llvm.loop !6142

for.end7:                                         ; preds = %for.cond
  %13 = load i32*, i32** %rectz.addr, align 8, !dbg !6144
  store i32* %13, i32** %rz1, align 8, !dbg !6145
  %14 = load i32*, i32** %rz1, align 8, !dbg !6146
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6147
  %rectx8 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %15, i32 0, i32 14, !dbg !6148
  %16 = load i32, i32* %rectx8, align 8, !dbg !6148
  %idx.ext = sext i32 %16 to i64, !dbg !6149
  %add.ptr = getelementptr inbounds i32, i32* %14, i64 %idx.ext, !dbg !6149
  store i32* %add.ptr, i32** %rz2, align 8, !dbg !6150
  %17 = load i32*, i32** %rz2, align 8, !dbg !6151
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6152
  %rectx9 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 14, !dbg !6153
  %19 = load i32, i32* %rectx9, align 8, !dbg !6153
  %idx.ext10 = sext i32 %19 to i64, !dbg !6154
  %add.ptr11 = getelementptr inbounds i32, i32* %17, i64 %idx.ext10, !dbg !6154
  store i32* %add.ptr11, i32** %rz3, align 8, !dbg !6155
  %20 = load float*, float** %rectf.addr, align 8, !dbg !6156
  %21 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6157
  %rectx12 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %21, i32 0, i32 14, !dbg !6158
  %22 = load i32, i32* %rectx12, align 8, !dbg !6158
  %idx.ext13 = sext i32 %22 to i64, !dbg !6159
  %add.ptr14 = getelementptr inbounds float, float* %20, i64 %idx.ext13, !dbg !6159
  %add.ptr15 = getelementptr inbounds float, float* %add.ptr14, i64 1, !dbg !6160
  store float* %add.ptr15, float** %rf, align 8, !dbg !6161
  store i32 0, i32* %y, align 4, !dbg !6162
  br label %for.cond16, !dbg !6164

for.cond16:                                       ; preds = %for.inc82, %for.end7
  %23 = load i32, i32* %y, align 4, !dbg !6165
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6167
  %recty17 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %24, i32 0, i32 15, !dbg !6168
  %25 = load i32, i32* %recty17, align 4, !dbg !6168
  %sub = sub nsw i32 %25, 2, !dbg !6169
  %cmp18 = icmp slt i32 %23, %sub, !dbg !6170
  br i1 %cmp18, label %for.body19, label %for.end84, !dbg !6171

for.body19:                                       ; preds = %for.cond16
  store i32 0, i32* %x, align 4, !dbg !6172
  br label %for.cond20, !dbg !6175

for.cond20:                                       ; preds = %for.inc71, %for.body19
  %26 = load i32, i32* %x, align 4, !dbg !6176
  %27 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6178
  %rectx21 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %27, i32 0, i32 14, !dbg !6179
  %28 = load i32, i32* %rectx21, align 8, !dbg !6179
  %sub22 = sub nsw i32 %28, 2, !dbg !6180
  %cmp23 = icmp slt i32 %26, %sub22, !dbg !6181
  br i1 %cmp23, label %for.body24, label %for.end77, !dbg !6182

for.body24:                                       ; preds = %for.cond20
  %29 = load i32*, i32** %rz1, align 8, !dbg !6183
  %arrayidx = getelementptr inbounds i32, i32* %29, i64 0, !dbg !6183
  %30 = load i32, i32* %arrayidx, align 4, !dbg !6183
  %31 = load i32*, i32** %rz1, align 8, !dbg !6185
  %arrayidx25 = getelementptr inbounds i32, i32* %31, i64 1, !dbg !6185
  %32 = load i32, i32* %arrayidx25, align 4, !dbg !6185
  %mul = mul nsw i32 2, %32, !dbg !6186
  %add = add nsw i32 %30, %mul, !dbg !6187
  %33 = load i32*, i32** %rz1, align 8, !dbg !6188
  %arrayidx26 = getelementptr inbounds i32, i32* %33, i64 2, !dbg !6188
  %34 = load i32, i32* %arrayidx26, align 4, !dbg !6188
  %add27 = add nsw i32 %add, %34, !dbg !6189
  store i32 %add27, i32* %zval1, align 4, !dbg !6190
  %35 = load i32*, i32** %rz2, align 8, !dbg !6191
  %arrayidx28 = getelementptr inbounds i32, i32* %35, i64 0, !dbg !6191
  %36 = load i32, i32* %arrayidx28, align 4, !dbg !6191
  %mul29 = mul nsw i32 2, %36, !dbg !6192
  %37 = load i32*, i32** %rz2, align 8, !dbg !6193
  %arrayidx30 = getelementptr inbounds i32, i32* %37, i64 2, !dbg !6193
  %38 = load i32, i32* %arrayidx30, align 4, !dbg !6193
  %mul31 = mul nsw i32 2, %38, !dbg !6194
  %add32 = add nsw i32 %mul29, %mul31, !dbg !6195
  store i32 %add32, i32* %zval2, align 4, !dbg !6196
  %39 = load i32*, i32** %rz3, align 8, !dbg !6197
  %arrayidx33 = getelementptr inbounds i32, i32* %39, i64 0, !dbg !6197
  %40 = load i32, i32* %arrayidx33, align 4, !dbg !6197
  %41 = load i32*, i32** %rz3, align 8, !dbg !6198
  %arrayidx34 = getelementptr inbounds i32, i32* %41, i64 1, !dbg !6198
  %42 = load i32, i32* %arrayidx34, align 4, !dbg !6198
  %mul35 = mul nsw i32 2, %42, !dbg !6199
  %add36 = add nsw i32 %40, %mul35, !dbg !6200
  %43 = load i32*, i32** %rz3, align 8, !dbg !6201
  %arrayidx37 = getelementptr inbounds i32, i32* %43, i64 2, !dbg !6201
  %44 = load i32, i32* %arrayidx37, align 4, !dbg !6201
  %add38 = add nsw i32 %add36, %44, !dbg !6202
  store i32 %add38, i32* %zval3, align 4, !dbg !6203
  %45 = load i32*, i32** %rz2, align 8, !dbg !6204
  %arrayidx39 = getelementptr inbounds i32, i32* %45, i64 1, !dbg !6204
  %46 = load i32, i32* %arrayidx39, align 4, !dbg !6204
  %mul40 = mul nsw i32 4, %46, !dbg !6205
  %47 = load i32, i32* %zval1, align 4, !dbg !6206
  %48 = load i32, i32* %zval2, align 4, !dbg !6207
  %add41 = add nsw i32 %47, %48, !dbg !6208
  %49 = load i32, i32* %zval3, align 4, !dbg !6209
  %add42 = add nsw i32 %add41, %49, !dbg !6210
  %div = sdiv i32 %add42, 3, !dbg !6211
  %sub43 = sub nsw i32 %mul40, %div, !dbg !6212
  store i32 %sub43, i32* %col, align 4, !dbg !6213
  %50 = load i32, i32* %col, align 4, !dbg !6214
  %cmp44 = icmp slt i32 %50, 0, !dbg !6216
  br i1 %cmp44, label %if.then45, label %if.end47, !dbg !6217

if.then45:                                        ; preds = %for.body24
  %51 = load i32, i32* %col, align 4, !dbg !6218
  %sub46 = sub nsw i32 0, %51, !dbg !6219
  store i32 %sub46, i32* %col, align 4, !dbg !6220
  br label %if.end47, !dbg !6221

if.end47:                                         ; preds = %if.then45, %for.body24
  %52 = load i32, i32* %col, align 4, !dbg !6222
  %shr48 = ashr i32 %52, 5, !dbg !6222
  store i32 %shr48, i32* %col, align 4, !dbg !6222
  %53 = load i32, i32* %col, align 4, !dbg !6223
  %cmp49 = icmp sgt i32 %53, 65536, !dbg !6225
  br i1 %cmp49, label %if.then50, label %if.else, !dbg !6226

if.then50:                                        ; preds = %if.end47
  store i32 65536, i32* %col, align 4, !dbg !6227
  br label %if.end53, !dbg !6228

if.else:                                          ; preds = %if.end47
  %54 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 56), align 2, !dbg !6229
  %conv = sext i16 %54 to i32, !dbg !6230
  %55 = load i32, i32* %col, align 4, !dbg !6231
  %mul51 = mul nsw i32 %conv, %55, !dbg !6232
  %shr52 = ashr i32 %mul51, 8, !dbg !6233
  store i32 %shr52, i32* %col, align 4, !dbg !6234
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then50
  %56 = load i32, i32* %col, align 4, !dbg !6235
  %cmp54 = icmp sgt i32 %56, 0, !dbg !6237
  br i1 %cmp54, label %if.then56, label %if.end70, !dbg !6238

if.then56:                                        ; preds = %if.end53
  call void @llvm.dbg.declare(metadata float* %fcol, metadata !6239, metadata !DIExpression()), !dbg !6241
  %57 = load i32, i32* %col, align 4, !dbg !6242
  %cmp57 = icmp sgt i32 %57, 255, !dbg !6244
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !6245

if.then59:                                        ; preds = %if.then56
  store float 1.000000e+00, float* %fcol, align 4, !dbg !6246
  br label %if.end63, !dbg !6247

if.else60:                                        ; preds = %if.then56
  %58 = load i32, i32* %col, align 4, !dbg !6248
  %conv61 = sitofp i32 %58 to float, !dbg !6249
  %div62 = fdiv float %conv61, 2.550000e+02, !dbg !6250
  store float %div62, float* %fcol, align 4, !dbg !6251
  br label %if.end63

if.end63:                                         ; preds = %if.else60, %if.then59
  %59 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6252
  %tobool = icmp ne i16 %59, 0, !dbg !6254
  br i1 %tobool, label %if.then64, label %if.else68, !dbg !6255

if.then64:                                        ; preds = %if.end63
  %60 = load float, float* %fcol, align 4, !dbg !6256
  %61 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !6257
  %conv65 = sitofp i16 %61 to float, !dbg !6258
  %div66 = fdiv float %60, %conv65, !dbg !6259
  %62 = load float*, float** %rf, align 8, !dbg !6260
  %63 = load float, float* %62, align 4, !dbg !6261
  %add67 = fadd float %63, %div66, !dbg !6261
  store float %add67, float* %62, align 4, !dbg !6261
  br label %if.end69, !dbg !6262

if.else68:                                        ; preds = %if.end63
  %64 = load float, float* %fcol, align 4, !dbg !6263
  %65 = load float*, float** %rf, align 8, !dbg !6264
  store float %64, float* %65, align 4, !dbg !6265
  br label %if.end69

if.end69:                                         ; preds = %if.else68, %if.then64
  br label %if.end70, !dbg !6266

if.end70:                                         ; preds = %if.end69, %if.end53
  br label %for.inc71, !dbg !6267

for.inc71:                                        ; preds = %if.end70
  %66 = load i32, i32* %x, align 4, !dbg !6268
  %inc72 = add nsw i32 %66, 1, !dbg !6268
  store i32 %inc72, i32* %x, align 4, !dbg !6268
  %67 = load i32*, i32** %rz1, align 8, !dbg !6269
  %incdec.ptr73 = getelementptr inbounds i32, i32* %67, i32 1, !dbg !6269
  store i32* %incdec.ptr73, i32** %rz1, align 8, !dbg !6269
  %68 = load i32*, i32** %rz2, align 8, !dbg !6270
  %incdec.ptr74 = getelementptr inbounds i32, i32* %68, i32 1, !dbg !6270
  store i32* %incdec.ptr74, i32** %rz2, align 8, !dbg !6270
  %69 = load i32*, i32** %rz3, align 8, !dbg !6271
  %incdec.ptr75 = getelementptr inbounds i32, i32* %69, i32 1, !dbg !6271
  store i32* %incdec.ptr75, i32** %rz3, align 8, !dbg !6271
  %70 = load float*, float** %rf, align 8, !dbg !6272
  %incdec.ptr76 = getelementptr inbounds float, float* %70, i32 1, !dbg !6272
  store float* %incdec.ptr76, float** %rf, align 8, !dbg !6272
  br label %for.cond20, !dbg !6273, !llvm.loop !6274

for.end77:                                        ; preds = %for.cond20
  %71 = load i32*, i32** %rz1, align 8, !dbg !6276
  %add.ptr78 = getelementptr inbounds i32, i32* %71, i64 2, !dbg !6276
  store i32* %add.ptr78, i32** %rz1, align 8, !dbg !6276
  %72 = load i32*, i32** %rz2, align 8, !dbg !6277
  %add.ptr79 = getelementptr inbounds i32, i32* %72, i64 2, !dbg !6277
  store i32* %add.ptr79, i32** %rz2, align 8, !dbg !6277
  %73 = load i32*, i32** %rz3, align 8, !dbg !6278
  %add.ptr80 = getelementptr inbounds i32, i32* %73, i64 2, !dbg !6278
  store i32* %add.ptr80, i32** %rz3, align 8, !dbg !6278
  %74 = load float*, float** %rf, align 8, !dbg !6279
  %add.ptr81 = getelementptr inbounds float, float* %74, i64 2, !dbg !6279
  store float* %add.ptr81, float** %rf, align 8, !dbg !6279
  br label %for.inc82, !dbg !6280

for.inc82:                                        ; preds = %for.end77
  %75 = load i32, i32* %y, align 4, !dbg !6281
  %inc83 = add nsw i32 %75, 1, !dbg !6281
  store i32 %inc83, i32* %y, align 4, !dbg !6281
  br label %for.cond16, !dbg !6282, !llvm.loop !6283

for.end84:                                        ; preds = %for.cond16
  %76 = load i32*, i32** %rectz.addr, align 8, !dbg !6285
  store i32* %76, i32** %rz, align 8, !dbg !6286
  store i32 0, i32* %y, align 4, !dbg !6287
  br label %for.cond85, !dbg !6289

for.cond85:                                       ; preds = %for.inc99, %for.end84
  %77 = load i32, i32* %y, align 4, !dbg !6290
  %78 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6292
  %recty86 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %78, i32 0, i32 15, !dbg !6293
  %79 = load i32, i32* %recty86, align 4, !dbg !6293
  %cmp87 = icmp slt i32 %77, %79, !dbg !6294
  br i1 %cmp87, label %for.body89, label %for.end101, !dbg !6295

for.body89:                                       ; preds = %for.cond85
  store i32 0, i32* %x, align 4, !dbg !6296
  br label %for.cond90, !dbg !6298

for.cond90:                                       ; preds = %for.inc95, %for.body89
  %80 = load i32, i32* %x, align 4, !dbg !6299
  %81 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6301
  %rectx91 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %81, i32 0, i32 14, !dbg !6302
  %82 = load i32, i32* %rectx91, align 8, !dbg !6302
  %cmp92 = icmp slt i32 %80, %82, !dbg !6303
  br i1 %cmp92, label %for.body94, label %for.end98, !dbg !6304

for.body94:                                       ; preds = %for.cond90
  %83 = load i32*, i32** %rz, align 8, !dbg !6305
  %84 = load i32, i32* %83, align 4, !dbg !6306
  %shl = shl i32 %84, 4, !dbg !6306
  store i32 %shl, i32* %83, align 4, !dbg !6306
  br label %for.inc95, !dbg !6307

for.inc95:                                        ; preds = %for.body94
  %85 = load i32, i32* %x, align 4, !dbg !6308
  %inc96 = add nsw i32 %85, 1, !dbg !6308
  store i32 %inc96, i32* %x, align 4, !dbg !6308
  %86 = load i32*, i32** %rz, align 8, !dbg !6309
  %incdec.ptr97 = getelementptr inbounds i32, i32* %86, i32 1, !dbg !6309
  store i32* %incdec.ptr97, i32** %rz, align 8, !dbg !6309
  br label %for.cond90, !dbg !6310, !llvm.loop !6311

for.end98:                                        ; preds = %for.cond90
  br label %for.inc99, !dbg !6312

for.inc99:                                        ; preds = %for.end98
  %87 = load i32, i32* %y, align 4, !dbg !6313
  %inc100 = add nsw i32 %87, 1, !dbg !6313
  store i32 %inc100, i32* %y, align 4, !dbg !6313
  br label %for.cond85, !dbg !6314, !llvm.loop !6315

for.end101:                                       ; preds = %if.then, %for.cond85
  ret void, !dbg !6317
}

declare dso_local void @ISB_create(%struct.RenderPart*, %struct.APixstr*) #2

declare dso_local void @cache_occ_samples(%struct.Render*, %struct.RenderPart*, %struct.ShadeSample*) #2

declare dso_local void @BLI_thread_srandom(i32, i32) #2

declare dso_local i32 @shade_samples(%struct.ShadeSample*, %struct.PixStr*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_passes(%struct.RenderLayer* %rl, i32 %offset, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !6318 {
entry:
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %offset.addr = alloca i32, align 4
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %fp = alloca float*, align 8
  %col = alloca float*, align 8
  %uvcol = alloca [3 x float], align 4
  %a = alloca i32, align 4
  %pixsize = alloca i32, align 4
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !6323, metadata !DIExpression()), !dbg !6324
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6325, metadata !DIExpression()), !dbg !6326
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !6327, metadata !DIExpression()), !dbg !6328
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !6329, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !6331, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6333, metadata !DIExpression()), !dbg !6334
  %0 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !6335
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %0, i32 0, i32 11, !dbg !6336
  %1 = load float*, float** %rectf, align 8, !dbg !6336
  %2 = load i32, i32* %offset.addr, align 4, !dbg !6337
  %mul = mul nsw i32 4, %2, !dbg !6338
  %idx.ext = sext i32 %mul to i64, !dbg !6339
  %add.ptr = getelementptr inbounds float, float* %1, i64 %idx.ext, !dbg !6339
  store float* %add.ptr, float** %fp, align 8, !dbg !6340
  %3 = load float*, float** %fp, align 8, !dbg !6341
  %4 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6342
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %4, i32 0, i32 0, !dbg !6343
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !6342
  call void @copy_v4_v4(float* %3, float* %arraydecay), !dbg !6344
  %5 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !6345
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %5, i32 0, i32 18, !dbg !6347
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !6348
  %6 = load i8*, i8** %first, align 8, !dbg !6348
  %7 = bitcast i8* %6 to %struct.RenderPass*, !dbg !6345
  store %struct.RenderPass* %7, %struct.RenderPass** %rpass, align 8, !dbg !6349
  br label %for.cond, !dbg !6350

for.cond:                                         ; preds = %for.inc82, %entry
  %8 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !6351
  %tobool = icmp ne %struct.RenderPass* %8, null, !dbg !6353
  br i1 %tobool, label %for.body, label %for.end83, !dbg !6353

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %col, metadata !6354, metadata !DIExpression()), !dbg !6356
  store float* null, float** %col, align 8, !dbg !6356
  call void @llvm.dbg.declare(metadata [3 x float]* %uvcol, metadata !6357, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6359, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.declare(metadata i32* %pixsize, metadata !6361, metadata !DIExpression()), !dbg !6362
  store i32 3, i32* %pixsize, align 4, !dbg !6362
  %9 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !6363
  %passtype = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %9, i32 0, i32 2, !dbg !6364
  %10 = load i32, i32* %passtype, align 8, !dbg !6364
  switch i32 %10, label %sw.epilog [
    i32 2, label %sw.bb
    i32 4, label %sw.bb3
    i32 65536, label %sw.bb6
    i32 8, label %sw.bb8
    i32 16, label %sw.bb10
    i32 32, label %sw.bb12
    i32 64, label %sw.bb14
    i32 131072, label %sw.bb16
    i32 8192, label %sw.bb18
    i32 128, label %sw.bb20
    i32 1024, label %sw.bb22
    i32 256, label %sw.bb24
    i32 4096, label %sw.bb26
    i32 512, label %sw.bb43
    i32 2048, label %sw.bb45
    i32 262144, label %sw.bb52
    i32 16384, label %sw.bb62
    i32 32768, label %sw.bb66
  ], !dbg !6365

sw.bb:                                            ; preds = %for.body
  %11 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !6366
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %11, i32 0, i32 6, !dbg !6368
  %12 = load float*, float** %rect, align 8, !dbg !6368
  %13 = load i32, i32* %offset.addr, align 4, !dbg !6369
  %idx.ext1 = sext i32 %13 to i64, !dbg !6370
  %add.ptr2 = getelementptr inbounds float, float* %12, i64 %idx.ext1, !dbg !6370
  store float* %add.ptr2, float** %fp, align 8, !dbg !6371
  %14 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6372
  %z = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %14, i32 0, i32 4, !dbg !6373
  %15 = load float, float* %z, align 4, !dbg !6373
  %16 = load float*, float** %fp, align 8, !dbg !6374
  store float %15, float* %16, align 4, !dbg !6375
  br label %sw.epilog, !dbg !6376

sw.bb3:                                           ; preds = %for.body
  %17 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6377
  %col4 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %17, i32 0, i32 1, !dbg !6378
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %col4, i64 0, i64 0, !dbg !6377
  store float* %arraydecay5, float** %col, align 8, !dbg !6379
  store i32 4, i32* %pixsize, align 4, !dbg !6380
  br label %sw.epilog, !dbg !6381

sw.bb6:                                           ; preds = %for.body
  %18 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6382
  %emit = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %18, i32 0, i32 5, !dbg !6383
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %emit, i64 0, i64 0, !dbg !6382
  store float* %arraydecay7, float** %col, align 8, !dbg !6384
  br label %sw.epilog, !dbg !6385

sw.bb8:                                           ; preds = %for.body
  %19 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6386
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %19, i32 0, i32 6, !dbg !6387
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !6386
  store float* %arraydecay9, float** %col, align 8, !dbg !6388
  br label %sw.epilog, !dbg !6389

sw.bb10:                                          ; preds = %for.body
  %20 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6390
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %20, i32 0, i32 8, !dbg !6391
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !6390
  store float* %arraydecay11, float** %col, align 8, !dbg !6392
  br label %sw.epilog, !dbg !6393

sw.bb12:                                          ; preds = %for.body
  %21 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6394
  %shad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %21, i32 0, i32 9, !dbg !6395
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %shad, i64 0, i64 0, !dbg !6394
  store float* %arraydecay13, float** %col, align 8, !dbg !6396
  br label %sw.epilog, !dbg !6397

sw.bb14:                                          ; preds = %for.body
  %22 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6398
  %ao = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %22, i32 0, i32 10, !dbg !6399
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !6398
  store float* %arraydecay15, float** %col, align 8, !dbg !6400
  br label %sw.epilog, !dbg !6401

sw.bb16:                                          ; preds = %for.body
  %23 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6402
  %env = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %23, i32 0, i32 11, !dbg !6403
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !6402
  store float* %arraydecay17, float** %col, align 8, !dbg !6404
  br label %sw.epilog, !dbg !6405

sw.bb18:                                          ; preds = %for.body
  %24 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6406
  %indirect = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %24, i32 0, i32 12, !dbg !6407
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !6406
  store float* %arraydecay19, float** %col, align 8, !dbg !6408
  br label %sw.epilog, !dbg !6409

sw.bb20:                                          ; preds = %for.body
  %25 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6410
  %refl = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %25, i32 0, i32 13, !dbg !6411
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %refl, i64 0, i64 0, !dbg !6410
  store float* %arraydecay21, float** %col, align 8, !dbg !6412
  br label %sw.epilog, !dbg !6413

sw.bb22:                                          ; preds = %for.body
  %26 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6414
  %refr = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %26, i32 0, i32 14, !dbg !6415
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %refr, i64 0, i64 0, !dbg !6414
  store float* %arraydecay23, float** %col, align 8, !dbg !6416
  br label %sw.epilog, !dbg !6417

sw.bb24:                                          ; preds = %for.body
  %27 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6418
  %nor = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %27, i32 0, i32 15, !dbg !6419
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !6418
  store float* %arraydecay25, float** %col, align 8, !dbg !6420
  br label %sw.epilog, !dbg !6421

sw.bb26:                                          ; preds = %for.body
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6422
  %totuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 74, !dbg !6424
  %29 = load i32, i32* %totuv, align 8, !dbg !6424
  %tobool27 = icmp ne i32 %29, 0, !dbg !6422
  br i1 %tobool27, label %if.then, label %if.end, !dbg !6425

if.then:                                          ; preds = %sw.bb26
  %30 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6426
  %uv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %30, i32 0, i32 72, !dbg !6428
  %31 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6429
  %actuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %31, i32 0, i32 76, !dbg !6430
  %32 = load i32, i32* %actuv, align 8, !dbg !6430
  %idxprom = sext i32 %32 to i64, !dbg !6426
  %arrayidx = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv, i64 0, i64 %idxprom, !dbg !6426
  %uv28 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %arrayidx, i32 0, i32 2, !dbg !6431
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %uv28, i64 0, i64 0, !dbg !6426
  %33 = load float, float* %arrayidx29, align 8, !dbg !6426
  %mul30 = fmul float 5.000000e-01, %33, !dbg !6432
  %add = fadd float 5.000000e-01, %mul30, !dbg !6433
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %uvcol, i64 0, i64 0, !dbg !6434
  store float %add, float* %arrayidx31, align 4, !dbg !6435
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6436
  %uv32 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 72, !dbg !6437
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6438
  %actuv33 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 76, !dbg !6439
  %36 = load i32, i32* %actuv33, align 8, !dbg !6439
  %idxprom34 = sext i32 %36 to i64, !dbg !6436
  %arrayidx35 = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv32, i64 0, i64 %idxprom34, !dbg !6436
  %uv36 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %arrayidx35, i32 0, i32 2, !dbg !6440
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %uv36, i64 0, i64 1, !dbg !6436
  %37 = load float, float* %arrayidx37, align 4, !dbg !6436
  %mul38 = fmul float 5.000000e-01, %37, !dbg !6441
  %add39 = fadd float 5.000000e-01, %mul38, !dbg !6442
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %uvcol, i64 0, i64 1, !dbg !6443
  store float %add39, float* %arrayidx40, align 4, !dbg !6444
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %uvcol, i64 0, i64 2, !dbg !6445
  store float 1.000000e+00, float* %arrayidx41, align 4, !dbg !6446
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %uvcol, i64 0, i64 0, !dbg !6447
  store float* %arraydecay42, float** %col, align 8, !dbg !6448
  br label %if.end, !dbg !6449

if.end:                                           ; preds = %if.then, %sw.bb26
  br label %sw.epilog, !dbg !6450

sw.bb43:                                          ; preds = %for.body
  %38 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6451
  %winspeed = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %38, i32 0, i32 16, !dbg !6452
  %arraydecay44 = getelementptr inbounds [4 x float], [4 x float]* %winspeed, i64 0, i64 0, !dbg !6451
  store float* %arraydecay44, float** %col, align 8, !dbg !6453
  store i32 4, i32* %pixsize, align 4, !dbg !6454
  br label %sw.epilog, !dbg !6455

sw.bb45:                                          ; preds = %for.body
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6456
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 1, !dbg !6458
  %40 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6458
  %tobool46 = icmp ne %struct.VlakRen* %40, null, !dbg !6456
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !6459

if.then47:                                        ; preds = %sw.bb45
  %41 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !6460
  %rect48 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %41, i32 0, i32 6, !dbg !6462
  %42 = load float*, float** %rect48, align 8, !dbg !6462
  %43 = load i32, i32* %offset.addr, align 4, !dbg !6463
  %idx.ext49 = sext i32 %43 to i64, !dbg !6464
  %add.ptr50 = getelementptr inbounds float, float* %42, i64 %idx.ext49, !dbg !6464
  store float* %add.ptr50, float** %fp, align 8, !dbg !6465
  %44 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6466
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %44, i32 0, i32 4, !dbg !6467
  %45 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6467
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %45, i32 0, i32 2, !dbg !6468
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6468
  %index = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 96, !dbg !6469
  %47 = load i16, i16* %index, align 4, !dbg !6469
  %conv = sitofp i16 %47 to float, !dbg !6470
  %48 = load float*, float** %fp, align 8, !dbg !6471
  store float %conv, float* %48, align 4, !dbg !6472
  br label %if.end51, !dbg !6473

if.end51:                                         ; preds = %if.then47, %sw.bb45
  br label %sw.epilog, !dbg !6474

sw.bb52:                                          ; preds = %for.body
  %49 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6475
  %vlr53 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %49, i32 0, i32 1, !dbg !6477
  %50 = load %struct.VlakRen*, %struct.VlakRen** %vlr53, align 8, !dbg !6477
  %tobool54 = icmp ne %struct.VlakRen* %50, null, !dbg !6475
  br i1 %tobool54, label %if.then55, label %if.end61, !dbg !6478

if.then55:                                        ; preds = %sw.bb52
  %51 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !6479
  %rect56 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %51, i32 0, i32 6, !dbg !6481
  %52 = load float*, float** %rect56, align 8, !dbg !6481
  %53 = load i32, i32* %offset.addr, align 4, !dbg !6482
  %idx.ext57 = sext i32 %53 to i64, !dbg !6483
  %add.ptr58 = getelementptr inbounds float, float* %52, i64 %idx.ext57, !dbg !6483
  store float* %add.ptr58, float** %fp, align 8, !dbg !6484
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !6485
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %54, i32 0, i32 0, !dbg !6486
  %55 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !6486
  %index59 = getelementptr inbounds %struct.Material, %struct.Material* %55, i32 0, i32 127, !dbg !6487
  %56 = load i16, i16* %index59, align 2, !dbg !6487
  %conv60 = sitofp i16 %56 to float, !dbg !6488
  %57 = load float*, float** %fp, align 8, !dbg !6489
  store float %conv60, float* %57, align 4, !dbg !6490
  br label %if.end61, !dbg !6491

if.end61:                                         ; preds = %if.then55, %sw.bb52
  br label %sw.epilog, !dbg !6492

sw.bb62:                                          ; preds = %for.body
  %58 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !6493
  %rect63 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %58, i32 0, i32 6, !dbg !6494
  %59 = load float*, float** %rect63, align 8, !dbg !6494
  %60 = load i32, i32* %offset.addr, align 4, !dbg !6495
  %idx.ext64 = sext i32 %60 to i64, !dbg !6496
  %add.ptr65 = getelementptr inbounds float, float* %59, i64 %idx.ext64, !dbg !6496
  store float* %add.ptr65, float** %fp, align 8, !dbg !6497
  %61 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6498
  %mist = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %61, i32 0, i32 3, !dbg !6499
  %62 = load float, float* %mist, align 4, !dbg !6499
  %63 = load float*, float** %fp, align 8, !dbg !6500
  store float %62, float* %63, align 4, !dbg !6501
  br label %sw.epilog, !dbg !6502

sw.bb66:                                          ; preds = %for.body
  %64 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !6503
  %rayhits = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %64, i32 0, i32 17, !dbg !6504
  %arraydecay67 = getelementptr inbounds [4 x float], [4 x float]* %rayhits, i64 0, i64 0, !dbg !6503
  store float* %arraydecay67, float** %col, align 8, !dbg !6505
  store i32 4, i32* %pixsize, align 4, !dbg !6506
  br label %sw.epilog, !dbg !6507

sw.epilog:                                        ; preds = %for.body, %sw.bb66, %sw.bb62, %if.end61, %if.end51, %sw.bb43, %if.end, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb3, %sw.bb
  %65 = load float*, float** %col, align 8, !dbg !6508
  %tobool68 = icmp ne float* %65, null, !dbg !6508
  br i1 %tobool68, label %if.then69, label %if.end81, !dbg !6510

if.then69:                                        ; preds = %sw.epilog
  %66 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !6511
  %rect70 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %66, i32 0, i32 6, !dbg !6513
  %67 = load float*, float** %rect70, align 8, !dbg !6513
  %68 = load i32, i32* %pixsize, align 4, !dbg !6514
  %69 = load i32, i32* %offset.addr, align 4, !dbg !6515
  %mul71 = mul nsw i32 %68, %69, !dbg !6516
  %idx.ext72 = sext i32 %mul71 to i64, !dbg !6517
  %add.ptr73 = getelementptr inbounds float, float* %67, i64 %idx.ext72, !dbg !6517
  store float* %add.ptr73, float** %fp, align 8, !dbg !6518
  store i32 0, i32* %a, align 4, !dbg !6519
  br label %for.cond74, !dbg !6521

for.cond74:                                       ; preds = %for.inc, %if.then69
  %70 = load i32, i32* %a, align 4, !dbg !6522
  %71 = load i32, i32* %pixsize, align 4, !dbg !6524
  %cmp = icmp slt i32 %70, %71, !dbg !6525
  br i1 %cmp, label %for.body76, label %for.end, !dbg !6526

for.body76:                                       ; preds = %for.cond74
  %72 = load float*, float** %col, align 8, !dbg !6527
  %73 = load i32, i32* %a, align 4, !dbg !6528
  %idxprom77 = sext i32 %73 to i64, !dbg !6527
  %arrayidx78 = getelementptr inbounds float, float* %72, i64 %idxprom77, !dbg !6527
  %74 = load float, float* %arrayidx78, align 4, !dbg !6527
  %75 = load float*, float** %fp, align 8, !dbg !6529
  %76 = load i32, i32* %a, align 4, !dbg !6530
  %idxprom79 = sext i32 %76 to i64, !dbg !6529
  %arrayidx80 = getelementptr inbounds float, float* %75, i64 %idxprom79, !dbg !6529
  store float %74, float* %arrayidx80, align 4, !dbg !6531
  br label %for.inc, !dbg !6529

for.inc:                                          ; preds = %for.body76
  %77 = load i32, i32* %a, align 4, !dbg !6532
  %inc = add nsw i32 %77, 1, !dbg !6532
  store i32 %inc, i32* %a, align 4, !dbg !6532
  br label %for.cond74, !dbg !6533, !llvm.loop !6534

for.end:                                          ; preds = %for.cond74
  br label %if.end81, !dbg !6536

if.end81:                                         ; preds = %for.end, %sw.epilog
  br label %for.inc82, !dbg !6537

for.inc82:                                        ; preds = %if.end81
  %78 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !6538
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %78, i32 0, i32 0, !dbg !6539
  %79 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !6539
  store %struct.RenderPass* %79, %struct.RenderPass** %rpass, align 8, !dbg !6540
  br label %for.cond, !dbg !6541, !llvm.loop !6542

for.end83:                                        ; preds = %for.cond
  ret void, !dbg !6544
}

declare dso_local void @free_occ_samples(%struct.Render*, %struct.RenderPart*) #2

declare dso_local void @ISB_free(%struct.RenderPart*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @zbufshade_sss_tile(%struct.RenderPart* %pa) #0 !dbg !6545 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  %re = alloca %struct.Render*, align 8
  %ssamp = alloca %struct.ShadeSample, align 8
  %handle = alloca %struct.ZBufSSSHandle, align 8
  %rr = alloca %struct.RenderResult*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %mat = alloca %struct.Material*, align 8
  %co = alloca [3 x float]*, align 8
  %color = alloca [3 x float]*, align 8
  %area = alloca float*, align 8
  %fcol = alloca float*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %seed = alloca i32, align 4
  %quad = alloca i32, align 4
  %totpoint = alloca i32, align 4
  %display = alloca i32, align 4
  %ro = alloca i32*, align 8
  %rz = alloca i32*, align 8
  %rp = alloca i32*, align 8
  %rbo = alloca i32*, align 8
  %rbz = alloca i32*, align 8
  %rbp = alloca i32*, align 8
  %lay = alloca i32, align 4
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %obi152 = alloca %struct.ObjectInstanceRen*, align 8
  %obr156 = alloca %struct.ObjectRen*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !6546, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !6548, metadata !DIExpression()), !dbg !6790
  store %struct.Render* @R, %struct.Render** %re, align 8, !dbg !6790
  call void @llvm.dbg.declare(metadata %struct.ShadeSample* %ssamp, metadata !6791, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.declare(metadata %struct.ZBufSSSHandle* %handle, metadata !6793, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr, metadata !6801, metadata !DIExpression()), !dbg !6802
  %0 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6803
  %result = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %0, i32 0, i32 2, !dbg !6804
  %1 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !6804
  store %struct.RenderResult* %1, %struct.RenderResult** %rr, align 8, !dbg !6802
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !6805, metadata !DIExpression()), !dbg !6806
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !6807, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.declare(metadata %struct.Material** %mat, metadata !6811, metadata !DIExpression()), !dbg !6814
  %2 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6815
  %sss_mat = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 76, !dbg !6816
  %3 = load %struct.Material*, %struct.Material** %sss_mat, align 8, !dbg !6816
  store %struct.Material* %3, %struct.Material** %mat, align 8, !dbg !6814
  call void @llvm.dbg.declare(metadata [3 x float]** %co, metadata !6817, metadata !DIExpression()), !dbg !6818
  call void @llvm.dbg.declare(metadata [3 x float]** %color, metadata !6819, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.declare(metadata float** %area, metadata !6821, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.declare(metadata float** %fcol, metadata !6823, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6825, metadata !DIExpression()), !dbg !6826
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6827, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !6829, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.declare(metadata i32* %quad, metadata !6831, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.declare(metadata i32* %totpoint, metadata !6833, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.declare(metadata i32* %display, metadata !6835, metadata !DIExpression()), !dbg !6836
  %4 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6837
  %r = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 45, !dbg !6838
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !6839
  %5 = load i32, i32* %scemode, align 4, !dbg !6839
  %and = and i32 %5, 524296, !dbg !6840
  %tobool = icmp ne i32 %and, 0, !dbg !6841
  %lnot = xor i1 %tobool, true, !dbg !6841
  %lnot.ext = zext i1 %lnot to i32, !dbg !6841
  store i32 %lnot.ext, i32* %display, align 4, !dbg !6836
  call void @llvm.dbg.declare(metadata i32** %ro, metadata !6842, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !6844, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.declare(metadata i32** %rp, metadata !6846, metadata !DIExpression()), !dbg !6847
  call void @llvm.dbg.declare(metadata i32** %rbo, metadata !6848, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.declare(metadata i32** %rbz, metadata !6850, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.declare(metadata i32** %rbp, metadata !6852, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !6854, metadata !DIExpression()), !dbg !6855
  %6 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6856
  %pa1 = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %handle, i32 0, i32 0, !dbg !6857
  store %struct.RenderPart* %6, %struct.RenderPart** %pa1, align 8, !dbg !6858
  %totps = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %handle, i32 0, i32 2, !dbg !6859
  store i32 0, i32* %totps, align 8, !dbg !6860
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6861
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6862
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 14, !dbg !6863
  %9 = load i32, i32* %rectx, align 8, !dbg !6863
  %conv = sext i32 %9 to i64, !dbg !6862
  %mul = mul i64 4, %conv, !dbg !6864
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6865
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 15, !dbg !6866
  %11 = load i32, i32* %recty, align 4, !dbg !6866
  %conv2 = sext i32 %11 to i64, !dbg !6865
  %mul3 = mul i64 %mul, %conv2, !dbg !6867
  %call = call i8* %7(i64 %mul3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)), !dbg !6861
  %12 = bitcast i8* %call to i32*, !dbg !6861
  %13 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6868
  %recto = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %13, i32 0, i32 4, !dbg !6869
  store i32* %12, i32** %recto, align 8, !dbg !6870
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6871
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6872
  %rectx4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %15, i32 0, i32 14, !dbg !6873
  %16 = load i32, i32* %rectx4, align 8, !dbg !6873
  %conv5 = sext i32 %16 to i64, !dbg !6872
  %mul6 = mul i64 4, %conv5, !dbg !6874
  %17 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6875
  %recty7 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %17, i32 0, i32 15, !dbg !6876
  %18 = load i32, i32* %recty7, align 4, !dbg !6876
  %conv8 = sext i32 %18 to i64, !dbg !6875
  %mul9 = mul i64 %mul6, %conv8, !dbg !6877
  %call10 = call i8* %14(i64 %mul9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)), !dbg !6871
  %19 = bitcast i8* %call10 to i32*, !dbg !6871
  %20 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6878
  %rectp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %20, i32 0, i32 5, !dbg !6879
  store i32* %19, i32** %rectp, align 8, !dbg !6880
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6881
  %22 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6882
  %rectx11 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %22, i32 0, i32 14, !dbg !6883
  %23 = load i32, i32* %rectx11, align 8, !dbg !6883
  %conv12 = sext i32 %23 to i64, !dbg !6882
  %mul13 = mul i64 4, %conv12, !dbg !6884
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6885
  %recty14 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %24, i32 0, i32 15, !dbg !6886
  %25 = load i32, i32* %recty14, align 4, !dbg !6886
  %conv15 = sext i32 %25 to i64, !dbg !6885
  %mul16 = mul i64 %mul13, %conv15, !dbg !6887
  %call17 = call i8* %21(i64 %mul16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)), !dbg !6881
  %26 = bitcast i8* %call17 to i32*, !dbg !6881
  %27 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6888
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %27, i32 0, i32 6, !dbg !6889
  store i32* %26, i32** %rectz, align 8, !dbg !6890
  %28 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6891
  %29 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6892
  %rectx18 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %29, i32 0, i32 14, !dbg !6893
  %30 = load i32, i32* %rectx18, align 8, !dbg !6893
  %conv19 = sext i32 %30 to i64, !dbg !6892
  %mul20 = mul i64 4, %conv19, !dbg !6894
  %31 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6895
  %recty21 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %31, i32 0, i32 15, !dbg !6896
  %32 = load i32, i32* %recty21, align 4, !dbg !6896
  %conv22 = sext i32 %32 to i64, !dbg !6895
  %mul23 = mul i64 %mul20, %conv22, !dbg !6897
  %call24 = call i8* %28(i64 %mul23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)), !dbg !6891
  %33 = bitcast i8* %call24 to i32*, !dbg !6891
  %34 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6898
  %rectbacko = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 9, !dbg !6899
  store i32* %33, i32** %rectbacko, align 8, !dbg !6900
  %35 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6901
  %36 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6902
  %rectx25 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %36, i32 0, i32 14, !dbg !6903
  %37 = load i32, i32* %rectx25, align 8, !dbg !6903
  %conv26 = sext i32 %37 to i64, !dbg !6902
  %mul27 = mul i64 4, %conv26, !dbg !6904
  %38 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6905
  %recty28 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %38, i32 0, i32 15, !dbg !6906
  %39 = load i32, i32* %recty28, align 4, !dbg !6906
  %conv29 = sext i32 %39 to i64, !dbg !6905
  %mul30 = mul i64 %mul27, %conv29, !dbg !6907
  %call31 = call i8* %35(i64 %mul30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0)), !dbg !6901
  %40 = bitcast i8* %call31 to i32*, !dbg !6901
  %41 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6908
  %rectbackp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %41, i32 0, i32 10, !dbg !6909
  store i32* %40, i32** %rectbackp, align 8, !dbg !6910
  %42 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6911
  %43 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6912
  %rectx32 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %43, i32 0, i32 14, !dbg !6913
  %44 = load i32, i32* %rectx32, align 8, !dbg !6913
  %conv33 = sext i32 %44 to i64, !dbg !6912
  %mul34 = mul i64 4, %conv33, !dbg !6914
  %45 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6915
  %recty35 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %45, i32 0, i32 15, !dbg !6916
  %46 = load i32, i32* %recty35, align 4, !dbg !6916
  %conv36 = sext i32 %46 to i64, !dbg !6915
  %mul37 = mul i64 %mul34, %conv36, !dbg !6917
  %call38 = call i8* %42(i64 %mul37, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)), !dbg !6911
  %47 = bitcast i8* %call38 to i32*, !dbg !6911
  %48 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6918
  %rectbackz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %48, i32 0, i32 11, !dbg !6919
  store i32* %47, i32** %rectbackz, align 8, !dbg !6920
  %49 = bitcast %struct.ShadeSample* %ssamp to i8*, !dbg !6921
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 27080, i1 false), !dbg !6921
  %50 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6922
  %51 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !6923
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %51, i32 0, i32 12, !dbg !6924
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !6925
  %52 = load i8*, i8** %first, align 8, !dbg !6925
  %53 = bitcast i8* %52 to %struct.RenderLayer*, !dbg !6923
  call void @shade_sample_initialize(%struct.ShadeSample* %ssamp, %struct.RenderPart* %50, %struct.RenderLayer* %53), !dbg !6926
  %tot = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 0, !dbg !6927
  store i32 1, i32* %tot, align 8, !dbg !6928
  %54 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !6929
  %layers39 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %54, i32 0, i32 12, !dbg !6931
  %first40 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers39, i32 0, i32 0, !dbg !6932
  %55 = load i8*, i8** %first40, align 8, !dbg !6932
  %56 = bitcast i8* %55 to %struct.RenderLayer*, !dbg !6929
  store %struct.RenderLayer* %56, %struct.RenderLayer** %rl, align 8, !dbg !6933
  br label %for.cond, !dbg !6934

for.cond:                                         ; preds = %for.inc, %entry
  %57 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6935
  %tobool41 = icmp ne %struct.RenderLayer* %57, null, !dbg !6937
  br i1 %tobool41, label %for.body, label %for.end, !dbg !6937

for.body:                                         ; preds = %for.cond
  %58 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6938
  %lay42 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %58, i32 0, i32 3, !dbg !6940
  %59 = load i32, i32* %lay42, align 4, !dbg !6940
  %shi = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6941
  %arrayidx = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi, i64 0, i64 0, !dbg !6942
  %lay43 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx, i32 0, i32 117, !dbg !6943
  %60 = load i32, i32* %lay43, align 8, !dbg !6944
  %or = or i32 %60, %59, !dbg !6944
  store i32 %or, i32* %lay43, align 8, !dbg !6944
  %61 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6945
  %layflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %61, i32 0, i32 6, !dbg !6946
  %62 = load i32, i32* %layflag, align 8, !dbg !6946
  %shi44 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6947
  %arrayidx45 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi44, i64 0, i64 0, !dbg !6948
  %layflag46 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx45, i32 0, i32 118, !dbg !6949
  %63 = load i32, i32* %layflag46, align 4, !dbg !6950
  %or47 = or i32 %63, %62, !dbg !6950
  store i32 %or47, i32* %layflag46, align 4, !dbg !6950
  %64 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6951
  %passflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %64, i32 0, i32 7, !dbg !6952
  %65 = load i32, i32* %passflag, align 4, !dbg !6952
  %shi48 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6953
  %arrayidx49 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi48, i64 0, i64 0, !dbg !6954
  %passflag50 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx49, i32 0, i32 119, !dbg !6955
  %66 = load i32, i32* %passflag50, align 8, !dbg !6956
  %or51 = or i32 %66, %65, !dbg !6956
  store i32 %or51, i32* %passflag50, align 8, !dbg !6956
  %67 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6957
  %pass_xor = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %67, i32 0, i32 8, !dbg !6958
  %68 = load i32, i32* %pass_xor, align 8, !dbg !6958
  %neg = xor i32 %68, -1, !dbg !6959
  %shi52 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6960
  %arrayidx53 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi52, i64 0, i64 0, !dbg !6961
  %combinedflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx53, i32 0, i32 120, !dbg !6962
  %69 = load i32, i32* %combinedflag, align 4, !dbg !6963
  %or54 = or i32 %69, %neg, !dbg !6963
  store i32 %or54, i32* %combinedflag, align 4, !dbg !6963
  br label %for.inc, !dbg !6964

for.inc:                                          ; preds = %for.body
  %70 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !6965
  %next = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %70, i32 0, i32 0, !dbg !6966
  %71 = load %struct.RenderLayer*, %struct.RenderLayer** %next, align 8, !dbg !6966
  store %struct.RenderLayer* %71, %struct.RenderLayer** %rl, align 8, !dbg !6967
  br label %for.cond, !dbg !6968, !llvm.loop !6969

for.end:                                          ; preds = %for.cond
  %72 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !6971
  %layers55 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %72, i32 0, i32 12, !dbg !6972
  %first56 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers55, i32 0, i32 0, !dbg !6973
  %73 = load i8*, i8** %first56, align 8, !dbg !6973
  %74 = bitcast i8* %73 to %struct.RenderLayer*, !dbg !6971
  store %struct.RenderLayer* %74, %struct.RenderLayer** %rl, align 8, !dbg !6974
  %shi57 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6975
  %arrayidx58 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi57, i64 0, i64 0, !dbg !6976
  %passflag59 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx58, i32 0, i32 119, !dbg !6977
  %75 = load i32, i32* %passflag59, align 8, !dbg !6978
  %or60 = or i32 %75, 5, !dbg !6978
  store i32 %or60, i32* %passflag59, align 8, !dbg !6978
  %shi61 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6979
  %arrayidx62 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi61, i64 0, i64 0, !dbg !6980
  %combinedflag63 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx62, i32 0, i32 120, !dbg !6981
  %76 = load i32, i32* %combinedflag63, align 4, !dbg !6982
  %and64 = and i32 %76, -17, !dbg !6982
  store i32 %and64, i32* %combinedflag63, align 4, !dbg !6982
  %shi65 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6983
  %arrayidx66 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi65, i64 0, i64 0, !dbg !6984
  %mat_override = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx66, i32 0, i32 122, !dbg !6985
  store %struct.Material* null, %struct.Material** %mat_override, align 8, !dbg !6986
  %shi67 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6987
  %arrayidx68 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi67, i64 0, i64 0, !dbg !6988
  %light_override = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx68, i32 0, i32 121, !dbg !6989
  store %struct.Group* null, %struct.Group** %light_override, align 8, !dbg !6990
  %shi69 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6991
  %arrayidx70 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi69, i64 0, i64 0, !dbg !6992
  %lay71 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx70, i32 0, i32 117, !dbg !6993
  %77 = load i32, i32* %lay71, align 8, !dbg !6993
  store i32 %77, i32* %lay, align 4, !dbg !6994
  %78 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !6995
  %79 = load i32, i32* %lay, align 4, !dbg !6996
  %80 = bitcast %struct.ZBufSSSHandle* %handle to i8*, !dbg !6997
  call void @zbuffer_sss(%struct.RenderPart* %78, i32 %79, i8* %80, void (i8*, i32, i32, i32, i32, i32)* @addps_sss), !dbg !6998
  %totps72 = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %handle, i32 0, i32 2, !dbg !6999
  %81 = load i32, i32* %totps72, align 8, !dbg !6999
  %cmp = icmp eq i32 %81, 0, !dbg !7001
  br i1 %cmp, label %if.then, label %if.end, !dbg !7002

if.then:                                          ; preds = %for.end
  %82 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7003
  call void @zbufshade_sss_free(%struct.RenderPart* %82), !dbg !7005
  br label %return, !dbg !7006

if.end:                                           ; preds = %for.end
  %83 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !7007
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %83, i32 0, i32 11, !dbg !7008
  %84 = load float*, float** %rectf, align 8, !dbg !7008
  store float* %84, float** %fcol, align 8, !dbg !7009
  %85 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7010
  %totps74 = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %handle, i32 0, i32 2, !dbg !7011
  %86 = load i32, i32* %totps74, align 8, !dbg !7011
  %conv75 = sext i32 %86 to i64, !dbg !7012
  %mul76 = mul i64 12, %conv75, !dbg !7013
  %call77 = call i8* %85(i64 %mul76, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)), !dbg !7010
  %87 = bitcast i8* %call77 to [3 x float]*, !dbg !7010
  store [3 x float]* %87, [3 x float]** %co, align 8, !dbg !7014
  %88 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7015
  %totps78 = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %handle, i32 0, i32 2, !dbg !7016
  %89 = load i32, i32* %totps78, align 8, !dbg !7016
  %conv79 = sext i32 %89 to i64, !dbg !7017
  %mul80 = mul i64 12, %conv79, !dbg !7018
  %call81 = call i8* %88(i64 %mul80, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0)), !dbg !7015
  %90 = bitcast i8* %call81 to [3 x float]*, !dbg !7015
  store [3 x float]* %90, [3 x float]** %color, align 8, !dbg !7019
  %91 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7020
  %totps82 = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %handle, i32 0, i32 2, !dbg !7021
  %92 = load i32, i32* %totps82, align 8, !dbg !7021
  %conv83 = sext i32 %92 to i64, !dbg !7022
  %mul84 = mul i64 4, %conv83, !dbg !7023
  %call85 = call i8* %91(i64 %mul84, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)), !dbg !7020
  %93 = bitcast i8* %call85 to float*, !dbg !7020
  store float* %93, float** %area, align 8, !dbg !7024
  %94 = load i32, i32* %display, align 4, !dbg !7025
  %tobool86 = icmp ne i32 %94, 0, !dbg !7025
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !7027

if.then87:                                        ; preds = %if.end
  %95 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7028
  %renrect = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %95, i32 0, i32 13, !dbg !7030
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect, i32 0, i32 2, !dbg !7031
  store volatile i32 0, i32* %ymin, align 8, !dbg !7032
  %96 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !7033
  %97 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7034
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %97, i32 0, i32 14, !dbg !7035
  store %struct.RenderLayer* %96, %struct.RenderLayer** %renlay, align 8, !dbg !7036
  br label %if.end88, !dbg !7037

if.end88:                                         ; preds = %if.then87, %if.end
  %98 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7038
  %rectx89 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %98, i32 0, i32 14, !dbg !7039
  %99 = load i32, i32* %rectx89, align 8, !dbg !7039
  %100 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7040
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %100, i32 0, i32 13, !dbg !7041
  %ymin90 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !7042
  %101 = load i32, i32* %ymin90, align 8, !dbg !7042
  %mul91 = mul nsw i32 %99, %101, !dbg !7043
  store i32 %mul91, i32* %seed, align 4, !dbg !7044
  %102 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7045
  %rectz92 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %102, i32 0, i32 6, !dbg !7046
  %103 = load i32*, i32** %rectz92, align 8, !dbg !7046
  store i32* %103, i32** %rz, align 8, !dbg !7047
  %104 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7048
  %rectp93 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %104, i32 0, i32 5, !dbg !7049
  %105 = load i32*, i32** %rectp93, align 8, !dbg !7049
  store i32* %105, i32** %rp, align 8, !dbg !7050
  %106 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7051
  %recto94 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %106, i32 0, i32 4, !dbg !7052
  %107 = load i32*, i32** %recto94, align 8, !dbg !7052
  store i32* %107, i32** %ro, align 8, !dbg !7053
  %108 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7054
  %rectbackz95 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %108, i32 0, i32 11, !dbg !7055
  %109 = load i32*, i32** %rectbackz95, align 8, !dbg !7055
  store i32* %109, i32** %rbz, align 8, !dbg !7056
  %110 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7057
  %rectbackp96 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %110, i32 0, i32 10, !dbg !7058
  %111 = load i32*, i32** %rectbackp96, align 8, !dbg !7058
  store i32* %111, i32** %rbp, align 8, !dbg !7059
  %112 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7060
  %rectbacko97 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %112, i32 0, i32 9, !dbg !7061
  %113 = load i32*, i32** %rectbacko97, align 8, !dbg !7061
  store i32* %113, i32** %rbo, align 8, !dbg !7062
  store i32 0, i32* %totpoint, align 4, !dbg !7063
  %114 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7064
  %disprect98 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %114, i32 0, i32 13, !dbg !7066
  %ymin99 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect98, i32 0, i32 2, !dbg !7067
  %115 = load i32, i32* %ymin99, align 8, !dbg !7067
  store i32 %115, i32* %y, align 4, !dbg !7068
  br label %for.cond100, !dbg !7069

for.cond100:                                      ; preds = %for.inc199, %if.end88
  %116 = load i32, i32* %y, align 4, !dbg !7070
  %117 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7072
  %disprect101 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %117, i32 0, i32 13, !dbg !7073
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect101, i32 0, i32 3, !dbg !7074
  %118 = load i32, i32* %ymax, align 4, !dbg !7074
  %cmp102 = icmp slt i32 %116, %118, !dbg !7075
  br i1 %cmp102, label %for.body104, label %for.end204, !dbg !7076

for.body104:                                      ; preds = %for.cond100
  %119 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7077
  %disprect105 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %119, i32 0, i32 13, !dbg !7080
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect105, i32 0, i32 0, !dbg !7081
  %120 = load i32, i32* %xmin, align 8, !dbg !7081
  store i32 %120, i32* %x, align 4, !dbg !7082
  br label %for.cond106, !dbg !7083

for.cond106:                                      ; preds = %for.inc187, %for.body104
  %121 = load i32, i32* %x, align 4, !dbg !7084
  %122 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7086
  %disprect107 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %122, i32 0, i32 13, !dbg !7087
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect107, i32 0, i32 1, !dbg !7088
  %123 = load i32, i32* %xmax, align 4, !dbg !7088
  %cmp108 = icmp slt i32 %121, %123, !dbg !7089
  br i1 %cmp108, label %for.body110, label %for.end190, !dbg !7090

for.body110:                                      ; preds = %for.cond106
  %124 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7091
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %124, i32 0, i32 20, !dbg !7093
  %125 = load i16, i16* %thread, align 2, !dbg !7093
  %conv111 = sext i16 %125 to i32, !dbg !7091
  %126 = load i32, i32* %seed, align 4, !dbg !7094
  %inc = add nsw i32 %126, 1, !dbg !7094
  store i32 %inc, i32* %seed, align 4, !dbg !7094
  call void @BLI_thread_srandom(i32 %conv111, i32 %126), !dbg !7095
  %127 = load i32*, i32** %rp, align 8, !dbg !7096
  %tobool112 = icmp ne i32* %127, null, !dbg !7096
  br i1 %tobool112, label %if.then113, label %if.end140, !dbg !7098

if.then113:                                       ; preds = %for.body110
  %128 = load i32*, i32** %rp, align 8, !dbg !7099
  %129 = load i32, i32* %128, align 4, !dbg !7102
  %cmp114 = icmp ne i32 %129, 0, !dbg !7103
  br i1 %cmp114, label %if.then116, label %if.end137, !dbg !7104

if.then116:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !7105, metadata !DIExpression()), !dbg !7109
  %130 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !7110
  %objectinstance = getelementptr inbounds %struct.Render, %struct.Render* %130, i32 0, i32 69, !dbg !7111
  %131 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %objectinstance, align 8, !dbg !7111
  %132 = load i32*, i32** %ro, align 8, !dbg !7112
  %133 = load i32, i32* %132, align 4, !dbg !7113
  %idxprom = sext i32 %133 to i64, !dbg !7110
  %arrayidx117 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %131, i64 %idxprom, !dbg !7110
  store %struct.ObjectInstanceRen* %arrayidx117, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7109
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !7114, metadata !DIExpression()), !dbg !7115
  %134 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7116
  %obr118 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %134, i32 0, i32 2, !dbg !7117
  %135 = load %struct.ObjectRen*, %struct.ObjectRen** %obr118, align 8, !dbg !7117
  store %struct.ObjectRen* %135, %struct.ObjectRen** %obr, align 8, !dbg !7115
  %136 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7118
  %137 = load i32*, i32** %rp, align 8, !dbg !7119
  %138 = load i32, i32* %137, align 4, !dbg !7120
  %sub = sub nsw i32 %138, 1, !dbg !7121
  %and119 = and i32 %sub, 134217727, !dbg !7122
  %call120 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %136, i32 %and119), !dbg !7123
  store %struct.VlakRen* %call120, %struct.VlakRen** %vlr, align 8, !dbg !7124
  %139 = load i32*, i32** %rp, align 8, !dbg !7125
  %140 = load i32, i32* %139, align 4, !dbg !7126
  %and121 = and i32 %140, 134217728, !dbg !7127
  store i32 %and121, i32* %quad, align 4, !dbg !7128
  %141 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7129
  %142 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7130
  %143 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7131
  %144 = load i32, i32* %quad, align 4, !dbg !7132
  %145 = load i32, i32* %x, align 4, !dbg !7133
  %conv122 = sitofp i32 %145 to float, !dbg !7133
  %146 = load i32, i32* %y, align 4, !dbg !7134
  %conv123 = sitofp i32 %146 to float, !dbg !7134
  %147 = load i32*, i32** %rz, align 8, !dbg !7135
  %148 = load i32, i32* %147, align 4, !dbg !7136
  %conv124 = sitofp i32 %148 to float, !dbg !7136
  %149 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !7137
  %150 = load i32, i32* %totpoint, align 4, !dbg !7138
  %idxprom125 = sext i32 %150 to i64, !dbg !7137
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %149, i64 %idxprom125, !dbg !7137
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx126, i64 0, i64 0, !dbg !7137
  %151 = load [3 x float]*, [3 x float]** %color, align 8, !dbg !7139
  %152 = load i32, i32* %totpoint, align 4, !dbg !7140
  %idxprom127 = sext i32 %152 to i64, !dbg !7139
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %151, i64 %idxprom127, !dbg !7139
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx128, i64 0, i64 0, !dbg !7139
  %153 = load float*, float** %area, align 8, !dbg !7141
  %154 = load i32, i32* %totpoint, align 4, !dbg !7142
  %idxprom130 = sext i32 %154 to i64, !dbg !7141
  %arrayidx131 = getelementptr inbounds float, float* %153, i64 %idxprom130, !dbg !7141
  call void @shade_sample_sss(%struct.ShadeSample* %ssamp, %struct.Material* %141, %struct.ObjectInstanceRen* %142, %struct.VlakRen* %143, i32 %144, float %conv122, float %conv123, float %conv124, float* %arraydecay, float* %arraydecay129, float* %arrayidx131), !dbg !7143
  %155 = load float*, float** %fcol, align 8, !dbg !7144
  %156 = load [3 x float]*, [3 x float]** %color, align 8, !dbg !7145
  %157 = load i32, i32* %totpoint, align 4, !dbg !7146
  %idxprom132 = sext i32 %157 to i64, !dbg !7145
  %arrayidx133 = getelementptr inbounds [3 x float], [3 x float]* %156, i64 %idxprom132, !dbg !7145
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx133, i64 0, i64 0, !dbg !7145
  call void @add_v3_v3(float* %155, float* %arraydecay134), !dbg !7147
  %158 = load float*, float** %fcol, align 8, !dbg !7148
  %arrayidx135 = getelementptr inbounds float, float* %158, i64 3, !dbg !7148
  store float 1.000000e+00, float* %arrayidx135, align 4, !dbg !7149
  %159 = load i32, i32* %totpoint, align 4, !dbg !7150
  %inc136 = add nsw i32 %159, 1, !dbg !7150
  store i32 %inc136, i32* %totpoint, align 4, !dbg !7150
  br label %if.end137, !dbg !7151

if.end137:                                        ; preds = %if.then116, %if.then113
  %160 = load i32*, i32** %rp, align 8, !dbg !7152
  %incdec.ptr = getelementptr inbounds i32, i32* %160, i32 1, !dbg !7152
  store i32* %incdec.ptr, i32** %rp, align 8, !dbg !7152
  %161 = load i32*, i32** %rz, align 8, !dbg !7153
  %incdec.ptr138 = getelementptr inbounds i32, i32* %161, i32 1, !dbg !7153
  store i32* %incdec.ptr138, i32** %rz, align 8, !dbg !7153
  %162 = load i32*, i32** %ro, align 8, !dbg !7154
  %incdec.ptr139 = getelementptr inbounds i32, i32* %162, i32 1, !dbg !7154
  store i32* %incdec.ptr139, i32** %ro, align 8, !dbg !7154
  br label %if.end140, !dbg !7155

if.end140:                                        ; preds = %if.end137, %for.body110
  %163 = load i32*, i32** %rbp, align 8, !dbg !7156
  %tobool141 = icmp ne i32* %163, null, !dbg !7156
  br i1 %tobool141, label %if.then142, label %if.end186, !dbg !7158

if.then142:                                       ; preds = %if.end140
  %164 = load i32*, i32** %rbp, align 8, !dbg !7159
  %165 = load i32, i32* %164, align 4, !dbg !7162
  %cmp143 = icmp ne i32 %165, 0, !dbg !7163
  br i1 %cmp143, label %land.lhs.true, label %if.end182, !dbg !7164

land.lhs.true:                                    ; preds = %if.then142
  %166 = load i32*, i32** %rbp, align 8, !dbg !7165
  %167 = load i32, i32* %166, align 4, !dbg !7166
  %168 = load i32*, i32** %rp, align 8, !dbg !7167
  %add.ptr = getelementptr inbounds i32, i32* %168, i64 -1, !dbg !7168
  %169 = load i32, i32* %add.ptr, align 4, !dbg !7169
  %cmp145 = icmp eq i32 %167, %169, !dbg !7170
  br i1 %cmp145, label %land.lhs.true147, label %if.then151, !dbg !7171

land.lhs.true147:                                 ; preds = %land.lhs.true
  %170 = load i32*, i32** %rbo, align 8, !dbg !7172
  %171 = load i32, i32* %170, align 4, !dbg !7173
  %172 = load i32*, i32** %ro, align 8, !dbg !7174
  %add.ptr148 = getelementptr inbounds i32, i32* %172, i64 -1, !dbg !7175
  %173 = load i32, i32* %add.ptr148, align 4, !dbg !7176
  %cmp149 = icmp eq i32 %171, %173, !dbg !7177
  br i1 %cmp149, label %if.end182, label %if.then151, !dbg !7178

if.then151:                                       ; preds = %land.lhs.true147, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi152, metadata !7179, metadata !DIExpression()), !dbg !7181
  %174 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !7182
  %objectinstance153 = getelementptr inbounds %struct.Render, %struct.Render* %174, i32 0, i32 69, !dbg !7183
  %175 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %objectinstance153, align 8, !dbg !7183
  %176 = load i32*, i32** %rbo, align 8, !dbg !7184
  %177 = load i32, i32* %176, align 4, !dbg !7185
  %idxprom154 = sext i32 %177 to i64, !dbg !7182
  %arrayidx155 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %175, i64 %idxprom154, !dbg !7182
  store %struct.ObjectInstanceRen* %arrayidx155, %struct.ObjectInstanceRen** %obi152, align 8, !dbg !7181
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr156, metadata !7186, metadata !DIExpression()), !dbg !7187
  %178 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi152, align 8, !dbg !7188
  %obr157 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %178, i32 0, i32 2, !dbg !7189
  %179 = load %struct.ObjectRen*, %struct.ObjectRen** %obr157, align 8, !dbg !7189
  store %struct.ObjectRen* %179, %struct.ObjectRen** %obr156, align 8, !dbg !7187
  %180 = load %struct.ObjectRen*, %struct.ObjectRen** %obr156, align 8, !dbg !7190
  %181 = load i32*, i32** %rbp, align 8, !dbg !7191
  %182 = load i32, i32* %181, align 4, !dbg !7192
  %sub158 = sub nsw i32 %182, 1, !dbg !7193
  %and159 = and i32 %sub158, 134217727, !dbg !7194
  %call160 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %180, i32 %and159), !dbg !7195
  store %struct.VlakRen* %call160, %struct.VlakRen** %vlr, align 8, !dbg !7196
  %183 = load i32*, i32** %rbp, align 8, !dbg !7197
  %184 = load i32, i32* %183, align 4, !dbg !7198
  %and161 = and i32 %184, 134217728, !dbg !7199
  store i32 %and161, i32* %quad, align 4, !dbg !7200
  %185 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7201
  %186 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi152, align 8, !dbg !7202
  %187 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7203
  %188 = load i32, i32* %quad, align 4, !dbg !7204
  %189 = load i32, i32* %x, align 4, !dbg !7205
  %conv162 = sitofp i32 %189 to float, !dbg !7205
  %190 = load i32, i32* %y, align 4, !dbg !7206
  %conv163 = sitofp i32 %190 to float, !dbg !7206
  %191 = load i32*, i32** %rbz, align 8, !dbg !7207
  %192 = load i32, i32* %191, align 4, !dbg !7208
  %conv164 = sitofp i32 %192 to float, !dbg !7208
  %193 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !7209
  %194 = load i32, i32* %totpoint, align 4, !dbg !7210
  %idxprom165 = sext i32 %194 to i64, !dbg !7209
  %arrayidx166 = getelementptr inbounds [3 x float], [3 x float]* %193, i64 %idxprom165, !dbg !7209
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx166, i64 0, i64 0, !dbg !7209
  %195 = load [3 x float]*, [3 x float]** %color, align 8, !dbg !7211
  %196 = load i32, i32* %totpoint, align 4, !dbg !7212
  %idxprom168 = sext i32 %196 to i64, !dbg !7211
  %arrayidx169 = getelementptr inbounds [3 x float], [3 x float]* %195, i64 %idxprom168, !dbg !7211
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx169, i64 0, i64 0, !dbg !7211
  %197 = load float*, float** %area, align 8, !dbg !7213
  %198 = load i32, i32* %totpoint, align 4, !dbg !7214
  %idxprom171 = sext i32 %198 to i64, !dbg !7213
  %arrayidx172 = getelementptr inbounds float, float* %197, i64 %idxprom171, !dbg !7213
  call void @shade_sample_sss(%struct.ShadeSample* %ssamp, %struct.Material* %185, %struct.ObjectInstanceRen* %186, %struct.VlakRen* %187, i32 %188, float %conv162, float %conv163, float %conv164, float* %arraydecay167, float* %arraydecay170, float* %arrayidx172), !dbg !7215
  %199 = load float*, float** %area, align 8, !dbg !7216
  %200 = load i32, i32* %totpoint, align 4, !dbg !7217
  %idxprom173 = sext i32 %200 to i64, !dbg !7216
  %arrayidx174 = getelementptr inbounds float, float* %199, i64 %idxprom173, !dbg !7216
  %201 = load float, float* %arrayidx174, align 4, !dbg !7216
  %fneg = fneg float %201, !dbg !7218
  %202 = load float*, float** %area, align 8, !dbg !7219
  %203 = load i32, i32* %totpoint, align 4, !dbg !7220
  %idxprom175 = sext i32 %203 to i64, !dbg !7219
  %arrayidx176 = getelementptr inbounds float, float* %202, i64 %idxprom175, !dbg !7219
  store float %fneg, float* %arrayidx176, align 4, !dbg !7221
  %204 = load float*, float** %fcol, align 8, !dbg !7222
  %205 = load [3 x float]*, [3 x float]** %color, align 8, !dbg !7223
  %206 = load i32, i32* %totpoint, align 4, !dbg !7224
  %idxprom177 = sext i32 %206 to i64, !dbg !7223
  %arrayidx178 = getelementptr inbounds [3 x float], [3 x float]* %205, i64 %idxprom177, !dbg !7223
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx178, i64 0, i64 0, !dbg !7223
  call void @add_v3_v3(float* %204, float* %arraydecay179), !dbg !7225
  %207 = load float*, float** %fcol, align 8, !dbg !7226
  %arrayidx180 = getelementptr inbounds float, float* %207, i64 3, !dbg !7226
  store float 1.000000e+00, float* %arrayidx180, align 4, !dbg !7227
  %208 = load i32, i32* %totpoint, align 4, !dbg !7228
  %inc181 = add nsw i32 %208, 1, !dbg !7228
  store i32 %inc181, i32* %totpoint, align 4, !dbg !7228
  br label %if.end182, !dbg !7229

if.end182:                                        ; preds = %if.then151, %land.lhs.true147, %if.then142
  %209 = load i32*, i32** %rbz, align 8, !dbg !7230
  %incdec.ptr183 = getelementptr inbounds i32, i32* %209, i32 1, !dbg !7230
  store i32* %incdec.ptr183, i32** %rbz, align 8, !dbg !7230
  %210 = load i32*, i32** %rbp, align 8, !dbg !7231
  %incdec.ptr184 = getelementptr inbounds i32, i32* %210, i32 1, !dbg !7231
  store i32* %incdec.ptr184, i32** %rbp, align 8, !dbg !7231
  %211 = load i32*, i32** %rbo, align 8, !dbg !7232
  %incdec.ptr185 = getelementptr inbounds i32, i32* %211, i32 1, !dbg !7232
  store i32* %incdec.ptr185, i32** %rbo, align 8, !dbg !7232
  br label %if.end186, !dbg !7233

if.end186:                                        ; preds = %if.end182, %if.end140
  br label %for.inc187, !dbg !7234

for.inc187:                                       ; preds = %if.end186
  %212 = load i32, i32* %x, align 4, !dbg !7235
  %inc188 = add nsw i32 %212, 1, !dbg !7235
  store i32 %inc188, i32* %x, align 4, !dbg !7235
  %213 = load float*, float** %fcol, align 8, !dbg !7236
  %add.ptr189 = getelementptr inbounds float, float* %213, i64 4, !dbg !7236
  store float* %add.ptr189, float** %fcol, align 8, !dbg !7236
  br label %for.cond106, !dbg !7237, !llvm.loop !7238

for.end190:                                       ; preds = %for.cond106
  %214 = load i32, i32* %y, align 4, !dbg !7240
  %and191 = and i32 %214, 1, !dbg !7242
  %tobool192 = icmp ne i32 %and191, 0, !dbg !7242
  br i1 %tobool192, label %if.then193, label %if.end198, !dbg !7243

if.then193:                                       ; preds = %for.end190
  %215 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !7244
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %215, i32 0, i32 96, !dbg !7246
  %216 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !7246
  %217 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !7247
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %217, i32 0, i32 97, !dbg !7248
  %218 = load i8*, i8** %tbh, align 8, !dbg !7248
  %call194 = call i32 %216(i8* %218), !dbg !7244
  %tobool195 = icmp ne i32 %call194, 0, !dbg !7244
  br i1 %tobool195, label %if.then196, label %if.end197, !dbg !7249

if.then196:                                       ; preds = %if.then193
  br label %for.end204, !dbg !7250

if.end197:                                        ; preds = %if.then193
  br label %if.end198, !dbg !7251

if.end198:                                        ; preds = %if.end197, %for.end190
  br label %for.inc199, !dbg !7252

for.inc199:                                       ; preds = %if.end198
  %219 = load i32, i32* %y, align 4, !dbg !7253
  %inc200 = add nsw i32 %219, 1, !dbg !7253
  store i32 %inc200, i32* %y, align 4, !dbg !7253
  %220 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7254
  %renrect201 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %220, i32 0, i32 13, !dbg !7255
  %ymax202 = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect201, i32 0, i32 3, !dbg !7256
  %221 = load volatile i32, i32* %ymax202, align 4, !dbg !7257
  %inc203 = add nsw i32 %221, 1, !dbg !7257
  store volatile i32 %inc203, i32* %ymax202, align 4, !dbg !7257
  br label %for.cond100, !dbg !7258, !llvm.loop !7259

for.end204:                                       ; preds = %if.then196, %for.cond100
  %222 = load i32, i32* %totpoint, align 4, !dbg !7261
  %cmp205 = icmp sgt i32 %222, 0, !dbg !7263
  br i1 %cmp205, label %if.then207, label %if.else, !dbg !7264

if.then207:                                       ; preds = %for.end204
  %223 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !7265
  %224 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !7267
  %225 = load [3 x float]*, [3 x float]** %color, align 8, !dbg !7268
  %226 = load float*, float** %area, align 8, !dbg !7269
  %227 = load i32, i32* %totpoint, align 4, !dbg !7270
  call void @sss_add_points(%struct.Render* %223, [3 x float]* %224, [3 x float]* %225, float* %226, i32 %227), !dbg !7271
  br label %if.end208, !dbg !7272

if.else:                                          ; preds = %for.end204
  %228 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7273
  %229 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !7275
  %230 = bitcast [3 x float]* %229 to i8*, !dbg !7275
  call void %228(i8* %230), !dbg !7273
  %231 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7276
  %232 = load [3 x float]*, [3 x float]** %color, align 8, !dbg !7277
  %233 = bitcast [3 x float]* %232 to i8*, !dbg !7277
  call void %231(i8* %233), !dbg !7276
  %234 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7278
  %235 = load float*, float** %area, align 8, !dbg !7279
  %236 = bitcast float* %235 to i8*, !dbg !7279
  call void %234(i8* %236), !dbg !7278
  br label %if.end208

if.end208:                                        ; preds = %if.else, %if.then207
  %237 = load i32, i32* %display, align 4, !dbg !7280
  %tobool209 = icmp ne i32 %237, 0, !dbg !7280
  br i1 %tobool209, label %if.then210, label %if.end217, !dbg !7282

if.then210:                                       ; preds = %if.end208
  %238 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7283
  %renrect211 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %238, i32 0, i32 13, !dbg !7285
  %ymax212 = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect211, i32 0, i32 3, !dbg !7286
  store volatile i32 0, i32* %ymax212, align 4, !dbg !7287
  %239 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7288
  %renrect213 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %239, i32 0, i32 13, !dbg !7289
  %ymin214 = getelementptr inbounds %struct.rcti, %struct.rcti* %renrect213, i32 0, i32 2, !dbg !7290
  store volatile i32 0, i32* %ymin214, align 8, !dbg !7291
  %240 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7292
  %call215 = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* @R, %struct.RenderResult* %240), !dbg !7293
  %241 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7294
  %renlay216 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %241, i32 0, i32 14, !dbg !7295
  store %struct.RenderLayer* %call215, %struct.RenderLayer** %renlay216, align 8, !dbg !7296
  br label %if.end217, !dbg !7297

if.end217:                                        ; preds = %if.then210, %if.end208
  %242 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7298
  call void @zbufshade_sss_free(%struct.RenderPart* %242), !dbg !7299
  br label %return, !dbg !7300

return:                                           ; preds = %if.end217, %if.then
  ret void, !dbg !7300
}

declare dso_local void @zbuffer_sss(%struct.RenderPart*, i32, i8*, void (i8*, i32, i32, i32, i32, i32)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @addps_sss(i8* %cb_handle, i32 %obi, i32 %facenr, i32 %x, i32 %y, i32 %z) #0 !dbg !7301 {
entry:
  %cb_handle.addr = alloca i8*, align 8
  %obi.addr = alloca i32, align 4
  %facenr.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %handle = alloca %struct.ZBufSSSHandle*, align 8
  %pa = alloca %struct.RenderPart*, align 8
  %rs = alloca i64*, align 8
  %rz = alloca i32*, align 8
  %rp = alloca i32*, align 8
  %ro = alloca i32*, align 8
  %rz59 = alloca i32*, align 8
  %rp67 = alloca i32*, align 8
  %ro74 = alloca i32*, align 8
  store i8* %cb_handle, i8** %cb_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cb_handle.addr, metadata !7302, metadata !DIExpression()), !dbg !7303
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !7304, metadata !DIExpression()), !dbg !7305
  store i32 %facenr, i32* %facenr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %facenr.addr, metadata !7306, metadata !DIExpression()), !dbg !7307
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7308, metadata !DIExpression()), !dbg !7309
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7310, metadata !DIExpression()), !dbg !7311
  store i32 %z, i32* %z.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %z.addr, metadata !7312, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.declare(metadata %struct.ZBufSSSHandle** %handle, metadata !7314, metadata !DIExpression()), !dbg !7316
  %0 = load i8*, i8** %cb_handle.addr, align 8, !dbg !7317
  %1 = bitcast i8* %0 to %struct.ZBufSSSHandle*, !dbg !7317
  store %struct.ZBufSSSHandle* %1, %struct.ZBufSSSHandle** %handle, align 8, !dbg !7316
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa, metadata !7318, metadata !DIExpression()), !dbg !7319
  %2 = load %struct.ZBufSSSHandle*, %struct.ZBufSSSHandle** %handle, align 8, !dbg !7320
  %pa1 = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %2, i32 0, i32 0, !dbg !7321
  %3 = load %struct.RenderPart*, %struct.RenderPart** %pa1, align 8, !dbg !7321
  store %struct.RenderPart* %3, %struct.RenderPart** %pa, align 8, !dbg !7319
  %4 = load i32, i32* %x.addr, align 4, !dbg !7322
  %5 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7324
  %crop = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %5, i32 0, i32 17, !dbg !7325
  %6 = load i16, i16* %crop, align 4, !dbg !7325
  %conv = sext i16 %6 to i32, !dbg !7324
  %cmp = icmp slt i32 %4, %conv, !dbg !7326
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7327

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %x.addr, align 4, !dbg !7328
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7329
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 14, !dbg !7330
  %9 = load i32, i32* %rectx, align 8, !dbg !7330
  %10 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7331
  %crop3 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %10, i32 0, i32 17, !dbg !7332
  %11 = load i16, i16* %crop3, align 4, !dbg !7332
  %conv4 = sext i16 %11 to i32, !dbg !7331
  %sub = sub nsw i32 %9, %conv4, !dbg !7333
  %cmp5 = icmp sge i32 %7, %sub, !dbg !7334
  br i1 %cmp5, label %if.then, label %if.end, !dbg !7335

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end91, !dbg !7336

if.end:                                           ; preds = %lor.lhs.false
  %12 = load i32, i32* %y.addr, align 4, !dbg !7337
  %13 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7339
  %crop7 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %13, i32 0, i32 17, !dbg !7340
  %14 = load i16, i16* %crop7, align 4, !dbg !7340
  %conv8 = sext i16 %14 to i32, !dbg !7339
  %cmp9 = icmp slt i32 %12, %conv8, !dbg !7341
  br i1 %cmp9, label %if.then17, label %lor.lhs.false11, !dbg !7342

lor.lhs.false11:                                  ; preds = %if.end
  %15 = load i32, i32* %y.addr, align 4, !dbg !7343
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7344
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 15, !dbg !7345
  %17 = load i32, i32* %recty, align 4, !dbg !7345
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7346
  %crop12 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 17, !dbg !7347
  %19 = load i16, i16* %crop12, align 4, !dbg !7347
  %conv13 = sext i16 %19 to i32, !dbg !7346
  %sub14 = sub nsw i32 %17, %conv13, !dbg !7348
  %cmp15 = icmp sge i32 %15, %sub14, !dbg !7349
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !7350

if.then17:                                        ; preds = %lor.lhs.false11, %if.end
  br label %if.end91, !dbg !7351

if.end18:                                         ; preds = %lor.lhs.false11
  %20 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7352
  %rectall = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %20, i32 0, i32 12, !dbg !7354
  %21 = load i64*, i64** %rectall, align 8, !dbg !7354
  %tobool = icmp ne i64* %21, null, !dbg !7352
  br i1 %tobool, label %if.then19, label %if.end24, !dbg !7355

if.then19:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i64** %rs, metadata !7356, metadata !DIExpression()), !dbg !7358
  %22 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7359
  %rectall20 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %22, i32 0, i32 12, !dbg !7360
  %23 = load i64*, i64** %rectall20, align 8, !dbg !7360
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7361
  %rectx21 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %24, i32 0, i32 14, !dbg !7362
  %25 = load i32, i32* %rectx21, align 8, !dbg !7362
  %26 = load i32, i32* %y.addr, align 4, !dbg !7363
  %mul = mul nsw i32 %25, %26, !dbg !7364
  %idx.ext = sext i32 %mul to i64, !dbg !7365
  %add.ptr = getelementptr inbounds i64, i64* %23, i64 %idx.ext, !dbg !7365
  %27 = load i32, i32* %x.addr, align 4, !dbg !7366
  %idx.ext22 = sext i32 %27 to i64, !dbg !7367
  %add.ptr23 = getelementptr inbounds i64, i64* %add.ptr, i64 %idx.ext22, !dbg !7367
  store i64* %add.ptr23, i64** %rs, align 8, !dbg !7358
  %28 = load %struct.ZBufSSSHandle*, %struct.ZBufSSSHandle** %handle, align 8, !dbg !7368
  %psmlist = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %28, i32 0, i32 1, !dbg !7369
  %29 = load i64*, i64** %rs, align 8, !dbg !7370
  %30 = load i32, i32* %obi.addr, align 4, !dbg !7371
  %31 = load i32, i32* %facenr.addr, align 4, !dbg !7372
  %32 = load i32, i32* %z.addr, align 4, !dbg !7373
  call void @addps(%struct.ListBase* %psmlist, i64* %29, i32 %30, i32 %31, i32 %32, i32 0, i16 zeroext 0), !dbg !7374
  %33 = load %struct.ZBufSSSHandle*, %struct.ZBufSSSHandle** %handle, align 8, !dbg !7375
  %totps = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %33, i32 0, i32 2, !dbg !7376
  %34 = load i32, i32* %totps, align 8, !dbg !7377
  %inc = add nsw i32 %34, 1, !dbg !7377
  store i32 %inc, i32* %totps, align 8, !dbg !7377
  br label %if.end24, !dbg !7378

if.end24:                                         ; preds = %if.then19, %if.end18
  %35 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7379
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %35, i32 0, i32 6, !dbg !7381
  %36 = load i32*, i32** %rectz, align 8, !dbg !7381
  %tobool25 = icmp ne i32* %36, null, !dbg !7379
  br i1 %tobool25, label %if.then26, label %if.end56, !dbg !7382

if.then26:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !7383, metadata !DIExpression()), !dbg !7385
  %37 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7386
  %rectz27 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %37, i32 0, i32 6, !dbg !7387
  %38 = load i32*, i32** %rectz27, align 8, !dbg !7387
  %39 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7388
  %rectx28 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %39, i32 0, i32 14, !dbg !7389
  %40 = load i32, i32* %rectx28, align 8, !dbg !7389
  %41 = load i32, i32* %y.addr, align 4, !dbg !7390
  %mul29 = mul nsw i32 %40, %41, !dbg !7391
  %idx.ext30 = sext i32 %mul29 to i64, !dbg !7392
  %add.ptr31 = getelementptr inbounds i32, i32* %38, i64 %idx.ext30, !dbg !7392
  %42 = load i32, i32* %x.addr, align 4, !dbg !7393
  %idx.ext32 = sext i32 %42 to i64, !dbg !7394
  %add.ptr33 = getelementptr inbounds i32, i32* %add.ptr31, i64 %idx.ext32, !dbg !7394
  store i32* %add.ptr33, i32** %rz, align 8, !dbg !7385
  call void @llvm.dbg.declare(metadata i32** %rp, metadata !7395, metadata !DIExpression()), !dbg !7396
  %43 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7397
  %rectp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %43, i32 0, i32 5, !dbg !7398
  %44 = load i32*, i32** %rectp, align 8, !dbg !7398
  %45 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7399
  %rectx34 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %45, i32 0, i32 14, !dbg !7400
  %46 = load i32, i32* %rectx34, align 8, !dbg !7400
  %47 = load i32, i32* %y.addr, align 4, !dbg !7401
  %mul35 = mul nsw i32 %46, %47, !dbg !7402
  %idx.ext36 = sext i32 %mul35 to i64, !dbg !7403
  %add.ptr37 = getelementptr inbounds i32, i32* %44, i64 %idx.ext36, !dbg !7403
  %48 = load i32, i32* %x.addr, align 4, !dbg !7404
  %idx.ext38 = sext i32 %48 to i64, !dbg !7405
  %add.ptr39 = getelementptr inbounds i32, i32* %add.ptr37, i64 %idx.ext38, !dbg !7405
  store i32* %add.ptr39, i32** %rp, align 8, !dbg !7396
  call void @llvm.dbg.declare(metadata i32** %ro, metadata !7406, metadata !DIExpression()), !dbg !7407
  %49 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7408
  %recto = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %49, i32 0, i32 4, !dbg !7409
  %50 = load i32*, i32** %recto, align 8, !dbg !7409
  %51 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7410
  %rectx40 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %51, i32 0, i32 14, !dbg !7411
  %52 = load i32, i32* %rectx40, align 8, !dbg !7411
  %53 = load i32, i32* %y.addr, align 4, !dbg !7412
  %mul41 = mul nsw i32 %52, %53, !dbg !7413
  %idx.ext42 = sext i32 %mul41 to i64, !dbg !7414
  %add.ptr43 = getelementptr inbounds i32, i32* %50, i64 %idx.ext42, !dbg !7414
  %54 = load i32, i32* %x.addr, align 4, !dbg !7415
  %idx.ext44 = sext i32 %54 to i64, !dbg !7416
  %add.ptr45 = getelementptr inbounds i32, i32* %add.ptr43, i64 %idx.ext44, !dbg !7416
  store i32* %add.ptr45, i32** %ro, align 8, !dbg !7407
  %55 = load i32, i32* %z.addr, align 4, !dbg !7417
  %56 = load i32*, i32** %rz, align 8, !dbg !7419
  %57 = load i32, i32* %56, align 4, !dbg !7420
  %cmp46 = icmp slt i32 %55, %57, !dbg !7421
  br i1 %cmp46, label %if.then48, label %if.end55, !dbg !7422

if.then48:                                        ; preds = %if.then26
  %58 = load i32*, i32** %rp, align 8, !dbg !7423
  %59 = load i32, i32* %58, align 4, !dbg !7426
  %cmp49 = icmp eq i32 %59, 0, !dbg !7427
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !7428

if.then51:                                        ; preds = %if.then48
  %60 = load %struct.ZBufSSSHandle*, %struct.ZBufSSSHandle** %handle, align 8, !dbg !7429
  %totps52 = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %60, i32 0, i32 2, !dbg !7430
  %61 = load i32, i32* %totps52, align 8, !dbg !7431
  %inc53 = add nsw i32 %61, 1, !dbg !7431
  store i32 %inc53, i32* %totps52, align 8, !dbg !7431
  br label %if.end54, !dbg !7429

if.end54:                                         ; preds = %if.then51, %if.then48
  %62 = load i32, i32* %z.addr, align 4, !dbg !7432
  %63 = load i32*, i32** %rz, align 8, !dbg !7433
  store i32 %62, i32* %63, align 4, !dbg !7434
  %64 = load i32, i32* %facenr.addr, align 4, !dbg !7435
  %65 = load i32*, i32** %rp, align 8, !dbg !7436
  store i32 %64, i32* %65, align 4, !dbg !7437
  %66 = load i32, i32* %obi.addr, align 4, !dbg !7438
  %67 = load i32*, i32** %ro, align 8, !dbg !7439
  store i32 %66, i32* %67, align 4, !dbg !7440
  br label %if.end55, !dbg !7441

if.end55:                                         ; preds = %if.end54, %if.then26
  br label %if.end56, !dbg !7442

if.end56:                                         ; preds = %if.end55, %if.end24
  %68 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7443
  %rectbackz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %68, i32 0, i32 11, !dbg !7445
  %69 = load i32*, i32** %rectbackz, align 8, !dbg !7445
  %tobool57 = icmp ne i32* %69, null, !dbg !7443
  br i1 %tobool57, label %if.then58, label %if.end91, !dbg !7446

if.then58:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata i32** %rz59, metadata !7447, metadata !DIExpression()), !dbg !7449
  %70 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7450
  %rectbackz60 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %70, i32 0, i32 11, !dbg !7451
  %71 = load i32*, i32** %rectbackz60, align 8, !dbg !7451
  %72 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7452
  %rectx61 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %72, i32 0, i32 14, !dbg !7453
  %73 = load i32, i32* %rectx61, align 8, !dbg !7453
  %74 = load i32, i32* %y.addr, align 4, !dbg !7454
  %mul62 = mul nsw i32 %73, %74, !dbg !7455
  %idx.ext63 = sext i32 %mul62 to i64, !dbg !7456
  %add.ptr64 = getelementptr inbounds i32, i32* %71, i64 %idx.ext63, !dbg !7456
  %75 = load i32, i32* %x.addr, align 4, !dbg !7457
  %idx.ext65 = sext i32 %75 to i64, !dbg !7458
  %add.ptr66 = getelementptr inbounds i32, i32* %add.ptr64, i64 %idx.ext65, !dbg !7458
  store i32* %add.ptr66, i32** %rz59, align 8, !dbg !7449
  call void @llvm.dbg.declare(metadata i32** %rp67, metadata !7459, metadata !DIExpression()), !dbg !7460
  %76 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7461
  %rectbackp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %76, i32 0, i32 10, !dbg !7462
  %77 = load i32*, i32** %rectbackp, align 8, !dbg !7462
  %78 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7463
  %rectx68 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %78, i32 0, i32 14, !dbg !7464
  %79 = load i32, i32* %rectx68, align 8, !dbg !7464
  %80 = load i32, i32* %y.addr, align 4, !dbg !7465
  %mul69 = mul nsw i32 %79, %80, !dbg !7466
  %idx.ext70 = sext i32 %mul69 to i64, !dbg !7467
  %add.ptr71 = getelementptr inbounds i32, i32* %77, i64 %idx.ext70, !dbg !7467
  %81 = load i32, i32* %x.addr, align 4, !dbg !7468
  %idx.ext72 = sext i32 %81 to i64, !dbg !7469
  %add.ptr73 = getelementptr inbounds i32, i32* %add.ptr71, i64 %idx.ext72, !dbg !7469
  store i32* %add.ptr73, i32** %rp67, align 8, !dbg !7460
  call void @llvm.dbg.declare(metadata i32** %ro74, metadata !7470, metadata !DIExpression()), !dbg !7471
  %82 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7472
  %rectbacko = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %82, i32 0, i32 9, !dbg !7473
  %83 = load i32*, i32** %rectbacko, align 8, !dbg !7473
  %84 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !7474
  %rectx75 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %84, i32 0, i32 14, !dbg !7475
  %85 = load i32, i32* %rectx75, align 8, !dbg !7475
  %86 = load i32, i32* %y.addr, align 4, !dbg !7476
  %mul76 = mul nsw i32 %85, %86, !dbg !7477
  %idx.ext77 = sext i32 %mul76 to i64, !dbg !7478
  %add.ptr78 = getelementptr inbounds i32, i32* %83, i64 %idx.ext77, !dbg !7478
  %87 = load i32, i32* %x.addr, align 4, !dbg !7479
  %idx.ext79 = sext i32 %87 to i64, !dbg !7480
  %add.ptr80 = getelementptr inbounds i32, i32* %add.ptr78, i64 %idx.ext79, !dbg !7480
  store i32* %add.ptr80, i32** %ro74, align 8, !dbg !7471
  %88 = load i32, i32* %z.addr, align 4, !dbg !7481
  %89 = load i32*, i32** %rz59, align 8, !dbg !7483
  %90 = load i32, i32* %89, align 4, !dbg !7484
  %cmp81 = icmp sge i32 %88, %90, !dbg !7485
  br i1 %cmp81, label %if.then83, label %if.end90, !dbg !7486

if.then83:                                        ; preds = %if.then58
  %91 = load i32*, i32** %rp67, align 8, !dbg !7487
  %92 = load i32, i32* %91, align 4, !dbg !7490
  %cmp84 = icmp eq i32 %92, 0, !dbg !7491
  br i1 %cmp84, label %if.then86, label %if.end89, !dbg !7492

if.then86:                                        ; preds = %if.then83
  %93 = load %struct.ZBufSSSHandle*, %struct.ZBufSSSHandle** %handle, align 8, !dbg !7493
  %totps87 = getelementptr inbounds %struct.ZBufSSSHandle, %struct.ZBufSSSHandle* %93, i32 0, i32 2, !dbg !7494
  %94 = load i32, i32* %totps87, align 8, !dbg !7495
  %inc88 = add nsw i32 %94, 1, !dbg !7495
  store i32 %inc88, i32* %totps87, align 8, !dbg !7495
  br label %if.end89, !dbg !7493

if.end89:                                         ; preds = %if.then86, %if.then83
  %95 = load i32, i32* %z.addr, align 4, !dbg !7496
  %96 = load i32*, i32** %rz59, align 8, !dbg !7497
  store i32 %95, i32* %96, align 4, !dbg !7498
  %97 = load i32, i32* %facenr.addr, align 4, !dbg !7499
  %98 = load i32*, i32** %rp67, align 8, !dbg !7500
  store i32 %97, i32* %98, align 4, !dbg !7501
  %99 = load i32, i32* %obi.addr, align 4, !dbg !7502
  %100 = load i32*, i32** %ro74, align 8, !dbg !7503
  store i32 %99, i32* %100, align 4, !dbg !7504
  br label %if.end90, !dbg !7505

if.end90:                                         ; preds = %if.end89, %if.then58
  br label %if.end91, !dbg !7506

if.end91:                                         ; preds = %if.then, %if.then17, %if.end90, %if.end56
  ret void, !dbg !7507
}

; Function Attrs: noinline nounwind uwtable
define internal void @zbufshade_sss_free(%struct.RenderPart* %pa) #0 !dbg !7508 {
entry:
  %pa.addr = alloca %struct.RenderPart*, align 8
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  %0 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7511
  %1 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7512
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %1, i32 0, i32 6, !dbg !7513
  %2 = load i32*, i32** %rectz, align 8, !dbg !7513
  %3 = bitcast i32* %2 to i8*, !dbg !7512
  call void %0(i8* %3), !dbg !7511
  %4 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7514
  %rectz1 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %4, i32 0, i32 6, !dbg !7515
  store i32* null, i32** %rectz1, align 8, !dbg !7516
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7517
  %6 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7518
  %rectp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %6, i32 0, i32 5, !dbg !7519
  %7 = load i32*, i32** %rectp, align 8, !dbg !7519
  %8 = bitcast i32* %7 to i8*, !dbg !7518
  call void %5(i8* %8), !dbg !7517
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7520
  %rectp2 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 5, !dbg !7521
  store i32* null, i32** %rectp2, align 8, !dbg !7522
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7523
  %11 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7524
  %recto = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %11, i32 0, i32 4, !dbg !7525
  %12 = load i32*, i32** %recto, align 8, !dbg !7525
  %13 = bitcast i32* %12 to i8*, !dbg !7524
  call void %10(i8* %13), !dbg !7523
  %14 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7526
  %recto3 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %14, i32 0, i32 4, !dbg !7527
  store i32* null, i32** %recto3, align 8, !dbg !7528
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7529
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7530
  %rectbackz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 11, !dbg !7531
  %17 = load i32*, i32** %rectbackz, align 8, !dbg !7531
  %18 = bitcast i32* %17 to i8*, !dbg !7530
  call void %15(i8* %18), !dbg !7529
  %19 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7532
  %rectbackz4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %19, i32 0, i32 11, !dbg !7533
  store i32* null, i32** %rectbackz4, align 8, !dbg !7534
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7535
  %21 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7536
  %rectbackp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %21, i32 0, i32 10, !dbg !7537
  %22 = load i32*, i32** %rectbackp, align 8, !dbg !7537
  %23 = bitcast i32* %22 to i8*, !dbg !7536
  call void %20(i8* %23), !dbg !7535
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7538
  %rectbackp5 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %24, i32 0, i32 10, !dbg !7539
  store i32* null, i32** %rectbackp5, align 8, !dbg !7540
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7541
  %26 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7542
  %rectbacko = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %26, i32 0, i32 9, !dbg !7543
  %27 = load i32*, i32** %rectbacko, align 8, !dbg !7543
  %28 = bitcast i32* %27 to i8*, !dbg !7542
  call void %25(i8* %28), !dbg !7541
  %29 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !7544
  %rectbacko6 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %29, i32 0, i32 9, !dbg !7545
  store i32* null, i32** %rectbacko6, align 8, !dbg !7546
  ret void, !dbg !7547
}

declare dso_local %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @shade_sample_sss(%struct.ShadeSample* %ssamp, %struct.Material* %mat, %struct.ObjectInstanceRen* %obi, %struct.VlakRen* %vlr, i32 %quad, float %x, float %y, float %z, float* %co, float* %color, float* %area) #0 !dbg !7548 {
entry:
  %ssamp.addr = alloca %struct.ShadeSample*, align 8
  %mat.addr = alloca %struct.Material*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %quad.addr = alloca i32, align 4
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %co.addr = alloca float*, align 8
  %color.addr = alloca float*, align 8
  %area.addr = alloca float*, align 8
  %shi = alloca %struct.ShadeInput*, align 8
  %shr = alloca %struct.ShadeResult, align 4
  %orthoarea = alloca float, align 4
  %nor = alloca [3 x float], align 4
  %alpha = alloca float, align 4
  %sx = alloca float, align 4
  %sy = alloca float, align 4
  store %struct.ShadeSample* %ssamp, %struct.ShadeSample** %ssamp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeSample** %ssamp.addr, metadata !7552, metadata !DIExpression()), !dbg !7553
  store %struct.Material* %mat, %struct.Material** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %mat.addr, metadata !7554, metadata !DIExpression()), !dbg !7555
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !7556, metadata !DIExpression()), !dbg !7557
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !7558, metadata !DIExpression()), !dbg !7559
  store i32 %quad, i32* %quad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quad.addr, metadata !7560, metadata !DIExpression()), !dbg !7561
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !7562, metadata !DIExpression()), !dbg !7563
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !7564, metadata !DIExpression()), !dbg !7565
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7568, metadata !DIExpression()), !dbg !7569
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  store float* %area, float** %area.addr, align 8
  call void @llvm.dbg.declare(metadata float** %area.addr, metadata !7572, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi, metadata !7574, metadata !DIExpression()), !dbg !7575
  %0 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !7576
  %shi1 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %0, i32 0, i32 2, !dbg !7577
  %arraydecay = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi1, i64 0, i64 0, !dbg !7576
  store %struct.ShadeInput* %arraydecay, %struct.ShadeInput** %shi, align 8, !dbg !7575
  call void @llvm.dbg.declare(metadata %struct.ShadeResult* %shr, metadata !7578, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.declare(metadata float* %orthoarea, metadata !7580, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !7582, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !7584, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.declare(metadata float* %sx, metadata !7586, metadata !DIExpression()), !dbg !7587
  call void @llvm.dbg.declare(metadata float* %sy, metadata !7588, metadata !DIExpression()), !dbg !7589
  %1 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7590
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %1, i32 0, i32 114, !dbg !7591
  %2 = load i16, i16* %thread, align 2, !dbg !7591
  %idxprom = sext i16 %2 to i64, !dbg !7592
  %arrayidx = getelementptr inbounds [1 x i32], [1 x i32]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 42), i64 0, i64 %idxprom, !dbg !7592
  %3 = load i32, i32* %arrayidx, align 4, !dbg !7593
  %inc = add nsw i32 %3, 1, !dbg !7593
  store i32 %inc, i32* %arrayidx, align 4, !dbg !7593
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7594
  %samplenr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 107, !dbg !7595
  store i32 %3, i32* %samplenr, align 4, !dbg !7596
  %5 = load i32, i32* %quad.addr, align 4, !dbg !7597
  %tobool = icmp ne i32 %5, 0, !dbg !7597
  br i1 %tobool, label %if.then, label %if.else, !dbg !7599

if.then:                                          ; preds = %entry
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7600
  %7 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7601
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !7602
  call void @shade_input_set_triangle_i(%struct.ShadeInput* %6, %struct.ObjectInstanceRen* %7, %struct.VlakRen* %8, i16 signext 0, i16 signext 2, i16 signext 3), !dbg !7603
  br label %if.end, !dbg !7603

if.else:                                          ; preds = %entry
  %9 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7604
  %10 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7605
  %11 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !7606
  call void @shade_input_set_triangle_i(%struct.ShadeInput* %9, %struct.ObjectInstanceRen* %10, %struct.VlakRen* %11, i16 signext 0, i16 signext 1, i16 signext 2), !dbg !7607
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load float, float* %x.addr, align 4, !dbg !7608
  %add = fadd float %12, 5.000000e-01, !dbg !7609
  store float %add, float* %sx, align 4, !dbg !7610
  %13 = load float, float* %y.addr, align 4, !dbg !7611
  %add2 = fadd float %13, 5.000000e-01, !dbg !7612
  store float %add2, float* %sy, align 4, !dbg !7613
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7614
  %osatex = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 15, !dbg !7615
  store i16 1, i16* %osatex, align 8, !dbg !7616
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !7617
  %15 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7618
  %facenor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %15, i32 0, i32 6, !dbg !7619
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %facenor, i64 0, i64 0, !dbg !7618
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay4), !dbg !7620
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7621
  %facenor5 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 6, !dbg !7622
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %facenor5, i64 0, i64 0, !dbg !7621
  %17 = load float, float* %sx, align 4, !dbg !7623
  %18 = load float, float* %sy, align 4, !dbg !7624
  call void @calc_view_vector(float* %arraydecay6, float %17, float %18), !dbg !7625
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7626
  %facenor7 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 6, !dbg !7627
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %facenor7, i64 0, i64 0, !dbg !7626
  %call = call float @normalize_v3(float* %arraydecay8), !dbg !7628
  %20 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7629
  %21 = load float, float* %x.addr, align 4, !dbg !7630
  %22 = load float, float* %y.addr, align 4, !dbg !7631
  %23 = load float, float* %sx, align 4, !dbg !7632
  %24 = load float, float* %sy, align 4, !dbg !7633
  %25 = load float, float* %z.addr, align 4, !dbg !7634
  call void @shade_input_set_viewco(%struct.ShadeInput* %20, float %21, float %22, float %23, float %24, float %25), !dbg !7635
  %26 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7636
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %26, i32 0, i32 78, !dbg !7637
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !7636
  %call10 = call float @len_v3(float* %arraydecay9), !dbg !7638
  %27 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7639
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %27, i32 0, i32 79, !dbg !7640
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !7639
  %call12 = call float @len_v3(float* %arraydecay11), !dbg !7641
  %mul = fmul float %call10, %call12, !dbg !7642
  store float %mul, float* %orthoarea, align 4, !dbg !7643
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7644
  %facenor13 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 6, !dbg !7645
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %facenor13, i64 0, i64 0, !dbg !7644
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !7646
  call void @copy_v3_v3(float* %arraydecay14, float* %arraydecay15), !dbg !7647
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7648
  %30 = load float, float* %x.addr, align 4, !dbg !7649
  %31 = load float, float* %y.addr, align 4, !dbg !7650
  %32 = load float, float* %sx, align 4, !dbg !7651
  %33 = load float, float* %sy, align 4, !dbg !7652
  %34 = load float, float* %z.addr, align 4, !dbg !7653
  call void @shade_input_set_viewco(%struct.ShadeInput* %29, float %30, float %31, float %32, float %33, float %34), !dbg !7654
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7655
  %dxco16 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 78, !dbg !7656
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %dxco16, i64 0, i64 0, !dbg !7655
  %call18 = call float @len_v3(float* %arraydecay17), !dbg !7657
  %36 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7658
  %dyco19 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %36, i32 0, i32 79, !dbg !7659
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %dyco19, i64 0, i64 0, !dbg !7658
  %call21 = call float @len_v3(float* %arraydecay20), !dbg !7660
  %mul22 = fmul float %call18, %call21, !dbg !7661
  %37 = load float, float* %orthoarea, align 4, !dbg !7662
  %mul23 = fmul float 2.000000e+00, %37, !dbg !7663
  %call24 = call float @min_ff(float %mul22, float %mul23), !dbg !7664
  %38 = load float*, float** %area.addr, align 8, !dbg !7665
  store float %call24, float* %38, align 4, !dbg !7666
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7667
  call void @shade_input_set_uv(%struct.ShadeInput* %39), !dbg !7668
  %40 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7669
  call void @shade_input_set_normals(%struct.ShadeInput* %40), !dbg !7670
  %41 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7671
  %flippednor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %41, i32 0, i32 7, !dbg !7673
  %42 = load i16, i16* %flippednor, align 8, !dbg !7673
  %tobool25 = icmp ne i16 %42, 0, !dbg !7671
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !7674

if.then26:                                        ; preds = %if.end
  %43 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7675
  call void @shade_input_flip_normals(%struct.ShadeInput* %43), !dbg !7676
  br label %if.end27, !dbg !7676

if.end27:                                         ; preds = %if.then26, %if.end
  %44 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7677
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %44, i32 0, i32 4, !dbg !7679
  %45 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7679
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %45, i32 0, i32 2, !dbg !7680
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7680
  %tobool28 = icmp ne %struct.Object* %46, null, !dbg !7677
  br i1 %tobool28, label %land.lhs.true, label %if.end36, !dbg !7681

land.lhs.true:                                    ; preds = %if.end27
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7682
  %obr29 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %47, i32 0, i32 4, !dbg !7683
  %48 = load %struct.ObjectRen*, %struct.ObjectRen** %obr29, align 8, !dbg !7683
  %ob30 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %48, i32 0, i32 2, !dbg !7684
  %49 = load %struct.Object*, %struct.Object** %ob30, align 8, !dbg !7684
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 55, !dbg !7685
  %50 = load i16, i16* %transflag, align 8, !dbg !7685
  %conv = sext i16 %50 to i32, !dbg !7682
  %and = and i32 %conv, 4, !dbg !7686
  %tobool31 = icmp ne i32 %and, 0, !dbg !7686
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !7687

if.then32:                                        ; preds = %land.lhs.true
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7688
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 16, !dbg !7690
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !7688
  call void @negate_v3(float* %arraydecay33), !dbg !7691
  %52 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7692
  %vno = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %52, i32 0, i32 17, !dbg !7693
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %vno, i64 0, i64 0, !dbg !7692
  call void @negate_v3(float* %arraydecay34), !dbg !7694
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7695
  %nmapnorm = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 66, !dbg !7696
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %nmapnorm, i64 0, i64 0, !dbg !7695
  call void @negate_v3(float* %arraydecay35), !dbg !7697
  br label %if.end36, !dbg !7698

if.end36:                                         ; preds = %if.then32, %land.lhs.true, %if.end27
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7699
  %mat37 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %54, i32 0, i32 0, !dbg !7701
  %55 = load %struct.Material*, %struct.Material** %mat37, align 8, !dbg !7701
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %55, i32 0, i32 103, !dbg !7702
  %56 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !7702
  %tobool38 = icmp ne %struct.bNodeTree* %56, null, !dbg !7699
  br i1 %tobool38, label %land.lhs.true39, label %if.end45, !dbg !7703

land.lhs.true39:                                  ; preds = %if.end36
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7704
  %mat40 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 0, !dbg !7705
  %58 = load %struct.Material*, %struct.Material** %mat40, align 8, !dbg !7705
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %58, i32 0, i32 77, !dbg !7706
  %59 = load i8, i8* %use_nodes, align 1, !dbg !7706
  %conv41 = zext i8 %59 to i32, !dbg !7704
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !7704
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !7707

if.then43:                                        ; preds = %land.lhs.true39
  %60 = load %struct.Material*, %struct.Material** %mat.addr, align 8, !dbg !7708
  %61 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7709
  %mat44 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %61, i32 0, i32 0, !dbg !7710
  store %struct.Material* %60, %struct.Material** %mat44, align 8, !dbg !7711
  br label %if.end45, !dbg !7709

if.end45:                                         ; preds = %if.then43, %land.lhs.true39, %if.end36
  %62 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7712
  call void @shade_input_init_material(%struct.ShadeInput* %62), !dbg !7713
  %63 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7714
  call void @shade_input_set_shade_texco(%struct.ShadeInput* %63), !dbg !7715
  %64 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !7716
  call void @shade_samples_do_AO(%struct.ShadeSample* %64), !dbg !7717
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7718
  call void @shade_material_loop(%struct.ShadeInput* %65, %struct.ShadeResult* %shr), !dbg !7719
  %66 = load float*, float** %co.addr, align 8, !dbg !7720
  %67 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7721
  %co46 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %67, i32 0, i32 29, !dbg !7722
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %co46, i64 0, i64 0, !dbg !7721
  call void @copy_v3_v3(float* %66, float* %arraydecay47), !dbg !7723
  %68 = load float*, float** %color.addr, align 8, !dbg !7724
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 0, !dbg !7725
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !7726
  call void @copy_v3_v3(float* %68, float* %arraydecay48), !dbg !7727
  %combined49 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %shr, i32 0, i32 0, !dbg !7728
  %arrayidx50 = getelementptr inbounds [4 x float], [4 x float]* %combined49, i64 0, i64 3, !dbg !7729
  %69 = load float, float* %arrayidx50, align 4, !dbg !7729
  store float %69, float* %alpha, align 4, !dbg !7730
  %70 = load float, float* %alpha, align 4, !dbg !7731
  %71 = load float*, float** %area.addr, align 8, !dbg !7732
  %72 = load float, float* %71, align 4, !dbg !7733
  %mul51 = fmul float %72, %70, !dbg !7733
  store float %mul51, float* %71, align 4, !dbg !7733
  ret void, !dbg !7734
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !7735 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7739, metadata !DIExpression()), !dbg !7740
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  %0 = load float*, float** %a.addr, align 8, !dbg !7743
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7743
  %1 = load float, float* %arrayidx, align 4, !dbg !7743
  %2 = load float*, float** %r.addr, align 8, !dbg !7744
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7744
  %3 = load float, float* %arrayidx1, align 4, !dbg !7745
  %add = fadd float %3, %1, !dbg !7745
  store float %add, float* %arrayidx1, align 4, !dbg !7745
  %4 = load float*, float** %a.addr, align 8, !dbg !7746
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7746
  %5 = load float, float* %arrayidx2, align 4, !dbg !7746
  %6 = load float*, float** %r.addr, align 8, !dbg !7747
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7747
  %7 = load float, float* %arrayidx3, align 4, !dbg !7748
  %add4 = fadd float %7, %5, !dbg !7748
  store float %add4, float* %arrayidx3, align 4, !dbg !7748
  %8 = load float*, float** %a.addr, align 8, !dbg !7749
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7749
  %9 = load float, float* %arrayidx5, align 4, !dbg !7749
  %10 = load float*, float** %r.addr, align 8, !dbg !7750
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !7750
  %11 = load float, float* %arrayidx6, align 4, !dbg !7751
  %add7 = fadd float %11, %9, !dbg !7751
  store float %add7, float* %arrayidx6, align 4, !dbg !7751
  ret void, !dbg !7752
}

declare dso_local void @sss_add_points(%struct.Render*, [3 x float]*, [3 x float]*, float*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @add_halo_flare(%struct.Render* %re) #0 !dbg !7753 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %rr = alloca %struct.RenderResult*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  %har = alloca %struct.HaloRen*, align 8
  %a = alloca i32, align 4
  %mode = alloca i32, align 4
  %do_draw = alloca i8, align 1
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr, metadata !7758, metadata !DIExpression()), !dbg !7759
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7760
  %result = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 9, !dbg !7761
  %1 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !7761
  store %struct.RenderResult* %1, %struct.RenderResult** %rr, align 8, !dbg !7759
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !7762, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har, metadata !7764, metadata !DIExpression()), !dbg !7765
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7766, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7768, metadata !DIExpression()), !dbg !7769
  %2 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7770
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %2, i32 0, i32 12, !dbg !7772
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !7773
  %3 = load i8*, i8** %first, align 8, !dbg !7773
  %4 = bitcast i8* %3 to %struct.RenderLayer*, !dbg !7770
  store %struct.RenderLayer* %4, %struct.RenderLayer** %rl, align 8, !dbg !7774
  br label %for.cond, !dbg !7775

for.cond:                                         ; preds = %for.inc18, %entry
  %5 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !7776
  %tobool = icmp ne %struct.RenderLayer* %5, null, !dbg !7778
  br i1 %tobool, label %for.body, label %for.end19, !dbg !7778

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %do_draw, metadata !7779, metadata !DIExpression()), !dbg !7781
  store i8 0, i8* %do_draw, align 1, !dbg !7781
  %6 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !7782
  %layflag = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %6, i32 0, i32 6, !dbg !7784
  %7 = load i32, i32* %layflag, align 8, !dbg !7784
  %and = and i32 %7, 4, !dbg !7785
  %cmp = icmp eq i32 %and, 0, !dbg !7786
  br i1 %cmp, label %if.then, label %if.end, !dbg !7787

if.then:                                          ; preds = %for.body
  br label %for.inc18, !dbg !7788

if.end:                                           ; preds = %for.body
  %8 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !7789
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %8, i32 0, i32 11, !dbg !7791
  %9 = load float*, float** %rectf, align 8, !dbg !7791
  %cmp1 = icmp eq float* %9, null, !dbg !7792
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7793

if.then2:                                         ; preds = %if.end
  br label %for.inc18, !dbg !7794

if.end3:                                          ; preds = %if.end
  %10 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !7795
  store i32 %10, i32* %mode, align 4, !dbg !7796
  %11 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !7797
  %and4 = and i32 %11, -1025, !dbg !7797
  store i32 %and4, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !7797
  call void @project_renderdata(%struct.Render* @R, void (float*, [4 x float]*, float*)* @projectverto, i8 zeroext 0, float 0.000000e+00, i8 zeroext 0), !dbg !7798
  store i32 0, i32* %a, align 4, !dbg !7799
  br label %for.cond5, !dbg !7801

for.cond5:                                        ; preds = %for.inc, %if.end3
  %12 = load i32, i32* %a, align 4, !dbg !7802
  %13 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 62), align 8, !dbg !7804
  %cmp6 = icmp slt i32 %12, %13, !dbg !7805
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !7806

for.body7:                                        ; preds = %for.cond5
  %14 = load %struct.HaloRen**, %struct.HaloRen*** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 65), align 8, !dbg !7807
  %15 = load i32, i32* %a, align 4, !dbg !7809
  %idxprom = sext i32 %15 to i64, !dbg !7810
  %arrayidx = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %14, i64 %idxprom, !dbg !7810
  %16 = load %struct.HaloRen*, %struct.HaloRen** %arrayidx, align 8, !dbg !7810
  store %struct.HaloRen* %16, %struct.HaloRen** %har, align 8, !dbg !7811
  %17 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !7812
  %flarec = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %17, i32 0, i32 25, !dbg !7814
  %18 = load i16, i16* %flarec, align 4, !dbg !7814
  %conv = sext i16 %18 to i32, !dbg !7812
  %tobool8 = icmp ne i32 %conv, 0, !dbg !7812
  br i1 %tobool8, label %land.lhs.true, label %if.end14, !dbg !7815

land.lhs.true:                                    ; preds = %for.body7
  %19 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !7816
  %lay = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %19, i32 0, i32 28, !dbg !7817
  %20 = load i32, i32* %lay, align 8, !dbg !7817
  %21 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !7818
  %lay9 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %21, i32 0, i32 3, !dbg !7819
  %22 = load i32, i32* %lay9, align 4, !dbg !7819
  %and10 = and i32 %20, %22, !dbg !7820
  %tobool11 = icmp ne i32 %and10, 0, !dbg !7820
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !7821

if.then12:                                        ; preds = %land.lhs.true
  store i8 1, i8* %do_draw, align 1, !dbg !7822
  %23 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7824
  %24 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !7825
  %rectf13 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %24, i32 0, i32 11, !dbg !7826
  %25 = load float*, float** %rectf13, align 8, !dbg !7826
  %26 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !7827
  call void @renderflare(%struct.RenderResult* %23, float* %25, %struct.HaloRen* %26), !dbg !7828
  br label %if.end14, !dbg !7829

if.end14:                                         ; preds = %if.then12, %land.lhs.true, %for.body7
  br label %for.inc, !dbg !7830

for.inc:                                          ; preds = %if.end14
  %27 = load i32, i32* %a, align 4, !dbg !7831
  %inc = add nsw i32 %27, 1, !dbg !7831
  store i32 %inc, i32* %a, align 4, !dbg !7831
  br label %for.cond5, !dbg !7832, !llvm.loop !7833

for.end:                                          ; preds = %for.cond5
  %28 = load i8, i8* %do_draw, align 1, !dbg !7835
  %tobool15 = icmp ne i8 %28, 0, !dbg !7835
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7837

if.then16:                                        ; preds = %for.end
  %29 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !7838
  %30 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7840
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %30, i32 0, i32 14, !dbg !7841
  store %struct.RenderLayer* %29, %struct.RenderLayer** %renlay, align 8, !dbg !7842
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7843
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 86, !dbg !7844
  %32 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !7844
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7845
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 87, !dbg !7846
  %34 = load i8*, i8** %duh, align 8, !dbg !7846
  %35 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !7847
  call void %32(i8* %34, %struct.RenderResult* %35, %struct.rcti* null), !dbg !7843
  br label %if.end17, !dbg !7848

if.end17:                                         ; preds = %if.then16, %for.end
  %36 = load i32, i32* %mode, align 4, !dbg !7849
  store i32 %36, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !7850
  br label %for.inc18, !dbg !7851

for.inc18:                                        ; preds = %if.end17, %if.then2, %if.then
  %37 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !7852
  %next = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %37, i32 0, i32 0, !dbg !7853
  %38 = load %struct.RenderLayer*, %struct.RenderLayer** %next, align 8, !dbg !7853
  store %struct.RenderLayer* %38, %struct.RenderLayer** %rl, align 8, !dbg !7854
  br label %for.cond, !dbg !7855, !llvm.loop !7856

for.end19:                                        ; preds = %for.cond
  ret void, !dbg !7858
}

declare dso_local void @project_renderdata(%struct.Render*, void (float*, [4 x float]*, float*)*, i8 zeroext, float, i8 zeroext) #2

declare dso_local void @projectverto(float*, [4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @renderflare(%struct.RenderResult* %rr, float* %rectf, %struct.HaloRen* %har) #0 !dbg !7859 {
entry:
  %rr.addr = alloca %struct.RenderResult*, align 8
  %rectf.addr = alloca float*, align 8
  %har.addr = alloca %struct.HaloRen*, align 8
  %fla = alloca %struct.HaloRen, align 8
  %ma = alloca %struct.Material*, align 8
  %rc = alloca float*, align 8
  %rad = alloca float, align 4
  %alfa = alloca float, align 4
  %visifac = alloca float, align 4
  %vec = alloca [3 x float], align 4
  %b = alloca i32, align 4
  %type = alloca i32, align 4
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !7862, metadata !DIExpression()), !dbg !7863
  store float* %rectf, float** %rectf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf.addr, metadata !7864, metadata !DIExpression()), !dbg !7865
  store %struct.HaloRen* %har, %struct.HaloRen** %har.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har.addr, metadata !7866, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.declare(metadata %struct.HaloRen* %fla, metadata !7868, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !7870, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.declare(metadata float** %rc, metadata !7872, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.declare(metadata float* %rad, metadata !7874, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.declare(metadata float* %alfa, metadata !7876, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.declare(metadata float* %visifac, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !7880, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7882, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7884, metadata !DIExpression()), !dbg !7885
  %0 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7886
  %1 = bitcast %struct.HaloRen* %fla to i8*, !dbg !7887
  %2 = bitcast %struct.HaloRen* %0 to i8*, !dbg !7887
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 128, i1 false), !dbg !7887
  %flarec = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 25, !dbg !7888
  store i16 0, i16* %flarec, align 4, !dbg !7889
  %ringc = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 23, !dbg !7890
  store i8 0, i8* %ringc, align 1, !dbg !7891
  %linec = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 22, !dbg !7892
  store i8 0, i8* %linec, align 8, !dbg !7893
  %3 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7894
  %rad1 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %3, i32 0, i32 5, !dbg !7895
  %4 = load float, float* %rad1, align 8, !dbg !7895
  store float %4, float* %rad, align 4, !dbg !7896
  %5 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7897
  %alfa2 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %5, i32 0, i32 2, !dbg !7898
  %6 = load float, float* %alfa2, align 4, !dbg !7898
  store float %6, float* %alfa, align 4, !dbg !7899
  %7 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 24), align 8, !dbg !7900
  %8 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7901
  %pixels = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %8, i32 0, i32 27, !dbg !7902
  %9 = load i32, i32* %pixels, align 4, !dbg !7902
  %conv = sitofp i32 %9 to float, !dbg !7903
  %mul = fmul float %7, %conv, !dbg !7904
  store float %mul, float* %visifac, align 4, !dbg !7905
  %10 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7906
  %rad3 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %10, i32 0, i32 5, !dbg !7907
  %11 = load float, float* %rad3, align 8, !dbg !7907
  %12 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7908
  %rad4 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %12, i32 0, i32 5, !dbg !7909
  %13 = load float, float* %rad4, align 8, !dbg !7909
  %mul5 = fmul float %11, %13, !dbg !7910
  %14 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7911
  %rad6 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %14, i32 0, i32 5, !dbg !7912
  %15 = load float, float* %rad6, align 8, !dbg !7912
  %mul7 = fmul float %mul5, %15, !dbg !7913
  %16 = load float, float* %visifac, align 4, !dbg !7914
  %div = fdiv float %16, %mul7, !dbg !7914
  store float %div, float* %visifac, align 4, !dbg !7914
  %17 = load float, float* %visifac, align 4, !dbg !7915
  %18 = load float, float* %visifac, align 4, !dbg !7916
  %mul8 = fmul float %18, %17, !dbg !7916
  store float %mul8, float* %visifac, align 4, !dbg !7916
  %19 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7917
  %mat = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %19, i32 0, i32 29, !dbg !7918
  %20 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7918
  store %struct.Material* %20, %struct.Material** %ma, align 8, !dbg !7919
  %21 = load float, float* %rad, align 4, !dbg !7920
  %22 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7921
  %flaresize = getelementptr inbounds %struct.Material, %struct.Material* %22, i32 0, i32 60, !dbg !7922
  %23 = load float, float* %flaresize, align 8, !dbg !7922
  %mul9 = fmul float %21, %23, !dbg !7923
  %24 = load float, float* %visifac, align 4, !dbg !7924
  %mul10 = fmul float %mul9, %24, !dbg !7925
  %25 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7926
  %rad11 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %25, i32 0, i32 5, !dbg !7927
  store float %mul10, float* %rad11, align 8, !dbg !7928
  %26 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7929
  %rad12 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %26, i32 0, i32 5, !dbg !7930
  %27 = load float, float* %rad12, align 8, !dbg !7930
  %28 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7931
  %rad13 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %28, i32 0, i32 5, !dbg !7932
  %29 = load float, float* %rad13, align 8, !dbg !7932
  %mul14 = fmul float %27, %29, !dbg !7933
  %30 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7934
  %radsq = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %30, i32 0, i32 6, !dbg !7935
  store float %mul14, float* %radsq, align 4, !dbg !7936
  %zs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 15, !dbg !7937
  store i32 0, i32* %zs, align 8, !dbg !7938
  %31 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7939
  %zs15 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %31, i32 0, i32 15, !dbg !7940
  store i32 0, i32* %zs15, align 8, !dbg !7941
  %32 = load float, float* %alfa, align 4, !dbg !7942
  %33 = load float, float* %visifac, align 4, !dbg !7943
  %mul16 = fmul float %32, %33, !dbg !7944
  %34 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7945
  %alfa17 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %34, i32 0, i32 2, !dbg !7946
  store float %mul16, float* %alfa17, align 4, !dbg !7947
  %35 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !7948
  %36 = load float*, float** %rectf.addr, align 8, !dbg !7949
  %37 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7950
  call void @renderhalo_post(%struct.RenderResult* %35, float* %36, %struct.HaloRen* %37), !dbg !7951
  %38 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7952
  %seed2 = getelementptr inbounds %struct.Material, %struct.Material* %38, i32 0, i32 40, !dbg !7953
  %39 = load i8, i8* %seed2, align 1, !dbg !7953
  %conv18 = zext i8 %39 to i32, !dbg !7952
  %idx.ext = sext i32 %conv18 to i64, !dbg !7954
  %add.ptr = getelementptr inbounds float, float* getelementptr inbounds ([0 x float], [0 x float]* @hashvectf, i64 0, i64 0), i64 %idx.ext, !dbg !7954
  store float* %add.ptr, float** %rc, align 8, !dbg !7955
  store i32 1, i32* %b, align 4, !dbg !7956
  br label %for.cond, !dbg !7958

for.cond:                                         ; preds = %for.inc, %entry
  %40 = load i32, i32* %b, align 4, !dbg !7959
  %41 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !7961
  %flarec19 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %41, i32 0, i32 25, !dbg !7962
  %42 = load i16, i16* %flarec19, align 4, !dbg !7962
  %conv20 = sext i16 %42 to i32, !dbg !7961
  %cmp = icmp slt i32 %40, %conv20, !dbg !7963
  br i1 %cmp, label %for.body, label %for.end, !dbg !7964

for.body:                                         ; preds = %for.cond
  %43 = load float*, float** %rc, align 8, !dbg !7965
  %arrayidx = getelementptr inbounds float, float* %43, i64 0, !dbg !7965
  %44 = load float, float* %arrayidx, align 4, !dbg !7965
  %45 = call float @llvm.fabs.f32(float %44), !dbg !7967
  %r = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 14, !dbg !7968
  store float %45, float* %r, align 4, !dbg !7969
  %46 = load float*, float** %rc, align 8, !dbg !7970
  %arrayidx22 = getelementptr inbounds float, float* %46, i64 1, !dbg !7970
  %47 = load float, float* %arrayidx22, align 4, !dbg !7970
  %48 = call float @llvm.fabs.f32(float %47), !dbg !7971
  %g = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 13, !dbg !7972
  store float %48, float* %g, align 8, !dbg !7973
  %49 = load float*, float** %rc, align 8, !dbg !7974
  %arrayidx23 = getelementptr inbounds float, float* %49, i64 2, !dbg !7974
  %50 = load float, float* %arrayidx23, align 4, !dbg !7974
  %51 = call float @llvm.fabs.f32(float %50), !dbg !7975
  %b24 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 12, !dbg !7976
  store float %51, float* %b24, align 4, !dbg !7977
  %52 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !7978
  %flareboost = getelementptr inbounds %struct.Material, %struct.Material* %52, i32 0, i32 62, !dbg !7979
  %53 = load float, float* %flareboost, align 8, !dbg !7979
  %54 = load float, float* %alfa, align 4, !dbg !7980
  %55 = load float, float* %visifac, align 4, !dbg !7981
  %mul25 = fmul float %54, %55, !dbg !7982
  %56 = load float*, float** %rc, align 8, !dbg !7983
  %arrayidx26 = getelementptr inbounds float, float* %56, i64 3, !dbg !7983
  %57 = load float, float* %arrayidx26, align 4, !dbg !7983
  %mul27 = fmul float %mul25, %57, !dbg !7984
  %58 = call float @llvm.fabs.f32(float %mul27), !dbg !7985
  %mul28 = fmul float %53, %58, !dbg !7986
  %alfa29 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 2, !dbg !7987
  store float %mul28, float* %alfa29, align 4, !dbg !7988
  %59 = load float*, float** %rc, align 8, !dbg !7989
  %arrayidx30 = getelementptr inbounds float, float* %59, i64 7, !dbg !7989
  %60 = load float, float* %arrayidx30, align 4, !dbg !7989
  %mul31 = fmul float 7.000000e+01, %60, !dbg !7990
  %61 = call float @llvm.fabs.f32(float %mul31), !dbg !7991
  %add = fadd float 2.000000e+01, %61, !dbg !7992
  %hard = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 11, !dbg !7993
  store float %add, float* %hard, align 8, !dbg !7994
  %tex = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 21, !dbg !7995
  store i8 0, i8* %tex, align 1, !dbg !7996
  %62 = load float*, float** %rc, align 8, !dbg !7997
  %arrayidx32 = getelementptr inbounds float, float* %62, i64 6, !dbg !7997
  %63 = load float, float* %arrayidx32, align 4, !dbg !7997
  %mul33 = fmul float 0x400F333340000000, %63, !dbg !7998
  %64 = call float @llvm.fabs.f32(float %mul33), !dbg !7999
  %conv34 = fptosi float %64 to i32, !dbg !8000
  store i32 %conv34, i32* %type, align 4, !dbg !8001
  %65 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8002
  %subsize = getelementptr inbounds %struct.Material, %struct.Material* %65, i32 0, i32 61, !dbg !8003
  %66 = load float, float* %subsize, align 4, !dbg !8003
  %67 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8004
  %rad35 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %67, i32 0, i32 5, !dbg !8005
  %68 = load float, float* %rad35, align 8, !dbg !8005
  %mul36 = fmul float 2.000000e+00, %68, !dbg !8006
  %69 = load float*, float** %rc, align 8, !dbg !8007
  %arrayidx37 = getelementptr inbounds float, float* %69, i64 4, !dbg !8007
  %70 = load float, float* %arrayidx37, align 4, !dbg !8007
  %mul38 = fmul float %mul36, %70, !dbg !8008
  %71 = call float @llvm.fabs.f32(float %mul38), !dbg !8009
  %call = call float @sqrtf(float %71) #5, !dbg !8010
  %mul39 = fmul float %66, %call, !dbg !8011
  %rad40 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 5, !dbg !8012
  store float %mul39, float* %rad40, align 8, !dbg !8013
  %72 = load i32, i32* %type, align 4, !dbg !8014
  %cmp41 = icmp eq i32 %72, 3, !dbg !8016
  br i1 %cmp41, label %if.then, label %if.end, !dbg !8017

if.then:                                          ; preds = %for.body
  %rad43 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 5, !dbg !8018
  %73 = load float, float* %rad43, align 8, !dbg !8020
  %mul44 = fmul float %73, 3.000000e+00, !dbg !8020
  store float %mul44, float* %rad43, align 8, !dbg !8020
  %74 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 20), align 8, !dbg !8021
  %div45 = sdiv i32 %74, 10, !dbg !8022
  %conv46 = sitofp i32 %div45 to float, !dbg !8023
  %rad47 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 5, !dbg !8024
  %75 = load float, float* %rad47, align 8, !dbg !8025
  %add48 = fadd float %75, %conv46, !dbg !8025
  store float %add48, float* %rad47, align 8, !dbg !8025
  br label %if.end, !dbg !8026

if.end:                                           ; preds = %if.then, %for.body
  %rad49 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 5, !dbg !8027
  %76 = load float, float* %rad49, align 8, !dbg !8027
  %rad50 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 5, !dbg !8028
  %77 = load float, float* %rad50, align 8, !dbg !8028
  %mul51 = fmul float %76, %77, !dbg !8029
  %radsq52 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 6, !dbg !8030
  store float %mul51, float* %radsq52, align 4, !dbg !8031
  %78 = load float*, float** %rc, align 8, !dbg !8032
  %arrayidx53 = getelementptr inbounds float, float* %78, i64 5, !dbg !8032
  %79 = load float, float* %arrayidx53, align 4, !dbg !8032
  %mul54 = fmul float 0x3FF6666660000000, %79, !dbg !8033
  %80 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8034
  %xs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %80, i32 0, i32 3, !dbg !8035
  %81 = load float, float* %xs, align 8, !dbg !8035
  %82 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !8036
  %div55 = sdiv i32 %82, 2, !dbg !8037
  %conv56 = sitofp i32 %div55 to float, !dbg !8038
  %sub = fsub float %81, %conv56, !dbg !8039
  %mul57 = fmul float %mul54, %sub, !dbg !8040
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8041
  store float %mul57, float* %arrayidx58, align 4, !dbg !8042
  %83 = load float*, float** %rc, align 8, !dbg !8043
  %arrayidx59 = getelementptr inbounds float, float* %83, i64 5, !dbg !8043
  %84 = load float, float* %arrayidx59, align 4, !dbg !8043
  %mul60 = fmul float 0x3FF6666660000000, %84, !dbg !8044
  %85 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8045
  %ys = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %85, i32 0, i32 4, !dbg !8046
  %86 = load float, float* %ys, align 4, !dbg !8046
  %87 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !8047
  %div61 = sdiv i32 %87, 2, !dbg !8048
  %conv62 = sitofp i32 %div61 to float, !dbg !8049
  %sub63 = fsub float %86, %conv62, !dbg !8050
  %mul64 = fmul float %mul60, %sub63, !dbg !8051
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !8052
  store float %mul64, float* %arrayidx65, align 4, !dbg !8053
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8054
  %88 = load float, float* %arrayidx66, align 4, !dbg !8054
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8055
  %89 = load float, float* %arrayidx67, align 4, !dbg !8055
  %mul68 = fmul float %88, %89, !dbg !8056
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !8057
  %90 = load float, float* %arrayidx69, align 4, !dbg !8057
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !8058
  %91 = load float, float* %arrayidx70, align 4, !dbg !8058
  %mul71 = fmul float %90, %91, !dbg !8059
  %add72 = fadd float %mul68, %mul71, !dbg !8060
  %add73 = fadd float %add72, 1.000000e+00, !dbg !8061
  %call74 = call float @sqrtf(float %add73) #5, !dbg !8062
  %mul75 = fmul float 3.200000e+01, %call74, !dbg !8063
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !8064
  store float %mul75, float* %arrayidx76, align 4, !dbg !8065
  %92 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 13), align 4, !dbg !8066
  %div77 = sdiv i32 %92, 2, !dbg !8067
  %conv78 = sitofp i32 %div77 to float, !dbg !8068
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8069
  %93 = load float, float* %arrayidx79, align 4, !dbg !8069
  %add80 = fadd float %conv78, %93, !dbg !8070
  %94 = load float*, float** %rc, align 8, !dbg !8071
  %arrayidx81 = getelementptr inbounds float, float* %94, i64 8, !dbg !8071
  %95 = load float, float* %arrayidx81, align 4, !dbg !8071
  %add82 = fadd float 0x3FF3333340000000, %95, !dbg !8072
  %96 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 20), align 8, !dbg !8073
  %conv83 = sitofp i32 %96 to float, !dbg !8074
  %mul84 = fmul float %add82, %conv83, !dbg !8075
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !8076
  %97 = load float, float* %arrayidx85, align 4, !dbg !8076
  %mul86 = fmul float %mul84, %97, !dbg !8077
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !8078
  %98 = load float, float* %arrayidx87, align 4, !dbg !8078
  %div88 = fdiv float %mul86, %98, !dbg !8079
  %add89 = fadd float %add80, %div88, !dbg !8080
  %xs90 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 3, !dbg !8081
  store float %add89, float* %xs90, align 8, !dbg !8082
  %99 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 14), align 8, !dbg !8083
  %div91 = sdiv i32 %99, 2, !dbg !8084
  %conv92 = sitofp i32 %div91 to float, !dbg !8085
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !8086
  %100 = load float, float* %arrayidx93, align 4, !dbg !8086
  %add94 = fadd float %conv92, %100, !dbg !8087
  %101 = load float*, float** %rc, align 8, !dbg !8088
  %arrayidx95 = getelementptr inbounds float, float* %101, i64 8, !dbg !8088
  %102 = load float, float* %arrayidx95, align 4, !dbg !8088
  %add96 = fadd float 0x3FF3333340000000, %102, !dbg !8089
  %103 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 20), align 8, !dbg !8090
  %conv97 = sitofp i32 %103 to float, !dbg !8091
  %mul98 = fmul float %add96, %conv97, !dbg !8092
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !8093
  %104 = load float, float* %arrayidx99, align 4, !dbg !8093
  %mul100 = fmul float %mul98, %104, !dbg !8094
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !8095
  %105 = load float, float* %arrayidx101, align 4, !dbg !8095
  %div102 = fdiv float %mul100, %105, !dbg !8096
  %add103 = fadd float %add94, %div102, !dbg !8097
  %ys104 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 4, !dbg !8098
  store float %add103, float* %ys104, align 4, !dbg !8099
  %106 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 4), align 8, !dbg !8100
  %conv105 = sext i16 %106 to i32, !dbg !8102
  %and = and i32 %conv105, 4, !dbg !8103
  %tobool = icmp ne i32 %and, 0, !dbg !8103
  br i1 %tobool, label %if.then106, label %if.end115, !dbg !8104

if.then106:                                       ; preds = %if.end
  %107 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 47), align 8, !dbg !8105
  %and107 = and i32 %107, 8192, !dbg !8108
  %tobool108 = icmp ne i32 %and107, 0, !dbg !8108
  br i1 %tobool108, label %if.then109, label %if.else, !dbg !8109

if.then109:                                       ; preds = %if.then106
  %ys110 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 4, !dbg !8110
  %108 = load float, float* %ys110, align 4, !dbg !8111
  %add111 = fadd float %108, 5.000000e-01, !dbg !8111
  store float %add111, float* %ys110, align 4, !dbg !8111
  br label %if.end114, !dbg !8112

if.else:                                          ; preds = %if.then106
  %ys112 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 4, !dbg !8113
  %109 = load float, float* %ys112, align 4, !dbg !8114
  %sub113 = fsub float %109, 5.000000e-01, !dbg !8114
  store float %sub113, float* %ys112, align 4, !dbg !8114
  br label %if.end114

if.end114:                                        ; preds = %if.else, %if.then109
  br label %if.end115, !dbg !8115

if.end115:                                        ; preds = %if.end114, %if.end
  %110 = load i32, i32* %type, align 4, !dbg !8116
  %and116 = and i32 %110, 1, !dbg !8118
  %tobool117 = icmp ne i32 %and116, 0, !dbg !8118
  br i1 %tobool117, label %if.then118, label %if.else120, !dbg !8119

if.then118:                                       ; preds = %if.end115
  %type119 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 19, !dbg !8120
  store i8 8, i8* %type119, align 1, !dbg !8121
  br label %if.end122, !dbg !8122

if.else120:                                       ; preds = %if.end115
  %type121 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 19, !dbg !8123
  store i8 0, i8* %type121, align 1, !dbg !8124
  br label %if.end122

if.end122:                                        ; preds = %if.else120, %if.then118
  %111 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !8125
  %112 = load float*, float** %rectf.addr, align 8, !dbg !8126
  call void @renderhalo_post(%struct.RenderResult* %111, float* %112, %struct.HaloRen* %fla), !dbg !8127
  %alfa123 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 2, !dbg !8128
  %113 = load float, float* %alfa123, align 4, !dbg !8129
  %mul124 = fmul float %113, 5.000000e-01, !dbg !8129
  store float %mul124, float* %alfa123, align 4, !dbg !8129
  %114 = load i32, i32* %type, align 4, !dbg !8130
  %and125 = and i32 %114, 2, !dbg !8132
  %tobool126 = icmp ne i32 %and125, 0, !dbg !8132
  br i1 %tobool126, label %if.then127, label %if.else129, !dbg !8133

if.then127:                                       ; preds = %if.end122
  %type128 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 19, !dbg !8134
  store i8 8, i8* %type128, align 1, !dbg !8135
  br label %if.end131, !dbg !8136

if.else129:                                       ; preds = %if.end122
  %type130 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %fla, i32 0, i32 19, !dbg !8137
  store i8 0, i8* %type130, align 1, !dbg !8138
  br label %if.end131

if.end131:                                        ; preds = %if.else129, %if.then127
  %115 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !8139
  %116 = load float*, float** %rectf.addr, align 8, !dbg !8140
  call void @renderhalo_post(%struct.RenderResult* %115, float* %116, %struct.HaloRen* %fla), !dbg !8141
  %117 = load float*, float** %rc, align 8, !dbg !8142
  %add.ptr132 = getelementptr inbounds float, float* %117, i64 7, !dbg !8142
  store float* %add.ptr132, float** %rc, align 8, !dbg !8142
  br label %for.inc, !dbg !8143

for.inc:                                          ; preds = %if.end131
  %118 = load i32, i32* %b, align 4, !dbg !8144
  %inc = add nsw i32 %118, 1, !dbg !8144
  store i32 %inc, i32* %b, align 4, !dbg !8144
  br label %for.cond, !dbg !8145, !llvm.loop !8146

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8148
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @addps(%struct.ListBase* %lb, i64* %rd, i32 %obi, i32 %facenr, i32 %z, i32 %maskz, i16 zeroext %mask) #0 !dbg !8149 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %rd.addr = alloca i64*, align 8
  %obi.addr = alloca i32, align 4
  %facenr.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %maskz.addr = alloca i32, align 4
  %mask.addr = alloca i16, align 2
  %psm = alloca %struct.PixStrMain*, align 8
  %ps = alloca %struct.PixStr*, align 8
  %last = alloca %struct.PixStr*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  store i64* %rd, i64** %rd.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %rd.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  store i32 %obi, i32* %obi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %obi.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  store i32 %facenr, i32* %facenr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %facenr.addr, metadata !8158, metadata !DIExpression()), !dbg !8159
  store i32 %z, i32* %z.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %z.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  store i32 %maskz, i32* %maskz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maskz.addr, metadata !8162, metadata !DIExpression()), !dbg !8163
  store i16 %mask, i16* %mask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mask.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.declare(metadata %struct.PixStrMain** %psm, metadata !8166, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.declare(metadata %struct.PixStr** %ps, metadata !8168, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.declare(metadata %struct.PixStr** %last, metadata !8170, metadata !DIExpression()), !dbg !8171
  store %struct.PixStr* null, %struct.PixStr** %last, align 8, !dbg !8171
  %0 = load i64*, i64** %rd.addr, align 8, !dbg !8172
  %1 = load i64, i64* %0, align 8, !dbg !8174
  %tobool = icmp ne i64 %1, 0, !dbg !8174
  br i1 %tobool, label %if.then, label %if.end9, !dbg !8175

if.then:                                          ; preds = %entry
  %2 = load i64*, i64** %rd.addr, align 8, !dbg !8176
  %3 = load i64, i64* %2, align 8, !dbg !8178
  %4 = inttoptr i64 %3 to %struct.PixStr*, !dbg !8179
  store %struct.PixStr* %4, %struct.PixStr** %ps, align 8, !dbg !8180
  br label %while.cond, !dbg !8181

while.cond:                                       ; preds = %if.end, %if.then
  %5 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8182
  %tobool1 = icmp ne %struct.PixStr* %5, null, !dbg !8181
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8181

while.body:                                       ; preds = %while.cond
  %6 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8183
  %obi2 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %6, i32 0, i32 1, !dbg !8186
  %7 = load i32, i32* %obi2, align 8, !dbg !8186
  %8 = load i32, i32* %obi.addr, align 4, !dbg !8187
  %cmp = icmp eq i32 %7, %8, !dbg !8188
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8189

land.lhs.true:                                    ; preds = %while.body
  %9 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8190
  %facenr3 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %9, i32 0, i32 2, !dbg !8191
  %10 = load i32, i32* %facenr3, align 4, !dbg !8191
  %11 = load i32, i32* %facenr.addr, align 4, !dbg !8192
  %cmp4 = icmp eq i32 %10, %11, !dbg !8193
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !8194

if.then5:                                         ; preds = %land.lhs.true
  %12 = load i16, i16* %mask.addr, align 2, !dbg !8195
  %conv = zext i16 %12 to i32, !dbg !8195
  %13 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8197
  %mask6 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %13, i32 0, i32 5, !dbg !8198
  %14 = load i16, i16* %mask6, align 8, !dbg !8199
  %conv7 = zext i16 %14 to i32, !dbg !8199
  %or = or i32 %conv7, %conv, !dbg !8199
  %conv8 = trunc i32 %or to i16, !dbg !8199
  store i16 %conv8, i16* %mask6, align 8, !dbg !8199
  br label %return, !dbg !8200

if.end:                                           ; preds = %land.lhs.true, %while.body
  %15 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8201
  store %struct.PixStr* %15, %struct.PixStr** %last, align 8, !dbg !8202
  %16 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8203
  %next = getelementptr inbounds %struct.PixStr, %struct.PixStr* %16, i32 0, i32 0, !dbg !8204
  %17 = load %struct.PixStr*, %struct.PixStr** %next, align 8, !dbg !8204
  store %struct.PixStr* %17, %struct.PixStr** %ps, align 8, !dbg !8205
  br label %while.cond, !dbg !8181, !llvm.loop !8206

while.end:                                        ; preds = %while.cond
  br label %if.end9, !dbg !8208

if.end9:                                          ; preds = %while.end, %entry
  %18 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8209
  %last10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %18, i32 0, i32 1, !dbg !8210
  %19 = load i8*, i8** %last10, align 8, !dbg !8210
  %20 = bitcast i8* %19 to %struct.PixStrMain*, !dbg !8209
  store %struct.PixStrMain* %20, %struct.PixStrMain** %psm, align 8, !dbg !8211
  %21 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !8212
  %counter = getelementptr inbounds %struct.PixStrMain, %struct.PixStrMain* %21, i32 0, i32 3, !dbg !8214
  %22 = load i32, i32* %counter, align 8, !dbg !8214
  %cmp11 = icmp eq i32 %22, 4095, !dbg !8215
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !8216

if.then13:                                        ; preds = %if.end9
  %23 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8217
  %call = call %struct.PixStrMain* @addpsmain(%struct.ListBase* %23), !dbg !8218
  store %struct.PixStrMain* %call, %struct.PixStrMain** %psm, align 8, !dbg !8219
  br label %if.end14, !dbg !8220

if.end14:                                         ; preds = %if.then13, %if.end9
  %24 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !8221
  %ps15 = getelementptr inbounds %struct.PixStrMain, %struct.PixStrMain* %24, i32 0, i32 2, !dbg !8222
  %25 = load %struct.PixStr*, %struct.PixStr** %ps15, align 8, !dbg !8222
  %26 = load %struct.PixStrMain*, %struct.PixStrMain** %psm, align 8, !dbg !8223
  %counter16 = getelementptr inbounds %struct.PixStrMain, %struct.PixStrMain* %26, i32 0, i32 3, !dbg !8224
  %27 = load i32, i32* %counter16, align 8, !dbg !8225
  %inc = add nsw i32 %27, 1, !dbg !8225
  store i32 %inc, i32* %counter16, align 8, !dbg !8225
  %idx.ext = sext i32 %27 to i64, !dbg !8226
  %add.ptr = getelementptr inbounds %struct.PixStr, %struct.PixStr* %25, i64 %idx.ext, !dbg !8226
  store %struct.PixStr* %add.ptr, %struct.PixStr** %ps, align 8, !dbg !8227
  %28 = load %struct.PixStr*, %struct.PixStr** %last, align 8, !dbg !8228
  %tobool17 = icmp ne %struct.PixStr* %28, null, !dbg !8228
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !8230

if.then18:                                        ; preds = %if.end14
  %29 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8231
  %30 = load %struct.PixStr*, %struct.PixStr** %last, align 8, !dbg !8232
  %next19 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %30, i32 0, i32 0, !dbg !8233
  store %struct.PixStr* %29, %struct.PixStr** %next19, align 8, !dbg !8234
  br label %if.end20, !dbg !8232

if.else:                                          ; preds = %if.end14
  %31 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8235
  %32 = ptrtoint %struct.PixStr* %31 to i64, !dbg !8236
  %33 = load i64*, i64** %rd.addr, align 8, !dbg !8237
  store i64 %32, i64* %33, align 8, !dbg !8238
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then18
  %34 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8239
  %next21 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %34, i32 0, i32 0, !dbg !8240
  store %struct.PixStr* null, %struct.PixStr** %next21, align 8, !dbg !8241
  %35 = load i32, i32* %obi.addr, align 4, !dbg !8242
  %36 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8243
  %obi22 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %36, i32 0, i32 1, !dbg !8244
  store i32 %35, i32* %obi22, align 8, !dbg !8245
  %37 = load i32, i32* %facenr.addr, align 4, !dbg !8246
  %38 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8247
  %facenr23 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %38, i32 0, i32 2, !dbg !8248
  store i32 %37, i32* %facenr23, align 4, !dbg !8249
  %39 = load i32, i32* %z.addr, align 4, !dbg !8250
  %40 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8251
  %z24 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %40, i32 0, i32 3, !dbg !8252
  store i32 %39, i32* %z24, align 8, !dbg !8253
  %41 = load i32, i32* %maskz.addr, align 4, !dbg !8254
  %42 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8255
  %maskz25 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %42, i32 0, i32 4, !dbg !8256
  store i32 %41, i32* %maskz25, align 4, !dbg !8257
  %43 = load i16, i16* %mask.addr, align 2, !dbg !8258
  %44 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8259
  %mask26 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %44, i32 0, i32 5, !dbg !8260
  store i16 %43, i16* %mask26, align 8, !dbg !8261
  %45 = load %struct.PixStr*, %struct.PixStr** %ps, align 8, !dbg !8262
  %shadfac = getelementptr inbounds %struct.PixStr, %struct.PixStr* %45, i32 0, i32 6, !dbg !8263
  store i16 0, i16* %shadfac, align 2, !dbg !8264
  br label %return, !dbg !8265

return:                                           ; preds = %if.end20, %if.then5
  ret void, !dbg !8265
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_filt_passes(%struct.RenderLayer* %rl, i32 %curmask, i32 %rectx, i32 %offset, %struct.ShadeInput* %shi, %struct.ShadeResult* %shr) #0 !dbg !8266 {
entry:
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %curmask.addr = alloca i32, align 4
  %rectx.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %shr.addr = alloca %struct.ShadeResult*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %fp = alloca float*, align 8
  %col = alloca float*, align 8
  %pixsize = alloca i32, align 4
  %mult = alloca float, align 4
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !8269, metadata !DIExpression()), !dbg !8270
  store i32 %curmask, i32* %curmask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %curmask.addr, metadata !8271, metadata !DIExpression()), !dbg !8272
  store i32 %rectx, i32* %rectx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rectx.addr, metadata !8273, metadata !DIExpression()), !dbg !8274
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !8277, metadata !DIExpression()), !dbg !8278
  store %struct.ShadeResult* %shr, %struct.ShadeResult** %shr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr.addr, metadata !8279, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !8281, metadata !DIExpression()), !dbg !8282
  %0 = load i32, i32* %curmask.addr, align 4, !dbg !8283
  %1 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8284
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %1, i32 0, i32 0, !dbg !8285
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !8284
  %2 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !8286
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %2, i32 0, i32 11, !dbg !8287
  %3 = load float*, float** %rectf, align 8, !dbg !8287
  %4 = load i32, i32* %offset.addr, align 4, !dbg !8288
  %mul = mul nsw i32 4, %4, !dbg !8289
  %idx.ext = sext i32 %mul to i64, !dbg !8290
  %add.ptr = getelementptr inbounds float, float* %3, i64 %idx.ext, !dbg !8290
  %5 = load i32, i32* %rectx.addr, align 4, !dbg !8291
  call void @add_filt_fmask(i32 %0, float* %arraydecay, float* %add.ptr, i32 %5), !dbg !8292
  %6 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !8293
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %6, i32 0, i32 18, !dbg !8295
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !8296
  %7 = load i8*, i8** %first, align 8, !dbg !8296
  %8 = bitcast i8* %7 to %struct.RenderPass*, !dbg !8293
  store %struct.RenderPass* %8, %struct.RenderPass** %rpass, align 8, !dbg !8297
  br label %for.cond, !dbg !8298

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8299
  %tobool = icmp ne %struct.RenderPass* %9, null, !dbg !8301
  br i1 %tobool, label %for.body, label %for.end, !dbg !8301

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %fp, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.declare(metadata float** %col, metadata !8305, metadata !DIExpression()), !dbg !8306
  store float* null, float** %col, align 8, !dbg !8306
  call void @llvm.dbg.declare(metadata i32* %pixsize, metadata !8307, metadata !DIExpression()), !dbg !8308
  store i32 3, i32* %pixsize, align 4, !dbg !8308
  %10 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8309
  %passtype = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %10, i32 0, i32 2, !dbg !8310
  %11 = load i32, i32* %passtype, align 8, !dbg !8310
  switch i32 %11, label %sw.epilog [
    i32 2, label %sw.bb
    i32 4, label %sw.bb3
    i32 65536, label %sw.bb6
    i32 8, label %sw.bb8
    i32 16, label %sw.bb10
    i32 32, label %sw.bb12
    i32 64, label %sw.bb14
    i32 131072, label %sw.bb16
    i32 8192, label %sw.bb18
    i32 128, label %sw.bb20
    i32 1024, label %sw.bb22
    i32 256, label %sw.bb24
    i32 4096, label %sw.bb26
    i32 2048, label %sw.bb53
    i32 262144, label %sw.bb64
    i32 16384, label %sw.bb78
    i32 512, label %sw.bb79
    i32 32768, label %sw.bb194
  ], !dbg !8311

sw.bb:                                            ; preds = %for.body
  %12 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8312
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %12, i32 0, i32 6, !dbg !8314
  %13 = load float*, float** %rect, align 8, !dbg !8314
  %14 = load i32, i32* %offset.addr, align 4, !dbg !8315
  %idx.ext1 = sext i32 %14 to i64, !dbg !8316
  %add.ptr2 = getelementptr inbounds float, float* %13, i64 %idx.ext1, !dbg !8316
  store float* %add.ptr2, float** %fp, align 8, !dbg !8317
  %15 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8318
  %z = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %15, i32 0, i32 4, !dbg !8319
  %16 = load float, float* %z, align 4, !dbg !8319
  %17 = load float*, float** %fp, align 8, !dbg !8320
  store float %16, float* %17, align 4, !dbg !8321
  br label %sw.epilog, !dbg !8322

sw.bb3:                                           ; preds = %for.body
  %18 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8323
  %col4 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %18, i32 0, i32 1, !dbg !8324
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %col4, i64 0, i64 0, !dbg !8323
  store float* %arraydecay5, float** %col, align 8, !dbg !8325
  store i32 4, i32* %pixsize, align 4, !dbg !8326
  br label %sw.epilog, !dbg !8327

sw.bb6:                                           ; preds = %for.body
  %19 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8328
  %emit = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %19, i32 0, i32 5, !dbg !8329
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %emit, i64 0, i64 0, !dbg !8328
  store float* %arraydecay7, float** %col, align 8, !dbg !8330
  br label %sw.epilog, !dbg !8331

sw.bb8:                                           ; preds = %for.body
  %20 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8332
  %diff = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %20, i32 0, i32 6, !dbg !8333
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %diff, i64 0, i64 0, !dbg !8332
  store float* %arraydecay9, float** %col, align 8, !dbg !8334
  br label %sw.epilog, !dbg !8335

sw.bb10:                                          ; preds = %for.body
  %21 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8336
  %spec = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %21, i32 0, i32 8, !dbg !8337
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %spec, i64 0, i64 0, !dbg !8336
  store float* %arraydecay11, float** %col, align 8, !dbg !8338
  br label %sw.epilog, !dbg !8339

sw.bb12:                                          ; preds = %for.body
  %22 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8340
  %shad = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %22, i32 0, i32 9, !dbg !8341
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %shad, i64 0, i64 0, !dbg !8340
  store float* %arraydecay13, float** %col, align 8, !dbg !8342
  br label %sw.epilog, !dbg !8343

sw.bb14:                                          ; preds = %for.body
  %23 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8344
  %ao = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %23, i32 0, i32 10, !dbg !8345
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !8344
  store float* %arraydecay15, float** %col, align 8, !dbg !8346
  br label %sw.epilog, !dbg !8347

sw.bb16:                                          ; preds = %for.body
  %24 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8348
  %env = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %24, i32 0, i32 11, !dbg !8349
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !8348
  store float* %arraydecay17, float** %col, align 8, !dbg !8350
  br label %sw.epilog, !dbg !8351

sw.bb18:                                          ; preds = %for.body
  %25 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8352
  %indirect = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %25, i32 0, i32 12, !dbg !8353
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !8352
  store float* %arraydecay19, float** %col, align 8, !dbg !8354
  br label %sw.epilog, !dbg !8355

sw.bb20:                                          ; preds = %for.body
  %26 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8356
  %refl = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %26, i32 0, i32 13, !dbg !8357
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %refl, i64 0, i64 0, !dbg !8356
  store float* %arraydecay21, float** %col, align 8, !dbg !8358
  br label %sw.epilog, !dbg !8359

sw.bb22:                                          ; preds = %for.body
  %27 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8360
  %refr = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %27, i32 0, i32 14, !dbg !8361
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %refr, i64 0, i64 0, !dbg !8360
  store float* %arraydecay23, float** %col, align 8, !dbg !8362
  br label %sw.epilog, !dbg !8363

sw.bb24:                                          ; preds = %for.body
  %28 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8364
  %nor = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %28, i32 0, i32 15, !dbg !8365
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !8364
  store float* %arraydecay25, float** %col, align 8, !dbg !8366
  br label %sw.epilog, !dbg !8367

sw.bb26:                                          ; preds = %for.body
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8368
  %totuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 74, !dbg !8370
  %30 = load i32, i32* %totuv, align 8, !dbg !8370
  %tobool27 = icmp ne i32 %30, 0, !dbg !8368
  br i1 %tobool27, label %if.then, label %if.end, !dbg !8371

if.then:                                          ; preds = %sw.bb26
  call void @llvm.dbg.declare(metadata float* %mult, metadata !8372, metadata !DIExpression()), !dbg !8374
  %31 = load i32, i32* %curmask.addr, align 4, !dbg !8375
  %conv = trunc i32 %31 to i16, !dbg !8375
  %call = call i32 @count_mask(i16 zeroext %conv), !dbg !8376
  %conv28 = sitofp i32 %call to float, !dbg !8377
  %32 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !8378
  %conv29 = sitofp i16 %32 to float, !dbg !8379
  %div = fdiv float %conv28, %conv29, !dbg !8380
  store float %div, float* %mult, align 4, !dbg !8374
  %33 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8381
  %rect30 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %33, i32 0, i32 6, !dbg !8382
  %34 = load float*, float** %rect30, align 8, !dbg !8382
  %35 = load i32, i32* %offset.addr, align 4, !dbg !8383
  %mul31 = mul nsw i32 3, %35, !dbg !8384
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !8385
  %add.ptr33 = getelementptr inbounds float, float* %34, i64 %idx.ext32, !dbg !8385
  store float* %add.ptr33, float** %fp, align 8, !dbg !8386
  %36 = load float, float* %mult, align 4, !dbg !8387
  %37 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8388
  %uv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %37, i32 0, i32 72, !dbg !8389
  %38 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8390
  %actuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %38, i32 0, i32 76, !dbg !8391
  %39 = load i32, i32* %actuv, align 8, !dbg !8391
  %idxprom = sext i32 %39 to i64, !dbg !8388
  %arrayidx = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv, i64 0, i64 %idxprom, !dbg !8388
  %uv34 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %arrayidx, i32 0, i32 2, !dbg !8392
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %uv34, i64 0, i64 0, !dbg !8388
  %40 = load float, float* %arrayidx35, align 8, !dbg !8388
  %mul36 = fmul float 5.000000e-01, %40, !dbg !8393
  %add = fadd float 5.000000e-01, %mul36, !dbg !8394
  %mul37 = fmul float %36, %add, !dbg !8395
  %41 = load float*, float** %fp, align 8, !dbg !8396
  %arrayidx38 = getelementptr inbounds float, float* %41, i64 0, !dbg !8396
  %42 = load float, float* %arrayidx38, align 4, !dbg !8397
  %add39 = fadd float %42, %mul37, !dbg !8397
  store float %add39, float* %arrayidx38, align 4, !dbg !8397
  %43 = load float, float* %mult, align 4, !dbg !8398
  %44 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8399
  %uv40 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %44, i32 0, i32 72, !dbg !8400
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8401
  %actuv41 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 76, !dbg !8402
  %46 = load i32, i32* %actuv41, align 8, !dbg !8402
  %idxprom42 = sext i32 %46 to i64, !dbg !8399
  %arrayidx43 = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv40, i64 0, i64 %idxprom42, !dbg !8399
  %uv44 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %arrayidx43, i32 0, i32 2, !dbg !8403
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %uv44, i64 0, i64 1, !dbg !8399
  %47 = load float, float* %arrayidx45, align 4, !dbg !8399
  %mul46 = fmul float 5.000000e-01, %47, !dbg !8404
  %add47 = fadd float 5.000000e-01, %mul46, !dbg !8405
  %mul48 = fmul float %43, %add47, !dbg !8406
  %48 = load float*, float** %fp, align 8, !dbg !8407
  %arrayidx49 = getelementptr inbounds float, float* %48, i64 1, !dbg !8407
  %49 = load float, float* %arrayidx49, align 4, !dbg !8408
  %add50 = fadd float %49, %mul48, !dbg !8408
  store float %add50, float* %arrayidx49, align 4, !dbg !8408
  %50 = load float, float* %mult, align 4, !dbg !8409
  %51 = load float*, float** %fp, align 8, !dbg !8410
  %arrayidx51 = getelementptr inbounds float, float* %51, i64 2, !dbg !8410
  %52 = load float, float* %arrayidx51, align 4, !dbg !8411
  %add52 = fadd float %52, %50, !dbg !8411
  store float %add52, float* %arrayidx51, align 4, !dbg !8411
  br label %if.end, !dbg !8412

if.end:                                           ; preds = %if.then, %sw.bb26
  br label %sw.epilog, !dbg !8413

sw.bb53:                                          ; preds = %for.body
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8414
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 1, !dbg !8416
  %54 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !8416
  %tobool54 = icmp ne %struct.VlakRen* %54, null, !dbg !8414
  br i1 %tobool54, label %if.then55, label %if.end63, !dbg !8417

if.then55:                                        ; preds = %sw.bb53
  %55 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8418
  %rect56 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %55, i32 0, i32 6, !dbg !8420
  %56 = load float*, float** %rect56, align 8, !dbg !8420
  %57 = load i32, i32* %offset.addr, align 4, !dbg !8421
  %idx.ext57 = sext i32 %57 to i64, !dbg !8422
  %add.ptr58 = getelementptr inbounds float, float* %56, i64 %idx.ext57, !dbg !8422
  store float* %add.ptr58, float** %fp, align 8, !dbg !8423
  %58 = load float*, float** %fp, align 8, !dbg !8424
  %59 = load float, float* %58, align 4, !dbg !8426
  %cmp = fcmp oeq float %59, 0.000000e+00, !dbg !8427
  br i1 %cmp, label %if.then60, label %if.end62, !dbg !8428

if.then60:                                        ; preds = %if.then55
  %60 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8429
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %60, i32 0, i32 4, !dbg !8430
  %61 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8430
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %61, i32 0, i32 2, !dbg !8431
  %62 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8431
  %index = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 96, !dbg !8432
  %63 = load i16, i16* %index, align 4, !dbg !8432
  %conv61 = sitofp i16 %63 to float, !dbg !8433
  %64 = load float*, float** %fp, align 8, !dbg !8434
  store float %conv61, float* %64, align 4, !dbg !8435
  br label %if.end62, !dbg !8436

if.end62:                                         ; preds = %if.then60, %if.then55
  br label %if.end63, !dbg !8437

if.end63:                                         ; preds = %if.end62, %sw.bb53
  br label %sw.epilog, !dbg !8438

sw.bb64:                                          ; preds = %for.body
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8439
  %vlr65 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %65, i32 0, i32 1, !dbg !8441
  %66 = load %struct.VlakRen*, %struct.VlakRen** %vlr65, align 8, !dbg !8441
  %tobool66 = icmp ne %struct.VlakRen* %66, null, !dbg !8439
  br i1 %tobool66, label %if.then67, label %if.end77, !dbg !8442

if.then67:                                        ; preds = %sw.bb64
  %67 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8443
  %rect68 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %67, i32 0, i32 6, !dbg !8445
  %68 = load float*, float** %rect68, align 8, !dbg !8445
  %69 = load i32, i32* %offset.addr, align 4, !dbg !8446
  %idx.ext69 = sext i32 %69 to i64, !dbg !8447
  %add.ptr70 = getelementptr inbounds float, float* %68, i64 %idx.ext69, !dbg !8447
  store float* %add.ptr70, float** %fp, align 8, !dbg !8448
  %70 = load float*, float** %fp, align 8, !dbg !8449
  %71 = load float, float* %70, align 4, !dbg !8451
  %cmp71 = fcmp oeq float %71, 0.000000e+00, !dbg !8452
  br i1 %cmp71, label %if.then73, label %if.end76, !dbg !8453

if.then73:                                        ; preds = %if.then67
  %72 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !8454
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %72, i32 0, i32 0, !dbg !8455
  %73 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !8455
  %index74 = getelementptr inbounds %struct.Material, %struct.Material* %73, i32 0, i32 127, !dbg !8456
  %74 = load i16, i16* %index74, align 2, !dbg !8456
  %conv75 = sitofp i16 %74 to float, !dbg !8457
  %75 = load float*, float** %fp, align 8, !dbg !8458
  store float %conv75, float* %75, align 4, !dbg !8459
  br label %if.end76, !dbg !8460

if.end76:                                         ; preds = %if.then73, %if.then67
  br label %if.end77, !dbg !8461

if.end77:                                         ; preds = %if.end76, %sw.bb64
  br label %sw.epilog, !dbg !8462

sw.bb78:                                          ; preds = %for.body
  %76 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8463
  %mist = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %76, i32 0, i32 3, !dbg !8464
  store float* %mist, float** %col, align 8, !dbg !8465
  store i32 1, i32* %pixsize, align 4, !dbg !8466
  br label %sw.epilog, !dbg !8467

sw.bb79:                                          ; preds = %for.body
  %77 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8468
  %rect80 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %77, i32 0, i32 6, !dbg !8470
  %78 = load float*, float** %rect80, align 8, !dbg !8470
  %79 = load i32, i32* %offset.addr, align 4, !dbg !8471
  %mul81 = mul nsw i32 4, %79, !dbg !8472
  %idx.ext82 = sext i32 %mul81 to i64, !dbg !8473
  %add.ptr83 = getelementptr inbounds float, float* %78, i64 %idx.ext82, !dbg !8473
  store float* %add.ptr83, float** %fp, align 8, !dbg !8474
  %80 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8475
  %winspeed = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %80, i32 0, i32 16, !dbg !8475
  %arrayidx84 = getelementptr inbounds [4 x float], [4 x float]* %winspeed, i64 0, i64 0, !dbg !8475
  %81 = load float, float* %arrayidx84, align 4, !dbg !8475
  %cmp85 = fcmp olt float %81, 0.000000e+00, !dbg !8475
  br i1 %cmp85, label %cond.true, label %cond.false, !dbg !8475

cond.true:                                        ; preds = %sw.bb79
  %82 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8475
  %winspeed87 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %82, i32 0, i32 16, !dbg !8475
  %arrayidx88 = getelementptr inbounds [4 x float], [4 x float]* %winspeed87, i64 0, i64 0, !dbg !8475
  %83 = load float, float* %arrayidx88, align 4, !dbg !8475
  %fneg = fneg float %83, !dbg !8475
  br label %cond.end, !dbg !8475

cond.false:                                       ; preds = %sw.bb79
  %84 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8475
  %winspeed89 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %84, i32 0, i32 16, !dbg !8475
  %arrayidx90 = getelementptr inbounds [4 x float], [4 x float]* %winspeed89, i64 0, i64 0, !dbg !8475
  %85 = load float, float* %arrayidx90, align 4, !dbg !8475
  br label %cond.end, !dbg !8475

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %85, %cond.false ], !dbg !8475
  %86 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8477
  %winspeed91 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %86, i32 0, i32 16, !dbg !8477
  %arrayidx92 = getelementptr inbounds [4 x float], [4 x float]* %winspeed91, i64 0, i64 1, !dbg !8477
  %87 = load float, float* %arrayidx92, align 4, !dbg !8477
  %cmp93 = fcmp olt float %87, 0.000000e+00, !dbg !8477
  br i1 %cmp93, label %cond.true95, label %cond.false99, !dbg !8477

cond.true95:                                      ; preds = %cond.end
  %88 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8477
  %winspeed96 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %88, i32 0, i32 16, !dbg !8477
  %arrayidx97 = getelementptr inbounds [4 x float], [4 x float]* %winspeed96, i64 0, i64 1, !dbg !8477
  %89 = load float, float* %arrayidx97, align 4, !dbg !8477
  %fneg98 = fneg float %89, !dbg !8477
  br label %cond.end102, !dbg !8477

cond.false99:                                     ; preds = %cond.end
  %90 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8477
  %winspeed100 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %90, i32 0, i32 16, !dbg !8477
  %arrayidx101 = getelementptr inbounds [4 x float], [4 x float]* %winspeed100, i64 0, i64 1, !dbg !8477
  %91 = load float, float* %arrayidx101, align 4, !dbg !8477
  br label %cond.end102, !dbg !8477

cond.end102:                                      ; preds = %cond.false99, %cond.true95
  %cond103 = phi float [ %fneg98, %cond.true95 ], [ %91, %cond.false99 ], !dbg !8477
  %add104 = fadd float %cond, %cond103, !dbg !8478
  %92 = load float*, float** %fp, align 8, !dbg !8479
  %arrayidx105 = getelementptr inbounds float, float* %92, i64 0, !dbg !8479
  %93 = load float, float* %arrayidx105, align 4, !dbg !8479
  %cmp106 = fcmp olt float %93, 0.000000e+00, !dbg !8479
  br i1 %cmp106, label %cond.true108, label %cond.false111, !dbg !8479

cond.true108:                                     ; preds = %cond.end102
  %94 = load float*, float** %fp, align 8, !dbg !8479
  %arrayidx109 = getelementptr inbounds float, float* %94, i64 0, !dbg !8479
  %95 = load float, float* %arrayidx109, align 4, !dbg !8479
  %fneg110 = fneg float %95, !dbg !8479
  br label %cond.end113, !dbg !8479

cond.false111:                                    ; preds = %cond.end102
  %96 = load float*, float** %fp, align 8, !dbg !8479
  %arrayidx112 = getelementptr inbounds float, float* %96, i64 0, !dbg !8479
  %97 = load float, float* %arrayidx112, align 4, !dbg !8479
  br label %cond.end113, !dbg !8479

cond.end113:                                      ; preds = %cond.false111, %cond.true108
  %cond114 = phi float [ %fneg110, %cond.true108 ], [ %97, %cond.false111 ], !dbg !8479
  %98 = load float*, float** %fp, align 8, !dbg !8480
  %arrayidx115 = getelementptr inbounds float, float* %98, i64 1, !dbg !8480
  %99 = load float, float* %arrayidx115, align 4, !dbg !8480
  %cmp116 = fcmp olt float %99, 0.000000e+00, !dbg !8480
  br i1 %cmp116, label %cond.true118, label %cond.false121, !dbg !8480

cond.true118:                                     ; preds = %cond.end113
  %100 = load float*, float** %fp, align 8, !dbg !8480
  %arrayidx119 = getelementptr inbounds float, float* %100, i64 1, !dbg !8480
  %101 = load float, float* %arrayidx119, align 4, !dbg !8480
  %fneg120 = fneg float %101, !dbg !8480
  br label %cond.end123, !dbg !8480

cond.false121:                                    ; preds = %cond.end113
  %102 = load float*, float** %fp, align 8, !dbg !8480
  %arrayidx122 = getelementptr inbounds float, float* %102, i64 1, !dbg !8480
  %103 = load float, float* %arrayidx122, align 4, !dbg !8480
  br label %cond.end123, !dbg !8480

cond.end123:                                      ; preds = %cond.false121, %cond.true118
  %cond124 = phi float [ %fneg120, %cond.true118 ], [ %103, %cond.false121 ], !dbg !8480
  %add125 = fadd float %cond114, %cond124, !dbg !8481
  %cmp126 = fcmp olt float %add104, %add125, !dbg !8482
  br i1 %cmp126, label %if.then128, label %if.end135, !dbg !8483

if.then128:                                       ; preds = %cond.end123
  %104 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8484
  %winspeed129 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %104, i32 0, i32 16, !dbg !8486
  %arrayidx130 = getelementptr inbounds [4 x float], [4 x float]* %winspeed129, i64 0, i64 0, !dbg !8484
  %105 = load float, float* %arrayidx130, align 4, !dbg !8484
  %106 = load float*, float** %fp, align 8, !dbg !8487
  %arrayidx131 = getelementptr inbounds float, float* %106, i64 0, !dbg !8487
  store float %105, float* %arrayidx131, align 4, !dbg !8488
  %107 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8489
  %winspeed132 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %107, i32 0, i32 16, !dbg !8490
  %arrayidx133 = getelementptr inbounds [4 x float], [4 x float]* %winspeed132, i64 0, i64 1, !dbg !8489
  %108 = load float, float* %arrayidx133, align 4, !dbg !8489
  %109 = load float*, float** %fp, align 8, !dbg !8491
  %arrayidx134 = getelementptr inbounds float, float* %109, i64 1, !dbg !8491
  store float %108, float* %arrayidx134, align 4, !dbg !8492
  br label %if.end135, !dbg !8493

if.end135:                                        ; preds = %if.then128, %cond.end123
  %110 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8494
  %winspeed136 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %110, i32 0, i32 16, !dbg !8494
  %arrayidx137 = getelementptr inbounds [4 x float], [4 x float]* %winspeed136, i64 0, i64 2, !dbg !8494
  %111 = load float, float* %arrayidx137, align 4, !dbg !8494
  %cmp138 = fcmp olt float %111, 0.000000e+00, !dbg !8494
  br i1 %cmp138, label %cond.true140, label %cond.false144, !dbg !8494

cond.true140:                                     ; preds = %if.end135
  %112 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8494
  %winspeed141 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %112, i32 0, i32 16, !dbg !8494
  %arrayidx142 = getelementptr inbounds [4 x float], [4 x float]* %winspeed141, i64 0, i64 2, !dbg !8494
  %113 = load float, float* %arrayidx142, align 4, !dbg !8494
  %fneg143 = fneg float %113, !dbg !8494
  br label %cond.end147, !dbg !8494

cond.false144:                                    ; preds = %if.end135
  %114 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8494
  %winspeed145 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %114, i32 0, i32 16, !dbg !8494
  %arrayidx146 = getelementptr inbounds [4 x float], [4 x float]* %winspeed145, i64 0, i64 2, !dbg !8494
  %115 = load float, float* %arrayidx146, align 4, !dbg !8494
  br label %cond.end147, !dbg !8494

cond.end147:                                      ; preds = %cond.false144, %cond.true140
  %cond148 = phi float [ %fneg143, %cond.true140 ], [ %115, %cond.false144 ], !dbg !8494
  %116 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8496
  %winspeed149 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %116, i32 0, i32 16, !dbg !8496
  %arrayidx150 = getelementptr inbounds [4 x float], [4 x float]* %winspeed149, i64 0, i64 3, !dbg !8496
  %117 = load float, float* %arrayidx150, align 4, !dbg !8496
  %cmp151 = fcmp olt float %117, 0.000000e+00, !dbg !8496
  br i1 %cmp151, label %cond.true153, label %cond.false157, !dbg !8496

cond.true153:                                     ; preds = %cond.end147
  %118 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8496
  %winspeed154 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %118, i32 0, i32 16, !dbg !8496
  %arrayidx155 = getelementptr inbounds [4 x float], [4 x float]* %winspeed154, i64 0, i64 3, !dbg !8496
  %119 = load float, float* %arrayidx155, align 4, !dbg !8496
  %fneg156 = fneg float %119, !dbg !8496
  br label %cond.end160, !dbg !8496

cond.false157:                                    ; preds = %cond.end147
  %120 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8496
  %winspeed158 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %120, i32 0, i32 16, !dbg !8496
  %arrayidx159 = getelementptr inbounds [4 x float], [4 x float]* %winspeed158, i64 0, i64 3, !dbg !8496
  %121 = load float, float* %arrayidx159, align 4, !dbg !8496
  br label %cond.end160, !dbg !8496

cond.end160:                                      ; preds = %cond.false157, %cond.true153
  %cond161 = phi float [ %fneg156, %cond.true153 ], [ %121, %cond.false157 ], !dbg !8496
  %add162 = fadd float %cond148, %cond161, !dbg !8497
  %122 = load float*, float** %fp, align 8, !dbg !8498
  %arrayidx163 = getelementptr inbounds float, float* %122, i64 2, !dbg !8498
  %123 = load float, float* %arrayidx163, align 4, !dbg !8498
  %cmp164 = fcmp olt float %123, 0.000000e+00, !dbg !8498
  br i1 %cmp164, label %cond.true166, label %cond.false169, !dbg !8498

cond.true166:                                     ; preds = %cond.end160
  %124 = load float*, float** %fp, align 8, !dbg !8498
  %arrayidx167 = getelementptr inbounds float, float* %124, i64 2, !dbg !8498
  %125 = load float, float* %arrayidx167, align 4, !dbg !8498
  %fneg168 = fneg float %125, !dbg !8498
  br label %cond.end171, !dbg !8498

cond.false169:                                    ; preds = %cond.end160
  %126 = load float*, float** %fp, align 8, !dbg !8498
  %arrayidx170 = getelementptr inbounds float, float* %126, i64 2, !dbg !8498
  %127 = load float, float* %arrayidx170, align 4, !dbg !8498
  br label %cond.end171, !dbg !8498

cond.end171:                                      ; preds = %cond.false169, %cond.true166
  %cond172 = phi float [ %fneg168, %cond.true166 ], [ %127, %cond.false169 ], !dbg !8498
  %128 = load float*, float** %fp, align 8, !dbg !8499
  %arrayidx173 = getelementptr inbounds float, float* %128, i64 3, !dbg !8499
  %129 = load float, float* %arrayidx173, align 4, !dbg !8499
  %cmp174 = fcmp olt float %129, 0.000000e+00, !dbg !8499
  br i1 %cmp174, label %cond.true176, label %cond.false179, !dbg !8499

cond.true176:                                     ; preds = %cond.end171
  %130 = load float*, float** %fp, align 8, !dbg !8499
  %arrayidx177 = getelementptr inbounds float, float* %130, i64 3, !dbg !8499
  %131 = load float, float* %arrayidx177, align 4, !dbg !8499
  %fneg178 = fneg float %131, !dbg !8499
  br label %cond.end181, !dbg !8499

cond.false179:                                    ; preds = %cond.end171
  %132 = load float*, float** %fp, align 8, !dbg !8499
  %arrayidx180 = getelementptr inbounds float, float* %132, i64 3, !dbg !8499
  %133 = load float, float* %arrayidx180, align 4, !dbg !8499
  br label %cond.end181, !dbg !8499

cond.end181:                                      ; preds = %cond.false179, %cond.true176
  %cond182 = phi float [ %fneg178, %cond.true176 ], [ %133, %cond.false179 ], !dbg !8499
  %add183 = fadd float %cond172, %cond182, !dbg !8500
  %cmp184 = fcmp olt float %add162, %add183, !dbg !8501
  br i1 %cmp184, label %if.then186, label %if.end193, !dbg !8502

if.then186:                                       ; preds = %cond.end181
  %134 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8503
  %winspeed187 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %134, i32 0, i32 16, !dbg !8505
  %arrayidx188 = getelementptr inbounds [4 x float], [4 x float]* %winspeed187, i64 0, i64 2, !dbg !8503
  %135 = load float, float* %arrayidx188, align 4, !dbg !8503
  %136 = load float*, float** %fp, align 8, !dbg !8506
  %arrayidx189 = getelementptr inbounds float, float* %136, i64 2, !dbg !8506
  store float %135, float* %arrayidx189, align 4, !dbg !8507
  %137 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8508
  %winspeed190 = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %137, i32 0, i32 16, !dbg !8509
  %arrayidx191 = getelementptr inbounds [4 x float], [4 x float]* %winspeed190, i64 0, i64 3, !dbg !8508
  %138 = load float, float* %arrayidx191, align 4, !dbg !8508
  %139 = load float*, float** %fp, align 8, !dbg !8510
  %arrayidx192 = getelementptr inbounds float, float* %139, i64 3, !dbg !8510
  store float %138, float* %arrayidx192, align 4, !dbg !8511
  br label %if.end193, !dbg !8512

if.end193:                                        ; preds = %if.then186, %cond.end181
  br label %sw.epilog, !dbg !8513

sw.bb194:                                         ; preds = %for.body
  %140 = load %struct.ShadeResult*, %struct.ShadeResult** %shr.addr, align 8, !dbg !8514
  %rayhits = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %140, i32 0, i32 17, !dbg !8515
  %arraydecay195 = getelementptr inbounds [4 x float], [4 x float]* %rayhits, i64 0, i64 0, !dbg !8514
  store float* %arraydecay195, float** %col, align 8, !dbg !8516
  store i32 4, i32* %pixsize, align 4, !dbg !8517
  br label %sw.epilog, !dbg !8518

sw.epilog:                                        ; preds = %for.body, %sw.bb194, %if.end193, %sw.bb78, %if.end77, %if.end63, %if.end, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb3, %sw.bb
  %141 = load float*, float** %col, align 8, !dbg !8519
  %tobool196 = icmp ne float* %141, null, !dbg !8519
  br i1 %tobool196, label %if.then197, label %if.end202, !dbg !8521

if.then197:                                       ; preds = %sw.epilog
  %142 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8522
  %rect198 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %142, i32 0, i32 6, !dbg !8524
  %143 = load float*, float** %rect198, align 8, !dbg !8524
  %144 = load i32, i32* %pixsize, align 4, !dbg !8525
  %145 = load i32, i32* %offset.addr, align 4, !dbg !8526
  %mul199 = mul nsw i32 %144, %145, !dbg !8527
  %idx.ext200 = sext i32 %mul199 to i64, !dbg !8528
  %add.ptr201 = getelementptr inbounds float, float* %143, i64 %idx.ext200, !dbg !8528
  store float* %add.ptr201, float** %fp, align 8, !dbg !8529
  %146 = load i32, i32* %curmask.addr, align 4, !dbg !8530
  %147 = load float*, float** %col, align 8, !dbg !8531
  %148 = load float*, float** %fp, align 8, !dbg !8532
  %149 = load i32, i32* %rectx.addr, align 4, !dbg !8533
  %150 = load i32, i32* %pixsize, align 4, !dbg !8534
  call void @add_filt_fmask_pixsize(i32 %146, float* %147, float* %148, i32 %149, i32 %150), !dbg !8535
  br label %if.end202, !dbg !8536

if.end202:                                        ; preds = %if.then197, %sw.epilog
  br label %for.inc, !dbg !8537

for.inc:                                          ; preds = %if.end202
  %151 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !8538
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %151, i32 0, i32 0, !dbg !8539
  %152 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !8539
  store %struct.RenderPass* %152, %struct.RenderPass** %rpass, align 8, !dbg !8540
  br label %for.cond, !dbg !8541, !llvm.loop !8542

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8544
}

declare dso_local void @add_filt_fmask(i32, float*, float*, i32) #2

declare dso_local void @add_filt_fmask_pixsize(i32, float*, float*, i32, i32) #2

declare dso_local void @shade_input_initialize(%struct.ShadeInput*, %struct.RenderPart*, %struct.RenderLayer*, i32) #2

declare dso_local void @renderspothalo(%struct.ShadeInput*, float*, float) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !8545 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8549, metadata !DIExpression()), !dbg !8550
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8551, metadata !DIExpression()), !dbg !8552
  %0 = load i32, i32* %b.addr, align 4, !dbg !8553
  %1 = load i32, i32* %a.addr, align 4, !dbg !8554
  %cmp = icmp slt i32 %0, %1, !dbg !8555
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8556

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !8557
  br label %cond.end, !dbg !8556

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !8558
  br label %cond.end, !dbg !8556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8556
  ret i32 %cond, !dbg !8559
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !8560 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8561, metadata !DIExpression()), !dbg !8562
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8563, metadata !DIExpression()), !dbg !8564
  %0 = load i32, i32* %a.addr, align 4, !dbg !8565
  %1 = load i32, i32* %b.addr, align 4, !dbg !8566
  %cmp = icmp slt i32 %0, %1, !dbg !8567
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8568

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !8569
  br label %cond.end, !dbg !8568

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !8570
  br label %cond.end, !dbg !8568

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8568
  ret i32 %cond, !dbg !8571
}

; Function Attrs: noinline nounwind uwtable
define internal void @halo_pixelstruct(%struct.HaloRen* %har, %struct.RenderLayer** %rlpp, i32 %totsample, i32 %od, float %dist, float %xn, float %yn, %struct.PixStr* %ps) #0 !dbg !8572 {
entry:
  %har.addr = alloca %struct.HaloRen*, align 8
  %rlpp.addr = alloca %struct.RenderLayer**, align 8
  %totsample.addr = alloca i32, align 4
  %od.addr = alloca i32, align 4
  %dist.addr = alloca float, align 4
  %xn.addr = alloca float, align 4
  %yn.addr = alloca float, align 4
  %ps.addr = alloca %struct.PixStr*, align 8
  %col = alloca [4 x float], align 16
  %accol = alloca [4 x float], align 16
  %fac = alloca float, align 4
  %amount = alloca i32, align 4
  %amountm = alloca i32, align 4
  %zz = alloca i32, align 4
  %flarec = alloca i32, align 4
  %sample = alloca i32, align 4
  %fullsample = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.HaloRen* %har, %struct.HaloRen** %har.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har.addr, metadata !8575, metadata !DIExpression()), !dbg !8576
  store %struct.RenderLayer** %rlpp, %struct.RenderLayer*** %rlpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer*** %rlpp.addr, metadata !8577, metadata !DIExpression()), !dbg !8578
  store i32 %totsample, i32* %totsample.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totsample.addr, metadata !8579, metadata !DIExpression()), !dbg !8580
  store i32 %od, i32* %od.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %od.addr, metadata !8581, metadata !DIExpression()), !dbg !8582
  store float %dist, float* %dist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dist.addr, metadata !8583, metadata !DIExpression()), !dbg !8584
  store float %xn, float* %xn.addr, align 4
  call void @llvm.dbg.declare(metadata float* %xn.addr, metadata !8585, metadata !DIExpression()), !dbg !8586
  store float %yn, float* %yn.addr, align 4
  call void @llvm.dbg.declare(metadata float* %yn.addr, metadata !8587, metadata !DIExpression()), !dbg !8588
  store %struct.PixStr* %ps, %struct.PixStr** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PixStr** %ps.addr, metadata !8589, metadata !DIExpression()), !dbg !8590
  call void @llvm.dbg.declare(metadata [4 x float]* %col, metadata !8591, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.declare(metadata [4 x float]* %accol, metadata !8593, metadata !DIExpression()), !dbg !8594
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8595, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.declare(metadata i32* %amount, metadata !8597, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.declare(metadata i32* %amountm, metadata !8599, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.declare(metadata i32* %zz, metadata !8601, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.declare(metadata i32* %flarec, metadata !8603, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !8605, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.declare(metadata i32* %fullsample, metadata !8607, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8609, metadata !DIExpression()), !dbg !8610
  store i32 0, i32* %mask, align 4, !dbg !8610
  %0 = load i32, i32* %totsample.addr, align 4, !dbg !8611
  %cmp = icmp sgt i32 %0, 1, !dbg !8612
  %conv = zext i1 %cmp to i32, !dbg !8612
  store i32 %conv, i32* %fullsample, align 4, !dbg !8613
  store i32 0, i32* %amount, align 4, !dbg !8614
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 3, !dbg !8615
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !8616
  %arrayidx1 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 2, !dbg !8617
  store float 0.000000e+00, float* %arrayidx1, align 8, !dbg !8618
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 1, !dbg !8619
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !8620
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 0, !dbg !8621
  store float 0.000000e+00, float* %arrayidx3, align 16, !dbg !8622
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !8623
  store float 0.000000e+00, float* %arrayidx4, align 4, !dbg !8624
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !8625
  store float 0.000000e+00, float* %arrayidx5, align 8, !dbg !8626
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !8627
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !8628
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8629
  store float 0.000000e+00, float* %arrayidx7, align 16, !dbg !8630
  %1 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8631
  %flarec8 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %1, i32 0, i32 25, !dbg !8632
  %2 = load i16, i16* %flarec8, align 4, !dbg !8632
  %conv9 = sext i16 %2 to i32, !dbg !8631
  store i32 %conv9, i32* %flarec, align 4, !dbg !8633
  br label %while.cond, !dbg !8634

while.cond:                                       ; preds = %if.end53, %entry
  %3 = load %struct.PixStr*, %struct.PixStr** %ps.addr, align 8, !dbg !8635
  %tobool = icmp ne %struct.PixStr* %3, null, !dbg !8634
  br i1 %tobool, label %while.body, label %while.end, !dbg !8634

while.body:                                       ; preds = %while.cond
  %4 = load %struct.PixStr*, %struct.PixStr** %ps.addr, align 8, !dbg !8636
  %mask10 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %4, i32 0, i32 5, !dbg !8638
  %5 = load i16, i16* %mask10, align 8, !dbg !8638
  %call = call i32 @count_mask(i16 zeroext %5), !dbg !8639
  store i32 %call, i32* %amountm, align 4, !dbg !8640
  %6 = load i32, i32* %amountm, align 4, !dbg !8641
  %7 = load i32, i32* %amount, align 4, !dbg !8642
  %add = add nsw i32 %7, %6, !dbg !8642
  store i32 %add, i32* %amount, align 4, !dbg !8642
  %8 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8643
  %9 = load %struct.PixStr*, %struct.PixStr** %ps.addr, align 8, !dbg !8644
  %z = getelementptr inbounds %struct.PixStr, %struct.PixStr* %9, i32 0, i32 3, !dbg !8645
  %10 = load i32, i32* %z, align 8, !dbg !8645
  %call11 = call i32 @calchalo_z(%struct.HaloRen* %8, i32 %10), !dbg !8646
  store i32 %call11, i32* %zz, align 4, !dbg !8647
  %11 = load i32, i32* %zz, align 4, !dbg !8648
  %12 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8650
  %zs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %12, i32 0, i32 15, !dbg !8651
  %13 = load i32, i32* %zs, align 8, !dbg !8651
  %cmp12 = icmp sgt i32 %11, %13, !dbg !8652
  br i1 %cmp12, label %if.then, label %lor.lhs.false, !dbg !8653

lor.lhs.false:                                    ; preds = %while.body
  %14 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8654
  %mat = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %14, i32 0, i32 29, !dbg !8655
  %15 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !8655
  %tobool14 = icmp ne %struct.Material* %15, null, !dbg !8654
  br i1 %tobool14, label %land.lhs.true, label %if.end53, !dbg !8656

land.lhs.true:                                    ; preds = %lor.lhs.false
  %16 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8657
  %mat15 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %16, i32 0, i32 29, !dbg !8658
  %17 = load %struct.Material*, %struct.Material** %mat15, align 8, !dbg !8658
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 51, !dbg !8659
  %18 = load i32, i32* %mode, align 4, !dbg !8659
  %and = and i32 %18, 16, !dbg !8660
  %tobool16 = icmp ne i32 %and, 0, !dbg !8660
  br i1 %tobool16, label %if.then, label %if.end53, !dbg !8661

if.then:                                          ; preds = %land.lhs.true, %while.body
  %19 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8662
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8665
  %20 = load i32, i32* %zz, align 4, !dbg !8666
  %21 = load float, float* %dist.addr, align 4, !dbg !8667
  %22 = load float, float* %xn.addr, align 4, !dbg !8668
  %23 = load float, float* %yn.addr, align 4, !dbg !8669
  %24 = load i32, i32* %flarec, align 4, !dbg !8670
  %conv17 = trunc i32 %24 to i16, !dbg !8670
  %call18 = call i32 @shadeHaloFloat(%struct.HaloRen* %19, float* %arraydecay, i32 %20, float %21, float %22, float %23, i16 signext %conv17), !dbg !8671
  %tobool19 = icmp ne i32 %call18, 0, !dbg !8671
  br i1 %tobool19, label %if.then20, label %if.end52, !dbg !8672

if.then20:                                        ; preds = %if.then
  store i32 0, i32* %flarec, align 4, !dbg !8673
  %25 = load i32, i32* %fullsample, align 4, !dbg !8675
  %tobool21 = icmp ne i32 %25, 0, !dbg !8675
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !8677

if.then22:                                        ; preds = %if.then20
  store i32 0, i32* %sample, align 4, !dbg !8678
  br label %for.cond, !dbg !8681

for.cond:                                         ; preds = %for.inc, %if.then22
  %26 = load i32, i32* %sample, align 4, !dbg !8682
  %27 = load i32, i32* %totsample.addr, align 4, !dbg !8684
  %cmp23 = icmp slt i32 %26, %27, !dbg !8685
  br i1 %cmp23, label %for.body, label %for.end, !dbg !8686

for.body:                                         ; preds = %for.cond
  %28 = load %struct.PixStr*, %struct.PixStr** %ps.addr, align 8, !dbg !8687
  %mask25 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %28, i32 0, i32 5, !dbg !8689
  %29 = load i16, i16* %mask25, align 8, !dbg !8689
  %conv26 = zext i16 %29 to i32, !dbg !8687
  %30 = load i32, i32* %sample, align 4, !dbg !8690
  %shl = shl i32 1, %30, !dbg !8691
  %and27 = and i32 %conv26, %shl, !dbg !8692
  %tobool28 = icmp ne i32 %and27, 0, !dbg !8692
  br i1 %tobool28, label %if.then29, label %if.end, !dbg !8693

if.then29:                                        ; preds = %for.body
  %31 = load %struct.RenderLayer**, %struct.RenderLayer*** %rlpp.addr, align 8, !dbg !8694
  %32 = load i32, i32* %sample, align 4, !dbg !8695
  %idxprom = sext i32 %32 to i64, !dbg !8694
  %arrayidx30 = getelementptr inbounds %struct.RenderLayer*, %struct.RenderLayer** %31, i64 %idxprom, !dbg !8694
  %33 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx30, align 8, !dbg !8694
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %33, i32 0, i32 11, !dbg !8696
  %34 = load float*, float** %rectf, align 8, !dbg !8696
  %35 = load i32, i32* %od.addr, align 4, !dbg !8697
  %mul = mul nsw i32 %35, 4, !dbg !8698
  %idx.ext = sext i32 %mul to i64, !dbg !8699
  %add.ptr = getelementptr inbounds float, float* %34, i64 %idx.ext, !dbg !8699
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8700
  %36 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8701
  %add32 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %36, i32 0, i32 20, !dbg !8702
  %37 = load i8, i8* %add32, align 2, !dbg !8702
  call void @addalphaAddfacFloat(float* %add.ptr, float* %arraydecay31, i8 zeroext %37), !dbg !8703
  br label %if.end, !dbg !8703

if.end:                                           ; preds = %if.then29, %for.body
  br label %for.inc, !dbg !8704

for.inc:                                          ; preds = %if.end
  %38 = load i32, i32* %sample, align 4, !dbg !8705
  %inc = add nsw i32 %38, 1, !dbg !8705
  store i32 %inc, i32* %sample, align 4, !dbg !8705
  br label %for.cond, !dbg !8706, !llvm.loop !8707

for.end:                                          ; preds = %for.cond
  br label %if.end51, !dbg !8709

if.else:                                          ; preds = %if.then20
  %39 = load i32, i32* %amountm, align 4, !dbg !8710
  %conv33 = sitofp i32 %39 to float, !dbg !8712
  %40 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !8713
  %conv34 = sitofp i16 %40 to float, !dbg !8714
  %div = fdiv float %conv33, %conv34, !dbg !8715
  store float %div, float* %fac, align 4, !dbg !8716
  %41 = load float, float* %fac, align 4, !dbg !8717
  %arrayidx35 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8718
  %42 = load float, float* %arrayidx35, align 16, !dbg !8718
  %mul36 = fmul float %41, %42, !dbg !8719
  %arrayidx37 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 0, !dbg !8720
  %43 = load float, float* %arrayidx37, align 16, !dbg !8721
  %add38 = fadd float %43, %mul36, !dbg !8721
  store float %add38, float* %arrayidx37, align 16, !dbg !8721
  %44 = load float, float* %fac, align 4, !dbg !8722
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !8723
  %45 = load float, float* %arrayidx39, align 4, !dbg !8723
  %mul40 = fmul float %44, %45, !dbg !8724
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 1, !dbg !8725
  %46 = load float, float* %arrayidx41, align 4, !dbg !8726
  %add42 = fadd float %46, %mul40, !dbg !8726
  store float %add42, float* %arrayidx41, align 4, !dbg !8726
  %47 = load float, float* %fac, align 4, !dbg !8727
  %arrayidx43 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !8728
  %48 = load float, float* %arrayidx43, align 8, !dbg !8728
  %mul44 = fmul float %47, %48, !dbg !8729
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 2, !dbg !8730
  %49 = load float, float* %arrayidx45, align 8, !dbg !8731
  %add46 = fadd float %49, %mul44, !dbg !8731
  store float %add46, float* %arrayidx45, align 8, !dbg !8731
  %50 = load float, float* %fac, align 4, !dbg !8732
  %arrayidx47 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !8733
  %51 = load float, float* %arrayidx47, align 4, !dbg !8733
  %mul48 = fmul float %50, %51, !dbg !8734
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 3, !dbg !8735
  %52 = load float, float* %arrayidx49, align 4, !dbg !8736
  %add50 = fadd float %52, %mul48, !dbg !8736
  store float %add50, float* %arrayidx49, align 4, !dbg !8736
  br label %if.end51

if.end51:                                         ; preds = %if.else, %for.end
  br label %if.end52, !dbg !8737

if.end52:                                         ; preds = %if.end51, %if.then
  br label %if.end53, !dbg !8738

if.end53:                                         ; preds = %if.end52, %land.lhs.true, %lor.lhs.false
  %53 = load %struct.PixStr*, %struct.PixStr** %ps.addr, align 8, !dbg !8739
  %mask54 = getelementptr inbounds %struct.PixStr, %struct.PixStr* %53, i32 0, i32 5, !dbg !8740
  %54 = load i16, i16* %mask54, align 8, !dbg !8740
  %conv55 = zext i16 %54 to i32, !dbg !8739
  %55 = load i32, i32* %mask, align 4, !dbg !8741
  %or = or i32 %55, %conv55, !dbg !8741
  store i32 %or, i32* %mask, align 4, !dbg !8741
  %56 = load %struct.PixStr*, %struct.PixStr** %ps.addr, align 8, !dbg !8742
  %next = getelementptr inbounds %struct.PixStr, %struct.PixStr* %56, i32 0, i32 0, !dbg !8743
  %57 = load %struct.PixStr*, %struct.PixStr** %next, align 8, !dbg !8743
  store %struct.PixStr* %57, %struct.PixStr** %ps.addr, align 8, !dbg !8744
  br label %while.cond, !dbg !8634, !llvm.loop !8745

while.end:                                        ; preds = %while.cond
  %58 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !8747
  %conv56 = sext i16 %58 to i32, !dbg !8748
  %59 = load i32, i32* %amount, align 4, !dbg !8749
  %sub = sub nsw i32 %conv56, %59, !dbg !8750
  store i32 %sub, i32* %amount, align 4, !dbg !8751
  %60 = load i32, i32* %amount, align 4, !dbg !8752
  %tobool57 = icmp ne i32 %60, 0, !dbg !8752
  br i1 %tobool57, label %if.then58, label %if.end87, !dbg !8754

if.then58:                                        ; preds = %while.end
  %61 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8755
  %arraydecay59 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8758
  %62 = load float, float* %dist.addr, align 4, !dbg !8759
  %63 = load float, float* %xn.addr, align 4, !dbg !8760
  %64 = load float, float* %yn.addr, align 4, !dbg !8761
  %65 = load i32, i32* %flarec, align 4, !dbg !8762
  %conv60 = trunc i32 %65 to i16, !dbg !8762
  %call61 = call i32 @shadeHaloFloat(%struct.HaloRen* %61, float* %arraydecay59, i32 8388607, float %62, float %63, float %64, i16 signext %conv60), !dbg !8763
  %tobool62 = icmp ne i32 %call61, 0, !dbg !8763
  br i1 %tobool62, label %if.then63, label %if.end86, !dbg !8764

if.then63:                                        ; preds = %if.then58
  %66 = load i32, i32* %fullsample, align 4, !dbg !8765
  %tobool64 = icmp ne i32 %66, 0, !dbg !8765
  br i1 %tobool64, label %if.end85, label %if.then65, !dbg !8768

if.then65:                                        ; preds = %if.then63
  %67 = load i32, i32* %amount, align 4, !dbg !8769
  %conv66 = sitofp i32 %67 to float, !dbg !8771
  %68 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !8772
  %conv67 = sitofp i16 %68 to float, !dbg !8773
  %div68 = fdiv float %conv66, %conv67, !dbg !8774
  store float %div68, float* %fac, align 4, !dbg !8775
  %69 = load float, float* %fac, align 4, !dbg !8776
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8777
  %70 = load float, float* %arrayidx69, align 16, !dbg !8777
  %mul70 = fmul float %69, %70, !dbg !8778
  %arrayidx71 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 0, !dbg !8779
  %71 = load float, float* %arrayidx71, align 16, !dbg !8780
  %add72 = fadd float %71, %mul70, !dbg !8780
  store float %add72, float* %arrayidx71, align 16, !dbg !8780
  %72 = load float, float* %fac, align 4, !dbg !8781
  %arrayidx73 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !8782
  %73 = load float, float* %arrayidx73, align 4, !dbg !8782
  %mul74 = fmul float %72, %73, !dbg !8783
  %arrayidx75 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 1, !dbg !8784
  %74 = load float, float* %arrayidx75, align 4, !dbg !8785
  %add76 = fadd float %74, %mul74, !dbg !8785
  store float %add76, float* %arrayidx75, align 4, !dbg !8785
  %75 = load float, float* %fac, align 4, !dbg !8786
  %arrayidx77 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !8787
  %76 = load float, float* %arrayidx77, align 8, !dbg !8787
  %mul78 = fmul float %75, %76, !dbg !8788
  %arrayidx79 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 2, !dbg !8789
  %77 = load float, float* %arrayidx79, align 8, !dbg !8790
  %add80 = fadd float %77, %mul78, !dbg !8790
  store float %add80, float* %arrayidx79, align 8, !dbg !8790
  %78 = load float, float* %fac, align 4, !dbg !8791
  %arrayidx81 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !8792
  %79 = load float, float* %arrayidx81, align 4, !dbg !8792
  %mul82 = fmul float %78, %79, !dbg !8793
  %arrayidx83 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 3, !dbg !8794
  %80 = load float, float* %arrayidx83, align 4, !dbg !8795
  %add84 = fadd float %80, %mul82, !dbg !8795
  store float %add84, float* %arrayidx83, align 4, !dbg !8795
  br label %if.end85, !dbg !8796

if.end85:                                         ; preds = %if.then65, %if.then63
  br label %if.end86, !dbg !8797

if.end86:                                         ; preds = %if.end85, %if.then58
  br label %if.end87, !dbg !8798

if.end87:                                         ; preds = %if.end86, %while.end
  %81 = load i32, i32* %fullsample, align 4, !dbg !8799
  %tobool88 = icmp ne i32 %81, 0, !dbg !8799
  br i1 %tobool88, label %if.then89, label %if.else110, !dbg !8801

if.then89:                                        ; preds = %if.end87
  store i32 0, i32* %sample, align 4, !dbg !8802
  br label %for.cond90, !dbg !8805

for.cond90:                                       ; preds = %for.inc107, %if.then89
  %82 = load i32, i32* %sample, align 4, !dbg !8806
  %83 = load i32, i32* %totsample.addr, align 4, !dbg !8808
  %cmp91 = icmp slt i32 %82, %83, !dbg !8809
  br i1 %cmp91, label %for.body93, label %for.end109, !dbg !8810

for.body93:                                       ; preds = %for.cond90
  %84 = load i32, i32* %mask, align 4, !dbg !8811
  %85 = load i32, i32* %sample, align 4, !dbg !8813
  %shl94 = shl i32 1, %85, !dbg !8814
  %and95 = and i32 %84, %shl94, !dbg !8815
  %tobool96 = icmp ne i32 %and95, 0, !dbg !8815
  br i1 %tobool96, label %if.end106, label %if.then97, !dbg !8816

if.then97:                                        ; preds = %for.body93
  %86 = load %struct.RenderLayer**, %struct.RenderLayer*** %rlpp.addr, align 8, !dbg !8817
  %87 = load i32, i32* %sample, align 4, !dbg !8818
  %idxprom98 = sext i32 %87 to i64, !dbg !8817
  %arrayidx99 = getelementptr inbounds %struct.RenderLayer*, %struct.RenderLayer** %86, i64 %idxprom98, !dbg !8817
  %88 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx99, align 8, !dbg !8817
  %rectf100 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %88, i32 0, i32 11, !dbg !8819
  %89 = load float*, float** %rectf100, align 8, !dbg !8819
  %90 = load i32, i32* %od.addr, align 4, !dbg !8820
  %mul101 = mul nsw i32 %90, 4, !dbg !8821
  %idx.ext102 = sext i32 %mul101 to i64, !dbg !8822
  %add.ptr103 = getelementptr inbounds float, float* %89, i64 %idx.ext102, !dbg !8822
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8823
  %91 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8824
  %add105 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %91, i32 0, i32 20, !dbg !8825
  %92 = load i8, i8* %add105, align 2, !dbg !8825
  call void @addalphaAddfacFloat(float* %add.ptr103, float* %arraydecay104, i8 zeroext %92), !dbg !8826
  br label %if.end106, !dbg !8826

if.end106:                                        ; preds = %if.then97, %for.body93
  br label %for.inc107, !dbg !8827

for.inc107:                                       ; preds = %if.end106
  %93 = load i32, i32* %sample, align 4, !dbg !8828
  %inc108 = add nsw i32 %93, 1, !dbg !8828
  store i32 %inc108, i32* %sample, align 4, !dbg !8828
  br label %for.cond90, !dbg !8829, !llvm.loop !8830

for.end109:                                       ; preds = %for.cond90
  br label %if.end134, !dbg !8832

if.else110:                                       ; preds = %if.end87
  %arrayidx111 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 0, !dbg !8833
  %94 = load float, float* %arrayidx111, align 16, !dbg !8833
  %arrayidx112 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8835
  store float %94, float* %arrayidx112, align 16, !dbg !8836
  %arrayidx113 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 1, !dbg !8837
  %95 = load float, float* %arrayidx113, align 4, !dbg !8837
  %arrayidx114 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 1, !dbg !8838
  store float %95, float* %arrayidx114, align 4, !dbg !8839
  %arrayidx115 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 2, !dbg !8840
  %96 = load float, float* %arrayidx115, align 8, !dbg !8840
  %arrayidx116 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !8841
  store float %96, float* %arrayidx116, align 8, !dbg !8842
  %arrayidx117 = getelementptr inbounds [4 x float], [4 x float]* %accol, i64 0, i64 3, !dbg !8843
  %97 = load float, float* %arrayidx117, align 4, !dbg !8843
  %arrayidx118 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 3, !dbg !8844
  store float %97, float* %arrayidx118, align 4, !dbg !8845
  store i32 0, i32* %sample, align 4, !dbg !8846
  br label %for.cond119, !dbg !8848

for.cond119:                                      ; preds = %for.inc131, %if.else110
  %98 = load i32, i32* %sample, align 4, !dbg !8849
  %99 = load i32, i32* %totsample.addr, align 4, !dbg !8851
  %cmp120 = icmp slt i32 %98, %99, !dbg !8852
  br i1 %cmp120, label %for.body122, label %for.end133, !dbg !8853

for.body122:                                      ; preds = %for.cond119
  %100 = load %struct.RenderLayer**, %struct.RenderLayer*** %rlpp.addr, align 8, !dbg !8854
  %101 = load i32, i32* %sample, align 4, !dbg !8855
  %idxprom123 = sext i32 %101 to i64, !dbg !8854
  %arrayidx124 = getelementptr inbounds %struct.RenderLayer*, %struct.RenderLayer** %100, i64 %idxprom123, !dbg !8854
  %102 = load %struct.RenderLayer*, %struct.RenderLayer** %arrayidx124, align 8, !dbg !8854
  %rectf125 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %102, i32 0, i32 11, !dbg !8856
  %103 = load float*, float** %rectf125, align 8, !dbg !8856
  %104 = load i32, i32* %od.addr, align 4, !dbg !8857
  %mul126 = mul nsw i32 %104, 4, !dbg !8858
  %idx.ext127 = sext i32 %mul126 to i64, !dbg !8859
  %add.ptr128 = getelementptr inbounds float, float* %103, i64 %idx.ext127, !dbg !8859
  %arraydecay129 = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 0, !dbg !8860
  %105 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8861
  %add130 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %105, i32 0, i32 20, !dbg !8862
  %106 = load i8, i8* %add130, align 2, !dbg !8862
  call void @addalphaAddfacFloat(float* %add.ptr128, float* %arraydecay129, i8 zeroext %106), !dbg !8863
  br label %for.inc131, !dbg !8863

for.inc131:                                       ; preds = %for.body122
  %107 = load i32, i32* %sample, align 4, !dbg !8864
  %inc132 = add nsw i32 %107, 1, !dbg !8864
  store i32 %inc132, i32* %sample, align 4, !dbg !8864
  br label %for.cond119, !dbg !8865, !llvm.loop !8866

for.end133:                                       ; preds = %for.cond119
  br label %if.end134

if.end134:                                        ; preds = %for.end133, %for.end109
  ret void, !dbg !8868
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @calchalo_z(%struct.HaloRen* %har, i32 %zz) #0 !dbg !8869 {
entry:
  %har.addr = alloca %struct.HaloRen*, align 8
  %zz.addr = alloca i32, align 4
  store %struct.HaloRen* %har, %struct.HaloRen** %har.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  store i32 %zz, i32* %zz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zz.addr, metadata !8874, metadata !DIExpression()), !dbg !8875
  %0 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !8876
  %type = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %0, i32 0, i32 19, !dbg !8878
  %1 = load i8, i8* %type, align 1, !dbg !8878
  %conv = zext i8 %1 to i32, !dbg !8876
  %and = and i32 %conv, 1, !dbg !8879
  %tobool = icmp ne i32 %and, 0, !dbg !8879
  br i1 %tobool, label %if.then, label %if.else, !dbg !8880

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %zz.addr, align 4, !dbg !8881
  %cmp = icmp slt i32 %2, 2147483632, !dbg !8884
  br i1 %cmp, label %if.then2, label %if.end, !dbg !8885

if.then2:                                         ; preds = %if.then
  store i32 -8388607, i32* %zz.addr, align 4, !dbg !8886
  br label %if.end, !dbg !8887

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !8888

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %zz.addr, align 4, !dbg !8889
  %shr = ashr i32 %3, 8, !dbg !8891
  store i32 %shr, i32* %zz.addr, align 4, !dbg !8892
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.end
  %4 = load i32, i32* %zz.addr, align 4, !dbg !8893
  ret i32 %4, !dbg !8894
}

declare dso_local i32 @shadeHaloFloat(%struct.HaloRen*, float*, i32, float, float, float, i16 signext) #2

declare dso_local void @addalphaAddfacFloat(float*, float*, i8 zeroext) #2

declare dso_local float* @RE_RenderLayerGetPass(%struct.RenderLayer*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !8895 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8896, metadata !DIExpression()), !dbg !8897
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8898, metadata !DIExpression()), !dbg !8899
  %0 = load float*, float** %a.addr, align 8, !dbg !8900
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8900
  %1 = load float, float* %arrayidx, align 4, !dbg !8900
  %2 = load float*, float** %r.addr, align 8, !dbg !8901
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8901
  store float %1, float* %arrayidx1, align 4, !dbg !8902
  %3 = load float*, float** %a.addr, align 8, !dbg !8903
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !8903
  %4 = load float, float* %arrayidx2, align 4, !dbg !8903
  %5 = load float*, float** %r.addr, align 8, !dbg !8904
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8904
  store float %4, float* %arrayidx3, align 4, !dbg !8905
  %6 = load float*, float** %a.addr, align 8, !dbg !8906
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !8906
  %7 = load float, float* %arrayidx4, align 4, !dbg !8906
  %8 = load float*, float** %r.addr, align 8, !dbg !8907
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8907
  store float %7, float* %arrayidx5, align 4, !dbg !8908
  ret void, !dbg !8909
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !8910 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8913, metadata !DIExpression()), !dbg !8914
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8915, metadata !DIExpression()), !dbg !8916
  %0 = load float, float* %f.addr, align 4, !dbg !8917
  %1 = load float*, float** %r.addr, align 8, !dbg !8918
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !8918
  %2 = load float, float* %arrayidx, align 4, !dbg !8919
  %mul = fmul float %2, %0, !dbg !8919
  store float %mul, float* %arrayidx, align 4, !dbg !8919
  %3 = load float, float* %f.addr, align 4, !dbg !8920
  %4 = load float*, float** %r.addr, align 8, !dbg !8921
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !8921
  %5 = load float, float* %arrayidx1, align 4, !dbg !8922
  %mul2 = fmul float %5, %3, !dbg !8922
  store float %mul2, float* %arrayidx1, align 4, !dbg !8922
  %6 = load float, float* %f.addr, align 4, !dbg !8923
  %7 = load float*, float** %r.addr, align 8, !dbg !8924
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !8924
  %8 = load float, float* %arrayidx3, align 4, !dbg !8925
  %mul4 = fmul float %8, %6, !dbg !8925
  store float %mul4, float* %arrayidx3, align 4, !dbg !8925
  ret void, !dbg !8926
}

declare dso_local void @shadeAtmPixel(%struct.SunSky*, float*, float, float, float) #2

declare dso_local void @shadeSkyPixel(float*, float, float, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !8927 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8928, metadata !DIExpression()), !dbg !8929
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8930, metadata !DIExpression()), !dbg !8931
  %0 = load float*, float** %a.addr, align 8, !dbg !8932
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8932
  %1 = load float, float* %arrayidx, align 4, !dbg !8932
  %2 = load float*, float** %r.addr, align 8, !dbg !8933
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8933
  store float %1, float* %arrayidx1, align 4, !dbg !8934
  %3 = load float*, float** %a.addr, align 8, !dbg !8935
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !8935
  %4 = load float, float* %arrayidx2, align 4, !dbg !8935
  %5 = load float*, float** %r.addr, align 8, !dbg !8936
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8936
  store float %4, float* %arrayidx3, align 4, !dbg !8937
  %6 = load float*, float** %a.addr, align 8, !dbg !8938
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !8938
  %7 = load float, float* %arrayidx4, align 4, !dbg !8938
  %8 = load float*, float** %r.addr, align 8, !dbg !8939
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8939
  store float %7, float* %arrayidx5, align 4, !dbg !8940
  %9 = load float*, float** %a.addr, align 8, !dbg !8941
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !8941
  %10 = load float, float* %arrayidx6, align 4, !dbg !8941
  %11 = load float*, float** %r.addr, align 8, !dbg !8942
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !8942
  store float %10, float* %arrayidx7, align 4, !dbg !8943
  ret void, !dbg !8944
}

declare dso_local void @addAlphaUnderFloat(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !8945 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8949, metadata !DIExpression()), !dbg !8950
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8951
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !8952
  store i8* null, i8** %last, align 8, !dbg !8953
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8954
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !8955
  store i8* null, i8** %first, align 8, !dbg !8956
  ret void, !dbg !8957
}

declare dso_local void @shade_input_set_triangle_i(%struct.ShadeInput*, %struct.ObjectInstanceRen*, %struct.VlakRen*, i16 signext, i16 signext, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !8958 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8961, metadata !DIExpression()), !dbg !8962
  %0 = load float*, float** %n.addr, align 8, !dbg !8963
  %1 = load float*, float** %n.addr, align 8, !dbg !8964
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !8965
  ret float %call, !dbg !8966
}

declare dso_local void @shade_input_set_viewco(%struct.ShadeInput*, float, float, float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !8967 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8970, metadata !DIExpression()), !dbg !8971
  %0 = load float*, float** %a.addr, align 8, !dbg !8972
  %1 = load float*, float** %a.addr, align 8, !dbg !8973
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !8974
  %call1 = call float @sqrtf(float %call) #5, !dbg !8975
  ret float %call1, !dbg !8976
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !8977 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8980, metadata !DIExpression()), !dbg !8981
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8982, metadata !DIExpression()), !dbg !8983
  %0 = load float, float* %a.addr, align 4, !dbg !8984
  %1 = load float, float* %b.addr, align 4, !dbg !8985
  %cmp = fcmp olt float %0, %1, !dbg !8986
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8987

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !8988
  br label %cond.end, !dbg !8987

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !8989
  br label %cond.end, !dbg !8987

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8987
  ret float %cond, !dbg !8990
}

declare dso_local void @shade_input_set_uv(%struct.ShadeInput*) #2

declare dso_local void @shade_input_set_normals(%struct.ShadeInput*) #2

declare dso_local void @shade_input_flip_normals(%struct.ShadeInput*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !8991 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8994, metadata !DIExpression()), !dbg !8995
  %0 = load float*, float** %r.addr, align 8, !dbg !8996
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8996
  %1 = load float, float* %arrayidx, align 4, !dbg !8996
  %fneg = fneg float %1, !dbg !8997
  %2 = load float*, float** %r.addr, align 8, !dbg !8998
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8998
  store float %fneg, float* %arrayidx1, align 4, !dbg !8999
  %3 = load float*, float** %r.addr, align 8, !dbg !9000
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !9000
  %4 = load float, float* %arrayidx2, align 4, !dbg !9000
  %fneg3 = fneg float %4, !dbg !9001
  %5 = load float*, float** %r.addr, align 8, !dbg !9002
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !9002
  store float %fneg3, float* %arrayidx4, align 4, !dbg !9003
  %6 = load float*, float** %r.addr, align 8, !dbg !9004
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !9004
  %7 = load float, float* %arrayidx5, align 4, !dbg !9004
  %fneg6 = fneg float %7, !dbg !9005
  %8 = load float*, float** %r.addr, align 8, !dbg !9006
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !9006
  store float %fneg6, float* %arrayidx7, align 4, !dbg !9007
  ret void, !dbg !9008
}

declare dso_local void @shade_input_init_material(%struct.ShadeInput*) #2

declare dso_local void @shade_input_set_shade_texco(%struct.ShadeInput*) #2

declare dso_local void @shade_samples_do_AO(%struct.ShadeSample*) #2

declare dso_local void @shade_material_loop(%struct.ShadeInput*, %struct.ShadeResult*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !9009 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9012, metadata !DIExpression()), !dbg !9013
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9014, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.declare(metadata float* %d, metadata !9016, metadata !DIExpression()), !dbg !9017
  %0 = load float*, float** %a.addr, align 8, !dbg !9018
  %1 = load float*, float** %a.addr, align 8, !dbg !9019
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !9020
  store float %call, float* %d, align 4, !dbg !9017
  %2 = load float, float* %d, align 4, !dbg !9021
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !9023
  br i1 %cmp, label %if.then, label %if.else, !dbg !9024

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !9025
  %call1 = call float @sqrtf(float %3) #5, !dbg !9027
  store float %call1, float* %d, align 4, !dbg !9028
  %4 = load float*, float** %r.addr, align 8, !dbg !9029
  %5 = load float*, float** %a.addr, align 8, !dbg !9030
  %6 = load float, float* %d, align 4, !dbg !9031
  %div = fdiv float 1.000000e+00, %6, !dbg !9032
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !9033
  br label %if.end, !dbg !9034

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !9035
  call void @zero_v3(float* %7), !dbg !9037
  store float 0.000000e+00, float* %d, align 4, !dbg !9038
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !9039
  ret float %8, !dbg !9040
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !9041 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9044, metadata !DIExpression()), !dbg !9045
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9046, metadata !DIExpression()), !dbg !9047
  %0 = load float*, float** %a.addr, align 8, !dbg !9048
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9048
  %1 = load float, float* %arrayidx, align 4, !dbg !9048
  %2 = load float*, float** %b.addr, align 8, !dbg !9049
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9049
  %3 = load float, float* %arrayidx1, align 4, !dbg !9049
  %mul = fmul float %1, %3, !dbg !9050
  %4 = load float*, float** %a.addr, align 8, !dbg !9051
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9051
  %5 = load float, float* %arrayidx2, align 4, !dbg !9051
  %6 = load float*, float** %b.addr, align 8, !dbg !9052
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9052
  %7 = load float, float* %arrayidx3, align 4, !dbg !9052
  %mul4 = fmul float %5, %7, !dbg !9053
  %add = fadd float %mul, %mul4, !dbg !9054
  %8 = load float*, float** %a.addr, align 8, !dbg !9055
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9055
  %9 = load float, float* %arrayidx5, align 4, !dbg !9055
  %10 = load float*, float** %b.addr, align 8, !dbg !9056
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !9056
  %11 = load float, float* %arrayidx6, align 4, !dbg !9056
  %mul7 = fmul float %9, %11, !dbg !9057
  %add8 = fadd float %add, %mul7, !dbg !9058
  ret float %add8, !dbg !9059
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !9060 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9063, metadata !DIExpression()), !dbg !9064
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9065, metadata !DIExpression()), !dbg !9066
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !9067, metadata !DIExpression()), !dbg !9068
  %0 = load float*, float** %a.addr, align 8, !dbg !9069
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9069
  %1 = load float, float* %arrayidx, align 4, !dbg !9069
  %2 = load float, float* %f.addr, align 4, !dbg !9070
  %mul = fmul float %1, %2, !dbg !9071
  %3 = load float*, float** %r.addr, align 8, !dbg !9072
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !9072
  store float %mul, float* %arrayidx1, align 4, !dbg !9073
  %4 = load float*, float** %a.addr, align 8, !dbg !9074
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9074
  %5 = load float, float* %arrayidx2, align 4, !dbg !9074
  %6 = load float, float* %f.addr, align 4, !dbg !9075
  %mul3 = fmul float %5, %6, !dbg !9076
  %7 = load float*, float** %r.addr, align 8, !dbg !9077
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9077
  store float %mul3, float* %arrayidx4, align 4, !dbg !9078
  %8 = load float*, float** %a.addr, align 8, !dbg !9079
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9079
  %9 = load float, float* %arrayidx5, align 4, !dbg !9079
  %10 = load float, float* %f.addr, align 4, !dbg !9080
  %mul6 = fmul float %9, %10, !dbg !9081
  %11 = load float*, float** %r.addr, align 8, !dbg !9082
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !9082
  store float %mul6, float* %arrayidx7, align 4, !dbg !9083
  ret void, !dbg !9084
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !9085 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9086, metadata !DIExpression()), !dbg !9087
  %0 = load float*, float** %r.addr, align 8, !dbg !9088
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9088
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9089
  %1 = load float*, float** %r.addr, align 8, !dbg !9090
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !9090
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !9091
  %2 = load float*, float** %r.addr, align 8, !dbg !9092
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !9092
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !9093
  ret void, !dbg !9094
}

; Function Attrs: noinline nounwind uwtable
define internal void @renderhalo_post(%struct.RenderResult* %rr, float* %rectf, %struct.HaloRen* %har) #0 !dbg !9095 {
entry:
  %rr.addr = alloca %struct.RenderResult*, align 8
  %rectf.addr = alloca float*, align 8
  %har.addr = alloca %struct.HaloRen*, align 8
  %dist = alloca float, align 4
  %xsq = alloca float, align 4
  %ysq = alloca float, align 4
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %colf = alloca [4 x float], align 16
  %rectft = alloca float*, align 8
  %rtf = alloca float*, align 8
  %haloxs = alloca float, align 4
  %haloys = alloca float, align 4
  %minx = alloca i32, align 4
  %maxx = alloca i32, align 4
  %miny = alloca i32, align 4
  %maxy = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !9096, metadata !DIExpression()), !dbg !9097
  store float* %rectf, float** %rectf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  store %struct.HaloRen* %har, %struct.HaloRen** %har.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har.addr, metadata !9100, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.declare(metadata float* %dist, metadata !9102, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.declare(metadata float* %xsq, metadata !9104, metadata !DIExpression()), !dbg !9105
  call void @llvm.dbg.declare(metadata float* %ysq, metadata !9106, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.declare(metadata float* %xn, metadata !9108, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.declare(metadata float* %yn, metadata !9110, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.declare(metadata [4 x float]* %colf, metadata !9112, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.declare(metadata float** %rectft, metadata !9114, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.declare(metadata float** %rtf, metadata !9116, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.declare(metadata float* %haloxs, metadata !9118, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.declare(metadata float* %haloys, metadata !9120, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.declare(metadata i32* %minx, metadata !9122, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.declare(metadata i32* %maxx, metadata !9124, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.declare(metadata i32* %miny, metadata !9126, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.declare(metadata i32* %maxy, metadata !9128, metadata !DIExpression()), !dbg !9129
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9130, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9132, metadata !DIExpression()), !dbg !9133
  %0 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9134
  %xs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %0, i32 0, i32 3, !dbg !9135
  %1 = load float, float* %xs, align 8, !dbg !9135
  %2 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 15, i32 0), align 4, !dbg !9136
  %conv = sitofp i32 %2 to float, !dbg !9137
  %sub = fsub float %1, %conv, !dbg !9138
  store float %sub, float* %haloxs, align 4, !dbg !9139
  %3 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9140
  %ys = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %3, i32 0, i32 4, !dbg !9141
  %4 = load float, float* %ys, align 4, !dbg !9141
  %5 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 15, i32 2), align 4, !dbg !9142
  %conv1 = sitofp i32 %5 to float, !dbg !9143
  %sub2 = fsub float %4, %conv1, !dbg !9144
  store float %sub2, float* %haloys, align 4, !dbg !9145
  %6 = load float, float* %haloys, align 4, !dbg !9146
  %7 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9147
  %rad = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %7, i32 0, i32 5, !dbg !9148
  %8 = load float, float* %rad, align 8, !dbg !9148
  %9 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 24), align 8, !dbg !9149
  %div = fdiv float %8, %9, !dbg !9150
  %sub3 = fsub float %6, %div, !dbg !9151
  %conv4 = fptosi float %sub3 to i32, !dbg !9146
  store i32 %conv4, i32* %miny, align 4, !dbg !9152
  %conv5 = trunc i32 %conv4 to i16, !dbg !9153
  %10 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9154
  %miny6 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %10, i32 0, i32 0, !dbg !9155
  store i16 %conv5, i16* %miny6, align 8, !dbg !9156
  %11 = load float, float* %haloys, align 4, !dbg !9157
  %12 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9158
  %rad7 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %12, i32 0, i32 5, !dbg !9159
  %13 = load float, float* %rad7, align 8, !dbg !9159
  %14 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 24), align 8, !dbg !9160
  %div8 = fdiv float %13, %14, !dbg !9161
  %add = fadd float %11, %div8, !dbg !9162
  %conv9 = fptosi float %add to i32, !dbg !9157
  store i32 %conv9, i32* %maxy, align 4, !dbg !9163
  %conv10 = trunc i32 %conv9 to i16, !dbg !9164
  %15 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9165
  %maxy11 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %15, i32 0, i32 1, !dbg !9166
  store i16 %conv10, i16* %maxy11, align 2, !dbg !9167
  %16 = load i32, i32* %maxy, align 4, !dbg !9168
  %cmp = icmp slt i32 %16, 0, !dbg !9170
  br i1 %cmp, label %if.then, label %if.else, !dbg !9171

if.then:                                          ; preds = %entry
  br label %if.end95, !dbg !9172

if.else:                                          ; preds = %entry
  %17 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !9174
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %17, i32 0, i32 3, !dbg !9176
  %18 = load i32, i32* %recty, align 4, !dbg !9176
  %19 = load i32, i32* %miny, align 4, !dbg !9177
  %cmp13 = icmp slt i32 %18, %19, !dbg !9178
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !9179

if.then15:                                        ; preds = %if.else
  br label %if.end94, !dbg !9180

if.else16:                                        ; preds = %if.else
  %20 = load float, float* %haloxs, align 4, !dbg !9182
  %21 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9184
  %rad17 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %21, i32 0, i32 5, !dbg !9185
  %22 = load float, float* %rad17, align 8, !dbg !9185
  %sub18 = fsub float %20, %22, !dbg !9186
  %conv19 = fpext float %sub18 to double, !dbg !9182
  %23 = call double @llvm.floor.f64(double %conv19), !dbg !9187
  %conv20 = fptosi double %23 to i32, !dbg !9187
  store i32 %conv20, i32* %minx, align 4, !dbg !9188
  %24 = load float, float* %haloxs, align 4, !dbg !9189
  %25 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9190
  %rad21 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %25, i32 0, i32 5, !dbg !9191
  %26 = load float, float* %rad21, align 8, !dbg !9191
  %add22 = fadd float %24, %26, !dbg !9192
  %conv23 = fpext float %add22 to double, !dbg !9189
  %27 = call double @llvm.ceil.f64(double %conv23), !dbg !9193
  %conv24 = fptosi double %27 to i32, !dbg !9193
  store i32 %conv24, i32* %maxx, align 4, !dbg !9194
  %28 = load i32, i32* %maxx, align 4, !dbg !9195
  %cmp25 = icmp slt i32 %28, 0, !dbg !9197
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !9198

if.then27:                                        ; preds = %if.else16
  br label %if.end93, !dbg !9199

if.else28:                                        ; preds = %if.else16
  %29 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !9201
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %29, i32 0, i32 2, !dbg !9203
  %30 = load i32, i32* %rectx, align 8, !dbg !9203
  %31 = load i32, i32* %minx, align 4, !dbg !9204
  %cmp29 = icmp slt i32 %30, %31, !dbg !9205
  br i1 %cmp29, label %if.then31, label %if.else32, !dbg !9206

if.then31:                                        ; preds = %if.else28
  br label %if.end92, !dbg !9207

if.else32:                                        ; preds = %if.else28
  %32 = load i32, i32* %minx, align 4, !dbg !9209
  %cmp33 = icmp slt i32 %32, 0, !dbg !9212
  br i1 %cmp33, label %if.then35, label %if.end, !dbg !9213

if.then35:                                        ; preds = %if.else32
  store i32 0, i32* %minx, align 4, !dbg !9214
  br label %if.end, !dbg !9215

if.end:                                           ; preds = %if.then35, %if.else32
  %33 = load i32, i32* %maxx, align 4, !dbg !9216
  %34 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !9218
  %rectx36 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %34, i32 0, i32 2, !dbg !9219
  %35 = load i32, i32* %rectx36, align 8, !dbg !9219
  %cmp37 = icmp sge i32 %33, %35, !dbg !9220
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !9221

if.then39:                                        ; preds = %if.end
  %36 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !9222
  %rectx40 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %36, i32 0, i32 2, !dbg !9223
  %37 = load i32, i32* %rectx40, align 8, !dbg !9223
  %sub41 = sub nsw i32 %37, 1, !dbg !9224
  store i32 %sub41, i32* %maxx, align 4, !dbg !9225
  br label %if.end42, !dbg !9226

if.end42:                                         ; preds = %if.then39, %if.end
  %38 = load i32, i32* %miny, align 4, !dbg !9227
  %cmp43 = icmp slt i32 %38, 0, !dbg !9229
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !9230

if.then45:                                        ; preds = %if.end42
  store i32 0, i32* %miny, align 4, !dbg !9231
  br label %if.end46, !dbg !9232

if.end46:                                         ; preds = %if.then45, %if.end42
  %39 = load i32, i32* %maxy, align 4, !dbg !9233
  %40 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !9235
  %recty47 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %40, i32 0, i32 3, !dbg !9236
  %41 = load i32, i32* %recty47, align 4, !dbg !9236
  %cmp48 = icmp sgt i32 %39, %41, !dbg !9237
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !9238

if.then50:                                        ; preds = %if.end46
  %42 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !9239
  %recty51 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %42, i32 0, i32 3, !dbg !9240
  %43 = load i32, i32* %recty51, align 4, !dbg !9240
  store i32 %43, i32* %maxy, align 4, !dbg !9241
  br label %if.end52, !dbg !9242

if.end52:                                         ; preds = %if.then50, %if.end46
  %44 = load float*, float** %rectf.addr, align 8, !dbg !9243
  %45 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !9244
  %rectx53 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %45, i32 0, i32 2, !dbg !9245
  %46 = load i32, i32* %rectx53, align 8, !dbg !9245
  %mul = mul nsw i32 4, %46, !dbg !9246
  %47 = load i32, i32* %miny, align 4, !dbg !9247
  %mul54 = mul nsw i32 %mul, %47, !dbg !9248
  %idx.ext = sext i32 %mul54 to i64, !dbg !9249
  %add.ptr = getelementptr inbounds float, float* %44, i64 %idx.ext, !dbg !9249
  store float* %add.ptr, float** %rectft, align 8, !dbg !9250
  %48 = load i32, i32* %miny, align 4, !dbg !9251
  store i32 %48, i32* %y, align 4, !dbg !9253
  br label %for.cond, !dbg !9254

for.cond:                                         ; preds = %for.inc89, %if.end52
  %49 = load i32, i32* %y, align 4, !dbg !9255
  %50 = load i32, i32* %maxy, align 4, !dbg !9257
  %cmp55 = icmp slt i32 %49, %50, !dbg !9258
  br i1 %cmp55, label %for.body, label %for.end91, !dbg !9259

for.body:                                         ; preds = %for.cond
  %51 = load float*, float** %rectft, align 8, !dbg !9260
  %52 = load i32, i32* %minx, align 4, !dbg !9262
  %mul57 = mul nsw i32 4, %52, !dbg !9263
  %idx.ext58 = sext i32 %mul57 to i64, !dbg !9264
  %add.ptr59 = getelementptr inbounds float, float* %51, i64 %idx.ext58, !dbg !9264
  store float* %add.ptr59, float** %rtf, align 8, !dbg !9265
  %53 = load i32, i32* %y, align 4, !dbg !9266
  %conv60 = sitofp i32 %53 to float, !dbg !9266
  %54 = load float, float* %haloys, align 4, !dbg !9267
  %sub61 = fsub float %conv60, %54, !dbg !9268
  %55 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 24), align 8, !dbg !9269
  %mul62 = fmul float %sub61, %55, !dbg !9270
  store float %mul62, float* %yn, align 4, !dbg !9271
  %56 = load float, float* %yn, align 4, !dbg !9272
  %57 = load float, float* %yn, align 4, !dbg !9273
  %mul63 = fmul float %56, %57, !dbg !9274
  store float %mul63, float* %ysq, align 4, !dbg !9275
  %58 = load i32, i32* %minx, align 4, !dbg !9276
  store i32 %58, i32* %x, align 4, !dbg !9278
  br label %for.cond64, !dbg !9279

for.cond64:                                       ; preds = %for.inc, %for.body
  %59 = load i32, i32* %x, align 4, !dbg !9280
  %60 = load i32, i32* %maxx, align 4, !dbg !9282
  %cmp65 = icmp sle i32 %59, %60, !dbg !9283
  br i1 %cmp65, label %for.body67, label %for.end, !dbg !9284

for.body67:                                       ; preds = %for.cond64
  %61 = load i32, i32* %x, align 4, !dbg !9285
  %conv68 = sitofp i32 %61 to float, !dbg !9285
  %62 = load float, float* %haloxs, align 4, !dbg !9287
  %sub69 = fsub float %conv68, %62, !dbg !9288
  store float %sub69, float* %xn, align 4, !dbg !9289
  %63 = load float, float* %xn, align 4, !dbg !9290
  %64 = load float, float* %xn, align 4, !dbg !9291
  %mul70 = fmul float %63, %64, !dbg !9292
  store float %mul70, float* %xsq, align 4, !dbg !9293
  %65 = load float, float* %xsq, align 4, !dbg !9294
  %66 = load float, float* %ysq, align 4, !dbg !9295
  %add71 = fadd float %65, %66, !dbg !9296
  store float %add71, float* %dist, align 4, !dbg !9297
  %67 = load float, float* %dist, align 4, !dbg !9298
  %68 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9300
  %radsq = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %68, i32 0, i32 6, !dbg !9301
  %69 = load float, float* %radsq, align 4, !dbg !9301
  %cmp72 = fcmp olt float %67, %69, !dbg !9302
  br i1 %cmp72, label %if.then74, label %if.end79, !dbg !9303

if.then74:                                        ; preds = %for.body67
  %70 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9304
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %colf, i64 0, i64 0, !dbg !9307
  %71 = load float, float* %dist, align 4, !dbg !9308
  %72 = load float, float* %xn, align 4, !dbg !9309
  %73 = load float, float* %yn, align 4, !dbg !9310
  %74 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9311
  %flarec = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %74, i32 0, i32 25, !dbg !9312
  %75 = load i16, i16* %flarec, align 4, !dbg !9312
  %call = call i32 @shadeHaloFloat(%struct.HaloRen* %70, float* %arraydecay, i32 8388607, float %71, float %72, float %73, i16 signext %75), !dbg !9313
  %tobool = icmp ne i32 %call, 0, !dbg !9313
  br i1 %tobool, label %if.then75, label %if.end78, !dbg !9314

if.then75:                                        ; preds = %if.then74
  %76 = load float*, float** %rtf, align 8, !dbg !9315
  %arraydecay76 = getelementptr inbounds [4 x float], [4 x float]* %colf, i64 0, i64 0, !dbg !9316
  %77 = load %struct.HaloRen*, %struct.HaloRen** %har.addr, align 8, !dbg !9317
  %add77 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %77, i32 0, i32 20, !dbg !9318
  %78 = load i8, i8* %add77, align 2, !dbg !9318
  call void @addalphaAddfacFloat(float* %76, float* %arraydecay76, i8 zeroext %78), !dbg !9319
  br label %if.end78, !dbg !9319

if.end78:                                         ; preds = %if.then75, %if.then74
  br label %if.end79, !dbg !9320

if.end79:                                         ; preds = %if.end78, %for.body67
  %79 = load float*, float** %rtf, align 8, !dbg !9321
  %add.ptr80 = getelementptr inbounds float, float* %79, i64 4, !dbg !9321
  store float* %add.ptr80, float** %rtf, align 8, !dbg !9321
  br label %for.inc, !dbg !9322

for.inc:                                          ; preds = %if.end79
  %80 = load i32, i32* %x, align 4, !dbg !9323
  %inc = add nsw i32 %80, 1, !dbg !9323
  store i32 %inc, i32* %x, align 4, !dbg !9323
  br label %for.cond64, !dbg !9324, !llvm.loop !9325

for.end:                                          ; preds = %for.cond64
  %81 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !9327
  %rectx81 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %81, i32 0, i32 2, !dbg !9328
  %82 = load i32, i32* %rectx81, align 8, !dbg !9328
  %mul82 = mul nsw i32 4, %82, !dbg !9329
  %83 = load float*, float** %rectft, align 8, !dbg !9330
  %idx.ext83 = sext i32 %mul82 to i64, !dbg !9330
  %add.ptr84 = getelementptr inbounds float, float* %83, i64 %idx.ext83, !dbg !9330
  store float* %add.ptr84, float** %rectft, align 8, !dbg !9330
  %84 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !9331
  %85 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !9333
  %call85 = call i32 %84(i8* %85), !dbg !9334
  %tobool86 = icmp ne i32 %call85, 0, !dbg !9334
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !9335

if.then87:                                        ; preds = %for.end
  br label %for.end91, !dbg !9336

if.end88:                                         ; preds = %for.end
  br label %for.inc89, !dbg !9337

for.inc89:                                        ; preds = %if.end88
  %86 = load i32, i32* %y, align 4, !dbg !9338
  %inc90 = add nsw i32 %86, 1, !dbg !9338
  store i32 %inc90, i32* %y, align 4, !dbg !9338
  br label %for.cond, !dbg !9339, !llvm.loop !9340

for.end91:                                        ; preds = %if.then87, %for.cond
  br label %if.end92

if.end92:                                         ; preds = %for.end91, %if.then31
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then27
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then15
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then
  ret void, !dbg !9342
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1829, !1830, !1831}
!llvm.ident = !{!1832}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !56, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/render/intern/source/rendercore.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !39}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ScenePassType", file: !4, line: 213, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38}
!7 = !DIEnumerator(name: "SCE_PASS_COMBINED", value: 1)
!8 = !DIEnumerator(name: "SCE_PASS_Z", value: 2)
!9 = !DIEnumerator(name: "SCE_PASS_RGBA", value: 4)
!10 = !DIEnumerator(name: "SCE_PASS_DIFFUSE", value: 8)
!11 = !DIEnumerator(name: "SCE_PASS_SPEC", value: 16)
!12 = !DIEnumerator(name: "SCE_PASS_SHADOW", value: 32)
!13 = !DIEnumerator(name: "SCE_PASS_AO", value: 64)
!14 = !DIEnumerator(name: "SCE_PASS_REFLECT", value: 128)
!15 = !DIEnumerator(name: "SCE_PASS_NORMAL", value: 256)
!16 = !DIEnumerator(name: "SCE_PASS_VECTOR", value: 512)
!17 = !DIEnumerator(name: "SCE_PASS_REFRACT", value: 1024)
!18 = !DIEnumerator(name: "SCE_PASS_INDEXOB", value: 2048)
!19 = !DIEnumerator(name: "SCE_PASS_UV", value: 4096)
!20 = !DIEnumerator(name: "SCE_PASS_INDIRECT", value: 8192)
!21 = !DIEnumerator(name: "SCE_PASS_MIST", value: 16384)
!22 = !DIEnumerator(name: "SCE_PASS_RAYHITS", value: 32768)
!23 = !DIEnumerator(name: "SCE_PASS_EMIT", value: 65536)
!24 = !DIEnumerator(name: "SCE_PASS_ENVIRONMENT", value: 131072)
!25 = !DIEnumerator(name: "SCE_PASS_INDEXMA", value: 262144)
!26 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_DIRECT", value: 524288)
!27 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_INDIRECT", value: 1048576)
!28 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_COLOR", value: 2097152)
!29 = !DIEnumerator(name: "SCE_PASS_GLOSSY_DIRECT", value: 4194304)
!30 = !DIEnumerator(name: "SCE_PASS_GLOSSY_INDIRECT", value: 8388608)
!31 = !DIEnumerator(name: "SCE_PASS_GLOSSY_COLOR", value: 16777216)
!32 = !DIEnumerator(name: "SCE_PASS_TRANSM_DIRECT", value: 33554432)
!33 = !DIEnumerator(name: "SCE_PASS_TRANSM_INDIRECT", value: 67108864)
!34 = !DIEnumerator(name: "SCE_PASS_TRANSM_COLOR", value: 134217728)
!35 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_DIRECT", value: 268435456)
!36 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_INDIRECT", value: 536870912)
!37 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_COLOR", value: 1073741824)
!38 = !DIEnumerator(name: "SCE_PASS_DEBUG", value: -2147483648)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !40, line: 394, baseType: !41, size: 32, elements: !42)
!40 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!41 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!42 = !{!43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55}
!43 = !DIEnumerator(name: "OB_NEG_SCALE", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "OB_DUPLIFRAMES", value: 8, isUnsigned: true)
!45 = !DIEnumerator(name: "OB_DUPLIVERTS", value: 16, isUnsigned: true)
!46 = !DIEnumerator(name: "OB_DUPLIROT", value: 32, isUnsigned: true)
!47 = !DIEnumerator(name: "OB_DUPLINOSPEED", value: 64, isUnsigned: true)
!48 = !DIEnumerator(name: "OB_DUPLIGROUP", value: 256, isUnsigned: true)
!49 = !DIEnumerator(name: "OB_DUPLIFACES", value: 512, isUnsigned: true)
!50 = !DIEnumerator(name: "OB_DUPLIFACES_SCALE", value: 1024, isUnsigned: true)
!51 = !DIEnumerator(name: "OB_DUPLIPARTS", value: 2048, isUnsigned: true)
!52 = !DIEnumerator(name: "OB_RENDER_DUPLI", value: 4096, isUnsigned: true)
!53 = !DIEnumerator(name: "OB_NO_CONSTRAINTS", value: 8192, isUnsigned: true)
!54 = !DIEnumerator(name: "OB_NO_PSYS_UPDATE", value: 16384, isUnsigned: true)
!55 = !DIEnumerator(name: "OB_DUPLI", value: 2840, isUnsigned: true)
!56 = !{!57, !58, !59, !81, !83, !1826, !5}
!57 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixStrMain", file: !61, line: 60, baseType: !62)
!61 = !DIFile(filename: "blender/source/blender/render/intern/include/rendercore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!62 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixStrMain", file: !61, line: 56, size: 256, elements: !63)
!63 = !{!64, !66, !67, !80}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !62, file: !61, line: 57, baseType: !65, size: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !62, file: !61, line: 57, baseType: !65, size: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !62, file: !61, line: 58, baseType: !68, size: 64, offset: 128)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixStr", file: !61, line: 49, size: 256, elements: !70)
!70 = !{!71, !72, !73, !74, !75, !76, !78}
!71 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !69, file: !61, line: 50, baseType: !68, size: 64)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !69, file: !61, line: 51, baseType: !5, size: 32, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !69, file: !61, line: 51, baseType: !5, size: 32, offset: 96)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !69, file: !61, line: 51, baseType: !5, size: 32, offset: 128)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "maskz", scope: !69, file: !61, line: 51, baseType: !5, size: 32, offset: 160)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !69, file: !61, line: 52, baseType: !77, size: 16, offset: 192)
!77 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !69, file: !61, line: 53, baseType: !79, size: 16, offset: 208)
!79 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !62, file: !61, line: 59, baseType: !5, size: 32, offset: 192)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixStr", file: !61, line: 54, baseType: !69)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "ZbufSolidData", file: !1, line: 1142, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ZbufSolidData", file: !1, line: 1138, size: 192, elements: !86)
!86 = !{!87, !1824, !1825}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "rl", scope: !85, file: !1, line: 1139, baseType: !88, size: 64)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !90, line: 108, baseType: !91)
!90 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!91 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !90, line: 85, size: 1600, elements: !92)
!92 = !{!93, !95, !96, !101, !102, !103, !104, !105, !106, !107, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !91, file: !90, line: 86, baseType: !94, size: 64)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !91, file: !90, line: 86, baseType: !94, size: 64, offset: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !91, file: !90, line: 89, baseType: !97, size: 592, offset: 128)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 592, elements: !99)
!98 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!99 = !{!100}
!100 = !DISubrange(count: 74)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !91, file: !90, line: 90, baseType: !41, size: 32, offset: 736)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !91, file: !90, line: 90, baseType: !41, size: 32, offset: 768)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !91, file: !90, line: 90, baseType: !41, size: 32, offset: 800)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !91, file: !90, line: 91, baseType: !5, size: 32, offset: 832)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !91, file: !90, line: 91, baseType: !5, size: 32, offset: 864)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !91, file: !90, line: 91, baseType: !5, size: 32, offset: 896)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !91, file: !90, line: 93, baseType: !108, size: 64, offset: 960)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !110, line: 93, size: 7552, elements: !111)
!110 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!111 = !{!112, !180, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !233, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !302, !303, !304, !305, !306, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1814}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !109, file: !110, line: 94, baseType: !113, size: 960)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !114, line: 130, baseType: !115)
!114 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !114, line: 117, size: 960, elements: !116)
!116 = !{!117, !118, !119, !121, !140, !144, !145, !146, !147, !148}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !115, file: !114, line: 118, baseType: !58, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !115, file: !114, line: 118, baseType: !58, size: 64, offset: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !115, file: !114, line: 119, baseType: !120, size: 64, offset: 128)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !115, file: !114, line: 120, baseType: !122, size: 64, offset: 192)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !114, line: 136, size: 17600, elements: !124)
!124 = !{!125, !126, !128, !131, !135, !136, !137}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !123, file: !114, line: 137, baseType: !113, size: 960)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !123, file: !114, line: 138, baseType: !127, size: 64, offset: 960)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !123, file: !114, line: 139, baseType: !129, size: 64, offset: 1024)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !114, line: 43, flags: DIFlagFwdDecl)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !123, file: !114, line: 140, baseType: !132, size: 8192, offset: 1088)
!132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 8192, elements: !133)
!133 = !{!134}
!134 = !DISubrange(count: 1024)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !123, file: !114, line: 141, baseType: !132, size: 8192, offset: 9280)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !123, file: !114, line: 148, baseType: !122, size: 64, offset: 17472)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !123, file: !114, line: 150, baseType: !138, size: 64, offset: 17536)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !114, line: 45, flags: DIFlagFwdDecl)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !115, file: !114, line: 121, baseType: !141, size: 528, offset: 256)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 528, elements: !142)
!142 = !{!143}
!143 = !DISubrange(count: 66)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !115, file: !114, line: 126, baseType: !79, size: 16, offset: 784)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !115, file: !114, line: 127, baseType: !5, size: 32, offset: 800)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !115, file: !114, line: 128, baseType: !5, size: 32, offset: 832)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !115, file: !114, line: 128, baseType: !5, size: 32, offset: 864)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !115, file: !114, line: 129, baseType: !149, size: 64, offset: 896)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !114, line: 75, baseType: !151)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !114, line: 62, size: 1024, elements: !152)
!152 = !{!153, !155, !156, !157, !158, !159, !163, !164, !178, !179}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !151, file: !114, line: 63, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !151, file: !114, line: 63, baseType: !154, size: 64, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !151, file: !114, line: 64, baseType: !98, size: 8, offset: 128)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !151, file: !114, line: 64, baseType: !98, size: 8, offset: 136)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !151, file: !114, line: 65, baseType: !79, size: 16, offset: 144)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !151, file: !114, line: 66, baseType: !160, size: 512, offset: 160)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 512, elements: !161)
!161 = !{!162}
!162 = !DISubrange(count: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !151, file: !114, line: 67, baseType: !5, size: 32, offset: 672)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !151, file: !114, line: 69, baseType: !165, size: 256, offset: 704)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !114, line: 60, baseType: !166)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !114, line: 48, size: 256, elements: !167)
!167 = !{!168, !169, !176, !177}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !166, file: !114, line: 49, baseType: !58, size: 64)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !166, file: !114, line: 58, baseType: !170, size: 128, offset: 64)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !171, line: 71, baseType: !172)
!171 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !171, line: 69, size: 128, elements: !173)
!173 = !{!174, !175}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !172, file: !171, line: 70, baseType: !58, size: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !172, file: !171, line: 70, baseType: !58, size: 64, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !166, file: !114, line: 59, baseType: !5, size: 32, offset: 192)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !166, file: !114, line: 59, baseType: !5, size: 32, offset: 224)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !151, file: !114, line: 70, baseType: !5, size: 32, offset: 960)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !151, file: !114, line: 74, baseType: !5, size: 32, offset: 992)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !109, file: !110, line: 95, baseType: !181, size: 64, offset: 960)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !183, line: 42, flags: DIFlagFwdDecl)
!183 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!184 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !109, file: !110, line: 97, baseType: !79, size: 16, offset: 1024)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !109, file: !110, line: 97, baseType: !79, size: 16, offset: 1040)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !109, file: !110, line: 99, baseType: !57, size: 32, offset: 1056)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !109, file: !110, line: 99, baseType: !57, size: 32, offset: 1088)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !109, file: !110, line: 99, baseType: !57, size: 32, offset: 1120)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !109, file: !110, line: 100, baseType: !57, size: 32, offset: 1152)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !109, file: !110, line: 100, baseType: !57, size: 32, offset: 1184)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !109, file: !110, line: 100, baseType: !57, size: 32, offset: 1216)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !109, file: !110, line: 101, baseType: !57, size: 32, offset: 1248)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !109, file: !110, line: 101, baseType: !57, size: 32, offset: 1280)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !109, file: !110, line: 101, baseType: !57, size: 32, offset: 1312)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !109, file: !110, line: 102, baseType: !57, size: 32, offset: 1344)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !109, file: !110, line: 102, baseType: !57, size: 32, offset: 1376)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !109, file: !110, line: 102, baseType: !57, size: 32, offset: 1408)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !109, file: !110, line: 103, baseType: !57, size: 32, offset: 1440)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !109, file: !110, line: 103, baseType: !57, size: 32, offset: 1472)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !109, file: !110, line: 103, baseType: !57, size: 32, offset: 1504)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !109, file: !110, line: 103, baseType: !57, size: 32, offset: 1536)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !109, file: !110, line: 103, baseType: !57, size: 32, offset: 1568)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !109, file: !110, line: 104, baseType: !57, size: 32, offset: 1600)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !109, file: !110, line: 104, baseType: !57, size: 32, offset: 1632)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !109, file: !110, line: 104, baseType: !57, size: 32, offset: 1664)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !109, file: !110, line: 104, baseType: !57, size: 32, offset: 1696)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !109, file: !110, line: 104, baseType: !57, size: 32, offset: 1728)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !109, file: !110, line: 105, baseType: !57, size: 32, offset: 1760)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !109, file: !110, line: 108, baseType: !210, size: 704, offset: 1792)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !110, line: 53, size: 704, elements: !211)
!211 = !{!212, !213, !214, !215, !216, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !210, file: !110, line: 54, baseType: !57, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !210, file: !110, line: 55, baseType: !57, size: 32, offset: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !210, file: !110, line: 56, baseType: !57, size: 32, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !210, file: !110, line: 57, baseType: !57, size: 32, offset: 96)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !210, file: !110, line: 59, baseType: !217, size: 96, offset: 128)
!217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 96, elements: !218)
!218 = !{!219}
!219 = !DISubrange(count: 3)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !210, file: !110, line: 60, baseType: !217, size: 96, offset: 224)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !210, file: !110, line: 61, baseType: !217, size: 96, offset: 320)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !210, file: !110, line: 63, baseType: !57, size: 32, offset: 416)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !210, file: !110, line: 64, baseType: !57, size: 32, offset: 448)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !210, file: !110, line: 65, baseType: !57, size: 32, offset: 480)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !210, file: !110, line: 67, baseType: !79, size: 16, offset: 512)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !210, file: !110, line: 68, baseType: !79, size: 16, offset: 528)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !210, file: !110, line: 69, baseType: !79, size: 16, offset: 544)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !210, file: !110, line: 70, baseType: !79, size: 16, offset: 560)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !210, file: !110, line: 72, baseType: !57, size: 32, offset: 576)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !210, file: !110, line: 73, baseType: !57, size: 32, offset: 608)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !210, file: !110, line: 74, baseType: !57, size: 32, offset: 640)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !210, file: !110, line: 75, baseType: !57, size: 32, offset: 672)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !109, file: !110, line: 109, baseType: !234, size: 128, offset: 2496)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !110, line: 79, size: 128, elements: !235)
!235 = !{!236, !237, !238, !239}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !234, file: !110, line: 80, baseType: !5, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !234, file: !110, line: 81, baseType: !5, size: 32, offset: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !234, file: !110, line: 82, baseType: !5, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !234, file: !110, line: 83, baseType: !5, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !109, file: !110, line: 111, baseType: !57, size: 32, offset: 2624)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !109, file: !110, line: 111, baseType: !57, size: 32, offset: 2656)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !109, file: !110, line: 112, baseType: !57, size: 32, offset: 2688)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !109, file: !110, line: 112, baseType: !57, size: 32, offset: 2720)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !109, file: !110, line: 113, baseType: !57, size: 32, offset: 2752)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !109, file: !110, line: 114, baseType: !57, size: 32, offset: 2784)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !109, file: !110, line: 114, baseType: !57, size: 32, offset: 2816)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !109, file: !110, line: 115, baseType: !79, size: 16, offset: 2848)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !109, file: !110, line: 115, baseType: !79, size: 16, offset: 2864)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !109, file: !110, line: 116, baseType: !79, size: 16, offset: 2880)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !109, file: !110, line: 117, baseType: !98, size: 8, offset: 2896)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !109, file: !110, line: 117, baseType: !98, size: 8, offset: 2904)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !109, file: !110, line: 119, baseType: !57, size: 32, offset: 2912)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !109, file: !110, line: 119, baseType: !57, size: 32, offset: 2944)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !109, file: !110, line: 120, baseType: !79, size: 16, offset: 2976)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !109, file: !110, line: 120, baseType: !79, size: 16, offset: 2992)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !109, file: !110, line: 121, baseType: !57, size: 32, offset: 3008)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !109, file: !110, line: 121, baseType: !57, size: 32, offset: 3040)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !109, file: !110, line: 122, baseType: !57, size: 32, offset: 3072)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !109, file: !110, line: 123, baseType: !57, size: 32, offset: 3104)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !109, file: !110, line: 124, baseType: !79, size: 16, offset: 3136)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !109, file: !110, line: 125, baseType: !79, size: 16, offset: 3152)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !109, file: !110, line: 127, baseType: !5, size: 32, offset: 3168)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !109, file: !110, line: 127, baseType: !5, size: 32, offset: 3200)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !109, file: !110, line: 128, baseType: !5, size: 32, offset: 3232)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !109, file: !110, line: 128, baseType: !5, size: 32, offset: 3264)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !109, file: !110, line: 129, baseType: !79, size: 16, offset: 3296)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !109, file: !110, line: 129, baseType: !79, size: 16, offset: 3312)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !109, file: !110, line: 129, baseType: !79, size: 16, offset: 3328)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !109, file: !110, line: 129, baseType: !79, size: 16, offset: 3344)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !109, file: !110, line: 130, baseType: !57, size: 32, offset: 3360)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !109, file: !110, line: 130, baseType: !57, size: 32, offset: 3392)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !109, file: !110, line: 130, baseType: !57, size: 32, offset: 3424)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !109, file: !110, line: 130, baseType: !57, size: 32, offset: 3456)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !109, file: !110, line: 131, baseType: !57, size: 32, offset: 3488)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !109, file: !110, line: 131, baseType: !57, size: 32, offset: 3520)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !109, file: !110, line: 131, baseType: !57, size: 32, offset: 3552)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !109, file: !110, line: 131, baseType: !57, size: 32, offset: 3584)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !109, file: !110, line: 132, baseType: !57, size: 32, offset: 3616)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !109, file: !110, line: 132, baseType: !57, size: 32, offset: 3648)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !109, file: !110, line: 133, baseType: !160, size: 512, offset: 3680)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !109, file: !110, line: 135, baseType: !57, size: 32, offset: 4192)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !109, file: !110, line: 136, baseType: !57, size: 32, offset: 4224)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !109, file: !110, line: 137, baseType: !57, size: 32, offset: 4256)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !109, file: !110, line: 138, baseType: !5, size: 32, offset: 4288)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !109, file: !110, line: 141, baseType: !98, size: 8, offset: 4320)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !109, file: !110, line: 141, baseType: !98, size: 8, offset: 4328)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !109, file: !110, line: 141, baseType: !98, size: 8, offset: 4336)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !109, file: !110, line: 141, baseType: !98, size: 8, offset: 4344)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !109, file: !110, line: 142, baseType: !79, size: 16, offset: 4352)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !109, file: !110, line: 142, baseType: !79, size: 16, offset: 4368)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !109, file: !110, line: 142, baseType: !79, size: 16, offset: 4384)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !109, file: !110, line: 145, baseType: !98, size: 8, offset: 4400)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !109, file: !110, line: 145, baseType: !98, size: 8, offset: 4408)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !109, file: !110, line: 148, baseType: !79, size: 16, offset: 4416)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !109, file: !110, line: 148, baseType: !79, size: 16, offset: 4432)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !109, file: !110, line: 149, baseType: !57, size: 32, offset: 4448)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !109, file: !110, line: 149, baseType: !57, size: 32, offset: 4480)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !109, file: !110, line: 152, baseType: !299, size: 128, offset: 4512)
!299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 128, elements: !300)
!300 = !{!301}
!301 = !DISubrange(count: 4)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !109, file: !110, line: 153, baseType: !57, size: 32, offset: 4640)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !109, file: !110, line: 154, baseType: !57, size: 32, offset: 4672)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !109, file: !110, line: 157, baseType: !79, size: 16, offset: 4704)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !109, file: !110, line: 157, baseType: !79, size: 16, offset: 4720)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !109, file: !110, line: 160, baseType: !307, size: 64, offset: 4736)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !309, line: 113, size: 6208, elements: !310)
!309 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!310 = !{!311, !312, !313, !314, !315, !316, !320}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !308, file: !309, line: 114, baseType: !79, size: 16)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !308, file: !309, line: 114, baseType: !79, size: 16, offset: 16)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !308, file: !309, line: 115, baseType: !98, size: 8, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !308, file: !309, line: 115, baseType: !98, size: 8, offset: 40)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !308, file: !309, line: 116, baseType: !98, size: 8, offset: 48)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !308, file: !309, line: 117, baseType: !317, size: 8, offset: 56)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 8, elements: !318)
!318 = !{!319}
!319 = !DISubrange(count: 1)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !308, file: !309, line: 119, baseType: !321, size: 6144, offset: 64)
!321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 6144, elements: !331)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !309, line: 109, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !309, line: 106, size: 192, elements: !324)
!324 = !{!325, !326, !327, !328, !329, !330}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !323, file: !309, line: 107, baseType: !57, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !323, file: !309, line: 107, baseType: !57, size: 32, offset: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !323, file: !309, line: 107, baseType: !57, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !323, file: !309, line: 107, baseType: !57, size: 32, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !323, file: !309, line: 107, baseType: !57, size: 32, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !323, file: !309, line: 108, baseType: !5, size: 32, offset: 160)
!331 = !{!332}
!332 = !DISubrange(count: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !109, file: !110, line: 161, baseType: !307, size: 64, offset: 4800)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !109, file: !110, line: 162, baseType: !98, size: 8, offset: 4864)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !109, file: !110, line: 162, baseType: !98, size: 8, offset: 4872)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !109, file: !110, line: 163, baseType: !98, size: 8, offset: 4880)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !109, file: !110, line: 163, baseType: !98, size: 8, offset: 4888)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !109, file: !110, line: 164, baseType: !79, size: 16, offset: 4896)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !109, file: !110, line: 164, baseType: !79, size: 16, offset: 4912)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !109, file: !110, line: 165, baseType: !57, size: 32, offset: 4928)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !109, file: !110, line: 165, baseType: !57, size: 32, offset: 4960)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !109, file: !110, line: 167, baseType: !343, size: 1152, offset: 4992)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !344, size: 1152, elements: !1772)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !309, line: 57, size: 2496, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !1506, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !345, file: !309, line: 59, baseType: !79, size: 16)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !345, file: !309, line: 59, baseType: !79, size: 16, offset: 16)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !345, file: !309, line: 59, baseType: !79, size: 16, offset: 32)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !345, file: !309, line: 59, baseType: !79, size: 16, offset: 48)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !345, file: !309, line: 60, baseType: !352, size: 64, offset: 64)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !40, line: 115, size: 11392, elements: !354)
!354 = !{!355, !356, !357, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !374, !384, !398, !399, !440, !441, !444, !445, !461, !462, !463, !464, !465, !466, !467, !469, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !546, !547, !548, !549, !550, !551, !552, !553, !554, !557, !560, !569, !570, !571, !572, !573, !576, !579, !582, !583, !589, !590, !591, !592, !593, !594, !596, !599, !602, !606, !1494, !1495}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !353, file: !40, line: 116, baseType: !113, size: 960)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !353, file: !40, line: 117, baseType: !181, size: 64, offset: 960)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !353, file: !40, line: 119, baseType: !358, size: 64, offset: 1024)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !40, line: 57, flags: DIFlagFwdDecl)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !353, file: !40, line: 121, baseType: !79, size: 16, offset: 1088)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !353, file: !40, line: 121, baseType: !79, size: 16, offset: 1104)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !353, file: !40, line: 122, baseType: !5, size: 32, offset: 1120)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !353, file: !40, line: 122, baseType: !5, size: 32, offset: 1152)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !353, file: !40, line: 122, baseType: !5, size: 32, offset: 1184)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !353, file: !40, line: 123, baseType: !160, size: 512, offset: 1216)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !353, file: !40, line: 124, baseType: !352, size: 64, offset: 1728)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !353, file: !40, line: 124, baseType: !352, size: 64, offset: 1792)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !353, file: !40, line: 127, baseType: !352, size: 64, offset: 1856)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !353, file: !40, line: 127, baseType: !352, size: 64, offset: 1920)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !353, file: !40, line: 127, baseType: !352, size: 64, offset: 1984)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !353, file: !40, line: 128, baseType: !372, size: 64, offset: 2048)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !183, line: 45, flags: DIFlagFwdDecl)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !353, file: !40, line: 130, baseType: !375, size: 64, offset: 2112)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !40, line: 97, size: 832, elements: !377)
!377 = !{!378, !382, !383}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !376, file: !40, line: 98, baseType: !379, size: 768)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 768, elements: !380)
!380 = !{!381, !219}
!381 = !DISubrange(count: 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !376, file: !40, line: 99, baseType: !5, size: 32, offset: 768)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !376, file: !40, line: 99, baseType: !5, size: 32, offset: 800)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !353, file: !40, line: 131, baseType: !385, size: 64, offset: 2176)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !387, line: 486, size: 1600, elements: !388)
!387 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!388 = !{!389, !390, !391, !392, !393, !394, !395, !396, !397}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !386, file: !387, line: 487, baseType: !113, size: 960)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !386, file: !387, line: 489, baseType: !170, size: 128, offset: 960)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !386, file: !387, line: 490, baseType: !170, size: 128, offset: 1088)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !386, file: !387, line: 491, baseType: !170, size: 128, offset: 1216)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !386, file: !387, line: 492, baseType: !170, size: 128, offset: 1344)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !386, file: !387, line: 494, baseType: !5, size: 32, offset: 1472)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !386, file: !387, line: 495, baseType: !5, size: 32, offset: 1504)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !386, file: !387, line: 497, baseType: !5, size: 32, offset: 1536)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !386, file: !387, line: 498, baseType: !5, size: 32, offset: 1568)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !353, file: !40, line: 132, baseType: !385, size: 64, offset: 2240)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !353, file: !40, line: 133, baseType: !400, size: 64, offset: 2304)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !387, line: 334, size: 1728, elements: !402)
!402 = !{!403, !404, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !439}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !401, file: !387, line: 335, baseType: !170, size: 128)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !401, file: !387, line: 336, baseType: !405, size: 64, offset: 128)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !387, line: 47, flags: DIFlagFwdDecl)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !401, file: !387, line: 338, baseType: !79, size: 16, offset: 192)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !401, file: !387, line: 338, baseType: !79, size: 16, offset: 208)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !401, file: !387, line: 339, baseType: !41, size: 32, offset: 224)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !401, file: !387, line: 340, baseType: !5, size: 32, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !401, file: !387, line: 342, baseType: !57, size: 32, offset: 288)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !401, file: !387, line: 343, baseType: !217, size: 96, offset: 320)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !401, file: !387, line: 344, baseType: !217, size: 96, offset: 416)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !401, file: !387, line: 347, baseType: !170, size: 128, offset: 512)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !401, file: !387, line: 349, baseType: !5, size: 32, offset: 640)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !401, file: !387, line: 350, baseType: !5, size: 32, offset: 672)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !401, file: !387, line: 351, baseType: !58, size: 64, offset: 704)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !401, file: !387, line: 352, baseType: !58, size: 64, offset: 768)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !401, file: !387, line: 354, baseType: !420, size: 384, offset: 832)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !387, line: 116, baseType: !421)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !387, line: 94, size: 384, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !421, file: !387, line: 96, baseType: !5, size: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !421, file: !387, line: 96, baseType: !5, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !421, file: !387, line: 97, baseType: !5, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !421, file: !387, line: 97, baseType: !5, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !421, file: !387, line: 99, baseType: !79, size: 16, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !421, file: !387, line: 100, baseType: !79, size: 16, offset: 144)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !421, file: !387, line: 102, baseType: !79, size: 16, offset: 160)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !421, file: !387, line: 105, baseType: !79, size: 16, offset: 176)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !421, file: !387, line: 108, baseType: !79, size: 16, offset: 192)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !421, file: !387, line: 109, baseType: !79, size: 16, offset: 208)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !421, file: !387, line: 111, baseType: !79, size: 16, offset: 224)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !421, file: !387, line: 112, baseType: !79, size: 16, offset: 240)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !421, file: !387, line: 114, baseType: !5, size: 32, offset: 256)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !421, file: !387, line: 114, baseType: !5, size: 32, offset: 288)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !421, file: !387, line: 115, baseType: !5, size: 32, offset: 320)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !421, file: !387, line: 115, baseType: !5, size: 32, offset: 352)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !401, file: !387, line: 355, baseType: !160, size: 512, offset: 1216)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !353, file: !40, line: 134, baseType: !58, size: 64, offset: 2368)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !353, file: !40, line: 136, baseType: !442, size: 64, offset: 2432)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !4, line: 61, flags: DIFlagFwdDecl)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !353, file: !40, line: 138, baseType: !420, size: 384, offset: 2496)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !353, file: !40, line: 139, baseType: !446, size: 64, offset: 2880)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !387, line: 80, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !387, line: 72, size: 192, elements: !449)
!449 = !{!450, !457, !458, !459, !460}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !448, file: !387, line: 73, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !387, line: 59, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !387, line: 56, size: 128, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !453, file: !387, line: 57, baseType: !217, size: 96)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !453, file: !387, line: 58, baseType: !5, size: 32, offset: 96)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !448, file: !387, line: 74, baseType: !5, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !448, file: !387, line: 76, baseType: !5, size: 32, offset: 96)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !448, file: !387, line: 77, baseType: !5, size: 32, offset: 128)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !448, file: !387, line: 79, baseType: !5, size: 32, offset: 160)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !353, file: !40, line: 141, baseType: !170, size: 128, offset: 2944)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !353, file: !40, line: 142, baseType: !170, size: 128, offset: 3072)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !353, file: !40, line: 143, baseType: !170, size: 128, offset: 3200)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !353, file: !40, line: 144, baseType: !170, size: 128, offset: 3328)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !353, file: !40, line: 146, baseType: !5, size: 32, offset: 3456)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !353, file: !40, line: 147, baseType: !5, size: 32, offset: 3488)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !353, file: !40, line: 150, baseType: !468, size: 64, offset: 3520)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !353, file: !40, line: 151, baseType: !470, size: 64, offset: 3584)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !353, file: !40, line: 152, baseType: !5, size: 32, offset: 3648)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !353, file: !40, line: 153, baseType: !5, size: 32, offset: 3680)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !353, file: !40, line: 156, baseType: !217, size: 96, offset: 3712)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !353, file: !40, line: 156, baseType: !217, size: 96, offset: 3808)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !353, file: !40, line: 156, baseType: !217, size: 96, offset: 3904)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !353, file: !40, line: 157, baseType: !217, size: 96, offset: 4000)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !353, file: !40, line: 158, baseType: !217, size: 96, offset: 4096)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !353, file: !40, line: 159, baseType: !217, size: 96, offset: 4192)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !353, file: !40, line: 160, baseType: !217, size: 96, offset: 4288)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !353, file: !40, line: 160, baseType: !217, size: 96, offset: 4384)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !353, file: !40, line: 161, baseType: !299, size: 128, offset: 4480)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !353, file: !40, line: 161, baseType: !299, size: 128, offset: 4608)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !353, file: !40, line: 162, baseType: !217, size: 96, offset: 4736)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !353, file: !40, line: 162, baseType: !217, size: 96, offset: 4832)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !353, file: !40, line: 163, baseType: !57, size: 32, offset: 4928)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !353, file: !40, line: 163, baseType: !57, size: 32, offset: 4960)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !353, file: !40, line: 164, baseType: !488, size: 512, offset: 4992)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 512, elements: !489)
!489 = !{!301, !301}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !353, file: !40, line: 165, baseType: !488, size: 512, offset: 5504)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !353, file: !40, line: 166, baseType: !488, size: 512, offset: 6016)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !353, file: !40, line: 167, baseType: !488, size: 512, offset: 6528)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !353, file: !40, line: 176, baseType: !488, size: 512, offset: 7040)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !353, file: !40, line: 178, baseType: !41, size: 32, offset: 7552)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !353, file: !40, line: 180, baseType: !79, size: 16, offset: 7584)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !353, file: !40, line: 181, baseType: !79, size: 16, offset: 7600)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !353, file: !40, line: 183, baseType: !79, size: 16, offset: 7616)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !353, file: !40, line: 183, baseType: !79, size: 16, offset: 7632)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !353, file: !40, line: 184, baseType: !79, size: 16, offset: 7648)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !353, file: !40, line: 184, baseType: !79, size: 16, offset: 7664)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !353, file: !40, line: 185, baseType: !79, size: 16, offset: 7680)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !353, file: !40, line: 186, baseType: !79, size: 16, offset: 7696)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !353, file: !40, line: 187, baseType: !79, size: 16, offset: 7712)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !353, file: !40, line: 188, baseType: !98, size: 8, offset: 7728)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !353, file: !40, line: 189, baseType: !98, size: 8, offset: 7736)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !353, file: !40, line: 192, baseType: !5, size: 32, offset: 7744)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !353, file: !40, line: 192, baseType: !5, size: 32, offset: 7776)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !353, file: !40, line: 192, baseType: !5, size: 32, offset: 7808)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !353, file: !40, line: 192, baseType: !5, size: 32, offset: 7840)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !353, file: !40, line: 194, baseType: !5, size: 32, offset: 7872)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !353, file: !40, line: 202, baseType: !57, size: 32, offset: 7904)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !353, file: !40, line: 202, baseType: !57, size: 32, offset: 7936)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !353, file: !40, line: 202, baseType: !57, size: 32, offset: 7968)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !353, file: !40, line: 211, baseType: !57, size: 32, offset: 8000)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !353, file: !40, line: 212, baseType: !57, size: 32, offset: 8032)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !353, file: !40, line: 213, baseType: !57, size: 32, offset: 8064)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !353, file: !40, line: 214, baseType: !57, size: 32, offset: 8096)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !353, file: !40, line: 215, baseType: !57, size: 32, offset: 8128)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !353, file: !40, line: 216, baseType: !57, size: 32, offset: 8160)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !353, file: !40, line: 219, baseType: !57, size: 32, offset: 8192)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !353, file: !40, line: 220, baseType: !57, size: 32, offset: 8224)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !353, file: !40, line: 221, baseType: !57, size: 32, offset: 8256)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !353, file: !40, line: 224, baseType: !77, size: 16, offset: 8288)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !353, file: !40, line: 224, baseType: !77, size: 16, offset: 8304)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !353, file: !40, line: 226, baseType: !79, size: 16, offset: 8320)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !353, file: !40, line: 228, baseType: !98, size: 8, offset: 8336)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !353, file: !40, line: 229, baseType: !98, size: 8, offset: 8344)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !353, file: !40, line: 231, baseType: !79, size: 16, offset: 8352)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !353, file: !40, line: 232, baseType: !98, size: 8, offset: 8368)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !353, file: !40, line: 233, baseType: !98, size: 8, offset: 8376)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !353, file: !40, line: 234, baseType: !57, size: 32, offset: 8384)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !353, file: !40, line: 235, baseType: !57, size: 32, offset: 8416)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !353, file: !40, line: 237, baseType: !170, size: 128, offset: 8448)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !353, file: !40, line: 238, baseType: !170, size: 128, offset: 8576)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !353, file: !40, line: 239, baseType: !170, size: 128, offset: 8704)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !353, file: !40, line: 240, baseType: !170, size: 128, offset: 8832)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !353, file: !40, line: 242, baseType: !57, size: 32, offset: 8960)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !353, file: !40, line: 244, baseType: !79, size: 16, offset: 8992)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !353, file: !40, line: 245, baseType: !77, size: 16, offset: 9008)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !353, file: !40, line: 246, baseType: !299, size: 128, offset: 9024)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !353, file: !40, line: 248, baseType: !5, size: 32, offset: 9152)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !353, file: !40, line: 249, baseType: !5, size: 32, offset: 9184)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !353, file: !40, line: 251, baseType: !544, size: 64, offset: 9216)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !40, line: 251, flags: DIFlagFwdDecl)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !353, file: !40, line: 253, baseType: !98, size: 8, offset: 9280)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !353, file: !40, line: 254, baseType: !98, size: 8, offset: 9288)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !353, file: !40, line: 255, baseType: !79, size: 16, offset: 9296)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !353, file: !40, line: 256, baseType: !217, size: 96, offset: 9312)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !353, file: !40, line: 258, baseType: !170, size: 128, offset: 9408)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !353, file: !40, line: 259, baseType: !170, size: 128, offset: 9536)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !353, file: !40, line: 260, baseType: !170, size: 128, offset: 9664)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !353, file: !40, line: 261, baseType: !170, size: 128, offset: 9792)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !353, file: !40, line: 263, baseType: !555, size: 64, offset: 9920)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !40, line: 52, flags: DIFlagFwdDecl)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !353, file: !40, line: 264, baseType: !558, size: 64, offset: 9984)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !40, line: 53, flags: DIFlagFwdDecl)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !353, file: !40, line: 265, baseType: !561, size: 64, offset: 10048)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !563, line: 51, size: 1216, elements: !564)
!563 = !DIFile(filename: "blender/source/blender/makesdna/DNA_group_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!564 = !{!565, !566, !567, !568}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !562, file: !563, line: 52, baseType: !113, size: 960)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "gobject", scope: !562, file: !563, line: 54, baseType: !170, size: 128, offset: 960)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !562, file: !563, line: 59, baseType: !41, size: 32, offset: 1088)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_ofs", scope: !562, file: !563, line: 60, baseType: !217, size: 96, offset: 1120)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !353, file: !40, line: 267, baseType: !98, size: 8, offset: 10112)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !353, file: !40, line: 268, baseType: !98, size: 8, offset: 10120)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !353, file: !40, line: 269, baseType: !79, size: 16, offset: 10128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !353, file: !40, line: 270, baseType: !57, size: 32, offset: 10144)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !353, file: !40, line: 272, baseType: !574, size: 64, offset: 10176)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !40, line: 54, flags: DIFlagFwdDecl)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !353, file: !40, line: 275, baseType: !577, size: 64, offset: 10240)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !40, line: 275, flags: DIFlagFwdDecl)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !353, file: !40, line: 277, baseType: !580, size: 64, offset: 10304)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !40, line: 56, flags: DIFlagFwdDecl)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !353, file: !40, line: 277, baseType: !580, size: 64, offset: 10368)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !353, file: !40, line: 278, baseType: !584, size: 64, offset: 10432)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !585, line: 27, baseType: !586)
!585 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !587, line: 45, baseType: !588)
!587 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!588 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !353, file: !40, line: 279, baseType: !584, size: 64, offset: 10496)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !353, file: !40, line: 280, baseType: !41, size: 32, offset: 10560)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !353, file: !40, line: 281, baseType: !41, size: 32, offset: 10592)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !353, file: !40, line: 283, baseType: !170, size: 128, offset: 10624)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !353, file: !40, line: 284, baseType: !170, size: 128, offset: 10752)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !353, file: !40, line: 285, baseType: !595, size: 64, offset: 10880)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !353, file: !40, line: 287, baseType: !597, size: 64, offset: 10944)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !40, line: 59, flags: DIFlagFwdDecl)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !353, file: !40, line: 288, baseType: !600, size: 64, offset: 11008)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !40, line: 288, flags: DIFlagFwdDecl)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !353, file: !40, line: 290, baseType: !603, size: 64, offset: 11072)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 64, elements: !604)
!604 = !{!605}
!605 = !DISubrange(count: 2)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !353, file: !40, line: 291, baseType: !607, size: 64, offset: 11136)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !609, line: 65, baseType: !610)
!609 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !609, line: 50, size: 320, elements: !611)
!611 = !{!612, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !610, file: !609, line: 51, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !4, line: 1216, size: 39680, elements: !615)
!615 = !{!616, !617, !618, !619, !719, !720, !721, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !748, !1061, !1064, !1354, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1376, !1377, !1378, !1379, !1380, !1388, !1455, !1462, !1463, !1470, !1473, !1474, !1475, !1476, !1477, !1478}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !614, file: !4, line: 1217, baseType: !113, size: 960)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !614, file: !4, line: 1218, baseType: !181, size: 64, offset: 960)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !614, file: !4, line: 1220, baseType: !352, size: 64, offset: 1024)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !614, file: !4, line: 1221, baseType: !620, size: 64, offset: 1088)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !622, line: 52, size: 4224, elements: !623)
!622 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!623 = !{!624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !693, !694, !695, !696, !697, !698, !700, !716}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !621, file: !622, line: 53, baseType: !113, size: 960)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !621, file: !622, line: 54, baseType: !181, size: 64, offset: 960)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !621, file: !622, line: 56, baseType: !79, size: 16, offset: 1024)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !621, file: !622, line: 56, baseType: !79, size: 16, offset: 1040)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !621, file: !622, line: 57, baseType: !79, size: 16, offset: 1056)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !621, file: !622, line: 57, baseType: !79, size: 16, offset: 1072)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !621, file: !622, line: 59, baseType: !57, size: 32, offset: 1088)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !621, file: !622, line: 59, baseType: !57, size: 32, offset: 1120)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !621, file: !622, line: 59, baseType: !57, size: 32, offset: 1152)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !621, file: !622, line: 60, baseType: !57, size: 32, offset: 1184)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !621, file: !622, line: 60, baseType: !57, size: 32, offset: 1216)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !621, file: !622, line: 60, baseType: !57, size: 32, offset: 1248)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !621, file: !622, line: 61, baseType: !57, size: 32, offset: 1280)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !621, file: !622, line: 61, baseType: !57, size: 32, offset: 1312)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !621, file: !622, line: 61, baseType: !57, size: 32, offset: 1344)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !621, file: !622, line: 68, baseType: !57, size: 32, offset: 1376)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !621, file: !622, line: 68, baseType: !57, size: 32, offset: 1408)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !621, file: !622, line: 68, baseType: !57, size: 32, offset: 1440)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !621, file: !622, line: 69, baseType: !57, size: 32, offset: 1472)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !621, file: !622, line: 69, baseType: !57, size: 32, offset: 1504)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !621, file: !622, line: 74, baseType: !57, size: 32, offset: 1536)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !621, file: !622, line: 79, baseType: !57, size: 32, offset: 1568)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !621, file: !622, line: 81, baseType: !79, size: 16, offset: 1600)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !621, file: !622, line: 91, baseType: !79, size: 16, offset: 1616)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !621, file: !622, line: 92, baseType: !79, size: 16, offset: 1632)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !621, file: !622, line: 93, baseType: !79, size: 16, offset: 1648)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !621, file: !622, line: 94, baseType: !79, size: 16, offset: 1664)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !621, file: !622, line: 94, baseType: !79, size: 16, offset: 1680)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !621, file: !622, line: 94, baseType: !79, size: 16, offset: 1696)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !621, file: !622, line: 94, baseType: !79, size: 16, offset: 1712)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !621, file: !622, line: 96, baseType: !57, size: 32, offset: 1728)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !621, file: !622, line: 96, baseType: !57, size: 32, offset: 1760)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !621, file: !622, line: 96, baseType: !57, size: 32, offset: 1792)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !621, file: !622, line: 96, baseType: !57, size: 32, offset: 1824)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !621, file: !622, line: 98, baseType: !57, size: 32, offset: 1856)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !621, file: !622, line: 98, baseType: !57, size: 32, offset: 1888)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !621, file: !622, line: 98, baseType: !57, size: 32, offset: 1920)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !621, file: !622, line: 98, baseType: !57, size: 32, offset: 1952)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !621, file: !622, line: 99, baseType: !57, size: 32, offset: 1984)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !621, file: !622, line: 99, baseType: !57, size: 32, offset: 2016)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !621, file: !622, line: 100, baseType: !57, size: 32, offset: 2048)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !621, file: !622, line: 100, baseType: !57, size: 32, offset: 2080)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !621, file: !622, line: 103, baseType: !79, size: 16, offset: 2112)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !621, file: !622, line: 103, baseType: !79, size: 16, offset: 2128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !621, file: !622, line: 103, baseType: !79, size: 16, offset: 2144)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !621, file: !622, line: 103, baseType: !79, size: 16, offset: 2160)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !621, file: !622, line: 106, baseType: !57, size: 32, offset: 2176)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !621, file: !622, line: 106, baseType: !57, size: 32, offset: 2208)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !621, file: !622, line: 106, baseType: !57, size: 32, offset: 2240)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !621, file: !622, line: 106, baseType: !57, size: 32, offset: 2272)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !621, file: !622, line: 107, baseType: !79, size: 16, offset: 2304)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !621, file: !622, line: 107, baseType: !79, size: 16, offset: 2320)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !621, file: !622, line: 107, baseType: !79, size: 16, offset: 2336)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !621, file: !622, line: 107, baseType: !79, size: 16, offset: 2352)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !621, file: !622, line: 108, baseType: !57, size: 32, offset: 2368)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !621, file: !622, line: 108, baseType: !57, size: 32, offset: 2400)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !621, file: !622, line: 109, baseType: !57, size: 32, offset: 2432)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !621, file: !622, line: 109, baseType: !57, size: 32, offset: 2464)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !621, file: !622, line: 110, baseType: !57, size: 32, offset: 2496)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !621, file: !622, line: 110, baseType: !57, size: 32, offset: 2528)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !621, file: !622, line: 110, baseType: !57, size: 32, offset: 2560)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !621, file: !622, line: 111, baseType: !79, size: 16, offset: 2592)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !621, file: !622, line: 111, baseType: !79, size: 16, offset: 2608)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !621, file: !622, line: 112, baseType: !79, size: 16, offset: 2624)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !621, file: !622, line: 112, baseType: !79, size: 16, offset: 2640)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !621, file: !622, line: 112, baseType: !79, size: 16, offset: 2656)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !621, file: !622, line: 115, baseType: !79, size: 16, offset: 2672)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !621, file: !622, line: 118, baseType: !692, size: 64, offset: 2688)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !621, file: !622, line: 118, baseType: !692, size: 64, offset: 2752)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !621, file: !622, line: 121, baseType: !372, size: 64, offset: 2816)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !621, file: !622, line: 122, baseType: !343, size: 1152, offset: 2880)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !621, file: !622, line: 123, baseType: !79, size: 16, offset: 4032)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !621, file: !622, line: 123, baseType: !79, size: 16, offset: 4048)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !621, file: !622, line: 123, baseType: !699, size: 32, offset: 4064)
!699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 32, elements: !604)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !621, file: !622, line: 126, baseType: !701, size: 64, offset: 4096)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !114, line: 159, size: 448, elements: !703)
!703 = !{!704, !706, !707, !708, !709, !712}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !702, file: !114, line: 161, baseType: !705, size: 64)
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 64, elements: !604)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !702, file: !114, line: 162, baseType: !705, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !702, file: !114, line: 163, baseType: !699, size: 32, offset: 128)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !702, file: !114, line: 164, baseType: !699, size: 32, offset: 160)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !702, file: !114, line: 165, baseType: !710, size: 128, offset: 192)
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 128, elements: !604)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !702, file: !114, line: 166, baseType: !713, size: 128, offset: 320)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !714, size: 128, elements: !604)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !114, line: 46, flags: DIFlagFwdDecl)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !621, file: !622, line: 129, baseType: !717, size: 64, offset: 4160)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !183, line: 43, flags: DIFlagFwdDecl)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !614, file: !4, line: 1223, baseType: !613, size: 64, offset: 1152)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !614, file: !4, line: 1225, baseType: !170, size: 128, offset: 1216)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !614, file: !4, line: 1226, baseType: !722, size: 64, offset: 1344)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !4, line: 69, size: 320, elements: !724)
!724 = !{!725, !726, !727, !728, !729, !730, !731, !732}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !723, file: !4, line: 70, baseType: !722, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !723, file: !4, line: 70, baseType: !722, size: 64, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !723, file: !4, line: 71, baseType: !41, size: 32, offset: 128)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !723, file: !4, line: 71, baseType: !41, size: 32, offset: 160)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !723, file: !4, line: 72, baseType: !5, size: 32, offset: 192)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !723, file: !4, line: 73, baseType: !79, size: 16, offset: 224)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !723, file: !4, line: 73, baseType: !79, size: 16, offset: 240)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !723, file: !4, line: 74, baseType: !352, size: 64, offset: 256)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !614, file: !4, line: 1227, baseType: !352, size: 64, offset: 1408)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !614, file: !4, line: 1229, baseType: !217, size: 96, offset: 1472)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !614, file: !4, line: 1230, baseType: !217, size: 96, offset: 1568)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !614, file: !4, line: 1231, baseType: !217, size: 96, offset: 1664)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !614, file: !4, line: 1231, baseType: !217, size: 96, offset: 1760)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !614, file: !4, line: 1233, baseType: !41, size: 32, offset: 1856)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !614, file: !4, line: 1234, baseType: !5, size: 32, offset: 1888)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !614, file: !4, line: 1235, baseType: !41, size: 32, offset: 1920)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !614, file: !4, line: 1237, baseType: !79, size: 16, offset: 1952)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !614, file: !4, line: 1239, baseType: !98, size: 8, offset: 1968)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !614, file: !4, line: 1240, baseType: !317, size: 8, offset: 1976)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !614, file: !4, line: 1242, baseType: !717, size: 64, offset: 1984)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !614, file: !4, line: 1244, baseType: !746, size: 64, offset: 2048)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !4, line: 59, flags: DIFlagFwdDecl)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !614, file: !4, line: 1246, baseType: !749, size: 64, offset: 2112)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !4, line: 1067, size: 5184, elements: !751)
!751 = !{!752, !782, !783, !798, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !820, !932, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !981, !982, !983, !984, !985, !986, !987, !988, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1044}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !750, file: !4, line: 1068, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !4, line: 934, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !4, line: 925, size: 576, elements: !756)
!756 = !{!757, !774, !775, !776, !777, !778, !781}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !755, file: !4, line: 926, baseType: !758, size: 320)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !4, line: 830, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !4, line: 813, size: 320, elements: !760)
!760 = !{!761, !764, !767, !768, !771, !772, !773}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !759, file: !4, line: 814, baseType: !762, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !4, line: 51, flags: DIFlagFwdDecl)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !759, file: !4, line: 815, baseType: !765, size: 64, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !4, line: 815, flags: DIFlagFwdDecl)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !759, file: !4, line: 818, baseType: !58, size: 64, offset: 128)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !759, file: !4, line: 819, baseType: !769, size: 32, offset: 192)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !770, size: 32, elements: !300)
!770 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !759, file: !4, line: 822, baseType: !5, size: 32, offset: 224)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !759, file: !4, line: 826, baseType: !5, size: 32, offset: 256)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !759, file: !4, line: 829, baseType: !5, size: 32, offset: 288)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !755, file: !4, line: 928, baseType: !79, size: 16, offset: 320)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !755, file: !4, line: 928, baseType: !79, size: 16, offset: 336)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !755, file: !4, line: 929, baseType: !5, size: 32, offset: 352)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !755, file: !4, line: 930, baseType: !711, size: 64, offset: 384)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !755, file: !4, line: 931, baseType: !779, size: 64, offset: 448)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !4, line: 931, flags: DIFlagFwdDecl)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !755, file: !4, line: 933, baseType: !58, size: 64, offset: 512)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !750, file: !4, line: 1069, baseType: !753, size: 64, offset: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !750, file: !4, line: 1070, baseType: !784, size: 64, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !4, line: 916, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !4, line: 891, size: 704, elements: !787)
!787 = !{!788, !789, !790, !792, !793, !794, !795, !796, !797}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !786, file: !4, line: 892, baseType: !758, size: 320)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !786, file: !4, line: 896, baseType: !5, size: 32, offset: 320)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !786, file: !4, line: 900, baseType: !791, size: 96, offset: 352)
!791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 96, elements: !218)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !786, file: !4, line: 903, baseType: !57, size: 32, offset: 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !786, file: !4, line: 906, baseType: !5, size: 32, offset: 480)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !786, file: !4, line: 909, baseType: !57, size: 32, offset: 512)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !786, file: !4, line: 912, baseType: !57, size: 32, offset: 544)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !786, file: !4, line: 914, baseType: !352, size: 64, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !786, file: !4, line: 915, baseType: !58, size: 64, offset: 640)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !750, file: !4, line: 1071, baseType: !799, size: 64, offset: 192)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !4, line: 920, baseType: !801)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !4, line: 918, size: 320, elements: !802)
!802 = !{!803}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !801, file: !4, line: 919, baseType: !758, size: 320)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !750, file: !4, line: 1075, baseType: !57, size: 32, offset: 256)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !750, file: !4, line: 1077, baseType: !57, size: 32, offset: 288)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !750, file: !4, line: 1078, baseType: !57, size: 32, offset: 320)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !750, file: !4, line: 1079, baseType: !79, size: 16, offset: 352)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !750, file: !4, line: 1082, baseType: !79, size: 16, offset: 368)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !750, file: !4, line: 1085, baseType: !98, size: 8, offset: 384)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !750, file: !4, line: 1086, baseType: !98, size: 8, offset: 392)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !750, file: !4, line: 1087, baseType: !98, size: 8, offset: 400)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !750, file: !4, line: 1088, baseType: !98, size: 8, offset: 408)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !750, file: !4, line: 1090, baseType: !57, size: 32, offset: 416)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !750, file: !4, line: 1093, baseType: !79, size: 16, offset: 448)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !750, file: !4, line: 1096, baseType: !98, size: 8, offset: 464)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !750, file: !4, line: 1098, baseType: !817, size: 40, offset: 472)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 40, elements: !818)
!818 = !{!819}
!819 = !DISubrange(count: 5)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !750, file: !4, line: 1101, baseType: !821, size: 832, offset: 512)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !4, line: 836, size: 832, elements: !822)
!822 = !{!823, !824, !825, !826, !827, !828, !829, !830, !831, !928, !929, !930, !931}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !821, file: !4, line: 837, baseType: !758, size: 320)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !821, file: !4, line: 839, baseType: !79, size: 16, offset: 320)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !821, file: !4, line: 839, baseType: !79, size: 16, offset: 336)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !821, file: !4, line: 842, baseType: !79, size: 16, offset: 352)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !821, file: !4, line: 842, baseType: !79, size: 16, offset: 368)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !821, file: !4, line: 843, baseType: !699, size: 32, offset: 384)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !821, file: !4, line: 845, baseType: !5, size: 32, offset: 416)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !821, file: !4, line: 847, baseType: !58, size: 64, offset: 448)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !821, file: !4, line: 848, baseType: !832, size: 64, offset: 512)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !609, line: 77, size: 15424, elements: !834)
!834 = !{!835, !836, !837, !840, !841, !844, !879, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !917, !918, !922}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !833, file: !609, line: 78, baseType: !113, size: 960)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !833, file: !609, line: 80, baseType: !132, size: 8192, offset: 960)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !833, file: !609, line: 82, baseType: !838, size: 64, offset: 9152)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !609, line: 43, flags: DIFlagFwdDecl)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !833, file: !609, line: 83, baseType: !714, size: 64, offset: 9216)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !833, file: !609, line: 86, baseType: !842, size: 64, offset: 9280)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !609, line: 41, flags: DIFlagFwdDecl)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !833, file: !609, line: 87, baseType: !845, size: 64, offset: 9344)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !90, line: 110, size: 1152, elements: !847)
!847 = !{!848, !849, !850, !851, !852, !853, !854, !856, !857, !858, !867, !868, !869, !870, !872, !875, !876, !877, !878}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !846, file: !90, line: 111, baseType: !845, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !846, file: !90, line: 111, baseType: !845, size: 64, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !846, file: !90, line: 114, baseType: !5, size: 32, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !846, file: !90, line: 114, baseType: !5, size: 32, offset: 160)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !846, file: !90, line: 115, baseType: !79, size: 16, offset: 192)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !846, file: !90, line: 115, baseType: !79, size: 16, offset: 208)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !846, file: !90, line: 118, baseType: !855, size: 64, offset: 256)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !846, file: !90, line: 120, baseType: !692, size: 64, offset: 320)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !846, file: !90, line: 122, baseType: !692, size: 64, offset: 384)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !846, file: !90, line: 125, baseType: !859, size: 128, offset: 448)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !860, line: 89, baseType: !861)
!860 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !860, line: 86, size: 128, elements: !862)
!862 = !{!863, !864, !865, !866}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !861, file: !860, line: 87, baseType: !5, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !861, file: !860, line: 87, baseType: !5, size: 32, offset: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !861, file: !860, line: 88, baseType: !5, size: 32, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !861, file: !860, line: 88, baseType: !5, size: 32, offset: 96)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !846, file: !90, line: 127, baseType: !5, size: 32, offset: 576)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !846, file: !90, line: 127, baseType: !5, size: 32, offset: 608)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !846, file: !90, line: 130, baseType: !170, size: 128, offset: 640)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !846, file: !90, line: 133, baseType: !871, size: 128, offset: 768)
!871 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !859)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !846, file: !90, line: 134, baseType: !873, size: 64, offset: 896)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !89)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !846, file: !90, line: 137, baseType: !5, size: 32, offset: 960)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !846, file: !90, line: 140, baseType: !5, size: 32, offset: 992)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !846, file: !90, line: 143, baseType: !5, size: 32, offset: 1024)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !846, file: !90, line: 146, baseType: !470, size: 64, offset: 1088)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !833, file: !609, line: 89, baseType: !880, size: 512, offset: 9408)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !845, size: 512, elements: !881)
!881 = !{!381}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !833, file: !609, line: 90, baseType: !79, size: 16, offset: 9920)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !833, file: !609, line: 90, baseType: !79, size: 16, offset: 9936)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !833, file: !609, line: 92, baseType: !79, size: 16, offset: 9952)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !833, file: !609, line: 92, baseType: !79, size: 16, offset: 9968)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !833, file: !609, line: 93, baseType: !79, size: 16, offset: 9984)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !833, file: !609, line: 93, baseType: !79, size: 16, offset: 10000)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !833, file: !609, line: 94, baseType: !5, size: 32, offset: 10016)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !833, file: !609, line: 97, baseType: !79, size: 16, offset: 10048)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !833, file: !609, line: 97, baseType: !79, size: 16, offset: 10064)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !833, file: !609, line: 98, baseType: !79, size: 16, offset: 10080)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !833, file: !609, line: 98, baseType: !79, size: 16, offset: 10096)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !833, file: !609, line: 99, baseType: !79, size: 16, offset: 10112)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !833, file: !609, line: 99, baseType: !79, size: 16, offset: 10128)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !833, file: !609, line: 100, baseType: !41, size: 32, offset: 10144)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !833, file: !609, line: 101, baseType: !711, size: 64, offset: 10176)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !833, file: !609, line: 103, baseType: !138, size: 64, offset: 10240)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !833, file: !609, line: 104, baseType: !701, size: 64, offset: 10304)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !833, file: !609, line: 107, baseType: !57, size: 32, offset: 10368)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !833, file: !609, line: 108, baseType: !5, size: 32, offset: 10400)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !833, file: !609, line: 109, baseType: !79, size: 16, offset: 10432)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !833, file: !609, line: 110, baseType: !79, size: 16, offset: 10448)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !833, file: !609, line: 113, baseType: !5, size: 32, offset: 10464)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !833, file: !609, line: 113, baseType: !5, size: 32, offset: 10496)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !833, file: !609, line: 114, baseType: !98, size: 8, offset: 10528)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !833, file: !609, line: 114, baseType: !98, size: 8, offset: 10536)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !833, file: !609, line: 115, baseType: !79, size: 16, offset: 10544)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !833, file: !609, line: 116, baseType: !299, size: 128, offset: 10560)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !833, file: !609, line: 119, baseType: !57, size: 32, offset: 10688)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !833, file: !609, line: 119, baseType: !57, size: 32, offset: 10720)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !833, file: !609, line: 122, baseType: !912, size: 512, offset: 10752)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !913, line: 182, baseType: !914)
!913 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !913, line: 180, size: 512, elements: !915)
!915 = !{!916}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !914, file: !913, line: 181, baseType: !160, size: 512)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !833, file: !609, line: 123, baseType: !98, size: 8, offset: 11264)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !833, file: !609, line: 125, baseType: !919, size: 56, offset: 11272)
!919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 56, elements: !920)
!920 = !{!921}
!921 = !DISubrange(count: 7)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !833, file: !609, line: 126, baseType: !923, size: 4096, offset: 11328)
!923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !924, size: 4096, elements: !881)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !609, line: 69, baseType: !925)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !609, line: 67, size: 512, elements: !926)
!926 = !{!927}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !925, file: !609, line: 68, baseType: !160, size: 512)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !821, file: !4, line: 849, baseType: !832, size: 64, offset: 576)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !821, file: !4, line: 850, baseType: !832, size: 64, offset: 640)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !821, file: !4, line: 851, baseType: !217, size: 96, offset: 704)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !821, file: !4, line: 852, baseType: !57, size: 32, offset: 800)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !750, file: !4, line: 1104, baseType: !933, size: 1344, offset: 1344)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !4, line: 867, size: 1344, elements: !934)
!934 = !{!935, !936, !937, !938, !939, !950, !951, !952, !953, !954, !955, !956, !957, !958}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !933, file: !4, line: 868, baseType: !79, size: 16)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !933, file: !4, line: 869, baseType: !79, size: 16, offset: 16)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !933, file: !4, line: 870, baseType: !79, size: 16, offset: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !933, file: !4, line: 871, baseType: !79, size: 16, offset: 48)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !933, file: !4, line: 873, baseType: !940, size: 896, offset: 64)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !941, size: 896, elements: !920)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !4, line: 864, baseType: !942)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !4, line: 859, size: 128, elements: !943)
!943 = !{!944, !945, !946, !947, !948, !949}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !942, file: !4, line: 860, baseType: !79, size: 16)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !942, file: !4, line: 861, baseType: !79, size: 16, offset: 16)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !942, file: !4, line: 861, baseType: !79, size: 16, offset: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !942, file: !4, line: 861, baseType: !79, size: 16, offset: 48)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !942, file: !4, line: 862, baseType: !5, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !942, file: !4, line: 863, baseType: !57, size: 32, offset: 96)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !933, file: !4, line: 874, baseType: !58, size: 64, offset: 960)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !933, file: !4, line: 876, baseType: !57, size: 32, offset: 1024)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !933, file: !4, line: 876, baseType: !57, size: 32, offset: 1056)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !933, file: !4, line: 878, baseType: !5, size: 32, offset: 1088)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !933, file: !4, line: 879, baseType: !5, size: 32, offset: 1120)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !933, file: !4, line: 881, baseType: !5, size: 32, offset: 1152)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !933, file: !4, line: 881, baseType: !5, size: 32, offset: 1184)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !933, file: !4, line: 883, baseType: !613, size: 64, offset: 1216)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !933, file: !4, line: 884, baseType: !352, size: 64, offset: 1280)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !750, file: !4, line: 1107, baseType: !57, size: 32, offset: 2688)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !750, file: !4, line: 1110, baseType: !57, size: 32, offset: 2720)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !750, file: !4, line: 1113, baseType: !79, size: 16, offset: 2752)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !750, file: !4, line: 1113, baseType: !79, size: 16, offset: 2768)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !750, file: !4, line: 1116, baseType: !98, size: 8, offset: 2784)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !750, file: !4, line: 1117, baseType: !317, size: 8, offset: 2792)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !750, file: !4, line: 1120, baseType: !79, size: 16, offset: 2800)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !750, file: !4, line: 1121, baseType: !57, size: 32, offset: 2816)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !750, file: !4, line: 1122, baseType: !57, size: 32, offset: 2848)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !750, file: !4, line: 1123, baseType: !57, size: 32, offset: 2880)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !750, file: !4, line: 1124, baseType: !57, size: 32, offset: 2912)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !750, file: !4, line: 1125, baseType: !57, size: 32, offset: 2944)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !750, file: !4, line: 1126, baseType: !57, size: 32, offset: 2976)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !750, file: !4, line: 1127, baseType: !57, size: 32, offset: 3008)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !750, file: !4, line: 1128, baseType: !57, size: 32, offset: 3040)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !750, file: !4, line: 1129, baseType: !57, size: 32, offset: 3072)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !750, file: !4, line: 1130, baseType: !57, size: 32, offset: 3104)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !750, file: !4, line: 1131, baseType: !79, size: 16, offset: 3136)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !750, file: !4, line: 1132, baseType: !98, size: 8, offset: 3152)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !750, file: !4, line: 1133, baseType: !98, size: 8, offset: 3160)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !750, file: !4, line: 1134, baseType: !980, size: 24, offset: 3168)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 24, elements: !218)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !750, file: !4, line: 1135, baseType: !98, size: 8, offset: 3192)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !750, file: !4, line: 1138, baseType: !352, size: 64, offset: 3200)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !750, file: !4, line: 1139, baseType: !98, size: 8, offset: 3264)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !750, file: !4, line: 1140, baseType: !98, size: 8, offset: 3272)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !750, file: !4, line: 1141, baseType: !98, size: 8, offset: 3280)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !750, file: !4, line: 1142, baseType: !98, size: 8, offset: 3288)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !750, file: !4, line: 1143, baseType: !98, size: 8, offset: 3296)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !750, file: !4, line: 1144, baseType: !989, size: 64, offset: 3304)
!989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 64, elements: !881)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !750, file: !4, line: 1145, baseType: !989, size: 64, offset: 3368)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !750, file: !4, line: 1148, baseType: !98, size: 8, offset: 3432)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !750, file: !4, line: 1149, baseType: !98, size: 8, offset: 3440)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !750, file: !4, line: 1152, baseType: !98, size: 8, offset: 3448)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !750, file: !4, line: 1152, baseType: !98, size: 8, offset: 3456)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !750, file: !4, line: 1153, baseType: !98, size: 8, offset: 3464)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !750, file: !4, line: 1154, baseType: !79, size: 16, offset: 3472)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !750, file: !4, line: 1154, baseType: !79, size: 16, offset: 3488)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !750, file: !4, line: 1155, baseType: !79, size: 16, offset: 3504)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !750, file: !4, line: 1155, baseType: !79, size: 16, offset: 3520)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !750, file: !4, line: 1156, baseType: !98, size: 8, offset: 3536)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !750, file: !4, line: 1157, baseType: !98, size: 8, offset: 3544)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !750, file: !4, line: 1159, baseType: !98, size: 8, offset: 3552)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !750, file: !4, line: 1160, baseType: !98, size: 8, offset: 3560)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !750, file: !4, line: 1161, baseType: !98, size: 8, offset: 3568)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !750, file: !4, line: 1162, baseType: !98, size: 8, offset: 3576)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !750, file: !4, line: 1165, baseType: !5, size: 32, offset: 3584)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !750, file: !4, line: 1166, baseType: !5, size: 32, offset: 3616)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !750, file: !4, line: 1167, baseType: !5, size: 32, offset: 3648)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !750, file: !4, line: 1168, baseType: !5, size: 32, offset: 3680)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !750, file: !4, line: 1171, baseType: !79, size: 16, offset: 3712)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !750, file: !4, line: 1171, baseType: !79, size: 16, offset: 3728)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !750, file: !4, line: 1172, baseType: !5, size: 32, offset: 3744)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !750, file: !4, line: 1173, baseType: !57, size: 32, offset: 3776)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !750, file: !4, line: 1174, baseType: !57, size: 32, offset: 3808)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !750, file: !4, line: 1177, baseType: !1016, size: 1024, offset: 3840)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !4, line: 963, size: 1024, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1042, !1043}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1016, file: !4, line: 965, baseType: !5, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1016, file: !4, line: 968, baseType: !57, size: 32, offset: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1016, file: !4, line: 971, baseType: !57, size: 32, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1016, file: !4, line: 974, baseType: !57, size: 32, offset: 96)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1016, file: !4, line: 977, baseType: !217, size: 96, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1016, file: !4, line: 979, baseType: !217, size: 96, offset: 224)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1016, file: !4, line: 982, baseType: !5, size: 32, offset: 320)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1016, file: !4, line: 987, baseType: !603, size: 64, offset: 352)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1016, file: !4, line: 989, baseType: !57, size: 32, offset: 416)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1016, file: !4, line: 994, baseType: !5, size: 32, offset: 448)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1016, file: !4, line: 995, baseType: !5, size: 32, offset: 480)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1016, file: !4, line: 997, baseType: !98, size: 8, offset: 512)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1016, file: !4, line: 998, baseType: !919, size: 56, offset: 520)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1016, file: !4, line: 1000, baseType: !57, size: 32, offset: 576)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1016, file: !4, line: 1003, baseType: !603, size: 64, offset: 608)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1016, file: !4, line: 1006, baseType: !5, size: 32, offset: 672)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1016, file: !4, line: 1009, baseType: !57, size: 32, offset: 704)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1016, file: !4, line: 1012, baseType: !603, size: 64, offset: 736)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1016, file: !4, line: 1015, baseType: !603, size: 64, offset: 800)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1016, file: !4, line: 1018, baseType: !5, size: 32, offset: 864)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1016, file: !4, line: 1019, baseType: !1039, size: 64, offset: 896)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1041, line: 132, flags: DIFlagFwdDecl)
!1041 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1016, file: !4, line: 1023, baseType: !57, size: 32, offset: 960)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1016, file: !4, line: 1024, baseType: !5, size: 32, offset: 992)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !750, file: !4, line: 1179, baseType: !1045, size: 320, offset: 4864)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !4, line: 1043, size: 320, elements: !1046)
!1046 = !{!1047, !1048, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1045, file: !4, line: 1044, baseType: !98, size: 8)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1045, file: !4, line: 1045, baseType: !1049, size: 16, offset: 8)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 16, elements: !604)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1045, file: !4, line: 1048, baseType: !98, size: 8, offset: 24)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1045, file: !4, line: 1049, baseType: !57, size: 32, offset: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1045, file: !4, line: 1049, baseType: !57, size: 32, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1045, file: !4, line: 1052, baseType: !57, size: 32, offset: 96)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1045, file: !4, line: 1052, baseType: !57, size: 32, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1045, file: !4, line: 1053, baseType: !98, size: 8, offset: 160)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1045, file: !4, line: 1054, baseType: !980, size: 24, offset: 168)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1045, file: !4, line: 1057, baseType: !57, size: 32, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1045, file: !4, line: 1057, baseType: !57, size: 32, offset: 224)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1045, file: !4, line: 1060, baseType: !57, size: 32, offset: 256)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1045, file: !4, line: 1060, baseType: !57, size: 32, offset: 288)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !614, file: !4, line: 1247, baseType: !1062, size: 64, offset: 2176)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !4, line: 60, flags: DIFlagFwdDecl)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !614, file: !4, line: 1251, baseType: !1065, size: 31872, offset: 2240)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !4, line: 403, size: 31872, elements: !1066)
!1066 = !{!1067, !1149, !1169, !1178, !1198, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1332, !1333, !1334, !1336, !1352, !1353}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1065, file: !4, line: 404, baseType: !1068, size: 1984)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !4, line: 259, size: 1984, elements: !1069)
!1069 = !{!1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1087, !1144}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1068, file: !4, line: 260, baseType: !98, size: 8)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1068, file: !4, line: 263, baseType: !98, size: 8, offset: 8)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1068, file: !4, line: 266, baseType: !98, size: 8, offset: 16)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1068, file: !4, line: 267, baseType: !98, size: 8, offset: 24)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1068, file: !4, line: 269, baseType: !98, size: 8, offset: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1068, file: !4, line: 270, baseType: !98, size: 8, offset: 40)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1068, file: !4, line: 276, baseType: !98, size: 8, offset: 48)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1068, file: !4, line: 279, baseType: !98, size: 8, offset: 56)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1068, file: !4, line: 280, baseType: !79, size: 16, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1068, file: !4, line: 280, baseType: !79, size: 16, offset: 80)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1068, file: !4, line: 281, baseType: !57, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1068, file: !4, line: 284, baseType: !98, size: 8, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1068, file: !4, line: 285, baseType: !98, size: 8, offset: 136)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1068, file: !4, line: 287, baseType: !1084, size: 48, offset: 144)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 48, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 6)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1068, file: !4, line: 290, baseType: !1088, size: 1280, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !913, line: 174, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !913, line: 166, size: 1280, elements: !1090)
!1090 = !{!1091, !1092, !1093, !1094, !1095, !1096, !1097, !1143}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1089, file: !913, line: 167, baseType: !5, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1089, file: !913, line: 167, baseType: !5, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1089, file: !913, line: 168, baseType: !160, size: 512, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1089, file: !913, line: 169, baseType: !160, size: 512, offset: 576)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1089, file: !913, line: 170, baseType: !57, size: 32, offset: 1088)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1089, file: !913, line: 171, baseType: !57, size: 32, offset: 1120)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1089, file: !913, line: 172, baseType: !1098, size: 64, offset: 1152)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !913, line: 72, size: 3072, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1105, !1113, !1114, !1139, !1140, !1141, !1142}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1099, file: !913, line: 73, baseType: !5, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1099, file: !913, line: 73, baseType: !5, size: 32, offset: 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1099, file: !913, line: 74, baseType: !5, size: 32, offset: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1099, file: !913, line: 75, baseType: !5, size: 32, offset: 96)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1099, file: !913, line: 77, baseType: !1106, size: 128, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !860, line: 95, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !860, line: 92, size: 128, elements: !1108)
!1108 = !{!1109, !1110, !1111, !1112}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1107, file: !860, line: 93, baseType: !57, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1107, file: !860, line: 93, baseType: !57, size: 32, offset: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1107, file: !860, line: 94, baseType: !57, size: 32, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1107, file: !860, line: 94, baseType: !57, size: 32, offset: 96)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1099, file: !913, line: 77, baseType: !1106, size: 128, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1099, file: !913, line: 79, baseType: !1115, size: 2304, offset: 384)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 2304, elements: !300)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !913, line: 67, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !913, line: 55, size: 576, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1135, !1136, !1137, !1138}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1117, file: !913, line: 56, baseType: !79, size: 16)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1117, file: !913, line: 56, baseType: !79, size: 16, offset: 16)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1117, file: !913, line: 58, baseType: !57, size: 32, offset: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1117, file: !913, line: 59, baseType: !57, size: 32, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1117, file: !913, line: 59, baseType: !57, size: 32, offset: 96)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1117, file: !913, line: 60, baseType: !603, size: 64, offset: 128)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1117, file: !913, line: 60, baseType: !603, size: 64, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1117, file: !913, line: 61, baseType: !1127, size: 64, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !913, line: 47, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !913, line: 44, size: 96, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1134}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1129, file: !913, line: 45, baseType: !57, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1129, file: !913, line: 45, baseType: !57, size: 32, offset: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1129, file: !913, line: 46, baseType: !79, size: 16, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1129, file: !913, line: 46, baseType: !79, size: 16, offset: 80)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1117, file: !913, line: 62, baseType: !1127, size: 64, offset: 320)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1117, file: !913, line: 64, baseType: !1127, size: 64, offset: 384)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1117, file: !913, line: 65, baseType: !603, size: 64, offset: 448)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1117, file: !913, line: 66, baseType: !603, size: 64, offset: 512)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1099, file: !913, line: 80, baseType: !217, size: 96, offset: 2688)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1099, file: !913, line: 80, baseType: !217, size: 96, offset: 2784)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1099, file: !913, line: 81, baseType: !217, size: 96, offset: 2880)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1099, file: !913, line: 83, baseType: !217, size: 96, offset: 2976)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1089, file: !913, line: 173, baseType: !58, size: 64, offset: 1216)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1068, file: !4, line: 291, baseType: !1145, size: 512, offset: 1472)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !913, line: 178, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !913, line: 176, size: 512, elements: !1147)
!1147 = !{!1148}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1146, file: !913, line: 177, baseType: !160, size: 512)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1065, file: !4, line: 406, baseType: !1150, size: 64, offset: 1984)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !4, line: 80, size: 1472, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1151, file: !4, line: 81, baseType: !58, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1151, file: !4, line: 82, baseType: !58, size: 64, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1151, file: !4, line: 83, baseType: !41, size: 32, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1151, file: !4, line: 84, baseType: !41, size: 32, offset: 160)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1151, file: !4, line: 86, baseType: !41, size: 32, offset: 192)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1151, file: !4, line: 87, baseType: !41, size: 32, offset: 224)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1151, file: !4, line: 88, baseType: !41, size: 32, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1151, file: !4, line: 89, baseType: !41, size: 32, offset: 288)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1151, file: !4, line: 90, baseType: !41, size: 32, offset: 320)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1151, file: !4, line: 91, baseType: !41, size: 32, offset: 352)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1151, file: !4, line: 92, baseType: !41, size: 32, offset: 384)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1151, file: !4, line: 93, baseType: !41, size: 32, offset: 416)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1151, file: !4, line: 95, baseType: !1166, size: 1024, offset: 448)
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 1024, elements: !1167)
!1167 = !{!1168}
!1168 = !DISubrange(count: 128)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1065, file: !4, line: 407, baseType: !1170, size: 64, offset: 2048)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !4, line: 98, size: 1216, elements: !1172)
!1172 = !{!1173, !1174, !1175, !1176, !1177}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1171, file: !4, line: 100, baseType: !58, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1171, file: !4, line: 101, baseType: !58, size: 64, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1171, file: !4, line: 103, baseType: !41, size: 32, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1171, file: !4, line: 104, baseType: !41, size: 32, offset: 160)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1171, file: !4, line: 106, baseType: !1166, size: 1024, offset: 192)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1065, file: !4, line: 408, baseType: !1179, size: 512, offset: 2112)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !4, line: 109, size: 512, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1179, file: !4, line: 111, baseType: !5, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1179, file: !4, line: 112, baseType: !5, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1179, file: !4, line: 115, baseType: !5, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1179, file: !4, line: 116, baseType: !5, size: 32, offset: 96)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1179, file: !4, line: 117, baseType: !5, size: 32, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1179, file: !4, line: 118, baseType: !5, size: 32, offset: 160)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1179, file: !4, line: 119, baseType: !5, size: 32, offset: 192)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1179, file: !4, line: 120, baseType: !5, size: 32, offset: 224)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1179, file: !4, line: 121, baseType: !5, size: 32, offset: 256)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1179, file: !4, line: 122, baseType: !5, size: 32, offset: 288)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1179, file: !4, line: 125, baseType: !5, size: 32, offset: 320)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1179, file: !4, line: 126, baseType: !5, size: 32, offset: 352)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1179, file: !4, line: 127, baseType: !79, size: 16, offset: 384)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1179, file: !4, line: 128, baseType: !79, size: 16, offset: 400)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1179, file: !4, line: 129, baseType: !5, size: 32, offset: 416)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1179, file: !4, line: 130, baseType: !5, size: 32, offset: 448)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1179, file: !4, line: 131, baseType: !5, size: 32, offset: 480)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1065, file: !4, line: 409, baseType: !1199, size: 576, offset: 2624)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !4, line: 134, size: 576, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1199, file: !4, line: 135, baseType: !5, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1199, file: !4, line: 136, baseType: !5, size: 32, offset: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1199, file: !4, line: 137, baseType: !5, size: 32, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1199, file: !4, line: 138, baseType: !5, size: 32, offset: 96)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1199, file: !4, line: 139, baseType: !5, size: 32, offset: 128)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1199, file: !4, line: 140, baseType: !5, size: 32, offset: 160)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1199, file: !4, line: 141, baseType: !5, size: 32, offset: 192)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1199, file: !4, line: 142, baseType: !5, size: 32, offset: 224)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1199, file: !4, line: 143, baseType: !57, size: 32, offset: 256)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1199, file: !4, line: 144, baseType: !5, size: 32, offset: 288)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1199, file: !4, line: 145, baseType: !5, size: 32, offset: 320)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1199, file: !4, line: 147, baseType: !5, size: 32, offset: 352)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1199, file: !4, line: 148, baseType: !5, size: 32, offset: 384)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1199, file: !4, line: 149, baseType: !5, size: 32, offset: 416)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1199, file: !4, line: 150, baseType: !5, size: 32, offset: 448)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1199, file: !4, line: 151, baseType: !5, size: 32, offset: 480)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1199, file: !4, line: 152, baseType: !149, size: 64, offset: 512)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1065, file: !4, line: 411, baseType: !5, size: 32, offset: 3200)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1065, file: !4, line: 411, baseType: !5, size: 32, offset: 3232)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1065, file: !4, line: 411, baseType: !5, size: 32, offset: 3264)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1065, file: !4, line: 412, baseType: !57, size: 32, offset: 3296)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1065, file: !4, line: 413, baseType: !5, size: 32, offset: 3328)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1065, file: !4, line: 413, baseType: !5, size: 32, offset: 3360)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1065, file: !4, line: 415, baseType: !5, size: 32, offset: 3392)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1065, file: !4, line: 415, baseType: !5, size: 32, offset: 3424)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1065, file: !4, line: 416, baseType: !79, size: 16, offset: 3456)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1065, file: !4, line: 416, baseType: !79, size: 16, offset: 3472)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1065, file: !4, line: 418, baseType: !57, size: 32, offset: 3488)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1065, file: !4, line: 418, baseType: !57, size: 32, offset: 3520)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1065, file: !4, line: 421, baseType: !57, size: 32, offset: 3552)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1065, file: !4, line: 421, baseType: !57, size: 32, offset: 3584)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1065, file: !4, line: 421, baseType: !57, size: 32, offset: 3616)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1065, file: !4, line: 425, baseType: !79, size: 16, offset: 3648)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1065, file: !4, line: 425, baseType: !79, size: 16, offset: 3664)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1065, file: !4, line: 425, baseType: !79, size: 16, offset: 3680)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1065, file: !4, line: 426, baseType: !79, size: 16, offset: 3696)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1065, file: !4, line: 428, baseType: !79, size: 16, offset: 3712)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1065, file: !4, line: 428, baseType: !79, size: 16, offset: 3728)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1065, file: !4, line: 431, baseType: !5, size: 32, offset: 3744)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1065, file: !4, line: 433, baseType: !79, size: 16, offset: 3776)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1065, file: !4, line: 435, baseType: !79, size: 16, offset: 3792)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1065, file: !4, line: 437, baseType: !79, size: 16, offset: 3808)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1065, file: !4, line: 439, baseType: !79, size: 16, offset: 3824)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1065, file: !4, line: 441, baseType: !79, size: 16, offset: 3840)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1065, file: !4, line: 443, baseType: !79, size: 16, offset: 3856)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1065, file: !4, line: 449, baseType: !5, size: 32, offset: 3872)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1065, file: !4, line: 453, baseType: !5, size: 32, offset: 3904)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1065, file: !4, line: 458, baseType: !79, size: 16, offset: 3936)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1065, file: !4, line: 462, baseType: !79, size: 16, offset: 3952)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1065, file: !4, line: 467, baseType: !5, size: 32, offset: 3968)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1065, file: !4, line: 467, baseType: !5, size: 32, offset: 4000)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1065, file: !4, line: 469, baseType: !79, size: 16, offset: 4032)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1065, file: !4, line: 469, baseType: !79, size: 16, offset: 4048)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1065, file: !4, line: 469, baseType: !79, size: 16, offset: 4064)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1065, file: !4, line: 469, baseType: !79, size: 16, offset: 4080)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1065, file: !4, line: 474, baseType: !79, size: 16, offset: 4096)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1065, file: !4, line: 475, baseType: !98, size: 8, offset: 4112)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1065, file: !4, line: 476, baseType: !98, size: 8, offset: 4120)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1065, file: !4, line: 481, baseType: !5, size: 32, offset: 4128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1065, file: !4, line: 486, baseType: !5, size: 32, offset: 4160)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1065, file: !4, line: 491, baseType: !5, size: 32, offset: 4192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1065, file: !4, line: 496, baseType: !79, size: 16, offset: 4224)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1065, file: !4, line: 498, baseType: !79, size: 16, offset: 4240)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1065, file: !4, line: 501, baseType: !79, size: 16, offset: 4256)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1065, file: !4, line: 502, baseType: !79, size: 16, offset: 4272)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1065, file: !4, line: 508, baseType: !79, size: 16, offset: 4288)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1065, file: !4, line: 513, baseType: !79, size: 16, offset: 4304)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1065, file: !4, line: 515, baseType: !79, size: 16, offset: 4320)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1065, file: !4, line: 515, baseType: !79, size: 16, offset: 4336)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1065, file: !4, line: 519, baseType: !1106, size: 128, offset: 4352)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1065, file: !4, line: 519, baseType: !1106, size: 128, offset: 4480)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1065, file: !4, line: 520, baseType: !859, size: 128, offset: 4608)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1065, file: !4, line: 523, baseType: !170, size: 128, offset: 4736)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1065, file: !4, line: 524, baseType: !79, size: 16, offset: 4864)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1065, file: !4, line: 527, baseType: !79, size: 16, offset: 4880)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1065, file: !4, line: 532, baseType: !57, size: 32, offset: 4896)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1065, file: !4, line: 532, baseType: !57, size: 32, offset: 4928)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1065, file: !4, line: 534, baseType: !57, size: 32, offset: 4960)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1065, file: !4, line: 538, baseType: !57, size: 32, offset: 4992)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1065, file: !4, line: 542, baseType: !5, size: 32, offset: 5024)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1065, file: !4, line: 545, baseType: !57, size: 32, offset: 5056)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1065, file: !4, line: 545, baseType: !57, size: 32, offset: 5088)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1065, file: !4, line: 545, baseType: !57, size: 32, offset: 5120)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1065, file: !4, line: 548, baseType: !57, size: 32, offset: 5152)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1065, file: !4, line: 551, baseType: !79, size: 16, offset: 5184)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1065, file: !4, line: 551, baseType: !79, size: 16, offset: 5200)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1065, file: !4, line: 551, baseType: !79, size: 16, offset: 5216)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1065, file: !4, line: 551, baseType: !79, size: 16, offset: 5232)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1065, file: !4, line: 552, baseType: !79, size: 16, offset: 5248)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1065, file: !4, line: 552, baseType: !79, size: 16, offset: 5264)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1065, file: !4, line: 553, baseType: !57, size: 32, offset: 5280)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1065, file: !4, line: 553, baseType: !57, size: 32, offset: 5312)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1065, file: !4, line: 554, baseType: !79, size: 16, offset: 5344)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1065, file: !4, line: 554, baseType: !79, size: 16, offset: 5360)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1065, file: !4, line: 555, baseType: !57, size: 32, offset: 5376)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1065, file: !4, line: 555, baseType: !57, size: 32, offset: 5408)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1065, file: !4, line: 558, baseType: !132, size: 8192, offset: 5440)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1065, file: !4, line: 561, baseType: !5, size: 32, offset: 13632)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1065, file: !4, line: 562, baseType: !79, size: 16, offset: 13664)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1065, file: !4, line: 562, baseType: !79, size: 16, offset: 13680)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1065, file: !4, line: 565, baseType: !1302, size: 6144, offset: 13696)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 6144, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 768)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1065, file: !4, line: 568, baseType: !299, size: 128, offset: 19840)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1065, file: !4, line: 569, baseType: !299, size: 128, offset: 19968)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1065, file: !4, line: 572, baseType: !98, size: 8, offset: 20096)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1065, file: !4, line: 573, baseType: !98, size: 8, offset: 20104)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1065, file: !4, line: 574, baseType: !98, size: 8, offset: 20112)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1065, file: !4, line: 575, baseType: !817, size: 40, offset: 20120)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1065, file: !4, line: 578, baseType: !5, size: 32, offset: 20160)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1065, file: !4, line: 579, baseType: !79, size: 16, offset: 20192)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1065, file: !4, line: 580, baseType: !79, size: 16, offset: 20208)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1065, file: !4, line: 581, baseType: !57, size: 32, offset: 20224)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1065, file: !4, line: 582, baseType: !57, size: 32, offset: 20256)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1065, file: !4, line: 585, baseType: !79, size: 16, offset: 20288)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1065, file: !4, line: 585, baseType: !79, size: 16, offset: 20304)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1065, file: !4, line: 586, baseType: !57, size: 32, offset: 20320)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1065, file: !4, line: 589, baseType: !79, size: 16, offset: 20352)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1065, file: !4, line: 589, baseType: !79, size: 16, offset: 20368)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1065, file: !4, line: 590, baseType: !5, size: 32, offset: 20384)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1065, file: !4, line: 593, baseType: !79, size: 16, offset: 20416)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1065, file: !4, line: 593, baseType: !79, size: 16, offset: 20432)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1065, file: !4, line: 594, baseType: !79, size: 16, offset: 20448)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1065, file: !4, line: 594, baseType: !79, size: 16, offset: 20464)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1065, file: !4, line: 595, baseType: !57, size: 32, offset: 20480)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1065, file: !4, line: 596, baseType: !57, size: 32, offset: 20512)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1065, file: !4, line: 597, baseType: !1329, size: 64, offset: 20544)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1331, line: 44, flags: DIFlagFwdDecl)
!1331 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1065, file: !4, line: 600, baseType: !5, size: 32, offset: 20608)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1065, file: !4, line: 601, baseType: !57, size: 32, offset: 20640)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1065, file: !4, line: 604, baseType: !1335, size: 256, offset: 20672)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 256, elements: !331)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1065, file: !4, line: 607, baseType: !1337, size: 10880, offset: 20928)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !4, line: 364, size: 10880, elements: !1338)
!1338 = !{!1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1337, file: !4, line: 365, baseType: !1068, size: 1984)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1337, file: !4, line: 367, baseType: !132, size: 8192, offset: 1984)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1337, file: !4, line: 369, baseType: !79, size: 16, offset: 10176)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1337, file: !4, line: 369, baseType: !79, size: 16, offset: 10192)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1337, file: !4, line: 370, baseType: !79, size: 16, offset: 10208)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1337, file: !4, line: 370, baseType: !79, size: 16, offset: 10224)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1337, file: !4, line: 372, baseType: !57, size: 32, offset: 10240)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1337, file: !4, line: 373, baseType: !57, size: 32, offset: 10272)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1337, file: !4, line: 375, baseType: !980, size: 24, offset: 10304)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1337, file: !4, line: 376, baseType: !98, size: 8, offset: 10328)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1337, file: !4, line: 378, baseType: !98, size: 8, offset: 10336)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1337, file: !4, line: 379, baseType: !980, size: 24, offset: 10344)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1337, file: !4, line: 381, baseType: !160, size: 512, offset: 10368)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1065, file: !4, line: 609, baseType: !5, size: 32, offset: 31808)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1065, file: !4, line: 610, baseType: !5, size: 32, offset: 31840)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !614, file: !4, line: 1252, baseType: !1355, size: 256, offset: 34112)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !4, line: 158, size: 256, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1355, file: !4, line: 159, baseType: !5, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1355, file: !4, line: 160, baseType: !57, size: 32, offset: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1355, file: !4, line: 161, baseType: !57, size: 32, offset: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1355, file: !4, line: 162, baseType: !57, size: 32, offset: 96)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1355, file: !4, line: 163, baseType: !5, size: 32, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1355, file: !4, line: 164, baseType: !79, size: 16, offset: 160)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1355, file: !4, line: 165, baseType: !79, size: 16, offset: 176)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1355, file: !4, line: 166, baseType: !57, size: 32, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1355, file: !4, line: 167, baseType: !57, size: 32, offset: 224)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !614, file: !4, line: 1254, baseType: !170, size: 128, offset: 34368)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !614, file: !4, line: 1255, baseType: !170, size: 128, offset: 34496)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !614, file: !4, line: 1257, baseType: !58, size: 64, offset: 34624)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !614, file: !4, line: 1258, baseType: !58, size: 64, offset: 34688)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !614, file: !4, line: 1259, baseType: !58, size: 64, offset: 34752)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !614, file: !4, line: 1260, baseType: !58, size: 64, offset: 34816)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !614, file: !4, line: 1262, baseType: !58, size: 64, offset: 34880)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !614, file: !4, line: 1265, baseType: !1374, size: 64, offset: 34944)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !4, line: 1265, flags: DIFlagFwdDecl)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !614, file: !4, line: 1266, baseType: !79, size: 16, offset: 35008)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !614, file: !4, line: 1267, baseType: !79, size: 16, offset: 35024)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !614, file: !4, line: 1270, baseType: !5, size: 32, offset: 35040)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !614, file: !4, line: 1271, baseType: !170, size: 128, offset: 35072)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !614, file: !4, line: 1274, baseType: !1381, size: 128, offset: 35200)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !4, line: 650, size: 128, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1387}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1381, file: !4, line: 651, baseType: !217, size: 96)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1381, file: !4, line: 652, baseType: !98, size: 8, offset: 96)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1381, file: !4, line: 652, baseType: !98, size: 8, offset: 104)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1381, file: !4, line: 652, baseType: !98, size: 8, offset: 112)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1381, file: !4, line: 652, baseType: !98, size: 8, offset: 120)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !614, file: !4, line: 1275, baseType: !1389, size: 1472, offset: 35328)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !4, line: 676, size: 1472, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1403, !1413, !1414, !1415, !1416, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1389, file: !4, line: 679, baseType: !1381, size: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1389, file: !4, line: 680, baseType: !79, size: 16, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1389, file: !4, line: 680, baseType: !79, size: 16, offset: 144)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1389, file: !4, line: 680, baseType: !79, size: 16, offset: 160)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1389, file: !4, line: 680, baseType: !79, size: 16, offset: 176)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1389, file: !4, line: 681, baseType: !79, size: 16, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1389, file: !4, line: 681, baseType: !79, size: 16, offset: 208)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1389, file: !4, line: 681, baseType: !79, size: 16, offset: 224)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1389, file: !4, line: 681, baseType: !79, size: 16, offset: 240)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1389, file: !4, line: 682, baseType: !79, size: 16, offset: 256)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1389, file: !4, line: 682, baseType: !1402, size: 48, offset: 272)
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 48, elements: !218)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1389, file: !4, line: 685, baseType: !1404, size: 192, offset: 320)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !4, line: 633, size: 192, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1410, !1411, !1412}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1404, file: !4, line: 634, baseType: !79, size: 16)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1404, file: !4, line: 634, baseType: !79, size: 16, offset: 16)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1404, file: !4, line: 635, baseType: !79, size: 16, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1404, file: !4, line: 635, baseType: !79, size: 16, offset: 48)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1404, file: !4, line: 636, baseType: !57, size: 32, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1404, file: !4, line: 636, baseType: !57, size: 32, offset: 96)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1404, file: !4, line: 637, baseType: !1329, size: 64, offset: 128)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1389, file: !4, line: 686, baseType: !79, size: 16, offset: 512)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1389, file: !4, line: 686, baseType: !79, size: 16, offset: 528)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1389, file: !4, line: 687, baseType: !57, size: 32, offset: 544)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1389, file: !4, line: 688, baseType: !1417, size: 448, offset: 576)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !4, line: 674, baseType: !1418)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !4, line: 659, size: 448, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1418, file: !4, line: 660, baseType: !57, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1418, file: !4, line: 661, baseType: !57, size: 32, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1418, file: !4, line: 662, baseType: !57, size: 32, offset: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1418, file: !4, line: 663, baseType: !57, size: 32, offset: 96)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1418, file: !4, line: 664, baseType: !57, size: 32, offset: 128)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1418, file: !4, line: 665, baseType: !57, size: 32, offset: 160)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1418, file: !4, line: 666, baseType: !57, size: 32, offset: 192)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1418, file: !4, line: 667, baseType: !57, size: 32, offset: 224)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1418, file: !4, line: 668, baseType: !57, size: 32, offset: 256)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1418, file: !4, line: 669, baseType: !57, size: 32, offset: 288)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1418, file: !4, line: 670, baseType: !5, size: 32, offset: 320)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1418, file: !4, line: 671, baseType: !57, size: 32, offset: 352)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1418, file: !4, line: 672, baseType: !57, size: 32, offset: 384)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1418, file: !4, line: 673, baseType: !79, size: 16, offset: 416)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1418, file: !4, line: 673, baseType: !79, size: 16, offset: 432)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1389, file: !4, line: 692, baseType: !57, size: 32, offset: 1024)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1389, file: !4, line: 697, baseType: !57, size: 32, offset: 1056)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1389, file: !4, line: 703, baseType: !5, size: 32, offset: 1088)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1389, file: !4, line: 704, baseType: !79, size: 16, offset: 1120)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1389, file: !4, line: 704, baseType: !79, size: 16, offset: 1136)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1389, file: !4, line: 705, baseType: !79, size: 16, offset: 1152)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1389, file: !4, line: 706, baseType: !79, size: 16, offset: 1168)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1389, file: !4, line: 707, baseType: !79, size: 16, offset: 1184)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1389, file: !4, line: 708, baseType: !79, size: 16, offset: 1200)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1389, file: !4, line: 709, baseType: !79, size: 16, offset: 1216)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1389, file: !4, line: 709, baseType: !79, size: 16, offset: 1232)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1389, file: !4, line: 709, baseType: !79, size: 16, offset: 1248)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1389, file: !4, line: 709, baseType: !79, size: 16, offset: 1264)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1389, file: !4, line: 710, baseType: !79, size: 16, offset: 1280)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1389, file: !4, line: 711, baseType: !79, size: 16, offset: 1296)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1389, file: !4, line: 712, baseType: !57, size: 32, offset: 1312)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1389, file: !4, line: 713, baseType: !57, size: 32, offset: 1344)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1389, file: !4, line: 713, baseType: !57, size: 32, offset: 1376)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1389, file: !4, line: 713, baseType: !57, size: 32, offset: 1408)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1389, file: !4, line: 713, baseType: !57, size: 32, offset: 1440)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !614, file: !4, line: 1278, baseType: !1456, size: 64, offset: 36800)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !4, line: 1197, size: 64, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1461}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1456, file: !4, line: 1199, baseType: !57, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1456, file: !4, line: 1200, baseType: !98, size: 8, offset: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1456, file: !4, line: 1201, baseType: !98, size: 8, offset: 40)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1456, file: !4, line: 1202, baseType: !79, size: 16, offset: 48)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !614, file: !4, line: 1281, baseType: !442, size: 64, offset: 36864)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !614, file: !4, line: 1284, baseType: !1464, size: 192, offset: 36928)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !4, line: 1208, size: 192, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1464, file: !4, line: 1209, baseType: !217, size: 96)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1464, file: !4, line: 1210, baseType: !5, size: 32, offset: 96)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1464, file: !4, line: 1210, baseType: !5, size: 32, offset: 128)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1464, file: !4, line: 1210, baseType: !5, size: 32, offset: 160)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !614, file: !4, line: 1287, baseType: !1471, size: 64, offset: 37120)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !4, line: 62, flags: DIFlagFwdDecl)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !614, file: !4, line: 1289, baseType: !584, size: 64, offset: 37184)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !614, file: !4, line: 1290, baseType: !584, size: 64, offset: 37248)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !614, file: !4, line: 1293, baseType: !1088, size: 1280, offset: 37312)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !614, file: !4, line: 1294, baseType: !1145, size: 512, offset: 38592)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !614, file: !4, line: 1295, baseType: !912, size: 512, offset: 39104)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !614, file: !4, line: 1298, baseType: !1479, size: 64, offset: 39616)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !4, line: 1298, flags: DIFlagFwdDecl)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !610, file: !609, line: 53, baseType: !5, size: 32, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !610, file: !609, line: 54, baseType: !5, size: 32, offset: 96)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !610, file: !609, line: 55, baseType: !5, size: 32, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !610, file: !609, line: 55, baseType: !5, size: 32, offset: 160)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !610, file: !609, line: 56, baseType: !98, size: 8, offset: 192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !610, file: !609, line: 56, baseType: !98, size: 8, offset: 200)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !610, file: !609, line: 57, baseType: !98, size: 8, offset: 208)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !610, file: !609, line: 57, baseType: !98, size: 8, offset: 216)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !610, file: !609, line: 59, baseType: !79, size: 16, offset: 224)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !610, file: !609, line: 59, baseType: !79, size: 16, offset: 240)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !610, file: !609, line: 59, baseType: !79, size: 16, offset: 256)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !610, file: !609, line: 61, baseType: !79, size: 16, offset: 272)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !610, file: !609, line: 63, baseType: !5, size: 32, offset: 288)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !353, file: !40, line: 293, baseType: !170, size: 128, offset: 11200)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !353, file: !40, line: 294, baseType: !1496, size: 64, offset: 11328)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !40, line: 113, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !40, line: 108, size: 256, elements: !1499)
!1499 = !{!1500, !1502, !1503, !1504, !1505}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1498, file: !40, line: 109, baseType: !1501, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1498, file: !40, line: 109, baseType: !1501, size: 64, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1498, file: !40, line: 110, baseType: !352, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1498, file: !40, line: 111, baseType: !5, size: 32, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1498, file: !40, line: 112, baseType: !57, size: 32, offset: 224)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !345, file: !309, line: 61, baseType: !1507, size: 64, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !309, line: 202, size: 3328, elements: !1509)
!1509 = !{!1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1653, !1654, !1683, !1703, !1711, !1712}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1508, file: !309, line: 203, baseType: !113, size: 960)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1508, file: !309, line: 204, baseType: !181, size: 64, offset: 960)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1508, file: !309, line: 206, baseType: !57, size: 32, offset: 1024)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1508, file: !309, line: 206, baseType: !57, size: 32, offset: 1056)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1508, file: !309, line: 207, baseType: !57, size: 32, offset: 1088)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1508, file: !309, line: 207, baseType: !57, size: 32, offset: 1120)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1508, file: !309, line: 207, baseType: !57, size: 32, offset: 1152)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1508, file: !309, line: 207, baseType: !57, size: 32, offset: 1184)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1508, file: !309, line: 207, baseType: !57, size: 32, offset: 1216)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1508, file: !309, line: 207, baseType: !57, size: 32, offset: 1248)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1508, file: !309, line: 208, baseType: !57, size: 32, offset: 1280)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1508, file: !309, line: 208, baseType: !57, size: 32, offset: 1312)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1508, file: !309, line: 211, baseType: !57, size: 32, offset: 1344)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1508, file: !309, line: 211, baseType: !57, size: 32, offset: 1376)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1508, file: !309, line: 211, baseType: !57, size: 32, offset: 1408)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1508, file: !309, line: 211, baseType: !57, size: 32, offset: 1440)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1508, file: !309, line: 211, baseType: !57, size: 32, offset: 1472)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1508, file: !309, line: 214, baseType: !57, size: 32, offset: 1504)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1508, file: !309, line: 214, baseType: !57, size: 32, offset: 1536)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1508, file: !309, line: 217, baseType: !57, size: 32, offset: 1568)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1508, file: !309, line: 218, baseType: !57, size: 32, offset: 1600)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1508, file: !309, line: 219, baseType: !57, size: 32, offset: 1632)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1508, file: !309, line: 220, baseType: !57, size: 32, offset: 1664)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1508, file: !309, line: 221, baseType: !57, size: 32, offset: 1696)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1508, file: !309, line: 222, baseType: !79, size: 16, offset: 1728)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1508, file: !309, line: 222, baseType: !79, size: 16, offset: 1744)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1508, file: !309, line: 224, baseType: !79, size: 16, offset: 1760)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1508, file: !309, line: 224, baseType: !79, size: 16, offset: 1776)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1508, file: !309, line: 227, baseType: !79, size: 16, offset: 1792)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1508, file: !309, line: 227, baseType: !79, size: 16, offset: 1808)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1508, file: !309, line: 229, baseType: !79, size: 16, offset: 1824)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1508, file: !309, line: 229, baseType: !79, size: 16, offset: 1840)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1508, file: !309, line: 230, baseType: !79, size: 16, offset: 1856)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1508, file: !309, line: 230, baseType: !79, size: 16, offset: 1872)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1508, file: !309, line: 232, baseType: !57, size: 32, offset: 1888)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1508, file: !309, line: 232, baseType: !57, size: 32, offset: 1920)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1508, file: !309, line: 232, baseType: !57, size: 32, offset: 1952)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1508, file: !309, line: 232, baseType: !57, size: 32, offset: 1984)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1508, file: !309, line: 233, baseType: !5, size: 32, offset: 2016)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1508, file: !309, line: 234, baseType: !5, size: 32, offset: 2048)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1508, file: !309, line: 235, baseType: !79, size: 16, offset: 2080)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1508, file: !309, line: 235, baseType: !79, size: 16, offset: 2096)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1508, file: !309, line: 236, baseType: !79, size: 16, offset: 2112)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1508, file: !309, line: 239, baseType: !79, size: 16, offset: 2128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1508, file: !309, line: 240, baseType: !5, size: 32, offset: 2144)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1508, file: !309, line: 241, baseType: !5, size: 32, offset: 2176)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1508, file: !309, line: 241, baseType: !5, size: 32, offset: 2208)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1508, file: !309, line: 241, baseType: !5, size: 32, offset: 2240)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1508, file: !309, line: 243, baseType: !57, size: 32, offset: 2272)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1508, file: !309, line: 243, baseType: !57, size: 32, offset: 2304)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1508, file: !309, line: 244, baseType: !57, size: 32, offset: 2336)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1508, file: !309, line: 246, baseType: !610, size: 320, offset: 2368)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1508, file: !309, line: 248, baseType: !717, size: 64, offset: 2688)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1508, file: !309, line: 249, baseType: !372, size: 64, offset: 2752)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1508, file: !309, line: 250, baseType: !832, size: 64, offset: 2816)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1508, file: !309, line: 251, baseType: !307, size: 64, offset: 2880)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1508, file: !309, line: 252, baseType: !1567, size: 64, offset: 2944)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !309, line: 122, size: 1600, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1637, !1638, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1568, file: !309, line: 123, baseType: !352, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1568, file: !309, line: 124, baseType: !832, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1568, file: !309, line: 125, baseType: !1573, size: 384, offset: 128)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1574, size: 384, elements: !1085)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1041, line: 70, size: 19840, elements: !1576)
!1576 = !{!1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1590, !1591, !1592, !1593, !1594, !1596, !1597, !1598, !1599, !1603, !1604, !1605, !1606, !1607, !1610, !1611, !1612, !1613, !1614, !1617, !1618, !1620, !1621, !1622, !1623, !1624, !1625, !1628, !1629, !1630}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1575, file: !1041, line: 71, baseType: !1574, size: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1575, file: !1041, line: 71, baseType: !1574, size: 64, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1575, file: !1041, line: 74, baseType: !5, size: 32, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1575, file: !1041, line: 74, baseType: !5, size: 32, offset: 160)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1575, file: !1041, line: 79, baseType: !770, size: 8, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1575, file: !1041, line: 80, baseType: !5, size: 32, offset: 224)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1575, file: !1041, line: 83, baseType: !5, size: 32, offset: 256)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !1575, file: !1041, line: 84, baseType: !5, size: 32, offset: 288)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1575, file: !1041, line: 87, baseType: !711, size: 64, offset: 320)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !1575, file: !1041, line: 88, baseType: !692, size: 64, offset: 384)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !1575, file: !1041, line: 93, baseType: !1588, size: 128, offset: 448)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 128, elements: !604)
!1589 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1575, file: !1041, line: 96, baseType: !5, size: 32, offset: 576)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1575, file: !1041, line: 96, baseType: !5, size: 32, offset: 608)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !1575, file: !1041, line: 97, baseType: !5, size: 32, offset: 640)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !1575, file: !1041, line: 97, baseType: !5, size: 32, offset: 672)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !1575, file: !1041, line: 98, baseType: !1595, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !1575, file: !1041, line: 101, baseType: !855, size: 64, offset: 768)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !1575, file: !1041, line: 102, baseType: !692, size: 64, offset: 832)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1575, file: !1041, line: 105, baseType: !57, size: 32, offset: 896)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !1575, file: !1041, line: 108, baseType: !1600, size: 1280, offset: 960)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1574, size: 1280, elements: !1601)
!1601 = !{!1602}
!1602 = !DISubrange(count: 20)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !1575, file: !1041, line: 109, baseType: !5, size: 32, offset: 2240)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !1575, file: !1041, line: 109, baseType: !5, size: 32, offset: 2272)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1575, file: !1041, line: 112, baseType: !5, size: 32, offset: 2304)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !1575, file: !1041, line: 113, baseType: !5, size: 32, offset: 2336)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1575, file: !1041, line: 114, baseType: !1608, size: 64, offset: 2368)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !1041, line: 50, flags: DIFlagFwdDecl)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1575, file: !1041, line: 115, baseType: !58, size: 64, offset: 2432)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !1575, file: !1041, line: 118, baseType: !5, size: 32, offset: 2496)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1575, file: !1041, line: 119, baseType: !132, size: 8192, offset: 2528)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !1575, file: !1041, line: 120, baseType: !132, size: 8192, offset: 10720)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !1575, file: !1041, line: 123, baseType: !1615, size: 64, offset: 18944)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !1041, line: 123, flags: DIFlagFwdDecl)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !1575, file: !1041, line: 124, baseType: !5, size: 32, offset: 19008)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !1575, file: !1041, line: 127, baseType: !1619, size: 64, offset: 19072)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !1575, file: !1041, line: 128, baseType: !41, size: 32, offset: 19136)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !1575, file: !1041, line: 129, baseType: !41, size: 32, offset: 19168)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !1575, file: !1041, line: 132, baseType: !1039, size: 64, offset: 19200)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !1575, file: !1041, line: 133, baseType: !1039, size: 64, offset: 19264)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !1575, file: !1041, line: 134, baseType: !711, size: 64, offset: 19328)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !1575, file: !1041, line: 135, baseType: !1626, size: 64, offset: 19392)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !1041, line: 135, flags: DIFlagFwdDecl)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !1575, file: !1041, line: 136, baseType: !5, size: 32, offset: 19456)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !1575, file: !1041, line: 137, baseType: !859, size: 128, offset: 19488)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !1575, file: !1041, line: 140, baseType: !1631, size: 192, offset: 19648)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !1041, line: 55, size: 192, elements: !1632)
!1632 = !{!1633, !1634, !1635, !1636}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !1631, file: !1041, line: 56, baseType: !41, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !1631, file: !1041, line: 57, baseType: !41, size: 32, offset: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1631, file: !1041, line: 58, baseType: !1619, size: 64, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1631, file: !1041, line: 59, baseType: !41, size: 32, offset: 128)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1568, file: !309, line: 126, baseType: !488, size: 512, offset: 512)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1568, file: !309, line: 127, baseType: !1639, size: 288, offset: 1024)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 288, elements: !1640)
!1640 = !{!219, !219}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1568, file: !309, line: 128, baseType: !79, size: 16, offset: 1312)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1568, file: !309, line: 128, baseType: !79, size: 16, offset: 1328)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1568, file: !309, line: 129, baseType: !57, size: 32, offset: 1344)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1568, file: !309, line: 129, baseType: !57, size: 32, offset: 1376)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1568, file: !309, line: 130, baseType: !57, size: 32, offset: 1408)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1568, file: !309, line: 131, baseType: !41, size: 32, offset: 1440)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1568, file: !309, line: 132, baseType: !79, size: 16, offset: 1472)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1568, file: !309, line: 132, baseType: !79, size: 16, offset: 1488)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1568, file: !309, line: 133, baseType: !5, size: 32, offset: 1504)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1568, file: !309, line: 133, baseType: !5, size: 32, offset: 1536)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1568, file: !309, line: 134, baseType: !79, size: 16, offset: 1568)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1568, file: !309, line: 134, baseType: !79, size: 16, offset: 1584)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1508, file: !309, line: 253, baseType: !701, size: 64, offset: 3008)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1508, file: !309, line: 254, baseType: !1655, size: 64, offset: 3072)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !309, line: 137, size: 832, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1656, file: !309, line: 138, baseType: !79, size: 16)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1656, file: !309, line: 140, baseType: !79, size: 16, offset: 16)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1656, file: !309, line: 141, baseType: !57, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1656, file: !309, line: 142, baseType: !57, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1656, file: !309, line: 143, baseType: !79, size: 16, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1656, file: !309, line: 144, baseType: !79, size: 16, offset: 112)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1656, file: !309, line: 145, baseType: !5, size: 32, offset: 128)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1656, file: !309, line: 147, baseType: !5, size: 32, offset: 160)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1656, file: !309, line: 149, baseType: !352, size: 64, offset: 192)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1656, file: !309, line: 150, baseType: !5, size: 32, offset: 256)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1656, file: !309, line: 151, baseType: !79, size: 16, offset: 288)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1656, file: !309, line: 152, baseType: !79, size: 16, offset: 304)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1656, file: !309, line: 154, baseType: !58, size: 64, offset: 320)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1656, file: !309, line: 155, baseType: !692, size: 64, offset: 384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1656, file: !309, line: 157, baseType: !57, size: 32, offset: 448)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1656, file: !309, line: 158, baseType: !79, size: 16, offset: 480)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1656, file: !309, line: 159, baseType: !79, size: 16, offset: 496)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1656, file: !309, line: 160, baseType: !79, size: 16, offset: 512)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1656, file: !309, line: 161, baseType: !1402, size: 48, offset: 528)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1656, file: !309, line: 162, baseType: !57, size: 32, offset: 576)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1656, file: !309, line: 164, baseType: !57, size: 32, offset: 608)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1656, file: !309, line: 164, baseType: !57, size: 32, offset: 640)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1656, file: !309, line: 164, baseType: !57, size: 32, offset: 672)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1656, file: !309, line: 165, baseType: !307, size: 64, offset: 704)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1656, file: !309, line: 167, baseType: !1098, size: 64, offset: 768)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1508, file: !309, line: 255, baseType: !1684, size: 64, offset: 3136)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !309, line: 170, size: 8704, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1685, file: !309, line: 171, baseType: !791, size: 96)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1685, file: !309, line: 172, baseType: !5, size: 32, offset: 96)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1685, file: !309, line: 173, baseType: !79, size: 16, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1685, file: !309, line: 174, baseType: !79, size: 16, offset: 144)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1685, file: !309, line: 175, baseType: !79, size: 16, offset: 160)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1685, file: !309, line: 176, baseType: !79, size: 16, offset: 176)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1685, file: !309, line: 177, baseType: !79, size: 16, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1685, file: !309, line: 178, baseType: !79, size: 16, offset: 208)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1685, file: !309, line: 179, baseType: !5, size: 32, offset: 224)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1685, file: !309, line: 181, baseType: !352, size: 64, offset: 256)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1685, file: !309, line: 182, baseType: !57, size: 32, offset: 320)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1685, file: !309, line: 183, baseType: !5, size: 32, offset: 352)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1685, file: !309, line: 184, baseType: !132, size: 8192, offset: 384)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1685, file: !309, line: 187, baseType: !692, size: 64, offset: 8576)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1685, file: !309, line: 188, baseType: !5, size: 32, offset: 8640)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1685, file: !309, line: 189, baseType: !5, size: 32, offset: 8672)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1508, file: !309, line: 256, baseType: !1704, size: 64, offset: 3200)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !309, line: 193, size: 640, elements: !1706)
!1706 = !{!1707, !1708, !1709, !1710}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1705, file: !309, line: 194, baseType: !352, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1705, file: !309, line: 195, baseType: !160, size: 512, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1705, file: !309, line: 197, baseType: !5, size: 32, offset: 576)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1705, file: !309, line: 198, baseType: !5, size: 32, offset: 608)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1508, file: !309, line: 258, baseType: !98, size: 8, offset: 3264)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1508, file: !309, line: 259, baseType: !919, size: 56, offset: 3272)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !345, file: !309, line: 62, baseType: !160, size: 512, offset: 192)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !345, file: !309, line: 64, baseType: !98, size: 8, offset: 704)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !345, file: !309, line: 64, baseType: !98, size: 8, offset: 712)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !345, file: !309, line: 64, baseType: !98, size: 8, offset: 720)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !345, file: !309, line: 64, baseType: !98, size: 8, offset: 728)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !345, file: !309, line: 65, baseType: !217, size: 96, offset: 736)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !345, file: !309, line: 65, baseType: !217, size: 96, offset: 832)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !345, file: !309, line: 65, baseType: !57, size: 32, offset: 928)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !345, file: !309, line: 67, baseType: !79, size: 16, offset: 960)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !345, file: !309, line: 67, baseType: !79, size: 16, offset: 976)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !345, file: !309, line: 67, baseType: !79, size: 16, offset: 992)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !345, file: !309, line: 67, baseType: !79, size: 16, offset: 1008)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !345, file: !309, line: 68, baseType: !79, size: 16, offset: 1024)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !345, file: !309, line: 68, baseType: !79, size: 16, offset: 1040)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !345, file: !309, line: 69, baseType: !98, size: 8, offset: 1056)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !345, file: !309, line: 69, baseType: !919, size: 56, offset: 1064)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !345, file: !309, line: 70, baseType: !57, size: 32, offset: 1120)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !345, file: !309, line: 70, baseType: !57, size: 32, offset: 1152)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !345, file: !309, line: 70, baseType: !57, size: 32, offset: 1184)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !345, file: !309, line: 70, baseType: !57, size: 32, offset: 1216)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !345, file: !309, line: 71, baseType: !57, size: 32, offset: 1248)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !345, file: !309, line: 71, baseType: !57, size: 32, offset: 1280)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !345, file: !309, line: 74, baseType: !57, size: 32, offset: 1312)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !345, file: !309, line: 74, baseType: !57, size: 32, offset: 1344)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !345, file: !309, line: 77, baseType: !57, size: 32, offset: 1376)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !345, file: !309, line: 77, baseType: !57, size: 32, offset: 1408)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !345, file: !309, line: 77, baseType: !57, size: 32, offset: 1440)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !345, file: !309, line: 78, baseType: !57, size: 32, offset: 1472)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !345, file: !309, line: 78, baseType: !57, size: 32, offset: 1504)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !345, file: !309, line: 78, baseType: !57, size: 32, offset: 1536)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !345, file: !309, line: 79, baseType: !57, size: 32, offset: 1568)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !345, file: !309, line: 79, baseType: !57, size: 32, offset: 1600)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !345, file: !309, line: 79, baseType: !57, size: 32, offset: 1632)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !345, file: !309, line: 79, baseType: !57, size: 32, offset: 1664)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !345, file: !309, line: 80, baseType: !57, size: 32, offset: 1696)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !345, file: !309, line: 80, baseType: !57, size: 32, offset: 1728)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !345, file: !309, line: 80, baseType: !57, size: 32, offset: 1760)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !345, file: !309, line: 81, baseType: !57, size: 32, offset: 1792)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !345, file: !309, line: 81, baseType: !57, size: 32, offset: 1824)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !345, file: !309, line: 81, baseType: !57, size: 32, offset: 1856)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !345, file: !309, line: 82, baseType: !57, size: 32, offset: 1888)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !345, file: !309, line: 82, baseType: !57, size: 32, offset: 1920)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !345, file: !309, line: 82, baseType: !57, size: 32, offset: 1952)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !345, file: !309, line: 85, baseType: !57, size: 32, offset: 1984)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !345, file: !309, line: 85, baseType: !57, size: 32, offset: 2016)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !345, file: !309, line: 85, baseType: !57, size: 32, offset: 2048)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !345, file: !309, line: 85, baseType: !57, size: 32, offset: 2080)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !345, file: !309, line: 86, baseType: !57, size: 32, offset: 2112)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !345, file: !309, line: 86, baseType: !57, size: 32, offset: 2144)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !345, file: !309, line: 86, baseType: !57, size: 32, offset: 2176)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !345, file: !309, line: 86, baseType: !57, size: 32, offset: 2208)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !345, file: !309, line: 87, baseType: !57, size: 32, offset: 2240)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !345, file: !309, line: 87, baseType: !57, size: 32, offset: 2272)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !345, file: !309, line: 87, baseType: !57, size: 32, offset: 2304)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !345, file: !309, line: 87, baseType: !57, size: 32, offset: 2336)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !345, file: !309, line: 90, baseType: !57, size: 32, offset: 2368)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !345, file: !309, line: 93, baseType: !57, size: 32, offset: 2400)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !345, file: !309, line: 93, baseType: !57, size: 32, offset: 2432)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !345, file: !309, line: 93, baseType: !57, size: 32, offset: 2464)
!1772 = !{!1773}
!1773 = !DISubrange(count: 18)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !109, file: !110, line: 168, baseType: !717, size: 64, offset: 6144)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !109, file: !110, line: 169, baseType: !372, size: 64, offset: 6208)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !109, file: !110, line: 170, baseType: !561, size: 64, offset: 6272)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !109, file: !110, line: 171, baseType: !701, size: 64, offset: 6336)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !109, file: !110, line: 174, baseType: !57, size: 32, offset: 6400)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !109, file: !110, line: 174, baseType: !57, size: 32, offset: 6432)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !109, file: !110, line: 174, baseType: !57, size: 32, offset: 6464)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !109, file: !110, line: 175, baseType: !57, size: 32, offset: 6496)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !109, file: !110, line: 175, baseType: !57, size: 32, offset: 6528)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !109, file: !110, line: 176, baseType: !79, size: 16, offset: 6560)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !109, file: !110, line: 176, baseType: !79, size: 16, offset: 6576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !109, file: !110, line: 179, baseType: !217, size: 96, offset: 6592)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !109, file: !110, line: 179, baseType: !217, size: 96, offset: 6688)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !109, file: !110, line: 180, baseType: !57, size: 32, offset: 6784)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !109, file: !110, line: 180, baseType: !57, size: 32, offset: 6816)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !109, file: !110, line: 180, baseType: !57, size: 32, offset: 6848)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !109, file: !110, line: 181, baseType: !57, size: 32, offset: 6880)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !109, file: !110, line: 181, baseType: !57, size: 32, offset: 6912)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !109, file: !110, line: 182, baseType: !57, size: 32, offset: 6944)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !109, file: !110, line: 182, baseType: !57, size: 32, offset: 6976)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !109, file: !110, line: 183, baseType: !79, size: 16, offset: 7008)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !109, file: !110, line: 183, baseType: !79, size: 16, offset: 7024)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !109, file: !110, line: 185, baseType: !5, size: 32, offset: 7040)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !109, file: !110, line: 186, baseType: !79, size: 16, offset: 7072)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !109, file: !110, line: 187, baseType: !79, size: 16, offset: 7088)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !109, file: !110, line: 190, baseType: !299, size: 128, offset: 7104)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !109, file: !110, line: 191, baseType: !79, size: 16, offset: 7232)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !109, file: !110, line: 192, baseType: !79, size: 16, offset: 7248)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !109, file: !110, line: 195, baseType: !79, size: 16, offset: 7264)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !109, file: !110, line: 196, baseType: !79, size: 16, offset: 7280)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !109, file: !110, line: 197, baseType: !79, size: 16, offset: 7296)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !109, file: !110, line: 198, baseType: !1402, size: 48, offset: 7312)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !109, file: !110, line: 200, baseType: !1807, size: 64, offset: 7360)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !110, line: 86, size: 192, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1808, file: !110, line: 87, baseType: !832, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1808, file: !110, line: 88, baseType: !470, size: 64, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1808, file: !110, line: 89, baseType: !5, size: 32, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1808, file: !110, line: 90, baseType: !5, size: 32, offset: 160)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !109, file: !110, line: 202, baseType: !170, size: 128, offset: 7424)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !91, file: !90, line: 94, baseType: !561, size: 64, offset: 1024)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !91, file: !90, line: 96, baseType: !692, size: 64, offset: 1088)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !91, file: !90, line: 97, baseType: !692, size: 64, offset: 1152)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !91, file: !90, line: 98, baseType: !692, size: 64, offset: 1216)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !91, file: !90, line: 99, baseType: !855, size: 64, offset: 1280)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !91, file: !90, line: 101, baseType: !5, size: 32, offset: 1344)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !91, file: !90, line: 101, baseType: !5, size: 32, offset: 1376)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !91, file: !90, line: 104, baseType: !58, size: 64, offset: 1408)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !91, file: !90, line: 106, baseType: !170, size: 128, offset: 1472)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "psmlist", scope: !85, file: !1, line: 1140, baseType: !595, size: 64, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "edgerect", scope: !85, file: !1, line: 1141, baseType: !692, size: 64, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1827, line: 87, baseType: !1828)
!1827 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!1828 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1829 = !{i32 7, !"Dwarf Version", i32 4}
!1830 = !{i32 2, !"Debug Info Version", i32 3}
!1831 = !{i32 1, !"wchar_size", i32 4}
!1832 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1833 = distinct !DISubprogram(name: "calc_view_vector", scope: !1, file: !1, line: 88, type: !1834, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{null, !692, !57, !57}
!1836 = !{}
!1837 = !DILocalVariable(name: "view", arg: 1, scope: !1833, file: !1, line: 88, type: !692)
!1838 = !DILocation(line: 88, column: 29, scope: !1833)
!1839 = !DILocalVariable(name: "x", arg: 2, scope: !1833, file: !1, line: 88, type: !57)
!1840 = !DILocation(line: 88, column: 44, scope: !1833)
!1841 = !DILocalVariable(name: "y", arg: 3, scope: !1833, file: !1, line: 88, type: !57)
!1842 = !DILocation(line: 88, column: 53, scope: !1833)
!1843 = !DILocation(line: 91, column: 12, scope: !1833)
!1844 = !DILocation(line: 91, column: 11, scope: !1833)
!1845 = !DILocation(line: 91, column: 2, scope: !1833)
!1846 = !DILocation(line: 91, column: 9, scope: !1833)
!1847 = !DILocation(line: 93, column: 10, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1833, file: !1, line: 93, column: 6)
!1849 = !DILocation(line: 93, column: 15, scope: !1848)
!1850 = !DILocation(line: 93, column: 6, scope: !1833)
!1851 = !DILocation(line: 94, column: 12, scope: !1852)
!1852 = distinct !DILexicalBlock(scope: !1848, file: !1, line: 93, column: 26)
!1853 = !DILocation(line: 94, column: 19, scope: !1852)
!1854 = !DILocation(line: 94, column: 3, scope: !1852)
!1855 = !DILocation(line: 94, column: 10, scope: !1852)
!1856 = !DILocation(line: 95, column: 2, scope: !1852)
!1857 = !DILocation(line: 98, column: 11, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1859, file: !1, line: 98, column: 7)
!1859 = distinct !DILexicalBlock(scope: !1848, file: !1, line: 96, column: 7)
!1860 = !DILocation(line: 98, column: 16, scope: !1858)
!1861 = !DILocation(line: 98, column: 7, scope: !1859)
!1862 = !DILocation(line: 99, column: 10, scope: !1863)
!1863 = distinct !DILexicalBlock(scope: !1858, file: !1, line: 98, column: 30)
!1864 = !DILocation(line: 99, column: 5, scope: !1863)
!1865 = !DILocation(line: 100, column: 3, scope: !1863)
!1866 = !DILocation(line: 103, column: 8, scope: !1859)
!1867 = !DILocation(line: 103, column: 21, scope: !1859)
!1868 = !DILocation(line: 103, column: 12, scope: !1859)
!1869 = !DILocation(line: 103, column: 10, scope: !1859)
!1870 = !DILocation(line: 103, column: 5, scope: !1859)
!1871 = !DILocation(line: 104, column: 25, scope: !1859)
!1872 = !DILocation(line: 104, column: 32, scope: !1859)
!1873 = !DILocation(line: 104, column: 36, scope: !1859)
!1874 = !DILocation(line: 104, column: 34, scope: !1859)
!1875 = !DILocation(line: 104, column: 30, scope: !1859)
!1876 = !DILocation(line: 104, column: 3, scope: !1859)
!1877 = !DILocation(line: 104, column: 11, scope: !1859)
!1878 = !DILocation(line: 106, column: 8, scope: !1859)
!1879 = !DILocation(line: 106, column: 21, scope: !1859)
!1880 = !DILocation(line: 106, column: 12, scope: !1859)
!1881 = !DILocation(line: 106, column: 10, scope: !1859)
!1882 = !DILocation(line: 106, column: 5, scope: !1859)
!1883 = !DILocation(line: 107, column: 25, scope: !1859)
!1884 = !DILocation(line: 107, column: 32, scope: !1859)
!1885 = !DILocation(line: 107, column: 36, scope: !1859)
!1886 = !DILocation(line: 107, column: 34, scope: !1859)
!1887 = !DILocation(line: 107, column: 30, scope: !1859)
!1888 = !DILocation(line: 107, column: 3, scope: !1859)
!1889 = !DILocation(line: 107, column: 11, scope: !1859)
!1890 = !DILocation(line: 115, column: 11, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1859, file: !1, line: 115, column: 7)
!1892 = !DILocation(line: 115, column: 16, scope: !1891)
!1893 = !DILocation(line: 115, column: 7, scope: !1859)
!1894 = !DILocalVariable(name: "u", scope: !1895, file: !1, line: 116, type: !57)
!1895 = distinct !DILexicalBlock(scope: !1891, file: !1, line: 115, column: 30)
!1896 = !DILocation(line: 116, column: 10, scope: !1895)
!1897 = !DILocation(line: 116, column: 13, scope: !1895)
!1898 = !DILocation(line: 116, column: 25, scope: !1895)
!1899 = !DILocation(line: 116, column: 21, scope: !1895)
!1900 = !DILocalVariable(name: "v", scope: !1895, file: !1, line: 116, type: !57)
!1901 = !DILocation(line: 116, column: 40, scope: !1895)
!1902 = !DILocation(line: 116, column: 43, scope: !1895)
!1903 = !DILocation(line: 117, column: 15, scope: !1895)
!1904 = !DILocation(line: 117, column: 22, scope: !1895)
!1905 = !DILocation(line: 117, column: 21, scope: !1895)
!1906 = !DILocation(line: 117, column: 28, scope: !1895)
!1907 = !DILocation(line: 117, column: 35, scope: !1895)
!1908 = !DILocation(line: 117, column: 34, scope: !1895)
!1909 = !DILocation(line: 117, column: 24, scope: !1895)
!1910 = !DILocation(line: 117, column: 4, scope: !1895)
!1911 = !DILocation(line: 117, column: 11, scope: !1895)
!1912 = !DILocation(line: 118, column: 16, scope: !1895)
!1913 = !DILocation(line: 118, column: 13, scope: !1895)
!1914 = !DILocation(line: 118, column: 23, scope: !1895)
!1915 = !DILocation(line: 118, column: 22, scope: !1895)
!1916 = !DILocation(line: 118, column: 29, scope: !1895)
!1917 = !DILocation(line: 118, column: 36, scope: !1895)
!1918 = !DILocation(line: 118, column: 35, scope: !1895)
!1919 = !DILocation(line: 118, column: 25, scope: !1895)
!1920 = !DILocation(line: 118, column: 4, scope: !1895)
!1921 = !DILocation(line: 118, column: 11, scope: !1895)
!1922 = !DILocation(line: 119, column: 3, scope: !1895)
!1923 = !DILocation(line: 121, column: 1, scope: !1833)
!1924 = distinct !DISubprogram(name: "BLI_rctf_size_x", scope: !1925, file: !1925, line: 107, type: !1926, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!1925 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1926 = !DISubroutineType(types: !1927)
!1927 = !{!57, !1928}
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1930 = !DILocalVariable(name: "rct", arg: 1, scope: !1924, file: !1925, line: 107, type: !1928)
!1931 = !DILocation(line: 107, column: 53, scope: !1924)
!1932 = !DILocation(line: 107, column: 68, scope: !1924)
!1933 = !DILocation(line: 107, column: 73, scope: !1924)
!1934 = !DILocation(line: 107, column: 80, scope: !1924)
!1935 = !DILocation(line: 107, column: 85, scope: !1924)
!1936 = !DILocation(line: 107, column: 78, scope: !1924)
!1937 = !DILocation(line: 107, column: 60, scope: !1924)
!1938 = distinct !DISubprogram(name: "BLI_rctf_size_y", scope: !1925, file: !1925, line: 108, type: !1926, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!1939 = !DILocalVariable(name: "rct", arg: 1, scope: !1938, file: !1925, line: 108, type: !1928)
!1940 = !DILocation(line: 108, column: 53, scope: !1938)
!1941 = !DILocation(line: 108, column: 68, scope: !1938)
!1942 = !DILocation(line: 108, column: 73, scope: !1938)
!1943 = !DILocation(line: 108, column: 80, scope: !1938)
!1944 = !DILocation(line: 108, column: 85, scope: !1938)
!1945 = !DILocation(line: 108, column: 78, scope: !1938)
!1946 = !DILocation(line: 108, column: 60, scope: !1938)
!1947 = distinct !DISubprogram(name: "calc_renderco_ortho", scope: !1, file: !1, line: 123, type: !1948, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{null, !692, !57, !57, !5}
!1950 = !DILocalVariable(name: "co", arg: 1, scope: !1947, file: !1, line: 123, type: !692)
!1951 = !DILocation(line: 123, column: 32, scope: !1947)
!1952 = !DILocalVariable(name: "x", arg: 2, scope: !1947, file: !1, line: 123, type: !57)
!1953 = !DILocation(line: 123, column: 45, scope: !1947)
!1954 = !DILocalVariable(name: "y", arg: 3, scope: !1947, file: !1, line: 123, type: !57)
!1955 = !DILocation(line: 123, column: 54, scope: !1947)
!1956 = !DILocalVariable(name: "z", arg: 4, scope: !1947, file: !1, line: 123, type: !5)
!1957 = !DILocation(line: 123, column: 61, scope: !1947)
!1958 = !DILocalVariable(name: "fx", scope: !1947, file: !1, line: 126, type: !57)
!1959 = !DILocation(line: 126, column: 8, scope: !1947)
!1960 = !DILocation(line: 126, column: 20, scope: !1947)
!1961 = !DILocation(line: 126, column: 18, scope: !1947)
!1962 = !DILocation(line: 126, column: 25, scope: !1947)
!1963 = !DILocation(line: 126, column: 24, scope: !1947)
!1964 = !DILocation(line: 126, column: 16, scope: !1947)
!1965 = !DILocalVariable(name: "fy", scope: !1947, file: !1, line: 127, type: !57)
!1966 = !DILocation(line: 127, column: 8, scope: !1947)
!1967 = !DILocation(line: 127, column: 20, scope: !1947)
!1968 = !DILocation(line: 127, column: 18, scope: !1947)
!1969 = !DILocation(line: 127, column: 25, scope: !1947)
!1970 = !DILocation(line: 127, column: 24, scope: !1947)
!1971 = !DILocation(line: 127, column: 16, scope: !1947)
!1972 = !DILocalVariable(name: "zco", scope: !1947, file: !1, line: 128, type: !57)
!1973 = !DILocation(line: 128, column: 8, scope: !1947)
!1974 = !DILocation(line: 130, column: 10, scope: !1947)
!1975 = !DILocation(line: 130, column: 21, scope: !1947)
!1976 = !DILocation(line: 130, column: 19, scope: !1947)
!1977 = !DILocation(line: 130, column: 18, scope: !1947)
!1978 = !DILocation(line: 130, column: 12, scope: !1947)
!1979 = !DILocation(line: 130, column: 27, scope: !1947)
!1980 = !DILocation(line: 130, column: 26, scope: !1947)
!1981 = !DILocation(line: 130, column: 32, scope: !1947)
!1982 = !DILocation(line: 130, column: 47, scope: !1947)
!1983 = !DILocation(line: 130, column: 46, scope: !1947)
!1984 = !DILocation(line: 130, column: 30, scope: !1947)
!1985 = !DILocation(line: 130, column: 2, scope: !1947)
!1986 = !DILocation(line: 130, column: 7, scope: !1947)
!1987 = !DILocation(line: 131, column: 10, scope: !1947)
!1988 = !DILocation(line: 131, column: 21, scope: !1947)
!1989 = !DILocation(line: 131, column: 19, scope: !1947)
!1990 = !DILocation(line: 131, column: 18, scope: !1947)
!1991 = !DILocation(line: 131, column: 12, scope: !1947)
!1992 = !DILocation(line: 131, column: 27, scope: !1947)
!1993 = !DILocation(line: 131, column: 26, scope: !1947)
!1994 = !DILocation(line: 131, column: 32, scope: !1947)
!1995 = !DILocation(line: 131, column: 47, scope: !1947)
!1996 = !DILocation(line: 131, column: 46, scope: !1947)
!1997 = !DILocation(line: 131, column: 30, scope: !1947)
!1998 = !DILocation(line: 131, column: 2, scope: !1947)
!1999 = !DILocation(line: 131, column: 7, scope: !1947)
!2000 = !DILocation(line: 133, column: 15, scope: !1947)
!2001 = !DILocation(line: 133, column: 8, scope: !1947)
!2002 = !DILocation(line: 133, column: 17, scope: !1947)
!2003 = !DILocation(line: 133, column: 5, scope: !1947)
!2004 = !DILocation(line: 134, column: 9, scope: !1947)
!2005 = !DILocation(line: 134, column: 26, scope: !1947)
!2006 = !DILocation(line: 134, column: 41, scope: !1947)
!2007 = !DILocation(line: 134, column: 40, scope: !1947)
!2008 = !DILocation(line: 134, column: 47, scope: !1947)
!2009 = !DILocation(line: 134, column: 45, scope: !1947)
!2010 = !DILocation(line: 134, column: 23, scope: !1947)
!2011 = !DILocation(line: 134, column: 2, scope: !1947)
!2012 = !DILocation(line: 134, column: 7, scope: !1947)
!2013 = !DILocation(line: 135, column: 1, scope: !1947)
!2014 = distinct !DISubprogram(name: "calc_renderco_zbuf", scope: !1, file: !1, line: 137, type: !2015, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!2015 = !DISubroutineType(types: !2016)
!2016 = !{null, !692, !2017, !5}
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !57)
!2019 = !DILocalVariable(name: "co", arg: 1, scope: !2014, file: !1, line: 137, type: !692)
!2020 = !DILocation(line: 137, column: 31, scope: !2014)
!2021 = !DILocalVariable(name: "view", arg: 2, scope: !2014, file: !1, line: 137, type: !2017)
!2022 = !DILocation(line: 137, column: 50, scope: !2014)
!2023 = !DILocalVariable(name: "z", arg: 3, scope: !2014, file: !1, line: 137, type: !5)
!2024 = !DILocation(line: 137, column: 63, scope: !2014)
!2025 = !DILocalVariable(name: "fac", scope: !2014, file: !1, line: 139, type: !57)
!2026 = !DILocation(line: 139, column: 8, scope: !2014)
!2027 = !DILocalVariable(name: "zco", scope: !2014, file: !1, line: 139, type: !57)
!2028 = !DILocation(line: 139, column: 13, scope: !2014)
!2029 = !DILocation(line: 142, column: 15, scope: !2014)
!2030 = !DILocation(line: 142, column: 8, scope: !2014)
!2031 = !DILocation(line: 142, column: 17, scope: !2014)
!2032 = !DILocation(line: 142, column: 5, scope: !2014)
!2033 = !DILocation(line: 143, column: 9, scope: !2014)
!2034 = !DILocation(line: 143, column: 26, scope: !2014)
!2035 = !DILocation(line: 143, column: 41, scope: !2014)
!2036 = !DILocation(line: 143, column: 40, scope: !2014)
!2037 = !DILocation(line: 143, column: 47, scope: !2014)
!2038 = !DILocation(line: 143, column: 45, scope: !2014)
!2039 = !DILocation(line: 143, column: 23, scope: !2014)
!2040 = !DILocation(line: 143, column: 2, scope: !2014)
!2041 = !DILocation(line: 143, column: 7, scope: !2014)
!2042 = !DILocation(line: 145, column: 7, scope: !2014)
!2043 = !DILocation(line: 145, column: 13, scope: !2014)
!2044 = !DILocation(line: 145, column: 12, scope: !2014)
!2045 = !DILocation(line: 145, column: 5, scope: !2014)
!2046 = !DILocation(line: 146, column: 9, scope: !2014)
!2047 = !DILocation(line: 146, column: 13, scope: !2014)
!2048 = !DILocation(line: 146, column: 12, scope: !2014)
!2049 = !DILocation(line: 146, column: 2, scope: !2014)
!2050 = !DILocation(line: 146, column: 7, scope: !2014)
!2051 = !DILocation(line: 147, column: 9, scope: !2014)
!2052 = !DILocation(line: 147, column: 13, scope: !2014)
!2053 = !DILocation(line: 147, column: 12, scope: !2014)
!2054 = !DILocation(line: 147, column: 2, scope: !2014)
!2055 = !DILocation(line: 147, column: 7, scope: !2014)
!2056 = !DILocation(line: 148, column: 1, scope: !2014)
!2057 = distinct !DISubprogram(name: "count_mask", scope: !1, file: !1, line: 151, type: !2058, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{!5, !77}
!2060 = !DILocalVariable(name: "mask", arg: 1, scope: !2057, file: !1, line: 151, type: !77)
!2061 = !DILocation(line: 151, column: 31, scope: !2057)
!2062 = !DILocation(line: 153, column: 8, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2057, file: !1, line: 153, column: 6)
!2064 = !DILocation(line: 153, column: 6, scope: !2063)
!2065 = !DILocation(line: 153, column: 6, scope: !2057)
!2066 = !DILocation(line: 154, column: 13, scope: !2063)
!2067 = !DILocation(line: 154, column: 22, scope: !2063)
!2068 = !DILocation(line: 154, column: 28, scope: !2063)
!2069 = !DILocation(line: 154, column: 33, scope: !2063)
!2070 = !DILocation(line: 154, column: 11, scope: !2063)
!2071 = !DILocation(line: 154, column: 42, scope: !2063)
!2072 = !DILocation(line: 154, column: 51, scope: !2063)
!2073 = !DILocation(line: 154, column: 57, scope: !2063)
!2074 = !DILocation(line: 154, column: 61, scope: !2063)
!2075 = !DILocation(line: 154, column: 40, scope: !2063)
!2076 = !DILocation(line: 154, column: 39, scope: !2063)
!2077 = !DILocation(line: 154, column: 3, scope: !2063)
!2078 = !DILocation(line: 155, column: 2, scope: !2057)
!2079 = !DILocation(line: 156, column: 1, scope: !2057)
!2080 = distinct !DISubprogram(name: "get_sample_layers", scope: !1, file: !1, line: 656, type: !2081, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{!5, !2083, !88, !2114}
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderPart", file: !2085, line: 117, baseType: !2086)
!2085 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderPart", file: !2085, line: 93, size: 1280, elements: !2087)
!2087 = !{!2088, !2090, !2091, !2094, !2095, !2096, !2097, !2098, !2099, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2086, file: !2085, line: 94, baseType: !2089, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2086, file: !2085, line: 94, baseType: !2089, size: 64, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2086, file: !2085, line: 96, baseType: !2092, size: 64, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !90, line: 148, baseType: !846)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !2086, file: !2085, line: 97, baseType: !170, size: 128, offset: 192)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "recto", scope: !2086, file: !2085, line: 99, baseType: !855, size: 64, offset: 320)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "rectp", scope: !2086, file: !2085, line: 100, baseType: !855, size: 64, offset: 384)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !2086, file: !2085, line: 101, baseType: !855, size: 64, offset: 448)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "rectmask", scope: !2086, file: !2085, line: 102, baseType: !855, size: 64, offset: 512)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "rectdaps", scope: !2086, file: !2085, line: 103, baseType: !2100, size: 64, offset: 576)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "rectbacko", scope: !2086, file: !2085, line: 104, baseType: !855, size: 64, offset: 640)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackp", scope: !2086, file: !2085, line: 105, baseType: !855, size: 64, offset: 704)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackz", scope: !2086, file: !2085, line: 106, baseType: !855, size: 64, offset: 768)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "rectall", scope: !2086, file: !2085, line: 107, baseType: !2100, size: 64, offset: 832)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2086, file: !2085, line: 109, baseType: !859, size: 128, offset: 896)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !2086, file: !2085, line: 110, baseType: !5, size: 32, offset: 1024)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !2086, file: !2085, line: 110, baseType: !5, size: 32, offset: 1056)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2086, file: !2085, line: 111, baseType: !5, size: 32, offset: 1088)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !2086, file: !2085, line: 112, baseType: !79, size: 16, offset: 1120)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2086, file: !2085, line: 112, baseType: !79, size: 16, offset: 1136)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2086, file: !2085, line: 113, baseType: !79, size: 16, offset: 1152)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2086, file: !2085, line: 114, baseType: !79, size: 16, offset: 1168)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "clipflag", scope: !2086, file: !2085, line: 116, baseType: !470, size: 64, offset: 1216)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!2115 = !DILocalVariable(name: "pa", arg: 1, scope: !2080, file: !1, line: 656, type: !2083)
!2116 = !DILocation(line: 656, column: 35, scope: !2080)
!2117 = !DILocalVariable(name: "rl", arg: 2, scope: !2080, file: !1, line: 656, type: !88)
!2118 = !DILocation(line: 656, column: 52, scope: !2080)
!2119 = !DILocalVariable(name: "rlpp", arg: 3, scope: !2080, file: !1, line: 656, type: !2114)
!2120 = !DILocation(line: 656, column: 70, scope: !2080)
!2121 = !DILocation(line: 659, column: 6, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2080, file: !1, line: 659, column: 6)
!2123 = !DILocation(line: 659, column: 10, scope: !2122)
!2124 = !DILocation(line: 659, column: 21, scope: !2122)
!2125 = !DILocation(line: 659, column: 6, scope: !2080)
!2126 = !DILocalVariable(name: "sample", scope: !2127, file: !1, line: 660, type: !5)
!2127 = distinct !DILexicalBlock(scope: !2122, file: !1, line: 659, column: 28)
!2128 = !DILocation(line: 660, column: 7, scope: !2127)
!2129 = !DILocalVariable(name: "nr", scope: !2127, file: !1, line: 660, type: !5)
!2130 = !DILocation(line: 660, column: 15, scope: !2127)
!2131 = !DILocation(line: 660, column: 34, scope: !2127)
!2132 = !DILocation(line: 660, column: 38, scope: !2127)
!2133 = !DILocation(line: 660, column: 46, scope: !2127)
!2134 = !DILocation(line: 660, column: 54, scope: !2127)
!2135 = !DILocation(line: 660, column: 19, scope: !2127)
!2136 = !DILocation(line: 662, column: 14, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !2127, file: !1, line: 662, column: 3)
!2138 = !DILocation(line: 662, column: 8, scope: !2137)
!2139 = !DILocation(line: 662, column: 18, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2137, file: !1, line: 662, column: 3)
!2141 = !DILocation(line: 662, column: 27, scope: !2140)
!2142 = !DILocation(line: 662, column: 25, scope: !2140)
!2143 = !DILocation(line: 662, column: 24, scope: !2140)
!2144 = !DILocation(line: 662, column: 3, scope: !2137)
!2145 = !DILocalVariable(name: "rr", scope: !2146, file: !1, line: 663, type: !2092)
!2146 = distinct !DILexicalBlock(scope: !2140, file: !1, line: 662, column: 42)
!2147 = !DILocation(line: 663, column: 18, scope: !2146)
!2148 = !DILocation(line: 663, column: 36, scope: !2146)
!2149 = !DILocation(line: 663, column: 40, scope: !2146)
!2150 = !DILocation(line: 663, column: 52, scope: !2146)
!2151 = !DILocation(line: 663, column: 22, scope: !2146)
!2152 = !DILocation(line: 665, column: 32, scope: !2146)
!2153 = !DILocation(line: 665, column: 36, scope: !2146)
!2154 = !DILocation(line: 665, column: 44, scope: !2146)
!2155 = !DILocation(line: 665, column: 18, scope: !2146)
!2156 = !DILocation(line: 665, column: 4, scope: !2146)
!2157 = !DILocation(line: 665, column: 9, scope: !2146)
!2158 = !DILocation(line: 665, column: 16, scope: !2146)
!2159 = !DILocation(line: 666, column: 3, scope: !2146)
!2160 = !DILocation(line: 662, column: 38, scope: !2140)
!2161 = !DILocation(line: 662, column: 3, scope: !2140)
!2162 = distinct !{!2162, !2144, !2163}
!2163 = !DILocation(line: 666, column: 3, scope: !2137)
!2164 = !DILocation(line: 667, column: 12, scope: !2127)
!2165 = !DILocation(line: 667, column: 10, scope: !2127)
!2166 = !DILocation(line: 667, column: 3, scope: !2127)
!2167 = !DILocation(line: 670, column: 12, scope: !2168)
!2168 = distinct !DILexicalBlock(scope: !2122, file: !1, line: 669, column: 7)
!2169 = !DILocation(line: 670, column: 3, scope: !2168)
!2170 = !DILocation(line: 670, column: 10, scope: !2168)
!2171 = !DILocation(line: 671, column: 3, scope: !2168)
!2172 = !DILocation(line: 673, column: 1, scope: !2080)
!2173 = distinct !DISubprogram(name: "zbufshadeDA_tile", scope: !1, file: !1, line: 1171, type: !2174, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{null, !2083}
!2176 = !DILocalVariable(name: "pa", arg: 1, scope: !2173, file: !1, line: 1171, type: !2083)
!2177 = !DILocation(line: 1171, column: 35, scope: !2173)
!2178 = !DILocalVariable(name: "rr", scope: !2173, file: !1, line: 1173, type: !2092)
!2179 = !DILocation(line: 1173, column: 16, scope: !2173)
!2180 = !DILocation(line: 1173, column: 20, scope: !2173)
!2181 = !DILocation(line: 1173, column: 24, scope: !2173)
!2182 = !DILocalVariable(name: "rl", scope: !2173, file: !1, line: 1174, type: !88)
!2183 = !DILocation(line: 1174, column: 15, scope: !2173)
!2184 = !DILocalVariable(name: "psmlist", scope: !2173, file: !1, line: 1175, type: !170)
!2185 = !DILocation(line: 1175, column: 11, scope: !2173)
!2186 = !DILocalVariable(name: "edgerect", scope: !2173, file: !1, line: 1176, type: !692)
!2187 = !DILocation(line: 1176, column: 9, scope: !2173)
!2188 = !DILocation(line: 1180, column: 13, scope: !2173)
!2189 = !DILocation(line: 1180, column: 37, scope: !2173)
!2190 = !DILocation(line: 1180, column: 41, scope: !2173)
!2191 = !DILocation(line: 1180, column: 36, scope: !2173)
!2192 = !DILocation(line: 1180, column: 47, scope: !2173)
!2193 = !DILocation(line: 1180, column: 51, scope: !2173)
!2194 = !DILocation(line: 1180, column: 46, scope: !2173)
!2195 = !DILocation(line: 1180, column: 2, scope: !2173)
!2196 = !DILocation(line: 1180, column: 6, scope: !2173)
!2197 = !DILocation(line: 1180, column: 11, scope: !2173)
!2198 = !DILocation(line: 1181, column: 13, scope: !2173)
!2199 = !DILocation(line: 1181, column: 37, scope: !2173)
!2200 = !DILocation(line: 1181, column: 41, scope: !2173)
!2201 = !DILocation(line: 1181, column: 36, scope: !2173)
!2202 = !DILocation(line: 1181, column: 47, scope: !2173)
!2203 = !DILocation(line: 1181, column: 51, scope: !2173)
!2204 = !DILocation(line: 1181, column: 46, scope: !2173)
!2205 = !DILocation(line: 1181, column: 2, scope: !2173)
!2206 = !DILocation(line: 1181, column: 6, scope: !2173)
!2207 = !DILocation(line: 1181, column: 11, scope: !2173)
!2208 = !DILocation(line: 1182, column: 13, scope: !2173)
!2209 = !DILocation(line: 1182, column: 37, scope: !2173)
!2210 = !DILocation(line: 1182, column: 41, scope: !2173)
!2211 = !DILocation(line: 1182, column: 36, scope: !2173)
!2212 = !DILocation(line: 1182, column: 47, scope: !2173)
!2213 = !DILocation(line: 1182, column: 51, scope: !2173)
!2214 = !DILocation(line: 1182, column: 46, scope: !2173)
!2215 = !DILocation(line: 1182, column: 2, scope: !2173)
!2216 = !DILocation(line: 1182, column: 6, scope: !2173)
!2217 = !DILocation(line: 1182, column: 11, scope: !2173)
!2218 = !DILocation(line: 1183, column: 11, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2173, file: !1, line: 1183, column: 2)
!2220 = !DILocation(line: 1183, column: 15, scope: !2219)
!2221 = !DILocation(line: 1183, column: 22, scope: !2219)
!2222 = !DILocation(line: 1183, column: 9, scope: !2219)
!2223 = !DILocation(line: 1183, column: 7, scope: !2219)
!2224 = !DILocation(line: 1183, column: 29, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2219, file: !1, line: 1183, column: 2)
!2226 = !DILocation(line: 1183, column: 2, scope: !2219)
!2227 = !DILocation(line: 1184, column: 8, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1184, column: 7)
!2229 = distinct !DILexicalBlock(scope: !2225, file: !1, line: 1183, column: 47)
!2230 = !DILocation(line: 1184, column: 12, scope: !2228)
!2231 = !DILocation(line: 1184, column: 20, scope: !2228)
!2232 = !DILocation(line: 1184, column: 37, scope: !2228)
!2233 = !DILocation(line: 1184, column: 41, scope: !2228)
!2234 = !DILocation(line: 1184, column: 45, scope: !2228)
!2235 = !DILocation(line: 1184, column: 53, scope: !2228)
!2236 = !DILocation(line: 1184, column: 7, scope: !2229)
!2237 = !DILocation(line: 1185, column: 18, scope: !2228)
!2238 = !DILocation(line: 1185, column: 42, scope: !2228)
!2239 = !DILocation(line: 1185, column: 46, scope: !2228)
!2240 = !DILocation(line: 1185, column: 41, scope: !2228)
!2241 = !DILocation(line: 1185, column: 52, scope: !2228)
!2242 = !DILocation(line: 1185, column: 56, scope: !2228)
!2243 = !DILocation(line: 1185, column: 51, scope: !2228)
!2244 = !DILocation(line: 1185, column: 4, scope: !2228)
!2245 = !DILocation(line: 1185, column: 8, scope: !2228)
!2246 = !DILocation(line: 1185, column: 16, scope: !2228)
!2247 = !DILocation(line: 1188, column: 3, scope: !2229)
!2248 = !DILocation(line: 1189, column: 17, scope: !2229)
!2249 = !DILocation(line: 1189, column: 46, scope: !2229)
!2250 = !DILocation(line: 1189, column: 50, scope: !2229)
!2251 = !DILocation(line: 1189, column: 45, scope: !2229)
!2252 = !DILocation(line: 1189, column: 56, scope: !2229)
!2253 = !DILocation(line: 1189, column: 60, scope: !2229)
!2254 = !DILocation(line: 1189, column: 55, scope: !2229)
!2255 = !DILocation(line: 1189, column: 65, scope: !2229)
!2256 = !DILocation(line: 1189, column: 3, scope: !2229)
!2257 = !DILocation(line: 1189, column: 7, scope: !2229)
!2258 = !DILocation(line: 1189, column: 15, scope: !2229)
!2259 = !DILocation(line: 1191, column: 7, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1191, column: 7)
!2261 = !DILocation(line: 1191, column: 11, scope: !2260)
!2262 = !DILocation(line: 1191, column: 19, scope: !2260)
!2263 = !DILocation(line: 1191, column: 7, scope: !2229)
!2264 = !DILocation(line: 1192, column: 12, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2260, file: !1, line: 1192, column: 8)
!2266 = !DILocation(line: 1192, column: 17, scope: !2265)
!2267 = !DILocation(line: 1192, column: 8, scope: !2260)
!2268 = !DILocation(line: 1193, column: 15, scope: !2265)
!2269 = !DILocation(line: 1193, column: 41, scope: !2265)
!2270 = !DILocation(line: 1193, column: 45, scope: !2265)
!2271 = !DILocation(line: 1193, column: 40, scope: !2265)
!2272 = !DILocation(line: 1193, column: 51, scope: !2265)
!2273 = !DILocation(line: 1193, column: 55, scope: !2265)
!2274 = !DILocation(line: 1193, column: 50, scope: !2265)
!2275 = !DILocation(line: 1193, column: 13, scope: !2265)
!2276 = !DILocation(line: 1193, column: 5, scope: !2265)
!2277 = !DILocation(line: 1192, column: 19, scope: !2265)
!2278 = !DILocation(line: 1196, column: 8, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1196, column: 3)
!2280 = !DILocation(line: 1196, column: 12, scope: !2279)
!2281 = !DILocation(line: 1196, column: 18, scope: !2279)
!2282 = !DILocation(line: 1196, column: 22, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2279, file: !1, line: 1196, column: 3)
!2284 = !DILocation(line: 1196, column: 26, scope: !2283)
!2285 = !DILocation(line: 1196, column: 35, scope: !2283)
!2286 = !DILocation(line: 1196, column: 33, scope: !2283)
!2287 = !DILocation(line: 1196, column: 32, scope: !2283)
!2288 = !DILocation(line: 1196, column: 3, scope: !2279)
!2289 = !DILocalVariable(name: "sdata", scope: !2290, file: !1, line: 1197, type: !84)
!2290 = distinct !DILexicalBlock(scope: !2283, file: !1, line: 1196, column: 55)
!2291 = !DILocation(line: 1197, column: 18, scope: !2290)
!2292 = !DILocation(line: 1199, column: 14, scope: !2290)
!2293 = !DILocation(line: 1199, column: 10, scope: !2290)
!2294 = !DILocation(line: 1199, column: 12, scope: !2290)
!2295 = !DILocation(line: 1200, column: 10, scope: !2290)
!2296 = !DILocation(line: 1200, column: 17, scope: !2290)
!2297 = !DILocation(line: 1201, column: 20, scope: !2290)
!2298 = !DILocation(line: 1201, column: 10, scope: !2290)
!2299 = !DILocation(line: 1201, column: 18, scope: !2290)
!2300 = !DILocation(line: 1202, column: 18, scope: !2290)
!2301 = !DILocation(line: 1202, column: 22, scope: !2290)
!2302 = !DILocation(line: 1202, column: 45, scope: !2290)
!2303 = !DILocation(line: 1202, column: 4, scope: !2290)
!2304 = !DILocation(line: 1203, column: 10, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2290, file: !1, line: 1203, column: 8)
!2306 = !DILocation(line: 1203, column: 23, scope: !2305)
!2307 = !DILocation(line: 1203, column: 8, scope: !2305)
!2308 = !DILocation(line: 1203, column: 8, scope: !2290)
!2309 = !DILocation(line: 1203, column: 29, scope: !2305)
!2310 = !DILocation(line: 1204, column: 3, scope: !2290)
!2311 = !DILocation(line: 1196, column: 40, scope: !2283)
!2312 = !DILocation(line: 1196, column: 44, scope: !2283)
!2313 = !DILocation(line: 1196, column: 50, scope: !2283)
!2314 = !DILocation(line: 1196, column: 3, scope: !2283)
!2315 = distinct !{!2315, !2288, !2316}
!2316 = !DILocation(line: 1204, column: 3, scope: !2279)
!2317 = !DILocation(line: 1207, column: 7, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1207, column: 7)
!2319 = !DILocation(line: 1207, column: 11, scope: !2318)
!2320 = !DILocation(line: 1207, column: 19, scope: !2318)
!2321 = !DILocation(line: 1207, column: 7, scope: !2229)
!2322 = !DILocation(line: 1208, column: 17, scope: !2318)
!2323 = !DILocation(line: 1208, column: 21, scope: !2318)
!2324 = !DILocation(line: 1208, column: 4, scope: !2318)
!2325 = !DILocation(line: 1211, column: 9, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1211, column: 7)
!2327 = !DILocation(line: 1211, column: 7, scope: !2326)
!2328 = !DILocation(line: 1211, column: 14, scope: !2326)
!2329 = !DILocation(line: 1211, column: 7, scope: !2229)
!2330 = !DILocation(line: 1212, column: 8, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2326, file: !1, line: 1212, column: 8)
!2332 = !DILocation(line: 1212, column: 12, scope: !2331)
!2333 = !DILocation(line: 1212, column: 20, scope: !2331)
!2334 = !DILocation(line: 1212, column: 8, scope: !2326)
!2335 = !DILocation(line: 1213, column: 19, scope: !2331)
!2336 = !DILocation(line: 1213, column: 23, scope: !2331)
!2337 = !DILocation(line: 1213, column: 5, scope: !2331)
!2338 = !DILocation(line: 1212, column: 22, scope: !2331)
!2339 = !DILocation(line: 1216, column: 9, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1216, column: 7)
!2341 = !DILocation(line: 1216, column: 7, scope: !2340)
!2342 = !DILocation(line: 1216, column: 14, scope: !2340)
!2343 = !DILocation(line: 1216, column: 7, scope: !2229)
!2344 = !DILocation(line: 1217, column: 8, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2340, file: !1, line: 1217, column: 8)
!2346 = !DILocation(line: 1217, column: 12, scope: !2345)
!2347 = !DILocation(line: 1217, column: 20, scope: !2345)
!2348 = !DILocation(line: 1217, column: 8, scope: !2340)
!2349 = !DILocation(line: 1218, column: 15, scope: !2345)
!2350 = !DILocation(line: 1218, column: 19, scope: !2345)
!2351 = !DILocation(line: 1218, column: 5, scope: !2345)
!2352 = !DILocation(line: 1217, column: 22, scope: !2345)
!2353 = !DILocation(line: 1221, column: 9, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1221, column: 7)
!2355 = !DILocation(line: 1221, column: 7, scope: !2354)
!2356 = !DILocation(line: 1221, column: 14, scope: !2354)
!2357 = !DILocation(line: 1221, column: 23, scope: !2354)
!2358 = !DILocation(line: 1221, column: 28, scope: !2354)
!2359 = !DILocation(line: 1221, column: 26, scope: !2354)
!2360 = !DILocation(line: 1221, column: 7, scope: !2229)
!2361 = !DILocation(line: 1222, column: 8, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !1, line: 1222, column: 8)
!2363 = distinct !DILexicalBlock(scope: !2354, file: !1, line: 1221, column: 39)
!2364 = !DILocation(line: 1222, column: 12, scope: !2362)
!2365 = !DILocation(line: 1222, column: 20, scope: !2362)
!2366 = !DILocation(line: 1222, column: 8, scope: !2363)
!2367 = !DILocation(line: 1223, column: 9, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2369, file: !1, line: 1223, column: 9)
!2369 = distinct !DILexicalBlock(scope: !2362, file: !1, line: 1222, column: 53)
!2370 = !DILocation(line: 1223, column: 13, scope: !2368)
!2371 = !DILocation(line: 1223, column: 24, scope: !2368)
!2372 = !DILocation(line: 1223, column: 9, scope: !2369)
!2373 = !DILocation(line: 1224, column: 27, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2368, file: !1, line: 1223, column: 31)
!2375 = !DILocation(line: 1224, column: 31, scope: !2374)
!2376 = !DILocation(line: 1224, column: 35, scope: !2374)
!2377 = !DILocation(line: 1224, column: 39, scope: !2374)
!2378 = !DILocation(line: 1224, column: 6, scope: !2374)
!2379 = !DILocation(line: 1225, column: 5, scope: !2374)
!2380 = !DILocalVariable(name: "ztramask", scope: !2381, file: !1, line: 1227, type: !2382)
!2381 = distinct !DILexicalBlock(scope: !2368, file: !1, line: 1226, column: 10)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!2383 = !DILocation(line: 1227, column: 22, scope: !2381)
!2384 = !DILocalVariable(name: "solidmask", scope: !2381, file: !1, line: 1227, type: !2382)
!2385 = !DILocation(line: 1227, column: 33, scope: !2381)
!2386 = !DILocation(line: 1230, column: 20, scope: !2381)
!2387 = !DILocation(line: 1230, column: 48, scope: !2381)
!2388 = !DILocation(line: 1230, column: 52, scope: !2381)
!2389 = !DILocation(line: 1230, column: 47, scope: !2381)
!2390 = !DILocation(line: 1230, column: 58, scope: !2381)
!2391 = !DILocation(line: 1230, column: 62, scope: !2381)
!2392 = !DILocation(line: 1230, column: 57, scope: !2381)
!2393 = !DILocation(line: 1230, column: 6, scope: !2381)
!2394 = !DILocation(line: 1230, column: 10, scope: !2381)
!2395 = !DILocation(line: 1230, column: 18, scope: !2381)
!2396 = !DILocalVariable(name: "sw_ap", scope: !2397, file: !1, line: 1233, type: !692)
!2397 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 1233, column: 6)
!2398 = !DILocation(line: 1233, column: 6, scope: !2397)
!2399 = !DILocation(line: 1234, column: 37, scope: !2381)
!2400 = !DILocation(line: 1234, column: 41, scope: !2381)
!2401 = !DILocation(line: 1234, column: 45, scope: !2381)
!2402 = !DILocation(line: 1234, column: 49, scope: !2381)
!2403 = !DILocation(line: 1234, column: 16, scope: !2381)
!2404 = !DILocation(line: 1234, column: 14, scope: !2381)
!2405 = !DILocalVariable(name: "sw_ap", scope: !2406, file: !1, line: 1235, type: !692)
!2406 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 1235, column: 6)
!2407 = !DILocation(line: 1235, column: 6, scope: !2406)
!2408 = !DILocation(line: 1238, column: 10, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 1238, column: 10)
!2410 = !DILocation(line: 1238, column: 10, scope: !2381)
!2411 = !DILocation(line: 1239, column: 34, scope: !2409)
!2412 = !DILocation(line: 1239, column: 18, scope: !2409)
!2413 = !DILocation(line: 1239, column: 16, scope: !2409)
!2414 = !DILocation(line: 1239, column: 7, scope: !2409)
!2415 = !DILocation(line: 1241, column: 10, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 1241, column: 10)
!2417 = !DILocation(line: 1241, column: 19, scope: !2416)
!2418 = !DILocation(line: 1241, column: 22, scope: !2416)
!2419 = !DILocation(line: 1241, column: 10, scope: !2381)
!2420 = !DILocalVariable(name: "sps", scope: !2421, file: !1, line: 1242, type: !2382)
!2421 = distinct !DILexicalBlock(scope: !2416, file: !1, line: 1241, column: 33)
!2422 = !DILocation(line: 1242, column: 23, scope: !2421)
!2423 = !DILocation(line: 1242, column: 28, scope: !2421)
!2424 = !DILocalVariable(name: "spz", scope: !2421, file: !1, line: 1242, type: !2382)
!2425 = !DILocation(line: 1242, column: 40, scope: !2421)
!2426 = !DILocation(line: 1242, column: 45, scope: !2421)
!2427 = !DILocalVariable(name: "fullmask", scope: !2421, file: !1, line: 1243, type: !77)
!2428 = !DILocation(line: 1243, column: 22, scope: !2421)
!2429 = !DILocation(line: 1243, column: 38, scope: !2421)
!2430 = !DILocation(line: 1243, column: 36, scope: !2421)
!2431 = !DILocation(line: 1243, column: 34, scope: !2421)
!2432 = !DILocation(line: 1243, column: 42, scope: !2421)
!2433 = !DILocation(line: 1243, column: 32, scope: !2421)
!2434 = !DILocalVariable(name: "fcol", scope: !2421, file: !1, line: 1244, type: !692)
!2435 = !DILocation(line: 1244, column: 14, scope: !2421)
!2436 = !DILocation(line: 1244, column: 20, scope: !2421)
!2437 = !DILocation(line: 1244, column: 24, scope: !2421)
!2438 = !DILocalVariable(name: "acol", scope: !2421, file: !1, line: 1244, type: !692)
!2439 = !DILocation(line: 1244, column: 38, scope: !2421)
!2440 = !DILocation(line: 1244, column: 44, scope: !2421)
!2441 = !DILocation(line: 1244, column: 48, scope: !2421)
!2442 = !DILocalVariable(name: "x", scope: !2421, file: !1, line: 1245, type: !5)
!2443 = !DILocation(line: 1245, column: 11, scope: !2421)
!2444 = !DILocation(line: 1247, column: 14, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !2421, file: !1, line: 1247, column: 7)
!2446 = !DILocation(line: 1247, column: 18, scope: !2445)
!2447 = !DILocation(line: 1247, column: 24, scope: !2445)
!2448 = !DILocation(line: 1247, column: 28, scope: !2445)
!2449 = !DILocation(line: 1247, column: 23, scope: !2445)
!2450 = !DILocation(line: 1247, column: 13, scope: !2445)
!2451 = !DILocation(line: 1247, column: 12, scope: !2445)
!2452 = !DILocation(line: 1247, column: 35, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2445, file: !1, line: 1247, column: 7)
!2454 = !DILocation(line: 1247, column: 36, scope: !2453)
!2455 = !DILocation(line: 1247, column: 7, scope: !2445)
!2456 = !DILocation(line: 1248, column: 13, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2458, file: !1, line: 1248, column: 12)
!2458 = distinct !DILexicalBlock(scope: !2453, file: !1, line: 1247, column: 77)
!2459 = !DILocation(line: 1248, column: 12, scope: !2457)
!2460 = !DILocation(line: 1248, column: 20, scope: !2457)
!2461 = !DILocation(line: 1248, column: 17, scope: !2457)
!2462 = !DILocation(line: 1248, column: 12, scope: !2458)
!2463 = !DILocation(line: 1249, column: 27, scope: !2457)
!2464 = !DILocation(line: 1249, column: 33, scope: !2457)
!2465 = !DILocation(line: 1249, column: 9, scope: !2457)
!2466 = !DILocation(line: 1251, column: 31, scope: !2457)
!2467 = !DILocation(line: 1251, column: 37, scope: !2457)
!2468 = !DILocation(line: 1251, column: 44, scope: !2457)
!2469 = !DILocation(line: 1251, column: 43, scope: !2457)
!2470 = !DILocation(line: 1251, column: 50, scope: !2457)
!2471 = !DILocation(line: 1251, column: 49, scope: !2457)
!2472 = !DILocation(line: 1251, column: 9, scope: !2457)
!2473 = !DILocation(line: 1252, column: 7, scope: !2458)
!2474 = !DILocation(line: 1247, column: 41, scope: !2453)
!2475 = !DILocation(line: 1247, column: 49, scope: !2453)
!2476 = !DILocation(line: 1247, column: 58, scope: !2453)
!2477 = !DILocation(line: 1247, column: 66, scope: !2453)
!2478 = !DILocation(line: 1247, column: 73, scope: !2453)
!2479 = !DILocation(line: 1247, column: 7, scope: !2453)
!2480 = distinct !{!2480, !2455, !2481}
!2481 = !DILocation(line: 1252, column: 7, scope: !2445)
!2482 = !DILocation(line: 1253, column: 6, scope: !2421)
!2483 = !DILocalVariable(name: "fcol", scope: !2484, file: !1, line: 1255, type: !692)
!2484 = distinct !DILexicalBlock(scope: !2416, file: !1, line: 1254, column: 11)
!2485 = !DILocation(line: 1255, column: 14, scope: !2484)
!2486 = !DILocation(line: 1255, column: 20, scope: !2484)
!2487 = !DILocation(line: 1255, column: 24, scope: !2484)
!2488 = !DILocalVariable(name: "acol", scope: !2484, file: !1, line: 1255, type: !692)
!2489 = !DILocation(line: 1255, column: 38, scope: !2484)
!2490 = !DILocation(line: 1255, column: 44, scope: !2484)
!2491 = !DILocation(line: 1255, column: 48, scope: !2484)
!2492 = !DILocalVariable(name: "x", scope: !2484, file: !1, line: 1256, type: !5)
!2493 = !DILocation(line: 1256, column: 11, scope: !2484)
!2494 = !DILocation(line: 1257, column: 14, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2484, file: !1, line: 1257, column: 7)
!2496 = !DILocation(line: 1257, column: 18, scope: !2495)
!2497 = !DILocation(line: 1257, column: 24, scope: !2495)
!2498 = !DILocation(line: 1257, column: 28, scope: !2495)
!2499 = !DILocation(line: 1257, column: 23, scope: !2495)
!2500 = !DILocation(line: 1257, column: 13, scope: !2495)
!2501 = !DILocation(line: 1257, column: 12, scope: !2495)
!2502 = !DILocation(line: 1257, column: 35, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2495, file: !1, line: 1257, column: 7)
!2504 = !DILocation(line: 1257, column: 36, scope: !2503)
!2505 = !DILocation(line: 1257, column: 7, scope: !2495)
!2506 = !DILocation(line: 1258, column: 26, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2503, file: !1, line: 1257, column: 63)
!2508 = !DILocation(line: 1258, column: 32, scope: !2507)
!2509 = !DILocation(line: 1258, column: 8, scope: !2507)
!2510 = !DILocation(line: 1259, column: 7, scope: !2507)
!2511 = !DILocation(line: 1257, column: 41, scope: !2503)
!2512 = !DILocation(line: 1257, column: 49, scope: !2503)
!2513 = !DILocation(line: 1257, column: 58, scope: !2503)
!2514 = !DILocation(line: 1257, column: 7, scope: !2503)
!2515 = distinct !{!2515, !2505, !2516}
!2516 = !DILocation(line: 1259, column: 7, scope: !2495)
!2517 = !DILocation(line: 1261, column: 10, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 1261, column: 10)
!2519 = !DILocation(line: 1261, column: 10, scope: !2381)
!2520 = !DILocation(line: 1261, column: 21, scope: !2518)
!2521 = !DILocation(line: 1261, column: 31, scope: !2518)
!2522 = !DILocation(line: 1262, column: 10, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 1262, column: 10)
!2524 = !DILocation(line: 1262, column: 10, scope: !2381)
!2525 = !DILocation(line: 1262, column: 20, scope: !2523)
!2526 = !DILocation(line: 1262, column: 30, scope: !2523)
!2527 = !DILocation(line: 1264, column: 4, scope: !2369)
!2528 = !DILocation(line: 1265, column: 3, scope: !2363)
!2529 = !DILocation(line: 1268, column: 7, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1268, column: 7)
!2531 = !DILocation(line: 1268, column: 11, scope: !2530)
!2532 = !DILocation(line: 1268, column: 19, scope: !2530)
!2533 = !DILocation(line: 1268, column: 7, scope: !2229)
!2534 = !DILocation(line: 1269, column: 13, scope: !2530)
!2535 = !DILocation(line: 1269, column: 17, scope: !2530)
!2536 = !DILocation(line: 1269, column: 4, scope: !2530)
!2537 = !DILocation(line: 1272, column: 7, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1272, column: 7)
!2539 = !DILocation(line: 1272, column: 11, scope: !2538)
!2540 = !DILocation(line: 1272, column: 19, scope: !2538)
!2541 = !DILocation(line: 1272, column: 7, scope: !2229)
!2542 = !DILocation(line: 1273, column: 13, scope: !2538)
!2543 = !DILocation(line: 1273, column: 17, scope: !2538)
!2544 = !DILocation(line: 1273, column: 4, scope: !2538)
!2545 = !DILocation(line: 1276, column: 7, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1276, column: 7)
!2547 = !DILocation(line: 1276, column: 11, scope: !2546)
!2548 = !DILocation(line: 1276, column: 19, scope: !2546)
!2549 = !DILocation(line: 1276, column: 7, scope: !2229)
!2550 = !DILocation(line: 1277, column: 12, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2546, file: !1, line: 1277, column: 8)
!2552 = !DILocation(line: 1277, column: 17, scope: !2551)
!2553 = !DILocation(line: 1277, column: 8, scope: !2546)
!2554 = !DILocation(line: 1278, column: 22, scope: !2551)
!2555 = !DILocation(line: 1278, column: 26, scope: !2551)
!2556 = !DILocation(line: 1278, column: 30, scope: !2551)
!2557 = !DILocation(line: 1278, column: 37, scope: !2551)
!2558 = !DILocation(line: 1278, column: 5, scope: !2551)
!2559 = !DILocation(line: 1277, column: 19, scope: !2551)
!2560 = !DILocation(line: 1280, column: 7, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1280, column: 7)
!2562 = !DILocation(line: 1280, column: 11, scope: !2561)
!2563 = !DILocation(line: 1280, column: 20, scope: !2561)
!2564 = !DILocation(line: 1280, column: 7, scope: !2229)
!2565 = !DILocation(line: 1281, column: 20, scope: !2561)
!2566 = !DILocation(line: 1281, column: 24, scope: !2561)
!2567 = !DILocation(line: 1281, column: 4, scope: !2561)
!2568 = !DILocation(line: 1284, column: 25, scope: !2229)
!2569 = !DILocation(line: 1284, column: 29, scope: !2229)
!2570 = !DILocation(line: 1284, column: 3, scope: !2229)
!2571 = !DILocation(line: 1287, column: 3, scope: !2229)
!2572 = !DILocation(line: 1287, column: 13, scope: !2229)
!2573 = !DILocation(line: 1287, column: 17, scope: !2229)
!2574 = !DILocation(line: 1287, column: 28, scope: !2229)
!2575 = !DILocation(line: 1287, column: 32, scope: !2229)
!2576 = !DILocation(line: 1287, column: 40, scope: !2229)
!2577 = !DILocation(line: 1288, column: 3, scope: !2229)
!2578 = !DILocation(line: 1290, column: 7, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1290, column: 7)
!2580 = !DILocation(line: 1290, column: 7, scope: !2229)
!2581 = !DILocation(line: 1290, column: 17, scope: !2579)
!2582 = !DILocation(line: 1290, column: 27, scope: !2579)
!2583 = !DILocation(line: 1291, column: 11, scope: !2229)
!2584 = !DILocation(line: 1293, column: 7, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1293, column: 7)
!2586 = !DILocation(line: 1293, column: 11, scope: !2585)
!2587 = !DILocation(line: 1293, column: 7, scope: !2229)
!2588 = !DILocation(line: 1294, column: 4, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2585, file: !1, line: 1293, column: 21)
!2590 = !DILocation(line: 1294, column: 14, scope: !2589)
!2591 = !DILocation(line: 1294, column: 18, scope: !2589)
!2592 = !DILocation(line: 1295, column: 4, scope: !2589)
!2593 = !DILocation(line: 1295, column: 8, scope: !2589)
!2594 = !DILocation(line: 1295, column: 16, scope: !2589)
!2595 = !DILocation(line: 1296, column: 3, scope: !2589)
!2596 = !DILocation(line: 1297, column: 2, scope: !2229)
!2597 = !DILocation(line: 1183, column: 37, scope: !2225)
!2598 = !DILocation(line: 1183, column: 41, scope: !2225)
!2599 = !DILocation(line: 1183, column: 35, scope: !2225)
!2600 = !DILocation(line: 1183, column: 2, scope: !2225)
!2601 = distinct !{!2601, !2226, !2602}
!2602 = !DILocation(line: 1297, column: 2, scope: !2219)
!2603 = !DILocation(line: 1300, column: 2, scope: !2173)
!2604 = !DILocation(line: 1300, column: 12, scope: !2173)
!2605 = !DILocation(line: 1300, column: 16, scope: !2173)
!2606 = !DILocation(line: 1300, column: 24, scope: !2173)
!2607 = !DILocation(line: 1300, column: 28, scope: !2173)
!2608 = !DILocation(line: 1300, column: 33, scope: !2173)
!2609 = !DILocation(line: 1301, column: 2, scope: !2173)
!2610 = !DILocation(line: 1301, column: 12, scope: !2173)
!2611 = !DILocation(line: 1301, column: 16, scope: !2173)
!2612 = !DILocation(line: 1301, column: 24, scope: !2173)
!2613 = !DILocation(line: 1301, column: 28, scope: !2173)
!2614 = !DILocation(line: 1301, column: 33, scope: !2173)
!2615 = !DILocation(line: 1302, column: 2, scope: !2173)
!2616 = !DILocation(line: 1302, column: 12, scope: !2173)
!2617 = !DILocation(line: 1302, column: 16, scope: !2173)
!2618 = !DILocation(line: 1302, column: 24, scope: !2173)
!2619 = !DILocation(line: 1302, column: 28, scope: !2173)
!2620 = !DILocation(line: 1302, column: 33, scope: !2173)
!2621 = !DILocation(line: 1305, column: 19, scope: !2173)
!2622 = !DILocation(line: 1305, column: 23, scope: !2173)
!2623 = !DILocation(line: 1305, column: 31, scope: !2173)
!2624 = !DILocation(line: 1305, column: 36, scope: !2173)
!2625 = !DILocation(line: 1305, column: 2, scope: !2173)
!2626 = !DILocation(line: 1305, column: 6, scope: !2173)
!2627 = !DILocation(line: 1305, column: 14, scope: !2173)
!2628 = !DILocation(line: 1305, column: 18, scope: !2173)
!2629 = !DILocation(line: 1306, column: 42, scope: !2173)
!2630 = !DILocation(line: 1306, column: 14, scope: !2173)
!2631 = !DILocation(line: 1306, column: 2, scope: !2173)
!2632 = !DILocation(line: 1306, column: 6, scope: !2173)
!2633 = !DILocation(line: 1306, column: 12, scope: !2173)
!2634 = !DILocation(line: 1307, column: 1, scope: !2173)
!2635 = distinct !DISubprogram(name: "addpsmain", scope: !1, file: !1, line: 895, type: !2636, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{!59, !595}
!2638 = !DILocalVariable(name: "lb", arg: 1, scope: !2635, file: !1, line: 895, type: !595)
!2639 = !DILocation(line: 895, column: 40, scope: !2635)
!2640 = !DILocalVariable(name: "psm", scope: !2635, file: !1, line: 897, type: !59)
!2641 = !DILocation(line: 897, column: 14, scope: !2635)
!2642 = !DILocation(line: 899, column: 21, scope: !2635)
!2643 = !DILocation(line: 899, column: 7, scope: !2635)
!2644 = !DILocation(line: 899, column: 5, scope: !2635)
!2645 = !DILocation(line: 900, column: 14, scope: !2635)
!2646 = !DILocation(line: 900, column: 18, scope: !2635)
!2647 = !DILocation(line: 900, column: 2, scope: !2635)
!2648 = !DILocation(line: 902, column: 21, scope: !2635)
!2649 = !DILocation(line: 902, column: 11, scope: !2635)
!2650 = !DILocation(line: 902, column: 2, scope: !2635)
!2651 = !DILocation(line: 902, column: 7, scope: !2635)
!2652 = !DILocation(line: 902, column: 9, scope: !2635)
!2653 = !DILocation(line: 903, column: 2, scope: !2635)
!2654 = !DILocation(line: 903, column: 7, scope: !2635)
!2655 = !DILocation(line: 903, column: 14, scope: !2635)
!2656 = !DILocation(line: 905, column: 9, scope: !2635)
!2657 = !DILocation(line: 905, column: 2, scope: !2635)
!2658 = distinct !DISubprogram(name: "make_pixelstructs", scope: !1, file: !1, line: 1144, type: !2659, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null, !2083, !2661, !5, !58}
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_typedef, name: "ZSpan", file: !2663, line: 120, baseType: !2664)
!2663 = !DIFile(filename: "blender/source/blender/render/intern/include/zbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ZSpan", file: !2663, line: 89, size: 1792, elements: !2665)
!2665 = !{!2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2703, !2704, !2718, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2731, !2736}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !2664, file: !2663, line: 90, baseType: !5, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !2664, file: !2663, line: 90, baseType: !5, size: 32, offset: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "miny1", scope: !2664, file: !2663, line: 92, baseType: !5, size: 32, offset: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "maxy1", scope: !2664, file: !2663, line: 92, baseType: !5, size: 32, offset: 96)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "miny2", scope: !2664, file: !2663, line: 92, baseType: !5, size: 32, offset: 128)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "maxy2", scope: !2664, file: !2663, line: 92, baseType: !5, size: 32, offset: 160)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "minp1", scope: !2664, file: !2663, line: 93, baseType: !2017, size: 64, offset: 192)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "maxp1", scope: !2664, file: !2663, line: 93, baseType: !2017, size: 64, offset: 256)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "minp2", scope: !2664, file: !2663, line: 93, baseType: !2017, size: 64, offset: 320)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "maxp2", scope: !2664, file: !2663, line: 93, baseType: !2017, size: 64, offset: 384)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "span1", scope: !2664, file: !2663, line: 94, baseType: !692, size: 64, offset: 448)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "span2", scope: !2664, file: !2663, line: 94, baseType: !692, size: 64, offset: 512)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "zmulx", scope: !2664, file: !2663, line: 96, baseType: !57, size: 32, offset: 576)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "zmuly", scope: !2664, file: !2663, line: 96, baseType: !57, size: 32, offset: 608)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "zofsx", scope: !2664, file: !2663, line: 96, baseType: !57, size: 32, offset: 640)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "zofsy", scope: !2664, file: !2663, line: 96, baseType: !57, size: 32, offset: 672)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !2664, file: !2663, line: 98, baseType: !855, size: 64, offset: 704)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "arectz", scope: !2664, file: !2663, line: 98, baseType: !855, size: 64, offset: 768)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "rectz1", scope: !2664, file: !2663, line: 99, baseType: !855, size: 64, offset: 832)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "rectp", scope: !2664, file: !2663, line: 100, baseType: !855, size: 64, offset: 896)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "recto", scope: !2664, file: !2663, line: 101, baseType: !855, size: 64, offset: 960)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "rectmask", scope: !2664, file: !2663, line: 102, baseType: !855, size: 64, offset: 1024)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "apixbuf", scope: !2664, file: !2663, line: 103, baseType: !2689, size: 64, offset: 1088)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "APixstr", file: !2663, line: 71, baseType: !2691)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APixstr", file: !2663, line: 64, size: 576, elements: !2692)
!2692 = !{!2693, !2695, !2697, !2698, !2699, !2701}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2691, file: !2663, line: 65, baseType: !2694, size: 64)
!2694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 64, elements: !300)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !2691, file: !2663, line: 66, baseType: !2696, size: 128, offset: 64)
!2696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 128, elements: !300)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2691, file: !2663, line: 67, baseType: !2696, size: 128, offset: 192)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !2691, file: !2663, line: 68, baseType: !2696, size: 128, offset: 320)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !2691, file: !2663, line: 69, baseType: !2700, size: 64, offset: 448)
!2700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 64, elements: !300)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2691, file: !2663, line: 70, baseType: !2702, size: 64, offset: 512)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "curpstr", scope: !2664, file: !2663, line: 103, baseType: !2689, size: 64, offset: 1152)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "curpstrand", scope: !2664, file: !2663, line: 104, baseType: !2705, size: 64, offset: 1216)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = !DIDerivedType(tag: DW_TAG_typedef, name: "APixstrand", file: !2663, line: 81, baseType: !2707)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "APixstrand", file: !2663, line: 73, size: 896, elements: !2708)
!2708 = !{!2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2707, file: !2663, line: 74, baseType: !2694, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !2707, file: !2663, line: 75, baseType: !2696, size: 128, offset: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2707, file: !2663, line: 76, baseType: !2696, size: 128, offset: 192)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !2707, file: !2663, line: 77, baseType: !2696, size: 128, offset: 320)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !2707, file: !2663, line: 78, baseType: !2696, size: 128, offset: 448)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2707, file: !2663, line: 79, baseType: !299, size: 128, offset: 576)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2707, file: !2663, line: 79, baseType: !299, size: 128, offset: 704)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2707, file: !2663, line: 80, baseType: !2717, size: 64, offset: 832)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "apsmbase", scope: !2664, file: !2663, line: 105, baseType: !2719, size: 64, offset: 1280)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "polygon_offset", scope: !2664, file: !2663, line: 107, baseType: !5, size: 32, offset: 1344)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !2664, file: !2663, line: 108, baseType: !57, size: 32, offset: 1376)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2664, file: !2663, line: 109, baseType: !5, size: 32, offset: 1408)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "apsmcounter", scope: !2664, file: !2663, line: 109, baseType: !5, size: 32, offset: 1440)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "apstrandmcounter", scope: !2664, file: !2663, line: 110, baseType: !5, size: 32, offset: 1472)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !2664, file: !2663, line: 112, baseType: !57, size: 32, offset: 1504)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "sss_handle", scope: !2664, file: !2663, line: 114, baseType: !58, size: 64, offset: 1536)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "sss_func", scope: !2664, file: !2663, line: 115, baseType: !2728, size: 64, offset: 1600)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{null, !58, !5, !5, !5, !5, !5}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "zbuffunc", scope: !2664, file: !2663, line: 117, baseType: !2732, size: 64, offset: 1664)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{null, !2735, !5, !5, !2017, !2017, !2017, !2017}
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "zbuflinefunc", scope: !2664, file: !2663, line: 118, baseType: !2737, size: 64, offset: 1728)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{null, !2735, !5, !5, !2017, !2017}
!2740 = !DILocalVariable(name: "pa", arg: 1, scope: !2658, file: !1, line: 1144, type: !2083)
!2741 = !DILocation(line: 1144, column: 43, scope: !2658)
!2742 = !DILocalVariable(name: "zspan", arg: 2, scope: !2658, file: !1, line: 1144, type: !2661)
!2743 = !DILocation(line: 1144, column: 54, scope: !2658)
!2744 = !DILocalVariable(name: "sample", arg: 3, scope: !2658, file: !1, line: 1144, type: !5)
!2745 = !DILocation(line: 1144, column: 65, scope: !2658)
!2746 = !DILocalVariable(name: "data", arg: 4, scope: !2658, file: !1, line: 1144, type: !58)
!2747 = !DILocation(line: 1144, column: 79, scope: !2658)
!2748 = !DILocalVariable(name: "sdata", scope: !2658, file: !1, line: 1146, type: !83)
!2749 = !DILocation(line: 1146, column: 17, scope: !2658)
!2750 = !DILocation(line: 1146, column: 42, scope: !2658)
!2751 = !DILocation(line: 1146, column: 25, scope: !2658)
!2752 = !DILocalVariable(name: "lb", scope: !2658, file: !1, line: 1147, type: !595)
!2753 = !DILocation(line: 1147, column: 12, scope: !2658)
!2754 = !DILocation(line: 1147, column: 16, scope: !2658)
!2755 = !DILocation(line: 1147, column: 23, scope: !2658)
!2756 = !DILocalVariable(name: "rd", scope: !2658, file: !1, line: 1148, type: !2100)
!2757 = !DILocation(line: 1148, column: 12, scope: !2658)
!2758 = !DILocation(line: 1148, column: 16, scope: !2658)
!2759 = !DILocation(line: 1148, column: 20, scope: !2658)
!2760 = !DILocalVariable(name: "ro", scope: !2658, file: !1, line: 1149, type: !2761)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!2763 = !DILocation(line: 1149, column: 13, scope: !2658)
!2764 = !DILocation(line: 1149, column: 17, scope: !2658)
!2765 = !DILocation(line: 1149, column: 24, scope: !2658)
!2766 = !DILocalVariable(name: "rp", scope: !2658, file: !1, line: 1150, type: !2761)
!2767 = !DILocation(line: 1150, column: 13, scope: !2658)
!2768 = !DILocation(line: 1150, column: 17, scope: !2658)
!2769 = !DILocation(line: 1150, column: 24, scope: !2658)
!2770 = !DILocalVariable(name: "rz", scope: !2658, file: !1, line: 1151, type: !2761)
!2771 = !DILocation(line: 1151, column: 13, scope: !2658)
!2772 = !DILocation(line: 1151, column: 17, scope: !2658)
!2773 = !DILocation(line: 1151, column: 24, scope: !2658)
!2774 = !DILocalVariable(name: "rm", scope: !2658, file: !1, line: 1152, type: !2761)
!2775 = !DILocation(line: 1152, column: 13, scope: !2658)
!2776 = !DILocation(line: 1152, column: 17, scope: !2658)
!2777 = !DILocation(line: 1152, column: 24, scope: !2658)
!2778 = !DILocalVariable(name: "x", scope: !2658, file: !1, line: 1153, type: !5)
!2779 = !DILocation(line: 1153, column: 6, scope: !2658)
!2780 = !DILocalVariable(name: "y", scope: !2658, file: !1, line: 1153, type: !5)
!2781 = !DILocation(line: 1153, column: 9, scope: !2658)
!2782 = !DILocalVariable(name: "mask", scope: !2658, file: !1, line: 1154, type: !5)
!2783 = !DILocation(line: 1154, column: 6, scope: !2658)
!2784 = !DILocation(line: 1154, column: 15, scope: !2658)
!2785 = !DILocation(line: 1154, column: 13, scope: !2658)
!2786 = !DILocation(line: 1156, column: 8, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2658, file: !1, line: 1156, column: 2)
!2788 = !DILocation(line: 1156, column: 7, scope: !2787)
!2789 = !DILocation(line: 1156, column: 12, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2787, file: !1, line: 1156, column: 2)
!2791 = !DILocation(line: 1156, column: 14, scope: !2790)
!2792 = !DILocation(line: 1156, column: 18, scope: !2790)
!2793 = !DILocation(line: 1156, column: 13, scope: !2790)
!2794 = !DILocation(line: 1156, column: 2, scope: !2787)
!2795 = !DILocation(line: 1157, column: 9, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 1157, column: 3)
!2797 = distinct !DILexicalBlock(scope: !2790, file: !1, line: 1156, column: 30)
!2798 = !DILocation(line: 1157, column: 8, scope: !2796)
!2799 = !DILocation(line: 1157, column: 13, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2796, file: !1, line: 1157, column: 3)
!2801 = !DILocation(line: 1157, column: 15, scope: !2800)
!2802 = !DILocation(line: 1157, column: 19, scope: !2800)
!2803 = !DILocation(line: 1157, column: 14, scope: !2800)
!2804 = !DILocation(line: 1157, column: 3, scope: !2796)
!2805 = !DILocation(line: 1158, column: 9, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2807, file: !1, line: 1158, column: 8)
!2807 = distinct !DILexicalBlock(scope: !2800, file: !1, line: 1157, column: 61)
!2808 = !DILocation(line: 1158, column: 8, scope: !2806)
!2809 = !DILocation(line: 1158, column: 8, scope: !2807)
!2810 = !DILocation(line: 1159, column: 11, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2806, file: !1, line: 1158, column: 13)
!2812 = !DILocation(line: 1159, column: 15, scope: !2811)
!2813 = !DILocation(line: 1159, column: 20, scope: !2811)
!2814 = !DILocation(line: 1159, column: 19, scope: !2811)
!2815 = !DILocation(line: 1159, column: 25, scope: !2811)
!2816 = !DILocation(line: 1159, column: 24, scope: !2811)
!2817 = !DILocation(line: 1159, column: 30, scope: !2811)
!2818 = !DILocation(line: 1159, column: 29, scope: !2811)
!2819 = !DILocation(line: 1159, column: 35, scope: !2811)
!2820 = !DILocation(line: 1159, column: 42, scope: !2811)
!2821 = !DILocation(line: 1159, column: 34, scope: !2811)
!2822 = !DILocation(line: 1159, column: 54, scope: !2811)
!2823 = !DILocation(line: 1159, column: 53, scope: !2811)
!2824 = !DILocation(line: 1159, column: 61, scope: !2811)
!2825 = !DILocation(line: 1159, column: 5, scope: !2811)
!2826 = !DILocation(line: 1160, column: 4, scope: !2811)
!2827 = !DILocation(line: 1161, column: 3, scope: !2807)
!2828 = !DILocation(line: 1157, column: 27, scope: !2800)
!2829 = !DILocation(line: 1157, column: 33, scope: !2800)
!2830 = !DILocation(line: 1157, column: 39, scope: !2800)
!2831 = !DILocation(line: 1157, column: 45, scope: !2800)
!2832 = !DILocation(line: 1157, column: 51, scope: !2800)
!2833 = !DILocation(line: 1157, column: 57, scope: !2800)
!2834 = !DILocation(line: 1157, column: 3, scope: !2800)
!2835 = distinct !{!2835, !2804, !2836}
!2836 = !DILocation(line: 1161, column: 3, scope: !2796)
!2837 = !DILocation(line: 1162, column: 2, scope: !2797)
!2838 = !DILocation(line: 1156, column: 26, scope: !2790)
!2839 = !DILocation(line: 1156, column: 2, scope: !2790)
!2840 = distinct !{!2840, !2794, !2841}
!2841 = !DILocation(line: 1162, column: 2, scope: !2787)
!2842 = !DILocation(line: 1164, column: 6, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2658, file: !1, line: 1164, column: 6)
!2844 = !DILocation(line: 1164, column: 13, scope: !2843)
!2845 = !DILocation(line: 1164, column: 17, scope: !2843)
!2846 = !DILocation(line: 1164, column: 25, scope: !2843)
!2847 = !DILocation(line: 1164, column: 6, scope: !2658)
!2848 = !DILocation(line: 1165, column: 11, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2843, file: !1, line: 1165, column: 7)
!2850 = !DILocation(line: 1165, column: 16, scope: !2849)
!2851 = !DILocation(line: 1165, column: 7, scope: !2843)
!2852 = !DILocation(line: 1166, column: 22, scope: !2849)
!2853 = !DILocation(line: 1166, column: 26, scope: !2849)
!2854 = !DILocation(line: 1166, column: 33, scope: !2849)
!2855 = !DILocation(line: 1166, column: 43, scope: !2849)
!2856 = !DILocation(line: 1166, column: 50, scope: !2849)
!2857 = !DILocation(line: 1166, column: 4, scope: !2849)
!2858 = !DILocation(line: 1165, column: 18, scope: !2849)
!2859 = !DILocation(line: 1167, column: 1, scope: !2658)
!2860 = distinct !DISubprogram(name: "shadeDA_tile", scope: !1, file: !1, line: 810, type: !2861, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{null, !2083, !88}
!2863 = !DILocalVariable(name: "pa", arg: 1, scope: !2860, file: !1, line: 810, type: !2083)
!2864 = !DILocation(line: 810, column: 38, scope: !2860)
!2865 = !DILocalVariable(name: "rl", arg: 2, scope: !2860, file: !1, line: 810, type: !88)
!2866 = !DILocation(line: 810, column: 55, scope: !2860)
!2867 = !DILocalVariable(name: "rr", scope: !2860, file: !1, line: 812, type: !2092)
!2868 = !DILocation(line: 812, column: 16, scope: !2860)
!2869 = !DILocation(line: 812, column: 20, scope: !2860)
!2870 = !DILocation(line: 812, column: 24, scope: !2860)
!2871 = !DILocalVariable(name: "ssamp", scope: !2860, file: !1, line: 813, type: !2872)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeSample", file: !2873, line: 54, baseType: !2874)
!2873 = !DIFile(filename: "blender/source/blender/render/intern/include/shading.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeSample", file: !2873, line: 46, size: 216640, elements: !2875)
!2875 = !{!2876, !2877, !2881, !3385}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2874, file: !2873, line: 47, baseType: !5, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "rlpp", scope: !2874, file: !2873, line: 49, baseType: !2878, size: 1024, offset: 64)
!2878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !2879)
!2879 = !{!2880}
!2880 = !DISubrange(count: 16)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "shi", scope: !2874, file: !2873, line: 52, baseType: !2882, size: 188416, offset: 1088)
!2882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2883, size: 188416, elements: !2879)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInput", file: !2884, line: 186, baseType: !2885)
!2884 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInput", file: !2884, line: 98, size: 11776, elements: !2886)
!2886 = !{!2887, !2888, !2911, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3329, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2885, file: !2884, line: 102, baseType: !108, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "vlr", scope: !2885, file: !2884, line: 103, baseType: !2889, size: 64, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 64)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !2085, line: 400, size: 512, elements: !2891)
!2891 = !{!2892, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2890, file: !2085, line: 401, baseType: !2893, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !2085, line: 372, size: 384, elements: !2895)
!2895 = !{!2896, !2897, !2898, !2899, !2900, !2901}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2894, file: !2085, line: 373, baseType: !217, size: 96)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2894, file: !2085, line: 374, baseType: !217, size: 96, offset: 96)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2894, file: !2085, line: 375, baseType: !692, size: 64, offset: 192)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2894, file: !2085, line: 376, baseType: !41, size: 32, offset: 256)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !2894, file: !2085, line: 378, baseType: !57, size: 32, offset: 288)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2894, file: !2085, line: 379, baseType: !5, size: 32, offset: 320)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2890, file: !2085, line: 401, baseType: !2893, size: 64, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2890, file: !2085, line: 401, baseType: !2893, size: 64, offset: 128)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2890, file: !2085, line: 401, baseType: !2893, size: 64, offset: 192)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2890, file: !2085, line: 402, baseType: !217, size: 96, offset: 256)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2890, file: !2085, line: 403, baseType: !108, size: 64, offset: 384)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !2890, file: !2085, line: 404, baseType: !98, size: 8, offset: 448)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2890, file: !2085, line: 405, baseType: !98, size: 8, offset: 456)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !2890, file: !2085, line: 405, baseType: !98, size: 8, offset: 464)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2890, file: !2085, line: 410, baseType: !5, size: 32, offset: 480)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2885, file: !2884, line: 104, baseType: !2912, size: 64, offset: 128)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !2085, line: 475, size: 384, elements: !2914)
!2914 = !{!2915, !2922, !3246, !3247, !3248, !3249, !3250}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2913, file: !2085, line: 476, baseType: !2916, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !2085, line: 434, baseType: !2918)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !2085, line: 431, size: 128, elements: !2919)
!2919 = !{!2920, !2921}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2918, file: !2085, line: 432, baseType: !217, size: 96)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !2918, file: !2085, line: 433, baseType: !57, size: 32, offset: 96)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2913, file: !2085, line: 477, baseType: !2923, size: 64, offset: 64)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !2085, line: 473, baseType: !2925)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !2085, line: 455, size: 1344, elements: !2926)
!2926 = !{!2927, !2929, !2930, !2932, !2941, !2942, !2943, !3216, !3217, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2925, file: !2085, line: 456, baseType: !2928, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2925, file: !2085, line: 456, baseType: !2928, size: 64, offset: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2925, file: !2085, line: 457, baseType: !2931, size: 64, offset: 128)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2925, file: !2085, line: 458, baseType: !2933, size: 64, offset: 192)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !2085, line: 450, size: 256, elements: !2935)
!2935 = !{!2936, !2937, !2938}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2934, file: !2085, line: 451, baseType: !5, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2934, file: !2085, line: 451, baseType: !5, size: 32, offset: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2934, file: !2085, line: 452, baseType: !2939, size: 192, offset: 64)
!2939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 192, elements: !2940)
!2940 = !{!605, !219}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2925, file: !2085, line: 459, baseType: !5, size: 32, offset: 256)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !2925, file: !2085, line: 459, baseType: !5, size: 32, offset: 288)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2925, file: !2085, line: 461, baseType: !2944, size: 64, offset: 320)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !2085, line: 315, size: 2240, elements: !2946)
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2977, !3004, !3017, !3055, !3056, !3058, !3059, !3060, !3061, !3062, !3063, !3161, !3172, !3215}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2945, file: !2085, line: 316, baseType: !2944, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2945, file: !2085, line: 316, baseType: !2944, size: 64, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2945, file: !2085, line: 317, baseType: !352, size: 64, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2945, file: !2085, line: 317, baseType: !352, size: 64, offset: 192)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !2945, file: !2085, line: 318, baseType: !613, size: 64, offset: 256)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2945, file: !2085, line: 319, baseType: !5, size: 32, offset: 320)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !2945, file: !2085, line: 319, baseType: !5, size: 32, offset: 352)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2945, file: !2085, line: 319, baseType: !5, size: 32, offset: 384)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2945, file: !2085, line: 319, baseType: !5, size: 32, offset: 416)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2945, file: !2085, line: 321, baseType: !2939, size: 192, offset: 448)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2945, file: !2085, line: 323, baseType: !5, size: 32, offset: 640)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !2945, file: !2085, line: 323, baseType: !5, size: 32, offset: 672)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2945, file: !2085, line: 323, baseType: !5, size: 32, offset: 704)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2945, file: !2085, line: 323, baseType: !5, size: 32, offset: 736)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !2945, file: !2085, line: 324, baseType: !5, size: 32, offset: 768)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !2945, file: !2085, line: 324, baseType: !5, size: 32, offset: 800)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !2945, file: !2085, line: 324, baseType: !5, size: 32, offset: 832)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !2945, file: !2085, line: 324, baseType: !5, size: 32, offset: 864)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !2945, file: !2085, line: 325, baseType: !2966, size: 64, offset: 896)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !2968, line: 60, size: 448, elements: !2969)
!2968 = !DIFile(filename: "blender/source/blender/render/intern/include/renderdatabase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2969 = !{!2970, !2971, !2972, !2973, !2974, !2975, !2976}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2967, file: !2968, line: 61, baseType: !2893, size: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2967, file: !2968, line: 62, baseType: !692, size: 64, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2967, file: !2968, line: 63, baseType: !692, size: 64, offset: 128)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2967, file: !2968, line: 64, baseType: !692, size: 64, offset: 192)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !2967, file: !2968, line: 65, baseType: !692, size: 64, offset: 256)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2967, file: !2968, line: 66, baseType: !692, size: 64, offset: 320)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2967, file: !2968, line: 68, baseType: !855, size: 64, offset: 384)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !2945, file: !2085, line: 326, baseType: !2978, size: 64, offset: 960)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !2968, line: 71, size: 512, elements: !2980)
!2980 = !{!2981, !2982, !2985, !2988, !2989, !2990, !2991, !2992, !2993}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "vlak", scope: !2979, file: !2968, line: 72, baseType: !2889, size: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2979, file: !2968, line: 73, baseType: !2983, size: 64, offset: 64)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !2085, line: 391, flags: DIFlagFwdDecl)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2979, file: !2968, line: 74, baseType: !2986, size: 64, offset: 128)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !2968, line: 47, flags: DIFlagFwdDecl)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2979, file: !2968, line: 76, baseType: !855, size: 64, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "totmtface", scope: !2979, file: !2968, line: 77, baseType: !5, size: 32, offset: 256)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2979, file: !2968, line: 77, baseType: !5, size: 32, offset: 288)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2979, file: !2968, line: 78, baseType: !692, size: 64, offset: 320)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2979, file: !2968, line: 79, baseType: !692, size: 64, offset: 384)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "radface", scope: !2979, file: !2968, line: 80, baseType: !2994, size: 64, offset: 448)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadFace", file: !2085, line: 394, size: 448, elements: !2997)
!2997 = !{!2998, !2999, !3000, !3001, !3002, !3003}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "unshot", scope: !2996, file: !2085, line: 395, baseType: !217, size: 96)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "totrad", scope: !2996, file: !2085, line: 395, baseType: !217, size: 96, offset: 96)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "norm", scope: !2996, file: !2085, line: 396, baseType: !217, size: 96, offset: 192)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !2996, file: !2085, line: 396, baseType: !217, size: 96, offset: 288)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !2996, file: !2085, line: 396, baseType: !57, size: 32, offset: 384)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2996, file: !2085, line: 397, baseType: !5, size: 32, offset: 416)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !2945, file: !2085, line: 327, baseType: !3005, size: 64, offset: 1024)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !2968, line: 83, size: 512, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !3006, file: !2968, line: 84, baseType: !2912, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !3006, file: !2968, line: 85, baseType: !692, size: 64, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !3006, file: !2968, line: 86, baseType: !692, size: 64, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "simplify", scope: !3006, file: !2968, line: 87, baseType: !692, size: 64, offset: 192)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3006, file: !2968, line: 88, baseType: !855, size: 64, offset: 256)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3006, file: !2968, line: 89, baseType: !2986, size: 64, offset: 320)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3006, file: !2968, line: 90, baseType: !692, size: 64, offset: 384)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !3006, file: !2968, line: 91, baseType: !5, size: 32, offset: 448)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !3006, file: !2968, line: 91, baseType: !5, size: 32, offset: 480)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !2945, file: !2085, line: 328, baseType: !3018, size: 64, offset: 1088)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !2085, line: 413, size: 1024, elements: !3021)
!3021 = !{!3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !3020, file: !2085, line: 414, baseType: !79, size: 16)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !3020, file: !2085, line: 414, baseType: !79, size: 16, offset: 16)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3020, file: !2085, line: 415, baseType: !57, size: 32, offset: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !3020, file: !2085, line: 415, baseType: !57, size: 32, offset: 64)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !3020, file: !2085, line: 415, baseType: !57, size: 32, offset: 96)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !3020, file: !2085, line: 415, baseType: !57, size: 32, offset: 128)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !3020, file: !2085, line: 415, baseType: !57, size: 32, offset: 160)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !3020, file: !2085, line: 415, baseType: !57, size: 32, offset: 192)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !3020, file: !2085, line: 415, baseType: !57, size: 32, offset: 224)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3020, file: !2085, line: 415, baseType: !217, size: 96, offset: 256)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3020, file: !2085, line: 415, baseType: !217, size: 96, offset: 352)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !3020, file: !2085, line: 416, baseType: !57, size: 32, offset: 448)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3020, file: !2085, line: 416, baseType: !57, size: 32, offset: 480)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3020, file: !2085, line: 416, baseType: !57, size: 32, offset: 512)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3020, file: !2085, line: 416, baseType: !57, size: 32, offset: 544)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !3020, file: !2085, line: 417, baseType: !5, size: 32, offset: 576)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !3020, file: !2085, line: 417, baseType: !5, size: 32, offset: 608)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !3020, file: !2085, line: 418, baseType: !5, size: 32, offset: 640)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !3020, file: !2085, line: 419, baseType: !98, size: 8, offset: 672)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3020, file: !2085, line: 419, baseType: !98, size: 8, offset: 680)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !3020, file: !2085, line: 419, baseType: !98, size: 8, offset: 688)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3020, file: !2085, line: 419, baseType: !98, size: 8, offset: 696)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !3020, file: !2085, line: 420, baseType: !98, size: 8, offset: 704)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !3020, file: !2085, line: 420, baseType: !98, size: 8, offset: 712)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3020, file: !2085, line: 420, baseType: !98, size: 8, offset: 720)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !3020, file: !2085, line: 421, baseType: !79, size: 16, offset: 736)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !3020, file: !2085, line: 422, baseType: !57, size: 32, offset: 768)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !3020, file: !2085, line: 423, baseType: !5, size: 32, offset: 800)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3020, file: !2085, line: 424, baseType: !41, size: 32, offset: 832)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3020, file: !2085, line: 425, baseType: !108, size: 64, offset: 896)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3020, file: !2085, line: 426, baseType: !3053, size: 64, offset: 960)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !2884, line: 197, flags: DIFlagFwdDecl)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !2945, file: !2085, line: 329, baseType: !2928, size: 64, offset: 1152)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2945, file: !2085, line: 331, baseType: !3057, size: 64, offset: 1216)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2945, file: !2085, line: 332, baseType: !3057, size: 64, offset: 1280)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !2945, file: !2085, line: 333, baseType: !5, size: 32, offset: 1344)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !2945, file: !2085, line: 333, baseType: !5, size: 32, offset: 1376)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !2945, file: !2085, line: 333, baseType: !5, size: 32, offset: 1408)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !2945, file: !2085, line: 335, baseType: !488, size: 512, offset: 1440)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2945, file: !2085, line: 338, baseType: !3064, size: 64, offset: 1984)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !3066, line: 118, size: 192, elements: !3067)
!3066 = !DIFile(filename: "blender/source/blender/render/intern/include/../raytrace/rayobject_internal.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3067 = !{!3068, !3152}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3065, file: !3066, line: 119, baseType: !3069, size: 64)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObjectAPI", file: !3066, line: 131, size: 448, elements: !3071)
!3071 = !{!3072, !3124, !3129, !3134, !3136, !3141, !3146}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "raycast", scope: !3070, file: !3066, line: 132, baseType: !3073, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_raycast_callback", file: !3066, line: 123, baseType: !3074)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DISubroutineType(types: !3076)
!3076 = !{!5, !3077, !3080}
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayObject", file: !3079, line: 50, baseType: !3065)
!3079 = !DIFile(filename: "blender/source/blender/render/intern/include/rayobject.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Isect", file: !3082, line: 60, size: 1408, elements: !3083)
!3082 = !DIFile(filename: "blender/source/blender/render/intern/include/rayintersection.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3083 = !{!3084, !3085, !3086, !3087, !3088, !3089, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3105, !3106, !3107}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3081, file: !3082, line: 63, baseType: !217, size: 96)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3081, file: !3082, line: 64, baseType: !217, size: 96, offset: 96)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3081, file: !3082, line: 65, baseType: !57, size: 32, offset: 192)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "origstart", scope: !3081, file: !3082, line: 68, baseType: !217, size: 96, offset: 224)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "origdir", scope: !3081, file: !3082, line: 69, baseType: !217, size: 96, offset: 320)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "bv_index", scope: !3081, file: !3082, line: 72, baseType: !3090, size: 192, offset: 416)
!3090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 192, elements: !1085)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "idot_axis", scope: !3081, file: !3082, line: 73, baseType: !217, size: 96, offset: 608)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3081, file: !3082, line: 76, baseType: !5, size: 32, offset: 704)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3081, file: !3082, line: 77, baseType: !5, size: 32, offset: 736)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !3081, file: !3082, line: 78, baseType: !5, size: 32, offset: 768)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3081, file: !3082, line: 79, baseType: !5, size: 32, offset: 800)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !3081, file: !3082, line: 80, baseType: !58, size: 64, offset: 832)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !3081, file: !3082, line: 83, baseType: !57, size: 32, offset: 896)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3081, file: !3082, line: 83, baseType: !57, size: 32, offset: 928)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "isect", scope: !3081, file: !3082, line: 84, baseType: !5, size: 32, offset: 960)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "hit", scope: !3081, file: !3082, line: 89, baseType: !3101, size: 128, offset: 1024)
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3081, file: !3082, line: 86, size: 128, elements: !3102)
!3102 = !{!3103, !3104}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3101, file: !3082, line: 87, baseType: !58, size: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3101, file: !3082, line: 88, baseType: !58, size: 64, offset: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !3081, file: !3082, line: 89, baseType: !3101, size: 128, offset: 1152)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !3081, file: !3082, line: 92, baseType: !3064, size: 64, offset: 1280)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "hint", scope: !3081, file: !3082, line: 98, baseType: !3108, size: 64, offset: 1344)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayHint", file: !3082, line: 56, baseType: !3110)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayHint", file: !3082, line: 54, size: 16448, elements: !3111)
!3111 = !{!3112}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3110, file: !3082, line: 55, baseType: !3113, size: 16448)
!3113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3110, file: !3082, line: 55, size: 16448, elements: !3114)
!3114 = !{!3115}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "lcts", scope: !3113, file: !3082, line: 55, baseType: !3116, size: 16448)
!3116 = !DIDerivedType(tag: DW_TAG_typedef, name: "LCTSHint", file: !3082, line: 52, baseType: !3117)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LCTSHint", file: !3082, line: 49, size: 16448, elements: !3118)
!3118 = !{!3119, !3120}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3117, file: !3082, line: 50, baseType: !5, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !3117, file: !3082, line: 51, baseType: !3121, size: 16384, offset: 64)
!3121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3064, size: 16384, elements: !3122)
!3122 = !{!3123}
!3123 = !DISubrange(count: 256)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !3070, file: !3066, line: 133, baseType: !3125, size: 64, offset: 64)
!3125 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_add_callback", file: !3066, line: 124, baseType: !3126)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{null, !3077, !3077}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3070, file: !3066, line: 134, baseType: !3130, size: 64, offset: 128)
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_done_callback", file: !3066, line: 125, baseType: !3131)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{null, !3077}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3070, file: !3066, line: 135, baseType: !3135, size: 64, offset: 192)
!3135 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_free_callback", file: !3066, line: 126, baseType: !3131)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3070, file: !3066, line: 136, baseType: !3137, size: 64, offset: 256)
!3137 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_merge_bb_callback", file: !3066, line: 127, baseType: !3138)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{null, !3077, !692, !692}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !3070, file: !3066, line: 137, baseType: !3142, size: 64, offset: 320)
!3142 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_cost_callback", file: !3066, line: 128, baseType: !3143)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{!57, !3077}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "hint_bb", scope: !3070, file: !3066, line: 138, baseType: !3147, size: 64, offset: 384)
!3147 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_hint_bb_callback", file: !3066, line: 129, baseType: !3148)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{null, !3077, !3151, !692, !692}
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !3065, file: !3066, line: 120, baseType: !3153, size: 128, offset: 64)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObjectControl", file: !3066, line: 51, size: 128, elements: !3154)
!3154 = !{!3155, !3156}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3153, file: !3066, line: 52, baseType: !58, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !3153, file: !3066, line: 53, baseType: !3157, size: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobjectcontrol_test_break_callback", file: !3066, line: 49, baseType: !3158)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{!5, !58}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !2945, file: !2085, line: 339, baseType: !3162, size: 64, offset: 2048)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !3079, line: 78, size: 640, elements: !3164)
!3164 = !{!3165, !3166, !3167, !3168, !3169, !3170, !3171}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3163, file: !3079, line: 79, baseType: !299, size: 128)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3163, file: !3079, line: 79, baseType: !299, size: 128, offset: 128)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3163, file: !3079, line: 79, baseType: !299, size: 128, offset: 256)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3163, file: !3079, line: 79, baseType: !217, size: 96, offset: 384)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "quad", scope: !3163, file: !3079, line: 80, baseType: !5, size: 32, offset: 480)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3163, file: !3079, line: 81, baseType: !58, size: 64, offset: 512)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3163, file: !3079, line: 82, baseType: !58, size: 64, offset: 576)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !2945, file: !2085, line: 340, baseType: !3173, size: 64, offset: 2112)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !3079, line: 95, size: 128, elements: !3175)
!3175 = !{!3176, !3214}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3174, file: !3079, line: 96, baseType: !3177, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !2085, line: 345, size: 2304, elements: !3179)
!3179 = !{!3180, !3181, !3182, !3185, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3200, !3210, !3211, !3212, !3213}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3178, file: !2085, line: 346, baseType: !3177, size: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3178, file: !2085, line: 346, baseType: !3177, size: 64, offset: 64)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !3178, file: !2085, line: 348, baseType: !3183, size: 64, offset: 128)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !2085, line: 343, baseType: !2945)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3178, file: !2085, line: 349, baseType: !3186, size: 64, offset: 192)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !40, line: 295, baseType: !353)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3178, file: !2085, line: 349, baseType: !3186, size: 64, offset: 256)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3178, file: !2085, line: 350, baseType: !5, size: 32, offset: 320)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !3178, file: !2085, line: 350, baseType: !5, size: 32, offset: 352)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3178, file: !2085, line: 350, baseType: !5, size: 32, offset: 384)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3178, file: !2085, line: 352, baseType: !488, size: 512, offset: 416)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3178, file: !2085, line: 352, baseType: !488, size: 512, offset: 928)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !3178, file: !2085, line: 353, baseType: !1639, size: 288, offset: 1440)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3178, file: !2085, line: 354, baseType: !79, size: 16, offset: 1728)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !3178, file: !2085, line: 356, baseType: !217, size: 96, offset: 1760)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !3178, file: !2085, line: 356, baseType: !603, size: 64, offset: 1856)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !3178, file: !2085, line: 357, baseType: !3199, size: 64, offset: 1920)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !3178, file: !2085, line: 359, baseType: !3201, size: 64, offset: 1984)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !2085, line: 513, size: 448, elements: !3203)
!3203 = !{!3204, !3205, !3206, !3207, !3208, !3209}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !3202, file: !2085, line: 514, baseType: !791, size: 96)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !3202, file: !2085, line: 515, baseType: !692, size: 64, offset: 128)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !3202, file: !2085, line: 515, baseType: !692, size: 64, offset: 192)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !3202, file: !2085, line: 516, baseType: !692, size: 64, offset: 256)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !3202, file: !2085, line: 517, baseType: !692, size: 64, offset: 320)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !3202, file: !2085, line: 518, baseType: !692, size: 64, offset: 384)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !3178, file: !2085, line: 361, baseType: !692, size: 64, offset: 2048)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !3178, file: !2085, line: 362, baseType: !5, size: 32, offset: 2112)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !3178, file: !2085, line: 365, baseType: !3064, size: 64, offset: 2176)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !3178, file: !2085, line: 366, baseType: !5, size: 32, offset: 2240)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3174, file: !3079, line: 97, baseType: !2889, size: 64, offset: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !2945, file: !2085, line: 341, baseType: !3177, size: 64, offset: 2176)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !2925, file: !2085, line: 462, baseType: !108, size: 64, offset: 384)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !2925, file: !2085, line: 463, baseType: !3218, size: 64, offset: 448)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !2085, line: 436, size: 2880, elements: !3220)
!3220 = !{!3221, !3222, !3223, !3224, !3226, !3228, !3229, !3230, !3231, !3232, !3233, !3234}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3219, file: !2085, line: 437, baseType: !3218, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3219, file: !2085, line: 437, baseType: !3218, size: 64, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !3219, file: !2085, line: 438, baseType: !3184, size: 2240, offset: 128)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3219, file: !2085, line: 439, baseType: !3225, size: 64, offset: 2368)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3219, file: !2085, line: 440, baseType: !3227, size: 64, offset: 2432)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !3219, file: !2085, line: 442, baseType: !3227, size: 64, offset: 2496)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3219, file: !2085, line: 443, baseType: !3227, size: 64, offset: 2560)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !3219, file: !2085, line: 444, baseType: !3227, size: 64, offset: 2624)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !3219, file: !2085, line: 446, baseType: !3227, size: 64, offset: 2688)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !3219, file: !2085, line: 446, baseType: !3227, size: 64, offset: 2752)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3219, file: !2085, line: 447, baseType: !5, size: 32, offset: 2816)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3219, file: !2085, line: 447, baseType: !5, size: 32, offset: 2848)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2925, file: !2085, line: 464, baseType: !41, size: 32, offset: 512)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !2925, file: !2085, line: 465, baseType: !5, size: 32, offset: 544)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2925, file: !2085, line: 466, baseType: !5, size: 32, offset: 576)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !2925, file: !2085, line: 466, baseType: !5, size: 32, offset: 608)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !2925, file: !2085, line: 467, baseType: !57, size: 32, offset: 640)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !2925, file: !2085, line: 467, baseType: !57, size: 32, offset: 672)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !2925, file: !2085, line: 467, baseType: !57, size: 32, offset: 704)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !2925, file: !2085, line: 469, baseType: !57, size: 32, offset: 736)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2925, file: !2085, line: 471, baseType: !488, size: 512, offset: 768)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2925, file: !2085, line: 472, baseType: !5, size: 32, offset: 1280)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2925, file: !2085, line: 472, baseType: !5, size: 32, offset: 1312)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2913, file: !2085, line: 478, baseType: !5, size: 32, offset: 128)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2913, file: !2085, line: 478, baseType: !5, size: 32, offset: 160)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2913, file: !2085, line: 479, baseType: !5, size: 32, offset: 192)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2913, file: !2085, line: 479, baseType: !5, size: 32, offset: 224)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2913, file: !2085, line: 480, baseType: !217, size: 96, offset: 256)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !2885, file: !2884, line: 105, baseType: !3177, size: 64, offset: 192)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2885, file: !2884, line: 106, baseType: !2944, size: 64, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !2885, file: !2884, line: 107, baseType: !5, size: 32, offset: 320)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "facenor", scope: !2885, file: !2884, line: 108, baseType: !217, size: 96, offset: 352)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "flippednor", scope: !2885, file: !2884, line: 109, baseType: !79, size: 16, offset: 448)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2885, file: !2884, line: 110, baseType: !2893, size: 64, offset: 512)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2885, file: !2884, line: 110, baseType: !2893, size: 64, offset: 576)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2885, file: !2884, line: 110, baseType: !2893, size: 64, offset: 640)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !2885, file: !2884, line: 111, baseType: !79, size: 16, offset: 704)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !2885, file: !2884, line: 111, baseType: !79, size: 16, offset: 720)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "i3", scope: !2885, file: !2884, line: 111, baseType: !79, size: 16, offset: 736)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !2885, file: !2884, line: 112, baseType: !79, size: 16, offset: 752)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "osatex", scope: !2885, file: !2884, line: 113, baseType: !79, size: 16, offset: 768)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "vn", scope: !2885, file: !2884, line: 114, baseType: !217, size: 96, offset: 800)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "vno", scope: !2885, file: !2884, line: 114, baseType: !217, size: 96, offset: 896)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "n1", scope: !2885, file: !2884, line: 115, baseType: !217, size: 96, offset: 992)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !2885, file: !2884, line: 115, baseType: !217, size: 96, offset: 1088)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "n3", scope: !2885, file: !2884, line: 115, baseType: !217, size: 96, offset: 1184)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2885, file: !2884, line: 116, baseType: !5, size: 32, offset: 1280)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !2885, file: !2884, line: 116, baseType: !5, size: 32, offset: 1312)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2885, file: !2884, line: 119, baseType: !57, size: 32, offset: 1344)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2885, file: !2884, line: 119, baseType: !57, size: 32, offset: 1376)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "dx_u", scope: !2885, file: !2884, line: 119, baseType: !57, size: 32, offset: 1408)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "dx_v", scope: !2885, file: !2884, line: 119, baseType: !57, size: 32, offset: 1440)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "dy_u", scope: !2885, file: !2884, line: 119, baseType: !57, size: 32, offset: 1472)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "dy_v", scope: !2885, file: !2884, line: 119, baseType: !57, size: 32, offset: 1504)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2885, file: !2884, line: 120, baseType: !217, size: 96, offset: 1536)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2885, file: !2884, line: 120, baseType: !217, size: 96, offset: 1632)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "camera_co", scope: !2885, file: !2884, line: 120, baseType: !217, size: 96, offset: 1728)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2885, file: !2884, line: 124, baseType: !57, size: 32, offset: 1824)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2885, file: !2884, line: 124, baseType: !57, size: 32, offset: 1856)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2885, file: !2884, line: 124, baseType: !57, size: 32, offset: 1888)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !2885, file: !2884, line: 125, baseType: !57, size: 32, offset: 1920)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !2885, file: !2884, line: 125, baseType: !57, size: 32, offset: 1952)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !2885, file: !2884, line: 125, baseType: !57, size: 32, offset: 1984)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !2885, file: !2884, line: 126, baseType: !57, size: 32, offset: 2016)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !2885, file: !2884, line: 126, baseType: !57, size: 32, offset: 2048)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !2885, file: !2884, line: 126, baseType: !57, size: 32, offset: 2080)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !2885, file: !2884, line: 127, baseType: !57, size: 32, offset: 2112)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !2885, file: !2884, line: 127, baseType: !57, size: 32, offset: 2144)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !2885, file: !2884, line: 127, baseType: !57, size: 32, offset: 2176)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !2885, file: !2884, line: 129, baseType: !57, size: 32, offset: 2208)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !2885, file: !2884, line: 129, baseType: !57, size: 32, offset: 2240)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !2885, file: !2884, line: 129, baseType: !57, size: 32, offset: 2272)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !2885, file: !2884, line: 129, baseType: !57, size: 32, offset: 2304)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !2885, file: !2884, line: 129, baseType: !57, size: 32, offset: 2336)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2885, file: !2884, line: 130, baseType: !57, size: 32, offset: 2368)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !2885, file: !2884, line: 130, baseType: !57, size: 32, offset: 2400)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !2885, file: !2884, line: 130, baseType: !57, size: 32, offset: 2432)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !2885, file: !2884, line: 130, baseType: !57, size: 32, offset: 2464)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2885, file: !2884, line: 130, baseType: !57, size: 32, offset: 2496)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !2885, file: !2884, line: 131, baseType: !57, size: 32, offset: 2528)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !2885, file: !2884, line: 135, baseType: !5, size: 32, offset: 2560)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !2885, file: !2884, line: 138, baseType: !217, size: 96, offset: 2592)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "gl", scope: !2885, file: !2884, line: 138, baseType: !217, size: 96, offset: 2688)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2885, file: !2884, line: 138, baseType: !217, size: 96, offset: 2784)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !2885, file: !2884, line: 138, baseType: !217, size: 96, offset: 2880)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "winco", scope: !2885, file: !2884, line: 138, baseType: !217, size: 96, offset: 2976)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "vcol", scope: !2885, file: !2884, line: 138, baseType: !299, size: 128, offset: 3072)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "refcol", scope: !2885, file: !2884, line: 139, baseType: !299, size: 128, offset: 3200)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "displace", scope: !2885, file: !2884, line: 139, baseType: !217, size: 96, offset: 3328)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !2885, file: !2884, line: 140, baseType: !57, size: 32, offset: 3424)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !2885, file: !2884, line: 140, baseType: !217, size: 96, offset: 3456)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "nmapnorm", scope: !2885, file: !2884, line: 140, baseType: !217, size: 96, offset: 3552)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "nmaptang", scope: !2885, file: !2884, line: 140, baseType: !299, size: 128, offset: 3648)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !2885, file: !2884, line: 140, baseType: !57, size: 32, offset: 3776)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2885, file: !2884, line: 140, baseType: !299, size: 128, offset: 3808)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "duplilo", scope: !2885, file: !2884, line: 141, baseType: !217, size: 96, offset: 3936)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !2885, file: !2884, line: 141, baseType: !217, size: 96, offset: 4032)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2885, file: !2884, line: 143, baseType: !3321, size: 3072, offset: 4160)
!3321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3322, size: 3072, elements: !881)
!3322 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputUV", file: !2884, line: 90, baseType: !3323)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputUV", file: !2884, line: 87, size: 384, elements: !3324)
!3324 = !{!3325, !3326, !3327, !3328}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "dxuv", scope: !3323, file: !2884, line: 88, baseType: !217, size: 96)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "dyuv", scope: !3323, file: !2884, line: 88, baseType: !217, size: 96, offset: 96)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3323, file: !2884, line: 88, baseType: !217, size: 96, offset: 192)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3323, file: !2884, line: 89, baseType: !470, size: 64, offset: 320)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2885, file: !2884, line: 144, baseType: !3330, size: 1536, offset: 7232)
!3330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3331, size: 1536, elements: !881)
!3331 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputCol", file: !2884, line: 95, baseType: !3332)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputCol", file: !2884, line: 92, size: 192, elements: !3333)
!3333 = !{!3334, !3335}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3332, file: !2884, line: 93, baseType: !299, size: 128)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3332, file: !2884, line: 94, baseType: !470, size: 64, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !2885, file: !2884, line: 145, baseType: !5, size: 32, offset: 8768)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2885, file: !2884, line: 145, baseType: !5, size: 32, offset: 8800)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "actuv", scope: !2885, file: !2884, line: 145, baseType: !5, size: 32, offset: 8832)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !2885, file: !2884, line: 145, baseType: !5, size: 32, offset: 8864)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "dxco", scope: !2885, file: !2884, line: 148, baseType: !217, size: 96, offset: 8896)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "dyco", scope: !2885, file: !2884, line: 148, baseType: !217, size: 96, offset: 8992)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "dxlo", scope: !2885, file: !2884, line: 149, baseType: !217, size: 96, offset: 9088)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "dylo", scope: !2885, file: !2884, line: 149, baseType: !217, size: 96, offset: 9184)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "dxgl", scope: !2885, file: !2884, line: 149, baseType: !217, size: 96, offset: 9280)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "dygl", scope: !2885, file: !2884, line: 149, baseType: !217, size: 96, offset: 9376)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "dxref", scope: !2885, file: !2884, line: 150, baseType: !217, size: 96, offset: 9472)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "dyref", scope: !2885, file: !2884, line: 150, baseType: !217, size: 96, offset: 9568)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "dxorn", scope: !2885, file: !2884, line: 150, baseType: !217, size: 96, offset: 9664)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "dyorn", scope: !2885, file: !2884, line: 150, baseType: !217, size: 96, offset: 9760)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "dxno", scope: !2885, file: !2884, line: 151, baseType: !217, size: 96, offset: 9856)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "dyno", scope: !2885, file: !2884, line: 151, baseType: !217, size: 96, offset: 9952)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "dxview", scope: !2885, file: !2884, line: 151, baseType: !57, size: 32, offset: 10048)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "dyview", scope: !2885, file: !2884, line: 151, baseType: !57, size: 32, offset: 10080)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "dxlv", scope: !2885, file: !2884, line: 152, baseType: !217, size: 96, offset: 10112)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "dylv", scope: !2885, file: !2884, line: 152, baseType: !217, size: 96, offset: 10208)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "dxwin", scope: !2885, file: !2884, line: 153, baseType: !217, size: 96, offset: 10304)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "dywin", scope: !2885, file: !2884, line: 153, baseType: !217, size: 96, offset: 10400)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "dxrefract", scope: !2885, file: !2884, line: 154, baseType: !217, size: 96, offset: 10496)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "dyrefract", scope: !2885, file: !2884, line: 154, baseType: !217, size: 96, offset: 10592)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "dxstrand", scope: !2885, file: !2884, line: 155, baseType: !57, size: 32, offset: 10688)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "dystrand", scope: !2885, file: !2884, line: 155, baseType: !57, size: 32, offset: 10720)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !2885, file: !2884, line: 158, baseType: !217, size: 96, offset: 10752)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !2885, file: !2884, line: 158, baseType: !217, size: 96, offset: 10848)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2885, file: !2884, line: 158, baseType: !217, size: 96, offset: 10944)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !2885, file: !2884, line: 160, baseType: !5, size: 32, offset: 11040)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !2885, file: !2884, line: 160, baseType: !5, size: 32, offset: 11072)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2885, file: !2884, line: 161, baseType: !5, size: 32, offset: 11104)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "scanco", scope: !2885, file: !2884, line: 162, baseType: !217, size: 96, offset: 11136)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !2885, file: !2884, line: 164, baseType: !5, size: 32, offset: 11232)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2885, file: !2884, line: 165, baseType: !5, size: 32, offset: 11264)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "volume_depth", scope: !2885, file: !2884, line: 166, baseType: !5, size: 32, offset: 11296)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2885, file: !2884, line: 169, baseType: !217, size: 96, offset: 11328)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "surfdist", scope: !2885, file: !2884, line: 169, baseType: !57, size: 32, offset: 11424)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "do_preview", scope: !2885, file: !2884, line: 172, baseType: !770, size: 8, offset: 11456)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "do_manage", scope: !2885, file: !2884, line: 173, baseType: !770, size: 8, offset: 11464)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2885, file: !2884, line: 174, baseType: !79, size: 16, offset: 11472)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2885, file: !2884, line: 174, baseType: !79, size: 16, offset: 11488)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2885, file: !2884, line: 175, baseType: !79, size: 16, offset: 11504)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2885, file: !2884, line: 177, baseType: !41, size: 32, offset: 11520)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !2885, file: !2884, line: 178, baseType: !5, size: 32, offset: 11552)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !2885, file: !2884, line: 178, baseType: !5, size: 32, offset: 11584)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "combinedflag", scope: !2885, file: !2884, line: 178, baseType: !5, size: 32, offset: 11616)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !2885, file: !2884, line: 179, baseType: !561, size: 64, offset: 11648)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !2885, file: !2884, line: 180, baseType: !108, size: 64, offset: 11712)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "shr", scope: !2874, file: !2873, line: 53, baseType: !3386, size: 27136, offset: 189504)
!3386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3387, size: 27136, elements: !2879)
!3387 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeResult", file: !2884, line: 65, baseType: !3388)
!3388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeResult", file: !2884, line: 48, size: 1696, elements: !3389)
!3389 = !{!3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "combined", scope: !3388, file: !2884, line: 49, baseType: !299, size: 128)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3388, file: !2884, line: 50, baseType: !299, size: 128, offset: 128)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !3388, file: !2884, line: 51, baseType: !57, size: 32, offset: 256)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "mist", scope: !3388, file: !2884, line: 51, baseType: !57, size: 32, offset: 288)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !3388, file: !2884, line: 51, baseType: !57, size: 32, offset: 320)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !3388, file: !2884, line: 52, baseType: !217, size: 96, offset: 352)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "diff", scope: !3388, file: !2884, line: 53, baseType: !217, size: 96, offset: 448)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "diffshad", scope: !3388, file: !2884, line: 54, baseType: !217, size: 96, offset: 544)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !3388, file: !2884, line: 55, baseType: !217, size: 96, offset: 640)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "shad", scope: !3388, file: !2884, line: 56, baseType: !299, size: 128, offset: 736)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !3388, file: !2884, line: 57, baseType: !217, size: 96, offset: 864)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3388, file: !2884, line: 58, baseType: !217, size: 96, offset: 960)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !3388, file: !2884, line: 59, baseType: !217, size: 96, offset: 1056)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !3388, file: !2884, line: 60, baseType: !217, size: 96, offset: 1152)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "refr", scope: !3388, file: !2884, line: 61, baseType: !217, size: 96, offset: 1248)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !3388, file: !2884, line: 62, baseType: !217, size: 96, offset: 1344)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !3388, file: !2884, line: 63, baseType: !299, size: 128, offset: 1440)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "rayhits", scope: !3388, file: !2884, line: 64, baseType: !299, size: 128, offset: 1568)
!3408 = !DILocation(line: 813, column: 14, scope: !2860)
!3409 = !DILocalVariable(name: "rd", scope: !2860, file: !1, line: 814, type: !2100)
!3410 = !DILocation(line: 814, column: 12, scope: !2860)
!3411 = !DILocalVariable(name: "rectdaps", scope: !2860, file: !1, line: 814, type: !2100)
!3412 = !DILocation(line: 814, column: 17, scope: !2860)
!3413 = !DILocation(line: 814, column: 27, scope: !2860)
!3414 = !DILocation(line: 814, column: 31, scope: !2860)
!3415 = !DILocalVariable(name: "samp", scope: !2860, file: !1, line: 815, type: !5)
!3416 = !DILocation(line: 815, column: 6, scope: !2860)
!3417 = !DILocalVariable(name: "x", scope: !2860, file: !1, line: 816, type: !5)
!3418 = !DILocation(line: 816, column: 6, scope: !2860)
!3419 = !DILocalVariable(name: "y", scope: !2860, file: !1, line: 816, type: !5)
!3420 = !DILocation(line: 816, column: 9, scope: !2860)
!3421 = !DILocalVariable(name: "seed", scope: !2860, file: !1, line: 816, type: !5)
!3422 = !DILocation(line: 816, column: 12, scope: !2860)
!3423 = !DILocalVariable(name: "crop", scope: !2860, file: !1, line: 816, type: !5)
!3424 = !DILocation(line: 816, column: 18, scope: !2860)
!3425 = !DILocalVariable(name: "offs", scope: !2860, file: !1, line: 816, type: !5)
!3426 = !DILocation(line: 816, column: 26, scope: !2860)
!3427 = !DILocalVariable(name: "od", scope: !2860, file: !1, line: 816, type: !5)
!3428 = !DILocation(line: 816, column: 34, scope: !2860)
!3429 = !DILocation(line: 818, column: 8, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !2860, file: !1, line: 818, column: 6)
!3431 = !DILocation(line: 818, column: 21, scope: !3430)
!3432 = !DILocation(line: 818, column: 6, scope: !3430)
!3433 = !DILocation(line: 818, column: 6, scope: !2860)
!3434 = !DILocation(line: 818, column: 27, scope: !3430)
!3435 = !DILocation(line: 821, column: 10, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !2860, file: !1, line: 821, column: 6)
!3437 = !DILocation(line: 821, column: 15, scope: !3436)
!3438 = !DILocation(line: 821, column: 6, scope: !2860)
!3439 = !DILocation(line: 822, column: 14, scope: !3436)
!3440 = !DILocation(line: 822, column: 3, scope: !3436)
!3441 = !DILocation(line: 825, column: 8, scope: !2860)
!3442 = !DILocation(line: 825, column: 12, scope: !2860)
!3443 = !DILocation(line: 825, column: 18, scope: !2860)
!3444 = !DILocation(line: 825, column: 22, scope: !2860)
!3445 = !DILocation(line: 825, column: 31, scope: !2860)
!3446 = !DILocation(line: 825, column: 17, scope: !2860)
!3447 = !DILocation(line: 825, column: 6, scope: !2860)
!3448 = !DILocation(line: 828, column: 34, scope: !2860)
!3449 = !DILocation(line: 828, column: 38, scope: !2860)
!3450 = !DILocation(line: 828, column: 2, scope: !2860)
!3451 = !DILocation(line: 831, column: 8, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !2860, file: !1, line: 831, column: 6)
!3453 = !DILocation(line: 831, column: 6, scope: !3452)
!3454 = !DILocation(line: 831, column: 6, scope: !2860)
!3455 = !DILocation(line: 832, column: 25, scope: !3452)
!3456 = !DILocation(line: 832, column: 3, scope: !3452)
!3457 = !DILocation(line: 835, column: 6, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !2860, file: !1, line: 835, column: 6)
!3459 = !DILocation(line: 835, column: 10, scope: !3458)
!3460 = !DILocation(line: 835, column: 6, scope: !2860)
!3461 = !DILocation(line: 836, column: 7, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3458, file: !1, line: 835, column: 16)
!3463 = !DILocation(line: 837, column: 14, scope: !3462)
!3464 = !DILocation(line: 837, column: 18, scope: !3462)
!3465 = !DILocation(line: 837, column: 24, scope: !3462)
!3466 = !DILocation(line: 837, column: 11, scope: !3462)
!3467 = !DILocation(line: 838, column: 9, scope: !3462)
!3468 = !DILocation(line: 838, column: 13, scope: !3462)
!3469 = !DILocation(line: 838, column: 19, scope: !3462)
!3470 = !DILocation(line: 838, column: 7, scope: !3462)
!3471 = !DILocation(line: 839, column: 2, scope: !3462)
!3472 = !DILocation(line: 842, column: 2, scope: !2860)
!3473 = !DILocation(line: 842, column: 6, scope: !2860)
!3474 = !DILocation(line: 842, column: 14, scope: !2860)
!3475 = !DILocation(line: 842, column: 19, scope: !2860)
!3476 = !DILocation(line: 843, column: 24, scope: !2860)
!3477 = !DILocation(line: 843, column: 23, scope: !2860)
!3478 = !DILocation(line: 843, column: 2, scope: !2860)
!3479 = !DILocation(line: 843, column: 6, scope: !2860)
!3480 = !DILocation(line: 843, column: 14, scope: !2860)
!3481 = !DILocation(line: 843, column: 19, scope: !2860)
!3482 = !DILocation(line: 844, column: 14, scope: !2860)
!3483 = !DILocation(line: 844, column: 2, scope: !2860)
!3484 = !DILocation(line: 844, column: 6, scope: !2860)
!3485 = !DILocation(line: 844, column: 12, scope: !2860)
!3486 = !DILocation(line: 846, column: 9, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !2860, file: !1, line: 846, column: 2)
!3488 = !DILocation(line: 846, column: 13, scope: !3487)
!3489 = !DILocation(line: 846, column: 22, scope: !3487)
!3490 = !DILocation(line: 846, column: 27, scope: !3487)
!3491 = !DILocation(line: 846, column: 26, scope: !3487)
!3492 = !DILocation(line: 846, column: 8, scope: !3487)
!3493 = !DILocation(line: 846, column: 7, scope: !3487)
!3494 = !DILocation(line: 846, column: 33, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3487, file: !1, line: 846, column: 2)
!3496 = !DILocation(line: 846, column: 35, scope: !3495)
!3497 = !DILocation(line: 846, column: 39, scope: !3495)
!3498 = !DILocation(line: 846, column: 48, scope: !3495)
!3499 = !DILocation(line: 846, column: 53, scope: !3495)
!3500 = !DILocation(line: 846, column: 52, scope: !3495)
!3501 = !DILocation(line: 846, column: 34, scope: !3495)
!3502 = !DILocation(line: 846, column: 2, scope: !3487)
!3503 = !DILocation(line: 847, column: 7, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3495, file: !1, line: 846, column: 84)
!3505 = !DILocation(line: 847, column: 5, scope: !3504)
!3506 = !DILocation(line: 848, column: 7, scope: !3504)
!3507 = !DILocation(line: 848, column: 5, scope: !3504)
!3508 = !DILocation(line: 850, column: 10, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3504, file: !1, line: 850, column: 3)
!3510 = !DILocation(line: 850, column: 14, scope: !3509)
!3511 = !DILocation(line: 850, column: 23, scope: !3509)
!3512 = !DILocation(line: 850, column: 28, scope: !3509)
!3513 = !DILocation(line: 850, column: 27, scope: !3509)
!3514 = !DILocation(line: 850, column: 9, scope: !3509)
!3515 = !DILocation(line: 850, column: 8, scope: !3509)
!3516 = !DILocation(line: 850, column: 34, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3509, file: !1, line: 850, column: 3)
!3518 = !DILocation(line: 850, column: 36, scope: !3517)
!3519 = !DILocation(line: 850, column: 40, scope: !3517)
!3520 = !DILocation(line: 850, column: 49, scope: !3517)
!3521 = !DILocation(line: 850, column: 54, scope: !3517)
!3522 = !DILocation(line: 850, column: 53, scope: !3517)
!3523 = !DILocation(line: 850, column: 35, scope: !3517)
!3524 = !DILocation(line: 850, column: 3, scope: !3509)
!3525 = !DILocation(line: 851, column: 23, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3517, file: !1, line: 850, column: 77)
!3527 = !DILocation(line: 851, column: 27, scope: !3526)
!3528 = !DILocation(line: 851, column: 39, scope: !3526)
!3529 = !DILocation(line: 851, column: 4, scope: !3526)
!3530 = !DILocation(line: 853, column: 9, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3526, file: !1, line: 853, column: 8)
!3532 = !DILocation(line: 853, column: 8, scope: !3531)
!3533 = !DILocation(line: 853, column: 8, scope: !3526)
!3534 = !DILocation(line: 854, column: 43, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !1, line: 854, column: 9)
!3536 = distinct !DILexicalBlock(scope: !3531, file: !1, line: 853, column: 13)
!3537 = !DILocation(line: 854, column: 42, scope: !3535)
!3538 = !DILocation(line: 854, column: 31, scope: !3535)
!3539 = !DILocation(line: 854, column: 48, scope: !3535)
!3540 = !DILocation(line: 854, column: 51, scope: !3535)
!3541 = !DILocation(line: 854, column: 9, scope: !3535)
!3542 = !DILocation(line: 854, column: 9, scope: !3536)
!3543 = !DILocation(line: 857, column: 10, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !1, line: 857, column: 10)
!3545 = distinct !DILexicalBlock(scope: !3535, file: !1, line: 854, column: 55)
!3546 = !DILocation(line: 857, column: 14, scope: !3544)
!3547 = !DILocation(line: 857, column: 25, scope: !3544)
!3548 = !DILocation(line: 857, column: 10, scope: !3545)
!3549 = !DILocalVariable(name: "a", scope: !3550, file: !1, line: 858, type: !5)
!3550 = distinct !DILexicalBlock(scope: !3544, file: !1, line: 857, column: 32)
!3551 = !DILocation(line: 858, column: 11, scope: !3550)
!3552 = !DILocation(line: 859, column: 16, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3550, file: !1, line: 859, column: 7)
!3554 = !DILocation(line: 859, column: 12, scope: !3553)
!3555 = !DILocation(line: 859, column: 20, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3553, file: !1, line: 859, column: 7)
!3557 = !DILocation(line: 859, column: 31, scope: !3556)
!3558 = !DILocation(line: 859, column: 24, scope: !3556)
!3559 = !DILocation(line: 859, column: 7, scope: !3553)
!3560 = !DILocalVariable(name: "smask", scope: !3561, file: !1, line: 860, type: !5)
!3561 = distinct !DILexicalBlock(scope: !3556, file: !1, line: 859, column: 44)
!3562 = !DILocation(line: 860, column: 12, scope: !3561)
!3563 = !DILocation(line: 860, column: 25, scope: !3561)
!3564 = !DILocation(line: 860, column: 29, scope: !3561)
!3565 = !DILocation(line: 860, column: 19, scope: !3561)
!3566 = !DILocation(line: 860, column: 35, scope: !3561)
!3567 = !DILocation(line: 861, column: 14, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 861, column: 8)
!3569 = !DILocation(line: 861, column: 13, scope: !3568)
!3570 = !DILocation(line: 861, column: 18, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3568, file: !1, line: 861, column: 8)
!3572 = !DILocation(line: 861, column: 22, scope: !3571)
!3573 = !DILocation(line: 861, column: 20, scope: !3571)
!3574 = !DILocation(line: 861, column: 19, scope: !3571)
!3575 = !DILocation(line: 861, column: 8, scope: !3568)
!3576 = !DILocalVariable(name: "mask", scope: !3577, file: !1, line: 862, type: !5)
!3577 = distinct !DILexicalBlock(scope: !3571, file: !1, line: 861, column: 32)
!3578 = !DILocation(line: 862, column: 13, scope: !3577)
!3579 = !DILocation(line: 862, column: 22, scope: !3577)
!3580 = !DILocation(line: 862, column: 20, scope: !3577)
!3581 = !DILocation(line: 863, column: 13, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3577, file: !1, line: 863, column: 13)
!3583 = !DILocation(line: 863, column: 21, scope: !3582)
!3584 = !DILocation(line: 863, column: 19, scope: !3582)
!3585 = !DILocation(line: 863, column: 13, scope: !3577)
!3586 = !DILocation(line: 864, column: 27, scope: !3582)
!3587 = !DILocation(line: 864, column: 32, scope: !3582)
!3588 = !DILocation(line: 864, column: 21, scope: !3582)
!3589 = !DILocation(line: 864, column: 36, scope: !3582)
!3590 = !DILocation(line: 864, column: 47, scope: !3582)
!3591 = !DILocation(line: 864, column: 51, scope: !3582)
!3592 = !DILocation(line: 864, column: 41, scope: !3582)
!3593 = !DILocation(line: 864, column: 65, scope: !3582)
!3594 = !DILocation(line: 864, column: 69, scope: !3582)
!3595 = !DILocation(line: 864, column: 59, scope: !3582)
!3596 = !DILocation(line: 864, column: 10, scope: !3582)
!3597 = !DILocation(line: 865, column: 8, scope: !3577)
!3598 = !DILocation(line: 861, column: 28, scope: !3571)
!3599 = !DILocation(line: 861, column: 8, scope: !3571)
!3600 = distinct !{!3600, !3575, !3601}
!3601 = !DILocation(line: 865, column: 8, scope: !3568)
!3602 = !DILocation(line: 866, column: 7, scope: !3561)
!3603 = !DILocation(line: 859, column: 40, scope: !3556)
!3604 = !DILocation(line: 859, column: 7, scope: !3556)
!3605 = distinct !{!3605, !3559, !3606}
!3606 = !DILocation(line: 866, column: 7, scope: !3553)
!3607 = !DILocation(line: 867, column: 6, scope: !3550)
!3608 = !DILocation(line: 869, column: 16, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !1, line: 869, column: 7)
!3610 = distinct !DILexicalBlock(scope: !3544, file: !1, line: 868, column: 11)
!3611 = !DILocation(line: 869, column: 12, scope: !3609)
!3612 = !DILocation(line: 869, column: 20, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3609, file: !1, line: 869, column: 7)
!3614 = !DILocation(line: 869, column: 31, scope: !3613)
!3615 = !DILocation(line: 869, column: 24, scope: !3613)
!3616 = !DILocation(line: 869, column: 7, scope: !3609)
!3617 = !DILocation(line: 870, column: 24, scope: !3613)
!3618 = !DILocation(line: 870, column: 34, scope: !3613)
!3619 = !DILocation(line: 870, column: 38, scope: !3613)
!3620 = !DILocation(line: 870, column: 28, scope: !3613)
!3621 = !DILocation(line: 870, column: 44, scope: !3613)
!3622 = !DILocation(line: 870, column: 50, scope: !3613)
!3623 = !DILocation(line: 870, column: 54, scope: !3613)
!3624 = !DILocation(line: 870, column: 61, scope: !3613)
!3625 = !DILocation(line: 870, column: 72, scope: !3613)
!3626 = !DILocation(line: 870, column: 76, scope: !3613)
!3627 = !DILocation(line: 870, column: 66, scope: !3613)
!3628 = !DILocation(line: 870, column: 90, scope: !3613)
!3629 = !DILocation(line: 870, column: 94, scope: !3613)
!3630 = !DILocation(line: 870, column: 84, scope: !3613)
!3631 = !DILocation(line: 870, column: 8, scope: !3613)
!3632 = !DILocation(line: 869, column: 40, scope: !3613)
!3633 = !DILocation(line: 869, column: 7, scope: !3613)
!3634 = distinct !{!3634, !3616, !3635}
!3635 = !DILocation(line: 870, column: 99, scope: !3609)
!3636 = !DILocation(line: 872, column: 5, scope: !3545)
!3637 = !DILocation(line: 873, column: 4, scope: !3536)
!3638 = !DILocation(line: 874, column: 3, scope: !3526)
!3639 = !DILocation(line: 850, column: 61, scope: !3517)
!3640 = !DILocation(line: 850, column: 67, scope: !3517)
!3641 = !DILocation(line: 850, column: 73, scope: !3517)
!3642 = !DILocation(line: 850, column: 3, scope: !3517)
!3643 = distinct !{!3643, !3524, !3644}
!3644 = !DILocation(line: 874, column: 3, scope: !3509)
!3645 = !DILocation(line: 876, column: 14, scope: !3504)
!3646 = !DILocation(line: 876, column: 18, scope: !3504)
!3647 = !DILocation(line: 876, column: 11, scope: !3504)
!3648 = !DILocation(line: 877, column: 10, scope: !3504)
!3649 = !DILocation(line: 877, column: 14, scope: !3504)
!3650 = !DILocation(line: 877, column: 7, scope: !3504)
!3651 = !DILocation(line: 879, column: 7, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3504, file: !1, line: 879, column: 7)
!3653 = !DILocation(line: 879, column: 8, scope: !3652)
!3654 = !DILocation(line: 879, column: 7, scope: !3504)
!3655 = !DILocation(line: 879, column: 18, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3652, file: !1, line: 879, column: 16)
!3657 = !DILocation(line: 879, column: 31, scope: !3656)
!3658 = !DILocation(line: 879, column: 16, scope: !3656)
!3659 = !DILocation(line: 879, column: 16, scope: !3652)
!3660 = !DILocation(line: 879, column: 37, scope: !3656)
!3661 = !DILocation(line: 879, column: 34, scope: !3656)
!3662 = !DILocation(line: 880, column: 2, scope: !3504)
!3663 = !DILocation(line: 846, column: 60, scope: !3495)
!3664 = !DILocation(line: 846, column: 64, scope: !3495)
!3665 = !DILocation(line: 846, column: 68, scope: !3495)
!3666 = !DILocation(line: 846, column: 76, scope: !3495)
!3667 = !DILocation(line: 846, column: 80, scope: !3495)
!3668 = !DILocation(line: 846, column: 2, scope: !3495)
!3669 = distinct !{!3669, !3502, !3670}
!3670 = !DILocation(line: 880, column: 2, scope: !3487)
!3671 = !DILocation(line: 883, column: 2, scope: !2860)
!3672 = !DILocation(line: 883, column: 6, scope: !2860)
!3673 = !DILocation(line: 883, column: 12, scope: !2860)
!3674 = !DILocation(line: 885, column: 10, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !2860, file: !1, line: 885, column: 6)
!3676 = !DILocation(line: 885, column: 15, scope: !3675)
!3677 = !DILocation(line: 885, column: 6, scope: !2860)
!3678 = !DILocation(line: 886, column: 12, scope: !3675)
!3679 = !DILocation(line: 886, column: 3, scope: !3675)
!3680 = !DILocation(line: 888, column: 8, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !2860, file: !1, line: 888, column: 6)
!3682 = !DILocation(line: 888, column: 6, scope: !3681)
!3683 = !DILocation(line: 888, column: 6, scope: !2860)
!3684 = !DILocation(line: 889, column: 24, scope: !3681)
!3685 = !DILocation(line: 889, column: 3, scope: !3681)
!3686 = !DILocation(line: 890, column: 1, scope: !2860)
!3687 = distinct !DISubprogram(name: "lamphalo_tile", scope: !1, file: !1, line: 333, type: !2861, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!3688 = !DILocalVariable(name: "pa", arg: 1, scope: !3687, file: !1, line: 333, type: !2083)
!3689 = !DILocation(line: 333, column: 39, scope: !3687)
!3690 = !DILocalVariable(name: "rl", arg: 2, scope: !3687, file: !1, line: 333, type: !88)
!3691 = !DILocation(line: 333, column: 56, scope: !3687)
!3692 = !DILocalVariable(name: "rlpp", scope: !3687, file: !1, line: 335, type: !2878)
!3693 = !DILocation(line: 335, column: 15, scope: !3687)
!3694 = !DILocalVariable(name: "shi", scope: !3687, file: !1, line: 336, type: !2883)
!3695 = !DILocation(line: 336, column: 13, scope: !3687)
!3696 = !DILocalVariable(name: "pass", scope: !3687, file: !1, line: 337, type: !692)
!3697 = !DILocation(line: 337, column: 9, scope: !3687)
!3698 = !DILocalVariable(name: "fac", scope: !3687, file: !1, line: 338, type: !57)
!3699 = !DILocation(line: 338, column: 8, scope: !3687)
!3700 = !DILocalVariable(name: "col", scope: !3687, file: !1, line: 338, type: !299)
!3701 = !DILocation(line: 338, column: 13, scope: !3687)
!3702 = !DILocalVariable(name: "rd", scope: !3687, file: !1, line: 339, type: !2100)
!3703 = !DILocation(line: 339, column: 12, scope: !3687)
!3704 = !DILocation(line: 339, column: 16, scope: !3687)
!3705 = !DILocation(line: 339, column: 20, scope: !3687)
!3706 = !DILocalVariable(name: "rz", scope: !3687, file: !1, line: 340, type: !2761)
!3707 = !DILocation(line: 340, column: 13, scope: !3687)
!3708 = !DILocation(line: 340, column: 17, scope: !3687)
!3709 = !DILocation(line: 340, column: 21, scope: !3687)
!3710 = !DILocalVariable(name: "x", scope: !3687, file: !1, line: 341, type: !5)
!3711 = !DILocation(line: 341, column: 6, scope: !3687)
!3712 = !DILocalVariable(name: "y", scope: !3687, file: !1, line: 341, type: !5)
!3713 = !DILocation(line: 341, column: 9, scope: !3687)
!3714 = !DILocalVariable(name: "sample", scope: !3687, file: !1, line: 341, type: !5)
!3715 = !DILocation(line: 341, column: 12, scope: !3687)
!3716 = !DILocalVariable(name: "totsample", scope: !3687, file: !1, line: 341, type: !5)
!3717 = !DILocation(line: 341, column: 20, scope: !3687)
!3718 = !DILocalVariable(name: "fullsample", scope: !3687, file: !1, line: 341, type: !5)
!3719 = !DILocation(line: 341, column: 31, scope: !3687)
!3720 = !DILocalVariable(name: "od", scope: !3687, file: !1, line: 341, type: !5)
!3721 = !DILocation(line: 341, column: 43, scope: !3687)
!3722 = !DILocation(line: 343, column: 31, scope: !3687)
!3723 = !DILocation(line: 343, column: 35, scope: !3687)
!3724 = !DILocation(line: 343, column: 39, scope: !3687)
!3725 = !DILocation(line: 343, column: 13, scope: !3687)
!3726 = !DILocation(line: 343, column: 11, scope: !3687)
!3727 = !DILocation(line: 344, column: 15, scope: !3687)
!3728 = !DILocation(line: 344, column: 25, scope: !3687)
!3729 = !DILocation(line: 344, column: 12, scope: !3687)
!3730 = !DILocation(line: 346, column: 31, scope: !3687)
!3731 = !DILocation(line: 346, column: 35, scope: !3687)
!3732 = !DILocation(line: 346, column: 2, scope: !3687)
!3733 = !DILocation(line: 348, column: 9, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3687, file: !1, line: 348, column: 2)
!3735 = !DILocation(line: 348, column: 15, scope: !3734)
!3736 = !DILocation(line: 348, column: 19, scope: !3734)
!3737 = !DILocation(line: 348, column: 28, scope: !3734)
!3738 = !DILocation(line: 348, column: 14, scope: !3734)
!3739 = !DILocation(line: 348, column: 7, scope: !3734)
!3740 = !DILocation(line: 348, column: 34, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3734, file: !1, line: 348, column: 2)
!3742 = !DILocation(line: 348, column: 36, scope: !3741)
!3743 = !DILocation(line: 348, column: 40, scope: !3741)
!3744 = !DILocation(line: 348, column: 49, scope: !3741)
!3745 = !DILocation(line: 348, column: 35, scope: !3741)
!3746 = !DILocation(line: 348, column: 2, scope: !3734)
!3747 = !DILocation(line: 349, column: 10, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !1, line: 349, column: 3)
!3749 = distinct !DILexicalBlock(scope: !3741, file: !1, line: 348, column: 60)
!3750 = !DILocation(line: 349, column: 14, scope: !3748)
!3751 = !DILocation(line: 349, column: 23, scope: !3748)
!3752 = !DILocation(line: 349, column: 9, scope: !3748)
!3753 = !DILocation(line: 349, column: 8, scope: !3748)
!3754 = !DILocation(line: 349, column: 29, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3748, file: !1, line: 349, column: 3)
!3756 = !DILocation(line: 349, column: 31, scope: !3755)
!3757 = !DILocation(line: 349, column: 35, scope: !3755)
!3758 = !DILocation(line: 349, column: 44, scope: !3755)
!3759 = !DILocation(line: 349, column: 30, scope: !3755)
!3760 = !DILocation(line: 349, column: 3, scope: !3748)
!3761 = !DILocation(line: 351, column: 25, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 349, column: 67)
!3763 = !DILocation(line: 351, column: 21, scope: !3762)
!3764 = !DILocation(line: 351, column: 31, scope: !3762)
!3765 = !DILocation(line: 351, column: 34, scope: !3762)
!3766 = !DILocation(line: 351, column: 4, scope: !3762)
!3767 = !DILocation(line: 353, column: 8, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 353, column: 8)
!3769 = !DILocation(line: 353, column: 11, scope: !3768)
!3770 = !DILocation(line: 353, column: 15, scope: !3768)
!3771 = !DILocation(line: 353, column: 14, scope: !3768)
!3772 = !DILocation(line: 353, column: 8, scope: !3762)
!3773 = !DILocalVariable(name: "ps", scope: !3774, file: !1, line: 354, type: !81)
!3774 = distinct !DILexicalBlock(scope: !3768, file: !1, line: 353, column: 19)
!3775 = !DILocation(line: 354, column: 13, scope: !3774)
!3776 = !DILocation(line: 354, column: 28, scope: !3774)
!3777 = !DILocation(line: 354, column: 27, scope: !3774)
!3778 = !DILocation(line: 354, column: 17, scope: !3774)
!3779 = !DILocalVariable(name: "count", scope: !3774, file: !1, line: 355, type: !5)
!3780 = !DILocation(line: 355, column: 9, scope: !3774)
!3781 = !DILocalVariable(name: "totsamp", scope: !3774, file: !1, line: 355, type: !5)
!3782 = !DILocation(line: 355, column: 16, scope: !3774)
!3783 = !DILocalVariable(name: "mask", scope: !3774, file: !1, line: 355, type: !5)
!3784 = !DILocation(line: 355, column: 28, scope: !3774)
!3785 = !DILocation(line: 357, column: 5, scope: !3774)
!3786 = !DILocation(line: 357, column: 12, scope: !3774)
!3787 = !DILocation(line: 358, column: 14, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !1, line: 358, column: 10)
!3789 = distinct !DILexicalBlock(scope: !3774, file: !1, line: 357, column: 16)
!3790 = !DILocation(line: 358, column: 19, scope: !3788)
!3791 = !DILocation(line: 358, column: 10, scope: !3789)
!3792 = !DILocation(line: 359, column: 31, scope: !3788)
!3793 = !DILocation(line: 359, column: 27, scope: !3788)
!3794 = !DILocation(line: 359, column: 42, scope: !3788)
!3795 = !DILocation(line: 359, column: 35, scope: !3788)
!3796 = !DILocation(line: 359, column: 52, scope: !3788)
!3797 = !DILocation(line: 359, column: 45, scope: !3788)
!3798 = !DILocation(line: 359, column: 55, scope: !3788)
!3799 = !DILocation(line: 359, column: 59, scope: !3788)
!3800 = !DILocation(line: 359, column: 7, scope: !3788)
!3801 = !DILocation(line: 361, column: 30, scope: !3788)
!3802 = !DILocation(line: 361, column: 26, scope: !3788)
!3803 = !DILocation(line: 361, column: 38, scope: !3788)
!3804 = !DILocation(line: 361, column: 34, scope: !3788)
!3805 = !DILocation(line: 361, column: 44, scope: !3788)
!3806 = !DILocation(line: 361, column: 48, scope: !3788)
!3807 = !DILocation(line: 361, column: 7, scope: !3788)
!3808 = !DILocation(line: 363, column: 34, scope: !3789)
!3809 = !DILocation(line: 363, column: 38, scope: !3789)
!3810 = !DILocation(line: 363, column: 23, scope: !3789)
!3811 = !DILocation(line: 363, column: 21, scope: !3789)
!3812 = !DILocation(line: 363, column: 13, scope: !3789)
!3813 = !DILocation(line: 364, column: 14, scope: !3789)
!3814 = !DILocation(line: 364, column: 18, scope: !3789)
!3815 = !DILocation(line: 364, column: 11, scope: !3789)
!3816 = !DILocation(line: 366, column: 30, scope: !3789)
!3817 = !DILocation(line: 366, column: 36, scope: !3789)
!3818 = !DILocation(line: 366, column: 22, scope: !3789)
!3819 = !DILocation(line: 366, column: 28, scope: !3789)
!3820 = !DILocation(line: 366, column: 14, scope: !3789)
!3821 = !DILocation(line: 366, column: 20, scope: !3789)
!3822 = !DILocation(line: 366, column: 6, scope: !3789)
!3823 = !DILocation(line: 366, column: 12, scope: !3789)
!3824 = !DILocation(line: 367, column: 27, scope: !3789)
!3825 = !DILocation(line: 367, column: 6, scope: !3789)
!3826 = !DILocation(line: 369, column: 10, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3789, file: !1, line: 369, column: 10)
!3828 = !DILocation(line: 369, column: 10, scope: !3789)
!3829 = !DILocation(line: 370, column: 18, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 370, column: 7)
!3831 = distinct !DILexicalBlock(scope: !3827, file: !1, line: 369, column: 22)
!3832 = !DILocation(line: 370, column: 12, scope: !3830)
!3833 = !DILocation(line: 370, column: 22, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3830, file: !1, line: 370, column: 7)
!3835 = !DILocation(line: 370, column: 29, scope: !3834)
!3836 = !DILocation(line: 370, column: 28, scope: !3834)
!3837 = !DILocation(line: 370, column: 7, scope: !3830)
!3838 = !DILocation(line: 371, column: 12, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !1, line: 371, column: 12)
!3840 = distinct !DILexicalBlock(scope: !3834, file: !1, line: 370, column: 50)
!3841 = !DILocation(line: 371, column: 16, scope: !3839)
!3842 = !DILocation(line: 371, column: 29, scope: !3839)
!3843 = !DILocation(line: 371, column: 26, scope: !3839)
!3844 = !DILocation(line: 371, column: 21, scope: !3839)
!3845 = !DILocation(line: 371, column: 12, scope: !3840)
!3846 = !DILocation(line: 372, column: 20, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3839, file: !1, line: 371, column: 38)
!3848 = !DILocation(line: 372, column: 15, scope: !3847)
!3849 = !DILocation(line: 372, column: 29, scope: !3847)
!3850 = !DILocation(line: 372, column: 37, scope: !3847)
!3851 = !DILocation(line: 372, column: 39, scope: !3847)
!3852 = !DILocation(line: 372, column: 35, scope: !3847)
!3853 = !DILocation(line: 372, column: 13, scope: !3847)
!3854 = !DILocation(line: 373, column: 19, scope: !3847)
!3855 = !DILocation(line: 373, column: 9, scope: !3847)
!3856 = !DILocation(line: 373, column: 16, scope: !3847)
!3857 = !DILocation(line: 374, column: 19, scope: !3847)
!3858 = !DILocation(line: 374, column: 9, scope: !3847)
!3859 = !DILocation(line: 374, column: 16, scope: !3847)
!3860 = !DILocation(line: 375, column: 19, scope: !3847)
!3861 = !DILocation(line: 375, column: 9, scope: !3847)
!3862 = !DILocation(line: 375, column: 16, scope: !3847)
!3863 = !DILocation(line: 376, column: 19, scope: !3847)
!3864 = !DILocation(line: 376, column: 9, scope: !3847)
!3865 = !DILocation(line: 376, column: 16, scope: !3847)
!3866 = !DILocation(line: 377, column: 13, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3847, file: !1, line: 377, column: 13)
!3868 = !DILocation(line: 377, column: 20, scope: !3867)
!3869 = !DILocation(line: 377, column: 13, scope: !3847)
!3870 = !DILocation(line: 377, column: 27, scope: !3867)
!3871 = !DILocation(line: 377, column: 34, scope: !3867)
!3872 = !DILocation(line: 378, column: 8, scope: !3847)
!3873 = !DILocation(line: 379, column: 7, scope: !3840)
!3874 = !DILocation(line: 370, column: 46, scope: !3834)
!3875 = !DILocation(line: 370, column: 7, scope: !3834)
!3876 = distinct !{!3876, !3837, !3877}
!3877 = !DILocation(line: 379, column: 7, scope: !3830)
!3878 = !DILocation(line: 380, column: 6, scope: !3831)
!3879 = !DILocation(line: 382, column: 20, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3827, file: !1, line: 381, column: 11)
!3881 = !DILocation(line: 382, column: 13, scope: !3880)
!3882 = !DILocation(line: 382, column: 36, scope: !3880)
!3883 = !DILocation(line: 382, column: 27, scope: !3880)
!3884 = !DILocation(line: 382, column: 26, scope: !3880)
!3885 = !DILocation(line: 382, column: 10, scope: !3880)
!3886 = !DILocation(line: 383, column: 13, scope: !3880)
!3887 = !DILocation(line: 383, column: 17, scope: !3880)
!3888 = !DILocation(line: 383, column: 25, scope: !3880)
!3889 = !DILocation(line: 383, column: 27, scope: !3880)
!3890 = !DILocation(line: 383, column: 23, scope: !3880)
!3891 = !DILocation(line: 383, column: 11, scope: !3880)
!3892 = !DILocation(line: 384, column: 17, scope: !3880)
!3893 = !DILocation(line: 384, column: 21, scope: !3880)
!3894 = !DILocation(line: 384, column: 20, scope: !3880)
!3895 = !DILocation(line: 384, column: 7, scope: !3880)
!3896 = !DILocation(line: 384, column: 14, scope: !3880)
!3897 = !DILocation(line: 385, column: 17, scope: !3880)
!3898 = !DILocation(line: 385, column: 21, scope: !3880)
!3899 = !DILocation(line: 385, column: 20, scope: !3880)
!3900 = !DILocation(line: 385, column: 7, scope: !3880)
!3901 = !DILocation(line: 385, column: 14, scope: !3880)
!3902 = !DILocation(line: 386, column: 17, scope: !3880)
!3903 = !DILocation(line: 386, column: 21, scope: !3880)
!3904 = !DILocation(line: 386, column: 20, scope: !3880)
!3905 = !DILocation(line: 386, column: 7, scope: !3880)
!3906 = !DILocation(line: 386, column: 14, scope: !3880)
!3907 = !DILocation(line: 387, column: 17, scope: !3880)
!3908 = !DILocation(line: 387, column: 21, scope: !3880)
!3909 = !DILocation(line: 387, column: 20, scope: !3880)
!3910 = !DILocation(line: 387, column: 7, scope: !3880)
!3911 = !DILocation(line: 387, column: 14, scope: !3880)
!3912 = !DILocation(line: 388, column: 11, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 388, column: 11)
!3914 = !DILocation(line: 388, column: 18, scope: !3913)
!3915 = !DILocation(line: 388, column: 11, scope: !3880)
!3916 = !DILocation(line: 388, column: 25, scope: !3913)
!3917 = !DILocation(line: 388, column: 32, scope: !3913)
!3918 = !DILocation(line: 391, column: 10, scope: !3789)
!3919 = !DILocation(line: 391, column: 14, scope: !3789)
!3920 = !DILocation(line: 391, column: 8, scope: !3789)
!3921 = distinct !{!3921, !3785, !3922}
!3922 = !DILocation(line: 392, column: 5, scope: !3774)
!3923 = !DILocation(line: 394, column: 9, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3774, file: !1, line: 394, column: 9)
!3925 = !DILocation(line: 394, column: 19, scope: !3924)
!3926 = !DILocation(line: 394, column: 17, scope: !3924)
!3927 = !DILocation(line: 394, column: 16, scope: !3924)
!3928 = !DILocation(line: 394, column: 9, scope: !3774)
!3929 = !DILocation(line: 395, column: 10, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3924, file: !1, line: 394, column: 24)
!3931 = !DILocation(line: 395, column: 6, scope: !3930)
!3932 = !DILocation(line: 395, column: 15, scope: !3930)
!3933 = !DILocation(line: 397, column: 30, scope: !3930)
!3934 = !DILocation(line: 397, column: 36, scope: !3930)
!3935 = !DILocation(line: 397, column: 22, scope: !3930)
!3936 = !DILocation(line: 397, column: 28, scope: !3930)
!3937 = !DILocation(line: 397, column: 14, scope: !3930)
!3938 = !DILocation(line: 397, column: 20, scope: !3930)
!3939 = !DILocation(line: 397, column: 6, scope: !3930)
!3940 = !DILocation(line: 397, column: 12, scope: !3930)
!3941 = !DILocation(line: 398, column: 27, scope: !3930)
!3942 = !DILocation(line: 398, column: 6, scope: !3930)
!3943 = !DILocation(line: 400, column: 10, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3930, file: !1, line: 400, column: 10)
!3945 = !DILocation(line: 400, column: 10, scope: !3930)
!3946 = !DILocation(line: 401, column: 18, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !1, line: 401, column: 7)
!3948 = distinct !DILexicalBlock(scope: !3944, file: !1, line: 400, column: 22)
!3949 = !DILocation(line: 401, column: 12, scope: !3947)
!3950 = !DILocation(line: 401, column: 22, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3947, file: !1, line: 401, column: 7)
!3952 = !DILocation(line: 401, column: 29, scope: !3951)
!3953 = !DILocation(line: 401, column: 28, scope: !3951)
!3954 = !DILocation(line: 401, column: 7, scope: !3947)
!3955 = !DILocation(line: 402, column: 14, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !1, line: 402, column: 12)
!3957 = distinct !DILexicalBlock(scope: !3951, file: !1, line: 401, column: 50)
!3958 = !DILocation(line: 402, column: 27, scope: !3956)
!3959 = !DILocation(line: 402, column: 24, scope: !3956)
!3960 = !DILocation(line: 402, column: 19, scope: !3956)
!3961 = !DILocation(line: 402, column: 12, scope: !3957)
!3962 = !DILocation(line: 403, column: 20, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3956, file: !1, line: 402, column: 37)
!3964 = !DILocation(line: 403, column: 15, scope: !3963)
!3965 = !DILocation(line: 403, column: 29, scope: !3963)
!3966 = !DILocation(line: 403, column: 37, scope: !3963)
!3967 = !DILocation(line: 403, column: 39, scope: !3963)
!3968 = !DILocation(line: 403, column: 35, scope: !3963)
!3969 = !DILocation(line: 403, column: 13, scope: !3963)
!3970 = !DILocation(line: 404, column: 19, scope: !3963)
!3971 = !DILocation(line: 404, column: 9, scope: !3963)
!3972 = !DILocation(line: 404, column: 16, scope: !3963)
!3973 = !DILocation(line: 405, column: 19, scope: !3963)
!3974 = !DILocation(line: 405, column: 9, scope: !3963)
!3975 = !DILocation(line: 405, column: 16, scope: !3963)
!3976 = !DILocation(line: 406, column: 19, scope: !3963)
!3977 = !DILocation(line: 406, column: 9, scope: !3963)
!3978 = !DILocation(line: 406, column: 16, scope: !3963)
!3979 = !DILocation(line: 407, column: 19, scope: !3963)
!3980 = !DILocation(line: 407, column: 9, scope: !3963)
!3981 = !DILocation(line: 407, column: 16, scope: !3963)
!3982 = !DILocation(line: 408, column: 13, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3963, file: !1, line: 408, column: 13)
!3984 = !DILocation(line: 408, column: 20, scope: !3983)
!3985 = !DILocation(line: 408, column: 13, scope: !3963)
!3986 = !DILocation(line: 408, column: 27, scope: !3983)
!3987 = !DILocation(line: 408, column: 34, scope: !3983)
!3988 = !DILocation(line: 409, column: 8, scope: !3963)
!3989 = !DILocation(line: 410, column: 7, scope: !3957)
!3990 = !DILocation(line: 401, column: 46, scope: !3951)
!3991 = !DILocation(line: 401, column: 7, scope: !3951)
!3992 = distinct !{!3992, !3954, !3993}
!3993 = !DILocation(line: 410, column: 7, scope: !3947)
!3994 = !DILocation(line: 411, column: 6, scope: !3948)
!3995 = !DILocation(line: 413, column: 22, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3944, file: !1, line: 412, column: 11)
!3997 = !DILocation(line: 413, column: 13, scope: !3996)
!3998 = !DILocation(line: 413, column: 26, scope: !3996)
!3999 = !DILocation(line: 413, column: 25, scope: !3996)
!4000 = !DILocation(line: 413, column: 44, scope: !3996)
!4001 = !DILocation(line: 413, column: 35, scope: !3996)
!4002 = !DILocation(line: 413, column: 34, scope: !3996)
!4003 = !DILocation(line: 413, column: 10, scope: !3996)
!4004 = !DILocation(line: 414, column: 13, scope: !3996)
!4005 = !DILocation(line: 414, column: 17, scope: !3996)
!4006 = !DILocation(line: 414, column: 25, scope: !3996)
!4007 = !DILocation(line: 414, column: 27, scope: !3996)
!4008 = !DILocation(line: 414, column: 23, scope: !3996)
!4009 = !DILocation(line: 414, column: 11, scope: !3996)
!4010 = !DILocation(line: 415, column: 17, scope: !3996)
!4011 = !DILocation(line: 415, column: 21, scope: !3996)
!4012 = !DILocation(line: 415, column: 20, scope: !3996)
!4013 = !DILocation(line: 415, column: 7, scope: !3996)
!4014 = !DILocation(line: 415, column: 14, scope: !3996)
!4015 = !DILocation(line: 416, column: 17, scope: !3996)
!4016 = !DILocation(line: 416, column: 21, scope: !3996)
!4017 = !DILocation(line: 416, column: 20, scope: !3996)
!4018 = !DILocation(line: 416, column: 7, scope: !3996)
!4019 = !DILocation(line: 416, column: 14, scope: !3996)
!4020 = !DILocation(line: 417, column: 17, scope: !3996)
!4021 = !DILocation(line: 417, column: 21, scope: !3996)
!4022 = !DILocation(line: 417, column: 20, scope: !3996)
!4023 = !DILocation(line: 417, column: 7, scope: !3996)
!4024 = !DILocation(line: 417, column: 14, scope: !3996)
!4025 = !DILocation(line: 418, column: 17, scope: !3996)
!4026 = !DILocation(line: 418, column: 21, scope: !3996)
!4027 = !DILocation(line: 418, column: 20, scope: !3996)
!4028 = !DILocation(line: 418, column: 7, scope: !3996)
!4029 = !DILocation(line: 418, column: 14, scope: !3996)
!4030 = !DILocation(line: 419, column: 11, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3996, file: !1, line: 419, column: 11)
!4032 = !DILocation(line: 419, column: 18, scope: !4031)
!4033 = !DILocation(line: 419, column: 11, scope: !3996)
!4034 = !DILocation(line: 419, column: 25, scope: !4031)
!4035 = !DILocation(line: 419, column: 32, scope: !4031)
!4036 = !DILocation(line: 421, column: 5, scope: !3930)
!4037 = !DILocation(line: 422, column: 4, scope: !3774)
!4038 = !DILocation(line: 424, column: 13, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !1, line: 424, column: 9)
!4040 = distinct !DILexicalBlock(scope: !3768, file: !1, line: 423, column: 9)
!4041 = !DILocation(line: 424, column: 18, scope: !4039)
!4042 = !DILocation(line: 424, column: 9, scope: !4040)
!4043 = !DILocation(line: 425, column: 30, scope: !4039)
!4044 = !DILocation(line: 425, column: 26, scope: !4039)
!4045 = !DILocation(line: 425, column: 41, scope: !4039)
!4046 = !DILocation(line: 425, column: 34, scope: !4039)
!4047 = !DILocation(line: 425, column: 51, scope: !4039)
!4048 = !DILocation(line: 425, column: 44, scope: !4039)
!4049 = !DILocation(line: 425, column: 55, scope: !4039)
!4050 = !DILocation(line: 425, column: 54, scope: !4039)
!4051 = !DILocation(line: 425, column: 6, scope: !4039)
!4052 = !DILocation(line: 427, column: 29, scope: !4039)
!4053 = !DILocation(line: 427, column: 25, scope: !4039)
!4054 = !DILocation(line: 427, column: 37, scope: !4039)
!4055 = !DILocation(line: 427, column: 33, scope: !4039)
!4056 = !DILocation(line: 427, column: 44, scope: !4039)
!4057 = !DILocation(line: 427, column: 43, scope: !4039)
!4058 = !DILocation(line: 427, column: 6, scope: !4039)
!4059 = !DILocation(line: 429, column: 29, scope: !4040)
!4060 = !DILocation(line: 429, column: 35, scope: !4040)
!4061 = !DILocation(line: 429, column: 21, scope: !4040)
!4062 = !DILocation(line: 429, column: 27, scope: !4040)
!4063 = !DILocation(line: 429, column: 13, scope: !4040)
!4064 = !DILocation(line: 429, column: 19, scope: !4040)
!4065 = !DILocation(line: 429, column: 5, scope: !4040)
!4066 = !DILocation(line: 429, column: 11, scope: !4040)
!4067 = !DILocation(line: 430, column: 26, scope: !4040)
!4068 = !DILocation(line: 430, column: 5, scope: !4040)
!4069 = !DILocation(line: 432, column: 16, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4040, file: !1, line: 432, column: 5)
!4071 = !DILocation(line: 432, column: 10, scope: !4070)
!4072 = !DILocation(line: 432, column: 20, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4070, file: !1, line: 432, column: 5)
!4074 = !DILocation(line: 432, column: 27, scope: !4073)
!4075 = !DILocation(line: 432, column: 26, scope: !4073)
!4076 = !DILocation(line: 432, column: 5, scope: !4070)
!4077 = !DILocation(line: 433, column: 17, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4073, file: !1, line: 432, column: 48)
!4079 = !DILocation(line: 433, column: 12, scope: !4078)
!4080 = !DILocation(line: 433, column: 26, scope: !4078)
!4081 = !DILocation(line: 433, column: 34, scope: !4078)
!4082 = !DILocation(line: 433, column: 36, scope: !4078)
!4083 = !DILocation(line: 433, column: 32, scope: !4078)
!4084 = !DILocation(line: 433, column: 10, scope: !4078)
!4085 = !DILocation(line: 434, column: 16, scope: !4078)
!4086 = !DILocation(line: 434, column: 6, scope: !4078)
!4087 = !DILocation(line: 434, column: 13, scope: !4078)
!4088 = !DILocation(line: 435, column: 16, scope: !4078)
!4089 = !DILocation(line: 435, column: 6, scope: !4078)
!4090 = !DILocation(line: 435, column: 13, scope: !4078)
!4091 = !DILocation(line: 436, column: 16, scope: !4078)
!4092 = !DILocation(line: 436, column: 6, scope: !4078)
!4093 = !DILocation(line: 436, column: 13, scope: !4078)
!4094 = !DILocation(line: 437, column: 16, scope: !4078)
!4095 = !DILocation(line: 437, column: 6, scope: !4078)
!4096 = !DILocation(line: 437, column: 13, scope: !4078)
!4097 = !DILocation(line: 438, column: 10, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4078, file: !1, line: 438, column: 10)
!4099 = !DILocation(line: 438, column: 17, scope: !4098)
!4100 = !DILocation(line: 438, column: 10, scope: !4078)
!4101 = !DILocation(line: 438, column: 24, scope: !4098)
!4102 = !DILocation(line: 438, column: 31, scope: !4098)
!4103 = !DILocation(line: 439, column: 5, scope: !4078)
!4104 = !DILocation(line: 432, column: 44, scope: !4073)
!4105 = !DILocation(line: 432, column: 5, scope: !4073)
!4106 = distinct !{!4106, !4076, !4107}
!4107 = !DILocation(line: 439, column: 5, scope: !4070)
!4108 = !DILocation(line: 442, column: 8, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 442, column: 8)
!4110 = !DILocation(line: 442, column: 8, scope: !3762)
!4111 = !DILocation(line: 442, column: 14, scope: !4109)
!4112 = !DILocation(line: 442, column: 12, scope: !4109)
!4113 = !DILocation(line: 443, column: 3, scope: !3762)
!4114 = !DILocation(line: 349, column: 51, scope: !3755)
!4115 = !DILocation(line: 349, column: 57, scope: !3755)
!4116 = !DILocation(line: 349, column: 63, scope: !3755)
!4117 = !DILocation(line: 349, column: 3, scope: !3755)
!4118 = distinct !{!4118, !3760, !4119}
!4119 = !DILocation(line: 443, column: 3, scope: !3748)
!4120 = !DILocation(line: 444, column: 7, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !3749, file: !1, line: 444, column: 7)
!4122 = !DILocation(line: 444, column: 8, scope: !4121)
!4123 = !DILocation(line: 444, column: 7, scope: !3749)
!4124 = !DILocation(line: 445, column: 10, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4121, file: !1, line: 445, column: 8)
!4126 = !DILocation(line: 445, column: 23, scope: !4125)
!4127 = !DILocation(line: 445, column: 8, scope: !4125)
!4128 = !DILocation(line: 445, column: 8, scope: !4121)
!4129 = !DILocation(line: 445, column: 29, scope: !4125)
!4130 = !DILocation(line: 445, column: 26, scope: !4125)
!4131 = !DILocation(line: 446, column: 2, scope: !3749)
!4132 = !DILocation(line: 348, column: 56, scope: !3741)
!4133 = !DILocation(line: 348, column: 2, scope: !3741)
!4134 = distinct !{!4134, !3746, !4135}
!4135 = !DILocation(line: 446, column: 2, scope: !3734)
!4136 = !DILocation(line: 447, column: 1, scope: !3687)
!4137 = distinct !DISubprogram(name: "halo_tile", scope: !1, file: !1, line: 241, type: !2861, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!4138 = !DILocalVariable(name: "pa", arg: 1, scope: !4137, file: !1, line: 241, type: !2083)
!4139 = !DILocation(line: 241, column: 35, scope: !4137)
!4140 = !DILocalVariable(name: "rl", arg: 2, scope: !4137, file: !1, line: 241, type: !88)
!4141 = !DILocation(line: 241, column: 52, scope: !4137)
!4142 = !DILocalVariable(name: "rlpp", scope: !4137, file: !1, line: 243, type: !2878)
!4143 = !DILocation(line: 243, column: 15, scope: !4137)
!4144 = !DILocalVariable(name: "har", scope: !4137, file: !1, line: 244, type: !4145)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DIDerivedType(tag: DW_TAG_typedef, name: "HaloRen", file: !2085, line: 427, baseType: !3020)
!4147 = !DILocation(line: 244, column: 11, scope: !4137)
!4148 = !DILocalVariable(name: "disprect", scope: !4137, file: !1, line: 245, type: !859)
!4149 = !DILocation(line: 245, column: 7, scope: !4137)
!4150 = !DILocation(line: 245, column: 17, scope: !4137)
!4151 = !DILocation(line: 245, column: 21, scope: !4137)
!4152 = !DILocalVariable(name: "testrect", scope: !4137, file: !1, line: 245, type: !859)
!4153 = !DILocation(line: 245, column: 31, scope: !4137)
!4154 = !DILocation(line: 245, column: 41, scope: !4137)
!4155 = !DILocation(line: 245, column: 45, scope: !4137)
!4156 = !DILocalVariable(name: "dist", scope: !4137, file: !1, line: 246, type: !57)
!4157 = !DILocation(line: 246, column: 8, scope: !4137)
!4158 = !DILocalVariable(name: "xsq", scope: !4137, file: !1, line: 246, type: !57)
!4159 = !DILocation(line: 246, column: 14, scope: !4137)
!4160 = !DILocalVariable(name: "ysq", scope: !4137, file: !1, line: 246, type: !57)
!4161 = !DILocation(line: 246, column: 19, scope: !4137)
!4162 = !DILocalVariable(name: "xn", scope: !4137, file: !1, line: 246, type: !57)
!4163 = !DILocation(line: 246, column: 24, scope: !4137)
!4164 = !DILocalVariable(name: "yn", scope: !4137, file: !1, line: 246, type: !57)
!4165 = !DILocation(line: 246, column: 28, scope: !4137)
!4166 = !DILocalVariable(name: "col", scope: !4137, file: !1, line: 247, type: !299)
!4167 = !DILocation(line: 247, column: 8, scope: !4137)
!4168 = !DILocalVariable(name: "rd", scope: !4137, file: !1, line: 248, type: !2100)
!4169 = !DILocation(line: 248, column: 12, scope: !4137)
!4170 = !DILocalVariable(name: "a", scope: !4137, file: !1, line: 249, type: !5)
!4171 = !DILocation(line: 249, column: 6, scope: !4137)
!4172 = !DILocalVariable(name: "rz", scope: !4137, file: !1, line: 249, type: !855)
!4173 = !DILocation(line: 249, column: 10, scope: !4137)
!4174 = !DILocalVariable(name: "zz", scope: !4137, file: !1, line: 249, type: !5)
!4175 = !DILocation(line: 249, column: 14, scope: !4137)
!4176 = !DILocalVariable(name: "y", scope: !4137, file: !1, line: 249, type: !5)
!4177 = !DILocation(line: 249, column: 18, scope: !4137)
!4178 = !DILocalVariable(name: "sample", scope: !4137, file: !1, line: 249, type: !5)
!4179 = !DILocation(line: 249, column: 21, scope: !4137)
!4180 = !DILocalVariable(name: "totsample", scope: !4137, file: !1, line: 249, type: !5)
!4181 = !DILocation(line: 249, column: 29, scope: !4137)
!4182 = !DILocalVariable(name: "od", scope: !4137, file: !1, line: 249, type: !5)
!4183 = !DILocation(line: 249, column: 40, scope: !4137)
!4184 = !DILocalVariable(name: "minx", scope: !4137, file: !1, line: 250, type: !79)
!4185 = !DILocation(line: 250, column: 8, scope: !4137)
!4186 = !DILocalVariable(name: "maxx", scope: !4137, file: !1, line: 250, type: !79)
!4187 = !DILocation(line: 250, column: 14, scope: !4137)
!4188 = !DILocalVariable(name: "miny", scope: !4137, file: !1, line: 250, type: !79)
!4189 = !DILocation(line: 250, column: 20, scope: !4137)
!4190 = !DILocalVariable(name: "maxy", scope: !4137, file: !1, line: 250, type: !79)
!4191 = !DILocation(line: 250, column: 26, scope: !4137)
!4192 = !DILocalVariable(name: "x", scope: !4137, file: !1, line: 250, type: !79)
!4193 = !DILocation(line: 250, column: 32, scope: !4137)
!4194 = !DILocalVariable(name: "lay", scope: !4137, file: !1, line: 251, type: !41)
!4195 = !DILocation(line: 251, column: 15, scope: !4137)
!4196 = !DILocation(line: 251, column: 20, scope: !4137)
!4197 = !DILocation(line: 251, column: 24, scope: !4137)
!4198 = !DILocation(line: 254, column: 6, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4137, file: !1, line: 254, column: 6)
!4200 = !DILocation(line: 254, column: 10, scope: !4199)
!4201 = !DILocation(line: 254, column: 6, scope: !4137)
!4202 = !DILocation(line: 255, column: 19, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4199, file: !1, line: 254, column: 16)
!4204 = !DILocation(line: 255, column: 23, scope: !4203)
!4205 = !DILocation(line: 255, column: 12, scope: !4203)
!4206 = !DILocation(line: 255, column: 16, scope: !4203)
!4207 = !DILocation(line: 256, column: 19, scope: !4203)
!4208 = !DILocation(line: 256, column: 23, scope: !4203)
!4209 = !DILocation(line: 256, column: 12, scope: !4203)
!4210 = !DILocation(line: 256, column: 16, scope: !4203)
!4211 = !DILocation(line: 257, column: 19, scope: !4203)
!4212 = !DILocation(line: 257, column: 23, scope: !4203)
!4213 = !DILocation(line: 257, column: 12, scope: !4203)
!4214 = !DILocation(line: 257, column: 16, scope: !4203)
!4215 = !DILocation(line: 258, column: 19, scope: !4203)
!4216 = !DILocation(line: 258, column: 23, scope: !4203)
!4217 = !DILocation(line: 258, column: 12, scope: !4203)
!4218 = !DILocation(line: 258, column: 16, scope: !4203)
!4219 = !DILocation(line: 259, column: 2, scope: !4203)
!4220 = !DILocation(line: 261, column: 31, scope: !4137)
!4221 = !DILocation(line: 261, column: 35, scope: !4137)
!4222 = !DILocation(line: 261, column: 39, scope: !4137)
!4223 = !DILocation(line: 261, column: 13, scope: !4137)
!4224 = !DILocation(line: 261, column: 11, scope: !4137)
!4225 = !DILocation(line: 263, column: 8, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4137, file: !1, line: 263, column: 2)
!4227 = !DILocation(line: 263, column: 7, scope: !4226)
!4228 = !DILocation(line: 263, column: 12, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4226, file: !1, line: 263, column: 2)
!4230 = !DILocation(line: 263, column: 16, scope: !4229)
!4231 = !DILocation(line: 263, column: 13, scope: !4229)
!4232 = !DILocation(line: 263, column: 2, scope: !4226)
!4233 = !DILocation(line: 264, column: 10, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4229, file: !1, line: 263, column: 30)
!4235 = !DILocation(line: 264, column: 22, scope: !4234)
!4236 = !DILocation(line: 264, column: 8, scope: !4234)
!4237 = !DILocation(line: 264, column: 6, scope: !4234)
!4238 = !DILocation(line: 267, column: 8, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4234, file: !1, line: 267, column: 7)
!4240 = !DILocation(line: 267, column: 13, scope: !4239)
!4241 = !DILocation(line: 267, column: 19, scope: !4239)
!4242 = !DILocation(line: 267, column: 17, scope: !4239)
!4243 = !DILocation(line: 267, column: 24, scope: !4239)
!4244 = !DILocation(line: 267, column: 7, scope: !4234)
!4245 = !DILocation(line: 269, column: 3, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4239, file: !1, line: 267, column: 30)
!4247 = !DILocation(line: 270, column: 21, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4239, file: !1, line: 270, column: 12)
!4249 = !DILocation(line: 270, column: 28, scope: !4248)
!4250 = !DILocation(line: 270, column: 33, scope: !4248)
!4251 = !DILocation(line: 270, column: 26, scope: !4248)
!4252 = !DILocation(line: 270, column: 12, scope: !4239)
!4253 = !DILocation(line: 272, column: 3, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4248, file: !1, line: 270, column: 39)
!4255 = !DILocation(line: 273, column: 21, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4248, file: !1, line: 273, column: 12)
!4257 = !DILocation(line: 273, column: 28, scope: !4256)
!4258 = !DILocation(line: 273, column: 33, scope: !4256)
!4259 = !DILocation(line: 273, column: 26, scope: !4256)
!4260 = !DILocation(line: 273, column: 12, scope: !4248)
!4261 = !DILocation(line: 275, column: 3, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 273, column: 39)
!4263 = !DILocation(line: 278, column: 16, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 276, column: 8)
!4265 = !DILocation(line: 278, column: 21, scope: !4264)
!4266 = !DILocation(line: 278, column: 24, scope: !4264)
!4267 = !DILocation(line: 278, column: 29, scope: !4264)
!4268 = !DILocation(line: 278, column: 23, scope: !4264)
!4269 = !DILocation(line: 278, column: 10, scope: !4264)
!4270 = !DILocation(line: 278, column: 8, scope: !4264)
!4271 = !DILocation(line: 279, column: 15, scope: !4264)
!4272 = !DILocation(line: 279, column: 20, scope: !4264)
!4273 = !DILocation(line: 279, column: 23, scope: !4264)
!4274 = !DILocation(line: 279, column: 28, scope: !4264)
!4275 = !DILocation(line: 279, column: 22, scope: !4264)
!4276 = !DILocation(line: 279, column: 10, scope: !4264)
!4277 = !DILocation(line: 279, column: 8, scope: !4264)
!4278 = !DILocation(line: 281, column: 17, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4264, file: !1, line: 281, column: 8)
!4280 = !DILocation(line: 281, column: 24, scope: !4279)
!4281 = !DILocation(line: 281, column: 22, scope: !4279)
!4282 = !DILocation(line: 281, column: 8, scope: !4264)
!4283 = !DILocation(line: 283, column: 4, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4279, file: !1, line: 281, column: 30)
!4285 = !DILocation(line: 284, column: 22, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4279, file: !1, line: 284, column: 13)
!4287 = !DILocation(line: 284, column: 29, scope: !4286)
!4288 = !DILocation(line: 284, column: 27, scope: !4286)
!4289 = !DILocation(line: 284, column: 13, scope: !4279)
!4290 = !DILocation(line: 286, column: 4, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4286, file: !1, line: 284, column: 35)
!4292 = !DILocation(line: 289, column: 19, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4286, file: !1, line: 287, column: 9)
!4294 = !DILocation(line: 289, column: 34, scope: !4293)
!4295 = !DILocation(line: 289, column: 12, scope: !4293)
!4296 = !DILocation(line: 289, column: 10, scope: !4293)
!4297 = !DILocation(line: 290, column: 19, scope: !4293)
!4298 = !DILocation(line: 290, column: 34, scope: !4293)
!4299 = !DILocation(line: 290, column: 12, scope: !4293)
!4300 = !DILocation(line: 290, column: 10, scope: !4293)
!4301 = !DILocation(line: 292, column: 19, scope: !4293)
!4302 = !DILocation(line: 292, column: 24, scope: !4293)
!4303 = !DILocation(line: 292, column: 39, scope: !4293)
!4304 = !DILocation(line: 292, column: 12, scope: !4293)
!4305 = !DILocation(line: 292, column: 10, scope: !4293)
!4306 = !DILocation(line: 293, column: 19, scope: !4293)
!4307 = !DILocation(line: 293, column: 24, scope: !4293)
!4308 = !DILocation(line: 293, column: 39, scope: !4293)
!4309 = !DILocation(line: 293, column: 12, scope: !4293)
!4310 = !DILocation(line: 293, column: 10, scope: !4293)
!4311 = !DILocation(line: 295, column: 12, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4293, file: !1, line: 295, column: 5)
!4313 = !DILocation(line: 295, column: 11, scope: !4312)
!4314 = !DILocation(line: 295, column: 10, scope: !4312)
!4315 = !DILocation(line: 295, column: 18, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4312, file: !1, line: 295, column: 5)
!4317 = !DILocation(line: 295, column: 20, scope: !4316)
!4318 = !DILocation(line: 295, column: 19, scope: !4316)
!4319 = !DILocation(line: 295, column: 5, scope: !4312)
!4320 = !DILocalVariable(name: "rectofs", scope: !4321, file: !1, line: 296, type: !5)
!4321 = distinct !DILexicalBlock(scope: !4316, file: !1, line: 295, column: 31)
!4322 = !DILocation(line: 296, column: 10, scope: !4321)
!4323 = !DILocation(line: 296, column: 20, scope: !4321)
!4324 = !DILocation(line: 296, column: 31, scope: !4321)
!4325 = !DILocation(line: 296, column: 21, scope: !4321)
!4326 = !DILocation(line: 296, column: 37, scope: !4321)
!4327 = !DILocation(line: 296, column: 41, scope: !4321)
!4328 = !DILocation(line: 296, column: 36, scope: !4321)
!4329 = !DILocation(line: 296, column: 50, scope: !4321)
!4330 = !DILocation(line: 296, column: 66, scope: !4321)
!4331 = !DILocation(line: 296, column: 55, scope: !4321)
!4332 = !DILocation(line: 296, column: 47, scope: !4321)
!4333 = !DILocation(line: 297, column: 10, scope: !4321)
!4334 = !DILocation(line: 297, column: 14, scope: !4321)
!4335 = !DILocation(line: 297, column: 22, scope: !4321)
!4336 = !DILocation(line: 297, column: 20, scope: !4321)
!4337 = !DILocation(line: 297, column: 8, scope: !4321)
!4338 = !DILocation(line: 298, column: 10, scope: !4321)
!4339 = !DILocation(line: 298, column: 8, scope: !4321)
!4340 = !DILocation(line: 300, column: 10, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4321, file: !1, line: 300, column: 10)
!4342 = !DILocation(line: 300, column: 14, scope: !4341)
!4343 = !DILocation(line: 300, column: 10, scope: !4321)
!4344 = !DILocation(line: 301, column: 11, scope: !4341)
!4345 = !DILocation(line: 301, column: 15, scope: !4341)
!4346 = !DILocation(line: 301, column: 26, scope: !4341)
!4347 = !DILocation(line: 301, column: 24, scope: !4341)
!4348 = !DILocation(line: 301, column: 9, scope: !4341)
!4349 = !DILocation(line: 301, column: 7, scope: !4341)
!4350 = !DILocation(line: 303, column: 11, scope: !4321)
!4351 = !DILocation(line: 303, column: 13, scope: !4321)
!4352 = !DILocation(line: 303, column: 18, scope: !4321)
!4353 = !DILocation(line: 303, column: 12, scope: !4321)
!4354 = !DILocation(line: 303, column: 24, scope: !4321)
!4355 = !DILocation(line: 303, column: 21, scope: !4321)
!4356 = !DILocation(line: 303, column: 8, scope: !4321)
!4357 = !DILocation(line: 304, column: 11, scope: !4321)
!4358 = !DILocation(line: 304, column: 14, scope: !4321)
!4359 = !DILocation(line: 304, column: 13, scope: !4321)
!4360 = !DILocation(line: 304, column: 9, scope: !4321)
!4361 = !DILocation(line: 306, column: 13, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4321, file: !1, line: 306, column: 6)
!4363 = !DILocation(line: 306, column: 12, scope: !4362)
!4364 = !DILocation(line: 306, column: 11, scope: !4362)
!4365 = !DILocation(line: 306, column: 19, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4362, file: !1, line: 306, column: 6)
!4367 = !DILocation(line: 306, column: 21, scope: !4366)
!4368 = !DILocation(line: 306, column: 20, scope: !4366)
!4369 = !DILocation(line: 306, column: 6, scope: !4362)
!4370 = !DILocation(line: 307, column: 11, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4366, file: !1, line: 306, column: 44)
!4372 = !DILocation(line: 307, column: 14, scope: !4371)
!4373 = !DILocation(line: 307, column: 19, scope: !4371)
!4374 = !DILocation(line: 307, column: 12, scope: !4371)
!4375 = !DILocation(line: 307, column: 9, scope: !4371)
!4376 = !DILocation(line: 308, column: 12, scope: !4371)
!4377 = !DILocation(line: 308, column: 15, scope: !4371)
!4378 = !DILocation(line: 308, column: 14, scope: !4371)
!4379 = !DILocation(line: 308, column: 10, scope: !4371)
!4380 = !DILocation(line: 309, column: 13, scope: !4371)
!4381 = !DILocation(line: 309, column: 17, scope: !4371)
!4382 = !DILocation(line: 309, column: 16, scope: !4371)
!4383 = !DILocation(line: 309, column: 11, scope: !4371)
!4384 = !DILocation(line: 310, column: 11, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4371, file: !1, line: 310, column: 11)
!4386 = !DILocation(line: 310, column: 16, scope: !4385)
!4387 = !DILocation(line: 310, column: 21, scope: !4385)
!4388 = !DILocation(line: 310, column: 15, scope: !4385)
!4389 = !DILocation(line: 310, column: 11, scope: !4371)
!4390 = !DILocation(line: 311, column: 12, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !1, line: 311, column: 12)
!4392 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 310, column: 28)
!4393 = !DILocation(line: 311, column: 15, scope: !4391)
!4394 = !DILocation(line: 311, column: 19, scope: !4391)
!4395 = !DILocation(line: 311, column: 18, scope: !4391)
!4396 = !DILocation(line: 311, column: 12, scope: !4392)
!4397 = !DILocation(line: 312, column: 26, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4391, file: !1, line: 311, column: 23)
!4399 = !DILocation(line: 312, column: 31, scope: !4398)
!4400 = !DILocation(line: 312, column: 37, scope: !4398)
!4401 = !DILocation(line: 312, column: 48, scope: !4398)
!4402 = !DILocation(line: 312, column: 52, scope: !4398)
!4403 = !DILocation(line: 312, column: 58, scope: !4398)
!4404 = !DILocation(line: 312, column: 62, scope: !4398)
!4405 = !DILocation(line: 312, column: 77, scope: !4398)
!4406 = !DILocation(line: 312, column: 76, scope: !4398)
!4407 = !DILocation(line: 312, column: 66, scope: !4398)
!4408 = !DILocation(line: 312, column: 9, scope: !4398)
!4409 = !DILocation(line: 313, column: 8, scope: !4398)
!4410 = !DILocation(line: 315, column: 24, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4391, file: !1, line: 314, column: 13)
!4412 = !DILocation(line: 315, column: 30, scope: !4411)
!4413 = !DILocation(line: 315, column: 29, scope: !4411)
!4414 = !DILocation(line: 315, column: 13, scope: !4411)
!4415 = !DILocation(line: 315, column: 11, scope: !4411)
!4416 = !DILocation(line: 316, column: 14, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4411, file: !1, line: 316, column: 13)
!4418 = !DILocation(line: 316, column: 18, scope: !4417)
!4419 = !DILocation(line: 316, column: 23, scope: !4417)
!4420 = !DILocation(line: 316, column: 16, scope: !4417)
!4421 = !DILocation(line: 316, column: 27, scope: !4417)
!4422 = !DILocation(line: 316, column: 31, scope: !4417)
!4423 = !DILocation(line: 316, column: 36, scope: !4417)
!4424 = !DILocation(line: 316, column: 40, scope: !4417)
!4425 = !DILocation(line: 316, column: 44, scope: !4417)
!4426 = !DILocation(line: 316, column: 49, scope: !4417)
!4427 = !DILocation(line: 316, column: 54, scope: !4417)
!4428 = !DILocation(line: 316, column: 59, scope: !4417)
!4429 = !DILocation(line: 316, column: 13, scope: !4411)
!4430 = !DILocation(line: 317, column: 29, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !1, line: 317, column: 14)
!4432 = distinct !DILexicalBlock(scope: !4417, file: !1, line: 316, column: 77)
!4433 = !DILocation(line: 317, column: 34, scope: !4431)
!4434 = !DILocation(line: 317, column: 39, scope: !4431)
!4435 = !DILocation(line: 317, column: 43, scope: !4431)
!4436 = !DILocation(line: 317, column: 49, scope: !4431)
!4437 = !DILocation(line: 317, column: 53, scope: !4431)
!4438 = !DILocation(line: 317, column: 57, scope: !4431)
!4439 = !DILocation(line: 317, column: 62, scope: !4431)
!4440 = !DILocation(line: 317, column: 14, scope: !4431)
!4441 = !DILocation(line: 317, column: 14, scope: !4432)
!4442 = !DILocation(line: 318, column: 22, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !1, line: 318, column: 11)
!4444 = distinct !DILexicalBlock(scope: !4431, file: !1, line: 317, column: 71)
!4445 = !DILocation(line: 318, column: 16, scope: !4443)
!4446 = !DILocation(line: 318, column: 26, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4443, file: !1, line: 318, column: 11)
!4448 = !DILocation(line: 318, column: 33, scope: !4447)
!4449 = !DILocation(line: 318, column: 32, scope: !4447)
!4450 = !DILocation(line: 318, column: 11, scope: !4443)
!4451 = !DILocation(line: 319, column: 37, scope: !4447)
!4452 = !DILocation(line: 319, column: 32, scope: !4447)
!4453 = !DILocation(line: 319, column: 46, scope: !4447)
!4454 = !DILocation(line: 319, column: 54, scope: !4447)
!4455 = !DILocation(line: 319, column: 56, scope: !4447)
!4456 = !DILocation(line: 319, column: 52, scope: !4447)
!4457 = !DILocation(line: 319, column: 60, scope: !4447)
!4458 = !DILocation(line: 319, column: 65, scope: !4447)
!4459 = !DILocation(line: 319, column: 70, scope: !4447)
!4460 = !DILocation(line: 319, column: 12, scope: !4447)
!4461 = !DILocation(line: 318, column: 50, scope: !4447)
!4462 = !DILocation(line: 318, column: 11, scope: !4447)
!4463 = distinct !{!4463, !4450, !4464}
!4464 = !DILocation(line: 319, column: 73, scope: !4443)
!4465 = !DILocation(line: 320, column: 10, scope: !4444)
!4466 = !DILocation(line: 321, column: 9, scope: !4432)
!4467 = !DILocation(line: 323, column: 7, scope: !4392)
!4468 = !DILocation(line: 324, column: 11, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4371, file: !1, line: 324, column: 11)
!4470 = !DILocation(line: 324, column: 11, scope: !4371)
!4471 = !DILocation(line: 324, column: 17, scope: !4469)
!4472 = !DILocation(line: 324, column: 15, scope: !4469)
!4473 = !DILocation(line: 325, column: 6, scope: !4371)
!4474 = !DILocation(line: 306, column: 28, scope: !4366)
!4475 = !DILocation(line: 306, column: 34, scope: !4366)
!4476 = !DILocation(line: 306, column: 40, scope: !4366)
!4477 = !DILocation(line: 306, column: 6, scope: !4366)
!4478 = distinct !{!4478, !4369, !4479}
!4479 = !DILocation(line: 325, column: 6, scope: !4362)
!4480 = !DILocation(line: 326, column: 5, scope: !4321)
!4481 = !DILocation(line: 295, column: 27, scope: !4316)
!4482 = !DILocation(line: 295, column: 5, scope: !4316)
!4483 = distinct !{!4483, !4319, !4484}
!4484 = !DILocation(line: 326, column: 5, scope: !4312)
!4485 = !DILocation(line: 329, column: 9, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4234, file: !1, line: 329, column: 7)
!4487 = !DILocation(line: 329, column: 22, scope: !4486)
!4488 = !DILocation(line: 329, column: 7, scope: !4486)
!4489 = !DILocation(line: 329, column: 7, scope: !4234)
!4490 = !DILocation(line: 329, column: 29, scope: !4486)
!4491 = !DILocation(line: 330, column: 2, scope: !4234)
!4492 = !DILocation(line: 263, column: 26, scope: !4229)
!4493 = !DILocation(line: 263, column: 2, scope: !4229)
!4494 = distinct !{!4494, !4232, !4495}
!4495 = !DILocation(line: 330, column: 2, scope: !4226)
!4496 = !DILocation(line: 331, column: 1, scope: !4137)
!4497 = distinct !DISubprogram(name: "make_solid_mask", scope: !1, file: !1, line: 1081, type: !4498, scopeLine: 1082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!2382, !2083}
!4500 = !DILocalVariable(name: "pa", arg: 1, scope: !4497, file: !1, line: 1081, type: !2083)
!4501 = !DILocation(line: 1081, column: 52, scope: !4497)
!4502 = !DILocalVariable(name: "rd", scope: !4497, file: !1, line: 1083, type: !2100)
!4503 = !DILocation(line: 1083, column: 12, scope: !4497)
!4504 = !DILocation(line: 1083, column: 16, scope: !4497)
!4505 = !DILocation(line: 1083, column: 20, scope: !4497)
!4506 = !DILocalVariable(name: "solidmask", scope: !4497, file: !1, line: 1084, type: !2382)
!4507 = !DILocation(line: 1084, column: 18, scope: !4497)
!4508 = !DILocalVariable(name: "sp", scope: !4497, file: !1, line: 1084, type: !2382)
!4509 = !DILocation(line: 1084, column: 30, scope: !4497)
!4510 = !DILocalVariable(name: "x", scope: !4497, file: !1, line: 1085, type: !5)
!4511 = !DILocation(line: 1085, column: 6, scope: !4497)
!4512 = !DILocation(line: 1087, column: 6, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4497, file: !1, line: 1087, column: 6)
!4514 = !DILocation(line: 1087, column: 8, scope: !4513)
!4515 = !DILocation(line: 1087, column: 6, scope: !4497)
!4516 = !DILocation(line: 1087, column: 16, scope: !4513)
!4517 = !DILocation(line: 1089, column: 16, scope: !4497)
!4518 = !DILocation(line: 1089, column: 42, scope: !4497)
!4519 = !DILocation(line: 1089, column: 46, scope: !4497)
!4520 = !DILocation(line: 1089, column: 41, scope: !4497)
!4521 = !DILocation(line: 1089, column: 52, scope: !4497)
!4522 = !DILocation(line: 1089, column: 56, scope: !4497)
!4523 = !DILocation(line: 1089, column: 51, scope: !4497)
!4524 = !DILocation(line: 1089, column: 14, scope: !4497)
!4525 = !DILocation(line: 1089, column: 4, scope: !4497)
!4526 = !DILocation(line: 1091, column: 9, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4497, file: !1, line: 1091, column: 2)
!4528 = !DILocation(line: 1091, column: 13, scope: !4527)
!4529 = !DILocation(line: 1091, column: 19, scope: !4527)
!4530 = !DILocation(line: 1091, column: 23, scope: !4527)
!4531 = !DILocation(line: 1091, column: 18, scope: !4527)
!4532 = !DILocation(line: 1091, column: 8, scope: !4527)
!4533 = !DILocation(line: 1091, column: 7, scope: !4527)
!4534 = !DILocation(line: 1091, column: 30, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4527, file: !1, line: 1091, column: 2)
!4536 = !DILocation(line: 1091, column: 31, scope: !4535)
!4537 = !DILocation(line: 1091, column: 2, scope: !4527)
!4538 = !DILocation(line: 1092, column: 8, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !1, line: 1092, column: 7)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 1091, column: 52)
!4541 = !DILocation(line: 1092, column: 7, scope: !4539)
!4542 = !DILocation(line: 1092, column: 7, scope: !4540)
!4543 = !DILocalVariable(name: "ps", scope: !4544, file: !1, line: 1093, type: !81)
!4544 = distinct !DILexicalBlock(scope: !4539, file: !1, line: 1092, column: 12)
!4545 = !DILocation(line: 1093, column: 12, scope: !4544)
!4546 = !DILocation(line: 1093, column: 27, scope: !4544)
!4547 = !DILocation(line: 1093, column: 26, scope: !4544)
!4548 = !DILocation(line: 1093, column: 16, scope: !4544)
!4549 = !DILocation(line: 1095, column: 9, scope: !4544)
!4550 = !DILocation(line: 1095, column: 13, scope: !4544)
!4551 = !DILocation(line: 1095, column: 5, scope: !4544)
!4552 = !DILocation(line: 1095, column: 7, scope: !4544)
!4553 = !DILocation(line: 1096, column: 13, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4544, file: !1, line: 1096, column: 4)
!4555 = !DILocation(line: 1096, column: 17, scope: !4554)
!4556 = !DILocation(line: 1096, column: 11, scope: !4554)
!4557 = !DILocation(line: 1096, column: 9, scope: !4554)
!4558 = !DILocation(line: 1096, column: 23, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4554, file: !1, line: 1096, column: 4)
!4560 = !DILocation(line: 1096, column: 4, scope: !4554)
!4561 = !DILocation(line: 1097, column: 12, scope: !4559)
!4562 = !DILocation(line: 1097, column: 16, scope: !4559)
!4563 = !DILocation(line: 1097, column: 6, scope: !4559)
!4564 = !DILocation(line: 1097, column: 9, scope: !4559)
!4565 = !DILocation(line: 1097, column: 5, scope: !4559)
!4566 = !DILocation(line: 1096, column: 31, scope: !4559)
!4567 = !DILocation(line: 1096, column: 35, scope: !4559)
!4568 = !DILocation(line: 1096, column: 29, scope: !4559)
!4569 = !DILocation(line: 1096, column: 4, scope: !4559)
!4570 = distinct !{!4570, !4560, !4571}
!4571 = !DILocation(line: 1097, column: 16, scope: !4554)
!4572 = !DILocation(line: 1098, column: 3, scope: !4544)
!4573 = !DILocation(line: 1100, column: 5, scope: !4539)
!4574 = !DILocation(line: 1100, column: 7, scope: !4539)
!4575 = !DILocation(line: 1101, column: 2, scope: !4540)
!4576 = !DILocation(line: 1091, column: 36, scope: !4535)
!4577 = !DILocation(line: 1091, column: 42, scope: !4535)
!4578 = !DILocation(line: 1091, column: 48, scope: !4535)
!4579 = !DILocation(line: 1091, column: 2, scope: !4535)
!4580 = distinct !{!4580, !4537, !4581}
!4581 = !DILocation(line: 1101, column: 2, scope: !4527)
!4582 = !DILocation(line: 1103, column: 9, scope: !4497)
!4583 = !DILocation(line: 1103, column: 2, scope: !4497)
!4584 = !DILocation(line: 1104, column: 1, scope: !4497)
!4585 = distinct !DISubprogram(name: "addAlphaOverFloatMask", scope: !1, file: !1, line: 1106, type: !4586, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{null, !692, !692, !77, !77}
!4588 = !DILocalVariable(name: "dest", arg: 1, scope: !4585, file: !1, line: 1106, type: !692)
!4589 = !DILocation(line: 1106, column: 42, scope: !4585)
!4590 = !DILocalVariable(name: "source", arg: 2, scope: !4585, file: !1, line: 1106, type: !692)
!4591 = !DILocation(line: 1106, column: 55, scope: !4585)
!4592 = !DILocalVariable(name: "dmask", arg: 3, scope: !4585, file: !1, line: 1106, type: !77)
!4593 = !DILocation(line: 1106, column: 78, scope: !4585)
!4594 = !DILocalVariable(name: "smask", arg: 4, scope: !4585, file: !1, line: 1106, type: !77)
!4595 = !DILocation(line: 1106, column: 100, scope: !4585)
!4596 = !DILocalVariable(name: "shared", scope: !4585, file: !1, line: 1108, type: !77)
!4597 = !DILocation(line: 1108, column: 17, scope: !4585)
!4598 = !DILocation(line: 1108, column: 25, scope: !4585)
!4599 = !DILocation(line: 1108, column: 33, scope: !4585)
!4600 = !DILocation(line: 1108, column: 31, scope: !4585)
!4601 = !DILocalVariable(name: "mul", scope: !4585, file: !1, line: 1109, type: !57)
!4602 = !DILocation(line: 1109, column: 8, scope: !4585)
!4603 = !DILocation(line: 1109, column: 20, scope: !4585)
!4604 = !DILocation(line: 1109, column: 18, scope: !4585)
!4605 = !DILocation(line: 1111, column: 6, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4585, file: !1, line: 1111, column: 6)
!4607 = !DILocation(line: 1111, column: 6, scope: !4585)
!4608 = !DILocation(line: 1114, column: 7, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !1, line: 1114, column: 7)
!4610 = distinct !DILexicalBlock(scope: !4606, file: !1, line: 1111, column: 14)
!4611 = !DILocation(line: 1114, column: 15, scope: !4609)
!4612 = !DILocation(line: 1114, column: 13, scope: !4609)
!4613 = !DILocation(line: 1114, column: 7, scope: !4610)
!4614 = !DILocalVariable(name: "shared_bits", scope: !4615, file: !1, line: 1115, type: !57)
!4615 = distinct !DILexicalBlock(scope: !4609, file: !1, line: 1114, column: 22)
!4616 = !DILocation(line: 1115, column: 10, scope: !4615)
!4617 = !DILocation(line: 1115, column: 41, scope: !4615)
!4618 = !DILocation(line: 1115, column: 30, scope: !4615)
!4619 = !DILocation(line: 1115, column: 23, scope: !4615)
!4620 = !DILocalVariable(name: "tot_bits", scope: !4615, file: !1, line: 1116, type: !57)
!4621 = !DILocation(line: 1116, column: 10, scope: !4615)
!4622 = !DILocation(line: 1116, column: 38, scope: !4615)
!4623 = !DILocation(line: 1116, column: 44, scope: !4615)
!4624 = !DILocation(line: 1116, column: 43, scope: !4615)
!4625 = !DILocation(line: 1116, column: 27, scope: !4615)
!4626 = !DILocation(line: 1116, column: 20, scope: !4615)
!4627 = !DILocalVariable(name: "add", scope: !4615, file: !1, line: 1118, type: !57)
!4628 = !DILocation(line: 1118, column: 10, scope: !4615)
!4629 = !DILocation(line: 1118, column: 16, scope: !4615)
!4630 = !DILocation(line: 1118, column: 27, scope: !4615)
!4631 = !DILocation(line: 1118, column: 25, scope: !4615)
!4632 = !DILocation(line: 1118, column: 40, scope: !4615)
!4633 = !DILocation(line: 1118, column: 39, scope: !4615)
!4634 = !DILocation(line: 1119, column: 9, scope: !4615)
!4635 = !DILocation(line: 1119, column: 21, scope: !4615)
!4636 = !DILocation(line: 1119, column: 20, scope: !4615)
!4637 = !DILocation(line: 1119, column: 26, scope: !4615)
!4638 = !DILocation(line: 1119, column: 25, scope: !4615)
!4639 = !DILocation(line: 1119, column: 13, scope: !4615)
!4640 = !DILocation(line: 1119, column: 7, scope: !4615)
!4641 = !DILocation(line: 1120, column: 3, scope: !4615)
!4642 = !DILocation(line: 1121, column: 2, scope: !4610)
!4643 = !DILocation(line: 1122, column: 11, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4606, file: !1, line: 1122, column: 11)
!4645 = !DILocation(line: 1122, column: 17, scope: !4644)
!4646 = !DILocation(line: 1122, column: 20, scope: !4644)
!4647 = !DILocation(line: 1122, column: 11, scope: !4606)
!4648 = !DILocation(line: 1124, column: 13, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4644, file: !1, line: 1122, column: 27)
!4650 = !DILocation(line: 1124, column: 3, scope: !4649)
!4651 = !DILocation(line: 1124, column: 10, scope: !4649)
!4652 = !DILocation(line: 1125, column: 13, scope: !4649)
!4653 = !DILocation(line: 1125, column: 3, scope: !4649)
!4654 = !DILocation(line: 1125, column: 10, scope: !4649)
!4655 = !DILocation(line: 1126, column: 13, scope: !4649)
!4656 = !DILocation(line: 1126, column: 3, scope: !4649)
!4657 = !DILocation(line: 1126, column: 10, scope: !4649)
!4658 = !DILocation(line: 1127, column: 13, scope: !4649)
!4659 = !DILocation(line: 1127, column: 3, scope: !4649)
!4660 = !DILocation(line: 1127, column: 10, scope: !4649)
!4661 = !DILocation(line: 1129, column: 3, scope: !4649)
!4662 = !DILocation(line: 1132, column: 12, scope: !4585)
!4663 = !DILocation(line: 1132, column: 16, scope: !4585)
!4664 = !DILocation(line: 1132, column: 15, scope: !4585)
!4665 = !DILocation(line: 1132, column: 27, scope: !4585)
!4666 = !DILocation(line: 1132, column: 25, scope: !4585)
!4667 = !DILocation(line: 1132, column: 2, scope: !4585)
!4668 = !DILocation(line: 1132, column: 9, scope: !4585)
!4669 = !DILocation(line: 1133, column: 12, scope: !4585)
!4670 = !DILocation(line: 1133, column: 16, scope: !4585)
!4671 = !DILocation(line: 1133, column: 15, scope: !4585)
!4672 = !DILocation(line: 1133, column: 27, scope: !4585)
!4673 = !DILocation(line: 1133, column: 25, scope: !4585)
!4674 = !DILocation(line: 1133, column: 2, scope: !4585)
!4675 = !DILocation(line: 1133, column: 9, scope: !4585)
!4676 = !DILocation(line: 1134, column: 12, scope: !4585)
!4677 = !DILocation(line: 1134, column: 16, scope: !4585)
!4678 = !DILocation(line: 1134, column: 15, scope: !4585)
!4679 = !DILocation(line: 1134, column: 27, scope: !4585)
!4680 = !DILocation(line: 1134, column: 25, scope: !4585)
!4681 = !DILocation(line: 1134, column: 2, scope: !4585)
!4682 = !DILocation(line: 1134, column: 9, scope: !4585)
!4683 = !DILocation(line: 1135, column: 12, scope: !4585)
!4684 = !DILocation(line: 1135, column: 16, scope: !4585)
!4685 = !DILocation(line: 1135, column: 15, scope: !4585)
!4686 = !DILocation(line: 1135, column: 27, scope: !4585)
!4687 = !DILocation(line: 1135, column: 25, scope: !4585)
!4688 = !DILocation(line: 1135, column: 2, scope: !4585)
!4689 = !DILocation(line: 1135, column: 9, scope: !4585)
!4690 = !DILocation(line: 1136, column: 1, scope: !4585)
!4691 = distinct !DISubprogram(name: "atm_tile", scope: !1, file: !1, line: 720, type: !2861, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!4692 = !DILocalVariable(name: "pa", arg: 1, scope: !4691, file: !1, line: 720, type: !2083)
!4693 = !DILocation(line: 720, column: 34, scope: !4691)
!4694 = !DILocalVariable(name: "rl", arg: 2, scope: !4691, file: !1, line: 720, type: !88)
!4695 = !DILocation(line: 720, column: 51, scope: !4691)
!4696 = !DILocalVariable(name: "zpass", scope: !4691, file: !1, line: 722, type: !4697)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderPass", file: !90, line: 76, baseType: !4699)
!4699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderPass", file: !90, line: 68, size: 960, elements: !4700)
!4700 = !{!4701, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711}
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4699, file: !90, line: 69, baseType: !4702, size: 64)
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4699, size: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4699, file: !90, line: 69, baseType: !4702, size: 64, offset: 64)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "passtype", scope: !4699, file: !90, line: 70, baseType: !5, size: 32, offset: 128)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4699, file: !90, line: 70, baseType: !5, size: 32, offset: 160)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4699, file: !90, line: 71, baseType: !160, size: 512, offset: 192)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !4699, file: !90, line: 72, baseType: !989, size: 64, offset: 704)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !4699, file: !90, line: 73, baseType: !692, size: 64, offset: 768)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !4699, file: !90, line: 74, baseType: !5, size: 32, offset: 832)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !4699, file: !90, line: 74, baseType: !5, size: 32, offset: 864)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "debug_type", scope: !4699, file: !90, line: 75, baseType: !5, size: 32, offset: 896)
!4712 = !DILocation(line: 722, column: 14, scope: !4691)
!4713 = !DILocalVariable(name: "go", scope: !4691, file: !1, line: 723, type: !4714)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DIDerivedType(tag: DW_TAG_typedef, name: "GroupObject", file: !563, line: 48, baseType: !4716)
!4716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GroupObject", file: !563, line: 42, size: 320, elements: !4717)
!4717 = !{!4718, !4720, !4721, !4722, !4723, !4724}
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4716, file: !563, line: 43, baseType: !4719, size: 64)
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4716, size: 64)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4716, file: !563, line: 43, baseType: !4719, size: 64, offset: 64)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4716, file: !563, line: 44, baseType: !352, size: 64, offset: 128)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !4716, file: !563, line: 45, baseType: !58, size: 64, offset: 192)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !4716, file: !563, line: 46, baseType: !79, size: 16, offset: 256)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4716, file: !563, line: 47, baseType: !1084, size: 48, offset: 272)
!4725 = !DILocation(line: 723, column: 15, scope: !4691)
!4726 = !DILocalVariable(name: "lar", scope: !4691, file: !1, line: 724, type: !4727)
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4728, size: 64)
!4728 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampRen", file: !2085, line: 615, baseType: !4729)
!4729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampRen", file: !2085, line: 540, size: 5376, elements: !4730)
!4730 = !{!4731, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4784, !4785, !4786, !4787, !4788, !4789, !4828, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4896, !4898, !4899, !4900}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4729, file: !2085, line: 541, baseType: !4732, size: 64)
!4732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4729, size: 64)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4729, file: !2085, line: 541, baseType: !4732, size: 64, offset: 64)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !4729, file: !2085, line: 543, baseType: !57, size: 32, offset: 128)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !4729, file: !2085, line: 543, baseType: !57, size: 32, offset: 160)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4729, file: !2085, line: 543, baseType: !57, size: 32, offset: 192)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4729, file: !2085, line: 544, baseType: !217, size: 96, offset: 224)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4729, file: !2085, line: 545, baseType: !79, size: 16, offset: 320)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4729, file: !2085, line: 546, baseType: !5, size: 32, offset: 352)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4729, file: !2085, line: 547, baseType: !57, size: 32, offset: 384)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4729, file: !2085, line: 547, baseType: !57, size: 32, offset: 416)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4729, file: !2085, line: 547, baseType: !57, size: 32, offset: 448)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !4729, file: !2085, line: 547, baseType: !57, size: 32, offset: 480)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !4729, file: !2085, line: 548, baseType: !57, size: 32, offset: 512)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !4729, file: !2085, line: 548, baseType: !57, size: 32, offset: 544)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !4729, file: !2085, line: 548, baseType: !57, size: 32, offset: 576)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !4729, file: !2085, line: 549, baseType: !57, size: 32, offset: 608)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !4729, file: !2085, line: 549, baseType: !57, size: 32, offset: 640)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4729, file: !2085, line: 550, baseType: !5, size: 32, offset: 672)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "spotsi", scope: !4729, file: !2085, line: 551, baseType: !57, size: 32, offset: 704)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "spotbl", scope: !4729, file: !2085, line: 551, baseType: !57, size: 32, offset: 736)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4729, file: !2085, line: 552, baseType: !217, size: 96, offset: 768)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "xsp", scope: !4729, file: !2085, line: 553, baseType: !57, size: 32, offset: 864)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "ysp", scope: !4729, file: !2085, line: 553, baseType: !57, size: 32, offset: 896)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "distkw", scope: !4729, file: !2085, line: 553, baseType: !57, size: 32, offset: 928)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "inpr", scope: !4729, file: !2085, line: 553, baseType: !57, size: 32, offset: 960)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "halokw", scope: !4729, file: !2085, line: 554, baseType: !57, size: 32, offset: 992)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "halo", scope: !4729, file: !2085, line: 554, baseType: !57, size: 32, offset: 1024)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !4729, file: !2085, line: 556, baseType: !79, size: 16, offset: 1056)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "ld1", scope: !4729, file: !2085, line: 557, baseType: !57, size: 32, offset: 1088)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "ld2", scope: !4729, file: !2085, line: 557, baseType: !57, size: 32, offset: 1120)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !4729, file: !2085, line: 558, baseType: !1098, size: 64, offset: 1152)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !4729, file: !2085, line: 562, baseType: !79, size: 16, offset: 1216)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !4729, file: !2085, line: 564, baseType: !79, size: 16, offset: 1232)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4729, file: !2085, line: 566, baseType: !57, size: 32, offset: 1248)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !4729, file: !2085, line: 568, baseType: !79, size: 16, offset: 1280)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !4729, file: !2085, line: 568, baseType: !79, size: 16, offset: 1296)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !4729, file: !2085, line: 570, baseType: !79, size: 16, offset: 1312)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !4729, file: !2085, line: 572, baseType: !79, size: 16, offset: 1328)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !4729, file: !2085, line: 574, baseType: !79, size: 16, offset: 1344)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !4729, file: !2085, line: 576, baseType: !57, size: 32, offset: 1376)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !4729, file: !2085, line: 578, baseType: !57, size: 32, offset: 1408)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !4729, file: !2085, line: 580, baseType: !57, size: 32, offset: 1440)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !4729, file: !2085, line: 582, baseType: !57, size: 32, offset: 1472)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !4729, file: !2085, line: 584, baseType: !79, size: 16, offset: 1504)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !4729, file: !2085, line: 584, baseType: !79, size: 16, offset: 1520)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !4729, file: !2085, line: 584, baseType: !79, size: 16, offset: 1536)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !4729, file: !2085, line: 584, baseType: !79, size: 16, offset: 1552)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !4729, file: !2085, line: 584, baseType: !79, size: 16, offset: 1568)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !4729, file: !2085, line: 584, baseType: !79, size: 16, offset: 1584)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "ray_totsamp", scope: !4729, file: !2085, line: 584, baseType: !79, size: 16, offset: 1600)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !4729, file: !2085, line: 585, baseType: !4783, size: 16, offset: 1616)
!4783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 16, elements: !318)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "yold", scope: !4729, file: !2085, line: 585, baseType: !4783, size: 16, offset: 1632)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !4729, file: !2085, line: 586, baseType: !57, size: 32, offset: 1664)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !4729, file: !2085, line: 586, baseType: !57, size: 32, offset: 1696)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !4729, file: !2085, line: 586, baseType: !57, size: 32, offset: 1728)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !4729, file: !2085, line: 587, baseType: !57, size: 32, offset: 1760)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "sunsky", scope: !4729, file: !2085, line: 590, baseType: !4790, size: 64, offset: 1792)
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SunSky", file: !4792, line: 32, size: 1792, elements: !4793)
!4792 = !DIFile(filename: "blender/source/blender/render/intern/include/sunsky.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4793 = !{!4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827}
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "effect_type", scope: !4791, file: !4792, line: 33, baseType: !79, size: 16)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !4791, file: !4792, line: 33, baseType: !79, size: 16, offset: 16)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !4791, file: !4792, line: 33, baseType: !79, size: 16, offset: 32)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "turbidity", scope: !4791, file: !4792, line: 34, baseType: !57, size: 32, offset: 64)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "theta", scope: !4791, file: !4792, line: 35, baseType: !57, size: 32, offset: 96)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "phi", scope: !4791, file: !4792, line: 35, baseType: !57, size: 32, offset: 128)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "toSun", scope: !4791, file: !4792, line: 37, baseType: !217, size: 96, offset: 160)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "sunSolidAngle", scope: !4791, file: !4792, line: 40, baseType: !57, size: 32, offset: 256)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_Y", scope: !4791, file: !4792, line: 42, baseType: !57, size: 32, offset: 288)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_x", scope: !4791, file: !4792, line: 42, baseType: !57, size: 32, offset: 320)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_y", scope: !4791, file: !4792, line: 42, baseType: !57, size: 32, offset: 352)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "perez_Y", scope: !4791, file: !4792, line: 44, baseType: !4806, size: 160, offset: 384)
!4806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 160, elements: !818)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "perez_x", scope: !4791, file: !4792, line: 44, baseType: !4806, size: 160, offset: 544)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "perez_y", scope: !4791, file: !4792, line: 44, baseType: !4806, size: 160, offset: 704)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !4791, file: !4792, line: 47, baseType: !57, size: 32, offset: 864)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !4791, file: !4792, line: 48, baseType: !57, size: 32, offset: 896)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !4791, file: !4792, line: 49, baseType: !57, size: 32, offset: 928)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !4791, file: !4792, line: 50, baseType: !57, size: 32, offset: 960)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !4791, file: !4792, line: 51, baseType: !57, size: 32, offset: 992)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !4791, file: !4792, line: 52, baseType: !57, size: 32, offset: 1024)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !4791, file: !4792, line: 53, baseType: !57, size: 32, offset: 1056)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "atm_HGg", scope: !4791, file: !4792, line: 55, baseType: !57, size: 32, offset: 1088)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "atm_SunIntensity", scope: !4791, file: !4792, line: 57, baseType: !57, size: 32, offset: 1120)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "atm_InscatteringMultiplier", scope: !4791, file: !4792, line: 58, baseType: !57, size: 32, offset: 1152)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "atm_ExtinctionMultiplier", scope: !4791, file: !4792, line: 59, baseType: !57, size: 32, offset: 1184)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRayMultiplier", scope: !4791, file: !4792, line: 60, baseType: !57, size: 32, offset: 1216)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMieMultiplier", scope: !4791, file: !4792, line: 61, baseType: !57, size: 32, offset: 1248)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "atm_DistanceMultiplier", scope: !4791, file: !4792, line: 62, baseType: !57, size: 32, offset: 1280)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRay", scope: !4791, file: !4792, line: 64, baseType: !217, size: 96, offset: 1312)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashRay", scope: !4791, file: !4792, line: 65, baseType: !217, size: 96, offset: 1408)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMie", scope: !4791, file: !4792, line: 66, baseType: !217, size: 96, offset: 1504)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashMie", scope: !4791, file: !4792, line: 67, baseType: !217, size: 96, offset: 1600)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRM", scope: !4791, file: !4792, line: 68, baseType: !217, size: 96, offset: 1696)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "shb", scope: !4729, file: !2085, line: 592, baseType: !4829, size: 64, offset: 1856)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadBuf", file: !2085, line: 297, size: 2240, elements: !4831)
!4831 = !{!4832, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !4830, file: !2085, line: 299, baseType: !79, size: 16)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !4830, file: !2085, line: 299, baseType: !79, size: 16, offset: 16)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "totbuf", scope: !4830, file: !2085, line: 299, baseType: !79, size: 16, offset: 32)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !4830, file: !2085, line: 300, baseType: !488, size: 512, offset: 64)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !4830, file: !2085, line: 301, baseType: !488, size: 512, offset: 576)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !4830, file: !2085, line: 302, baseType: !488, size: 512, offset: 1088)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !4830, file: !2085, line: 303, baseType: !692, size: 64, offset: 1600)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4830, file: !2085, line: 303, baseType: !692, size: 64, offset: 1664)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4830, file: !2085, line: 304, baseType: !57, size: 32, offset: 1728)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !4830, file: !2085, line: 304, baseType: !57, size: 32, offset: 1760)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !4830, file: !2085, line: 304, baseType: !57, size: 32, offset: 1792)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4830, file: !2085, line: 304, baseType: !57, size: 32, offset: 1824)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !4830, file: !2085, line: 304, baseType: !57, size: 32, offset: 1856)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4830, file: !2085, line: 305, baseType: !791, size: 96, offset: 1888)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4830, file: !2085, line: 306, baseType: !5, size: 32, offset: 1984)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !4830, file: !2085, line: 306, baseType: !5, size: 32, offset: 2016)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !4830, file: !2085, line: 307, baseType: !170, size: 128, offset: 2048)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "isb_result", scope: !4830, file: !2085, line: 310, baseType: !4850, size: 64, offset: 2176)
!4850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4851, size: 64, elements: !318)
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBData", file: !4853, line: 106, size: 320, elements: !4854)
!4853 = !DIFile(filename: "blender/source/blender/render/intern/include/shadbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4854 = !{!4855, !4857, !4868, !4871, !4872, !4873, !4874}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "shadfacs", scope: !4852, file: !4853, line: 107, baseType: !4856, size: 64)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "shadfaca", scope: !4852, file: !4853, line: 108, baseType: !4858, size: 64, offset: 64)
!4858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4859, size: 64)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISBShadfacA", file: !4853, line: 103, baseType: !4861)
!4861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBShadfacA", file: !4853, line: 98, size: 192, elements: !4862)
!4862 = !{!4863, !4865, !4866, !4867}
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4861, file: !4853, line: 99, baseType: !4864, size: 64)
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !4861, file: !4853, line: 100, baseType: !5, size: 32, offset: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !4861, file: !4853, line: 101, baseType: !5, size: 32, offset: 96)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !4861, file: !4853, line: 102, baseType: !57, size: 32, offset: 128)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "memarena", scope: !4852, file: !4853, line: 109, baseType: !4869, size: 64, offset: 128)
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !2085, line: 57, flags: DIFlagFwdDecl)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "minx", scope: !4852, file: !4853, line: 110, baseType: !5, size: 32, offset: 192)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !4852, file: !4853, line: 110, baseType: !5, size: 32, offset: 224)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !4852, file: !4853, line: 110, baseType: !5, size: 32, offset: 256)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !4852, file: !4853, line: 110, baseType: !5, size: 32, offset: 288)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !4729, file: !2085, line: 593, baseType: !692, size: 64, offset: 1920)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !4729, file: !2085, line: 595, baseType: !1639, size: 288, offset: 1984)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "spottexfac", scope: !4729, file: !2085, line: 596, baseType: !57, size: 32, offset: 2272)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "sh_invcampos", scope: !4729, file: !2085, line: 597, baseType: !217, size: 96, offset: 2304)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "sh_zfac", scope: !4729, file: !2085, line: 597, baseType: !57, size: 32, offset: 2400)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "lampmat", scope: !4729, file: !2085, line: 599, baseType: !488, size: 512, offset: 2432)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4729, file: !2085, line: 601, baseType: !1639, size: 288, offset: 2944)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !4729, file: !2085, line: 602, baseType: !379, size: 768, offset: 3232)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "areasize", scope: !4729, file: !2085, line: 602, baseType: !57, size: 32, offset: 4000)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "shadsamp", scope: !4729, file: !2085, line: 605, baseType: !4885, size: 64, offset: 4032)
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSample", file: !2085, line: 538, baseType: !4887)
!4887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSample", file: !2085, line: 536, size: 2560, elements: !4888)
!4888 = !{!4889}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4887, file: !2085, line: 537, baseType: !4890, size: 2560)
!4890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4891, size: 2560, elements: !2879)
!4891 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSubSample", file: !2085, line: 534, baseType: !4892)
!4892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSubSample", file: !2085, line: 531, size: 160, elements: !4893)
!4893 = !{!4894, !4895}
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !4892, file: !2085, line: 532, baseType: !5, size: 32)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !4892, file: !2085, line: 533, baseType: !299, size: 128, offset: 32)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !4729, file: !2085, line: 608, baseType: !4897, size: 64, offset: 4096)
!4897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3064, size: 64, elements: !318)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !4729, file: !2085, line: 610, baseType: !343, size: 1152, offset: 4160)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "thread_assigned", scope: !4729, file: !2085, line: 613, baseType: !5, size: 32, offset: 5312)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ready", scope: !4729, file: !2085, line: 614, baseType: !5, size: 32, offset: 5344)
!4901 = !DILocation(line: 724, column: 11, scope: !4691)
!4902 = !DILocalVariable(name: "rlpp", scope: !4691, file: !1, line: 725, type: !2878)
!4903 = !DILocation(line: 725, column: 15, scope: !4691)
!4904 = !DILocalVariable(name: "totsample", scope: !4691, file: !1, line: 726, type: !5)
!4905 = !DILocation(line: 726, column: 6, scope: !4691)
!4906 = !DILocalVariable(name: "x", scope: !4691, file: !1, line: 727, type: !5)
!4907 = !DILocation(line: 727, column: 6, scope: !4691)
!4908 = !DILocalVariable(name: "y", scope: !4691, file: !1, line: 727, type: !5)
!4909 = !DILocation(line: 727, column: 9, scope: !4691)
!4910 = !DILocalVariable(name: "od", scope: !4691, file: !1, line: 727, type: !5)
!4911 = !DILocation(line: 727, column: 12, scope: !4691)
!4912 = !DILocation(line: 729, column: 31, scope: !4691)
!4913 = !DILocation(line: 729, column: 35, scope: !4691)
!4914 = !DILocation(line: 729, column: 39, scope: !4691)
!4915 = !DILocation(line: 729, column: 13, scope: !4691)
!4916 = !DILocation(line: 729, column: 11, scope: !4691)
!4917 = !DILocation(line: 732, column: 6, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4691, file: !1, line: 732, column: 6)
!4919 = !DILocation(line: 732, column: 10, scope: !4918)
!4920 = !DILocation(line: 732, column: 15, scope: !4918)
!4921 = !DILocation(line: 732, column: 6, scope: !4691)
!4922 = !DILocation(line: 732, column: 23, scope: !4918)
!4923 = !DILocation(line: 733, column: 14, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4691, file: !1, line: 733, column: 2)
!4925 = !DILocation(line: 733, column: 18, scope: !4924)
!4926 = !DILocation(line: 733, column: 25, scope: !4924)
!4927 = !DILocation(line: 733, column: 12, scope: !4924)
!4928 = !DILocation(line: 733, column: 7, scope: !4924)
!4929 = !DILocation(line: 733, column: 32, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4924, file: !1, line: 733, column: 2)
!4931 = !DILocation(line: 733, column: 2, scope: !4924)
!4932 = !DILocation(line: 734, column: 7, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4930, file: !1, line: 734, column: 7)
!4934 = !DILocation(line: 734, column: 14, scope: !4933)
!4935 = !DILocation(line: 734, column: 22, scope: !4933)
!4936 = !DILocation(line: 734, column: 7, scope: !4930)
!4937 = !DILocation(line: 735, column: 4, scope: !4933)
!4938 = !DILocation(line: 734, column: 24, scope: !4933)
!4939 = !DILocation(line: 733, column: 46, scope: !4930)
!4940 = !DILocation(line: 733, column: 53, scope: !4930)
!4941 = !DILocation(line: 733, column: 44, scope: !4930)
!4942 = !DILocation(line: 733, column: 2, scope: !4930)
!4943 = distinct !{!4943, !4931, !4944}
!4944 = !DILocation(line: 735, column: 4, scope: !4924)
!4945 = !DILocation(line: 737, column: 6, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4691, file: !1, line: 737, column: 6)
!4947 = !DILocation(line: 737, column: 11, scope: !4946)
!4948 = !DILocation(line: 737, column: 6, scope: !4691)
!4949 = !DILocation(line: 737, column: 19, scope: !4946)
!4950 = !DILocation(line: 740, column: 19, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4691, file: !1, line: 740, column: 2)
!4952 = !DILocation(line: 740, column: 10, scope: !4951)
!4953 = !DILocation(line: 740, column: 9, scope: !4951)
!4954 = !DILocation(line: 740, column: 7, scope: !4951)
!4955 = !DILocation(line: 740, column: 26, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4951, file: !1, line: 740, column: 2)
!4957 = !DILocation(line: 740, column: 2, scope: !4951)
!4958 = !DILocation(line: 741, column: 8, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4956, file: !1, line: 740, column: 44)
!4960 = !DILocation(line: 741, column: 12, scope: !4959)
!4961 = !DILocation(line: 741, column: 6, scope: !4959)
!4962 = !DILocation(line: 742, column: 7, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4959, file: !1, line: 742, column: 7)
!4964 = !DILocation(line: 742, column: 12, scope: !4963)
!4965 = !DILocation(line: 742, column: 16, scope: !4963)
!4966 = !DILocation(line: 742, column: 25, scope: !4963)
!4967 = !DILocation(line: 742, column: 28, scope: !4963)
!4968 = !DILocation(line: 742, column: 33, scope: !4963)
!4969 = !DILocation(line: 742, column: 40, scope: !4963)
!4970 = !DILocation(line: 742, column: 44, scope: !4963)
!4971 = !DILocation(line: 742, column: 49, scope: !4963)
!4972 = !DILocation(line: 742, column: 57, scope: !4963)
!4973 = !DILocation(line: 742, column: 69, scope: !4963)
!4974 = !DILocation(line: 742, column: 7, scope: !4959)
!4975 = !DILocation(line: 743, column: 4, scope: !4963)
!4976 = !DILocation(line: 744, column: 2, scope: !4959)
!4977 = !DILocation(line: 740, column: 34, scope: !4956)
!4978 = !DILocation(line: 740, column: 38, scope: !4956)
!4979 = !DILocation(line: 740, column: 32, scope: !4956)
!4980 = !DILocation(line: 740, column: 2, scope: !4956)
!4981 = distinct !{!4981, !4957, !4982}
!4982 = !DILocation(line: 744, column: 2, scope: !4951)
!4983 = !DILocation(line: 746, column: 6, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4691, file: !1, line: 746, column: 6)
!4985 = !DILocation(line: 746, column: 8, scope: !4984)
!4986 = !DILocation(line: 746, column: 6, scope: !4691)
!4987 = !DILocation(line: 747, column: 3, scope: !4984)
!4988 = !DILocation(line: 750, column: 9, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4691, file: !1, line: 750, column: 2)
!4990 = !DILocation(line: 750, column: 13, scope: !4989)
!4991 = !DILocation(line: 750, column: 22, scope: !4989)
!4992 = !DILocation(line: 750, column: 8, scope: !4989)
!4993 = !DILocation(line: 750, column: 7, scope: !4989)
!4994 = !DILocation(line: 750, column: 28, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4989, file: !1, line: 750, column: 2)
!4996 = !DILocation(line: 750, column: 30, scope: !4995)
!4997 = !DILocation(line: 750, column: 34, scope: !4995)
!4998 = !DILocation(line: 750, column: 43, scope: !4995)
!4999 = !DILocation(line: 750, column: 29, scope: !4995)
!5000 = !DILocation(line: 750, column: 2, scope: !4989)
!5001 = !DILocation(line: 751, column: 10, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !1, line: 751, column: 3)
!5003 = distinct !DILexicalBlock(scope: !4995, file: !1, line: 750, column: 54)
!5004 = !DILocation(line: 751, column: 14, scope: !5002)
!5005 = !DILocation(line: 751, column: 23, scope: !5002)
!5006 = !DILocation(line: 751, column: 9, scope: !5002)
!5007 = !DILocation(line: 751, column: 8, scope: !5002)
!5008 = !DILocation(line: 751, column: 29, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5002, file: !1, line: 751, column: 3)
!5010 = !DILocation(line: 751, column: 31, scope: !5009)
!5011 = !DILocation(line: 751, column: 35, scope: !5009)
!5012 = !DILocation(line: 751, column: 44, scope: !5009)
!5013 = !DILocation(line: 751, column: 30, scope: !5009)
!5014 = !DILocation(line: 751, column: 3, scope: !5002)
!5015 = !DILocalVariable(name: "sample", scope: !5016, file: !1, line: 752, type: !5)
!5016 = distinct !DILexicalBlock(scope: !5009, file: !1, line: 751, column: 61)
!5017 = !DILocation(line: 752, column: 8, scope: !5016)
!5018 = !DILocation(line: 754, column: 15, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !1, line: 754, column: 4)
!5020 = !DILocation(line: 754, column: 9, scope: !5019)
!5021 = !DILocation(line: 754, column: 19, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5019, file: !1, line: 754, column: 4)
!5023 = !DILocation(line: 754, column: 26, scope: !5022)
!5024 = !DILocation(line: 754, column: 25, scope: !5022)
!5025 = !DILocation(line: 754, column: 4, scope: !5019)
!5026 = !DILocalVariable(name: "zrect", scope: !5027, file: !1, line: 755, type: !2017)
!5027 = distinct !DILexicalBlock(scope: !5022, file: !1, line: 754, column: 47)
!5028 = !DILocation(line: 755, column: 18, scope: !5027)
!5029 = !DILocation(line: 755, column: 52, scope: !5027)
!5030 = !DILocation(line: 755, column: 47, scope: !5027)
!5031 = !DILocation(line: 755, column: 25, scope: !5027)
!5032 = !DILocation(line: 755, column: 75, scope: !5027)
!5033 = !DILocation(line: 755, column: 73, scope: !5027)
!5034 = !DILocalVariable(name: "rgbrect", scope: !5027, file: !1, line: 756, type: !692)
!5035 = !DILocation(line: 756, column: 12, scope: !5027)
!5036 = !DILocation(line: 756, column: 27, scope: !5027)
!5037 = !DILocation(line: 756, column: 22, scope: !5027)
!5038 = !DILocation(line: 756, column: 36, scope: !5027)
!5039 = !DILocation(line: 756, column: 46, scope: !5027)
!5040 = !DILocation(line: 756, column: 45, scope: !5027)
!5041 = !DILocation(line: 756, column: 42, scope: !5027)
!5042 = !DILocalVariable(name: "rgb", scope: !5027, file: !1, line: 757, type: !217)
!5043 = !DILocation(line: 757, column: 11, scope: !5027)
!5044 = !DILocalVariable(name: "done", scope: !5027, file: !1, line: 758, type: !770)
!5045 = !DILocation(line: 758, column: 10, scope: !5027)
!5046 = !DILocation(line: 760, column: 22, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5027, file: !1, line: 760, column: 5)
!5048 = !DILocation(line: 760, column: 13, scope: !5047)
!5049 = !DILocation(line: 760, column: 12, scope: !5047)
!5050 = !DILocation(line: 760, column: 10, scope: !5047)
!5051 = !DILocation(line: 760, column: 29, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5047, file: !1, line: 760, column: 5)
!5053 = !DILocation(line: 760, column: 5, scope: !5047)
!5054 = !DILocation(line: 763, column: 11, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5052, file: !1, line: 760, column: 47)
!5056 = !DILocation(line: 763, column: 15, scope: !5055)
!5057 = !DILocation(line: 763, column: 9, scope: !5055)
!5058 = !DILocation(line: 764, column: 10, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 764, column: 10)
!5060 = !DILocation(line: 764, column: 15, scope: !5059)
!5061 = !DILocation(line: 764, column: 19, scope: !5059)
!5062 = !DILocation(line: 764, column: 28, scope: !5059)
!5063 = !DILocation(line: 764, column: 31, scope: !5059)
!5064 = !DILocation(line: 764, column: 36, scope: !5059)
!5065 = !DILocation(line: 764, column: 10, scope: !5055)
!5066 = !DILocation(line: 767, column: 12, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5068, file: !1, line: 767, column: 11)
!5068 = distinct !DILexicalBlock(scope: !5059, file: !1, line: 764, column: 44)
!5069 = !DILocation(line: 767, column: 11, scope: !5067)
!5070 = !DILocation(line: 767, column: 18, scope: !5067)
!5071 = !DILocation(line: 767, column: 29, scope: !5067)
!5072 = !DILocation(line: 767, column: 32, scope: !5067)
!5073 = !DILocation(line: 767, column: 42, scope: !5067)
!5074 = !DILocation(line: 767, column: 11, scope: !5068)
!5075 = !DILocation(line: 768, column: 8, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5067, file: !1, line: 767, column: 50)
!5077 = !DILocation(line: 771, column: 12, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5068, file: !1, line: 771, column: 11)
!5079 = !DILocation(line: 771, column: 17, scope: !5078)
!5080 = !DILocation(line: 771, column: 25, scope: !5078)
!5081 = !DILocation(line: 771, column: 37, scope: !5078)
!5082 = !DILocation(line: 771, column: 11, scope: !5068)
!5083 = !DILocalVariable(name: "tmp_rgb", scope: !5084, file: !1, line: 772, type: !217)
!5084 = distinct !DILexicalBlock(scope: !5078, file: !1, line: 771, column: 58)
!5085 = !DILocation(line: 772, column: 14, scope: !5084)
!5086 = !DILocation(line: 775, column: 12, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5084, file: !1, line: 775, column: 12)
!5088 = !DILocation(line: 775, column: 16, scope: !5087)
!5089 = !DILocation(line: 775, column: 20, scope: !5087)
!5090 = !DILocation(line: 775, column: 32, scope: !5087)
!5091 = !DILocation(line: 775, column: 12, scope: !5084)
!5092 = !DILocation(line: 776, column: 9, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5087, file: !1, line: 775, column: 39)
!5094 = !DILocation(line: 779, column: 19, scope: !5084)
!5095 = !DILocation(line: 779, column: 28, scope: !5084)
!5096 = !DILocation(line: 779, column: 8, scope: !5084)
!5097 = !DILocation(line: 780, column: 12, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5084, file: !1, line: 780, column: 12)
!5099 = !DILocation(line: 780, column: 22, scope: !5098)
!5100 = !DILocation(line: 780, column: 12, scope: !5084)
!5101 = !DILocation(line: 781, column: 19, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5098, file: !1, line: 780, column: 30)
!5103 = !DILocation(line: 781, column: 33, scope: !5102)
!5104 = !DILocation(line: 781, column: 32, scope: !5102)
!5105 = !DILocation(line: 781, column: 9, scope: !5102)
!5106 = !DILocation(line: 782, column: 8, scope: !5102)
!5107 = !DILocation(line: 783, column: 22, scope: !5084)
!5108 = !DILocation(line: 783, column: 27, scope: !5084)
!5109 = !DILocation(line: 783, column: 35, scope: !5084)
!5110 = !DILocation(line: 783, column: 44, scope: !5084)
!5111 = !DILocation(line: 783, column: 47, scope: !5084)
!5112 = !DILocation(line: 783, column: 51, scope: !5084)
!5113 = !DILocation(line: 783, column: 50, scope: !5084)
!5114 = !DILocation(line: 783, column: 8, scope: !5084)
!5115 = !DILocation(line: 784, column: 12, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5084, file: !1, line: 784, column: 12)
!5117 = !DILocation(line: 784, column: 22, scope: !5116)
!5118 = !DILocation(line: 784, column: 12, scope: !5084)
!5119 = !DILocation(line: 785, column: 19, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5116, file: !1, line: 784, column: 30)
!5121 = !DILocation(line: 785, column: 28, scope: !5120)
!5122 = !DILocation(line: 785, column: 9, scope: !5120)
!5123 = !DILocation(line: 786, column: 8, scope: !5120)
!5124 = !DILocation(line: 788, column: 12, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5084, file: !1, line: 788, column: 12)
!5126 = !DILocation(line: 788, column: 16, scope: !5125)
!5127 = !DILocation(line: 788, column: 12, scope: !5084)
!5128 = !DILocation(line: 789, column: 20, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5125, file: !1, line: 788, column: 21)
!5130 = !DILocation(line: 789, column: 25, scope: !5129)
!5131 = !DILocation(line: 789, column: 9, scope: !5129)
!5132 = !DILocation(line: 790, column: 14, scope: !5129)
!5133 = !DILocation(line: 791, column: 8, scope: !5129)
!5134 = !DILocation(line: 793, column: 23, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5125, file: !1, line: 792, column: 13)
!5136 = !DILocation(line: 793, column: 22, scope: !5135)
!5137 = !DILocation(line: 793, column: 37, scope: !5135)
!5138 = !DILocation(line: 793, column: 36, scope: !5135)
!5139 = !DILocation(line: 793, column: 30, scope: !5135)
!5140 = !DILocation(line: 793, column: 9, scope: !5135)
!5141 = !DILocation(line: 793, column: 16, scope: !5135)
!5142 = !DILocation(line: 794, column: 23, scope: !5135)
!5143 = !DILocation(line: 794, column: 22, scope: !5135)
!5144 = !DILocation(line: 794, column: 37, scope: !5135)
!5145 = !DILocation(line: 794, column: 36, scope: !5135)
!5146 = !DILocation(line: 794, column: 30, scope: !5135)
!5147 = !DILocation(line: 794, column: 9, scope: !5135)
!5148 = !DILocation(line: 794, column: 16, scope: !5135)
!5149 = !DILocation(line: 795, column: 23, scope: !5135)
!5150 = !DILocation(line: 795, column: 22, scope: !5135)
!5151 = !DILocation(line: 795, column: 37, scope: !5135)
!5152 = !DILocation(line: 795, column: 36, scope: !5135)
!5153 = !DILocation(line: 795, column: 30, scope: !5135)
!5154 = !DILocation(line: 795, column: 9, scope: !5135)
!5155 = !DILocation(line: 795, column: 16, scope: !5135)
!5156 = !DILocation(line: 797, column: 7, scope: !5084)
!5157 = !DILocation(line: 798, column: 6, scope: !5068)
!5158 = !DILocation(line: 799, column: 5, scope: !5055)
!5159 = !DILocation(line: 760, column: 37, scope: !5052)
!5160 = !DILocation(line: 760, column: 41, scope: !5052)
!5161 = !DILocation(line: 760, column: 35, scope: !5052)
!5162 = !DILocation(line: 760, column: 5, scope: !5052)
!5163 = distinct !{!5163, !5053, !5164}
!5164 = !DILocation(line: 799, column: 5, scope: !5047)
!5165 = !DILocation(line: 802, column: 9, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5027, file: !1, line: 802, column: 9)
!5167 = !DILocation(line: 802, column: 9, scope: !5027)
!5168 = !DILocation(line: 803, column: 17, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5166, file: !1, line: 802, column: 15)
!5170 = !DILocation(line: 803, column: 26, scope: !5169)
!5171 = !DILocation(line: 803, column: 6, scope: !5169)
!5172 = !DILocation(line: 804, column: 5, scope: !5169)
!5173 = !DILocation(line: 805, column: 4, scope: !5027)
!5174 = !DILocation(line: 754, column: 43, scope: !5022)
!5175 = !DILocation(line: 754, column: 4, scope: !5022)
!5176 = distinct !{!5176, !5025, !5177}
!5177 = !DILocation(line: 805, column: 4, scope: !5019)
!5178 = !DILocation(line: 806, column: 3, scope: !5016)
!5179 = !DILocation(line: 751, column: 51, scope: !5009)
!5180 = !DILocation(line: 751, column: 57, scope: !5009)
!5181 = !DILocation(line: 751, column: 3, scope: !5009)
!5182 = distinct !{!5182, !5014, !5183}
!5183 = !DILocation(line: 806, column: 3, scope: !5002)
!5184 = !DILocation(line: 807, column: 2, scope: !5003)
!5185 = !DILocation(line: 750, column: 50, scope: !4995)
!5186 = !DILocation(line: 750, column: 2, scope: !4995)
!5187 = distinct !{!5187, !5000, !5188}
!5188 = !DILocation(line: 807, column: 2, scope: !4989)
!5189 = !DILocation(line: 808, column: 1, scope: !4691)
!5190 = distinct !DISubprogram(name: "sky_tile", scope: !1, file: !1, line: 677, type: !2861, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!5191 = !DILocalVariable(name: "pa", arg: 1, scope: !5190, file: !1, line: 677, type: !2083)
!5192 = !DILocation(line: 677, column: 34, scope: !5190)
!5193 = !DILocalVariable(name: "rl", arg: 2, scope: !5190, file: !1, line: 677, type: !88)
!5194 = !DILocation(line: 677, column: 51, scope: !5190)
!5195 = !DILocalVariable(name: "rlpp", scope: !5190, file: !1, line: 679, type: !2878)
!5196 = !DILocation(line: 679, column: 15, scope: !5190)
!5197 = !DILocalVariable(name: "x", scope: !5190, file: !1, line: 680, type: !5)
!5198 = !DILocation(line: 680, column: 6, scope: !5190)
!5199 = !DILocalVariable(name: "y", scope: !5190, file: !1, line: 680, type: !5)
!5200 = !DILocation(line: 680, column: 9, scope: !5190)
!5201 = !DILocalVariable(name: "od", scope: !5190, file: !1, line: 680, type: !5)
!5202 = !DILocation(line: 680, column: 12, scope: !5190)
!5203 = !DILocalVariable(name: "totsample", scope: !5190, file: !1, line: 680, type: !5)
!5204 = !DILocation(line: 680, column: 18, scope: !5190)
!5205 = !DILocation(line: 682, column: 10, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5190, file: !1, line: 682, column: 6)
!5207 = !DILocation(line: 682, column: 6, scope: !5206)
!5208 = !DILocation(line: 682, column: 19, scope: !5206)
!5209 = !DILocation(line: 682, column: 6, scope: !5190)
!5210 = !DILocation(line: 683, column: 3, scope: !5206)
!5211 = !DILocation(line: 685, column: 31, scope: !5190)
!5212 = !DILocation(line: 685, column: 35, scope: !5190)
!5213 = !DILocation(line: 685, column: 39, scope: !5190)
!5214 = !DILocation(line: 685, column: 13, scope: !5190)
!5215 = !DILocation(line: 685, column: 11, scope: !5190)
!5216 = !DILocation(line: 687, column: 9, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5190, file: !1, line: 687, column: 2)
!5218 = !DILocation(line: 687, column: 13, scope: !5217)
!5219 = !DILocation(line: 687, column: 22, scope: !5217)
!5220 = !DILocation(line: 687, column: 8, scope: !5217)
!5221 = !DILocation(line: 687, column: 7, scope: !5217)
!5222 = !DILocation(line: 687, column: 28, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5217, file: !1, line: 687, column: 2)
!5224 = !DILocation(line: 687, column: 30, scope: !5223)
!5225 = !DILocation(line: 687, column: 34, scope: !5223)
!5226 = !DILocation(line: 687, column: 43, scope: !5223)
!5227 = !DILocation(line: 687, column: 29, scope: !5223)
!5228 = !DILocation(line: 687, column: 2, scope: !5217)
!5229 = !DILocation(line: 688, column: 10, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5231, file: !1, line: 688, column: 3)
!5231 = distinct !DILexicalBlock(scope: !5223, file: !1, line: 687, column: 54)
!5232 = !DILocation(line: 688, column: 14, scope: !5230)
!5233 = !DILocation(line: 688, column: 23, scope: !5230)
!5234 = !DILocation(line: 688, column: 9, scope: !5230)
!5235 = !DILocation(line: 688, column: 8, scope: !5230)
!5236 = !DILocation(line: 688, column: 29, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5230, file: !1, line: 688, column: 3)
!5238 = !DILocation(line: 688, column: 31, scope: !5237)
!5239 = !DILocation(line: 688, column: 35, scope: !5237)
!5240 = !DILocation(line: 688, column: 44, scope: !5237)
!5241 = !DILocation(line: 688, column: 30, scope: !5237)
!5242 = !DILocation(line: 688, column: 3, scope: !5230)
!5243 = !DILocalVariable(name: "col", scope: !5244, file: !1, line: 689, type: !299)
!5244 = distinct !DILexicalBlock(scope: !5237, file: !1, line: 688, column: 62)
!5245 = !DILocation(line: 689, column: 10, scope: !5244)
!5246 = !DILocalVariable(name: "sample", scope: !5244, file: !1, line: 690, type: !5)
!5247 = !DILocation(line: 690, column: 8, scope: !5244)
!5248 = !DILocalVariable(name: "done", scope: !5244, file: !1, line: 691, type: !770)
!5249 = !DILocation(line: 691, column: 9, scope: !5244)
!5250 = !DILocation(line: 693, column: 15, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5244, file: !1, line: 693, column: 4)
!5252 = !DILocation(line: 693, column: 9, scope: !5251)
!5253 = !DILocation(line: 693, column: 20, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 693, column: 4)
!5255 = !DILocation(line: 693, column: 27, scope: !5254)
!5256 = !DILocation(line: 693, column: 26, scope: !5254)
!5257 = !DILocation(line: 693, column: 4, scope: !5251)
!5258 = !DILocalVariable(name: "pass", scope: !5259, file: !1, line: 694, type: !692)
!5259 = distinct !DILexicalBlock(scope: !5254, file: !1, line: 693, column: 48)
!5260 = !DILocation(line: 694, column: 12, scope: !5259)
!5261 = !DILocation(line: 694, column: 23, scope: !5259)
!5262 = !DILocation(line: 694, column: 18, scope: !5259)
!5263 = !DILocation(line: 694, column: 32, scope: !5259)
!5264 = !DILocation(line: 694, column: 40, scope: !5259)
!5265 = !DILocation(line: 694, column: 38, scope: !5259)
!5266 = !DILocation(line: 696, column: 9, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5259, file: !1, line: 696, column: 9)
!5268 = !DILocation(line: 696, column: 16, scope: !5267)
!5269 = !DILocation(line: 696, column: 9, scope: !5259)
!5270 = !DILocation(line: 698, column: 10, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 698, column: 10)
!5272 = distinct !DILexicalBlock(scope: !5267, file: !1, line: 696, column: 23)
!5273 = !DILocation(line: 698, column: 14, scope: !5271)
!5274 = !DILocation(line: 698, column: 10, scope: !5272)
!5275 = !DILocation(line: 699, column: 21, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5271, file: !1, line: 698, column: 19)
!5277 = !DILocation(line: 699, column: 26, scope: !5276)
!5278 = !DILocation(line: 699, column: 29, scope: !5276)
!5279 = !DILocation(line: 699, column: 32, scope: !5276)
!5280 = !DILocation(line: 699, column: 36, scope: !5276)
!5281 = !DILocation(line: 699, column: 7, scope: !5276)
!5282 = !DILocation(line: 700, column: 12, scope: !5276)
!5283 = !DILocation(line: 701, column: 6, scope: !5276)
!5284 = !DILocation(line: 703, column: 10, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 703, column: 10)
!5286 = !DILocation(line: 703, column: 17, scope: !5285)
!5287 = !DILocation(line: 703, column: 10, scope: !5272)
!5288 = !DILocation(line: 704, column: 18, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5285, file: !1, line: 703, column: 25)
!5290 = !DILocation(line: 704, column: 24, scope: !5289)
!5291 = !DILocation(line: 704, column: 7, scope: !5289)
!5292 = !DILocation(line: 705, column: 7, scope: !5289)
!5293 = !DILocation(line: 705, column: 15, scope: !5289)
!5294 = !DILocation(line: 706, column: 6, scope: !5289)
!5295 = !DILocation(line: 708, column: 26, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5285, file: !1, line: 707, column: 11)
!5297 = !DILocation(line: 708, column: 32, scope: !5296)
!5298 = !DILocation(line: 708, column: 7, scope: !5296)
!5299 = !DILocation(line: 709, column: 7, scope: !5296)
!5300 = !DILocation(line: 709, column: 15, scope: !5296)
!5301 = !DILocation(line: 711, column: 5, scope: !5272)
!5302 = !DILocation(line: 712, column: 4, scope: !5259)
!5303 = !DILocation(line: 693, column: 44, scope: !5254)
!5304 = !DILocation(line: 693, column: 4, scope: !5254)
!5305 = distinct !{!5305, !5257, !5306}
!5306 = !DILocation(line: 712, column: 4, scope: !5251)
!5307 = !DILocation(line: 713, column: 3, scope: !5244)
!5308 = !DILocation(line: 688, column: 51, scope: !5237)
!5309 = !DILocation(line: 688, column: 57, scope: !5237)
!5310 = !DILocation(line: 688, column: 3, scope: !5237)
!5311 = distinct !{!5311, !5242, !5312}
!5312 = !DILocation(line: 713, column: 3, scope: !5230)
!5313 = !DILocation(line: 715, column: 7, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5231, file: !1, line: 715, column: 7)
!5315 = !DILocation(line: 715, column: 8, scope: !5314)
!5316 = !DILocation(line: 715, column: 7, scope: !5231)
!5317 = !DILocation(line: 716, column: 10, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5314, file: !1, line: 716, column: 8)
!5319 = !DILocation(line: 716, column: 23, scope: !5318)
!5320 = !DILocation(line: 716, column: 8, scope: !5318)
!5321 = !DILocation(line: 716, column: 8, scope: !5314)
!5322 = !DILocation(line: 716, column: 29, scope: !5318)
!5323 = !DILocation(line: 716, column: 26, scope: !5318)
!5324 = !DILocation(line: 717, column: 2, scope: !5231)
!5325 = !DILocation(line: 687, column: 50, scope: !5223)
!5326 = !DILocation(line: 687, column: 2, scope: !5223)
!5327 = distinct !{!5327, !5228, !5328}
!5328 = !DILocation(line: 717, column: 2, scope: !5217)
!5329 = !DILocation(line: 718, column: 1, scope: !5190)
!5330 = distinct !DISubprogram(name: "edge_enhance_add", scope: !1, file: !1, line: 959, type: !5331, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!5331 = !DISubroutineType(types: !5332)
!5332 = !{null, !2083, !692, !692}
!5333 = !DILocalVariable(name: "pa", arg: 1, scope: !5330, file: !1, line: 959, type: !2083)
!5334 = !DILocation(line: 959, column: 42, scope: !5330)
!5335 = !DILocalVariable(name: "rectf", arg: 2, scope: !5330, file: !1, line: 959, type: !692)
!5336 = !DILocation(line: 959, column: 53, scope: !5330)
!5337 = !DILocalVariable(name: "arect", arg: 3, scope: !5330, file: !1, line: 959, type: !692)
!5338 = !DILocation(line: 959, column: 67, scope: !5330)
!5339 = !DILocalVariable(name: "addcol", scope: !5330, file: !1, line: 961, type: !299)
!5340 = !DILocation(line: 961, column: 8, scope: !5330)
!5341 = !DILocalVariable(name: "pix", scope: !5330, file: !1, line: 962, type: !5)
!5342 = !DILocation(line: 962, column: 6, scope: !5330)
!5343 = !DILocation(line: 964, column: 6, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5330, file: !1, line: 964, column: 6)
!5345 = !DILocation(line: 964, column: 11, scope: !5344)
!5346 = !DILocation(line: 964, column: 6, scope: !5330)
!5347 = !DILocation(line: 965, column: 3, scope: !5344)
!5348 = !DILocation(line: 967, column: 12, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5330, file: !1, line: 967, column: 2)
!5350 = !DILocation(line: 967, column: 16, scope: !5349)
!5351 = !DILocation(line: 967, column: 22, scope: !5349)
!5352 = !DILocation(line: 967, column: 26, scope: !5349)
!5353 = !DILocation(line: 967, column: 21, scope: !5349)
!5354 = !DILocation(line: 967, column: 10, scope: !5349)
!5355 = !DILocation(line: 967, column: 7, scope: !5349)
!5356 = !DILocation(line: 967, column: 33, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5349, file: !1, line: 967, column: 2)
!5358 = !DILocation(line: 967, column: 36, scope: !5357)
!5359 = !DILocation(line: 967, column: 2, scope: !5349)
!5360 = !DILocation(line: 968, column: 8, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5362, file: !1, line: 968, column: 7)
!5362 = distinct !DILexicalBlock(scope: !5357, file: !1, line: 967, column: 66)
!5363 = !DILocation(line: 968, column: 7, scope: !5361)
!5364 = !DILocation(line: 968, column: 14, scope: !5361)
!5365 = !DILocation(line: 968, column: 7, scope: !5362)
!5366 = !DILocation(line: 969, column: 16, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5361, file: !1, line: 968, column: 23)
!5368 = !DILocation(line: 969, column: 15, scope: !5367)
!5369 = !DILocation(line: 969, column: 28, scope: !5367)
!5370 = !DILocation(line: 969, column: 22, scope: !5367)
!5371 = !DILocation(line: 969, column: 4, scope: !5367)
!5372 = !DILocation(line: 969, column: 13, scope: !5367)
!5373 = !DILocation(line: 970, column: 16, scope: !5367)
!5374 = !DILocation(line: 970, column: 15, scope: !5367)
!5375 = !DILocation(line: 970, column: 28, scope: !5367)
!5376 = !DILocation(line: 970, column: 22, scope: !5367)
!5377 = !DILocation(line: 970, column: 4, scope: !5367)
!5378 = !DILocation(line: 970, column: 13, scope: !5367)
!5379 = !DILocation(line: 971, column: 16, scope: !5367)
!5380 = !DILocation(line: 971, column: 15, scope: !5367)
!5381 = !DILocation(line: 971, column: 28, scope: !5367)
!5382 = !DILocation(line: 971, column: 22, scope: !5367)
!5383 = !DILocation(line: 971, column: 4, scope: !5367)
!5384 = !DILocation(line: 971, column: 13, scope: !5367)
!5385 = !DILocation(line: 972, column: 16, scope: !5367)
!5386 = !DILocation(line: 972, column: 15, scope: !5367)
!5387 = !DILocation(line: 972, column: 4, scope: !5367)
!5388 = !DILocation(line: 972, column: 13, scope: !5367)
!5389 = !DILocation(line: 973, column: 22, scope: !5367)
!5390 = !DILocation(line: 973, column: 29, scope: !5367)
!5391 = !DILocation(line: 973, column: 4, scope: !5367)
!5392 = !DILocation(line: 974, column: 3, scope: !5367)
!5393 = !DILocation(line: 975, column: 2, scope: !5362)
!5394 = !DILocation(line: 967, column: 43, scope: !5357)
!5395 = !DILocation(line: 967, column: 52, scope: !5357)
!5396 = !DILocation(line: 967, column: 61, scope: !5357)
!5397 = !DILocation(line: 967, column: 2, scope: !5357)
!5398 = distinct !{!5398, !5359, !5399}
!5399 = !DILocation(line: 975, column: 2, scope: !5349)
!5400 = !DILocation(line: 976, column: 1, scope: !5330)
!5401 = distinct !DISubprogram(name: "reset_sky_speed", scope: !1, file: !1, line: 1063, type: !2861, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!5402 = !DILocalVariable(name: "pa", arg: 1, scope: !5401, file: !1, line: 1063, type: !2083)
!5403 = !DILocation(line: 1063, column: 41, scope: !5401)
!5404 = !DILocalVariable(name: "rl", arg: 2, scope: !5401, file: !1, line: 1063, type: !88)
!5405 = !DILocation(line: 1063, column: 58, scope: !5401)
!5406 = !DILocalVariable(name: "rlpp", scope: !5401, file: !1, line: 1066, type: !2878)
!5407 = !DILocation(line: 1066, column: 15, scope: !5401)
!5408 = !DILocalVariable(name: "fp", scope: !5401, file: !1, line: 1067, type: !692)
!5409 = !DILocation(line: 1067, column: 9, scope: !5401)
!5410 = !DILocalVariable(name: "a", scope: !5401, file: !1, line: 1068, type: !5)
!5411 = !DILocation(line: 1068, column: 6, scope: !5401)
!5412 = !DILocalVariable(name: "sample", scope: !5401, file: !1, line: 1068, type: !5)
!5413 = !DILocation(line: 1068, column: 9, scope: !5401)
!5414 = !DILocalVariable(name: "totsample", scope: !5401, file: !1, line: 1068, type: !5)
!5415 = !DILocation(line: 1068, column: 17, scope: !5401)
!5416 = !DILocation(line: 1070, column: 31, scope: !5401)
!5417 = !DILocation(line: 1070, column: 35, scope: !5401)
!5418 = !DILocation(line: 1070, column: 39, scope: !5401)
!5419 = !DILocation(line: 1070, column: 13, scope: !5401)
!5420 = !DILocation(line: 1070, column: 11, scope: !5401)
!5421 = !DILocation(line: 1072, column: 13, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5401, file: !1, line: 1072, column: 2)
!5423 = !DILocation(line: 1072, column: 7, scope: !5422)
!5424 = !DILocation(line: 1072, column: 18, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5422, file: !1, line: 1072, column: 2)
!5426 = !DILocation(line: 1072, column: 25, scope: !5425)
!5427 = !DILocation(line: 1072, column: 24, scope: !5425)
!5428 = !DILocation(line: 1072, column: 2, scope: !5422)
!5429 = !DILocation(line: 1073, column: 34, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5425, file: !1, line: 1072, column: 46)
!5431 = !DILocation(line: 1073, column: 29, scope: !5430)
!5432 = !DILocation(line: 1073, column: 7, scope: !5430)
!5433 = !DILocation(line: 1073, column: 5, scope: !5430)
!5434 = !DILocation(line: 1074, column: 7, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5430, file: !1, line: 1074, column: 7)
!5436 = !DILocation(line: 1074, column: 9, scope: !5435)
!5437 = !DILocation(line: 1074, column: 7, scope: !5430)
!5438 = !DILocation(line: 1074, column: 17, scope: !5435)
!5439 = !DILocation(line: 1076, column: 13, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5430, file: !1, line: 1076, column: 3)
!5441 = !DILocation(line: 1076, column: 17, scope: !5440)
!5442 = !DILocation(line: 1076, column: 12, scope: !5440)
!5443 = !DILocation(line: 1076, column: 23, scope: !5440)
!5444 = !DILocation(line: 1076, column: 27, scope: !5440)
!5445 = !DILocation(line: 1076, column: 22, scope: !5440)
!5446 = !DILocation(line: 1076, column: 33, scope: !5440)
!5447 = !DILocation(line: 1076, column: 9, scope: !5440)
!5448 = !DILocation(line: 1076, column: 8, scope: !5440)
!5449 = !DILocation(line: 1076, column: 38, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5440, file: !1, line: 1076, column: 3)
!5451 = !DILocation(line: 1076, column: 39, scope: !5450)
!5452 = !DILocation(line: 1076, column: 3, scope: !5440)
!5453 = !DILocation(line: 1077, column: 8, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5450, file: !1, line: 1077, column: 8)
!5455 = !DILocation(line: 1077, column: 11, scope: !5454)
!5456 = !DILocation(line: 1077, column: 14, scope: !5454)
!5457 = !DILocation(line: 1077, column: 8, scope: !5450)
!5458 = !DILocation(line: 1077, column: 34, scope: !5454)
!5459 = !DILocation(line: 1077, column: 37, scope: !5454)
!5460 = !DILocation(line: 1077, column: 39, scope: !5454)
!5461 = !DILocation(line: 1077, column: 17, scope: !5454)
!5462 = !DILocation(line: 1076, column: 45, scope: !5450)
!5463 = !DILocation(line: 1076, column: 3, scope: !5450)
!5464 = distinct !{!5464, !5452, !5465}
!5465 = !DILocation(line: 1077, column: 41, scope: !5440)
!5466 = !DILocation(line: 1078, column: 2, scope: !5430)
!5467 = !DILocation(line: 1072, column: 42, scope: !5425)
!5468 = !DILocation(line: 1072, column: 2, scope: !5425)
!5469 = distinct !{!5469, !5428, !5470}
!5470 = !DILocation(line: 1078, column: 2, scope: !5422)
!5471 = !DILocation(line: 1079, column: 1, scope: !5401)
!5472 = distinct !DISubprogram(name: "clamp_alpha_rgb_range", scope: !1, file: !1, line: 979, type: !2861, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!5473 = !DILocalVariable(name: "pa", arg: 1, scope: !5472, file: !1, line: 979, type: !2083)
!5474 = !DILocation(line: 979, column: 47, scope: !5472)
!5475 = !DILocalVariable(name: "rl", arg: 2, scope: !5472, file: !1, line: 979, type: !88)
!5476 = !DILocation(line: 979, column: 64, scope: !5472)
!5477 = !DILocalVariable(name: "rlpp", scope: !5472, file: !1, line: 981, type: !2878)
!5478 = !DILocation(line: 981, column: 15, scope: !5472)
!5479 = !DILocalVariable(name: "y", scope: !5472, file: !1, line: 982, type: !5)
!5480 = !DILocation(line: 982, column: 6, scope: !5472)
!5481 = !DILocalVariable(name: "sample", scope: !5472, file: !1, line: 982, type: !5)
!5482 = !DILocation(line: 982, column: 9, scope: !5472)
!5483 = !DILocalVariable(name: "totsample", scope: !5472, file: !1, line: 982, type: !5)
!5484 = !DILocation(line: 982, column: 17, scope: !5472)
!5485 = !DILocation(line: 984, column: 31, scope: !5472)
!5486 = !DILocation(line: 984, column: 35, scope: !5472)
!5487 = !DILocation(line: 984, column: 39, scope: !5472)
!5488 = !DILocation(line: 984, column: 13, scope: !5472)
!5489 = !DILocation(line: 984, column: 11, scope: !5472)
!5490 = !DILocation(line: 987, column: 6, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 987, column: 6)
!5492 = !DILocation(line: 987, column: 16, scope: !5491)
!5493 = !DILocation(line: 987, column: 6, scope: !5472)
!5494 = !DILocation(line: 988, column: 3, scope: !5491)
!5495 = !DILocation(line: 990, column: 13, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 990, column: 2)
!5497 = !DILocation(line: 990, column: 7, scope: !5496)
!5498 = !DILocation(line: 990, column: 18, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5496, file: !1, line: 990, column: 2)
!5500 = !DILocation(line: 990, column: 25, scope: !5499)
!5501 = !DILocation(line: 990, column: 24, scope: !5499)
!5502 = !DILocation(line: 990, column: 2, scope: !5496)
!5503 = !DILocalVariable(name: "rectf", scope: !5504, file: !1, line: 991, type: !692)
!5504 = distinct !DILexicalBlock(scope: !5499, file: !1, line: 990, column: 46)
!5505 = !DILocation(line: 991, column: 10, scope: !5504)
!5506 = !DILocation(line: 991, column: 22, scope: !5504)
!5507 = !DILocation(line: 991, column: 17, scope: !5504)
!5508 = !DILocation(line: 991, column: 31, scope: !5504)
!5509 = !DILocation(line: 993, column: 11, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 993, column: 3)
!5511 = !DILocation(line: 993, column: 15, scope: !5510)
!5512 = !DILocation(line: 993, column: 21, scope: !5510)
!5513 = !DILocation(line: 993, column: 25, scope: !5510)
!5514 = !DILocation(line: 993, column: 20, scope: !5510)
!5515 = !DILocation(line: 993, column: 9, scope: !5510)
!5516 = !DILocation(line: 993, column: 8, scope: !5510)
!5517 = !DILocation(line: 993, column: 32, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5510, file: !1, line: 993, column: 3)
!5519 = !DILocation(line: 993, column: 33, scope: !5518)
!5520 = !DILocation(line: 993, column: 3, scope: !5510)
!5521 = !DILocation(line: 994, column: 15, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5518, file: !1, line: 993, column: 52)
!5523 = !DILocation(line: 994, column: 4, scope: !5522)
!5524 = !DILocation(line: 994, column: 13, scope: !5522)
!5525 = !DILocation(line: 995, column: 15, scope: !5522)
!5526 = !DILocation(line: 995, column: 4, scope: !5522)
!5527 = !DILocation(line: 995, column: 13, scope: !5522)
!5528 = !DILocation(line: 996, column: 15, scope: !5522)
!5529 = !DILocation(line: 996, column: 4, scope: !5522)
!5530 = !DILocation(line: 996, column: 13, scope: !5522)
!5531 = !DILocation(line: 997, column: 4, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5533, file: !1, line: 997, column: 4)
!5533 = distinct !DILexicalBlock(scope: !5522, file: !1, line: 997, column: 4)
!5534 = !DILocation(line: 997, column: 4, scope: !5533)
!5535 = !DILocation(line: 997, column: 4, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5532, file: !1, line: 997, column: 4)
!5537 = !DILocation(line: 998, column: 3, scope: !5522)
!5538 = !DILocation(line: 993, column: 38, scope: !5518)
!5539 = !DILocation(line: 993, column: 47, scope: !5518)
!5540 = !DILocation(line: 993, column: 3, scope: !5518)
!5541 = distinct !{!5541, !5520, !5542}
!5542 = !DILocation(line: 998, column: 3, scope: !5510)
!5543 = !DILocation(line: 999, column: 2, scope: !5504)
!5544 = !DILocation(line: 990, column: 42, scope: !5499)
!5545 = !DILocation(line: 990, column: 2, scope: !5499)
!5546 = distinct !{!5546, !5502, !5547}
!5547 = !DILocation(line: 999, column: 2, scope: !5496)
!5548 = !DILocation(line: 1000, column: 1, scope: !5472)
!5549 = distinct !DISubprogram(name: "freeps", scope: !1, file: !1, line: 908, type: !5550, scopeLine: 909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!5550 = !DISubroutineType(types: !5551)
!5551 = !{null, !595}
!5552 = !DILocalVariable(name: "lb", arg: 1, scope: !5549, file: !1, line: 908, type: !595)
!5553 = !DILocation(line: 908, column: 30, scope: !5549)
!5554 = !DILocalVariable(name: "psm", scope: !5549, file: !1, line: 910, type: !59)
!5555 = !DILocation(line: 910, column: 14, scope: !5549)
!5556 = !DILocalVariable(name: "psmnext", scope: !5549, file: !1, line: 910, type: !59)
!5557 = !DILocation(line: 910, column: 20, scope: !5549)
!5558 = !DILocation(line: 912, column: 12, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5549, file: !1, line: 912, column: 2)
!5560 = !DILocation(line: 912, column: 16, scope: !5559)
!5561 = !DILocation(line: 912, column: 10, scope: !5559)
!5562 = !DILocation(line: 912, column: 7, scope: !5559)
!5563 = !DILocation(line: 912, column: 23, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5559, file: !1, line: 912, column: 2)
!5565 = !DILocation(line: 912, column: 2, scope: !5559)
!5566 = !DILocation(line: 913, column: 12, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5564, file: !1, line: 912, column: 42)
!5568 = !DILocation(line: 913, column: 17, scope: !5567)
!5569 = !DILocation(line: 913, column: 10, scope: !5567)
!5570 = !DILocation(line: 914, column: 7, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5567, file: !1, line: 914, column: 7)
!5572 = !DILocation(line: 914, column: 12, scope: !5571)
!5573 = !DILocation(line: 914, column: 7, scope: !5567)
!5574 = !DILocation(line: 915, column: 4, scope: !5571)
!5575 = !DILocation(line: 915, column: 14, scope: !5571)
!5576 = !DILocation(line: 915, column: 19, scope: !5571)
!5577 = !DILocation(line: 916, column: 3, scope: !5567)
!5578 = !DILocation(line: 916, column: 13, scope: !5567)
!5579 = !DILocation(line: 917, column: 2, scope: !5567)
!5580 = !DILocation(line: 912, column: 33, scope: !5564)
!5581 = !DILocation(line: 912, column: 31, scope: !5564)
!5582 = !DILocation(line: 912, column: 2, scope: !5564)
!5583 = distinct !{!5583, !5565, !5584}
!5584 = !DILocation(line: 917, column: 2, scope: !5559)
!5585 = !DILocation(line: 918, column: 21, scope: !5549)
!5586 = !DILocation(line: 918, column: 2, scope: !5549)
!5587 = !DILocation(line: 919, column: 1, scope: !5549)
!5588 = distinct !DISubprogram(name: "zbufshade_tile", scope: !1, file: !1, line: 1314, type: !2174, scopeLine: 1315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!5589 = !DILocalVariable(name: "pa", arg: 1, scope: !5588, file: !1, line: 1314, type: !2083)
!5590 = !DILocation(line: 1314, column: 33, scope: !5588)
!5591 = !DILocalVariable(name: "ssamp", scope: !5588, file: !1, line: 1316, type: !2872)
!5592 = !DILocation(line: 1316, column: 14, scope: !5588)
!5593 = !DILocalVariable(name: "rr", scope: !5588, file: !1, line: 1317, type: !2092)
!5594 = !DILocation(line: 1317, column: 16, scope: !5588)
!5595 = !DILocation(line: 1317, column: 20, scope: !5588)
!5596 = !DILocation(line: 1317, column: 24, scope: !5588)
!5597 = !DILocalVariable(name: "rl", scope: !5588, file: !1, line: 1318, type: !88)
!5598 = !DILocation(line: 1318, column: 15, scope: !5588)
!5599 = !DILocalVariable(name: "ps", scope: !5588, file: !1, line: 1319, type: !82)
!5600 = !DILocation(line: 1319, column: 9, scope: !5588)
!5601 = !DILocalVariable(name: "edgerect", scope: !5588, file: !1, line: 1320, type: !692)
!5602 = !DILocation(line: 1320, column: 9, scope: !5588)
!5603 = !DILocation(line: 1323, column: 5, scope: !5588)
!5604 = !DILocation(line: 1323, column: 9, scope: !5588)
!5605 = !DILocation(line: 1324, column: 5, scope: !5588)
!5606 = !DILocation(line: 1324, column: 9, scope: !5588)
!5607 = !DILocation(line: 1327, column: 13, scope: !5588)
!5608 = !DILocation(line: 1327, column: 37, scope: !5588)
!5609 = !DILocation(line: 1327, column: 41, scope: !5588)
!5610 = !DILocation(line: 1327, column: 36, scope: !5588)
!5611 = !DILocation(line: 1327, column: 47, scope: !5588)
!5612 = !DILocation(line: 1327, column: 51, scope: !5588)
!5613 = !DILocation(line: 1327, column: 46, scope: !5588)
!5614 = !DILocation(line: 1327, column: 2, scope: !5588)
!5615 = !DILocation(line: 1327, column: 6, scope: !5588)
!5616 = !DILocation(line: 1327, column: 11, scope: !5588)
!5617 = !DILocation(line: 1328, column: 13, scope: !5588)
!5618 = !DILocation(line: 1328, column: 37, scope: !5588)
!5619 = !DILocation(line: 1328, column: 41, scope: !5588)
!5620 = !DILocation(line: 1328, column: 36, scope: !5588)
!5621 = !DILocation(line: 1328, column: 47, scope: !5588)
!5622 = !DILocation(line: 1328, column: 51, scope: !5588)
!5623 = !DILocation(line: 1328, column: 46, scope: !5588)
!5624 = !DILocation(line: 1328, column: 2, scope: !5588)
!5625 = !DILocation(line: 1328, column: 6, scope: !5588)
!5626 = !DILocation(line: 1328, column: 11, scope: !5588)
!5627 = !DILocation(line: 1329, column: 13, scope: !5588)
!5628 = !DILocation(line: 1329, column: 37, scope: !5588)
!5629 = !DILocation(line: 1329, column: 41, scope: !5588)
!5630 = !DILocation(line: 1329, column: 36, scope: !5588)
!5631 = !DILocation(line: 1329, column: 47, scope: !5588)
!5632 = !DILocation(line: 1329, column: 51, scope: !5588)
!5633 = !DILocation(line: 1329, column: 46, scope: !5588)
!5634 = !DILocation(line: 1329, column: 2, scope: !5588)
!5635 = !DILocation(line: 1329, column: 6, scope: !5588)
!5636 = !DILocation(line: 1329, column: 11, scope: !5588)
!5637 = !DILocation(line: 1331, column: 11, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5588, file: !1, line: 1331, column: 2)
!5639 = !DILocation(line: 1331, column: 15, scope: !5638)
!5640 = !DILocation(line: 1331, column: 22, scope: !5638)
!5641 = !DILocation(line: 1331, column: 9, scope: !5638)
!5642 = !DILocation(line: 1331, column: 7, scope: !5638)
!5643 = !DILocation(line: 1331, column: 29, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5638, file: !1, line: 1331, column: 2)
!5645 = !DILocation(line: 1331, column: 2, scope: !5638)
!5646 = !DILocation(line: 1332, column: 8, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1332, column: 7)
!5648 = distinct !DILexicalBlock(scope: !5644, file: !1, line: 1331, column: 47)
!5649 = !DILocation(line: 1332, column: 12, scope: !5647)
!5650 = !DILocation(line: 1332, column: 20, scope: !5647)
!5651 = !DILocation(line: 1332, column: 37, scope: !5647)
!5652 = !DILocation(line: 1332, column: 41, scope: !5647)
!5653 = !DILocation(line: 1332, column: 45, scope: !5647)
!5654 = !DILocation(line: 1332, column: 53, scope: !5647)
!5655 = !DILocation(line: 1332, column: 7, scope: !5648)
!5656 = !DILocation(line: 1333, column: 18, scope: !5647)
!5657 = !DILocation(line: 1333, column: 42, scope: !5647)
!5658 = !DILocation(line: 1333, column: 46, scope: !5647)
!5659 = !DILocation(line: 1333, column: 41, scope: !5647)
!5660 = !DILocation(line: 1333, column: 52, scope: !5647)
!5661 = !DILocation(line: 1333, column: 56, scope: !5647)
!5662 = !DILocation(line: 1333, column: 51, scope: !5647)
!5663 = !DILocation(line: 1333, column: 4, scope: !5647)
!5664 = !DILocation(line: 1333, column: 8, scope: !5647)
!5665 = !DILocation(line: 1333, column: 16, scope: !5647)
!5666 = !DILocation(line: 1336, column: 35, scope: !5648)
!5667 = !DILocation(line: 1336, column: 39, scope: !5648)
!5668 = !DILocation(line: 1336, column: 3, scope: !5648)
!5669 = !DILocation(line: 1338, column: 17, scope: !5648)
!5670 = !DILocation(line: 1338, column: 21, scope: !5648)
!5671 = !DILocation(line: 1338, column: 3, scope: !5648)
!5672 = !DILocation(line: 1340, column: 10, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1340, column: 7)
!5674 = !DILocation(line: 1340, column: 23, scope: !5673)
!5675 = !DILocation(line: 1340, column: 8, scope: !5673)
!5676 = !DILocation(line: 1340, column: 7, scope: !5648)
!5677 = !DILocation(line: 1343, column: 8, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !1, line: 1343, column: 8)
!5679 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 1340, column: 29)
!5680 = !DILocation(line: 1343, column: 12, scope: !5678)
!5681 = !DILocation(line: 1343, column: 20, scope: !5678)
!5682 = !DILocation(line: 1343, column: 8, scope: !5679)
!5683 = !DILocation(line: 1344, column: 13, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !1, line: 1344, column: 9)
!5685 = distinct !DILexicalBlock(scope: !5678, file: !1, line: 1343, column: 36)
!5686 = !DILocation(line: 1344, column: 18, scope: !5684)
!5687 = !DILocation(line: 1344, column: 9, scope: !5685)
!5688 = !DILocation(line: 1345, column: 16, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5684, file: !1, line: 1344, column: 28)
!5690 = !DILocation(line: 1345, column: 42, scope: !5689)
!5691 = !DILocation(line: 1345, column: 46, scope: !5689)
!5692 = !DILocation(line: 1345, column: 41, scope: !5689)
!5693 = !DILocation(line: 1345, column: 52, scope: !5689)
!5694 = !DILocation(line: 1345, column: 56, scope: !5689)
!5695 = !DILocation(line: 1345, column: 51, scope: !5689)
!5696 = !DILocation(line: 1345, column: 14, scope: !5689)
!5697 = !DILocation(line: 1346, column: 24, scope: !5689)
!5698 = !DILocation(line: 1346, column: 28, scope: !5689)
!5699 = !DILocation(line: 1346, column: 38, scope: !5689)
!5700 = !DILocation(line: 1346, column: 42, scope: !5689)
!5701 = !DILocation(line: 1346, column: 6, scope: !5689)
!5702 = !DILocation(line: 1347, column: 5, scope: !5689)
!5703 = !DILocation(line: 1348, column: 4, scope: !5685)
!5704 = !DILocation(line: 1351, column: 4, scope: !5679)
!5705 = !DILocation(line: 1351, column: 8, scope: !5679)
!5706 = !DILocation(line: 1351, column: 16, scope: !5679)
!5707 = !DILocation(line: 1351, column: 21, scope: !5679)
!5708 = !DILocation(line: 1352, column: 16, scope: !5679)
!5709 = !DILocation(line: 1352, column: 4, scope: !5679)
!5710 = !DILocation(line: 1352, column: 8, scope: !5679)
!5711 = !DILocation(line: 1352, column: 14, scope: !5679)
!5712 = !DILocation(line: 1354, column: 8, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5679, file: !1, line: 1354, column: 8)
!5714 = !DILocation(line: 1354, column: 12, scope: !5713)
!5715 = !DILocation(line: 1354, column: 20, scope: !5713)
!5716 = !DILocation(line: 1354, column: 8, scope: !5679)
!5717 = !DILocalVariable(name: "fcol", scope: !5718, file: !1, line: 1355, type: !2017)
!5718 = distinct !DILexicalBlock(scope: !5713, file: !1, line: 1354, column: 37)
!5719 = !DILocation(line: 1355, column: 18, scope: !5718)
!5720 = !DILocation(line: 1355, column: 24, scope: !5718)
!5721 = !DILocation(line: 1355, column: 28, scope: !5718)
!5722 = !DILocalVariable(name: "ro", scope: !5718, file: !1, line: 1356, type: !2761)
!5723 = !DILocation(line: 1356, column: 16, scope: !5718)
!5724 = !DILocation(line: 1356, column: 20, scope: !5718)
!5725 = !DILocation(line: 1356, column: 24, scope: !5718)
!5726 = !DILocalVariable(name: "rp", scope: !5718, file: !1, line: 1356, type: !2761)
!5727 = !DILocation(line: 1356, column: 32, scope: !5718)
!5728 = !DILocation(line: 1356, column: 36, scope: !5718)
!5729 = !DILocation(line: 1356, column: 40, scope: !5718)
!5730 = !DILocalVariable(name: "rz", scope: !5718, file: !1, line: 1356, type: !2761)
!5731 = !DILocation(line: 1356, column: 48, scope: !5718)
!5732 = !DILocation(line: 1356, column: 52, scope: !5718)
!5733 = !DILocation(line: 1356, column: 56, scope: !5718)
!5734 = !DILocalVariable(name: "x", scope: !5718, file: !1, line: 1357, type: !5)
!5735 = !DILocation(line: 1357, column: 9, scope: !5718)
!5736 = !DILocalVariable(name: "y", scope: !5718, file: !1, line: 1357, type: !5)
!5737 = !DILocation(line: 1357, column: 12, scope: !5718)
!5738 = !DILocalVariable(name: "offs", scope: !5718, file: !1, line: 1357, type: !5)
!5739 = !DILocation(line: 1357, column: 15, scope: !5718)
!5740 = !DILocalVariable(name: "seed", scope: !5718, file: !1, line: 1357, type: !5)
!5741 = !DILocation(line: 1357, column: 23, scope: !5718)
!5742 = !DILocation(line: 1360, column: 11, scope: !5718)
!5743 = !DILocation(line: 1360, column: 15, scope: !5718)
!5744 = !DILocation(line: 1360, column: 21, scope: !5718)
!5745 = !DILocation(line: 1360, column: 25, scope: !5718)
!5746 = !DILocation(line: 1360, column: 34, scope: !5718)
!5747 = !DILocation(line: 1360, column: 20, scope: !5718)
!5748 = !DILocation(line: 1360, column: 9, scope: !5718)
!5749 = !DILocation(line: 1363, column: 13, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5718, file: !1, line: 1363, column: 9)
!5751 = !DILocation(line: 1363, column: 18, scope: !5750)
!5752 = !DILocation(line: 1363, column: 9, scope: !5718)
!5753 = !DILocation(line: 1364, column: 17, scope: !5750)
!5754 = !DILocation(line: 1364, column: 6, scope: !5750)
!5755 = !DILocation(line: 1366, column: 11, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5718, file: !1, line: 1366, column: 9)
!5757 = !DILocation(line: 1366, column: 9, scope: !5756)
!5758 = !DILocation(line: 1366, column: 9, scope: !5718)
!5759 = !DILocation(line: 1367, column: 28, scope: !5756)
!5760 = !DILocation(line: 1367, column: 6, scope: !5756)
!5761 = !DILocation(line: 1369, column: 12, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5718, file: !1, line: 1369, column: 5)
!5763 = !DILocation(line: 1369, column: 16, scope: !5762)
!5764 = !DILocation(line: 1369, column: 25, scope: !5762)
!5765 = !DILocation(line: 1369, column: 11, scope: !5762)
!5766 = !DILocation(line: 1369, column: 10, scope: !5762)
!5767 = !DILocation(line: 1369, column: 31, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5762, file: !1, line: 1369, column: 5)
!5769 = !DILocation(line: 1369, column: 33, scope: !5768)
!5770 = !DILocation(line: 1369, column: 37, scope: !5768)
!5771 = !DILocation(line: 1369, column: 46, scope: !5768)
!5772 = !DILocation(line: 1369, column: 32, scope: !5768)
!5773 = !DILocation(line: 1369, column: 5, scope: !5762)
!5774 = !DILocation(line: 1370, column: 13, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5776, file: !1, line: 1370, column: 6)
!5776 = distinct !DILexicalBlock(scope: !5768, file: !1, line: 1369, column: 77)
!5777 = !DILocation(line: 1370, column: 17, scope: !5775)
!5778 = !DILocation(line: 1370, column: 26, scope: !5775)
!5779 = !DILocation(line: 1370, column: 12, scope: !5775)
!5780 = !DILocation(line: 1370, column: 11, scope: !5775)
!5781 = !DILocation(line: 1370, column: 32, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5775, file: !1, line: 1370, column: 6)
!5783 = !DILocation(line: 1370, column: 34, scope: !5782)
!5784 = !DILocation(line: 1370, column: 38, scope: !5782)
!5785 = !DILocation(line: 1370, column: 47, scope: !5782)
!5786 = !DILocation(line: 1370, column: 33, scope: !5782)
!5787 = !DILocation(line: 1370, column: 6, scope: !5775)
!5788 = !DILocation(line: 1372, column: 26, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5782, file: !1, line: 1370, column: 93)
!5790 = !DILocation(line: 1372, column: 30, scope: !5789)
!5791 = !DILocation(line: 1372, column: 42, scope: !5789)
!5792 = !DILocation(line: 1372, column: 7, scope: !5789)
!5793 = !DILocation(line: 1374, column: 12, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5789, file: !1, line: 1374, column: 11)
!5795 = !DILocation(line: 1374, column: 11, scope: !5794)
!5796 = !DILocation(line: 1374, column: 11, scope: !5789)
!5797 = !DILocation(line: 1375, column: 17, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5794, file: !1, line: 1374, column: 16)
!5799 = !DILocation(line: 1375, column: 16, scope: !5798)
!5800 = !DILocation(line: 1375, column: 11, scope: !5798)
!5801 = !DILocation(line: 1375, column: 14, scope: !5798)
!5802 = !DILocation(line: 1376, column: 20, scope: !5798)
!5803 = !DILocation(line: 1376, column: 19, scope: !5798)
!5804 = !DILocation(line: 1376, column: 11, scope: !5798)
!5805 = !DILocation(line: 1376, column: 17, scope: !5798)
!5806 = !DILocation(line: 1377, column: 15, scope: !5798)
!5807 = !DILocation(line: 1377, column: 14, scope: !5798)
!5808 = !DILocation(line: 1377, column: 11, scope: !5798)
!5809 = !DILocation(line: 1377, column: 12, scope: !5798)
!5810 = !DILocation(line: 1378, column: 39, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5798, file: !1, line: 1378, column: 12)
!5812 = !DILocation(line: 1378, column: 42, scope: !5811)
!5813 = !DILocation(line: 1378, column: 12, scope: !5811)
!5814 = !DILocation(line: 1378, column: 12, scope: !5798)
!5815 = !DILocation(line: 1380, column: 20, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5811, file: !1, line: 1378, column: 46)
!5817 = !DILocation(line: 1380, column: 24, scope: !5816)
!5818 = !DILocation(line: 1380, column: 36, scope: !5816)
!5819 = !DILocation(line: 1380, column: 30, scope: !5816)
!5820 = !DILocation(line: 1380, column: 47, scope: !5816)
!5821 = !DILocation(line: 1380, column: 41, scope: !5816)
!5822 = !DILocation(line: 1380, column: 9, scope: !5816)
!5823 = !DILocation(line: 1381, column: 8, scope: !5816)
!5824 = !DILocation(line: 1382, column: 7, scope: !5798)
!5825 = !DILocation(line: 1383, column: 6, scope: !5789)
!5826 = !DILocation(line: 1370, column: 54, scope: !5782)
!5827 = !DILocation(line: 1370, column: 60, scope: !5782)
!5828 = !DILocation(line: 1370, column: 66, scope: !5782)
!5829 = !DILocation(line: 1370, column: 72, scope: !5782)
!5830 = !DILocation(line: 1370, column: 80, scope: !5782)
!5831 = !DILocation(line: 1370, column: 89, scope: !5782)
!5832 = !DILocation(line: 1370, column: 6, scope: !5782)
!5833 = distinct !{!5833, !5787, !5834}
!5834 = !DILocation(line: 1383, column: 6, scope: !5775)
!5835 = !DILocation(line: 1384, column: 10, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5776, file: !1, line: 1384, column: 10)
!5837 = !DILocation(line: 1384, column: 11, scope: !5836)
!5838 = !DILocation(line: 1384, column: 10, scope: !5776)
!5839 = !DILocation(line: 1385, column: 13, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5836, file: !1, line: 1385, column: 11)
!5841 = !DILocation(line: 1385, column: 26, scope: !5840)
!5842 = !DILocation(line: 1385, column: 11, scope: !5840)
!5843 = !DILocation(line: 1385, column: 11, scope: !5836)
!5844 = !DILocation(line: 1385, column: 32, scope: !5840)
!5845 = !DILocation(line: 1385, column: 29, scope: !5840)
!5846 = !DILocation(line: 1386, column: 5, scope: !5776)
!5847 = !DILocation(line: 1369, column: 53, scope: !5768)
!5848 = !DILocation(line: 1369, column: 57, scope: !5768)
!5849 = !DILocation(line: 1369, column: 61, scope: !5768)
!5850 = !DILocation(line: 1369, column: 69, scope: !5768)
!5851 = !DILocation(line: 1369, column: 73, scope: !5768)
!5852 = !DILocation(line: 1369, column: 5, scope: !5768)
!5853 = distinct !{!5853, !5773, !5854}
!5854 = !DILocation(line: 1386, column: 5, scope: !5762)
!5855 = !DILocation(line: 1388, column: 11, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5718, file: !1, line: 1388, column: 9)
!5857 = !DILocation(line: 1388, column: 9, scope: !5856)
!5858 = !DILocation(line: 1388, column: 9, scope: !5718)
!5859 = !DILocation(line: 1389, column: 27, scope: !5856)
!5860 = !DILocation(line: 1389, column: 6, scope: !5856)
!5861 = !DILocation(line: 1391, column: 13, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5718, file: !1, line: 1391, column: 9)
!5863 = !DILocation(line: 1391, column: 18, scope: !5862)
!5864 = !DILocation(line: 1391, column: 9, scope: !5718)
!5865 = !DILocation(line: 1392, column: 15, scope: !5862)
!5866 = !DILocation(line: 1392, column: 6, scope: !5862)
!5867 = !DILocation(line: 1393, column: 4, scope: !5718)
!5868 = !DILocation(line: 1396, column: 4, scope: !5679)
!5869 = !DILocation(line: 1396, column: 8, scope: !5679)
!5870 = !DILocation(line: 1396, column: 14, scope: !5679)
!5871 = !DILocation(line: 1397, column: 3, scope: !5679)
!5872 = !DILocation(line: 1400, column: 9, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1400, column: 7)
!5874 = !DILocation(line: 1400, column: 7, scope: !5873)
!5875 = !DILocation(line: 1400, column: 14, scope: !5873)
!5876 = !DILocation(line: 1400, column: 7, scope: !5648)
!5877 = !DILocation(line: 1401, column: 8, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5873, file: !1, line: 1401, column: 8)
!5879 = !DILocation(line: 1401, column: 12, scope: !5878)
!5880 = !DILocation(line: 1401, column: 20, scope: !5878)
!5881 = !DILocation(line: 1401, column: 8, scope: !5873)
!5882 = !DILocation(line: 1402, column: 19, scope: !5878)
!5883 = !DILocation(line: 1402, column: 23, scope: !5878)
!5884 = !DILocation(line: 1402, column: 5, scope: !5878)
!5885 = !DILocation(line: 1401, column: 22, scope: !5878)
!5886 = !DILocation(line: 1405, column: 9, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1405, column: 7)
!5888 = !DILocation(line: 1405, column: 7, scope: !5887)
!5889 = !DILocation(line: 1405, column: 14, scope: !5887)
!5890 = !DILocation(line: 1405, column: 7, scope: !5648)
!5891 = !DILocation(line: 1406, column: 8, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5887, file: !1, line: 1406, column: 8)
!5893 = !DILocation(line: 1406, column: 12, scope: !5892)
!5894 = !DILocation(line: 1406, column: 20, scope: !5892)
!5895 = !DILocation(line: 1406, column: 8, scope: !5887)
!5896 = !DILocation(line: 1407, column: 15, scope: !5892)
!5897 = !DILocation(line: 1407, column: 19, scope: !5892)
!5898 = !DILocation(line: 1407, column: 5, scope: !5892)
!5899 = !DILocation(line: 1406, column: 22, scope: !5892)
!5900 = !DILocation(line: 1409, column: 9, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1409, column: 7)
!5902 = !DILocation(line: 1409, column: 7, scope: !5901)
!5903 = !DILocation(line: 1409, column: 14, scope: !5901)
!5904 = !DILocation(line: 1409, column: 23, scope: !5901)
!5905 = !DILocation(line: 1409, column: 28, scope: !5901)
!5906 = !DILocation(line: 1409, column: 26, scope: !5901)
!5907 = !DILocation(line: 1409, column: 7, scope: !5648)
!5908 = !DILocation(line: 1410, column: 8, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5910, file: !1, line: 1410, column: 8)
!5910 = distinct !DILexicalBlock(scope: !5901, file: !1, line: 1409, column: 39)
!5911 = !DILocation(line: 1410, column: 12, scope: !5909)
!5912 = !DILocation(line: 1410, column: 20, scope: !5909)
!5913 = !DILocation(line: 1410, column: 8, scope: !5910)
!5914 = !DILocalVariable(name: "fcol", scope: !5915, file: !1, line: 1411, type: !692)
!5915 = distinct !DILexicalBlock(scope: !5909, file: !1, line: 1410, column: 53)
!5916 = !DILocation(line: 1411, column: 12, scope: !5915)
!5917 = !DILocalVariable(name: "acol", scope: !5915, file: !1, line: 1411, type: !692)
!5918 = !DILocation(line: 1411, column: 19, scope: !5915)
!5919 = !DILocalVariable(name: "x", scope: !5915, file: !1, line: 1412, type: !5)
!5920 = !DILocation(line: 1412, column: 9, scope: !5915)
!5921 = !DILocation(line: 1415, column: 19, scope: !5915)
!5922 = !DILocation(line: 1415, column: 47, scope: !5915)
!5923 = !DILocation(line: 1415, column: 51, scope: !5915)
!5924 = !DILocation(line: 1415, column: 46, scope: !5915)
!5925 = !DILocation(line: 1415, column: 57, scope: !5915)
!5926 = !DILocation(line: 1415, column: 61, scope: !5915)
!5927 = !DILocation(line: 1415, column: 56, scope: !5915)
!5928 = !DILocation(line: 1415, column: 5, scope: !5915)
!5929 = !DILocation(line: 1415, column: 9, scope: !5915)
!5930 = !DILocation(line: 1415, column: 17, scope: !5915)
!5931 = !DILocalVariable(name: "sw_ap", scope: !5932, file: !1, line: 1418, type: !692)
!5932 = distinct !DILexicalBlock(scope: !5915, file: !1, line: 1418, column: 5)
!5933 = !DILocation(line: 1418, column: 5, scope: !5932)
!5934 = !DILocation(line: 1419, column: 26, scope: !5915)
!5935 = !DILocation(line: 1419, column: 30, scope: !5915)
!5936 = !DILocation(line: 1419, column: 34, scope: !5915)
!5937 = !DILocation(line: 1419, column: 38, scope: !5915)
!5938 = !DILocation(line: 1419, column: 5, scope: !5915)
!5939 = !DILocalVariable(name: "sw_ap", scope: !5940, file: !1, line: 1420, type: !692)
!5940 = distinct !DILexicalBlock(scope: !5915, file: !1, line: 1420, column: 5)
!5941 = !DILocation(line: 1420, column: 5, scope: !5940)
!5942 = !DILocation(line: 1422, column: 11, scope: !5915)
!5943 = !DILocation(line: 1422, column: 15, scope: !5915)
!5944 = !DILocation(line: 1422, column: 9, scope: !5915)
!5945 = !DILocation(line: 1422, column: 28, scope: !5915)
!5946 = !DILocation(line: 1422, column: 32, scope: !5915)
!5947 = !DILocation(line: 1422, column: 26, scope: !5915)
!5948 = !DILocation(line: 1423, column: 12, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5915, file: !1, line: 1423, column: 5)
!5950 = !DILocation(line: 1423, column: 16, scope: !5949)
!5951 = !DILocation(line: 1423, column: 22, scope: !5949)
!5952 = !DILocation(line: 1423, column: 26, scope: !5949)
!5953 = !DILocation(line: 1423, column: 21, scope: !5949)
!5954 = !DILocation(line: 1423, column: 11, scope: !5949)
!5955 = !DILocation(line: 1423, column: 10, scope: !5949)
!5956 = !DILocation(line: 1423, column: 33, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5949, file: !1, line: 1423, column: 5)
!5958 = !DILocation(line: 1423, column: 34, scope: !5957)
!5959 = !DILocation(line: 1423, column: 5, scope: !5949)
!5960 = !DILocation(line: 1424, column: 24, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !1, line: 1423, column: 61)
!5962 = !DILocation(line: 1424, column: 30, scope: !5961)
!5963 = !DILocation(line: 1424, column: 6, scope: !5961)
!5964 = !DILocation(line: 1425, column: 5, scope: !5961)
!5965 = !DILocation(line: 1423, column: 39, scope: !5957)
!5966 = !DILocation(line: 1423, column: 47, scope: !5957)
!5967 = !DILocation(line: 1423, column: 56, scope: !5957)
!5968 = !DILocation(line: 1423, column: 5, scope: !5957)
!5969 = distinct !{!5969, !5959, !5970}
!5970 = !DILocation(line: 1425, column: 5, scope: !5949)
!5971 = !DILocation(line: 1426, column: 4, scope: !5915)
!5972 = !DILocation(line: 1427, column: 3, scope: !5910)
!5973 = !DILocation(line: 1430, column: 7, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1430, column: 7)
!5975 = !DILocation(line: 1430, column: 11, scope: !5974)
!5976 = !DILocation(line: 1430, column: 19, scope: !5974)
!5977 = !DILocation(line: 1430, column: 7, scope: !5648)
!5978 = !DILocation(line: 1431, column: 13, scope: !5974)
!5979 = !DILocation(line: 1431, column: 17, scope: !5974)
!5980 = !DILocation(line: 1431, column: 4, scope: !5974)
!5981 = !DILocation(line: 1434, column: 7, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1434, column: 7)
!5983 = !DILocation(line: 1434, column: 11, scope: !5982)
!5984 = !DILocation(line: 1434, column: 19, scope: !5982)
!5985 = !DILocation(line: 1434, column: 7, scope: !5648)
!5986 = !DILocation(line: 1435, column: 13, scope: !5982)
!5987 = !DILocation(line: 1435, column: 17, scope: !5982)
!5988 = !DILocation(line: 1435, column: 4, scope: !5982)
!5989 = !DILocation(line: 1437, column: 10, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1437, column: 7)
!5991 = !DILocation(line: 1437, column: 23, scope: !5990)
!5992 = !DILocation(line: 1437, column: 8, scope: !5990)
!5993 = !DILocation(line: 1437, column: 7, scope: !5648)
!5994 = !DILocation(line: 1438, column: 8, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !1, line: 1438, column: 8)
!5996 = distinct !DILexicalBlock(scope: !5990, file: !1, line: 1437, column: 29)
!5997 = !DILocation(line: 1438, column: 12, scope: !5995)
!5998 = !DILocation(line: 1438, column: 20, scope: !5995)
!5999 = !DILocation(line: 1438, column: 8, scope: !5996)
!6000 = !DILocation(line: 1439, column: 13, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5995, file: !1, line: 1439, column: 9)
!6002 = !DILocation(line: 1439, column: 18, scope: !6001)
!6003 = !DILocation(line: 1439, column: 9, scope: !5995)
!6004 = !DILocation(line: 1440, column: 23, scope: !6001)
!6005 = !DILocation(line: 1440, column: 27, scope: !6001)
!6006 = !DILocation(line: 1440, column: 31, scope: !6001)
!6007 = !DILocation(line: 1440, column: 38, scope: !6001)
!6008 = !DILocation(line: 1440, column: 6, scope: !6001)
!6009 = !DILocation(line: 1439, column: 20, scope: !6001)
!6010 = !DILocation(line: 1441, column: 3, scope: !5996)
!6011 = !DILocation(line: 1443, column: 7, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1443, column: 7)
!6013 = !DILocation(line: 1443, column: 11, scope: !6012)
!6014 = !DILocation(line: 1443, column: 20, scope: !6012)
!6015 = !DILocation(line: 1443, column: 7, scope: !5648)
!6016 = !DILocation(line: 1444, column: 20, scope: !6012)
!6017 = !DILocation(line: 1444, column: 24, scope: !6012)
!6018 = !DILocation(line: 1444, column: 4, scope: !6012)
!6019 = !DILocation(line: 1446, column: 7, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1446, column: 7)
!6021 = !DILocation(line: 1446, column: 7, scope: !5648)
!6022 = !DILocation(line: 1446, column: 17, scope: !6020)
!6023 = !DILocation(line: 1446, column: 27, scope: !6020)
!6024 = !DILocation(line: 1447, column: 11, scope: !5648)
!6025 = !DILocation(line: 1449, column: 7, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 1449, column: 7)
!6027 = !DILocation(line: 1449, column: 11, scope: !6026)
!6028 = !DILocation(line: 1449, column: 7, scope: !5648)
!6029 = !DILocation(line: 1450, column: 4, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6026, file: !1, line: 1449, column: 21)
!6031 = !DILocation(line: 1450, column: 14, scope: !6030)
!6032 = !DILocation(line: 1450, column: 18, scope: !6030)
!6033 = !DILocation(line: 1451, column: 4, scope: !6030)
!6034 = !DILocation(line: 1451, column: 8, scope: !6030)
!6035 = !DILocation(line: 1451, column: 16, scope: !6030)
!6036 = !DILocation(line: 1452, column: 3, scope: !6030)
!6037 = !DILocation(line: 1453, column: 2, scope: !5648)
!6038 = !DILocation(line: 1331, column: 37, scope: !5644)
!6039 = !DILocation(line: 1331, column: 41, scope: !5644)
!6040 = !DILocation(line: 1331, column: 35, scope: !5644)
!6041 = !DILocation(line: 1331, column: 2, scope: !5644)
!6042 = distinct !{!6042, !5645, !6043}
!6043 = !DILocation(line: 1453, column: 2, scope: !5638)
!6044 = !DILocation(line: 1456, column: 19, scope: !5588)
!6045 = !DILocation(line: 1456, column: 23, scope: !5588)
!6046 = !DILocation(line: 1456, column: 31, scope: !5588)
!6047 = !DILocation(line: 1456, column: 36, scope: !5588)
!6048 = !DILocation(line: 1456, column: 2, scope: !5588)
!6049 = !DILocation(line: 1456, column: 6, scope: !5588)
!6050 = !DILocation(line: 1456, column: 14, scope: !5588)
!6051 = !DILocation(line: 1456, column: 18, scope: !5588)
!6052 = !DILocation(line: 1457, column: 42, scope: !5588)
!6053 = !DILocation(line: 1457, column: 14, scope: !5588)
!6054 = !DILocation(line: 1457, column: 2, scope: !5588)
!6055 = !DILocation(line: 1457, column: 6, scope: !5588)
!6056 = !DILocation(line: 1457, column: 12, scope: !5588)
!6057 = !DILocation(line: 1459, column: 2, scope: !5588)
!6058 = !DILocation(line: 1459, column: 12, scope: !5588)
!6059 = !DILocation(line: 1459, column: 16, scope: !5588)
!6060 = !DILocation(line: 1459, column: 24, scope: !5588)
!6061 = !DILocation(line: 1459, column: 28, scope: !5588)
!6062 = !DILocation(line: 1459, column: 33, scope: !5588)
!6063 = !DILocation(line: 1460, column: 2, scope: !5588)
!6064 = !DILocation(line: 1460, column: 12, scope: !5588)
!6065 = !DILocation(line: 1460, column: 16, scope: !5588)
!6066 = !DILocation(line: 1460, column: 24, scope: !5588)
!6067 = !DILocation(line: 1460, column: 28, scope: !5588)
!6068 = !DILocation(line: 1460, column: 33, scope: !5588)
!6069 = !DILocation(line: 1461, column: 2, scope: !5588)
!6070 = !DILocation(line: 1461, column: 12, scope: !5588)
!6071 = !DILocation(line: 1461, column: 16, scope: !5588)
!6072 = !DILocation(line: 1461, column: 24, scope: !5588)
!6073 = !DILocation(line: 1461, column: 28, scope: !5588)
!6074 = !DILocation(line: 1461, column: 33, scope: !5588)
!6075 = !DILocation(line: 1462, column: 1, scope: !5588)
!6076 = distinct !DISubprogram(name: "edge_enhance_tile", scope: !1, file: !1, line: 1003, type: !6077, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!6077 = !DISubroutineType(types: !6078)
!6078 = !{null, !2083, !692, !855}
!6079 = !DILocalVariable(name: "pa", arg: 1, scope: !6076, file: !1, line: 1003, type: !2083)
!6080 = !DILocation(line: 1003, column: 43, scope: !6076)
!6081 = !DILocalVariable(name: "rectf", arg: 2, scope: !6076, file: !1, line: 1003, type: !692)
!6082 = !DILocation(line: 1003, column: 54, scope: !6076)
!6083 = !DILocalVariable(name: "rectz", arg: 3, scope: !6076, file: !1, line: 1003, type: !855)
!6084 = !DILocation(line: 1003, column: 66, scope: !6076)
!6085 = !DILocalVariable(name: "y", scope: !6076, file: !1, line: 1006, type: !5)
!6086 = !DILocation(line: 1006, column: 6, scope: !6076)
!6087 = !DILocalVariable(name: "x", scope: !6076, file: !1, line: 1006, type: !5)
!6088 = !DILocation(line: 1006, column: 9, scope: !6076)
!6089 = !DILocalVariable(name: "col", scope: !6076, file: !1, line: 1006, type: !5)
!6090 = !DILocation(line: 1006, column: 12, scope: !6076)
!6091 = !DILocalVariable(name: "rz", scope: !6076, file: !1, line: 1006, type: !855)
!6092 = !DILocation(line: 1006, column: 18, scope: !6076)
!6093 = !DILocalVariable(name: "rz1", scope: !6076, file: !1, line: 1006, type: !855)
!6094 = !DILocation(line: 1006, column: 23, scope: !6076)
!6095 = !DILocalVariable(name: "rz2", scope: !6076, file: !1, line: 1006, type: !855)
!6096 = !DILocation(line: 1006, column: 29, scope: !6076)
!6097 = !DILocalVariable(name: "rz3", scope: !6076, file: !1, line: 1006, type: !855)
!6098 = !DILocation(line: 1006, column: 35, scope: !6076)
!6099 = !DILocalVariable(name: "zval1", scope: !6076, file: !1, line: 1007, type: !5)
!6100 = !DILocation(line: 1007, column: 6, scope: !6076)
!6101 = !DILocalVariable(name: "zval2", scope: !6076, file: !1, line: 1007, type: !5)
!6102 = !DILocation(line: 1007, column: 13, scope: !6076)
!6103 = !DILocalVariable(name: "zval3", scope: !6076, file: !1, line: 1007, type: !5)
!6104 = !DILocation(line: 1007, column: 20, scope: !6076)
!6105 = !DILocalVariable(name: "rf", scope: !6076, file: !1, line: 1008, type: !692)
!6106 = !DILocation(line: 1008, column: 9, scope: !6076)
!6107 = !DILocation(line: 1011, column: 6, scope: !6076)
!6108 = !DILocation(line: 1011, column: 4, scope: !6076)
!6109 = !DILocation(line: 1012, column: 6, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6076, file: !1, line: 1012, column: 6)
!6111 = !DILocation(line: 1012, column: 8, scope: !6110)
!6112 = !DILocation(line: 1012, column: 6, scope: !6076)
!6113 = !DILocation(line: 1012, column: 16, scope: !6110)
!6114 = !DILocation(line: 1014, column: 8, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6076, file: !1, line: 1014, column: 2)
!6116 = !DILocation(line: 1014, column: 7, scope: !6115)
!6117 = !DILocation(line: 1014, column: 12, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6115, file: !1, line: 1014, column: 2)
!6119 = !DILocation(line: 1014, column: 14, scope: !6118)
!6120 = !DILocation(line: 1014, column: 18, scope: !6118)
!6121 = !DILocation(line: 1014, column: 13, scope: !6118)
!6122 = !DILocation(line: 1014, column: 2, scope: !6115)
!6123 = !DILocation(line: 1015, column: 9, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6118, file: !1, line: 1015, column: 3)
!6125 = !DILocation(line: 1015, column: 8, scope: !6124)
!6126 = !DILocation(line: 1015, column: 13, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6124, file: !1, line: 1015, column: 3)
!6128 = !DILocation(line: 1015, column: 15, scope: !6127)
!6129 = !DILocation(line: 1015, column: 19, scope: !6127)
!6130 = !DILocation(line: 1015, column: 14, scope: !6127)
!6131 = !DILocation(line: 1015, column: 3, scope: !6124)
!6132 = !DILocation(line: 1015, column: 39, scope: !6127)
!6133 = !DILocation(line: 1015, column: 42, scope: !6127)
!6134 = !DILocation(line: 1015, column: 37, scope: !6127)
!6135 = !DILocation(line: 1015, column: 27, scope: !6127)
!6136 = !DILocation(line: 1015, column: 33, scope: !6127)
!6137 = !DILocation(line: 1015, column: 3, scope: !6127)
!6138 = distinct !{!6138, !6131, !6139}
!6139 = !DILocation(line: 1015, column: 46, scope: !6124)
!6140 = !DILocation(line: 1014, column: 26, scope: !6118)
!6141 = !DILocation(line: 1014, column: 2, scope: !6118)
!6142 = distinct !{!6142, !6122, !6143}
!6143 = !DILocation(line: 1015, column: 46, scope: !6115)
!6144 = !DILocation(line: 1017, column: 7, scope: !6076)
!6145 = !DILocation(line: 1017, column: 5, scope: !6076)
!6146 = !DILocation(line: 1018, column: 7, scope: !6076)
!6147 = !DILocation(line: 1018, column: 11, scope: !6076)
!6148 = !DILocation(line: 1018, column: 15, scope: !6076)
!6149 = !DILocation(line: 1018, column: 10, scope: !6076)
!6150 = !DILocation(line: 1018, column: 5, scope: !6076)
!6151 = !DILocation(line: 1019, column: 7, scope: !6076)
!6152 = !DILocation(line: 1019, column: 11, scope: !6076)
!6153 = !DILocation(line: 1019, column: 15, scope: !6076)
!6154 = !DILocation(line: 1019, column: 10, scope: !6076)
!6155 = !DILocation(line: 1019, column: 5, scope: !6076)
!6156 = !DILocation(line: 1021, column: 6, scope: !6076)
!6157 = !DILocation(line: 1021, column: 12, scope: !6076)
!6158 = !DILocation(line: 1021, column: 16, scope: !6076)
!6159 = !DILocation(line: 1021, column: 11, scope: !6076)
!6160 = !DILocation(line: 1021, column: 21, scope: !6076)
!6161 = !DILocation(line: 1021, column: 4, scope: !6076)
!6162 = !DILocation(line: 1023, column: 8, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6076, file: !1, line: 1023, column: 2)
!6164 = !DILocation(line: 1023, column: 7, scope: !6163)
!6165 = !DILocation(line: 1023, column: 12, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6163, file: !1, line: 1023, column: 2)
!6167 = !DILocation(line: 1023, column: 14, scope: !6166)
!6168 = !DILocation(line: 1023, column: 18, scope: !6166)
!6169 = !DILocation(line: 1023, column: 23, scope: !6166)
!6170 = !DILocation(line: 1023, column: 13, scope: !6166)
!6171 = !DILocation(line: 1023, column: 2, scope: !6163)
!6172 = !DILocation(line: 1024, column: 9, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !1, line: 1024, column: 3)
!6174 = distinct !DILexicalBlock(scope: !6166, file: !1, line: 1023, column: 32)
!6175 = !DILocation(line: 1024, column: 8, scope: !6173)
!6176 = !DILocation(line: 1024, column: 13, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6173, file: !1, line: 1024, column: 3)
!6178 = !DILocation(line: 1024, column: 15, scope: !6177)
!6179 = !DILocation(line: 1024, column: 19, scope: !6177)
!6180 = !DILocation(line: 1024, column: 24, scope: !6177)
!6181 = !DILocation(line: 1024, column: 14, scope: !6177)
!6182 = !DILocation(line: 1024, column: 3, scope: !6173)
!6183 = !DILocation(line: 1027, column: 13, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6177, file: !1, line: 1024, column: 60)
!6185 = !DILocation(line: 1027, column: 24, scope: !6184)
!6186 = !DILocation(line: 1027, column: 23, scope: !6184)
!6187 = !DILocation(line: 1027, column: 20, scope: !6184)
!6188 = !DILocation(line: 1027, column: 35, scope: !6184)
!6189 = !DILocation(line: 1027, column: 31, scope: !6184)
!6190 = !DILocation(line: 1027, column: 9, scope: !6184)
!6191 = !DILocation(line: 1028, column: 14, scope: !6184)
!6192 = !DILocation(line: 1028, column: 13, scope: !6184)
!6193 = !DILocation(line: 1028, column: 35, scope: !6184)
!6194 = !DILocation(line: 1028, column: 34, scope: !6184)
!6195 = !DILocation(line: 1028, column: 31, scope: !6184)
!6196 = !DILocation(line: 1028, column: 9, scope: !6184)
!6197 = !DILocation(line: 1029, column: 13, scope: !6184)
!6198 = !DILocation(line: 1029, column: 24, scope: !6184)
!6199 = !DILocation(line: 1029, column: 23, scope: !6184)
!6200 = !DILocation(line: 1029, column: 20, scope: !6184)
!6201 = !DILocation(line: 1029, column: 35, scope: !6184)
!6202 = !DILocation(line: 1029, column: 31, scope: !6184)
!6203 = !DILocation(line: 1029, column: 9, scope: !6184)
!6204 = !DILocation(line: 1031, column: 13, scope: !6184)
!6205 = !DILocation(line: 1031, column: 12, scope: !6184)
!6206 = !DILocation(line: 1031, column: 23, scope: !6184)
!6207 = !DILocation(line: 1031, column: 31, scope: !6184)
!6208 = !DILocation(line: 1031, column: 29, scope: !6184)
!6209 = !DILocation(line: 1031, column: 39, scope: !6184)
!6210 = !DILocation(line: 1031, column: 37, scope: !6184)
!6211 = !DILocation(line: 1031, column: 45, scope: !6184)
!6212 = !DILocation(line: 1031, column: 20, scope: !6184)
!6213 = !DILocation(line: 1031, column: 7, scope: !6184)
!6214 = !DILocation(line: 1032, column: 8, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6184, file: !1, line: 1032, column: 8)
!6216 = !DILocation(line: 1032, column: 11, scope: !6215)
!6217 = !DILocation(line: 1032, column: 8, scope: !6184)
!6218 = !DILocation(line: 1032, column: 21, scope: !6215)
!6219 = !DILocation(line: 1032, column: 20, scope: !6215)
!6220 = !DILocation(line: 1032, column: 18, scope: !6215)
!6221 = !DILocation(line: 1032, column: 15, scope: !6215)
!6222 = !DILocation(line: 1034, column: 8, scope: !6184)
!6223 = !DILocation(line: 1035, column: 8, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6184, file: !1, line: 1035, column: 8)
!6225 = !DILocation(line: 1035, column: 12, scope: !6224)
!6226 = !DILocation(line: 1035, column: 8, scope: !6184)
!6227 = !DILocation(line: 1035, column: 26, scope: !6224)
!6228 = !DILocation(line: 1035, column: 23, scope: !6224)
!6229 = !DILocation(line: 1036, column: 19, scope: !6224)
!6230 = !DILocation(line: 1036, column: 15, scope: !6224)
!6231 = !DILocation(line: 1036, column: 27, scope: !6224)
!6232 = !DILocation(line: 1036, column: 26, scope: !6224)
!6233 = !DILocation(line: 1036, column: 31, scope: !6224)
!6234 = !DILocation(line: 1036, column: 12, scope: !6224)
!6235 = !DILocation(line: 1038, column: 8, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6184, file: !1, line: 1038, column: 8)
!6237 = !DILocation(line: 1038, column: 11, scope: !6236)
!6238 = !DILocation(line: 1038, column: 8, scope: !6184)
!6239 = !DILocalVariable(name: "fcol", scope: !6240, file: !1, line: 1039, type: !57)
!6240 = distinct !DILexicalBlock(scope: !6236, file: !1, line: 1038, column: 15)
!6241 = !DILocation(line: 1039, column: 11, scope: !6240)
!6242 = !DILocation(line: 1041, column: 9, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6240, file: !1, line: 1041, column: 9)
!6244 = !DILocation(line: 1041, column: 12, scope: !6243)
!6245 = !DILocation(line: 1041, column: 9, scope: !6240)
!6246 = !DILocation(line: 1041, column: 22, scope: !6243)
!6247 = !DILocation(line: 1041, column: 18, scope: !6243)
!6248 = !DILocation(line: 1042, column: 23, scope: !6243)
!6249 = !DILocation(line: 1042, column: 16, scope: !6243)
!6250 = !DILocation(line: 1042, column: 26, scope: !6243)
!6251 = !DILocation(line: 1042, column: 14, scope: !6243)
!6252 = !DILocation(line: 1044, column: 11, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6240, file: !1, line: 1044, column: 9)
!6254 = !DILocation(line: 1044, column: 9, scope: !6253)
!6255 = !DILocation(line: 1044, column: 9, scope: !6240)
!6256 = !DILocation(line: 1045, column: 12, scope: !6253)
!6257 = !DILocation(line: 1045, column: 26, scope: !6253)
!6258 = !DILocation(line: 1045, column: 17, scope: !6253)
!6259 = !DILocation(line: 1045, column: 16, scope: !6253)
!6260 = !DILocation(line: 1045, column: 7, scope: !6253)
!6261 = !DILocation(line: 1045, column: 9, scope: !6253)
!6262 = !DILocation(line: 1045, column: 6, scope: !6253)
!6263 = !DILocation(line: 1047, column: 11, scope: !6253)
!6264 = !DILocation(line: 1047, column: 7, scope: !6253)
!6265 = !DILocation(line: 1047, column: 9, scope: !6253)
!6266 = !DILocation(line: 1048, column: 4, scope: !6240)
!6267 = !DILocation(line: 1049, column: 3, scope: !6184)
!6268 = !DILocation(line: 1024, column: 29, scope: !6177)
!6269 = !DILocation(line: 1024, column: 36, scope: !6177)
!6270 = !DILocation(line: 1024, column: 43, scope: !6177)
!6271 = !DILocation(line: 1024, column: 50, scope: !6177)
!6272 = !DILocation(line: 1024, column: 56, scope: !6177)
!6273 = !DILocation(line: 1024, column: 3, scope: !6177)
!6274 = distinct !{!6274, !6182, !6275}
!6275 = !DILocation(line: 1049, column: 3, scope: !6173)
!6276 = !DILocation(line: 1050, column: 6, scope: !6174)
!6277 = !DILocation(line: 1051, column: 6, scope: !6174)
!6278 = !DILocation(line: 1052, column: 6, scope: !6174)
!6279 = !DILocation(line: 1053, column: 5, scope: !6174)
!6280 = !DILocation(line: 1054, column: 2, scope: !6174)
!6281 = !DILocation(line: 1023, column: 28, scope: !6166)
!6282 = !DILocation(line: 1023, column: 2, scope: !6166)
!6283 = distinct !{!6283, !6171, !6284}
!6284 = !DILocation(line: 1054, column: 2, scope: !6163)
!6285 = !DILocation(line: 1057, column: 6, scope: !6076)
!6286 = !DILocation(line: 1057, column: 4, scope: !6076)
!6287 = !DILocation(line: 1058, column: 8, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6076, file: !1, line: 1058, column: 2)
!6289 = !DILocation(line: 1058, column: 7, scope: !6288)
!6290 = !DILocation(line: 1058, column: 12, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6288, file: !1, line: 1058, column: 2)
!6292 = !DILocation(line: 1058, column: 14, scope: !6291)
!6293 = !DILocation(line: 1058, column: 18, scope: !6291)
!6294 = !DILocation(line: 1058, column: 13, scope: !6291)
!6295 = !DILocation(line: 1058, column: 2, scope: !6288)
!6296 = !DILocation(line: 1059, column: 9, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6291, file: !1, line: 1059, column: 3)
!6298 = !DILocation(line: 1059, column: 8, scope: !6297)
!6299 = !DILocation(line: 1059, column: 13, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6297, file: !1, line: 1059, column: 3)
!6301 = !DILocation(line: 1059, column: 15, scope: !6300)
!6302 = !DILocation(line: 1059, column: 19, scope: !6300)
!6303 = !DILocation(line: 1059, column: 14, scope: !6300)
!6304 = !DILocation(line: 1059, column: 3, scope: !6297)
!6305 = !DILocation(line: 1059, column: 39, scope: !6300)
!6306 = !DILocation(line: 1059, column: 42, scope: !6300)
!6307 = !DILocation(line: 1059, column: 37, scope: !6300)
!6308 = !DILocation(line: 1059, column: 27, scope: !6300)
!6309 = !DILocation(line: 1059, column: 33, scope: !6300)
!6310 = !DILocation(line: 1059, column: 3, scope: !6300)
!6311 = distinct !{!6311, !6304, !6312}
!6312 = !DILocation(line: 1059, column: 46, scope: !6297)
!6313 = !DILocation(line: 1058, column: 26, scope: !6291)
!6314 = !DILocation(line: 1058, column: 2, scope: !6291)
!6315 = distinct !{!6315, !6295, !6316}
!6316 = !DILocation(line: 1059, column: 46, scope: !6288)
!6317 = !DILocation(line: 1061, column: 1, scope: !6076)
!6318 = distinct !DISubprogram(name: "add_passes", scope: !1, file: !1, line: 564, type: !6319, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{null, !88, !5, !6321, !6322}
!6321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!6322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!6323 = !DILocalVariable(name: "rl", arg: 1, scope: !6318, file: !1, line: 564, type: !88)
!6324 = !DILocation(line: 564, column: 37, scope: !6318)
!6325 = !DILocalVariable(name: "offset", arg: 2, scope: !6318, file: !1, line: 564, type: !5)
!6326 = !DILocation(line: 564, column: 45, scope: !6318)
!6327 = !DILocalVariable(name: "shi", arg: 3, scope: !6318, file: !1, line: 564, type: !6321)
!6328 = !DILocation(line: 564, column: 65, scope: !6318)
!6329 = !DILocalVariable(name: "shr", arg: 4, scope: !6318, file: !1, line: 564, type: !6322)
!6330 = !DILocation(line: 564, column: 83, scope: !6318)
!6331 = !DILocalVariable(name: "rpass", scope: !6318, file: !1, line: 566, type: !4697)
!6332 = !DILocation(line: 566, column: 14, scope: !6318)
!6333 = !DILocalVariable(name: "fp", scope: !6318, file: !1, line: 567, type: !692)
!6334 = !DILocation(line: 567, column: 9, scope: !6318)
!6335 = !DILocation(line: 569, column: 6, scope: !6318)
!6336 = !DILocation(line: 569, column: 10, scope: !6318)
!6337 = !DILocation(line: 569, column: 20, scope: !6318)
!6338 = !DILocation(line: 569, column: 19, scope: !6318)
!6339 = !DILocation(line: 569, column: 16, scope: !6318)
!6340 = !DILocation(line: 569, column: 4, scope: !6318)
!6341 = !DILocation(line: 570, column: 13, scope: !6318)
!6342 = !DILocation(line: 570, column: 17, scope: !6318)
!6343 = !DILocation(line: 570, column: 22, scope: !6318)
!6344 = !DILocation(line: 570, column: 2, scope: !6318)
!6345 = !DILocation(line: 572, column: 14, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6318, file: !1, line: 572, column: 2)
!6347 = !DILocation(line: 572, column: 18, scope: !6346)
!6348 = !DILocation(line: 572, column: 25, scope: !6346)
!6349 = !DILocation(line: 572, column: 12, scope: !6346)
!6350 = !DILocation(line: 572, column: 7, scope: !6346)
!6351 = !DILocation(line: 572, column: 32, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6346, file: !1, line: 572, column: 2)
!6353 = !DILocation(line: 572, column: 2, scope: !6346)
!6354 = !DILocalVariable(name: "col", scope: !6355, file: !1, line: 573, type: !692)
!6355 = distinct !DILexicalBlock(scope: !6352, file: !1, line: 572, column: 59)
!6356 = !DILocation(line: 573, column: 10, scope: !6355)
!6357 = !DILocalVariable(name: "uvcol", scope: !6355, file: !1, line: 573, type: !217)
!6358 = !DILocation(line: 573, column: 21, scope: !6355)
!6359 = !DILocalVariable(name: "a", scope: !6355, file: !1, line: 574, type: !5)
!6360 = !DILocation(line: 574, column: 7, scope: !6355)
!6361 = !DILocalVariable(name: "pixsize", scope: !6355, file: !1, line: 574, type: !5)
!6362 = !DILocation(line: 574, column: 10, scope: !6355)
!6363 = !DILocation(line: 576, column: 11, scope: !6355)
!6364 = !DILocation(line: 576, column: 18, scope: !6355)
!6365 = !DILocation(line: 576, column: 3, scope: !6355)
!6366 = !DILocation(line: 578, column: 9, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6355, file: !1, line: 576, column: 28)
!6368 = !DILocation(line: 578, column: 16, scope: !6367)
!6369 = !DILocation(line: 578, column: 23, scope: !6367)
!6370 = !DILocation(line: 578, column: 21, scope: !6367)
!6371 = !DILocation(line: 578, column: 7, scope: !6367)
!6372 = !DILocation(line: 579, column: 10, scope: !6367)
!6373 = !DILocation(line: 579, column: 15, scope: !6367)
!6374 = !DILocation(line: 579, column: 6, scope: !6367)
!6375 = !DILocation(line: 579, column: 8, scope: !6367)
!6376 = !DILocation(line: 580, column: 5, scope: !6367)
!6377 = !DILocation(line: 582, column: 10, scope: !6367)
!6378 = !DILocation(line: 582, column: 15, scope: !6367)
!6379 = !DILocation(line: 582, column: 8, scope: !6367)
!6380 = !DILocation(line: 583, column: 12, scope: !6367)
!6381 = !DILocation(line: 584, column: 5, scope: !6367)
!6382 = !DILocation(line: 586, column: 10, scope: !6367)
!6383 = !DILocation(line: 586, column: 15, scope: !6367)
!6384 = !DILocation(line: 586, column: 8, scope: !6367)
!6385 = !DILocation(line: 587, column: 5, scope: !6367)
!6386 = !DILocation(line: 589, column: 10, scope: !6367)
!6387 = !DILocation(line: 589, column: 15, scope: !6367)
!6388 = !DILocation(line: 589, column: 8, scope: !6367)
!6389 = !DILocation(line: 590, column: 5, scope: !6367)
!6390 = !DILocation(line: 592, column: 10, scope: !6367)
!6391 = !DILocation(line: 592, column: 15, scope: !6367)
!6392 = !DILocation(line: 592, column: 8, scope: !6367)
!6393 = !DILocation(line: 593, column: 5, scope: !6367)
!6394 = !DILocation(line: 595, column: 10, scope: !6367)
!6395 = !DILocation(line: 595, column: 15, scope: !6367)
!6396 = !DILocation(line: 595, column: 8, scope: !6367)
!6397 = !DILocation(line: 596, column: 5, scope: !6367)
!6398 = !DILocation(line: 598, column: 10, scope: !6367)
!6399 = !DILocation(line: 598, column: 15, scope: !6367)
!6400 = !DILocation(line: 598, column: 8, scope: !6367)
!6401 = !DILocation(line: 599, column: 5, scope: !6367)
!6402 = !DILocation(line: 601, column: 10, scope: !6367)
!6403 = !DILocation(line: 601, column: 15, scope: !6367)
!6404 = !DILocation(line: 601, column: 8, scope: !6367)
!6405 = !DILocation(line: 602, column: 5, scope: !6367)
!6406 = !DILocation(line: 604, column: 10, scope: !6367)
!6407 = !DILocation(line: 604, column: 15, scope: !6367)
!6408 = !DILocation(line: 604, column: 8, scope: !6367)
!6409 = !DILocation(line: 605, column: 5, scope: !6367)
!6410 = !DILocation(line: 607, column: 10, scope: !6367)
!6411 = !DILocation(line: 607, column: 15, scope: !6367)
!6412 = !DILocation(line: 607, column: 8, scope: !6367)
!6413 = !DILocation(line: 608, column: 5, scope: !6367)
!6414 = !DILocation(line: 610, column: 10, scope: !6367)
!6415 = !DILocation(line: 610, column: 15, scope: !6367)
!6416 = !DILocation(line: 610, column: 8, scope: !6367)
!6417 = !DILocation(line: 611, column: 5, scope: !6367)
!6418 = !DILocation(line: 613, column: 10, scope: !6367)
!6419 = !DILocation(line: 613, column: 15, scope: !6367)
!6420 = !DILocation(line: 613, column: 8, scope: !6367)
!6421 = !DILocation(line: 614, column: 5, scope: !6367)
!6422 = !DILocation(line: 616, column: 9, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6367, file: !1, line: 616, column: 9)
!6424 = !DILocation(line: 616, column: 14, scope: !6423)
!6425 = !DILocation(line: 616, column: 9, scope: !6367)
!6426 = !DILocation(line: 617, column: 28, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6423, file: !1, line: 616, column: 21)
!6428 = !DILocation(line: 617, column: 33, scope: !6427)
!6429 = !DILocation(line: 617, column: 36, scope: !6427)
!6430 = !DILocation(line: 617, column: 41, scope: !6427)
!6431 = !DILocation(line: 617, column: 48, scope: !6427)
!6432 = !DILocation(line: 617, column: 27, scope: !6427)
!6433 = !DILocation(line: 617, column: 21, scope: !6427)
!6434 = !DILocation(line: 617, column: 6, scope: !6427)
!6435 = !DILocation(line: 617, column: 14, scope: !6427)
!6436 = !DILocation(line: 618, column: 28, scope: !6427)
!6437 = !DILocation(line: 618, column: 33, scope: !6427)
!6438 = !DILocation(line: 618, column: 36, scope: !6427)
!6439 = !DILocation(line: 618, column: 41, scope: !6427)
!6440 = !DILocation(line: 618, column: 48, scope: !6427)
!6441 = !DILocation(line: 618, column: 27, scope: !6427)
!6442 = !DILocation(line: 618, column: 21, scope: !6427)
!6443 = !DILocation(line: 618, column: 6, scope: !6427)
!6444 = !DILocation(line: 618, column: 14, scope: !6427)
!6445 = !DILocation(line: 619, column: 6, scope: !6427)
!6446 = !DILocation(line: 619, column: 14, scope: !6427)
!6447 = !DILocation(line: 620, column: 11, scope: !6427)
!6448 = !DILocation(line: 620, column: 9, scope: !6427)
!6449 = !DILocation(line: 621, column: 5, scope: !6427)
!6450 = !DILocation(line: 622, column: 5, scope: !6367)
!6451 = !DILocation(line: 624, column: 10, scope: !6367)
!6452 = !DILocation(line: 624, column: 15, scope: !6367)
!6453 = !DILocation(line: 624, column: 8, scope: !6367)
!6454 = !DILocation(line: 625, column: 12, scope: !6367)
!6455 = !DILocation(line: 626, column: 5, scope: !6367)
!6456 = !DILocation(line: 628, column: 9, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6367, file: !1, line: 628, column: 9)
!6458 = !DILocation(line: 628, column: 14, scope: !6457)
!6459 = !DILocation(line: 628, column: 9, scope: !6367)
!6460 = !DILocation(line: 629, column: 10, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6457, file: !1, line: 628, column: 19)
!6462 = !DILocation(line: 629, column: 17, scope: !6461)
!6463 = !DILocation(line: 629, column: 24, scope: !6461)
!6464 = !DILocation(line: 629, column: 22, scope: !6461)
!6465 = !DILocation(line: 629, column: 8, scope: !6461)
!6466 = !DILocation(line: 630, column: 18, scope: !6461)
!6467 = !DILocation(line: 630, column: 23, scope: !6461)
!6468 = !DILocation(line: 630, column: 28, scope: !6461)
!6469 = !DILocation(line: 630, column: 32, scope: !6461)
!6470 = !DILocation(line: 630, column: 11, scope: !6461)
!6471 = !DILocation(line: 630, column: 7, scope: !6461)
!6472 = !DILocation(line: 630, column: 9, scope: !6461)
!6473 = !DILocation(line: 631, column: 5, scope: !6461)
!6474 = !DILocation(line: 632, column: 5, scope: !6367)
!6475 = !DILocation(line: 634, column: 9, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6367, file: !1, line: 634, column: 9)
!6477 = !DILocation(line: 634, column: 14, scope: !6476)
!6478 = !DILocation(line: 634, column: 9, scope: !6367)
!6479 = !DILocation(line: 635, column: 10, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6476, file: !1, line: 634, column: 19)
!6481 = !DILocation(line: 635, column: 17, scope: !6480)
!6482 = !DILocation(line: 635, column: 24, scope: !6480)
!6483 = !DILocation(line: 635, column: 22, scope: !6480)
!6484 = !DILocation(line: 635, column: 8, scope: !6480)
!6485 = !DILocation(line: 636, column: 18, scope: !6480)
!6486 = !DILocation(line: 636, column: 23, scope: !6480)
!6487 = !DILocation(line: 636, column: 28, scope: !6480)
!6488 = !DILocation(line: 636, column: 11, scope: !6480)
!6489 = !DILocation(line: 636, column: 7, scope: !6480)
!6490 = !DILocation(line: 636, column: 9, scope: !6480)
!6491 = !DILocation(line: 637, column: 5, scope: !6480)
!6492 = !DILocation(line: 638, column: 5, scope: !6367)
!6493 = !DILocation(line: 640, column: 9, scope: !6367)
!6494 = !DILocation(line: 640, column: 16, scope: !6367)
!6495 = !DILocation(line: 640, column: 23, scope: !6367)
!6496 = !DILocation(line: 640, column: 21, scope: !6367)
!6497 = !DILocation(line: 640, column: 7, scope: !6367)
!6498 = !DILocation(line: 641, column: 10, scope: !6367)
!6499 = !DILocation(line: 641, column: 15, scope: !6367)
!6500 = !DILocation(line: 641, column: 6, scope: !6367)
!6501 = !DILocation(line: 641, column: 8, scope: !6367)
!6502 = !DILocation(line: 642, column: 5, scope: !6367)
!6503 = !DILocation(line: 644, column: 10, scope: !6367)
!6504 = !DILocation(line: 644, column: 15, scope: !6367)
!6505 = !DILocation(line: 644, column: 8, scope: !6367)
!6506 = !DILocation(line: 645, column: 12, scope: !6367)
!6507 = !DILocation(line: 646, column: 5, scope: !6367)
!6508 = !DILocation(line: 648, column: 7, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6355, file: !1, line: 648, column: 7)
!6510 = !DILocation(line: 648, column: 7, scope: !6355)
!6511 = !DILocation(line: 649, column: 8, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6509, file: !1, line: 648, column: 12)
!6513 = !DILocation(line: 649, column: 15, scope: !6512)
!6514 = !DILocation(line: 649, column: 22, scope: !6512)
!6515 = !DILocation(line: 649, column: 30, scope: !6512)
!6516 = !DILocation(line: 649, column: 29, scope: !6512)
!6517 = !DILocation(line: 649, column: 20, scope: !6512)
!6518 = !DILocation(line: 649, column: 6, scope: !6512)
!6519 = !DILocation(line: 650, column: 10, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6512, file: !1, line: 650, column: 4)
!6521 = !DILocation(line: 650, column: 9, scope: !6520)
!6522 = !DILocation(line: 650, column: 14, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6520, file: !1, line: 650, column: 4)
!6524 = !DILocation(line: 650, column: 16, scope: !6523)
!6525 = !DILocation(line: 650, column: 15, scope: !6523)
!6526 = !DILocation(line: 650, column: 4, scope: !6520)
!6527 = !DILocation(line: 651, column: 12, scope: !6523)
!6528 = !DILocation(line: 651, column: 16, scope: !6523)
!6529 = !DILocation(line: 651, column: 5, scope: !6523)
!6530 = !DILocation(line: 651, column: 8, scope: !6523)
!6531 = !DILocation(line: 651, column: 10, scope: !6523)
!6532 = !DILocation(line: 650, column: 26, scope: !6523)
!6533 = !DILocation(line: 650, column: 4, scope: !6523)
!6534 = distinct !{!6534, !6526, !6535}
!6535 = !DILocation(line: 651, column: 17, scope: !6520)
!6536 = !DILocation(line: 652, column: 3, scope: !6512)
!6537 = !DILocation(line: 653, column: 2, scope: !6355)
!6538 = !DILocation(line: 572, column: 46, scope: !6352)
!6539 = !DILocation(line: 572, column: 53, scope: !6352)
!6540 = !DILocation(line: 572, column: 44, scope: !6352)
!6541 = !DILocation(line: 572, column: 2, scope: !6352)
!6542 = distinct !{!6542, !6353, !6543}
!6543 = !DILocation(line: 653, column: 2, scope: !6346)
!6544 = !DILocation(line: 654, column: 1, scope: !6318)
!6545 = distinct !DISubprogram(name: "zbufshade_sss_tile", scope: !1, file: !1, line: 1604, type: !2174, scopeLine: 1605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!6546 = !DILocalVariable(name: "pa", arg: 1, scope: !6545, file: !1, line: 1604, type: !2083)
!6547 = !DILocation(line: 1604, column: 37, scope: !6545)
!6548 = !DILocalVariable(name: "re", scope: !6545, file: !1, line: 1606, type: !6549)
!6549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6550, size: 64)
!6550 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !90, line: 58, baseType: !6551)
!6551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !2085, line: 126, size: 49920, elements: !6552)
!6552 = !{!6553, !6555, !6556, !6557, !6558, !6559, !6560, !6561, !6562, !6563, !6564, !6565, !6566, !6573, !6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6613, !6616, !6617, !6618, !6620, !6678, !6681, !6683, !6685, !6686, !6687, !6688, !6689, !6692, !6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700, !6701, !6702, !6703, !6704, !6705, !6706, !6707, !6708, !6709, !6710, !6711, !6712, !6713, !6714, !6715, !6716, !6717, !6718, !6719, !6720, !6721, !6722, !6726, !6727, !6728, !6729, !6734, !6735, !6739, !6740, !6771, !6772, !6776, !6777, !6781, !6782, !6783, !6784, !6785, !6788, !6789}
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6551, file: !2085, line: 128, baseType: !6554, size: 64)
!6554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 64)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6551, file: !2085, line: 128, baseType: !6554, size: 64, offset: 64)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6551, file: !2085, line: 129, baseType: !97, size: 592, offset: 128)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !6551, file: !2085, line: 130, baseType: !5, size: 32, offset: 736)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6551, file: !2085, line: 133, baseType: !79, size: 16, offset: 768)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !6551, file: !2085, line: 133, baseType: !79, size: 16, offset: 784)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !6551, file: !2085, line: 133, baseType: !79, size: 16, offset: 800)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "result_ok", scope: !6551, file: !2085, line: 133, baseType: !79, size: 16, offset: 816)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "scene_color_manage", scope: !6551, file: !2085, line: 136, baseType: !770, size: 8, offset: 832)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !6551, file: !2085, line: 139, baseType: !2092, size: 64, offset: 896)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "pushedresult", scope: !6551, file: !2085, line: 141, baseType: !2092, size: 64, offset: 960)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !6551, file: !2085, line: 143, baseType: !170, size: 128, offset: 1024)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "resultmutex", scope: !6551, file: !2085, line: 147, baseType: !6567, size: 32, offset: 1152)
!6567 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !6568, line: 148, baseType: !6569)
!6568 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6569 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !6570, line: 10, baseType: !6571)
!6570 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6571 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !585, line: 26, baseType: !6572)
!6572 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !587, line: 42, baseType: !41)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !6551, file: !2085, line: 150, baseType: !5, size: 32, offset: 1184)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !6551, file: !2085, line: 150, baseType: !5, size: 32, offset: 1216)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !6551, file: !2085, line: 152, baseType: !859, size: 128, offset: 1248)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !6551, file: !2085, line: 153, baseType: !1106, size: 128, offset: 1376)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !6551, file: !2085, line: 154, baseType: !57, size: 32, offset: 1504)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !6551, file: !2085, line: 154, baseType: !57, size: 32, offset: 1536)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !6551, file: !2085, line: 155, baseType: !57, size: 32, offset: 1568)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !6551, file: !2085, line: 158, baseType: !5, size: 32, offset: 1600)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !6551, file: !2085, line: 158, baseType: !5, size: 32, offset: 1632)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "partx", scope: !6551, file: !2085, line: 162, baseType: !5, size: 32, offset: 1664)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "party", scope: !6551, file: !2085, line: 162, baseType: !5, size: 32, offset: 1696)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !6551, file: !2085, line: 165, baseType: !57, size: 32, offset: 1728)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "panophi", scope: !6551, file: !2085, line: 167, baseType: !57, size: 32, offset: 1760)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "panosi", scope: !6551, file: !2085, line: 167, baseType: !57, size: 32, offset: 1792)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "panoco", scope: !6551, file: !2085, line: 167, baseType: !57, size: 32, offset: 1824)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "panodxp", scope: !6551, file: !2085, line: 167, baseType: !57, size: 32, offset: 1856)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "panodxv", scope: !6551, file: !2085, line: 167, baseType: !57, size: 32, offset: 1888)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "grvec", scope: !6551, file: !2085, line: 170, baseType: !217, size: 96, offset: 1920)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !6551, file: !2085, line: 171, baseType: !1639, size: 288, offset: 2016)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !6551, file: !2085, line: 172, baseType: !488, size: 512, offset: 2304)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !6551, file: !2085, line: 172, baseType: !488, size: 512, offset: 2816)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat_orig", scope: !6551, file: !2085, line: 173, baseType: !488, size: 512, offset: 3328)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !6551, file: !2085, line: 174, baseType: !488, size: 512, offset: 3840)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !6551, file: !2085, line: 177, baseType: !57, size: 32, offset: 4352)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !6551, file: !2085, line: 178, baseType: !57, size: 32, offset: 4384)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !6551, file: !2085, line: 181, baseType: !6599, size: 64, offset: 4416)
!6599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6600, size: 64)
!6600 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleTables", file: !2085, line: 77, baseType: !6601)
!6601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SampleTables", file: !2085, line: 72, size: 3776, elements: !6602)
!6602 = !{!6603, !6605, !6609, !6610, !6612}
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "centLut", scope: !6601, file: !2085, line: 73, baseType: !6604, size: 512)
!6604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 512, elements: !2879)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "fmask1", scope: !6601, file: !2085, line: 74, baseType: !6606, size: 576, offset: 512)
!6606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !692, size: 576, elements: !6607)
!6607 = !{!6608}
!6608 = !DISubrange(count: 9)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "fmask2", scope: !6601, file: !2085, line: 74, baseType: !6606, size: 576, offset: 1088)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "cmask", scope: !6601, file: !2085, line: 75, baseType: !6611, size: 2048, offset: 1664)
!6611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 2048, elements: !3122)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "centmask", scope: !6601, file: !2085, line: 75, baseType: !470, size: 64, offset: 3712)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !6551, file: !2085, line: 182, baseType: !6614, size: 2048, offset: 4480)
!6614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 2048, elements: !6615)
!6615 = !{!332, !605}
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_jit", scope: !6551, file: !2085, line: 183, baseType: !6614, size: 2048, offset: 6528)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "qmcsamplers", scope: !6551, file: !2085, line: 184, baseType: !595, size: 64, offset: 8576)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "shadowsamplenr", scope: !6551, file: !2085, line: 187, baseType: !6619, size: 32, offset: 8640)
!6619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 32, elements: !318)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !6551, file: !2085, line: 190, baseType: !6621, size: 64, offset: 8704)
!6621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6622, size: 64)
!6622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !6623, line: 53, size: 15232, elements: !6624)
!6623 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6624 = !{!6625, !6626, !6627, !6628, !6629, !6630, !6631, !6632, !6633, !6635, !6636, !6637, !6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649, !6650, !6651, !6652, !6653, !6654, !6655, !6656, !6657, !6658, !6659, !6660, !6661, !6662, !6663, !6664, !6665, !6666, !6667, !6668, !6669, !6670, !6671, !6672, !6675}
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6622, file: !6623, line: 54, baseType: !6621, size: 64)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6622, file: !6623, line: 54, baseType: !6621, size: 64, offset: 64)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6622, file: !6623, line: 55, baseType: !132, size: 8192, offset: 128)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !6622, file: !6623, line: 56, baseType: !79, size: 16, offset: 8320)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !6622, file: !6623, line: 56, baseType: !79, size: 16, offset: 8336)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !6622, file: !6623, line: 57, baseType: !79, size: 16, offset: 8352)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !6622, file: !6623, line: 57, baseType: !79, size: 16, offset: 8368)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !6622, file: !6623, line: 58, baseType: !584, size: 64, offset: 8384)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !6622, file: !6623, line: 59, baseType: !6634, size: 128, offset: 8448)
!6634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 128, elements: !2879)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !6622, file: !6623, line: 60, baseType: !79, size: 16, offset: 8576)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !6622, file: !6623, line: 62, baseType: !122, size: 64, offset: 8640)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6622, file: !6623, line: 63, baseType: !170, size: 128, offset: 8704)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !6622, file: !6623, line: 64, baseType: !170, size: 128, offset: 8832)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !6622, file: !6623, line: 65, baseType: !170, size: 128, offset: 8960)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !6622, file: !6623, line: 66, baseType: !170, size: 128, offset: 9088)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !6622, file: !6623, line: 67, baseType: !170, size: 128, offset: 9216)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !6622, file: !6623, line: 68, baseType: !170, size: 128, offset: 9344)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !6622, file: !6623, line: 69, baseType: !170, size: 128, offset: 9472)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !6622, file: !6623, line: 70, baseType: !170, size: 128, offset: 9600)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !6622, file: !6623, line: 71, baseType: !170, size: 128, offset: 9728)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !6622, file: !6623, line: 72, baseType: !170, size: 128, offset: 9856)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !6622, file: !6623, line: 73, baseType: !170, size: 128, offset: 9984)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !6622, file: !6623, line: 74, baseType: !170, size: 128, offset: 10112)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6622, file: !6623, line: 75, baseType: !170, size: 128, offset: 10240)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6622, file: !6623, line: 76, baseType: !170, size: 128, offset: 10368)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !6622, file: !6623, line: 77, baseType: !170, size: 128, offset: 10496)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !6622, file: !6623, line: 78, baseType: !170, size: 128, offset: 10624)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !6622, file: !6623, line: 79, baseType: !170, size: 128, offset: 10752)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !6622, file: !6623, line: 80, baseType: !170, size: 128, offset: 10880)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !6622, file: !6623, line: 81, baseType: !170, size: 128, offset: 11008)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !6622, file: !6623, line: 82, baseType: !170, size: 128, offset: 11136)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !6622, file: !6623, line: 83, baseType: !170, size: 128, offset: 11264)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !6622, file: !6623, line: 84, baseType: !170, size: 128, offset: 11392)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !6622, file: !6623, line: 85, baseType: !170, size: 128, offset: 11520)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6622, file: !6623, line: 86, baseType: !170, size: 128, offset: 11648)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !6622, file: !6623, line: 87, baseType: !170, size: 128, offset: 11776)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !6622, file: !6623, line: 88, baseType: !170, size: 128, offset: 11904)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !6622, file: !6623, line: 89, baseType: !170, size: 128, offset: 12032)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !6622, file: !6623, line: 90, baseType: !170, size: 128, offset: 12160)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !6622, file: !6623, line: 91, baseType: !170, size: 128, offset: 12288)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !6622, file: !6623, line: 92, baseType: !170, size: 128, offset: 12416)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !6622, file: !6623, line: 93, baseType: !170, size: 128, offset: 12544)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !6622, file: !6623, line: 94, baseType: !170, size: 128, offset: 12672)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6622, file: !6623, line: 95, baseType: !170, size: 128, offset: 12800)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !6622, file: !6623, line: 96, baseType: !170, size: 128, offset: 12928)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !6622, file: !6623, line: 98, baseType: !6611, size: 2048, offset: 13056)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !6622, file: !6623, line: 101, baseType: !6673, size: 64, offset: 15104)
!6673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6674, size: 64)
!6674 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !6623, line: 49, flags: DIFlagFwdDecl)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6622, file: !6623, line: 103, baseType: !6676, size: 64, offset: 15168)
!6676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6677, size: 64)
!6677 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !6623, line: 51, flags: DIFlagFwdDecl)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6551, file: !2085, line: 191, baseType: !6679, size: 64, offset: 8768)
!6679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6680, size: 64)
!6680 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !4, line: 1299, baseType: !614)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !6551, file: !2085, line: 192, baseType: !6682, size: 31872, offset: 8832)
!6682 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderData", file: !4, line: 611, baseType: !1065)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "wrld", scope: !6551, file: !2085, line: 193, baseType: !6684, size: 4224, offset: 40704)
!6684 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !622, line: 131, baseType: !621)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !6551, file: !2085, line: 194, baseType: !352, size: 64, offset: 44928)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !6551, file: !2085, line: 195, baseType: !41, size: 32, offset: 44992)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !6551, file: !2085, line: 195, baseType: !41, size: 32, offset: 45024)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !6551, file: !2085, line: 197, baseType: !170, size: 128, offset: 45056)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !6551, file: !2085, line: 200, baseType: !6690, size: 64, offset: 45184)
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6691, size: 64)
!6691 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !2085, line: 65, flags: DIFlagFwdDecl)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !6551, file: !2085, line: 203, baseType: !3064, size: 64, offset: 45248)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !6551, file: !2085, line: 204, baseType: !3162, size: 64, offset: 45312)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !6551, file: !2085, line: 205, baseType: !3173, size: 64, offset: 45376)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !6551, file: !2085, line: 206, baseType: !57, size: 32, offset: 45440)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "occlusiontree", scope: !6551, file: !2085, line: 209, baseType: !58, size: 64, offset: 45504)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "strandsurface", scope: !6551, file: !2085, line: 210, baseType: !170, size: 128, offset: 45568)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_offs", scope: !6551, file: !2085, line: 213, baseType: !57, size: 32, offset: 45696)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "field_offs", scope: !6551, file: !2085, line: 213, baseType: !57, size: 32, offset: 45728)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !6551, file: !2085, line: 216, baseType: !5, size: 32, offset: 45760)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !6551, file: !2085, line: 216, baseType: !5, size: 32, offset: 45792)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !6551, file: !2085, line: 216, baseType: !5, size: 32, offset: 45824)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !6551, file: !2085, line: 216, baseType: !5, size: 32, offset: 45856)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !6551, file: !2085, line: 216, baseType: !5, size: 32, offset: 45888)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "sortedhalos", scope: !6551, file: !2085, line: 217, baseType: !3018, size: 64, offset: 45952)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "lights", scope: !6551, file: !2085, line: 219, baseType: !170, size: 128, offset: 46016)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !6551, file: !2085, line: 220, baseType: !170, size: 128, offset: 46144)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "objecttable", scope: !6551, file: !2085, line: 222, baseType: !170, size: 128, offset: 46272)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "objectinstance", scope: !6551, file: !2085, line: 224, baseType: !3177, size: 64, offset: 46400)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "instancetable", scope: !6551, file: !2085, line: 225, baseType: !170, size: 128, offset: 46464)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "totinstance", scope: !6551, file: !2085, line: 226, baseType: !5, size: 32, offset: 46592)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "bakebuf", scope: !6551, file: !2085, line: 228, baseType: !832, size: 64, offset: 46656)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "orco_hash", scope: !6551, file: !2085, line: 230, baseType: !405, size: 64, offset: 46720)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "sss_hash", scope: !6551, file: !2085, line: 232, baseType: !405, size: 64, offset: 46784)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "sss_points", scope: !6551, file: !2085, line: 233, baseType: !595, size: 64, offset: 46848)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "sss_mat", scope: !6551, file: !2085, line: 234, baseType: !108, size: 64, offset: 46912)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_names", scope: !6551, file: !2085, line: 236, baseType: !170, size: 128, offset: 46976)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "excludeob", scope: !6551, file: !2085, line: 238, baseType: !352, size: 64, offset: 47104)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "render_volumes_inside", scope: !6551, file: !2085, line: 239, baseType: !170, size: 128, offset: 47168)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "volumes", scope: !6551, file: !2085, line: 240, baseType: !170, size: 128, offset: 47296)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "memArena", scope: !6551, file: !2085, line: 250, baseType: !4869, size: 64, offset: 47424)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "display_init", scope: !6551, file: !2085, line: 253, baseType: !6723, size: 64, offset: 47488)
!6723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6724, size: 64)
!6724 = !DISubroutineType(types: !6725)
!6725 = !{null, !58, !2092}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "dih", scope: !6551, file: !2085, line: 254, baseType: !58, size: 64, offset: 47552)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "display_clear", scope: !6551, file: !2085, line: 255, baseType: !6723, size: 64, offset: 47616)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !6551, file: !2085, line: 256, baseType: !58, size: 64, offset: 47680)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !6551, file: !2085, line: 257, baseType: !6730, size: 64, offset: 47744)
!6730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6731, size: 64)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{null, !58, !2092, !6733}
!6733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !6551, file: !2085, line: 258, baseType: !58, size: 64, offset: 47808)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "current_scene_update", scope: !6551, file: !2085, line: 259, baseType: !6736, size: 64, offset: 47872)
!6736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6737, size: 64)
!6737 = !DISubroutineType(types: !6738)
!6738 = !{null, !58, !613}
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "suh", scope: !6551, file: !2085, line: 260, baseType: !58, size: 64, offset: 47936)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !6551, file: !2085, line: 262, baseType: !6741, size: 64, offset: 48000)
!6741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6742, size: 64)
!6742 = !DISubroutineType(types: !6743)
!6743 = !{null, !58, !6744}
!6744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6745, size: 64)
!6745 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !90, line: 160, baseType: !6746)
!6746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !90, line: 151, size: 1216, elements: !6747)
!6747 = !{!6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6767, !6768, !6769, !6770}
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !6746, file: !90, line: 152, baseType: !5, size: 32)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !6746, file: !90, line: 153, baseType: !5, size: 32, offset: 32)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !6746, file: !90, line: 153, baseType: !5, size: 32, offset: 64)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !6746, file: !90, line: 153, baseType: !5, size: 32, offset: 96)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !6746, file: !90, line: 153, baseType: !5, size: 32, offset: 128)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !6746, file: !90, line: 153, baseType: !5, size: 32, offset: 160)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !6746, file: !90, line: 153, baseType: !5, size: 32, offset: 192)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !6746, file: !90, line: 154, baseType: !79, size: 16, offset: 224)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !6746, file: !90, line: 154, baseType: !79, size: 16, offset: 240)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !6746, file: !90, line: 154, baseType: !79, size: 16, offset: 256)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !6746, file: !90, line: 154, baseType: !79, size: 16, offset: 272)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !6746, file: !90, line: 154, baseType: !79, size: 16, offset: 288)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !6746, file: !90, line: 154, baseType: !79, size: 16, offset: 304)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !6746, file: !90, line: 155, baseType: !770, size: 8, offset: 320)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !6746, file: !90, line: 156, baseType: !1589, size: 64, offset: 384)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !6746, file: !90, line: 156, baseType: !1589, size: 64, offset: 448)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !6746, file: !90, line: 157, baseType: !6765, size: 64, offset: 512)
!6765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6766, size: 64)
!6766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !98)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !6746, file: !90, line: 157, baseType: !6765, size: 64, offset: 576)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !6746, file: !90, line: 158, baseType: !160, size: 512, offset: 640)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !6746, file: !90, line: 159, baseType: !57, size: 32, offset: 1152)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !6746, file: !90, line: 159, baseType: !57, size: 32, offset: 1184)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !6551, file: !2085, line: 263, baseType: !58, size: 64, offset: 48064)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !6551, file: !2085, line: 264, baseType: !6773, size: 64, offset: 48128)
!6773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6774, size: 64)
!6774 = !DISubroutineType(types: !6775)
!6775 = !{null, !58, !57}
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !6551, file: !2085, line: 265, baseType: !58, size: 64, offset: 48192)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "draw_lock", scope: !6551, file: !2085, line: 267, baseType: !6778, size: 64, offset: 48256)
!6778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6779, size: 64)
!6779 = !DISubroutineType(types: !6780)
!6780 = !{null, !58, !5}
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "dlh", scope: !6551, file: !2085, line: 268, baseType: !58, size: 64, offset: 48320)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !6551, file: !2085, line: 269, baseType: !3158, size: 64, offset: 48384)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !6551, file: !2085, line: 270, baseType: !58, size: 64, offset: 48448)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6551, file: !2085, line: 272, baseType: !6745, size: 1216, offset: 48512)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !6551, file: !2085, line: 274, baseType: !6786, size: 64, offset: 49728)
!6786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6787, size: 64)
!6787 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !90, line: 45, flags: DIFlagFwdDecl)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !6551, file: !2085, line: 276, baseType: !3053, size: 64, offset: 49792)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !6551, file: !2085, line: 277, baseType: !6673, size: 64, offset: 49856)
!6790 = !DILocation(line: 1606, column: 10, scope: !6545)
!6791 = !DILocalVariable(name: "ssamp", scope: !6545, file: !1, line: 1607, type: !2872)
!6792 = !DILocation(line: 1607, column: 14, scope: !6545)
!6793 = !DILocalVariable(name: "handle", scope: !6545, file: !1, line: 1608, type: !6794)
!6794 = !DIDerivedType(tag: DW_TAG_typedef, name: "ZBufSSSHandle", file: !1, line: 1469, baseType: !6795)
!6795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ZBufSSSHandle", file: !1, line: 1465, size: 256, elements: !6796)
!6796 = !{!6797, !6798, !6799}
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !6795, file: !1, line: 1466, baseType: !2083, size: 64)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "psmlist", scope: !6795, file: !1, line: 1467, baseType: !170, size: 128, offset: 64)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "totps", scope: !6795, file: !1, line: 1468, baseType: !5, size: 32, offset: 192)
!6800 = !DILocation(line: 1608, column: 16, scope: !6545)
!6801 = !DILocalVariable(name: "rr", scope: !6545, file: !1, line: 1609, type: !2092)
!6802 = !DILocation(line: 1609, column: 16, scope: !6545)
!6803 = !DILocation(line: 1609, column: 20, scope: !6545)
!6804 = !DILocation(line: 1609, column: 24, scope: !6545)
!6805 = !DILocalVariable(name: "rl", scope: !6545, file: !1, line: 1610, type: !88)
!6806 = !DILocation(line: 1610, column: 15, scope: !6545)
!6807 = !DILocalVariable(name: "vlr", scope: !6545, file: !1, line: 1611, type: !6808)
!6808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6809, size: 64)
!6809 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakRen", file: !2085, line: 411, baseType: !2890)
!6810 = !DILocation(line: 1611, column: 11, scope: !6545)
!6811 = !DILocalVariable(name: "mat", scope: !6545, file: !1, line: 1612, type: !6812)
!6812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6813, size: 64)
!6813 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !110, line: 203, baseType: !109)
!6814 = !DILocation(line: 1612, column: 12, scope: !6545)
!6815 = !DILocation(line: 1612, column: 17, scope: !6545)
!6816 = !DILocation(line: 1612, column: 21, scope: !6545)
!6817 = !DILocalVariable(name: "co", scope: !6545, file: !1, line: 1613, type: !3227)
!6818 = !DILocation(line: 1613, column: 10, scope: !6545)
!6819 = !DILocalVariable(name: "color", scope: !6545, file: !1, line: 1613, type: !3227)
!6820 = !DILocation(line: 1613, column: 20, scope: !6545)
!6821 = !DILocalVariable(name: "area", scope: !6545, file: !1, line: 1613, type: !692)
!6822 = !DILocation(line: 1613, column: 32, scope: !6545)
!6823 = !DILocalVariable(name: "fcol", scope: !6545, file: !1, line: 1613, type: !692)
!6824 = !DILocation(line: 1613, column: 39, scope: !6545)
!6825 = !DILocalVariable(name: "x", scope: !6545, file: !1, line: 1614, type: !5)
!6826 = !DILocation(line: 1614, column: 6, scope: !6545)
!6827 = !DILocalVariable(name: "y", scope: !6545, file: !1, line: 1614, type: !5)
!6828 = !DILocation(line: 1614, column: 9, scope: !6545)
!6829 = !DILocalVariable(name: "seed", scope: !6545, file: !1, line: 1614, type: !5)
!6830 = !DILocation(line: 1614, column: 12, scope: !6545)
!6831 = !DILocalVariable(name: "quad", scope: !6545, file: !1, line: 1614, type: !5)
!6832 = !DILocation(line: 1614, column: 18, scope: !6545)
!6833 = !DILocalVariable(name: "totpoint", scope: !6545, file: !1, line: 1614, type: !5)
!6834 = !DILocation(line: 1614, column: 24, scope: !6545)
!6835 = !DILocalVariable(name: "display", scope: !6545, file: !1, line: 1614, type: !5)
!6836 = !DILocation(line: 1614, column: 34, scope: !6545)
!6837 = !DILocation(line: 1614, column: 46, scope: !6545)
!6838 = !DILocation(line: 1614, column: 50, scope: !6545)
!6839 = !DILocation(line: 1614, column: 52, scope: !6545)
!6840 = !DILocation(line: 1614, column: 60, scope: !6545)
!6841 = !DILocation(line: 1614, column: 44, scope: !6545)
!6842 = !DILocalVariable(name: "ro", scope: !6545, file: !1, line: 1615, type: !855)
!6843 = !DILocation(line: 1615, column: 7, scope: !6545)
!6844 = !DILocalVariable(name: "rz", scope: !6545, file: !1, line: 1615, type: !855)
!6845 = !DILocation(line: 1615, column: 12, scope: !6545)
!6846 = !DILocalVariable(name: "rp", scope: !6545, file: !1, line: 1615, type: !855)
!6847 = !DILocation(line: 1615, column: 17, scope: !6545)
!6848 = !DILocalVariable(name: "rbo", scope: !6545, file: !1, line: 1615, type: !855)
!6849 = !DILocation(line: 1615, column: 22, scope: !6545)
!6850 = !DILocalVariable(name: "rbz", scope: !6545, file: !1, line: 1615, type: !855)
!6851 = !DILocation(line: 1615, column: 28, scope: !6545)
!6852 = !DILocalVariable(name: "rbp", scope: !6545, file: !1, line: 1615, type: !855)
!6853 = !DILocation(line: 1615, column: 34, scope: !6545)
!6854 = !DILocalVariable(name: "lay", scope: !6545, file: !1, line: 1615, type: !5)
!6855 = !DILocation(line: 1615, column: 39, scope: !6545)
!6856 = !DILocation(line: 1623, column: 13, scope: !6545)
!6857 = !DILocation(line: 1623, column: 9, scope: !6545)
!6858 = !DILocation(line: 1623, column: 11, scope: !6545)
!6859 = !DILocation(line: 1624, column: 9, scope: !6545)
!6860 = !DILocation(line: 1624, column: 14, scope: !6545)
!6861 = !DILocation(line: 1632, column: 13, scope: !6545)
!6862 = !DILocation(line: 1632, column: 37, scope: !6545)
!6863 = !DILocation(line: 1632, column: 41, scope: !6545)
!6864 = !DILocation(line: 1632, column: 36, scope: !6545)
!6865 = !DILocation(line: 1632, column: 47, scope: !6545)
!6866 = !DILocation(line: 1632, column: 51, scope: !6545)
!6867 = !DILocation(line: 1632, column: 46, scope: !6545)
!6868 = !DILocation(line: 1632, column: 2, scope: !6545)
!6869 = !DILocation(line: 1632, column: 6, scope: !6545)
!6870 = !DILocation(line: 1632, column: 11, scope: !6545)
!6871 = !DILocation(line: 1633, column: 13, scope: !6545)
!6872 = !DILocation(line: 1633, column: 37, scope: !6545)
!6873 = !DILocation(line: 1633, column: 41, scope: !6545)
!6874 = !DILocation(line: 1633, column: 36, scope: !6545)
!6875 = !DILocation(line: 1633, column: 47, scope: !6545)
!6876 = !DILocation(line: 1633, column: 51, scope: !6545)
!6877 = !DILocation(line: 1633, column: 46, scope: !6545)
!6878 = !DILocation(line: 1633, column: 2, scope: !6545)
!6879 = !DILocation(line: 1633, column: 6, scope: !6545)
!6880 = !DILocation(line: 1633, column: 11, scope: !6545)
!6881 = !DILocation(line: 1634, column: 13, scope: !6545)
!6882 = !DILocation(line: 1634, column: 37, scope: !6545)
!6883 = !DILocation(line: 1634, column: 41, scope: !6545)
!6884 = !DILocation(line: 1634, column: 36, scope: !6545)
!6885 = !DILocation(line: 1634, column: 47, scope: !6545)
!6886 = !DILocation(line: 1634, column: 51, scope: !6545)
!6887 = !DILocation(line: 1634, column: 46, scope: !6545)
!6888 = !DILocation(line: 1634, column: 2, scope: !6545)
!6889 = !DILocation(line: 1634, column: 6, scope: !6545)
!6890 = !DILocation(line: 1634, column: 11, scope: !6545)
!6891 = !DILocation(line: 1635, column: 17, scope: !6545)
!6892 = !DILocation(line: 1635, column: 41, scope: !6545)
!6893 = !DILocation(line: 1635, column: 45, scope: !6545)
!6894 = !DILocation(line: 1635, column: 40, scope: !6545)
!6895 = !DILocation(line: 1635, column: 51, scope: !6545)
!6896 = !DILocation(line: 1635, column: 55, scope: !6545)
!6897 = !DILocation(line: 1635, column: 50, scope: !6545)
!6898 = !DILocation(line: 1635, column: 2, scope: !6545)
!6899 = !DILocation(line: 1635, column: 6, scope: !6545)
!6900 = !DILocation(line: 1635, column: 15, scope: !6545)
!6901 = !DILocation(line: 1636, column: 17, scope: !6545)
!6902 = !DILocation(line: 1636, column: 41, scope: !6545)
!6903 = !DILocation(line: 1636, column: 45, scope: !6545)
!6904 = !DILocation(line: 1636, column: 40, scope: !6545)
!6905 = !DILocation(line: 1636, column: 51, scope: !6545)
!6906 = !DILocation(line: 1636, column: 55, scope: !6545)
!6907 = !DILocation(line: 1636, column: 50, scope: !6545)
!6908 = !DILocation(line: 1636, column: 2, scope: !6545)
!6909 = !DILocation(line: 1636, column: 6, scope: !6545)
!6910 = !DILocation(line: 1636, column: 15, scope: !6545)
!6911 = !DILocation(line: 1637, column: 17, scope: !6545)
!6912 = !DILocation(line: 1637, column: 41, scope: !6545)
!6913 = !DILocation(line: 1637, column: 45, scope: !6545)
!6914 = !DILocation(line: 1637, column: 40, scope: !6545)
!6915 = !DILocation(line: 1637, column: 51, scope: !6545)
!6916 = !DILocation(line: 1637, column: 55, scope: !6545)
!6917 = !DILocation(line: 1637, column: 50, scope: !6545)
!6918 = !DILocation(line: 1637, column: 2, scope: !6545)
!6919 = !DILocation(line: 1637, column: 6, scope: !6545)
!6920 = !DILocation(line: 1637, column: 15, scope: !6545)
!6921 = !DILocation(line: 1641, column: 2, scope: !6545)
!6922 = !DILocation(line: 1642, column: 34, scope: !6545)
!6923 = !DILocation(line: 1642, column: 38, scope: !6545)
!6924 = !DILocation(line: 1642, column: 42, scope: !6545)
!6925 = !DILocation(line: 1642, column: 49, scope: !6545)
!6926 = !DILocation(line: 1642, column: 2, scope: !6545)
!6927 = !DILocation(line: 1643, column: 8, scope: !6545)
!6928 = !DILocation(line: 1643, column: 11, scope: !6545)
!6929 = !DILocation(line: 1645, column: 10, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6545, file: !1, line: 1645, column: 2)
!6931 = !DILocation(line: 1645, column: 14, scope: !6930)
!6932 = !DILocation(line: 1645, column: 21, scope: !6930)
!6933 = !DILocation(line: 1645, column: 9, scope: !6930)
!6934 = !DILocation(line: 1645, column: 7, scope: !6930)
!6935 = !DILocation(line: 1645, column: 28, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6930, file: !1, line: 1645, column: 2)
!6937 = !DILocation(line: 1645, column: 2, scope: !6930)
!6938 = !DILocation(line: 1646, column: 23, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6936, file: !1, line: 1645, column: 45)
!6940 = !DILocation(line: 1646, column: 27, scope: !6939)
!6941 = !DILocation(line: 1646, column: 9, scope: !6939)
!6942 = !DILocation(line: 1646, column: 3, scope: !6939)
!6943 = !DILocation(line: 1646, column: 16, scope: !6939)
!6944 = !DILocation(line: 1646, column: 20, scope: !6939)
!6945 = !DILocation(line: 1647, column: 27, scope: !6939)
!6946 = !DILocation(line: 1647, column: 31, scope: !6939)
!6947 = !DILocation(line: 1647, column: 9, scope: !6939)
!6948 = !DILocation(line: 1647, column: 3, scope: !6939)
!6949 = !DILocation(line: 1647, column: 16, scope: !6939)
!6950 = !DILocation(line: 1647, column: 24, scope: !6939)
!6951 = !DILocation(line: 1648, column: 28, scope: !6939)
!6952 = !DILocation(line: 1648, column: 32, scope: !6939)
!6953 = !DILocation(line: 1648, column: 9, scope: !6939)
!6954 = !DILocation(line: 1648, column: 3, scope: !6939)
!6955 = !DILocation(line: 1648, column: 16, scope: !6939)
!6956 = !DILocation(line: 1648, column: 25, scope: !6939)
!6957 = !DILocation(line: 1649, column: 33, scope: !6939)
!6958 = !DILocation(line: 1649, column: 37, scope: !6939)
!6959 = !DILocation(line: 1649, column: 32, scope: !6939)
!6960 = !DILocation(line: 1649, column: 9, scope: !6939)
!6961 = !DILocation(line: 1649, column: 3, scope: !6939)
!6962 = !DILocation(line: 1649, column: 16, scope: !6939)
!6963 = !DILocation(line: 1649, column: 29, scope: !6939)
!6964 = !DILocation(line: 1650, column: 2, scope: !6939)
!6965 = !DILocation(line: 1645, column: 35, scope: !6936)
!6966 = !DILocation(line: 1645, column: 39, scope: !6936)
!6967 = !DILocation(line: 1645, column: 34, scope: !6936)
!6968 = !DILocation(line: 1645, column: 2, scope: !6936)
!6969 = distinct !{!6969, !6937, !6970}
!6970 = !DILocation(line: 1650, column: 2, scope: !6930)
!6971 = !DILocation(line: 1652, column: 6, scope: !6545)
!6972 = !DILocation(line: 1652, column: 10, scope: !6545)
!6973 = !DILocation(line: 1652, column: 17, scope: !6545)
!6974 = !DILocation(line: 1652, column: 4, scope: !6545)
!6975 = !DILocation(line: 1653, column: 8, scope: !6545)
!6976 = !DILocation(line: 1653, column: 2, scope: !6545)
!6977 = !DILocation(line: 1653, column: 15, scope: !6545)
!6978 = !DILocation(line: 1653, column: 24, scope: !6545)
!6979 = !DILocation(line: 1654, column: 8, scope: !6545)
!6980 = !DILocation(line: 1654, column: 2, scope: !6545)
!6981 = !DILocation(line: 1654, column: 15, scope: !6545)
!6982 = !DILocation(line: 1654, column: 28, scope: !6545)
!6983 = !DILocation(line: 1655, column: 8, scope: !6545)
!6984 = !DILocation(line: 1655, column: 2, scope: !6545)
!6985 = !DILocation(line: 1655, column: 15, scope: !6545)
!6986 = !DILocation(line: 1655, column: 27, scope: !6545)
!6987 = !DILocation(line: 1656, column: 8, scope: !6545)
!6988 = !DILocation(line: 1656, column: 2, scope: !6545)
!6989 = !DILocation(line: 1656, column: 15, scope: !6545)
!6990 = !DILocation(line: 1656, column: 29, scope: !6545)
!6991 = !DILocation(line: 1657, column: 13, scope: !6545)
!6992 = !DILocation(line: 1657, column: 7, scope: !6545)
!6993 = !DILocation(line: 1657, column: 20, scope: !6545)
!6994 = !DILocation(line: 1657, column: 5, scope: !6545)
!6995 = !DILocation(line: 1660, column: 14, scope: !6545)
!6996 = !DILocation(line: 1660, column: 18, scope: !6545)
!6997 = !DILocation(line: 1660, column: 23, scope: !6545)
!6998 = !DILocation(line: 1660, column: 2, scope: !6545)
!6999 = !DILocation(line: 1662, column: 13, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6545, file: !1, line: 1662, column: 6)
!7001 = !DILocation(line: 1662, column: 18, scope: !7000)
!7002 = !DILocation(line: 1662, column: 6, scope: !6545)
!7003 = !DILocation(line: 1663, column: 22, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7000, file: !1, line: 1662, column: 23)
!7005 = !DILocation(line: 1663, column: 3, scope: !7004)
!7006 = !DILocation(line: 1664, column: 3, scope: !7004)
!7007 = !DILocation(line: 1667, column: 8, scope: !6545)
!7008 = !DILocation(line: 1667, column: 12, scope: !6545)
!7009 = !DILocation(line: 1667, column: 6, scope: !6545)
!7010 = !DILocation(line: 1669, column: 6, scope: !6545)
!7011 = !DILocation(line: 1669, column: 41, scope: !6545)
!7012 = !DILocation(line: 1669, column: 34, scope: !6545)
!7013 = !DILocation(line: 1669, column: 33, scope: !6545)
!7014 = !DILocation(line: 1669, column: 4, scope: !6545)
!7015 = !DILocation(line: 1670, column: 9, scope: !6545)
!7016 = !DILocation(line: 1670, column: 44, scope: !6545)
!7017 = !DILocation(line: 1670, column: 37, scope: !6545)
!7018 = !DILocation(line: 1670, column: 36, scope: !6545)
!7019 = !DILocation(line: 1670, column: 7, scope: !6545)
!7020 = !DILocation(line: 1671, column: 8, scope: !6545)
!7021 = !DILocation(line: 1671, column: 41, scope: !6545)
!7022 = !DILocation(line: 1671, column: 34, scope: !6545)
!7023 = !DILocation(line: 1671, column: 33, scope: !6545)
!7024 = !DILocation(line: 1671, column: 6, scope: !6545)
!7025 = !DILocation(line: 1679, column: 6, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !6545, file: !1, line: 1679, column: 6)
!7027 = !DILocation(line: 1679, column: 6, scope: !6545)
!7028 = !DILocation(line: 1681, column: 3, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7026, file: !1, line: 1679, column: 15)
!7030 = !DILocation(line: 1681, column: 7, scope: !7029)
!7031 = !DILocation(line: 1681, column: 15, scope: !7029)
!7032 = !DILocation(line: 1681, column: 20, scope: !7029)
!7033 = !DILocation(line: 1682, column: 15, scope: !7029)
!7034 = !DILocation(line: 1682, column: 3, scope: !7029)
!7035 = !DILocation(line: 1682, column: 7, scope: !7029)
!7036 = !DILocation(line: 1682, column: 13, scope: !7029)
!7037 = !DILocation(line: 1683, column: 2, scope: !7029)
!7038 = !DILocation(line: 1685, column: 8, scope: !6545)
!7039 = !DILocation(line: 1685, column: 12, scope: !6545)
!7040 = !DILocation(line: 1685, column: 18, scope: !6545)
!7041 = !DILocation(line: 1685, column: 22, scope: !6545)
!7042 = !DILocation(line: 1685, column: 31, scope: !6545)
!7043 = !DILocation(line: 1685, column: 17, scope: !6545)
!7044 = !DILocation(line: 1685, column: 6, scope: !6545)
!7045 = !DILocation(line: 1689, column: 6, scope: !6545)
!7046 = !DILocation(line: 1689, column: 10, scope: !6545)
!7047 = !DILocation(line: 1689, column: 4, scope: !6545)
!7048 = !DILocation(line: 1690, column: 6, scope: !6545)
!7049 = !DILocation(line: 1690, column: 10, scope: !6545)
!7050 = !DILocation(line: 1690, column: 4, scope: !6545)
!7051 = !DILocation(line: 1691, column: 6, scope: !6545)
!7052 = !DILocation(line: 1691, column: 10, scope: !6545)
!7053 = !DILocation(line: 1691, column: 4, scope: !6545)
!7054 = !DILocation(line: 1692, column: 7, scope: !6545)
!7055 = !DILocation(line: 1692, column: 11, scope: !6545)
!7056 = !DILocation(line: 1692, column: 5, scope: !6545)
!7057 = !DILocation(line: 1693, column: 7, scope: !6545)
!7058 = !DILocation(line: 1693, column: 11, scope: !6545)
!7059 = !DILocation(line: 1693, column: 5, scope: !6545)
!7060 = !DILocation(line: 1694, column: 7, scope: !6545)
!7061 = !DILocation(line: 1694, column: 11, scope: !6545)
!7062 = !DILocation(line: 1694, column: 5, scope: !6545)
!7063 = !DILocation(line: 1696, column: 10, scope: !6545)
!7064 = !DILocation(line: 1698, column: 9, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !6545, file: !1, line: 1698, column: 2)
!7066 = !DILocation(line: 1698, column: 13, scope: !7065)
!7067 = !DILocation(line: 1698, column: 22, scope: !7065)
!7068 = !DILocation(line: 1698, column: 8, scope: !7065)
!7069 = !DILocation(line: 1698, column: 7, scope: !7065)
!7070 = !DILocation(line: 1698, column: 28, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7065, file: !1, line: 1698, column: 2)
!7072 = !DILocation(line: 1698, column: 30, scope: !7071)
!7073 = !DILocation(line: 1698, column: 34, scope: !7071)
!7074 = !DILocation(line: 1698, column: 43, scope: !7071)
!7075 = !DILocation(line: 1698, column: 29, scope: !7071)
!7076 = !DILocation(line: 1698, column: 2, scope: !7065)
!7077 = !DILocation(line: 1699, column: 10, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !1, line: 1699, column: 3)
!7079 = distinct !DILexicalBlock(scope: !7071, file: !1, line: 1698, column: 74)
!7080 = !DILocation(line: 1699, column: 14, scope: !7078)
!7081 = !DILocation(line: 1699, column: 23, scope: !7078)
!7082 = !DILocation(line: 1699, column: 9, scope: !7078)
!7083 = !DILocation(line: 1699, column: 8, scope: !7078)
!7084 = !DILocation(line: 1699, column: 29, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 1699, column: 3)
!7086 = !DILocation(line: 1699, column: 31, scope: !7085)
!7087 = !DILocation(line: 1699, column: 35, scope: !7085)
!7088 = !DILocation(line: 1699, column: 44, scope: !7085)
!7089 = !DILocation(line: 1699, column: 30, scope: !7085)
!7090 = !DILocation(line: 1699, column: 3, scope: !7078)
!7091 = !DILocation(line: 1701, column: 23, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7085, file: !1, line: 1699, column: 64)
!7093 = !DILocation(line: 1701, column: 27, scope: !7092)
!7094 = !DILocation(line: 1701, column: 39, scope: !7092)
!7095 = !DILocation(line: 1701, column: 4, scope: !7092)
!7096 = !DILocation(line: 1725, column: 8, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7092, file: !1, line: 1725, column: 8)
!7098 = !DILocation(line: 1725, column: 8, scope: !7092)
!7099 = !DILocation(line: 1726, column: 10, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !1, line: 1726, column: 9)
!7101 = distinct !DILexicalBlock(scope: !7097, file: !1, line: 1725, column: 12)
!7102 = !DILocation(line: 1726, column: 9, scope: !7100)
!7103 = !DILocation(line: 1726, column: 13, scope: !7100)
!7104 = !DILocation(line: 1726, column: 9, scope: !7101)
!7105 = !DILocalVariable(name: "obi", scope: !7106, file: !1, line: 1727, type: !7107)
!7106 = distinct !DILexicalBlock(scope: !7100, file: !1, line: 1726, column: 19)
!7107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7108, size: 64)
!7108 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectInstanceRen", file: !2085, line: 368, baseType: !3178)
!7109 = !DILocation(line: 1727, column: 25, scope: !7106)
!7110 = !DILocation(line: 1727, column: 31, scope: !7106)
!7111 = !DILocation(line: 1727, column: 35, scope: !7106)
!7112 = !DILocation(line: 1727, column: 51, scope: !7106)
!7113 = !DILocation(line: 1727, column: 50, scope: !7106)
!7114 = !DILocalVariable(name: "obr", scope: !7106, file: !1, line: 1728, type: !3183)
!7115 = !DILocation(line: 1728, column: 17, scope: !7106)
!7116 = !DILocation(line: 1728, column: 22, scope: !7106)
!7117 = !DILocation(line: 1728, column: 27, scope: !7106)
!7118 = !DILocation(line: 1731, column: 28, scope: !7106)
!7119 = !DILocation(line: 1731, column: 35, scope: !7106)
!7120 = !DILocation(line: 1731, column: 34, scope: !7106)
!7121 = !DILocation(line: 1731, column: 37, scope: !7106)
!7122 = !DILocation(line: 1731, column: 41, scope: !7106)
!7123 = !DILocation(line: 1731, column: 11, scope: !7106)
!7124 = !DILocation(line: 1731, column: 9, scope: !7106)
!7125 = !DILocation(line: 1732, column: 15, scope: !7106)
!7126 = !DILocation(line: 1732, column: 14, scope: !7106)
!7127 = !DILocation(line: 1732, column: 19, scope: !7106)
!7128 = !DILocation(line: 1732, column: 10, scope: !7106)
!7129 = !DILocation(line: 1734, column: 31, scope: !7106)
!7130 = !DILocation(line: 1734, column: 36, scope: !7106)
!7131 = !DILocation(line: 1734, column: 41, scope: !7106)
!7132 = !DILocation(line: 1734, column: 46, scope: !7106)
!7133 = !DILocation(line: 1734, column: 52, scope: !7106)
!7134 = !DILocation(line: 1734, column: 55, scope: !7106)
!7135 = !DILocation(line: 1734, column: 59, scope: !7106)
!7136 = !DILocation(line: 1734, column: 58, scope: !7106)
!7137 = !DILocation(line: 1735, column: 7, scope: !7106)
!7138 = !DILocation(line: 1735, column: 10, scope: !7106)
!7139 = !DILocation(line: 1735, column: 21, scope: !7106)
!7140 = !DILocation(line: 1735, column: 27, scope: !7106)
!7141 = !DILocation(line: 1735, column: 39, scope: !7106)
!7142 = !DILocation(line: 1735, column: 44, scope: !7106)
!7143 = !DILocation(line: 1734, column: 6, scope: !7106)
!7144 = !DILocation(line: 1737, column: 16, scope: !7106)
!7145 = !DILocation(line: 1737, column: 22, scope: !7106)
!7146 = !DILocation(line: 1737, column: 28, scope: !7106)
!7147 = !DILocation(line: 1737, column: 6, scope: !7106)
!7148 = !DILocation(line: 1738, column: 6, scope: !7106)
!7149 = !DILocation(line: 1738, column: 13, scope: !7106)
!7150 = !DILocation(line: 1739, column: 14, scope: !7106)
!7151 = !DILocation(line: 1740, column: 5, scope: !7106)
!7152 = !DILocation(line: 1742, column: 7, scope: !7101)
!7153 = !DILocation(line: 1742, column: 13, scope: !7101)
!7154 = !DILocation(line: 1742, column: 19, scope: !7101)
!7155 = !DILocation(line: 1743, column: 4, scope: !7101)
!7156 = !DILocation(line: 1745, column: 8, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7092, file: !1, line: 1745, column: 8)
!7158 = !DILocation(line: 1745, column: 8, scope: !7092)
!7159 = !DILocation(line: 1746, column: 10, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !1, line: 1746, column: 9)
!7161 = distinct !DILexicalBlock(scope: !7157, file: !1, line: 1745, column: 13)
!7162 = !DILocation(line: 1746, column: 9, scope: !7160)
!7163 = !DILocation(line: 1746, column: 14, scope: !7160)
!7164 = !DILocation(line: 1746, column: 19, scope: !7160)
!7165 = !DILocation(line: 1746, column: 25, scope: !7160)
!7166 = !DILocation(line: 1746, column: 24, scope: !7160)
!7167 = !DILocation(line: 1746, column: 34, scope: !7160)
!7168 = !DILocation(line: 1746, column: 36, scope: !7160)
!7169 = !DILocation(line: 1746, column: 32, scope: !7160)
!7170 = !DILocation(line: 1746, column: 29, scope: !7160)
!7171 = !DILocation(line: 1746, column: 40, scope: !7160)
!7172 = !DILocation(line: 1746, column: 44, scope: !7160)
!7173 = !DILocation(line: 1746, column: 43, scope: !7160)
!7174 = !DILocation(line: 1746, column: 53, scope: !7160)
!7175 = !DILocation(line: 1746, column: 55, scope: !7160)
!7176 = !DILocation(line: 1746, column: 51, scope: !7160)
!7177 = !DILocation(line: 1746, column: 48, scope: !7160)
!7178 = !DILocation(line: 1746, column: 9, scope: !7161)
!7179 = !DILocalVariable(name: "obi", scope: !7180, file: !1, line: 1747, type: !7107)
!7180 = distinct !DILexicalBlock(scope: !7160, file: !1, line: 1746, column: 61)
!7181 = !DILocation(line: 1747, column: 25, scope: !7180)
!7182 = !DILocation(line: 1747, column: 31, scope: !7180)
!7183 = !DILocation(line: 1747, column: 35, scope: !7180)
!7184 = !DILocation(line: 1747, column: 51, scope: !7180)
!7185 = !DILocation(line: 1747, column: 50, scope: !7180)
!7186 = !DILocalVariable(name: "obr", scope: !7180, file: !1, line: 1748, type: !3183)
!7187 = !DILocation(line: 1748, column: 17, scope: !7180)
!7188 = !DILocation(line: 1748, column: 22, scope: !7180)
!7189 = !DILocation(line: 1748, column: 27, scope: !7180)
!7190 = !DILocation(line: 1751, column: 28, scope: !7180)
!7191 = !DILocation(line: 1751, column: 35, scope: !7180)
!7192 = !DILocation(line: 1751, column: 34, scope: !7180)
!7193 = !DILocation(line: 1751, column: 38, scope: !7180)
!7194 = !DILocation(line: 1751, column: 42, scope: !7180)
!7195 = !DILocation(line: 1751, column: 11, scope: !7180)
!7196 = !DILocation(line: 1751, column: 9, scope: !7180)
!7197 = !DILocation(line: 1752, column: 15, scope: !7180)
!7198 = !DILocation(line: 1752, column: 14, scope: !7180)
!7199 = !DILocation(line: 1752, column: 20, scope: !7180)
!7200 = !DILocation(line: 1752, column: 10, scope: !7180)
!7201 = !DILocation(line: 1754, column: 31, scope: !7180)
!7202 = !DILocation(line: 1754, column: 36, scope: !7180)
!7203 = !DILocation(line: 1754, column: 41, scope: !7180)
!7204 = !DILocation(line: 1754, column: 46, scope: !7180)
!7205 = !DILocation(line: 1754, column: 52, scope: !7180)
!7206 = !DILocation(line: 1754, column: 55, scope: !7180)
!7207 = !DILocation(line: 1754, column: 59, scope: !7180)
!7208 = !DILocation(line: 1754, column: 58, scope: !7180)
!7209 = !DILocation(line: 1755, column: 7, scope: !7180)
!7210 = !DILocation(line: 1755, column: 10, scope: !7180)
!7211 = !DILocation(line: 1755, column: 21, scope: !7180)
!7212 = !DILocation(line: 1755, column: 27, scope: !7180)
!7213 = !DILocation(line: 1755, column: 39, scope: !7180)
!7214 = !DILocation(line: 1755, column: 44, scope: !7180)
!7215 = !DILocation(line: 1754, column: 6, scope: !7180)
!7216 = !DILocation(line: 1758, column: 23, scope: !7180)
!7217 = !DILocation(line: 1758, column: 28, scope: !7180)
!7218 = !DILocation(line: 1758, column: 22, scope: !7180)
!7219 = !DILocation(line: 1758, column: 6, scope: !7180)
!7220 = !DILocation(line: 1758, column: 11, scope: !7180)
!7221 = !DILocation(line: 1758, column: 20, scope: !7180)
!7222 = !DILocation(line: 1760, column: 16, scope: !7180)
!7223 = !DILocation(line: 1760, column: 22, scope: !7180)
!7224 = !DILocation(line: 1760, column: 28, scope: !7180)
!7225 = !DILocation(line: 1760, column: 6, scope: !7180)
!7226 = !DILocation(line: 1761, column: 6, scope: !7180)
!7227 = !DILocation(line: 1761, column: 13, scope: !7180)
!7228 = !DILocation(line: 1762, column: 14, scope: !7180)
!7229 = !DILocation(line: 1763, column: 5, scope: !7180)
!7230 = !DILocation(line: 1765, column: 8, scope: !7161)
!7231 = !DILocation(line: 1765, column: 15, scope: !7161)
!7232 = !DILocation(line: 1765, column: 22, scope: !7161)
!7233 = !DILocation(line: 1766, column: 4, scope: !7161)
!7234 = !DILocation(line: 1768, column: 3, scope: !7092)
!7235 = !DILocation(line: 1699, column: 51, scope: !7085)
!7236 = !DILocation(line: 1699, column: 59, scope: !7085)
!7237 = !DILocation(line: 1699, column: 3, scope: !7085)
!7238 = distinct !{!7238, !7090, !7239}
!7239 = !DILocation(line: 1768, column: 3, scope: !7078)
!7240 = !DILocation(line: 1770, column: 7, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7079, file: !1, line: 1770, column: 7)
!7242 = !DILocation(line: 1770, column: 8, scope: !7241)
!7243 = !DILocation(line: 1770, column: 7, scope: !7079)
!7244 = !DILocation(line: 1771, column: 8, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7241, file: !1, line: 1771, column: 8)
!7246 = !DILocation(line: 1771, column: 12, scope: !7245)
!7247 = !DILocation(line: 1771, column: 23, scope: !7245)
!7248 = !DILocation(line: 1771, column: 27, scope: !7245)
!7249 = !DILocation(line: 1771, column: 8, scope: !7241)
!7250 = !DILocation(line: 1771, column: 33, scope: !7245)
!7251 = !DILocation(line: 1771, column: 30, scope: !7245)
!7252 = !DILocation(line: 1772, column: 2, scope: !7079)
!7253 = !DILocation(line: 1698, column: 50, scope: !7071)
!7254 = !DILocation(line: 1698, column: 54, scope: !7071)
!7255 = !DILocation(line: 1698, column: 58, scope: !7071)
!7256 = !DILocation(line: 1698, column: 66, scope: !7071)
!7257 = !DILocation(line: 1698, column: 70, scope: !7071)
!7258 = !DILocation(line: 1698, column: 2, scope: !7071)
!7259 = distinct !{!7259, !7076, !7260}
!7260 = !DILocation(line: 1772, column: 2, scope: !7065)
!7261 = !DILocation(line: 1775, column: 6, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !6545, file: !1, line: 1775, column: 6)
!7263 = !DILocation(line: 1775, column: 15, scope: !7262)
!7264 = !DILocation(line: 1775, column: 6, scope: !6545)
!7265 = !DILocation(line: 1776, column: 18, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7262, file: !1, line: 1775, column: 20)
!7267 = !DILocation(line: 1776, column: 22, scope: !7266)
!7268 = !DILocation(line: 1776, column: 26, scope: !7266)
!7269 = !DILocation(line: 1776, column: 33, scope: !7266)
!7270 = !DILocation(line: 1776, column: 39, scope: !7266)
!7271 = !DILocation(line: 1776, column: 3, scope: !7266)
!7272 = !DILocation(line: 1777, column: 2, scope: !7266)
!7273 = !DILocation(line: 1779, column: 3, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7262, file: !1, line: 1778, column: 7)
!7275 = !DILocation(line: 1779, column: 13, scope: !7274)
!7276 = !DILocation(line: 1780, column: 3, scope: !7274)
!7277 = !DILocation(line: 1780, column: 13, scope: !7274)
!7278 = !DILocation(line: 1781, column: 3, scope: !7274)
!7279 = !DILocation(line: 1781, column: 13, scope: !7274)
!7280 = !DILocation(line: 1789, column: 6, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !6545, file: !1, line: 1789, column: 6)
!7282 = !DILocation(line: 1789, column: 6, scope: !6545)
!7283 = !DILocation(line: 1791, column: 20, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7281, file: !1, line: 1789, column: 15)
!7285 = !DILocation(line: 1791, column: 24, scope: !7284)
!7286 = !DILocation(line: 1791, column: 32, scope: !7284)
!7287 = !DILocation(line: 1791, column: 37, scope: !7284)
!7288 = !DILocation(line: 1791, column: 3, scope: !7284)
!7289 = !DILocation(line: 1791, column: 7, scope: !7284)
!7290 = !DILocation(line: 1791, column: 15, scope: !7284)
!7291 = !DILocation(line: 1791, column: 19, scope: !7284)
!7292 = !DILocation(line: 1792, column: 43, scope: !7284)
!7293 = !DILocation(line: 1792, column: 15, scope: !7284)
!7294 = !DILocation(line: 1792, column: 3, scope: !7284)
!7295 = !DILocation(line: 1792, column: 7, scope: !7284)
!7296 = !DILocation(line: 1792, column: 13, scope: !7284)
!7297 = !DILocation(line: 1793, column: 2, scope: !7284)
!7298 = !DILocation(line: 1795, column: 21, scope: !6545)
!7299 = !DILocation(line: 1795, column: 2, scope: !6545)
!7300 = !DILocation(line: 1796, column: 1, scope: !6545)
!7301 = distinct !DISubprogram(name: "addps_sss", scope: !1, file: !1, line: 1471, type: !2729, scopeLine: 1472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!7302 = !DILocalVariable(name: "cb_handle", arg: 1, scope: !7301, file: !1, line: 1471, type: !58)
!7303 = !DILocation(line: 1471, column: 29, scope: !7301)
!7304 = !DILocalVariable(name: "obi", arg: 2, scope: !7301, file: !1, line: 1471, type: !5)
!7305 = !DILocation(line: 1471, column: 44, scope: !7301)
!7306 = !DILocalVariable(name: "facenr", arg: 3, scope: !7301, file: !1, line: 1471, type: !5)
!7307 = !DILocation(line: 1471, column: 53, scope: !7301)
!7308 = !DILocalVariable(name: "x", arg: 4, scope: !7301, file: !1, line: 1471, type: !5)
!7309 = !DILocation(line: 1471, column: 65, scope: !7301)
!7310 = !DILocalVariable(name: "y", arg: 5, scope: !7301, file: !1, line: 1471, type: !5)
!7311 = !DILocation(line: 1471, column: 72, scope: !7301)
!7312 = !DILocalVariable(name: "z", arg: 6, scope: !7301, file: !1, line: 1471, type: !5)
!7313 = !DILocation(line: 1471, column: 79, scope: !7301)
!7314 = !DILocalVariable(name: "handle", scope: !7301, file: !1, line: 1473, type: !7315)
!7315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6794, size: 64)
!7316 = !DILocation(line: 1473, column: 17, scope: !7301)
!7317 = !DILocation(line: 1473, column: 26, scope: !7301)
!7318 = !DILocalVariable(name: "pa", scope: !7301, file: !1, line: 1474, type: !2083)
!7319 = !DILocation(line: 1474, column: 14, scope: !7301)
!7320 = !DILocation(line: 1474, column: 18, scope: !7301)
!7321 = !DILocation(line: 1474, column: 26, scope: !7301)
!7322 = !DILocation(line: 1478, column: 6, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7301, file: !1, line: 1478, column: 6)
!7324 = !DILocation(line: 1478, column: 8, scope: !7323)
!7325 = !DILocation(line: 1478, column: 12, scope: !7323)
!7326 = !DILocation(line: 1478, column: 7, scope: !7323)
!7327 = !DILocation(line: 1478, column: 17, scope: !7323)
!7328 = !DILocation(line: 1478, column: 20, scope: !7323)
!7329 = !DILocation(line: 1478, column: 23, scope: !7323)
!7330 = !DILocation(line: 1478, column: 27, scope: !7323)
!7331 = !DILocation(line: 1478, column: 33, scope: !7323)
!7332 = !DILocation(line: 1478, column: 37, scope: !7323)
!7333 = !DILocation(line: 1478, column: 32, scope: !7323)
!7334 = !DILocation(line: 1478, column: 21, scope: !7323)
!7335 = !DILocation(line: 1478, column: 6, scope: !7301)
!7336 = !DILocation(line: 1479, column: 3, scope: !7323)
!7337 = !DILocation(line: 1480, column: 6, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7301, file: !1, line: 1480, column: 6)
!7339 = !DILocation(line: 1480, column: 8, scope: !7338)
!7340 = !DILocation(line: 1480, column: 12, scope: !7338)
!7341 = !DILocation(line: 1480, column: 7, scope: !7338)
!7342 = !DILocation(line: 1480, column: 17, scope: !7338)
!7343 = !DILocation(line: 1480, column: 20, scope: !7338)
!7344 = !DILocation(line: 1480, column: 23, scope: !7338)
!7345 = !DILocation(line: 1480, column: 27, scope: !7338)
!7346 = !DILocation(line: 1480, column: 33, scope: !7338)
!7347 = !DILocation(line: 1480, column: 37, scope: !7338)
!7348 = !DILocation(line: 1480, column: 32, scope: !7338)
!7349 = !DILocation(line: 1480, column: 21, scope: !7338)
!7350 = !DILocation(line: 1480, column: 6, scope: !7301)
!7351 = !DILocation(line: 1481, column: 3, scope: !7338)
!7352 = !DILocation(line: 1483, column: 6, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7301, file: !1, line: 1483, column: 6)
!7354 = !DILocation(line: 1483, column: 10, scope: !7353)
!7355 = !DILocation(line: 1483, column: 6, scope: !7301)
!7356 = !DILocalVariable(name: "rs", scope: !7357, file: !1, line: 1484, type: !2100)
!7357 = distinct !DILexicalBlock(scope: !7353, file: !1, line: 1483, column: 19)
!7358 = !DILocation(line: 1484, column: 13, scope: !7357)
!7359 = !DILocation(line: 1484, column: 17, scope: !7357)
!7360 = !DILocation(line: 1484, column: 21, scope: !7357)
!7361 = !DILocation(line: 1484, column: 31, scope: !7357)
!7362 = !DILocation(line: 1484, column: 35, scope: !7357)
!7363 = !DILocation(line: 1484, column: 41, scope: !7357)
!7364 = !DILocation(line: 1484, column: 40, scope: !7357)
!7365 = !DILocation(line: 1484, column: 29, scope: !7357)
!7366 = !DILocation(line: 1484, column: 45, scope: !7357)
!7367 = !DILocation(line: 1484, column: 43, scope: !7357)
!7368 = !DILocation(line: 1486, column: 10, scope: !7357)
!7369 = !DILocation(line: 1486, column: 18, scope: !7357)
!7370 = !DILocation(line: 1486, column: 27, scope: !7357)
!7371 = !DILocation(line: 1486, column: 31, scope: !7357)
!7372 = !DILocation(line: 1486, column: 36, scope: !7357)
!7373 = !DILocation(line: 1486, column: 44, scope: !7357)
!7374 = !DILocation(line: 1486, column: 3, scope: !7357)
!7375 = !DILocation(line: 1487, column: 3, scope: !7357)
!7376 = !DILocation(line: 1487, column: 11, scope: !7357)
!7377 = !DILocation(line: 1487, column: 16, scope: !7357)
!7378 = !DILocation(line: 1488, column: 2, scope: !7357)
!7379 = !DILocation(line: 1489, column: 6, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7301, file: !1, line: 1489, column: 6)
!7381 = !DILocation(line: 1489, column: 10, scope: !7380)
!7382 = !DILocation(line: 1489, column: 6, scope: !7301)
!7383 = !DILocalVariable(name: "rz", scope: !7384, file: !1, line: 1490, type: !855)
!7384 = distinct !DILexicalBlock(scope: !7380, file: !1, line: 1489, column: 17)
!7385 = !DILocation(line: 1490, column: 8, scope: !7384)
!7386 = !DILocation(line: 1490, column: 12, scope: !7384)
!7387 = !DILocation(line: 1490, column: 16, scope: !7384)
!7388 = !DILocation(line: 1490, column: 24, scope: !7384)
!7389 = !DILocation(line: 1490, column: 28, scope: !7384)
!7390 = !DILocation(line: 1490, column: 34, scope: !7384)
!7391 = !DILocation(line: 1490, column: 33, scope: !7384)
!7392 = !DILocation(line: 1490, column: 22, scope: !7384)
!7393 = !DILocation(line: 1490, column: 38, scope: !7384)
!7394 = !DILocation(line: 1490, column: 36, scope: !7384)
!7395 = !DILocalVariable(name: "rp", scope: !7384, file: !1, line: 1491, type: !855)
!7396 = !DILocation(line: 1491, column: 8, scope: !7384)
!7397 = !DILocation(line: 1491, column: 12, scope: !7384)
!7398 = !DILocation(line: 1491, column: 16, scope: !7384)
!7399 = !DILocation(line: 1491, column: 24, scope: !7384)
!7400 = !DILocation(line: 1491, column: 28, scope: !7384)
!7401 = !DILocation(line: 1491, column: 34, scope: !7384)
!7402 = !DILocation(line: 1491, column: 33, scope: !7384)
!7403 = !DILocation(line: 1491, column: 22, scope: !7384)
!7404 = !DILocation(line: 1491, column: 38, scope: !7384)
!7405 = !DILocation(line: 1491, column: 36, scope: !7384)
!7406 = !DILocalVariable(name: "ro", scope: !7384, file: !1, line: 1492, type: !855)
!7407 = !DILocation(line: 1492, column: 8, scope: !7384)
!7408 = !DILocation(line: 1492, column: 12, scope: !7384)
!7409 = !DILocation(line: 1492, column: 16, scope: !7384)
!7410 = !DILocation(line: 1492, column: 24, scope: !7384)
!7411 = !DILocation(line: 1492, column: 28, scope: !7384)
!7412 = !DILocation(line: 1492, column: 34, scope: !7384)
!7413 = !DILocation(line: 1492, column: 33, scope: !7384)
!7414 = !DILocation(line: 1492, column: 22, scope: !7384)
!7415 = !DILocation(line: 1492, column: 38, scope: !7384)
!7416 = !DILocation(line: 1492, column: 36, scope: !7384)
!7417 = !DILocation(line: 1494, column: 7, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7384, file: !1, line: 1494, column: 7)
!7419 = !DILocation(line: 1494, column: 12, scope: !7418)
!7420 = !DILocation(line: 1494, column: 11, scope: !7418)
!7421 = !DILocation(line: 1494, column: 9, scope: !7418)
!7422 = !DILocation(line: 1494, column: 7, scope: !7384)
!7423 = !DILocation(line: 1495, column: 9, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !1, line: 1495, column: 8)
!7425 = distinct !DILexicalBlock(scope: !7418, file: !1, line: 1494, column: 16)
!7426 = !DILocation(line: 1495, column: 8, scope: !7424)
!7427 = !DILocation(line: 1495, column: 12, scope: !7424)
!7428 = !DILocation(line: 1495, column: 8, scope: !7425)
!7429 = !DILocation(line: 1496, column: 5, scope: !7424)
!7430 = !DILocation(line: 1496, column: 13, scope: !7424)
!7431 = !DILocation(line: 1496, column: 18, scope: !7424)
!7432 = !DILocation(line: 1497, column: 9, scope: !7425)
!7433 = !DILocation(line: 1497, column: 5, scope: !7425)
!7434 = !DILocation(line: 1497, column: 7, scope: !7425)
!7435 = !DILocation(line: 1498, column: 9, scope: !7425)
!7436 = !DILocation(line: 1498, column: 5, scope: !7425)
!7437 = !DILocation(line: 1498, column: 7, scope: !7425)
!7438 = !DILocation(line: 1499, column: 9, scope: !7425)
!7439 = !DILocation(line: 1499, column: 5, scope: !7425)
!7440 = !DILocation(line: 1499, column: 7, scope: !7425)
!7441 = !DILocation(line: 1500, column: 3, scope: !7425)
!7442 = !DILocation(line: 1501, column: 2, scope: !7384)
!7443 = !DILocation(line: 1502, column: 6, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7301, file: !1, line: 1502, column: 6)
!7445 = !DILocation(line: 1502, column: 10, scope: !7444)
!7446 = !DILocation(line: 1502, column: 6, scope: !7301)
!7447 = !DILocalVariable(name: "rz", scope: !7448, file: !1, line: 1503, type: !855)
!7448 = distinct !DILexicalBlock(scope: !7444, file: !1, line: 1502, column: 21)
!7449 = !DILocation(line: 1503, column: 8, scope: !7448)
!7450 = !DILocation(line: 1503, column: 12, scope: !7448)
!7451 = !DILocation(line: 1503, column: 16, scope: !7448)
!7452 = !DILocation(line: 1503, column: 28, scope: !7448)
!7453 = !DILocation(line: 1503, column: 32, scope: !7448)
!7454 = !DILocation(line: 1503, column: 38, scope: !7448)
!7455 = !DILocation(line: 1503, column: 37, scope: !7448)
!7456 = !DILocation(line: 1503, column: 26, scope: !7448)
!7457 = !DILocation(line: 1503, column: 42, scope: !7448)
!7458 = !DILocation(line: 1503, column: 40, scope: !7448)
!7459 = !DILocalVariable(name: "rp", scope: !7448, file: !1, line: 1504, type: !855)
!7460 = !DILocation(line: 1504, column: 8, scope: !7448)
!7461 = !DILocation(line: 1504, column: 12, scope: !7448)
!7462 = !DILocation(line: 1504, column: 16, scope: !7448)
!7463 = !DILocation(line: 1504, column: 28, scope: !7448)
!7464 = !DILocation(line: 1504, column: 32, scope: !7448)
!7465 = !DILocation(line: 1504, column: 38, scope: !7448)
!7466 = !DILocation(line: 1504, column: 37, scope: !7448)
!7467 = !DILocation(line: 1504, column: 26, scope: !7448)
!7468 = !DILocation(line: 1504, column: 42, scope: !7448)
!7469 = !DILocation(line: 1504, column: 40, scope: !7448)
!7470 = !DILocalVariable(name: "ro", scope: !7448, file: !1, line: 1505, type: !855)
!7471 = !DILocation(line: 1505, column: 8, scope: !7448)
!7472 = !DILocation(line: 1505, column: 12, scope: !7448)
!7473 = !DILocation(line: 1505, column: 16, scope: !7448)
!7474 = !DILocation(line: 1505, column: 28, scope: !7448)
!7475 = !DILocation(line: 1505, column: 32, scope: !7448)
!7476 = !DILocation(line: 1505, column: 38, scope: !7448)
!7477 = !DILocation(line: 1505, column: 37, scope: !7448)
!7478 = !DILocation(line: 1505, column: 26, scope: !7448)
!7479 = !DILocation(line: 1505, column: 42, scope: !7448)
!7480 = !DILocation(line: 1505, column: 40, scope: !7448)
!7481 = !DILocation(line: 1507, column: 7, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7448, file: !1, line: 1507, column: 7)
!7483 = !DILocation(line: 1507, column: 13, scope: !7482)
!7484 = !DILocation(line: 1507, column: 12, scope: !7482)
!7485 = !DILocation(line: 1507, column: 9, scope: !7482)
!7486 = !DILocation(line: 1507, column: 7, scope: !7448)
!7487 = !DILocation(line: 1508, column: 9, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7489, file: !1, line: 1508, column: 8)
!7489 = distinct !DILexicalBlock(scope: !7482, file: !1, line: 1507, column: 17)
!7490 = !DILocation(line: 1508, column: 8, scope: !7488)
!7491 = !DILocation(line: 1508, column: 12, scope: !7488)
!7492 = !DILocation(line: 1508, column: 8, scope: !7489)
!7493 = !DILocation(line: 1509, column: 5, scope: !7488)
!7494 = !DILocation(line: 1509, column: 13, scope: !7488)
!7495 = !DILocation(line: 1509, column: 18, scope: !7488)
!7496 = !DILocation(line: 1510, column: 9, scope: !7489)
!7497 = !DILocation(line: 1510, column: 5, scope: !7489)
!7498 = !DILocation(line: 1510, column: 7, scope: !7489)
!7499 = !DILocation(line: 1511, column: 9, scope: !7489)
!7500 = !DILocation(line: 1511, column: 5, scope: !7489)
!7501 = !DILocation(line: 1511, column: 7, scope: !7489)
!7502 = !DILocation(line: 1512, column: 9, scope: !7489)
!7503 = !DILocation(line: 1512, column: 5, scope: !7489)
!7504 = !DILocation(line: 1512, column: 7, scope: !7489)
!7505 = !DILocation(line: 1513, column: 3, scope: !7489)
!7506 = !DILocation(line: 1514, column: 2, scope: !7448)
!7507 = !DILocation(line: 1515, column: 1, scope: !7301)
!7508 = distinct !DISubprogram(name: "zbufshade_sss_free", scope: !1, file: !1, line: 1589, type: !2174, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!7509 = !DILocalVariable(name: "pa", arg: 1, scope: !7508, file: !1, line: 1589, type: !2083)
!7510 = !DILocation(line: 1589, column: 44, scope: !7508)
!7511 = !DILocation(line: 1595, column: 2, scope: !7508)
!7512 = !DILocation(line: 1595, column: 12, scope: !7508)
!7513 = !DILocation(line: 1595, column: 16, scope: !7508)
!7514 = !DILocation(line: 1595, column: 24, scope: !7508)
!7515 = !DILocation(line: 1595, column: 28, scope: !7508)
!7516 = !DILocation(line: 1595, column: 33, scope: !7508)
!7517 = !DILocation(line: 1596, column: 2, scope: !7508)
!7518 = !DILocation(line: 1596, column: 12, scope: !7508)
!7519 = !DILocation(line: 1596, column: 16, scope: !7508)
!7520 = !DILocation(line: 1596, column: 24, scope: !7508)
!7521 = !DILocation(line: 1596, column: 28, scope: !7508)
!7522 = !DILocation(line: 1596, column: 33, scope: !7508)
!7523 = !DILocation(line: 1597, column: 2, scope: !7508)
!7524 = !DILocation(line: 1597, column: 12, scope: !7508)
!7525 = !DILocation(line: 1597, column: 16, scope: !7508)
!7526 = !DILocation(line: 1597, column: 24, scope: !7508)
!7527 = !DILocation(line: 1597, column: 28, scope: !7508)
!7528 = !DILocation(line: 1597, column: 33, scope: !7508)
!7529 = !DILocation(line: 1598, column: 2, scope: !7508)
!7530 = !DILocation(line: 1598, column: 12, scope: !7508)
!7531 = !DILocation(line: 1598, column: 16, scope: !7508)
!7532 = !DILocation(line: 1598, column: 28, scope: !7508)
!7533 = !DILocation(line: 1598, column: 32, scope: !7508)
!7534 = !DILocation(line: 1598, column: 41, scope: !7508)
!7535 = !DILocation(line: 1599, column: 2, scope: !7508)
!7536 = !DILocation(line: 1599, column: 12, scope: !7508)
!7537 = !DILocation(line: 1599, column: 16, scope: !7508)
!7538 = !DILocation(line: 1599, column: 28, scope: !7508)
!7539 = !DILocation(line: 1599, column: 32, scope: !7508)
!7540 = !DILocation(line: 1599, column: 41, scope: !7508)
!7541 = !DILocation(line: 1600, column: 2, scope: !7508)
!7542 = !DILocation(line: 1600, column: 12, scope: !7508)
!7543 = !DILocation(line: 1600, column: 16, scope: !7508)
!7544 = !DILocation(line: 1600, column: 28, scope: !7508)
!7545 = !DILocation(line: 1600, column: 32, scope: !7508)
!7546 = !DILocation(line: 1600, column: 41, scope: !7508)
!7547 = !DILocation(line: 1602, column: 1, scope: !7508)
!7548 = distinct !DISubprogram(name: "shade_sample_sss", scope: !1, file: !1, line: 1517, type: !7549, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{null, !7551, !6812, !7107, !6808, !5, !57, !57, !57, !692, !692, !692}
!7551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!7552 = !DILocalVariable(name: "ssamp", arg: 1, scope: !7548, file: !1, line: 1517, type: !7551)
!7553 = !DILocation(line: 1517, column: 43, scope: !7548)
!7554 = !DILocalVariable(name: "mat", arg: 2, scope: !7548, file: !1, line: 1517, type: !6812)
!7555 = !DILocation(line: 1517, column: 60, scope: !7548)
!7556 = !DILocalVariable(name: "obi", arg: 3, scope: !7548, file: !1, line: 1517, type: !7107)
!7557 = !DILocation(line: 1517, column: 84, scope: !7548)
!7558 = !DILocalVariable(name: "vlr", arg: 4, scope: !7548, file: !1, line: 1517, type: !6808)
!7559 = !DILocation(line: 1517, column: 98, scope: !7548)
!7560 = !DILocalVariable(name: "quad", arg: 5, scope: !7548, file: !1, line: 1517, type: !5)
!7561 = !DILocation(line: 1517, column: 107, scope: !7548)
!7562 = !DILocalVariable(name: "x", arg: 6, scope: !7548, file: !1, line: 1517, type: !57)
!7563 = !DILocation(line: 1517, column: 119, scope: !7548)
!7564 = !DILocalVariable(name: "y", arg: 7, scope: !7548, file: !1, line: 1517, type: !57)
!7565 = !DILocation(line: 1517, column: 128, scope: !7548)
!7566 = !DILocalVariable(name: "z", arg: 8, scope: !7548, file: !1, line: 1517, type: !57)
!7567 = !DILocation(line: 1517, column: 137, scope: !7548)
!7568 = !DILocalVariable(name: "co", arg: 9, scope: !7548, file: !1, line: 1517, type: !692)
!7569 = !DILocation(line: 1517, column: 147, scope: !7548)
!7570 = !DILocalVariable(name: "color", arg: 10, scope: !7548, file: !1, line: 1517, type: !692)
!7571 = !DILocation(line: 1517, column: 157, scope: !7548)
!7572 = !DILocalVariable(name: "area", arg: 11, scope: !7548, file: !1, line: 1517, type: !692)
!7573 = !DILocation(line: 1517, column: 174, scope: !7548)
!7574 = !DILocalVariable(name: "shi", scope: !7548, file: !1, line: 1519, type: !6321)
!7575 = !DILocation(line: 1519, column: 14, scope: !7548)
!7576 = !DILocation(line: 1519, column: 19, scope: !7548)
!7577 = !DILocation(line: 1519, column: 26, scope: !7548)
!7578 = !DILocalVariable(name: "shr", scope: !7548, file: !1, line: 1520, type: !3387)
!7579 = !DILocation(line: 1520, column: 14, scope: !7548)
!7580 = !DILocalVariable(name: "orthoarea", scope: !7548, file: !1, line: 1521, type: !57)
!7581 = !DILocation(line: 1521, column: 34, scope: !7548)
!7582 = !DILocalVariable(name: "nor", scope: !7548, file: !1, line: 1521, type: !217)
!7583 = !DILocation(line: 1521, column: 45, scope: !7548)
!7584 = !DILocalVariable(name: "alpha", scope: !7548, file: !1, line: 1521, type: !57)
!7585 = !DILocation(line: 1521, column: 53, scope: !7548)
!7586 = !DILocalVariable(name: "sx", scope: !7548, file: !1, line: 1521, type: !57)
!7587 = !DILocation(line: 1521, column: 60, scope: !7548)
!7588 = !DILocalVariable(name: "sy", scope: !7548, file: !1, line: 1521, type: !57)
!7589 = !DILocation(line: 1521, column: 64, scope: !7548)
!7590 = !DILocation(line: 1524, column: 34, scope: !7548)
!7591 = !DILocation(line: 1524, column: 39, scope: !7548)
!7592 = !DILocation(line: 1524, column: 17, scope: !7548)
!7593 = !DILocation(line: 1524, column: 46, scope: !7548)
!7594 = !DILocation(line: 1524, column: 2, scope: !7548)
!7595 = !DILocation(line: 1524, column: 7, scope: !7548)
!7596 = !DILocation(line: 1524, column: 15, scope: !7548)
!7597 = !DILocation(line: 1526, column: 6, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7548, file: !1, line: 1526, column: 6)
!7599 = !DILocation(line: 1526, column: 6, scope: !7548)
!7600 = !DILocation(line: 1527, column: 30, scope: !7598)
!7601 = !DILocation(line: 1527, column: 35, scope: !7598)
!7602 = !DILocation(line: 1527, column: 40, scope: !7598)
!7603 = !DILocation(line: 1527, column: 3, scope: !7598)
!7604 = !DILocation(line: 1529, column: 30, scope: !7598)
!7605 = !DILocation(line: 1529, column: 35, scope: !7598)
!7606 = !DILocation(line: 1529, column: 40, scope: !7598)
!7607 = !DILocation(line: 1529, column: 3, scope: !7598)
!7608 = !DILocation(line: 1532, column: 7, scope: !7548)
!7609 = !DILocation(line: 1532, column: 9, scope: !7548)
!7610 = !DILocation(line: 1532, column: 5, scope: !7548)
!7611 = !DILocation(line: 1533, column: 7, scope: !7548)
!7612 = !DILocation(line: 1533, column: 9, scope: !7548)
!7613 = !DILocation(line: 1533, column: 5, scope: !7548)
!7614 = !DILocation(line: 1539, column: 2, scope: !7548)
!7615 = !DILocation(line: 1539, column: 7, scope: !7548)
!7616 = !DILocation(line: 1539, column: 13, scope: !7548)
!7617 = !DILocation(line: 1541, column: 13, scope: !7548)
!7618 = !DILocation(line: 1541, column: 18, scope: !7548)
!7619 = !DILocation(line: 1541, column: 23, scope: !7548)
!7620 = !DILocation(line: 1541, column: 2, scope: !7548)
!7621 = !DILocation(line: 1542, column: 19, scope: !7548)
!7622 = !DILocation(line: 1542, column: 24, scope: !7548)
!7623 = !DILocation(line: 1542, column: 33, scope: !7548)
!7624 = !DILocation(line: 1542, column: 37, scope: !7548)
!7625 = !DILocation(line: 1542, column: 2, scope: !7548)
!7626 = !DILocation(line: 1543, column: 15, scope: !7548)
!7627 = !DILocation(line: 1543, column: 20, scope: !7548)
!7628 = !DILocation(line: 1543, column: 2, scope: !7548)
!7629 = !DILocation(line: 1544, column: 25, scope: !7548)
!7630 = !DILocation(line: 1544, column: 30, scope: !7548)
!7631 = !DILocation(line: 1544, column: 33, scope: !7548)
!7632 = !DILocation(line: 1544, column: 36, scope: !7548)
!7633 = !DILocation(line: 1544, column: 40, scope: !7548)
!7634 = !DILocation(line: 1544, column: 44, scope: !7548)
!7635 = !DILocation(line: 1544, column: 2, scope: !7548)
!7636 = !DILocation(line: 1545, column: 20, scope: !7548)
!7637 = !DILocation(line: 1545, column: 25, scope: !7548)
!7638 = !DILocation(line: 1545, column: 13, scope: !7548)
!7639 = !DILocation(line: 1545, column: 38, scope: !7548)
!7640 = !DILocation(line: 1545, column: 43, scope: !7548)
!7641 = !DILocation(line: 1545, column: 31, scope: !7548)
!7642 = !DILocation(line: 1545, column: 30, scope: !7548)
!7643 = !DILocation(line: 1545, column: 11, scope: !7548)
!7644 = !DILocation(line: 1547, column: 13, scope: !7548)
!7645 = !DILocation(line: 1547, column: 18, scope: !7548)
!7646 = !DILocation(line: 1547, column: 27, scope: !7548)
!7647 = !DILocation(line: 1547, column: 2, scope: !7548)
!7648 = !DILocation(line: 1548, column: 25, scope: !7548)
!7649 = !DILocation(line: 1548, column: 30, scope: !7548)
!7650 = !DILocation(line: 1548, column: 33, scope: !7548)
!7651 = !DILocation(line: 1548, column: 36, scope: !7548)
!7652 = !DILocation(line: 1548, column: 40, scope: !7548)
!7653 = !DILocation(line: 1548, column: 44, scope: !7548)
!7654 = !DILocation(line: 1548, column: 2, scope: !7548)
!7655 = !DILocation(line: 1549, column: 24, scope: !7548)
!7656 = !DILocation(line: 1549, column: 29, scope: !7548)
!7657 = !DILocation(line: 1549, column: 17, scope: !7548)
!7658 = !DILocation(line: 1549, column: 44, scope: !7548)
!7659 = !DILocation(line: 1549, column: 49, scope: !7548)
!7660 = !DILocation(line: 1549, column: 37, scope: !7548)
!7661 = !DILocation(line: 1549, column: 35, scope: !7548)
!7662 = !DILocation(line: 1549, column: 63, scope: !7548)
!7663 = !DILocation(line: 1549, column: 61, scope: !7548)
!7664 = !DILocation(line: 1549, column: 10, scope: !7548)
!7665 = !DILocation(line: 1549, column: 3, scope: !7548)
!7666 = !DILocation(line: 1549, column: 8, scope: !7548)
!7667 = !DILocation(line: 1551, column: 21, scope: !7548)
!7668 = !DILocation(line: 1551, column: 2, scope: !7548)
!7669 = !DILocation(line: 1552, column: 26, scope: !7548)
!7670 = !DILocation(line: 1552, column: 2, scope: !7548)
!7671 = !DILocation(line: 1555, column: 6, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7548, file: !1, line: 1555, column: 6)
!7673 = !DILocation(line: 1555, column: 11, scope: !7672)
!7674 = !DILocation(line: 1555, column: 6, scope: !7548)
!7675 = !DILocation(line: 1556, column: 28, scope: !7672)
!7676 = !DILocation(line: 1556, column: 3, scope: !7672)
!7677 = !DILocation(line: 1559, column: 6, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7548, file: !1, line: 1559, column: 6)
!7679 = !DILocation(line: 1559, column: 11, scope: !7678)
!7680 = !DILocation(line: 1559, column: 16, scope: !7678)
!7681 = !DILocation(line: 1559, column: 19, scope: !7678)
!7682 = !DILocation(line: 1559, column: 22, scope: !7678)
!7683 = !DILocation(line: 1559, column: 27, scope: !7678)
!7684 = !DILocation(line: 1559, column: 32, scope: !7678)
!7685 = !DILocation(line: 1559, column: 36, scope: !7678)
!7686 = !DILocation(line: 1559, column: 46, scope: !7678)
!7687 = !DILocation(line: 1559, column: 6, scope: !7548)
!7688 = !DILocation(line: 1560, column: 13, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7678, file: !1, line: 1559, column: 62)
!7690 = !DILocation(line: 1560, column: 18, scope: !7689)
!7691 = !DILocation(line: 1560, column: 3, scope: !7689)
!7692 = !DILocation(line: 1561, column: 13, scope: !7689)
!7693 = !DILocation(line: 1561, column: 18, scope: !7689)
!7694 = !DILocation(line: 1561, column: 3, scope: !7689)
!7695 = !DILocation(line: 1562, column: 13, scope: !7689)
!7696 = !DILocation(line: 1562, column: 18, scope: !7689)
!7697 = !DILocation(line: 1562, column: 3, scope: !7689)
!7698 = !DILocation(line: 1563, column: 2, scope: !7689)
!7699 = !DILocation(line: 1567, column: 6, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7548, file: !1, line: 1567, column: 6)
!7701 = !DILocation(line: 1567, column: 11, scope: !7700)
!7702 = !DILocation(line: 1567, column: 16, scope: !7700)
!7703 = !DILocation(line: 1567, column: 25, scope: !7700)
!7704 = !DILocation(line: 1567, column: 28, scope: !7700)
!7705 = !DILocation(line: 1567, column: 33, scope: !7700)
!7706 = !DILocation(line: 1567, column: 38, scope: !7700)
!7707 = !DILocation(line: 1567, column: 6, scope: !7548)
!7708 = !DILocation(line: 1568, column: 13, scope: !7700)
!7709 = !DILocation(line: 1568, column: 3, scope: !7700)
!7710 = !DILocation(line: 1568, column: 8, scope: !7700)
!7711 = !DILocation(line: 1568, column: 11, scope: !7700)
!7712 = !DILocation(line: 1571, column: 28, scope: !7548)
!7713 = !DILocation(line: 1571, column: 2, scope: !7548)
!7714 = !DILocation(line: 1574, column: 30, scope: !7548)
!7715 = !DILocation(line: 1574, column: 2, scope: !7548)
!7716 = !DILocation(line: 1576, column: 22, scope: !7548)
!7717 = !DILocation(line: 1576, column: 2, scope: !7548)
!7718 = !DILocation(line: 1577, column: 22, scope: !7548)
!7719 = !DILocation(line: 1577, column: 2, scope: !7548)
!7720 = !DILocation(line: 1579, column: 13, scope: !7548)
!7721 = !DILocation(line: 1579, column: 17, scope: !7548)
!7722 = !DILocation(line: 1579, column: 22, scope: !7548)
!7723 = !DILocation(line: 1579, column: 2, scope: !7548)
!7724 = !DILocation(line: 1580, column: 13, scope: !7548)
!7725 = !DILocation(line: 1580, column: 24, scope: !7548)
!7726 = !DILocation(line: 1580, column: 20, scope: !7548)
!7727 = !DILocation(line: 1580, column: 2, scope: !7548)
!7728 = !DILocation(line: 1585, column: 13, scope: !7548)
!7729 = !DILocation(line: 1585, column: 9, scope: !7548)
!7730 = !DILocation(line: 1585, column: 7, scope: !7548)
!7731 = !DILocation(line: 1586, column: 11, scope: !7548)
!7732 = !DILocation(line: 1586, column: 3, scope: !7548)
!7733 = !DILocation(line: 1586, column: 8, scope: !7548)
!7734 = !DILocation(line: 1587, column: 1, scope: !7548)
!7735 = distinct !DISubprogram(name: "add_v3_v3", scope: !7736, file: !7736, line: 302, type: !7737, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!7736 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7737 = !DISubroutineType(types: !7738)
!7738 = !{null, !692, !2017}
!7739 = !DILocalVariable(name: "r", arg: 1, scope: !7735, file: !7736, line: 302, type: !692)
!7740 = !DILocation(line: 302, column: 30, scope: !7735)
!7741 = !DILocalVariable(name: "a", arg: 2, scope: !7735, file: !7736, line: 302, type: !2017)
!7742 = !DILocation(line: 302, column: 48, scope: !7735)
!7743 = !DILocation(line: 304, column: 10, scope: !7735)
!7744 = !DILocation(line: 304, column: 2, scope: !7735)
!7745 = !DILocation(line: 304, column: 7, scope: !7735)
!7746 = !DILocation(line: 305, column: 10, scope: !7735)
!7747 = !DILocation(line: 305, column: 2, scope: !7735)
!7748 = !DILocation(line: 305, column: 7, scope: !7735)
!7749 = !DILocation(line: 306, column: 10, scope: !7735)
!7750 = !DILocation(line: 306, column: 2, scope: !7735)
!7751 = !DILocation(line: 306, column: 7, scope: !7735)
!7752 = !DILocation(line: 307, column: 1, scope: !7735)
!7753 = distinct !DISubprogram(name: "add_halo_flare", scope: !1, file: !1, line: 1945, type: !7754, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!7754 = !DISubroutineType(types: !7755)
!7755 = !{null, !6549}
!7756 = !DILocalVariable(name: "re", arg: 1, scope: !7753, file: !1, line: 1945, type: !6549)
!7757 = !DILocation(line: 1945, column: 29, scope: !7753)
!7758 = !DILocalVariable(name: "rr", scope: !7753, file: !1, line: 1947, type: !2092)
!7759 = !DILocation(line: 1947, column: 16, scope: !7753)
!7760 = !DILocation(line: 1947, column: 20, scope: !7753)
!7761 = !DILocation(line: 1947, column: 24, scope: !7753)
!7762 = !DILocalVariable(name: "rl", scope: !7753, file: !1, line: 1948, type: !88)
!7763 = !DILocation(line: 1948, column: 15, scope: !7753)
!7764 = !DILocalVariable(name: "har", scope: !7753, file: !1, line: 1949, type: !4145)
!7765 = !DILocation(line: 1949, column: 11, scope: !7753)
!7766 = !DILocalVariable(name: "a", scope: !7753, file: !1, line: 1950, type: !5)
!7767 = !DILocation(line: 1950, column: 6, scope: !7753)
!7768 = !DILocalVariable(name: "mode", scope: !7753, file: !1, line: 1950, type: !5)
!7769 = !DILocation(line: 1950, column: 9, scope: !7753)
!7770 = !DILocation(line: 1953, column: 11, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7753, file: !1, line: 1953, column: 2)
!7772 = !DILocation(line: 1953, column: 15, scope: !7771)
!7773 = !DILocation(line: 1953, column: 22, scope: !7771)
!7774 = !DILocation(line: 1953, column: 9, scope: !7771)
!7775 = !DILocation(line: 1953, column: 7, scope: !7771)
!7776 = !DILocation(line: 1953, column: 29, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7771, file: !1, line: 1953, column: 2)
!7778 = !DILocation(line: 1953, column: 2, scope: !7771)
!7779 = !DILocalVariable(name: "do_draw", scope: !7780, file: !1, line: 1954, type: !770)
!7780 = distinct !DILexicalBlock(scope: !7777, file: !1, line: 1953, column: 47)
!7781 = !DILocation(line: 1954, column: 8, scope: !7780)
!7782 = !DILocation(line: 1956, column: 8, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7780, file: !1, line: 1956, column: 7)
!7784 = !DILocation(line: 1956, column: 12, scope: !7783)
!7785 = !DILocation(line: 1956, column: 20, scope: !7783)
!7786 = !DILocation(line: 1956, column: 36, scope: !7783)
!7787 = !DILocation(line: 1956, column: 7, scope: !7780)
!7788 = !DILocation(line: 1957, column: 4, scope: !7783)
!7789 = !DILocation(line: 1958, column: 7, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7780, file: !1, line: 1958, column: 7)
!7791 = !DILocation(line: 1958, column: 11, scope: !7790)
!7792 = !DILocation(line: 1958, column: 16, scope: !7790)
!7793 = !DILocation(line: 1958, column: 7, scope: !7780)
!7794 = !DILocation(line: 1959, column: 4, scope: !7790)
!7795 = !DILocation(line: 1961, column: 13, scope: !7780)
!7796 = !DILocation(line: 1961, column: 7, scope: !7780)
!7797 = !DILocation(line: 1962, column: 12, scope: !7780)
!7798 = !DILocation(line: 1964, column: 3, scope: !7780)
!7799 = !DILocation(line: 1966, column: 9, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7780, file: !1, line: 1966, column: 3)
!7801 = !DILocation(line: 1966, column: 8, scope: !7800)
!7802 = !DILocation(line: 1966, column: 13, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7800, file: !1, line: 1966, column: 3)
!7804 = !DILocation(line: 1966, column: 17, scope: !7803)
!7805 = !DILocation(line: 1966, column: 14, scope: !7803)
!7806 = !DILocation(line: 1966, column: 3, scope: !7800)
!7807 = !DILocation(line: 1967, column: 11, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7803, file: !1, line: 1966, column: 31)
!7809 = !DILocation(line: 1967, column: 23, scope: !7808)
!7810 = !DILocation(line: 1967, column: 9, scope: !7808)
!7811 = !DILocation(line: 1967, column: 7, scope: !7808)
!7812 = !DILocation(line: 1969, column: 8, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7808, file: !1, line: 1969, column: 8)
!7814 = !DILocation(line: 1969, column: 13, scope: !7813)
!7815 = !DILocation(line: 1969, column: 20, scope: !7813)
!7816 = !DILocation(line: 1969, column: 24, scope: !7813)
!7817 = !DILocation(line: 1969, column: 29, scope: !7813)
!7818 = !DILocation(line: 1969, column: 35, scope: !7813)
!7819 = !DILocation(line: 1969, column: 39, scope: !7813)
!7820 = !DILocation(line: 1969, column: 33, scope: !7813)
!7821 = !DILocation(line: 1969, column: 8, scope: !7808)
!7822 = !DILocation(line: 1970, column: 13, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7813, file: !1, line: 1969, column: 45)
!7824 = !DILocation(line: 1971, column: 17, scope: !7823)
!7825 = !DILocation(line: 1971, column: 21, scope: !7823)
!7826 = !DILocation(line: 1971, column: 25, scope: !7823)
!7827 = !DILocation(line: 1971, column: 32, scope: !7823)
!7828 = !DILocation(line: 1971, column: 5, scope: !7823)
!7829 = !DILocation(line: 1972, column: 4, scope: !7823)
!7830 = !DILocation(line: 1973, column: 3, scope: !7808)
!7831 = !DILocation(line: 1966, column: 27, scope: !7803)
!7832 = !DILocation(line: 1966, column: 3, scope: !7803)
!7833 = distinct !{!7833, !7806, !7834}
!7834 = !DILocation(line: 1973, column: 3, scope: !7800)
!7835 = !DILocation(line: 1975, column: 7, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7780, file: !1, line: 1975, column: 7)
!7837 = !DILocation(line: 1975, column: 7, scope: !7780)
!7838 = !DILocation(line: 1977, column: 16, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7836, file: !1, line: 1975, column: 16)
!7840 = !DILocation(line: 1977, column: 4, scope: !7839)
!7841 = !DILocation(line: 1977, column: 8, scope: !7839)
!7842 = !DILocation(line: 1977, column: 14, scope: !7839)
!7843 = !DILocation(line: 1978, column: 4, scope: !7839)
!7844 = !DILocation(line: 1978, column: 8, scope: !7839)
!7845 = !DILocation(line: 1978, column: 23, scope: !7839)
!7846 = !DILocation(line: 1978, column: 27, scope: !7839)
!7847 = !DILocation(line: 1978, column: 32, scope: !7839)
!7848 = !DILocation(line: 1979, column: 3, scope: !7839)
!7849 = !DILocation(line: 1981, column: 13, scope: !7780)
!7850 = !DILocation(line: 1981, column: 11, scope: !7780)
!7851 = !DILocation(line: 1982, column: 2, scope: !7780)
!7852 = !DILocation(line: 1953, column: 37, scope: !7777)
!7853 = !DILocation(line: 1953, column: 41, scope: !7777)
!7854 = !DILocation(line: 1953, column: 35, scope: !7777)
!7855 = !DILocation(line: 1953, column: 2, scope: !7777)
!7856 = distinct !{!7856, !7778, !7857}
!7857 = !DILocation(line: 1982, column: 2, scope: !7771)
!7858 = !DILocation(line: 1983, column: 1, scope: !7753)
!7859 = distinct !DISubprogram(name: "renderflare", scope: !1, file: !1, line: 1865, type: !7860, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!7860 = !DISubroutineType(types: !7861)
!7861 = !{null, !2092, !692, !4145}
!7862 = !DILocalVariable(name: "rr", arg: 1, scope: !7859, file: !1, line: 1865, type: !2092)
!7863 = !DILocation(line: 1865, column: 39, scope: !7859)
!7864 = !DILocalVariable(name: "rectf", arg: 2, scope: !7859, file: !1, line: 1865, type: !692)
!7865 = !DILocation(line: 1865, column: 50, scope: !7859)
!7866 = !DILocalVariable(name: "har", arg: 3, scope: !7859, file: !1, line: 1865, type: !4145)
!7867 = !DILocation(line: 1865, column: 66, scope: !7859)
!7868 = !DILocalVariable(name: "fla", scope: !7859, file: !1, line: 1868, type: !4146)
!7869 = !DILocation(line: 1868, column: 10, scope: !7859)
!7870 = !DILocalVariable(name: "ma", scope: !7859, file: !1, line: 1869, type: !6812)
!7871 = !DILocation(line: 1869, column: 12, scope: !7859)
!7872 = !DILocalVariable(name: "rc", scope: !7859, file: !1, line: 1870, type: !2017)
!7873 = !DILocation(line: 1870, column: 15, scope: !7859)
!7874 = !DILocalVariable(name: "rad", scope: !7859, file: !1, line: 1871, type: !57)
!7875 = !DILocation(line: 1871, column: 8, scope: !7859)
!7876 = !DILocalVariable(name: "alfa", scope: !7859, file: !1, line: 1871, type: !57)
!7877 = !DILocation(line: 1871, column: 13, scope: !7859)
!7878 = !DILocalVariable(name: "visifac", scope: !7859, file: !1, line: 1871, type: !57)
!7879 = !DILocation(line: 1871, column: 19, scope: !7859)
!7880 = !DILocalVariable(name: "vec", scope: !7859, file: !1, line: 1871, type: !217)
!7881 = !DILocation(line: 1871, column: 28, scope: !7859)
!7882 = !DILocalVariable(name: "b", scope: !7859, file: !1, line: 1872, type: !5)
!7883 = !DILocation(line: 1872, column: 6, scope: !7859)
!7884 = !DILocalVariable(name: "type", scope: !7859, file: !1, line: 1872, type: !5)
!7885 = !DILocation(line: 1872, column: 9, scope: !7859)
!7886 = !DILocation(line: 1874, column: 8, scope: !7859)
!7887 = !DILocation(line: 1874, column: 7, scope: !7859)
!7888 = !DILocation(line: 1875, column: 28, scope: !7859)
!7889 = !DILocation(line: 1875, column: 34, scope: !7859)
!7890 = !DILocation(line: 1875, column: 17, scope: !7859)
!7891 = !DILocation(line: 1875, column: 22, scope: !7859)
!7892 = !DILocation(line: 1875, column: 6, scope: !7859)
!7893 = !DILocation(line: 1875, column: 11, scope: !7859)
!7894 = !DILocation(line: 1877, column: 7, scope: !7859)
!7895 = !DILocation(line: 1877, column: 12, scope: !7859)
!7896 = !DILocation(line: 1877, column: 5, scope: !7859)
!7897 = !DILocation(line: 1878, column: 8, scope: !7859)
!7898 = !DILocation(line: 1878, column: 13, scope: !7859)
!7899 = !DILocation(line: 1878, column: 6, scope: !7859)
!7900 = !DILocation(line: 1880, column: 13, scope: !7859)
!7901 = !DILocation(line: 1880, column: 19, scope: !7859)
!7902 = !DILocation(line: 1880, column: 24, scope: !7859)
!7903 = !DILocation(line: 1880, column: 18, scope: !7859)
!7904 = !DILocation(line: 1880, column: 17, scope: !7859)
!7905 = !DILocation(line: 1880, column: 9, scope: !7859)
!7906 = !DILocation(line: 1882, column: 14, scope: !7859)
!7907 = !DILocation(line: 1882, column: 19, scope: !7859)
!7908 = !DILocation(line: 1882, column: 23, scope: !7859)
!7909 = !DILocation(line: 1882, column: 28, scope: !7859)
!7910 = !DILocation(line: 1882, column: 22, scope: !7859)
!7911 = !DILocation(line: 1882, column: 32, scope: !7859)
!7912 = !DILocation(line: 1882, column: 37, scope: !7859)
!7913 = !DILocation(line: 1882, column: 31, scope: !7859)
!7914 = !DILocation(line: 1882, column: 10, scope: !7859)
!7915 = !DILocation(line: 1883, column: 12, scope: !7859)
!7916 = !DILocation(line: 1883, column: 9, scope: !7859)
!7917 = !DILocation(line: 1885, column: 6, scope: !7859)
!7918 = !DILocation(line: 1885, column: 11, scope: !7859)
!7919 = !DILocation(line: 1885, column: 4, scope: !7859)
!7920 = !DILocation(line: 1889, column: 12, scope: !7859)
!7921 = !DILocation(line: 1889, column: 16, scope: !7859)
!7922 = !DILocation(line: 1889, column: 20, scope: !7859)
!7923 = !DILocation(line: 1889, column: 15, scope: !7859)
!7924 = !DILocation(line: 1889, column: 30, scope: !7859)
!7925 = !DILocation(line: 1889, column: 29, scope: !7859)
!7926 = !DILocation(line: 1889, column: 2, scope: !7859)
!7927 = !DILocation(line: 1889, column: 7, scope: !7859)
!7928 = !DILocation(line: 1889, column: 10, scope: !7859)
!7929 = !DILocation(line: 1890, column: 14, scope: !7859)
!7930 = !DILocation(line: 1890, column: 19, scope: !7859)
!7931 = !DILocation(line: 1890, column: 23, scope: !7859)
!7932 = !DILocation(line: 1890, column: 28, scope: !7859)
!7933 = !DILocation(line: 1890, column: 22, scope: !7859)
!7934 = !DILocation(line: 1890, column: 2, scope: !7859)
!7935 = !DILocation(line: 1890, column: 7, scope: !7859)
!7936 = !DILocation(line: 1890, column: 12, scope: !7859)
!7937 = !DILocation(line: 1891, column: 15, scope: !7859)
!7938 = !DILocation(line: 1891, column: 17, scope: !7859)
!7939 = !DILocation(line: 1891, column: 2, scope: !7859)
!7940 = !DILocation(line: 1891, column: 7, scope: !7859)
!7941 = !DILocation(line: 1891, column: 9, scope: !7859)
!7942 = !DILocation(line: 1893, column: 13, scope: !7859)
!7943 = !DILocation(line: 1893, column: 18, scope: !7859)
!7944 = !DILocation(line: 1893, column: 17, scope: !7859)
!7945 = !DILocation(line: 1893, column: 2, scope: !7859)
!7946 = !DILocation(line: 1893, column: 7, scope: !7859)
!7947 = !DILocation(line: 1893, column: 11, scope: !7859)
!7948 = !DILocation(line: 1895, column: 18, scope: !7859)
!7949 = !DILocation(line: 1895, column: 22, scope: !7859)
!7950 = !DILocation(line: 1895, column: 29, scope: !7859)
!7951 = !DILocation(line: 1895, column: 2, scope: !7859)
!7952 = !DILocation(line: 1898, column: 18, scope: !7859)
!7953 = !DILocation(line: 1898, column: 22, scope: !7859)
!7954 = !DILocation(line: 1898, column: 16, scope: !7859)
!7955 = !DILocation(line: 1898, column: 4, scope: !7859)
!7956 = !DILocation(line: 1900, column: 8, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7859, file: !1, line: 1900, column: 2)
!7958 = !DILocation(line: 1900, column: 7, scope: !7957)
!7959 = !DILocation(line: 1900, column: 12, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7957, file: !1, line: 1900, column: 2)
!7961 = !DILocation(line: 1900, column: 14, scope: !7960)
!7962 = !DILocation(line: 1900, column: 19, scope: !7960)
!7963 = !DILocation(line: 1900, column: 13, scope: !7960)
!7964 = !DILocation(line: 1900, column: 2, scope: !7957)
!7965 = !DILocation(line: 1902, column: 17, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7960, file: !1, line: 1900, column: 32)
!7967 = !DILocation(line: 1902, column: 11, scope: !7966)
!7968 = !DILocation(line: 1902, column: 7, scope: !7966)
!7969 = !DILocation(line: 1902, column: 9, scope: !7966)
!7970 = !DILocation(line: 1903, column: 17, scope: !7966)
!7971 = !DILocation(line: 1903, column: 11, scope: !7966)
!7972 = !DILocation(line: 1903, column: 7, scope: !7966)
!7973 = !DILocation(line: 1903, column: 9, scope: !7966)
!7974 = !DILocation(line: 1904, column: 17, scope: !7966)
!7975 = !DILocation(line: 1904, column: 11, scope: !7966)
!7976 = !DILocation(line: 1904, column: 7, scope: !7966)
!7977 = !DILocation(line: 1904, column: 9, scope: !7966)
!7978 = !DILocation(line: 1905, column: 13, scope: !7966)
!7979 = !DILocation(line: 1905, column: 17, scope: !7966)
!7980 = !DILocation(line: 1905, column: 34, scope: !7966)
!7981 = !DILocation(line: 1905, column: 39, scope: !7966)
!7982 = !DILocation(line: 1905, column: 38, scope: !7966)
!7983 = !DILocation(line: 1905, column: 47, scope: !7966)
!7984 = !DILocation(line: 1905, column: 46, scope: !7966)
!7985 = !DILocation(line: 1905, column: 28, scope: !7966)
!7986 = !DILocation(line: 1905, column: 27, scope: !7966)
!7987 = !DILocation(line: 1905, column: 7, scope: !7966)
!7988 = !DILocation(line: 1905, column: 11, scope: !7966)
!7989 = !DILocation(line: 1906, column: 33, scope: !7966)
!7990 = !DILocation(line: 1906, column: 32, scope: !7966)
!7991 = !DILocation(line: 1906, column: 21, scope: !7966)
!7992 = !DILocation(line: 1906, column: 19, scope: !7966)
!7993 = !DILocation(line: 1906, column: 7, scope: !7966)
!7994 = !DILocation(line: 1906, column: 11, scope: !7966)
!7995 = !DILocation(line: 1907, column: 7, scope: !7966)
!7996 = !DILocation(line: 1907, column: 10, scope: !7966)
!7997 = !DILocation(line: 1909, column: 26, scope: !7966)
!7998 = !DILocation(line: 1909, column: 25, scope: !7966)
!7999 = !DILocation(line: 1909, column: 15, scope: !7966)
!8000 = !DILocation(line: 1909, column: 9, scope: !7966)
!8001 = !DILocation(line: 1909, column: 7, scope: !7966)
!8002 = !DILocation(line: 1911, column: 13, scope: !7966)
!8003 = !DILocation(line: 1911, column: 17, scope: !7966)
!8004 = !DILocation(line: 1911, column: 46, scope: !7966)
!8005 = !DILocation(line: 1911, column: 51, scope: !7966)
!8006 = !DILocation(line: 1911, column: 44, scope: !7966)
!8007 = !DILocation(line: 1911, column: 57, scope: !7966)
!8008 = !DILocation(line: 1911, column: 55, scope: !7966)
!8009 = !DILocation(line: 1911, column: 33, scope: !7966)
!8010 = !DILocation(line: 1911, column: 27, scope: !7966)
!8011 = !DILocation(line: 1911, column: 25, scope: !7966)
!8012 = !DILocation(line: 1911, column: 7, scope: !7966)
!8013 = !DILocation(line: 1911, column: 11, scope: !7966)
!8014 = !DILocation(line: 1913, column: 7, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !7966, file: !1, line: 1913, column: 7)
!8016 = !DILocation(line: 1913, column: 11, scope: !8015)
!8017 = !DILocation(line: 1913, column: 7, scope: !7966)
!8018 = !DILocation(line: 1914, column: 8, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8015, file: !1, line: 1913, column: 16)
!8020 = !DILocation(line: 1914, column: 11, scope: !8019)
!8021 = !DILocation(line: 1915, column: 16, scope: !8019)
!8022 = !DILocation(line: 1915, column: 21, scope: !8019)
!8023 = !DILocation(line: 1915, column: 14, scope: !8019)
!8024 = !DILocation(line: 1915, column: 8, scope: !8019)
!8025 = !DILocation(line: 1915, column: 11, scope: !8019)
!8026 = !DILocation(line: 1916, column: 3, scope: !8019)
!8027 = !DILocation(line: 1918, column: 18, scope: !7966)
!8028 = !DILocation(line: 1918, column: 26, scope: !7966)
!8029 = !DILocation(line: 1918, column: 21, scope: !7966)
!8030 = !DILocation(line: 1918, column: 7, scope: !7966)
!8031 = !DILocation(line: 1918, column: 12, scope: !7966)
!8032 = !DILocation(line: 1920, column: 16, scope: !7966)
!8033 = !DILocation(line: 1920, column: 15, scope: !7966)
!8034 = !DILocation(line: 1920, column: 23, scope: !7966)
!8035 = !DILocation(line: 1920, column: 28, scope: !7966)
!8036 = !DILocation(line: 1920, column: 33, scope: !7966)
!8037 = !DILocation(line: 1920, column: 37, scope: !7966)
!8038 = !DILocation(line: 1920, column: 31, scope: !7966)
!8039 = !DILocation(line: 1920, column: 30, scope: !7966)
!8040 = !DILocation(line: 1920, column: 21, scope: !7966)
!8041 = !DILocation(line: 1920, column: 3, scope: !7966)
!8042 = !DILocation(line: 1920, column: 9, scope: !7966)
!8043 = !DILocation(line: 1921, column: 16, scope: !7966)
!8044 = !DILocation(line: 1921, column: 15, scope: !7966)
!8045 = !DILocation(line: 1921, column: 23, scope: !7966)
!8046 = !DILocation(line: 1921, column: 28, scope: !7966)
!8047 = !DILocation(line: 1921, column: 33, scope: !7966)
!8048 = !DILocation(line: 1921, column: 37, scope: !7966)
!8049 = !DILocation(line: 1921, column: 31, scope: !7966)
!8050 = !DILocation(line: 1921, column: 30, scope: !7966)
!8051 = !DILocation(line: 1921, column: 21, scope: !7966)
!8052 = !DILocation(line: 1921, column: 3, scope: !7966)
!8053 = !DILocation(line: 1921, column: 9, scope: !7966)
!8054 = !DILocation(line: 1922, column: 23, scope: !7966)
!8055 = !DILocation(line: 1922, column: 30, scope: !7966)
!8056 = !DILocation(line: 1922, column: 29, scope: !7966)
!8057 = !DILocation(line: 1922, column: 39, scope: !7966)
!8058 = !DILocation(line: 1922, column: 46, scope: !7966)
!8059 = !DILocation(line: 1922, column: 45, scope: !7966)
!8060 = !DILocation(line: 1922, column: 37, scope: !7966)
!8061 = !DILocation(line: 1922, column: 53, scope: !7966)
!8062 = !DILocation(line: 1922, column: 17, scope: !7966)
!8063 = !DILocation(line: 1922, column: 16, scope: !7966)
!8064 = !DILocation(line: 1922, column: 3, scope: !7966)
!8065 = !DILocation(line: 1922, column: 9, scope: !7966)
!8066 = !DILocation(line: 1924, column: 13, scope: !7966)
!8067 = !DILocation(line: 1924, column: 17, scope: !7966)
!8068 = !DILocation(line: 1924, column: 11, scope: !7966)
!8069 = !DILocation(line: 1924, column: 22, scope: !7966)
!8070 = !DILocation(line: 1924, column: 20, scope: !7966)
!8071 = !DILocation(line: 1924, column: 37, scope: !7966)
!8072 = !DILocation(line: 1924, column: 36, scope: !7966)
!8073 = !DILocation(line: 1924, column: 46, scope: !7966)
!8074 = !DILocation(line: 1924, column: 44, scope: !7966)
!8075 = !DILocation(line: 1924, column: 43, scope: !7966)
!8076 = !DILocation(line: 1924, column: 52, scope: !7966)
!8077 = !DILocation(line: 1924, column: 51, scope: !7966)
!8078 = !DILocation(line: 1924, column: 59, scope: !7966)
!8079 = !DILocation(line: 1924, column: 58, scope: !7966)
!8080 = !DILocation(line: 1924, column: 29, scope: !7966)
!8081 = !DILocation(line: 1924, column: 7, scope: !7966)
!8082 = !DILocation(line: 1924, column: 9, scope: !7966)
!8083 = !DILocation(line: 1925, column: 13, scope: !7966)
!8084 = !DILocation(line: 1925, column: 17, scope: !7966)
!8085 = !DILocation(line: 1925, column: 11, scope: !7966)
!8086 = !DILocation(line: 1925, column: 22, scope: !7966)
!8087 = !DILocation(line: 1925, column: 20, scope: !7966)
!8088 = !DILocation(line: 1925, column: 37, scope: !7966)
!8089 = !DILocation(line: 1925, column: 36, scope: !7966)
!8090 = !DILocation(line: 1925, column: 46, scope: !7966)
!8091 = !DILocation(line: 1925, column: 44, scope: !7966)
!8092 = !DILocation(line: 1925, column: 43, scope: !7966)
!8093 = !DILocation(line: 1925, column: 52, scope: !7966)
!8094 = !DILocation(line: 1925, column: 51, scope: !7966)
!8095 = !DILocation(line: 1925, column: 59, scope: !7966)
!8096 = !DILocation(line: 1925, column: 58, scope: !7966)
!8097 = !DILocation(line: 1925, column: 29, scope: !7966)
!8098 = !DILocation(line: 1925, column: 7, scope: !7966)
!8099 = !DILocation(line: 1925, column: 9, scope: !7966)
!8100 = !DILocation(line: 1927, column: 9, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !7966, file: !1, line: 1927, column: 7)
!8102 = !DILocation(line: 1927, column: 7, scope: !8101)
!8103 = !DILocation(line: 1927, column: 14, scope: !8101)
!8104 = !DILocation(line: 1927, column: 7, scope: !7966)
!8105 = !DILocation(line: 1928, column: 12, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8107, file: !1, line: 1928, column: 8)
!8107 = distinct !DILexicalBlock(scope: !8101, file: !1, line: 1927, column: 29)
!8108 = !DILocation(line: 1928, column: 17, scope: !8106)
!8109 = !DILocation(line: 1928, column: 8, scope: !8107)
!8110 = !DILocation(line: 1928, column: 35, scope: !8106)
!8111 = !DILocation(line: 1928, column: 38, scope: !8106)
!8112 = !DILocation(line: 1928, column: 31, scope: !8106)
!8113 = !DILocation(line: 1929, column: 13, scope: !8106)
!8114 = !DILocation(line: 1929, column: 16, scope: !8106)
!8115 = !DILocation(line: 1930, column: 3, scope: !8107)
!8116 = !DILocation(line: 1931, column: 7, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !7966, file: !1, line: 1931, column: 7)
!8118 = !DILocation(line: 1931, column: 12, scope: !8117)
!8119 = !DILocation(line: 1931, column: 7, scope: !7966)
!8120 = !DILocation(line: 1931, column: 21, scope: !8117)
!8121 = !DILocation(line: 1931, column: 25, scope: !8117)
!8122 = !DILocation(line: 1931, column: 17, scope: !8117)
!8123 = !DILocation(line: 1932, column: 12, scope: !8117)
!8124 = !DILocation(line: 1932, column: 16, scope: !8117)
!8125 = !DILocation(line: 1933, column: 19, scope: !7966)
!8126 = !DILocation(line: 1933, column: 23, scope: !7966)
!8127 = !DILocation(line: 1933, column: 3, scope: !7966)
!8128 = !DILocation(line: 1935, column: 7, scope: !7966)
!8129 = !DILocation(line: 1935, column: 11, scope: !7966)
!8130 = !DILocation(line: 1936, column: 7, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !7966, file: !1, line: 1936, column: 7)
!8132 = !DILocation(line: 1936, column: 12, scope: !8131)
!8133 = !DILocation(line: 1936, column: 7, scope: !7966)
!8134 = !DILocation(line: 1936, column: 21, scope: !8131)
!8135 = !DILocation(line: 1936, column: 25, scope: !8131)
!8136 = !DILocation(line: 1936, column: 17, scope: !8131)
!8137 = !DILocation(line: 1937, column: 12, scope: !8131)
!8138 = !DILocation(line: 1937, column: 16, scope: !8131)
!8139 = !DILocation(line: 1938, column: 19, scope: !7966)
!8140 = !DILocation(line: 1938, column: 23, scope: !7966)
!8141 = !DILocation(line: 1938, column: 3, scope: !7966)
!8142 = !DILocation(line: 1940, column: 5, scope: !7966)
!8143 = !DILocation(line: 1941, column: 2, scope: !7966)
!8144 = !DILocation(line: 1900, column: 28, scope: !7960)
!8145 = !DILocation(line: 1900, column: 2, scope: !7960)
!8146 = distinct !{!8146, !7964, !8147}
!8147 = !DILocation(line: 1941, column: 2, scope: !7957)
!8148 = !DILocation(line: 1942, column: 1, scope: !7859)
!8149 = distinct !DISubprogram(name: "addps", scope: !1, file: !1, line: 921, type: !8150, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{null, !595, !2100, !5, !5, !5, !5, !77}
!8152 = !DILocalVariable(name: "lb", arg: 1, scope: !8149, file: !1, line: 921, type: !595)
!8153 = !DILocation(line: 921, column: 29, scope: !8149)
!8154 = !DILocalVariable(name: "rd", arg: 2, scope: !8149, file: !1, line: 921, type: !2100)
!8155 = !DILocation(line: 921, column: 43, scope: !8149)
!8156 = !DILocalVariable(name: "obi", arg: 3, scope: !8149, file: !1, line: 921, type: !5)
!8157 = !DILocation(line: 921, column: 51, scope: !8149)
!8158 = !DILocalVariable(name: "facenr", arg: 4, scope: !8149, file: !1, line: 921, type: !5)
!8159 = !DILocation(line: 921, column: 60, scope: !8149)
!8160 = !DILocalVariable(name: "z", arg: 5, scope: !8149, file: !1, line: 921, type: !5)
!8161 = !DILocation(line: 921, column: 72, scope: !8149)
!8162 = !DILocalVariable(name: "maskz", arg: 6, scope: !8149, file: !1, line: 921, type: !5)
!8163 = !DILocation(line: 921, column: 79, scope: !8149)
!8164 = !DILocalVariable(name: "mask", arg: 7, scope: !8149, file: !1, line: 921, type: !77)
!8165 = !DILocation(line: 921, column: 101, scope: !8149)
!8166 = !DILocalVariable(name: "psm", scope: !8149, file: !1, line: 923, type: !59)
!8167 = !DILocation(line: 923, column: 14, scope: !8149)
!8168 = !DILocalVariable(name: "ps", scope: !8149, file: !1, line: 924, type: !81)
!8169 = !DILocation(line: 924, column: 10, scope: !8149)
!8170 = !DILocalVariable(name: "last", scope: !8149, file: !1, line: 924, type: !81)
!8171 = !DILocation(line: 924, column: 15, scope: !8149)
!8172 = !DILocation(line: 926, column: 7, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8149, file: !1, line: 926, column: 6)
!8174 = !DILocation(line: 926, column: 6, scope: !8173)
!8175 = !DILocation(line: 926, column: 6, scope: !8149)
!8176 = !DILocation(line: 927, column: 19, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8173, file: !1, line: 926, column: 11)
!8178 = !DILocation(line: 927, column: 18, scope: !8177)
!8179 = !DILocation(line: 927, column: 7, scope: !8177)
!8180 = !DILocation(line: 927, column: 5, scope: !8177)
!8181 = !DILocation(line: 929, column: 3, scope: !8177)
!8182 = !DILocation(line: 929, column: 10, scope: !8177)
!8183 = !DILocation(line: 930, column: 9, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !1, line: 930, column: 9)
!8185 = distinct !DILexicalBlock(scope: !8177, file: !1, line: 929, column: 14)
!8186 = !DILocation(line: 930, column: 13, scope: !8184)
!8187 = !DILocation(line: 930, column: 20, scope: !8184)
!8188 = !DILocation(line: 930, column: 17, scope: !8184)
!8189 = !DILocation(line: 930, column: 24, scope: !8184)
!8190 = !DILocation(line: 930, column: 27, scope: !8184)
!8191 = !DILocation(line: 930, column: 31, scope: !8184)
!8192 = !DILocation(line: 930, column: 41, scope: !8184)
!8193 = !DILocation(line: 930, column: 38, scope: !8184)
!8194 = !DILocation(line: 930, column: 9, scope: !8185)
!8195 = !DILocation(line: 931, column: 17, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8184, file: !1, line: 930, column: 50)
!8197 = !DILocation(line: 931, column: 5, scope: !8196)
!8198 = !DILocation(line: 931, column: 9, scope: !8196)
!8199 = !DILocation(line: 931, column: 14, scope: !8196)
!8200 = !DILocation(line: 932, column: 5, scope: !8196)
!8201 = !DILocation(line: 934, column: 10, scope: !8185)
!8202 = !DILocation(line: 934, column: 8, scope: !8185)
!8203 = !DILocation(line: 935, column: 8, scope: !8185)
!8204 = !DILocation(line: 935, column: 12, scope: !8185)
!8205 = !DILocation(line: 935, column: 6, scope: !8185)
!8206 = distinct !{!8206, !8181, !8207}
!8207 = !DILocation(line: 936, column: 3, scope: !8177)
!8208 = !DILocation(line: 937, column: 2, scope: !8177)
!8209 = !DILocation(line: 940, column: 7, scope: !8149)
!8210 = !DILocation(line: 940, column: 11, scope: !8149)
!8211 = !DILocation(line: 940, column: 5, scope: !8149)
!8212 = !DILocation(line: 942, column: 6, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8149, file: !1, line: 942, column: 6)
!8214 = !DILocation(line: 942, column: 11, scope: !8213)
!8215 = !DILocation(line: 942, column: 18, scope: !8213)
!8216 = !DILocation(line: 942, column: 6, scope: !8149)
!8217 = !DILocation(line: 943, column: 18, scope: !8213)
!8218 = !DILocation(line: 943, column: 8, scope: !8213)
!8219 = !DILocation(line: 943, column: 6, scope: !8213)
!8220 = !DILocation(line: 943, column: 3, scope: !8213)
!8221 = !DILocation(line: 945, column: 6, scope: !8149)
!8222 = !DILocation(line: 945, column: 11, scope: !8149)
!8223 = !DILocation(line: 945, column: 16, scope: !8149)
!8224 = !DILocation(line: 945, column: 21, scope: !8149)
!8225 = !DILocation(line: 945, column: 28, scope: !8149)
!8226 = !DILocation(line: 945, column: 14, scope: !8149)
!8227 = !DILocation(line: 945, column: 4, scope: !8149)
!8228 = !DILocation(line: 947, column: 6, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8149, file: !1, line: 947, column: 6)
!8230 = !DILocation(line: 947, column: 6, scope: !8149)
!8231 = !DILocation(line: 947, column: 24, scope: !8229)
!8232 = !DILocation(line: 947, column: 12, scope: !8229)
!8233 = !DILocation(line: 947, column: 18, scope: !8229)
!8234 = !DILocation(line: 947, column: 22, scope: !8229)
!8235 = !DILocation(line: 948, column: 22, scope: !8229)
!8236 = !DILocation(line: 948, column: 12, scope: !8229)
!8237 = !DILocation(line: 948, column: 8, scope: !8229)
!8238 = !DILocation(line: 948, column: 10, scope: !8229)
!8239 = !DILocation(line: 950, column: 2, scope: !8149)
!8240 = !DILocation(line: 950, column: 6, scope: !8149)
!8241 = !DILocation(line: 950, column: 10, scope: !8149)
!8242 = !DILocation(line: 951, column: 11, scope: !8149)
!8243 = !DILocation(line: 951, column: 2, scope: !8149)
!8244 = !DILocation(line: 951, column: 6, scope: !8149)
!8245 = !DILocation(line: 951, column: 9, scope: !8149)
!8246 = !DILocation(line: 952, column: 14, scope: !8149)
!8247 = !DILocation(line: 952, column: 2, scope: !8149)
!8248 = !DILocation(line: 952, column: 6, scope: !8149)
!8249 = !DILocation(line: 952, column: 12, scope: !8149)
!8250 = !DILocation(line: 953, column: 9, scope: !8149)
!8251 = !DILocation(line: 953, column: 2, scope: !8149)
!8252 = !DILocation(line: 953, column: 6, scope: !8149)
!8253 = !DILocation(line: 953, column: 7, scope: !8149)
!8254 = !DILocation(line: 954, column: 13, scope: !8149)
!8255 = !DILocation(line: 954, column: 2, scope: !8149)
!8256 = !DILocation(line: 954, column: 6, scope: !8149)
!8257 = !DILocation(line: 954, column: 11, scope: !8149)
!8258 = !DILocation(line: 955, column: 13, scope: !8149)
!8259 = !DILocation(line: 955, column: 2, scope: !8149)
!8260 = !DILocation(line: 955, column: 6, scope: !8149)
!8261 = !DILocation(line: 955, column: 11, scope: !8149)
!8262 = !DILocation(line: 956, column: 2, scope: !8149)
!8263 = !DILocation(line: 956, column: 6, scope: !8149)
!8264 = !DILocation(line: 956, column: 13, scope: !8149)
!8265 = !DILocation(line: 957, column: 1, scope: !8149)
!8266 = distinct !DISubprogram(name: "add_filt_passes", scope: !1, file: !1, line: 453, type: !8267, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8267 = !DISubroutineType(types: !8268)
!8268 = !{null, !88, !5, !5, !5, !6321, !6322}
!8269 = !DILocalVariable(name: "rl", arg: 1, scope: !8266, file: !1, line: 453, type: !88)
!8270 = !DILocation(line: 453, column: 42, scope: !8266)
!8271 = !DILocalVariable(name: "curmask", arg: 2, scope: !8266, file: !1, line: 453, type: !5)
!8272 = !DILocation(line: 453, column: 50, scope: !8266)
!8273 = !DILocalVariable(name: "rectx", arg: 3, scope: !8266, file: !1, line: 453, type: !5)
!8274 = !DILocation(line: 453, column: 63, scope: !8266)
!8275 = !DILocalVariable(name: "offset", arg: 4, scope: !8266, file: !1, line: 453, type: !5)
!8276 = !DILocation(line: 453, column: 74, scope: !8266)
!8277 = !DILocalVariable(name: "shi", arg: 5, scope: !8266, file: !1, line: 453, type: !6321)
!8278 = !DILocation(line: 453, column: 94, scope: !8266)
!8279 = !DILocalVariable(name: "shr", arg: 6, scope: !8266, file: !1, line: 453, type: !6322)
!8280 = !DILocation(line: 453, column: 112, scope: !8266)
!8281 = !DILocalVariable(name: "rpass", scope: !8266, file: !1, line: 455, type: !4697)
!8282 = !DILocation(line: 455, column: 14, scope: !8266)
!8283 = !DILocation(line: 458, column: 17, scope: !8266)
!8284 = !DILocation(line: 458, column: 26, scope: !8266)
!8285 = !DILocation(line: 458, column: 31, scope: !8266)
!8286 = !DILocation(line: 458, column: 41, scope: !8266)
!8287 = !DILocation(line: 458, column: 45, scope: !8266)
!8288 = !DILocation(line: 458, column: 55, scope: !8266)
!8289 = !DILocation(line: 458, column: 54, scope: !8266)
!8290 = !DILocation(line: 458, column: 51, scope: !8266)
!8291 = !DILocation(line: 458, column: 63, scope: !8266)
!8292 = !DILocation(line: 458, column: 2, scope: !8266)
!8293 = !DILocation(line: 460, column: 14, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8266, file: !1, line: 460, column: 2)
!8295 = !DILocation(line: 460, column: 18, scope: !8294)
!8296 = !DILocation(line: 460, column: 25, scope: !8294)
!8297 = !DILocation(line: 460, column: 12, scope: !8294)
!8298 = !DILocation(line: 460, column: 7, scope: !8294)
!8299 = !DILocation(line: 460, column: 32, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8294, file: !1, line: 460, column: 2)
!8301 = !DILocation(line: 460, column: 2, scope: !8294)
!8302 = !DILocalVariable(name: "fp", scope: !8303, file: !1, line: 461, type: !692)
!8303 = distinct !DILexicalBlock(scope: !8300, file: !1, line: 460, column: 59)
!8304 = !DILocation(line: 461, column: 10, scope: !8303)
!8305 = !DILocalVariable(name: "col", scope: !8303, file: !1, line: 461, type: !692)
!8306 = !DILocation(line: 461, column: 15, scope: !8303)
!8307 = !DILocalVariable(name: "pixsize", scope: !8303, file: !1, line: 462, type: !5)
!8308 = !DILocation(line: 462, column: 7, scope: !8303)
!8309 = !DILocation(line: 464, column: 11, scope: !8303)
!8310 = !DILocation(line: 464, column: 18, scope: !8303)
!8311 = !DILocation(line: 464, column: 3, scope: !8303)
!8312 = !DILocation(line: 466, column: 9, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8303, file: !1, line: 464, column: 28)
!8314 = !DILocation(line: 466, column: 16, scope: !8313)
!8315 = !DILocation(line: 466, column: 23, scope: !8313)
!8316 = !DILocation(line: 466, column: 21, scope: !8313)
!8317 = !DILocation(line: 466, column: 7, scope: !8313)
!8318 = !DILocation(line: 467, column: 10, scope: !8313)
!8319 = !DILocation(line: 467, column: 15, scope: !8313)
!8320 = !DILocation(line: 467, column: 6, scope: !8313)
!8321 = !DILocation(line: 467, column: 8, scope: !8313)
!8322 = !DILocation(line: 468, column: 5, scope: !8313)
!8323 = !DILocation(line: 470, column: 10, scope: !8313)
!8324 = !DILocation(line: 470, column: 15, scope: !8313)
!8325 = !DILocation(line: 470, column: 8, scope: !8313)
!8326 = !DILocation(line: 471, column: 12, scope: !8313)
!8327 = !DILocation(line: 472, column: 5, scope: !8313)
!8328 = !DILocation(line: 474, column: 10, scope: !8313)
!8329 = !DILocation(line: 474, column: 15, scope: !8313)
!8330 = !DILocation(line: 474, column: 8, scope: !8313)
!8331 = !DILocation(line: 475, column: 5, scope: !8313)
!8332 = !DILocation(line: 477, column: 10, scope: !8313)
!8333 = !DILocation(line: 477, column: 15, scope: !8313)
!8334 = !DILocation(line: 477, column: 8, scope: !8313)
!8335 = !DILocation(line: 478, column: 5, scope: !8313)
!8336 = !DILocation(line: 480, column: 10, scope: !8313)
!8337 = !DILocation(line: 480, column: 15, scope: !8313)
!8338 = !DILocation(line: 480, column: 8, scope: !8313)
!8339 = !DILocation(line: 481, column: 5, scope: !8313)
!8340 = !DILocation(line: 483, column: 10, scope: !8313)
!8341 = !DILocation(line: 483, column: 15, scope: !8313)
!8342 = !DILocation(line: 483, column: 8, scope: !8313)
!8343 = !DILocation(line: 484, column: 5, scope: !8313)
!8344 = !DILocation(line: 486, column: 10, scope: !8313)
!8345 = !DILocation(line: 486, column: 15, scope: !8313)
!8346 = !DILocation(line: 486, column: 8, scope: !8313)
!8347 = !DILocation(line: 487, column: 5, scope: !8313)
!8348 = !DILocation(line: 489, column: 10, scope: !8313)
!8349 = !DILocation(line: 489, column: 15, scope: !8313)
!8350 = !DILocation(line: 489, column: 8, scope: !8313)
!8351 = !DILocation(line: 490, column: 5, scope: !8313)
!8352 = !DILocation(line: 492, column: 10, scope: !8313)
!8353 = !DILocation(line: 492, column: 15, scope: !8313)
!8354 = !DILocation(line: 492, column: 8, scope: !8313)
!8355 = !DILocation(line: 493, column: 5, scope: !8313)
!8356 = !DILocation(line: 495, column: 10, scope: !8313)
!8357 = !DILocation(line: 495, column: 15, scope: !8313)
!8358 = !DILocation(line: 495, column: 8, scope: !8313)
!8359 = !DILocation(line: 496, column: 5, scope: !8313)
!8360 = !DILocation(line: 498, column: 10, scope: !8313)
!8361 = !DILocation(line: 498, column: 15, scope: !8313)
!8362 = !DILocation(line: 498, column: 8, scope: !8313)
!8363 = !DILocation(line: 499, column: 5, scope: !8313)
!8364 = !DILocation(line: 501, column: 10, scope: !8313)
!8365 = !DILocation(line: 501, column: 15, scope: !8313)
!8366 = !DILocation(line: 501, column: 8, scope: !8313)
!8367 = !DILocation(line: 502, column: 5, scope: !8313)
!8368 = !DILocation(line: 505, column: 9, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8313, file: !1, line: 505, column: 9)
!8370 = !DILocation(line: 505, column: 14, scope: !8369)
!8371 = !DILocation(line: 505, column: 9, scope: !8313)
!8372 = !DILocalVariable(name: "mult", scope: !8373, file: !1, line: 506, type: !57)
!8373 = distinct !DILexicalBlock(scope: !8369, file: !1, line: 505, column: 21)
!8374 = !DILocation(line: 506, column: 12, scope: !8373)
!8375 = !DILocation(line: 506, column: 36, scope: !8373)
!8376 = !DILocation(line: 506, column: 25, scope: !8373)
!8377 = !DILocation(line: 506, column: 18, scope: !8373)
!8378 = !DILocation(line: 506, column: 54, scope: !8373)
!8379 = !DILocation(line: 506, column: 45, scope: !8373)
!8380 = !DILocation(line: 506, column: 44, scope: !8373)
!8381 = !DILocation(line: 507, column: 10, scope: !8373)
!8382 = !DILocation(line: 507, column: 17, scope: !8373)
!8383 = !DILocation(line: 507, column: 26, scope: !8373)
!8384 = !DILocation(line: 507, column: 25, scope: !8373)
!8385 = !DILocation(line: 507, column: 22, scope: !8373)
!8386 = !DILocation(line: 507, column: 8, scope: !8373)
!8387 = !DILocation(line: 508, column: 14, scope: !8373)
!8388 = !DILocation(line: 508, column: 32, scope: !8373)
!8389 = !DILocation(line: 508, column: 37, scope: !8373)
!8390 = !DILocation(line: 508, column: 40, scope: !8373)
!8391 = !DILocation(line: 508, column: 45, scope: !8373)
!8392 = !DILocation(line: 508, column: 52, scope: !8373)
!8393 = !DILocation(line: 508, column: 31, scope: !8373)
!8394 = !DILocation(line: 508, column: 25, scope: !8373)
!8395 = !DILocation(line: 508, column: 18, scope: !8373)
!8396 = !DILocation(line: 508, column: 6, scope: !8373)
!8397 = !DILocation(line: 508, column: 11, scope: !8373)
!8398 = !DILocation(line: 509, column: 14, scope: !8373)
!8399 = !DILocation(line: 509, column: 32, scope: !8373)
!8400 = !DILocation(line: 509, column: 37, scope: !8373)
!8401 = !DILocation(line: 509, column: 40, scope: !8373)
!8402 = !DILocation(line: 509, column: 45, scope: !8373)
!8403 = !DILocation(line: 509, column: 52, scope: !8373)
!8404 = !DILocation(line: 509, column: 31, scope: !8373)
!8405 = !DILocation(line: 509, column: 25, scope: !8373)
!8406 = !DILocation(line: 509, column: 18, scope: !8373)
!8407 = !DILocation(line: 509, column: 6, scope: !8373)
!8408 = !DILocation(line: 509, column: 11, scope: !8373)
!8409 = !DILocation(line: 510, column: 14, scope: !8373)
!8410 = !DILocation(line: 510, column: 6, scope: !8373)
!8411 = !DILocation(line: 510, column: 11, scope: !8373)
!8412 = !DILocation(line: 511, column: 5, scope: !8373)
!8413 = !DILocation(line: 512, column: 5, scope: !8313)
!8414 = !DILocation(line: 515, column: 9, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8313, file: !1, line: 515, column: 9)
!8416 = !DILocation(line: 515, column: 14, scope: !8415)
!8417 = !DILocation(line: 515, column: 9, scope: !8313)
!8418 = !DILocation(line: 516, column: 10, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8415, file: !1, line: 515, column: 19)
!8420 = !DILocation(line: 516, column: 17, scope: !8419)
!8421 = !DILocation(line: 516, column: 24, scope: !8419)
!8422 = !DILocation(line: 516, column: 22, scope: !8419)
!8423 = !DILocation(line: 516, column: 8, scope: !8419)
!8424 = !DILocation(line: 517, column: 11, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8419, file: !1, line: 517, column: 10)
!8426 = !DILocation(line: 517, column: 10, scope: !8425)
!8427 = !DILocation(line: 517, column: 13, scope: !8425)
!8428 = !DILocation(line: 517, column: 10, scope: !8419)
!8429 = !DILocation(line: 518, column: 19, scope: !8425)
!8430 = !DILocation(line: 518, column: 24, scope: !8425)
!8431 = !DILocation(line: 518, column: 29, scope: !8425)
!8432 = !DILocation(line: 518, column: 33, scope: !8425)
!8433 = !DILocation(line: 518, column: 12, scope: !8425)
!8434 = !DILocation(line: 518, column: 8, scope: !8425)
!8435 = !DILocation(line: 518, column: 10, scope: !8425)
!8436 = !DILocation(line: 518, column: 7, scope: !8425)
!8437 = !DILocation(line: 519, column: 5, scope: !8419)
!8438 = !DILocation(line: 520, column: 5, scope: !8313)
!8439 = !DILocation(line: 523, column: 10, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8313, file: !1, line: 523, column: 10)
!8441 = !DILocation(line: 523, column: 15, scope: !8440)
!8442 = !DILocation(line: 523, column: 10, scope: !8313)
!8443 = !DILocation(line: 524, column: 12, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8440, file: !1, line: 523, column: 20)
!8445 = !DILocation(line: 524, column: 19, scope: !8444)
!8446 = !DILocation(line: 524, column: 26, scope: !8444)
!8447 = !DILocation(line: 524, column: 24, scope: !8444)
!8448 = !DILocation(line: 524, column: 10, scope: !8444)
!8449 = !DILocation(line: 525, column: 13, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8444, file: !1, line: 525, column: 12)
!8451 = !DILocation(line: 525, column: 12, scope: !8450)
!8452 = !DILocation(line: 525, column: 15, scope: !8450)
!8453 = !DILocation(line: 525, column: 12, scope: !8444)
!8454 = !DILocation(line: 526, column: 22, scope: !8450)
!8455 = !DILocation(line: 526, column: 27, scope: !8450)
!8456 = !DILocation(line: 526, column: 32, scope: !8450)
!8457 = !DILocation(line: 526, column: 15, scope: !8450)
!8458 = !DILocation(line: 526, column: 11, scope: !8450)
!8459 = !DILocation(line: 526, column: 13, scope: !8450)
!8460 = !DILocation(line: 526, column: 10, scope: !8450)
!8461 = !DILocation(line: 527, column: 6, scope: !8444)
!8462 = !DILocation(line: 528, column: 6, scope: !8313)
!8463 = !DILocation(line: 531, column: 11, scope: !8313)
!8464 = !DILocation(line: 531, column: 16, scope: !8313)
!8465 = !DILocation(line: 531, column: 8, scope: !8313)
!8466 = !DILocation(line: 532, column: 12, scope: !8313)
!8467 = !DILocation(line: 533, column: 5, scope: !8313)
!8468 = !DILocation(line: 538, column: 9, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8313, file: !1, line: 536, column: 4)
!8470 = !DILocation(line: 538, column: 16, scope: !8469)
!8471 = !DILocation(line: 538, column: 25, scope: !8469)
!8472 = !DILocation(line: 538, column: 24, scope: !8469)
!8473 = !DILocation(line: 538, column: 21, scope: !8469)
!8474 = !DILocation(line: 538, column: 7, scope: !8469)
!8475 = !DILocation(line: 539, column: 11, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8469, file: !1, line: 539, column: 10)
!8477 = !DILocation(line: 539, column: 35, scope: !8476)
!8478 = !DILocation(line: 539, column: 33, scope: !8476)
!8479 = !DILocation(line: 539, column: 60, scope: !8476)
!8480 = !DILocation(line: 539, column: 73, scope: !8476)
!8481 = !DILocation(line: 539, column: 71, scope: !8476)
!8482 = !DILocation(line: 539, column: 57, scope: !8476)
!8483 = !DILocation(line: 539, column: 10, scope: !8469)
!8484 = !DILocation(line: 540, column: 13, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8476, file: !1, line: 539, column: 87)
!8486 = !DILocation(line: 540, column: 18, scope: !8485)
!8487 = !DILocation(line: 540, column: 6, scope: !8485)
!8488 = !DILocation(line: 540, column: 11, scope: !8485)
!8489 = !DILocation(line: 541, column: 13, scope: !8485)
!8490 = !DILocation(line: 541, column: 18, scope: !8485)
!8491 = !DILocation(line: 541, column: 6, scope: !8485)
!8492 = !DILocation(line: 541, column: 11, scope: !8485)
!8493 = !DILocation(line: 542, column: 5, scope: !8485)
!8494 = !DILocation(line: 543, column: 11, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8469, file: !1, line: 543, column: 10)
!8496 = !DILocation(line: 543, column: 35, scope: !8495)
!8497 = !DILocation(line: 543, column: 33, scope: !8495)
!8498 = !DILocation(line: 543, column: 60, scope: !8495)
!8499 = !DILocation(line: 543, column: 73, scope: !8495)
!8500 = !DILocation(line: 543, column: 71, scope: !8495)
!8501 = !DILocation(line: 543, column: 57, scope: !8495)
!8502 = !DILocation(line: 543, column: 10, scope: !8469)
!8503 = !DILocation(line: 544, column: 13, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8495, file: !1, line: 543, column: 87)
!8505 = !DILocation(line: 544, column: 18, scope: !8504)
!8506 = !DILocation(line: 544, column: 6, scope: !8504)
!8507 = !DILocation(line: 544, column: 11, scope: !8504)
!8508 = !DILocation(line: 545, column: 13, scope: !8504)
!8509 = !DILocation(line: 545, column: 18, scope: !8504)
!8510 = !DILocation(line: 545, column: 6, scope: !8504)
!8511 = !DILocation(line: 545, column: 11, scope: !8504)
!8512 = !DILocation(line: 546, column: 5, scope: !8504)
!8513 = !DILocation(line: 548, column: 5, scope: !8313)
!8514 = !DILocation(line: 552, column: 10, scope: !8313)
!8515 = !DILocation(line: 552, column: 15, scope: !8313)
!8516 = !DILocation(line: 552, column: 8, scope: !8313)
!8517 = !DILocation(line: 553, column: 12, scope: !8313)
!8518 = !DILocation(line: 554, column: 5, scope: !8313)
!8519 = !DILocation(line: 556, column: 7, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8303, file: !1, line: 556, column: 7)
!8521 = !DILocation(line: 556, column: 7, scope: !8303)
!8522 = !DILocation(line: 557, column: 8, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8520, file: !1, line: 556, column: 12)
!8524 = !DILocation(line: 557, column: 15, scope: !8523)
!8525 = !DILocation(line: 557, column: 22, scope: !8523)
!8526 = !DILocation(line: 557, column: 30, scope: !8523)
!8527 = !DILocation(line: 557, column: 29, scope: !8523)
!8528 = !DILocation(line: 557, column: 20, scope: !8523)
!8529 = !DILocation(line: 557, column: 6, scope: !8523)
!8530 = !DILocation(line: 558, column: 27, scope: !8523)
!8531 = !DILocation(line: 558, column: 36, scope: !8523)
!8532 = !DILocation(line: 558, column: 41, scope: !8523)
!8533 = !DILocation(line: 558, column: 45, scope: !8523)
!8534 = !DILocation(line: 558, column: 52, scope: !8523)
!8535 = !DILocation(line: 558, column: 4, scope: !8523)
!8536 = !DILocation(line: 559, column: 3, scope: !8523)
!8537 = !DILocation(line: 560, column: 2, scope: !8303)
!8538 = !DILocation(line: 460, column: 46, scope: !8300)
!8539 = !DILocation(line: 460, column: 53, scope: !8300)
!8540 = !DILocation(line: 460, column: 44, scope: !8300)
!8541 = !DILocation(line: 460, column: 2, scope: !8300)
!8542 = distinct !{!8542, !8301, !8543}
!8543 = !DILocation(line: 560, column: 2, scope: !8294)
!8544 = !DILocation(line: 561, column: 1, scope: !8266)
!8545 = distinct !DISubprogram(name: "max_ii", scope: !8546, file: !8546, line: 215, type: !8547, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8546 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8547 = !DISubroutineType(types: !8548)
!8548 = !{!5, !5, !5}
!8549 = !DILocalVariable(name: "a", arg: 1, scope: !8545, file: !8546, line: 215, type: !5)
!8550 = !DILocation(line: 215, column: 24, scope: !8545)
!8551 = !DILocalVariable(name: "b", arg: 2, scope: !8545, file: !8546, line: 215, type: !5)
!8552 = !DILocation(line: 215, column: 31, scope: !8545)
!8553 = !DILocation(line: 217, column: 10, scope: !8545)
!8554 = !DILocation(line: 217, column: 14, scope: !8545)
!8555 = !DILocation(line: 217, column: 12, scope: !8545)
!8556 = !DILocation(line: 217, column: 9, scope: !8545)
!8557 = !DILocation(line: 217, column: 19, scope: !8545)
!8558 = !DILocation(line: 217, column: 23, scope: !8545)
!8559 = !DILocation(line: 217, column: 2, scope: !8545)
!8560 = distinct !DISubprogram(name: "min_ii", scope: !8546, file: !8546, line: 211, type: !8547, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8561 = !DILocalVariable(name: "a", arg: 1, scope: !8560, file: !8546, line: 211, type: !5)
!8562 = !DILocation(line: 211, column: 24, scope: !8560)
!8563 = !DILocalVariable(name: "b", arg: 2, scope: !8560, file: !8546, line: 211, type: !5)
!8564 = !DILocation(line: 211, column: 31, scope: !8560)
!8565 = !DILocation(line: 213, column: 10, scope: !8560)
!8566 = !DILocation(line: 213, column: 14, scope: !8560)
!8567 = !DILocation(line: 213, column: 12, scope: !8560)
!8568 = !DILocation(line: 213, column: 9, scope: !8560)
!8569 = !DILocation(line: 213, column: 19, scope: !8560)
!8570 = !DILocation(line: 213, column: 23, scope: !8560)
!8571 = !DILocation(line: 213, column: 2, scope: !8560)
!8572 = distinct !DISubprogram(name: "halo_pixelstruct", scope: !1, file: !1, line: 172, type: !8573, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8573 = !DISubroutineType(types: !8574)
!8574 = !{null, !4145, !2114, !5, !5, !57, !57, !57, !81}
!8575 = !DILocalVariable(name: "har", arg: 1, scope: !8572, file: !1, line: 172, type: !4145)
!8576 = !DILocation(line: 172, column: 39, scope: !8572)
!8577 = !DILocalVariable(name: "rlpp", arg: 2, scope: !8572, file: !1, line: 172, type: !2114)
!8578 = !DILocation(line: 172, column: 58, scope: !8572)
!8579 = !DILocalVariable(name: "totsample", arg: 3, scope: !8572, file: !1, line: 172, type: !5)
!8580 = !DILocation(line: 172, column: 68, scope: !8572)
!8581 = !DILocalVariable(name: "od", arg: 4, scope: !8572, file: !1, line: 172, type: !5)
!8582 = !DILocation(line: 172, column: 83, scope: !8572)
!8583 = !DILocalVariable(name: "dist", arg: 5, scope: !8572, file: !1, line: 172, type: !57)
!8584 = !DILocation(line: 172, column: 93, scope: !8572)
!8585 = !DILocalVariable(name: "xn", arg: 6, scope: !8572, file: !1, line: 172, type: !57)
!8586 = !DILocation(line: 172, column: 105, scope: !8572)
!8587 = !DILocalVariable(name: "yn", arg: 7, scope: !8572, file: !1, line: 172, type: !57)
!8588 = !DILocation(line: 172, column: 115, scope: !8572)
!8589 = !DILocalVariable(name: "ps", arg: 8, scope: !8572, file: !1, line: 172, type: !81)
!8590 = !DILocation(line: 172, column: 127, scope: !8572)
!8591 = !DILocalVariable(name: "col", scope: !8572, file: !1, line: 174, type: !299)
!8592 = !DILocation(line: 174, column: 8, scope: !8572)
!8593 = !DILocalVariable(name: "accol", scope: !8572, file: !1, line: 174, type: !299)
!8594 = !DILocation(line: 174, column: 16, scope: !8572)
!8595 = !DILocalVariable(name: "fac", scope: !8572, file: !1, line: 174, type: !57)
!8596 = !DILocation(line: 174, column: 26, scope: !8572)
!8597 = !DILocalVariable(name: "amount", scope: !8572, file: !1, line: 175, type: !5)
!8598 = !DILocation(line: 175, column: 6, scope: !8572)
!8599 = !DILocalVariable(name: "amountm", scope: !8572, file: !1, line: 175, type: !5)
!8600 = !DILocation(line: 175, column: 14, scope: !8572)
!8601 = !DILocalVariable(name: "zz", scope: !8572, file: !1, line: 175, type: !5)
!8602 = !DILocation(line: 175, column: 23, scope: !8572)
!8603 = !DILocalVariable(name: "flarec", scope: !8572, file: !1, line: 175, type: !5)
!8604 = !DILocation(line: 175, column: 27, scope: !8572)
!8605 = !DILocalVariable(name: "sample", scope: !8572, file: !1, line: 175, type: !5)
!8606 = !DILocation(line: 175, column: 35, scope: !8572)
!8607 = !DILocalVariable(name: "fullsample", scope: !8572, file: !1, line: 175, type: !5)
!8608 = !DILocation(line: 175, column: 43, scope: !8572)
!8609 = !DILocalVariable(name: "mask", scope: !8572, file: !1, line: 175, type: !5)
!8610 = !DILocation(line: 175, column: 55, scope: !8572)
!8611 = !DILocation(line: 177, column: 15, scope: !8572)
!8612 = !DILocation(line: 177, column: 25, scope: !8572)
!8613 = !DILocation(line: 177, column: 12, scope: !8572)
!8614 = !DILocation(line: 178, column: 8, scope: !8572)
!8615 = !DILocation(line: 179, column: 35, scope: !8572)
!8616 = !DILocation(line: 179, column: 43, scope: !8572)
!8617 = !DILocation(line: 179, column: 24, scope: !8572)
!8618 = !DILocation(line: 179, column: 33, scope: !8572)
!8619 = !DILocation(line: 179, column: 13, scope: !8572)
!8620 = !DILocation(line: 179, column: 22, scope: !8572)
!8621 = !DILocation(line: 179, column: 2, scope: !8572)
!8622 = !DILocation(line: 179, column: 11, scope: !8572)
!8623 = !DILocation(line: 180, column: 29, scope: !8572)
!8624 = !DILocation(line: 180, column: 35, scope: !8572)
!8625 = !DILocation(line: 180, column: 20, scope: !8572)
!8626 = !DILocation(line: 180, column: 27, scope: !8572)
!8627 = !DILocation(line: 180, column: 11, scope: !8572)
!8628 = !DILocation(line: 180, column: 18, scope: !8572)
!8629 = !DILocation(line: 180, column: 2, scope: !8572)
!8630 = !DILocation(line: 180, column: 9, scope: !8572)
!8631 = !DILocation(line: 181, column: 10, scope: !8572)
!8632 = !DILocation(line: 181, column: 15, scope: !8572)
!8633 = !DILocation(line: 181, column: 8, scope: !8572)
!8634 = !DILocation(line: 183, column: 2, scope: !8572)
!8635 = !DILocation(line: 183, column: 9, scope: !8572)
!8636 = !DILocation(line: 184, column: 23, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8572, file: !1, line: 183, column: 13)
!8638 = !DILocation(line: 184, column: 27, scope: !8637)
!8639 = !DILocation(line: 184, column: 12, scope: !8637)
!8640 = !DILocation(line: 184, column: 10, scope: !8637)
!8641 = !DILocation(line: 185, column: 12, scope: !8637)
!8642 = !DILocation(line: 185, column: 9, scope: !8637)
!8643 = !DILocation(line: 187, column: 18, scope: !8637)
!8644 = !DILocation(line: 187, column: 23, scope: !8637)
!8645 = !DILocation(line: 187, column: 27, scope: !8637)
!8646 = !DILocation(line: 187, column: 7, scope: !8637)
!8647 = !DILocation(line: 187, column: 5, scope: !8637)
!8648 = !DILocation(line: 188, column: 8, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8637, file: !1, line: 188, column: 7)
!8650 = !DILocation(line: 188, column: 12, scope: !8649)
!8651 = !DILocation(line: 188, column: 17, scope: !8649)
!8652 = !DILocation(line: 188, column: 10, scope: !8649)
!8653 = !DILocation(line: 188, column: 21, scope: !8649)
!8654 = !DILocation(line: 188, column: 25, scope: !8649)
!8655 = !DILocation(line: 188, column: 30, scope: !8649)
!8656 = !DILocation(line: 188, column: 34, scope: !8649)
!8657 = !DILocation(line: 188, column: 38, scope: !8649)
!8658 = !DILocation(line: 188, column: 43, scope: !8649)
!8659 = !DILocation(line: 188, column: 48, scope: !8649)
!8660 = !DILocation(line: 188, column: 53, scope: !8649)
!8661 = !DILocation(line: 188, column: 7, scope: !8637)
!8662 = !DILocation(line: 189, column: 23, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8664, file: !1, line: 189, column: 8)
!8664 = distinct !DILexicalBlock(scope: !8649, file: !1, line: 188, column: 71)
!8665 = !DILocation(line: 189, column: 28, scope: !8663)
!8666 = !DILocation(line: 189, column: 33, scope: !8663)
!8667 = !DILocation(line: 189, column: 37, scope: !8663)
!8668 = !DILocation(line: 189, column: 43, scope: !8663)
!8669 = !DILocation(line: 189, column: 47, scope: !8663)
!8670 = !DILocation(line: 189, column: 51, scope: !8663)
!8671 = !DILocation(line: 189, column: 8, scope: !8663)
!8672 = !DILocation(line: 189, column: 8, scope: !8664)
!8673 = !DILocation(line: 190, column: 11, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8663, file: !1, line: 189, column: 60)
!8675 = !DILocation(line: 192, column: 9, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8674, file: !1, line: 192, column: 9)
!8677 = !DILocation(line: 192, column: 9, scope: !8674)
!8678 = !DILocation(line: 193, column: 17, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8680, file: !1, line: 193, column: 6)
!8680 = distinct !DILexicalBlock(scope: !8676, file: !1, line: 192, column: 21)
!8681 = !DILocation(line: 193, column: 11, scope: !8679)
!8682 = !DILocation(line: 193, column: 21, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8679, file: !1, line: 193, column: 6)
!8684 = !DILocation(line: 193, column: 28, scope: !8683)
!8685 = !DILocation(line: 193, column: 27, scope: !8683)
!8686 = !DILocation(line: 193, column: 6, scope: !8679)
!8687 = !DILocation(line: 194, column: 11, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8683, file: !1, line: 194, column: 11)
!8689 = !DILocation(line: 194, column: 15, scope: !8688)
!8690 = !DILocation(line: 194, column: 28, scope: !8688)
!8691 = !DILocation(line: 194, column: 25, scope: !8688)
!8692 = !DILocation(line: 194, column: 20, scope: !8688)
!8693 = !DILocation(line: 194, column: 11, scope: !8683)
!8694 = !DILocation(line: 195, column: 28, scope: !8688)
!8695 = !DILocation(line: 195, column: 33, scope: !8688)
!8696 = !DILocation(line: 195, column: 42, scope: !8688)
!8697 = !DILocation(line: 195, column: 50, scope: !8688)
!8698 = !DILocation(line: 195, column: 52, scope: !8688)
!8699 = !DILocation(line: 195, column: 48, scope: !8688)
!8700 = !DILocation(line: 195, column: 56, scope: !8688)
!8701 = !DILocation(line: 195, column: 61, scope: !8688)
!8702 = !DILocation(line: 195, column: 66, scope: !8688)
!8703 = !DILocation(line: 195, column: 8, scope: !8688)
!8704 = !DILocation(line: 194, column: 34, scope: !8688)
!8705 = !DILocation(line: 193, column: 45, scope: !8683)
!8706 = !DILocation(line: 193, column: 6, scope: !8683)
!8707 = distinct !{!8707, !8686, !8708}
!8708 = !DILocation(line: 195, column: 69, scope: !8679)
!8709 = !DILocation(line: 196, column: 5, scope: !8680)
!8710 = !DILocation(line: 198, column: 19, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8676, file: !1, line: 197, column: 10)
!8712 = !DILocation(line: 198, column: 12, scope: !8711)
!8713 = !DILocation(line: 198, column: 37, scope: !8711)
!8714 = !DILocation(line: 198, column: 28, scope: !8711)
!8715 = !DILocation(line: 198, column: 27, scope: !8711)
!8716 = !DILocation(line: 198, column: 9, scope: !8711)
!8717 = !DILocation(line: 199, column: 17, scope: !8711)
!8718 = !DILocation(line: 199, column: 21, scope: !8711)
!8719 = !DILocation(line: 199, column: 20, scope: !8711)
!8720 = !DILocation(line: 199, column: 6, scope: !8711)
!8721 = !DILocation(line: 199, column: 14, scope: !8711)
!8722 = !DILocation(line: 200, column: 17, scope: !8711)
!8723 = !DILocation(line: 200, column: 21, scope: !8711)
!8724 = !DILocation(line: 200, column: 20, scope: !8711)
!8725 = !DILocation(line: 200, column: 6, scope: !8711)
!8726 = !DILocation(line: 200, column: 14, scope: !8711)
!8727 = !DILocation(line: 201, column: 17, scope: !8711)
!8728 = !DILocation(line: 201, column: 21, scope: !8711)
!8729 = !DILocation(line: 201, column: 20, scope: !8711)
!8730 = !DILocation(line: 201, column: 6, scope: !8711)
!8731 = !DILocation(line: 201, column: 14, scope: !8711)
!8732 = !DILocation(line: 202, column: 17, scope: !8711)
!8733 = !DILocation(line: 202, column: 21, scope: !8711)
!8734 = !DILocation(line: 202, column: 20, scope: !8711)
!8735 = !DILocation(line: 202, column: 6, scope: !8711)
!8736 = !DILocation(line: 202, column: 14, scope: !8711)
!8737 = !DILocation(line: 204, column: 4, scope: !8674)
!8738 = !DILocation(line: 205, column: 3, scope: !8664)
!8739 = !DILocation(line: 207, column: 11, scope: !8637)
!8740 = !DILocation(line: 207, column: 15, scope: !8637)
!8741 = !DILocation(line: 207, column: 8, scope: !8637)
!8742 = !DILocation(line: 208, column: 7, scope: !8637)
!8743 = !DILocation(line: 208, column: 11, scope: !8637)
!8744 = !DILocation(line: 208, column: 5, scope: !8637)
!8745 = distinct !{!8745, !8634, !8746}
!8746 = !DILocation(line: 209, column: 2, scope: !8572)
!8747 = !DILocation(line: 212, column: 12, scope: !8572)
!8748 = !DILocation(line: 212, column: 10, scope: !8572)
!8749 = !DILocation(line: 212, column: 16, scope: !8572)
!8750 = !DILocation(line: 212, column: 15, scope: !8572)
!8751 = !DILocation(line: 212, column: 8, scope: !8572)
!8752 = !DILocation(line: 213, column: 6, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8572, file: !1, line: 213, column: 6)
!8754 = !DILocation(line: 213, column: 6, scope: !8572)
!8755 = !DILocation(line: 214, column: 22, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !1, line: 214, column: 7)
!8757 = distinct !DILexicalBlock(scope: !8753, file: !1, line: 213, column: 14)
!8758 = !DILocation(line: 214, column: 27, scope: !8756)
!8759 = !DILocation(line: 214, column: 42, scope: !8756)
!8760 = !DILocation(line: 214, column: 48, scope: !8756)
!8761 = !DILocation(line: 214, column: 52, scope: !8756)
!8762 = !DILocation(line: 214, column: 56, scope: !8756)
!8763 = !DILocation(line: 214, column: 7, scope: !8756)
!8764 = !DILocation(line: 214, column: 7, scope: !8757)
!8765 = !DILocation(line: 215, column: 9, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !1, line: 215, column: 8)
!8767 = distinct !DILexicalBlock(scope: !8756, file: !1, line: 214, column: 65)
!8768 = !DILocation(line: 215, column: 8, scope: !8767)
!8769 = !DILocation(line: 216, column: 18, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8766, file: !1, line: 215, column: 21)
!8771 = !DILocation(line: 216, column: 11, scope: !8770)
!8772 = !DILocation(line: 216, column: 35, scope: !8770)
!8773 = !DILocation(line: 216, column: 26, scope: !8770)
!8774 = !DILocation(line: 216, column: 25, scope: !8770)
!8775 = !DILocation(line: 216, column: 8, scope: !8770)
!8776 = !DILocation(line: 217, column: 16, scope: !8770)
!8777 = !DILocation(line: 217, column: 20, scope: !8770)
!8778 = !DILocation(line: 217, column: 19, scope: !8770)
!8779 = !DILocation(line: 217, column: 5, scope: !8770)
!8780 = !DILocation(line: 217, column: 13, scope: !8770)
!8781 = !DILocation(line: 218, column: 16, scope: !8770)
!8782 = !DILocation(line: 218, column: 20, scope: !8770)
!8783 = !DILocation(line: 218, column: 19, scope: !8770)
!8784 = !DILocation(line: 218, column: 5, scope: !8770)
!8785 = !DILocation(line: 218, column: 13, scope: !8770)
!8786 = !DILocation(line: 219, column: 16, scope: !8770)
!8787 = !DILocation(line: 219, column: 20, scope: !8770)
!8788 = !DILocation(line: 219, column: 19, scope: !8770)
!8789 = !DILocation(line: 219, column: 5, scope: !8770)
!8790 = !DILocation(line: 219, column: 13, scope: !8770)
!8791 = !DILocation(line: 220, column: 16, scope: !8770)
!8792 = !DILocation(line: 220, column: 20, scope: !8770)
!8793 = !DILocation(line: 220, column: 19, scope: !8770)
!8794 = !DILocation(line: 220, column: 5, scope: !8770)
!8795 = !DILocation(line: 220, column: 13, scope: !8770)
!8796 = !DILocation(line: 221, column: 4, scope: !8770)
!8797 = !DILocation(line: 222, column: 3, scope: !8767)
!8798 = !DILocation(line: 223, column: 2, scope: !8757)
!8799 = !DILocation(line: 225, column: 6, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8572, file: !1, line: 225, column: 6)
!8801 = !DILocation(line: 225, column: 6, scope: !8572)
!8802 = !DILocation(line: 226, column: 14, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !1, line: 226, column: 3)
!8804 = distinct !DILexicalBlock(scope: !8800, file: !1, line: 225, column: 18)
!8805 = !DILocation(line: 226, column: 8, scope: !8803)
!8806 = !DILocation(line: 226, column: 18, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8803, file: !1, line: 226, column: 3)
!8808 = !DILocation(line: 226, column: 25, scope: !8807)
!8809 = !DILocation(line: 226, column: 24, scope: !8807)
!8810 = !DILocation(line: 226, column: 3, scope: !8803)
!8811 = !DILocation(line: 227, column: 10, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8807, file: !1, line: 227, column: 8)
!8813 = !DILocation(line: 227, column: 23, scope: !8812)
!8814 = !DILocation(line: 227, column: 20, scope: !8812)
!8815 = !DILocation(line: 227, column: 15, scope: !8812)
!8816 = !DILocation(line: 227, column: 8, scope: !8807)
!8817 = !DILocation(line: 228, column: 25, scope: !8812)
!8818 = !DILocation(line: 228, column: 30, scope: !8812)
!8819 = !DILocation(line: 228, column: 39, scope: !8812)
!8820 = !DILocation(line: 228, column: 47, scope: !8812)
!8821 = !DILocation(line: 228, column: 49, scope: !8812)
!8822 = !DILocation(line: 228, column: 45, scope: !8812)
!8823 = !DILocation(line: 228, column: 53, scope: !8812)
!8824 = !DILocation(line: 228, column: 58, scope: !8812)
!8825 = !DILocation(line: 228, column: 63, scope: !8812)
!8826 = !DILocation(line: 228, column: 5, scope: !8812)
!8827 = !DILocation(line: 227, column: 30, scope: !8812)
!8828 = !DILocation(line: 226, column: 42, scope: !8807)
!8829 = !DILocation(line: 226, column: 3, scope: !8807)
!8830 = distinct !{!8830, !8810, !8831}
!8831 = !DILocation(line: 228, column: 66, scope: !8803)
!8832 = !DILocation(line: 229, column: 2, scope: !8804)
!8833 = !DILocation(line: 231, column: 11, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8800, file: !1, line: 230, column: 7)
!8835 = !DILocation(line: 231, column: 3, scope: !8834)
!8836 = !DILocation(line: 231, column: 9, scope: !8834)
!8837 = !DILocation(line: 232, column: 11, scope: !8834)
!8838 = !DILocation(line: 232, column: 3, scope: !8834)
!8839 = !DILocation(line: 232, column: 9, scope: !8834)
!8840 = !DILocation(line: 233, column: 11, scope: !8834)
!8841 = !DILocation(line: 233, column: 3, scope: !8834)
!8842 = !DILocation(line: 233, column: 9, scope: !8834)
!8843 = !DILocation(line: 234, column: 11, scope: !8834)
!8844 = !DILocation(line: 234, column: 3, scope: !8834)
!8845 = !DILocation(line: 234, column: 9, scope: !8834)
!8846 = !DILocation(line: 236, column: 14, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8834, file: !1, line: 236, column: 3)
!8848 = !DILocation(line: 236, column: 8, scope: !8847)
!8849 = !DILocation(line: 236, column: 18, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8847, file: !1, line: 236, column: 3)
!8851 = !DILocation(line: 236, column: 25, scope: !8850)
!8852 = !DILocation(line: 236, column: 24, scope: !8850)
!8853 = !DILocation(line: 236, column: 3, scope: !8847)
!8854 = !DILocation(line: 237, column: 24, scope: !8850)
!8855 = !DILocation(line: 237, column: 29, scope: !8850)
!8856 = !DILocation(line: 237, column: 38, scope: !8850)
!8857 = !DILocation(line: 237, column: 46, scope: !8850)
!8858 = !DILocation(line: 237, column: 48, scope: !8850)
!8859 = !DILocation(line: 237, column: 44, scope: !8850)
!8860 = !DILocation(line: 237, column: 52, scope: !8850)
!8861 = !DILocation(line: 237, column: 57, scope: !8850)
!8862 = !DILocation(line: 237, column: 62, scope: !8850)
!8863 = !DILocation(line: 237, column: 4, scope: !8850)
!8864 = !DILocation(line: 236, column: 42, scope: !8850)
!8865 = !DILocation(line: 236, column: 3, scope: !8850)
!8866 = distinct !{!8866, !8853, !8867}
!8867 = !DILocation(line: 237, column: 65, scope: !8847)
!8868 = !DILocation(line: 239, column: 1, scope: !8572)
!8869 = distinct !DISubprogram(name: "calchalo_z", scope: !1, file: !1, line: 158, type: !8870, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8870 = !DISubroutineType(types: !8871)
!8871 = !{!5, !4145, !5}
!8872 = !DILocalVariable(name: "har", arg: 1, scope: !8869, file: !1, line: 158, type: !4145)
!8873 = !DILocation(line: 158, column: 32, scope: !8869)
!8874 = !DILocalVariable(name: "zz", arg: 2, scope: !8869, file: !1, line: 158, type: !5)
!8875 = !DILocation(line: 158, column: 41, scope: !8869)
!8876 = !DILocation(line: 161, column: 6, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8869, file: !1, line: 161, column: 6)
!8878 = !DILocation(line: 161, column: 11, scope: !8877)
!8879 = !DILocation(line: 161, column: 16, scope: !8877)
!8880 = !DILocation(line: 161, column: 6, scope: !8869)
!8881 = !DILocation(line: 162, column: 7, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !1, line: 162, column: 7)
!8883 = distinct !DILexicalBlock(scope: !8877, file: !1, line: 161, column: 30)
!8884 = !DILocation(line: 162, column: 10, scope: !8882)
!8885 = !DILocation(line: 162, column: 7, scope: !8883)
!8886 = !DILocation(line: 162, column: 26, scope: !8882)
!8887 = !DILocation(line: 162, column: 24, scope: !8882)
!8888 = !DILocation(line: 163, column: 2, scope: !8883)
!8889 = !DILocation(line: 165, column: 8, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8877, file: !1, line: 164, column: 7)
!8891 = !DILocation(line: 165, column: 10, scope: !8890)
!8892 = !DILocation(line: 165, column: 5, scope: !8890)
!8893 = !DILocation(line: 167, column: 9, scope: !8869)
!8894 = !DILocation(line: 167, column: 2, scope: !8869)
!8895 = distinct !DISubprogram(name: "copy_v3_v3", scope: !7736, file: !7736, line: 64, type: !7737, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8896 = !DILocalVariable(name: "r", arg: 1, scope: !8895, file: !7736, line: 64, type: !692)
!8897 = !DILocation(line: 64, column: 31, scope: !8895)
!8898 = !DILocalVariable(name: "a", arg: 2, scope: !8895, file: !7736, line: 64, type: !2017)
!8899 = !DILocation(line: 64, column: 49, scope: !8895)
!8900 = !DILocation(line: 66, column: 9, scope: !8895)
!8901 = !DILocation(line: 66, column: 2, scope: !8895)
!8902 = !DILocation(line: 66, column: 7, scope: !8895)
!8903 = !DILocation(line: 67, column: 9, scope: !8895)
!8904 = !DILocation(line: 67, column: 2, scope: !8895)
!8905 = !DILocation(line: 67, column: 7, scope: !8895)
!8906 = !DILocation(line: 68, column: 9, scope: !8895)
!8907 = !DILocation(line: 68, column: 2, scope: !8895)
!8908 = !DILocation(line: 68, column: 7, scope: !8895)
!8909 = !DILocation(line: 69, column: 1, scope: !8895)
!8910 = distinct !DISubprogram(name: "mul_v3_fl", scope: !7736, file: !7736, line: 392, type: !8911, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8911 = !DISubroutineType(types: !8912)
!8912 = !{null, !692, !57}
!8913 = !DILocalVariable(name: "r", arg: 1, scope: !8910, file: !7736, line: 392, type: !692)
!8914 = !DILocation(line: 392, column: 30, scope: !8910)
!8915 = !DILocalVariable(name: "f", arg: 2, scope: !8910, file: !7736, line: 392, type: !57)
!8916 = !DILocation(line: 392, column: 42, scope: !8910)
!8917 = !DILocation(line: 394, column: 10, scope: !8910)
!8918 = !DILocation(line: 394, column: 2, scope: !8910)
!8919 = !DILocation(line: 394, column: 7, scope: !8910)
!8920 = !DILocation(line: 395, column: 10, scope: !8910)
!8921 = !DILocation(line: 395, column: 2, scope: !8910)
!8922 = !DILocation(line: 395, column: 7, scope: !8910)
!8923 = !DILocation(line: 396, column: 10, scope: !8910)
!8924 = !DILocation(line: 396, column: 2, scope: !8910)
!8925 = !DILocation(line: 396, column: 7, scope: !8910)
!8926 = !DILocation(line: 397, column: 1, scope: !8910)
!8927 = distinct !DISubprogram(name: "copy_v4_v4", scope: !7736, file: !7736, line: 71, type: !7737, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8928 = !DILocalVariable(name: "r", arg: 1, scope: !8927, file: !7736, line: 71, type: !692)
!8929 = !DILocation(line: 71, column: 31, scope: !8927)
!8930 = !DILocalVariable(name: "a", arg: 2, scope: !8927, file: !7736, line: 71, type: !2017)
!8931 = !DILocation(line: 71, column: 49, scope: !8927)
!8932 = !DILocation(line: 73, column: 9, scope: !8927)
!8933 = !DILocation(line: 73, column: 2, scope: !8927)
!8934 = !DILocation(line: 73, column: 7, scope: !8927)
!8935 = !DILocation(line: 74, column: 9, scope: !8927)
!8936 = !DILocation(line: 74, column: 2, scope: !8927)
!8937 = !DILocation(line: 74, column: 7, scope: !8927)
!8938 = !DILocation(line: 75, column: 9, scope: !8927)
!8939 = !DILocation(line: 75, column: 2, scope: !8927)
!8940 = !DILocation(line: 75, column: 7, scope: !8927)
!8941 = !DILocation(line: 76, column: 9, scope: !8927)
!8942 = !DILocation(line: 76, column: 2, scope: !8927)
!8943 = !DILocation(line: 76, column: 7, scope: !8927)
!8944 = !DILocation(line: 77, column: 1, scope: !8927)
!8945 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !8946, file: !8946, line: 89, type: !8947, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8946 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8947 = !DISubroutineType(types: !8948)
!8948 = !{null, !2719}
!8949 = !DILocalVariable(name: "lb", arg: 1, scope: !8945, file: !8946, line: 89, type: !2719)
!8950 = !DILocation(line: 89, column: 53, scope: !8945)
!8951 = !DILocation(line: 89, column: 71, scope: !8945)
!8952 = !DILocation(line: 89, column: 75, scope: !8945)
!8953 = !DILocation(line: 89, column: 80, scope: !8945)
!8954 = !DILocation(line: 89, column: 59, scope: !8945)
!8955 = !DILocation(line: 89, column: 63, scope: !8945)
!8956 = !DILocation(line: 89, column: 69, scope: !8945)
!8957 = !DILocation(line: 89, column: 93, scope: !8945)
!8958 = distinct !DISubprogram(name: "normalize_v3", scope: !7736, file: !7736, line: 830, type: !8959, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8959 = !DISubroutineType(types: !8960)
!8960 = !{!57, !692}
!8961 = !DILocalVariable(name: "n", arg: 1, scope: !8958, file: !7736, line: 830, type: !692)
!8962 = !DILocation(line: 830, column: 34, scope: !8958)
!8963 = !DILocation(line: 832, column: 25, scope: !8958)
!8964 = !DILocation(line: 832, column: 28, scope: !8958)
!8965 = !DILocation(line: 832, column: 9, scope: !8958)
!8966 = !DILocation(line: 832, column: 2, scope: !8958)
!8967 = distinct !DISubprogram(name: "len_v3", scope: !7736, file: !7736, line: 714, type: !8968, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8968 = !DISubroutineType(types: !8969)
!8969 = !{!57, !2017}
!8970 = !DILocalVariable(name: "a", arg: 1, scope: !8967, file: !7736, line: 714, type: !2017)
!8971 = !DILocation(line: 714, column: 34, scope: !8967)
!8972 = !DILocation(line: 716, column: 24, scope: !8967)
!8973 = !DILocation(line: 716, column: 27, scope: !8967)
!8974 = !DILocation(line: 716, column: 15, scope: !8967)
!8975 = !DILocation(line: 716, column: 9, scope: !8967)
!8976 = !DILocation(line: 716, column: 2, scope: !8967)
!8977 = distinct !DISubprogram(name: "min_ff", scope: !8546, file: !8546, line: 202, type: !8978, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!57, !57, !57}
!8980 = !DILocalVariable(name: "a", arg: 1, scope: !8977, file: !8546, line: 202, type: !57)
!8981 = !DILocation(line: 202, column: 28, scope: !8977)
!8982 = !DILocalVariable(name: "b", arg: 2, scope: !8977, file: !8546, line: 202, type: !57)
!8983 = !DILocation(line: 202, column: 37, scope: !8977)
!8984 = !DILocation(line: 204, column: 10, scope: !8977)
!8985 = !DILocation(line: 204, column: 14, scope: !8977)
!8986 = !DILocation(line: 204, column: 12, scope: !8977)
!8987 = !DILocation(line: 204, column: 9, scope: !8977)
!8988 = !DILocation(line: 204, column: 19, scope: !8977)
!8989 = !DILocation(line: 204, column: 23, scope: !8977)
!8990 = !DILocation(line: 204, column: 2, scope: !8977)
!8991 = distinct !DISubprogram(name: "negate_v3", scope: !7736, file: !7736, line: 576, type: !8992, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!8992 = !DISubroutineType(types: !8993)
!8993 = !{null, !692}
!8994 = !DILocalVariable(name: "r", arg: 1, scope: !8991, file: !7736, line: 576, type: !692)
!8995 = !DILocation(line: 576, column: 30, scope: !8991)
!8996 = !DILocation(line: 578, column: 10, scope: !8991)
!8997 = !DILocation(line: 578, column: 9, scope: !8991)
!8998 = !DILocation(line: 578, column: 2, scope: !8991)
!8999 = !DILocation(line: 578, column: 7, scope: !8991)
!9000 = !DILocation(line: 579, column: 10, scope: !8991)
!9001 = !DILocation(line: 579, column: 9, scope: !8991)
!9002 = !DILocation(line: 579, column: 2, scope: !8991)
!9003 = !DILocation(line: 579, column: 7, scope: !8991)
!9004 = !DILocation(line: 580, column: 10, scope: !8991)
!9005 = !DILocation(line: 580, column: 9, scope: !8991)
!9006 = !DILocation(line: 580, column: 2, scope: !8991)
!9007 = !DILocation(line: 580, column: 7, scope: !8991)
!9008 = !DILocation(line: 581, column: 1, scope: !8991)
!9009 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !7736, file: !7736, line: 788, type: !9010, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!9010 = !DISubroutineType(types: !9011)
!9011 = !{!57, !692, !2017}
!9012 = !DILocalVariable(name: "r", arg: 1, scope: !9009, file: !7736, line: 788, type: !692)
!9013 = !DILocation(line: 788, column: 37, scope: !9009)
!9014 = !DILocalVariable(name: "a", arg: 2, scope: !9009, file: !7736, line: 788, type: !2017)
!9015 = !DILocation(line: 788, column: 55, scope: !9009)
!9016 = !DILocalVariable(name: "d", scope: !9009, file: !7736, line: 790, type: !57)
!9017 = !DILocation(line: 790, column: 8, scope: !9009)
!9018 = !DILocation(line: 790, column: 21, scope: !9009)
!9019 = !DILocation(line: 790, column: 24, scope: !9009)
!9020 = !DILocation(line: 790, column: 12, scope: !9009)
!9021 = !DILocation(line: 794, column: 6, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9009, file: !7736, line: 794, column: 6)
!9023 = !DILocation(line: 794, column: 8, scope: !9022)
!9024 = !DILocation(line: 794, column: 6, scope: !9009)
!9025 = !DILocation(line: 795, column: 13, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9022, file: !7736, line: 794, column: 20)
!9027 = !DILocation(line: 795, column: 7, scope: !9026)
!9028 = !DILocation(line: 795, column: 5, scope: !9026)
!9029 = !DILocation(line: 796, column: 15, scope: !9026)
!9030 = !DILocation(line: 796, column: 18, scope: !9026)
!9031 = !DILocation(line: 796, column: 28, scope: !9026)
!9032 = !DILocation(line: 796, column: 26, scope: !9026)
!9033 = !DILocation(line: 796, column: 3, scope: !9026)
!9034 = !DILocation(line: 797, column: 2, scope: !9026)
!9035 = !DILocation(line: 799, column: 11, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9022, file: !7736, line: 798, column: 7)
!9037 = !DILocation(line: 799, column: 3, scope: !9036)
!9038 = !DILocation(line: 800, column: 5, scope: !9036)
!9039 = !DILocation(line: 803, column: 9, scope: !9009)
!9040 = !DILocation(line: 803, column: 2, scope: !9009)
!9041 = distinct !DISubprogram(name: "dot_v3v3", scope: !7736, file: !7736, line: 619, type: !9042, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!9042 = !DISubroutineType(types: !9043)
!9043 = !{!57, !2017, !2017}
!9044 = !DILocalVariable(name: "a", arg: 1, scope: !9041, file: !7736, line: 619, type: !2017)
!9045 = !DILocation(line: 619, column: 36, scope: !9041)
!9046 = !DILocalVariable(name: "b", arg: 2, scope: !9041, file: !7736, line: 619, type: !2017)
!9047 = !DILocation(line: 619, column: 54, scope: !9041)
!9048 = !DILocation(line: 621, column: 9, scope: !9041)
!9049 = !DILocation(line: 621, column: 16, scope: !9041)
!9050 = !DILocation(line: 621, column: 14, scope: !9041)
!9051 = !DILocation(line: 621, column: 23, scope: !9041)
!9052 = !DILocation(line: 621, column: 30, scope: !9041)
!9053 = !DILocation(line: 621, column: 28, scope: !9041)
!9054 = !DILocation(line: 621, column: 21, scope: !9041)
!9055 = !DILocation(line: 621, column: 37, scope: !9041)
!9056 = !DILocation(line: 621, column: 44, scope: !9041)
!9057 = !DILocation(line: 621, column: 42, scope: !9041)
!9058 = !DILocation(line: 621, column: 35, scope: !9041)
!9059 = !DILocation(line: 621, column: 2, scope: !9041)
!9060 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !7736, file: !7736, line: 399, type: !9061, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{null, !692, !2017, !57}
!9063 = !DILocalVariable(name: "r", arg: 1, scope: !9060, file: !7736, line: 399, type: !692)
!9064 = !DILocation(line: 399, column: 32, scope: !9060)
!9065 = !DILocalVariable(name: "a", arg: 2, scope: !9060, file: !7736, line: 399, type: !2017)
!9066 = !DILocation(line: 399, column: 50, scope: !9060)
!9067 = !DILocalVariable(name: "f", arg: 3, scope: !9060, file: !7736, line: 399, type: !57)
!9068 = !DILocation(line: 399, column: 62, scope: !9060)
!9069 = !DILocation(line: 401, column: 9, scope: !9060)
!9070 = !DILocation(line: 401, column: 16, scope: !9060)
!9071 = !DILocation(line: 401, column: 14, scope: !9060)
!9072 = !DILocation(line: 401, column: 2, scope: !9060)
!9073 = !DILocation(line: 401, column: 7, scope: !9060)
!9074 = !DILocation(line: 402, column: 9, scope: !9060)
!9075 = !DILocation(line: 402, column: 16, scope: !9060)
!9076 = !DILocation(line: 402, column: 14, scope: !9060)
!9077 = !DILocation(line: 402, column: 2, scope: !9060)
!9078 = !DILocation(line: 402, column: 7, scope: !9060)
!9079 = !DILocation(line: 403, column: 9, scope: !9060)
!9080 = !DILocation(line: 403, column: 16, scope: !9060)
!9081 = !DILocation(line: 403, column: 14, scope: !9060)
!9082 = !DILocation(line: 403, column: 2, scope: !9060)
!9083 = !DILocation(line: 403, column: 7, scope: !9060)
!9084 = !DILocation(line: 404, column: 1, scope: !9060)
!9085 = distinct !DISubprogram(name: "zero_v3", scope: !7736, file: !7736, line: 43, type: !8992, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!9086 = !DILocalVariable(name: "r", arg: 1, scope: !9085, file: !7736, line: 43, type: !692)
!9087 = !DILocation(line: 43, column: 28, scope: !9085)
!9088 = !DILocation(line: 45, column: 2, scope: !9085)
!9089 = !DILocation(line: 45, column: 7, scope: !9085)
!9090 = !DILocation(line: 46, column: 2, scope: !9085)
!9091 = !DILocation(line: 46, column: 7, scope: !9085)
!9092 = !DILocation(line: 47, column: 2, scope: !9085)
!9093 = !DILocation(line: 47, column: 7, scope: !9085)
!9094 = !DILocation(line: 48, column: 1, scope: !9085)
!9095 = distinct !DISubprogram(name: "renderhalo_post", scope: !1, file: !1, line: 1800, type: !7860, scopeLine: 1801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1836)
!9096 = !DILocalVariable(name: "rr", arg: 1, scope: !9095, file: !1, line: 1800, type: !2092)
!9097 = !DILocation(line: 1800, column: 43, scope: !9095)
!9098 = !DILocalVariable(name: "rectf", arg: 2, scope: !9095, file: !1, line: 1800, type: !692)
!9099 = !DILocation(line: 1800, column: 54, scope: !9095)
!9100 = !DILocalVariable(name: "har", arg: 3, scope: !9095, file: !1, line: 1800, type: !4145)
!9101 = !DILocation(line: 1800, column: 70, scope: !9095)
!9102 = !DILocalVariable(name: "dist", scope: !9095, file: !1, line: 1802, type: !57)
!9103 = !DILocation(line: 1802, column: 8, scope: !9095)
!9104 = !DILocalVariable(name: "xsq", scope: !9095, file: !1, line: 1802, type: !57)
!9105 = !DILocation(line: 1802, column: 14, scope: !9095)
!9106 = !DILocalVariable(name: "ysq", scope: !9095, file: !1, line: 1802, type: !57)
!9107 = !DILocation(line: 1802, column: 19, scope: !9095)
!9108 = !DILocalVariable(name: "xn", scope: !9095, file: !1, line: 1802, type: !57)
!9109 = !DILocation(line: 1802, column: 24, scope: !9095)
!9110 = !DILocalVariable(name: "yn", scope: !9095, file: !1, line: 1802, type: !57)
!9111 = !DILocation(line: 1802, column: 28, scope: !9095)
!9112 = !DILocalVariable(name: "colf", scope: !9095, file: !1, line: 1802, type: !299)
!9113 = !DILocation(line: 1802, column: 32, scope: !9095)
!9114 = !DILocalVariable(name: "rectft", scope: !9095, file: !1, line: 1802, type: !692)
!9115 = !DILocation(line: 1802, column: 42, scope: !9095)
!9116 = !DILocalVariable(name: "rtf", scope: !9095, file: !1, line: 1802, type: !692)
!9117 = !DILocation(line: 1802, column: 51, scope: !9095)
!9118 = !DILocalVariable(name: "haloxs", scope: !9095, file: !1, line: 1803, type: !57)
!9119 = !DILocation(line: 1803, column: 8, scope: !9095)
!9120 = !DILocalVariable(name: "haloys", scope: !9095, file: !1, line: 1803, type: !57)
!9121 = !DILocation(line: 1803, column: 16, scope: !9095)
!9122 = !DILocalVariable(name: "minx", scope: !9095, file: !1, line: 1804, type: !5)
!9123 = !DILocation(line: 1804, column: 6, scope: !9095)
!9124 = !DILocalVariable(name: "maxx", scope: !9095, file: !1, line: 1804, type: !5)
!9125 = !DILocation(line: 1804, column: 12, scope: !9095)
!9126 = !DILocalVariable(name: "miny", scope: !9095, file: !1, line: 1804, type: !5)
!9127 = !DILocation(line: 1804, column: 18, scope: !9095)
!9128 = !DILocalVariable(name: "maxy", scope: !9095, file: !1, line: 1804, type: !5)
!9129 = !DILocation(line: 1804, column: 24, scope: !9095)
!9130 = !DILocalVariable(name: "x", scope: !9095, file: !1, line: 1804, type: !5)
!9131 = !DILocation(line: 1804, column: 30, scope: !9095)
!9132 = !DILocalVariable(name: "y", scope: !9095, file: !1, line: 1804, type: !5)
!9133 = !DILocation(line: 1804, column: 33, scope: !9095)
!9134 = !DILocation(line: 1807, column: 10, scope: !9095)
!9135 = !DILocation(line: 1807, column: 15, scope: !9095)
!9136 = !DILocation(line: 1807, column: 31, scope: !9095)
!9137 = !DILocation(line: 1807, column: 20, scope: !9095)
!9138 = !DILocation(line: 1807, column: 18, scope: !9095)
!9139 = !DILocation(line: 1807, column: 8, scope: !9095)
!9140 = !DILocation(line: 1808, column: 10, scope: !9095)
!9141 = !DILocation(line: 1808, column: 15, scope: !9095)
!9142 = !DILocation(line: 1808, column: 31, scope: !9095)
!9143 = !DILocation(line: 1808, column: 20, scope: !9095)
!9144 = !DILocation(line: 1808, column: 18, scope: !9095)
!9145 = !DILocation(line: 1808, column: 8, scope: !9095)
!9146 = !DILocation(line: 1810, column: 19, scope: !9095)
!9147 = !DILocation(line: 1810, column: 28, scope: !9095)
!9148 = !DILocation(line: 1810, column: 33, scope: !9095)
!9149 = !DILocation(line: 1810, column: 39, scope: !9095)
!9150 = !DILocation(line: 1810, column: 36, scope: !9095)
!9151 = !DILocation(line: 1810, column: 26, scope: !9095)
!9152 = !DILocation(line: 1810, column: 17, scope: !9095)
!9153 = !DILocation(line: 1810, column: 13, scope: !9095)
!9154 = !DILocation(line: 1810, column: 2, scope: !9095)
!9155 = !DILocation(line: 1810, column: 7, scope: !9095)
!9156 = !DILocation(line: 1810, column: 11, scope: !9095)
!9157 = !DILocation(line: 1811, column: 19, scope: !9095)
!9158 = !DILocation(line: 1811, column: 28, scope: !9095)
!9159 = !DILocation(line: 1811, column: 33, scope: !9095)
!9160 = !DILocation(line: 1811, column: 39, scope: !9095)
!9161 = !DILocation(line: 1811, column: 36, scope: !9095)
!9162 = !DILocation(line: 1811, column: 26, scope: !9095)
!9163 = !DILocation(line: 1811, column: 17, scope: !9095)
!9164 = !DILocation(line: 1811, column: 13, scope: !9095)
!9165 = !DILocation(line: 1811, column: 2, scope: !9095)
!9166 = !DILocation(line: 1811, column: 7, scope: !9095)
!9167 = !DILocation(line: 1811, column: 11, scope: !9095)
!9168 = !DILocation(line: 1813, column: 6, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9095, file: !1, line: 1813, column: 6)
!9170 = !DILocation(line: 1813, column: 11, scope: !9169)
!9171 = !DILocation(line: 1813, column: 6, scope: !9095)
!9172 = !DILocation(line: 1815, column: 2, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !1, line: 1813, column: 16)
!9174 = !DILocation(line: 1816, column: 11, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9169, file: !1, line: 1816, column: 11)
!9176 = !DILocation(line: 1816, column: 15, scope: !9175)
!9177 = !DILocation(line: 1816, column: 23, scope: !9175)
!9178 = !DILocation(line: 1816, column: 21, scope: !9175)
!9179 = !DILocation(line: 1816, column: 11, scope: !9169)
!9180 = !DILocation(line: 1818, column: 2, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9175, file: !1, line: 1816, column: 29)
!9182 = !DILocation(line: 1820, column: 16, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9175, file: !1, line: 1819, column: 7)
!9184 = !DILocation(line: 1820, column: 25, scope: !9183)
!9185 = !DILocation(line: 1820, column: 30, scope: !9183)
!9186 = !DILocation(line: 1820, column: 23, scope: !9183)
!9187 = !DILocation(line: 1820, column: 10, scope: !9183)
!9188 = !DILocation(line: 1820, column: 8, scope: !9183)
!9189 = !DILocation(line: 1821, column: 15, scope: !9183)
!9190 = !DILocation(line: 1821, column: 24, scope: !9183)
!9191 = !DILocation(line: 1821, column: 29, scope: !9183)
!9192 = !DILocation(line: 1821, column: 22, scope: !9183)
!9193 = !DILocation(line: 1821, column: 10, scope: !9183)
!9194 = !DILocation(line: 1821, column: 8, scope: !9183)
!9195 = !DILocation(line: 1823, column: 7, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9183, file: !1, line: 1823, column: 7)
!9197 = !DILocation(line: 1823, column: 12, scope: !9196)
!9198 = !DILocation(line: 1823, column: 7, scope: !9183)
!9199 = !DILocation(line: 1825, column: 3, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9196, file: !1, line: 1823, column: 17)
!9201 = !DILocation(line: 1826, column: 12, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9196, file: !1, line: 1826, column: 12)
!9203 = !DILocation(line: 1826, column: 16, scope: !9202)
!9204 = !DILocation(line: 1826, column: 24, scope: !9202)
!9205 = !DILocation(line: 1826, column: 22, scope: !9202)
!9206 = !DILocation(line: 1826, column: 12, scope: !9196)
!9207 = !DILocation(line: 1828, column: 3, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9202, file: !1, line: 1826, column: 30)
!9209 = !DILocation(line: 1830, column: 8, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !1, line: 1830, column: 8)
!9211 = distinct !DILexicalBlock(scope: !9202, file: !1, line: 1829, column: 8)
!9212 = !DILocation(line: 1830, column: 12, scope: !9210)
!9213 = !DILocation(line: 1830, column: 8, scope: !9211)
!9214 = !DILocation(line: 1830, column: 20, scope: !9210)
!9215 = !DILocation(line: 1830, column: 16, scope: !9210)
!9216 = !DILocation(line: 1831, column: 8, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9211, file: !1, line: 1831, column: 8)
!9218 = !DILocation(line: 1831, column: 14, scope: !9217)
!9219 = !DILocation(line: 1831, column: 18, scope: !9217)
!9220 = !DILocation(line: 1831, column: 12, scope: !9217)
!9221 = !DILocation(line: 1831, column: 8, scope: !9211)
!9222 = !DILocation(line: 1831, column: 31, scope: !9217)
!9223 = !DILocation(line: 1831, column: 35, scope: !9217)
!9224 = !DILocation(line: 1831, column: 40, scope: !9217)
!9225 = !DILocation(line: 1831, column: 29, scope: !9217)
!9226 = !DILocation(line: 1831, column: 25, scope: !9217)
!9227 = !DILocation(line: 1832, column: 8, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9211, file: !1, line: 1832, column: 8)
!9229 = !DILocation(line: 1832, column: 12, scope: !9228)
!9230 = !DILocation(line: 1832, column: 8, scope: !9211)
!9231 = !DILocation(line: 1832, column: 20, scope: !9228)
!9232 = !DILocation(line: 1832, column: 16, scope: !9228)
!9233 = !DILocation(line: 1833, column: 8, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9211, file: !1, line: 1833, column: 8)
!9235 = !DILocation(line: 1833, column: 13, scope: !9234)
!9236 = !DILocation(line: 1833, column: 17, scope: !9234)
!9237 = !DILocation(line: 1833, column: 12, scope: !9234)
!9238 = !DILocation(line: 1833, column: 8, scope: !9211)
!9239 = !DILocation(line: 1833, column: 30, scope: !9234)
!9240 = !DILocation(line: 1833, column: 34, scope: !9234)
!9241 = !DILocation(line: 1833, column: 28, scope: !9234)
!9242 = !DILocation(line: 1833, column: 24, scope: !9234)
!9243 = !DILocation(line: 1835, column: 12, scope: !9211)
!9244 = !DILocation(line: 1835, column: 21, scope: !9211)
!9245 = !DILocation(line: 1835, column: 25, scope: !9211)
!9246 = !DILocation(line: 1835, column: 20, scope: !9211)
!9247 = !DILocation(line: 1835, column: 31, scope: !9211)
!9248 = !DILocation(line: 1835, column: 30, scope: !9211)
!9249 = !DILocation(line: 1835, column: 17, scope: !9211)
!9250 = !DILocation(line: 1835, column: 10, scope: !9211)
!9251 = !DILocation(line: 1837, column: 11, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9211, file: !1, line: 1837, column: 4)
!9253 = !DILocation(line: 1837, column: 10, scope: !9252)
!9254 = !DILocation(line: 1837, column: 9, scope: !9252)
!9255 = !DILocation(line: 1837, column: 17, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9252, file: !1, line: 1837, column: 4)
!9257 = !DILocation(line: 1837, column: 19, scope: !9256)
!9258 = !DILocation(line: 1837, column: 18, scope: !9256)
!9259 = !DILocation(line: 1837, column: 4, scope: !9252)
!9260 = !DILocation(line: 1839, column: 10, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9256, file: !1, line: 1837, column: 30)
!9262 = !DILocation(line: 1839, column: 19, scope: !9261)
!9263 = !DILocation(line: 1839, column: 18, scope: !9261)
!9264 = !DILocation(line: 1839, column: 16, scope: !9261)
!9265 = !DILocation(line: 1839, column: 8, scope: !9261)
!9266 = !DILocation(line: 1841, column: 10, scope: !9261)
!9267 = !DILocation(line: 1841, column: 14, scope: !9261)
!9268 = !DILocation(line: 1841, column: 12, scope: !9261)
!9269 = !DILocation(line: 1841, column: 24, scope: !9261)
!9270 = !DILocation(line: 1841, column: 21, scope: !9261)
!9271 = !DILocation(line: 1841, column: 7, scope: !9261)
!9272 = !DILocation(line: 1842, column: 10, scope: !9261)
!9273 = !DILocation(line: 1842, column: 13, scope: !9261)
!9274 = !DILocation(line: 1842, column: 12, scope: !9261)
!9275 = !DILocation(line: 1842, column: 8, scope: !9261)
!9276 = !DILocation(line: 1844, column: 12, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9261, file: !1, line: 1844, column: 5)
!9278 = !DILocation(line: 1844, column: 11, scope: !9277)
!9279 = !DILocation(line: 1844, column: 10, scope: !9277)
!9280 = !DILocation(line: 1844, column: 18, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9277, file: !1, line: 1844, column: 5)
!9282 = !DILocation(line: 1844, column: 21, scope: !9281)
!9283 = !DILocation(line: 1844, column: 19, scope: !9281)
!9284 = !DILocation(line: 1844, column: 5, scope: !9277)
!9285 = !DILocation(line: 1845, column: 10, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9281, file: !1, line: 1844, column: 32)
!9287 = !DILocation(line: 1845, column: 14, scope: !9286)
!9288 = !DILocation(line: 1845, column: 12, scope: !9286)
!9289 = !DILocation(line: 1845, column: 8, scope: !9286)
!9290 = !DILocation(line: 1846, column: 11, scope: !9286)
!9291 = !DILocation(line: 1846, column: 14, scope: !9286)
!9292 = !DILocation(line: 1846, column: 13, scope: !9286)
!9293 = !DILocation(line: 1846, column: 9, scope: !9286)
!9294 = !DILocation(line: 1847, column: 12, scope: !9286)
!9295 = !DILocation(line: 1847, column: 16, scope: !9286)
!9296 = !DILocation(line: 1847, column: 15, scope: !9286)
!9297 = !DILocation(line: 1847, column: 10, scope: !9286)
!9298 = !DILocation(line: 1848, column: 10, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9286, file: !1, line: 1848, column: 10)
!9300 = !DILocation(line: 1848, column: 15, scope: !9299)
!9301 = !DILocation(line: 1848, column: 20, scope: !9299)
!9302 = !DILocation(line: 1848, column: 14, scope: !9299)
!9303 = !DILocation(line: 1848, column: 10, scope: !9286)
!9304 = !DILocation(line: 1850, column: 26, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9306, file: !1, line: 1850, column: 11)
!9306 = distinct !DILexicalBlock(scope: !9299, file: !1, line: 1848, column: 27)
!9307 = !DILocation(line: 1850, column: 31, scope: !9305)
!9308 = !DILocation(line: 1850, column: 47, scope: !9305)
!9309 = !DILocation(line: 1850, column: 53, scope: !9305)
!9310 = !DILocation(line: 1850, column: 57, scope: !9305)
!9311 = !DILocation(line: 1850, column: 61, scope: !9305)
!9312 = !DILocation(line: 1850, column: 66, scope: !9305)
!9313 = !DILocation(line: 1850, column: 11, scope: !9305)
!9314 = !DILocation(line: 1850, column: 11, scope: !9306)
!9315 = !DILocation(line: 1851, column: 28, scope: !9305)
!9316 = !DILocation(line: 1851, column: 33, scope: !9305)
!9317 = !DILocation(line: 1851, column: 39, scope: !9305)
!9318 = !DILocation(line: 1851, column: 44, scope: !9305)
!9319 = !DILocation(line: 1851, column: 8, scope: !9305)
!9320 = !DILocation(line: 1852, column: 6, scope: !9306)
!9321 = !DILocation(line: 1853, column: 9, scope: !9286)
!9322 = !DILocation(line: 1854, column: 5, scope: !9286)
!9323 = !DILocation(line: 1844, column: 28, scope: !9281)
!9324 = !DILocation(line: 1844, column: 5, scope: !9281)
!9325 = distinct !{!9325, !9284, !9326}
!9326 = !DILocation(line: 1854, column: 5, scope: !9277)
!9327 = !DILocation(line: 1856, column: 16, scope: !9261)
!9328 = !DILocation(line: 1856, column: 20, scope: !9261)
!9329 = !DILocation(line: 1856, column: 15, scope: !9261)
!9330 = !DILocation(line: 1856, column: 11, scope: !9261)
!9331 = !DILocation(line: 1858, column: 11, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9261, file: !1, line: 1858, column: 9)
!9333 = !DILocation(line: 1858, column: 24, scope: !9332)
!9334 = !DILocation(line: 1858, column: 9, scope: !9332)
!9335 = !DILocation(line: 1858, column: 9, scope: !9261)
!9336 = !DILocation(line: 1858, column: 30, scope: !9332)
!9337 = !DILocation(line: 1859, column: 4, scope: !9261)
!9338 = !DILocation(line: 1837, column: 26, scope: !9256)
!9339 = !DILocation(line: 1837, column: 4, scope: !9256)
!9340 = distinct !{!9340, !9259, !9341}
!9341 = !DILocation(line: 1859, column: 4, scope: !9252)
!9342 = !DILocation(line: 1862, column: 1, scope: !9095)
