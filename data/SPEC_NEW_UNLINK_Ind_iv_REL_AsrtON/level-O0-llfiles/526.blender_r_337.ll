; ModuleID = 'blender/source/blender/render/intern/source/renderdatabase.c'
source_filename = "blender/source/blender/render/intern/source/renderdatabase.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.VertTableNode = type { %struct.VertRen*, float*, float*, float*, float*, float*, i32* }
%struct.VlakTableNode = type { %struct.VlakRen*, %struct.MTFace*, %struct.MCol*, i32*, i32, i32, float*, float*, %struct.RadFace** }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.RadFace = type { [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.StrandTableNode = type { %struct.StrandRen*, float*, float*, float*, i32*, %struct.MCol*, float*, i32, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.StrandVert = type { [3 x float], float }
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ImagePool = type opaque
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.RayObject = type { %struct.RayObjectAPI*, %struct.RayObjectControl }
%struct.RayObjectAPI = type { i32 (%struct.RayObject*, %struct.Isect*)*, void (%struct.RayObject*, %struct.RayObject*)*, void (%struct.RayObject*)*, void (%struct.RayObject*)*, void (%struct.RayObject*, float*, float*)*, float (%struct.RayObject*)*, void (%struct.RayObject*, %struct.RayHint*, float*, float*)* }
%struct.Isect = type { [3 x float], [3 x float], float, [3 x float], [3 x float], [6 x i32], [3 x float], i32, i32, i32, i32, i8*, float, float, i32, %struct.anon, %struct.anon, %struct.RayObject*, %struct.RayHint* }
%struct.anon = type { i8*, i8* }
%struct.RayHint = type { %union.anon }
%union.anon = type { %struct.LCTSHint }
%struct.LCTSHint = type { i32, [256 x %struct.RayObject*] }
%struct.RayObjectControl = type { i8*, i32 (i8*)* }
%struct.RayFace = type { [4 x float], [4 x float], [4 x float], [3 x float], i32, i8*, i8* }
%struct.VlakPrimitive = type { %struct.ObjectInstanceRen*, %struct.VlakRen* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.MainLock = type opaque
%struct.RenderEngine = type opaque
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.EvaluationContext = type opaque

@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [13 x i8] c"stress table\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c"rad table\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"strand table\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"tangent table\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"winspeed table\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"origindex table\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"error in findOrAddVert: %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"vertnodes\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.8 = private unnamed_addr constant [14 x i8] c"findOrAddVert\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"Vlak mtface\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"Vlak mcol\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"surfnor table\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"radface table\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"mtfacenames\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"mcolnames\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"error in findOrAddVlak: %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"vlaknodes\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"findOrAddVlak\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"surfnor strand table\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"strand uv table\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"strand mcol table\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"simplify strand table\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"face strand table\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"winspeed strand table\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"error in findOrAddStrand: %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"strandnodes\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"findOrAddStrand\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"StrandBuffer\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"StrandVert\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"object render struct\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"error in findOrAddHalo: %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"Bloha\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"findOrAdHalo\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"ObjectInstanceRen\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"ObjectInstance\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_vertren_get_stress(%struct.ObjectRen* %obr, %struct.VertRen* %ver, i32 %verify) #0 !dbg !2533 {
entry:
  %retval = alloca float*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ver.addr = alloca %struct.VertRen*, align 8
  %verify.addr = alloca i32, align 4
  %stress = alloca float*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !2537, metadata !DIExpression()), !dbg !2538
  store %struct.VertRen* %ver, %struct.VertRen** %ver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver.addr, metadata !2539, metadata !DIExpression()), !dbg !2540
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !2541, metadata !DIExpression()), !dbg !2542
  call void @llvm.dbg.declare(metadata float** %stress, metadata !2543, metadata !DIExpression()), !dbg !2544
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !2545, metadata !DIExpression()), !dbg !2546
  %0 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2547
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %0, i32 0, i32 5, !dbg !2548
  %1 = load i32, i32* %index, align 8, !dbg !2548
  %shr = ashr i32 %1, 8, !dbg !2549
  store i32 %shr, i32* %nr, align 4, !dbg !2546
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2550
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 18, !dbg !2551
  %3 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !2551
  %4 = load i32, i32* %nr, align 4, !dbg !2552
  %idxprom = sext i32 %4 to i64, !dbg !2550
  %arrayidx = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %3, i64 %idxprom, !dbg !2550
  %stress1 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx, i32 0, i32 4, !dbg !2553
  %5 = load float*, float** %stress1, align 8, !dbg !2553
  store float* %5, float** %stress, align 8, !dbg !2554
  %6 = load float*, float** %stress, align 8, !dbg !2555
  %cmp = icmp eq float* %6, null, !dbg !2557
  br i1 %cmp, label %if.then, label %if.end7, !dbg !2558

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !2559
  %tobool = icmp ne i32 %7, 0, !dbg !2559
  br i1 %tobool, label %if.then2, label %if.else, !dbg !2562

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2563
  %call = call i8* %8(i64 1024, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)), !dbg !2563
  %9 = bitcast i8* %call to float*, !dbg !2563
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2564
  %vertnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 18, !dbg !2565
  %11 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes3, align 8, !dbg !2565
  %12 = load i32, i32* %nr, align 4, !dbg !2566
  %idxprom4 = sext i32 %12 to i64, !dbg !2564
  %arrayidx5 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %11, i64 %idxprom4, !dbg !2564
  %stress6 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx5, i32 0, i32 4, !dbg !2567
  store float* %9, float** %stress6, align 8, !dbg !2568
  store float* %9, float** %stress, align 8, !dbg !2569
  br label %if.end, !dbg !2570

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !2571
  br label %return, !dbg !2571

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !2572

if.end7:                                          ; preds = %if.end, %entry
  %13 = load float*, float** %stress, align 8, !dbg !2573
  %14 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2574
  %index8 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %14, i32 0, i32 5, !dbg !2575
  %15 = load i32, i32* %index8, align 8, !dbg !2575
  %and = and i32 %15, 255, !dbg !2576
  %mul = mul nsw i32 %and, 1, !dbg !2577
  %idx.ext = sext i32 %mul to i64, !dbg !2578
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.ext, !dbg !2578
  store float* %add.ptr, float** %retval, align 8, !dbg !2579
  br label %return, !dbg !2579

return:                                           ; preds = %if.end7, %if.else
  %16 = load float*, float** %retval, align 8, !dbg !2580
  ret float* %16, !dbg !2580
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_vertren_get_rad(%struct.ObjectRen* %obr, %struct.VertRen* %ver, i32 %verify) #0 !dbg !2581 {
entry:
  %retval = alloca float*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ver.addr = alloca %struct.VertRen*, align 8
  %verify.addr = alloca i32, align 4
  %rad = alloca float*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !2582, metadata !DIExpression()), !dbg !2583
  store %struct.VertRen* %ver, %struct.VertRen** %ver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver.addr, metadata !2584, metadata !DIExpression()), !dbg !2585
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !2586, metadata !DIExpression()), !dbg !2587
  call void @llvm.dbg.declare(metadata float** %rad, metadata !2588, metadata !DIExpression()), !dbg !2589
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !2590, metadata !DIExpression()), !dbg !2591
  %0 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2592
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %0, i32 0, i32 5, !dbg !2593
  %1 = load i32, i32* %index, align 8, !dbg !2593
  %shr = ashr i32 %1, 8, !dbg !2594
  store i32 %shr, i32* %nr, align 4, !dbg !2591
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2595
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 18, !dbg !2596
  %3 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !2596
  %4 = load i32, i32* %nr, align 4, !dbg !2597
  %idxprom = sext i32 %4 to i64, !dbg !2595
  %arrayidx = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %3, i64 %idxprom, !dbg !2595
  %rad1 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx, i32 0, i32 1, !dbg !2598
  %5 = load float*, float** %rad1, align 8, !dbg !2598
  store float* %5, float** %rad, align 8, !dbg !2599
  %6 = load float*, float** %rad, align 8, !dbg !2600
  %cmp = icmp eq float* %6, null, !dbg !2602
  br i1 %cmp, label %if.then, label %if.end7, !dbg !2603

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !2604
  %tobool = icmp ne i32 %7, 0, !dbg !2604
  br i1 %tobool, label %if.then2, label %if.else, !dbg !2607

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2608
  %call = call i8* %8(i64 4096, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)), !dbg !2608
  %9 = bitcast i8* %call to float*, !dbg !2608
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2609
  %vertnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 18, !dbg !2610
  %11 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes3, align 8, !dbg !2610
  %12 = load i32, i32* %nr, align 4, !dbg !2611
  %idxprom4 = sext i32 %12 to i64, !dbg !2609
  %arrayidx5 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %11, i64 %idxprom4, !dbg !2609
  %rad6 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx5, i32 0, i32 1, !dbg !2612
  store float* %9, float** %rad6, align 8, !dbg !2613
  store float* %9, float** %rad, align 8, !dbg !2614
  br label %if.end, !dbg !2615

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !2616
  br label %return, !dbg !2616

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !2617

if.end7:                                          ; preds = %if.end, %entry
  %13 = load float*, float** %rad, align 8, !dbg !2618
  %14 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2619
  %index8 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %14, i32 0, i32 5, !dbg !2620
  %15 = load i32, i32* %index8, align 8, !dbg !2620
  %and = and i32 %15, 255, !dbg !2621
  %mul = mul nsw i32 %and, 4, !dbg !2622
  %idx.ext = sext i32 %mul to i64, !dbg !2623
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.ext, !dbg !2623
  store float* %add.ptr, float** %retval, align 8, !dbg !2624
  br label %return, !dbg !2624

return:                                           ; preds = %if.end7, %if.else
  %16 = load float*, float** %retval, align 8, !dbg !2625
  ret float* %16, !dbg !2625
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_vertren_get_strand(%struct.ObjectRen* %obr, %struct.VertRen* %ver, i32 %verify) #0 !dbg !2626 {
entry:
  %retval = alloca float*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ver.addr = alloca %struct.VertRen*, align 8
  %verify.addr = alloca i32, align 4
  %strand = alloca float*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !2627, metadata !DIExpression()), !dbg !2628
  store %struct.VertRen* %ver, %struct.VertRen** %ver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver.addr, metadata !2629, metadata !DIExpression()), !dbg !2630
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !2631, metadata !DIExpression()), !dbg !2632
  call void @llvm.dbg.declare(metadata float** %strand, metadata !2633, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !2635, metadata !DIExpression()), !dbg !2636
  %0 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2637
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %0, i32 0, i32 5, !dbg !2638
  %1 = load i32, i32* %index, align 8, !dbg !2638
  %shr = ashr i32 %1, 8, !dbg !2639
  store i32 %shr, i32* %nr, align 4, !dbg !2636
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2640
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 18, !dbg !2641
  %3 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !2641
  %4 = load i32, i32* %nr, align 4, !dbg !2642
  %idxprom = sext i32 %4 to i64, !dbg !2640
  %arrayidx = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %3, i64 %idxprom, !dbg !2640
  %strand1 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx, i32 0, i32 2, !dbg !2643
  %5 = load float*, float** %strand1, align 8, !dbg !2643
  store float* %5, float** %strand, align 8, !dbg !2644
  %6 = load float*, float** %strand, align 8, !dbg !2645
  %cmp = icmp eq float* %6, null, !dbg !2647
  br i1 %cmp, label %if.then, label %if.end7, !dbg !2648

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !2649
  %tobool = icmp ne i32 %7, 0, !dbg !2649
  br i1 %tobool, label %if.then2, label %if.else, !dbg !2652

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2653
  %call = call i8* %8(i64 1024, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)), !dbg !2653
  %9 = bitcast i8* %call to float*, !dbg !2653
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2654
  %vertnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 18, !dbg !2655
  %11 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes3, align 8, !dbg !2655
  %12 = load i32, i32* %nr, align 4, !dbg !2656
  %idxprom4 = sext i32 %12 to i64, !dbg !2654
  %arrayidx5 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %11, i64 %idxprom4, !dbg !2654
  %strand6 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx5, i32 0, i32 2, !dbg !2657
  store float* %9, float** %strand6, align 8, !dbg !2658
  store float* %9, float** %strand, align 8, !dbg !2659
  br label %if.end, !dbg !2660

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !2661
  br label %return, !dbg !2661

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !2662

if.end7:                                          ; preds = %if.end, %entry
  %13 = load float*, float** %strand, align 8, !dbg !2663
  %14 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2664
  %index8 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %14, i32 0, i32 5, !dbg !2665
  %15 = load i32, i32* %index8, align 8, !dbg !2665
  %and = and i32 %15, 255, !dbg !2666
  %mul = mul nsw i32 %and, 1, !dbg !2667
  %idx.ext = sext i32 %mul to i64, !dbg !2668
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.ext, !dbg !2668
  store float* %add.ptr, float** %retval, align 8, !dbg !2669
  br label %return, !dbg !2669

return:                                           ; preds = %if.end7, %if.else
  %16 = load float*, float** %retval, align 8, !dbg !2670
  ret float* %16, !dbg !2670
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_vertren_get_tangent(%struct.ObjectRen* %obr, %struct.VertRen* %ver, i32 %verify) #0 !dbg !2671 {
entry:
  %retval = alloca float*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ver.addr = alloca %struct.VertRen*, align 8
  %verify.addr = alloca i32, align 4
  %tangent = alloca float*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !2672, metadata !DIExpression()), !dbg !2673
  store %struct.VertRen* %ver, %struct.VertRen** %ver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver.addr, metadata !2674, metadata !DIExpression()), !dbg !2675
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !2676, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.declare(metadata float** %tangent, metadata !2678, metadata !DIExpression()), !dbg !2679
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !2680, metadata !DIExpression()), !dbg !2681
  %0 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2682
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %0, i32 0, i32 5, !dbg !2683
  %1 = load i32, i32* %index, align 8, !dbg !2683
  %shr = ashr i32 %1, 8, !dbg !2684
  store i32 %shr, i32* %nr, align 4, !dbg !2681
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2685
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 18, !dbg !2686
  %3 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !2686
  %4 = load i32, i32* %nr, align 4, !dbg !2687
  %idxprom = sext i32 %4 to i64, !dbg !2685
  %arrayidx = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %3, i64 %idxprom, !dbg !2685
  %tangent1 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx, i32 0, i32 3, !dbg !2688
  %5 = load float*, float** %tangent1, align 8, !dbg !2688
  store float* %5, float** %tangent, align 8, !dbg !2689
  %6 = load float*, float** %tangent, align 8, !dbg !2690
  %cmp = icmp eq float* %6, null, !dbg !2692
  br i1 %cmp, label %if.then, label %if.end7, !dbg !2693

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !2694
  %tobool = icmp ne i32 %7, 0, !dbg !2694
  br i1 %tobool, label %if.then2, label %if.else, !dbg !2697

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2698
  %call = call i8* %8(i64 3072, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)), !dbg !2698
  %9 = bitcast i8* %call to float*, !dbg !2698
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2699
  %vertnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 18, !dbg !2700
  %11 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes3, align 8, !dbg !2700
  %12 = load i32, i32* %nr, align 4, !dbg !2701
  %idxprom4 = sext i32 %12 to i64, !dbg !2699
  %arrayidx5 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %11, i64 %idxprom4, !dbg !2699
  %tangent6 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx5, i32 0, i32 3, !dbg !2702
  store float* %9, float** %tangent6, align 8, !dbg !2703
  store float* %9, float** %tangent, align 8, !dbg !2704
  br label %if.end, !dbg !2705

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !2706
  br label %return, !dbg !2706

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !2707

if.end7:                                          ; preds = %if.end, %entry
  %13 = load float*, float** %tangent, align 8, !dbg !2708
  %14 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2709
  %index8 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %14, i32 0, i32 5, !dbg !2710
  %15 = load i32, i32* %index8, align 8, !dbg !2710
  %and = and i32 %15, 255, !dbg !2711
  %mul = mul nsw i32 %and, 3, !dbg !2712
  %idx.ext = sext i32 %mul to i64, !dbg !2713
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.ext, !dbg !2713
  store float* %add.ptr, float** %retval, align 8, !dbg !2714
  br label %return, !dbg !2714

return:                                           ; preds = %if.end7, %if.else
  %16 = load float*, float** %retval, align 8, !dbg !2715
  ret float* %16, !dbg !2715
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_vertren_get_winspeed(%struct.ObjectInstanceRen* %obi, %struct.VertRen* %ver, i32 %verify) #0 !dbg !2716 {
entry:
  %retval = alloca float*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %ver.addr = alloca %struct.VertRen*, align 8
  %verify.addr = alloca i32, align 4
  %winspeed = alloca float*, align 8
  %totvector = alloca i32, align 4
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !2721, metadata !DIExpression()), !dbg !2722
  store %struct.VertRen* %ver, %struct.VertRen** %ver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver.addr, metadata !2723, metadata !DIExpression()), !dbg !2724
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !2725, metadata !DIExpression()), !dbg !2726
  call void @llvm.dbg.declare(metadata float** %winspeed, metadata !2727, metadata !DIExpression()), !dbg !2728
  call void @llvm.dbg.declare(metadata i32* %totvector, metadata !2729, metadata !DIExpression()), !dbg !2730
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !2731
  %vectors = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i32 0, i32 16, !dbg !2732
  %1 = load float*, float** %vectors, align 8, !dbg !2732
  store float* %1, float** %winspeed, align 8, !dbg !2733
  %2 = load float*, float** %winspeed, align 8, !dbg !2734
  %cmp = icmp eq float* %2, null, !dbg !2736
  br i1 %cmp, label %if.then, label %if.end5, !dbg !2737

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %verify.addr, align 4, !dbg !2738
  %tobool = icmp ne i32 %3, 0, !dbg !2738
  br i1 %tobool, label %if.then1, label %if.else, !dbg !2741

if.then1:                                         ; preds = %if.then
  %4 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !2742
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %4, i32 0, i32 2, !dbg !2744
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !2744
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %5, i32 0, i32 10, !dbg !2745
  %6 = load i32, i32* %totvert, align 8, !dbg !2745
  %7 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !2746
  %obr2 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %7, i32 0, i32 2, !dbg !2747
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr2, align 8, !dbg !2747
  %totstrand = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %8, i32 0, i32 12, !dbg !2748
  %9 = load i32, i32* %totstrand, align 8, !dbg !2748
  %add = add nsw i32 %6, %9, !dbg !2749
  store i32 %add, i32* %totvector, align 4, !dbg !2750
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2751
  %11 = load i32, i32* %totvector, align 4, !dbg !2752
  %mul = mul nsw i32 %11, 4, !dbg !2753
  %conv = sext i32 %mul to i64, !dbg !2752
  %mul3 = mul i64 %conv, 4, !dbg !2754
  %call = call i8* %10(i64 %mul3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)), !dbg !2751
  %12 = bitcast i8* %call to float*, !dbg !2751
  %13 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !2755
  %vectors4 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %13, i32 0, i32 16, !dbg !2756
  store float* %12, float** %vectors4, align 8, !dbg !2757
  store float* %12, float** %winspeed, align 8, !dbg !2758
  br label %if.end, !dbg !2759

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !2760
  br label %return, !dbg !2760

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !2761

if.end5:                                          ; preds = %if.end, %entry
  %14 = load float*, float** %winspeed, align 8, !dbg !2762
  %15 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2763
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %15, i32 0, i32 5, !dbg !2764
  %16 = load i32, i32* %index, align 8, !dbg !2764
  %mul6 = mul nsw i32 %16, 4, !dbg !2765
  %idx.ext = sext i32 %mul6 to i64, !dbg !2766
  %add.ptr = getelementptr inbounds float, float* %14, i64 %idx.ext, !dbg !2766
  store float* %add.ptr, float** %retval, align 8, !dbg !2767
  br label %return, !dbg !2767

return:                                           ; preds = %if.end5, %if.else
  %17 = load float*, float** %retval, align 8, !dbg !2768
  ret float* %17, !dbg !2768
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @RE_vertren_get_origindex(%struct.ObjectRen* %obr, %struct.VertRen* %ver, i32 %verify) #0 !dbg !2769 {
entry:
  %retval = alloca i32*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ver.addr = alloca %struct.VertRen*, align 8
  %verify.addr = alloca i32, align 4
  %origindex = alloca i32*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !2772, metadata !DIExpression()), !dbg !2773
  store %struct.VertRen* %ver, %struct.VertRen** %ver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver.addr, metadata !2774, metadata !DIExpression()), !dbg !2775
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !2776, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.declare(metadata i32** %origindex, metadata !2778, metadata !DIExpression()), !dbg !2779
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !2780, metadata !DIExpression()), !dbg !2781
  %0 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2782
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %0, i32 0, i32 5, !dbg !2783
  %1 = load i32, i32* %index, align 8, !dbg !2783
  %shr = ashr i32 %1, 8, !dbg !2784
  store i32 %shr, i32* %nr, align 4, !dbg !2781
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2785
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 18, !dbg !2786
  %3 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !2786
  %4 = load i32, i32* %nr, align 4, !dbg !2787
  %idxprom = sext i32 %4 to i64, !dbg !2785
  %arrayidx = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %3, i64 %idxprom, !dbg !2785
  %origindex1 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx, i32 0, i32 6, !dbg !2788
  %5 = load i32*, i32** %origindex1, align 8, !dbg !2788
  store i32* %5, i32** %origindex, align 8, !dbg !2789
  %6 = load i32*, i32** %origindex, align 8, !dbg !2790
  %cmp = icmp eq i32* %6, null, !dbg !2792
  br i1 %cmp, label %if.then, label %if.end7, !dbg !2793

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !2794
  %tobool = icmp ne i32 %7, 0, !dbg !2794
  br i1 %tobool, label %if.then2, label %if.else, !dbg !2797

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2798
  %call = call i8* %8(i64 1024, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)), !dbg !2798
  %9 = bitcast i8* %call to i32*, !dbg !2798
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2799
  %vertnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 18, !dbg !2800
  %11 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes3, align 8, !dbg !2800
  %12 = load i32, i32* %nr, align 4, !dbg !2801
  %idxprom4 = sext i32 %12 to i64, !dbg !2799
  %arrayidx5 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %11, i64 %idxprom4, !dbg !2799
  %origindex6 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx5, i32 0, i32 6, !dbg !2802
  store i32* %9, i32** %origindex6, align 8, !dbg !2803
  store i32* %9, i32** %origindex, align 8, !dbg !2804
  br label %if.end, !dbg !2805

if.else:                                          ; preds = %if.then
  store i32* null, i32** %retval, align 8, !dbg !2806
  br label %return, !dbg !2806

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !2807

if.end7:                                          ; preds = %if.end, %entry
  %13 = load i32*, i32** %origindex, align 8, !dbg !2808
  %14 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2809
  %index8 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %14, i32 0, i32 5, !dbg !2810
  %15 = load i32, i32* %index8, align 8, !dbg !2810
  %and = and i32 %15, 255, !dbg !2811
  %mul = mul nsw i32 %and, 1, !dbg !2812
  %idx.ext = sext i32 %mul to i64, !dbg !2813
  %add.ptr = getelementptr inbounds i32, i32* %13, i64 %idx.ext, !dbg !2813
  store i32* %add.ptr, i32** %retval, align 8, !dbg !2814
  br label %return, !dbg !2814

return:                                           ; preds = %if.end7, %if.else
  %16 = load i32*, i32** %retval, align 8, !dbg !2815
  ret i32* %16, !dbg !2815
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.VertRen* @RE_vertren_copy(%struct.ObjectRen* %obr, %struct.VertRen* %ver) #0 !dbg !2816 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ver.addr = alloca %struct.VertRen*, align 8
  %v1 = alloca %struct.VertRen*, align 8
  %fp1 = alloca float*, align 8
  %fp2 = alloca float*, align 8
  %int1 = alloca i32*, align 8
  %int2 = alloca i32*, align 8
  %index = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !2819, metadata !DIExpression()), !dbg !2820
  store %struct.VertRen* %ver, %struct.VertRen** %ver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver.addr, metadata !2821, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1, metadata !2823, metadata !DIExpression()), !dbg !2824
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2825
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2826
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %1, i32 0, i32 10, !dbg !2827
  %2 = load i32, i32* %totvert, align 8, !dbg !2828
  %inc = add nsw i32 %2, 1, !dbg !2828
  store i32 %inc, i32* %totvert, align 8, !dbg !2828
  %call = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %0, i32 %2), !dbg !2829
  store %struct.VertRen* %call, %struct.VertRen** %v1, align 8, !dbg !2824
  call void @llvm.dbg.declare(metadata float** %fp1, metadata !2830, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.declare(metadata float** %fp2, metadata !2832, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.declare(metadata i32** %int1, metadata !2834, metadata !DIExpression()), !dbg !2835
  call void @llvm.dbg.declare(metadata i32** %int2, metadata !2836, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2838, metadata !DIExpression()), !dbg !2839
  %3 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2840
  %index1 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %3, i32 0, i32 5, !dbg !2841
  %4 = load i32, i32* %index1, align 8, !dbg !2841
  store i32 %4, i32* %index, align 4, !dbg !2839
  %5 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2842
  %6 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2843
  %7 = bitcast %struct.VertRen* %5 to i8*, !dbg !2844
  %8 = bitcast %struct.VertRen* %6 to i8*, !dbg !2844
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 48, i1 false), !dbg !2844
  %9 = load i32, i32* %index, align 4, !dbg !2845
  %10 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2846
  %index2 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %10, i32 0, i32 5, !dbg !2847
  store i32 %9, i32* %index2, align 8, !dbg !2848
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2849
  %12 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2850
  %call3 = call float* @RE_vertren_get_stress(%struct.ObjectRen* %11, %struct.VertRen* %12, i32 0), !dbg !2851
  store float* %call3, float** %fp1, align 8, !dbg !2852
  %13 = load float*, float** %fp1, align 8, !dbg !2853
  %tobool = icmp ne float* %13, null, !dbg !2853
  br i1 %tobool, label %if.then, label %if.end, !dbg !2855

if.then:                                          ; preds = %entry
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2856
  %15 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2858
  %call4 = call float* @RE_vertren_get_stress(%struct.ObjectRen* %14, %struct.VertRen* %15, i32 1), !dbg !2859
  store float* %call4, float** %fp2, align 8, !dbg !2860
  %16 = load float*, float** %fp2, align 8, !dbg !2861
  %17 = bitcast float* %16 to i8*, !dbg !2862
  %18 = load float*, float** %fp1, align 8, !dbg !2863
  %19 = bitcast float* %18 to i8*, !dbg !2862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %19, i64 4, i1 false), !dbg !2862
  br label %if.end, !dbg !2864

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2865
  %21 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2866
  %call5 = call float* @RE_vertren_get_rad(%struct.ObjectRen* %20, %struct.VertRen* %21, i32 0), !dbg !2867
  store float* %call5, float** %fp1, align 8, !dbg !2868
  %22 = load float*, float** %fp1, align 8, !dbg !2869
  %tobool6 = icmp ne float* %22, null, !dbg !2869
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !2871

if.then7:                                         ; preds = %if.end
  %23 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2872
  %24 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2874
  %call8 = call float* @RE_vertren_get_rad(%struct.ObjectRen* %23, %struct.VertRen* %24, i32 1), !dbg !2875
  store float* %call8, float** %fp2, align 8, !dbg !2876
  %25 = load float*, float** %fp2, align 8, !dbg !2877
  %26 = bitcast float* %25 to i8*, !dbg !2878
  %27 = load float*, float** %fp1, align 8, !dbg !2879
  %28 = bitcast float* %27 to i8*, !dbg !2878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %28, i64 16, i1 false), !dbg !2878
  br label %if.end9, !dbg !2880

if.end9:                                          ; preds = %if.then7, %if.end
  %29 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2881
  %30 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2882
  %call10 = call float* @RE_vertren_get_strand(%struct.ObjectRen* %29, %struct.VertRen* %30, i32 0), !dbg !2883
  store float* %call10, float** %fp1, align 8, !dbg !2884
  %31 = load float*, float** %fp1, align 8, !dbg !2885
  %tobool11 = icmp ne float* %31, null, !dbg !2885
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !2887

if.then12:                                        ; preds = %if.end9
  %32 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2888
  %33 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2890
  %call13 = call float* @RE_vertren_get_strand(%struct.ObjectRen* %32, %struct.VertRen* %33, i32 1), !dbg !2891
  store float* %call13, float** %fp2, align 8, !dbg !2892
  %34 = load float*, float** %fp2, align 8, !dbg !2893
  %35 = bitcast float* %34 to i8*, !dbg !2894
  %36 = load float*, float** %fp1, align 8, !dbg !2895
  %37 = bitcast float* %36 to i8*, !dbg !2894
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %37, i64 4, i1 false), !dbg !2894
  br label %if.end14, !dbg !2896

if.end14:                                         ; preds = %if.then12, %if.end9
  %38 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2897
  %39 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2898
  %call15 = call float* @RE_vertren_get_tangent(%struct.ObjectRen* %38, %struct.VertRen* %39, i32 0), !dbg !2899
  store float* %call15, float** %fp1, align 8, !dbg !2900
  %40 = load float*, float** %fp1, align 8, !dbg !2901
  %tobool16 = icmp ne float* %40, null, !dbg !2901
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !2903

if.then17:                                        ; preds = %if.end14
  %41 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2904
  %42 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2906
  %call18 = call float* @RE_vertren_get_tangent(%struct.ObjectRen* %41, %struct.VertRen* %42, i32 1), !dbg !2907
  store float* %call18, float** %fp2, align 8, !dbg !2908
  %43 = load float*, float** %fp2, align 8, !dbg !2909
  %44 = bitcast float* %43 to i8*, !dbg !2910
  %45 = load float*, float** %fp1, align 8, !dbg !2911
  %46 = bitcast float* %45 to i8*, !dbg !2910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %46, i64 12, i1 false), !dbg !2910
  br label %if.end19, !dbg !2912

if.end19:                                         ; preds = %if.then17, %if.end14
  %47 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2913
  %48 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !2914
  %call20 = call i32* @RE_vertren_get_origindex(%struct.ObjectRen* %47, %struct.VertRen* %48, i32 0), !dbg !2915
  store i32* %call20, i32** %int1, align 8, !dbg !2916
  %49 = load i32*, i32** %int1, align 8, !dbg !2917
  %tobool21 = icmp ne i32* %49, null, !dbg !2917
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !2919

if.then22:                                        ; preds = %if.end19
  %50 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2920
  %51 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2922
  %call23 = call i32* @RE_vertren_get_origindex(%struct.ObjectRen* %50, %struct.VertRen* %51, i32 1), !dbg !2923
  store i32* %call23, i32** %int2, align 8, !dbg !2924
  %52 = load i32*, i32** %int2, align 8, !dbg !2925
  %53 = bitcast i32* %52 to i8*, !dbg !2926
  %54 = load i32*, i32** %int1, align 8, !dbg !2927
  %55 = bitcast i32* %54 to i8*, !dbg !2926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %55, i64 4, i1 false), !dbg !2926
  br label %if.end24, !dbg !2928

if.end24:                                         ; preds = %if.then22, %if.end19
  %56 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !2929
  ret %struct.VertRen* %56, !dbg !2930
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %obr, i32 %nr) #0 !dbg !2931 {
entry:
  %retval = alloca %struct.VertRen*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %nr.addr = alloca i32, align 4
  %temp = alloca %struct.VertTableNode*, align 8
  %v = alloca %struct.VertRen*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !2934, metadata !DIExpression()), !dbg !2935
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !2936, metadata !DIExpression()), !dbg !2937
  call void @llvm.dbg.declare(metadata %struct.VertTableNode** %temp, metadata !2938, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v, metadata !2942, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2944, metadata !DIExpression()), !dbg !2945
  %0 = load i32, i32* %nr.addr, align 4, !dbg !2946
  %cmp = icmp slt i32 %0, 0, !dbg !2948
  br i1 %cmp, label %if.then, label %if.end, !dbg !2949

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %nr.addr, align 4, !dbg !2950
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i32 %1), !dbg !2952
  store %struct.VertRen* null, %struct.VertRen** %retval, align 8, !dbg !2953
  br label %return, !dbg !2953

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %nr.addr, align 4, !dbg !2954
  %shr = ashr i32 %2, 8, !dbg !2955
  store i32 %shr, i32* %a, align 4, !dbg !2956
  %3 = load i32, i32* %a, align 4, !dbg !2957
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2959
  %vertnodeslen = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %4, i32 0, i32 14, !dbg !2960
  %5 = load i32, i32* %vertnodeslen, align 8, !dbg !2960
  %sub = sub nsw i32 %5, 1, !dbg !2961
  %cmp1 = icmp sge i32 %3, %sub, !dbg !2962
  br i1 %cmp1, label %if.then2, label %if.end19, !dbg !2963

if.then2:                                         ; preds = %if.end
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2964
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 18, !dbg !2966
  %7 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !2966
  store %struct.VertTableNode* %7, %struct.VertTableNode** %temp, align 8, !dbg !2967
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2968
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2969
  %vertnodeslen3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 14, !dbg !2970
  %10 = load i32, i32* %vertnodeslen3, align 8, !dbg !2970
  %add = add nsw i32 %10, 1024, !dbg !2971
  %conv = sext i32 %add to i64, !dbg !2972
  %mul = mul i64 56, %conv, !dbg !2973
  %call4 = call i8* %8(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)), !dbg !2968
  %11 = bitcast i8* %call4 to %struct.VertTableNode*, !dbg !2968
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2974
  %vertnodes5 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %12, i32 0, i32 18, !dbg !2975
  store %struct.VertTableNode* %11, %struct.VertTableNode** %vertnodes5, align 8, !dbg !2976
  %13 = load %struct.VertTableNode*, %struct.VertTableNode** %temp, align 8, !dbg !2977
  %tobool = icmp ne %struct.VertTableNode* %13, null, !dbg !2977
  br i1 %tobool, label %if.then6, label %if.end11, !dbg !2979

if.then6:                                         ; preds = %if.then2
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2980
  %vertnodes7 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %14, i32 0, i32 18, !dbg !2981
  %15 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes7, align 8, !dbg !2981
  %16 = bitcast %struct.VertTableNode* %15 to i8*, !dbg !2982
  %17 = load %struct.VertTableNode*, %struct.VertTableNode** %temp, align 8, !dbg !2983
  %18 = bitcast %struct.VertTableNode* %17 to i8*, !dbg !2982
  %19 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2984
  %vertnodeslen8 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %19, i32 0, i32 14, !dbg !2985
  %20 = load i32, i32* %vertnodeslen8, align 8, !dbg !2985
  %conv9 = sext i32 %20 to i64, !dbg !2984
  %mul10 = mul i64 %conv9, 56, !dbg !2986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %18, i64 %mul10, i1 false), !dbg !2982
  br label %if.end11, !dbg !2982

if.end11:                                         ; preds = %if.then6, %if.then2
  %21 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2987
  %vertnodes12 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %21, i32 0, i32 18, !dbg !2988
  %22 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes12, align 8, !dbg !2988
  %23 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2989
  %vertnodeslen13 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %23, i32 0, i32 14, !dbg !2990
  %24 = load i32, i32* %vertnodeslen13, align 8, !dbg !2990
  %idx.ext = sext i32 %24 to i64, !dbg !2991
  %add.ptr = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %22, i64 %idx.ext, !dbg !2991
  %25 = bitcast %struct.VertTableNode* %add.ptr to i8*, !dbg !2992
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 57344, i1 false), !dbg !2992
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !2993
  %vertnodeslen14 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %26, i32 0, i32 14, !dbg !2994
  %27 = load i32, i32* %vertnodeslen14, align 8, !dbg !2995
  %add15 = add nsw i32 %27, 1024, !dbg !2995
  store i32 %add15, i32* %vertnodeslen14, align 8, !dbg !2995
  %28 = load %struct.VertTableNode*, %struct.VertTableNode** %temp, align 8, !dbg !2996
  %tobool16 = icmp ne %struct.VertTableNode* %28, null, !dbg !2996
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2998

if.then17:                                        ; preds = %if.end11
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2999
  %30 = load %struct.VertTableNode*, %struct.VertTableNode** %temp, align 8, !dbg !3000
  %31 = bitcast %struct.VertTableNode* %30 to i8*, !dbg !3000
  call void %29(i8* %31), !dbg !2999
  br label %if.end18, !dbg !2999

if.end18:                                         ; preds = %if.then17, %if.end11
  br label %if.end19, !dbg !3001

if.end19:                                         ; preds = %if.end18, %if.end
  %32 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3002
  %vertnodes20 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %32, i32 0, i32 18, !dbg !3003
  %33 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes20, align 8, !dbg !3003
  %34 = load i32, i32* %a, align 4, !dbg !3004
  %idxprom = sext i32 %34 to i64, !dbg !3002
  %arrayidx = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %33, i64 %idxprom, !dbg !3002
  %vert = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx, i32 0, i32 0, !dbg !3005
  %35 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !3005
  store %struct.VertRen* %35, %struct.VertRen** %v, align 8, !dbg !3006
  %36 = load %struct.VertRen*, %struct.VertRen** %v, align 8, !dbg !3007
  %cmp21 = icmp eq %struct.VertRen* %36, null, !dbg !3009
  br i1 %cmp21, label %if.then23, label %if.end34, !dbg !3010

if.then23:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3011, metadata !DIExpression()), !dbg !3013
  %37 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3014
  %call24 = call i8* %37(i64 12288, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)), !dbg !3014
  %38 = bitcast i8* %call24 to %struct.VertRen*, !dbg !3015
  store %struct.VertRen* %38, %struct.VertRen** %v, align 8, !dbg !3016
  %39 = load %struct.VertRen*, %struct.VertRen** %v, align 8, !dbg !3017
  %40 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3018
  %vertnodes25 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %40, i32 0, i32 18, !dbg !3019
  %41 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes25, align 8, !dbg !3019
  %42 = load i32, i32* %a, align 4, !dbg !3020
  %idxprom26 = sext i32 %42 to i64, !dbg !3018
  %arrayidx27 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %41, i64 %idxprom26, !dbg !3018
  %vert28 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx27, i32 0, i32 0, !dbg !3021
  store %struct.VertRen* %39, %struct.VertRen** %vert28, align 8, !dbg !3022
  %43 = load i32, i32* %nr.addr, align 4, !dbg !3023
  %and = and i32 %43, -256, !dbg !3025
  store i32 %and, i32* %i, align 4, !dbg !3026
  store i32 0, i32* %a, align 4, !dbg !3027
  br label %for.cond, !dbg !3028

for.cond:                                         ; preds = %for.inc, %if.then23
  %44 = load i32, i32* %a, align 4, !dbg !3029
  %cmp29 = icmp slt i32 %44, 256, !dbg !3031
  br i1 %cmp29, label %for.body, label %for.end, !dbg !3032

for.body:                                         ; preds = %for.cond
  %45 = load i32, i32* %i, align 4, !dbg !3033
  %46 = load %struct.VertRen*, %struct.VertRen** %v, align 8, !dbg !3035
  %47 = load i32, i32* %a, align 4, !dbg !3036
  %idxprom31 = sext i32 %47 to i64, !dbg !3035
  %arrayidx32 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %46, i64 %idxprom31, !dbg !3035
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %arrayidx32, i32 0, i32 5, !dbg !3037
  store i32 %45, i32* %index, align 8, !dbg !3038
  br label %for.inc, !dbg !3039

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %a, align 4, !dbg !3040
  %inc = add nsw i32 %48, 1, !dbg !3040
  store i32 %inc, i32* %a, align 4, !dbg !3040
  %49 = load i32, i32* %i, align 4, !dbg !3041
  %inc33 = add nsw i32 %49, 1, !dbg !3041
  store i32 %inc33, i32* %i, align 4, !dbg !3041
  br label %for.cond, !dbg !3042, !llvm.loop !3043

for.end:                                          ; preds = %for.cond
  br label %if.end34, !dbg !3045

if.end34:                                         ; preds = %for.end, %if.end19
  %50 = load i32, i32* %nr.addr, align 4, !dbg !3046
  %and35 = and i32 %50, 255, !dbg !3047
  %51 = load %struct.VertRen*, %struct.VertRen** %v, align 8, !dbg !3048
  %idx.ext36 = sext i32 %and35 to i64, !dbg !3048
  %add.ptr37 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %51, i64 %idx.ext36, !dbg !3048
  store %struct.VertRen* %add.ptr37, %struct.VertRen** %v, align 8, !dbg !3048
  %52 = load %struct.VertRen*, %struct.VertRen** %v, align 8, !dbg !3049
  store %struct.VertRen* %52, %struct.VertRen** %retval, align 8, !dbg !3050
  br label %return, !dbg !3050

return:                                           ; preds = %if.end34, %if.then
  %53 = load %struct.VertRen*, %struct.VertRen** %retval, align 8, !dbg !3051
  ret %struct.VertRen* %53, !dbg !3051
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %obr, %struct.VlakRen* %vlr, i32 %n, i8** %name, i32 %verify) #0 !dbg !3052 {
entry:
  %retval = alloca %struct.MTFace*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %n.addr = alloca i32, align 4
  %name.addr = alloca i8**, align 8
  %verify.addr = alloca i32, align 4
  %node = alloca %struct.VlakTableNode*, align 8
  %nr = alloca i32, align 4
  %vlakindex = alloca i32, align 4
  %index2 = alloca i32, align 4
  %mtface = alloca %struct.MTFace*, align 8
  %size = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !3056, metadata !DIExpression()), !dbg !3057
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !3058, metadata !DIExpression()), !dbg !3059
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3060, metadata !DIExpression()), !dbg !3061
  store i8** %name, i8*** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %name.addr, metadata !3062, metadata !DIExpression()), !dbg !3063
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !3064, metadata !DIExpression()), !dbg !3065
  call void @llvm.dbg.declare(metadata %struct.VlakTableNode** %node, metadata !3066, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !3070, metadata !DIExpression()), !dbg !3071
  %0 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3072
  %index = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %0, i32 0, i32 9, !dbg !3073
  %1 = load i32, i32* %index, align 4, !dbg !3073
  %shr = ashr i32 %1, 8, !dbg !3074
  store i32 %shr, i32* %nr, align 4, !dbg !3071
  call void @llvm.dbg.declare(metadata i32* %vlakindex, metadata !3075, metadata !DIExpression()), !dbg !3076
  %2 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3077
  %index1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %2, i32 0, i32 9, !dbg !3078
  %3 = load i32, i32* %index1, align 4, !dbg !3078
  %and = and i32 %3, 255, !dbg !3079
  store i32 %and, i32* %vlakindex, align 4, !dbg !3076
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !3080, metadata !DIExpression()), !dbg !3081
  %4 = load i32, i32* %n.addr, align 4, !dbg !3082
  %shl = shl i32 %4, 8, !dbg !3083
  %5 = load i32, i32* %vlakindex, align 4, !dbg !3084
  %add = add nsw i32 %shl, %5, !dbg !3085
  store i32 %add, i32* %index2, align 4, !dbg !3081
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3086
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 19, !dbg !3087
  %7 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !3087
  %8 = load i32, i32* %nr, align 4, !dbg !3088
  %idxprom = sext i32 %8 to i64, !dbg !3086
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %7, i64 %idxprom, !dbg !3086
  store %struct.VlakTableNode* %arrayidx, %struct.VlakTableNode** %node, align 8, !dbg !3089
  %9 = load i32, i32* %verify.addr, align 4, !dbg !3090
  %tobool = icmp ne i32 %9, 0, !dbg !3090
  br i1 %tobool, label %if.then, label %if.else, !dbg !3092

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %n.addr, align 4, !dbg !3093
  %11 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3096
  %totmtface = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %11, i32 0, i32 4, !dbg !3097
  %12 = load i32, i32* %totmtface, align 8, !dbg !3097
  %cmp = icmp sge i32 %10, %12, !dbg !3098
  br i1 %cmp, label %if.then3, label %if.end17, !dbg !3099

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !3100, metadata !DIExpression()), !dbg !3104
  %13 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3105
  %mtface4 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %13, i32 0, i32 1, !dbg !3106
  %14 = load %struct.MTFace*, %struct.MTFace** %mtface4, align 8, !dbg !3106
  store %struct.MTFace* %14, %struct.MTFace** %mtface, align 8, !dbg !3104
  call void @llvm.dbg.declare(metadata i32* %size, metadata !3107, metadata !DIExpression()), !dbg !3108
  %15 = load i32, i32* %n.addr, align 4, !dbg !3109
  %add5 = add nsw i32 %15, 1, !dbg !3110
  %mul = mul nsw i32 %add5, 256, !dbg !3111
  store i32 %mul, i32* %size, align 4, !dbg !3108
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3112
  %17 = load i32, i32* %size, align 4, !dbg !3113
  %conv = sext i32 %17 to i64, !dbg !3113
  %mul6 = mul i64 %conv, 48, !dbg !3114
  %call = call i8* %16(i64 %mul6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0)), !dbg !3112
  %18 = bitcast i8* %call to %struct.MTFace*, !dbg !3112
  %19 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3115
  %mtface7 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %19, i32 0, i32 1, !dbg !3116
  store %struct.MTFace* %18, %struct.MTFace** %mtface7, align 8, !dbg !3117
  %20 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3118
  %tobool8 = icmp ne %struct.MTFace* %20, null, !dbg !3118
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !3120

if.then9:                                         ; preds = %if.then3
  %21 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3121
  %totmtface10 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %21, i32 0, i32 4, !dbg !3123
  %22 = load i32, i32* %totmtface10, align 8, !dbg !3123
  %mul11 = mul nsw i32 %22, 256, !dbg !3124
  store i32 %mul11, i32* %size, align 4, !dbg !3125
  %23 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3126
  %mtface12 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %23, i32 0, i32 1, !dbg !3127
  %24 = load %struct.MTFace*, %struct.MTFace** %mtface12, align 8, !dbg !3127
  %25 = bitcast %struct.MTFace* %24 to i8*, !dbg !3128
  %26 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3129
  %27 = bitcast %struct.MTFace* %26 to i8*, !dbg !3128
  %28 = load i32, i32* %size, align 4, !dbg !3130
  %conv13 = sext i32 %28 to i64, !dbg !3130
  %mul14 = mul i64 %conv13, 48, !dbg !3131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 %mul14, i1 false), !dbg !3128
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3132
  %30 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3133
  %31 = bitcast %struct.MTFace* %30 to i8*, !dbg !3133
  call void %29(i8* %31), !dbg !3132
  br label %if.end, !dbg !3134

if.end:                                           ; preds = %if.then9, %if.then3
  %32 = load i32, i32* %n.addr, align 4, !dbg !3135
  %add15 = add nsw i32 %32, 1, !dbg !3136
  %33 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3137
  %totmtface16 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %33, i32 0, i32 4, !dbg !3138
  store i32 %add15, i32* %totmtface16, align 8, !dbg !3139
  br label %if.end17, !dbg !3140

if.end17:                                         ; preds = %if.end, %if.then
  br label %if.end29, !dbg !3141

if.else:                                          ; preds = %entry
  %34 = load i32, i32* %n.addr, align 4, !dbg !3142
  %35 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3145
  %totmtface18 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %35, i32 0, i32 4, !dbg !3146
  %36 = load i32, i32* %totmtface18, align 8, !dbg !3146
  %cmp19 = icmp sge i32 %34, %36, !dbg !3147
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !3148

if.then21:                                        ; preds = %if.else
  store %struct.MTFace* null, %struct.MTFace** %retval, align 8, !dbg !3149
  br label %return, !dbg !3149

if.end22:                                         ; preds = %if.else
  %37 = load i8**, i8*** %name.addr, align 8, !dbg !3150
  %tobool23 = icmp ne i8** %37, null, !dbg !3150
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !3152

if.then24:                                        ; preds = %if.end22
  %38 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3153
  %mtface25 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %38, i32 0, i32 23, !dbg !3154
  %39 = load [64 x i8]*, [64 x i8]** %mtface25, align 8, !dbg !3154
  %40 = load i32, i32* %n.addr, align 4, !dbg !3155
  %idxprom26 = sext i32 %40 to i64, !dbg !3153
  %arrayidx27 = getelementptr inbounds [64 x i8], [64 x i8]* %39, i64 %idxprom26, !dbg !3153
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx27, i64 0, i64 0, !dbg !3153
  %41 = load i8**, i8*** %name.addr, align 8, !dbg !3156
  store i8* %arraydecay, i8** %41, align 8, !dbg !3157
  br label %if.end28, !dbg !3158

if.end28:                                         ; preds = %if.then24, %if.end22
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end17
  %42 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3159
  %mtface30 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %42, i32 0, i32 1, !dbg !3160
  %43 = load %struct.MTFace*, %struct.MTFace** %mtface30, align 8, !dbg !3160
  %44 = load i32, i32* %index2, align 4, !dbg !3161
  %idx.ext = sext i32 %44 to i64, !dbg !3162
  %add.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %43, i64 %idx.ext, !dbg !3162
  store %struct.MTFace* %add.ptr, %struct.MTFace** %retval, align 8, !dbg !3163
  br label %return, !dbg !3163

return:                                           ; preds = %if.end29, %if.then21
  %45 = load %struct.MTFace*, %struct.MTFace** %retval, align 8, !dbg !3164
  ret %struct.MTFace* %45, !dbg !3164
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MCol* @RE_vlakren_get_mcol(%struct.ObjectRen* %obr, %struct.VlakRen* %vlr, i32 %n, i8** %name, i32 %verify) #0 !dbg !3165 {
entry:
  %retval = alloca %struct.MCol*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %n.addr = alloca i32, align 4
  %name.addr = alloca i8**, align 8
  %verify.addr = alloca i32, align 4
  %node = alloca %struct.VlakTableNode*, align 8
  %nr = alloca i32, align 4
  %vlakindex = alloca i32, align 4
  %index2 = alloca i32, align 4
  %mcol = alloca %struct.MCol*, align 8
  %size = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !3168, metadata !DIExpression()), !dbg !3169
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !3170, metadata !DIExpression()), !dbg !3171
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3172, metadata !DIExpression()), !dbg !3173
  store i8** %name, i8*** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %name.addr, metadata !3174, metadata !DIExpression()), !dbg !3175
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !3176, metadata !DIExpression()), !dbg !3177
  call void @llvm.dbg.declare(metadata %struct.VlakTableNode** %node, metadata !3178, metadata !DIExpression()), !dbg !3179
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !3180, metadata !DIExpression()), !dbg !3181
  %0 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3182
  %index = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %0, i32 0, i32 9, !dbg !3183
  %1 = load i32, i32* %index, align 4, !dbg !3183
  %shr = ashr i32 %1, 8, !dbg !3184
  store i32 %shr, i32* %nr, align 4, !dbg !3181
  call void @llvm.dbg.declare(metadata i32* %vlakindex, metadata !3185, metadata !DIExpression()), !dbg !3186
  %2 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3187
  %index1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %2, i32 0, i32 9, !dbg !3188
  %3 = load i32, i32* %index1, align 4, !dbg !3188
  %and = and i32 %3, 255, !dbg !3189
  store i32 %and, i32* %vlakindex, align 4, !dbg !3186
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !3190, metadata !DIExpression()), !dbg !3191
  %4 = load i32, i32* %n.addr, align 4, !dbg !3192
  %shl = shl i32 %4, 8, !dbg !3193
  %5 = load i32, i32* %vlakindex, align 4, !dbg !3194
  %add = add nsw i32 %shl, %5, !dbg !3195
  store i32 %add, i32* %index2, align 4, !dbg !3191
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3196
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 19, !dbg !3197
  %7 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !3197
  %8 = load i32, i32* %nr, align 4, !dbg !3198
  %idxprom = sext i32 %8 to i64, !dbg !3196
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %7, i64 %idxprom, !dbg !3196
  store %struct.VlakTableNode* %arrayidx, %struct.VlakTableNode** %node, align 8, !dbg !3199
  %9 = load i32, i32* %verify.addr, align 4, !dbg !3200
  %tobool = icmp ne i32 %9, 0, !dbg !3200
  br i1 %tobool, label %if.then, label %if.else, !dbg !3202

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %n.addr, align 4, !dbg !3203
  %11 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3206
  %totmcol = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %11, i32 0, i32 5, !dbg !3207
  %12 = load i32, i32* %totmcol, align 4, !dbg !3207
  %cmp = icmp sge i32 %10, %12, !dbg !3208
  br i1 %cmp, label %if.then3, label %if.end19, !dbg !3209

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !3210, metadata !DIExpression()), !dbg !3214
  %13 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3215
  %mcol4 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %13, i32 0, i32 2, !dbg !3216
  %14 = load %struct.MCol*, %struct.MCol** %mcol4, align 8, !dbg !3216
  store %struct.MCol* %14, %struct.MCol** %mcol, align 8, !dbg !3214
  call void @llvm.dbg.declare(metadata i32* %size, metadata !3217, metadata !DIExpression()), !dbg !3218
  %15 = load i32, i32* %n.addr, align 4, !dbg !3219
  %add5 = add nsw i32 %15, 1, !dbg !3220
  %mul = mul nsw i32 %add5, 256, !dbg !3221
  store i32 %mul, i32* %size, align 4, !dbg !3218
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3222
  %17 = load i32, i32* %size, align 4, !dbg !3223
  %conv = sext i32 %17 to i64, !dbg !3223
  %mul6 = mul i64 %conv, 4, !dbg !3224
  %mul7 = mul i64 %mul6, 4, !dbg !3225
  %call = call i8* %16(i64 %mul7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)), !dbg !3222
  %18 = bitcast i8* %call to %struct.MCol*, !dbg !3222
  %19 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3226
  %mcol8 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %19, i32 0, i32 2, !dbg !3227
  store %struct.MCol* %18, %struct.MCol** %mcol8, align 8, !dbg !3228
  %20 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !3229
  %tobool9 = icmp ne %struct.MCol* %20, null, !dbg !3229
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !3231

if.then10:                                        ; preds = %if.then3
  %21 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3232
  %totmcol11 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %21, i32 0, i32 5, !dbg !3234
  %22 = load i32, i32* %totmcol11, align 4, !dbg !3234
  %mul12 = mul nsw i32 %22, 256, !dbg !3235
  store i32 %mul12, i32* %size, align 4, !dbg !3236
  %23 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3237
  %mcol13 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %23, i32 0, i32 2, !dbg !3238
  %24 = load %struct.MCol*, %struct.MCol** %mcol13, align 8, !dbg !3238
  %25 = bitcast %struct.MCol* %24 to i8*, !dbg !3239
  %26 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !3240
  %27 = bitcast %struct.MCol* %26 to i8*, !dbg !3239
  %28 = load i32, i32* %size, align 4, !dbg !3241
  %conv14 = sext i32 %28 to i64, !dbg !3241
  %mul15 = mul i64 %conv14, 4, !dbg !3242
  %mul16 = mul i64 %mul15, 4, !dbg !3243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %27, i64 %mul16, i1 false), !dbg !3239
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3244
  %30 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !3245
  %31 = bitcast %struct.MCol* %30 to i8*, !dbg !3245
  call void %29(i8* %31), !dbg !3244
  br label %if.end, !dbg !3246

if.end:                                           ; preds = %if.then10, %if.then3
  %32 = load i32, i32* %n.addr, align 4, !dbg !3247
  %add17 = add nsw i32 %32, 1, !dbg !3248
  %33 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3249
  %totmcol18 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %33, i32 0, i32 5, !dbg !3250
  store i32 %add17, i32* %totmcol18, align 4, !dbg !3251
  br label %if.end19, !dbg !3252

if.end19:                                         ; preds = %if.end, %if.then
  br label %if.end31, !dbg !3253

if.else:                                          ; preds = %entry
  %34 = load i32, i32* %n.addr, align 4, !dbg !3254
  %35 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3257
  %totmcol20 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %35, i32 0, i32 5, !dbg !3258
  %36 = load i32, i32* %totmcol20, align 4, !dbg !3258
  %cmp21 = icmp sge i32 %34, %36, !dbg !3259
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !3260

if.then23:                                        ; preds = %if.else
  store %struct.MCol* null, %struct.MCol** %retval, align 8, !dbg !3261
  br label %return, !dbg !3261

if.end24:                                         ; preds = %if.else
  %37 = load i8**, i8*** %name.addr, align 8, !dbg !3262
  %tobool25 = icmp ne i8** %37, null, !dbg !3262
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !3264

if.then26:                                        ; preds = %if.end24
  %38 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3265
  %mcol27 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %38, i32 0, i32 24, !dbg !3266
  %39 = load [64 x i8]*, [64 x i8]** %mcol27, align 8, !dbg !3266
  %40 = load i32, i32* %n.addr, align 4, !dbg !3267
  %idxprom28 = sext i32 %40 to i64, !dbg !3265
  %arrayidx29 = getelementptr inbounds [64 x i8], [64 x i8]* %39, i64 %idxprom28, !dbg !3265
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx29, i64 0, i64 0, !dbg !3265
  %41 = load i8**, i8*** %name.addr, align 8, !dbg !3268
  store i8* %arraydecay, i8** %41, align 8, !dbg !3269
  br label %if.end30, !dbg !3270

if.end30:                                         ; preds = %if.then26, %if.end24
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end19
  %42 = load %struct.VlakTableNode*, %struct.VlakTableNode** %node, align 8, !dbg !3271
  %mcol32 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %42, i32 0, i32 2, !dbg !3272
  %43 = load %struct.MCol*, %struct.MCol** %mcol32, align 8, !dbg !3272
  %44 = load i32, i32* %index2, align 4, !dbg !3273
  %mul33 = mul nsw i32 %44, 4, !dbg !3274
  %idx.ext = sext i32 %mul33 to i64, !dbg !3275
  %add.ptr = getelementptr inbounds %struct.MCol, %struct.MCol* %43, i64 %idx.ext, !dbg !3275
  store %struct.MCol* %add.ptr, %struct.MCol** %retval, align 8, !dbg !3276
  br label %return, !dbg !3276

return:                                           ; preds = %if.end31, %if.then23
  %45 = load %struct.MCol*, %struct.MCol** %retval, align 8, !dbg !3277
  ret %struct.MCol* %45, !dbg !3277
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @RE_vlakren_get_origindex(%struct.ObjectRen* %obr, %struct.VlakRen* %vlak, i32 %verify) #0 !dbg !3278 {
entry:
  %retval = alloca i32*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlak.addr = alloca %struct.VlakRen*, align 8
  %verify.addr = alloca i32, align 4
  %origindex = alloca i32*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !3281, metadata !DIExpression()), !dbg !3282
  store %struct.VlakRen* %vlak, %struct.VlakRen** %vlak.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlak.addr, metadata !3283, metadata !DIExpression()), !dbg !3284
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !3285, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.declare(metadata i32** %origindex, metadata !3287, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !3289, metadata !DIExpression()), !dbg !3290
  %0 = load %struct.VlakRen*, %struct.VlakRen** %vlak.addr, align 8, !dbg !3291
  %index = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %0, i32 0, i32 9, !dbg !3292
  %1 = load i32, i32* %index, align 4, !dbg !3292
  %shr = ashr i32 %1, 8, !dbg !3293
  store i32 %shr, i32* %nr, align 4, !dbg !3290
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3294
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 19, !dbg !3295
  %3 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !3295
  %4 = load i32, i32* %nr, align 4, !dbg !3296
  %idxprom = sext i32 %4 to i64, !dbg !3294
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %3, i64 %idxprom, !dbg !3294
  %origindex1 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 3, !dbg !3297
  %5 = load i32*, i32** %origindex1, align 8, !dbg !3297
  store i32* %5, i32** %origindex, align 8, !dbg !3298
  %6 = load i32*, i32** %origindex, align 8, !dbg !3299
  %cmp = icmp eq i32* %6, null, !dbg !3301
  br i1 %cmp, label %if.then, label %if.end7, !dbg !3302

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !3303
  %tobool = icmp ne i32 %7, 0, !dbg !3303
  br i1 %tobool, label %if.then2, label %if.else, !dbg !3306

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3307
  %call = call i8* %8(i64 1024, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)), !dbg !3307
  %9 = bitcast i8* %call to i32*, !dbg !3307
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3308
  %vlaknodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 19, !dbg !3309
  %11 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes3, align 8, !dbg !3309
  %12 = load i32, i32* %nr, align 4, !dbg !3310
  %idxprom4 = sext i32 %12 to i64, !dbg !3308
  %arrayidx5 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %11, i64 %idxprom4, !dbg !3308
  %origindex6 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx5, i32 0, i32 3, !dbg !3311
  store i32* %9, i32** %origindex6, align 8, !dbg !3312
  store i32* %9, i32** %origindex, align 8, !dbg !3313
  br label %if.end, !dbg !3314

if.else:                                          ; preds = %if.then
  store i32* null, i32** %retval, align 8, !dbg !3315
  br label %return, !dbg !3315

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !3316

if.end7:                                          ; preds = %if.end, %entry
  %13 = load i32*, i32** %origindex, align 8, !dbg !3317
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlak.addr, align 8, !dbg !3318
  %index8 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 9, !dbg !3319
  %15 = load i32, i32* %index8, align 4, !dbg !3319
  %and = and i32 %15, 255, !dbg !3320
  %mul = mul nsw i32 %and, 1, !dbg !3321
  %idx.ext = sext i32 %mul to i64, !dbg !3322
  %add.ptr = getelementptr inbounds i32, i32* %13, i64 %idx.ext, !dbg !3322
  store i32* %add.ptr, i32** %retval, align 8, !dbg !3323
  br label %return, !dbg !3323

return:                                           ; preds = %if.end7, %if.else
  %16 = load i32*, i32** %retval, align 8, !dbg !3324
  ret i32* %16, !dbg !3324
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_vlakren_get_surfnor(%struct.ObjectRen* %obr, %struct.VlakRen* %vlak, i32 %verify) #0 !dbg !3325 {
entry:
  %retval = alloca float*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlak.addr = alloca %struct.VlakRen*, align 8
  %verify.addr = alloca i32, align 4
  %surfnor = alloca float*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !3328, metadata !DIExpression()), !dbg !3329
  store %struct.VlakRen* %vlak, %struct.VlakRen** %vlak.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlak.addr, metadata !3330, metadata !DIExpression()), !dbg !3331
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !3332, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.declare(metadata float** %surfnor, metadata !3334, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !3336, metadata !DIExpression()), !dbg !3337
  %0 = load %struct.VlakRen*, %struct.VlakRen** %vlak.addr, align 8, !dbg !3338
  %index = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %0, i32 0, i32 9, !dbg !3339
  %1 = load i32, i32* %index, align 4, !dbg !3339
  %shr = ashr i32 %1, 8, !dbg !3340
  store i32 %shr, i32* %nr, align 4, !dbg !3337
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3341
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 19, !dbg !3342
  %3 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !3342
  %4 = load i32, i32* %nr, align 4, !dbg !3343
  %idxprom = sext i32 %4 to i64, !dbg !3341
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %3, i64 %idxprom, !dbg !3341
  %surfnor1 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 6, !dbg !3344
  %5 = load float*, float** %surfnor1, align 8, !dbg !3344
  store float* %5, float** %surfnor, align 8, !dbg !3345
  %6 = load float*, float** %surfnor, align 8, !dbg !3346
  %cmp = icmp eq float* %6, null, !dbg !3348
  br i1 %cmp, label %if.then, label %if.end7, !dbg !3349

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !3350
  %tobool = icmp ne i32 %7, 0, !dbg !3350
  br i1 %tobool, label %if.then2, label %if.else, !dbg !3353

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3354
  %call = call i8* %8(i64 3072, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0)), !dbg !3354
  %9 = bitcast i8* %call to float*, !dbg !3354
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3355
  %vlaknodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 19, !dbg !3356
  %11 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes3, align 8, !dbg !3356
  %12 = load i32, i32* %nr, align 4, !dbg !3357
  %idxprom4 = sext i32 %12 to i64, !dbg !3355
  %arrayidx5 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %11, i64 %idxprom4, !dbg !3355
  %surfnor6 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx5, i32 0, i32 6, !dbg !3358
  store float* %9, float** %surfnor6, align 8, !dbg !3359
  store float* %9, float** %surfnor, align 8, !dbg !3360
  br label %if.end, !dbg !3361

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !3362
  br label %return, !dbg !3362

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !3363

if.end7:                                          ; preds = %if.end, %entry
  %13 = load float*, float** %surfnor, align 8, !dbg !3364
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlak.addr, align 8, !dbg !3365
  %index8 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 9, !dbg !3366
  %15 = load i32, i32* %index8, align 4, !dbg !3366
  %and = and i32 %15, 255, !dbg !3367
  %mul = mul nsw i32 %and, 3, !dbg !3368
  %idx.ext = sext i32 %mul to i64, !dbg !3369
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.ext, !dbg !3369
  store float* %add.ptr, float** %retval, align 8, !dbg !3370
  br label %return, !dbg !3370

return:                                           ; preds = %if.end7, %if.else
  %16 = load float*, float** %retval, align 8, !dbg !3371
  ret float* %16, !dbg !3371
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_vlakren_get_nmap_tangent(%struct.ObjectRen* %obr, %struct.VlakRen* %vlak, i32 %verify) #0 !dbg !3372 {
entry:
  %retval = alloca float*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlak.addr = alloca %struct.VlakRen*, align 8
  %verify.addr = alloca i32, align 4
  %tangent = alloca float*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !3373, metadata !DIExpression()), !dbg !3374
  store %struct.VlakRen* %vlak, %struct.VlakRen** %vlak.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlak.addr, metadata !3375, metadata !DIExpression()), !dbg !3376
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !3377, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.declare(metadata float** %tangent, metadata !3379, metadata !DIExpression()), !dbg !3380
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !3381, metadata !DIExpression()), !dbg !3382
  %0 = load %struct.VlakRen*, %struct.VlakRen** %vlak.addr, align 8, !dbg !3383
  %index = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %0, i32 0, i32 9, !dbg !3384
  %1 = load i32, i32* %index, align 4, !dbg !3384
  %shr = ashr i32 %1, 8, !dbg !3385
  store i32 %shr, i32* %nr, align 4, !dbg !3382
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3386
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 19, !dbg !3387
  %3 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !3387
  %4 = load i32, i32* %nr, align 4, !dbg !3388
  %idxprom = sext i32 %4 to i64, !dbg !3386
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %3, i64 %idxprom, !dbg !3386
  %tangent1 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 7, !dbg !3389
  %5 = load float*, float** %tangent1, align 8, !dbg !3389
  store float* %5, float** %tangent, align 8, !dbg !3390
  %6 = load float*, float** %tangent, align 8, !dbg !3391
  %cmp = icmp eq float* %6, null, !dbg !3393
  br i1 %cmp, label %if.then, label %if.end7, !dbg !3394

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !3395
  %tobool = icmp ne i32 %7, 0, !dbg !3395
  br i1 %tobool, label %if.then2, label %if.else, !dbg !3398

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3399
  %call = call i8* %8(i64 16384, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)), !dbg !3399
  %9 = bitcast i8* %call to float*, !dbg !3399
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3400
  %vlaknodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 19, !dbg !3401
  %11 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes3, align 8, !dbg !3401
  %12 = load i32, i32* %nr, align 4, !dbg !3402
  %idxprom4 = sext i32 %12 to i64, !dbg !3400
  %arrayidx5 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %11, i64 %idxprom4, !dbg !3400
  %tangent6 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx5, i32 0, i32 7, !dbg !3403
  store float* %9, float** %tangent6, align 8, !dbg !3404
  store float* %9, float** %tangent, align 8, !dbg !3405
  br label %if.end, !dbg !3406

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !3407
  br label %return, !dbg !3407

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !3408

if.end7:                                          ; preds = %if.end, %entry
  %13 = load float*, float** %tangent, align 8, !dbg !3409
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlak.addr, align 8, !dbg !3410
  %index8 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 9, !dbg !3411
  %15 = load i32, i32* %index8, align 4, !dbg !3411
  %and = and i32 %15, 255, !dbg !3412
  %mul = mul nsw i32 %and, 16, !dbg !3413
  %idx.ext = sext i32 %mul to i64, !dbg !3414
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.ext, !dbg !3414
  store float* %add.ptr, float** %retval, align 8, !dbg !3415
  br label %return, !dbg !3415

return:                                           ; preds = %if.end7, %if.else
  %16 = load float*, float** %retval, align 8, !dbg !3416
  ret float* %16, !dbg !3416
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RadFace** @RE_vlakren_get_radface(%struct.ObjectRen* %obr, %struct.VlakRen* %vlak, i32 %verify) #0 !dbg !3417 {
entry:
  %retval = alloca %struct.RadFace**, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlak.addr = alloca %struct.VlakRen*, align 8
  %verify.addr = alloca i32, align 4
  %radface = alloca %struct.RadFace**, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !3423, metadata !DIExpression()), !dbg !3424
  store %struct.VlakRen* %vlak, %struct.VlakRen** %vlak.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlak.addr, metadata !3425, metadata !DIExpression()), !dbg !3426
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !3427, metadata !DIExpression()), !dbg !3428
  call void @llvm.dbg.declare(metadata %struct.RadFace*** %radface, metadata !3429, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !3431, metadata !DIExpression()), !dbg !3432
  %0 = load %struct.VlakRen*, %struct.VlakRen** %vlak.addr, align 8, !dbg !3433
  %index = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %0, i32 0, i32 9, !dbg !3434
  %1 = load i32, i32* %index, align 4, !dbg !3434
  %shr = ashr i32 %1, 8, !dbg !3435
  store i32 %shr, i32* %nr, align 4, !dbg !3432
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3436
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 19, !dbg !3437
  %3 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !3437
  %4 = load i32, i32* %nr, align 4, !dbg !3438
  %idxprom = sext i32 %4 to i64, !dbg !3436
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %3, i64 %idxprom, !dbg !3436
  %radface1 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 8, !dbg !3439
  %5 = load %struct.RadFace**, %struct.RadFace*** %radface1, align 8, !dbg !3439
  store %struct.RadFace** %5, %struct.RadFace*** %radface, align 8, !dbg !3440
  %6 = load %struct.RadFace**, %struct.RadFace*** %radface, align 8, !dbg !3441
  %cmp = icmp eq %struct.RadFace** %6, null, !dbg !3443
  br i1 %cmp, label %if.then, label %if.end7, !dbg !3444

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !3445
  %tobool = icmp ne i32 %7, 0, !dbg !3445
  br i1 %tobool, label %if.then2, label %if.else, !dbg !3448

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3449
  %call = call i8* %8(i64 2048, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !3449
  %9 = bitcast i8* %call to %struct.RadFace**, !dbg !3449
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3450
  %vlaknodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 19, !dbg !3451
  %11 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes3, align 8, !dbg !3451
  %12 = load i32, i32* %nr, align 4, !dbg !3452
  %idxprom4 = sext i32 %12 to i64, !dbg !3450
  %arrayidx5 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %11, i64 %idxprom4, !dbg !3450
  %radface6 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx5, i32 0, i32 8, !dbg !3453
  store %struct.RadFace** %9, %struct.RadFace*** %radface6, align 8, !dbg !3454
  store %struct.RadFace** %9, %struct.RadFace*** %radface, align 8, !dbg !3455
  br label %if.end, !dbg !3456

if.else:                                          ; preds = %if.then
  store %struct.RadFace** null, %struct.RadFace*** %retval, align 8, !dbg !3457
  br label %return, !dbg !3457

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !3458

if.end7:                                          ; preds = %if.end, %entry
  %13 = load %struct.RadFace**, %struct.RadFace*** %radface, align 8, !dbg !3459
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlak.addr, align 8, !dbg !3460
  %index8 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 9, !dbg !3461
  %15 = load i32, i32* %index8, align 4, !dbg !3461
  %and = and i32 %15, 255, !dbg !3462
  %mul = mul nsw i32 %and, 1, !dbg !3463
  %idx.ext = sext i32 %mul to i64, !dbg !3464
  %add.ptr = getelementptr inbounds %struct.RadFace*, %struct.RadFace** %13, i64 %idx.ext, !dbg !3464
  store %struct.RadFace** %add.ptr, %struct.RadFace*** %retval, align 8, !dbg !3465
  br label %return, !dbg !3465

return:                                           ; preds = %if.end7, %if.else
  %16 = load %struct.RadFace**, %struct.RadFace*** %retval, align 8, !dbg !3466
  ret %struct.RadFace** %16, !dbg !3466
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.VlakRen* @RE_vlakren_copy(%struct.ObjectRen* %obr, %struct.VlakRen* %vlr) #0 !dbg !3467 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %vlr1 = alloca %struct.VlakRen*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %mtface1 = alloca %struct.MTFace*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %mcol1 = alloca %struct.MCol*, align 8
  %surfnor = alloca float*, align 8
  %surfnor1 = alloca float*, align 8
  %tangent = alloca float*, align 8
  %tangent1 = alloca float*, align 8
  %origindex = alloca i32*, align 8
  %origindex1 = alloca i32*, align 8
  %radface = alloca %struct.RadFace**, align 8
  %radface1 = alloca %struct.RadFace**, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %name = alloca i8*, align 8
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !3470, metadata !DIExpression()), !dbg !3471
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !3472, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr1, metadata !3474, metadata !DIExpression()), !dbg !3475
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3476
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3477
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %1, i32 0, i32 11, !dbg !3478
  %2 = load i32, i32* %totvlak, align 4, !dbg !3479
  %inc = add nsw i32 %2, 1, !dbg !3479
  store i32 %inc, i32* %totvlak, align 4, !dbg !3479
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %0, i32 %2), !dbg !3480
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr1, align 8, !dbg !3475
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !3481, metadata !DIExpression()), !dbg !3482
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface1, metadata !3483, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !3485, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol1, metadata !3487, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.declare(metadata float** %surfnor, metadata !3489, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.declare(metadata float** %surfnor1, metadata !3491, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.declare(metadata float** %tangent, metadata !3493, metadata !DIExpression()), !dbg !3494
  call void @llvm.dbg.declare(metadata float** %tangent1, metadata !3495, metadata !DIExpression()), !dbg !3496
  call void @llvm.dbg.declare(metadata i32** %origindex, metadata !3497, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.declare(metadata i32** %origindex1, metadata !3499, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.declare(metadata %struct.RadFace*** %radface, metadata !3501, metadata !DIExpression()), !dbg !3502
  call void @llvm.dbg.declare(metadata %struct.RadFace*** %radface1, metadata !3503, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3505, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3507, metadata !DIExpression()), !dbg !3508
  %3 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3509
  %index1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %3, i32 0, i32 9, !dbg !3510
  %4 = load i32, i32* %index1, align 4, !dbg !3510
  store i32 %4, i32* %index, align 4, !dbg !3508
  call void @llvm.dbg.declare(metadata i8** %name, metadata !3511, metadata !DIExpression()), !dbg !3512
  %5 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3513
  %6 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3514
  %7 = bitcast %struct.VlakRen* %5 to i8*, !dbg !3515
  %8 = bitcast %struct.VlakRen* %6 to i8*, !dbg !3515
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 64, i1 false), !dbg !3515
  %9 = load i32, i32* %index, align 4, !dbg !3516
  %10 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3517
  %index2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %10, i32 0, i32 9, !dbg !3518
  store i32 %9, i32* %index2, align 4, !dbg !3519
  store i32 0, i32* %i, align 4, !dbg !3520
  br label %for.cond, !dbg !3522

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3523
  %12 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3525
  %13 = load i32, i32* %i, align 4, !dbg !3526
  %call3 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %11, %struct.VlakRen* %12, i32 %13, i8** %name, i32 0), !dbg !3527
  store %struct.MTFace* %call3, %struct.MTFace** %mtface, align 8, !dbg !3528
  %cmp = icmp ne %struct.MTFace* %call3, null, !dbg !3529
  br i1 %cmp, label %for.body, label %for.end, !dbg !3530

for.body:                                         ; preds = %for.cond
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3531
  %15 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3533
  %16 = load i32, i32* %i, align 4, !dbg !3534
  %call4 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %14, %struct.VlakRen* %15, i32 %16, i8** %name, i32 1), !dbg !3535
  store %struct.MTFace* %call4, %struct.MTFace** %mtface1, align 8, !dbg !3536
  %17 = load %struct.MTFace*, %struct.MTFace** %mtface1, align 8, !dbg !3537
  %18 = bitcast %struct.MTFace* %17 to i8*, !dbg !3538
  %19 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3539
  %20 = bitcast %struct.MTFace* %19 to i8*, !dbg !3538
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %20, i64 48, i1 false), !dbg !3538
  br label %for.inc, !dbg !3540

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !3541
  %inc5 = add nsw i32 %21, 1, !dbg !3541
  store i32 %inc5, i32* %i, align 4, !dbg !3541
  br label %for.cond, !dbg !3542, !llvm.loop !3543

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3545
  br label %for.cond6, !dbg !3547

for.cond6:                                        ; preds = %for.inc11, %for.end
  %22 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3548
  %23 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3550
  %24 = load i32, i32* %i, align 4, !dbg !3551
  %call7 = call %struct.MCol* @RE_vlakren_get_mcol(%struct.ObjectRen* %22, %struct.VlakRen* %23, i32 %24, i8** %name, i32 0), !dbg !3552
  store %struct.MCol* %call7, %struct.MCol** %mcol, align 8, !dbg !3553
  %cmp8 = icmp ne %struct.MCol* %call7, null, !dbg !3554
  br i1 %cmp8, label %for.body9, label %for.end13, !dbg !3555

for.body9:                                        ; preds = %for.cond6
  %25 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3556
  %26 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3558
  %27 = load i32, i32* %i, align 4, !dbg !3559
  %call10 = call %struct.MCol* @RE_vlakren_get_mcol(%struct.ObjectRen* %25, %struct.VlakRen* %26, i32 %27, i8** %name, i32 1), !dbg !3560
  store %struct.MCol* %call10, %struct.MCol** %mcol1, align 8, !dbg !3561
  %28 = load %struct.MCol*, %struct.MCol** %mcol1, align 8, !dbg !3562
  %29 = bitcast %struct.MCol* %28 to i8*, !dbg !3563
  %30 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !3564
  %31 = bitcast %struct.MCol* %30 to i8*, !dbg !3563
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %31, i64 16, i1 false), !dbg !3563
  br label %for.inc11, !dbg !3565

for.inc11:                                        ; preds = %for.body9
  %32 = load i32, i32* %i, align 4, !dbg !3566
  %inc12 = add nsw i32 %32, 1, !dbg !3566
  store i32 %inc12, i32* %i, align 4, !dbg !3566
  br label %for.cond6, !dbg !3567, !llvm.loop !3568

for.end13:                                        ; preds = %for.cond6
  %33 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3570
  %34 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3571
  %call14 = call i32* @RE_vlakren_get_origindex(%struct.ObjectRen* %33, %struct.VlakRen* %34, i32 0), !dbg !3572
  store i32* %call14, i32** %origindex, align 8, !dbg !3573
  %35 = load i32*, i32** %origindex, align 8, !dbg !3574
  %tobool = icmp ne i32* %35, null, !dbg !3574
  br i1 %tobool, label %if.then, label %if.end, !dbg !3576

if.then:                                          ; preds = %for.end13
  %36 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3577
  %37 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3579
  %call15 = call i32* @RE_vlakren_get_origindex(%struct.ObjectRen* %36, %struct.VlakRen* %37, i32 1), !dbg !3580
  store i32* %call15, i32** %origindex1, align 8, !dbg !3581
  %38 = load i32*, i32** %origindex1, align 8, !dbg !3582
  %39 = bitcast i32* %38 to i8*, !dbg !3583
  %40 = load i32*, i32** %origindex, align 8, !dbg !3584
  %41 = bitcast i32* %40 to i8*, !dbg !3583
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %41, i64 4, i1 false), !dbg !3583
  br label %if.end, !dbg !3585

if.end:                                           ; preds = %if.then, %for.end13
  %42 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3586
  %43 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3587
  %call16 = call float* @RE_vlakren_get_surfnor(%struct.ObjectRen* %42, %struct.VlakRen* %43, i32 0), !dbg !3588
  store float* %call16, float** %surfnor, align 8, !dbg !3589
  %44 = load float*, float** %surfnor, align 8, !dbg !3590
  %tobool17 = icmp ne float* %44, null, !dbg !3590
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !3592

if.then18:                                        ; preds = %if.end
  %45 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3593
  %46 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3595
  %call19 = call float* @RE_vlakren_get_surfnor(%struct.ObjectRen* %45, %struct.VlakRen* %46, i32 1), !dbg !3596
  store float* %call19, float** %surfnor1, align 8, !dbg !3597
  %47 = load float*, float** %surfnor1, align 8, !dbg !3598
  %48 = load float*, float** %surfnor, align 8, !dbg !3599
  call void @copy_v3_v3(float* %47, float* %48), !dbg !3600
  br label %if.end20, !dbg !3601

if.end20:                                         ; preds = %if.then18, %if.end
  %49 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3602
  %50 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3603
  %call21 = call float* @RE_vlakren_get_nmap_tangent(%struct.ObjectRen* %49, %struct.VlakRen* %50, i32 0), !dbg !3604
  store float* %call21, float** %tangent, align 8, !dbg !3605
  %51 = load float*, float** %tangent, align 8, !dbg !3606
  %tobool22 = icmp ne float* %51, null, !dbg !3606
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !3608

if.then23:                                        ; preds = %if.end20
  %52 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3609
  %53 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3611
  %call24 = call float* @RE_vlakren_get_nmap_tangent(%struct.ObjectRen* %52, %struct.VlakRen* %53, i32 1), !dbg !3612
  store float* %call24, float** %tangent1, align 8, !dbg !3613
  %54 = load float*, float** %tangent1, align 8, !dbg !3614
  %55 = bitcast float* %54 to i8*, !dbg !3615
  %56 = load float*, float** %tangent, align 8, !dbg !3616
  %57 = bitcast float* %56 to i8*, !dbg !3615
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %57, i64 64, i1 false), !dbg !3615
  br label %if.end25, !dbg !3617

if.end25:                                         ; preds = %if.then23, %if.end20
  %58 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3618
  %59 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !3619
  %call26 = call %struct.RadFace** @RE_vlakren_get_radface(%struct.ObjectRen* %58, %struct.VlakRen* %59, i32 0), !dbg !3620
  store %struct.RadFace** %call26, %struct.RadFace*** %radface, align 8, !dbg !3621
  %60 = load %struct.RadFace**, %struct.RadFace*** %radface, align 8, !dbg !3622
  %tobool27 = icmp ne %struct.RadFace** %60, null, !dbg !3622
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !3624

if.then28:                                        ; preds = %if.end25
  %61 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3625
  %62 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3627
  %call29 = call %struct.RadFace** @RE_vlakren_get_radface(%struct.ObjectRen* %61, %struct.VlakRen* %62, i32 1), !dbg !3628
  store %struct.RadFace** %call29, %struct.RadFace*** %radface1, align 8, !dbg !3629
  %63 = load %struct.RadFace**, %struct.RadFace*** %radface, align 8, !dbg !3630
  %64 = load %struct.RadFace*, %struct.RadFace** %63, align 8, !dbg !3631
  %65 = load %struct.RadFace**, %struct.RadFace*** %radface1, align 8, !dbg !3632
  store %struct.RadFace* %64, %struct.RadFace** %65, align 8, !dbg !3633
  br label %if.end30, !dbg !3634

if.end30:                                         ; preds = %if.then28, %if.end25
  %66 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !3635
  ret %struct.VlakRen* %66, !dbg !3636
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %obr, i32 %nr) #0 !dbg !3637 {
entry:
  %retval = alloca %struct.VlakRen*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %nr.addr = alloca i32, align 4
  %temp = alloca %struct.VlakTableNode*, align 8
  %v = alloca %struct.VlakRen*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !3640, metadata !DIExpression()), !dbg !3641
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !3642, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.declare(metadata %struct.VlakTableNode** %temp, metadata !3644, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %v, metadata !3646, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3648, metadata !DIExpression()), !dbg !3649
  %0 = load i32, i32* %nr.addr, align 4, !dbg !3650
  %cmp = icmp slt i32 %0, 0, !dbg !3652
  br i1 %cmp, label %if.then, label %if.end, !dbg !3653

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %nr.addr, align 4, !dbg !3654
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i32 %1), !dbg !3656
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3657
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 19, !dbg !3658
  %3 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !3658
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %3, i64 0, !dbg !3657
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !3659
  %4 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !3659
  store %struct.VlakRen* %4, %struct.VlakRen** %retval, align 8, !dbg !3660
  br label %return, !dbg !3660

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %nr.addr, align 4, !dbg !3661
  %shr = ashr i32 %5, 8, !dbg !3662
  store i32 %shr, i32* %a, align 4, !dbg !3663
  %6 = load i32, i32* %a, align 4, !dbg !3664
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3666
  %vlaknodeslen = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %7, i32 0, i32 15, !dbg !3667
  %8 = load i32, i32* %vlaknodeslen, align 4, !dbg !3667
  %sub = sub nsw i32 %8, 1, !dbg !3668
  %cmp1 = icmp sge i32 %6, %sub, !dbg !3669
  br i1 %cmp1, label %if.then2, label %if.end20, !dbg !3670

if.then2:                                         ; preds = %if.end
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3671
  %vlaknodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 19, !dbg !3673
  %10 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes3, align 8, !dbg !3673
  store %struct.VlakTableNode* %10, %struct.VlakTableNode** %temp, align 8, !dbg !3674
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3675
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3676
  %vlaknodeslen4 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %12, i32 0, i32 15, !dbg !3677
  %13 = load i32, i32* %vlaknodeslen4, align 4, !dbg !3677
  %add = add nsw i32 %13, 1024, !dbg !3678
  %conv = sext i32 %add to i64, !dbg !3679
  %mul = mul i64 64, %conv, !dbg !3680
  %call5 = call i8* %11(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0)), !dbg !3675
  %14 = bitcast i8* %call5 to %struct.VlakTableNode*, !dbg !3675
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3681
  %vlaknodes6 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %15, i32 0, i32 19, !dbg !3682
  store %struct.VlakTableNode* %14, %struct.VlakTableNode** %vlaknodes6, align 8, !dbg !3683
  %16 = load %struct.VlakTableNode*, %struct.VlakTableNode** %temp, align 8, !dbg !3684
  %tobool = icmp ne %struct.VlakTableNode* %16, null, !dbg !3684
  br i1 %tobool, label %if.then7, label %if.end12, !dbg !3686

if.then7:                                         ; preds = %if.then2
  %17 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3687
  %vlaknodes8 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %17, i32 0, i32 19, !dbg !3688
  %18 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes8, align 8, !dbg !3688
  %19 = bitcast %struct.VlakTableNode* %18 to i8*, !dbg !3689
  %20 = load %struct.VlakTableNode*, %struct.VlakTableNode** %temp, align 8, !dbg !3690
  %21 = bitcast %struct.VlakTableNode* %20 to i8*, !dbg !3689
  %22 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3691
  %vlaknodeslen9 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %22, i32 0, i32 15, !dbg !3692
  %23 = load i32, i32* %vlaknodeslen9, align 4, !dbg !3692
  %conv10 = sext i32 %23 to i64, !dbg !3691
  %mul11 = mul i64 %conv10, 64, !dbg !3693
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %21, i64 %mul11, i1 false), !dbg !3689
  br label %if.end12, !dbg !3689

if.end12:                                         ; preds = %if.then7, %if.then2
  %24 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3694
  %vlaknodes13 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %24, i32 0, i32 19, !dbg !3695
  %25 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes13, align 8, !dbg !3695
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3696
  %vlaknodeslen14 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %26, i32 0, i32 15, !dbg !3697
  %27 = load i32, i32* %vlaknodeslen14, align 4, !dbg !3697
  %idx.ext = sext i32 %27 to i64, !dbg !3698
  %add.ptr = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %25, i64 %idx.ext, !dbg !3698
  %28 = bitcast %struct.VlakTableNode* %add.ptr to i8*, !dbg !3699
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 65536, i1 false), !dbg !3699
  %29 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3700
  %vlaknodeslen15 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %29, i32 0, i32 15, !dbg !3701
  %30 = load i32, i32* %vlaknodeslen15, align 4, !dbg !3702
  %add16 = add nsw i32 %30, 1024, !dbg !3702
  store i32 %add16, i32* %vlaknodeslen15, align 4, !dbg !3702
  %31 = load %struct.VlakTableNode*, %struct.VlakTableNode** %temp, align 8, !dbg !3703
  %tobool17 = icmp ne %struct.VlakTableNode* %31, null, !dbg !3703
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !3705

if.then18:                                        ; preds = %if.end12
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3706
  %33 = load %struct.VlakTableNode*, %struct.VlakTableNode** %temp, align 8, !dbg !3707
  %34 = bitcast %struct.VlakTableNode* %33 to i8*, !dbg !3707
  call void %32(i8* %34), !dbg !3706
  br label %if.end19, !dbg !3706

if.end19:                                         ; preds = %if.then18, %if.end12
  br label %if.end20, !dbg !3708

if.end20:                                         ; preds = %if.end19, %if.end
  %35 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3709
  %vlaknodes21 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %35, i32 0, i32 19, !dbg !3710
  %36 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes21, align 8, !dbg !3710
  %37 = load i32, i32* %a, align 4, !dbg !3711
  %idxprom = sext i32 %37 to i64, !dbg !3709
  %arrayidx22 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %36, i64 %idxprom, !dbg !3709
  %vlak23 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx22, i32 0, i32 0, !dbg !3712
  %38 = load %struct.VlakRen*, %struct.VlakRen** %vlak23, align 8, !dbg !3712
  store %struct.VlakRen* %38, %struct.VlakRen** %v, align 8, !dbg !3713
  %39 = load %struct.VlakRen*, %struct.VlakRen** %v, align 8, !dbg !3714
  %cmp24 = icmp eq %struct.VlakRen* %39, null, !dbg !3716
  br i1 %cmp24, label %if.then26, label %if.end37, !dbg !3717

if.then26:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3718, metadata !DIExpression()), !dbg !3720
  %40 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3721
  %call27 = call i8* %40(i64 16384, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0)), !dbg !3721
  %41 = bitcast i8* %call27 to %struct.VlakRen*, !dbg !3722
  store %struct.VlakRen* %41, %struct.VlakRen** %v, align 8, !dbg !3723
  %42 = load %struct.VlakRen*, %struct.VlakRen** %v, align 8, !dbg !3724
  %43 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !3725
  %vlaknodes28 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %43, i32 0, i32 19, !dbg !3726
  %44 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes28, align 8, !dbg !3726
  %45 = load i32, i32* %a, align 4, !dbg !3727
  %idxprom29 = sext i32 %45 to i64, !dbg !3725
  %arrayidx30 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %44, i64 %idxprom29, !dbg !3725
  %vlak31 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx30, i32 0, i32 0, !dbg !3728
  store %struct.VlakRen* %42, %struct.VlakRen** %vlak31, align 8, !dbg !3729
  %46 = load i32, i32* %nr.addr, align 4, !dbg !3730
  %and = and i32 %46, -256, !dbg !3732
  store i32 %and, i32* %i, align 4, !dbg !3733
  store i32 0, i32* %a, align 4, !dbg !3734
  br label %for.cond, !dbg !3735

for.cond:                                         ; preds = %for.inc, %if.then26
  %47 = load i32, i32* %a, align 4, !dbg !3736
  %cmp32 = icmp slt i32 %47, 256, !dbg !3738
  br i1 %cmp32, label %for.body, label %for.end, !dbg !3739

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %i, align 4, !dbg !3740
  %49 = load %struct.VlakRen*, %struct.VlakRen** %v, align 8, !dbg !3741
  %50 = load i32, i32* %a, align 4, !dbg !3742
  %idxprom34 = sext i32 %50 to i64, !dbg !3741
  %arrayidx35 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %49, i64 %idxprom34, !dbg !3741
  %index = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %arrayidx35, i32 0, i32 9, !dbg !3743
  store i32 %48, i32* %index, align 4, !dbg !3744
  br label %for.inc, !dbg !3741

for.inc:                                          ; preds = %for.body
  %51 = load i32, i32* %a, align 4, !dbg !3745
  %inc = add nsw i32 %51, 1, !dbg !3745
  store i32 %inc, i32* %a, align 4, !dbg !3745
  %52 = load i32, i32* %i, align 4, !dbg !3746
  %inc36 = add nsw i32 %52, 1, !dbg !3746
  store i32 %inc36, i32* %i, align 4, !dbg !3746
  br label %for.cond, !dbg !3747, !llvm.loop !3748

for.end:                                          ; preds = %for.cond
  br label %if.end37, !dbg !3750

if.end37:                                         ; preds = %for.end, %if.end20
  %53 = load i32, i32* %nr.addr, align 4, !dbg !3751
  %and38 = and i32 %53, 255, !dbg !3752
  %54 = load %struct.VlakRen*, %struct.VlakRen** %v, align 8, !dbg !3753
  %idx.ext39 = sext i32 %and38 to i64, !dbg !3753
  %add.ptr40 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %54, i64 %idx.ext39, !dbg !3753
  store %struct.VlakRen* %add.ptr40, %struct.VlakRen** %v, align 8, !dbg !3753
  %55 = load %struct.VlakRen*, %struct.VlakRen** %v, align 8, !dbg !3754
  store %struct.VlakRen* %55, %struct.VlakRen** %retval, align 8, !dbg !3755
  br label %return, !dbg !3755

return:                                           ; preds = %if.end37, %if.then
  %56 = load %struct.VlakRen*, %struct.VlakRen** %retval, align 8, !dbg !3756
  ret %struct.VlakRen* %56, !dbg !3756
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !3757 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3761, metadata !DIExpression()), !dbg !3762
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3763, metadata !DIExpression()), !dbg !3764
  %0 = load float*, float** %a.addr, align 8, !dbg !3765
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3765
  %1 = load float, float* %arrayidx, align 4, !dbg !3765
  %2 = load float*, float** %r.addr, align 8, !dbg !3766
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3766
  store float %1, float* %arrayidx1, align 4, !dbg !3767
  %3 = load float*, float** %a.addr, align 8, !dbg !3768
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3768
  %4 = load float, float* %arrayidx2, align 4, !dbg !3768
  %5 = load float*, float** %r.addr, align 8, !dbg !3769
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3769
  store float %4, float* %arrayidx3, align 4, !dbg !3770
  %6 = load float*, float** %a.addr, align 8, !dbg !3771
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3771
  %7 = load float, float* %arrayidx4, align 4, !dbg !3771
  %8 = load float*, float** %r.addr, align 8, !dbg !3772
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3772
  store float %7, float* %arrayidx5, align 4, !dbg !3773
  ret void, !dbg !3774
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_vlakren_get_normal(%struct.Render* %UNUSED_re, %struct.ObjectInstanceRen* %obi, %struct.VlakRen* %vlr, float* %r_nor) #0 !dbg !3775 {
entry:
  %UNUSED_re.addr = alloca %struct.Render*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %r_nor.addr = alloca float*, align 8
  %nmat = alloca [3 x float]*, align 8
  store %struct.Render* %UNUSED_re, %struct.Render** %UNUSED_re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %UNUSED_re.addr, metadata !4026, metadata !DIExpression()), !dbg !4027
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !4028, metadata !DIExpression()), !dbg !4029
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !4030, metadata !DIExpression()), !dbg !4031
  store float* %r_nor, float** %r_nor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_nor.addr, metadata !4032, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.declare(metadata [3 x float]** %nmat, metadata !4034, metadata !DIExpression()), !dbg !4035
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !4036
  %nmat1 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i32 0, i32 10, !dbg !4037
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat1, i64 0, i64 0, !dbg !4036
  store [3 x float]* %arraydecay, [3 x float]** %nmat, align 8, !dbg !4035
  %1 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !4038
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %1, i32 0, i32 11, !dbg !4040
  %2 = load i16, i16* %flag, align 8, !dbg !4040
  %conv = sext i16 %2 to i32, !dbg !4038
  %and = and i32 %conv, 3, !dbg !4041
  %tobool = icmp ne i32 %and, 0, !dbg !4041
  br i1 %tobool, label %if.then, label %if.else, !dbg !4042

if.then:                                          ; preds = %entry
  %3 = load float*, float** %r_nor.addr, align 8, !dbg !4043
  %4 = load [3 x float]*, [3 x float]** %nmat, align 8, !dbg !4045
  %5 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !4046
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %5, i32 0, i32 4, !dbg !4047
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !4046
  call void @mul_v3_m3v3(float* %3, [3 x float]* %4, float* %arraydecay2), !dbg !4048
  %6 = load float*, float** %r_nor.addr, align 8, !dbg !4049
  %call = call float @normalize_v3(float* %6), !dbg !4050
  br label %if.end, !dbg !4051

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r_nor.addr, align 8, !dbg !4052
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !4054
  %n3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %8, i32 0, i32 4, !dbg !4055
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %n3, i64 0, i64 0, !dbg !4054
  call void @copy_v3_v3(float* %7, float* %arraydecay4), !dbg !4056
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4057
}

declare dso_local void @mul_v3_m3v3(float*, [3 x float]*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !4058 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4061, metadata !DIExpression()), !dbg !4062
  %0 = load float*, float** %n.addr, align 8, !dbg !4063
  %1 = load float*, float** %n.addr, align 8, !dbg !4064
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !4065
  ret float %call, !dbg !4066
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_set_customdata_names(%struct.ObjectRen* %obr, %struct.CustomData* %data) #0 !dbg !4067 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %data.addr = alloca %struct.CustomData*, align 8
  %layer = alloca %struct.CustomDataLayer*, align 8
  %numtf = alloca i32, align 4
  %numcol = alloca i32, align 4
  %i = alloca i32, align 4
  %mtfn = alloca i32, align 4
  %mcn = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !4070, metadata !DIExpression()), !dbg !4071
  store %struct.CustomData* %data, %struct.CustomData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %data.addr, metadata !4072, metadata !DIExpression()), !dbg !4073
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %layer, metadata !4074, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.declare(metadata i32* %numtf, metadata !4076, metadata !DIExpression()), !dbg !4077
  store i32 0, i32* %numtf, align 4, !dbg !4077
  call void @llvm.dbg.declare(metadata i32* %numcol, metadata !4078, metadata !DIExpression()), !dbg !4079
  store i32 0, i32* %numcol, align 4, !dbg !4079
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4080, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.declare(metadata i32* %mtfn, metadata !4082, metadata !DIExpression()), !dbg !4083
  call void @llvm.dbg.declare(metadata i32* %mcn, metadata !4084, metadata !DIExpression()), !dbg !4085
  %0 = load %struct.CustomData*, %struct.CustomData** %data.addr, align 8, !dbg !4086
  %call = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %0, i32 5), !dbg !4088
  %tobool = icmp ne i8 %call, 0, !dbg !4088
  br i1 %tobool, label %if.then, label %if.end, !dbg !4089

if.then:                                          ; preds = %entry
  %1 = load %struct.CustomData*, %struct.CustomData** %data.addr, align 8, !dbg !4090
  %call1 = call i32 @CustomData_number_of_layers(%struct.CustomData* %1, i32 5), !dbg !4092
  store i32 %call1, i32* %numtf, align 4, !dbg !4093
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4094
  %3 = load i32, i32* %numtf, align 4, !dbg !4095
  %conv = sext i32 %3 to i64, !dbg !4095
  %mul = mul i64 64, %conv, !dbg !4096
  %call2 = call i8* %2(i64 %mul, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0)), !dbg !4094
  %4 = bitcast i8* %call2 to [64 x i8]*, !dbg !4094
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4097
  %mtface = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %5, i32 0, i32 23, !dbg !4098
  store [64 x i8]* %4, [64 x i8]** %mtface, align 8, !dbg !4099
  br label %if.end, !dbg !4100

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.CustomData*, %struct.CustomData** %data.addr, align 8, !dbg !4101
  %call3 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %6, i32 6), !dbg !4103
  %tobool4 = icmp ne i8 %call3, 0, !dbg !4103
  br i1 %tobool4, label %if.then5, label %if.end10, !dbg !4104

if.then5:                                         ; preds = %if.end
  %7 = load %struct.CustomData*, %struct.CustomData** %data.addr, align 8, !dbg !4105
  %call6 = call i32 @CustomData_number_of_layers(%struct.CustomData* %7, i32 6), !dbg !4107
  store i32 %call6, i32* %numcol, align 4, !dbg !4108
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4109
  %9 = load i32, i32* %numcol, align 4, !dbg !4110
  %conv7 = sext i32 %9 to i64, !dbg !4110
  %mul8 = mul i64 64, %conv7, !dbg !4111
  %call9 = call i8* %8(i64 %mul8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)), !dbg !4109
  %10 = bitcast i8* %call9 to [64 x i8]*, !dbg !4109
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4112
  %mcol = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %11, i32 0, i32 24, !dbg !4113
  store [64 x i8]* %10, [64 x i8]** %mcol, align 8, !dbg !4114
  br label %if.end10, !dbg !4115

if.end10:                                         ; preds = %if.then5, %if.end
  store i32 0, i32* %i, align 4, !dbg !4116
  store i32 0, i32* %mtfn, align 4, !dbg !4118
  store i32 0, i32* %mcn, align 4, !dbg !4119
  br label %for.cond, !dbg !4120

for.cond:                                         ; preds = %for.inc, %if.end10
  %12 = load i32, i32* %i, align 4, !dbg !4121
  %13 = load %struct.CustomData*, %struct.CustomData** %data.addr, align 8, !dbg !4123
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %13, i32 0, i32 2, !dbg !4124
  %14 = load i32, i32* %totlayer, align 4, !dbg !4124
  %cmp = icmp slt i32 %12, %14, !dbg !4125
  br i1 %cmp, label %for.body, label %for.end, !dbg !4126

for.body:                                         ; preds = %for.cond
  %15 = load %struct.CustomData*, %struct.CustomData** %data.addr, align 8, !dbg !4127
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %15, i32 0, i32 0, !dbg !4129
  %16 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !4129
  %17 = load i32, i32* %i, align 4, !dbg !4130
  %idxprom = sext i32 %17 to i64, !dbg !4127
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %16, i64 %idxprom, !dbg !4127
  store %struct.CustomDataLayer* %arrayidx, %struct.CustomDataLayer** %layer, align 8, !dbg !4131
  %18 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4132
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %18, i32 0, i32 0, !dbg !4134
  %19 = load i32, i32* %type, align 8, !dbg !4134
  %cmp12 = icmp eq i32 %19, 5, !dbg !4135
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !4136

if.then14:                                        ; preds = %for.body
  %20 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4137
  %mtface15 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %20, i32 0, i32 23, !dbg !4139
  %21 = load [64 x i8]*, [64 x i8]** %mtface15, align 8, !dbg !4139
  %22 = load i32, i32* %mtfn, align 4, !dbg !4140
  %inc = add nsw i32 %22, 1, !dbg !4140
  store i32 %inc, i32* %mtfn, align 4, !dbg !4140
  %idxprom16 = sext i32 %22 to i64, !dbg !4137
  %arrayidx17 = getelementptr inbounds [64 x i8], [64 x i8]* %21, i64 %idxprom16, !dbg !4137
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx17, i64 0, i64 0, !dbg !4137
  %23 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4141
  %name = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %23, i32 0, i32 8, !dbg !4142
  %arraydecay18 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4141
  %call19 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay18, i64 64), !dbg !4143
  %24 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4144
  %active_rnd = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %24, i32 0, i32 4, !dbg !4144
  %25 = load i32, i32* %active_rnd, align 8, !dbg !4144
  %cmp20 = icmp slt i32 %25, 0, !dbg !4144
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !4144

cond.true:                                        ; preds = %if.then14
  br label %cond.end28, !dbg !4144

cond.false:                                       ; preds = %if.then14
  %26 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4144
  %active_rnd22 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %26, i32 0, i32 4, !dbg !4144
  %27 = load i32, i32* %active_rnd22, align 8, !dbg !4144
  %28 = load i32, i32* %numtf, align 4, !dbg !4144
  %cmp23 = icmp sgt i32 %27, %28, !dbg !4144
  br i1 %cmp23, label %cond.true25, label %cond.false26, !dbg !4144

cond.true25:                                      ; preds = %cond.false
  %29 = load i32, i32* %numtf, align 4, !dbg !4144
  br label %cond.end, !dbg !4144

cond.false26:                                     ; preds = %cond.false
  %30 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4144
  %active_rnd27 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %30, i32 0, i32 4, !dbg !4144
  %31 = load i32, i32* %active_rnd27, align 8, !dbg !4144
  br label %cond.end, !dbg !4144

cond.end:                                         ; preds = %cond.false26, %cond.true25
  %cond = phi i32 [ %29, %cond.true25 ], [ %31, %cond.false26 ], !dbg !4144
  br label %cond.end28, !dbg !4144

cond.end28:                                       ; preds = %cond.end, %cond.true
  %cond29 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ], !dbg !4144
  %32 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4145
  %actmtface = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %32, i32 0, i32 25, !dbg !4146
  store i32 %cond29, i32* %actmtface, align 8, !dbg !4147
  %33 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4148
  %active = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %33, i32 0, i32 3, !dbg !4149
  %34 = load i32, i32* %active, align 4, !dbg !4149
  %35 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4150
  %bakemtface = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %35, i32 0, i32 27, !dbg !4151
  store i32 %34, i32* %bakemtface, align 8, !dbg !4152
  br label %if.end58, !dbg !4153

if.else:                                          ; preds = %for.body
  %36 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4154
  %type30 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %36, i32 0, i32 0, !dbg !4156
  %37 = load i32, i32* %type30, align 8, !dbg !4156
  %cmp31 = icmp eq i32 %37, 6, !dbg !4157
  br i1 %cmp31, label %if.then33, label %if.end57, !dbg !4158

if.then33:                                        ; preds = %if.else
  %38 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4159
  %mcol34 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %38, i32 0, i32 24, !dbg !4161
  %39 = load [64 x i8]*, [64 x i8]** %mcol34, align 8, !dbg !4161
  %40 = load i32, i32* %mcn, align 4, !dbg !4162
  %inc35 = add nsw i32 %40, 1, !dbg !4162
  store i32 %inc35, i32* %mcn, align 4, !dbg !4162
  %idxprom36 = sext i32 %40 to i64, !dbg !4159
  %arrayidx37 = getelementptr inbounds [64 x i8], [64 x i8]* %39, i64 %idxprom36, !dbg !4159
  %arraydecay38 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx37, i64 0, i64 0, !dbg !4159
  %41 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4163
  %name39 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %41, i32 0, i32 8, !dbg !4164
  %arraydecay40 = getelementptr inbounds [64 x i8], [64 x i8]* %name39, i64 0, i64 0, !dbg !4163
  %call41 = call i8* @BLI_strncpy(i8* %arraydecay38, i8* %arraydecay40, i64 64), !dbg !4165
  %42 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4166
  %active_rnd42 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %42, i32 0, i32 4, !dbg !4166
  %43 = load i32, i32* %active_rnd42, align 8, !dbg !4166
  %cmp43 = icmp slt i32 %43, 0, !dbg !4166
  br i1 %cmp43, label %cond.true45, label %cond.false46, !dbg !4166

cond.true45:                                      ; preds = %if.then33
  br label %cond.end55, !dbg !4166

cond.false46:                                     ; preds = %if.then33
  %44 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4166
  %active_rnd47 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %44, i32 0, i32 4, !dbg !4166
  %45 = load i32, i32* %active_rnd47, align 8, !dbg !4166
  %46 = load i32, i32* %numcol, align 4, !dbg !4166
  %cmp48 = icmp sgt i32 %45, %46, !dbg !4166
  br i1 %cmp48, label %cond.true50, label %cond.false51, !dbg !4166

cond.true50:                                      ; preds = %cond.false46
  %47 = load i32, i32* %numcol, align 4, !dbg !4166
  br label %cond.end53, !dbg !4166

cond.false51:                                     ; preds = %cond.false46
  %48 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !4166
  %active_rnd52 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %48, i32 0, i32 4, !dbg !4166
  %49 = load i32, i32* %active_rnd52, align 8, !dbg !4166
  br label %cond.end53, !dbg !4166

cond.end53:                                       ; preds = %cond.false51, %cond.true50
  %cond54 = phi i32 [ %47, %cond.true50 ], [ %49, %cond.false51 ], !dbg !4166
  br label %cond.end55, !dbg !4166

cond.end55:                                       ; preds = %cond.end53, %cond.true45
  %cond56 = phi i32 [ 0, %cond.true45 ], [ %cond54, %cond.end53 ], !dbg !4166
  %50 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4167
  %actmcol = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %50, i32 0, i32 26, !dbg !4168
  store i32 %cond56, i32* %actmcol, align 4, !dbg !4169
  br label %if.end57, !dbg !4170

if.end57:                                         ; preds = %cond.end55, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %cond.end28
  br label %for.inc, !dbg !4171

for.inc:                                          ; preds = %if.end58
  %51 = load i32, i32* %i, align 4, !dbg !4172
  %inc59 = add nsw i32 %51, 1, !dbg !4172
  store i32 %inc59, i32* %i, align 4, !dbg !4172
  br label %for.cond, !dbg !4173, !llvm.loop !4174

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4176
}

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #3

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #3

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_strandren_get_surfnor(%struct.ObjectRen* %obr, %struct.StrandRen* %strand, i32 %verify) #0 !dbg !4177 {
entry:
  %retval = alloca float*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %strand.addr = alloca %struct.StrandRen*, align 8
  %verify.addr = alloca i32, align 4
  %surfnor = alloca float*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !4180, metadata !DIExpression()), !dbg !4181
  store %struct.StrandRen* %strand, %struct.StrandRen** %strand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand.addr, metadata !4182, metadata !DIExpression()), !dbg !4183
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !4184, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.declare(metadata float** %surfnor, metadata !4186, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !4188, metadata !DIExpression()), !dbg !4189
  %0 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4190
  %index = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %0, i32 0, i32 5, !dbg !4191
  %1 = load i32, i32* %index, align 4, !dbg !4191
  %shr = ashr i32 %1, 8, !dbg !4192
  store i32 %shr, i32* %nr, align 4, !dbg !4189
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4193
  %strandnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 20, !dbg !4194
  %3 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes, align 8, !dbg !4194
  %4 = load i32, i32* %nr, align 4, !dbg !4195
  %idxprom = sext i32 %4 to i64, !dbg !4193
  %arrayidx = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %3, i64 %idxprom, !dbg !4193
  %surfnor1 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx, i32 0, i32 2, !dbg !4196
  %5 = load float*, float** %surfnor1, align 8, !dbg !4196
  store float* %5, float** %surfnor, align 8, !dbg !4197
  %6 = load float*, float** %surfnor, align 8, !dbg !4198
  %cmp = icmp eq float* %6, null, !dbg !4200
  br i1 %cmp, label %if.then, label %if.end7, !dbg !4201

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !4202
  %tobool = icmp ne i32 %7, 0, !dbg !4202
  br i1 %tobool, label %if.then2, label %if.else, !dbg !4205

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4206
  %call = call i8* %8(i64 3072, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)), !dbg !4206
  %9 = bitcast i8* %call to float*, !dbg !4206
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4207
  %strandnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 20, !dbg !4208
  %11 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes3, align 8, !dbg !4208
  %12 = load i32, i32* %nr, align 4, !dbg !4209
  %idxprom4 = sext i32 %12 to i64, !dbg !4207
  %arrayidx5 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %11, i64 %idxprom4, !dbg !4207
  %surfnor6 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx5, i32 0, i32 2, !dbg !4210
  store float* %9, float** %surfnor6, align 8, !dbg !4211
  store float* %9, float** %surfnor, align 8, !dbg !4212
  br label %if.end, !dbg !4213

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !4214
  br label %return, !dbg !4214

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !4215

if.end7:                                          ; preds = %if.end, %entry
  %13 = load float*, float** %surfnor, align 8, !dbg !4216
  %14 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4217
  %index8 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %14, i32 0, i32 5, !dbg !4218
  %15 = load i32, i32* %index8, align 4, !dbg !4218
  %and = and i32 %15, 255, !dbg !4219
  %mul = mul nsw i32 %and, 3, !dbg !4220
  %idx.ext = sext i32 %mul to i64, !dbg !4221
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.ext, !dbg !4221
  store float* %add.ptr, float** %retval, align 8, !dbg !4222
  br label %return, !dbg !4222

return:                                           ; preds = %if.end7, %if.else
  %16 = load float*, float** %retval, align 8, !dbg !4223
  ret float* %16, !dbg !4223
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_strandren_get_uv(%struct.ObjectRen* %obr, %struct.StrandRen* %strand, i32 %n, i8** %name, i32 %verify) #0 !dbg !4224 {
entry:
  %retval = alloca float*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %strand.addr = alloca %struct.StrandRen*, align 8
  %n.addr = alloca i32, align 4
  %name.addr = alloca i8**, align 8
  %verify.addr = alloca i32, align 4
  %node = alloca %struct.StrandTableNode*, align 8
  %nr = alloca i32, align 4
  %strandindex = alloca i32, align 4
  %index2 = alloca i32, align 4
  %uv = alloca float*, align 8
  %size = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !4227, metadata !DIExpression()), !dbg !4228
  store %struct.StrandRen* %strand, %struct.StrandRen** %strand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand.addr, metadata !4229, metadata !DIExpression()), !dbg !4230
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4231, metadata !DIExpression()), !dbg !4232
  store i8** %name, i8*** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %name.addr, metadata !4233, metadata !DIExpression()), !dbg !4234
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !4235, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.declare(metadata %struct.StrandTableNode** %node, metadata !4237, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !4241, metadata !DIExpression()), !dbg !4242
  %0 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4243
  %index = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %0, i32 0, i32 5, !dbg !4244
  %1 = load i32, i32* %index, align 4, !dbg !4244
  %shr = ashr i32 %1, 8, !dbg !4245
  store i32 %shr, i32* %nr, align 4, !dbg !4242
  call void @llvm.dbg.declare(metadata i32* %strandindex, metadata !4246, metadata !DIExpression()), !dbg !4247
  %2 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4248
  %index1 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %2, i32 0, i32 5, !dbg !4249
  %3 = load i32, i32* %index1, align 4, !dbg !4249
  %and = and i32 %3, 255, !dbg !4250
  store i32 %and, i32* %strandindex, align 4, !dbg !4247
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !4251, metadata !DIExpression()), !dbg !4252
  %4 = load i32, i32* %n.addr, align 4, !dbg !4253
  %shl = shl i32 %4, 8, !dbg !4254
  %5 = load i32, i32* %strandindex, align 4, !dbg !4255
  %add = add nsw i32 %shl, %5, !dbg !4256
  store i32 %add, i32* %index2, align 4, !dbg !4252
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4257
  %strandnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 20, !dbg !4258
  %7 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes, align 8, !dbg !4258
  %8 = load i32, i32* %nr, align 4, !dbg !4259
  %idxprom = sext i32 %8 to i64, !dbg !4257
  %arrayidx = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %7, i64 %idxprom, !dbg !4257
  store %struct.StrandTableNode* %arrayidx, %struct.StrandTableNode** %node, align 8, !dbg !4260
  %9 = load i32, i32* %verify.addr, align 4, !dbg !4261
  %tobool = icmp ne i32 %9, 0, !dbg !4261
  br i1 %tobool, label %if.then, label %if.else, !dbg !4263

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %n.addr, align 4, !dbg !4264
  %11 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4267
  %totuv = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %11, i32 0, i32 7, !dbg !4268
  %12 = load i32, i32* %totuv, align 8, !dbg !4268
  %cmp = icmp sge i32 %10, %12, !dbg !4269
  br i1 %cmp, label %if.then3, label %if.end19, !dbg !4270

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata float** %uv, metadata !4271, metadata !DIExpression()), !dbg !4273
  %13 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4274
  %uv4 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %13, i32 0, i32 6, !dbg !4275
  %14 = load float*, float** %uv4, align 8, !dbg !4275
  store float* %14, float** %uv, align 8, !dbg !4273
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4276, metadata !DIExpression()), !dbg !4277
  %15 = load i32, i32* %n.addr, align 4, !dbg !4278
  %add5 = add nsw i32 %15, 1, !dbg !4279
  %mul = mul nsw i32 %add5, 256, !dbg !4280
  store i32 %mul, i32* %size, align 4, !dbg !4277
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4281
  %17 = load i32, i32* %size, align 4, !dbg !4282
  %conv = sext i32 %17 to i64, !dbg !4282
  %mul6 = mul i64 %conv, 4, !dbg !4283
  %mul7 = mul i64 %mul6, 2, !dbg !4284
  %call = call i8* %16(i64 %mul7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0)), !dbg !4281
  %18 = bitcast i8* %call to float*, !dbg !4281
  %19 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4285
  %uv8 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %19, i32 0, i32 6, !dbg !4286
  store float* %18, float** %uv8, align 8, !dbg !4287
  %20 = load float*, float** %uv, align 8, !dbg !4288
  %tobool9 = icmp ne float* %20, null, !dbg !4288
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !4290

if.then10:                                        ; preds = %if.then3
  %21 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4291
  %totuv11 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %21, i32 0, i32 7, !dbg !4293
  %22 = load i32, i32* %totuv11, align 8, !dbg !4293
  %mul12 = mul nsw i32 %22, 256, !dbg !4294
  store i32 %mul12, i32* %size, align 4, !dbg !4295
  %23 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4296
  %uv13 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %23, i32 0, i32 6, !dbg !4297
  %24 = load float*, float** %uv13, align 8, !dbg !4297
  %25 = bitcast float* %24 to i8*, !dbg !4298
  %26 = load float*, float** %uv, align 8, !dbg !4299
  %27 = bitcast float* %26 to i8*, !dbg !4298
  %28 = load i32, i32* %size, align 4, !dbg !4300
  %conv14 = sext i32 %28 to i64, !dbg !4300
  %mul15 = mul i64 %conv14, 4, !dbg !4301
  %mul16 = mul i64 %mul15, 2, !dbg !4302
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %27, i64 %mul16, i1 false), !dbg !4298
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4303
  %30 = load float*, float** %uv, align 8, !dbg !4304
  %31 = bitcast float* %30 to i8*, !dbg !4304
  call void %29(i8* %31), !dbg !4303
  br label %if.end, !dbg !4305

if.end:                                           ; preds = %if.then10, %if.then3
  %32 = load i32, i32* %n.addr, align 4, !dbg !4306
  %add17 = add nsw i32 %32, 1, !dbg !4307
  %33 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4308
  %totuv18 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %33, i32 0, i32 7, !dbg !4309
  store i32 %add17, i32* %totuv18, align 8, !dbg !4310
  br label %if.end19, !dbg !4311

if.end19:                                         ; preds = %if.end, %if.then
  br label %if.end30, !dbg !4312

if.else:                                          ; preds = %entry
  %34 = load i32, i32* %n.addr, align 4, !dbg !4313
  %35 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4316
  %totuv20 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %35, i32 0, i32 7, !dbg !4317
  %36 = load i32, i32* %totuv20, align 8, !dbg !4317
  %cmp21 = icmp sge i32 %34, %36, !dbg !4318
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !4319

if.then23:                                        ; preds = %if.else
  store float* null, float** %retval, align 8, !dbg !4320
  br label %return, !dbg !4320

if.end24:                                         ; preds = %if.else
  %37 = load i8**, i8*** %name.addr, align 8, !dbg !4321
  %tobool25 = icmp ne i8** %37, null, !dbg !4321
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !4323

if.then26:                                        ; preds = %if.end24
  %38 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4324
  %mtface = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %38, i32 0, i32 23, !dbg !4325
  %39 = load [64 x i8]*, [64 x i8]** %mtface, align 8, !dbg !4325
  %40 = load i32, i32* %n.addr, align 4, !dbg !4326
  %idxprom27 = sext i32 %40 to i64, !dbg !4324
  %arrayidx28 = getelementptr inbounds [64 x i8], [64 x i8]* %39, i64 %idxprom27, !dbg !4324
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx28, i64 0, i64 0, !dbg !4324
  %41 = load i8**, i8*** %name.addr, align 8, !dbg !4327
  store i8* %arraydecay, i8** %41, align 8, !dbg !4328
  br label %if.end29, !dbg !4329

if.end29:                                         ; preds = %if.then26, %if.end24
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end19
  %42 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4330
  %uv31 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %42, i32 0, i32 6, !dbg !4331
  %43 = load float*, float** %uv31, align 8, !dbg !4331
  %44 = load i32, i32* %index2, align 4, !dbg !4332
  %mul32 = mul nsw i32 %44, 2, !dbg !4333
  %idx.ext = sext i32 %mul32 to i64, !dbg !4334
  %add.ptr = getelementptr inbounds float, float* %43, i64 %idx.ext, !dbg !4334
  store float* %add.ptr, float** %retval, align 8, !dbg !4335
  br label %return, !dbg !4335

return:                                           ; preds = %if.end30, %if.then23
  %45 = load float*, float** %retval, align 8, !dbg !4336
  ret float* %45, !dbg !4336
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MCol* @RE_strandren_get_mcol(%struct.ObjectRen* %obr, %struct.StrandRen* %strand, i32 %n, i8** %name, i32 %verify) #0 !dbg !4337 {
entry:
  %retval = alloca %struct.MCol*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %strand.addr = alloca %struct.StrandRen*, align 8
  %n.addr = alloca i32, align 4
  %name.addr = alloca i8**, align 8
  %verify.addr = alloca i32, align 4
  %node = alloca %struct.StrandTableNode*, align 8
  %nr = alloca i32, align 4
  %strandindex = alloca i32, align 4
  %index2 = alloca i32, align 4
  %mcol = alloca %struct.MCol*, align 8
  %size = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !4340, metadata !DIExpression()), !dbg !4341
  store %struct.StrandRen* %strand, %struct.StrandRen** %strand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand.addr, metadata !4342, metadata !DIExpression()), !dbg !4343
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4344, metadata !DIExpression()), !dbg !4345
  store i8** %name, i8*** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %name.addr, metadata !4346, metadata !DIExpression()), !dbg !4347
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !4348, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.declare(metadata %struct.StrandTableNode** %node, metadata !4350, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !4352, metadata !DIExpression()), !dbg !4353
  %0 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4354
  %index = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %0, i32 0, i32 5, !dbg !4355
  %1 = load i32, i32* %index, align 4, !dbg !4355
  %shr = ashr i32 %1, 8, !dbg !4356
  store i32 %shr, i32* %nr, align 4, !dbg !4353
  call void @llvm.dbg.declare(metadata i32* %strandindex, metadata !4357, metadata !DIExpression()), !dbg !4358
  %2 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4359
  %index1 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %2, i32 0, i32 5, !dbg !4360
  %3 = load i32, i32* %index1, align 4, !dbg !4360
  %and = and i32 %3, 255, !dbg !4361
  store i32 %and, i32* %strandindex, align 4, !dbg !4358
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !4362, metadata !DIExpression()), !dbg !4363
  %4 = load i32, i32* %n.addr, align 4, !dbg !4364
  %shl = shl i32 %4, 8, !dbg !4365
  %5 = load i32, i32* %strandindex, align 4, !dbg !4366
  %add = add nsw i32 %shl, %5, !dbg !4367
  store i32 %add, i32* %index2, align 4, !dbg !4363
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4368
  %strandnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 20, !dbg !4369
  %7 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes, align 8, !dbg !4369
  %8 = load i32, i32* %nr, align 4, !dbg !4370
  %idxprom = sext i32 %8 to i64, !dbg !4368
  %arrayidx = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %7, i64 %idxprom, !dbg !4368
  store %struct.StrandTableNode* %arrayidx, %struct.StrandTableNode** %node, align 8, !dbg !4371
  %9 = load i32, i32* %verify.addr, align 4, !dbg !4372
  %tobool = icmp ne i32 %9, 0, !dbg !4372
  br i1 %tobool, label %if.then, label %if.else, !dbg !4374

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %n.addr, align 4, !dbg !4375
  %11 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4378
  %totmcol = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %11, i32 0, i32 8, !dbg !4379
  %12 = load i32, i32* %totmcol, align 4, !dbg !4379
  %cmp = icmp sge i32 %10, %12, !dbg !4380
  br i1 %cmp, label %if.then3, label %if.end19, !dbg !4381

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !4382, metadata !DIExpression()), !dbg !4384
  %13 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4385
  %mcol4 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %13, i32 0, i32 5, !dbg !4386
  %14 = load %struct.MCol*, %struct.MCol** %mcol4, align 8, !dbg !4386
  store %struct.MCol* %14, %struct.MCol** %mcol, align 8, !dbg !4384
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4387, metadata !DIExpression()), !dbg !4388
  %15 = load i32, i32* %n.addr, align 4, !dbg !4389
  %add5 = add nsw i32 %15, 1, !dbg !4390
  %mul = mul nsw i32 %add5, 256, !dbg !4391
  store i32 %mul, i32* %size, align 4, !dbg !4388
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4392
  %17 = load i32, i32* %size, align 4, !dbg !4393
  %conv = sext i32 %17 to i64, !dbg !4393
  %mul6 = mul i64 %conv, 4, !dbg !4394
  %mul7 = mul i64 %mul6, 4, !dbg !4395
  %call = call i8* %16(i64 %mul7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0)), !dbg !4392
  %18 = bitcast i8* %call to %struct.MCol*, !dbg !4392
  %19 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4396
  %mcol8 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %19, i32 0, i32 5, !dbg !4397
  store %struct.MCol* %18, %struct.MCol** %mcol8, align 8, !dbg !4398
  %20 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !4399
  %tobool9 = icmp ne %struct.MCol* %20, null, !dbg !4399
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !4401

if.then10:                                        ; preds = %if.then3
  %21 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4402
  %totmcol11 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %21, i32 0, i32 8, !dbg !4404
  %22 = load i32, i32* %totmcol11, align 4, !dbg !4404
  %mul12 = mul nsw i32 %22, 256, !dbg !4405
  store i32 %mul12, i32* %size, align 4, !dbg !4406
  %23 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4407
  %mcol13 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %23, i32 0, i32 5, !dbg !4408
  %24 = load %struct.MCol*, %struct.MCol** %mcol13, align 8, !dbg !4408
  %25 = bitcast %struct.MCol* %24 to i8*, !dbg !4409
  %26 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !4410
  %27 = bitcast %struct.MCol* %26 to i8*, !dbg !4409
  %28 = load i32, i32* %size, align 4, !dbg !4411
  %conv14 = sext i32 %28 to i64, !dbg !4411
  %mul15 = mul i64 %conv14, 4, !dbg !4412
  %mul16 = mul i64 %mul15, 4, !dbg !4413
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %27, i64 %mul16, i1 false), !dbg !4409
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4414
  %30 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !4415
  %31 = bitcast %struct.MCol* %30 to i8*, !dbg !4415
  call void %29(i8* %31), !dbg !4414
  br label %if.end, !dbg !4416

if.end:                                           ; preds = %if.then10, %if.then3
  %32 = load i32, i32* %n.addr, align 4, !dbg !4417
  %add17 = add nsw i32 %32, 1, !dbg !4418
  %33 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4419
  %totmcol18 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %33, i32 0, i32 8, !dbg !4420
  store i32 %add17, i32* %totmcol18, align 4, !dbg !4421
  br label %if.end19, !dbg !4422

if.end19:                                         ; preds = %if.end, %if.then
  br label %if.end31, !dbg !4423

if.else:                                          ; preds = %entry
  %34 = load i32, i32* %n.addr, align 4, !dbg !4424
  %35 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4427
  %totmcol20 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %35, i32 0, i32 8, !dbg !4428
  %36 = load i32, i32* %totmcol20, align 4, !dbg !4428
  %cmp21 = icmp sge i32 %34, %36, !dbg !4429
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !4430

if.then23:                                        ; preds = %if.else
  store %struct.MCol* null, %struct.MCol** %retval, align 8, !dbg !4431
  br label %return, !dbg !4431

if.end24:                                         ; preds = %if.else
  %37 = load i8**, i8*** %name.addr, align 8, !dbg !4432
  %tobool25 = icmp ne i8** %37, null, !dbg !4432
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !4434

if.then26:                                        ; preds = %if.end24
  %38 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4435
  %mcol27 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %38, i32 0, i32 24, !dbg !4436
  %39 = load [64 x i8]*, [64 x i8]** %mcol27, align 8, !dbg !4436
  %40 = load i32, i32* %n.addr, align 4, !dbg !4437
  %idxprom28 = sext i32 %40 to i64, !dbg !4435
  %arrayidx29 = getelementptr inbounds [64 x i8], [64 x i8]* %39, i64 %idxprom28, !dbg !4435
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx29, i64 0, i64 0, !dbg !4435
  %41 = load i8**, i8*** %name.addr, align 8, !dbg !4438
  store i8* %arraydecay, i8** %41, align 8, !dbg !4439
  br label %if.end30, !dbg !4440

if.end30:                                         ; preds = %if.then26, %if.end24
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end19
  %42 = load %struct.StrandTableNode*, %struct.StrandTableNode** %node, align 8, !dbg !4441
  %mcol32 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %42, i32 0, i32 5, !dbg !4442
  %43 = load %struct.MCol*, %struct.MCol** %mcol32, align 8, !dbg !4442
  %44 = load i32, i32* %index2, align 4, !dbg !4443
  %mul33 = mul nsw i32 %44, 4, !dbg !4444
  %idx.ext = sext i32 %mul33 to i64, !dbg !4445
  %add.ptr = getelementptr inbounds %struct.MCol, %struct.MCol* %43, i64 %idx.ext, !dbg !4445
  store %struct.MCol* %add.ptr, %struct.MCol** %retval, align 8, !dbg !4446
  br label %return, !dbg !4446

return:                                           ; preds = %if.end31, %if.then23
  %45 = load %struct.MCol*, %struct.MCol** %retval, align 8, !dbg !4447
  ret %struct.MCol* %45, !dbg !4447
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_strandren_get_simplify(%struct.ObjectRen* %obr, %struct.StrandRen* %strand, i32 %verify) #0 !dbg !4448 {
entry:
  %retval = alloca float*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %strand.addr = alloca %struct.StrandRen*, align 8
  %verify.addr = alloca i32, align 4
  %simplify = alloca float*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !4451, metadata !DIExpression()), !dbg !4452
  store %struct.StrandRen* %strand, %struct.StrandRen** %strand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand.addr, metadata !4453, metadata !DIExpression()), !dbg !4454
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !4455, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.declare(metadata float** %simplify, metadata !4457, metadata !DIExpression()), !dbg !4458
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !4459, metadata !DIExpression()), !dbg !4460
  %0 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4461
  %index = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %0, i32 0, i32 5, !dbg !4462
  %1 = load i32, i32* %index, align 4, !dbg !4462
  %shr = ashr i32 %1, 8, !dbg !4463
  store i32 %shr, i32* %nr, align 4, !dbg !4460
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4464
  %strandnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 20, !dbg !4465
  %3 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes, align 8, !dbg !4465
  %4 = load i32, i32* %nr, align 4, !dbg !4466
  %idxprom = sext i32 %4 to i64, !dbg !4464
  %arrayidx = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %3, i64 %idxprom, !dbg !4464
  %simplify1 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx, i32 0, i32 3, !dbg !4467
  %5 = load float*, float** %simplify1, align 8, !dbg !4467
  store float* %5, float** %simplify, align 8, !dbg !4468
  %6 = load float*, float** %simplify, align 8, !dbg !4469
  %cmp = icmp eq float* %6, null, !dbg !4471
  br i1 %cmp, label %if.then, label %if.end7, !dbg !4472

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !4473
  %tobool = icmp ne i32 %7, 0, !dbg !4473
  br i1 %tobool, label %if.then2, label %if.else, !dbg !4476

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4477
  %call = call i8* %8(i64 2048, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0)), !dbg !4477
  %9 = bitcast i8* %call to float*, !dbg !4477
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4478
  %strandnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 20, !dbg !4479
  %11 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes3, align 8, !dbg !4479
  %12 = load i32, i32* %nr, align 4, !dbg !4480
  %idxprom4 = sext i32 %12 to i64, !dbg !4478
  %arrayidx5 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %11, i64 %idxprom4, !dbg !4478
  %simplify6 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx5, i32 0, i32 3, !dbg !4481
  store float* %9, float** %simplify6, align 8, !dbg !4482
  store float* %9, float** %simplify, align 8, !dbg !4483
  br label %if.end, !dbg !4484

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !4485
  br label %return, !dbg !4485

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !4486

if.end7:                                          ; preds = %if.end, %entry
  %13 = load float*, float** %simplify, align 8, !dbg !4487
  %14 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4488
  %index8 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %14, i32 0, i32 5, !dbg !4489
  %15 = load i32, i32* %index8, align 4, !dbg !4489
  %and = and i32 %15, 255, !dbg !4490
  %mul = mul nsw i32 %and, 2, !dbg !4491
  %idx.ext = sext i32 %mul to i64, !dbg !4492
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.ext, !dbg !4492
  store float* %add.ptr, float** %retval, align 8, !dbg !4493
  br label %return, !dbg !4493

return:                                           ; preds = %if.end7, %if.else
  %16 = load float*, float** %retval, align 8, !dbg !4494
  ret float* %16, !dbg !4494
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32* @RE_strandren_get_face(%struct.ObjectRen* %obr, %struct.StrandRen* %strand, i32 %verify) #0 !dbg !4495 {
entry:
  %retval = alloca i32*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %strand.addr = alloca %struct.StrandRen*, align 8
  %verify.addr = alloca i32, align 4
  %face = alloca i32*, align 8
  %nr = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !4498, metadata !DIExpression()), !dbg !4499
  store %struct.StrandRen* %strand, %struct.StrandRen** %strand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand.addr, metadata !4500, metadata !DIExpression()), !dbg !4501
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.declare(metadata i32** %face, metadata !4504, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !4506, metadata !DIExpression()), !dbg !4507
  %0 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4508
  %index = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %0, i32 0, i32 5, !dbg !4509
  %1 = load i32, i32* %index, align 4, !dbg !4509
  %shr = ashr i32 %1, 8, !dbg !4510
  store i32 %shr, i32* %nr, align 4, !dbg !4507
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4511
  %strandnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 20, !dbg !4512
  %3 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes, align 8, !dbg !4512
  %4 = load i32, i32* %nr, align 4, !dbg !4513
  %idxprom = sext i32 %4 to i64, !dbg !4511
  %arrayidx = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %3, i64 %idxprom, !dbg !4511
  %face1 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx, i32 0, i32 4, !dbg !4514
  %5 = load i32*, i32** %face1, align 8, !dbg !4514
  store i32* %5, i32** %face, align 8, !dbg !4515
  %6 = load i32*, i32** %face, align 8, !dbg !4516
  %cmp = icmp eq i32* %6, null, !dbg !4518
  br i1 %cmp, label %if.then, label %if.end7, !dbg !4519

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %verify.addr, align 4, !dbg !4520
  %tobool = icmp ne i32 %7, 0, !dbg !4520
  br i1 %tobool, label %if.then2, label %if.else, !dbg !4523

if.then2:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4524
  %call = call i8* %8(i64 1024, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0)), !dbg !4524
  %9 = bitcast i8* %call to i32*, !dbg !4524
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4525
  %strandnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 20, !dbg !4526
  %11 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes3, align 8, !dbg !4526
  %12 = load i32, i32* %nr, align 4, !dbg !4527
  %idxprom4 = sext i32 %12 to i64, !dbg !4525
  %arrayidx5 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %11, i64 %idxprom4, !dbg !4525
  %face6 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx5, i32 0, i32 4, !dbg !4528
  store i32* %9, i32** %face6, align 8, !dbg !4529
  store i32* %9, i32** %face, align 8, !dbg !4530
  br label %if.end, !dbg !4531

if.else:                                          ; preds = %if.then
  store i32* null, i32** %retval, align 8, !dbg !4532
  br label %return, !dbg !4532

if.end:                                           ; preds = %if.then2
  br label %if.end7, !dbg !4533

if.end7:                                          ; preds = %if.end, %entry
  %13 = load i32*, i32** %face, align 8, !dbg !4534
  %14 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4535
  %index8 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %14, i32 0, i32 5, !dbg !4536
  %15 = load i32, i32* %index8, align 4, !dbg !4536
  %and = and i32 %15, 255, !dbg !4537
  %mul = mul nsw i32 %and, 1, !dbg !4538
  %idx.ext = sext i32 %mul to i64, !dbg !4539
  %add.ptr = getelementptr inbounds i32, i32* %13, i64 %idx.ext, !dbg !4539
  store i32* %add.ptr, i32** %retval, align 8, !dbg !4540
  br label %return, !dbg !4540

return:                                           ; preds = %if.end7, %if.else
  %16 = load i32*, i32** %retval, align 8, !dbg !4541
  ret i32* %16, !dbg !4541
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_strandren_get_winspeed(%struct.ObjectInstanceRen* %obi, %struct.StrandRen* %strand, i32 %verify) #0 !dbg !4542 {
entry:
  %retval = alloca float*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %strand.addr = alloca %struct.StrandRen*, align 8
  %verify.addr = alloca i32, align 4
  %winspeed = alloca float*, align 8
  %totvector = alloca i32, align 4
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !4545, metadata !DIExpression()), !dbg !4546
  store %struct.StrandRen* %strand, %struct.StrandRen** %strand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand.addr, metadata !4547, metadata !DIExpression()), !dbg !4548
  store i32 %verify, i32* %verify.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verify.addr, metadata !4549, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.declare(metadata float** %winspeed, metadata !4551, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.declare(metadata i32* %totvector, metadata !4553, metadata !DIExpression()), !dbg !4554
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !4555
  %vectors = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i32 0, i32 16, !dbg !4556
  %1 = load float*, float** %vectors, align 8, !dbg !4556
  store float* %1, float** %winspeed, align 8, !dbg !4557
  %2 = load float*, float** %winspeed, align 8, !dbg !4558
  %cmp = icmp eq float* %2, null, !dbg !4560
  br i1 %cmp, label %if.then, label %if.end5, !dbg !4561

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %verify.addr, align 4, !dbg !4562
  %tobool = icmp ne i32 %3, 0, !dbg !4562
  br i1 %tobool, label %if.then1, label %if.else, !dbg !4565

if.then1:                                         ; preds = %if.then
  %4 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !4566
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %4, i32 0, i32 2, !dbg !4568
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4568
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %5, i32 0, i32 10, !dbg !4569
  %6 = load i32, i32* %totvert, align 8, !dbg !4569
  %7 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !4570
  %obr2 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %7, i32 0, i32 2, !dbg !4571
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr2, align 8, !dbg !4571
  %totstrand = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %8, i32 0, i32 12, !dbg !4572
  %9 = load i32, i32* %totstrand, align 8, !dbg !4572
  %add = add nsw i32 %6, %9, !dbg !4573
  store i32 %add, i32* %totvector, align 4, !dbg !4574
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4575
  %11 = load i32, i32* %totvector, align 4, !dbg !4576
  %mul = mul nsw i32 %11, 4, !dbg !4577
  %conv = sext i32 %mul to i64, !dbg !4576
  %mul3 = mul i64 %conv, 4, !dbg !4578
  %call = call i8* %10(i64 %mul3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0)), !dbg !4575
  %12 = bitcast i8* %call to float*, !dbg !4575
  %13 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !4579
  %vectors4 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %13, i32 0, i32 16, !dbg !4580
  store float* %12, float** %vectors4, align 8, !dbg !4581
  store float* %12, float** %winspeed, align 8, !dbg !4582
  br label %if.end, !dbg !4583

if.else:                                          ; preds = %if.then
  store float* null, float** %retval, align 8, !dbg !4584
  br label %return, !dbg !4584

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !4585

if.end5:                                          ; preds = %if.end, %entry
  %14 = load float*, float** %winspeed, align 8, !dbg !4586
  %15 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !4587
  %obr6 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %15, i32 0, i32 2, !dbg !4588
  %16 = load %struct.ObjectRen*, %struct.ObjectRen** %obr6, align 8, !dbg !4588
  %totvert7 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %16, i32 0, i32 10, !dbg !4589
  %17 = load i32, i32* %totvert7, align 8, !dbg !4589
  %18 = load %struct.StrandRen*, %struct.StrandRen** %strand.addr, align 8, !dbg !4590
  %index = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %18, i32 0, i32 5, !dbg !4591
  %19 = load i32, i32* %index, align 4, !dbg !4591
  %add8 = add nsw i32 %17, %19, !dbg !4592
  %mul9 = mul nsw i32 %add8, 4, !dbg !4593
  %idx.ext = sext i32 %mul9 to i64, !dbg !4594
  %add.ptr = getelementptr inbounds float, float* %14, i64 %idx.ext, !dbg !4594
  store float* %add.ptr, float** %retval, align 8, !dbg !4595
  br label %return, !dbg !4595

return:                                           ; preds = %if.end5, %if.else
  %20 = load float*, float** %retval, align 8, !dbg !4596
  ret float* %20, !dbg !4596
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen* %obr, i32 %nr) #0 !dbg !4597 {
entry:
  %retval = alloca %struct.StrandRen*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %nr.addr = alloca i32, align 4
  %temp = alloca %struct.StrandTableNode*, align 8
  %v = alloca %struct.StrandRen*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !4600, metadata !DIExpression()), !dbg !4601
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !4602, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.declare(metadata %struct.StrandTableNode** %temp, metadata !4604, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %v, metadata !4606, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4608, metadata !DIExpression()), !dbg !4609
  %0 = load i32, i32* %nr.addr, align 4, !dbg !4610
  %cmp = icmp slt i32 %0, 0, !dbg !4612
  br i1 %cmp, label %if.then, label %if.end, !dbg !4613

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %nr.addr, align 4, !dbg !4614
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i64 0, i64 0), i32 %1), !dbg !4616
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4617
  %strandnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 20, !dbg !4618
  %3 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes, align 8, !dbg !4618
  %arrayidx = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %3, i64 0, !dbg !4617
  %strand = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx, i32 0, i32 0, !dbg !4619
  %4 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !4619
  store %struct.StrandRen* %4, %struct.StrandRen** %retval, align 8, !dbg !4620
  br label %return, !dbg !4620

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %nr.addr, align 4, !dbg !4621
  %shr = ashr i32 %5, 8, !dbg !4622
  store i32 %shr, i32* %a, align 4, !dbg !4623
  %6 = load i32, i32* %a, align 4, !dbg !4624
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4626
  %strandnodeslen = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %7, i32 0, i32 16, !dbg !4627
  %8 = load i32, i32* %strandnodeslen, align 8, !dbg !4627
  %sub = sub nsw i32 %8, 1, !dbg !4628
  %cmp1 = icmp sge i32 %6, %sub, !dbg !4629
  br i1 %cmp1, label %if.then2, label %if.end20, !dbg !4630

if.then2:                                         ; preds = %if.end
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4631
  %strandnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 20, !dbg !4633
  %10 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes3, align 8, !dbg !4633
  store %struct.StrandTableNode* %10, %struct.StrandTableNode** %temp, align 8, !dbg !4634
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4635
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4636
  %strandnodeslen4 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %12, i32 0, i32 16, !dbg !4637
  %13 = load i32, i32* %strandnodeslen4, align 8, !dbg !4637
  %add = add nsw i32 %13, 1024, !dbg !4638
  %conv = sext i32 %add to i64, !dbg !4639
  %mul = mul i64 64, %conv, !dbg !4640
  %call5 = call i8* %11(i64 %mul, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0)), !dbg !4635
  %14 = bitcast i8* %call5 to %struct.StrandTableNode*, !dbg !4635
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4641
  %strandnodes6 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %15, i32 0, i32 20, !dbg !4642
  store %struct.StrandTableNode* %14, %struct.StrandTableNode** %strandnodes6, align 8, !dbg !4643
  %16 = load %struct.StrandTableNode*, %struct.StrandTableNode** %temp, align 8, !dbg !4644
  %tobool = icmp ne %struct.StrandTableNode* %16, null, !dbg !4644
  br i1 %tobool, label %if.then7, label %if.end12, !dbg !4646

if.then7:                                         ; preds = %if.then2
  %17 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4647
  %strandnodes8 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %17, i32 0, i32 20, !dbg !4648
  %18 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes8, align 8, !dbg !4648
  %19 = bitcast %struct.StrandTableNode* %18 to i8*, !dbg !4649
  %20 = load %struct.StrandTableNode*, %struct.StrandTableNode** %temp, align 8, !dbg !4650
  %21 = bitcast %struct.StrandTableNode* %20 to i8*, !dbg !4649
  %22 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4651
  %strandnodeslen9 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %22, i32 0, i32 16, !dbg !4652
  %23 = load i32, i32* %strandnodeslen9, align 8, !dbg !4652
  %conv10 = sext i32 %23 to i64, !dbg !4651
  %mul11 = mul i64 %conv10, 64, !dbg !4653
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %21, i64 %mul11, i1 false), !dbg !4649
  br label %if.end12, !dbg !4649

if.end12:                                         ; preds = %if.then7, %if.then2
  %24 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4654
  %strandnodes13 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %24, i32 0, i32 20, !dbg !4655
  %25 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes13, align 8, !dbg !4655
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4656
  %strandnodeslen14 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %26, i32 0, i32 16, !dbg !4657
  %27 = load i32, i32* %strandnodeslen14, align 8, !dbg !4657
  %idx.ext = sext i32 %27 to i64, !dbg !4658
  %add.ptr = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %25, i64 %idx.ext, !dbg !4658
  %28 = bitcast %struct.StrandTableNode* %add.ptr to i8*, !dbg !4659
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 65536, i1 false), !dbg !4659
  %29 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4660
  %strandnodeslen15 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %29, i32 0, i32 16, !dbg !4661
  %30 = load i32, i32* %strandnodeslen15, align 8, !dbg !4662
  %add16 = add nsw i32 %30, 1024, !dbg !4662
  store i32 %add16, i32* %strandnodeslen15, align 8, !dbg !4662
  %31 = load %struct.StrandTableNode*, %struct.StrandTableNode** %temp, align 8, !dbg !4663
  %tobool17 = icmp ne %struct.StrandTableNode* %31, null, !dbg !4663
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !4665

if.then18:                                        ; preds = %if.end12
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4666
  %33 = load %struct.StrandTableNode*, %struct.StrandTableNode** %temp, align 8, !dbg !4667
  %34 = bitcast %struct.StrandTableNode* %33 to i8*, !dbg !4667
  call void %32(i8* %34), !dbg !4666
  br label %if.end19, !dbg !4666

if.end19:                                         ; preds = %if.then18, %if.end12
  br label %if.end20, !dbg !4668

if.end20:                                         ; preds = %if.end19, %if.end
  %35 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4669
  %strandnodes21 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %35, i32 0, i32 20, !dbg !4670
  %36 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes21, align 8, !dbg !4670
  %37 = load i32, i32* %a, align 4, !dbg !4671
  %idxprom = sext i32 %37 to i64, !dbg !4669
  %arrayidx22 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %36, i64 %idxprom, !dbg !4669
  %strand23 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx22, i32 0, i32 0, !dbg !4672
  %38 = load %struct.StrandRen*, %struct.StrandRen** %strand23, align 8, !dbg !4672
  store %struct.StrandRen* %38, %struct.StrandRen** %v, align 8, !dbg !4673
  %39 = load %struct.StrandRen*, %struct.StrandRen** %v, align 8, !dbg !4674
  %cmp24 = icmp eq %struct.StrandRen* %39, null, !dbg !4676
  br i1 %cmp24, label %if.then26, label %if.end37, !dbg !4677

if.then26:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4678, metadata !DIExpression()), !dbg !4680
  %40 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4681
  %call27 = call i8* %40(i64 12288, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0)), !dbg !4681
  %41 = bitcast i8* %call27 to %struct.StrandRen*, !dbg !4682
  store %struct.StrandRen* %41, %struct.StrandRen** %v, align 8, !dbg !4683
  %42 = load %struct.StrandRen*, %struct.StrandRen** %v, align 8, !dbg !4684
  %43 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4685
  %strandnodes28 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %43, i32 0, i32 20, !dbg !4686
  %44 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes28, align 8, !dbg !4686
  %45 = load i32, i32* %a, align 4, !dbg !4687
  %idxprom29 = sext i32 %45 to i64, !dbg !4685
  %arrayidx30 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %44, i64 %idxprom29, !dbg !4685
  %strand31 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx30, i32 0, i32 0, !dbg !4688
  store %struct.StrandRen* %42, %struct.StrandRen** %strand31, align 8, !dbg !4689
  %46 = load i32, i32* %nr.addr, align 4, !dbg !4690
  %and = and i32 %46, -256, !dbg !4692
  store i32 %and, i32* %i, align 4, !dbg !4693
  store i32 0, i32* %a, align 4, !dbg !4694
  br label %for.cond, !dbg !4695

for.cond:                                         ; preds = %for.inc, %if.then26
  %47 = load i32, i32* %a, align 4, !dbg !4696
  %cmp32 = icmp slt i32 %47, 256, !dbg !4698
  br i1 %cmp32, label %for.body, label %for.end, !dbg !4699

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %i, align 4, !dbg !4700
  %49 = load %struct.StrandRen*, %struct.StrandRen** %v, align 8, !dbg !4701
  %50 = load i32, i32* %a, align 4, !dbg !4702
  %idxprom34 = sext i32 %50 to i64, !dbg !4701
  %arrayidx35 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %49, i64 %idxprom34, !dbg !4701
  %index = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %arrayidx35, i32 0, i32 5, !dbg !4703
  store i32 %48, i32* %index, align 4, !dbg !4704
  br label %for.inc, !dbg !4701

for.inc:                                          ; preds = %for.body
  %51 = load i32, i32* %a, align 4, !dbg !4705
  %inc = add nsw i32 %51, 1, !dbg !4705
  store i32 %inc, i32* %a, align 4, !dbg !4705
  %52 = load i32, i32* %i, align 4, !dbg !4706
  %inc36 = add nsw i32 %52, 1, !dbg !4706
  store i32 %inc36, i32* %i, align 4, !dbg !4706
  br label %for.cond, !dbg !4707, !llvm.loop !4708

for.end:                                          ; preds = %for.cond
  br label %if.end37, !dbg !4710

if.end37:                                         ; preds = %for.end, %if.end20
  %53 = load i32, i32* %nr.addr, align 4, !dbg !4711
  %and38 = and i32 %53, 255, !dbg !4712
  %54 = load %struct.StrandRen*, %struct.StrandRen** %v, align 8, !dbg !4713
  %idx.ext39 = sext i32 %and38 to i64, !dbg !4713
  %add.ptr40 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %54, i64 %idx.ext39, !dbg !4713
  store %struct.StrandRen* %add.ptr40, %struct.StrandRen** %v, align 8, !dbg !4713
  %55 = load %struct.StrandRen*, %struct.StrandRen** %v, align 8, !dbg !4714
  store %struct.StrandRen* %55, %struct.StrandRen** %retval, align 8, !dbg !4715
  br label %return, !dbg !4715

return:                                           ; preds = %if.end37, %if.then
  %56 = load %struct.StrandRen*, %struct.StrandRen** %retval, align 8, !dbg !4716
  ret %struct.StrandRen* %56, !dbg !4716
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.StrandBuffer* @RE_addStrandBuffer(%struct.ObjectRen* %obr, i32 %totvert) #0 !dbg !4717 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %totvert.addr = alloca i32, align 4
  %strandbuf = alloca %struct.StrandBuffer*, align 8
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !4720, metadata !DIExpression()), !dbg !4721
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !4722, metadata !DIExpression()), !dbg !4723
  call void @llvm.dbg.declare(metadata %struct.StrandBuffer** %strandbuf, metadata !4724, metadata !DIExpression()), !dbg !4725
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4726
  %call = call i8* %0(i64 168, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0)), !dbg !4726
  %1 = bitcast i8* %call to %struct.StrandBuffer*, !dbg !4726
  store %struct.StrandBuffer* %1, %struct.StrandBuffer** %strandbuf, align 8, !dbg !4727
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4728
  %3 = load i32, i32* %totvert.addr, align 4, !dbg !4729
  %conv = sext i32 %3 to i64, !dbg !4729
  %mul = mul i64 16, %conv, !dbg !4730
  %call1 = call i8* %2(i64 %mul, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0)), !dbg !4728
  %4 = bitcast i8* %call1 to %struct.StrandVert*, !dbg !4728
  %5 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !4731
  %vert = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %5, i32 0, i32 2, !dbg !4732
  store %struct.StrandVert* %4, %struct.StrandVert** %vert, align 8, !dbg !4733
  %6 = load i32, i32* %totvert.addr, align 4, !dbg !4734
  %7 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !4735
  %totvert2 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %7, i32 0, i32 4, !dbg !4736
  store i32 %6, i32* %totvert2, align 8, !dbg !4737
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4738
  %9 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !4739
  %obr3 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %9, i32 0, i32 6, !dbg !4740
  store %struct.ObjectRen* %8, %struct.ObjectRen** %obr3, align 8, !dbg !4741
  %10 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !4742
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !4743
  %strandbuf4 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %11, i32 0, i32 22, !dbg !4744
  store %struct.StrandBuffer* %10, %struct.StrandBuffer** %strandbuf4, align 8, !dbg !4745
  %12 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !4746
  ret %struct.StrandBuffer* %12, !dbg !4747
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ObjectRen* @RE_addRenderObject(%struct.Render* %re, %struct.Object* %ob, %struct.Object* %par, i32 %index, i32 %psysindex, i32 %lay) #0 !dbg !4748 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %par.addr = alloca %struct.Object*, align 8
  %index.addr = alloca i32, align 4
  %psysindex.addr = alloca i32, align 4
  %lay.addr = alloca i32, align 4
  %obr = alloca %struct.ObjectRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4753, metadata !DIExpression()), !dbg !4754
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !4755, metadata !DIExpression()), !dbg !4756
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4757, metadata !DIExpression()), !dbg !4758
  store i32 %psysindex, i32* %psysindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %psysindex.addr, metadata !4759, metadata !DIExpression()), !dbg !4760
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !4761, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !4763, metadata !DIExpression()), !dbg !4764
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4765
  %call = call i8* %0(i64 280, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0)), !dbg !4765
  %1 = bitcast i8* %call to %struct.ObjectRen*, !dbg !4765
  store %struct.ObjectRen* %1, %struct.ObjectRen** %obr, align 8, !dbg !4764
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4766
  %objecttable = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 68, !dbg !4767
  %3 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4768
  %4 = bitcast %struct.ObjectRen* %3 to i8*, !dbg !4768
  call void @BLI_addtail(%struct.ListBase* %objecttable, i8* %4), !dbg !4769
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4770
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4771
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 2, !dbg !4772
  store %struct.Object* %5, %struct.Object** %ob1, align 8, !dbg !4773
  %7 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !4774
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4775
  %par2 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %8, i32 0, i32 3, !dbg !4776
  store %struct.Object* %7, %struct.Object** %par2, align 8, !dbg !4777
  %9 = load i32, i32* %index.addr, align 4, !dbg !4778
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4779
  %index3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 5, !dbg !4780
  store i32 %9, i32* %index3, align 8, !dbg !4781
  %11 = load i32, i32* %psysindex.addr, align 4, !dbg !4782
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4783
  %psysindex4 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %12, i32 0, i32 6, !dbg !4784
  store i32 %11, i32* %psysindex4, align 4, !dbg !4785
  %13 = load i32, i32* %lay.addr, align 4, !dbg !4786
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4787
  %lay5 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %14, i32 0, i32 8, !dbg !4788
  store i32 %13, i32* %lay5, align 4, !dbg !4789
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4790
  ret %struct.ObjectRen* %15, !dbg !4791
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_renderdata_vertnodes(%struct.VertTableNode* %vertnodes) #0 !dbg !4792 {
entry:
  %vertnodes.addr = alloca %struct.VertTableNode*, align 8
  %a = alloca i32, align 4
  store %struct.VertTableNode* %vertnodes, %struct.VertTableNode** %vertnodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertTableNode** %vertnodes.addr, metadata !4795, metadata !DIExpression()), !dbg !4796
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4797, metadata !DIExpression()), !dbg !4798
  %0 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4799
  %cmp = icmp eq %struct.VertTableNode* %0, null, !dbg !4801
  br i1 %cmp, label %if.then, label %if.end, !dbg !4802

if.then:                                          ; preds = %entry
  br label %return, !dbg !4803

if.end:                                           ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !4804
  br label %for.cond, !dbg !4806

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4807
  %2 = load i32, i32* %a, align 4, !dbg !4809
  %idxprom = sext i32 %2 to i64, !dbg !4807
  %arrayidx = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %1, i64 %idxprom, !dbg !4807
  %vert = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx, i32 0, i32 0, !dbg !4810
  %3 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !4810
  %tobool = icmp ne %struct.VertRen* %3, null, !dbg !4811
  br i1 %tobool, label %for.body, label %for.end, !dbg !4811

for.body:                                         ; preds = %for.cond
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4812
  %5 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4814
  %6 = load i32, i32* %a, align 4, !dbg !4815
  %idxprom1 = sext i32 %6 to i64, !dbg !4814
  %arrayidx2 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %5, i64 %idxprom1, !dbg !4814
  %vert3 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx2, i32 0, i32 0, !dbg !4816
  %7 = load %struct.VertRen*, %struct.VertRen** %vert3, align 8, !dbg !4816
  %8 = bitcast %struct.VertRen* %7 to i8*, !dbg !4814
  call void %4(i8* %8), !dbg !4812
  %9 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4817
  %10 = load i32, i32* %a, align 4, !dbg !4819
  %idxprom4 = sext i32 %10 to i64, !dbg !4817
  %arrayidx5 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %9, i64 %idxprom4, !dbg !4817
  %rad = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx5, i32 0, i32 1, !dbg !4820
  %11 = load float*, float** %rad, align 8, !dbg !4820
  %tobool6 = icmp ne float* %11, null, !dbg !4817
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !4821

if.then7:                                         ; preds = %for.body
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4822
  %13 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4823
  %14 = load i32, i32* %a, align 4, !dbg !4824
  %idxprom8 = sext i32 %14 to i64, !dbg !4823
  %arrayidx9 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %13, i64 %idxprom8, !dbg !4823
  %rad10 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx9, i32 0, i32 1, !dbg !4825
  %15 = load float*, float** %rad10, align 8, !dbg !4825
  %16 = bitcast float* %15 to i8*, !dbg !4823
  call void %12(i8* %16), !dbg !4822
  br label %if.end11, !dbg !4822

if.end11:                                         ; preds = %if.then7, %for.body
  %17 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4826
  %18 = load i32, i32* %a, align 4, !dbg !4828
  %idxprom12 = sext i32 %18 to i64, !dbg !4826
  %arrayidx13 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %17, i64 %idxprom12, !dbg !4826
  %strand = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx13, i32 0, i32 2, !dbg !4829
  %19 = load float*, float** %strand, align 8, !dbg !4829
  %tobool14 = icmp ne float* %19, null, !dbg !4826
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !4830

if.then15:                                        ; preds = %if.end11
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4831
  %21 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4832
  %22 = load i32, i32* %a, align 4, !dbg !4833
  %idxprom16 = sext i32 %22 to i64, !dbg !4832
  %arrayidx17 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %21, i64 %idxprom16, !dbg !4832
  %strand18 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx17, i32 0, i32 2, !dbg !4834
  %23 = load float*, float** %strand18, align 8, !dbg !4834
  %24 = bitcast float* %23 to i8*, !dbg !4832
  call void %20(i8* %24), !dbg !4831
  br label %if.end19, !dbg !4831

if.end19:                                         ; preds = %if.then15, %if.end11
  %25 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4835
  %26 = load i32, i32* %a, align 4, !dbg !4837
  %idxprom20 = sext i32 %26 to i64, !dbg !4835
  %arrayidx21 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %25, i64 %idxprom20, !dbg !4835
  %tangent = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx21, i32 0, i32 3, !dbg !4838
  %27 = load float*, float** %tangent, align 8, !dbg !4838
  %tobool22 = icmp ne float* %27, null, !dbg !4835
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !4839

if.then23:                                        ; preds = %if.end19
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4840
  %29 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4841
  %30 = load i32, i32* %a, align 4, !dbg !4842
  %idxprom24 = sext i32 %30 to i64, !dbg !4841
  %arrayidx25 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %29, i64 %idxprom24, !dbg !4841
  %tangent26 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx25, i32 0, i32 3, !dbg !4843
  %31 = load float*, float** %tangent26, align 8, !dbg !4843
  %32 = bitcast float* %31 to i8*, !dbg !4841
  call void %28(i8* %32), !dbg !4840
  br label %if.end27, !dbg !4840

if.end27:                                         ; preds = %if.then23, %if.end19
  %33 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4844
  %34 = load i32, i32* %a, align 4, !dbg !4846
  %idxprom28 = sext i32 %34 to i64, !dbg !4844
  %arrayidx29 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %33, i64 %idxprom28, !dbg !4844
  %stress = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx29, i32 0, i32 4, !dbg !4847
  %35 = load float*, float** %stress, align 8, !dbg !4847
  %tobool30 = icmp ne float* %35, null, !dbg !4844
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !4848

if.then31:                                        ; preds = %if.end27
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4849
  %37 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4850
  %38 = load i32, i32* %a, align 4, !dbg !4851
  %idxprom32 = sext i32 %38 to i64, !dbg !4850
  %arrayidx33 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %37, i64 %idxprom32, !dbg !4850
  %stress34 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx33, i32 0, i32 4, !dbg !4852
  %39 = load float*, float** %stress34, align 8, !dbg !4852
  %40 = bitcast float* %39 to i8*, !dbg !4850
  call void %36(i8* %40), !dbg !4849
  br label %if.end35, !dbg !4849

if.end35:                                         ; preds = %if.then31, %if.end27
  %41 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4853
  %42 = load i32, i32* %a, align 4, !dbg !4855
  %idxprom36 = sext i32 %42 to i64, !dbg !4853
  %arrayidx37 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %41, i64 %idxprom36, !dbg !4853
  %winspeed = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx37, i32 0, i32 5, !dbg !4856
  %43 = load float*, float** %winspeed, align 8, !dbg !4856
  %tobool38 = icmp ne float* %43, null, !dbg !4853
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !4857

if.then39:                                        ; preds = %if.end35
  %44 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4858
  %45 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4859
  %46 = load i32, i32* %a, align 4, !dbg !4860
  %idxprom40 = sext i32 %46 to i64, !dbg !4859
  %arrayidx41 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %45, i64 %idxprom40, !dbg !4859
  %winspeed42 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx41, i32 0, i32 5, !dbg !4861
  %47 = load float*, float** %winspeed42, align 8, !dbg !4861
  %48 = bitcast float* %47 to i8*, !dbg !4859
  call void %44(i8* %48), !dbg !4858
  br label %if.end43, !dbg !4858

if.end43:                                         ; preds = %if.then39, %if.end35
  %49 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4862
  %50 = load i32, i32* %a, align 4, !dbg !4864
  %idxprom44 = sext i32 %50 to i64, !dbg !4862
  %arrayidx45 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %49, i64 %idxprom44, !dbg !4862
  %origindex = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx45, i32 0, i32 6, !dbg !4865
  %51 = load i32*, i32** %origindex, align 8, !dbg !4865
  %tobool46 = icmp ne i32* %51, null, !dbg !4862
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !4866

if.then47:                                        ; preds = %if.end43
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4867
  %53 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4868
  %54 = load i32, i32* %a, align 4, !dbg !4869
  %idxprom48 = sext i32 %54 to i64, !dbg !4868
  %arrayidx49 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %53, i64 %idxprom48, !dbg !4868
  %origindex50 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx49, i32 0, i32 6, !dbg !4870
  %55 = load i32*, i32** %origindex50, align 8, !dbg !4870
  %56 = bitcast i32* %55 to i8*, !dbg !4868
  call void %52(i8* %56), !dbg !4867
  br label %if.end51, !dbg !4867

if.end51:                                         ; preds = %if.then47, %if.end43
  br label %for.inc, !dbg !4871

for.inc:                                          ; preds = %if.end51
  %57 = load i32, i32* %a, align 4, !dbg !4872
  %inc = add nsw i32 %57, 1, !dbg !4872
  store i32 %inc, i32* %a, align 4, !dbg !4872
  br label %for.cond, !dbg !4873, !llvm.loop !4874

for.end:                                          ; preds = %for.cond
  %58 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4876
  %59 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes.addr, align 8, !dbg !4877
  %60 = bitcast %struct.VertTableNode* %59 to i8*, !dbg !4877
  call void %58(i8* %60), !dbg !4876
  br label %return, !dbg !4878

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !4878
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_renderdata_vlaknodes(%struct.VlakTableNode* %vlaknodes) #0 !dbg !4879 {
entry:
  %vlaknodes.addr = alloca %struct.VlakTableNode*, align 8
  %a = alloca i32, align 4
  store %struct.VlakTableNode* %vlaknodes, %struct.VlakTableNode** %vlaknodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakTableNode** %vlaknodes.addr, metadata !4882, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4884, metadata !DIExpression()), !dbg !4885
  %0 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4886
  %cmp = icmp eq %struct.VlakTableNode* %0, null, !dbg !4888
  br i1 %cmp, label %if.then, label %if.end, !dbg !4889

if.then:                                          ; preds = %entry
  br label %return, !dbg !4890

if.end:                                           ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !4891
  br label %for.cond, !dbg !4893

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4894
  %2 = load i32, i32* %a, align 4, !dbg !4896
  %idxprom = sext i32 %2 to i64, !dbg !4894
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %1, i64 %idxprom, !dbg !4894
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !4897
  %3 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !4897
  %tobool = icmp ne %struct.VlakRen* %3, null, !dbg !4898
  br i1 %tobool, label %for.body, label %for.end, !dbg !4898

for.body:                                         ; preds = %for.cond
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4899
  %5 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4901
  %6 = load i32, i32* %a, align 4, !dbg !4902
  %idxprom1 = sext i32 %6 to i64, !dbg !4901
  %arrayidx2 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %5, i64 %idxprom1, !dbg !4901
  %vlak3 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx2, i32 0, i32 0, !dbg !4903
  %7 = load %struct.VlakRen*, %struct.VlakRen** %vlak3, align 8, !dbg !4903
  %8 = bitcast %struct.VlakRen* %7 to i8*, !dbg !4901
  call void %4(i8* %8), !dbg !4899
  %9 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4904
  %10 = load i32, i32* %a, align 4, !dbg !4906
  %idxprom4 = sext i32 %10 to i64, !dbg !4904
  %arrayidx5 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %9, i64 %idxprom4, !dbg !4904
  %mtface = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx5, i32 0, i32 1, !dbg !4907
  %11 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !4907
  %tobool6 = icmp ne %struct.MTFace* %11, null, !dbg !4904
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !4908

if.then7:                                         ; preds = %for.body
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4909
  %13 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4910
  %14 = load i32, i32* %a, align 4, !dbg !4911
  %idxprom8 = sext i32 %14 to i64, !dbg !4910
  %arrayidx9 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %13, i64 %idxprom8, !dbg !4910
  %mtface10 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx9, i32 0, i32 1, !dbg !4912
  %15 = load %struct.MTFace*, %struct.MTFace** %mtface10, align 8, !dbg !4912
  %16 = bitcast %struct.MTFace* %15 to i8*, !dbg !4910
  call void %12(i8* %16), !dbg !4909
  br label %if.end11, !dbg !4909

if.end11:                                         ; preds = %if.then7, %for.body
  %17 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4913
  %18 = load i32, i32* %a, align 4, !dbg !4915
  %idxprom12 = sext i32 %18 to i64, !dbg !4913
  %arrayidx13 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %17, i64 %idxprom12, !dbg !4913
  %mcol = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx13, i32 0, i32 2, !dbg !4916
  %19 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !4916
  %tobool14 = icmp ne %struct.MCol* %19, null, !dbg !4913
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !4917

if.then15:                                        ; preds = %if.end11
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4918
  %21 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4919
  %22 = load i32, i32* %a, align 4, !dbg !4920
  %idxprom16 = sext i32 %22 to i64, !dbg !4919
  %arrayidx17 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %21, i64 %idxprom16, !dbg !4919
  %mcol18 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx17, i32 0, i32 2, !dbg !4921
  %23 = load %struct.MCol*, %struct.MCol** %mcol18, align 8, !dbg !4921
  %24 = bitcast %struct.MCol* %23 to i8*, !dbg !4919
  call void %20(i8* %24), !dbg !4918
  br label %if.end19, !dbg !4918

if.end19:                                         ; preds = %if.then15, %if.end11
  %25 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4922
  %26 = load i32, i32* %a, align 4, !dbg !4924
  %idxprom20 = sext i32 %26 to i64, !dbg !4922
  %arrayidx21 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %25, i64 %idxprom20, !dbg !4922
  %origindex = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx21, i32 0, i32 3, !dbg !4925
  %27 = load i32*, i32** %origindex, align 8, !dbg !4925
  %tobool22 = icmp ne i32* %27, null, !dbg !4922
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !4926

if.then23:                                        ; preds = %if.end19
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4927
  %29 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4928
  %30 = load i32, i32* %a, align 4, !dbg !4929
  %idxprom24 = sext i32 %30 to i64, !dbg !4928
  %arrayidx25 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %29, i64 %idxprom24, !dbg !4928
  %origindex26 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx25, i32 0, i32 3, !dbg !4930
  %31 = load i32*, i32** %origindex26, align 8, !dbg !4930
  %32 = bitcast i32* %31 to i8*, !dbg !4928
  call void %28(i8* %32), !dbg !4927
  br label %if.end27, !dbg !4927

if.end27:                                         ; preds = %if.then23, %if.end19
  %33 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4931
  %34 = load i32, i32* %a, align 4, !dbg !4933
  %idxprom28 = sext i32 %34 to i64, !dbg !4931
  %arrayidx29 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %33, i64 %idxprom28, !dbg !4931
  %surfnor = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx29, i32 0, i32 6, !dbg !4934
  %35 = load float*, float** %surfnor, align 8, !dbg !4934
  %tobool30 = icmp ne float* %35, null, !dbg !4931
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !4935

if.then31:                                        ; preds = %if.end27
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4936
  %37 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4937
  %38 = load i32, i32* %a, align 4, !dbg !4938
  %idxprom32 = sext i32 %38 to i64, !dbg !4937
  %arrayidx33 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %37, i64 %idxprom32, !dbg !4937
  %surfnor34 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx33, i32 0, i32 6, !dbg !4939
  %39 = load float*, float** %surfnor34, align 8, !dbg !4939
  %40 = bitcast float* %39 to i8*, !dbg !4937
  call void %36(i8* %40), !dbg !4936
  br label %if.end35, !dbg !4936

if.end35:                                         ; preds = %if.then31, %if.end27
  %41 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4940
  %42 = load i32, i32* %a, align 4, !dbg !4942
  %idxprom36 = sext i32 %42 to i64, !dbg !4940
  %arrayidx37 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %41, i64 %idxprom36, !dbg !4940
  %tangent = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx37, i32 0, i32 7, !dbg !4943
  %43 = load float*, float** %tangent, align 8, !dbg !4943
  %tobool38 = icmp ne float* %43, null, !dbg !4940
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !4944

if.then39:                                        ; preds = %if.end35
  %44 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4945
  %45 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4946
  %46 = load i32, i32* %a, align 4, !dbg !4947
  %idxprom40 = sext i32 %46 to i64, !dbg !4946
  %arrayidx41 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %45, i64 %idxprom40, !dbg !4946
  %tangent42 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx41, i32 0, i32 7, !dbg !4948
  %47 = load float*, float** %tangent42, align 8, !dbg !4948
  %48 = bitcast float* %47 to i8*, !dbg !4946
  call void %44(i8* %48), !dbg !4945
  br label %if.end43, !dbg !4945

if.end43:                                         ; preds = %if.then39, %if.end35
  %49 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4949
  %50 = load i32, i32* %a, align 4, !dbg !4951
  %idxprom44 = sext i32 %50 to i64, !dbg !4949
  %arrayidx45 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %49, i64 %idxprom44, !dbg !4949
  %radface = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx45, i32 0, i32 8, !dbg !4952
  %51 = load %struct.RadFace**, %struct.RadFace*** %radface, align 8, !dbg !4952
  %tobool46 = icmp ne %struct.RadFace** %51, null, !dbg !4949
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !4953

if.then47:                                        ; preds = %if.end43
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4954
  %53 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4955
  %54 = load i32, i32* %a, align 4, !dbg !4956
  %idxprom48 = sext i32 %54 to i64, !dbg !4955
  %arrayidx49 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %53, i64 %idxprom48, !dbg !4955
  %radface50 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx49, i32 0, i32 8, !dbg !4957
  %55 = load %struct.RadFace**, %struct.RadFace*** %radface50, align 8, !dbg !4957
  %56 = bitcast %struct.RadFace** %55 to i8*, !dbg !4955
  call void %52(i8* %56), !dbg !4954
  br label %if.end51, !dbg !4954

if.end51:                                         ; preds = %if.then47, %if.end43
  br label %for.inc, !dbg !4958

for.inc:                                          ; preds = %if.end51
  %57 = load i32, i32* %a, align 4, !dbg !4959
  %inc = add nsw i32 %57, 1, !dbg !4959
  store i32 %inc, i32* %a, align 4, !dbg !4959
  br label %for.cond, !dbg !4960, !llvm.loop !4961

for.end:                                          ; preds = %for.cond
  %58 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4963
  %59 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes.addr, align 8, !dbg !4964
  %60 = bitcast %struct.VlakTableNode* %59 to i8*, !dbg !4964
  call void %58(i8* %60), !dbg !4963
  br label %return, !dbg !4965

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !4965
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_renderdata_tables(%struct.Render* %re) #0 !dbg !4966 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %strandbuf = alloca %struct.StrandBuffer*, align 8
  %a = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4969, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !4971, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !4973, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.declare(metadata %struct.StrandBuffer** %strandbuf, metadata !4975, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4977, metadata !DIExpression()), !dbg !4978
  store i32 0, i32* %a, align 4, !dbg !4978
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4979
  %objecttable = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 68, !dbg !4981
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %objecttable, i32 0, i32 0, !dbg !4982
  %1 = load i8*, i8** %first, align 8, !dbg !4982
  %2 = bitcast i8* %1 to %struct.ObjectRen*, !dbg !4979
  store %struct.ObjectRen* %2, %struct.ObjectRen** %obr, align 8, !dbg !4983
  br label %for.cond, !dbg !4984

for.cond:                                         ; preds = %for.inc61, %entry
  %3 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4985
  %tobool = icmp ne %struct.ObjectRen* %3, null, !dbg !4987
  br i1 %tobool, label %for.body, label %for.end62, !dbg !4987

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4988
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %4, i32 0, i32 18, !dbg !4991
  %5 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !4991
  %tobool1 = icmp ne %struct.VertTableNode* %5, null, !dbg !4988
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4992

if.then:                                          ; preds = %for.body
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4993
  %vertnodes2 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 18, !dbg !4995
  %7 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes2, align 8, !dbg !4995
  call void @free_renderdata_vertnodes(%struct.VertTableNode* %7), !dbg !4996
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4997
  %vertnodes3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %8, i32 0, i32 18, !dbg !4998
  store %struct.VertTableNode* null, %struct.VertTableNode** %vertnodes3, align 8, !dbg !4999
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5000
  %vertnodeslen = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 14, !dbg !5001
  store i32 0, i32* %vertnodeslen, align 8, !dbg !5002
  br label %if.end, !dbg !5003

if.end:                                           ; preds = %if.then, %for.body
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5004
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 19, !dbg !5006
  %11 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !5006
  %tobool4 = icmp ne %struct.VlakTableNode* %11, null, !dbg !5004
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !5007

if.then5:                                         ; preds = %if.end
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5008
  %vlaknodes6 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %12, i32 0, i32 19, !dbg !5010
  %13 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes6, align 8, !dbg !5010
  call void @free_renderdata_vlaknodes(%struct.VlakTableNode* %13), !dbg !5011
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5012
  %vlaknodes7 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %14, i32 0, i32 19, !dbg !5013
  store %struct.VlakTableNode* null, %struct.VlakTableNode** %vlaknodes7, align 8, !dbg !5014
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5015
  %vlaknodeslen = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %15, i32 0, i32 15, !dbg !5016
  store i32 0, i32* %vlaknodeslen, align 4, !dbg !5017
  %16 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5018
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %16, i32 0, i32 11, !dbg !5019
  store i32 0, i32* %totvlak, align 4, !dbg !5020
  br label %if.end8, !dbg !5021

if.end8:                                          ; preds = %if.then5, %if.end
  %17 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5022
  %bloha = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %17, i32 0, i32 21, !dbg !5024
  %18 = load %struct.HaloRen**, %struct.HaloRen*** %bloha, align 8, !dbg !5024
  %tobool9 = icmp ne %struct.HaloRen** %18, null, !dbg !5022
  br i1 %tobool9, label %if.then10, label %if.end20, !dbg !5025

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %a, align 4, !dbg !5026
  br label %for.cond11, !dbg !5029

for.cond11:                                       ; preds = %for.inc, %if.then10
  %19 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5030
  %bloha12 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %19, i32 0, i32 21, !dbg !5032
  %20 = load %struct.HaloRen**, %struct.HaloRen*** %bloha12, align 8, !dbg !5032
  %21 = load i32, i32* %a, align 4, !dbg !5033
  %idxprom = sext i32 %21 to i64, !dbg !5030
  %arrayidx = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %20, i64 %idxprom, !dbg !5030
  %22 = load %struct.HaloRen*, %struct.HaloRen** %arrayidx, align 8, !dbg !5030
  %tobool13 = icmp ne %struct.HaloRen* %22, null, !dbg !5034
  br i1 %tobool13, label %for.body14, label %for.end, !dbg !5034

for.body14:                                       ; preds = %for.cond11
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5035
  %24 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5036
  %bloha15 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %24, i32 0, i32 21, !dbg !5037
  %25 = load %struct.HaloRen**, %struct.HaloRen*** %bloha15, align 8, !dbg !5037
  %26 = load i32, i32* %a, align 4, !dbg !5038
  %idxprom16 = sext i32 %26 to i64, !dbg !5036
  %arrayidx17 = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %25, i64 %idxprom16, !dbg !5036
  %27 = load %struct.HaloRen*, %struct.HaloRen** %arrayidx17, align 8, !dbg !5036
  %28 = bitcast %struct.HaloRen* %27 to i8*, !dbg !5036
  call void %23(i8* %28), !dbg !5035
  br label %for.inc, !dbg !5035

for.inc:                                          ; preds = %for.body14
  %29 = load i32, i32* %a, align 4, !dbg !5039
  %inc = add nsw i32 %29, 1, !dbg !5039
  store i32 %inc, i32* %a, align 4, !dbg !5039
  br label %for.cond11, !dbg !5040, !llvm.loop !5041

for.end:                                          ; preds = %for.cond11
  %30 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5043
  %31 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5044
  %bloha18 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %31, i32 0, i32 21, !dbg !5045
  %32 = load %struct.HaloRen**, %struct.HaloRen*** %bloha18, align 8, !dbg !5045
  %33 = bitcast %struct.HaloRen** %32 to i8*, !dbg !5044
  call void %30(i8* %33), !dbg !5043
  %34 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5046
  %bloha19 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %34, i32 0, i32 21, !dbg !5047
  store %struct.HaloRen** null, %struct.HaloRen*** %bloha19, align 8, !dbg !5048
  %35 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5049
  %blohalen = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %35, i32 0, i32 17, !dbg !5050
  store i32 0, i32* %blohalen, align 4, !dbg !5051
  br label %if.end20, !dbg !5052

if.end20:                                         ; preds = %for.end, %if.end8
  %36 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5053
  %strandnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %36, i32 0, i32 20, !dbg !5055
  %37 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes, align 8, !dbg !5055
  %tobool21 = icmp ne %struct.StrandTableNode* %37, null, !dbg !5053
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !5056

if.then22:                                        ; preds = %if.end20
  %38 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5057
  %strandnodes23 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %38, i32 0, i32 20, !dbg !5059
  %39 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes23, align 8, !dbg !5059
  call void @free_renderdata_strandnodes(%struct.StrandTableNode* %39), !dbg !5060
  %40 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5061
  %strandnodes24 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %40, i32 0, i32 20, !dbg !5062
  store %struct.StrandTableNode* null, %struct.StrandTableNode** %strandnodes24, align 8, !dbg !5063
  %41 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5064
  %strandnodeslen = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %41, i32 0, i32 16, !dbg !5065
  store i32 0, i32* %strandnodeslen, align 8, !dbg !5066
  br label %if.end25, !dbg !5067

if.end25:                                         ; preds = %if.then22, %if.end20
  %42 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5068
  %strandbuf26 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %42, i32 0, i32 22, !dbg !5069
  %43 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf26, align 8, !dbg !5069
  store %struct.StrandBuffer* %43, %struct.StrandBuffer** %strandbuf, align 8, !dbg !5070
  %44 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !5071
  %tobool27 = icmp ne %struct.StrandBuffer* %44, null, !dbg !5071
  br i1 %tobool27, label %if.then28, label %if.end37, !dbg !5073

if.then28:                                        ; preds = %if.end25
  %45 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !5074
  %vert = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %45, i32 0, i32 2, !dbg !5077
  %46 = load %struct.StrandVert*, %struct.StrandVert** %vert, align 8, !dbg !5077
  %tobool29 = icmp ne %struct.StrandVert* %46, null, !dbg !5074
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !5078

if.then30:                                        ; preds = %if.then28
  %47 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5079
  %48 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !5080
  %vert31 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %48, i32 0, i32 2, !dbg !5081
  %49 = load %struct.StrandVert*, %struct.StrandVert** %vert31, align 8, !dbg !5081
  %50 = bitcast %struct.StrandVert* %49 to i8*, !dbg !5080
  call void %47(i8* %50), !dbg !5079
  br label %if.end32, !dbg !5079

if.end32:                                         ; preds = %if.then30, %if.then28
  %51 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !5082
  %bound = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %51, i32 0, i32 3, !dbg !5084
  %52 = load %struct.StrandBound*, %struct.StrandBound** %bound, align 8, !dbg !5084
  %tobool33 = icmp ne %struct.StrandBound* %52, null, !dbg !5082
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !5085

if.then34:                                        ; preds = %if.end32
  %53 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5086
  %54 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !5087
  %bound35 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %54, i32 0, i32 3, !dbg !5088
  %55 = load %struct.StrandBound*, %struct.StrandBound** %bound35, align 8, !dbg !5088
  %56 = bitcast %struct.StrandBound* %55 to i8*, !dbg !5087
  call void %53(i8* %56), !dbg !5086
  br label %if.end36, !dbg !5086

if.end36:                                         ; preds = %if.then34, %if.end32
  %57 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5089
  %58 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !5090
  %59 = bitcast %struct.StrandBuffer* %58 to i8*, !dbg !5090
  call void %57(i8* %59), !dbg !5089
  br label %if.end37, !dbg !5091

if.end37:                                         ; preds = %if.end36, %if.end25
  %60 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5092
  %mtface = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %60, i32 0, i32 23, !dbg !5094
  %61 = load [64 x i8]*, [64 x i8]** %mtface, align 8, !dbg !5094
  %tobool38 = icmp ne [64 x i8]* %61, null, !dbg !5092
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !5095

if.then39:                                        ; preds = %if.end37
  %62 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5096
  %63 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5097
  %mtface40 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %63, i32 0, i32 23, !dbg !5098
  %64 = load [64 x i8]*, [64 x i8]** %mtface40, align 8, !dbg !5098
  %65 = bitcast [64 x i8]* %64 to i8*, !dbg !5097
  call void %62(i8* %65), !dbg !5096
  br label %if.end41, !dbg !5096

if.end41:                                         ; preds = %if.then39, %if.end37
  %66 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5099
  %mcol = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %66, i32 0, i32 24, !dbg !5101
  %67 = load [64 x i8]*, [64 x i8]** %mcol, align 8, !dbg !5101
  %tobool42 = icmp ne [64 x i8]* %67, null, !dbg !5099
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !5102

if.then43:                                        ; preds = %if.end41
  %68 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5103
  %69 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5104
  %mcol44 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %69, i32 0, i32 24, !dbg !5105
  %70 = load [64 x i8]*, [64 x i8]** %mcol44, align 8, !dbg !5105
  %71 = bitcast [64 x i8]* %70 to i8*, !dbg !5104
  call void %68(i8* %71), !dbg !5103
  br label %if.end45, !dbg !5103

if.end45:                                         ; preds = %if.then43, %if.end41
  %72 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5106
  %rayfaces = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %72, i32 0, i32 30, !dbg !5108
  %73 = load %struct.RayFace*, %struct.RayFace** %rayfaces, align 8, !dbg !5108
  %tobool46 = icmp ne %struct.RayFace* %73, null, !dbg !5106
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !5109

if.then47:                                        ; preds = %if.end45
  %74 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5110
  %75 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5112
  %rayfaces48 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %75, i32 0, i32 30, !dbg !5113
  %76 = load %struct.RayFace*, %struct.RayFace** %rayfaces48, align 8, !dbg !5113
  %77 = bitcast %struct.RayFace* %76 to i8*, !dbg !5112
  call void %74(i8* %77), !dbg !5110
  %78 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5114
  %rayfaces49 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %78, i32 0, i32 30, !dbg !5115
  store %struct.RayFace* null, %struct.RayFace** %rayfaces49, align 8, !dbg !5116
  br label %if.end50, !dbg !5117

if.end50:                                         ; preds = %if.then47, %if.end45
  %79 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5118
  %rayprimitives = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %79, i32 0, i32 31, !dbg !5120
  %80 = load %struct.VlakPrimitive*, %struct.VlakPrimitive** %rayprimitives, align 8, !dbg !5120
  %tobool51 = icmp ne %struct.VlakPrimitive* %80, null, !dbg !5118
  br i1 %tobool51, label %if.then52, label %if.end55, !dbg !5121

if.then52:                                        ; preds = %if.end50
  %81 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5122
  %82 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5124
  %rayprimitives53 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %82, i32 0, i32 31, !dbg !5125
  %83 = load %struct.VlakPrimitive*, %struct.VlakPrimitive** %rayprimitives53, align 8, !dbg !5125
  %84 = bitcast %struct.VlakPrimitive* %83 to i8*, !dbg !5124
  call void %81(i8* %84), !dbg !5122
  %85 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5126
  %rayprimitives54 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %85, i32 0, i32 31, !dbg !5127
  store %struct.VlakPrimitive* null, %struct.VlakPrimitive** %rayprimitives54, align 8, !dbg !5128
  br label %if.end55, !dbg !5129

if.end55:                                         ; preds = %if.then52, %if.end50
  %86 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5130
  %raytree = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %86, i32 0, i32 29, !dbg !5132
  %87 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !5132
  %tobool56 = icmp ne %struct.RayObject* %87, null, !dbg !5130
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !5133

if.then57:                                        ; preds = %if.end55
  %88 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5134
  %raytree58 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %88, i32 0, i32 29, !dbg !5136
  %89 = load %struct.RayObject*, %struct.RayObject** %raytree58, align 8, !dbg !5136
  call void @RE_rayobject_free(%struct.RayObject* %89), !dbg !5137
  %90 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5138
  %raytree59 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %90, i32 0, i32 29, !dbg !5139
  store %struct.RayObject* null, %struct.RayObject** %raytree59, align 8, !dbg !5140
  br label %if.end60, !dbg !5141

if.end60:                                         ; preds = %if.then57, %if.end55
  br label %for.inc61, !dbg !5142

for.inc61:                                        ; preds = %if.end60
  %91 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5143
  %next = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %91, i32 0, i32 0, !dbg !5144
  %92 = load %struct.ObjectRen*, %struct.ObjectRen** %next, align 8, !dbg !5144
  store %struct.ObjectRen* %92, %struct.ObjectRen** %obr, align 8, !dbg !5145
  br label %for.cond, !dbg !5146, !llvm.loop !5147

for.end62:                                        ; preds = %for.cond
  %93 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5149
  %objectinstance = getelementptr inbounds %struct.Render, %struct.Render* %93, i32 0, i32 69, !dbg !5151
  %94 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %objectinstance, align 8, !dbg !5151
  %tobool63 = icmp ne %struct.ObjectInstanceRen* %94, null, !dbg !5149
  br i1 %tobool63, label %if.then64, label %if.end86, !dbg !5152

if.then64:                                        ; preds = %for.end62
  %95 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5153
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %95, i32 0, i32 70, !dbg !5156
  %first65 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !5157
  %96 = load i8*, i8** %first65, align 8, !dbg !5157
  %97 = bitcast i8* %96 to %struct.ObjectInstanceRen*, !dbg !5153
  store %struct.ObjectInstanceRen* %97, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5158
  br label %for.cond66, !dbg !5159

for.cond66:                                       ; preds = %for.inc78, %if.then64
  %98 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5160
  %tobool67 = icmp ne %struct.ObjectInstanceRen* %98, null, !dbg !5162
  br i1 %tobool67, label %for.body68, label %for.end80, !dbg !5162

for.body68:                                       ; preds = %for.cond66
  %99 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5163
  %vectors = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %99, i32 0, i32 16, !dbg !5166
  %100 = load float*, float** %vectors, align 8, !dbg !5166
  %tobool69 = icmp ne float* %100, null, !dbg !5163
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !5167

if.then70:                                        ; preds = %for.body68
  %101 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5168
  %102 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5169
  %vectors71 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %102, i32 0, i32 16, !dbg !5170
  %103 = load float*, float** %vectors71, align 8, !dbg !5170
  %104 = bitcast float* %103 to i8*, !dbg !5169
  call void %101(i8* %104), !dbg !5168
  br label %if.end72, !dbg !5168

if.end72:                                         ; preds = %if.then70, %for.body68
  %105 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5171
  %raytree73 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %105, i32 0, i32 18, !dbg !5173
  %106 = load %struct.RayObject*, %struct.RayObject** %raytree73, align 8, !dbg !5173
  %tobool74 = icmp ne %struct.RayObject* %106, null, !dbg !5171
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !5174

if.then75:                                        ; preds = %if.end72
  %107 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5175
  %raytree76 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %107, i32 0, i32 18, !dbg !5176
  %108 = load %struct.RayObject*, %struct.RayObject** %raytree76, align 8, !dbg !5176
  call void @RE_rayobject_free(%struct.RayObject* %108), !dbg !5177
  br label %if.end77, !dbg !5177

if.end77:                                         ; preds = %if.then75, %if.end72
  br label %for.inc78, !dbg !5178

for.inc78:                                        ; preds = %if.end77
  %109 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5179
  %next79 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %109, i32 0, i32 0, !dbg !5180
  %110 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next79, align 8, !dbg !5180
  store %struct.ObjectInstanceRen* %110, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5181
  br label %for.cond66, !dbg !5182, !llvm.loop !5183

for.end80:                                        ; preds = %for.cond66
  %111 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5185
  %112 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5186
  %objectinstance81 = getelementptr inbounds %struct.Render, %struct.Render* %112, i32 0, i32 69, !dbg !5187
  %113 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %objectinstance81, align 8, !dbg !5187
  %114 = bitcast %struct.ObjectInstanceRen* %113 to i8*, !dbg !5186
  call void %111(i8* %114), !dbg !5185
  %115 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5188
  %objectinstance82 = getelementptr inbounds %struct.Render, %struct.Render* %115, i32 0, i32 69, !dbg !5189
  store %struct.ObjectInstanceRen* null, %struct.ObjectInstanceRen** %objectinstance82, align 8, !dbg !5190
  %116 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5191
  %totinstance = getelementptr inbounds %struct.Render, %struct.Render* %116, i32 0, i32 71, !dbg !5192
  store i32 0, i32* %totinstance, align 8, !dbg !5193
  %117 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5194
  %instancetable83 = getelementptr inbounds %struct.Render, %struct.Render* %117, i32 0, i32 70, !dbg !5195
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable83, i32 0, i32 1, !dbg !5196
  store i8* null, i8** %last, align 8, !dbg !5197
  %118 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5198
  %instancetable84 = getelementptr inbounds %struct.Render, %struct.Render* %118, i32 0, i32 70, !dbg !5199
  %first85 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable84, i32 0, i32 0, !dbg !5200
  store i8* null, i8** %first85, align 8, !dbg !5201
  br label %if.end86, !dbg !5202

if.end86:                                         ; preds = %for.end80, %for.end62
  %119 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5203
  %sortedhalos = getelementptr inbounds %struct.Render, %struct.Render* %119, i32 0, i32 65, !dbg !5205
  %120 = load %struct.HaloRen**, %struct.HaloRen*** %sortedhalos, align 8, !dbg !5205
  %tobool87 = icmp ne %struct.HaloRen** %120, null, !dbg !5203
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !5206

if.then88:                                        ; preds = %if.end86
  %121 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5207
  %122 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5209
  %sortedhalos89 = getelementptr inbounds %struct.Render, %struct.Render* %122, i32 0, i32 65, !dbg !5210
  %123 = load %struct.HaloRen**, %struct.HaloRen*** %sortedhalos89, align 8, !dbg !5210
  %124 = bitcast %struct.HaloRen** %123 to i8*, !dbg !5209
  call void %121(i8* %124), !dbg !5207
  %125 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5211
  %sortedhalos90 = getelementptr inbounds %struct.Render, %struct.Render* %125, i32 0, i32 65, !dbg !5212
  store %struct.HaloRen** null, %struct.HaloRen*** %sortedhalos90, align 8, !dbg !5213
  br label %if.end91, !dbg !5214

if.end91:                                         ; preds = %if.then88, %if.end86
  %126 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5215
  %customdata_names = getelementptr inbounds %struct.Render, %struct.Render* %126, i32 0, i32 77, !dbg !5216
  call void @BLI_freelistN(%struct.ListBase* %customdata_names), !dbg !5217
  %127 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5218
  %objecttable92 = getelementptr inbounds %struct.Render, %struct.Render* %127, i32 0, i32 68, !dbg !5219
  call void @BLI_freelistN(%struct.ListBase* %objecttable92), !dbg !5220
  %128 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5221
  %instancetable93 = getelementptr inbounds %struct.Render, %struct.Render* %128, i32 0, i32 70, !dbg !5222
  call void @BLI_freelistN(%struct.ListBase* %instancetable93), !dbg !5223
  ret void, !dbg !5224
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_renderdata_strandnodes(%struct.StrandTableNode* %strandnodes) #0 !dbg !5225 {
entry:
  %strandnodes.addr = alloca %struct.StrandTableNode*, align 8
  %a = alloca i32, align 4
  store %struct.StrandTableNode* %strandnodes, %struct.StrandTableNode** %strandnodes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandTableNode** %strandnodes.addr, metadata !5228, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5230, metadata !DIExpression()), !dbg !5231
  %0 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5232
  %cmp = icmp eq %struct.StrandTableNode* %0, null, !dbg !5234
  br i1 %cmp, label %if.then, label %if.end, !dbg !5235

if.then:                                          ; preds = %entry
  br label %return, !dbg !5236

if.end:                                           ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !5237
  br label %for.cond, !dbg !5239

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5240
  %2 = load i32, i32* %a, align 4, !dbg !5242
  %idxprom = sext i32 %2 to i64, !dbg !5240
  %arrayidx = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %1, i64 %idxprom, !dbg !5240
  %strand = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx, i32 0, i32 0, !dbg !5243
  %3 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !5243
  %tobool = icmp ne %struct.StrandRen* %3, null, !dbg !5244
  br i1 %tobool, label %for.body, label %for.end, !dbg !5244

for.body:                                         ; preds = %for.cond
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5245
  %5 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5247
  %6 = load i32, i32* %a, align 4, !dbg !5248
  %idxprom1 = sext i32 %6 to i64, !dbg !5247
  %arrayidx2 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %5, i64 %idxprom1, !dbg !5247
  %strand3 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx2, i32 0, i32 0, !dbg !5249
  %7 = load %struct.StrandRen*, %struct.StrandRen** %strand3, align 8, !dbg !5249
  %8 = bitcast %struct.StrandRen* %7 to i8*, !dbg !5247
  call void %4(i8* %8), !dbg !5245
  %9 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5250
  %10 = load i32, i32* %a, align 4, !dbg !5252
  %idxprom4 = sext i32 %10 to i64, !dbg !5250
  %arrayidx5 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %9, i64 %idxprom4, !dbg !5250
  %uv = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx5, i32 0, i32 6, !dbg !5253
  %11 = load float*, float** %uv, align 8, !dbg !5253
  %tobool6 = icmp ne float* %11, null, !dbg !5250
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !5254

if.then7:                                         ; preds = %for.body
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5255
  %13 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5256
  %14 = load i32, i32* %a, align 4, !dbg !5257
  %idxprom8 = sext i32 %14 to i64, !dbg !5256
  %arrayidx9 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %13, i64 %idxprom8, !dbg !5256
  %uv10 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx9, i32 0, i32 6, !dbg !5258
  %15 = load float*, float** %uv10, align 8, !dbg !5258
  %16 = bitcast float* %15 to i8*, !dbg !5256
  call void %12(i8* %16), !dbg !5255
  br label %if.end11, !dbg !5255

if.end11:                                         ; preds = %if.then7, %for.body
  %17 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5259
  %18 = load i32, i32* %a, align 4, !dbg !5261
  %idxprom12 = sext i32 %18 to i64, !dbg !5259
  %arrayidx13 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %17, i64 %idxprom12, !dbg !5259
  %mcol = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx13, i32 0, i32 5, !dbg !5262
  %19 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !5262
  %tobool14 = icmp ne %struct.MCol* %19, null, !dbg !5259
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !5263

if.then15:                                        ; preds = %if.end11
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5264
  %21 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5265
  %22 = load i32, i32* %a, align 4, !dbg !5266
  %idxprom16 = sext i32 %22 to i64, !dbg !5265
  %arrayidx17 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %21, i64 %idxprom16, !dbg !5265
  %mcol18 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx17, i32 0, i32 5, !dbg !5267
  %23 = load %struct.MCol*, %struct.MCol** %mcol18, align 8, !dbg !5267
  %24 = bitcast %struct.MCol* %23 to i8*, !dbg !5265
  call void %20(i8* %24), !dbg !5264
  br label %if.end19, !dbg !5264

if.end19:                                         ; preds = %if.then15, %if.end11
  %25 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5268
  %26 = load i32, i32* %a, align 4, !dbg !5270
  %idxprom20 = sext i32 %26 to i64, !dbg !5268
  %arrayidx21 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %25, i64 %idxprom20, !dbg !5268
  %winspeed = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx21, i32 0, i32 1, !dbg !5271
  %27 = load float*, float** %winspeed, align 8, !dbg !5271
  %tobool22 = icmp ne float* %27, null, !dbg !5268
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !5272

if.then23:                                        ; preds = %if.end19
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5273
  %29 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5274
  %30 = load i32, i32* %a, align 4, !dbg !5275
  %idxprom24 = sext i32 %30 to i64, !dbg !5274
  %arrayidx25 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %29, i64 %idxprom24, !dbg !5274
  %winspeed26 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx25, i32 0, i32 1, !dbg !5276
  %31 = load float*, float** %winspeed26, align 8, !dbg !5276
  %32 = bitcast float* %31 to i8*, !dbg !5274
  call void %28(i8* %32), !dbg !5273
  br label %if.end27, !dbg !5273

if.end27:                                         ; preds = %if.then23, %if.end19
  %33 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5277
  %34 = load i32, i32* %a, align 4, !dbg !5279
  %idxprom28 = sext i32 %34 to i64, !dbg !5277
  %arrayidx29 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %33, i64 %idxprom28, !dbg !5277
  %surfnor = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx29, i32 0, i32 2, !dbg !5280
  %35 = load float*, float** %surfnor, align 8, !dbg !5280
  %tobool30 = icmp ne float* %35, null, !dbg !5277
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !5281

if.then31:                                        ; preds = %if.end27
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5282
  %37 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5283
  %38 = load i32, i32* %a, align 4, !dbg !5284
  %idxprom32 = sext i32 %38 to i64, !dbg !5283
  %arrayidx33 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %37, i64 %idxprom32, !dbg !5283
  %surfnor34 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx33, i32 0, i32 2, !dbg !5285
  %39 = load float*, float** %surfnor34, align 8, !dbg !5285
  %40 = bitcast float* %39 to i8*, !dbg !5283
  call void %36(i8* %40), !dbg !5282
  br label %if.end35, !dbg !5282

if.end35:                                         ; preds = %if.then31, %if.end27
  %41 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5286
  %42 = load i32, i32* %a, align 4, !dbg !5288
  %idxprom36 = sext i32 %42 to i64, !dbg !5286
  %arrayidx37 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %41, i64 %idxprom36, !dbg !5286
  %simplify = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx37, i32 0, i32 3, !dbg !5289
  %43 = load float*, float** %simplify, align 8, !dbg !5289
  %tobool38 = icmp ne float* %43, null, !dbg !5286
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !5290

if.then39:                                        ; preds = %if.end35
  %44 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5291
  %45 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5292
  %46 = load i32, i32* %a, align 4, !dbg !5293
  %idxprom40 = sext i32 %46 to i64, !dbg !5292
  %arrayidx41 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %45, i64 %idxprom40, !dbg !5292
  %simplify42 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx41, i32 0, i32 3, !dbg !5294
  %47 = load float*, float** %simplify42, align 8, !dbg !5294
  %48 = bitcast float* %47 to i8*, !dbg !5292
  call void %44(i8* %48), !dbg !5291
  br label %if.end43, !dbg !5291

if.end43:                                         ; preds = %if.then39, %if.end35
  %49 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5295
  %50 = load i32, i32* %a, align 4, !dbg !5297
  %idxprom44 = sext i32 %50 to i64, !dbg !5295
  %arrayidx45 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %49, i64 %idxprom44, !dbg !5295
  %face = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx45, i32 0, i32 4, !dbg !5298
  %51 = load i32*, i32** %face, align 8, !dbg !5298
  %tobool46 = icmp ne i32* %51, null, !dbg !5295
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !5299

if.then47:                                        ; preds = %if.end43
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5300
  %53 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5301
  %54 = load i32, i32* %a, align 4, !dbg !5302
  %idxprom48 = sext i32 %54 to i64, !dbg !5301
  %arrayidx49 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %53, i64 %idxprom48, !dbg !5301
  %face50 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx49, i32 0, i32 4, !dbg !5303
  %55 = load i32*, i32** %face50, align 8, !dbg !5303
  %56 = bitcast i32* %55 to i8*, !dbg !5301
  call void %52(i8* %56), !dbg !5300
  br label %if.end51, !dbg !5300

if.end51:                                         ; preds = %if.then47, %if.end43
  br label %for.inc, !dbg !5304

for.inc:                                          ; preds = %if.end51
  %57 = load i32, i32* %a, align 4, !dbg !5305
  %inc = add nsw i32 %57, 1, !dbg !5305
  store i32 %inc, i32* %a, align 4, !dbg !5305
  br label %for.cond, !dbg !5306, !llvm.loop !5307

for.end:                                          ; preds = %for.cond
  %58 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5309
  %59 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes.addr, align 8, !dbg !5310
  %60 = bitcast %struct.StrandTableNode* %59 to i8*, !dbg !5310
  call void %58(i8* %60), !dbg !5309
  br label %return, !dbg !5311

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !5311
}

declare dso_local void @RE_rayobject_free(%struct.RayObject*) #3

declare dso_local void @BLI_freelistN(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.HaloRen* @RE_findOrAddHalo(%struct.ObjectRen* %obr, i32 %nr) #0 !dbg !5312 {
entry:
  %retval = alloca %struct.HaloRen*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %nr.addr = alloca i32, align 4
  %h = alloca %struct.HaloRen*, align 8
  %temp = alloca %struct.HaloRen**, align 8
  %a = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !5315, metadata !DIExpression()), !dbg !5316
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !5317, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %h, metadata !5319, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.declare(metadata %struct.HaloRen*** %temp, metadata !5321, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5323, metadata !DIExpression()), !dbg !5324
  %0 = load i32, i32* %nr.addr, align 4, !dbg !5325
  %cmp = icmp slt i32 %0, 0, !dbg !5327
  br i1 %cmp, label %if.then, label %if.end, !dbg !5328

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %nr.addr, align 4, !dbg !5329
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i64 0, i64 0), i32 %1), !dbg !5331
  store %struct.HaloRen* null, %struct.HaloRen** %retval, align 8, !dbg !5332
  br label %return, !dbg !5332

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %nr.addr, align 4, !dbg !5333
  %shr = ashr i32 %2, 8, !dbg !5334
  store i32 %shr, i32* %a, align 4, !dbg !5335
  %3 = load i32, i32* %a, align 4, !dbg !5336
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5338
  %blohalen = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %4, i32 0, i32 17, !dbg !5339
  %5 = load i32, i32* %blohalen, align 4, !dbg !5339
  %sub = sub nsw i32 %5, 1, !dbg !5340
  %cmp1 = icmp sge i32 %3, %sub, !dbg !5341
  br i1 %cmp1, label %if.then2, label %if.end19, !dbg !5342

if.then2:                                         ; preds = %if.end
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5343
  %bloha = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 21, !dbg !5345
  %7 = load %struct.HaloRen**, %struct.HaloRen*** %bloha, align 8, !dbg !5345
  store %struct.HaloRen** %7, %struct.HaloRen*** %temp, align 8, !dbg !5346
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5347
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5348
  %blohalen3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 17, !dbg !5349
  %10 = load i32, i32* %blohalen3, align 4, !dbg !5349
  %add = add nsw i32 %10, 1024, !dbg !5350
  %conv = sext i32 %add to i64, !dbg !5351
  %mul = mul i64 8, %conv, !dbg !5352
  %call4 = call i8* %8(i64 %mul, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0)), !dbg !5347
  %11 = bitcast i8* %call4 to %struct.HaloRen**, !dbg !5353
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5354
  %bloha5 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %12, i32 0, i32 21, !dbg !5355
  store %struct.HaloRen** %11, %struct.HaloRen*** %bloha5, align 8, !dbg !5356
  %13 = load %struct.HaloRen**, %struct.HaloRen*** %temp, align 8, !dbg !5357
  %tobool = icmp ne %struct.HaloRen** %13, null, !dbg !5357
  br i1 %tobool, label %if.then6, label %if.end11, !dbg !5359

if.then6:                                         ; preds = %if.then2
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5360
  %bloha7 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %14, i32 0, i32 21, !dbg !5361
  %15 = load %struct.HaloRen**, %struct.HaloRen*** %bloha7, align 8, !dbg !5361
  %16 = bitcast %struct.HaloRen** %15 to i8*, !dbg !5362
  %17 = load %struct.HaloRen**, %struct.HaloRen*** %temp, align 8, !dbg !5363
  %18 = bitcast %struct.HaloRen** %17 to i8*, !dbg !5362
  %19 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5364
  %blohalen8 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %19, i32 0, i32 17, !dbg !5365
  %20 = load i32, i32* %blohalen8, align 4, !dbg !5365
  %conv9 = sext i32 %20 to i64, !dbg !5364
  %mul10 = mul i64 %conv9, 8, !dbg !5366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %18, i64 %mul10, i1 false), !dbg !5362
  br label %if.end11, !dbg !5362

if.end11:                                         ; preds = %if.then6, %if.then2
  %21 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5367
  %bloha12 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %21, i32 0, i32 21, !dbg !5368
  %22 = load %struct.HaloRen**, %struct.HaloRen*** %bloha12, align 8, !dbg !5368
  %23 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5369
  %blohalen13 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %23, i32 0, i32 17, !dbg !5370
  %24 = load i32, i32* %blohalen13, align 4, !dbg !5370
  %idxprom = sext i32 %24 to i64, !dbg !5367
  %arrayidx = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %22, i64 %idxprom, !dbg !5367
  %25 = bitcast %struct.HaloRen** %arrayidx to i8*, !dbg !5371
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 8192, i1 false), !dbg !5371
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5372
  %blohalen14 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %26, i32 0, i32 17, !dbg !5373
  %27 = load i32, i32* %blohalen14, align 4, !dbg !5374
  %add15 = add nsw i32 %27, 1024, !dbg !5374
  store i32 %add15, i32* %blohalen14, align 4, !dbg !5374
  %28 = load %struct.HaloRen**, %struct.HaloRen*** %temp, align 8, !dbg !5375
  %tobool16 = icmp ne %struct.HaloRen** %28, null, !dbg !5375
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5377

if.then17:                                        ; preds = %if.end11
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5378
  %30 = load %struct.HaloRen**, %struct.HaloRen*** %temp, align 8, !dbg !5379
  %31 = bitcast %struct.HaloRen** %30 to i8*, !dbg !5379
  call void %29(i8* %31), !dbg !5378
  br label %if.end18, !dbg !5378

if.end18:                                         ; preds = %if.then17, %if.end11
  br label %if.end19, !dbg !5380

if.end19:                                         ; preds = %if.end18, %if.end
  %32 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5381
  %bloha20 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %32, i32 0, i32 21, !dbg !5382
  %33 = load %struct.HaloRen**, %struct.HaloRen*** %bloha20, align 8, !dbg !5382
  %34 = load i32, i32* %a, align 4, !dbg !5383
  %idxprom21 = sext i32 %34 to i64, !dbg !5381
  %arrayidx22 = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %33, i64 %idxprom21, !dbg !5381
  %35 = load %struct.HaloRen*, %struct.HaloRen** %arrayidx22, align 8, !dbg !5381
  store %struct.HaloRen* %35, %struct.HaloRen** %h, align 8, !dbg !5384
  %36 = load %struct.HaloRen*, %struct.HaloRen** %h, align 8, !dbg !5385
  %cmp23 = icmp eq %struct.HaloRen* %36, null, !dbg !5387
  br i1 %cmp23, label %if.then25, label %if.end30, !dbg !5388

if.then25:                                        ; preds = %if.end19
  %37 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5389
  %call26 = call i8* %37(i64 32768, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0)), !dbg !5389
  %38 = bitcast i8* %call26 to %struct.HaloRen*, !dbg !5391
  store %struct.HaloRen* %38, %struct.HaloRen** %h, align 8, !dbg !5392
  %39 = load %struct.HaloRen*, %struct.HaloRen** %h, align 8, !dbg !5393
  %40 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5394
  %bloha27 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %40, i32 0, i32 21, !dbg !5395
  %41 = load %struct.HaloRen**, %struct.HaloRen*** %bloha27, align 8, !dbg !5395
  %42 = load i32, i32* %a, align 4, !dbg !5396
  %idxprom28 = sext i32 %42 to i64, !dbg !5394
  %arrayidx29 = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %41, i64 %idxprom28, !dbg !5394
  store %struct.HaloRen* %39, %struct.HaloRen** %arrayidx29, align 8, !dbg !5397
  br label %if.end30, !dbg !5398

if.end30:                                         ; preds = %if.then25, %if.end19
  %43 = load i32, i32* %nr.addr, align 4, !dbg !5399
  %and = and i32 %43, 255, !dbg !5400
  %44 = load %struct.HaloRen*, %struct.HaloRen** %h, align 8, !dbg !5401
  %idx.ext = sext i32 %and to i64, !dbg !5401
  %add.ptr = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %44, i64 %idx.ext, !dbg !5401
  store %struct.HaloRen* %add.ptr, %struct.HaloRen** %h, align 8, !dbg !5401
  %45 = load %struct.HaloRen*, %struct.HaloRen** %h, align 8, !dbg !5402
  store %struct.HaloRen* %45, %struct.HaloRen** %retval, align 8, !dbg !5403
  br label %return, !dbg !5403

return:                                           ; preds = %if.end30, %if.then
  %46 = load %struct.HaloRen*, %struct.HaloRen** %retval, align 8, !dbg !5404
  ret %struct.HaloRen* %46, !dbg !5404
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.HaloRen* @RE_inithalo(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.Material* %ma, float* %vec, float* %vec1, float* %orco, float %hasize, float %vectsize, i32 %seed) #0 !dbg !5405 {
entry:
  %retval = alloca %struct.HaloRen*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %vec.addr = alloca float*, align 8
  %vec1.addr = alloca float*, align 8
  %orco.addr = alloca float*, align 8
  %hasize.addr = alloca float, align 4
  %vectsize.addr = alloca float, align 4
  %seed.addr = alloca i32, align 4
  %har = alloca %struct.HaloRen*, align 8
  %mtex = alloca %struct.MTex*, align 8
  %tin = alloca float, align 4
  %tr = alloca float, align 4
  %tg = alloca float, align 4
  %tb = alloca float, align 4
  %ta = alloca float, align 4
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %zn = alloca float, align 4
  %texvec = alloca [3 x float], align 4
  %hoco = alloca [4 x float], align 16
  %hoco1 = alloca [4 x float], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5410, metadata !DIExpression()), !dbg !5411
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !5412, metadata !DIExpression()), !dbg !5413
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !5414, metadata !DIExpression()), !dbg !5415
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5416, metadata !DIExpression()), !dbg !5417
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !5418, metadata !DIExpression()), !dbg !5419
  store float* %orco, float** %orco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %orco.addr, metadata !5420, metadata !DIExpression()), !dbg !5421
  store float %hasize, float* %hasize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %hasize.addr, metadata !5422, metadata !DIExpression()), !dbg !5423
  store float %vectsize, float* %vectsize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %vectsize.addr, metadata !5424, metadata !DIExpression()), !dbg !5425
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !5426, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har, metadata !5428, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !5430, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.declare(metadata float* %tin, metadata !5434, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.declare(metadata float* %tr, metadata !5436, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.declare(metadata float* %tg, metadata !5438, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.declare(metadata float* %tb, metadata !5440, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.declare(metadata float* %ta, metadata !5442, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.declare(metadata float* %xn, metadata !5444, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.declare(metadata float* %yn, metadata !5446, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.declare(metadata float* %zn, metadata !5448, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec, metadata !5450, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.declare(metadata [4 x float]* %hoco, metadata !5452, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.declare(metadata [4 x float]* %hoco1, metadata !5454, metadata !DIExpression()), !dbg !5455
  %0 = load float, float* %hasize.addr, align 4, !dbg !5456
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !5458
  br i1 %cmp, label %if.then, label %if.end, !dbg !5459

if.then:                                          ; preds = %entry
  store %struct.HaloRen* null, %struct.HaloRen** %retval, align 8, !dbg !5460
  br label %return, !dbg !5460

if.end:                                           ; preds = %entry
  %1 = load float*, float** %vec.addr, align 8, !dbg !5461
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5462
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 35, !dbg !5463
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !5462
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !5464
  call void @projectverto(float* %1, [4 x float]* %arraydecay, float* %arraydecay1), !dbg !5465
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !5466
  %3 = load float, float* %arrayidx, align 4, !dbg !5466
  %cmp2 = fcmp oeq float %3, 0.000000e+00, !dbg !5468
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5469

if.then3:                                         ; preds = %if.end
  store %struct.HaloRen* null, %struct.HaloRen** %retval, align 8, !dbg !5470
  br label %return, !dbg !5470

if.end4:                                          ; preds = %if.end
  %4 = load float*, float** %vec1.addr, align 8, !dbg !5471
  %tobool = icmp ne float* %4, null, !dbg !5471
  br i1 %tobool, label %if.then5, label %if.end13, !dbg !5473

if.then5:                                         ; preds = %if.end4
  %5 = load float*, float** %vec1.addr, align 8, !dbg !5474
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5476
  %winmat6 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 35, !dbg !5477
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat6, i64 0, i64 0, !dbg !5476
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 0, !dbg !5478
  call void @projectverto(float* %5, [4 x float]* %arraydecay7, float* %arraydecay8), !dbg !5479
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 3, !dbg !5480
  %7 = load float, float* %arrayidx9, align 4, !dbg !5480
  %cmp10 = fcmp oeq float %7, 0.000000e+00, !dbg !5482
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5483

if.then11:                                        ; preds = %if.then5
  store %struct.HaloRen* null, %struct.HaloRen** %retval, align 8, !dbg !5484
  br label %return, !dbg !5484

if.end12:                                         ; preds = %if.then5
  br label %if.end13, !dbg !5485

if.end13:                                         ; preds = %if.end12, %if.end4
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5486
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5487
  %tothalo = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 13, !dbg !5488
  %10 = load i32, i32* %tothalo, align 4, !dbg !5489
  %inc = add nsw i32 %10, 1, !dbg !5489
  store i32 %inc, i32* %tothalo, align 4, !dbg !5489
  %call = call %struct.HaloRen* @RE_findOrAddHalo(%struct.ObjectRen* %8, i32 %10), !dbg !5490
  store %struct.HaloRen* %call, %struct.HaloRen** %har, align 8, !dbg !5491
  %11 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5492
  %co = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %11, i32 0, i32 9, !dbg !5493
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5492
  %12 = load float*, float** %vec.addr, align 8, !dbg !5494
  call void @copy_v3_v3(float* %arraydecay14, float* %12), !dbg !5495
  %13 = load float, float* %hasize.addr, align 4, !dbg !5496
  %14 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5497
  %hasize15 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %14, i32 0, i32 26, !dbg !5498
  store float %13, float* %hasize15, align 8, !dbg !5499
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !5500
  %15 = load float, float* %arrayidx16, align 4, !dbg !5500
  store float %15, float* %zn, align 4, !dbg !5501
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5502
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 13, !dbg !5503
  %17 = load i32, i32* %winx, align 4, !dbg !5503
  %conv = sitofp i32 %17 to float, !dbg !5502
  %mul = fmul float 5.000000e-01, %conv, !dbg !5504
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !5505
  %18 = load float, float* %arrayidx17, align 16, !dbg !5505
  %19 = load float, float* %zn, align 4, !dbg !5506
  %div = fdiv float %18, %19, !dbg !5507
  %mul18 = fmul float %mul, %div, !dbg !5508
  %20 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5509
  %xs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %20, i32 0, i32 3, !dbg !5510
  store float %mul18, float* %xs, align 8, !dbg !5511
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5512
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 14, !dbg !5513
  %22 = load i32, i32* %winy, align 8, !dbg !5513
  %conv19 = sitofp i32 %22 to float, !dbg !5512
  %mul20 = fmul float 5.000000e-01, %conv19, !dbg !5514
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !5515
  %23 = load float, float* %arrayidx21, align 4, !dbg !5515
  %24 = load float, float* %zn, align 4, !dbg !5516
  %div22 = fdiv float %23, %24, !dbg !5517
  %mul23 = fmul float %mul20, %div22, !dbg !5518
  %25 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5519
  %ys = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %25, i32 0, i32 4, !dbg !5520
  store float %mul23, float* %ys, align 4, !dbg !5521
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !5522
  %26 = load float, float* %arrayidx24, align 8, !dbg !5522
  %27 = load float, float* %zn, align 4, !dbg !5523
  %div25 = fdiv float %26, %27, !dbg !5524
  %mul26 = fmul float 0x415FFFFFC0000000, %div25, !dbg !5525
  %conv27 = fptosi float %mul26 to i32, !dbg !5526
  %28 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5527
  %zs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %28, i32 0, i32 15, !dbg !5528
  store i32 %conv27, i32* %zs, align 8, !dbg !5529
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !5530
  %29 = load float, float* %arrayidx28, align 8, !dbg !5530
  %30 = load float, float* %zn, align 4, !dbg !5531
  %div29 = fdiv float %29, %30, !dbg !5532
  %mul30 = fmul float 0x41E0000000000000, %div29, !dbg !5533
  %conv31 = fptosi float %mul30 to i32, !dbg !5534
  %31 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5535
  %zBufDist = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %31, i32 0, i32 17, !dbg !5536
  store i32 %conv31, i32* %zBufDist, align 8, !dbg !5537
  %32 = load float*, float** %vec1.addr, align 8, !dbg !5538
  %tobool32 = icmp ne float* %32, null, !dbg !5538
  br i1 %tobool32, label %if.then33, label %if.end73, !dbg !5540

if.then33:                                        ; preds = %if.end13
  %33 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5541
  %type = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %33, i32 0, i32 19, !dbg !5543
  %34 = load i8, i8* %type, align 1, !dbg !5544
  %conv34 = zext i8 %34 to i32, !dbg !5544
  %or = or i32 %conv34, 2, !dbg !5544
  %conv35 = trunc i32 %or to i8, !dbg !5544
  store i8 %conv35, i8* %type, align 1, !dbg !5544
  %35 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5545
  %xs36 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %35, i32 0, i32 3, !dbg !5546
  %36 = load float, float* %xs36, align 8, !dbg !5546
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5547
  %winx37 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 13, !dbg !5548
  %38 = load i32, i32* %winx37, align 4, !dbg !5548
  %conv38 = sitofp i32 %38 to float, !dbg !5547
  %mul39 = fmul float 5.000000e-01, %conv38, !dbg !5549
  %arrayidx40 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 0, !dbg !5550
  %39 = load float, float* %arrayidx40, align 16, !dbg !5550
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 3, !dbg !5551
  %40 = load float, float* %arrayidx41, align 4, !dbg !5551
  %div42 = fdiv float %39, %40, !dbg !5552
  %mul43 = fmul float %mul39, %div42, !dbg !5553
  %sub = fsub float %36, %mul43, !dbg !5554
  store float %sub, float* %xn, align 4, !dbg !5555
  %41 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5556
  %ys44 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %41, i32 0, i32 4, !dbg !5557
  %42 = load float, float* %ys44, align 4, !dbg !5557
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5558
  %winy45 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 14, !dbg !5559
  %44 = load i32, i32* %winy45, align 8, !dbg !5559
  %conv46 = sitofp i32 %44 to float, !dbg !5558
  %mul47 = fmul float 5.000000e-01, %conv46, !dbg !5560
  %arrayidx48 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 1, !dbg !5561
  %45 = load float, float* %arrayidx48, align 4, !dbg !5561
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 3, !dbg !5562
  %46 = load float, float* %arrayidx49, align 4, !dbg !5562
  %div50 = fdiv float %45, %46, !dbg !5563
  %mul51 = fmul float %mul47, %div50, !dbg !5564
  %sub52 = fsub float %42, %mul51, !dbg !5565
  store float %sub52, float* %yn, align 4, !dbg !5566
  %47 = load float, float* %xn, align 4, !dbg !5567
  %cmp53 = fcmp oeq float %47, 0.000000e+00, !dbg !5569
  br i1 %cmp53, label %if.then59, label %lor.lhs.false, !dbg !5570

lor.lhs.false:                                    ; preds = %if.then33
  %48 = load float, float* %xn, align 4, !dbg !5571
  %cmp55 = fcmp oeq float %48, 0.000000e+00, !dbg !5572
  br i1 %cmp55, label %land.lhs.true, label %if.else, !dbg !5573

land.lhs.true:                                    ; preds = %lor.lhs.false
  %49 = load float, float* %yn, align 4, !dbg !5574
  %cmp57 = fcmp oeq float %49, 0.000000e+00, !dbg !5575
  br i1 %cmp57, label %if.then59, label %if.else, !dbg !5576

if.then59:                                        ; preds = %land.lhs.true, %if.then33
  store float 0.000000e+00, float* %zn, align 4, !dbg !5577
  br label %if.end61, !dbg !5578

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %50 = load float, float* %yn, align 4, !dbg !5579
  %51 = load float, float* %xn, align 4, !dbg !5580
  %call60 = call float @atan2f(float %50, float %51) #5, !dbg !5581
  store float %call60, float* %zn, align 4, !dbg !5582
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then59
  %52 = load float, float* %zn, align 4, !dbg !5583
  %call62 = call float @sinf(float %52) #5, !dbg !5584
  %53 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5585
  %sin = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %53, i32 0, i32 7, !dbg !5586
  store float %call62, float* %sin, align 8, !dbg !5587
  %54 = load float, float* %zn, align 4, !dbg !5588
  %call63 = call float @cosf(float %54) #5, !dbg !5589
  %55 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5590
  %cos = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %55, i32 0, i32 8, !dbg !5591
  store float %call63, float* %cos, align 4, !dbg !5592
  %56 = load float*, float** %vec1.addr, align 8, !dbg !5593
  %57 = load float*, float** %vec.addr, align 8, !dbg !5594
  %call64 = call float @len_v3v3(float* %56, float* %57), !dbg !5595
  store float %call64, float* %zn, align 4, !dbg !5596
  %58 = load float, float* %vectsize.addr, align 4, !dbg !5597
  %59 = load float, float* %zn, align 4, !dbg !5598
  %mul65 = fmul float %58, %59, !dbg !5599
  %60 = load float, float* %vectsize.addr, align 4, !dbg !5600
  %sub66 = fsub float 1.000000e+00, %60, !dbg !5601
  %61 = load float, float* %hasize.addr, align 4, !dbg !5602
  %mul67 = fmul float %sub66, %61, !dbg !5603
  %add = fadd float %mul65, %mul67, !dbg !5604
  %62 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5605
  %hasize68 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %62, i32 0, i32 26, !dbg !5606
  store float %add, float* %hasize68, align 8, !dbg !5607
  %63 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5608
  %no = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %63, i32 0, i32 10, !dbg !5609
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5608
  %64 = load float*, float** %vec.addr, align 8, !dbg !5610
  %65 = load float*, float** %vec1.addr, align 8, !dbg !5611
  call void @sub_v3_v3v3(float* %arraydecay69, float* %64, float* %65), !dbg !5612
  %66 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5613
  %no70 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %66, i32 0, i32 10, !dbg !5614
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %no70, i64 0, i64 0, !dbg !5613
  %call72 = call float @normalize_v3(float* %arraydecay71), !dbg !5615
  br label %if.end73, !dbg !5616

if.end73:                                         ; preds = %if.end61, %if.end13
  %67 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5617
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %67, i32 0, i32 51, !dbg !5619
  %68 = load i32, i32* %mode, align 4, !dbg !5619
  %and = and i32 %68, 1024, !dbg !5620
  %tobool74 = icmp ne i32 %and, 0, !dbg !5620
  br i1 %tobool74, label %if.then75, label %if.end80, !dbg !5621

if.then75:                                        ; preds = %if.end73
  %69 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5622
  %type76 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %69, i32 0, i32 19, !dbg !5623
  %70 = load i8, i8* %type76, align 1, !dbg !5624
  %conv77 = zext i8 %70 to i32, !dbg !5624
  %or78 = or i32 %conv77, 4, !dbg !5624
  %conv79 = trunc i32 %or78 to i8, !dbg !5624
  store i8 %conv79, i8* %type76, align 1, !dbg !5624
  br label %if.end80, !dbg !5622

if.end80:                                         ; preds = %if.then75, %if.end73
  %71 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5625
  %alpha = getelementptr inbounds %struct.Material, %struct.Material* %71, i32 0, i32 21, !dbg !5626
  %72 = load float, float* %alpha, align 8, !dbg !5626
  %73 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5627
  %alfa = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %73, i32 0, i32 2, !dbg !5628
  store float %72, float* %alfa, align 4, !dbg !5629
  %74 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5630
  %r = getelementptr inbounds %struct.Material, %struct.Material* %74, i32 0, i32 4, !dbg !5631
  %75 = load float, float* %r, align 4, !dbg !5631
  %76 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5632
  %r81 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %76, i32 0, i32 14, !dbg !5633
  store float %75, float* %r81, align 4, !dbg !5634
  %77 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5635
  %g = getelementptr inbounds %struct.Material, %struct.Material* %77, i32 0, i32 5, !dbg !5636
  %78 = load float, float* %g, align 8, !dbg !5636
  %79 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5637
  %g82 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %79, i32 0, i32 13, !dbg !5638
  store float %78, float* %g82, align 8, !dbg !5639
  %80 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5640
  %b = getelementptr inbounds %struct.Material, %struct.Material* %80, i32 0, i32 6, !dbg !5641
  %81 = load float, float* %b, align 4, !dbg !5641
  %82 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5642
  %b83 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %82, i32 0, i32 12, !dbg !5643
  store float %81, float* %b83, align 4, !dbg !5644
  %83 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5645
  %add84 = getelementptr inbounds %struct.Material, %struct.Material* %83, i32 0, i32 25, !dbg !5646
  %84 = load float, float* %add84, align 8, !dbg !5646
  %mul85 = fmul float 2.550000e+02, %84, !dbg !5647
  %conv86 = fptoui float %mul85 to i8, !dbg !5648
  %85 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5649
  %add87 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %85, i32 0, i32 20, !dbg !5650
  store i8 %conv86, i8* %add87, align 2, !dbg !5651
  %86 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5652
  %87 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5653
  %mat = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %87, i32 0, i32 29, !dbg !5654
  store %struct.Material* %86, %struct.Material** %mat, align 8, !dbg !5655
  %88 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5656
  %har88 = getelementptr inbounds %struct.Material, %struct.Material* %88, i32 0, i32 38, !dbg !5657
  %89 = load i16, i16* %har88, align 8, !dbg !5657
  %conv89 = sitofp i16 %89 to float, !dbg !5656
  %90 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5658
  %hard = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %90, i32 0, i32 11, !dbg !5659
  store float %conv89, float* %hard, align 8, !dbg !5660
  %91 = load i32, i32* %seed.addr, align 4, !dbg !5661
  %rem = srem i32 %91, 256, !dbg !5662
  %conv90 = trunc i32 %rem to i8, !dbg !5661
  %92 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5663
  %seed91 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %92, i32 0, i32 24, !dbg !5664
  store i8 %conv90, i8* %seed91, align 2, !dbg !5665
  %93 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5666
  %mode92 = getelementptr inbounds %struct.Material, %struct.Material* %93, i32 0, i32 51, !dbg !5668
  %94 = load i32, i32* %mode92, align 4, !dbg !5668
  %and93 = and i32 %94, 2048, !dbg !5669
  %tobool94 = icmp ne i32 %and93, 0, !dbg !5669
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !5670

if.then95:                                        ; preds = %if.end80
  %95 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5671
  %starc = getelementptr inbounds %struct.Material, %struct.Material* %95, i32 0, i32 56, !dbg !5672
  %96 = load i16, i16* %starc, align 2, !dbg !5672
  %conv96 = trunc i16 %96 to i8, !dbg !5671
  %97 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5673
  %starpoints = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %97, i32 0, i32 18, !dbg !5674
  store i8 %conv96, i8* %starpoints, align 4, !dbg !5675
  br label %if.end97, !dbg !5673

if.end97:                                         ; preds = %if.then95, %if.end80
  %98 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5676
  %mode98 = getelementptr inbounds %struct.Material, %struct.Material* %98, i32 0, i32 51, !dbg !5678
  %99 = load i32, i32* %mode98, align 4, !dbg !5678
  %and99 = and i32 %99, 512, !dbg !5679
  %tobool100 = icmp ne i32 %and99, 0, !dbg !5679
  br i1 %tobool100, label %if.then101, label %if.end104, !dbg !5680

if.then101:                                       ; preds = %if.end97
  %100 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5681
  %linec = getelementptr inbounds %struct.Material, %struct.Material* %100, i32 0, i32 57, !dbg !5682
  %101 = load i16, i16* %linec, align 8, !dbg !5682
  %conv102 = trunc i16 %101 to i8, !dbg !5681
  %102 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5683
  %linec103 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %102, i32 0, i32 22, !dbg !5684
  store i8 %conv102, i8* %linec103, align 8, !dbg !5685
  br label %if.end104, !dbg !5683

if.end104:                                        ; preds = %if.then101, %if.end97
  %103 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5686
  %mode105 = getelementptr inbounds %struct.Material, %struct.Material* %103, i32 0, i32 51, !dbg !5688
  %104 = load i32, i32* %mode105, align 4, !dbg !5688
  %and106 = and i32 %104, 256, !dbg !5689
  %tobool107 = icmp ne i32 %and106, 0, !dbg !5689
  br i1 %tobool107, label %if.then108, label %if.end111, !dbg !5690

if.then108:                                       ; preds = %if.end104
  %105 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5691
  %ringc = getelementptr inbounds %struct.Material, %struct.Material* %105, i32 0, i32 58, !dbg !5692
  %106 = load i16, i16* %ringc, align 2, !dbg !5692
  %conv109 = trunc i16 %106 to i8, !dbg !5691
  %107 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5693
  %ringc110 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %107, i32 0, i32 23, !dbg !5694
  store i8 %conv109, i8* %ringc110, align 1, !dbg !5695
  br label %if.end111, !dbg !5693

if.end111:                                        ; preds = %if.then108, %if.end104
  %108 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5696
  %mode112 = getelementptr inbounds %struct.Material, %struct.Material* %108, i32 0, i32 51, !dbg !5698
  %109 = load i32, i32* %mode112, align 4, !dbg !5698
  %and113 = and i32 %109, 32768, !dbg !5699
  %tobool114 = icmp ne i32 %and113, 0, !dbg !5699
  br i1 %tobool114, label %if.then115, label %if.end117, !dbg !5700

if.then115:                                       ; preds = %if.end111
  %110 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5701
  %flarec = getelementptr inbounds %struct.Material, %struct.Material* %110, i32 0, i32 55, !dbg !5702
  %111 = load i16, i16* %flarec, align 4, !dbg !5702
  %112 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5703
  %flarec116 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %112, i32 0, i32 25, !dbg !5704
  store i16 %111, i16* %flarec116, align 4, !dbg !5705
  br label %if.end117, !dbg !5703

if.end117:                                        ; preds = %if.then115, %if.end111
  %113 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5706
  %mtex118 = getelementptr inbounds %struct.Material, %struct.Material* %113, i32 0, i32 102, !dbg !5708
  %arrayidx119 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex118, i64 0, i64 0, !dbg !5706
  %114 = load %struct.MTex*, %struct.MTex** %arrayidx119, align 8, !dbg !5706
  %tobool120 = icmp ne %struct.MTex* %114, null, !dbg !5706
  br i1 %tobool120, label %if.then121, label %if.end192, !dbg !5709

if.then121:                                       ; preds = %if.end117
  %115 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5710
  %mode122 = getelementptr inbounds %struct.Material, %struct.Material* %115, i32 0, i32 51, !dbg !5713
  %116 = load i32, i32* %mode122, align 4, !dbg !5713
  %and123 = and i32 %116, 4096, !dbg !5714
  %tobool124 = icmp ne i32 %and123, 0, !dbg !5714
  br i1 %tobool124, label %if.then125, label %if.else126, !dbg !5715

if.then125:                                       ; preds = %if.then121
  %117 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5716
  %tex = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %117, i32 0, i32 21, !dbg !5718
  store i8 1, i8* %tex, align 1, !dbg !5719
  br label %if.end191, !dbg !5720

if.else126:                                       ; preds = %if.then121
  %118 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5721
  %mat127 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %118, i32 0, i32 29, !dbg !5723
  %119 = load %struct.Material*, %struct.Material** %mat127, align 8, !dbg !5723
  %septex = getelementptr inbounds %struct.Material, %struct.Material* %119, i32 0, i32 73, !dbg !5724
  %120 = load i32, i32* %septex, align 8, !dbg !5724
  %and128 = and i32 %120, 1, !dbg !5725
  %tobool129 = icmp ne i32 %and128, 0, !dbg !5725
  br i1 %tobool129, label %if.then130, label %if.else131, !dbg !5726

if.then130:                                       ; preds = %if.else126
  br label %if.end190, !dbg !5727

if.else131:                                       ; preds = %if.else126
  %121 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5729
  %mtex132 = getelementptr inbounds %struct.Material, %struct.Material* %121, i32 0, i32 102, !dbg !5731
  %arrayidx133 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex132, i64 0, i64 0, !dbg !5729
  %122 = load %struct.MTex*, %struct.MTex** %arrayidx133, align 8, !dbg !5729
  store %struct.MTex* %122, %struct.MTex** %mtex, align 8, !dbg !5732
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !5733
  %123 = load float*, float** %vec.addr, align 8, !dbg !5734
  call void @copy_v3_v3(float* %arraydecay134, float* %123), !dbg !5735
  %124 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5736
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %124, i32 0, i32 0, !dbg !5738
  %125 = load i16, i16* %texco, align 8, !dbg !5738
  %conv135 = sext i16 %125 to i32, !dbg !5736
  %and136 = and i32 %conv135, 4, !dbg !5739
  %tobool137 = icmp ne i32 %and136, 0, !dbg !5739
  br i1 %tobool137, label %if.then138, label %if.else139, !dbg !5740

if.then138:                                       ; preds = %if.else131
  br label %if.end151, !dbg !5741

if.else139:                                       ; preds = %if.else131
  %126 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5743
  %texco140 = getelementptr inbounds %struct.MTex, %struct.MTex* %126, i32 0, i32 0, !dbg !5745
  %127 = load i16, i16* %texco140, align 8, !dbg !5745
  %conv141 = sext i16 %127 to i32, !dbg !5743
  %and142 = and i32 %conv141, 32, !dbg !5746
  %tobool143 = icmp ne i32 %and142, 0, !dbg !5746
  br i1 %tobool143, label %if.then144, label %if.else145, !dbg !5747

if.then144:                                       ; preds = %if.else139
  br label %if.end150, !dbg !5748

if.else145:                                       ; preds = %if.else139
  %128 = load float*, float** %orco.addr, align 8, !dbg !5750
  %tobool146 = icmp ne float* %128, null, !dbg !5750
  br i1 %tobool146, label %if.then147, label %if.end149, !dbg !5753

if.then147:                                       ; preds = %if.else145
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !5754
  %129 = load float*, float** %orco.addr, align 8, !dbg !5756
  call void @copy_v3_v3(float* %arraydecay148, float* %129), !dbg !5757
  br label %if.end149, !dbg !5758

if.end149:                                        ; preds = %if.then147, %if.else145
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then144
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then138
  %130 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5759
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !5760
  %131 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5761
  %pool = getelementptr inbounds %struct.Render, %struct.Render* %131, i32 0, i32 100, !dbg !5762
  %132 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !5762
  %call153 = call i32 @externtex(%struct.MTex* %130, float* %arraydecay152, float* %tin, float* %tr, float* %tg, float* %tb, float* %ta, i32 0, %struct.ImagePool* %132), !dbg !5763
  %133 = load float, float* %tin, align 4, !dbg !5764
  %134 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5765
  %colfac = getelementptr inbounds %struct.MTex, %struct.MTex* %134, i32 0, i32 28, !dbg !5766
  %135 = load float, float* %colfac, align 4, !dbg !5766
  %mul154 = fmul float %133, %135, !dbg !5767
  store float %mul154, float* %yn, align 4, !dbg !5768
  %136 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5769
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %136, i32 0, i32 1, !dbg !5771
  %137 = load i16, i16* %mapto, align 2, !dbg !5771
  %conv155 = sext i16 %137 to i32, !dbg !5769
  %and156 = and i32 %conv155, 1, !dbg !5772
  %tobool157 = icmp ne i32 %and156, 0, !dbg !5772
  br i1 %tobool157, label %if.then158, label %if.end175, !dbg !5773

if.then158:                                       ; preds = %if.end151
  %138 = load float, float* %yn, align 4, !dbg !5774
  %sub159 = fsub float 1.000000e+00, %138, !dbg !5776
  store float %sub159, float* %zn, align 4, !dbg !5777
  %139 = load float, float* %yn, align 4, !dbg !5778
  %140 = load float, float* %tr, align 4, !dbg !5779
  %mul160 = fmul float %139, %140, !dbg !5780
  %141 = load float, float* %zn, align 4, !dbg !5781
  %142 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5782
  %r161 = getelementptr inbounds %struct.Material, %struct.Material* %142, i32 0, i32 4, !dbg !5783
  %143 = load float, float* %r161, align 4, !dbg !5783
  %mul162 = fmul float %141, %143, !dbg !5784
  %add163 = fadd float %mul160, %mul162, !dbg !5785
  %144 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5786
  %r164 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %144, i32 0, i32 14, !dbg !5787
  store float %add163, float* %r164, align 4, !dbg !5788
  %145 = load float, float* %yn, align 4, !dbg !5789
  %146 = load float, float* %tg, align 4, !dbg !5790
  %mul165 = fmul float %145, %146, !dbg !5791
  %147 = load float, float* %zn, align 4, !dbg !5792
  %148 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5793
  %g166 = getelementptr inbounds %struct.Material, %struct.Material* %148, i32 0, i32 5, !dbg !5794
  %149 = load float, float* %g166, align 8, !dbg !5794
  %mul167 = fmul float %147, %149, !dbg !5795
  %add168 = fadd float %mul165, %mul167, !dbg !5796
  %150 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5797
  %g169 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %150, i32 0, i32 13, !dbg !5798
  store float %add168, float* %g169, align 8, !dbg !5799
  %151 = load float, float* %yn, align 4, !dbg !5800
  %152 = load float, float* %tb, align 4, !dbg !5801
  %mul170 = fmul float %151, %152, !dbg !5802
  %153 = load float, float* %zn, align 4, !dbg !5803
  %154 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !5804
  %b171 = getelementptr inbounds %struct.Material, %struct.Material* %154, i32 0, i32 6, !dbg !5805
  %155 = load float, float* %b171, align 4, !dbg !5805
  %mul172 = fmul float %153, %155, !dbg !5806
  %add173 = fadd float %mul170, %mul172, !dbg !5807
  %156 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5808
  %b174 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %156, i32 0, i32 12, !dbg !5809
  store float %add173, float* %b174, align 4, !dbg !5810
  br label %if.end175, !dbg !5811

if.end175:                                        ; preds = %if.then158, %if.end151
  %157 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5812
  %texco176 = getelementptr inbounds %struct.MTex, %struct.MTex* %157, i32 0, i32 0, !dbg !5814
  %158 = load i16, i16* %texco176, align 8, !dbg !5814
  %conv177 = sext i16 %158 to i32, !dbg !5812
  %and178 = and i32 %conv177, 16, !dbg !5815
  %tobool179 = icmp ne i32 %and178, 0, !dbg !5815
  br i1 %tobool179, label %if.then180, label %if.end182, !dbg !5816

if.then180:                                       ; preds = %if.end175
  %159 = load float, float* %tin, align 4, !dbg !5817
  %160 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5819
  %alfa181 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %160, i32 0, i32 2, !dbg !5820
  store float %159, float* %alfa181, align 4, !dbg !5821
  br label %if.end182, !dbg !5822

if.end182:                                        ; preds = %if.then180, %if.end175
  %161 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !5823
  %mapto183 = getelementptr inbounds %struct.MTex, %struct.MTex* %161, i32 0, i32 1, !dbg !5825
  %162 = load i16, i16* %mapto183, align 2, !dbg !5825
  %conv184 = sext i16 %162 to i32, !dbg !5823
  %and185 = and i32 %conv184, 128, !dbg !5826
  %tobool186 = icmp ne i32 %and185, 0, !dbg !5826
  br i1 %tobool186, label %if.then187, label %if.end189, !dbg !5827

if.then187:                                       ; preds = %if.end182
  %163 = load float, float* %tin, align 4, !dbg !5828
  %164 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5829
  %alfa188 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %164, i32 0, i32 2, !dbg !5830
  store float %163, float* %alfa188, align 4, !dbg !5831
  br label %if.end189, !dbg !5829

if.end189:                                        ; preds = %if.then187, %if.end182
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then130
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.then125
  br label %if.end192, !dbg !5832

if.end192:                                        ; preds = %if.end191, %if.end117
  %165 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5833
  %pool193 = getelementptr inbounds %struct.Render, %struct.Render* %165, i32 0, i32 100, !dbg !5834
  %166 = load %struct.ImagePool*, %struct.ImagePool** %pool193, align 8, !dbg !5834
  %167 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5835
  %pool194 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %167, i32 0, i32 30, !dbg !5836
  store %struct.ImagePool* %166, %struct.ImagePool** %pool194, align 8, !dbg !5837
  %168 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5838
  store %struct.HaloRen* %168, %struct.HaloRen** %retval, align 8, !dbg !5839
  br label %return, !dbg !5839

return:                                           ; preds = %if.end192, %if.then11, %if.then3, %if.then
  %169 = load %struct.HaloRen*, %struct.HaloRen** %retval, align 8, !dbg !5840
  ret %struct.HaloRen* %169, !dbg !5840
}

declare dso_local void @projectverto(float*, [4 x float]*, float*) #3

; Function Attrs: nounwind
declare dso_local float @atan2f(float, float) #4

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !5841 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5844, metadata !DIExpression()), !dbg !5845
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !5848, metadata !DIExpression()), !dbg !5849
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !5850
  %0 = load float*, float** %b.addr, align 8, !dbg !5851
  %1 = load float*, float** %a.addr, align 8, !dbg !5852
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !5853
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !5854
  %call = call float @len_v3(float* %arraydecay1), !dbg !5855
  ret float %call, !dbg !5856
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5857 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5860, metadata !DIExpression()), !dbg !5861
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5862, metadata !DIExpression()), !dbg !5863
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5864, metadata !DIExpression()), !dbg !5865
  %0 = load float*, float** %a.addr, align 8, !dbg !5866
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5866
  %1 = load float, float* %arrayidx, align 4, !dbg !5866
  %2 = load float*, float** %b.addr, align 8, !dbg !5867
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5867
  %3 = load float, float* %arrayidx1, align 4, !dbg !5867
  %sub = fsub float %1, %3, !dbg !5868
  %4 = load float*, float** %r.addr, align 8, !dbg !5869
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5869
  store float %sub, float* %arrayidx2, align 4, !dbg !5870
  %5 = load float*, float** %a.addr, align 8, !dbg !5871
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5871
  %6 = load float, float* %arrayidx3, align 4, !dbg !5871
  %7 = load float*, float** %b.addr, align 8, !dbg !5872
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5872
  %8 = load float, float* %arrayidx4, align 4, !dbg !5872
  %sub5 = fsub float %6, %8, !dbg !5873
  %9 = load float*, float** %r.addr, align 8, !dbg !5874
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5874
  store float %sub5, float* %arrayidx6, align 4, !dbg !5875
  %10 = load float*, float** %a.addr, align 8, !dbg !5876
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5876
  %11 = load float, float* %arrayidx7, align 4, !dbg !5876
  %12 = load float*, float** %b.addr, align 8, !dbg !5877
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5877
  %13 = load float, float* %arrayidx8, align 4, !dbg !5877
  %sub9 = fsub float %11, %13, !dbg !5878
  %14 = load float*, float** %r.addr, align 8, !dbg !5879
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5879
  store float %sub9, float* %arrayidx10, align 4, !dbg !5880
  ret void, !dbg !5881
}

declare dso_local i32 @externtex(%struct.MTex*, float*, float*, float*, float*, float*, float*, i32, %struct.ImagePool*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.HaloRen* @RE_inithalo_particle(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.DerivedMesh* %dm, %struct.Material* %ma, float* %vec, float* %vec1, float* %orco, float* %uvco, float %hasize, float %vectsize, i32 %seed, float* %pa_co) #0 !dbg !5882 {
entry:
  %retval = alloca %struct.HaloRen*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %vec.addr = alloca float*, align 8
  %vec1.addr = alloca float*, align 8
  %orco.addr = alloca float*, align 8
  %uvco.addr = alloca float*, align 8
  %hasize.addr = alloca float, align 4
  %vectsize.addr = alloca float, align 4
  %seed.addr = alloca i32, align 4
  %pa_co.addr = alloca float*, align 8
  %har = alloca %struct.HaloRen*, align 8
  %mtex = alloca %struct.MTex*, align 8
  %tin = alloca float, align 4
  %tr = alloca float, align 4
  %tg = alloca float, align 4
  %tb = alloca float, align 4
  %ta = alloca float, align 4
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %zn = alloca float, align 4
  %texvec = alloca [3 x float], align 4
  %hoco = alloca [4 x float], align 16
  %hoco1 = alloca [4 x float], align 16
  %in = alloca [3 x float], align 4
  %tex = alloca [3 x float], align 4
  %out = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %hasrgb = alloca i32, align 4
  %uv_index = alloca i32, align 4
  %add299 = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !5891, metadata !DIExpression()), !dbg !5892
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5893, metadata !DIExpression()), !dbg !5894
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !5895, metadata !DIExpression()), !dbg !5896
  store float* %orco, float** %orco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %orco.addr, metadata !5897, metadata !DIExpression()), !dbg !5898
  store float* %uvco, float** %uvco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uvco.addr, metadata !5899, metadata !DIExpression()), !dbg !5900
  store float %hasize, float* %hasize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %hasize.addr, metadata !5901, metadata !DIExpression()), !dbg !5902
  store float %vectsize, float* %vectsize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %vectsize.addr, metadata !5903, metadata !DIExpression()), !dbg !5904
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !5905, metadata !DIExpression()), !dbg !5906
  store float* %pa_co, float** %pa_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pa_co.addr, metadata !5907, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har, metadata !5909, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.declare(metadata %struct.MTex** %mtex, metadata !5911, metadata !DIExpression()), !dbg !5912
  call void @llvm.dbg.declare(metadata float* %tin, metadata !5913, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.declare(metadata float* %tr, metadata !5915, metadata !DIExpression()), !dbg !5916
  call void @llvm.dbg.declare(metadata float* %tg, metadata !5917, metadata !DIExpression()), !dbg !5918
  call void @llvm.dbg.declare(metadata float* %tb, metadata !5919, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.declare(metadata float* %ta, metadata !5921, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.declare(metadata float* %xn, metadata !5923, metadata !DIExpression()), !dbg !5924
  call void @llvm.dbg.declare(metadata float* %yn, metadata !5925, metadata !DIExpression()), !dbg !5926
  call void @llvm.dbg.declare(metadata float* %zn, metadata !5927, metadata !DIExpression()), !dbg !5928
  call void @llvm.dbg.declare(metadata [3 x float]* %texvec, metadata !5929, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.declare(metadata [4 x float]* %hoco, metadata !5931, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.declare(metadata [4 x float]* %hoco1, metadata !5933, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.declare(metadata [3 x float]* %in, metadata !5935, metadata !DIExpression()), !dbg !5936
  call void @llvm.dbg.declare(metadata [3 x float]* %tex, metadata !5937, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.declare(metadata [3 x float]* %out, metadata !5939, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5941, metadata !DIExpression()), !dbg !5942
  call void @llvm.dbg.declare(metadata i32* %hasrgb, metadata !5943, metadata !DIExpression()), !dbg !5944
  %0 = load float, float* %hasize.addr, align 4, !dbg !5945
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !5947
  br i1 %cmp, label %if.then, label %if.end, !dbg !5948

if.then:                                          ; preds = %entry
  store %struct.HaloRen* null, %struct.HaloRen** %retval, align 8, !dbg !5949
  br label %return, !dbg !5949

if.end:                                           ; preds = %entry
  %1 = load float*, float** %vec.addr, align 8, !dbg !5950
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5951
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 35, !dbg !5952
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !5951
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !5953
  call void @projectverto(float* %1, [4 x float]* %arraydecay, float* %arraydecay1), !dbg !5954
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !5955
  %3 = load float, float* %arrayidx, align 4, !dbg !5955
  %cmp2 = fcmp oeq float %3, 0.000000e+00, !dbg !5957
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5958

if.then3:                                         ; preds = %if.end
  store %struct.HaloRen* null, %struct.HaloRen** %retval, align 8, !dbg !5959
  br label %return, !dbg !5959

if.end4:                                          ; preds = %if.end
  %4 = load float*, float** %vec1.addr, align 8, !dbg !5960
  %tobool = icmp ne float* %4, null, !dbg !5960
  br i1 %tobool, label %if.then5, label %if.end13, !dbg !5962

if.then5:                                         ; preds = %if.end4
  %5 = load float*, float** %vec1.addr, align 8, !dbg !5963
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5965
  %winmat6 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 35, !dbg !5966
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat6, i64 0, i64 0, !dbg !5965
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 0, !dbg !5967
  call void @projectverto(float* %5, [4 x float]* %arraydecay7, float* %arraydecay8), !dbg !5968
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 3, !dbg !5969
  %7 = load float, float* %arrayidx9, align 4, !dbg !5969
  %cmp10 = fcmp oeq float %7, 0.000000e+00, !dbg !5971
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5972

if.then11:                                        ; preds = %if.then5
  store %struct.HaloRen* null, %struct.HaloRen** %retval, align 8, !dbg !5973
  br label %return, !dbg !5973

if.end12:                                         ; preds = %if.then5
  br label %if.end13, !dbg !5974

if.end13:                                         ; preds = %if.end12, %if.end4
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5975
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !5976
  %tothalo = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 13, !dbg !5977
  %10 = load i32, i32* %tothalo, align 4, !dbg !5978
  %inc = add nsw i32 %10, 1, !dbg !5978
  store i32 %inc, i32* %tothalo, align 4, !dbg !5978
  %call = call %struct.HaloRen* @RE_findOrAddHalo(%struct.ObjectRen* %8, i32 %10), !dbg !5979
  store %struct.HaloRen* %call, %struct.HaloRen** %har, align 8, !dbg !5980
  %11 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5981
  %co = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %11, i32 0, i32 9, !dbg !5982
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5981
  %12 = load float*, float** %vec.addr, align 8, !dbg !5983
  call void @copy_v3_v3(float* %arraydecay14, float* %12), !dbg !5984
  %13 = load float, float* %hasize.addr, align 4, !dbg !5985
  %14 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5986
  %hasize15 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %14, i32 0, i32 26, !dbg !5987
  store float %13, float* %hasize15, align 8, !dbg !5988
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !5989
  %15 = load float, float* %arrayidx16, align 4, !dbg !5989
  store float %15, float* %zn, align 4, !dbg !5990
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5991
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 13, !dbg !5992
  %17 = load i32, i32* %winx, align 4, !dbg !5992
  %conv = sitofp i32 %17 to float, !dbg !5991
  %mul = fmul float 5.000000e-01, %conv, !dbg !5993
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !5994
  %18 = load float, float* %arrayidx17, align 16, !dbg !5994
  %19 = load float, float* %zn, align 4, !dbg !5995
  %div = fdiv float %18, %19, !dbg !5996
  %mul18 = fmul float %mul, %div, !dbg !5997
  %20 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !5998
  %xs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %20, i32 0, i32 3, !dbg !5999
  store float %mul18, float* %xs, align 8, !dbg !6000
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6001
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 14, !dbg !6002
  %22 = load i32, i32* %winy, align 8, !dbg !6002
  %conv19 = sitofp i32 %22 to float, !dbg !6001
  %mul20 = fmul float 5.000000e-01, %conv19, !dbg !6003
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !6004
  %23 = load float, float* %arrayidx21, align 4, !dbg !6004
  %24 = load float, float* %zn, align 4, !dbg !6005
  %div22 = fdiv float %23, %24, !dbg !6006
  %mul23 = fmul float %mul20, %div22, !dbg !6007
  %25 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6008
  %ys = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %25, i32 0, i32 4, !dbg !6009
  store float %mul23, float* %ys, align 4, !dbg !6010
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !6011
  %26 = load float, float* %arrayidx24, align 8, !dbg !6011
  %27 = load float, float* %zn, align 4, !dbg !6012
  %div25 = fdiv float %26, %27, !dbg !6013
  %mul26 = fmul float 0x415FFFFFC0000000, %div25, !dbg !6014
  %conv27 = fptosi float %mul26 to i32, !dbg !6015
  %28 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6016
  %zs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %28, i32 0, i32 15, !dbg !6017
  store i32 %conv27, i32* %zs, align 8, !dbg !6018
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !6019
  %29 = load float, float* %arrayidx28, align 8, !dbg !6019
  %30 = load float, float* %zn, align 4, !dbg !6020
  %div29 = fdiv float %29, %30, !dbg !6021
  %mul30 = fmul float 0x41E0000000000000, %div29, !dbg !6022
  %conv31 = fptosi float %mul30 to i32, !dbg !6023
  %31 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6024
  %zBufDist = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %31, i32 0, i32 17, !dbg !6025
  store i32 %conv31, i32* %zBufDist, align 8, !dbg !6026
  %32 = load float*, float** %vec1.addr, align 8, !dbg !6027
  %tobool32 = icmp ne float* %32, null, !dbg !6027
  br i1 %tobool32, label %if.then33, label %if.end74, !dbg !6029

if.then33:                                        ; preds = %if.end13
  %33 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6030
  %type = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %33, i32 0, i32 19, !dbg !6032
  %34 = load i8, i8* %type, align 1, !dbg !6033
  %conv34 = zext i8 %34 to i32, !dbg !6033
  %or = or i32 %conv34, 2, !dbg !6033
  %conv35 = trunc i32 %or to i8, !dbg !6033
  store i8 %conv35, i8* %type, align 1, !dbg !6033
  %35 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6034
  %xs36 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %35, i32 0, i32 3, !dbg !6035
  %36 = load float, float* %xs36, align 8, !dbg !6035
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6036
  %winx37 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 13, !dbg !6037
  %38 = load i32, i32* %winx37, align 4, !dbg !6037
  %conv38 = sitofp i32 %38 to float, !dbg !6036
  %mul39 = fmul float 5.000000e-01, %conv38, !dbg !6038
  %arrayidx40 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 0, !dbg !6039
  %39 = load float, float* %arrayidx40, align 16, !dbg !6039
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 3, !dbg !6040
  %40 = load float, float* %arrayidx41, align 4, !dbg !6040
  %div42 = fdiv float %39, %40, !dbg !6041
  %mul43 = fmul float %mul39, %div42, !dbg !6042
  %sub = fsub float %36, %mul43, !dbg !6043
  store float %sub, float* %xn, align 4, !dbg !6044
  %41 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6045
  %ys44 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %41, i32 0, i32 4, !dbg !6046
  %42 = load float, float* %ys44, align 4, !dbg !6046
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6047
  %winy45 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 14, !dbg !6048
  %44 = load i32, i32* %winy45, align 8, !dbg !6048
  %conv46 = sitofp i32 %44 to float, !dbg !6047
  %mul47 = fmul float 5.000000e-01, %conv46, !dbg !6049
  %arrayidx48 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 1, !dbg !6050
  %45 = load float, float* %arrayidx48, align 4, !dbg !6050
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %hoco1, i64 0, i64 3, !dbg !6051
  %46 = load float, float* %arrayidx49, align 4, !dbg !6051
  %div50 = fdiv float %45, %46, !dbg !6052
  %mul51 = fmul float %mul47, %div50, !dbg !6053
  %sub52 = fsub float %42, %mul51, !dbg !6054
  store float %sub52, float* %yn, align 4, !dbg !6055
  %47 = load float, float* %xn, align 4, !dbg !6056
  %cmp53 = fcmp oeq float %47, 0.000000e+00, !dbg !6058
  br i1 %cmp53, label %if.then59, label %lor.lhs.false, !dbg !6059

lor.lhs.false:                                    ; preds = %if.then33
  %48 = load float, float* %xn, align 4, !dbg !6060
  %cmp55 = fcmp oeq float %48, 0.000000e+00, !dbg !6061
  br i1 %cmp55, label %land.lhs.true, label %if.else, !dbg !6062

land.lhs.true:                                    ; preds = %lor.lhs.false
  %49 = load float, float* %yn, align 4, !dbg !6063
  %cmp57 = fcmp oeq float %49, 0.000000e+00, !dbg !6064
  br i1 %cmp57, label %if.then59, label %if.else, !dbg !6065

if.then59:                                        ; preds = %land.lhs.true, %if.then33
  store float 0.000000e+00, float* %zn, align 4, !dbg !6066
  br label %if.end61, !dbg !6067

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %50 = load float, float* %yn, align 4, !dbg !6068
  %51 = load float, float* %xn, align 4, !dbg !6069
  %call60 = call float @atan2f(float %50, float %51) #5, !dbg !6070
  store float %call60, float* %zn, align 4, !dbg !6071
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then59
  %52 = load float, float* %zn, align 4, !dbg !6072
  %call62 = call float @sinf(float %52) #5, !dbg !6073
  %53 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6074
  %sin = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %53, i32 0, i32 7, !dbg !6075
  store float %call62, float* %sin, align 8, !dbg !6076
  %54 = load float, float* %zn, align 4, !dbg !6077
  %call63 = call float @cosf(float %54) #5, !dbg !6078
  %55 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6079
  %cos = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %55, i32 0, i32 8, !dbg !6080
  store float %call63, float* %cos, align 4, !dbg !6081
  %56 = load float*, float** %vec1.addr, align 8, !dbg !6082
  %57 = load float*, float** %vec.addr, align 8, !dbg !6083
  %call64 = call float @len_v3v3(float* %56, float* %57), !dbg !6084
  %mul65 = fmul float %call64, 5.000000e-01, !dbg !6085
  store float %mul65, float* %zn, align 4, !dbg !6086
  %58 = load float, float* %vectsize.addr, align 4, !dbg !6087
  %59 = load float, float* %zn, align 4, !dbg !6088
  %mul66 = fmul float %58, %59, !dbg !6089
  %60 = load float, float* %vectsize.addr, align 4, !dbg !6090
  %sub67 = fsub float 1.000000e+00, %60, !dbg !6091
  %61 = load float, float* %hasize.addr, align 4, !dbg !6092
  %mul68 = fmul float %sub67, %61, !dbg !6093
  %add = fadd float %mul66, %mul68, !dbg !6094
  %62 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6095
  %hasize69 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %62, i32 0, i32 26, !dbg !6096
  store float %add, float* %hasize69, align 8, !dbg !6097
  %63 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6098
  %no = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %63, i32 0, i32 10, !dbg !6099
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6098
  %64 = load float*, float** %vec.addr, align 8, !dbg !6100
  %65 = load float*, float** %vec1.addr, align 8, !dbg !6101
  call void @sub_v3_v3v3(float* %arraydecay70, float* %64, float* %65), !dbg !6102
  %66 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6103
  %no71 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %66, i32 0, i32 10, !dbg !6104
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %no71, i64 0, i64 0, !dbg !6103
  %call73 = call float @normalize_v3(float* %arraydecay72), !dbg !6105
  br label %if.end74, !dbg !6106

if.end74:                                         ; preds = %if.end61, %if.end13
  %67 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6107
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %67, i32 0, i32 51, !dbg !6109
  %68 = load i32, i32* %mode, align 4, !dbg !6109
  %and = and i32 %68, 1024, !dbg !6110
  %tobool75 = icmp ne i32 %and, 0, !dbg !6110
  br i1 %tobool75, label %if.then76, label %if.end81, !dbg !6111

if.then76:                                        ; preds = %if.end74
  %69 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6112
  %type77 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %69, i32 0, i32 19, !dbg !6113
  %70 = load i8, i8* %type77, align 1, !dbg !6114
  %conv78 = zext i8 %70 to i32, !dbg !6114
  %or79 = or i32 %conv78, 4, !dbg !6114
  %conv80 = trunc i32 %or79 to i8, !dbg !6114
  store i8 %conv80, i8* %type77, align 1, !dbg !6114
  br label %if.end81, !dbg !6112

if.end81:                                         ; preds = %if.then76, %if.end74
  %71 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6115
  %alpha = getelementptr inbounds %struct.Material, %struct.Material* %71, i32 0, i32 21, !dbg !6116
  %72 = load float, float* %alpha, align 8, !dbg !6116
  %73 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6117
  %alfa = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %73, i32 0, i32 2, !dbg !6118
  store float %72, float* %alfa, align 4, !dbg !6119
  %74 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6120
  %r = getelementptr inbounds %struct.Material, %struct.Material* %74, i32 0, i32 4, !dbg !6121
  %75 = load float, float* %r, align 4, !dbg !6121
  %76 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6122
  %r82 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %76, i32 0, i32 14, !dbg !6123
  store float %75, float* %r82, align 4, !dbg !6124
  %77 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6125
  %g = getelementptr inbounds %struct.Material, %struct.Material* %77, i32 0, i32 5, !dbg !6126
  %78 = load float, float* %g, align 8, !dbg !6126
  %79 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6127
  %g83 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %79, i32 0, i32 13, !dbg !6128
  store float %78, float* %g83, align 8, !dbg !6129
  %80 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6130
  %b = getelementptr inbounds %struct.Material, %struct.Material* %80, i32 0, i32 6, !dbg !6131
  %81 = load float, float* %b, align 4, !dbg !6131
  %82 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6132
  %b84 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %82, i32 0, i32 12, !dbg !6133
  store float %81, float* %b84, align 4, !dbg !6134
  %83 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6135
  %add85 = getelementptr inbounds %struct.Material, %struct.Material* %83, i32 0, i32 25, !dbg !6136
  %84 = load float, float* %add85, align 8, !dbg !6136
  %mul86 = fmul float 2.550000e+02, %84, !dbg !6137
  %conv87 = fptoui float %mul86 to i8, !dbg !6138
  %85 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6139
  %add88 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %85, i32 0, i32 20, !dbg !6140
  store i8 %conv87, i8* %add88, align 2, !dbg !6141
  %86 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6142
  %87 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6143
  %mat = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %87, i32 0, i32 29, !dbg !6144
  store %struct.Material* %86, %struct.Material** %mat, align 8, !dbg !6145
  %88 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6146
  %har89 = getelementptr inbounds %struct.Material, %struct.Material* %88, i32 0, i32 38, !dbg !6147
  %89 = load i16, i16* %har89, align 8, !dbg !6147
  %conv90 = sitofp i16 %89 to float, !dbg !6146
  %90 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6148
  %hard = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %90, i32 0, i32 11, !dbg !6149
  store float %conv90, float* %hard, align 8, !dbg !6150
  %91 = load i32, i32* %seed.addr, align 4, !dbg !6151
  %rem = srem i32 %91, 256, !dbg !6152
  %conv91 = trunc i32 %rem to i8, !dbg !6151
  %92 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6153
  %seed92 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %92, i32 0, i32 24, !dbg !6154
  store i8 %conv91, i8* %seed92, align 2, !dbg !6155
  %93 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6156
  %mode93 = getelementptr inbounds %struct.Material, %struct.Material* %93, i32 0, i32 51, !dbg !6158
  %94 = load i32, i32* %mode93, align 4, !dbg !6158
  %and94 = and i32 %94, 2048, !dbg !6159
  %tobool95 = icmp ne i32 %and94, 0, !dbg !6159
  br i1 %tobool95, label %if.then96, label %if.end98, !dbg !6160

if.then96:                                        ; preds = %if.end81
  %95 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6161
  %starc = getelementptr inbounds %struct.Material, %struct.Material* %95, i32 0, i32 56, !dbg !6162
  %96 = load i16, i16* %starc, align 2, !dbg !6162
  %conv97 = trunc i16 %96 to i8, !dbg !6161
  %97 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6163
  %starpoints = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %97, i32 0, i32 18, !dbg !6164
  store i8 %conv97, i8* %starpoints, align 4, !dbg !6165
  br label %if.end98, !dbg !6163

if.end98:                                         ; preds = %if.then96, %if.end81
  %98 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6166
  %mode99 = getelementptr inbounds %struct.Material, %struct.Material* %98, i32 0, i32 51, !dbg !6168
  %99 = load i32, i32* %mode99, align 4, !dbg !6168
  %and100 = and i32 %99, 512, !dbg !6169
  %tobool101 = icmp ne i32 %and100, 0, !dbg !6169
  br i1 %tobool101, label %if.then102, label %if.end105, !dbg !6170

if.then102:                                       ; preds = %if.end98
  %100 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6171
  %linec = getelementptr inbounds %struct.Material, %struct.Material* %100, i32 0, i32 57, !dbg !6172
  %101 = load i16, i16* %linec, align 8, !dbg !6172
  %conv103 = trunc i16 %101 to i8, !dbg !6171
  %102 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6173
  %linec104 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %102, i32 0, i32 22, !dbg !6174
  store i8 %conv103, i8* %linec104, align 8, !dbg !6175
  br label %if.end105, !dbg !6173

if.end105:                                        ; preds = %if.then102, %if.end98
  %103 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6176
  %mode106 = getelementptr inbounds %struct.Material, %struct.Material* %103, i32 0, i32 51, !dbg !6178
  %104 = load i32, i32* %mode106, align 4, !dbg !6178
  %and107 = and i32 %104, 256, !dbg !6179
  %tobool108 = icmp ne i32 %and107, 0, !dbg !6179
  br i1 %tobool108, label %if.then109, label %if.end112, !dbg !6180

if.then109:                                       ; preds = %if.end105
  %105 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6181
  %ringc = getelementptr inbounds %struct.Material, %struct.Material* %105, i32 0, i32 58, !dbg !6182
  %106 = load i16, i16* %ringc, align 2, !dbg !6182
  %conv110 = trunc i16 %106 to i8, !dbg !6181
  %107 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6183
  %ringc111 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %107, i32 0, i32 23, !dbg !6184
  store i8 %conv110, i8* %ringc111, align 1, !dbg !6185
  br label %if.end112, !dbg !6183

if.end112:                                        ; preds = %if.then109, %if.end105
  %108 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6186
  %mode113 = getelementptr inbounds %struct.Material, %struct.Material* %108, i32 0, i32 51, !dbg !6188
  %109 = load i32, i32* %mode113, align 4, !dbg !6188
  %and114 = and i32 %109, 32768, !dbg !6189
  %tobool115 = icmp ne i32 %and114, 0, !dbg !6189
  br i1 %tobool115, label %if.then116, label %if.end118, !dbg !6190

if.then116:                                       ; preds = %if.end112
  %110 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6191
  %flarec = getelementptr inbounds %struct.Material, %struct.Material* %110, i32 0, i32 55, !dbg !6192
  %111 = load i16, i16* %flarec, align 4, !dbg !6192
  %112 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6193
  %flarec117 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %112, i32 0, i32 25, !dbg !6194
  store i16 %111, i16* %flarec117, align 4, !dbg !6195
  br label %if.end118, !dbg !6193

if.end118:                                        ; preds = %if.then116, %if.end112
  %113 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6196
  %mode119 = getelementptr inbounds %struct.Material, %struct.Material* %113, i32 0, i32 51, !dbg !6198
  %114 = load i32, i32* %mode119, align 4, !dbg !6198
  %and120 = and i32 %114, 4096, !dbg !6199
  %tobool121 = icmp ne i32 %and120, 0, !dbg !6199
  br i1 %tobool121, label %land.lhs.true122, label %if.end128, !dbg !6200

land.lhs.true122:                                 ; preds = %if.end118
  %115 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6201
  %mtex123 = getelementptr inbounds %struct.Material, %struct.Material* %115, i32 0, i32 102, !dbg !6202
  %arrayidx124 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex123, i64 0, i64 0, !dbg !6201
  %116 = load %struct.MTex*, %struct.MTex** %arrayidx124, align 8, !dbg !6201
  %tobool125 = icmp ne %struct.MTex* %116, null, !dbg !6201
  br i1 %tobool125, label %if.then126, label %if.end128, !dbg !6203

if.then126:                                       ; preds = %land.lhs.true122
  %117 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6204
  %tex127 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %117, i32 0, i32 21, !dbg !6205
  store i8 1, i8* %tex127, align 1, !dbg !6206
  br label %if.end128, !dbg !6204

if.end128:                                        ; preds = %if.then126, %land.lhs.true122, %if.end118
  store i32 0, i32* %i, align 4, !dbg !6207
  br label %for.cond, !dbg !6209

for.cond:                                         ; preds = %for.inc, %if.end128
  %118 = load i32, i32* %i, align 4, !dbg !6210
  %cmp129 = icmp slt i32 %118, 18, !dbg !6212
  br i1 %cmp129, label %for.body, label %for.end, !dbg !6213

for.body:                                         ; preds = %for.cond
  %119 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6214
  %mtex131 = getelementptr inbounds %struct.Material, %struct.Material* %119, i32 0, i32 102, !dbg !6216
  %120 = load i32, i32* %i, align 4, !dbg !6217
  %idxprom = sext i32 %120 to i64, !dbg !6214
  %arrayidx132 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex131, i64 0, i64 %idxprom, !dbg !6214
  %121 = load %struct.MTex*, %struct.MTex** %arrayidx132, align 8, !dbg !6214
  %tobool133 = icmp ne %struct.MTex* %121, null, !dbg !6214
  br i1 %tobool133, label %land.lhs.true134, label %if.end320, !dbg !6218

land.lhs.true134:                                 ; preds = %for.body
  %122 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6219
  %septex = getelementptr inbounds %struct.Material, %struct.Material* %122, i32 0, i32 73, !dbg !6220
  %123 = load i32, i32* %septex, align 8, !dbg !6220
  %124 = load i32, i32* %i, align 4, !dbg !6221
  %shl = shl i32 1, %124, !dbg !6222
  %and135 = and i32 %123, %shl, !dbg !6223
  %cmp136 = icmp eq i32 %and135, 0, !dbg !6224
  br i1 %cmp136, label %if.then138, label %if.end320, !dbg !6225

if.then138:                                       ; preds = %land.lhs.true134
  %125 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !6226
  %mtex139 = getelementptr inbounds %struct.Material, %struct.Material* %125, i32 0, i32 102, !dbg !6228
  %126 = load i32, i32* %i, align 4, !dbg !6229
  %idxprom140 = sext i32 %126 to i64, !dbg !6226
  %arrayidx141 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex139, i64 0, i64 %idxprom140, !dbg !6226
  %127 = load %struct.MTex*, %struct.MTex** %arrayidx141, align 8, !dbg !6226
  store %struct.MTex* %127, %struct.MTex** %mtex, align 8, !dbg !6230
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !6231
  %128 = load float*, float** %vec.addr, align 8, !dbg !6232
  call void @copy_v3_v3(float* %arraydecay142, float* %128), !dbg !6233
  %129 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6234
  %texco = getelementptr inbounds %struct.MTex, %struct.MTex* %129, i32 0, i32 0, !dbg !6236
  %130 = load i16, i16* %texco, align 8, !dbg !6236
  %conv143 = sext i16 %130 to i32, !dbg !6234
  %and144 = and i32 %conv143, 4, !dbg !6237
  %tobool145 = icmp ne i32 %and144, 0, !dbg !6237
  br i1 %tobool145, label %if.then146, label %if.else147, !dbg !6238

if.then146:                                       ; preds = %if.then138
  br label %if.end224, !dbg !6239

if.else147:                                       ; preds = %if.then138
  %131 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6241
  %texco148 = getelementptr inbounds %struct.MTex, %struct.MTex* %131, i32 0, i32 0, !dbg !6243
  %132 = load i16, i16* %texco148, align 8, !dbg !6243
  %conv149 = sext i16 %132 to i32, !dbg !6241
  %and150 = and i32 %conv149, 32, !dbg !6244
  %tobool151 = icmp ne i32 %and150, 0, !dbg !6244
  br i1 %tobool151, label %if.then152, label %if.else159, !dbg !6245

if.then152:                                       ; preds = %if.else147
  %133 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6246
  %object = getelementptr inbounds %struct.MTex, %struct.MTex* %133, i32 0, i32 4, !dbg !6249
  %134 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !6249
  %tobool153 = icmp ne %struct.Object* %134, null, !dbg !6246
  br i1 %tobool153, label %if.then154, label %if.end158, !dbg !6250

if.then154:                                       ; preds = %if.then152
  %135 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6251
  %object155 = getelementptr inbounds %struct.MTex, %struct.MTex* %135, i32 0, i32 4, !dbg !6252
  %136 = load %struct.Object*, %struct.Object** %object155, align 8, !dbg !6252
  %imat_ren = getelementptr inbounds %struct.Object, %struct.Object* %136, i32 0, i32 51, !dbg !6253
  %arraydecay156 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren, i64 0, i64 0, !dbg !6251
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !6254
  call void @mul_m4_v3([4 x float]* %arraydecay156, float* %arraydecay157), !dbg !6255
  br label %if.end158, !dbg !6255

if.end158:                                        ; preds = %if.then154, %if.then152
  br label %if.end223, !dbg !6256

if.else159:                                       ; preds = %if.else147
  %137 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6257
  %texco160 = getelementptr inbounds %struct.MTex, %struct.MTex* %137, i32 0, i32 0, !dbg !6259
  %138 = load i16, i16* %texco160, align 8, !dbg !6259
  %conv161 = sext i16 %138 to i32, !dbg !6257
  %and162 = and i32 %conv161, 8, !dbg !6260
  %tobool163 = icmp ne i32 %and162, 0, !dbg !6260
  br i1 %tobool163, label %if.then164, label %if.else166, !dbg !6261

if.then164:                                       ; preds = %if.else159
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !6262
  %139 = load float*, float** %vec.addr, align 8, !dbg !6264
  call void @copy_v3_v3(float* %arraydecay165, float* %139), !dbg !6265
  br label %if.end222, !dbg !6266

if.else166:                                       ; preds = %if.else159
  %140 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6267
  %texco167 = getelementptr inbounds %struct.MTex, %struct.MTex* %140, i32 0, i32 0, !dbg !6269
  %141 = load i16, i16* %texco167, align 8, !dbg !6269
  %conv168 = sext i16 %141 to i32, !dbg !6267
  %and169 = and i32 %conv168, 16, !dbg !6270
  %tobool170 = icmp ne i32 %and169, 0, !dbg !6270
  br i1 %tobool170, label %land.lhs.true171, label %if.else199, !dbg !6271

land.lhs.true171:                                 ; preds = %if.else166
  %142 = load float*, float** %uvco.addr, align 8, !dbg !6272
  %tobool172 = icmp ne float* %142, null, !dbg !6272
  br i1 %tobool172, label %if.then173, label %if.else199, !dbg !6273

if.then173:                                       ; preds = %land.lhs.true171
  call void @llvm.dbg.declare(metadata i32* %uv_index, metadata !6274, metadata !DIExpression()), !dbg !6276
  %143 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6277
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %143, i32 0, i32 2, !dbg !6278
  %144 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6279
  %uvname = getelementptr inbounds %struct.MTex, %struct.MTex* %144, i32 0, i32 6, !dbg !6280
  %arraydecay174 = getelementptr inbounds [64 x i8], [64 x i8]* %uvname, i64 0, i64 0, !dbg !6279
  %call175 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %faceData, i32 5, i8* %arraydecay174), !dbg !6281
  store i32 %call175, i32* %uv_index, align 4, !dbg !6276
  %145 = load i32, i32* %uv_index, align 4, !dbg !6282
  %cmp176 = icmp slt i32 %145, 0, !dbg !6284
  br i1 %cmp176, label %if.then178, label %if.end181, !dbg !6285

if.then178:                                       ; preds = %if.then173
  %146 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6286
  %faceData179 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %146, i32 0, i32 2, !dbg !6287
  %call180 = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %faceData179, i32 5), !dbg !6288
  store i32 %call180, i32* %uv_index, align 4, !dbg !6289
  br label %if.end181, !dbg !6290

if.end181:                                        ; preds = %if.then178, %if.then173
  %147 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6291
  %faceData182 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %147, i32 0, i32 2, !dbg !6292
  %call183 = call i32 @CustomData_get_layer_index(%struct.CustomData* %faceData182, i32 5), !dbg !6293
  %148 = load i32, i32* %uv_index, align 4, !dbg !6294
  %sub184 = sub nsw i32 %148, %call183, !dbg !6294
  store i32 %sub184, i32* %uv_index, align 4, !dbg !6294
  %149 = load float*, float** %uvco.addr, align 8, !dbg !6295
  %150 = load i32, i32* %uv_index, align 4, !dbg !6296
  %mul185 = mul nsw i32 2, %150, !dbg !6297
  %idxprom186 = sext i32 %mul185 to i64, !dbg !6295
  %arrayidx187 = getelementptr inbounds float, float* %149, i64 %idxprom186, !dbg !6295
  %151 = load float, float* %arrayidx187, align 4, !dbg !6295
  %mul188 = fmul float 2.000000e+00, %151, !dbg !6298
  %sub189 = fsub float %mul188, 1.000000e+00, !dbg !6299
  %arrayidx190 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !6300
  store float %sub189, float* %arrayidx190, align 4, !dbg !6301
  %152 = load float*, float** %uvco.addr, align 8, !dbg !6302
  %153 = load i32, i32* %uv_index, align 4, !dbg !6303
  %mul191 = mul nsw i32 2, %153, !dbg !6304
  %add192 = add nsw i32 %mul191, 1, !dbg !6305
  %idxprom193 = sext i32 %add192 to i64, !dbg !6302
  %arrayidx194 = getelementptr inbounds float, float* %152, i64 %idxprom193, !dbg !6302
  %154 = load float, float* %arrayidx194, align 4, !dbg !6302
  %mul195 = fmul float 2.000000e+00, %154, !dbg !6306
  %sub196 = fsub float %mul195, 1.000000e+00, !dbg !6307
  %arrayidx197 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !6308
  store float %sub196, float* %arrayidx197, align 4, !dbg !6309
  %arrayidx198 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !6310
  store float 0.000000e+00, float* %arrayidx198, align 4, !dbg !6311
  br label %if.end221, !dbg !6312

if.else199:                                       ; preds = %land.lhs.true171, %if.else166
  %155 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6313
  %texco200 = getelementptr inbounds %struct.MTex, %struct.MTex* %155, i32 0, i32 0, !dbg !6315
  %156 = load i16, i16* %texco200, align 8, !dbg !6315
  %conv201 = sext i16 %156 to i32, !dbg !6313
  %and202 = and i32 %conv201, 8192, !dbg !6316
  %tobool203 = icmp ne i32 %and202, 0, !dbg !6316
  br i1 %tobool203, label %if.then204, label %if.else215, !dbg !6317

if.then204:                                       ; preds = %if.else199
  %157 = load float*, float** %pa_co.addr, align 8, !dbg !6318
  %arrayidx205 = getelementptr inbounds float, float* %157, i64 0, !dbg !6318
  %158 = load float, float* %arrayidx205, align 4, !dbg !6318
  %mul206 = fmul float 2.000000e+00, %158, !dbg !6320
  %sub207 = fsub float %mul206, 1.000000e+00, !dbg !6321
  %arrayidx208 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !6322
  store float %sub207, float* %arrayidx208, align 4, !dbg !6323
  %159 = load float*, float** %pa_co.addr, align 8, !dbg !6324
  %arrayidx209 = getelementptr inbounds float, float* %159, i64 1, !dbg !6324
  %160 = load float, float* %arrayidx209, align 4, !dbg !6324
  %mul210 = fmul float 2.000000e+00, %160, !dbg !6325
  %sub211 = fsub float %mul210, 1.000000e+00, !dbg !6326
  %arrayidx212 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 1, !dbg !6327
  store float %sub211, float* %arrayidx212, align 4, !dbg !6328
  %161 = load float*, float** %pa_co.addr, align 8, !dbg !6329
  %arrayidx213 = getelementptr inbounds float, float* %161, i64 2, !dbg !6329
  %162 = load float, float* %arrayidx213, align 4, !dbg !6329
  %arrayidx214 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 2, !dbg !6330
  store float %162, float* %arrayidx214, align 4, !dbg !6331
  br label %if.end220, !dbg !6332

if.else215:                                       ; preds = %if.else199
  %163 = load float*, float** %orco.addr, align 8, !dbg !6333
  %tobool216 = icmp ne float* %163, null, !dbg !6333
  br i1 %tobool216, label %if.then217, label %if.end219, !dbg !6335

if.then217:                                       ; preds = %if.else215
  %arraydecay218 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !6336
  %164 = load float*, float** %orco.addr, align 8, !dbg !6338
  call void @copy_v3_v3(float* %arraydecay218, float* %164), !dbg !6339
  br label %if.end219, !dbg !6340

if.end219:                                        ; preds = %if.then217, %if.else215
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.then204
  br label %if.end221

if.end221:                                        ; preds = %if.end220, %if.end181
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.then164
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.end158
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %if.then146
  %165 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6341
  %arraydecay225 = getelementptr inbounds [3 x float], [3 x float]* %texvec, i64 0, i64 0, !dbg !6342
  %166 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6343
  %pool = getelementptr inbounds %struct.Render, %struct.Render* %166, i32 0, i32 100, !dbg !6344
  %167 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !6344
  %call226 = call i32 @externtex(%struct.MTex* %165, float* %arraydecay225, float* %tin, float* %tr, float* %tg, float* %tb, float* %ta, i32 0, %struct.ImagePool* %167), !dbg !6345
  store i32 %call226, i32* %hasrgb, align 4, !dbg !6346
  %168 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6347
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %168, i32 0, i32 1, !dbg !6349
  %169 = load i16, i16* %mapto, align 2, !dbg !6349
  %conv227 = sext i16 %169 to i32, !dbg !6347
  %and228 = and i32 %conv227, 1, !dbg !6350
  %tobool229 = icmp ne i32 %and228, 0, !dbg !6350
  br i1 %tobool229, label %if.then230, label %if.end250, !dbg !6351

if.then230:                                       ; preds = %if.end224
  %170 = load float, float* %tr, align 4, !dbg !6352
  %arrayidx231 = getelementptr inbounds [3 x float], [3 x float]* %tex, i64 0, i64 0, !dbg !6354
  store float %170, float* %arrayidx231, align 4, !dbg !6355
  %171 = load float, float* %tg, align 4, !dbg !6356
  %arrayidx232 = getelementptr inbounds [3 x float], [3 x float]* %tex, i64 0, i64 1, !dbg !6357
  store float %171, float* %arrayidx232, align 4, !dbg !6358
  %172 = load float, float* %tb, align 4, !dbg !6359
  %arrayidx233 = getelementptr inbounds [3 x float], [3 x float]* %tex, i64 0, i64 2, !dbg !6360
  store float %172, float* %arrayidx233, align 4, !dbg !6361
  %173 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6362
  %r234 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %173, i32 0, i32 14, !dbg !6363
  %174 = load float, float* %r234, align 4, !dbg !6363
  %arrayidx235 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 0, !dbg !6364
  store float %174, float* %arrayidx235, align 4, !dbg !6365
  %175 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6366
  %g236 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %175, i32 0, i32 13, !dbg !6367
  %176 = load float, float* %g236, align 8, !dbg !6367
  %arrayidx237 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 1, !dbg !6368
  store float %176, float* %arrayidx237, align 4, !dbg !6369
  %177 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6370
  %b238 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %177, i32 0, i32 12, !dbg !6371
  %178 = load float, float* %b238, align 4, !dbg !6371
  %arrayidx239 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 2, !dbg !6372
  store float %178, float* %arrayidx239, align 4, !dbg !6373
  %arraydecay240 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 0, !dbg !6374
  %arraydecay241 = getelementptr inbounds [3 x float], [3 x float]* %tex, i64 0, i64 0, !dbg !6375
  %arraydecay242 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 0, !dbg !6376
  %179 = load float, float* %tin, align 4, !dbg !6377
  %180 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6378
  %colfac = getelementptr inbounds %struct.MTex, %struct.MTex* %180, i32 0, i32 28, !dbg !6379
  %181 = load float, float* %colfac, align 4, !dbg !6379
  %182 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6380
  %blendtype = getelementptr inbounds %struct.MTex, %struct.MTex* %182, i32 0, i32 3, !dbg !6381
  %183 = load i16, i16* %blendtype, align 2, !dbg !6381
  %conv243 = sext i16 %183 to i32, !dbg !6380
  call void @texture_rgb_blend(float* %arraydecay240, float* %arraydecay241, float* %arraydecay242, float %179, float %181, i32 %conv243), !dbg !6382
  %arrayidx244 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 0, !dbg !6383
  %184 = load float, float* %arrayidx244, align 4, !dbg !6383
  %185 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6384
  %r245 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %185, i32 0, i32 14, !dbg !6385
  store float %184, float* %r245, align 4, !dbg !6386
  %arrayidx246 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 1, !dbg !6387
  %186 = load float, float* %arrayidx246, align 4, !dbg !6387
  %187 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6388
  %g247 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %187, i32 0, i32 13, !dbg !6389
  store float %186, float* %g247, align 8, !dbg !6390
  %arrayidx248 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 2, !dbg !6391
  %188 = load float, float* %arrayidx248, align 4, !dbg !6391
  %189 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6392
  %b249 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %189, i32 0, i32 12, !dbg !6393
  store float %188, float* %b249, align 4, !dbg !6394
  br label %if.end250, !dbg !6395

if.end250:                                        ; preds = %if.then230, %if.end224
  %190 = load i32, i32* %hasrgb, align 4, !dbg !6396
  %tobool251 = icmp ne i32 %190, 0, !dbg !6396
  br i1 %tobool251, label %if.then252, label %if.end253, !dbg !6398

if.then252:                                       ; preds = %if.end250
  %191 = load float, float* %ta, align 4, !dbg !6399
  store float %191, float* %tin, align 4, !dbg !6400
  br label %if.end253, !dbg !6401

if.end253:                                        ; preds = %if.then252, %if.end250
  %192 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6402
  %mapto254 = getelementptr inbounds %struct.MTex, %struct.MTex* %192, i32 0, i32 1, !dbg !6404
  %193 = load i16, i16* %mapto254, align 2, !dbg !6404
  %conv255 = sext i16 %193 to i32, !dbg !6402
  %and256 = and i32 %conv255, 128, !dbg !6405
  %tobool257 = icmp ne i32 %and256, 0, !dbg !6405
  br i1 %tobool257, label %if.then258, label %if.end264, !dbg !6406

if.then258:                                       ; preds = %if.end253
  %194 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6407
  %def_var = getelementptr inbounds %struct.MTex, %struct.MTex* %194, i32 0, i32 26, !dbg !6408
  %195 = load float, float* %def_var, align 4, !dbg !6408
  %196 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6409
  %alfa259 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %196, i32 0, i32 2, !dbg !6410
  %197 = load float, float* %alfa259, align 4, !dbg !6410
  %198 = load float, float* %tin, align 4, !dbg !6411
  %199 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6412
  %alphafac = getelementptr inbounds %struct.MTex, %struct.MTex* %199, i32 0, i32 35, !dbg !6413
  %200 = load float, float* %alphafac, align 8, !dbg !6413
  %201 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6414
  %blendtype260 = getelementptr inbounds %struct.MTex, %struct.MTex* %201, i32 0, i32 3, !dbg !6415
  %202 = load i16, i16* %blendtype260, align 2, !dbg !6415
  %conv261 = sext i16 %202 to i32, !dbg !6414
  %call262 = call float @texture_value_blend(float %195, float %197, float %198, float %200, i32 %conv261), !dbg !6416
  %203 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6417
  %alfa263 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %203, i32 0, i32 2, !dbg !6418
  store float %call262, float* %alfa263, align 4, !dbg !6419
  br label %if.end264, !dbg !6417

if.end264:                                        ; preds = %if.then258, %if.end253
  %204 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6420
  %mapto265 = getelementptr inbounds %struct.MTex, %struct.MTex* %204, i32 0, i32 1, !dbg !6422
  %205 = load i16, i16* %mapto265, align 2, !dbg !6422
  %conv266 = sext i16 %205 to i32, !dbg !6420
  %and267 = and i32 %conv266, 256, !dbg !6423
  %tobool268 = icmp ne i32 %and267, 0, !dbg !6423
  br i1 %tobool268, label %if.then269, label %if.end279, !dbg !6424

if.then269:                                       ; preds = %if.end264
  %206 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6425
  %def_var270 = getelementptr inbounds %struct.MTex, %struct.MTex* %206, i32 0, i32 26, !dbg !6426
  %207 = load float, float* %def_var270, align 4, !dbg !6426
  %208 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6427
  %hard271 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %208, i32 0, i32 11, !dbg !6428
  %209 = load float, float* %hard271, align 8, !dbg !6428
  %div272 = fdiv float %209, 1.270000e+02, !dbg !6429
  %210 = load float, float* %tin, align 4, !dbg !6430
  %211 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6431
  %hardfac = getelementptr inbounds %struct.MTex, %struct.MTex* %211, i32 0, i32 39, !dbg !6432
  %212 = load float, float* %hardfac, align 8, !dbg !6432
  %213 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6433
  %blendtype273 = getelementptr inbounds %struct.MTex, %struct.MTex* %213, i32 0, i32 3, !dbg !6434
  %214 = load i16, i16* %blendtype273, align 2, !dbg !6434
  %conv274 = sext i16 %214 to i32, !dbg !6433
  %call275 = call float @texture_value_blend(float %207, float %div272, float %210, float %212, i32 %conv274), !dbg !6435
  %mul276 = fmul float 1.260000e+02, %call275, !dbg !6436
  %add277 = fadd float 1.000000e+00, %mul276, !dbg !6437
  %215 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6438
  %hard278 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %215, i32 0, i32 11, !dbg !6439
  store float %add277, float* %hard278, align 8, !dbg !6440
  br label %if.end279, !dbg !6438

if.end279:                                        ; preds = %if.then269, %if.end264
  %216 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6441
  %mapto280 = getelementptr inbounds %struct.MTex, %struct.MTex* %216, i32 0, i32 1, !dbg !6443
  %217 = load i16, i16* %mapto280, align 2, !dbg !6443
  %conv281 = sext i16 %217 to i32, !dbg !6441
  %and282 = and i32 %conv281, 512, !dbg !6444
  %tobool283 = icmp ne i32 %and282, 0, !dbg !6444
  br i1 %tobool283, label %if.then284, label %if.end293, !dbg !6445

if.then284:                                       ; preds = %if.end279
  %218 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6446
  %def_var285 = getelementptr inbounds %struct.MTex, %struct.MTex* %218, i32 0, i32 26, !dbg !6447
  %219 = load float, float* %def_var285, align 4, !dbg !6447
  %220 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6448
  %hasize286 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %220, i32 0, i32 26, !dbg !6449
  %221 = load float, float* %hasize286, align 8, !dbg !6449
  %div287 = fdiv float %221, 1.000000e+02, !dbg !6450
  %222 = load float, float* %tin, align 4, !dbg !6451
  %223 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6452
  %raymirrfac = getelementptr inbounds %struct.MTex, %struct.MTex* %223, i32 0, i32 40, !dbg !6453
  %224 = load float, float* %raymirrfac, align 4, !dbg !6453
  %225 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6454
  %blendtype288 = getelementptr inbounds %struct.MTex, %struct.MTex* %225, i32 0, i32 3, !dbg !6455
  %226 = load i16, i16* %blendtype288, align 2, !dbg !6455
  %conv289 = sext i16 %226 to i32, !dbg !6454
  %call290 = call float @texture_value_blend(float %219, float %div287, float %222, float %224, i32 %conv289), !dbg !6456
  %mul291 = fmul float 1.000000e+02, %call290, !dbg !6457
  %227 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6458
  %hasize292 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %227, i32 0, i32 26, !dbg !6459
  store float %mul291, float* %hasize292, align 8, !dbg !6460
  br label %if.end293, !dbg !6458

if.end293:                                        ; preds = %if.then284, %if.end279
  %228 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6461
  %mapto294 = getelementptr inbounds %struct.MTex, %struct.MTex* %228, i32 0, i32 1, !dbg !6463
  %229 = load i16, i16* %mapto294, align 2, !dbg !6463
  %conv295 = sext i16 %229 to i32, !dbg !6461
  %and296 = and i32 %conv295, 1024, !dbg !6464
  %tobool297 = icmp ne i32 %and296, 0, !dbg !6464
  br i1 %tobool297, label %if.then298, label %if.end319, !dbg !6465

if.then298:                                       ; preds = %if.end293
  call void @llvm.dbg.declare(metadata float* %add299, metadata !6466, metadata !DIExpression()), !dbg !6468
  %230 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6469
  %def_var300 = getelementptr inbounds %struct.MTex, %struct.MTex* %230, i32 0, i32 26, !dbg !6470
  %231 = load float, float* %def_var300, align 4, !dbg !6470
  %232 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6471
  %add301 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %232, i32 0, i32 20, !dbg !6472
  %233 = load i8, i8* %add301, align 2, !dbg !6472
  %conv302 = uitofp i8 %233 to float, !dbg !6473
  %div303 = fdiv float %conv302, 2.550000e+02, !dbg !6474
  %234 = load float, float* %tin, align 4, !dbg !6475
  %235 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6476
  %translfac = getelementptr inbounds %struct.MTex, %struct.MTex* %235, i32 0, i32 41, !dbg !6477
  %236 = load float, float* %translfac, align 8, !dbg !6477
  %237 = load %struct.MTex*, %struct.MTex** %mtex, align 8, !dbg !6478
  %blendtype304 = getelementptr inbounds %struct.MTex, %struct.MTex* %237, i32 0, i32 3, !dbg !6479
  %238 = load i16, i16* %blendtype304, align 2, !dbg !6479
  %conv305 = sext i16 %238 to i32, !dbg !6478
  %call306 = call float @texture_value_blend(float %231, float %div303, float %234, float %236, i32 %conv305), !dbg !6480
  store float %call306, float* %add299, align 4, !dbg !6468
  %239 = load float, float* %add299, align 4, !dbg !6481
  %cmp307 = fcmp olt float %239, 0.000000e+00, !dbg !6481
  br i1 %cmp307, label %if.then309, label %if.else310, !dbg !6484

if.then309:                                       ; preds = %if.then298
  store float 0.000000e+00, float* %add299, align 4, !dbg !6481
  br label %if.end315, !dbg !6481

if.else310:                                       ; preds = %if.then298
  %240 = load float, float* %add299, align 4, !dbg !6485
  %cmp311 = fcmp ogt float %240, 1.000000e+00, !dbg !6485
  br i1 %cmp311, label %if.then313, label %if.end314, !dbg !6481

if.then313:                                       ; preds = %if.else310
  store float 1.000000e+00, float* %add299, align 4, !dbg !6485
  br label %if.end314, !dbg !6485

if.end314:                                        ; preds = %if.then313, %if.else310
  br label %if.end315

if.end315:                                        ; preds = %if.end314, %if.then309
  %241 = load float, float* %add299, align 4, !dbg !6487
  %mul316 = fmul float 2.550000e+02, %241, !dbg !6488
  %conv317 = fptoui float %mul316 to i8, !dbg !6489
  %242 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6490
  %add318 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %242, i32 0, i32 20, !dbg !6491
  store i8 %conv317, i8* %add318, align 2, !dbg !6492
  br label %if.end319, !dbg !6493

if.end319:                                        ; preds = %if.end315, %if.end293
  br label %if.end320, !dbg !6494

if.end320:                                        ; preds = %if.end319, %land.lhs.true134, %for.body
  br label %for.inc, !dbg !6495

for.inc:                                          ; preds = %if.end320
  %243 = load i32, i32* %i, align 4, !dbg !6496
  %inc321 = add nsw i32 %243, 1, !dbg !6496
  store i32 %inc321, i32* %i, align 4, !dbg !6496
  br label %for.cond, !dbg !6497, !llvm.loop !6498

for.end:                                          ; preds = %for.cond
  %244 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6500
  %pool322 = getelementptr inbounds %struct.Render, %struct.Render* %244, i32 0, i32 100, !dbg !6501
  %245 = load %struct.ImagePool*, %struct.ImagePool** %pool322, align 8, !dbg !6501
  %246 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6502
  %pool323 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %246, i32 0, i32 30, !dbg !6503
  store %struct.ImagePool* %245, %struct.ImagePool** %pool323, align 8, !dbg !6504
  %247 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6505
  store %struct.HaloRen* %247, %struct.HaloRen** %retval, align 8, !dbg !6506
  br label %return, !dbg !6506

return:                                           ; preds = %for.end, %if.then11, %if.then3, %if.then
  %248 = load %struct.HaloRen*, %struct.HaloRen** %retval, align 8, !dbg !6507
  ret %struct.HaloRen* %248, !dbg !6507
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #3

declare dso_local i32 @CustomData_get_named_layer_index(%struct.CustomData*, i32, i8*) #3

declare dso_local i32 @CustomData_get_active_layer_index(%struct.CustomData*, i32) #3

declare dso_local i32 @CustomData_get_layer_index(%struct.CustomData*, i32) #3

declare dso_local void @texture_rgb_blend(float*, float*, float*, float, float, i32) #3

declare dso_local float @texture_value_blend(float, float, float, float, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @project_renderdata(%struct.Render* %re, void (float*, [4 x float]*, float*)* %projectfunc, i8 zeroext %do_pano, float %xoffs, i8 zeroext %UNUSED_do_buckets) #0 !dbg !6508 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %projectfunc.addr = alloca void (float*, [4 x float]*, float*)*, align 8
  %do_pano.addr = alloca i8, align 1
  %xoffs.addr = alloca float, align 4
  %UNUSED_do_buckets.addr = alloca i8, align 1
  %obr = alloca %struct.ObjectRen*, align 8
  %har = alloca %struct.HaloRen*, align 8
  %zn = alloca float, align 4
  %vec = alloca [3 x float], align 4
  %hoco = alloca [4 x float], align 16
  %a = alloca i32, align 4
  %panophi = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6514, metadata !DIExpression()), !dbg !6515
  store void (float*, [4 x float]*, float*)* %projectfunc, void (float*, [4 x float]*, float*)** %projectfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (float*, [4 x float]*, float*)** %projectfunc.addr, metadata !6516, metadata !DIExpression()), !dbg !6517
  store i8 %do_pano, i8* %do_pano.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_pano.addr, metadata !6518, metadata !DIExpression()), !dbg !6519
  store float %xoffs, float* %xoffs.addr, align 4
  call void @llvm.dbg.declare(metadata float* %xoffs.addr, metadata !6520, metadata !DIExpression()), !dbg !6521
  store i8 %UNUSED_do_buckets, i8* %UNUSED_do_buckets.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_do_buckets.addr, metadata !6522, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !6524, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har, metadata !6526, metadata !DIExpression()), !dbg !6527
  store %struct.HaloRen* null, %struct.HaloRen** %har, align 8, !dbg !6527
  call void @llvm.dbg.declare(metadata float* %zn, metadata !6528, metadata !DIExpression()), !dbg !6529
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6530, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.declare(metadata [4 x float]* %hoco, metadata !6532, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6534, metadata !DIExpression()), !dbg !6535
  %0 = load i8, i8* %do_pano.addr, align 1, !dbg !6536
  %tobool = icmp ne i8 %0, 0, !dbg !6536
  br i1 %tobool, label %if.then, label %if.end, !dbg !6538

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %panophi, metadata !6539, metadata !DIExpression()), !dbg !6541
  %1 = load float, float* %xoffs.addr, align 4, !dbg !6542
  store float %1, float* %panophi, align 4, !dbg !6541
  %2 = load float, float* %panophi, align 4, !dbg !6543
  %call = call float @sinf(float %2) #5, !dbg !6544
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6545
  %panosi = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 26, !dbg !6546
  store float %call, float* %panosi, align 8, !dbg !6547
  %4 = load float, float* %panophi, align 4, !dbg !6548
  %call1 = call float @cosf(float %4) #5, !dbg !6549
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6550
  %panoco = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 27, !dbg !6551
  store float %call1, float* %panoco, align 4, !dbg !6552
  br label %if.end, !dbg !6553

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6554
  %objecttable = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 68, !dbg !6556
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %objecttable, i32 0, i32 0, !dbg !6557
  %7 = load i8*, i8** %first, align 8, !dbg !6557
  %8 = bitcast i8* %7 to %struct.ObjectRen*, !dbg !6554
  store %struct.ObjectRen* %8, %struct.ObjectRen** %obr, align 8, !dbg !6558
  br label %for.cond, !dbg !6559

for.cond:                                         ; preds = %for.inc145, %if.end
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6560
  %tobool2 = icmp ne %struct.ObjectRen* %9, null, !dbg !6562
  br i1 %tobool2, label %for.body, label %for.end146, !dbg !6562

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %a, align 4, !dbg !6563
  br label %for.cond3, !dbg !6566

for.cond3:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %a, align 4, !dbg !6567
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6569
  %tothalo = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %11, i32 0, i32 13, !dbg !6570
  %12 = load i32, i32* %tothalo, align 4, !dbg !6570
  %cmp = icmp slt i32 %10, %12, !dbg !6571
  br i1 %cmp, label %for.body4, label %for.end, !dbg !6572

for.body4:                                        ; preds = %for.cond3
  %13 = load i32, i32* %a, align 4, !dbg !6573
  %and = and i32 %13, 255, !dbg !6576
  %cmp5 = icmp eq i32 %and, 0, !dbg !6577
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6578

if.then6:                                         ; preds = %for.body4
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6579
  %bloha = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %14, i32 0, i32 21, !dbg !6580
  %15 = load %struct.HaloRen**, %struct.HaloRen*** %bloha, align 8, !dbg !6580
  %16 = load i32, i32* %a, align 4, !dbg !6581
  %shr = ashr i32 %16, 8, !dbg !6582
  %idxprom = sext i32 %shr to i64, !dbg !6579
  %arrayidx = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %15, i64 %idxprom, !dbg !6579
  %17 = load %struct.HaloRen*, %struct.HaloRen** %arrayidx, align 8, !dbg !6579
  store %struct.HaloRen* %17, %struct.HaloRen** %har, align 8, !dbg !6583
  br label %if.end7, !dbg !6584

if.else:                                          ; preds = %for.body4
  %18 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6585
  %incdec.ptr = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %18, i32 1, !dbg !6585
  store %struct.HaloRen* %incdec.ptr, %struct.HaloRen** %har, align 8, !dbg !6585
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %19 = load i8, i8* %do_pano.addr, align 1, !dbg !6586
  %tobool8 = icmp ne i8 %19, 0, !dbg !6586
  br i1 %tobool8, label %if.then9, label %if.else30, !dbg !6588

if.then9:                                         ; preds = %if.end7
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6589
  %panoco10 = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 27, !dbg !6591
  %21 = load float, float* %panoco10, align 4, !dbg !6591
  %22 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6592
  %co = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %22, i32 0, i32 9, !dbg !6593
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6592
  %23 = load float, float* %arrayidx11, align 8, !dbg !6592
  %mul = fmul float %21, %23, !dbg !6594
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6595
  %panosi12 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 26, !dbg !6596
  %25 = load float, float* %panosi12, align 8, !dbg !6596
  %26 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6597
  %co13 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %26, i32 0, i32 9, !dbg !6598
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %co13, i64 0, i64 2, !dbg !6597
  %27 = load float, float* %arrayidx14, align 8, !dbg !6597
  %mul15 = fmul float %25, %27, !dbg !6599
  %add = fadd float %mul, %mul15, !dbg !6600
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6601
  store float %add, float* %arrayidx16, align 4, !dbg !6602
  %28 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6603
  %co17 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %28, i32 0, i32 9, !dbg !6604
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %co17, i64 0, i64 1, !dbg !6603
  %29 = load float, float* %arrayidx18, align 4, !dbg !6603
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !6605
  store float %29, float* %arrayidx19, align 4, !dbg !6606
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6607
  %panosi20 = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 26, !dbg !6608
  %31 = load float, float* %panosi20, align 8, !dbg !6608
  %fneg = fneg float %31, !dbg !6609
  %32 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6610
  %co21 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %32, i32 0, i32 9, !dbg !6611
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %co21, i64 0, i64 0, !dbg !6610
  %33 = load float, float* %arrayidx22, align 8, !dbg !6610
  %mul23 = fmul float %fneg, %33, !dbg !6612
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6613
  %panoco24 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 27, !dbg !6614
  %35 = load float, float* %panoco24, align 4, !dbg !6614
  %36 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6615
  %co25 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %36, i32 0, i32 9, !dbg !6616
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %co25, i64 0, i64 2, !dbg !6615
  %37 = load float, float* %arrayidx26, align 8, !dbg !6615
  %mul27 = fmul float %35, %37, !dbg !6617
  %add28 = fadd float %mul23, %mul27, !dbg !6618
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !6619
  store float %add28, float* %arrayidx29, align 4, !dbg !6620
  br label %if.end33, !dbg !6621

if.else30:                                        ; preds = %if.end7
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6622
  %38 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6624
  %co31 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %38, i32 0, i32 9, !dbg !6625
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %co31, i64 0, i64 0, !dbg !6624
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay32), !dbg !6626
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %if.then9
  %39 = load void (float*, [4 x float]*, float*)*, void (float*, [4 x float]*, float*)** %projectfunc.addr, align 8, !dbg !6627
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6628
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6629
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %40, i32 0, i32 35, !dbg !6630
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !6629
  %arraydecay36 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !6631
  call void %39(float* %arraydecay34, [4 x float]* %arraydecay35, float* %arraydecay36), !dbg !6627
  %arrayidx37 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !6632
  %41 = load float, float* %arrayidx37, align 16, !dbg !6633
  %mul38 = fmul float %41, 5.000000e-01, !dbg !6633
  store float %mul38, float* %arrayidx37, align 16, !dbg !6633
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !6634
  %42 = load float, float* %arrayidx39, align 4, !dbg !6635
  %mul40 = fmul float %42, 5.000000e-01, !dbg !6635
  store float %mul40, float* %arrayidx39, align 4, !dbg !6635
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6636
  %44 = load i8, i8* %do_pano.addr, align 1, !dbg !6638
  %arraydecay41 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !6639
  %call42 = call i32 @panotestclip(%struct.Render* %43, i8 zeroext %44, float* %arraydecay41), !dbg !6640
  %tobool43 = icmp ne i32 %call42, 0, !dbg !6640
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !6641

if.then44:                                        ; preds = %if.end33
  %45 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6642
  %maxy = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %45, i32 0, i32 1, !dbg !6644
  store i16 -10000, i16* %maxy, align 2, !dbg !6645
  %46 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6646
  %miny = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %46, i32 0, i32 0, !dbg !6647
  store i16 -10000, i16* %miny, align 8, !dbg !6648
  br label %if.end144, !dbg !6649

if.else45:                                        ; preds = %if.end33
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !6650
  %47 = load float, float* %arrayidx46, align 4, !dbg !6650
  %cmp47 = fcmp olt float %47, 0.000000e+00, !dbg !6652
  br i1 %cmp47, label %if.then48, label %if.else51, !dbg !6653

if.then48:                                        ; preds = %if.else45
  %48 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6654
  %maxy49 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %48, i32 0, i32 1, !dbg !6656
  store i16 -10000, i16* %maxy49, align 2, !dbg !6657
  %49 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6658
  %miny50 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %49, i32 0, i32 0, !dbg !6659
  store i16 -10000, i16* %miny50, align 8, !dbg !6660
  br label %if.end143, !dbg !6661

if.else51:                                        ; preds = %if.else45
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !6662
  %50 = load float, float* %arrayidx52, align 16, !dbg !6664
  %mul53 = fmul float %50, 2.000000e+00, !dbg !6664
  store float %mul53, float* %arrayidx52, align 16, !dbg !6664
  %arrayidx54 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !6665
  %51 = load float, float* %arrayidx54, align 4, !dbg !6666
  %mul55 = fmul float %51, 2.000000e+00, !dbg !6666
  store float %mul55, float* %arrayidx54, align 4, !dbg !6666
  %arrayidx56 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !6667
  %52 = load float, float* %arrayidx56, align 4, !dbg !6667
  store float %52, float* %zn, align 4, !dbg !6668
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6669
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 13, !dbg !6670
  %54 = load i32, i32* %winx, align 4, !dbg !6670
  %conv = sitofp i32 %54 to float, !dbg !6669
  %mul57 = fmul float 5.000000e-01, %conv, !dbg !6671
  %arrayidx58 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !6672
  %55 = load float, float* %arrayidx58, align 16, !dbg !6672
  %56 = load float, float* %zn, align 4, !dbg !6673
  %div = fdiv float %55, %56, !dbg !6674
  %add59 = fadd float 1.000000e+00, %div, !dbg !6675
  %mul60 = fmul float %mul57, %add59, !dbg !6676
  %57 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6677
  %xs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %57, i32 0, i32 3, !dbg !6678
  store float %mul60, float* %xs, align 8, !dbg !6679
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6680
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 14, !dbg !6681
  %59 = load i32, i32* %winy, align 8, !dbg !6681
  %conv61 = sitofp i32 %59 to float, !dbg !6680
  %mul62 = fmul float 5.000000e-01, %conv61, !dbg !6682
  %arrayidx63 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !6683
  %60 = load float, float* %arrayidx63, align 4, !dbg !6683
  %61 = load float, float* %zn, align 4, !dbg !6684
  %div64 = fdiv float %60, %61, !dbg !6685
  %add65 = fadd float 1.000000e+00, %div64, !dbg !6686
  %mul66 = fmul float %mul62, %add65, !dbg !6687
  %62 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6688
  %ys = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %62, i32 0, i32 4, !dbg !6689
  store float %mul66, float* %ys, align 4, !dbg !6690
  %arrayidx67 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !6691
  %63 = load float, float* %arrayidx67, align 8, !dbg !6691
  %64 = load float, float* %zn, align 4, !dbg !6692
  %div68 = fdiv float %63, %64, !dbg !6693
  %mul69 = fmul float 0x415FFFFFC0000000, %div68, !dbg !6694
  %conv70 = fptosi float %mul69 to i32, !dbg !6695
  %65 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6696
  %zs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %65, i32 0, i32 15, !dbg !6697
  store i32 %conv70, i32* %zs, align 8, !dbg !6698
  %arrayidx71 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !6699
  %66 = load float, float* %arrayidx71, align 8, !dbg !6699
  %67 = load float, float* %zn, align 4, !dbg !6700
  %div72 = fdiv float %66, %67, !dbg !6701
  %mul73 = fmul float 0x41E0000000000000, %div72, !dbg !6702
  %conv74 = fptosi float %mul73 to i32, !dbg !6703
  %68 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6704
  %zBufDist = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %68, i32 0, i32 17, !dbg !6705
  store i32 %conv74, i32* %zBufDist, align 8, !dbg !6706
  %69 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6707
  %hasize = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %69, i32 0, i32 26, !dbg !6708
  %70 = load float, float* %hasize, align 8, !dbg !6708
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6709
  %71 = load float, float* %arrayidx75, align 4, !dbg !6710
  %add76 = fadd float %71, %70, !dbg !6710
  store float %add76, float* %arrayidx75, align 4, !dbg !6710
  %72 = load void (float*, [4 x float]*, float*)*, void (float*, [4 x float]*, float*)** %projectfunc.addr, align 8, !dbg !6711
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6712
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6713
  %winmat78 = getelementptr inbounds %struct.Render, %struct.Render* %73, i32 0, i32 35, !dbg !6714
  %arraydecay79 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat78, i64 0, i64 0, !dbg !6713
  %arraydecay80 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !6715
  call void %72(float* %arraydecay77, [4 x float]* %arraydecay79, float* %arraydecay80), !dbg !6711
  %74 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6716
  %hasize81 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %74, i32 0, i32 26, !dbg !6717
  %75 = load float, float* %hasize81, align 8, !dbg !6717
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6718
  %76 = load float, float* %arrayidx82, align 4, !dbg !6719
  %sub = fsub float %76, %75, !dbg !6719
  store float %sub, float* %arrayidx82, align 4, !dbg !6719
  %arrayidx83 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !6720
  %77 = load float, float* %arrayidx83, align 4, !dbg !6720
  store float %77, float* %zn, align 4, !dbg !6721
  %78 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6722
  %xs84 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %78, i32 0, i32 3, !dbg !6723
  %79 = load float, float* %xs84, align 8, !dbg !6723
  %80 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6724
  %winx85 = getelementptr inbounds %struct.Render, %struct.Render* %80, i32 0, i32 13, !dbg !6725
  %81 = load i32, i32* %winx85, align 4, !dbg !6725
  %conv86 = sitofp i32 %81 to float, !dbg !6724
  %mul87 = fmul float 5.000000e-01, %conv86, !dbg !6726
  %arrayidx88 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !6727
  %82 = load float, float* %arrayidx88, align 16, !dbg !6727
  %83 = load float, float* %zn, align 4, !dbg !6728
  %div89 = fdiv float %82, %83, !dbg !6729
  %add90 = fadd float 1.000000e+00, %div89, !dbg !6730
  %mul91 = fmul float %mul87, %add90, !dbg !6731
  %sub92 = fsub float %79, %mul91, !dbg !6732
  %84 = call float @llvm.fabs.f32(float %sub92), !dbg !6733
  %85 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6734
  %rad = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %85, i32 0, i32 5, !dbg !6735
  store float %84, float* %rad, align 8, !dbg !6736
  %86 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6737
  %type = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %86, i32 0, i32 19, !dbg !6739
  %87 = load i8, i8* %type, align 1, !dbg !6739
  %conv93 = zext i8 %87 to i32, !dbg !6737
  %and94 = and i32 %conv93, 1, !dbg !6740
  %tobool95 = icmp ne i32 %and94, 0, !dbg !6740
  br i1 %tobool95, label %if.then96, label %if.end103, !dbg !6741

if.then96:                                        ; preds = %if.else51
  %88 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6742
  %rad97 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %88, i32 0, i32 5, !dbg !6745
  %89 = load float, float* %rad97, align 8, !dbg !6745
  %cmp98 = fcmp ogt float %89, 3.000000e+00, !dbg !6746
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !6747

if.then100:                                       ; preds = %if.then96
  %90 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6748
  %rad101 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %90, i32 0, i32 5, !dbg !6749
  store float 3.000000e+00, float* %rad101, align 8, !dbg !6750
  br label %if.end102, !dbg !6748

if.end102:                                        ; preds = %if.then100, %if.then96
  br label %if.end103, !dbg !6751

if.end103:                                        ; preds = %if.end102, %if.else51
  %91 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6752
  %rad104 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %91, i32 0, i32 5, !dbg !6753
  %92 = load float, float* %rad104, align 8, !dbg !6753
  %93 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6754
  %rad105 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %93, i32 0, i32 5, !dbg !6755
  %94 = load float, float* %rad105, align 8, !dbg !6755
  %mul106 = fmul float %92, %94, !dbg !6756
  %95 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6757
  %radsq = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %95, i32 0, i32 6, !dbg !6758
  store float %mul106, float* %radsq, align 4, !dbg !6759
  %96 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6760
  %ys107 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %96, i32 0, i32 4, !dbg !6761
  %97 = load float, float* %ys107, align 4, !dbg !6761
  %98 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6762
  %rad108 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %98, i32 0, i32 5, !dbg !6763
  %99 = load float, float* %rad108, align 8, !dbg !6763
  %100 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6764
  %ycor = getelementptr inbounds %struct.Render, %struct.Render* %100, i32 0, i32 24, !dbg !6765
  %101 = load float, float* %ycor, align 8, !dbg !6765
  %div109 = fdiv float %99, %101, !dbg !6766
  %sub110 = fsub float %97, %div109, !dbg !6767
  %conv111 = fptosi float %sub110 to i16, !dbg !6760
  %102 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6768
  %miny112 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %102, i32 0, i32 0, !dbg !6769
  store i16 %conv111, i16* %miny112, align 8, !dbg !6770
  %103 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6771
  %ys113 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %103, i32 0, i32 4, !dbg !6772
  %104 = load float, float* %ys113, align 4, !dbg !6772
  %105 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6773
  %rad114 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %105, i32 0, i32 5, !dbg !6774
  %106 = load float, float* %rad114, align 8, !dbg !6774
  %107 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6775
  %ycor115 = getelementptr inbounds %struct.Render, %struct.Render* %107, i32 0, i32 24, !dbg !6776
  %108 = load float, float* %ycor115, align 8, !dbg !6776
  %div116 = fdiv float %106, %108, !dbg !6777
  %add117 = fadd float %104, %div116, !dbg !6778
  %conv118 = fptosi float %add117 to i16, !dbg !6771
  %109 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6779
  %maxy119 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %109, i32 0, i32 1, !dbg !6780
  store i16 %conv118, i16* %maxy119, align 2, !dbg !6781
  %110 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6782
  %hasize120 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %110, i32 0, i32 26, !dbg !6783
  %111 = load float, float* %hasize120, align 8, !dbg !6783
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !6784
  %112 = load float, float* %arrayidx121, align 4, !dbg !6785
  %sub122 = fsub float %112, %111, !dbg !6785
  store float %sub122, float* %arrayidx121, align 4, !dbg !6785
  %113 = load void (float*, [4 x float]*, float*)*, void (float*, [4 x float]*, float*)** %projectfunc.addr, align 8, !dbg !6786
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6787
  %114 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6788
  %winmat124 = getelementptr inbounds %struct.Render, %struct.Render* %114, i32 0, i32 35, !dbg !6789
  %arraydecay125 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat124, i64 0, i64 0, !dbg !6788
  %arraydecay126 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !6790
  call void %113(float* %arraydecay123, [4 x float]* %arraydecay125, float* %arraydecay126), !dbg !6786
  %arrayidx127 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 3, !dbg !6791
  %115 = load float, float* %arrayidx127, align 4, !dbg !6791
  store float %115, float* %zn, align 4, !dbg !6792
  %116 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6793
  %zs128 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %116, i32 0, i32 15, !dbg !6794
  %117 = load i32, i32* %zs128, align 8, !dbg !6794
  %conv129 = sitofp i32 %117 to float, !dbg !6795
  %arrayidx130 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 2, !dbg !6796
  %118 = load float, float* %arrayidx130, align 8, !dbg !6796
  %119 = load float, float* %zn, align 4, !dbg !6797
  %div131 = fdiv float %118, %119, !dbg !6798
  %mul132 = fmul float 0x415FFFFFC0000000, %div131, !dbg !6799
  %sub133 = fsub float %conv129, %mul132, !dbg !6800
  %120 = call float @llvm.fabs.f32(float %sub133), !dbg !6801
  store float %120, float* %zn, align 4, !dbg !6802
  %121 = load float, float* %zn, align 4, !dbg !6803
  %cmp134 = fcmp olt float %121, 0.000000e+00, !dbg !6803
  br i1 %cmp134, label %cond.true, label %cond.false, !dbg !6803

cond.true:                                        ; preds = %if.end103
  br label %cond.end140, !dbg !6803

cond.false:                                       ; preds = %if.end103
  %122 = load float, float* %zn, align 4, !dbg !6803
  %cmp136 = fcmp ogt float %122, 0x41E0000000000000, !dbg !6803
  br i1 %cmp136, label %cond.true138, label %cond.false139, !dbg !6803

cond.true138:                                     ; preds = %cond.false
  br label %cond.end, !dbg !6803

cond.false139:                                    ; preds = %cond.false
  %123 = load float, float* %zn, align 4, !dbg !6803
  br label %cond.end, !dbg !6803

cond.end:                                         ; preds = %cond.false139, %cond.true138
  %cond = phi float [ 0x41E0000000000000, %cond.true138 ], [ %123, %cond.false139 ], !dbg !6803
  br label %cond.end140, !dbg !6803

cond.end140:                                      ; preds = %cond.end, %cond.true
  %cond141 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !6803
  %conv142 = fptosi float %cond141 to i32, !dbg !6803
  %124 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6804
  %zd = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %124, i32 0, i32 16, !dbg !6805
  store i32 %conv142, i32* %zd, align 4, !dbg !6806
  br label %if.end143

if.end143:                                        ; preds = %cond.end140, %if.then48
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then44
  br label %for.inc, !dbg !6807

for.inc:                                          ; preds = %if.end144
  %125 = load i32, i32* %a, align 4, !dbg !6808
  %inc = add nsw i32 %125, 1, !dbg !6808
  store i32 %inc, i32* %a, align 4, !dbg !6808
  br label %for.cond3, !dbg !6809, !llvm.loop !6810

for.end:                                          ; preds = %for.cond3
  br label %for.inc145, !dbg !6812

for.inc145:                                       ; preds = %for.end
  %126 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6813
  %next = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %126, i32 0, i32 0, !dbg !6814
  %127 = load %struct.ObjectRen*, %struct.ObjectRen** %next, align 8, !dbg !6814
  store %struct.ObjectRen* %127, %struct.ObjectRen** %obr, align 8, !dbg !6815
  br label %for.cond, !dbg !6816, !llvm.loop !6817

for.end146:                                       ; preds = %for.cond
  ret void, !dbg !6819
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @panotestclip(%struct.Render* %re, i8 zeroext %do_pano, float* %v) #0 !dbg !6820 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Render*, align 8
  %do_pano.addr = alloca i8, align 1
  %v.addr = alloca float*, align 8
  %abs4 = alloca float, align 4
  %c = alloca i16, align 2
  %xparts = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6823, metadata !DIExpression()), !dbg !6824
  store i8 %do_pano, i8* %do_pano.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_pano.addr, metadata !6825, metadata !DIExpression()), !dbg !6826
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !6827, metadata !DIExpression()), !dbg !6828
  %0 = load i8, i8* %do_pano.addr, align 1, !dbg !6829
  %conv = zext i8 %0 to i32, !dbg !6829
  %cmp = icmp eq i32 %conv, 0, !dbg !6831
  br i1 %cmp, label %if.then, label %if.else, !dbg !6832

if.then:                                          ; preds = %entry
  %1 = load float*, float** %v.addr, align 8, !dbg !6833
  %call = call i32 @testclip(float* %1), !dbg !6835
  store i32 %call, i32* %retval, align 4, !dbg !6836
  br label %return, !dbg !6836

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %abs4, metadata !6837, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.declare(metadata i16* %c, metadata !6840, metadata !DIExpression()), !dbg !6841
  store i16 0, i16* %c, align 2, !dbg !6841
  call void @llvm.dbg.declare(metadata i32* %xparts, metadata !6842, metadata !DIExpression()), !dbg !6843
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6844
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 20, !dbg !6845
  %3 = load i32, i32* %rectx, align 8, !dbg !6845
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6846
  %partx = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 22, !dbg !6847
  %5 = load i32, i32* %partx, align 8, !dbg !6847
  %add = add nsw i32 %3, %5, !dbg !6848
  %sub = sub nsw i32 %add, 1, !dbg !6849
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6850
  %partx2 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 22, !dbg !6851
  %7 = load i32, i32* %partx2, align 8, !dbg !6851
  %div = sdiv i32 %sub, %7, !dbg !6852
  store i32 %div, i32* %xparts, align 4, !dbg !6843
  %8 = load float*, float** %v.addr, align 8, !dbg !6853
  %arrayidx = getelementptr inbounds float, float* %8, i64 3, !dbg !6853
  %9 = load float, float* %arrayidx, align 4, !dbg !6853
  %10 = call float @llvm.fabs.f32(float %9), !dbg !6854
  store float %10, float* %abs4, align 4, !dbg !6855
  %11 = load float*, float** %v.addr, align 8, !dbg !6856
  %arrayidx3 = getelementptr inbounds float, float* %11, i64 2, !dbg !6856
  %12 = load float, float* %arrayidx3, align 4, !dbg !6856
  %13 = load float, float* %abs4, align 4, !dbg !6858
  %fneg = fneg float %13, !dbg !6859
  %cmp4 = fcmp olt float %12, %fneg, !dbg !6860
  br i1 %cmp4, label %if.then6, label %if.else7, !dbg !6861

if.then6:                                         ; preds = %if.else
  store i16 16, i16* %c, align 2, !dbg !6862
  br label %if.end15, !dbg !6863

if.else7:                                         ; preds = %if.else
  %14 = load float*, float** %v.addr, align 8, !dbg !6864
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 2, !dbg !6864
  %15 = load float, float* %arrayidx8, align 4, !dbg !6864
  %16 = load float, float* %abs4, align 4, !dbg !6866
  %cmp9 = fcmp ogt float %15, %16, !dbg !6867
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !6868

if.then11:                                        ; preds = %if.else7
  %17 = load i16, i16* %c, align 2, !dbg !6869
  %conv12 = sext i16 %17 to i32, !dbg !6869
  %add13 = add nsw i32 %conv12, 32, !dbg !6869
  %conv14 = trunc i32 %add13 to i16, !dbg !6869
  store i16 %conv14, i16* %c, align 2, !dbg !6869
  br label %if.end, !dbg !6870

if.end:                                           ; preds = %if.then11, %if.else7
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then6
  %18 = load float*, float** %v.addr, align 8, !dbg !6871
  %arrayidx16 = getelementptr inbounds float, float* %18, i64 1, !dbg !6871
  %19 = load float, float* %arrayidx16, align 4, !dbg !6871
  %20 = load float, float* %abs4, align 4, !dbg !6873
  %cmp17 = fcmp ogt float %19, %20, !dbg !6874
  br i1 %cmp17, label %if.then19, label %if.else23, !dbg !6875

if.then19:                                        ; preds = %if.end15
  %21 = load i16, i16* %c, align 2, !dbg !6876
  %conv20 = sext i16 %21 to i32, !dbg !6876
  %add21 = add nsw i32 %conv20, 4, !dbg !6876
  %conv22 = trunc i32 %add21 to i16, !dbg !6876
  store i16 %conv22, i16* %c, align 2, !dbg !6876
  br label %if.end33, !dbg !6877

if.else23:                                        ; preds = %if.end15
  %22 = load float*, float** %v.addr, align 8, !dbg !6878
  %arrayidx24 = getelementptr inbounds float, float* %22, i64 1, !dbg !6878
  %23 = load float, float* %arrayidx24, align 4, !dbg !6878
  %24 = load float, float* %abs4, align 4, !dbg !6880
  %fneg25 = fneg float %24, !dbg !6881
  %cmp26 = fcmp olt float %23, %fneg25, !dbg !6882
  br i1 %cmp26, label %if.then28, label %if.end32, !dbg !6883

if.then28:                                        ; preds = %if.else23
  %25 = load i16, i16* %c, align 2, !dbg !6884
  %conv29 = sext i16 %25 to i32, !dbg !6884
  %add30 = add nsw i32 %conv29, 8, !dbg !6884
  %conv31 = trunc i32 %add30 to i16, !dbg !6884
  store i16 %conv31, i16* %c, align 2, !dbg !6884
  br label %if.end32, !dbg !6885

if.end32:                                         ; preds = %if.then28, %if.else23
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then19
  %26 = load i32, i32* %xparts, align 4, !dbg !6886
  %conv34 = sitofp i32 %26 to float, !dbg !6886
  %27 = load float, float* %abs4, align 4, !dbg !6887
  %mul = fmul float %27, %conv34, !dbg !6887
  store float %mul, float* %abs4, align 4, !dbg !6887
  %28 = load float*, float** %v.addr, align 8, !dbg !6888
  %arrayidx35 = getelementptr inbounds float, float* %28, i64 0, !dbg !6888
  %29 = load float, float* %arrayidx35, align 4, !dbg !6888
  %30 = load float, float* %abs4, align 4, !dbg !6890
  %cmp36 = fcmp ogt float %29, %30, !dbg !6891
  br i1 %cmp36, label %if.then38, label %if.else42, !dbg !6892

if.then38:                                        ; preds = %if.end33
  %31 = load i16, i16* %c, align 2, !dbg !6893
  %conv39 = sext i16 %31 to i32, !dbg !6893
  %add40 = add nsw i32 %conv39, 2, !dbg !6893
  %conv41 = trunc i32 %add40 to i16, !dbg !6893
  store i16 %conv41, i16* %c, align 2, !dbg !6893
  br label %if.end52, !dbg !6894

if.else42:                                        ; preds = %if.end33
  %32 = load float*, float** %v.addr, align 8, !dbg !6895
  %arrayidx43 = getelementptr inbounds float, float* %32, i64 0, !dbg !6895
  %33 = load float, float* %arrayidx43, align 4, !dbg !6895
  %34 = load float, float* %abs4, align 4, !dbg !6897
  %fneg44 = fneg float %34, !dbg !6898
  %cmp45 = fcmp olt float %33, %fneg44, !dbg !6899
  br i1 %cmp45, label %if.then47, label %if.end51, !dbg !6900

if.then47:                                        ; preds = %if.else42
  %35 = load i16, i16* %c, align 2, !dbg !6901
  %conv48 = sext i16 %35 to i32, !dbg !6901
  %add49 = add nsw i32 %conv48, 1, !dbg !6901
  %conv50 = trunc i32 %add49 to i16, !dbg !6901
  store i16 %conv50, i16* %c, align 2, !dbg !6901
  br label %if.end51, !dbg !6902

if.end51:                                         ; preds = %if.then47, %if.else42
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then38
  %36 = load i16, i16* %c, align 2, !dbg !6903
  %conv53 = sext i16 %36 to i32, !dbg !6903
  store i32 %conv53, i32* %retval, align 4, !dbg !6904
  br label %return, !dbg !6904

return:                                           ; preds = %if.end52, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !6905
  ret i32 %37, !dbg !6905
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ObjectInstanceRen* @RE_addRenderInstance(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.Object* %ob, %struct.Object* %par, i32 %index, i32 %psysindex, [4 x float]* %mat, i32 %lay) #0 !dbg !6906 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %par.addr = alloca %struct.Object*, align 8
  %index.addr = alloca i32, align 4
  %psysindex.addr = alloca i32, align 4
  %mat.addr = alloca [4 x float]*, align 8
  %lay.addr = alloca i32, align 4
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %mat3 = alloca [3 x [3 x float]], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6909, metadata !DIExpression()), !dbg !6910
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !6911, metadata !DIExpression()), !dbg !6912
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6913, metadata !DIExpression()), !dbg !6914
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !6915, metadata !DIExpression()), !dbg !6916
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6917, metadata !DIExpression()), !dbg !6918
  store i32 %psysindex, i32* %psysindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %psysindex.addr, metadata !6919, metadata !DIExpression()), !dbg !6920
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !6921, metadata !DIExpression()), !dbg !6922
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !6923, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !6925, metadata !DIExpression()), !dbg !6926
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat3, metadata !6927, metadata !DIExpression()), !dbg !6928
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6929
  %call = call i8* %0(i64 288, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0)), !dbg !6929
  %1 = bitcast i8* %call to %struct.ObjectInstanceRen*, !dbg !6929
  store %struct.ObjectInstanceRen* %1, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6930
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !6931
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6932
  %obr1 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %3, i32 0, i32 2, !dbg !6933
  store %struct.ObjectRen* %2, %struct.ObjectRen** %obr1, align 8, !dbg !6934
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6935
  %5 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6936
  %ob2 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %5, i32 0, i32 3, !dbg !6937
  store %struct.Object* %4, %struct.Object** %ob2, align 8, !dbg !6938
  %6 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !6939
  %7 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6940
  %par3 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %7, i32 0, i32 4, !dbg !6941
  store %struct.Object* %6, %struct.Object** %par3, align 8, !dbg !6942
  %8 = load i32, i32* %index.addr, align 4, !dbg !6943
  %9 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6944
  %index4 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %9, i32 0, i32 5, !dbg !6945
  store i32 %8, i32* %index4, align 8, !dbg !6946
  %10 = load i32, i32* %psysindex.addr, align 4, !dbg !6947
  %11 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6948
  %psysindex5 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %11, i32 0, i32 6, !dbg !6949
  store i32 %10, i32* %psysindex5, align 4, !dbg !6950
  %12 = load i32, i32* %lay.addr, align 4, !dbg !6951
  %13 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6952
  %lay6 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %13, i32 0, i32 7, !dbg !6953
  store i32 %12, i32* %lay6, align 8, !dbg !6954
  %14 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !6955
  %tobool = icmp ne [4 x float]* %14, null, !dbg !6955
  br i1 %tobool, label %if.then, label %if.end, !dbg !6957

if.then:                                          ; preds = %entry
  %15 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6958
  %mat7 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %15, i32 0, i32 8, !dbg !6960
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat7, i64 0, i64 0, !dbg !6958
  %16 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !6961
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %16), !dbg !6962
  %arraydecay8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !6963
  %17 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !6964
  call void @copy_m3_m4([3 x float]* %arraydecay8, [4 x float]* %17), !dbg !6965
  %18 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6966
  %nmat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %18, i32 0, i32 10, !dbg !6967
  %arraydecay9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !6966
  %arraydecay10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !6968
  %call11 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay9, [3 x float]* %arraydecay10), !dbg !6969
  %19 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6970
  %nmat12 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %19, i32 0, i32 10, !dbg !6971
  %arraydecay13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat12, i64 0, i64 0, !dbg !6970
  call void @transpose_m3([3 x float]* %arraydecay13), !dbg !6972
  %20 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6973
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %20, i32 0, i32 11, !dbg !6974
  %21 = load i16, i16* %flag, align 8, !dbg !6975
  %conv = sext i16 %21 to i32, !dbg !6975
  %or = or i32 %conv, 1, !dbg !6975
  %conv14 = trunc i32 %or to i16, !dbg !6975
  store i16 %conv14, i16* %flag, align 8, !dbg !6975
  br label %if.end, !dbg !6976

if.end:                                           ; preds = %if.then, %entry
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6977
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 70, !dbg !6978
  %23 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6979
  %24 = bitcast %struct.ObjectInstanceRen* %23 to i8*, !dbg !6979
  call void @BLI_addtail(%struct.ListBase* %instancetable, i8* %24), !dbg !6980
  %25 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6981
  ret %struct.ObjectInstanceRen* %25, !dbg !6982
}

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #3

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #3

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #3

declare dso_local void @transpose_m3([3 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_makeRenderInstances(%struct.Render* %re) #0 !dbg !6983 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %oldobi = alloca %struct.ObjectInstanceRen*, align 8
  %newlist = alloca %struct.ListBase, align 8
  %tot = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6984, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !6986, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %oldobi, metadata !6988, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.declare(metadata %struct.ListBase* %newlist, metadata !6990, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6992, metadata !DIExpression()), !dbg !6993
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6994
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 70, !dbg !6995
  %call = call i32 @BLI_countlist(%struct.ListBase* %instancetable), !dbg !6996
  store i32 %call, i32* %tot, align 4, !dbg !6997
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6998
  %2 = load i32, i32* %tot, align 4, !dbg !6999
  %conv = sext i32 %2 to i64, !dbg !6999
  %mul = mul i64 288, %conv, !dbg !7000
  %call1 = call i8* %1(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0)), !dbg !6998
  %3 = bitcast i8* %call1 to %struct.ObjectInstanceRen*, !dbg !6998
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7001
  %objectinstance = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 69, !dbg !7002
  store %struct.ObjectInstanceRen* %3, %struct.ObjectInstanceRen** %objectinstance, align 8, !dbg !7003
  %5 = load i32, i32* %tot, align 4, !dbg !7004
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7005
  %totinstance = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 71, !dbg !7006
  store i32 %5, i32* %totinstance, align 8, !dbg !7007
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %newlist, i32 0, i32 1, !dbg !7008
  store i8* null, i8** %last, align 8, !dbg !7009
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %newlist, i32 0, i32 0, !dbg !7010
  store i8* null, i8** %first, align 8, !dbg !7011
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7012
  %objectinstance2 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 69, !dbg !7013
  %8 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %objectinstance2, align 8, !dbg !7013
  store %struct.ObjectInstanceRen* %8, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7014
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7015
  %instancetable3 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 70, !dbg !7017
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable3, i32 0, i32 0, !dbg !7018
  %10 = load i8*, i8** %first4, align 8, !dbg !7018
  %11 = bitcast i8* %10 to %struct.ObjectInstanceRen*, !dbg !7015
  store %struct.ObjectInstanceRen* %11, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !7019
  br label %for.cond, !dbg !7020

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !7021
  %tobool = icmp ne %struct.ObjectInstanceRen* %12, null, !dbg !7023
  br i1 %tobool, label %for.body, label %for.end, !dbg !7023

for.body:                                         ; preds = %for.cond
  %13 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7024
  %14 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !7026
  %15 = bitcast %struct.ObjectInstanceRen* %13 to i8*, !dbg !7027
  %16 = bitcast %struct.ObjectInstanceRen* %14 to i8*, !dbg !7027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 288, i1 false), !dbg !7027
  %17 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7028
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %17, i32 0, i32 2, !dbg !7030
  %18 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7030
  %tobool5 = icmp ne %struct.ObjectRen* %18, null, !dbg !7028
  br i1 %tobool5, label %if.then, label %if.else, !dbg !7031

if.then:                                          ; preds = %for.body
  %19 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7032
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %19, i32 0, i32 0, !dbg !7034
  store %struct.ObjectInstanceRen* null, %struct.ObjectInstanceRen** %next, align 8, !dbg !7035
  %20 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7036
  %prev = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %20, i32 0, i32 1, !dbg !7037
  store %struct.ObjectInstanceRen* null, %struct.ObjectInstanceRen** %prev, align 8, !dbg !7038
  %21 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7039
  %22 = bitcast %struct.ObjectInstanceRen* %21 to i8*, !dbg !7039
  call void @BLI_addtail(%struct.ListBase* %newlist, i8* %22), !dbg !7040
  %23 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7041
  %incdec.ptr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %23, i32 1, !dbg !7041
  store %struct.ObjectInstanceRen* %incdec.ptr, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7041
  br label %if.end, !dbg !7042

if.else:                                          ; preds = %for.body
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7043
  %totinstance6 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 71, !dbg !7044
  %25 = load i32, i32* %totinstance6, align 8, !dbg !7045
  %dec = add nsw i32 %25, -1, !dbg !7045
  store i32 %dec, i32* %totinstance6, align 8, !dbg !7045
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !7046

for.inc:                                          ; preds = %if.end
  %26 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !7047
  %next7 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %26, i32 0, i32 0, !dbg !7048
  %27 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next7, align 8, !dbg !7048
  store %struct.ObjectInstanceRen* %27, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !7049
  br label %for.cond, !dbg !7050, !llvm.loop !7051

for.end:                                          ; preds = %for.cond
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7053
  %instancetable8 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 70, !dbg !7054
  call void @BLI_freelistN(%struct.ListBase* %instancetable8), !dbg !7055
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7056
  %instancetable9 = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 70, !dbg !7057
  %30 = bitcast %struct.ListBase* %instancetable9 to i8*, !dbg !7058
  %31 = bitcast %struct.ListBase* %newlist to i8*, !dbg !7058
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 16, i1 false), !dbg !7058
  ret void, !dbg !7059
}

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_instance_rotate_ray_start(%struct.ObjectInstanceRen* %obi, %struct.Isect* %is) #0 !dbg !7060 {
entry:
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %is.addr = alloca %struct.Isect*, align 8
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  store %struct.Isect* %is, %struct.Isect** %is.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %is.addr, metadata !7067, metadata !DIExpression()), !dbg !7068
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7069
  %tobool = icmp ne %struct.ObjectInstanceRen* %0, null, !dbg !7069
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7071

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7072
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %1, i32 0, i32 11, !dbg !7073
  %2 = load i16, i16* %flag, align 8, !dbg !7073
  %conv = sext i16 %2 to i32, !dbg !7072
  %and = and i32 %conv, 2, !dbg !7074
  %tobool1 = icmp ne i32 %and, 0, !dbg !7074
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7075

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7076
  %origstart = getelementptr inbounds %struct.Isect, %struct.Isect* %3, i32 0, i32 3, !dbg !7078
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %origstart, i64 0, i64 0, !dbg !7076
  %4 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7079
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %4, i32 0, i32 0, !dbg !7080
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7079
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !7081
  %5 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7082
  %imat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %5, i32 0, i32 9, !dbg !7083
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7082
  %6 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7084
  %start4 = getelementptr inbounds %struct.Isect, %struct.Isect* %6, i32 0, i32 0, !dbg !7085
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %start4, i64 0, i64 0, !dbg !7084
  call void @mul_m4_v3([4 x float]* %arraydecay3, float* %arraydecay5), !dbg !7086
  br label %if.end, !dbg !7087

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !7088
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_instance_rotate_ray_dir(%struct.ObjectInstanceRen* %obi, %struct.Isect* %is) #0 !dbg !7089 {
entry:
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %is.addr = alloca %struct.Isect*, align 8
  %end = alloca [3 x float], align 4
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !7090, metadata !DIExpression()), !dbg !7091
  store %struct.Isect* %is, %struct.Isect** %is.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %is.addr, metadata !7092, metadata !DIExpression()), !dbg !7093
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7094
  %tobool = icmp ne %struct.ObjectInstanceRen* %0, null, !dbg !7094
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7096

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7097
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %1, i32 0, i32 11, !dbg !7098
  %2 = load i16, i16* %flag, align 8, !dbg !7098
  %conv = sext i16 %2 to i32, !dbg !7097
  %and = and i32 %conv, 2, !dbg !7099
  %tobool1 = icmp ne i32 %and, 0, !dbg !7099
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7100

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %end, metadata !7101, metadata !DIExpression()), !dbg !7103
  %3 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7104
  %origdir = getelementptr inbounds %struct.Isect, %struct.Isect* %3, i32 0, i32 4, !dbg !7105
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %origdir, i64 0, i64 0, !dbg !7104
  %4 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7106
  %dir = getelementptr inbounds %struct.Isect, %struct.Isect* %4, i32 0, i32 1, !dbg !7107
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !7106
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !7108
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %end, i64 0, i64 0, !dbg !7109
  %5 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7110
  %origstart = getelementptr inbounds %struct.Isect, %struct.Isect* %5, i32 0, i32 3, !dbg !7111
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %origstart, i64 0, i64 0, !dbg !7110
  %6 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7112
  %dir5 = getelementptr inbounds %struct.Isect, %struct.Isect* %6, i32 0, i32 1, !dbg !7113
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %dir5, i64 0, i64 0, !dbg !7112
  call void @add_v3_v3v3(float* %arraydecay3, float* %arraydecay4, float* %arraydecay6), !dbg !7114
  %7 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7115
  %imat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %7, i32 0, i32 9, !dbg !7116
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7115
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %end, i64 0, i64 0, !dbg !7117
  call void @mul_m4_v3([4 x float]* %arraydecay7, float* %arraydecay8), !dbg !7118
  %8 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7119
  %dir9 = getelementptr inbounds %struct.Isect, %struct.Isect* %8, i32 0, i32 1, !dbg !7120
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %dir9, i64 0, i64 0, !dbg !7119
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %end, i64 0, i64 0, !dbg !7121
  %9 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7122
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %9, i32 0, i32 0, !dbg !7123
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7122
  call void @sub_v3_v3v3(float* %arraydecay10, float* %arraydecay11, float* %arraydecay12), !dbg !7124
  br label %if.end, !dbg !7125

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !7126
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !7127 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7128, metadata !DIExpression()), !dbg !7129
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7130, metadata !DIExpression()), !dbg !7131
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7132, metadata !DIExpression()), !dbg !7133
  %0 = load float*, float** %a.addr, align 8, !dbg !7134
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7134
  %1 = load float, float* %arrayidx, align 4, !dbg !7134
  %2 = load float*, float** %b.addr, align 8, !dbg !7135
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7135
  %3 = load float, float* %arrayidx1, align 4, !dbg !7135
  %add = fadd float %1, %3, !dbg !7136
  %4 = load float*, float** %r.addr, align 8, !dbg !7137
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7137
  store float %add, float* %arrayidx2, align 4, !dbg !7138
  %5 = load float*, float** %a.addr, align 8, !dbg !7139
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7139
  %6 = load float, float* %arrayidx3, align 4, !dbg !7139
  %7 = load float*, float** %b.addr, align 8, !dbg !7140
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7140
  %8 = load float, float* %arrayidx4, align 4, !dbg !7140
  %add5 = fadd float %6, %8, !dbg !7141
  %9 = load float*, float** %r.addr, align 8, !dbg !7142
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7142
  store float %add5, float* %arrayidx6, align 4, !dbg !7143
  %10 = load float*, float** %a.addr, align 8, !dbg !7144
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !7144
  %11 = load float, float* %arrayidx7, align 4, !dbg !7144
  %12 = load float*, float** %b.addr, align 8, !dbg !7145
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !7145
  %13 = load float, float* %arrayidx8, align 4, !dbg !7145
  %add9 = fadd float %11, %13, !dbg !7146
  %14 = load float*, float** %r.addr, align 8, !dbg !7147
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !7147
  store float %add9, float* %arrayidx10, align 4, !dbg !7148
  ret void, !dbg !7149
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_instance_rotate_ray(%struct.ObjectInstanceRen* %obi, %struct.Isect* %is) #0 !dbg !7150 {
entry:
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %is.addr = alloca %struct.Isect*, align 8
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !7151, metadata !DIExpression()), !dbg !7152
  store %struct.Isect* %is, %struct.Isect** %is.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %is.addr, metadata !7153, metadata !DIExpression()), !dbg !7154
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7155
  %1 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7156
  call void @RE_instance_rotate_ray_start(%struct.ObjectInstanceRen* %0, %struct.Isect* %1), !dbg !7157
  %2 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7158
  %3 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7159
  call void @RE_instance_rotate_ray_dir(%struct.ObjectInstanceRen* %2, %struct.Isect* %3), !dbg !7160
  ret void, !dbg !7161
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_instance_rotate_ray_restore(%struct.ObjectInstanceRen* %obi, %struct.Isect* %is) #0 !dbg !7162 {
entry:
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %is.addr = alloca %struct.Isect*, align 8
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !7163, metadata !DIExpression()), !dbg !7164
  store %struct.Isect* %is, %struct.Isect** %is.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Isect** %is.addr, metadata !7165, metadata !DIExpression()), !dbg !7166
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7167
  %tobool = icmp ne %struct.ObjectInstanceRen* %0, null, !dbg !7167
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7169

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7170
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %1, i32 0, i32 11, !dbg !7171
  %2 = load i16, i16* %flag, align 8, !dbg !7171
  %conv = sext i16 %2 to i32, !dbg !7170
  %and = and i32 %conv, 2, !dbg !7172
  %tobool1 = icmp ne i32 %and, 0, !dbg !7172
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7173

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7174
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %3, i32 0, i32 0, !dbg !7176
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !7174
  %4 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7177
  %origstart = getelementptr inbounds %struct.Isect, %struct.Isect* %4, i32 0, i32 3, !dbg !7178
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %origstart, i64 0, i64 0, !dbg !7177
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !7179
  %5 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7180
  %dir = getelementptr inbounds %struct.Isect, %struct.Isect* %5, i32 0, i32 1, !dbg !7181
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !7180
  %6 = load %struct.Isect*, %struct.Isect** %is.addr, align 8, !dbg !7182
  %origdir = getelementptr inbounds %struct.Isect, %struct.Isect* %6, i32 0, i32 4, !dbg !7183
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %origdir, i64 0, i64 0, !dbg !7182
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay4), !dbg !7184
  br label %if.end, !dbg !7185

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !7186
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @clip_render_object([3 x float]* %boundbox, float* %bounds, [4 x float]* %winmat) #0 !dbg !7187 {
entry:
  %retval = alloca i32, align 4
  %boundbox.addr = alloca [3 x float]*, align 8
  %bounds.addr = alloca float*, align 8
  %winmat.addr = alloca [4 x float]*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %vec = alloca [4 x float], align 16
  %a = alloca i32, align 4
  %fl = alloca i32, align 4
  %flag = alloca i32, align 4
  store [3 x float]* %boundbox, [3 x float]** %boundbox.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %boundbox.addr, metadata !7190, metadata !DIExpression()), !dbg !7191
  store float* %bounds, float** %bounds.addr, align 8
  call void @llvm.dbg.declare(metadata float** %bounds.addr, metadata !7192, metadata !DIExpression()), !dbg !7193
  store [4 x float]* %winmat, [4 x float]** %winmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %winmat.addr, metadata !7194, metadata !DIExpression()), !dbg !7195
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !7196, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.declare(metadata [4 x float]* %vec, metadata !7198, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7200, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.declare(metadata i32* %fl, metadata !7202, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !7204, metadata !DIExpression()), !dbg !7205
  store i32 -1, i32* %flag, align 4, !dbg !7205
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7206
  %0 = load [4 x float]*, [4 x float]** %winmat.addr, align 8, !dbg !7207
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %0), !dbg !7208
  store i32 0, i32* %a, align 4, !dbg !7209
  br label %for.cond, !dbg !7211

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !7212
  %cmp = icmp slt i32 %1, 8, !dbg !7214
  br i1 %cmp, label %for.body, label %for.end, !dbg !7215

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %a, align 4, !dbg !7216
  %and = and i32 %2, 1, !dbg !7218
  %tobool = icmp ne i32 %and, 0, !dbg !7218
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7219

cond.true:                                        ; preds = %for.body
  %3 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !7220
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %3, i64 0, !dbg !7220
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7220
  %4 = load float, float* %arrayidx1, align 4, !dbg !7220
  br label %cond.end, !dbg !7219

cond.false:                                       ; preds = %for.body
  %5 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !7221
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %5, i64 1, !dbg !7221
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !7221
  %6 = load float, float* %arrayidx3, align 4, !dbg !7221
  br label %cond.end, !dbg !7219

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %4, %cond.true ], [ %6, %cond.false ], !dbg !7219
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !7222
  store float %cond, float* %arrayidx4, align 16, !dbg !7223
  %7 = load i32, i32* %a, align 4, !dbg !7224
  %and5 = and i32 %7, 2, !dbg !7225
  %tobool6 = icmp ne i32 %and5, 0, !dbg !7225
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !7226

cond.true7:                                       ; preds = %cond.end
  %8 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !7227
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, !dbg !7227
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 1, !dbg !7227
  %9 = load float, float* %arrayidx9, align 4, !dbg !7227
  br label %cond.end13, !dbg !7226

cond.false10:                                     ; preds = %cond.end
  %10 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !7228
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %10, i64 1, !dbg !7228
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 1, !dbg !7228
  %11 = load float, float* %arrayidx12, align 4, !dbg !7228
  br label %cond.end13, !dbg !7226

cond.end13:                                       ; preds = %cond.false10, %cond.true7
  %cond14 = phi float [ %9, %cond.true7 ], [ %11, %cond.false10 ], !dbg !7226
  %arrayidx15 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !7229
  store float %cond14, float* %arrayidx15, align 4, !dbg !7230
  %12 = load i32, i32* %a, align 4, !dbg !7231
  %and16 = and i32 %12, 4, !dbg !7232
  %tobool17 = icmp ne i32 %and16, 0, !dbg !7232
  br i1 %tobool17, label %cond.true18, label %cond.false21, !dbg !7233

cond.true18:                                      ; preds = %cond.end13
  %13 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !7234
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %13, i64 0, !dbg !7234
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 2, !dbg !7234
  %14 = load float, float* %arrayidx20, align 4, !dbg !7234
  br label %cond.end24, !dbg !7233

cond.false21:                                     ; preds = %cond.end13
  %15 = load [3 x float]*, [3 x float]** %boundbox.addr, align 8, !dbg !7235
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %15, i64 1, !dbg !7235
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 2, !dbg !7235
  %16 = load float, float* %arrayidx23, align 4, !dbg !7235
  br label %cond.end24, !dbg !7233

cond.end24:                                       ; preds = %cond.false21, %cond.true18
  %cond25 = phi float [ %14, %cond.true18 ], [ %16, %cond.false21 ], !dbg !7233
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 2, !dbg !7236
  store float %cond25, float* %arrayidx26, align 8, !dbg !7237
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7238
  store float 1.000000e+00, float* %arrayidx27, align 4, !dbg !7239
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7240
  %arraydecay29 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !7241
  call void @mul_m4_v4([4 x float]* %arraydecay28, float* %arraydecay29), !dbg !7242
  store i32 0, i32* %fl, align 4, !dbg !7243
  %17 = load float*, float** %bounds.addr, align 8, !dbg !7244
  %tobool30 = icmp ne float* %17, null, !dbg !7244
  br i1 %tobool30, label %if.then, label %if.else61, !dbg !7246

if.then:                                          ; preds = %cond.end24
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !7247
  %18 = load float, float* %arrayidx31, align 16, !dbg !7247
  %19 = load float*, float** %bounds.addr, align 8, !dbg !7250
  %arrayidx32 = getelementptr inbounds float, float* %19, i64 0, !dbg !7250
  %20 = load float, float* %arrayidx32, align 4, !dbg !7250
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7251
  %21 = load float, float* %arrayidx33, align 4, !dbg !7251
  %mul = fmul float %20, %21, !dbg !7252
  %cmp34 = fcmp olt float %18, %mul, !dbg !7253
  br i1 %cmp34, label %if.then35, label %if.else, !dbg !7254

if.then35:                                        ; preds = %if.then
  %22 = load i32, i32* %fl, align 4, !dbg !7255
  %or = or i32 %22, 1, !dbg !7255
  store i32 %or, i32* %fl, align 4, !dbg !7255
  br label %if.end43, !dbg !7256

if.else:                                          ; preds = %if.then
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !7257
  %23 = load float, float* %arrayidx36, align 16, !dbg !7257
  %24 = load float*, float** %bounds.addr, align 8, !dbg !7259
  %arrayidx37 = getelementptr inbounds float, float* %24, i64 1, !dbg !7259
  %25 = load float, float* %arrayidx37, align 4, !dbg !7259
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7260
  %26 = load float, float* %arrayidx38, align 4, !dbg !7260
  %mul39 = fmul float %25, %26, !dbg !7261
  %cmp40 = fcmp ogt float %23, %mul39, !dbg !7262
  br i1 %cmp40, label %if.then41, label %if.end, !dbg !7263

if.then41:                                        ; preds = %if.else
  %27 = load i32, i32* %fl, align 4, !dbg !7264
  %or42 = or i32 %27, 2, !dbg !7264
  store i32 %or42, i32* %fl, align 4, !dbg !7264
  br label %if.end, !dbg !7265

if.end:                                           ; preds = %if.then41, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end, %if.then35
  %arrayidx44 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !7266
  %28 = load float, float* %arrayidx44, align 4, !dbg !7266
  %29 = load float*, float** %bounds.addr, align 8, !dbg !7268
  %arrayidx45 = getelementptr inbounds float, float* %29, i64 3, !dbg !7268
  %30 = load float, float* %arrayidx45, align 4, !dbg !7268
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7269
  %31 = load float, float* %arrayidx46, align 4, !dbg !7269
  %mul47 = fmul float %30, %31, !dbg !7270
  %cmp48 = fcmp ogt float %28, %mul47, !dbg !7271
  br i1 %cmp48, label %if.then49, label %if.else51, !dbg !7272

if.then49:                                        ; preds = %if.end43
  %32 = load i32, i32* %fl, align 4, !dbg !7273
  %or50 = or i32 %32, 4, !dbg !7273
  store i32 %or50, i32* %fl, align 4, !dbg !7273
  br label %if.end60, !dbg !7274

if.else51:                                        ; preds = %if.end43
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !7275
  %33 = load float, float* %arrayidx52, align 4, !dbg !7275
  %34 = load float*, float** %bounds.addr, align 8, !dbg !7277
  %arrayidx53 = getelementptr inbounds float, float* %34, i64 2, !dbg !7277
  %35 = load float, float* %arrayidx53, align 4, !dbg !7277
  %arrayidx54 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7278
  %36 = load float, float* %arrayidx54, align 4, !dbg !7278
  %mul55 = fmul float %35, %36, !dbg !7279
  %cmp56 = fcmp olt float %33, %mul55, !dbg !7280
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !7281

if.then57:                                        ; preds = %if.else51
  %37 = load i32, i32* %fl, align 4, !dbg !7282
  %or58 = or i32 %37, 8, !dbg !7282
  store i32 %or58, i32* %fl, align 4, !dbg !7282
  br label %if.end59, !dbg !7283

if.end59:                                         ; preds = %if.then57, %if.else51
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then49
  br label %if.end89, !dbg !7284

if.else61:                                        ; preds = %cond.end24
  %arrayidx62 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !7285
  %38 = load float, float* %arrayidx62, align 16, !dbg !7285
  %arrayidx63 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7288
  %39 = load float, float* %arrayidx63, align 4, !dbg !7288
  %fneg = fneg float %39, !dbg !7289
  %cmp64 = fcmp olt float %38, %fneg, !dbg !7290
  br i1 %cmp64, label %if.then65, label %if.else67, !dbg !7291

if.then65:                                        ; preds = %if.else61
  %40 = load i32, i32* %fl, align 4, !dbg !7292
  %or66 = or i32 %40, 1, !dbg !7292
  store i32 %or66, i32* %fl, align 4, !dbg !7292
  br label %if.end74, !dbg !7293

if.else67:                                        ; preds = %if.else61
  %arrayidx68 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !7294
  %41 = load float, float* %arrayidx68, align 16, !dbg !7294
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7296
  %42 = load float, float* %arrayidx69, align 4, !dbg !7296
  %cmp70 = fcmp ogt float %41, %42, !dbg !7297
  br i1 %cmp70, label %if.then71, label %if.end73, !dbg !7298

if.then71:                                        ; preds = %if.else67
  %43 = load i32, i32* %fl, align 4, !dbg !7299
  %or72 = or i32 %43, 2, !dbg !7299
  store i32 %or72, i32* %fl, align 4, !dbg !7299
  br label %if.end73, !dbg !7300

if.end73:                                         ; preds = %if.then71, %if.else67
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then65
  %arrayidx75 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !7301
  %44 = load float, float* %arrayidx75, align 4, !dbg !7301
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7303
  %45 = load float, float* %arrayidx76, align 4, !dbg !7303
  %cmp77 = fcmp ogt float %44, %45, !dbg !7304
  br i1 %cmp77, label %if.then78, label %if.else80, !dbg !7305

if.then78:                                        ; preds = %if.end74
  %46 = load i32, i32* %fl, align 4, !dbg !7306
  %or79 = or i32 %46, 4, !dbg !7306
  store i32 %or79, i32* %fl, align 4, !dbg !7306
  br label %if.end88, !dbg !7307

if.else80:                                        ; preds = %if.end74
  %arrayidx81 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 1, !dbg !7308
  %47 = load float, float* %arrayidx81, align 4, !dbg !7308
  %arrayidx82 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7310
  %48 = load float, float* %arrayidx82, align 4, !dbg !7310
  %fneg83 = fneg float %48, !dbg !7311
  %cmp84 = fcmp olt float %47, %fneg83, !dbg !7312
  br i1 %cmp84, label %if.then85, label %if.end87, !dbg !7313

if.then85:                                        ; preds = %if.else80
  %49 = load i32, i32* %fl, align 4, !dbg !7314
  %or86 = or i32 %49, 8, !dbg !7314
  store i32 %or86, i32* %fl, align 4, !dbg !7314
  br label %if.end87, !dbg !7315

if.end87:                                         ; preds = %if.then85, %if.else80
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then78
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end60
  %arrayidx90 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 2, !dbg !7316
  %50 = load float, float* %arrayidx90, align 8, !dbg !7316
  %arrayidx91 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7318
  %51 = load float, float* %arrayidx91, align 4, !dbg !7318
  %fneg92 = fneg float %51, !dbg !7319
  %cmp93 = fcmp olt float %50, %fneg92, !dbg !7320
  br i1 %cmp93, label %if.then94, label %if.else96, !dbg !7321

if.then94:                                        ; preds = %if.end89
  %52 = load i32, i32* %fl, align 4, !dbg !7322
  %or95 = or i32 %52, 16, !dbg !7322
  store i32 %or95, i32* %fl, align 4, !dbg !7322
  br label %if.end103, !dbg !7323

if.else96:                                        ; preds = %if.end89
  %arrayidx97 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 2, !dbg !7324
  %53 = load float, float* %arrayidx97, align 8, !dbg !7324
  %arrayidx98 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !7326
  %54 = load float, float* %arrayidx98, align 4, !dbg !7326
  %cmp99 = fcmp ogt float %53, %54, !dbg !7327
  br i1 %cmp99, label %if.then100, label %if.end102, !dbg !7328

if.then100:                                       ; preds = %if.else96
  %55 = load i32, i32* %fl, align 4, !dbg !7329
  %or101 = or i32 %55, 32, !dbg !7329
  store i32 %or101, i32* %fl, align 4, !dbg !7329
  br label %if.end102, !dbg !7330

if.end102:                                        ; preds = %if.then100, %if.else96
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then94
  %56 = load i32, i32* %fl, align 4, !dbg !7331
  %57 = load i32, i32* %flag, align 4, !dbg !7332
  %and104 = and i32 %57, %56, !dbg !7332
  store i32 %and104, i32* %flag, align 4, !dbg !7332
  %58 = load i32, i32* %flag, align 4, !dbg !7333
  %cmp105 = icmp eq i32 %58, 0, !dbg !7335
  br i1 %cmp105, label %if.then106, label %if.end107, !dbg !7336

if.then106:                                       ; preds = %if.end103
  store i32 0, i32* %retval, align 4, !dbg !7337
  br label %return, !dbg !7337

if.end107:                                        ; preds = %if.end103
  br label %for.inc, !dbg !7339

for.inc:                                          ; preds = %if.end107
  %59 = load i32, i32* %a, align 4, !dbg !7340
  %inc = add nsw i32 %59, 1, !dbg !7340
  store i32 %inc, i32* %a, align 4, !dbg !7340
  br label %for.cond, !dbg !7341, !llvm.loop !7342

for.end:                                          ; preds = %for.cond
  %60 = load i32, i32* %flag, align 4, !dbg !7344
  store i32 %60, i32* %retval, align 4, !dbg !7345
  br label %return, !dbg !7345

return:                                           ; preds = %for.end, %if.then106
  %61 = load i32, i32* %retval, align 4, !dbg !7346
  ret i32 %61, !dbg !7346
}

declare dso_local void @mul_m4_v4([4 x float]*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !7347 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7350, metadata !DIExpression()), !dbg !7351
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7352, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.declare(metadata float* %d, metadata !7354, metadata !DIExpression()), !dbg !7355
  %0 = load float*, float** %a.addr, align 8, !dbg !7356
  %1 = load float*, float** %a.addr, align 8, !dbg !7357
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !7358
  store float %call, float* %d, align 4, !dbg !7355
  %2 = load float, float* %d, align 4, !dbg !7359
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !7361
  br i1 %cmp, label %if.then, label %if.else, !dbg !7362

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !7363
  %call1 = call float @sqrtf(float %3) #5, !dbg !7365
  store float %call1, float* %d, align 4, !dbg !7366
  %4 = load float*, float** %r.addr, align 8, !dbg !7367
  %5 = load float*, float** %a.addr, align 8, !dbg !7368
  %6 = load float, float* %d, align 4, !dbg !7369
  %div = fdiv float 1.000000e+00, %6, !dbg !7370
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !7371
  br label %if.end, !dbg !7372

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !7373
  call void @zero_v3(float* %7), !dbg !7375
  store float 0.000000e+00, float* %d, align 4, !dbg !7376
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !7377
  ret float %8, !dbg !7378
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !7379 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7380, metadata !DIExpression()), !dbg !7381
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  %0 = load float*, float** %a.addr, align 8, !dbg !7384
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7384
  %1 = load float, float* %arrayidx, align 4, !dbg !7384
  %2 = load float*, float** %b.addr, align 8, !dbg !7385
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7385
  %3 = load float, float* %arrayidx1, align 4, !dbg !7385
  %mul = fmul float %1, %3, !dbg !7386
  %4 = load float*, float** %a.addr, align 8, !dbg !7387
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7387
  %5 = load float, float* %arrayidx2, align 4, !dbg !7387
  %6 = load float*, float** %b.addr, align 8, !dbg !7388
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7388
  %7 = load float, float* %arrayidx3, align 4, !dbg !7388
  %mul4 = fmul float %5, %7, !dbg !7389
  %add = fadd float %mul, %mul4, !dbg !7390
  %8 = load float*, float** %a.addr, align 8, !dbg !7391
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7391
  %9 = load float, float* %arrayidx5, align 4, !dbg !7391
  %10 = load float*, float** %b.addr, align 8, !dbg !7392
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !7392
  %11 = load float, float* %arrayidx6, align 4, !dbg !7392
  %mul7 = fmul float %9, %11, !dbg !7393
  %add8 = fadd float %add, %mul7, !dbg !7394
  ret float %add8, !dbg !7395
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !7396 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7399, metadata !DIExpression()), !dbg !7400
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  %0 = load float*, float** %a.addr, align 8, !dbg !7405
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7405
  %1 = load float, float* %arrayidx, align 4, !dbg !7405
  %2 = load float, float* %f.addr, align 4, !dbg !7406
  %mul = fmul float %1, %2, !dbg !7407
  %3 = load float*, float** %r.addr, align 8, !dbg !7408
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !7408
  store float %mul, float* %arrayidx1, align 4, !dbg !7409
  %4 = load float*, float** %a.addr, align 8, !dbg !7410
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7410
  %5 = load float, float* %arrayidx2, align 4, !dbg !7410
  %6 = load float, float* %f.addr, align 4, !dbg !7411
  %mul3 = fmul float %5, %6, !dbg !7412
  %7 = load float*, float** %r.addr, align 8, !dbg !7413
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7413
  store float %mul3, float* %arrayidx4, align 4, !dbg !7414
  %8 = load float*, float** %a.addr, align 8, !dbg !7415
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7415
  %9 = load float, float* %arrayidx5, align 4, !dbg !7415
  %10 = load float, float* %f.addr, align 4, !dbg !7416
  %mul6 = fmul float %9, %10, !dbg !7417
  %11 = load float*, float** %r.addr, align 8, !dbg !7418
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !7418
  store float %mul6, float* %arrayidx7, align 4, !dbg !7419
  ret void, !dbg !7420
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !7421 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7424, metadata !DIExpression()), !dbg !7425
  %0 = load float*, float** %r.addr, align 8, !dbg !7426
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7426
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7427
  %1 = load float*, float** %r.addr, align 8, !dbg !7428
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !7428
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !7429
  %2 = load float*, float** %r.addr, align 8, !dbg !7430
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !7430
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !7431
  ret void, !dbg !7432
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !7433 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7436, metadata !DIExpression()), !dbg !7437
  %0 = load float*, float** %a.addr, align 8, !dbg !7438
  %1 = load float*, float** %a.addr, align 8, !dbg !7439
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !7440
  %call1 = call float @sqrtf(float %call) #5, !dbg !7441
  ret float %call1, !dbg !7442
}

declare dso_local i32 @testclip(float*) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2529, !2530, !2531}
!llvm.ident = !{!2532}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !75, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/render/intern/source/renderdatabase.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !10, !15, !19, !25, !31}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !4, line: 128, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !4, line: 164, baseType: !5, size: 32, elements: !11)
!11 = !{!12, !13, !14}
!12 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!13 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!14 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !4, line: 159, baseType: !5, size: 32, elements: !16)
!16 = !{!17, !18}
!17 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !4, line: 134, baseType: !5, size: 32, elements: !20)
!20 = !{!21, !22, !23, !24}
!21 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !4, line: 152, baseType: !5, size: 32, elements: !26)
!26 = !{!27, !28, !29, !30}
!27 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!29 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !32, line: 76, baseType: !5, size: 32, elements: !33)
!32 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74}
!34 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!37 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!38 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!39 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!40 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!41 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!42 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!43 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!44 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!45 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!46 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!47 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!48 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!49 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!50 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!51 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!52 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!53 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!54 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!55 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!56 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!57 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!58 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!59 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!60 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!61 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!62 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!63 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!64 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!65 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!66 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!67 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!68 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!69 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!70 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!71 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!72 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!73 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!74 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!75 = !{!76, !77, !94, !2182, !2526, !2527, !84}
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "VertRen", file: !79, line: 380, baseType: !80)
!79 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!80 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !79, line: 372, size: 384, elements: !81)
!81 = !{!82, !87, !88, !90, !91, !92}
!82 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !80, file: !79, line: 373, baseType: !83, size: 96)
!83 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 96, elements: !85)
!84 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!85 = !{!86}
!86 = !DISubrange(count: 3)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !80, file: !79, line: 374, baseType: !83, size: 96, offset: 96)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !80, file: !79, line: 375, baseType: !89, size: 64, offset: 192)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !80, file: !79, line: 376, baseType: !5, size: 32, offset: 256)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !80, file: !79, line: 378, baseType: !84, size: 32, offset: 288)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !80, file: !79, line: 379, baseType: !93, size: 32, offset: 320)
!93 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakRen", file: !79, line: 411, baseType: !96)
!96 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !79, line: 400, size: 512, elements: !97)
!97 = !{!98, !100, !101, !102, !103, !104, !2178, !2179, !2180, !2181}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !96, file: !79, line: 401, baseType: !99, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !96, file: !79, line: 401, baseType: !99, size: 64, offset: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !96, file: !79, line: 401, baseType: !99, size: 64, offset: 128)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !96, file: !79, line: 401, baseType: !99, size: 64, offset: 192)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !96, file: !79, line: 402, baseType: !83, size: 96, offset: 256)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !96, file: !79, line: 403, baseType: !105, size: 64, offset: 384)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !107, line: 93, size: 7552, elements: !108)
!107 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!108 = !{!109, !179, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !228, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !297, !298, !299, !300, !301, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2177}
!109 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !106, file: !107, line: 94, baseType: !110, size: 960)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !111, line: 130, baseType: !112)
!111 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !111, line: 117, size: 960, elements: !113)
!113 = !{!114, !115, !116, !118, !138, !142, !144, !145, !146, !147}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !112, file: !111, line: 118, baseType: !76, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !112, file: !111, line: 118, baseType: !76, size: 64, offset: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !112, file: !111, line: 119, baseType: !117, size: 64, offset: 128)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !112, file: !111, line: 120, baseType: !119, size: 64, offset: 192)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !111, line: 136, size: 17600, elements: !121)
!121 = !{!122, !123, !125, !128, !133, !134, !135}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !120, file: !111, line: 137, baseType: !110, size: 960)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !120, file: !111, line: 138, baseType: !124, size: 64, offset: 960)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !120, file: !111, line: 139, baseType: !126, size: 64, offset: 1024)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!127 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !111, line: 43, flags: DIFlagFwdDecl)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !120, file: !111, line: 140, baseType: !129, size: 8192, offset: 1088)
!129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 8192, elements: !131)
!130 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!131 = !{!132}
!132 = !DISubrange(count: 1024)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !120, file: !111, line: 141, baseType: !129, size: 8192, offset: 9280)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !120, file: !111, line: 148, baseType: !119, size: 64, offset: 17472)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !120, file: !111, line: 150, baseType: !136, size: 64, offset: 17536)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !111, line: 45, flags: DIFlagFwdDecl)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !112, file: !111, line: 121, baseType: !139, size: 528, offset: 256)
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 528, elements: !140)
!140 = !{!141}
!141 = !DISubrange(count: 66)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !112, file: !111, line: 126, baseType: !143, size: 16, offset: 784)
!143 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !112, file: !111, line: 127, baseType: !93, size: 32, offset: 800)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !112, file: !111, line: 128, baseType: !93, size: 32, offset: 832)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !112, file: !111, line: 128, baseType: !93, size: 32, offset: 864)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !112, file: !111, line: 129, baseType: !148, size: 64, offset: 896)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !111, line: 75, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !111, line: 62, size: 1024, elements: !151)
!151 = !{!152, !154, !155, !156, !157, !158, !162, !163, !177, !178}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !111, line: 63, baseType: !153, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !150, file: !111, line: 63, baseType: !153, size: 64, offset: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !150, file: !111, line: 64, baseType: !130, size: 8, offset: 128)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !150, file: !111, line: 64, baseType: !130, size: 8, offset: 136)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !150, file: !111, line: 65, baseType: !143, size: 16, offset: 144)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !150, file: !111, line: 66, baseType: !159, size: 512, offset: 160)
!159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 512, elements: !160)
!160 = !{!161}
!161 = !DISubrange(count: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !150, file: !111, line: 67, baseType: !93, size: 32, offset: 672)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !150, file: !111, line: 69, baseType: !164, size: 256, offset: 704)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !111, line: 60, baseType: !165)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !111, line: 48, size: 256, elements: !166)
!166 = !{!167, !168, !175, !176}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !165, file: !111, line: 49, baseType: !76, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !165, file: !111, line: 58, baseType: !169, size: 128, offset: 64)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !170, line: 71, baseType: !171)
!170 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !170, line: 69, size: 128, elements: !172)
!172 = !{!173, !174}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !171, file: !170, line: 70, baseType: !76, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !171, file: !170, line: 70, baseType: !76, size: 64, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !165, file: !111, line: 59, baseType: !93, size: 32, offset: 192)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !165, file: !111, line: 59, baseType: !93, size: 32, offset: 224)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !150, file: !111, line: 70, baseType: !93, size: 32, offset: 960)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !150, file: !111, line: 74, baseType: !93, size: 32, offset: 992)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !106, file: !107, line: 95, baseType: !180, size: 64, offset: 960)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !107, line: 48, flags: DIFlagFwdDecl)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !106, file: !107, line: 97, baseType: !143, size: 16, offset: 1024)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !106, file: !107, line: 97, baseType: !143, size: 16, offset: 1040)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !106, file: !107, line: 99, baseType: !84, size: 32, offset: 1056)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !106, file: !107, line: 99, baseType: !84, size: 32, offset: 1088)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !106, file: !107, line: 99, baseType: !84, size: 32, offset: 1120)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !106, file: !107, line: 100, baseType: !84, size: 32, offset: 1152)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !106, file: !107, line: 100, baseType: !84, size: 32, offset: 1184)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !106, file: !107, line: 100, baseType: !84, size: 32, offset: 1216)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !106, file: !107, line: 101, baseType: !84, size: 32, offset: 1248)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !106, file: !107, line: 101, baseType: !84, size: 32, offset: 1280)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !106, file: !107, line: 101, baseType: !84, size: 32, offset: 1312)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !106, file: !107, line: 102, baseType: !84, size: 32, offset: 1344)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !106, file: !107, line: 102, baseType: !84, size: 32, offset: 1376)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !106, file: !107, line: 102, baseType: !84, size: 32, offset: 1408)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !106, file: !107, line: 103, baseType: !84, size: 32, offset: 1440)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !106, file: !107, line: 103, baseType: !84, size: 32, offset: 1472)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !106, file: !107, line: 103, baseType: !84, size: 32, offset: 1504)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !106, file: !107, line: 103, baseType: !84, size: 32, offset: 1536)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !106, file: !107, line: 103, baseType: !84, size: 32, offset: 1568)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !106, file: !107, line: 104, baseType: !84, size: 32, offset: 1600)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !106, file: !107, line: 104, baseType: !84, size: 32, offset: 1632)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !106, file: !107, line: 104, baseType: !84, size: 32, offset: 1664)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !106, file: !107, line: 104, baseType: !84, size: 32, offset: 1696)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !106, file: !107, line: 104, baseType: !84, size: 32, offset: 1728)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !106, file: !107, line: 105, baseType: !84, size: 32, offset: 1760)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !106, file: !107, line: 108, baseType: !208, size: 704, offset: 1792)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !107, line: 53, size: 704, elements: !209)
!209 = !{!210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !208, file: !107, line: 54, baseType: !84, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !208, file: !107, line: 55, baseType: !84, size: 32, offset: 32)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !208, file: !107, line: 56, baseType: !84, size: 32, offset: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !208, file: !107, line: 57, baseType: !84, size: 32, offset: 96)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !208, file: !107, line: 59, baseType: !83, size: 96, offset: 128)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !208, file: !107, line: 60, baseType: !83, size: 96, offset: 224)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !208, file: !107, line: 61, baseType: !83, size: 96, offset: 320)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !208, file: !107, line: 63, baseType: !84, size: 32, offset: 416)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !208, file: !107, line: 64, baseType: !84, size: 32, offset: 448)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !208, file: !107, line: 65, baseType: !84, size: 32, offset: 480)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !208, file: !107, line: 67, baseType: !143, size: 16, offset: 512)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !208, file: !107, line: 68, baseType: !143, size: 16, offset: 528)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !208, file: !107, line: 69, baseType: !143, size: 16, offset: 544)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !208, file: !107, line: 70, baseType: !143, size: 16, offset: 560)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !208, file: !107, line: 72, baseType: !84, size: 32, offset: 576)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !208, file: !107, line: 73, baseType: !84, size: 32, offset: 608)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !208, file: !107, line: 74, baseType: !84, size: 32, offset: 640)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !208, file: !107, line: 75, baseType: !84, size: 32, offset: 672)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !106, file: !107, line: 109, baseType: !229, size: 128, offset: 2496)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !107, line: 79, size: 128, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !229, file: !107, line: 80, baseType: !93, size: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !229, file: !107, line: 81, baseType: !93, size: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !229, file: !107, line: 82, baseType: !93, size: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !229, file: !107, line: 83, baseType: !93, size: 32, offset: 96)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !106, file: !107, line: 111, baseType: !84, size: 32, offset: 2624)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !106, file: !107, line: 111, baseType: !84, size: 32, offset: 2656)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !106, file: !107, line: 112, baseType: !84, size: 32, offset: 2688)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !106, file: !107, line: 112, baseType: !84, size: 32, offset: 2720)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !106, file: !107, line: 113, baseType: !84, size: 32, offset: 2752)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !106, file: !107, line: 114, baseType: !84, size: 32, offset: 2784)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !106, file: !107, line: 114, baseType: !84, size: 32, offset: 2816)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !106, file: !107, line: 115, baseType: !143, size: 16, offset: 2848)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !106, file: !107, line: 115, baseType: !143, size: 16, offset: 2864)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !106, file: !107, line: 116, baseType: !143, size: 16, offset: 2880)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !106, file: !107, line: 117, baseType: !130, size: 8, offset: 2896)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !106, file: !107, line: 117, baseType: !130, size: 8, offset: 2904)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !106, file: !107, line: 119, baseType: !84, size: 32, offset: 2912)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !106, file: !107, line: 119, baseType: !84, size: 32, offset: 2944)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !106, file: !107, line: 120, baseType: !143, size: 16, offset: 2976)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !106, file: !107, line: 120, baseType: !143, size: 16, offset: 2992)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !106, file: !107, line: 121, baseType: !84, size: 32, offset: 3008)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !106, file: !107, line: 121, baseType: !84, size: 32, offset: 3040)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !106, file: !107, line: 122, baseType: !84, size: 32, offset: 3072)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !106, file: !107, line: 123, baseType: !84, size: 32, offset: 3104)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !106, file: !107, line: 124, baseType: !143, size: 16, offset: 3136)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !106, file: !107, line: 125, baseType: !143, size: 16, offset: 3152)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !106, file: !107, line: 127, baseType: !93, size: 32, offset: 3168)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !106, file: !107, line: 127, baseType: !93, size: 32, offset: 3200)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !106, file: !107, line: 128, baseType: !93, size: 32, offset: 3232)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !106, file: !107, line: 128, baseType: !93, size: 32, offset: 3264)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !106, file: !107, line: 129, baseType: !143, size: 16, offset: 3296)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !106, file: !107, line: 129, baseType: !143, size: 16, offset: 3312)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !106, file: !107, line: 129, baseType: !143, size: 16, offset: 3328)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !106, file: !107, line: 129, baseType: !143, size: 16, offset: 3344)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !106, file: !107, line: 130, baseType: !84, size: 32, offset: 3360)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !106, file: !107, line: 130, baseType: !84, size: 32, offset: 3392)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !106, file: !107, line: 130, baseType: !84, size: 32, offset: 3424)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !106, file: !107, line: 130, baseType: !84, size: 32, offset: 3456)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !106, file: !107, line: 131, baseType: !84, size: 32, offset: 3488)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !106, file: !107, line: 131, baseType: !84, size: 32, offset: 3520)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !106, file: !107, line: 131, baseType: !84, size: 32, offset: 3552)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !106, file: !107, line: 131, baseType: !84, size: 32, offset: 3584)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !106, file: !107, line: 132, baseType: !84, size: 32, offset: 3616)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !106, file: !107, line: 132, baseType: !84, size: 32, offset: 3648)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !106, file: !107, line: 133, baseType: !159, size: 512, offset: 3680)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !106, file: !107, line: 135, baseType: !84, size: 32, offset: 4192)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !106, file: !107, line: 136, baseType: !84, size: 32, offset: 4224)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !106, file: !107, line: 137, baseType: !84, size: 32, offset: 4256)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !106, file: !107, line: 138, baseType: !93, size: 32, offset: 4288)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !106, file: !107, line: 141, baseType: !130, size: 8, offset: 4320)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !106, file: !107, line: 141, baseType: !130, size: 8, offset: 4328)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !106, file: !107, line: 141, baseType: !130, size: 8, offset: 4336)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !106, file: !107, line: 141, baseType: !130, size: 8, offset: 4344)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !106, file: !107, line: 142, baseType: !143, size: 16, offset: 4352)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !106, file: !107, line: 142, baseType: !143, size: 16, offset: 4368)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !106, file: !107, line: 142, baseType: !143, size: 16, offset: 4384)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !106, file: !107, line: 145, baseType: !130, size: 8, offset: 4400)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !106, file: !107, line: 145, baseType: !130, size: 8, offset: 4408)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !106, file: !107, line: 148, baseType: !143, size: 16, offset: 4416)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !106, file: !107, line: 148, baseType: !143, size: 16, offset: 4432)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !106, file: !107, line: 149, baseType: !84, size: 32, offset: 4448)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !106, file: !107, line: 149, baseType: !84, size: 32, offset: 4480)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !106, file: !107, line: 152, baseType: !294, size: 128, offset: 4512)
!294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 128, elements: !295)
!295 = !{!296}
!296 = !DISubrange(count: 4)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !106, file: !107, line: 153, baseType: !84, size: 32, offset: 4640)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !106, file: !107, line: 154, baseType: !84, size: 32, offset: 4672)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !106, file: !107, line: 157, baseType: !143, size: 16, offset: 4704)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !106, file: !107, line: 157, baseType: !143, size: 16, offset: 4720)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !106, file: !107, line: 160, baseType: !302, size: 64, offset: 4736)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !304, line: 113, size: 6208, elements: !305)
!304 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!305 = !{!306, !307, !308, !309, !310, !311, !315}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !303, file: !304, line: 114, baseType: !143, size: 16)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !303, file: !304, line: 114, baseType: !143, size: 16, offset: 16)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !303, file: !304, line: 115, baseType: !130, size: 8, offset: 32)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !303, file: !304, line: 115, baseType: !130, size: 8, offset: 40)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !303, file: !304, line: 116, baseType: !130, size: 8, offset: 48)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !303, file: !304, line: 117, baseType: !312, size: 8, offset: 56)
!312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 8, elements: !313)
!313 = !{!314}
!314 = !DISubrange(count: 1)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !303, file: !304, line: 119, baseType: !316, size: 6144, offset: 64)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 6144, elements: !326)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !304, line: 109, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !304, line: 106, size: 192, elements: !319)
!319 = !{!320, !321, !322, !323, !324, !325}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !318, file: !304, line: 107, baseType: !84, size: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !318, file: !304, line: 107, baseType: !84, size: 32, offset: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !318, file: !304, line: 107, baseType: !84, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !318, file: !304, line: 107, baseType: !84, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !318, file: !304, line: 107, baseType: !84, size: 32, offset: 128)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !318, file: !304, line: 108, baseType: !93, size: 32, offset: 160)
!326 = !{!327}
!327 = !DISubrange(count: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !106, file: !107, line: 161, baseType: !302, size: 64, offset: 4800)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !106, file: !107, line: 162, baseType: !130, size: 8, offset: 4864)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !106, file: !107, line: 162, baseType: !130, size: 8, offset: 4872)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !106, file: !107, line: 163, baseType: !130, size: 8, offset: 4880)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !106, file: !107, line: 163, baseType: !130, size: 8, offset: 4888)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !106, file: !107, line: 164, baseType: !143, size: 16, offset: 4896)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !106, file: !107, line: 164, baseType: !143, size: 16, offset: 4912)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !106, file: !107, line: 165, baseType: !84, size: 32, offset: 4928)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !106, file: !107, line: 165, baseType: !84, size: 32, offset: 4960)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !106, file: !107, line: 167, baseType: !338, size: 1152, offset: 4992)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 1152, elements: !2135)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !304, line: 57, size: 2496, elements: !341)
!341 = !{!342, !343, !344, !345, !346, !1930, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !340, file: !304, line: 59, baseType: !143, size: 16)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !340, file: !304, line: 59, baseType: !143, size: 16, offset: 16)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !340, file: !304, line: 59, baseType: !143, size: 16, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !340, file: !304, line: 59, baseType: !143, size: 16, offset: 48)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !340, file: !304, line: 60, baseType: !347, size: 64, offset: 64)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !349, line: 115, size: 11392, elements: !350)
!349 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!350 = !{!351, !352, !353, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !370, !380, !394, !395, !436, !437, !441, !442, !458, !459, !460, !461, !462, !463, !464, !466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !544, !545, !546, !547, !548, !549, !550, !551, !552, !555, !558, !561, !562, !563, !564, !565, !568, !571, !1116, !1117, !1123, !1124, !1125, !1126, !1127, !1128, !1130, !1133, !1136, !1138, !1918, !1919}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !348, file: !349, line: 116, baseType: !110, size: 960)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !348, file: !349, line: 117, baseType: !180, size: 64, offset: 960)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !348, file: !349, line: 119, baseType: !354, size: 64, offset: 1024)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !349, line: 57, flags: DIFlagFwdDecl)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !348, file: !349, line: 121, baseType: !143, size: 16, offset: 1088)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !348, file: !349, line: 121, baseType: !143, size: 16, offset: 1104)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !348, file: !349, line: 122, baseType: !93, size: 32, offset: 1120)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !348, file: !349, line: 122, baseType: !93, size: 32, offset: 1152)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !348, file: !349, line: 122, baseType: !93, size: 32, offset: 1184)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !348, file: !349, line: 123, baseType: !159, size: 512, offset: 1216)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !348, file: !349, line: 124, baseType: !347, size: 64, offset: 1728)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !348, file: !349, line: 124, baseType: !347, size: 64, offset: 1792)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !348, file: !349, line: 127, baseType: !347, size: 64, offset: 1856)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !348, file: !349, line: 127, baseType: !347, size: 64, offset: 1920)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !348, file: !349, line: 127, baseType: !347, size: 64, offset: 1984)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !348, file: !349, line: 128, baseType: !368, size: 64, offset: 2048)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !107, line: 49, flags: DIFlagFwdDecl)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !348, file: !349, line: 130, baseType: !371, size: 64, offset: 2112)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !349, line: 97, size: 832, elements: !373)
!373 = !{!374, !378, !379}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !372, file: !349, line: 98, baseType: !375, size: 768)
!375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 768, elements: !376)
!376 = !{!377, !86}
!377 = !DISubrange(count: 8)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !372, file: !349, line: 99, baseType: !93, size: 32, offset: 768)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !372, file: !349, line: 99, baseType: !93, size: 32, offset: 800)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !348, file: !349, line: 131, baseType: !381, size: 64, offset: 2176)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !383, line: 486, size: 1600, elements: !384)
!383 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!384 = !{!385, !386, !387, !388, !389, !390, !391, !392, !393}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !382, file: !383, line: 487, baseType: !110, size: 960)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !382, file: !383, line: 489, baseType: !169, size: 128, offset: 960)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !382, file: !383, line: 490, baseType: !169, size: 128, offset: 1088)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !382, file: !383, line: 491, baseType: !169, size: 128, offset: 1216)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !382, file: !383, line: 492, baseType: !169, size: 128, offset: 1344)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !382, file: !383, line: 494, baseType: !93, size: 32, offset: 1472)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !382, file: !383, line: 495, baseType: !93, size: 32, offset: 1504)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !382, file: !383, line: 497, baseType: !93, size: 32, offset: 1536)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !382, file: !383, line: 498, baseType: !93, size: 32, offset: 1568)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !348, file: !349, line: 132, baseType: !381, size: 64, offset: 2240)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !348, file: !349, line: 133, baseType: !396, size: 64, offset: 2304)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !383, line: 334, size: 1728, elements: !398)
!398 = !{!399, !400, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !435}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !397, file: !383, line: 335, baseType: !169, size: 128)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !397, file: !383, line: 336, baseType: !401, size: 64, offset: 128)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !383, line: 47, flags: DIFlagFwdDecl)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !397, file: !383, line: 338, baseType: !143, size: 16, offset: 192)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !397, file: !383, line: 338, baseType: !143, size: 16, offset: 208)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !397, file: !383, line: 339, baseType: !5, size: 32, offset: 224)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !397, file: !383, line: 340, baseType: !93, size: 32, offset: 256)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !397, file: !383, line: 342, baseType: !84, size: 32, offset: 288)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !397, file: !383, line: 343, baseType: !83, size: 96, offset: 320)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !397, file: !383, line: 344, baseType: !83, size: 96, offset: 416)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !397, file: !383, line: 347, baseType: !169, size: 128, offset: 512)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !397, file: !383, line: 349, baseType: !93, size: 32, offset: 640)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !397, file: !383, line: 350, baseType: !93, size: 32, offset: 672)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !397, file: !383, line: 351, baseType: !76, size: 64, offset: 704)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !397, file: !383, line: 352, baseType: !76, size: 64, offset: 768)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !397, file: !383, line: 354, baseType: !416, size: 384, offset: 832)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !383, line: 116, baseType: !417)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !383, line: 94, size: 384, elements: !418)
!418 = !{!419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !417, file: !383, line: 96, baseType: !93, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !417, file: !383, line: 96, baseType: !93, size: 32, offset: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !417, file: !383, line: 97, baseType: !93, size: 32, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !417, file: !383, line: 97, baseType: !93, size: 32, offset: 96)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !417, file: !383, line: 99, baseType: !143, size: 16, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !417, file: !383, line: 100, baseType: !143, size: 16, offset: 144)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !417, file: !383, line: 102, baseType: !143, size: 16, offset: 160)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !417, file: !383, line: 105, baseType: !143, size: 16, offset: 176)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !417, file: !383, line: 108, baseType: !143, size: 16, offset: 192)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !417, file: !383, line: 109, baseType: !143, size: 16, offset: 208)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !417, file: !383, line: 111, baseType: !143, size: 16, offset: 224)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !417, file: !383, line: 112, baseType: !143, size: 16, offset: 240)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !417, file: !383, line: 114, baseType: !93, size: 32, offset: 256)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !417, file: !383, line: 114, baseType: !93, size: 32, offset: 288)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !417, file: !383, line: 115, baseType: !93, size: 32, offset: 320)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !417, file: !383, line: 115, baseType: !93, size: 32, offset: 352)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !397, file: !383, line: 355, baseType: !159, size: 512, offset: 1216)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !348, file: !349, line: 134, baseType: !76, size: 64, offset: 2368)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !348, file: !349, line: 136, baseType: !438, size: 64, offset: 2432)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !440, line: 61, flags: DIFlagFwdDecl)
!440 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!441 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !348, file: !349, line: 138, baseType: !416, size: 384, offset: 2496)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !348, file: !349, line: 139, baseType: !443, size: 64, offset: 2880)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !383, line: 80, baseType: !445)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !383, line: 72, size: 192, elements: !446)
!446 = !{!447, !454, !455, !456, !457}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !445, file: !383, line: 73, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !383, line: 59, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !383, line: 56, size: 128, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !450, file: !383, line: 57, baseType: !83, size: 96)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !450, file: !383, line: 58, baseType: !93, size: 32, offset: 96)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !445, file: !383, line: 74, baseType: !93, size: 32, offset: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !445, file: !383, line: 76, baseType: !93, size: 32, offset: 96)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !445, file: !383, line: 77, baseType: !93, size: 32, offset: 128)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !445, file: !383, line: 79, baseType: !93, size: 32, offset: 160)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !348, file: !349, line: 141, baseType: !169, size: 128, offset: 2944)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !348, file: !349, line: 142, baseType: !169, size: 128, offset: 3072)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !348, file: !349, line: 143, baseType: !169, size: 128, offset: 3200)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !348, file: !349, line: 144, baseType: !169, size: 128, offset: 3328)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !348, file: !349, line: 146, baseType: !93, size: 32, offset: 3456)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !348, file: !349, line: 147, baseType: !93, size: 32, offset: 3488)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !348, file: !349, line: 150, baseType: !465, size: 64, offset: 3520)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !348, file: !349, line: 151, baseType: !467, size: 64, offset: 3584)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !348, file: !349, line: 152, baseType: !93, size: 32, offset: 3648)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !348, file: !349, line: 153, baseType: !93, size: 32, offset: 3680)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !348, file: !349, line: 156, baseType: !83, size: 96, offset: 3712)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !348, file: !349, line: 156, baseType: !83, size: 96, offset: 3808)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !348, file: !349, line: 156, baseType: !83, size: 96, offset: 3904)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !348, file: !349, line: 157, baseType: !83, size: 96, offset: 4000)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !348, file: !349, line: 158, baseType: !83, size: 96, offset: 4096)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !348, file: !349, line: 159, baseType: !83, size: 96, offset: 4192)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !348, file: !349, line: 160, baseType: !83, size: 96, offset: 4288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !348, file: !349, line: 160, baseType: !83, size: 96, offset: 4384)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !348, file: !349, line: 161, baseType: !294, size: 128, offset: 4480)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !348, file: !349, line: 161, baseType: !294, size: 128, offset: 4608)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !348, file: !349, line: 162, baseType: !83, size: 96, offset: 4736)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !348, file: !349, line: 162, baseType: !83, size: 96, offset: 4832)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !348, file: !349, line: 163, baseType: !84, size: 32, offset: 4928)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !348, file: !349, line: 163, baseType: !84, size: 32, offset: 4960)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !348, file: !349, line: 164, baseType: !485, size: 512, offset: 4992)
!485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 512, elements: !486)
!486 = !{!296, !296}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !348, file: !349, line: 165, baseType: !485, size: 512, offset: 5504)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !348, file: !349, line: 166, baseType: !485, size: 512, offset: 6016)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !348, file: !349, line: 167, baseType: !485, size: 512, offset: 6528)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !348, file: !349, line: 176, baseType: !485, size: 512, offset: 7040)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !348, file: !349, line: 178, baseType: !5, size: 32, offset: 7552)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !348, file: !349, line: 180, baseType: !143, size: 16, offset: 7584)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !348, file: !349, line: 181, baseType: !143, size: 16, offset: 7600)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !348, file: !349, line: 183, baseType: !143, size: 16, offset: 7616)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !348, file: !349, line: 183, baseType: !143, size: 16, offset: 7632)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !348, file: !349, line: 184, baseType: !143, size: 16, offset: 7648)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !348, file: !349, line: 184, baseType: !143, size: 16, offset: 7664)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !348, file: !349, line: 185, baseType: !143, size: 16, offset: 7680)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !348, file: !349, line: 186, baseType: !143, size: 16, offset: 7696)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !348, file: !349, line: 187, baseType: !143, size: 16, offset: 7712)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !348, file: !349, line: 188, baseType: !130, size: 8, offset: 7728)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !348, file: !349, line: 189, baseType: !130, size: 8, offset: 7736)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !348, file: !349, line: 192, baseType: !93, size: 32, offset: 7744)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !348, file: !349, line: 192, baseType: !93, size: 32, offset: 7776)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !348, file: !349, line: 192, baseType: !93, size: 32, offset: 7808)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !348, file: !349, line: 192, baseType: !93, size: 32, offset: 7840)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !348, file: !349, line: 194, baseType: !93, size: 32, offset: 7872)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !348, file: !349, line: 202, baseType: !84, size: 32, offset: 7904)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !348, file: !349, line: 202, baseType: !84, size: 32, offset: 7936)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !348, file: !349, line: 202, baseType: !84, size: 32, offset: 7968)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !348, file: !349, line: 211, baseType: !84, size: 32, offset: 8000)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !348, file: !349, line: 212, baseType: !84, size: 32, offset: 8032)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !348, file: !349, line: 213, baseType: !84, size: 32, offset: 8064)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !348, file: !349, line: 214, baseType: !84, size: 32, offset: 8096)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !348, file: !349, line: 215, baseType: !84, size: 32, offset: 8128)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !348, file: !349, line: 216, baseType: !84, size: 32, offset: 8160)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !348, file: !349, line: 219, baseType: !84, size: 32, offset: 8192)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !348, file: !349, line: 220, baseType: !84, size: 32, offset: 8224)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !348, file: !349, line: 221, baseType: !84, size: 32, offset: 8256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !348, file: !349, line: 224, baseType: !521, size: 16, offset: 8288)
!521 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !348, file: !349, line: 224, baseType: !521, size: 16, offset: 8304)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !348, file: !349, line: 226, baseType: !143, size: 16, offset: 8320)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !348, file: !349, line: 228, baseType: !130, size: 8, offset: 8336)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !348, file: !349, line: 229, baseType: !130, size: 8, offset: 8344)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !348, file: !349, line: 231, baseType: !143, size: 16, offset: 8352)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !348, file: !349, line: 232, baseType: !130, size: 8, offset: 8368)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !348, file: !349, line: 233, baseType: !130, size: 8, offset: 8376)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !348, file: !349, line: 234, baseType: !84, size: 32, offset: 8384)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !348, file: !349, line: 235, baseType: !84, size: 32, offset: 8416)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !348, file: !349, line: 237, baseType: !169, size: 128, offset: 8448)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !348, file: !349, line: 238, baseType: !169, size: 128, offset: 8576)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !348, file: !349, line: 239, baseType: !169, size: 128, offset: 8704)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !348, file: !349, line: 240, baseType: !169, size: 128, offset: 8832)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !348, file: !349, line: 242, baseType: !84, size: 32, offset: 8960)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !348, file: !349, line: 244, baseType: !143, size: 16, offset: 8992)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !348, file: !349, line: 245, baseType: !521, size: 16, offset: 9008)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !348, file: !349, line: 246, baseType: !294, size: 128, offset: 9024)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !348, file: !349, line: 248, baseType: !93, size: 32, offset: 9152)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !348, file: !349, line: 249, baseType: !93, size: 32, offset: 9184)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !348, file: !349, line: 251, baseType: !542, size: 64, offset: 9216)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !349, line: 251, flags: DIFlagFwdDecl)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !348, file: !349, line: 253, baseType: !130, size: 8, offset: 9280)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !348, file: !349, line: 254, baseType: !130, size: 8, offset: 9288)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !348, file: !349, line: 255, baseType: !143, size: 16, offset: 9296)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !348, file: !349, line: 256, baseType: !83, size: 96, offset: 9312)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !348, file: !349, line: 258, baseType: !169, size: 128, offset: 9408)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !348, file: !349, line: 259, baseType: !169, size: 128, offset: 9536)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !348, file: !349, line: 260, baseType: !169, size: 128, offset: 9664)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !348, file: !349, line: 261, baseType: !169, size: 128, offset: 9792)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !348, file: !349, line: 263, baseType: !553, size: 64, offset: 9920)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !349, line: 52, flags: DIFlagFwdDecl)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !348, file: !349, line: 264, baseType: !556, size: 64, offset: 9984)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !349, line: 53, flags: DIFlagFwdDecl)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !348, file: !349, line: 265, baseType: !559, size: 64, offset: 10048)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !107, line: 46, flags: DIFlagFwdDecl)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !348, file: !349, line: 267, baseType: !130, size: 8, offset: 10112)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !348, file: !349, line: 268, baseType: !130, size: 8, offset: 10120)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !348, file: !349, line: 269, baseType: !143, size: 16, offset: 10128)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !348, file: !349, line: 270, baseType: !84, size: 32, offset: 10144)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !348, file: !349, line: 272, baseType: !566, size: 64, offset: 10176)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !349, line: 54, flags: DIFlagFwdDecl)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !348, file: !349, line: 275, baseType: !569, size: 64, offset: 10240)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !349, line: 275, flags: DIFlagFwdDecl)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !348, file: !349, line: 277, baseType: !572, size: 64, offset: 10304)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !4, line: 178, size: 13504, elements: !574)
!574 = !{!575, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !627, !630, !632, !633, !635, !636, !637, !638, !644, !649, !650, !654, !655, !656, !657, !658, !671, !683, !697, !701, !705, !709, !718, !730, !734, !738, !742, !746, !750, !751, !752, !753, !754, !755, !759, !760, !761, !762, !766, !767, !768, !769, !770, !775, !776, !777, !778, !779, !783, !784, !785, !786, !787, !794, !805, !810, !816, !826, !832, !843, !850, !857, !861, !865, !869, !874, !875, !876, !883, !889, !890, !891, !896, !897, !906, !1073, !1077, !1085, !1089, !1093, !1097, !1105, !1115}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !573, file: !4, line: 180, baseType: !576, size: 1600)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !32, line: 73, baseType: !577)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !32, line: 64, size: 1600, elements: !578)
!578 = !{!579, !594, !598, !599, !600, !601, !604}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !577, file: !32, line: 65, baseType: !580, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !32, line: 53, baseType: !582)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !32, line: 42, size: 832, elements: !583)
!583 = !{!584, !585, !586, !587, !588, !589, !590, !591, !592, !593}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !582, file: !32, line: 43, baseType: !93, size: 32)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !582, file: !32, line: 44, baseType: !93, size: 32, offset: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !582, file: !32, line: 45, baseType: !93, size: 32, offset: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !582, file: !32, line: 46, baseType: !93, size: 32, offset: 96)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !582, file: !32, line: 47, baseType: !93, size: 32, offset: 128)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !582, file: !32, line: 48, baseType: !93, size: 32, offset: 160)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !582, file: !32, line: 49, baseType: !93, size: 32, offset: 192)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !582, file: !32, line: 50, baseType: !93, size: 32, offset: 224)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !582, file: !32, line: 51, baseType: !159, size: 512, offset: 256)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !582, file: !32, line: 52, baseType: !76, size: 64, offset: 768)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !577, file: !32, line: 66, baseType: !595, size: 1312, offset: 64)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 1312, elements: !596)
!596 = !{!597}
!597 = !DISubrange(count: 41)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !577, file: !32, line: 69, baseType: !93, size: 32, offset: 1376)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !577, file: !32, line: 69, baseType: !93, size: 32, offset: 1408)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !577, file: !32, line: 70, baseType: !93, size: 32, offset: 1440)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !577, file: !32, line: 71, baseType: !602, size: 64, offset: 1472)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !32, line: 71, flags: DIFlagFwdDecl)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !577, file: !32, line: 72, baseType: !605, size: 64, offset: 1536)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !32, line: 59, baseType: !607)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !32, line: 57, size: 8192, elements: !608)
!608 = !{!609}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !607, file: !32, line: 58, baseType: !129, size: 8192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !573, file: !4, line: 180, baseType: !576, size: 1600, offset: 1600)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !573, file: !4, line: 180, baseType: !576, size: 1600, offset: 3200)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !573, file: !4, line: 180, baseType: !576, size: 1600, offset: 4800)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !573, file: !4, line: 180, baseType: !576, size: 1600, offset: 6400)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !573, file: !4, line: 181, baseType: !93, size: 32, offset: 8000)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !573, file: !4, line: 181, baseType: !93, size: 32, offset: 8032)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !573, file: !4, line: 181, baseType: !93, size: 32, offset: 8064)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !573, file: !4, line: 181, baseType: !93, size: 32, offset: 8096)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !573, file: !4, line: 181, baseType: !93, size: 32, offset: 8128)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !573, file: !4, line: 182, baseType: !93, size: 32, offset: 8160)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !573, file: !4, line: 183, baseType: !93, size: 32, offset: 8192)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !573, file: !4, line: 184, baseType: !622, size: 64, offset: 8256)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !623, line: 124, baseType: !624)
!623 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !626, line: 118, flags: DIFlagFwdDecl)
!626 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!627 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !573, file: !4, line: 185, baseType: !628, size: 64, offset: 8320)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !4, line: 97, flags: DIFlagFwdDecl)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !573, file: !4, line: 186, baseType: !631, size: 32, offset: 8384)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !4, line: 132, baseType: !3)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !573, file: !4, line: 187, baseType: !84, size: 32, offset: 8416)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !573, file: !4, line: 188, baseType: !634, size: 32, offset: 8448)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !4, line: 175, baseType: !10)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !573, file: !4, line: 189, baseType: !93, size: 32, offset: 8480)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !573, file: !4, line: 190, baseType: !465, size: 64, offset: 8512)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !573, file: !4, line: 193, baseType: !130, size: 8, offset: 8576)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !573, file: !4, line: 196, baseType: !639, size: 64, offset: 8640)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DISubroutineType(types: !641)
!641 = !{null, !642}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !4, line: 177, baseType: !573)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !573, file: !4, line: 199, baseType: !645, size: 64, offset: 8704)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{null, !642, !648}
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !84)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !573, file: !4, line: 202, baseType: !639, size: 64, offset: 8768)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !573, file: !4, line: 207, baseType: !651, size: 64, offset: 8832)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DISubroutineType(types: !653)
!653 = !{!93, !642}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !573, file: !4, line: 208, baseType: !651, size: 64, offset: 8896)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !573, file: !4, line: 209, baseType: !651, size: 64, offset: 8960)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !573, file: !4, line: 210, baseType: !651, size: 64, offset: 9024)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !573, file: !4, line: 211, baseType: !651, size: 64, offset: 9088)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !573, file: !4, line: 218, baseType: !659, size: 64, offset: 9152)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{null, !642, !93, !662}
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !664, line: 65, size: 160, elements: !665)
!664 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!665 = !{!666, !667, !669, !670}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !663, file: !664, line: 66, baseType: !83, size: 96)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !663, file: !664, line: 67, baseType: !668, size: 48, offset: 96)
!668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 48, elements: !85)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !663, file: !664, line: 68, baseType: !130, size: 8, offset: 144)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !663, file: !664, line: 68, baseType: !130, size: 8, offset: 152)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !573, file: !4, line: 219, baseType: !672, size: 64, offset: 9216)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{null, !642, !93, !675}
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !664, line: 48, size: 96, elements: !677)
!677 = !{!678, !679, !680, !681, !682}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !676, file: !664, line: 49, baseType: !5, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !676, file: !664, line: 49, baseType: !5, size: 32, offset: 32)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !676, file: !664, line: 50, baseType: !130, size: 8, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !676, file: !664, line: 50, baseType: !130, size: 8, offset: 72)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !676, file: !664, line: 51, baseType: !143, size: 16, offset: 80)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !573, file: !4, line: 220, baseType: !684, size: 64, offset: 9280)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{null, !642, !93, !687}
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !664, line: 42, size: 160, elements: !689)
!689 = !{!690, !691, !692, !693, !694, !695, !696}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !688, file: !664, line: 43, baseType: !5, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !688, file: !664, line: 43, baseType: !5, size: 32, offset: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !688, file: !664, line: 43, baseType: !5, size: 32, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !688, file: !664, line: 43, baseType: !5, size: 32, offset: 96)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !688, file: !664, line: 44, baseType: !143, size: 16, offset: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !688, file: !664, line: 45, baseType: !130, size: 8, offset: 144)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !688, file: !664, line: 45, baseType: !130, size: 8, offset: 152)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !573, file: !4, line: 227, baseType: !698, size: 64, offset: 9344)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{!662, !642}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !573, file: !4, line: 228, baseType: !702, size: 64, offset: 9408)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DISubroutineType(types: !704)
!704 = !{!675, !642}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !573, file: !4, line: 229, baseType: !706, size: 64, offset: 9472)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{!687, !642}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !573, file: !4, line: 230, baseType: !710, size: 64, offset: 9536)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!713, !642}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !664, line: 88, size: 64, elements: !715)
!715 = !{!716, !717}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !714, file: !664, line: 89, baseType: !5, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !714, file: !664, line: 90, baseType: !5, size: 32, offset: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !573, file: !4, line: 231, baseType: !719, size: 64, offset: 9600)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DISubroutineType(types: !721)
!721 = !{!722, !642}
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !664, line: 79, size: 96, elements: !724)
!724 = !{!725, !726, !727, !728, !729}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !723, file: !664, line: 81, baseType: !93, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !723, file: !664, line: 82, baseType: !93, size: 32, offset: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !723, file: !664, line: 83, baseType: !143, size: 16, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !723, file: !664, line: 84, baseType: !130, size: 8, offset: 80)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !723, file: !664, line: 84, baseType: !130, size: 8, offset: 88)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !573, file: !4, line: 236, baseType: !731, size: 64, offset: 9664)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{null, !642, !662}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !573, file: !4, line: 237, baseType: !735, size: 64, offset: 9728)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DISubroutineType(types: !737)
!737 = !{null, !642, !675}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !573, file: !4, line: 238, baseType: !739, size: 64, offset: 9792)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DISubroutineType(types: !741)
!741 = !{null, !642, !687}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !573, file: !4, line: 239, baseType: !743, size: 64, offset: 9856)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DISubroutineType(types: !745)
!745 = !{null, !642, !713}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !573, file: !4, line: 240, baseType: !747, size: 64, offset: 9920)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{null, !642, !722}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !573, file: !4, line: 245, baseType: !698, size: 64, offset: 9984)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !573, file: !4, line: 246, baseType: !702, size: 64, offset: 10048)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !573, file: !4, line: 247, baseType: !706, size: 64, offset: 10112)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !573, file: !4, line: 248, baseType: !710, size: 64, offset: 10176)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !573, file: !4, line: 249, baseType: !719, size: 64, offset: 10240)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !573, file: !4, line: 255, baseType: !756, size: 64, offset: 10304)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!76, !642, !93, !93}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !573, file: !4, line: 256, baseType: !756, size: 64, offset: 10368)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !573, file: !4, line: 257, baseType: !756, size: 64, offset: 10432)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !573, file: !4, line: 258, baseType: !756, size: 64, offset: 10496)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !573, file: !4, line: 264, baseType: !763, size: 64, offset: 10560)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!76, !642, !93}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !573, file: !4, line: 265, baseType: !763, size: 64, offset: 10624)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !573, file: !4, line: 266, baseType: !763, size: 64, offset: 10688)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !573, file: !4, line: 267, baseType: !763, size: 64, offset: 10752)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !573, file: !4, line: 268, baseType: !763, size: 64, offset: 10816)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !573, file: !4, line: 272, baseType: !771, size: 64, offset: 10880)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{!774, !642}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !573, file: !4, line: 273, baseType: !771, size: 64, offset: 10944)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !573, file: !4, line: 274, baseType: !771, size: 64, offset: 11008)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !573, file: !4, line: 275, baseType: !771, size: 64, offset: 11072)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !573, file: !4, line: 276, baseType: !771, size: 64, offset: 11136)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !573, file: !4, line: 279, baseType: !780, size: 64, offset: 11200)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{null, !642, !93, !774, !93}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !573, file: !4, line: 280, baseType: !780, size: 64, offset: 11264)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !573, file: !4, line: 281, baseType: !780, size: 64, offset: 11328)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !573, file: !4, line: 284, baseType: !651, size: 64, offset: 11392)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !573, file: !4, line: 285, baseType: !651, size: 64, offset: 11456)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !573, file: !4, line: 286, baseType: !788, size: 64, offset: 11520)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{!791, !642}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !4, line: 82, flags: DIFlagFwdDecl)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !573, file: !4, line: 287, baseType: !795, size: 64, offset: 11584)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{!798, !642}
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !4, line: 120, baseType: !800)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !4, line: 117, size: 256, elements: !801)
!801 = !{!802, !804}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !800, file: !4, line: 118, baseType: !803, size: 128)
!803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 128, elements: !295)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !800, file: !4, line: 119, baseType: !803, size: 128, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !573, file: !4, line: 288, baseType: !806, size: 64, offset: 11648)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!809, !642}
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !573, file: !4, line: 289, baseType: !811, size: 64, offset: 11712)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DISubroutineType(types: !813)
!813 = !{null, !642, !814}
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !4, line: 83, flags: DIFlagFwdDecl)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !573, file: !4, line: 290, baseType: !817, size: 64, offset: 11776)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DISubroutineType(types: !819)
!819 = !{!820, !642}
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !4, line: 126, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !4, line: 123, size: 32, elements: !823)
!823 = !{!824, !825}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !822, file: !4, line: 124, baseType: !143, size: 16)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !822, file: !4, line: 125, baseType: !130, size: 8, offset: 16)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !573, file: !4, line: 291, baseType: !827, size: 64, offset: 11840)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!830, !642}
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !573, file: !4, line: 299, baseType: !833, size: 64, offset: 11904)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{null, !642, !836, !76, !842}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{null, !76, !93, !839, !839, !840}
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !4, line: 162, baseType: !15)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !573, file: !4, line: 309, baseType: !844, size: 64, offset: 11968)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{null, !642, !847, !76}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{null, !76, !93, !839, !839}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !573, file: !4, line: 317, baseType: !851, size: 64, offset: 12032)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{null, !642, !854, !76, !842}
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{null, !76, !93, !93, !839, !839}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !573, file: !4, line: 327, baseType: !858, size: 64, offset: 12096)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{null, !642, !847, !76, !842}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !573, file: !4, line: 337, baseType: !862, size: 64, offset: 12160)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{null, !642, !89, !89}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !573, file: !4, line: 344, baseType: !866, size: 64, offset: 12224)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DISubroutineType(types: !868)
!868 = !{null, !642, !93, !89}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !573, file: !4, line: 347, baseType: !870, size: 64, offset: 12288)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DISubroutineType(types: !872)
!872 = !{null, !642, !873}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !573, file: !4, line: 350, baseType: !866, size: 64, offset: 12352)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !573, file: !4, line: 351, baseType: !866, size: 64, offset: 12416)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !573, file: !4, line: 355, baseType: !877, size: 64, offset: 12480)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DISubroutineType(types: !879)
!879 = !{!880, !347, !642}
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !4, line: 355, flags: DIFlagFwdDecl)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !573, file: !4, line: 359, baseType: !884, size: 64, offset: 12544)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!887, !347, !642}
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !4, line: 100, flags: DIFlagFwdDecl)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !573, file: !4, line: 364, baseType: !639, size: 64, offset: 12608)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !573, file: !4, line: 367, baseType: !639, size: 64, offset: 12672)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !573, file: !4, line: 373, baseType: !892, size: 64, offset: 12736)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !642, !895, !895}
!895 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !573, file: !4, line: 376, baseType: !639, size: 64, offset: 12800)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !573, file: !4, line: 385, baseType: !898, size: 64, offset: 12864)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{null, !642, !901, !895, !902}
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !4, line: 146, baseType: !903)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!93, !93, !76}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !573, file: !4, line: 391, baseType: !907, size: 64, offset: 12928)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{null, !642, !910, !1068, !76, !1072}
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !4, line: 150, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!914, !915, !1067, !93}
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !4, line: 143, baseType: !19)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !664, line: 160, size: 384, elements: !917)
!917 = !{!918, !922, !1062, !1063, !1064, !1065, !1066}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !916, file: !664, line: 161, baseType: !919, size: 256)
!919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 256, elements: !920)
!920 = !{!296, !921}
!921 = !DISubrange(count: 2)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !916, file: !664, line: 162, baseType: !923, size: 64, offset: 256)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !925, line: 77, size: 15424, elements: !926)
!925 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!926 = !{!927, !928, !929, !932, !935, !938, !999, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1051, !1052, !1056}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !924, file: !925, line: 78, baseType: !110, size: 960)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !924, file: !925, line: 80, baseType: !129, size: 8192, offset: 960)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !924, file: !925, line: 82, baseType: !930, size: 64, offset: 9152)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !925, line: 43, flags: DIFlagFwdDecl)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !924, file: !925, line: 83, baseType: !933, size: 64, offset: 9216)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !111, line: 46, flags: DIFlagFwdDecl)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !924, file: !925, line: 86, baseType: !936, size: 64, offset: 9280)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !925, line: 41, flags: DIFlagFwdDecl)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !924, file: !925, line: 87, baseType: !939, size: 64, offset: 9344)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !941, line: 110, size: 1152, elements: !942)
!941 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!942 = !{!943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !961, !962, !963, !964, !966, !995, !996, !997, !998}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !940, file: !941, line: 111, baseType: !939, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !940, file: !941, line: 111, baseType: !939, size: 64, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !940, file: !941, line: 114, baseType: !93, size: 32, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !940, file: !941, line: 114, baseType: !93, size: 32, offset: 160)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !940, file: !941, line: 115, baseType: !143, size: 16, offset: 192)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !940, file: !941, line: 115, baseType: !143, size: 16, offset: 208)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !940, file: !941, line: 118, baseType: !809, size: 64, offset: 256)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !940, file: !941, line: 120, baseType: !89, size: 64, offset: 320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !940, file: !941, line: 122, baseType: !89, size: 64, offset: 384)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !940, file: !941, line: 125, baseType: !953, size: 128, offset: 448)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !954, line: 89, baseType: !955)
!954 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !954, line: 86, size: 128, elements: !956)
!956 = !{!957, !958, !959, !960}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !955, file: !954, line: 87, baseType: !93, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !955, file: !954, line: 87, baseType: !93, size: 32, offset: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !955, file: !954, line: 88, baseType: !93, size: 32, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !955, file: !954, line: 88, baseType: !93, size: 32, offset: 96)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !940, file: !941, line: 127, baseType: !93, size: 32, offset: 576)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !940, file: !941, line: 127, baseType: !93, size: 32, offset: 608)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !940, file: !941, line: 130, baseType: !169, size: 128, offset: 640)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !940, file: !941, line: 133, baseType: !965, size: 128, offset: 768)
!965 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !953)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !940, file: !941, line: 134, baseType: !967, size: 64, offset: 896)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !969)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !941, line: 108, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !941, line: 85, size: 1600, elements: !971)
!971 = !{!972, !974, !975, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !970, file: !941, line: 86, baseType: !973, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !970, file: !941, line: 86, baseType: !973, size: 64, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !970, file: !941, line: 89, baseType: !976, size: 592, offset: 128)
!976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 592, elements: !977)
!977 = !{!978}
!978 = !DISubrange(count: 74)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !970, file: !941, line: 90, baseType: !5, size: 32, offset: 736)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !970, file: !941, line: 90, baseType: !5, size: 32, offset: 768)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !970, file: !941, line: 90, baseType: !5, size: 32, offset: 800)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !970, file: !941, line: 91, baseType: !93, size: 32, offset: 832)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !970, file: !941, line: 91, baseType: !93, size: 32, offset: 864)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !970, file: !941, line: 91, baseType: !93, size: 32, offset: 896)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !970, file: !941, line: 93, baseType: !105, size: 64, offset: 960)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !970, file: !941, line: 94, baseType: !559, size: 64, offset: 1024)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !970, file: !941, line: 96, baseType: !89, size: 64, offset: 1088)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !970, file: !941, line: 97, baseType: !89, size: 64, offset: 1152)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !970, file: !941, line: 98, baseType: !89, size: 64, offset: 1216)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !970, file: !941, line: 99, baseType: !809, size: 64, offset: 1280)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !970, file: !941, line: 101, baseType: !93, size: 32, offset: 1344)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !970, file: !941, line: 101, baseType: !93, size: 32, offset: 1376)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !970, file: !941, line: 104, baseType: !76, size: 64, offset: 1408)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !970, file: !941, line: 106, baseType: !169, size: 128, offset: 1472)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !940, file: !941, line: 137, baseType: !93, size: 32, offset: 960)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !940, file: !941, line: 140, baseType: !93, size: 32, offset: 992)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !940, file: !941, line: 143, baseType: !93, size: 32, offset: 1024)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !940, file: !941, line: 146, baseType: !467, size: 64, offset: 1088)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !924, file: !925, line: 89, baseType: !1000, size: 512, offset: 9408)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 512, elements: !1001)
!1001 = !{!377}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !924, file: !925, line: 90, baseType: !143, size: 16, offset: 9920)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !924, file: !925, line: 90, baseType: !143, size: 16, offset: 9936)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !924, file: !925, line: 92, baseType: !143, size: 16, offset: 9952)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !924, file: !925, line: 92, baseType: !143, size: 16, offset: 9968)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !924, file: !925, line: 93, baseType: !143, size: 16, offset: 9984)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !924, file: !925, line: 93, baseType: !143, size: 16, offset: 10000)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !924, file: !925, line: 94, baseType: !93, size: 32, offset: 10016)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !924, file: !925, line: 97, baseType: !143, size: 16, offset: 10048)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !924, file: !925, line: 97, baseType: !143, size: 16, offset: 10064)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !924, file: !925, line: 98, baseType: !143, size: 16, offset: 10080)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !924, file: !925, line: 98, baseType: !143, size: 16, offset: 10096)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !924, file: !925, line: 99, baseType: !143, size: 16, offset: 10112)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !924, file: !925, line: 99, baseType: !143, size: 16, offset: 10128)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !924, file: !925, line: 100, baseType: !5, size: 32, offset: 10144)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !924, file: !925, line: 101, baseType: !831, size: 64, offset: 10176)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !924, file: !925, line: 103, baseType: !136, size: 64, offset: 10240)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !924, file: !925, line: 104, baseType: !1019, size: 64, offset: 10304)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !111, line: 159, size: 448, elements: !1021)
!1021 = !{!1022, !1025, !1026, !1028, !1029, !1031}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1020, file: !111, line: 161, baseType: !1023, size: 64)
!1023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !1024)
!1024 = !{!921}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1020, file: !111, line: 162, baseType: !1023, size: 64, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1020, file: !111, line: 163, baseType: !1027, size: 32, offset: 128)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 32, elements: !1024)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1020, file: !111, line: 164, baseType: !1027, size: 32, offset: 160)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1020, file: !111, line: 165, baseType: !1030, size: 128, offset: 192)
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !831, size: 128, elements: !1024)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1020, file: !111, line: 166, baseType: !1032, size: 128, offset: 320)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 128, elements: !1024)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !924, file: !925, line: 107, baseType: !84, size: 32, offset: 10368)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !924, file: !925, line: 108, baseType: !93, size: 32, offset: 10400)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !924, file: !925, line: 109, baseType: !143, size: 16, offset: 10432)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !924, file: !925, line: 110, baseType: !143, size: 16, offset: 10448)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !924, file: !925, line: 113, baseType: !93, size: 32, offset: 10464)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !924, file: !925, line: 113, baseType: !93, size: 32, offset: 10496)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !924, file: !925, line: 114, baseType: !130, size: 8, offset: 10528)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !924, file: !925, line: 114, baseType: !130, size: 8, offset: 10536)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !924, file: !925, line: 115, baseType: !143, size: 16, offset: 10544)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !924, file: !925, line: 116, baseType: !294, size: 128, offset: 10560)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !924, file: !925, line: 119, baseType: !84, size: 32, offset: 10688)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !924, file: !925, line: 119, baseType: !84, size: 32, offset: 10720)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !924, file: !925, line: 122, baseType: !1046, size: 512, offset: 10752)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1047, line: 182, baseType: !1048)
!1047 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1047, line: 180, size: 512, elements: !1049)
!1049 = !{!1050}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1048, file: !1047, line: 181, baseType: !159, size: 512)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !924, file: !925, line: 123, baseType: !130, size: 8, offset: 11264)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !924, file: !925, line: 125, baseType: !1053, size: 56, offset: 11272)
!1053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 56, elements: !1054)
!1054 = !{!1055}
!1055 = !DISubrange(count: 7)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !924, file: !925, line: 126, baseType: !1057, size: 4096, offset: 11328)
!1057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 4096, elements: !1001)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !925, line: 69, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !925, line: 67, size: 512, elements: !1060)
!1060 = !{!1061}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1059, file: !925, line: 68, baseType: !159, size: 512)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !916, file: !664, line: 163, baseType: !130, size: 8, offset: 320)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !916, file: !664, line: 163, baseType: !130, size: 8, offset: 328)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !916, file: !664, line: 164, baseType: !143, size: 16, offset: 336)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !916, file: !664, line: 164, baseType: !143, size: 16, offset: 352)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !916, file: !664, line: 164, baseType: !143, size: 16, offset: 368)
!1067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !895)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !4, line: 147, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!93, !76, !93, !93}
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !4, line: 157, baseType: !25)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !573, file: !4, line: 400, baseType: !1074, size: 64, offset: 12992)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{null, !642, !902}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !573, file: !4, line: 415, baseType: !1078, size: 64, offset: 13056)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{null, !642, !1081, !902, !1068, !76, !1072}
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !4, line: 149, baseType: !1082)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!914, !76, !93}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !573, file: !4, line: 425, baseType: !1086, size: 64, offset: 13120)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{null, !642, !1081, !1068, !76, !1072}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !573, file: !4, line: 435, baseType: !1090, size: 64, offset: 13184)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{null, !642, !902, !1081, !76}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !573, file: !4, line: 444, baseType: !1094, size: 64, offset: 13248)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{null, !642, !1081, !76}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !573, file: !4, line: 455, baseType: !1098, size: 64, offset: 13312)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{null, !642, !1081, !1101, !76}
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !4, line: 148, baseType: !1102)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !76, !93, !84}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !573, file: !4, line: 464, baseType: !1106, size: 64, offset: 13376)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !642, !1109, !1112, !76}
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !76, !93, !76}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!895, !76, !93}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !573, file: !4, line: 470, baseType: !639, size: 64, offset: 13440)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !348, file: !349, line: 277, baseType: !572, size: 64, offset: 10368)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !348, file: !349, line: 278, baseType: !1118, size: 64, offset: 10432)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1119, line: 27, baseType: !1120)
!1119 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1121, line: 45, baseType: !1122)
!1121 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1122 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !348, file: !349, line: 279, baseType: !1118, size: 64, offset: 10496)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !348, file: !349, line: 280, baseType: !5, size: 32, offset: 10560)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !348, file: !349, line: 281, baseType: !5, size: 32, offset: 10592)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !348, file: !349, line: 283, baseType: !169, size: 128, offset: 10624)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !348, file: !349, line: 284, baseType: !169, size: 128, offset: 10752)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !348, file: !349, line: 285, baseType: !1129, size: 64, offset: 10880)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !348, file: !349, line: 287, baseType: !1131, size: 64, offset: 10944)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !349, line: 59, flags: DIFlagFwdDecl)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !348, file: !349, line: 288, baseType: !1134, size: 64, offset: 11008)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !349, line: 288, flags: DIFlagFwdDecl)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !348, file: !349, line: 290, baseType: !1137, size: 64, offset: 11072)
!1137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 64, elements: !1024)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !348, file: !349, line: 291, baseType: !1139, size: 64, offset: 11136)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !925, line: 65, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !925, line: 50, size: 320, elements: !1142)
!1142 = !{!1143, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1141, file: !925, line: 51, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !440, line: 1216, size: 39680, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1233, !1234, !1235, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1262, !1486, !1489, !1779, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1801, !1802, !1803, !1804, !1805, !1813, !1879, !1886, !1887, !1894, !1897, !1898, !1899, !1900, !1901, !1902}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1145, file: !440, line: 1217, baseType: !110, size: 960)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1145, file: !440, line: 1218, baseType: !180, size: 64, offset: 960)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1145, file: !440, line: 1220, baseType: !347, size: 64, offset: 1024)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1145, file: !440, line: 1221, baseType: !1151, size: 64, offset: 1088)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1153, line: 52, size: 4224, elements: !1154)
!1153 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1152, file: !1153, line: 53, baseType: !110, size: 960)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1152, file: !1153, line: 54, baseType: !180, size: 64, offset: 960)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1152, file: !1153, line: 56, baseType: !143, size: 16, offset: 1024)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !1152, file: !1153, line: 56, baseType: !143, size: 16, offset: 1040)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1152, file: !1153, line: 57, baseType: !143, size: 16, offset: 1056)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !1152, file: !1153, line: 57, baseType: !143, size: 16, offset: 1072)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !1152, file: !1153, line: 59, baseType: !84, size: 32, offset: 1088)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !1152, file: !1153, line: 59, baseType: !84, size: 32, offset: 1120)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !1152, file: !1153, line: 59, baseType: !84, size: 32, offset: 1152)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !1152, file: !1153, line: 60, baseType: !84, size: 32, offset: 1184)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !1152, file: !1153, line: 60, baseType: !84, size: 32, offset: 1216)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !1152, file: !1153, line: 60, baseType: !84, size: 32, offset: 1248)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !1152, file: !1153, line: 61, baseType: !84, size: 32, offset: 1280)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !1152, file: !1153, line: 61, baseType: !84, size: 32, offset: 1312)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !1152, file: !1153, line: 61, baseType: !84, size: 32, offset: 1344)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1152, file: !1153, line: 68, baseType: !84, size: 32, offset: 1376)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1152, file: !1153, line: 68, baseType: !84, size: 32, offset: 1408)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1152, file: !1153, line: 68, baseType: !84, size: 32, offset: 1440)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !1152, file: !1153, line: 69, baseType: !84, size: 32, offset: 1472)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !1152, file: !1153, line: 69, baseType: !84, size: 32, offset: 1504)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1152, file: !1153, line: 74, baseType: !84, size: 32, offset: 1536)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1152, file: !1153, line: 79, baseType: !84, size: 32, offset: 1568)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !1152, file: !1153, line: 81, baseType: !143, size: 16, offset: 1600)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1152, file: !1153, line: 91, baseType: !143, size: 16, offset: 1616)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1152, file: !1153, line: 92, baseType: !143, size: 16, offset: 1632)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1152, file: !1153, line: 93, baseType: !143, size: 16, offset: 1648)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1152, file: !1153, line: 94, baseType: !143, size: 16, offset: 1664)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1152, file: !1153, line: 94, baseType: !143, size: 16, offset: 1680)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1152, file: !1153, line: 94, baseType: !143, size: 16, offset: 1696)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1152, file: !1153, line: 94, baseType: !143, size: 16, offset: 1712)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !1152, file: !1153, line: 96, baseType: !84, size: 32, offset: 1728)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !1152, file: !1153, line: 96, baseType: !84, size: 32, offset: 1760)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !1152, file: !1153, line: 96, baseType: !84, size: 32, offset: 1792)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !1152, file: !1153, line: 96, baseType: !84, size: 32, offset: 1824)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !1152, file: !1153, line: 98, baseType: !84, size: 32, offset: 1856)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !1152, file: !1153, line: 98, baseType: !84, size: 32, offset: 1888)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !1152, file: !1153, line: 98, baseType: !84, size: 32, offset: 1920)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !1152, file: !1153, line: 98, baseType: !84, size: 32, offset: 1952)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !1152, file: !1153, line: 99, baseType: !84, size: 32, offset: 1984)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !1152, file: !1153, line: 99, baseType: !84, size: 32, offset: 2016)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !1152, file: !1153, line: 100, baseType: !84, size: 32, offset: 2048)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !1152, file: !1153, line: 100, baseType: !84, size: 32, offset: 2080)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !1152, file: !1153, line: 103, baseType: !143, size: 16, offset: 2112)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !1152, file: !1153, line: 103, baseType: !143, size: 16, offset: 2128)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !1152, file: !1153, line: 103, baseType: !143, size: 16, offset: 2144)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !1152, file: !1153, line: 103, baseType: !143, size: 16, offset: 2160)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !1152, file: !1153, line: 106, baseType: !84, size: 32, offset: 2176)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !1152, file: !1153, line: 106, baseType: !84, size: 32, offset: 2208)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !1152, file: !1153, line: 106, baseType: !84, size: 32, offset: 2240)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !1152, file: !1153, line: 106, baseType: !84, size: 32, offset: 2272)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !1152, file: !1153, line: 107, baseType: !143, size: 16, offset: 2304)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !1152, file: !1153, line: 107, baseType: !143, size: 16, offset: 2320)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !1152, file: !1153, line: 107, baseType: !143, size: 16, offset: 2336)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !1152, file: !1153, line: 107, baseType: !143, size: 16, offset: 2352)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !1152, file: !1153, line: 108, baseType: !84, size: 32, offset: 2368)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !1152, file: !1153, line: 108, baseType: !84, size: 32, offset: 2400)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !1152, file: !1153, line: 109, baseType: !84, size: 32, offset: 2432)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !1152, file: !1153, line: 109, baseType: !84, size: 32, offset: 2464)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !1152, file: !1153, line: 110, baseType: !84, size: 32, offset: 2496)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !1152, file: !1153, line: 110, baseType: !84, size: 32, offset: 2528)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !1152, file: !1153, line: 110, baseType: !84, size: 32, offset: 2560)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !1152, file: !1153, line: 111, baseType: !143, size: 16, offset: 2592)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !1152, file: !1153, line: 111, baseType: !143, size: 16, offset: 2608)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !1152, file: !1153, line: 112, baseType: !143, size: 16, offset: 2624)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !1152, file: !1153, line: 112, baseType: !143, size: 16, offset: 2640)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !1152, file: !1153, line: 112, baseType: !143, size: 16, offset: 2656)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1152, file: !1153, line: 115, baseType: !143, size: 16, offset: 2672)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !1152, file: !1153, line: 118, baseType: !89, size: 64, offset: 2688)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !1152, file: !1153, line: 118, baseType: !89, size: 64, offset: 2752)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1152, file: !1153, line: 121, baseType: !368, size: 64, offset: 2816)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1152, file: !1153, line: 122, baseType: !338, size: 1152, offset: 2880)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !1152, file: !1153, line: 123, baseType: !143, size: 16, offset: 4032)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1152, file: !1153, line: 123, baseType: !143, size: 16, offset: 4048)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1152, file: !1153, line: 123, baseType: !1027, size: 32, offset: 4064)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1152, file: !1153, line: 126, baseType: !1019, size: 64, offset: 4096)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1152, file: !1153, line: 129, baseType: !1231, size: 64, offset: 4160)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !107, line: 47, flags: DIFlagFwdDecl)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1145, file: !440, line: 1223, baseType: !1144, size: 64, offset: 1152)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1145, file: !440, line: 1225, baseType: !169, size: 128, offset: 1216)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1145, file: !440, line: 1226, baseType: !1236, size: 64, offset: 1344)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !440, line: 69, size: 320, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1237, file: !440, line: 70, baseType: !1236, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1237, file: !440, line: 70, baseType: !1236, size: 64, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1237, file: !440, line: 71, baseType: !5, size: 32, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1237, file: !440, line: 71, baseType: !5, size: 32, offset: 160)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1237, file: !440, line: 72, baseType: !93, size: 32, offset: 192)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1237, file: !440, line: 73, baseType: !143, size: 16, offset: 224)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1237, file: !440, line: 73, baseType: !143, size: 16, offset: 240)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1237, file: !440, line: 74, baseType: !347, size: 64, offset: 256)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1145, file: !440, line: 1227, baseType: !347, size: 64, offset: 1408)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1145, file: !440, line: 1229, baseType: !83, size: 96, offset: 1472)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1145, file: !440, line: 1230, baseType: !83, size: 96, offset: 1568)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1145, file: !440, line: 1231, baseType: !83, size: 96, offset: 1664)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1145, file: !440, line: 1231, baseType: !83, size: 96, offset: 1760)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1145, file: !440, line: 1233, baseType: !5, size: 32, offset: 1856)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1145, file: !440, line: 1234, baseType: !93, size: 32, offset: 1888)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1145, file: !440, line: 1235, baseType: !5, size: 32, offset: 1920)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1145, file: !440, line: 1237, baseType: !143, size: 16, offset: 1952)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1145, file: !440, line: 1239, baseType: !130, size: 8, offset: 1968)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1145, file: !440, line: 1240, baseType: !312, size: 8, offset: 1976)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1145, file: !440, line: 1242, baseType: !1231, size: 64, offset: 1984)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1145, file: !440, line: 1244, baseType: !1260, size: 64, offset: 2048)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !440, line: 59, flags: DIFlagFwdDecl)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1145, file: !440, line: 1246, baseType: !1263, size: 64, offset: 2112)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !440, line: 1067, size: 5184, elements: !1265)
!1265 = !{!1266, !1304, !1305, !1320, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1342, !1358, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1469}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1264, file: !440, line: 1068, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !440, line: 934, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !440, line: 925, size: 576, elements: !1270)
!1270 = !{!1271, !1287, !1288, !1289, !1290, !1291, !1303}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1269, file: !440, line: 926, baseType: !1272, size: 320)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !440, line: 830, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !440, line: 813, size: 320, elements: !1274)
!1274 = !{!1275, !1278, !1281, !1282, !1284, !1285, !1286}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1273, file: !440, line: 814, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !440, line: 51, flags: DIFlagFwdDecl)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1273, file: !440, line: 815, baseType: !1279, size: 64, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !440, line: 815, flags: DIFlagFwdDecl)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1273, file: !440, line: 818, baseType: !76, size: 64, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1273, file: !440, line: 819, baseType: !1283, size: 32, offset: 192)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !895, size: 32, elements: !295)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1273, file: !440, line: 822, baseType: !93, size: 32, offset: 224)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1273, file: !440, line: 826, baseType: !93, size: 32, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1273, file: !440, line: 829, baseType: !93, size: 32, offset: 288)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1269, file: !440, line: 928, baseType: !143, size: 16, offset: 320)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1269, file: !440, line: 928, baseType: !143, size: 16, offset: 336)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1269, file: !440, line: 929, baseType: !93, size: 32, offset: 352)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1269, file: !440, line: 930, baseType: !831, size: 64, offset: 384)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1269, file: !440, line: 931, baseType: !1292, size: 64, offset: 448)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !664, line: 59, size: 128, elements: !1294)
!1294 = !{!1295, !1301, !1302}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1293, file: !664, line: 60, baseType: !1296, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !664, line: 54, size: 64, elements: !1298)
!1298 = !{!1299, !1300}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1297, file: !664, line: 55, baseType: !93, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1297, file: !664, line: 56, baseType: !84, size: 32, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1293, file: !664, line: 61, baseType: !93, size: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1293, file: !664, line: 62, baseType: !93, size: 32, offset: 96)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1269, file: !440, line: 933, baseType: !76, size: 64, offset: 512)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1264, file: !440, line: 1069, baseType: !1267, size: 64, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1264, file: !440, line: 1070, baseType: !1306, size: 64, offset: 128)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !440, line: 916, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !440, line: 891, size: 704, elements: !1309)
!1309 = !{!1310, !1311, !1312, !1314, !1315, !1316, !1317, !1318, !1319}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1308, file: !440, line: 892, baseType: !1272, size: 320)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1308, file: !440, line: 896, baseType: !93, size: 32, offset: 320)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1308, file: !440, line: 900, baseType: !1313, size: 96, offset: 352)
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 96, elements: !85)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1308, file: !440, line: 903, baseType: !84, size: 32, offset: 448)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1308, file: !440, line: 906, baseType: !93, size: 32, offset: 480)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1308, file: !440, line: 909, baseType: !84, size: 32, offset: 512)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1308, file: !440, line: 912, baseType: !84, size: 32, offset: 544)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1308, file: !440, line: 914, baseType: !347, size: 64, offset: 576)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1308, file: !440, line: 915, baseType: !76, size: 64, offset: 640)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1264, file: !440, line: 1071, baseType: !1321, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !440, line: 920, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !440, line: 918, size: 320, elements: !1324)
!1324 = !{!1325}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1323, file: !440, line: 919, baseType: !1272, size: 320)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1264, file: !440, line: 1075, baseType: !84, size: 32, offset: 256)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1264, file: !440, line: 1077, baseType: !84, size: 32, offset: 288)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1264, file: !440, line: 1078, baseType: !84, size: 32, offset: 320)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1264, file: !440, line: 1079, baseType: !143, size: 16, offset: 352)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1264, file: !440, line: 1082, baseType: !143, size: 16, offset: 368)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1264, file: !440, line: 1085, baseType: !130, size: 8, offset: 384)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1264, file: !440, line: 1086, baseType: !130, size: 8, offset: 392)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1264, file: !440, line: 1087, baseType: !130, size: 8, offset: 400)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1264, file: !440, line: 1088, baseType: !130, size: 8, offset: 408)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1264, file: !440, line: 1090, baseType: !84, size: 32, offset: 416)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1264, file: !440, line: 1093, baseType: !143, size: 16, offset: 448)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1264, file: !440, line: 1096, baseType: !130, size: 8, offset: 464)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1264, file: !440, line: 1098, baseType: !1339, size: 40, offset: 472)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 40, elements: !1340)
!1340 = !{!1341}
!1341 = !DISubrange(count: 5)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1264, file: !440, line: 1101, baseType: !1343, size: 832, offset: 512)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !440, line: 836, size: 832, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1343, file: !440, line: 837, baseType: !1272, size: 320)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1343, file: !440, line: 839, baseType: !143, size: 16, offset: 320)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1343, file: !440, line: 839, baseType: !143, size: 16, offset: 336)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1343, file: !440, line: 842, baseType: !143, size: 16, offset: 352)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1343, file: !440, line: 842, baseType: !143, size: 16, offset: 368)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1343, file: !440, line: 843, baseType: !1027, size: 32, offset: 384)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1343, file: !440, line: 845, baseType: !93, size: 32, offset: 416)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1343, file: !440, line: 847, baseType: !76, size: 64, offset: 448)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1343, file: !440, line: 848, baseType: !923, size: 64, offset: 512)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1343, file: !440, line: 849, baseType: !923, size: 64, offset: 576)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1343, file: !440, line: 850, baseType: !923, size: 64, offset: 640)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1343, file: !440, line: 851, baseType: !83, size: 96, offset: 704)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1343, file: !440, line: 852, baseType: !84, size: 32, offset: 800)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1264, file: !440, line: 1104, baseType: !1359, size: 1344, offset: 1344)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !440, line: 867, size: 1344, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364, !1365, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1359, file: !440, line: 868, baseType: !143, size: 16)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1359, file: !440, line: 869, baseType: !143, size: 16, offset: 16)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1359, file: !440, line: 870, baseType: !143, size: 16, offset: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1359, file: !440, line: 871, baseType: !143, size: 16, offset: 48)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1359, file: !440, line: 873, baseType: !1366, size: 896, offset: 64)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1367, size: 896, elements: !1054)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !440, line: 864, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !440, line: 859, size: 128, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1373, !1374, !1375}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1368, file: !440, line: 860, baseType: !143, size: 16)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1368, file: !440, line: 861, baseType: !143, size: 16, offset: 16)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1368, file: !440, line: 861, baseType: !143, size: 16, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1368, file: !440, line: 861, baseType: !143, size: 16, offset: 48)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1368, file: !440, line: 862, baseType: !93, size: 32, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1368, file: !440, line: 863, baseType: !84, size: 32, offset: 96)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1359, file: !440, line: 874, baseType: !76, size: 64, offset: 960)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1359, file: !440, line: 876, baseType: !84, size: 32, offset: 1024)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1359, file: !440, line: 876, baseType: !84, size: 32, offset: 1056)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1359, file: !440, line: 878, baseType: !93, size: 32, offset: 1088)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1359, file: !440, line: 879, baseType: !93, size: 32, offset: 1120)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1359, file: !440, line: 881, baseType: !93, size: 32, offset: 1152)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1359, file: !440, line: 881, baseType: !93, size: 32, offset: 1184)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1359, file: !440, line: 883, baseType: !1144, size: 64, offset: 1216)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1359, file: !440, line: 884, baseType: !347, size: 64, offset: 1280)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1264, file: !440, line: 1107, baseType: !84, size: 32, offset: 2688)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1264, file: !440, line: 1110, baseType: !84, size: 32, offset: 2720)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1264, file: !440, line: 1113, baseType: !143, size: 16, offset: 2752)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1264, file: !440, line: 1113, baseType: !143, size: 16, offset: 2768)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1264, file: !440, line: 1116, baseType: !130, size: 8, offset: 2784)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1264, file: !440, line: 1117, baseType: !312, size: 8, offset: 2792)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1264, file: !440, line: 1120, baseType: !143, size: 16, offset: 2800)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1264, file: !440, line: 1121, baseType: !84, size: 32, offset: 2816)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1264, file: !440, line: 1122, baseType: !84, size: 32, offset: 2848)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1264, file: !440, line: 1123, baseType: !84, size: 32, offset: 2880)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1264, file: !440, line: 1124, baseType: !84, size: 32, offset: 2912)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1264, file: !440, line: 1125, baseType: !84, size: 32, offset: 2944)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1264, file: !440, line: 1126, baseType: !84, size: 32, offset: 2976)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1264, file: !440, line: 1127, baseType: !84, size: 32, offset: 3008)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1264, file: !440, line: 1128, baseType: !84, size: 32, offset: 3040)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1264, file: !440, line: 1129, baseType: !84, size: 32, offset: 3072)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1264, file: !440, line: 1130, baseType: !84, size: 32, offset: 3104)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1264, file: !440, line: 1131, baseType: !143, size: 16, offset: 3136)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1264, file: !440, line: 1132, baseType: !130, size: 8, offset: 3152)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1264, file: !440, line: 1133, baseType: !130, size: 8, offset: 3160)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1264, file: !440, line: 1134, baseType: !1406, size: 24, offset: 3168)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 24, elements: !85)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1264, file: !440, line: 1135, baseType: !130, size: 8, offset: 3192)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1264, file: !440, line: 1138, baseType: !347, size: 64, offset: 3200)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1264, file: !440, line: 1139, baseType: !130, size: 8, offset: 3264)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1264, file: !440, line: 1140, baseType: !130, size: 8, offset: 3272)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1264, file: !440, line: 1141, baseType: !130, size: 8, offset: 3280)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1264, file: !440, line: 1142, baseType: !130, size: 8, offset: 3288)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1264, file: !440, line: 1143, baseType: !130, size: 8, offset: 3296)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1264, file: !440, line: 1144, baseType: !1415, size: 64, offset: 3304)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 64, elements: !1001)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1264, file: !440, line: 1145, baseType: !1415, size: 64, offset: 3368)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1264, file: !440, line: 1148, baseType: !130, size: 8, offset: 3432)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1264, file: !440, line: 1149, baseType: !130, size: 8, offset: 3440)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1264, file: !440, line: 1152, baseType: !130, size: 8, offset: 3448)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1264, file: !440, line: 1152, baseType: !130, size: 8, offset: 3456)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1264, file: !440, line: 1153, baseType: !130, size: 8, offset: 3464)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1264, file: !440, line: 1154, baseType: !143, size: 16, offset: 3472)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1264, file: !440, line: 1154, baseType: !143, size: 16, offset: 3488)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1264, file: !440, line: 1155, baseType: !143, size: 16, offset: 3504)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1264, file: !440, line: 1155, baseType: !143, size: 16, offset: 3520)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1264, file: !440, line: 1156, baseType: !130, size: 8, offset: 3536)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1264, file: !440, line: 1157, baseType: !130, size: 8, offset: 3544)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1264, file: !440, line: 1159, baseType: !130, size: 8, offset: 3552)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1264, file: !440, line: 1160, baseType: !130, size: 8, offset: 3560)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1264, file: !440, line: 1161, baseType: !130, size: 8, offset: 3568)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1264, file: !440, line: 1162, baseType: !130, size: 8, offset: 3576)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1264, file: !440, line: 1165, baseType: !93, size: 32, offset: 3584)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1264, file: !440, line: 1166, baseType: !93, size: 32, offset: 3616)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1264, file: !440, line: 1167, baseType: !93, size: 32, offset: 3648)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1264, file: !440, line: 1168, baseType: !93, size: 32, offset: 3680)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1264, file: !440, line: 1171, baseType: !143, size: 16, offset: 3712)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1264, file: !440, line: 1171, baseType: !143, size: 16, offset: 3728)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1264, file: !440, line: 1172, baseType: !93, size: 32, offset: 3744)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1264, file: !440, line: 1173, baseType: !84, size: 32, offset: 3776)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1264, file: !440, line: 1174, baseType: !84, size: 32, offset: 3808)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1264, file: !440, line: 1177, baseType: !1442, size: 1024, offset: 3840)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !440, line: 963, size: 1024, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1467, !1468}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1442, file: !440, line: 965, baseType: !93, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1442, file: !440, line: 968, baseType: !84, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1442, file: !440, line: 971, baseType: !84, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1442, file: !440, line: 974, baseType: !84, size: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1442, file: !440, line: 977, baseType: !83, size: 96, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1442, file: !440, line: 979, baseType: !83, size: 96, offset: 224)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1442, file: !440, line: 982, baseType: !93, size: 32, offset: 320)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1442, file: !440, line: 987, baseType: !1137, size: 64, offset: 352)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1442, file: !440, line: 989, baseType: !84, size: 32, offset: 416)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1442, file: !440, line: 994, baseType: !93, size: 32, offset: 448)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1442, file: !440, line: 995, baseType: !93, size: 32, offset: 480)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1442, file: !440, line: 997, baseType: !130, size: 8, offset: 512)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1442, file: !440, line: 998, baseType: !1053, size: 56, offset: 520)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1442, file: !440, line: 1000, baseType: !84, size: 32, offset: 576)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1442, file: !440, line: 1003, baseType: !1137, size: 64, offset: 608)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1442, file: !440, line: 1006, baseType: !93, size: 32, offset: 672)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1442, file: !440, line: 1009, baseType: !84, size: 32, offset: 704)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1442, file: !440, line: 1012, baseType: !1137, size: 64, offset: 736)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1442, file: !440, line: 1015, baseType: !1137, size: 64, offset: 800)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1442, file: !440, line: 1018, baseType: !93, size: 32, offset: 864)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1442, file: !440, line: 1019, baseType: !1465, size: 64, offset: 896)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !440, line: 63, flags: DIFlagFwdDecl)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1442, file: !440, line: 1023, baseType: !84, size: 32, offset: 960)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1442, file: !440, line: 1024, baseType: !93, size: 32, offset: 992)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1264, file: !440, line: 1179, baseType: !1470, size: 320, offset: 4864)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !440, line: 1043, size: 320, elements: !1471)
!1471 = !{!1472, !1473, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1470, file: !440, line: 1044, baseType: !130, size: 8)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1470, file: !440, line: 1045, baseType: !1474, size: 16, offset: 8)
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 16, elements: !1024)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1470, file: !440, line: 1048, baseType: !130, size: 8, offset: 24)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1470, file: !440, line: 1049, baseType: !84, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1470, file: !440, line: 1049, baseType: !84, size: 32, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1470, file: !440, line: 1052, baseType: !84, size: 32, offset: 96)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1470, file: !440, line: 1052, baseType: !84, size: 32, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1470, file: !440, line: 1053, baseType: !130, size: 8, offset: 160)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1470, file: !440, line: 1054, baseType: !1406, size: 24, offset: 168)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1470, file: !440, line: 1057, baseType: !84, size: 32, offset: 192)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1470, file: !440, line: 1057, baseType: !84, size: 32, offset: 224)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1470, file: !440, line: 1060, baseType: !84, size: 32, offset: 256)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1470, file: !440, line: 1060, baseType: !84, size: 32, offset: 288)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1145, file: !440, line: 1247, baseType: !1487, size: 64, offset: 2176)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !440, line: 60, flags: DIFlagFwdDecl)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1145, file: !440, line: 1251, baseType: !1490, size: 31872, offset: 2240)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !440, line: 403, size: 31872, elements: !1491)
!1491 = !{!1492, !1574, !1594, !1603, !1623, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1757, !1758, !1759, !1761, !1777, !1778}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1490, file: !440, line: 404, baseType: !1493, size: 1984)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !440, line: 259, size: 1984, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1512, !1569}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1493, file: !440, line: 260, baseType: !130, size: 8)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1493, file: !440, line: 263, baseType: !130, size: 8, offset: 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1493, file: !440, line: 266, baseType: !130, size: 8, offset: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1493, file: !440, line: 267, baseType: !130, size: 8, offset: 24)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1493, file: !440, line: 269, baseType: !130, size: 8, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1493, file: !440, line: 270, baseType: !130, size: 8, offset: 40)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1493, file: !440, line: 276, baseType: !130, size: 8, offset: 48)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1493, file: !440, line: 279, baseType: !130, size: 8, offset: 56)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1493, file: !440, line: 280, baseType: !143, size: 16, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1493, file: !440, line: 280, baseType: !143, size: 16, offset: 80)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1493, file: !440, line: 281, baseType: !84, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1493, file: !440, line: 284, baseType: !130, size: 8, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1493, file: !440, line: 285, baseType: !130, size: 8, offset: 136)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1493, file: !440, line: 287, baseType: !1509, size: 48, offset: 144)
!1509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 48, elements: !1510)
!1510 = !{!1511}
!1511 = !DISubrange(count: 6)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1493, file: !440, line: 290, baseType: !1513, size: 1280, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1047, line: 174, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1047, line: 166, size: 1280, elements: !1515)
!1515 = !{!1516, !1517, !1518, !1519, !1520, !1521, !1522, !1568}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1514, file: !1047, line: 167, baseType: !93, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1514, file: !1047, line: 167, baseType: !93, size: 32, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1514, file: !1047, line: 168, baseType: !159, size: 512, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1514, file: !1047, line: 169, baseType: !159, size: 512, offset: 576)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1514, file: !1047, line: 170, baseType: !84, size: 32, offset: 1088)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1514, file: !1047, line: 171, baseType: !84, size: 32, offset: 1120)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1514, file: !1047, line: 172, baseType: !1523, size: 64, offset: 1152)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1047, line: 72, size: 3072, elements: !1525)
!1525 = !{!1526, !1527, !1528, !1529, !1530, !1538, !1539, !1564, !1565, !1566, !1567}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1524, file: !1047, line: 73, baseType: !93, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1524, file: !1047, line: 73, baseType: !93, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1524, file: !1047, line: 74, baseType: !93, size: 32, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1524, file: !1047, line: 75, baseType: !93, size: 32, offset: 96)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1524, file: !1047, line: 77, baseType: !1531, size: 128, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !954, line: 95, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !954, line: 92, size: 128, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1537}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1532, file: !954, line: 93, baseType: !84, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1532, file: !954, line: 93, baseType: !84, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1532, file: !954, line: 94, baseType: !84, size: 32, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1532, file: !954, line: 94, baseType: !84, size: 32, offset: 96)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1524, file: !1047, line: 77, baseType: !1531, size: 128, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1524, file: !1047, line: 79, baseType: !1540, size: 2304, offset: 384)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1541, size: 2304, elements: !295)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1047, line: 67, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1047, line: 55, size: 576, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1560, !1561, !1562, !1563}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1542, file: !1047, line: 56, baseType: !143, size: 16)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1542, file: !1047, line: 56, baseType: !143, size: 16, offset: 16)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1542, file: !1047, line: 58, baseType: !84, size: 32, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1542, file: !1047, line: 59, baseType: !84, size: 32, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1542, file: !1047, line: 59, baseType: !84, size: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1542, file: !1047, line: 60, baseType: !1137, size: 64, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1542, file: !1047, line: 60, baseType: !1137, size: 64, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1542, file: !1047, line: 61, baseType: !1552, size: 64, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1047, line: 47, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1047, line: 44, size: 96, elements: !1555)
!1555 = !{!1556, !1557, !1558, !1559}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1554, file: !1047, line: 45, baseType: !84, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1554, file: !1047, line: 45, baseType: !84, size: 32, offset: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1554, file: !1047, line: 46, baseType: !143, size: 16, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1554, file: !1047, line: 46, baseType: !143, size: 16, offset: 80)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1542, file: !1047, line: 62, baseType: !1552, size: 64, offset: 320)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1542, file: !1047, line: 64, baseType: !1552, size: 64, offset: 384)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1542, file: !1047, line: 65, baseType: !1137, size: 64, offset: 448)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1542, file: !1047, line: 66, baseType: !1137, size: 64, offset: 512)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1524, file: !1047, line: 80, baseType: !83, size: 96, offset: 2688)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1524, file: !1047, line: 80, baseType: !83, size: 96, offset: 2784)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1524, file: !1047, line: 81, baseType: !83, size: 96, offset: 2880)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1524, file: !1047, line: 83, baseType: !83, size: 96, offset: 2976)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1514, file: !1047, line: 173, baseType: !76, size: 64, offset: 1216)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1493, file: !440, line: 291, baseType: !1570, size: 512, offset: 1472)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1047, line: 178, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1047, line: 176, size: 512, elements: !1572)
!1572 = !{!1573}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1571, file: !1047, line: 177, baseType: !159, size: 512)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1490, file: !440, line: 406, baseType: !1575, size: 64, offset: 1984)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !440, line: 80, size: 1472, elements: !1577)
!1577 = !{!1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1576, file: !440, line: 81, baseType: !76, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1576, file: !440, line: 82, baseType: !76, size: 64, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1576, file: !440, line: 83, baseType: !5, size: 32, offset: 128)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1576, file: !440, line: 84, baseType: !5, size: 32, offset: 160)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1576, file: !440, line: 86, baseType: !5, size: 32, offset: 192)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1576, file: !440, line: 87, baseType: !5, size: 32, offset: 224)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1576, file: !440, line: 88, baseType: !5, size: 32, offset: 256)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1576, file: !440, line: 89, baseType: !5, size: 32, offset: 288)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1576, file: !440, line: 90, baseType: !5, size: 32, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1576, file: !440, line: 91, baseType: !5, size: 32, offset: 352)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1576, file: !440, line: 92, baseType: !5, size: 32, offset: 384)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1576, file: !440, line: 93, baseType: !5, size: 32, offset: 416)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1576, file: !440, line: 95, baseType: !1591, size: 1024, offset: 448)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 1024, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1490, file: !440, line: 407, baseType: !1595, size: 64, offset: 2048)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !440, line: 98, size: 1216, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601, !1602}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1596, file: !440, line: 100, baseType: !76, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1596, file: !440, line: 101, baseType: !76, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1596, file: !440, line: 103, baseType: !5, size: 32, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1596, file: !440, line: 104, baseType: !5, size: 32, offset: 160)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1596, file: !440, line: 106, baseType: !1591, size: 1024, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1490, file: !440, line: 408, baseType: !1604, size: 512, offset: 2112)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !440, line: 109, size: 512, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1604, file: !440, line: 111, baseType: !93, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1604, file: !440, line: 112, baseType: !93, size: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1604, file: !440, line: 115, baseType: !93, size: 32, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1604, file: !440, line: 116, baseType: !93, size: 32, offset: 96)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1604, file: !440, line: 117, baseType: !93, size: 32, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1604, file: !440, line: 118, baseType: !93, size: 32, offset: 160)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1604, file: !440, line: 119, baseType: !93, size: 32, offset: 192)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1604, file: !440, line: 120, baseType: !93, size: 32, offset: 224)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1604, file: !440, line: 121, baseType: !93, size: 32, offset: 256)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1604, file: !440, line: 122, baseType: !93, size: 32, offset: 288)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1604, file: !440, line: 125, baseType: !93, size: 32, offset: 320)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1604, file: !440, line: 126, baseType: !93, size: 32, offset: 352)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1604, file: !440, line: 127, baseType: !143, size: 16, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1604, file: !440, line: 128, baseType: !143, size: 16, offset: 400)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1604, file: !440, line: 129, baseType: !93, size: 32, offset: 416)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1604, file: !440, line: 130, baseType: !93, size: 32, offset: 448)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1604, file: !440, line: 131, baseType: !93, size: 32, offset: 480)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1490, file: !440, line: 409, baseType: !1624, size: 576, offset: 2624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !440, line: 134, size: 576, elements: !1625)
!1625 = !{!1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1624, file: !440, line: 135, baseType: !93, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1624, file: !440, line: 136, baseType: !93, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1624, file: !440, line: 137, baseType: !93, size: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1624, file: !440, line: 138, baseType: !93, size: 32, offset: 96)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1624, file: !440, line: 139, baseType: !93, size: 32, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1624, file: !440, line: 140, baseType: !93, size: 32, offset: 160)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1624, file: !440, line: 141, baseType: !93, size: 32, offset: 192)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1624, file: !440, line: 142, baseType: !93, size: 32, offset: 224)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1624, file: !440, line: 143, baseType: !84, size: 32, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1624, file: !440, line: 144, baseType: !93, size: 32, offset: 288)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1624, file: !440, line: 145, baseType: !93, size: 32, offset: 320)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1624, file: !440, line: 147, baseType: !93, size: 32, offset: 352)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1624, file: !440, line: 148, baseType: !93, size: 32, offset: 384)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1624, file: !440, line: 149, baseType: !93, size: 32, offset: 416)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1624, file: !440, line: 150, baseType: !93, size: 32, offset: 448)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1624, file: !440, line: 151, baseType: !93, size: 32, offset: 480)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1624, file: !440, line: 152, baseType: !148, size: 64, offset: 512)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1490, file: !440, line: 411, baseType: !93, size: 32, offset: 3200)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1490, file: !440, line: 411, baseType: !93, size: 32, offset: 3232)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1490, file: !440, line: 411, baseType: !93, size: 32, offset: 3264)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1490, file: !440, line: 412, baseType: !84, size: 32, offset: 3296)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1490, file: !440, line: 413, baseType: !93, size: 32, offset: 3328)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1490, file: !440, line: 413, baseType: !93, size: 32, offset: 3360)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1490, file: !440, line: 415, baseType: !93, size: 32, offset: 3392)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1490, file: !440, line: 415, baseType: !93, size: 32, offset: 3424)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1490, file: !440, line: 416, baseType: !143, size: 16, offset: 3456)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1490, file: !440, line: 416, baseType: !143, size: 16, offset: 3472)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1490, file: !440, line: 418, baseType: !84, size: 32, offset: 3488)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1490, file: !440, line: 418, baseType: !84, size: 32, offset: 3520)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1490, file: !440, line: 421, baseType: !84, size: 32, offset: 3552)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1490, file: !440, line: 421, baseType: !84, size: 32, offset: 3584)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1490, file: !440, line: 421, baseType: !84, size: 32, offset: 3616)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1490, file: !440, line: 425, baseType: !143, size: 16, offset: 3648)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1490, file: !440, line: 425, baseType: !143, size: 16, offset: 3664)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1490, file: !440, line: 425, baseType: !143, size: 16, offset: 3680)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1490, file: !440, line: 426, baseType: !143, size: 16, offset: 3696)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1490, file: !440, line: 428, baseType: !143, size: 16, offset: 3712)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1490, file: !440, line: 428, baseType: !143, size: 16, offset: 3728)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1490, file: !440, line: 431, baseType: !93, size: 32, offset: 3744)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1490, file: !440, line: 433, baseType: !143, size: 16, offset: 3776)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1490, file: !440, line: 435, baseType: !143, size: 16, offset: 3792)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1490, file: !440, line: 437, baseType: !143, size: 16, offset: 3808)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1490, file: !440, line: 439, baseType: !143, size: 16, offset: 3824)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1490, file: !440, line: 441, baseType: !143, size: 16, offset: 3840)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1490, file: !440, line: 443, baseType: !143, size: 16, offset: 3856)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1490, file: !440, line: 449, baseType: !93, size: 32, offset: 3872)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1490, file: !440, line: 453, baseType: !93, size: 32, offset: 3904)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1490, file: !440, line: 458, baseType: !143, size: 16, offset: 3936)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1490, file: !440, line: 462, baseType: !143, size: 16, offset: 3952)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1490, file: !440, line: 467, baseType: !93, size: 32, offset: 3968)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1490, file: !440, line: 467, baseType: !93, size: 32, offset: 4000)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1490, file: !440, line: 469, baseType: !143, size: 16, offset: 4032)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1490, file: !440, line: 469, baseType: !143, size: 16, offset: 4048)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1490, file: !440, line: 469, baseType: !143, size: 16, offset: 4064)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1490, file: !440, line: 469, baseType: !143, size: 16, offset: 4080)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1490, file: !440, line: 474, baseType: !143, size: 16, offset: 4096)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1490, file: !440, line: 475, baseType: !130, size: 8, offset: 4112)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1490, file: !440, line: 476, baseType: !130, size: 8, offset: 4120)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1490, file: !440, line: 481, baseType: !93, size: 32, offset: 4128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1490, file: !440, line: 486, baseType: !93, size: 32, offset: 4160)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1490, file: !440, line: 491, baseType: !93, size: 32, offset: 4192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1490, file: !440, line: 496, baseType: !143, size: 16, offset: 4224)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1490, file: !440, line: 498, baseType: !143, size: 16, offset: 4240)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1490, file: !440, line: 501, baseType: !143, size: 16, offset: 4256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1490, file: !440, line: 502, baseType: !143, size: 16, offset: 4272)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1490, file: !440, line: 508, baseType: !143, size: 16, offset: 4288)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1490, file: !440, line: 513, baseType: !143, size: 16, offset: 4304)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1490, file: !440, line: 515, baseType: !143, size: 16, offset: 4320)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1490, file: !440, line: 515, baseType: !143, size: 16, offset: 4336)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1490, file: !440, line: 519, baseType: !1531, size: 128, offset: 4352)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1490, file: !440, line: 519, baseType: !1531, size: 128, offset: 4480)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1490, file: !440, line: 520, baseType: !953, size: 128, offset: 4608)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1490, file: !440, line: 523, baseType: !169, size: 128, offset: 4736)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1490, file: !440, line: 524, baseType: !143, size: 16, offset: 4864)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1490, file: !440, line: 527, baseType: !143, size: 16, offset: 4880)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1490, file: !440, line: 532, baseType: !84, size: 32, offset: 4896)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1490, file: !440, line: 532, baseType: !84, size: 32, offset: 4928)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1490, file: !440, line: 534, baseType: !84, size: 32, offset: 4960)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1490, file: !440, line: 538, baseType: !84, size: 32, offset: 4992)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1490, file: !440, line: 542, baseType: !93, size: 32, offset: 5024)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1490, file: !440, line: 545, baseType: !84, size: 32, offset: 5056)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1490, file: !440, line: 545, baseType: !84, size: 32, offset: 5088)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1490, file: !440, line: 545, baseType: !84, size: 32, offset: 5120)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1490, file: !440, line: 548, baseType: !84, size: 32, offset: 5152)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1490, file: !440, line: 551, baseType: !143, size: 16, offset: 5184)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1490, file: !440, line: 551, baseType: !143, size: 16, offset: 5200)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1490, file: !440, line: 551, baseType: !143, size: 16, offset: 5216)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1490, file: !440, line: 551, baseType: !143, size: 16, offset: 5232)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1490, file: !440, line: 552, baseType: !143, size: 16, offset: 5248)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1490, file: !440, line: 552, baseType: !143, size: 16, offset: 5264)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1490, file: !440, line: 553, baseType: !84, size: 32, offset: 5280)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1490, file: !440, line: 553, baseType: !84, size: 32, offset: 5312)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1490, file: !440, line: 554, baseType: !143, size: 16, offset: 5344)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1490, file: !440, line: 554, baseType: !143, size: 16, offset: 5360)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1490, file: !440, line: 555, baseType: !84, size: 32, offset: 5376)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1490, file: !440, line: 555, baseType: !84, size: 32, offset: 5408)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1490, file: !440, line: 558, baseType: !129, size: 8192, offset: 5440)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1490, file: !440, line: 561, baseType: !93, size: 32, offset: 13632)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1490, file: !440, line: 562, baseType: !143, size: 16, offset: 13664)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1490, file: !440, line: 562, baseType: !143, size: 16, offset: 13680)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1490, file: !440, line: 565, baseType: !1727, size: 6144, offset: 13696)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 6144, elements: !1728)
!1728 = !{!1729}
!1729 = !DISubrange(count: 768)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1490, file: !440, line: 568, baseType: !294, size: 128, offset: 19840)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1490, file: !440, line: 569, baseType: !294, size: 128, offset: 19968)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1490, file: !440, line: 572, baseType: !130, size: 8, offset: 20096)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1490, file: !440, line: 573, baseType: !130, size: 8, offset: 20104)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1490, file: !440, line: 574, baseType: !130, size: 8, offset: 20112)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1490, file: !440, line: 575, baseType: !1339, size: 40, offset: 20120)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1490, file: !440, line: 578, baseType: !93, size: 32, offset: 20160)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1490, file: !440, line: 579, baseType: !143, size: 16, offset: 20192)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1490, file: !440, line: 580, baseType: !143, size: 16, offset: 20208)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1490, file: !440, line: 581, baseType: !84, size: 32, offset: 20224)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1490, file: !440, line: 582, baseType: !84, size: 32, offset: 20256)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1490, file: !440, line: 585, baseType: !143, size: 16, offset: 20288)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1490, file: !440, line: 585, baseType: !143, size: 16, offset: 20304)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1490, file: !440, line: 586, baseType: !84, size: 32, offset: 20320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1490, file: !440, line: 589, baseType: !143, size: 16, offset: 20352)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1490, file: !440, line: 589, baseType: !143, size: 16, offset: 20368)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1490, file: !440, line: 590, baseType: !93, size: 32, offset: 20384)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1490, file: !440, line: 593, baseType: !143, size: 16, offset: 20416)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1490, file: !440, line: 593, baseType: !143, size: 16, offset: 20432)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1490, file: !440, line: 594, baseType: !143, size: 16, offset: 20448)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1490, file: !440, line: 594, baseType: !143, size: 16, offset: 20464)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1490, file: !440, line: 595, baseType: !84, size: 32, offset: 20480)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1490, file: !440, line: 596, baseType: !84, size: 32, offset: 20512)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1490, file: !440, line: 597, baseType: !1754, size: 64, offset: 20544)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1756, line: 44, flags: DIFlagFwdDecl)
!1756 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1490, file: !440, line: 600, baseType: !93, size: 32, offset: 20608)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1490, file: !440, line: 601, baseType: !84, size: 32, offset: 20640)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1490, file: !440, line: 604, baseType: !1760, size: 256, offset: 20672)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 256, elements: !326)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1490, file: !440, line: 607, baseType: !1762, size: 10880, offset: 20928)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !440, line: 364, size: 10880, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1762, file: !440, line: 365, baseType: !1493, size: 1984)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1762, file: !440, line: 367, baseType: !129, size: 8192, offset: 1984)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1762, file: !440, line: 369, baseType: !143, size: 16, offset: 10176)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1762, file: !440, line: 369, baseType: !143, size: 16, offset: 10192)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1762, file: !440, line: 370, baseType: !143, size: 16, offset: 10208)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1762, file: !440, line: 370, baseType: !143, size: 16, offset: 10224)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1762, file: !440, line: 372, baseType: !84, size: 32, offset: 10240)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1762, file: !440, line: 373, baseType: !84, size: 32, offset: 10272)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1762, file: !440, line: 375, baseType: !1406, size: 24, offset: 10304)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1762, file: !440, line: 376, baseType: !130, size: 8, offset: 10328)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1762, file: !440, line: 378, baseType: !130, size: 8, offset: 10336)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1762, file: !440, line: 379, baseType: !1406, size: 24, offset: 10344)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1762, file: !440, line: 381, baseType: !159, size: 512, offset: 10368)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1490, file: !440, line: 609, baseType: !93, size: 32, offset: 31808)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1490, file: !440, line: 610, baseType: !93, size: 32, offset: 31840)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1145, file: !440, line: 1252, baseType: !1780, size: 256, offset: 34112)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !440, line: 158, size: 256, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1780, file: !440, line: 159, baseType: !93, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1780, file: !440, line: 160, baseType: !84, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1780, file: !440, line: 161, baseType: !84, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1780, file: !440, line: 162, baseType: !84, size: 32, offset: 96)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1780, file: !440, line: 163, baseType: !93, size: 32, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1780, file: !440, line: 164, baseType: !143, size: 16, offset: 160)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1780, file: !440, line: 165, baseType: !143, size: 16, offset: 176)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1780, file: !440, line: 166, baseType: !84, size: 32, offset: 192)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1780, file: !440, line: 167, baseType: !84, size: 32, offset: 224)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1145, file: !440, line: 1254, baseType: !169, size: 128, offset: 34368)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1145, file: !440, line: 1255, baseType: !169, size: 128, offset: 34496)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1145, file: !440, line: 1257, baseType: !76, size: 64, offset: 34624)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1145, file: !440, line: 1258, baseType: !76, size: 64, offset: 34688)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1145, file: !440, line: 1259, baseType: !76, size: 64, offset: 34752)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1145, file: !440, line: 1260, baseType: !76, size: 64, offset: 34816)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1145, file: !440, line: 1262, baseType: !76, size: 64, offset: 34880)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1145, file: !440, line: 1265, baseType: !1799, size: 64, offset: 34944)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !440, line: 1265, flags: DIFlagFwdDecl)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1145, file: !440, line: 1266, baseType: !143, size: 16, offset: 35008)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1145, file: !440, line: 1267, baseType: !143, size: 16, offset: 35024)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1145, file: !440, line: 1270, baseType: !93, size: 32, offset: 35040)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1145, file: !440, line: 1271, baseType: !169, size: 128, offset: 35072)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1145, file: !440, line: 1274, baseType: !1806, size: 128, offset: 35200)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !440, line: 650, size: 128, elements: !1807)
!1807 = !{!1808, !1809, !1810, !1811, !1812}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1806, file: !440, line: 651, baseType: !83, size: 96)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1806, file: !440, line: 652, baseType: !130, size: 8, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1806, file: !440, line: 652, baseType: !130, size: 8, offset: 104)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1806, file: !440, line: 652, baseType: !130, size: 8, offset: 112)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1806, file: !440, line: 652, baseType: !130, size: 8, offset: 120)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1145, file: !440, line: 1275, baseType: !1814, size: 1472, offset: 35328)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !440, line: 676, size: 1472, elements: !1815)
!1815 = !{!1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1837, !1838, !1839, !1840, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1814, file: !440, line: 679, baseType: !1806, size: 128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1814, file: !440, line: 680, baseType: !143, size: 16, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1814, file: !440, line: 680, baseType: !143, size: 16, offset: 144)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1814, file: !440, line: 680, baseType: !143, size: 16, offset: 160)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1814, file: !440, line: 680, baseType: !143, size: 16, offset: 176)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1814, file: !440, line: 681, baseType: !143, size: 16, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1814, file: !440, line: 681, baseType: !143, size: 16, offset: 208)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1814, file: !440, line: 681, baseType: !143, size: 16, offset: 224)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1814, file: !440, line: 681, baseType: !143, size: 16, offset: 240)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1814, file: !440, line: 682, baseType: !143, size: 16, offset: 256)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1814, file: !440, line: 682, baseType: !668, size: 48, offset: 272)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1814, file: !440, line: 685, baseType: !1828, size: 192, offset: 320)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !440, line: 633, size: 192, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1834, !1835, !1836}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1828, file: !440, line: 634, baseType: !143, size: 16)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1828, file: !440, line: 634, baseType: !143, size: 16, offset: 16)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1828, file: !440, line: 635, baseType: !143, size: 16, offset: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1828, file: !440, line: 635, baseType: !143, size: 16, offset: 48)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1828, file: !440, line: 636, baseType: !84, size: 32, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1828, file: !440, line: 636, baseType: !84, size: 32, offset: 96)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1828, file: !440, line: 637, baseType: !1754, size: 64, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1814, file: !440, line: 686, baseType: !143, size: 16, offset: 512)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1814, file: !440, line: 686, baseType: !143, size: 16, offset: 528)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1814, file: !440, line: 687, baseType: !84, size: 32, offset: 544)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1814, file: !440, line: 688, baseType: !1841, size: 448, offset: 576)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !440, line: 674, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !440, line: 659, size: 448, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1842, file: !440, line: 660, baseType: !84, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1842, file: !440, line: 661, baseType: !84, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1842, file: !440, line: 662, baseType: !84, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1842, file: !440, line: 663, baseType: !84, size: 32, offset: 96)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1842, file: !440, line: 664, baseType: !84, size: 32, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1842, file: !440, line: 665, baseType: !84, size: 32, offset: 160)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1842, file: !440, line: 666, baseType: !84, size: 32, offset: 192)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1842, file: !440, line: 667, baseType: !84, size: 32, offset: 224)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1842, file: !440, line: 668, baseType: !84, size: 32, offset: 256)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1842, file: !440, line: 669, baseType: !84, size: 32, offset: 288)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1842, file: !440, line: 670, baseType: !93, size: 32, offset: 320)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1842, file: !440, line: 671, baseType: !84, size: 32, offset: 352)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1842, file: !440, line: 672, baseType: !84, size: 32, offset: 384)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1842, file: !440, line: 673, baseType: !143, size: 16, offset: 416)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1842, file: !440, line: 673, baseType: !143, size: 16, offset: 432)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1814, file: !440, line: 692, baseType: !84, size: 32, offset: 1024)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1814, file: !440, line: 697, baseType: !84, size: 32, offset: 1056)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1814, file: !440, line: 703, baseType: !93, size: 32, offset: 1088)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1814, file: !440, line: 704, baseType: !143, size: 16, offset: 1120)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1814, file: !440, line: 704, baseType: !143, size: 16, offset: 1136)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1814, file: !440, line: 705, baseType: !143, size: 16, offset: 1152)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1814, file: !440, line: 706, baseType: !143, size: 16, offset: 1168)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1814, file: !440, line: 707, baseType: !143, size: 16, offset: 1184)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1814, file: !440, line: 708, baseType: !143, size: 16, offset: 1200)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1814, file: !440, line: 709, baseType: !143, size: 16, offset: 1216)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1814, file: !440, line: 709, baseType: !143, size: 16, offset: 1232)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1814, file: !440, line: 709, baseType: !143, size: 16, offset: 1248)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1814, file: !440, line: 709, baseType: !143, size: 16, offset: 1264)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1814, file: !440, line: 710, baseType: !143, size: 16, offset: 1280)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1814, file: !440, line: 711, baseType: !143, size: 16, offset: 1296)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1814, file: !440, line: 712, baseType: !84, size: 32, offset: 1312)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1814, file: !440, line: 713, baseType: !84, size: 32, offset: 1344)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1814, file: !440, line: 713, baseType: !84, size: 32, offset: 1376)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1814, file: !440, line: 713, baseType: !84, size: 32, offset: 1408)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1814, file: !440, line: 713, baseType: !84, size: 32, offset: 1440)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1145, file: !440, line: 1278, baseType: !1880, size: 64, offset: 36800)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !440, line: 1197, size: 64, elements: !1881)
!1881 = !{!1882, !1883, !1884, !1885}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1880, file: !440, line: 1199, baseType: !84, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1880, file: !440, line: 1200, baseType: !130, size: 8, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1880, file: !440, line: 1201, baseType: !130, size: 8, offset: 40)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1880, file: !440, line: 1202, baseType: !143, size: 16, offset: 48)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1145, file: !440, line: 1281, baseType: !438, size: 64, offset: 36864)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1145, file: !440, line: 1284, baseType: !1888, size: 192, offset: 36928)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !440, line: 1208, size: 192, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1888, file: !440, line: 1209, baseType: !83, size: 96)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1888, file: !440, line: 1210, baseType: !93, size: 32, offset: 96)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1888, file: !440, line: 1210, baseType: !93, size: 32, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1888, file: !440, line: 1210, baseType: !93, size: 32, offset: 160)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1145, file: !440, line: 1287, baseType: !1895, size: 64, offset: 37120)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !440, line: 62, flags: DIFlagFwdDecl)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1145, file: !440, line: 1289, baseType: !1118, size: 64, offset: 37184)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1145, file: !440, line: 1290, baseType: !1118, size: 64, offset: 37248)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1145, file: !440, line: 1293, baseType: !1513, size: 1280, offset: 37312)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1145, file: !440, line: 1294, baseType: !1570, size: 512, offset: 38592)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1145, file: !440, line: 1295, baseType: !1046, size: 512, offset: 39104)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1145, file: !440, line: 1298, baseType: !1903, size: 64, offset: 39616)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !440, line: 1298, flags: DIFlagFwdDecl)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1141, file: !925, line: 53, baseType: !93, size: 32, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1141, file: !925, line: 54, baseType: !93, size: 32, offset: 96)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1141, file: !925, line: 55, baseType: !93, size: 32, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1141, file: !925, line: 55, baseType: !93, size: 32, offset: 160)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1141, file: !925, line: 56, baseType: !130, size: 8, offset: 192)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1141, file: !925, line: 56, baseType: !130, size: 8, offset: 200)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1141, file: !925, line: 57, baseType: !130, size: 8, offset: 208)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1141, file: !925, line: 57, baseType: !130, size: 8, offset: 216)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1141, file: !925, line: 59, baseType: !143, size: 16, offset: 224)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1141, file: !925, line: 59, baseType: !143, size: 16, offset: 240)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1141, file: !925, line: 59, baseType: !143, size: 16, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1141, file: !925, line: 61, baseType: !143, size: 16, offset: 272)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1141, file: !925, line: 63, baseType: !93, size: 32, offset: 288)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !348, file: !349, line: 293, baseType: !169, size: 128, offset: 11200)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !348, file: !349, line: 294, baseType: !1920, size: 64, offset: 11328)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !349, line: 113, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !349, line: 108, size: 256, elements: !1923)
!1923 = !{!1924, !1926, !1927, !1928, !1929}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1922, file: !349, line: 109, baseType: !1925, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1922, file: !349, line: 109, baseType: !1925, size: 64, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1922, file: !349, line: 110, baseType: !347, size: 64, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1922, file: !349, line: 111, baseType: !93, size: 32, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1922, file: !349, line: 112, baseType: !84, size: 32, offset: 224)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !340, file: !304, line: 61, baseType: !1931, size: 64, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !304, line: 202, size: 3328, elements: !1933)
!1933 = !{!1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !2016, !2017, !2046, !2066, !2074, !2075}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1932, file: !304, line: 203, baseType: !110, size: 960)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1932, file: !304, line: 204, baseType: !180, size: 64, offset: 960)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1932, file: !304, line: 206, baseType: !84, size: 32, offset: 1024)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1932, file: !304, line: 206, baseType: !84, size: 32, offset: 1056)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1932, file: !304, line: 207, baseType: !84, size: 32, offset: 1088)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1932, file: !304, line: 207, baseType: !84, size: 32, offset: 1120)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1932, file: !304, line: 207, baseType: !84, size: 32, offset: 1152)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1932, file: !304, line: 207, baseType: !84, size: 32, offset: 1184)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1932, file: !304, line: 207, baseType: !84, size: 32, offset: 1216)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1932, file: !304, line: 207, baseType: !84, size: 32, offset: 1248)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1932, file: !304, line: 208, baseType: !84, size: 32, offset: 1280)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1932, file: !304, line: 208, baseType: !84, size: 32, offset: 1312)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1932, file: !304, line: 211, baseType: !84, size: 32, offset: 1344)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1932, file: !304, line: 211, baseType: !84, size: 32, offset: 1376)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1932, file: !304, line: 211, baseType: !84, size: 32, offset: 1408)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1932, file: !304, line: 211, baseType: !84, size: 32, offset: 1440)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1932, file: !304, line: 211, baseType: !84, size: 32, offset: 1472)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1932, file: !304, line: 214, baseType: !84, size: 32, offset: 1504)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1932, file: !304, line: 214, baseType: !84, size: 32, offset: 1536)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1932, file: !304, line: 217, baseType: !84, size: 32, offset: 1568)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1932, file: !304, line: 218, baseType: !84, size: 32, offset: 1600)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1932, file: !304, line: 219, baseType: !84, size: 32, offset: 1632)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1932, file: !304, line: 220, baseType: !84, size: 32, offset: 1664)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1932, file: !304, line: 221, baseType: !84, size: 32, offset: 1696)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1932, file: !304, line: 222, baseType: !143, size: 16, offset: 1728)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1932, file: !304, line: 222, baseType: !143, size: 16, offset: 1744)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1932, file: !304, line: 224, baseType: !143, size: 16, offset: 1760)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1932, file: !304, line: 224, baseType: !143, size: 16, offset: 1776)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1932, file: !304, line: 227, baseType: !143, size: 16, offset: 1792)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1932, file: !304, line: 227, baseType: !143, size: 16, offset: 1808)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1932, file: !304, line: 229, baseType: !143, size: 16, offset: 1824)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1932, file: !304, line: 229, baseType: !143, size: 16, offset: 1840)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1932, file: !304, line: 230, baseType: !143, size: 16, offset: 1856)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1932, file: !304, line: 230, baseType: !143, size: 16, offset: 1872)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1932, file: !304, line: 232, baseType: !84, size: 32, offset: 1888)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1932, file: !304, line: 232, baseType: !84, size: 32, offset: 1920)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1932, file: !304, line: 232, baseType: !84, size: 32, offset: 1952)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1932, file: !304, line: 232, baseType: !84, size: 32, offset: 1984)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1932, file: !304, line: 233, baseType: !93, size: 32, offset: 2016)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1932, file: !304, line: 234, baseType: !93, size: 32, offset: 2048)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1932, file: !304, line: 235, baseType: !143, size: 16, offset: 2080)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1932, file: !304, line: 235, baseType: !143, size: 16, offset: 2096)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1932, file: !304, line: 236, baseType: !143, size: 16, offset: 2112)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1932, file: !304, line: 239, baseType: !143, size: 16, offset: 2128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1932, file: !304, line: 240, baseType: !93, size: 32, offset: 2144)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1932, file: !304, line: 241, baseType: !93, size: 32, offset: 2176)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1932, file: !304, line: 241, baseType: !93, size: 32, offset: 2208)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1932, file: !304, line: 241, baseType: !93, size: 32, offset: 2240)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1932, file: !304, line: 243, baseType: !84, size: 32, offset: 2272)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1932, file: !304, line: 243, baseType: !84, size: 32, offset: 2304)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1932, file: !304, line: 244, baseType: !84, size: 32, offset: 2336)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1932, file: !304, line: 246, baseType: !1141, size: 320, offset: 2368)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1932, file: !304, line: 248, baseType: !1231, size: 64, offset: 2688)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1932, file: !304, line: 249, baseType: !368, size: 64, offset: 2752)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1932, file: !304, line: 250, baseType: !923, size: 64, offset: 2816)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1932, file: !304, line: 251, baseType: !302, size: 64, offset: 2880)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1932, file: !304, line: 252, baseType: !1991, size: 64, offset: 2944)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !304, line: 122, size: 1600, elements: !1993)
!1993 = !{!1994, !1995, !1996, !2000, !2001, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1992, file: !304, line: 123, baseType: !347, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1992, file: !304, line: 124, baseType: !923, size: 64, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1992, file: !304, line: 125, baseType: !1997, size: 384, offset: 128)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1998, size: 384, elements: !1510)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1047, line: 136, flags: DIFlagFwdDecl)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1992, file: !304, line: 126, baseType: !485, size: 512, offset: 512)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1992, file: !304, line: 127, baseType: !2002, size: 288, offset: 1024)
!2002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 288, elements: !2003)
!2003 = !{!86, !86}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1992, file: !304, line: 128, baseType: !143, size: 16, offset: 1312)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1992, file: !304, line: 128, baseType: !143, size: 16, offset: 1328)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1992, file: !304, line: 129, baseType: !84, size: 32, offset: 1344)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1992, file: !304, line: 129, baseType: !84, size: 32, offset: 1376)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1992, file: !304, line: 130, baseType: !84, size: 32, offset: 1408)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1992, file: !304, line: 131, baseType: !5, size: 32, offset: 1440)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1992, file: !304, line: 132, baseType: !143, size: 16, offset: 1472)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1992, file: !304, line: 132, baseType: !143, size: 16, offset: 1488)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1992, file: !304, line: 133, baseType: !93, size: 32, offset: 1504)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1992, file: !304, line: 133, baseType: !93, size: 32, offset: 1536)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1992, file: !304, line: 134, baseType: !143, size: 16, offset: 1568)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1992, file: !304, line: 134, baseType: !143, size: 16, offset: 1584)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1932, file: !304, line: 253, baseType: !1019, size: 64, offset: 3008)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1932, file: !304, line: 254, baseType: !2018, size: 64, offset: 3072)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !304, line: 137, size: 832, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2019, file: !304, line: 138, baseType: !143, size: 16)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2019, file: !304, line: 140, baseType: !143, size: 16, offset: 16)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2019, file: !304, line: 141, baseType: !84, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2019, file: !304, line: 142, baseType: !84, size: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2019, file: !304, line: 143, baseType: !143, size: 16, offset: 96)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2019, file: !304, line: 144, baseType: !143, size: 16, offset: 112)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2019, file: !304, line: 145, baseType: !93, size: 32, offset: 128)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2019, file: !304, line: 147, baseType: !93, size: 32, offset: 160)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2019, file: !304, line: 149, baseType: !347, size: 64, offset: 192)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2019, file: !304, line: 150, baseType: !93, size: 32, offset: 256)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2019, file: !304, line: 151, baseType: !143, size: 16, offset: 288)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2019, file: !304, line: 152, baseType: !143, size: 16, offset: 304)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2019, file: !304, line: 154, baseType: !76, size: 64, offset: 320)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2019, file: !304, line: 155, baseType: !89, size: 64, offset: 384)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2019, file: !304, line: 157, baseType: !84, size: 32, offset: 448)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2019, file: !304, line: 158, baseType: !143, size: 16, offset: 480)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2019, file: !304, line: 159, baseType: !143, size: 16, offset: 496)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2019, file: !304, line: 160, baseType: !143, size: 16, offset: 512)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2019, file: !304, line: 161, baseType: !668, size: 48, offset: 528)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2019, file: !304, line: 162, baseType: !84, size: 32, offset: 576)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2019, file: !304, line: 164, baseType: !84, size: 32, offset: 608)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2019, file: !304, line: 164, baseType: !84, size: 32, offset: 640)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2019, file: !304, line: 164, baseType: !84, size: 32, offset: 672)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2019, file: !304, line: 165, baseType: !302, size: 64, offset: 704)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2019, file: !304, line: 167, baseType: !1523, size: 64, offset: 768)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1932, file: !304, line: 255, baseType: !2047, size: 64, offset: 3136)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !304, line: 170, size: 8704, elements: !2049)
!2049 = !{!2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2048, file: !304, line: 171, baseType: !1313, size: 96)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2048, file: !304, line: 172, baseType: !93, size: 32, offset: 96)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2048, file: !304, line: 173, baseType: !143, size: 16, offset: 128)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2048, file: !304, line: 174, baseType: !143, size: 16, offset: 144)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2048, file: !304, line: 175, baseType: !143, size: 16, offset: 160)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2048, file: !304, line: 176, baseType: !143, size: 16, offset: 176)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2048, file: !304, line: 177, baseType: !143, size: 16, offset: 192)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2048, file: !304, line: 178, baseType: !143, size: 16, offset: 208)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2048, file: !304, line: 179, baseType: !93, size: 32, offset: 224)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2048, file: !304, line: 181, baseType: !347, size: 64, offset: 256)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2048, file: !304, line: 182, baseType: !84, size: 32, offset: 320)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2048, file: !304, line: 183, baseType: !93, size: 32, offset: 352)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2048, file: !304, line: 184, baseType: !129, size: 8192, offset: 384)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2048, file: !304, line: 187, baseType: !89, size: 64, offset: 8576)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2048, file: !304, line: 188, baseType: !93, size: 32, offset: 8640)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2048, file: !304, line: 189, baseType: !93, size: 32, offset: 8672)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1932, file: !304, line: 256, baseType: !2067, size: 64, offset: 3200)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !304, line: 193, size: 640, elements: !2069)
!2069 = !{!2070, !2071, !2072, !2073}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2068, file: !304, line: 194, baseType: !347, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2068, file: !304, line: 195, baseType: !159, size: 512, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2068, file: !304, line: 197, baseType: !93, size: 32, offset: 576)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2068, file: !304, line: 198, baseType: !93, size: 32, offset: 608)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1932, file: !304, line: 258, baseType: !130, size: 8, offset: 3264)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1932, file: !304, line: 259, baseType: !1053, size: 56, offset: 3272)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !340, file: !304, line: 62, baseType: !159, size: 512, offset: 192)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !340, file: !304, line: 64, baseType: !130, size: 8, offset: 704)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !340, file: !304, line: 64, baseType: !130, size: 8, offset: 712)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !340, file: !304, line: 64, baseType: !130, size: 8, offset: 720)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !340, file: !304, line: 64, baseType: !130, size: 8, offset: 728)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !340, file: !304, line: 65, baseType: !83, size: 96, offset: 736)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !340, file: !304, line: 65, baseType: !83, size: 96, offset: 832)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !340, file: !304, line: 65, baseType: !84, size: 32, offset: 928)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !340, file: !304, line: 67, baseType: !143, size: 16, offset: 960)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !340, file: !304, line: 67, baseType: !143, size: 16, offset: 976)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !340, file: !304, line: 67, baseType: !143, size: 16, offset: 992)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !340, file: !304, line: 67, baseType: !143, size: 16, offset: 1008)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !340, file: !304, line: 68, baseType: !143, size: 16, offset: 1024)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !340, file: !304, line: 68, baseType: !143, size: 16, offset: 1040)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !340, file: !304, line: 69, baseType: !130, size: 8, offset: 1056)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !340, file: !304, line: 69, baseType: !1053, size: 56, offset: 1064)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !340, file: !304, line: 70, baseType: !84, size: 32, offset: 1120)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !340, file: !304, line: 70, baseType: !84, size: 32, offset: 1152)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !340, file: !304, line: 70, baseType: !84, size: 32, offset: 1184)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !340, file: !304, line: 70, baseType: !84, size: 32, offset: 1216)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !340, file: !304, line: 71, baseType: !84, size: 32, offset: 1248)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !340, file: !304, line: 71, baseType: !84, size: 32, offset: 1280)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !340, file: !304, line: 74, baseType: !84, size: 32, offset: 1312)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !340, file: !304, line: 74, baseType: !84, size: 32, offset: 1344)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !340, file: !304, line: 77, baseType: !84, size: 32, offset: 1376)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !340, file: !304, line: 77, baseType: !84, size: 32, offset: 1408)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !340, file: !304, line: 77, baseType: !84, size: 32, offset: 1440)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !340, file: !304, line: 78, baseType: !84, size: 32, offset: 1472)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !340, file: !304, line: 78, baseType: !84, size: 32, offset: 1504)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !340, file: !304, line: 78, baseType: !84, size: 32, offset: 1536)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !340, file: !304, line: 79, baseType: !84, size: 32, offset: 1568)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !340, file: !304, line: 79, baseType: !84, size: 32, offset: 1600)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !340, file: !304, line: 79, baseType: !84, size: 32, offset: 1632)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !340, file: !304, line: 79, baseType: !84, size: 32, offset: 1664)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !340, file: !304, line: 80, baseType: !84, size: 32, offset: 1696)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !340, file: !304, line: 80, baseType: !84, size: 32, offset: 1728)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !340, file: !304, line: 80, baseType: !84, size: 32, offset: 1760)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !340, file: !304, line: 81, baseType: !84, size: 32, offset: 1792)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !340, file: !304, line: 81, baseType: !84, size: 32, offset: 1824)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !340, file: !304, line: 81, baseType: !84, size: 32, offset: 1856)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !340, file: !304, line: 82, baseType: !84, size: 32, offset: 1888)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !340, file: !304, line: 82, baseType: !84, size: 32, offset: 1920)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !340, file: !304, line: 82, baseType: !84, size: 32, offset: 1952)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !340, file: !304, line: 85, baseType: !84, size: 32, offset: 1984)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !340, file: !304, line: 85, baseType: !84, size: 32, offset: 2016)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !340, file: !304, line: 85, baseType: !84, size: 32, offset: 2048)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !340, file: !304, line: 85, baseType: !84, size: 32, offset: 2080)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !340, file: !304, line: 86, baseType: !84, size: 32, offset: 2112)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !340, file: !304, line: 86, baseType: !84, size: 32, offset: 2144)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !340, file: !304, line: 86, baseType: !84, size: 32, offset: 2176)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !340, file: !304, line: 86, baseType: !84, size: 32, offset: 2208)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !340, file: !304, line: 87, baseType: !84, size: 32, offset: 2240)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !340, file: !304, line: 87, baseType: !84, size: 32, offset: 2272)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !340, file: !304, line: 87, baseType: !84, size: 32, offset: 2304)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !340, file: !304, line: 87, baseType: !84, size: 32, offset: 2336)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !340, file: !304, line: 90, baseType: !84, size: 32, offset: 2368)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !340, file: !304, line: 93, baseType: !84, size: 32, offset: 2400)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !340, file: !304, line: 93, baseType: !84, size: 32, offset: 2432)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !340, file: !304, line: 93, baseType: !84, size: 32, offset: 2464)
!2135 = !{!2136}
!2136 = !DISubrange(count: 18)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !106, file: !107, line: 168, baseType: !1231, size: 64, offset: 6144)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !106, file: !107, line: 169, baseType: !368, size: 64, offset: 6208)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !106, file: !107, line: 170, baseType: !559, size: 64, offset: 6272)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !106, file: !107, line: 171, baseType: !1019, size: 64, offset: 6336)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !106, file: !107, line: 174, baseType: !84, size: 32, offset: 6400)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !106, file: !107, line: 174, baseType: !84, size: 32, offset: 6432)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !106, file: !107, line: 174, baseType: !84, size: 32, offset: 6464)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !106, file: !107, line: 175, baseType: !84, size: 32, offset: 6496)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !106, file: !107, line: 175, baseType: !84, size: 32, offset: 6528)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !106, file: !107, line: 176, baseType: !143, size: 16, offset: 6560)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !106, file: !107, line: 176, baseType: !143, size: 16, offset: 6576)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !106, file: !107, line: 179, baseType: !83, size: 96, offset: 6592)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !106, file: !107, line: 179, baseType: !83, size: 96, offset: 6688)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !106, file: !107, line: 180, baseType: !84, size: 32, offset: 6784)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !106, file: !107, line: 180, baseType: !84, size: 32, offset: 6816)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !106, file: !107, line: 180, baseType: !84, size: 32, offset: 6848)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !106, file: !107, line: 181, baseType: !84, size: 32, offset: 6880)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !106, file: !107, line: 181, baseType: !84, size: 32, offset: 6912)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !106, file: !107, line: 182, baseType: !84, size: 32, offset: 6944)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !106, file: !107, line: 182, baseType: !84, size: 32, offset: 6976)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !106, file: !107, line: 183, baseType: !143, size: 16, offset: 7008)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !106, file: !107, line: 183, baseType: !143, size: 16, offset: 7024)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !106, file: !107, line: 185, baseType: !93, size: 32, offset: 7040)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !106, file: !107, line: 186, baseType: !143, size: 16, offset: 7072)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !106, file: !107, line: 187, baseType: !143, size: 16, offset: 7088)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !106, file: !107, line: 190, baseType: !294, size: 128, offset: 7104)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !106, file: !107, line: 191, baseType: !143, size: 16, offset: 7232)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !106, file: !107, line: 192, baseType: !143, size: 16, offset: 7248)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !106, file: !107, line: 195, baseType: !143, size: 16, offset: 7264)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !106, file: !107, line: 196, baseType: !143, size: 16, offset: 7280)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !106, file: !107, line: 197, baseType: !143, size: 16, offset: 7296)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !106, file: !107, line: 198, baseType: !668, size: 48, offset: 7312)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !106, file: !107, line: 200, baseType: !2170, size: 64, offset: 7360)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !107, line: 86, size: 192, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2171, file: !107, line: 87, baseType: !923, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2171, file: !107, line: 88, baseType: !467, size: 64, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2171, file: !107, line: 89, baseType: !93, size: 32, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2171, file: !107, line: 90, baseType: !93, size: 32, offset: 160)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !106, file: !107, line: 202, baseType: !169, size: 128, offset: 7424)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !96, file: !79, line: 404, baseType: !130, size: 8, offset: 448)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !96, file: !79, line: 405, baseType: !130, size: 8, offset: 456)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !96, file: !79, line: 405, baseType: !130, size: 8, offset: 464)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !96, file: !79, line: 410, baseType: !93, size: 32, offset: 480)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandRen", file: !79, line: 481, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !79, line: 475, size: 384, elements: !2185)
!2185 = !{!2186, !2193, !2521, !2522, !2523, !2524, !2525}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2184, file: !79, line: 476, baseType: !2187, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !79, line: 434, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !79, line: 431, size: 128, elements: !2190)
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2189, file: !79, line: 432, baseType: !83, size: 96)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !2189, file: !79, line: 433, baseType: !84, size: 32, offset: 96)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2184, file: !79, line: 477, baseType: !2194, size: 64, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !79, line: 473, baseType: !2196)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !79, line: 455, size: 1344, elements: !2197)
!2197 = !{!2198, !2200, !2201, !2203, !2212, !2213, !2214, !2492, !2493, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2196, file: !79, line: 456, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2196, file: !79, line: 456, baseType: !2199, size: 64, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2196, file: !79, line: 457, baseType: !2202, size: 64, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2196, file: !79, line: 458, baseType: !2204, size: 64, offset: 192)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !79, line: 450, size: 256, elements: !2206)
!2206 = !{!2207, !2208, !2209}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2205, file: !79, line: 451, baseType: !93, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2205, file: !79, line: 451, baseType: !93, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2205, file: !79, line: 452, baseType: !2210, size: 192, offset: 64)
!2210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 192, elements: !2211)
!2211 = !{!921, !86}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2196, file: !79, line: 459, baseType: !93, size: 32, offset: 256)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !2196, file: !79, line: 459, baseType: !93, size: 32, offset: 288)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2196, file: !79, line: 461, baseType: !2215, size: 64, offset: 320)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !79, line: 315, size: 2240, elements: !2217)
!2217 = !{!2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2248, !2279, !2293, !2332, !2333, !2335, !2336, !2337, !2338, !2339, !2340, !2438, !2449, !2491}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2216, file: !79, line: 316, baseType: !2215, size: 64)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2216, file: !79, line: 316, baseType: !2215, size: 64, offset: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2216, file: !79, line: 317, baseType: !347, size: 64, offset: 128)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2216, file: !79, line: 317, baseType: !347, size: 64, offset: 192)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !2216, file: !79, line: 318, baseType: !1144, size: 64, offset: 256)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2216, file: !79, line: 319, baseType: !93, size: 32, offset: 320)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !2216, file: !79, line: 319, baseType: !93, size: 32, offset: 352)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2216, file: !79, line: 319, baseType: !93, size: 32, offset: 384)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2216, file: !79, line: 319, baseType: !93, size: 32, offset: 416)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2216, file: !79, line: 321, baseType: !2210, size: 192, offset: 448)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2216, file: !79, line: 323, baseType: !93, size: 32, offset: 640)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !2216, file: !79, line: 323, baseType: !93, size: 32, offset: 672)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2216, file: !79, line: 323, baseType: !93, size: 32, offset: 704)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2216, file: !79, line: 323, baseType: !93, size: 32, offset: 736)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !2216, file: !79, line: 324, baseType: !93, size: 32, offset: 768)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !2216, file: !79, line: 324, baseType: !93, size: 32, offset: 800)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !2216, file: !79, line: 324, baseType: !93, size: 32, offset: 832)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !2216, file: !79, line: 324, baseType: !93, size: 32, offset: 864)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !2216, file: !79, line: 325, baseType: !2237, size: 64, offset: 896)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !2239, line: 60, size: 448, elements: !2240)
!2239 = !DIFile(filename: "blender/source/blender/render/intern/include/renderdatabase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2240 = !{!2241, !2242, !2243, !2244, !2245, !2246, !2247}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2238, file: !2239, line: 61, baseType: !99, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2238, file: !2239, line: 62, baseType: !89, size: 64, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2238, file: !2239, line: 63, baseType: !89, size: 64, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2238, file: !2239, line: 64, baseType: !89, size: 64, offset: 192)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !2238, file: !2239, line: 65, baseType: !89, size: 64, offset: 256)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2238, file: !2239, line: 66, baseType: !89, size: 64, offset: 320)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2238, file: !2239, line: 68, baseType: !809, size: 64, offset: 384)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !2216, file: !79, line: 326, baseType: !2249, size: 64, offset: 960)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !2239, line: 71, size: 512, elements: !2251)
!2251 = !{!2252, !2254, !2255, !2263, !2264, !2265, !2266, !2267, !2268}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "vlak", scope: !2250, file: !2239, line: 72, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2250, file: !2239, line: 73, baseType: !915, size: 64, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2250, file: !2239, line: 74, baseType: !2256, size: 64, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !664, line: 74, size: 32, elements: !2258)
!2258 = !{!2259, !2260, !2261, !2262}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2257, file: !664, line: 75, baseType: !130, size: 8)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2257, file: !664, line: 75, baseType: !130, size: 8, offset: 8)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2257, file: !664, line: 75, baseType: !130, size: 8, offset: 16)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2257, file: !664, line: 75, baseType: !130, size: 8, offset: 24)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2250, file: !2239, line: 76, baseType: !809, size: 64, offset: 192)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "totmtface", scope: !2250, file: !2239, line: 77, baseType: !93, size: 32, offset: 256)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2250, file: !2239, line: 77, baseType: !93, size: 32, offset: 288)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2250, file: !2239, line: 78, baseType: !89, size: 64, offset: 320)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2250, file: !2239, line: 79, baseType: !89, size: 64, offset: 384)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "radface", scope: !2250, file: !2239, line: 80, baseType: !2269, size: 64, offset: 448)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadFace", file: !79, line: 394, size: 448, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "unshot", scope: !2271, file: !79, line: 395, baseType: !83, size: 96)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "totrad", scope: !2271, file: !79, line: 395, baseType: !83, size: 96, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "norm", scope: !2271, file: !79, line: 396, baseType: !83, size: 96, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !2271, file: !79, line: 396, baseType: !83, size: 96, offset: 288)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !2271, file: !79, line: 396, baseType: !84, size: 32, offset: 384)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2271, file: !79, line: 397, baseType: !93, size: 32, offset: 416)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !2216, file: !79, line: 327, baseType: !2280, size: 64, offset: 1024)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !2239, line: 83, size: 512, elements: !2282)
!2282 = !{!2283, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2281, file: !2239, line: 84, baseType: !2284, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2281, file: !2239, line: 85, baseType: !89, size: 64, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2281, file: !2239, line: 86, baseType: !89, size: 64, offset: 128)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "simplify", scope: !2281, file: !2239, line: 87, baseType: !89, size: 64, offset: 192)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2281, file: !2239, line: 88, baseType: !809, size: 64, offset: 256)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2281, file: !2239, line: 89, baseType: !2256, size: 64, offset: 320)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2281, file: !2239, line: 90, baseType: !89, size: 64, offset: 384)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !2281, file: !2239, line: 91, baseType: !93, size: 32, offset: 448)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2281, file: !2239, line: 91, baseType: !93, size: 32, offset: 480)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !2216, file: !79, line: 328, baseType: !2294, size: 64, offset: 1088)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !79, line: 413, size: 1024, elements: !2297)
!2297 = !{!2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !2296, file: !79, line: 414, baseType: !143, size: 16)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !2296, file: !79, line: 414, baseType: !143, size: 16, offset: 16)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2296, file: !79, line: 415, baseType: !84, size: 32, offset: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !2296, file: !79, line: 415, baseType: !84, size: 32, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !2296, file: !79, line: 415, baseType: !84, size: 32, offset: 96)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2296, file: !79, line: 415, baseType: !84, size: 32, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !2296, file: !79, line: 415, baseType: !84, size: 32, offset: 160)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !2296, file: !79, line: 415, baseType: !84, size: 32, offset: 192)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !2296, file: !79, line: 415, baseType: !84, size: 32, offset: 224)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2296, file: !79, line: 415, baseType: !83, size: 96, offset: 256)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2296, file: !79, line: 415, baseType: !83, size: 96, offset: 352)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !2296, file: !79, line: 416, baseType: !84, size: 32, offset: 448)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2296, file: !79, line: 416, baseType: !84, size: 32, offset: 480)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2296, file: !79, line: 416, baseType: !84, size: 32, offset: 512)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2296, file: !79, line: 416, baseType: !84, size: 32, offset: 544)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !2296, file: !79, line: 417, baseType: !93, size: 32, offset: 576)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !2296, file: !79, line: 417, baseType: !93, size: 32, offset: 608)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !2296, file: !79, line: 418, baseType: !93, size: 32, offset: 640)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !2296, file: !79, line: 419, baseType: !130, size: 8, offset: 672)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2296, file: !79, line: 419, baseType: !130, size: 8, offset: 680)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2296, file: !79, line: 419, baseType: !130, size: 8, offset: 688)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2296, file: !79, line: 419, baseType: !130, size: 8, offset: 696)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !2296, file: !79, line: 420, baseType: !130, size: 8, offset: 704)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !2296, file: !79, line: 420, baseType: !130, size: 8, offset: 712)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2296, file: !79, line: 420, baseType: !130, size: 8, offset: 720)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !2296, file: !79, line: 421, baseType: !143, size: 16, offset: 736)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !2296, file: !79, line: 422, baseType: !84, size: 32, offset: 768)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !2296, file: !79, line: 423, baseType: !93, size: 32, offset: 800)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2296, file: !79, line: 424, baseType: !5, size: 32, offset: 832)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2296, file: !79, line: 425, baseType: !105, size: 64, offset: 896)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2296, file: !79, line: 426, baseType: !2329, size: 64, offset: 960)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !2331, line: 41, flags: DIFlagFwdDecl)
!2331 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_render_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !2216, file: !79, line: 329, baseType: !2199, size: 64, offset: 1152)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2216, file: !79, line: 331, baseType: !2334, size: 64, offset: 1216)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2216, file: !79, line: 332, baseType: !2334, size: 64, offset: 1280)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !2216, file: !79, line: 333, baseType: !93, size: 32, offset: 1344)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !2216, file: !79, line: 333, baseType: !93, size: 32, offset: 1376)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !2216, file: !79, line: 333, baseType: !93, size: 32, offset: 1408)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !2216, file: !79, line: 335, baseType: !485, size: 512, offset: 1440)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2216, file: !79, line: 338, baseType: !2341, size: 64, offset: 1984)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !2343, line: 118, size: 192, elements: !2344)
!2343 = !DIFile(filename: "blender/source/blender/render/intern/include/../raytrace/rayobject_internal.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2344 = !{!2345, !2429}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2342, file: !2343, line: 119, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObjectAPI", file: !2343, line: 131, size: 448, elements: !2348)
!2348 = !{!2349, !2401, !2406, !2411, !2413, !2418, !2423}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "raycast", scope: !2347, file: !2343, line: 132, baseType: !2350, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_raycast_callback", file: !2343, line: 123, baseType: !2351)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DISubroutineType(types: !2353)
!2353 = !{!93, !2354, !2357}
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayObject", file: !2356, line: 50, baseType: !2342)
!2356 = !DIFile(filename: "blender/source/blender/render/intern/include/rayobject.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Isect", file: !2359, line: 60, size: 1408, elements: !2360)
!2359 = !DIFile(filename: "blender/source/blender/render/intern/include/rayintersection.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2360 = !{!2361, !2362, !2363, !2364, !2365, !2366, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2382, !2383, !2384}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2358, file: !2359, line: 63, baseType: !83, size: 96)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2358, file: !2359, line: 64, baseType: !83, size: 96, offset: 96)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2358, file: !2359, line: 65, baseType: !84, size: 32, offset: 192)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "origstart", scope: !2358, file: !2359, line: 68, baseType: !83, size: 96, offset: 224)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "origdir", scope: !2358, file: !2359, line: 69, baseType: !83, size: 96, offset: 320)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "bv_index", scope: !2358, file: !2359, line: 72, baseType: !2367, size: 192, offset: 416)
!2367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 192, elements: !1510)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "idot_axis", scope: !2358, file: !2359, line: 73, baseType: !83, size: 96, offset: 608)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2358, file: !2359, line: 76, baseType: !93, size: 32, offset: 704)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2358, file: !2359, line: 77, baseType: !93, size: 32, offset: 736)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2358, file: !2359, line: 78, baseType: !93, size: 32, offset: 768)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2358, file: !2359, line: 79, baseType: !93, size: 32, offset: 800)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2358, file: !2359, line: 80, baseType: !76, size: 64, offset: 832)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2358, file: !2359, line: 83, baseType: !84, size: 32, offset: 896)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2358, file: !2359, line: 83, baseType: !84, size: 32, offset: 928)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "isect", scope: !2358, file: !2359, line: 84, baseType: !93, size: 32, offset: 960)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "hit", scope: !2358, file: !2359, line: 89, baseType: !2378, size: 128, offset: 1024)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2358, file: !2359, line: 86, size: 128, elements: !2379)
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2378, file: !2359, line: 87, baseType: !76, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2378, file: !2359, line: 88, baseType: !76, size: 64, offset: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !2358, file: !2359, line: 89, baseType: !2378, size: 128, offset: 1152)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !2358, file: !2359, line: 92, baseType: !2341, size: 64, offset: 1280)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "hint", scope: !2358, file: !2359, line: 98, baseType: !2385, size: 64, offset: 1344)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayHint", file: !2359, line: 56, baseType: !2387)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayHint", file: !2359, line: 54, size: 16448, elements: !2388)
!2388 = !{!2389}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2387, file: !2359, line: 55, baseType: !2390, size: 16448)
!2390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !2359, line: 55, size: 16448, elements: !2391)
!2391 = !{!2392}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "lcts", scope: !2390, file: !2359, line: 55, baseType: !2393, size: 16448)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "LCTSHint", file: !2359, line: 52, baseType: !2394)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LCTSHint", file: !2359, line: 49, size: 16448, elements: !2395)
!2395 = !{!2396, !2397}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2394, file: !2359, line: 50, baseType: !93, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2394, file: !2359, line: 51, baseType: !2398, size: 16384, offset: 64)
!2398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2341, size: 16384, elements: !2399)
!2399 = !{!2400}
!2400 = !DISubrange(count: 256)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2347, file: !2343, line: 133, baseType: !2402, size: 64, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_add_callback", file: !2343, line: 124, baseType: !2403)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{null, !2354, !2354}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2347, file: !2343, line: 134, baseType: !2407, size: 64, offset: 128)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_done_callback", file: !2343, line: 125, baseType: !2408)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{null, !2354}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2347, file: !2343, line: 135, baseType: !2412, size: 64, offset: 192)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_free_callback", file: !2343, line: 126, baseType: !2408)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2347, file: !2343, line: 136, baseType: !2414, size: 64, offset: 256)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_merge_bb_callback", file: !2343, line: 127, baseType: !2415)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{null, !2354, !89, !89}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2347, file: !2343, line: 137, baseType: !2419, size: 64, offset: 320)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_cost_callback", file: !2343, line: 128, baseType: !2420)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!84, !2354}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "hint_bb", scope: !2347, file: !2343, line: 138, baseType: !2424, size: 64, offset: 384)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_hint_bb_callback", file: !2343, line: 129, baseType: !2425)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{null, !2354, !2428, !89, !89}
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2342, file: !2343, line: 120, baseType: !2430, size: 128, offset: 64)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObjectControl", file: !2343, line: 51, size: 128, elements: !2431)
!2431 = !{!2432, !2433}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2430, file: !2343, line: 52, baseType: !76, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !2430, file: !2343, line: 53, baseType: !2434, size: 64, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobjectcontrol_test_break_callback", file: !2343, line: 49, baseType: !2435)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!93, !76}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !2216, file: !79, line: 339, baseType: !2439, size: 64, offset: 2048)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !2356, line: 78, size: 640, elements: !2441)
!2441 = !{!2442, !2443, !2444, !2445, !2446, !2447, !2448}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2440, file: !2356, line: 79, baseType: !294, size: 128)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2440, file: !2356, line: 79, baseType: !294, size: 128, offset: 128)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2440, file: !2356, line: 79, baseType: !294, size: 128, offset: 256)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2440, file: !2356, line: 79, baseType: !83, size: 96, offset: 384)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "quad", scope: !2440, file: !2356, line: 80, baseType: !93, size: 32, offset: 480)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2440, file: !2356, line: 81, baseType: !76, size: 64, offset: 512)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2440, file: !2356, line: 82, baseType: !76, size: 64, offset: 576)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !2216, file: !79, line: 340, baseType: !2450, size: 64, offset: 2112)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !2356, line: 95, size: 128, elements: !2452)
!2452 = !{!2453, !2490}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2451, file: !2356, line: 96, baseType: !2454, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !79, line: 345, size: 2304, elements: !2456)
!2456 = !{!2457, !2458, !2459, !2462, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2486, !2487, !2488, !2489}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2455, file: !79, line: 346, baseType: !2454, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2455, file: !79, line: 346, baseType: !2454, size: 64, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2455, file: !79, line: 348, baseType: !2460, size: 64, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !79, line: 343, baseType: !2216)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2455, file: !79, line: 349, baseType: !2463, size: 64, offset: 192)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !349, line: 295, baseType: !348)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2455, file: !79, line: 349, baseType: !2463, size: 64, offset: 256)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2455, file: !79, line: 350, baseType: !93, size: 32, offset: 320)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !2455, file: !79, line: 350, baseType: !93, size: 32, offset: 352)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2455, file: !79, line: 350, baseType: !93, size: 32, offset: 384)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2455, file: !79, line: 352, baseType: !485, size: 512, offset: 416)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2455, file: !79, line: 352, baseType: !485, size: 512, offset: 928)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !2455, file: !79, line: 353, baseType: !2002, size: 288, offset: 1440)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2455, file: !79, line: 354, baseType: !143, size: 16, offset: 1728)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !2455, file: !79, line: 356, baseType: !83, size: 96, offset: 1760)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !2455, file: !79, line: 356, baseType: !1137, size: 64, offset: 1856)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !2455, file: !79, line: 357, baseType: !901, size: 64, offset: 1920)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !2455, file: !79, line: 359, baseType: !2477, size: 64, offset: 1984)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !79, line: 513, size: 448, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2483, !2484, !2485}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2478, file: !79, line: 514, baseType: !1313, size: 96)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !2478, file: !79, line: 515, baseType: !89, size: 64, offset: 128)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !2478, file: !79, line: 515, baseType: !89, size: 64, offset: 192)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !2478, file: !79, line: 516, baseType: !89, size: 64, offset: 256)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !2478, file: !79, line: 517, baseType: !89, size: 64, offset: 320)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !2478, file: !79, line: 518, baseType: !89, size: 64, offset: 384)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !2455, file: !79, line: 361, baseType: !89, size: 64, offset: 2048)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !2455, file: !79, line: 362, baseType: !93, size: 32, offset: 2112)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2455, file: !79, line: 365, baseType: !2341, size: 64, offset: 2176)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !2455, file: !79, line: 366, baseType: !93, size: 32, offset: 2240)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2451, file: !2356, line: 97, baseType: !2253, size: 64, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !2216, file: !79, line: 341, baseType: !2454, size: 64, offset: 2176)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !2196, file: !79, line: 462, baseType: !105, size: 64, offset: 384)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !2196, file: !79, line: 463, baseType: !2494, size: 64, offset: 448)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !79, line: 436, size: 2880, elements: !2496)
!2496 = !{!2497, !2498, !2499, !2500, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2495, file: !79, line: 437, baseType: !2494, size: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2495, file: !79, line: 437, baseType: !2494, size: 64, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2495, file: !79, line: 438, baseType: !2461, size: 2240, offset: 128)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2495, file: !79, line: 439, baseType: !2501, size: 64, offset: 2368)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2495, file: !79, line: 440, baseType: !873, size: 64, offset: 2432)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !2495, file: !79, line: 442, baseType: !873, size: 64, offset: 2496)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2495, file: !79, line: 443, baseType: !873, size: 64, offset: 2560)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !2495, file: !79, line: 444, baseType: !873, size: 64, offset: 2624)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !2495, file: !79, line: 446, baseType: !873, size: 64, offset: 2688)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !2495, file: !79, line: 446, baseType: !873, size: 64, offset: 2752)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2495, file: !79, line: 447, baseType: !93, size: 32, offset: 2816)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2495, file: !79, line: 447, baseType: !93, size: 32, offset: 2848)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2196, file: !79, line: 464, baseType: !5, size: 32, offset: 512)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !2196, file: !79, line: 465, baseType: !93, size: 32, offset: 544)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2196, file: !79, line: 466, baseType: !93, size: 32, offset: 576)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !2196, file: !79, line: 466, baseType: !93, size: 32, offset: 608)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !2196, file: !79, line: 467, baseType: !84, size: 32, offset: 640)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !2196, file: !79, line: 467, baseType: !84, size: 32, offset: 672)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !2196, file: !79, line: 467, baseType: !84, size: 32, offset: 704)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !2196, file: !79, line: 469, baseType: !84, size: 32, offset: 736)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2196, file: !79, line: 471, baseType: !485, size: 512, offset: 768)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2196, file: !79, line: 472, baseType: !93, size: 32, offset: 1280)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2196, file: !79, line: 472, baseType: !93, size: 32, offset: 1312)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2184, file: !79, line: 478, baseType: !93, size: 32, offset: 128)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2184, file: !79, line: 478, baseType: !93, size: 32, offset: 160)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2184, file: !79, line: 479, baseType: !93, size: 32, offset: 192)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2184, file: !79, line: 479, baseType: !93, size: 32, offset: 224)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2184, file: !79, line: 480, baseType: !83, size: 96, offset: 256)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "HaloRen", file: !79, line: 427, baseType: !2296)
!2529 = !{i32 7, !"Dwarf Version", i32 4}
!2530 = !{i32 2, !"Debug Info Version", i32 3}
!2531 = !{i32 1, !"wchar_size", i32 4}
!2532 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2533 = distinct !DISubprogram(name: "RE_vertren_get_stress", scope: !1, file: !1, line: 113, type: !2534, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{!89, !2460, !77, !93}
!2536 = !{}
!2537 = !DILocalVariable(name: "obr", arg: 1, scope: !2533, file: !1, line: 113, type: !2460)
!2538 = !DILocation(line: 113, column: 41, scope: !2533)
!2539 = !DILocalVariable(name: "ver", arg: 2, scope: !2533, file: !1, line: 113, type: !77)
!2540 = !DILocation(line: 113, column: 55, scope: !2533)
!2541 = !DILocalVariable(name: "verify", arg: 3, scope: !2533, file: !1, line: 113, type: !93)
!2542 = !DILocation(line: 113, column: 64, scope: !2533)
!2543 = !DILocalVariable(name: "stress", scope: !2533, file: !1, line: 115, type: !89)
!2544 = !DILocation(line: 115, column: 9, scope: !2533)
!2545 = !DILocalVariable(name: "nr", scope: !2533, file: !1, line: 116, type: !93)
!2546 = !DILocation(line: 116, column: 6, scope: !2533)
!2547 = !DILocation(line: 116, column: 10, scope: !2533)
!2548 = !DILocation(line: 116, column: 15, scope: !2533)
!2549 = !DILocation(line: 116, column: 20, scope: !2533)
!2550 = !DILocation(line: 118, column: 10, scope: !2533)
!2551 = !DILocation(line: 118, column: 15, scope: !2533)
!2552 = !DILocation(line: 118, column: 25, scope: !2533)
!2553 = !DILocation(line: 118, column: 29, scope: !2533)
!2554 = !DILocation(line: 118, column: 8, scope: !2533)
!2555 = !DILocation(line: 119, column: 6, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2533, file: !1, line: 119, column: 6)
!2557 = !DILocation(line: 119, column: 12, scope: !2556)
!2558 = !DILocation(line: 119, column: 6, scope: !2533)
!2559 = !DILocation(line: 120, column: 7, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2561, file: !1, line: 120, column: 7)
!2561 = distinct !DILexicalBlock(scope: !2556, file: !1, line: 119, column: 20)
!2562 = !DILocation(line: 120, column: 7, scope: !2561)
!2563 = !DILocation(line: 121, column: 39, scope: !2560)
!2564 = !DILocation(line: 121, column: 12, scope: !2560)
!2565 = !DILocation(line: 121, column: 17, scope: !2560)
!2566 = !DILocation(line: 121, column: 27, scope: !2560)
!2567 = !DILocation(line: 121, column: 31, scope: !2560)
!2568 = !DILocation(line: 121, column: 37, scope: !2560)
!2569 = !DILocation(line: 121, column: 10, scope: !2560)
!2570 = !DILocation(line: 121, column: 4, scope: !2560)
!2571 = !DILocation(line: 123, column: 4, scope: !2560)
!2572 = !DILocation(line: 124, column: 2, scope: !2561)
!2573 = !DILocation(line: 125, column: 9, scope: !2533)
!2574 = !DILocation(line: 125, column: 19, scope: !2533)
!2575 = !DILocation(line: 125, column: 24, scope: !2533)
!2576 = !DILocation(line: 125, column: 30, scope: !2533)
!2577 = !DILocation(line: 125, column: 36, scope: !2533)
!2578 = !DILocation(line: 125, column: 16, scope: !2533)
!2579 = !DILocation(line: 125, column: 2, scope: !2533)
!2580 = !DILocation(line: 126, column: 1, scope: !2533)
!2581 = distinct !DISubprogram(name: "RE_vertren_get_rad", scope: !1, file: !1, line: 129, type: !2534, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!2582 = !DILocalVariable(name: "obr", arg: 1, scope: !2581, file: !1, line: 129, type: !2460)
!2583 = !DILocation(line: 129, column: 38, scope: !2581)
!2584 = !DILocalVariable(name: "ver", arg: 2, scope: !2581, file: !1, line: 129, type: !77)
!2585 = !DILocation(line: 129, column: 52, scope: !2581)
!2586 = !DILocalVariable(name: "verify", arg: 3, scope: !2581, file: !1, line: 129, type: !93)
!2587 = !DILocation(line: 129, column: 61, scope: !2581)
!2588 = !DILocalVariable(name: "rad", scope: !2581, file: !1, line: 131, type: !89)
!2589 = !DILocation(line: 131, column: 9, scope: !2581)
!2590 = !DILocalVariable(name: "nr", scope: !2581, file: !1, line: 132, type: !93)
!2591 = !DILocation(line: 132, column: 6, scope: !2581)
!2592 = !DILocation(line: 132, column: 10, scope: !2581)
!2593 = !DILocation(line: 132, column: 15, scope: !2581)
!2594 = !DILocation(line: 132, column: 20, scope: !2581)
!2595 = !DILocation(line: 134, column: 7, scope: !2581)
!2596 = !DILocation(line: 134, column: 12, scope: !2581)
!2597 = !DILocation(line: 134, column: 22, scope: !2581)
!2598 = !DILocation(line: 134, column: 26, scope: !2581)
!2599 = !DILocation(line: 134, column: 5, scope: !2581)
!2600 = !DILocation(line: 135, column: 6, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2581, file: !1, line: 135, column: 6)
!2602 = !DILocation(line: 135, column: 9, scope: !2601)
!2603 = !DILocation(line: 135, column: 6, scope: !2581)
!2604 = !DILocation(line: 136, column: 7, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2606, file: !1, line: 136, column: 7)
!2606 = distinct !DILexicalBlock(scope: !2601, file: !1, line: 135, column: 17)
!2607 = !DILocation(line: 136, column: 7, scope: !2606)
!2608 = !DILocation(line: 137, column: 33, scope: !2605)
!2609 = !DILocation(line: 137, column: 9, scope: !2605)
!2610 = !DILocation(line: 137, column: 14, scope: !2605)
!2611 = !DILocation(line: 137, column: 24, scope: !2605)
!2612 = !DILocation(line: 137, column: 28, scope: !2605)
!2613 = !DILocation(line: 137, column: 31, scope: !2605)
!2614 = !DILocation(line: 137, column: 7, scope: !2605)
!2615 = !DILocation(line: 137, column: 4, scope: !2605)
!2616 = !DILocation(line: 139, column: 4, scope: !2605)
!2617 = !DILocation(line: 140, column: 2, scope: !2606)
!2618 = !DILocation(line: 141, column: 9, scope: !2581)
!2619 = !DILocation(line: 141, column: 16, scope: !2581)
!2620 = !DILocation(line: 141, column: 21, scope: !2581)
!2621 = !DILocation(line: 141, column: 27, scope: !2581)
!2622 = !DILocation(line: 141, column: 33, scope: !2581)
!2623 = !DILocation(line: 141, column: 13, scope: !2581)
!2624 = !DILocation(line: 141, column: 2, scope: !2581)
!2625 = !DILocation(line: 142, column: 1, scope: !2581)
!2626 = distinct !DISubprogram(name: "RE_vertren_get_strand", scope: !1, file: !1, line: 144, type: !2534, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!2627 = !DILocalVariable(name: "obr", arg: 1, scope: !2626, file: !1, line: 144, type: !2460)
!2628 = !DILocation(line: 144, column: 41, scope: !2626)
!2629 = !DILocalVariable(name: "ver", arg: 2, scope: !2626, file: !1, line: 144, type: !77)
!2630 = !DILocation(line: 144, column: 55, scope: !2626)
!2631 = !DILocalVariable(name: "verify", arg: 3, scope: !2626, file: !1, line: 144, type: !93)
!2632 = !DILocation(line: 144, column: 64, scope: !2626)
!2633 = !DILocalVariable(name: "strand", scope: !2626, file: !1, line: 146, type: !89)
!2634 = !DILocation(line: 146, column: 9, scope: !2626)
!2635 = !DILocalVariable(name: "nr", scope: !2626, file: !1, line: 147, type: !93)
!2636 = !DILocation(line: 147, column: 6, scope: !2626)
!2637 = !DILocation(line: 147, column: 10, scope: !2626)
!2638 = !DILocation(line: 147, column: 15, scope: !2626)
!2639 = !DILocation(line: 147, column: 20, scope: !2626)
!2640 = !DILocation(line: 149, column: 10, scope: !2626)
!2641 = !DILocation(line: 149, column: 15, scope: !2626)
!2642 = !DILocation(line: 149, column: 25, scope: !2626)
!2643 = !DILocation(line: 149, column: 29, scope: !2626)
!2644 = !DILocation(line: 149, column: 8, scope: !2626)
!2645 = !DILocation(line: 150, column: 6, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2626, file: !1, line: 150, column: 6)
!2647 = !DILocation(line: 150, column: 12, scope: !2646)
!2648 = !DILocation(line: 150, column: 6, scope: !2626)
!2649 = !DILocation(line: 151, column: 7, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2651, file: !1, line: 151, column: 7)
!2651 = distinct !DILexicalBlock(scope: !2646, file: !1, line: 150, column: 20)
!2652 = !DILocation(line: 151, column: 7, scope: !2651)
!2653 = !DILocation(line: 152, column: 39, scope: !2650)
!2654 = !DILocation(line: 152, column: 12, scope: !2650)
!2655 = !DILocation(line: 152, column: 17, scope: !2650)
!2656 = !DILocation(line: 152, column: 27, scope: !2650)
!2657 = !DILocation(line: 152, column: 31, scope: !2650)
!2658 = !DILocation(line: 152, column: 37, scope: !2650)
!2659 = !DILocation(line: 152, column: 10, scope: !2650)
!2660 = !DILocation(line: 152, column: 4, scope: !2650)
!2661 = !DILocation(line: 154, column: 4, scope: !2650)
!2662 = !DILocation(line: 155, column: 2, scope: !2651)
!2663 = !DILocation(line: 156, column: 9, scope: !2626)
!2664 = !DILocation(line: 156, column: 19, scope: !2626)
!2665 = !DILocation(line: 156, column: 24, scope: !2626)
!2666 = !DILocation(line: 156, column: 30, scope: !2626)
!2667 = !DILocation(line: 156, column: 36, scope: !2626)
!2668 = !DILocation(line: 156, column: 16, scope: !2626)
!2669 = !DILocation(line: 156, column: 2, scope: !2626)
!2670 = !DILocation(line: 157, column: 1, scope: !2626)
!2671 = distinct !DISubprogram(name: "RE_vertren_get_tangent", scope: !1, file: !1, line: 160, type: !2534, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!2672 = !DILocalVariable(name: "obr", arg: 1, scope: !2671, file: !1, line: 160, type: !2460)
!2673 = !DILocation(line: 160, column: 42, scope: !2671)
!2674 = !DILocalVariable(name: "ver", arg: 2, scope: !2671, file: !1, line: 160, type: !77)
!2675 = !DILocation(line: 160, column: 56, scope: !2671)
!2676 = !DILocalVariable(name: "verify", arg: 3, scope: !2671, file: !1, line: 160, type: !93)
!2677 = !DILocation(line: 160, column: 65, scope: !2671)
!2678 = !DILocalVariable(name: "tangent", scope: !2671, file: !1, line: 162, type: !89)
!2679 = !DILocation(line: 162, column: 9, scope: !2671)
!2680 = !DILocalVariable(name: "nr", scope: !2671, file: !1, line: 163, type: !93)
!2681 = !DILocation(line: 163, column: 6, scope: !2671)
!2682 = !DILocation(line: 163, column: 10, scope: !2671)
!2683 = !DILocation(line: 163, column: 15, scope: !2671)
!2684 = !DILocation(line: 163, column: 20, scope: !2671)
!2685 = !DILocation(line: 165, column: 11, scope: !2671)
!2686 = !DILocation(line: 165, column: 16, scope: !2671)
!2687 = !DILocation(line: 165, column: 26, scope: !2671)
!2688 = !DILocation(line: 165, column: 30, scope: !2671)
!2689 = !DILocation(line: 165, column: 9, scope: !2671)
!2690 = !DILocation(line: 166, column: 6, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2671, file: !1, line: 166, column: 6)
!2692 = !DILocation(line: 166, column: 13, scope: !2691)
!2693 = !DILocation(line: 166, column: 6, scope: !2671)
!2694 = !DILocation(line: 167, column: 7, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2696, file: !1, line: 167, column: 7)
!2696 = distinct !DILexicalBlock(scope: !2691, file: !1, line: 166, column: 21)
!2697 = !DILocation(line: 167, column: 7, scope: !2696)
!2698 = !DILocation(line: 168, column: 41, scope: !2695)
!2699 = !DILocation(line: 168, column: 13, scope: !2695)
!2700 = !DILocation(line: 168, column: 18, scope: !2695)
!2701 = !DILocation(line: 168, column: 28, scope: !2695)
!2702 = !DILocation(line: 168, column: 32, scope: !2695)
!2703 = !DILocation(line: 168, column: 39, scope: !2695)
!2704 = !DILocation(line: 168, column: 11, scope: !2695)
!2705 = !DILocation(line: 168, column: 4, scope: !2695)
!2706 = !DILocation(line: 170, column: 4, scope: !2695)
!2707 = !DILocation(line: 171, column: 2, scope: !2696)
!2708 = !DILocation(line: 172, column: 9, scope: !2671)
!2709 = !DILocation(line: 172, column: 20, scope: !2671)
!2710 = !DILocation(line: 172, column: 25, scope: !2671)
!2711 = !DILocation(line: 172, column: 31, scope: !2671)
!2712 = !DILocation(line: 172, column: 37, scope: !2671)
!2713 = !DILocation(line: 172, column: 17, scope: !2671)
!2714 = !DILocation(line: 172, column: 2, scope: !2671)
!2715 = !DILocation(line: 173, column: 1, scope: !2671)
!2716 = distinct !DISubprogram(name: "RE_vertren_get_winspeed", scope: !1, file: !1, line: 177, type: !2717, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{!89, !2719, !77, !93}
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectInstanceRen", file: !79, line: 368, baseType: !2455)
!2721 = !DILocalVariable(name: "obi", arg: 1, scope: !2716, file: !1, line: 177, type: !2719)
!2722 = !DILocation(line: 177, column: 51, scope: !2716)
!2723 = !DILocalVariable(name: "ver", arg: 2, scope: !2716, file: !1, line: 177, type: !77)
!2724 = !DILocation(line: 177, column: 65, scope: !2716)
!2725 = !DILocalVariable(name: "verify", arg: 3, scope: !2716, file: !1, line: 177, type: !93)
!2726 = !DILocation(line: 177, column: 74, scope: !2716)
!2727 = !DILocalVariable(name: "winspeed", scope: !2716, file: !1, line: 179, type: !89)
!2728 = !DILocation(line: 179, column: 9, scope: !2716)
!2729 = !DILocalVariable(name: "totvector", scope: !2716, file: !1, line: 180, type: !93)
!2730 = !DILocation(line: 180, column: 6, scope: !2716)
!2731 = !DILocation(line: 182, column: 12, scope: !2716)
!2732 = !DILocation(line: 182, column: 17, scope: !2716)
!2733 = !DILocation(line: 182, column: 10, scope: !2716)
!2734 = !DILocation(line: 183, column: 6, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2716, file: !1, line: 183, column: 6)
!2736 = !DILocation(line: 183, column: 14, scope: !2735)
!2737 = !DILocation(line: 183, column: 6, scope: !2716)
!2738 = !DILocation(line: 184, column: 7, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2740, file: !1, line: 184, column: 7)
!2740 = distinct !DILexicalBlock(scope: !2735, file: !1, line: 183, column: 22)
!2741 = !DILocation(line: 184, column: 7, scope: !2740)
!2742 = !DILocation(line: 185, column: 15, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2739, file: !1, line: 184, column: 15)
!2744 = !DILocation(line: 185, column: 20, scope: !2743)
!2745 = !DILocation(line: 185, column: 25, scope: !2743)
!2746 = !DILocation(line: 185, column: 35, scope: !2743)
!2747 = !DILocation(line: 185, column: 40, scope: !2743)
!2748 = !DILocation(line: 185, column: 45, scope: !2743)
!2749 = !DILocation(line: 185, column: 33, scope: !2743)
!2750 = !DILocation(line: 185, column: 13, scope: !2743)
!2751 = !DILocation(line: 186, column: 28, scope: !2743)
!2752 = !DILocation(line: 186, column: 40, scope: !2743)
!2753 = !DILocation(line: 186, column: 49, scope: !2743)
!2754 = !DILocation(line: 186, column: 67, scope: !2743)
!2755 = !DILocation(line: 186, column: 14, scope: !2743)
!2756 = !DILocation(line: 186, column: 19, scope: !2743)
!2757 = !DILocation(line: 186, column: 26, scope: !2743)
!2758 = !DILocation(line: 186, column: 12, scope: !2743)
!2759 = !DILocation(line: 187, column: 3, scope: !2743)
!2760 = !DILocation(line: 189, column: 4, scope: !2739)
!2761 = !DILocation(line: 190, column: 2, scope: !2740)
!2762 = !DILocation(line: 191, column: 9, scope: !2716)
!2763 = !DILocation(line: 191, column: 20, scope: !2716)
!2764 = !DILocation(line: 191, column: 25, scope: !2716)
!2765 = !DILocation(line: 191, column: 30, scope: !2716)
!2766 = !DILocation(line: 191, column: 18, scope: !2716)
!2767 = !DILocation(line: 191, column: 2, scope: !2716)
!2768 = !DILocation(line: 192, column: 1, scope: !2716)
!2769 = distinct !DISubprogram(name: "RE_vertren_get_origindex", scope: !1, file: !1, line: 194, type: !2770, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!809, !2460, !77, !93}
!2772 = !DILocalVariable(name: "obr", arg: 1, scope: !2769, file: !1, line: 194, type: !2460)
!2773 = !DILocation(line: 194, column: 42, scope: !2769)
!2774 = !DILocalVariable(name: "ver", arg: 2, scope: !2769, file: !1, line: 194, type: !77)
!2775 = !DILocation(line: 194, column: 56, scope: !2769)
!2776 = !DILocalVariable(name: "verify", arg: 3, scope: !2769, file: !1, line: 194, type: !93)
!2777 = !DILocation(line: 194, column: 65, scope: !2769)
!2778 = !DILocalVariable(name: "origindex", scope: !2769, file: !1, line: 196, type: !809)
!2779 = !DILocation(line: 196, column: 7, scope: !2769)
!2780 = !DILocalVariable(name: "nr", scope: !2769, file: !1, line: 197, type: !93)
!2781 = !DILocation(line: 197, column: 6, scope: !2769)
!2782 = !DILocation(line: 197, column: 10, scope: !2769)
!2783 = !DILocation(line: 197, column: 15, scope: !2769)
!2784 = !DILocation(line: 197, column: 20, scope: !2769)
!2785 = !DILocation(line: 199, column: 13, scope: !2769)
!2786 = !DILocation(line: 199, column: 18, scope: !2769)
!2787 = !DILocation(line: 199, column: 28, scope: !2769)
!2788 = !DILocation(line: 199, column: 32, scope: !2769)
!2789 = !DILocation(line: 199, column: 11, scope: !2769)
!2790 = !DILocation(line: 200, column: 6, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2769, file: !1, line: 200, column: 6)
!2792 = !DILocation(line: 200, column: 15, scope: !2791)
!2793 = !DILocation(line: 200, column: 6, scope: !2769)
!2794 = !DILocation(line: 201, column: 7, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2796, file: !1, line: 201, column: 7)
!2796 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 200, column: 23)
!2797 = !DILocation(line: 201, column: 7, scope: !2796)
!2798 = !DILocation(line: 202, column: 45, scope: !2795)
!2799 = !DILocation(line: 202, column: 15, scope: !2795)
!2800 = !DILocation(line: 202, column: 20, scope: !2795)
!2801 = !DILocation(line: 202, column: 30, scope: !2795)
!2802 = !DILocation(line: 202, column: 34, scope: !2795)
!2803 = !DILocation(line: 202, column: 43, scope: !2795)
!2804 = !DILocation(line: 202, column: 13, scope: !2795)
!2805 = !DILocation(line: 202, column: 4, scope: !2795)
!2806 = !DILocation(line: 204, column: 4, scope: !2795)
!2807 = !DILocation(line: 205, column: 2, scope: !2796)
!2808 = !DILocation(line: 206, column: 9, scope: !2769)
!2809 = !DILocation(line: 206, column: 22, scope: !2769)
!2810 = !DILocation(line: 206, column: 27, scope: !2769)
!2811 = !DILocation(line: 206, column: 33, scope: !2769)
!2812 = !DILocation(line: 206, column: 39, scope: !2769)
!2813 = !DILocation(line: 206, column: 19, scope: !2769)
!2814 = !DILocation(line: 206, column: 2, scope: !2769)
!2815 = !DILocation(line: 207, column: 1, scope: !2769)
!2816 = distinct !DISubprogram(name: "RE_vertren_copy", scope: !1, file: !1, line: 209, type: !2817, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!99, !2460, !77}
!2819 = !DILocalVariable(name: "obr", arg: 1, scope: !2816, file: !1, line: 209, type: !2460)
!2820 = !DILocation(line: 209, column: 37, scope: !2816)
!2821 = !DILocalVariable(name: "ver", arg: 2, scope: !2816, file: !1, line: 209, type: !77)
!2822 = !DILocation(line: 209, column: 51, scope: !2816)
!2823 = !DILocalVariable(name: "v1", scope: !2816, file: !1, line: 211, type: !77)
!2824 = !DILocation(line: 211, column: 11, scope: !2816)
!2825 = !DILocation(line: 211, column: 32, scope: !2816)
!2826 = !DILocation(line: 211, column: 37, scope: !2816)
!2827 = !DILocation(line: 211, column: 42, scope: !2816)
!2828 = !DILocation(line: 211, column: 49, scope: !2816)
!2829 = !DILocation(line: 211, column: 15, scope: !2816)
!2830 = !DILocalVariable(name: "fp1", scope: !2816, file: !1, line: 212, type: !89)
!2831 = !DILocation(line: 212, column: 9, scope: !2816)
!2832 = !DILocalVariable(name: "fp2", scope: !2816, file: !1, line: 212, type: !89)
!2833 = !DILocation(line: 212, column: 15, scope: !2816)
!2834 = !DILocalVariable(name: "int1", scope: !2816, file: !1, line: 213, type: !809)
!2835 = !DILocation(line: 213, column: 7, scope: !2816)
!2836 = !DILocalVariable(name: "int2", scope: !2816, file: !1, line: 213, type: !809)
!2837 = !DILocation(line: 213, column: 14, scope: !2816)
!2838 = !DILocalVariable(name: "index", scope: !2816, file: !1, line: 214, type: !93)
!2839 = !DILocation(line: 214, column: 6, scope: !2816)
!2840 = !DILocation(line: 214, column: 13, scope: !2816)
!2841 = !DILocation(line: 214, column: 17, scope: !2816)
!2842 = !DILocation(line: 216, column: 3, scope: !2816)
!2843 = !DILocation(line: 216, column: 8, scope: !2816)
!2844 = !DILocation(line: 216, column: 7, scope: !2816)
!2845 = !DILocation(line: 217, column: 13, scope: !2816)
!2846 = !DILocation(line: 217, column: 2, scope: !2816)
!2847 = !DILocation(line: 217, column: 6, scope: !2816)
!2848 = !DILocation(line: 217, column: 11, scope: !2816)
!2849 = !DILocation(line: 219, column: 29, scope: !2816)
!2850 = !DILocation(line: 219, column: 34, scope: !2816)
!2851 = !DILocation(line: 219, column: 7, scope: !2816)
!2852 = !DILocation(line: 219, column: 5, scope: !2816)
!2853 = !DILocation(line: 220, column: 6, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2816, file: !1, line: 220, column: 6)
!2855 = !DILocation(line: 220, column: 6, scope: !2816)
!2856 = !DILocation(line: 221, column: 30, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2854, file: !1, line: 220, column: 11)
!2858 = !DILocation(line: 221, column: 35, scope: !2857)
!2859 = !DILocation(line: 221, column: 8, scope: !2857)
!2860 = !DILocation(line: 221, column: 6, scope: !2857)
!2861 = !DILocation(line: 222, column: 10, scope: !2857)
!2862 = !DILocation(line: 222, column: 3, scope: !2857)
!2863 = !DILocation(line: 222, column: 15, scope: !2857)
!2864 = !DILocation(line: 223, column: 2, scope: !2857)
!2865 = !DILocation(line: 224, column: 26, scope: !2816)
!2866 = !DILocation(line: 224, column: 31, scope: !2816)
!2867 = !DILocation(line: 224, column: 7, scope: !2816)
!2868 = !DILocation(line: 224, column: 5, scope: !2816)
!2869 = !DILocation(line: 225, column: 6, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2816, file: !1, line: 225, column: 6)
!2871 = !DILocation(line: 225, column: 6, scope: !2816)
!2872 = !DILocation(line: 226, column: 27, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2870, file: !1, line: 225, column: 11)
!2874 = !DILocation(line: 226, column: 32, scope: !2873)
!2875 = !DILocation(line: 226, column: 8, scope: !2873)
!2876 = !DILocation(line: 226, column: 6, scope: !2873)
!2877 = !DILocation(line: 227, column: 10, scope: !2873)
!2878 = !DILocation(line: 227, column: 3, scope: !2873)
!2879 = !DILocation(line: 227, column: 15, scope: !2873)
!2880 = !DILocation(line: 228, column: 2, scope: !2873)
!2881 = !DILocation(line: 229, column: 29, scope: !2816)
!2882 = !DILocation(line: 229, column: 34, scope: !2816)
!2883 = !DILocation(line: 229, column: 7, scope: !2816)
!2884 = !DILocation(line: 229, column: 5, scope: !2816)
!2885 = !DILocation(line: 230, column: 6, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2816, file: !1, line: 230, column: 6)
!2887 = !DILocation(line: 230, column: 6, scope: !2816)
!2888 = !DILocation(line: 231, column: 30, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2886, file: !1, line: 230, column: 11)
!2890 = !DILocation(line: 231, column: 35, scope: !2889)
!2891 = !DILocation(line: 231, column: 8, scope: !2889)
!2892 = !DILocation(line: 231, column: 6, scope: !2889)
!2893 = !DILocation(line: 232, column: 10, scope: !2889)
!2894 = !DILocation(line: 232, column: 3, scope: !2889)
!2895 = !DILocation(line: 232, column: 15, scope: !2889)
!2896 = !DILocation(line: 233, column: 2, scope: !2889)
!2897 = !DILocation(line: 234, column: 30, scope: !2816)
!2898 = !DILocation(line: 234, column: 35, scope: !2816)
!2899 = !DILocation(line: 234, column: 7, scope: !2816)
!2900 = !DILocation(line: 234, column: 5, scope: !2816)
!2901 = !DILocation(line: 235, column: 6, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2816, file: !1, line: 235, column: 6)
!2903 = !DILocation(line: 235, column: 6, scope: !2816)
!2904 = !DILocation(line: 236, column: 31, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2902, file: !1, line: 235, column: 11)
!2906 = !DILocation(line: 236, column: 36, scope: !2905)
!2907 = !DILocation(line: 236, column: 8, scope: !2905)
!2908 = !DILocation(line: 236, column: 6, scope: !2905)
!2909 = !DILocation(line: 237, column: 10, scope: !2905)
!2910 = !DILocation(line: 237, column: 3, scope: !2905)
!2911 = !DILocation(line: 237, column: 15, scope: !2905)
!2912 = !DILocation(line: 238, column: 2, scope: !2905)
!2913 = !DILocation(line: 239, column: 33, scope: !2816)
!2914 = !DILocation(line: 239, column: 38, scope: !2816)
!2915 = !DILocation(line: 239, column: 8, scope: !2816)
!2916 = !DILocation(line: 239, column: 6, scope: !2816)
!2917 = !DILocation(line: 240, column: 6, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2816, file: !1, line: 240, column: 6)
!2919 = !DILocation(line: 240, column: 6, scope: !2816)
!2920 = !DILocation(line: 241, column: 34, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 240, column: 12)
!2922 = !DILocation(line: 241, column: 39, scope: !2921)
!2923 = !DILocation(line: 241, column: 9, scope: !2921)
!2924 = !DILocation(line: 241, column: 7, scope: !2921)
!2925 = !DILocation(line: 242, column: 10, scope: !2921)
!2926 = !DILocation(line: 242, column: 3, scope: !2921)
!2927 = !DILocation(line: 242, column: 16, scope: !2921)
!2928 = !DILocation(line: 243, column: 2, scope: !2921)
!2929 = !DILocation(line: 244, column: 9, scope: !2816)
!2930 = !DILocation(line: 244, column: 2, scope: !2816)
!2931 = distinct !DISubprogram(name: "RE_findOrAddVert", scope: !1, file: !1, line: 247, type: !2932, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!99, !2460, !93}
!2934 = !DILocalVariable(name: "obr", arg: 1, scope: !2931, file: !1, line: 247, type: !2460)
!2935 = !DILocation(line: 247, column: 38, scope: !2931)
!2936 = !DILocalVariable(name: "nr", arg: 2, scope: !2931, file: !1, line: 247, type: !93)
!2937 = !DILocation(line: 247, column: 47, scope: !2931)
!2938 = !DILocalVariable(name: "temp", scope: !2931, file: !1, line: 249, type: !2939)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "VertTableNode", file: !2239, line: 69, baseType: !2238)
!2941 = !DILocation(line: 249, column: 17, scope: !2931)
!2942 = !DILocalVariable(name: "v", scope: !2931, file: !1, line: 250, type: !77)
!2943 = !DILocation(line: 250, column: 11, scope: !2931)
!2944 = !DILocalVariable(name: "a", scope: !2931, file: !1, line: 251, type: !93)
!2945 = !DILocation(line: 251, column: 6, scope: !2931)
!2946 = !DILocation(line: 253, column: 6, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2931, file: !1, line: 253, column: 6)
!2948 = !DILocation(line: 253, column: 8, scope: !2947)
!2949 = !DILocation(line: 253, column: 6, scope: !2931)
!2950 = !DILocation(line: 254, column: 42, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2947, file: !1, line: 253, column: 12)
!2952 = !DILocation(line: 254, column: 3, scope: !2951)
!2953 = !DILocation(line: 255, column: 3, scope: !2951)
!2954 = !DILocation(line: 257, column: 5, scope: !2931)
!2955 = !DILocation(line: 257, column: 7, scope: !2931)
!2956 = !DILocation(line: 257, column: 3, scope: !2931)
!2957 = !DILocation(line: 259, column: 6, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2931, file: !1, line: 259, column: 6)
!2959 = !DILocation(line: 259, column: 9, scope: !2958)
!2960 = !DILocation(line: 259, column: 14, scope: !2958)
!2961 = !DILocation(line: 259, column: 26, scope: !2958)
!2962 = !DILocation(line: 259, column: 7, scope: !2958)
!2963 = !DILocation(line: 259, column: 6, scope: !2931)
!2964 = !DILocation(line: 260, column: 9, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2958, file: !1, line: 259, column: 30)
!2966 = !DILocation(line: 260, column: 14, scope: !2965)
!2967 = !DILocation(line: 260, column: 7, scope: !2965)
!2968 = !DILocation(line: 262, column: 19, scope: !2965)
!2969 = !DILocation(line: 262, column: 54, scope: !2965)
!2970 = !DILocation(line: 262, column: 59, scope: !2965)
!2971 = !DILocation(line: 262, column: 71, scope: !2965)
!2972 = !DILocation(line: 262, column: 53, scope: !2965)
!2973 = !DILocation(line: 262, column: 52, scope: !2965)
!2974 = !DILocation(line: 262, column: 3, scope: !2965)
!2975 = !DILocation(line: 262, column: 8, scope: !2965)
!2976 = !DILocation(line: 262, column: 17, scope: !2965)
!2977 = !DILocation(line: 263, column: 7, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2965, file: !1, line: 263, column: 7)
!2979 = !DILocation(line: 263, column: 7, scope: !2965)
!2980 = !DILocation(line: 263, column: 20, scope: !2978)
!2981 = !DILocation(line: 263, column: 25, scope: !2978)
!2982 = !DILocation(line: 263, column: 13, scope: !2978)
!2983 = !DILocation(line: 263, column: 36, scope: !2978)
!2984 = !DILocation(line: 263, column: 42, scope: !2978)
!2985 = !DILocation(line: 263, column: 47, scope: !2978)
!2986 = !DILocation(line: 263, column: 59, scope: !2978)
!2987 = !DILocation(line: 264, column: 10, scope: !2965)
!2988 = !DILocation(line: 264, column: 15, scope: !2965)
!2989 = !DILocation(line: 264, column: 25, scope: !2965)
!2990 = !DILocation(line: 264, column: 30, scope: !2965)
!2991 = !DILocation(line: 264, column: 24, scope: !2965)
!2992 = !DILocation(line: 264, column: 3, scope: !2965)
!2993 = !DILocation(line: 266, column: 3, scope: !2965)
!2994 = !DILocation(line: 266, column: 8, scope: !2965)
!2995 = !DILocation(line: 266, column: 20, scope: !2965)
!2996 = !DILocation(line: 267, column: 7, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2965, file: !1, line: 267, column: 7)
!2998 = !DILocation(line: 267, column: 7, scope: !2965)
!2999 = !DILocation(line: 267, column: 13, scope: !2997)
!3000 = !DILocation(line: 267, column: 23, scope: !2997)
!3001 = !DILocation(line: 268, column: 2, scope: !2965)
!3002 = !DILocation(line: 270, column: 5, scope: !2931)
!3003 = !DILocation(line: 270, column: 10, scope: !2931)
!3004 = !DILocation(line: 270, column: 20, scope: !2931)
!3005 = !DILocation(line: 270, column: 23, scope: !2931)
!3006 = !DILocation(line: 270, column: 3, scope: !2931)
!3007 = !DILocation(line: 271, column: 6, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !2931, file: !1, line: 271, column: 6)
!3009 = !DILocation(line: 271, column: 7, scope: !3008)
!3010 = !DILocation(line: 271, column: 6, scope: !2931)
!3011 = !DILocalVariable(name: "i", scope: !3012, file: !1, line: 272, type: !93)
!3012 = distinct !DILexicalBlock(scope: !3008, file: !1, line: 271, column: 15)
!3013 = !DILocation(line: 272, column: 7, scope: !3012)
!3014 = !DILocation(line: 274, column: 17, scope: !3012)
!3015 = !DILocation(line: 274, column: 6, scope: !3012)
!3016 = !DILocation(line: 274, column: 4, scope: !3012)
!3017 = !DILocation(line: 275, column: 27, scope: !3012)
!3018 = !DILocation(line: 275, column: 3, scope: !3012)
!3019 = !DILocation(line: 275, column: 8, scope: !3012)
!3020 = !DILocation(line: 275, column: 18, scope: !3012)
!3021 = !DILocation(line: 275, column: 21, scope: !3012)
!3022 = !DILocation(line: 275, column: 25, scope: !3012)
!3023 = !DILocation(line: 277, column: 12, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3012, file: !1, line: 277, column: 3)
!3025 = !DILocation(line: 277, column: 15, scope: !3024)
!3026 = !DILocation(line: 277, column: 9, scope: !3024)
!3027 = !DILocation(line: 277, column: 31, scope: !3024)
!3028 = !DILocation(line: 277, column: 8, scope: !3024)
!3029 = !DILocation(line: 277, column: 35, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3024, file: !1, line: 277, column: 3)
!3031 = !DILocation(line: 277, column: 36, scope: !3030)
!3032 = !DILocation(line: 277, column: 3, scope: !3024)
!3033 = !DILocation(line: 278, column: 16, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3030, file: !1, line: 277, column: 52)
!3035 = !DILocation(line: 278, column: 4, scope: !3034)
!3036 = !DILocation(line: 278, column: 6, scope: !3034)
!3037 = !DILocation(line: 278, column: 9, scope: !3034)
!3038 = !DILocation(line: 278, column: 14, scope: !3034)
!3039 = !DILocation(line: 279, column: 3, scope: !3034)
!3040 = !DILocation(line: 277, column: 43, scope: !3030)
!3041 = !DILocation(line: 277, column: 48, scope: !3030)
!3042 = !DILocation(line: 277, column: 3, scope: !3030)
!3043 = distinct !{!3043, !3032, !3044}
!3044 = !DILocation(line: 279, column: 3, scope: !3024)
!3045 = !DILocation(line: 280, column: 2, scope: !3012)
!3046 = !DILocation(line: 281, column: 7, scope: !2931)
!3047 = !DILocation(line: 281, column: 10, scope: !2931)
!3048 = !DILocation(line: 281, column: 3, scope: !2931)
!3049 = !DILocation(line: 282, column: 9, scope: !2931)
!3050 = !DILocation(line: 282, column: 2, scope: !2931)
!3051 = !DILocation(line: 283, column: 1, scope: !2931)
!3052 = distinct !DISubprogram(name: "RE_vlakren_get_tface", scope: !1, file: !1, line: 287, type: !3053, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3053 = !DISubroutineType(types: !3054)
!3054 = !{!915, !2460, !94, !93, !3055, !93}
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!3056 = !DILocalVariable(name: "obr", arg: 1, scope: !3052, file: !1, line: 287, type: !2460)
!3057 = !DILocation(line: 287, column: 41, scope: !3052)
!3058 = !DILocalVariable(name: "vlr", arg: 2, scope: !3052, file: !1, line: 287, type: !94)
!3059 = !DILocation(line: 287, column: 55, scope: !3052)
!3060 = !DILocalVariable(name: "n", arg: 3, scope: !3052, file: !1, line: 287, type: !93)
!3061 = !DILocation(line: 287, column: 64, scope: !3052)
!3062 = !DILocalVariable(name: "name", arg: 4, scope: !3052, file: !1, line: 287, type: !3055)
!3063 = !DILocation(line: 287, column: 74, scope: !3052)
!3064 = !DILocalVariable(name: "verify", arg: 5, scope: !3052, file: !1, line: 287, type: !93)
!3065 = !DILocation(line: 287, column: 84, scope: !3052)
!3066 = !DILocalVariable(name: "node", scope: !3052, file: !1, line: 289, type: !3067)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakTableNode", file: !2239, line: 81, baseType: !2250)
!3069 = !DILocation(line: 289, column: 17, scope: !3052)
!3070 = !DILocalVariable(name: "nr", scope: !3052, file: !1, line: 290, type: !93)
!3071 = !DILocation(line: 290, column: 6, scope: !3052)
!3072 = !DILocation(line: 290, column: 10, scope: !3052)
!3073 = !DILocation(line: 290, column: 15, scope: !3052)
!3074 = !DILocation(line: 290, column: 20, scope: !3052)
!3075 = !DILocalVariable(name: "vlakindex", scope: !3052, file: !1, line: 290, type: !93)
!3076 = !DILocation(line: 290, column: 25, scope: !3052)
!3077 = !DILocation(line: 290, column: 37, scope: !3052)
!3078 = !DILocation(line: 290, column: 42, scope: !3052)
!3079 = !DILocation(line: 290, column: 47, scope: !3052)
!3080 = !DILocalVariable(name: "index", scope: !3052, file: !1, line: 291, type: !93)
!3081 = !DILocation(line: 291, column: 6, scope: !3052)
!3082 = !DILocation(line: 291, column: 14, scope: !3052)
!3083 = !DILocation(line: 291, column: 15, scope: !3052)
!3084 = !DILocation(line: 291, column: 22, scope: !3052)
!3085 = !DILocation(line: 291, column: 20, scope: !3052)
!3086 = !DILocation(line: 293, column: 9, scope: !3052)
!3087 = !DILocation(line: 293, column: 14, scope: !3052)
!3088 = !DILocation(line: 293, column: 24, scope: !3052)
!3089 = !DILocation(line: 293, column: 6, scope: !3052)
!3090 = !DILocation(line: 295, column: 6, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3052, file: !1, line: 295, column: 6)
!3092 = !DILocation(line: 295, column: 6, scope: !3052)
!3093 = !DILocation(line: 296, column: 7, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3095, file: !1, line: 296, column: 7)
!3095 = distinct !DILexicalBlock(scope: !3091, file: !1, line: 295, column: 14)
!3096 = !DILocation(line: 296, column: 10, scope: !3094)
!3097 = !DILocation(line: 296, column: 16, scope: !3094)
!3098 = !DILocation(line: 296, column: 8, scope: !3094)
!3099 = !DILocation(line: 296, column: 7, scope: !3095)
!3100 = !DILocalVariable(name: "mtface", scope: !3101, file: !1, line: 297, type: !3102)
!3101 = distinct !DILexicalBlock(scope: !3094, file: !1, line: 296, column: 27)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !664, line: 165, baseType: !916)
!3104 = !DILocation(line: 297, column: 12, scope: !3101)
!3105 = !DILocation(line: 297, column: 20, scope: !3101)
!3106 = !DILocation(line: 297, column: 26, scope: !3101)
!3107 = !DILocalVariable(name: "size", scope: !3101, file: !1, line: 298, type: !93)
!3108 = !DILocation(line: 298, column: 8, scope: !3101)
!3109 = !DILocation(line: 298, column: 15, scope: !3101)
!3110 = !DILocation(line: 298, column: 16, scope: !3101)
!3111 = !DILocation(line: 298, column: 19, scope: !3101)
!3112 = !DILocation(line: 300, column: 18, scope: !3101)
!3113 = !DILocation(line: 300, column: 30, scope: !3101)
!3114 = !DILocation(line: 300, column: 34, scope: !3101)
!3115 = !DILocation(line: 300, column: 4, scope: !3101)
!3116 = !DILocation(line: 300, column: 10, scope: !3101)
!3117 = !DILocation(line: 300, column: 16, scope: !3101)
!3118 = !DILocation(line: 302, column: 8, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3101, file: !1, line: 302, column: 8)
!3120 = !DILocation(line: 302, column: 8, scope: !3101)
!3121 = !DILocation(line: 303, column: 11, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3119, file: !1, line: 302, column: 16)
!3123 = !DILocation(line: 303, column: 17, scope: !3122)
!3124 = !DILocation(line: 303, column: 26, scope: !3122)
!3125 = !DILocation(line: 303, column: 9, scope: !3122)
!3126 = !DILocation(line: 304, column: 12, scope: !3122)
!3127 = !DILocation(line: 304, column: 18, scope: !3122)
!3128 = !DILocation(line: 304, column: 5, scope: !3122)
!3129 = !DILocation(line: 304, column: 26, scope: !3122)
!3130 = !DILocation(line: 304, column: 34, scope: !3122)
!3131 = !DILocation(line: 304, column: 38, scope: !3122)
!3132 = !DILocation(line: 305, column: 5, scope: !3122)
!3133 = !DILocation(line: 305, column: 15, scope: !3122)
!3134 = !DILocation(line: 306, column: 4, scope: !3122)
!3135 = !DILocation(line: 308, column: 21, scope: !3101)
!3136 = !DILocation(line: 308, column: 22, scope: !3101)
!3137 = !DILocation(line: 308, column: 4, scope: !3101)
!3138 = !DILocation(line: 308, column: 10, scope: !3101)
!3139 = !DILocation(line: 308, column: 19, scope: !3101)
!3140 = !DILocation(line: 309, column: 3, scope: !3101)
!3141 = !DILocation(line: 310, column: 2, scope: !3095)
!3142 = !DILocation(line: 312, column: 7, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3144, file: !1, line: 312, column: 7)
!3144 = distinct !DILexicalBlock(scope: !3091, file: !1, line: 311, column: 7)
!3145 = !DILocation(line: 312, column: 10, scope: !3143)
!3146 = !DILocation(line: 312, column: 16, scope: !3143)
!3147 = !DILocation(line: 312, column: 8, scope: !3143)
!3148 = !DILocation(line: 312, column: 7, scope: !3144)
!3149 = !DILocation(line: 313, column: 4, scope: !3143)
!3150 = !DILocation(line: 315, column: 7, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3144, file: !1, line: 315, column: 7)
!3152 = !DILocation(line: 315, column: 7, scope: !3144)
!3153 = !DILocation(line: 315, column: 20, scope: !3151)
!3154 = !DILocation(line: 315, column: 25, scope: !3151)
!3155 = !DILocation(line: 315, column: 32, scope: !3151)
!3156 = !DILocation(line: 315, column: 14, scope: !3151)
!3157 = !DILocation(line: 315, column: 18, scope: !3151)
!3158 = !DILocation(line: 315, column: 13, scope: !3151)
!3159 = !DILocation(line: 318, column: 9, scope: !3052)
!3160 = !DILocation(line: 318, column: 15, scope: !3052)
!3161 = !DILocation(line: 318, column: 24, scope: !3052)
!3162 = !DILocation(line: 318, column: 22, scope: !3052)
!3163 = !DILocation(line: 318, column: 2, scope: !3052)
!3164 = !DILocation(line: 319, column: 1, scope: !3052)
!3165 = distinct !DISubprogram(name: "RE_vlakren_get_mcol", scope: !1, file: !1, line: 321, type: !3166, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!2256, !2460, !94, !93, !3055, !93}
!3168 = !DILocalVariable(name: "obr", arg: 1, scope: !3165, file: !1, line: 321, type: !2460)
!3169 = !DILocation(line: 321, column: 38, scope: !3165)
!3170 = !DILocalVariable(name: "vlr", arg: 2, scope: !3165, file: !1, line: 321, type: !94)
!3171 = !DILocation(line: 321, column: 52, scope: !3165)
!3172 = !DILocalVariable(name: "n", arg: 3, scope: !3165, file: !1, line: 321, type: !93)
!3173 = !DILocation(line: 321, column: 61, scope: !3165)
!3174 = !DILocalVariable(name: "name", arg: 4, scope: !3165, file: !1, line: 321, type: !3055)
!3175 = !DILocation(line: 321, column: 71, scope: !3165)
!3176 = !DILocalVariable(name: "verify", arg: 5, scope: !3165, file: !1, line: 321, type: !93)
!3177 = !DILocation(line: 321, column: 81, scope: !3165)
!3178 = !DILocalVariable(name: "node", scope: !3165, file: !1, line: 323, type: !3067)
!3179 = !DILocation(line: 323, column: 17, scope: !3165)
!3180 = !DILocalVariable(name: "nr", scope: !3165, file: !1, line: 324, type: !93)
!3181 = !DILocation(line: 324, column: 6, scope: !3165)
!3182 = !DILocation(line: 324, column: 10, scope: !3165)
!3183 = !DILocation(line: 324, column: 15, scope: !3165)
!3184 = !DILocation(line: 324, column: 20, scope: !3165)
!3185 = !DILocalVariable(name: "vlakindex", scope: !3165, file: !1, line: 324, type: !93)
!3186 = !DILocation(line: 324, column: 25, scope: !3165)
!3187 = !DILocation(line: 324, column: 37, scope: !3165)
!3188 = !DILocation(line: 324, column: 42, scope: !3165)
!3189 = !DILocation(line: 324, column: 47, scope: !3165)
!3190 = !DILocalVariable(name: "index", scope: !3165, file: !1, line: 325, type: !93)
!3191 = !DILocation(line: 325, column: 6, scope: !3165)
!3192 = !DILocation(line: 325, column: 14, scope: !3165)
!3193 = !DILocation(line: 325, column: 15, scope: !3165)
!3194 = !DILocation(line: 325, column: 22, scope: !3165)
!3195 = !DILocation(line: 325, column: 20, scope: !3165)
!3196 = !DILocation(line: 327, column: 9, scope: !3165)
!3197 = !DILocation(line: 327, column: 14, scope: !3165)
!3198 = !DILocation(line: 327, column: 24, scope: !3165)
!3199 = !DILocation(line: 327, column: 6, scope: !3165)
!3200 = !DILocation(line: 329, column: 6, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3165, file: !1, line: 329, column: 6)
!3202 = !DILocation(line: 329, column: 6, scope: !3165)
!3203 = !DILocation(line: 330, column: 7, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3205, file: !1, line: 330, column: 7)
!3205 = distinct !DILexicalBlock(scope: !3201, file: !1, line: 329, column: 14)
!3206 = !DILocation(line: 330, column: 10, scope: !3204)
!3207 = !DILocation(line: 330, column: 16, scope: !3204)
!3208 = !DILocation(line: 330, column: 8, scope: !3204)
!3209 = !DILocation(line: 330, column: 7, scope: !3205)
!3210 = !DILocalVariable(name: "mcol", scope: !3211, file: !1, line: 331, type: !3212)
!3211 = distinct !DILexicalBlock(scope: !3204, file: !1, line: 330, column: 25)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCol", file: !664, line: 76, baseType: !2257)
!3214 = !DILocation(line: 331, column: 10, scope: !3211)
!3215 = !DILocation(line: 331, column: 16, scope: !3211)
!3216 = !DILocation(line: 331, column: 22, scope: !3211)
!3217 = !DILocalVariable(name: "size", scope: !3211, file: !1, line: 332, type: !93)
!3218 = !DILocation(line: 332, column: 8, scope: !3211)
!3219 = !DILocation(line: 332, column: 15, scope: !3211)
!3220 = !DILocation(line: 332, column: 16, scope: !3211)
!3221 = !DILocation(line: 332, column: 19, scope: !3211)
!3222 = !DILocation(line: 334, column: 16, scope: !3211)
!3223 = !DILocation(line: 334, column: 28, scope: !3211)
!3224 = !DILocation(line: 334, column: 32, scope: !3211)
!3225 = !DILocation(line: 334, column: 45, scope: !3211)
!3226 = !DILocation(line: 334, column: 4, scope: !3211)
!3227 = !DILocation(line: 334, column: 10, scope: !3211)
!3228 = !DILocation(line: 334, column: 14, scope: !3211)
!3229 = !DILocation(line: 336, column: 8, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3211, file: !1, line: 336, column: 8)
!3231 = !DILocation(line: 336, column: 8, scope: !3211)
!3232 = !DILocation(line: 337, column: 11, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3230, file: !1, line: 336, column: 14)
!3234 = !DILocation(line: 337, column: 17, scope: !3233)
!3235 = !DILocation(line: 337, column: 24, scope: !3233)
!3236 = !DILocation(line: 337, column: 9, scope: !3233)
!3237 = !DILocation(line: 338, column: 12, scope: !3233)
!3238 = !DILocation(line: 338, column: 18, scope: !3233)
!3239 = !DILocation(line: 338, column: 5, scope: !3233)
!3240 = !DILocation(line: 338, column: 24, scope: !3233)
!3241 = !DILocation(line: 338, column: 30, scope: !3233)
!3242 = !DILocation(line: 338, column: 34, scope: !3233)
!3243 = !DILocation(line: 338, column: 47, scope: !3233)
!3244 = !DILocation(line: 339, column: 5, scope: !3233)
!3245 = !DILocation(line: 339, column: 15, scope: !3233)
!3246 = !DILocation(line: 340, column: 4, scope: !3233)
!3247 = !DILocation(line: 342, column: 19, scope: !3211)
!3248 = !DILocation(line: 342, column: 20, scope: !3211)
!3249 = !DILocation(line: 342, column: 4, scope: !3211)
!3250 = !DILocation(line: 342, column: 10, scope: !3211)
!3251 = !DILocation(line: 342, column: 17, scope: !3211)
!3252 = !DILocation(line: 343, column: 3, scope: !3211)
!3253 = !DILocation(line: 344, column: 2, scope: !3205)
!3254 = !DILocation(line: 346, column: 7, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3256, file: !1, line: 346, column: 7)
!3256 = distinct !DILexicalBlock(scope: !3201, file: !1, line: 345, column: 7)
!3257 = !DILocation(line: 346, column: 10, scope: !3255)
!3258 = !DILocation(line: 346, column: 16, scope: !3255)
!3259 = !DILocation(line: 346, column: 8, scope: !3255)
!3260 = !DILocation(line: 346, column: 7, scope: !3256)
!3261 = !DILocation(line: 347, column: 4, scope: !3255)
!3262 = !DILocation(line: 349, column: 7, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3256, file: !1, line: 349, column: 7)
!3264 = !DILocation(line: 349, column: 7, scope: !3256)
!3265 = !DILocation(line: 349, column: 20, scope: !3263)
!3266 = !DILocation(line: 349, column: 25, scope: !3263)
!3267 = !DILocation(line: 349, column: 30, scope: !3263)
!3268 = !DILocation(line: 349, column: 14, scope: !3263)
!3269 = !DILocation(line: 349, column: 18, scope: !3263)
!3270 = !DILocation(line: 349, column: 13, scope: !3263)
!3271 = !DILocation(line: 352, column: 9, scope: !3165)
!3272 = !DILocation(line: 352, column: 15, scope: !3165)
!3273 = !DILocation(line: 352, column: 22, scope: !3165)
!3274 = !DILocation(line: 352, column: 27, scope: !3165)
!3275 = !DILocation(line: 352, column: 20, scope: !3165)
!3276 = !DILocation(line: 352, column: 2, scope: !3165)
!3277 = !DILocation(line: 353, column: 1, scope: !3165)
!3278 = distinct !DISubprogram(name: "RE_vlakren_get_origindex", scope: !1, file: !1, line: 355, type: !3279, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!809, !2460, !94, !93}
!3281 = !DILocalVariable(name: "obr", arg: 1, scope: !3278, file: !1, line: 355, type: !2460)
!3282 = !DILocation(line: 355, column: 42, scope: !3278)
!3283 = !DILocalVariable(name: "vlak", arg: 2, scope: !3278, file: !1, line: 355, type: !94)
!3284 = !DILocation(line: 355, column: 56, scope: !3278)
!3285 = !DILocalVariable(name: "verify", arg: 3, scope: !3278, file: !1, line: 355, type: !93)
!3286 = !DILocation(line: 355, column: 66, scope: !3278)
!3287 = !DILocalVariable(name: "origindex", scope: !3278, file: !1, line: 357, type: !809)
!3288 = !DILocation(line: 357, column: 7, scope: !3278)
!3289 = !DILocalVariable(name: "nr", scope: !3278, file: !1, line: 358, type: !93)
!3290 = !DILocation(line: 358, column: 6, scope: !3278)
!3291 = !DILocation(line: 358, column: 10, scope: !3278)
!3292 = !DILocation(line: 358, column: 16, scope: !3278)
!3293 = !DILocation(line: 358, column: 21, scope: !3278)
!3294 = !DILocation(line: 360, column: 13, scope: !3278)
!3295 = !DILocation(line: 360, column: 18, scope: !3278)
!3296 = !DILocation(line: 360, column: 28, scope: !3278)
!3297 = !DILocation(line: 360, column: 32, scope: !3278)
!3298 = !DILocation(line: 360, column: 11, scope: !3278)
!3299 = !DILocation(line: 361, column: 6, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3278, file: !1, line: 361, column: 6)
!3301 = !DILocation(line: 361, column: 15, scope: !3300)
!3302 = !DILocation(line: 361, column: 6, scope: !3278)
!3303 = !DILocation(line: 362, column: 7, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 362, column: 7)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !1, line: 361, column: 23)
!3306 = !DILocation(line: 362, column: 7, scope: !3305)
!3307 = !DILocation(line: 363, column: 45, scope: !3304)
!3308 = !DILocation(line: 363, column: 15, scope: !3304)
!3309 = !DILocation(line: 363, column: 20, scope: !3304)
!3310 = !DILocation(line: 363, column: 30, scope: !3304)
!3311 = !DILocation(line: 363, column: 34, scope: !3304)
!3312 = !DILocation(line: 363, column: 43, scope: !3304)
!3313 = !DILocation(line: 363, column: 13, scope: !3304)
!3314 = !DILocation(line: 363, column: 4, scope: !3304)
!3315 = !DILocation(line: 365, column: 4, scope: !3304)
!3316 = !DILocation(line: 366, column: 2, scope: !3305)
!3317 = !DILocation(line: 367, column: 9, scope: !3278)
!3318 = !DILocation(line: 367, column: 22, scope: !3278)
!3319 = !DILocation(line: 367, column: 28, scope: !3278)
!3320 = !DILocation(line: 367, column: 34, scope: !3278)
!3321 = !DILocation(line: 367, column: 40, scope: !3278)
!3322 = !DILocation(line: 367, column: 19, scope: !3278)
!3323 = !DILocation(line: 367, column: 2, scope: !3278)
!3324 = !DILocation(line: 368, column: 1, scope: !3278)
!3325 = distinct !DISubprogram(name: "RE_vlakren_get_surfnor", scope: !1, file: !1, line: 370, type: !3326, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3326 = !DISubroutineType(types: !3327)
!3327 = !{!89, !2460, !94, !93}
!3328 = !DILocalVariable(name: "obr", arg: 1, scope: !3325, file: !1, line: 370, type: !2460)
!3329 = !DILocation(line: 370, column: 42, scope: !3325)
!3330 = !DILocalVariable(name: "vlak", arg: 2, scope: !3325, file: !1, line: 370, type: !94)
!3331 = !DILocation(line: 370, column: 56, scope: !3325)
!3332 = !DILocalVariable(name: "verify", arg: 3, scope: !3325, file: !1, line: 370, type: !93)
!3333 = !DILocation(line: 370, column: 66, scope: !3325)
!3334 = !DILocalVariable(name: "surfnor", scope: !3325, file: !1, line: 372, type: !89)
!3335 = !DILocation(line: 372, column: 9, scope: !3325)
!3336 = !DILocalVariable(name: "nr", scope: !3325, file: !1, line: 373, type: !93)
!3337 = !DILocation(line: 373, column: 6, scope: !3325)
!3338 = !DILocation(line: 373, column: 10, scope: !3325)
!3339 = !DILocation(line: 373, column: 16, scope: !3325)
!3340 = !DILocation(line: 373, column: 21, scope: !3325)
!3341 = !DILocation(line: 375, column: 11, scope: !3325)
!3342 = !DILocation(line: 375, column: 16, scope: !3325)
!3343 = !DILocation(line: 375, column: 26, scope: !3325)
!3344 = !DILocation(line: 375, column: 30, scope: !3325)
!3345 = !DILocation(line: 375, column: 9, scope: !3325)
!3346 = !DILocation(line: 376, column: 6, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3325, file: !1, line: 376, column: 6)
!3348 = !DILocation(line: 376, column: 13, scope: !3347)
!3349 = !DILocation(line: 376, column: 6, scope: !3325)
!3350 = !DILocation(line: 377, column: 7, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !1, line: 377, column: 7)
!3352 = distinct !DILexicalBlock(scope: !3347, file: !1, line: 376, column: 21)
!3353 = !DILocation(line: 377, column: 7, scope: !3352)
!3354 = !DILocation(line: 378, column: 41, scope: !3351)
!3355 = !DILocation(line: 378, column: 13, scope: !3351)
!3356 = !DILocation(line: 378, column: 18, scope: !3351)
!3357 = !DILocation(line: 378, column: 28, scope: !3351)
!3358 = !DILocation(line: 378, column: 32, scope: !3351)
!3359 = !DILocation(line: 378, column: 39, scope: !3351)
!3360 = !DILocation(line: 378, column: 11, scope: !3351)
!3361 = !DILocation(line: 378, column: 4, scope: !3351)
!3362 = !DILocation(line: 380, column: 4, scope: !3351)
!3363 = !DILocation(line: 381, column: 2, scope: !3352)
!3364 = !DILocation(line: 382, column: 9, scope: !3325)
!3365 = !DILocation(line: 382, column: 20, scope: !3325)
!3366 = !DILocation(line: 382, column: 26, scope: !3325)
!3367 = !DILocation(line: 382, column: 32, scope: !3325)
!3368 = !DILocation(line: 382, column: 38, scope: !3325)
!3369 = !DILocation(line: 382, column: 17, scope: !3325)
!3370 = !DILocation(line: 382, column: 2, scope: !3325)
!3371 = !DILocation(line: 383, column: 1, scope: !3325)
!3372 = distinct !DISubprogram(name: "RE_vlakren_get_nmap_tangent", scope: !1, file: !1, line: 385, type: !3326, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3373 = !DILocalVariable(name: "obr", arg: 1, scope: !3372, file: !1, line: 385, type: !2460)
!3374 = !DILocation(line: 385, column: 47, scope: !3372)
!3375 = !DILocalVariable(name: "vlak", arg: 2, scope: !3372, file: !1, line: 385, type: !94)
!3376 = !DILocation(line: 385, column: 61, scope: !3372)
!3377 = !DILocalVariable(name: "verify", arg: 3, scope: !3372, file: !1, line: 385, type: !93)
!3378 = !DILocation(line: 385, column: 71, scope: !3372)
!3379 = !DILocalVariable(name: "tangent", scope: !3372, file: !1, line: 387, type: !89)
!3380 = !DILocation(line: 387, column: 9, scope: !3372)
!3381 = !DILocalVariable(name: "nr", scope: !3372, file: !1, line: 388, type: !93)
!3382 = !DILocation(line: 388, column: 6, scope: !3372)
!3383 = !DILocation(line: 388, column: 10, scope: !3372)
!3384 = !DILocation(line: 388, column: 16, scope: !3372)
!3385 = !DILocation(line: 388, column: 21, scope: !3372)
!3386 = !DILocation(line: 390, column: 11, scope: !3372)
!3387 = !DILocation(line: 390, column: 16, scope: !3372)
!3388 = !DILocation(line: 390, column: 26, scope: !3372)
!3389 = !DILocation(line: 390, column: 30, scope: !3372)
!3390 = !DILocation(line: 390, column: 9, scope: !3372)
!3391 = !DILocation(line: 391, column: 6, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3372, file: !1, line: 391, column: 6)
!3393 = !DILocation(line: 391, column: 13, scope: !3392)
!3394 = !DILocation(line: 391, column: 6, scope: !3372)
!3395 = !DILocation(line: 392, column: 7, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !1, line: 392, column: 7)
!3397 = distinct !DILexicalBlock(scope: !3392, file: !1, line: 391, column: 21)
!3398 = !DILocation(line: 392, column: 7, scope: !3397)
!3399 = !DILocation(line: 393, column: 41, scope: !3396)
!3400 = !DILocation(line: 393, column: 13, scope: !3396)
!3401 = !DILocation(line: 393, column: 18, scope: !3396)
!3402 = !DILocation(line: 393, column: 28, scope: !3396)
!3403 = !DILocation(line: 393, column: 32, scope: !3396)
!3404 = !DILocation(line: 393, column: 39, scope: !3396)
!3405 = !DILocation(line: 393, column: 11, scope: !3396)
!3406 = !DILocation(line: 393, column: 4, scope: !3396)
!3407 = !DILocation(line: 395, column: 4, scope: !3396)
!3408 = !DILocation(line: 396, column: 2, scope: !3397)
!3409 = !DILocation(line: 397, column: 9, scope: !3372)
!3410 = !DILocation(line: 397, column: 20, scope: !3372)
!3411 = !DILocation(line: 397, column: 26, scope: !3372)
!3412 = !DILocation(line: 397, column: 32, scope: !3372)
!3413 = !DILocation(line: 397, column: 38, scope: !3372)
!3414 = !DILocation(line: 397, column: 17, scope: !3372)
!3415 = !DILocation(line: 397, column: 2, scope: !3372)
!3416 = !DILocation(line: 398, column: 1, scope: !3372)
!3417 = distinct !DISubprogram(name: "RE_vlakren_get_radface", scope: !1, file: !1, line: 400, type: !3418, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!3420, !2460, !94, !93}
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DIDerivedType(tag: DW_TAG_typedef, name: "RadFace", file: !79, line: 398, baseType: !2271)
!3423 = !DILocalVariable(name: "obr", arg: 1, scope: !3417, file: !1, line: 400, type: !2460)
!3424 = !DILocation(line: 400, column: 45, scope: !3417)
!3425 = !DILocalVariable(name: "vlak", arg: 2, scope: !3417, file: !1, line: 400, type: !94)
!3426 = !DILocation(line: 400, column: 59, scope: !3417)
!3427 = !DILocalVariable(name: "verify", arg: 3, scope: !3417, file: !1, line: 400, type: !93)
!3428 = !DILocation(line: 400, column: 69, scope: !3417)
!3429 = !DILocalVariable(name: "radface", scope: !3417, file: !1, line: 402, type: !3420)
!3430 = !DILocation(line: 402, column: 12, scope: !3417)
!3431 = !DILocalVariable(name: "nr", scope: !3417, file: !1, line: 403, type: !93)
!3432 = !DILocation(line: 403, column: 6, scope: !3417)
!3433 = !DILocation(line: 403, column: 10, scope: !3417)
!3434 = !DILocation(line: 403, column: 16, scope: !3417)
!3435 = !DILocation(line: 403, column: 21, scope: !3417)
!3436 = !DILocation(line: 405, column: 11, scope: !3417)
!3437 = !DILocation(line: 405, column: 16, scope: !3417)
!3438 = !DILocation(line: 405, column: 26, scope: !3417)
!3439 = !DILocation(line: 405, column: 30, scope: !3417)
!3440 = !DILocation(line: 405, column: 9, scope: !3417)
!3441 = !DILocation(line: 406, column: 6, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3417, file: !1, line: 406, column: 6)
!3443 = !DILocation(line: 406, column: 13, scope: !3442)
!3444 = !DILocation(line: 406, column: 6, scope: !3417)
!3445 = !DILocation(line: 407, column: 7, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !1, line: 407, column: 7)
!3447 = distinct !DILexicalBlock(scope: !3442, file: !1, line: 406, column: 21)
!3448 = !DILocation(line: 407, column: 7, scope: !3447)
!3449 = !DILocation(line: 408, column: 42, scope: !3446)
!3450 = !DILocation(line: 408, column: 14, scope: !3446)
!3451 = !DILocation(line: 408, column: 19, scope: !3446)
!3452 = !DILocation(line: 408, column: 29, scope: !3446)
!3453 = !DILocation(line: 408, column: 33, scope: !3446)
!3454 = !DILocation(line: 408, column: 40, scope: !3446)
!3455 = !DILocation(line: 408, column: 12, scope: !3446)
!3456 = !DILocation(line: 408, column: 4, scope: !3446)
!3457 = !DILocation(line: 410, column: 4, scope: !3446)
!3458 = !DILocation(line: 411, column: 2, scope: !3447)
!3459 = !DILocation(line: 412, column: 9, scope: !3417)
!3460 = !DILocation(line: 412, column: 20, scope: !3417)
!3461 = !DILocation(line: 412, column: 26, scope: !3417)
!3462 = !DILocation(line: 412, column: 32, scope: !3417)
!3463 = !DILocation(line: 412, column: 38, scope: !3417)
!3464 = !DILocation(line: 412, column: 17, scope: !3417)
!3465 = !DILocation(line: 412, column: 2, scope: !3417)
!3466 = !DILocation(line: 413, column: 1, scope: !3417)
!3467 = distinct !DISubprogram(name: "RE_vlakren_copy", scope: !1, file: !1, line: 415, type: !3468, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!2253, !2460, !94}
!3470 = !DILocalVariable(name: "obr", arg: 1, scope: !3467, file: !1, line: 415, type: !2460)
!3471 = !DILocation(line: 415, column: 37, scope: !3467)
!3472 = !DILocalVariable(name: "vlr", arg: 2, scope: !3467, file: !1, line: 415, type: !94)
!3473 = !DILocation(line: 415, column: 51, scope: !3467)
!3474 = !DILocalVariable(name: "vlr1", scope: !3467, file: !1, line: 417, type: !94)
!3475 = !DILocation(line: 417, column: 11, scope: !3467)
!3476 = !DILocation(line: 417, column: 35, scope: !3467)
!3477 = !DILocation(line: 417, column: 40, scope: !3467)
!3478 = !DILocation(line: 417, column: 45, scope: !3467)
!3479 = !DILocation(line: 417, column: 52, scope: !3467)
!3480 = !DILocation(line: 417, column: 18, scope: !3467)
!3481 = !DILocalVariable(name: "mtface", scope: !3467, file: !1, line: 418, type: !3102)
!3482 = !DILocation(line: 418, column: 10, scope: !3467)
!3483 = !DILocalVariable(name: "mtface1", scope: !3467, file: !1, line: 418, type: !3102)
!3484 = !DILocation(line: 418, column: 19, scope: !3467)
!3485 = !DILocalVariable(name: "mcol", scope: !3467, file: !1, line: 419, type: !3212)
!3486 = !DILocation(line: 419, column: 8, scope: !3467)
!3487 = !DILocalVariable(name: "mcol1", scope: !3467, file: !1, line: 419, type: !3212)
!3488 = !DILocation(line: 419, column: 15, scope: !3467)
!3489 = !DILocalVariable(name: "surfnor", scope: !3467, file: !1, line: 420, type: !89)
!3490 = !DILocation(line: 420, column: 9, scope: !3467)
!3491 = !DILocalVariable(name: "surfnor1", scope: !3467, file: !1, line: 420, type: !89)
!3492 = !DILocation(line: 420, column: 19, scope: !3467)
!3493 = !DILocalVariable(name: "tangent", scope: !3467, file: !1, line: 420, type: !89)
!3494 = !DILocation(line: 420, column: 30, scope: !3467)
!3495 = !DILocalVariable(name: "tangent1", scope: !3467, file: !1, line: 420, type: !89)
!3496 = !DILocation(line: 420, column: 40, scope: !3467)
!3497 = !DILocalVariable(name: "origindex", scope: !3467, file: !1, line: 421, type: !809)
!3498 = !DILocation(line: 421, column: 7, scope: !3467)
!3499 = !DILocalVariable(name: "origindex1", scope: !3467, file: !1, line: 421, type: !809)
!3500 = !DILocation(line: 421, column: 19, scope: !3467)
!3501 = !DILocalVariable(name: "radface", scope: !3467, file: !1, line: 422, type: !3420)
!3502 = !DILocation(line: 422, column: 12, scope: !3467)
!3503 = !DILocalVariable(name: "radface1", scope: !3467, file: !1, line: 422, type: !3420)
!3504 = !DILocation(line: 422, column: 23, scope: !3467)
!3505 = !DILocalVariable(name: "i", scope: !3467, file: !1, line: 423, type: !93)
!3506 = !DILocation(line: 423, column: 6, scope: !3467)
!3507 = !DILocalVariable(name: "index", scope: !3467, file: !1, line: 423, type: !93)
!3508 = !DILocation(line: 423, column: 9, scope: !3467)
!3509 = !DILocation(line: 423, column: 17, scope: !3467)
!3510 = !DILocation(line: 423, column: 23, scope: !3467)
!3511 = !DILocalVariable(name: "name", scope: !3467, file: !1, line: 424, type: !467)
!3512 = !DILocation(line: 424, column: 8, scope: !3467)
!3513 = !DILocation(line: 426, column: 3, scope: !3467)
!3514 = !DILocation(line: 426, column: 10, scope: !3467)
!3515 = !DILocation(line: 426, column: 9, scope: !3467)
!3516 = !DILocation(line: 427, column: 15, scope: !3467)
!3517 = !DILocation(line: 427, column: 2, scope: !3467)
!3518 = !DILocation(line: 427, column: 8, scope: !3467)
!3519 = !DILocation(line: 427, column: 13, scope: !3467)
!3520 = !DILocation(line: 429, column: 8, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3467, file: !1, line: 429, column: 2)
!3522 = !DILocation(line: 429, column: 7, scope: !3521)
!3523 = !DILocation(line: 429, column: 41, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3521, file: !1, line: 429, column: 2)
!3525 = !DILocation(line: 429, column: 46, scope: !3524)
!3526 = !DILocation(line: 429, column: 51, scope: !3524)
!3527 = !DILocation(line: 429, column: 20, scope: !3524)
!3528 = !DILocation(line: 429, column: 19, scope: !3524)
!3529 = !DILocation(line: 429, column: 65, scope: !3524)
!3530 = !DILocation(line: 429, column: 2, scope: !3521)
!3531 = !DILocation(line: 430, column: 33, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3524, file: !1, line: 429, column: 79)
!3533 = !DILocation(line: 430, column: 38, scope: !3532)
!3534 = !DILocation(line: 430, column: 44, scope: !3532)
!3535 = !DILocation(line: 430, column: 12, scope: !3532)
!3536 = !DILocation(line: 430, column: 10, scope: !3532)
!3537 = !DILocation(line: 431, column: 10, scope: !3532)
!3538 = !DILocation(line: 431, column: 3, scope: !3532)
!3539 = !DILocation(line: 431, column: 19, scope: !3532)
!3540 = !DILocation(line: 432, column: 2, scope: !3532)
!3541 = !DILocation(line: 429, column: 75, scope: !3524)
!3542 = !DILocation(line: 429, column: 2, scope: !3524)
!3543 = distinct !{!3543, !3530, !3544}
!3544 = !DILocation(line: 432, column: 2, scope: !3521)
!3545 = !DILocation(line: 434, column: 8, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3467, file: !1, line: 434, column: 2)
!3547 = !DILocation(line: 434, column: 7, scope: !3546)
!3548 = !DILocation(line: 434, column: 38, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3546, file: !1, line: 434, column: 2)
!3550 = !DILocation(line: 434, column: 43, scope: !3549)
!3551 = !DILocation(line: 434, column: 48, scope: !3549)
!3552 = !DILocation(line: 434, column: 18, scope: !3549)
!3553 = !DILocation(line: 434, column: 17, scope: !3549)
!3554 = !DILocation(line: 434, column: 62, scope: !3549)
!3555 = !DILocation(line: 434, column: 2, scope: !3546)
!3556 = !DILocation(line: 435, column: 30, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3549, file: !1, line: 434, column: 76)
!3558 = !DILocation(line: 435, column: 35, scope: !3557)
!3559 = !DILocation(line: 435, column: 41, scope: !3557)
!3560 = !DILocation(line: 435, column: 10, scope: !3557)
!3561 = !DILocation(line: 435, column: 8, scope: !3557)
!3562 = !DILocation(line: 436, column: 10, scope: !3557)
!3563 = !DILocation(line: 436, column: 3, scope: !3557)
!3564 = !DILocation(line: 436, column: 17, scope: !3557)
!3565 = !DILocation(line: 437, column: 2, scope: !3557)
!3566 = !DILocation(line: 434, column: 72, scope: !3549)
!3567 = !DILocation(line: 434, column: 2, scope: !3549)
!3568 = distinct !{!3568, !3555, !3569}
!3569 = !DILocation(line: 437, column: 2, scope: !3546)
!3570 = !DILocation(line: 439, column: 38, scope: !3467)
!3571 = !DILocation(line: 439, column: 43, scope: !3467)
!3572 = !DILocation(line: 439, column: 13, scope: !3467)
!3573 = !DILocation(line: 439, column: 11, scope: !3467)
!3574 = !DILocation(line: 440, column: 6, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3467, file: !1, line: 440, column: 6)
!3576 = !DILocation(line: 440, column: 6, scope: !3467)
!3577 = !DILocation(line: 441, column: 40, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3575, file: !1, line: 440, column: 17)
!3579 = !DILocation(line: 441, column: 45, scope: !3578)
!3580 = !DILocation(line: 441, column: 15, scope: !3578)
!3581 = !DILocation(line: 441, column: 13, scope: !3578)
!3582 = !DILocation(line: 443, column: 10, scope: !3578)
!3583 = !DILocation(line: 443, column: 3, scope: !3578)
!3584 = !DILocation(line: 443, column: 22, scope: !3578)
!3585 = !DILocation(line: 444, column: 2, scope: !3578)
!3586 = !DILocation(line: 446, column: 34, scope: !3467)
!3587 = !DILocation(line: 446, column: 39, scope: !3467)
!3588 = !DILocation(line: 446, column: 11, scope: !3467)
!3589 = !DILocation(line: 446, column: 9, scope: !3467)
!3590 = !DILocation(line: 447, column: 6, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3467, file: !1, line: 447, column: 6)
!3592 = !DILocation(line: 447, column: 6, scope: !3467)
!3593 = !DILocation(line: 448, column: 36, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3591, file: !1, line: 447, column: 15)
!3595 = !DILocation(line: 448, column: 41, scope: !3594)
!3596 = !DILocation(line: 448, column: 13, scope: !3594)
!3597 = !DILocation(line: 448, column: 11, scope: !3594)
!3598 = !DILocation(line: 449, column: 14, scope: !3594)
!3599 = !DILocation(line: 449, column: 24, scope: !3594)
!3600 = !DILocation(line: 449, column: 3, scope: !3594)
!3601 = !DILocation(line: 450, column: 2, scope: !3594)
!3602 = !DILocation(line: 452, column: 39, scope: !3467)
!3603 = !DILocation(line: 452, column: 44, scope: !3467)
!3604 = !DILocation(line: 452, column: 11, scope: !3467)
!3605 = !DILocation(line: 452, column: 9, scope: !3467)
!3606 = !DILocation(line: 453, column: 6, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3467, file: !1, line: 453, column: 6)
!3608 = !DILocation(line: 453, column: 6, scope: !3467)
!3609 = !DILocation(line: 454, column: 41, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3607, file: !1, line: 453, column: 15)
!3611 = !DILocation(line: 454, column: 46, scope: !3610)
!3612 = !DILocation(line: 454, column: 13, scope: !3610)
!3613 = !DILocation(line: 454, column: 11, scope: !3610)
!3614 = !DILocation(line: 455, column: 10, scope: !3610)
!3615 = !DILocation(line: 455, column: 3, scope: !3610)
!3616 = !DILocation(line: 455, column: 20, scope: !3610)
!3617 = !DILocation(line: 456, column: 2, scope: !3610)
!3618 = !DILocation(line: 458, column: 34, scope: !3467)
!3619 = !DILocation(line: 458, column: 39, scope: !3467)
!3620 = !DILocation(line: 458, column: 11, scope: !3467)
!3621 = !DILocation(line: 458, column: 9, scope: !3467)
!3622 = !DILocation(line: 459, column: 6, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3467, file: !1, line: 459, column: 6)
!3624 = !DILocation(line: 459, column: 6, scope: !3467)
!3625 = !DILocation(line: 460, column: 36, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3623, file: !1, line: 459, column: 15)
!3627 = !DILocation(line: 460, column: 41, scope: !3626)
!3628 = !DILocation(line: 460, column: 13, scope: !3626)
!3629 = !DILocation(line: 460, column: 11, scope: !3626)
!3630 = !DILocation(line: 461, column: 15, scope: !3626)
!3631 = !DILocation(line: 461, column: 14, scope: !3626)
!3632 = !DILocation(line: 461, column: 4, scope: !3626)
!3633 = !DILocation(line: 461, column: 12, scope: !3626)
!3634 = !DILocation(line: 462, column: 2, scope: !3626)
!3635 = !DILocation(line: 464, column: 9, scope: !3467)
!3636 = !DILocation(line: 464, column: 2, scope: !3467)
!3637 = distinct !DISubprogram(name: "RE_findOrAddVlak", scope: !1, file: !1, line: 513, type: !3638, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!2253, !2460, !93}
!3640 = !DILocalVariable(name: "obr", arg: 1, scope: !3637, file: !1, line: 513, type: !2460)
!3641 = !DILocation(line: 513, column: 38, scope: !3637)
!3642 = !DILocalVariable(name: "nr", arg: 2, scope: !3637, file: !1, line: 513, type: !93)
!3643 = !DILocation(line: 513, column: 47, scope: !3637)
!3644 = !DILocalVariable(name: "temp", scope: !3637, file: !1, line: 515, type: !3067)
!3645 = !DILocation(line: 515, column: 17, scope: !3637)
!3646 = !DILocalVariable(name: "v", scope: !3637, file: !1, line: 516, type: !94)
!3647 = !DILocation(line: 516, column: 11, scope: !3637)
!3648 = !DILocalVariable(name: "a", scope: !3637, file: !1, line: 517, type: !93)
!3649 = !DILocation(line: 517, column: 6, scope: !3637)
!3650 = !DILocation(line: 519, column: 6, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 519, column: 6)
!3652 = !DILocation(line: 519, column: 8, scope: !3651)
!3653 = !DILocation(line: 519, column: 6, scope: !3637)
!3654 = !DILocation(line: 520, column: 42, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3651, file: !1, line: 519, column: 12)
!3656 = !DILocation(line: 520, column: 3, scope: !3655)
!3657 = !DILocation(line: 521, column: 10, scope: !3655)
!3658 = !DILocation(line: 521, column: 15, scope: !3655)
!3659 = !DILocation(line: 521, column: 28, scope: !3655)
!3660 = !DILocation(line: 521, column: 3, scope: !3655)
!3661 = !DILocation(line: 523, column: 5, scope: !3637)
!3662 = !DILocation(line: 523, column: 7, scope: !3637)
!3663 = !DILocation(line: 523, column: 3, scope: !3637)
!3664 = !DILocation(line: 525, column: 6, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 525, column: 6)
!3666 = !DILocation(line: 525, column: 9, scope: !3665)
!3667 = !DILocation(line: 525, column: 14, scope: !3665)
!3668 = !DILocation(line: 525, column: 26, scope: !3665)
!3669 = !DILocation(line: 525, column: 7, scope: !3665)
!3670 = !DILocation(line: 525, column: 6, scope: !3637)
!3671 = !DILocation(line: 526, column: 9, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3665, file: !1, line: 525, column: 30)
!3673 = !DILocation(line: 526, column: 14, scope: !3672)
!3674 = !DILocation(line: 526, column: 7, scope: !3672)
!3675 = !DILocation(line: 528, column: 19, scope: !3672)
!3676 = !DILocation(line: 528, column: 54, scope: !3672)
!3677 = !DILocation(line: 528, column: 59, scope: !3672)
!3678 = !DILocation(line: 528, column: 71, scope: !3672)
!3679 = !DILocation(line: 528, column: 53, scope: !3672)
!3680 = !DILocation(line: 528, column: 52, scope: !3672)
!3681 = !DILocation(line: 528, column: 3, scope: !3672)
!3682 = !DILocation(line: 528, column: 8, scope: !3672)
!3683 = !DILocation(line: 528, column: 17, scope: !3672)
!3684 = !DILocation(line: 529, column: 7, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3672, file: !1, line: 529, column: 7)
!3686 = !DILocation(line: 529, column: 7, scope: !3672)
!3687 = !DILocation(line: 529, column: 20, scope: !3685)
!3688 = !DILocation(line: 529, column: 25, scope: !3685)
!3689 = !DILocation(line: 529, column: 13, scope: !3685)
!3690 = !DILocation(line: 529, column: 36, scope: !3685)
!3691 = !DILocation(line: 529, column: 42, scope: !3685)
!3692 = !DILocation(line: 529, column: 47, scope: !3685)
!3693 = !DILocation(line: 529, column: 59, scope: !3685)
!3694 = !DILocation(line: 530, column: 10, scope: !3672)
!3695 = !DILocation(line: 530, column: 15, scope: !3672)
!3696 = !DILocation(line: 530, column: 25, scope: !3672)
!3697 = !DILocation(line: 530, column: 30, scope: !3672)
!3698 = !DILocation(line: 530, column: 24, scope: !3672)
!3699 = !DILocation(line: 530, column: 3, scope: !3672)
!3700 = !DILocation(line: 532, column: 3, scope: !3672)
!3701 = !DILocation(line: 532, column: 8, scope: !3672)
!3702 = !DILocation(line: 532, column: 20, scope: !3672)
!3703 = !DILocation(line: 533, column: 7, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3672, file: !1, line: 533, column: 7)
!3705 = !DILocation(line: 533, column: 7, scope: !3672)
!3706 = !DILocation(line: 533, column: 13, scope: !3704)
!3707 = !DILocation(line: 533, column: 23, scope: !3704)
!3708 = !DILocation(line: 534, column: 2, scope: !3672)
!3709 = !DILocation(line: 536, column: 5, scope: !3637)
!3710 = !DILocation(line: 536, column: 10, scope: !3637)
!3711 = !DILocation(line: 536, column: 20, scope: !3637)
!3712 = !DILocation(line: 536, column: 23, scope: !3637)
!3713 = !DILocation(line: 536, column: 3, scope: !3637)
!3714 = !DILocation(line: 538, column: 6, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3637, file: !1, line: 538, column: 6)
!3716 = !DILocation(line: 538, column: 7, scope: !3715)
!3717 = !DILocation(line: 538, column: 6, scope: !3637)
!3718 = !DILocalVariable(name: "i", scope: !3719, file: !1, line: 539, type: !93)
!3719 = distinct !DILexicalBlock(scope: !3715, file: !1, line: 538, column: 15)
!3720 = !DILocation(line: 539, column: 7, scope: !3719)
!3721 = !DILocation(line: 541, column: 17, scope: !3719)
!3722 = !DILocation(line: 541, column: 6, scope: !3719)
!3723 = !DILocation(line: 541, column: 4, scope: !3719)
!3724 = !DILocation(line: 542, column: 27, scope: !3719)
!3725 = !DILocation(line: 542, column: 3, scope: !3719)
!3726 = !DILocation(line: 542, column: 8, scope: !3719)
!3727 = !DILocation(line: 542, column: 18, scope: !3719)
!3728 = !DILocation(line: 542, column: 21, scope: !3719)
!3729 = !DILocation(line: 542, column: 25, scope: !3719)
!3730 = !DILocation(line: 544, column: 12, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3719, file: !1, line: 544, column: 3)
!3732 = !DILocation(line: 544, column: 15, scope: !3731)
!3733 = !DILocation(line: 544, column: 9, scope: !3731)
!3734 = !DILocation(line: 544, column: 31, scope: !3731)
!3735 = !DILocation(line: 544, column: 8, scope: !3731)
!3736 = !DILocation(line: 544, column: 35, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3731, file: !1, line: 544, column: 3)
!3738 = !DILocation(line: 544, column: 36, scope: !3737)
!3739 = !DILocation(line: 544, column: 3, scope: !3731)
!3740 = !DILocation(line: 545, column: 16, scope: !3737)
!3741 = !DILocation(line: 545, column: 4, scope: !3737)
!3742 = !DILocation(line: 545, column: 6, scope: !3737)
!3743 = !DILocation(line: 545, column: 9, scope: !3737)
!3744 = !DILocation(line: 545, column: 14, scope: !3737)
!3745 = !DILocation(line: 544, column: 43, scope: !3737)
!3746 = !DILocation(line: 544, column: 48, scope: !3737)
!3747 = !DILocation(line: 544, column: 3, scope: !3737)
!3748 = distinct !{!3748, !3739, !3749}
!3749 = !DILocation(line: 545, column: 16, scope: !3731)
!3750 = !DILocation(line: 546, column: 2, scope: !3719)
!3751 = !DILocation(line: 547, column: 7, scope: !3637)
!3752 = !DILocation(line: 547, column: 10, scope: !3637)
!3753 = !DILocation(line: 547, column: 3, scope: !3637)
!3754 = !DILocation(line: 548, column: 9, scope: !3637)
!3755 = !DILocation(line: 548, column: 2, scope: !3637)
!3756 = !DILocation(line: 549, column: 1, scope: !3637)
!3757 = distinct !DISubprogram(name: "copy_v3_v3", scope: !3758, file: !3758, line: 64, type: !3759, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3758 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3759 = !DISubroutineType(types: !3760)
!3760 = !{null, !89, !839}
!3761 = !DILocalVariable(name: "r", arg: 1, scope: !3757, file: !3758, line: 64, type: !89)
!3762 = !DILocation(line: 64, column: 31, scope: !3757)
!3763 = !DILocalVariable(name: "a", arg: 2, scope: !3757, file: !3758, line: 64, type: !839)
!3764 = !DILocation(line: 64, column: 49, scope: !3757)
!3765 = !DILocation(line: 66, column: 9, scope: !3757)
!3766 = !DILocation(line: 66, column: 2, scope: !3757)
!3767 = !DILocation(line: 66, column: 7, scope: !3757)
!3768 = !DILocation(line: 67, column: 9, scope: !3757)
!3769 = !DILocation(line: 67, column: 2, scope: !3757)
!3770 = !DILocation(line: 67, column: 7, scope: !3757)
!3771 = !DILocation(line: 68, column: 9, scope: !3757)
!3772 = !DILocation(line: 68, column: 2, scope: !3757)
!3773 = !DILocation(line: 68, column: 7, scope: !3757)
!3774 = !DILocation(line: 69, column: 1, scope: !3757)
!3775 = distinct !DISubprogram(name: "RE_vlakren_get_normal", scope: !1, file: !1, line: 467, type: !3776, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{null, !3778, !2719, !94, !89}
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !941, line: 58, baseType: !3780)
!3780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !79, line: 126, size: 49920, elements: !3781)
!3781 = !{!3782, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3795, !3796, !3797, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3846, !3849, !3850, !3851, !3853, !3911, !3914, !3916, !3918, !3919, !3920, !3921, !3922, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3957, !3961, !3962, !3963, !3964, !3969, !3970, !3974, !3975, !4007, !4008, !4012, !4013, !4017, !4018, !4019, !4020, !4021, !4024, !4025}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3780, file: !79, line: 128, baseType: !3783, size: 64)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3780, file: !79, line: 128, baseType: !3783, size: 64, offset: 64)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3780, file: !79, line: 129, baseType: !976, size: 592, offset: 128)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !3780, file: !79, line: 130, baseType: !93, size: 32, offset: 736)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3780, file: !79, line: 133, baseType: !143, size: 16, offset: 768)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !3780, file: !79, line: 133, baseType: !143, size: 16, offset: 784)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3780, file: !79, line: 133, baseType: !143, size: 16, offset: 800)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "result_ok", scope: !3780, file: !79, line: 133, baseType: !143, size: 16, offset: 816)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "scene_color_manage", scope: !3780, file: !79, line: 136, baseType: !895, size: 8, offset: 832)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3780, file: !79, line: 139, baseType: !3793, size: 64, offset: 896)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !941, line: 148, baseType: !940)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "pushedresult", scope: !3780, file: !79, line: 141, baseType: !3793, size: 64, offset: 960)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !3780, file: !79, line: 143, baseType: !169, size: 128, offset: 1024)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "resultmutex", scope: !3780, file: !79, line: 147, baseType: !3798, size: 32, offset: 1152)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !3799, line: 148, baseType: !3800)
!3799 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3800 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !3801, line: 10, baseType: !3802)
!3801 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3802 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1119, line: 26, baseType: !3803)
!3803 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1121, line: 42, baseType: !5)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3780, file: !79, line: 150, baseType: !93, size: 32, offset: 1184)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3780, file: !79, line: 150, baseType: !93, size: 32, offset: 1216)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !3780, file: !79, line: 152, baseType: !953, size: 128, offset: 1248)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !3780, file: !79, line: 153, baseType: !1531, size: 128, offset: 1376)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !3780, file: !79, line: 154, baseType: !84, size: 32, offset: 1504)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !3780, file: !79, line: 154, baseType: !84, size: 32, offset: 1536)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !3780, file: !79, line: 155, baseType: !84, size: 32, offset: 1568)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !3780, file: !79, line: 158, baseType: !93, size: 32, offset: 1600)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !3780, file: !79, line: 158, baseType: !93, size: 32, offset: 1632)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "partx", scope: !3780, file: !79, line: 162, baseType: !93, size: 32, offset: 1664)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "party", scope: !3780, file: !79, line: 162, baseType: !93, size: 32, offset: 1696)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !3780, file: !79, line: 165, baseType: !84, size: 32, offset: 1728)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "panophi", scope: !3780, file: !79, line: 167, baseType: !84, size: 32, offset: 1760)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "panosi", scope: !3780, file: !79, line: 167, baseType: !84, size: 32, offset: 1792)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "panoco", scope: !3780, file: !79, line: 167, baseType: !84, size: 32, offset: 1824)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "panodxp", scope: !3780, file: !79, line: 167, baseType: !84, size: 32, offset: 1856)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "panodxv", scope: !3780, file: !79, line: 167, baseType: !84, size: 32, offset: 1888)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "grvec", scope: !3780, file: !79, line: 170, baseType: !83, size: 96, offset: 1920)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3780, file: !79, line: 171, baseType: !2002, size: 288, offset: 2016)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !3780, file: !79, line: 172, baseType: !485, size: 512, offset: 2304)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !3780, file: !79, line: 172, baseType: !485, size: 512, offset: 2816)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat_orig", scope: !3780, file: !79, line: 173, baseType: !485, size: 512, offset: 3328)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !3780, file: !79, line: 174, baseType: !485, size: 512, offset: 3840)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !3780, file: !79, line: 177, baseType: !84, size: 32, offset: 4352)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !3780, file: !79, line: 178, baseType: !84, size: 32, offset: 4384)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !3780, file: !79, line: 181, baseType: !3830, size: 64, offset: 4416)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleTables", file: !79, line: 77, baseType: !3832)
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SampleTables", file: !79, line: 72, size: 3776, elements: !3833)
!3833 = !{!3834, !3838, !3842, !3843, !3845}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "centLut", scope: !3832, file: !79, line: 73, baseType: !3835, size: 512)
!3835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 512, elements: !3836)
!3836 = !{!3837}
!3837 = !DISubrange(count: 16)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "fmask1", scope: !3832, file: !79, line: 74, baseType: !3839, size: 576, offset: 512)
!3839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 576, elements: !3840)
!3840 = !{!3841}
!3841 = !DISubrange(count: 9)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "fmask2", scope: !3832, file: !79, line: 74, baseType: !3839, size: 576, offset: 1088)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "cmask", scope: !3832, file: !79, line: 75, baseType: !3844, size: 2048, offset: 1664)
!3844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 2048, elements: !2399)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "centmask", scope: !3832, file: !79, line: 75, baseType: !467, size: 64, offset: 3712)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !3780, file: !79, line: 182, baseType: !3847, size: 2048, offset: 4480)
!3847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 2048, elements: !3848)
!3848 = !{!327, !921}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_jit", scope: !3780, file: !79, line: 183, baseType: !3847, size: 2048, offset: 6528)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "qmcsamplers", scope: !3780, file: !79, line: 184, baseType: !1129, size: 64, offset: 8576)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "shadowsamplenr", scope: !3780, file: !79, line: 187, baseType: !3852, size: 32, offset: 8640)
!3852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !93, size: 32, elements: !313)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !3780, file: !79, line: 190, baseType: !3854, size: 64, offset: 8704)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !3856, line: 53, size: 15232, elements: !3857)
!3856 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3857 = !{!3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3908}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3855, file: !3856, line: 54, baseType: !3854, size: 64)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3855, file: !3856, line: 54, baseType: !3854, size: 64, offset: 64)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3855, file: !3856, line: 55, baseType: !129, size: 8192, offset: 128)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !3855, file: !3856, line: 56, baseType: !143, size: 16, offset: 8320)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !3855, file: !3856, line: 56, baseType: !143, size: 16, offset: 8336)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !3855, file: !3856, line: 57, baseType: !143, size: 16, offset: 8352)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !3855, file: !3856, line: 57, baseType: !143, size: 16, offset: 8368)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !3855, file: !3856, line: 58, baseType: !1118, size: 64, offset: 8384)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !3855, file: !3856, line: 59, baseType: !3867, size: 128, offset: 8448)
!3867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 128, elements: !3836)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !3855, file: !3856, line: 60, baseType: !143, size: 16, offset: 8576)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !3855, file: !3856, line: 62, baseType: !119, size: 64, offset: 8640)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3855, file: !3856, line: 63, baseType: !169, size: 128, offset: 8704)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !3855, file: !3856, line: 64, baseType: !169, size: 128, offset: 8832)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3855, file: !3856, line: 65, baseType: !169, size: 128, offset: 8960)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !3855, file: !3856, line: 66, baseType: !169, size: 128, offset: 9088)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3855, file: !3856, line: 67, baseType: !169, size: 128, offset: 9216)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !3855, file: !3856, line: 68, baseType: !169, size: 128, offset: 9344)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3855, file: !3856, line: 69, baseType: !169, size: 128, offset: 9472)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3855, file: !3856, line: 70, baseType: !169, size: 128, offset: 9600)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3855, file: !3856, line: 71, baseType: !169, size: 128, offset: 9728)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3855, file: !3856, line: 72, baseType: !169, size: 128, offset: 9856)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3855, file: !3856, line: 73, baseType: !169, size: 128, offset: 9984)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3855, file: !3856, line: 74, baseType: !169, size: 128, offset: 10112)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3855, file: !3856, line: 75, baseType: !169, size: 128, offset: 10240)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3855, file: !3856, line: 76, baseType: !169, size: 128, offset: 10368)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3855, file: !3856, line: 77, baseType: !169, size: 128, offset: 10496)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3855, file: !3856, line: 78, baseType: !169, size: 128, offset: 10624)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3855, file: !3856, line: 79, baseType: !169, size: 128, offset: 10752)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3855, file: !3856, line: 80, baseType: !169, size: 128, offset: 10880)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3855, file: !3856, line: 81, baseType: !169, size: 128, offset: 11008)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3855, file: !3856, line: 82, baseType: !169, size: 128, offset: 11136)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !3855, file: !3856, line: 83, baseType: !169, size: 128, offset: 11264)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3855, file: !3856, line: 84, baseType: !169, size: 128, offset: 11392)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !3855, file: !3856, line: 85, baseType: !169, size: 128, offset: 11520)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3855, file: !3856, line: 86, baseType: !169, size: 128, offset: 11648)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3855, file: !3856, line: 87, baseType: !169, size: 128, offset: 11776)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3855, file: !3856, line: 88, baseType: !169, size: 128, offset: 11904)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3855, file: !3856, line: 89, baseType: !169, size: 128, offset: 12032)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !3855, file: !3856, line: 90, baseType: !169, size: 128, offset: 12160)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !3855, file: !3856, line: 91, baseType: !169, size: 128, offset: 12288)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3855, file: !3856, line: 92, baseType: !169, size: 128, offset: 12416)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !3855, file: !3856, line: 93, baseType: !169, size: 128, offset: 12544)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3855, file: !3856, line: 94, baseType: !169, size: 128, offset: 12672)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3855, file: !3856, line: 95, baseType: !169, size: 128, offset: 12800)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3855, file: !3856, line: 96, baseType: !169, size: 128, offset: 12928)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !3855, file: !3856, line: 98, baseType: !3844, size: 2048, offset: 13056)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3855, file: !3856, line: 101, baseType: !3906, size: 64, offset: 15104)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !3856, line: 49, flags: DIFlagFwdDecl)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3855, file: !3856, line: 103, baseType: !3909, size: 64, offset: 15168)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !3856, line: 51, flags: DIFlagFwdDecl)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3780, file: !79, line: 191, baseType: !3912, size: 64, offset: 8768)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !440, line: 1299, baseType: !1145)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3780, file: !79, line: 192, baseType: !3915, size: 31872, offset: 8832)
!3915 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderData", file: !440, line: 611, baseType: !1490)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "wrld", scope: !3780, file: !79, line: 193, baseType: !3917, size: 4224, offset: 40704)
!3917 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !1153, line: 131, baseType: !1152)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !3780, file: !79, line: 194, baseType: !347, size: 64, offset: 44928)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3780, file: !79, line: 195, baseType: !5, size: 32, offset: 44992)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !3780, file: !79, line: 195, baseType: !5, size: 32, offset: 45024)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !3780, file: !79, line: 197, baseType: !169, size: 128, offset: 45056)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !3780, file: !79, line: 200, baseType: !3923, size: 64, offset: 45184)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !79, line: 65, flags: DIFlagFwdDecl)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !3780, file: !79, line: 203, baseType: !2341, size: 64, offset: 45248)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !3780, file: !79, line: 204, baseType: !2439, size: 64, offset: 45312)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !3780, file: !79, line: 205, baseType: !2450, size: 64, offset: 45376)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !3780, file: !79, line: 206, baseType: !84, size: 32, offset: 45440)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "occlusiontree", scope: !3780, file: !79, line: 209, baseType: !76, size: 64, offset: 45504)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "strandsurface", scope: !3780, file: !79, line: 210, baseType: !169, size: 128, offset: 45568)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_offs", scope: !3780, file: !79, line: 213, baseType: !84, size: 32, offset: 45696)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "field_offs", scope: !3780, file: !79, line: 213, baseType: !84, size: 32, offset: 45728)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !3780, file: !79, line: 216, baseType: !93, size: 32, offset: 45760)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3780, file: !79, line: 216, baseType: !93, size: 32, offset: 45792)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !3780, file: !79, line: 216, baseType: !93, size: 32, offset: 45824)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !3780, file: !79, line: 216, baseType: !93, size: 32, offset: 45856)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !3780, file: !79, line: 216, baseType: !93, size: 32, offset: 45888)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "sortedhalos", scope: !3780, file: !79, line: 217, baseType: !2294, size: 64, offset: 45952)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "lights", scope: !3780, file: !79, line: 219, baseType: !169, size: 128, offset: 46016)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !3780, file: !79, line: 220, baseType: !169, size: 128, offset: 46144)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "objecttable", scope: !3780, file: !79, line: 222, baseType: !169, size: 128, offset: 46272)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "objectinstance", scope: !3780, file: !79, line: 224, baseType: !2454, size: 64, offset: 46400)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "instancetable", scope: !3780, file: !79, line: 225, baseType: !169, size: 128, offset: 46464)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "totinstance", scope: !3780, file: !79, line: 226, baseType: !93, size: 32, offset: 46592)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "bakebuf", scope: !3780, file: !79, line: 228, baseType: !923, size: 64, offset: 46656)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "orco_hash", scope: !3780, file: !79, line: 230, baseType: !401, size: 64, offset: 46720)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "sss_hash", scope: !3780, file: !79, line: 232, baseType: !401, size: 64, offset: 46784)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "sss_points", scope: !3780, file: !79, line: 233, baseType: !1129, size: 64, offset: 46848)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "sss_mat", scope: !3780, file: !79, line: 234, baseType: !105, size: 64, offset: 46912)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_names", scope: !3780, file: !79, line: 236, baseType: !169, size: 128, offset: 46976)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "excludeob", scope: !3780, file: !79, line: 238, baseType: !347, size: 64, offset: 47104)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "render_volumes_inside", scope: !3780, file: !79, line: 239, baseType: !169, size: 128, offset: 47168)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "volumes", scope: !3780, file: !79, line: 240, baseType: !169, size: 128, offset: 47296)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "memArena", scope: !3780, file: !79, line: 250, baseType: !3955, size: 64, offset: 47424)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !79, line: 57, flags: DIFlagFwdDecl)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "display_init", scope: !3780, file: !79, line: 253, baseType: !3958, size: 64, offset: 47488)
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{null, !76, !3793}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "dih", scope: !3780, file: !79, line: 254, baseType: !76, size: 64, offset: 47552)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "display_clear", scope: !3780, file: !79, line: 255, baseType: !3958, size: 64, offset: 47616)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !3780, file: !79, line: 256, baseType: !76, size: 64, offset: 47680)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !3780, file: !79, line: 257, baseType: !3965, size: 64, offset: 47744)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{null, !76, !3793, !3968}
!3968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !3780, file: !79, line: 258, baseType: !76, size: 64, offset: 47808)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "current_scene_update", scope: !3780, file: !79, line: 259, baseType: !3971, size: 64, offset: 47872)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{null, !76, !1144}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "suh", scope: !3780, file: !79, line: 260, baseType: !76, size: 64, offset: 47936)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !3780, file: !79, line: 262, baseType: !3976, size: 64, offset: 48000)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{null, !76, !3979}
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !941, line: 160, baseType: !3981)
!3981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !941, line: 151, size: 1216, elements: !3982)
!3982 = !{!3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3999, !4000, !4003, !4004, !4005, !4006}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3981, file: !941, line: 152, baseType: !93, size: 32)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3981, file: !941, line: 153, baseType: !93, size: 32, offset: 32)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3981, file: !941, line: 153, baseType: !93, size: 32, offset: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !3981, file: !941, line: 153, baseType: !93, size: 32, offset: 96)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !3981, file: !941, line: 153, baseType: !93, size: 32, offset: 128)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !3981, file: !941, line: 153, baseType: !93, size: 32, offset: 160)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3981, file: !941, line: 153, baseType: !93, size: 32, offset: 192)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !3981, file: !941, line: 154, baseType: !143, size: 16, offset: 224)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !3981, file: !941, line: 154, baseType: !143, size: 16, offset: 240)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !3981, file: !941, line: 154, baseType: !143, size: 16, offset: 256)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !3981, file: !941, line: 154, baseType: !143, size: 16, offset: 272)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !3981, file: !941, line: 154, baseType: !143, size: 16, offset: 288)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !3981, file: !941, line: 154, baseType: !143, size: 16, offset: 304)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !3981, file: !941, line: 155, baseType: !895, size: 8, offset: 320)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !3981, file: !941, line: 156, baseType: !3998, size: 64, offset: 384)
!3998 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !3981, file: !941, line: 156, baseType: !3998, size: 64, offset: 448)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !3981, file: !941, line: 157, baseType: !4001, size: 64, offset: 512)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !3981, file: !941, line: 157, baseType: !4001, size: 64, offset: 576)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !3981, file: !941, line: 158, baseType: !159, size: 512, offset: 640)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !3981, file: !941, line: 159, baseType: !84, size: 32, offset: 1152)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !3981, file: !941, line: 159, baseType: !84, size: 32, offset: 1184)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !3780, file: !79, line: 263, baseType: !76, size: 64, offset: 48064)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !3780, file: !79, line: 264, baseType: !4009, size: 64, offset: 48128)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{null, !76, !84}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !3780, file: !79, line: 265, baseType: !76, size: 64, offset: 48192)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "draw_lock", scope: !3780, file: !79, line: 267, baseType: !4014, size: 64, offset: 48256)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{null, !76, !93}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "dlh", scope: !3780, file: !79, line: 268, baseType: !76, size: 64, offset: 48320)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !3780, file: !79, line: 269, baseType: !2435, size: 64, offset: 48384)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !3780, file: !79, line: 270, baseType: !76, size: 64, offset: 48448)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !3780, file: !79, line: 272, baseType: !3980, size: 1216, offset: 48512)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3780, file: !79, line: 274, baseType: !4022, size: 64, offset: 49728)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !941, line: 45, flags: DIFlagFwdDecl)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3780, file: !79, line: 276, baseType: !2329, size: 64, offset: 49792)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3780, file: !79, line: 277, baseType: !3906, size: 64, offset: 49856)
!4026 = !DILocalVariable(name: "UNUSED_re", arg: 1, scope: !3775, file: !1, line: 467, type: !3778)
!4027 = !DILocation(line: 467, column: 36, scope: !3775)
!4028 = !DILocalVariable(name: "obi", arg: 2, scope: !3775, file: !1, line: 467, type: !2719)
!4029 = !DILocation(line: 467, column: 67, scope: !3775)
!4030 = !DILocalVariable(name: "vlr", arg: 3, scope: !3775, file: !1, line: 467, type: !94)
!4031 = !DILocation(line: 467, column: 81, scope: !3775)
!4032 = !DILocalVariable(name: "r_nor", arg: 4, scope: !3775, file: !1, line: 467, type: !89)
!4033 = !DILocation(line: 467, column: 92, scope: !3775)
!4034 = !DILocalVariable(name: "nmat", scope: !3775, file: !1, line: 469, type: !873)
!4035 = !DILocation(line: 469, column: 10, scope: !3775)
!4036 = !DILocation(line: 469, column: 20, scope: !3775)
!4037 = !DILocation(line: 469, column: 25, scope: !3775)
!4038 = !DILocation(line: 471, column: 6, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3775, file: !1, line: 471, column: 6)
!4040 = !DILocation(line: 471, column: 11, scope: !4039)
!4041 = !DILocation(line: 471, column: 16, scope: !4039)
!4042 = !DILocation(line: 471, column: 6, scope: !3775)
!4043 = !DILocation(line: 472, column: 15, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4039, file: !1, line: 471, column: 33)
!4045 = !DILocation(line: 472, column: 22, scope: !4044)
!4046 = !DILocation(line: 472, column: 28, scope: !4044)
!4047 = !DILocation(line: 472, column: 33, scope: !4044)
!4048 = !DILocation(line: 472, column: 3, scope: !4044)
!4049 = !DILocation(line: 473, column: 16, scope: !4044)
!4050 = !DILocation(line: 473, column: 3, scope: !4044)
!4051 = !DILocation(line: 474, column: 2, scope: !4044)
!4052 = !DILocation(line: 476, column: 14, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4039, file: !1, line: 475, column: 7)
!4054 = !DILocation(line: 476, column: 21, scope: !4053)
!4055 = !DILocation(line: 476, column: 26, scope: !4053)
!4056 = !DILocation(line: 476, column: 3, scope: !4053)
!4057 = !DILocation(line: 478, column: 1, scope: !3775)
!4058 = distinct !DISubprogram(name: "normalize_v3", scope: !3758, file: !3758, line: 830, type: !4059, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!84, !89}
!4061 = !DILocalVariable(name: "n", arg: 1, scope: !4058, file: !3758, line: 830, type: !89)
!4062 = !DILocation(line: 830, column: 34, scope: !4058)
!4063 = !DILocation(line: 832, column: 25, scope: !4058)
!4064 = !DILocation(line: 832, column: 28, scope: !4058)
!4065 = !DILocation(line: 832, column: 9, scope: !4058)
!4066 = !DILocation(line: 832, column: 2, scope: !4058)
!4067 = distinct !DISubprogram(name: "RE_set_customdata_names", scope: !1, file: !1, line: 480, type: !4068, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4068 = !DISubroutineType(types: !4069)
!4069 = !{null, !2460, !774}
!4070 = !DILocalVariable(name: "obr", arg: 1, scope: !4067, file: !1, line: 480, type: !2460)
!4071 = !DILocation(line: 480, column: 41, scope: !4067)
!4072 = !DILocalVariable(name: "data", arg: 2, scope: !4067, file: !1, line: 480, type: !774)
!4073 = !DILocation(line: 480, column: 58, scope: !4067)
!4074 = !DILocalVariable(name: "layer", scope: !4067, file: !1, line: 485, type: !580)
!4075 = !DILocation(line: 485, column: 19, scope: !4067)
!4076 = !DILocalVariable(name: "numtf", scope: !4067, file: !1, line: 486, type: !93)
!4077 = !DILocation(line: 486, column: 6, scope: !4067)
!4078 = !DILocalVariable(name: "numcol", scope: !4067, file: !1, line: 486, type: !93)
!4079 = !DILocation(line: 486, column: 17, scope: !4067)
!4080 = !DILocalVariable(name: "i", scope: !4067, file: !1, line: 486, type: !93)
!4081 = !DILocation(line: 486, column: 29, scope: !4067)
!4082 = !DILocalVariable(name: "mtfn", scope: !4067, file: !1, line: 486, type: !93)
!4083 = !DILocation(line: 486, column: 32, scope: !4067)
!4084 = !DILocalVariable(name: "mcn", scope: !4067, file: !1, line: 486, type: !93)
!4085 = !DILocation(line: 486, column: 38, scope: !4067)
!4086 = !DILocation(line: 488, column: 27, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4067, file: !1, line: 488, column: 6)
!4088 = !DILocation(line: 488, column: 6, scope: !4087)
!4089 = !DILocation(line: 488, column: 6, scope: !4067)
!4090 = !DILocation(line: 489, column: 38, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4087, file: !1, line: 488, column: 45)
!4092 = !DILocation(line: 489, column: 10, scope: !4091)
!4093 = !DILocation(line: 489, column: 8, scope: !4091)
!4094 = !DILocation(line: 490, column: 16, scope: !4091)
!4095 = !DILocation(line: 490, column: 49, scope: !4091)
!4096 = !DILocation(line: 490, column: 48, scope: !4091)
!4097 = !DILocation(line: 490, column: 3, scope: !4091)
!4098 = !DILocation(line: 490, column: 8, scope: !4091)
!4099 = !DILocation(line: 490, column: 14, scope: !4091)
!4100 = !DILocation(line: 491, column: 2, scope: !4091)
!4101 = !DILocation(line: 493, column: 27, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4067, file: !1, line: 493, column: 6)
!4103 = !DILocation(line: 493, column: 6, scope: !4102)
!4104 = !DILocation(line: 493, column: 6, scope: !4067)
!4105 = !DILocation(line: 494, column: 39, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4102, file: !1, line: 493, column: 43)
!4107 = !DILocation(line: 494, column: 11, scope: !4106)
!4108 = !DILocation(line: 494, column: 9, scope: !4106)
!4109 = !DILocation(line: 495, column: 14, scope: !4106)
!4110 = !DILocation(line: 495, column: 45, scope: !4106)
!4111 = !DILocation(line: 495, column: 44, scope: !4106)
!4112 = !DILocation(line: 495, column: 3, scope: !4106)
!4113 = !DILocation(line: 495, column: 8, scope: !4106)
!4114 = !DILocation(line: 495, column: 12, scope: !4106)
!4115 = !DILocation(line: 496, column: 2, scope: !4106)
!4116 = !DILocation(line: 498, column: 8, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4067, file: !1, line: 498, column: 2)
!4118 = !DILocation(line: 498, column: 16, scope: !4117)
!4119 = !DILocation(line: 498, column: 23, scope: !4117)
!4120 = !DILocation(line: 498, column: 7, scope: !4117)
!4121 = !DILocation(line: 498, column: 27, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4117, file: !1, line: 498, column: 2)
!4123 = !DILocation(line: 498, column: 31, scope: !4122)
!4124 = !DILocation(line: 498, column: 37, scope: !4122)
!4125 = !DILocation(line: 498, column: 29, scope: !4122)
!4126 = !DILocation(line: 498, column: 2, scope: !4117)
!4127 = !DILocation(line: 499, column: 11, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4122, file: !1, line: 498, column: 52)
!4129 = !DILocation(line: 499, column: 17, scope: !4128)
!4130 = !DILocation(line: 499, column: 24, scope: !4128)
!4131 = !DILocation(line: 499, column: 8, scope: !4128)
!4132 = !DILocation(line: 501, column: 7, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4128, file: !1, line: 501, column: 7)
!4134 = !DILocation(line: 501, column: 14, scope: !4133)
!4135 = !DILocation(line: 501, column: 19, scope: !4133)
!4136 = !DILocation(line: 501, column: 7, scope: !4128)
!4137 = !DILocation(line: 502, column: 16, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4133, file: !1, line: 501, column: 33)
!4139 = !DILocation(line: 502, column: 21, scope: !4138)
!4140 = !DILocation(line: 502, column: 32, scope: !4138)
!4141 = !DILocation(line: 502, column: 37, scope: !4138)
!4142 = !DILocation(line: 502, column: 44, scope: !4138)
!4143 = !DILocation(line: 502, column: 4, scope: !4138)
!4144 = !DILocation(line: 503, column: 20, scope: !4138)
!4145 = !DILocation(line: 503, column: 4, scope: !4138)
!4146 = !DILocation(line: 503, column: 9, scope: !4138)
!4147 = !DILocation(line: 503, column: 18, scope: !4138)
!4148 = !DILocation(line: 504, column: 21, scope: !4138)
!4149 = !DILocation(line: 504, column: 28, scope: !4138)
!4150 = !DILocation(line: 504, column: 4, scope: !4138)
!4151 = !DILocation(line: 504, column: 9, scope: !4138)
!4152 = !DILocation(line: 504, column: 19, scope: !4138)
!4153 = !DILocation(line: 505, column: 3, scope: !4138)
!4154 = !DILocation(line: 506, column: 12, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4133, file: !1, line: 506, column: 12)
!4156 = !DILocation(line: 506, column: 19, scope: !4155)
!4157 = !DILocation(line: 506, column: 24, scope: !4155)
!4158 = !DILocation(line: 506, column: 12, scope: !4133)
!4159 = !DILocation(line: 507, column: 16, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4155, file: !1, line: 506, column: 36)
!4161 = !DILocation(line: 507, column: 21, scope: !4160)
!4162 = !DILocation(line: 507, column: 29, scope: !4160)
!4163 = !DILocation(line: 507, column: 34, scope: !4160)
!4164 = !DILocation(line: 507, column: 41, scope: !4160)
!4165 = !DILocation(line: 507, column: 4, scope: !4160)
!4166 = !DILocation(line: 508, column: 18, scope: !4160)
!4167 = !DILocation(line: 508, column: 4, scope: !4160)
!4168 = !DILocation(line: 508, column: 9, scope: !4160)
!4169 = !DILocation(line: 508, column: 16, scope: !4160)
!4170 = !DILocation(line: 509, column: 3, scope: !4160)
!4171 = !DILocation(line: 510, column: 2, scope: !4128)
!4172 = !DILocation(line: 498, column: 48, scope: !4122)
!4173 = !DILocation(line: 498, column: 2, scope: !4122)
!4174 = distinct !{!4174, !4126, !4175}
!4175 = !DILocation(line: 510, column: 2, scope: !4117)
!4176 = !DILocation(line: 511, column: 1, scope: !4067)
!4177 = distinct !DISubprogram(name: "RE_strandren_get_surfnor", scope: !1, file: !1, line: 553, type: !4178, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{!89, !2460, !2182, !93}
!4180 = !DILocalVariable(name: "obr", arg: 1, scope: !4177, file: !1, line: 553, type: !2460)
!4181 = !DILocation(line: 553, column: 44, scope: !4177)
!4182 = !DILocalVariable(name: "strand", arg: 2, scope: !4177, file: !1, line: 553, type: !2182)
!4183 = !DILocation(line: 553, column: 60, scope: !4177)
!4184 = !DILocalVariable(name: "verify", arg: 3, scope: !4177, file: !1, line: 553, type: !93)
!4185 = !DILocation(line: 553, column: 72, scope: !4177)
!4186 = !DILocalVariable(name: "surfnor", scope: !4177, file: !1, line: 555, type: !89)
!4187 = !DILocation(line: 555, column: 9, scope: !4177)
!4188 = !DILocalVariable(name: "nr", scope: !4177, file: !1, line: 556, type: !93)
!4189 = !DILocation(line: 556, column: 6, scope: !4177)
!4190 = !DILocation(line: 556, column: 10, scope: !4177)
!4191 = !DILocation(line: 556, column: 18, scope: !4177)
!4192 = !DILocation(line: 556, column: 23, scope: !4177)
!4193 = !DILocation(line: 558, column: 11, scope: !4177)
!4194 = !DILocation(line: 558, column: 16, scope: !4177)
!4195 = !DILocation(line: 558, column: 28, scope: !4177)
!4196 = !DILocation(line: 558, column: 32, scope: !4177)
!4197 = !DILocation(line: 558, column: 9, scope: !4177)
!4198 = !DILocation(line: 559, column: 6, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4177, file: !1, line: 559, column: 6)
!4200 = !DILocation(line: 559, column: 13, scope: !4199)
!4201 = !DILocation(line: 559, column: 6, scope: !4177)
!4202 = !DILocation(line: 560, column: 7, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4204, file: !1, line: 560, column: 7)
!4204 = distinct !DILexicalBlock(scope: !4199, file: !1, line: 559, column: 21)
!4205 = !DILocation(line: 560, column: 7, scope: !4204)
!4206 = !DILocation(line: 561, column: 43, scope: !4203)
!4207 = !DILocation(line: 561, column: 13, scope: !4203)
!4208 = !DILocation(line: 561, column: 18, scope: !4203)
!4209 = !DILocation(line: 561, column: 30, scope: !4203)
!4210 = !DILocation(line: 561, column: 34, scope: !4203)
!4211 = !DILocation(line: 561, column: 41, scope: !4203)
!4212 = !DILocation(line: 561, column: 11, scope: !4203)
!4213 = !DILocation(line: 561, column: 4, scope: !4203)
!4214 = !DILocation(line: 563, column: 4, scope: !4203)
!4215 = !DILocation(line: 564, column: 2, scope: !4204)
!4216 = !DILocation(line: 565, column: 9, scope: !4177)
!4217 = !DILocation(line: 565, column: 20, scope: !4177)
!4218 = !DILocation(line: 565, column: 28, scope: !4177)
!4219 = !DILocation(line: 565, column: 34, scope: !4177)
!4220 = !DILocation(line: 565, column: 40, scope: !4177)
!4221 = !DILocation(line: 565, column: 17, scope: !4177)
!4222 = !DILocation(line: 565, column: 2, scope: !4177)
!4223 = !DILocation(line: 566, column: 1, scope: !4177)
!4224 = distinct !DISubprogram(name: "RE_strandren_get_uv", scope: !1, file: !1, line: 568, type: !4225, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{!89, !2460, !2182, !93, !3055, !93}
!4227 = !DILocalVariable(name: "obr", arg: 1, scope: !4224, file: !1, line: 568, type: !2460)
!4228 = !DILocation(line: 568, column: 39, scope: !4224)
!4229 = !DILocalVariable(name: "strand", arg: 2, scope: !4224, file: !1, line: 568, type: !2182)
!4230 = !DILocation(line: 568, column: 55, scope: !4224)
!4231 = !DILocalVariable(name: "n", arg: 3, scope: !4224, file: !1, line: 568, type: !93)
!4232 = !DILocation(line: 568, column: 67, scope: !4224)
!4233 = !DILocalVariable(name: "name", arg: 4, scope: !4224, file: !1, line: 568, type: !3055)
!4234 = !DILocation(line: 568, column: 77, scope: !4224)
!4235 = !DILocalVariable(name: "verify", arg: 5, scope: !4224, file: !1, line: 568, type: !93)
!4236 = !DILocation(line: 568, column: 87, scope: !4224)
!4237 = !DILocalVariable(name: "node", scope: !4224, file: !1, line: 570, type: !4238)
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4239, size: 64)
!4239 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandTableNode", file: !2239, line: 92, baseType: !2281)
!4240 = !DILocation(line: 570, column: 19, scope: !4224)
!4241 = !DILocalVariable(name: "nr", scope: !4224, file: !1, line: 571, type: !93)
!4242 = !DILocation(line: 571, column: 6, scope: !4224)
!4243 = !DILocation(line: 571, column: 10, scope: !4224)
!4244 = !DILocation(line: 571, column: 18, scope: !4224)
!4245 = !DILocation(line: 571, column: 23, scope: !4224)
!4246 = !DILocalVariable(name: "strandindex", scope: !4224, file: !1, line: 571, type: !93)
!4247 = !DILocation(line: 571, column: 28, scope: !4224)
!4248 = !DILocation(line: 571, column: 42, scope: !4224)
!4249 = !DILocation(line: 571, column: 50, scope: !4224)
!4250 = !DILocation(line: 571, column: 55, scope: !4224)
!4251 = !DILocalVariable(name: "index", scope: !4224, file: !1, line: 572, type: !93)
!4252 = !DILocation(line: 572, column: 6, scope: !4224)
!4253 = !DILocation(line: 572, column: 14, scope: !4224)
!4254 = !DILocation(line: 572, column: 15, scope: !4224)
!4255 = !DILocation(line: 572, column: 22, scope: !4224)
!4256 = !DILocation(line: 572, column: 20, scope: !4224)
!4257 = !DILocation(line: 574, column: 9, scope: !4224)
!4258 = !DILocation(line: 574, column: 14, scope: !4224)
!4259 = !DILocation(line: 574, column: 26, scope: !4224)
!4260 = !DILocation(line: 574, column: 6, scope: !4224)
!4261 = !DILocation(line: 576, column: 6, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4224, file: !1, line: 576, column: 6)
!4263 = !DILocation(line: 576, column: 6, scope: !4224)
!4264 = !DILocation(line: 577, column: 7, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !1, line: 577, column: 7)
!4266 = distinct !DILexicalBlock(scope: !4262, file: !1, line: 576, column: 14)
!4267 = !DILocation(line: 577, column: 10, scope: !4265)
!4268 = !DILocation(line: 577, column: 16, scope: !4265)
!4269 = !DILocation(line: 577, column: 8, scope: !4265)
!4270 = !DILocation(line: 577, column: 7, scope: !4266)
!4271 = !DILocalVariable(name: "uv", scope: !4272, file: !1, line: 578, type: !89)
!4272 = distinct !DILexicalBlock(scope: !4265, file: !1, line: 577, column: 23)
!4273 = !DILocation(line: 578, column: 11, scope: !4272)
!4274 = !DILocation(line: 578, column: 15, scope: !4272)
!4275 = !DILocation(line: 578, column: 21, scope: !4272)
!4276 = !DILocalVariable(name: "size", scope: !4272, file: !1, line: 579, type: !93)
!4277 = !DILocation(line: 579, column: 8, scope: !4272)
!4278 = !DILocation(line: 579, column: 15, scope: !4272)
!4279 = !DILocation(line: 579, column: 16, scope: !4272)
!4280 = !DILocation(line: 579, column: 19, scope: !4272)
!4281 = !DILocation(line: 581, column: 14, scope: !4272)
!4282 = !DILocation(line: 581, column: 26, scope: !4272)
!4283 = !DILocation(line: 581, column: 30, scope: !4272)
!4284 = !DILocation(line: 581, column: 44, scope: !4272)
!4285 = !DILocation(line: 581, column: 4, scope: !4272)
!4286 = !DILocation(line: 581, column: 10, scope: !4272)
!4287 = !DILocation(line: 581, column: 12, scope: !4272)
!4288 = !DILocation(line: 583, column: 8, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4272, file: !1, line: 583, column: 8)
!4290 = !DILocation(line: 583, column: 8, scope: !4272)
!4291 = !DILocation(line: 584, column: 11, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4289, file: !1, line: 583, column: 12)
!4293 = !DILocation(line: 584, column: 17, scope: !4292)
!4294 = !DILocation(line: 584, column: 22, scope: !4292)
!4295 = !DILocation(line: 584, column: 9, scope: !4292)
!4296 = !DILocation(line: 585, column: 12, scope: !4292)
!4297 = !DILocation(line: 585, column: 18, scope: !4292)
!4298 = !DILocation(line: 585, column: 5, scope: !4292)
!4299 = !DILocation(line: 585, column: 22, scope: !4292)
!4300 = !DILocation(line: 585, column: 26, scope: !4292)
!4301 = !DILocation(line: 585, column: 30, scope: !4292)
!4302 = !DILocation(line: 585, column: 44, scope: !4292)
!4303 = !DILocation(line: 586, column: 5, scope: !4292)
!4304 = !DILocation(line: 586, column: 15, scope: !4292)
!4305 = !DILocation(line: 587, column: 4, scope: !4292)
!4306 = !DILocation(line: 589, column: 17, scope: !4272)
!4307 = !DILocation(line: 589, column: 18, scope: !4272)
!4308 = !DILocation(line: 589, column: 4, scope: !4272)
!4309 = !DILocation(line: 589, column: 10, scope: !4272)
!4310 = !DILocation(line: 589, column: 15, scope: !4272)
!4311 = !DILocation(line: 590, column: 3, scope: !4272)
!4312 = !DILocation(line: 591, column: 2, scope: !4266)
!4313 = !DILocation(line: 593, column: 7, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !1, line: 593, column: 7)
!4315 = distinct !DILexicalBlock(scope: !4262, file: !1, line: 592, column: 7)
!4316 = !DILocation(line: 593, column: 10, scope: !4314)
!4317 = !DILocation(line: 593, column: 16, scope: !4314)
!4318 = !DILocation(line: 593, column: 8, scope: !4314)
!4319 = !DILocation(line: 593, column: 7, scope: !4315)
!4320 = !DILocation(line: 594, column: 4, scope: !4314)
!4321 = !DILocation(line: 596, column: 7, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4315, file: !1, line: 596, column: 7)
!4323 = !DILocation(line: 596, column: 7, scope: !4315)
!4324 = !DILocation(line: 596, column: 20, scope: !4322)
!4325 = !DILocation(line: 596, column: 25, scope: !4322)
!4326 = !DILocation(line: 596, column: 32, scope: !4322)
!4327 = !DILocation(line: 596, column: 14, scope: !4322)
!4328 = !DILocation(line: 596, column: 18, scope: !4322)
!4329 = !DILocation(line: 596, column: 13, scope: !4322)
!4330 = !DILocation(line: 599, column: 9, scope: !4224)
!4331 = !DILocation(line: 599, column: 15, scope: !4224)
!4332 = !DILocation(line: 599, column: 20, scope: !4224)
!4333 = !DILocation(line: 599, column: 25, scope: !4224)
!4334 = !DILocation(line: 599, column: 18, scope: !4224)
!4335 = !DILocation(line: 599, column: 2, scope: !4224)
!4336 = !DILocation(line: 600, column: 1, scope: !4224)
!4337 = distinct !DISubprogram(name: "RE_strandren_get_mcol", scope: !1, file: !1, line: 602, type: !4338, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{!2256, !2460, !2182, !93, !3055, !93}
!4340 = !DILocalVariable(name: "obr", arg: 1, scope: !4337, file: !1, line: 602, type: !2460)
!4341 = !DILocation(line: 602, column: 40, scope: !4337)
!4342 = !DILocalVariable(name: "strand", arg: 2, scope: !4337, file: !1, line: 602, type: !2182)
!4343 = !DILocation(line: 602, column: 56, scope: !4337)
!4344 = !DILocalVariable(name: "n", arg: 3, scope: !4337, file: !1, line: 602, type: !93)
!4345 = !DILocation(line: 602, column: 68, scope: !4337)
!4346 = !DILocalVariable(name: "name", arg: 4, scope: !4337, file: !1, line: 602, type: !3055)
!4347 = !DILocation(line: 602, column: 78, scope: !4337)
!4348 = !DILocalVariable(name: "verify", arg: 5, scope: !4337, file: !1, line: 602, type: !93)
!4349 = !DILocation(line: 602, column: 88, scope: !4337)
!4350 = !DILocalVariable(name: "node", scope: !4337, file: !1, line: 604, type: !4238)
!4351 = !DILocation(line: 604, column: 19, scope: !4337)
!4352 = !DILocalVariable(name: "nr", scope: !4337, file: !1, line: 605, type: !93)
!4353 = !DILocation(line: 605, column: 6, scope: !4337)
!4354 = !DILocation(line: 605, column: 10, scope: !4337)
!4355 = !DILocation(line: 605, column: 18, scope: !4337)
!4356 = !DILocation(line: 605, column: 23, scope: !4337)
!4357 = !DILocalVariable(name: "strandindex", scope: !4337, file: !1, line: 605, type: !93)
!4358 = !DILocation(line: 605, column: 28, scope: !4337)
!4359 = !DILocation(line: 605, column: 42, scope: !4337)
!4360 = !DILocation(line: 605, column: 50, scope: !4337)
!4361 = !DILocation(line: 605, column: 55, scope: !4337)
!4362 = !DILocalVariable(name: "index", scope: !4337, file: !1, line: 606, type: !93)
!4363 = !DILocation(line: 606, column: 6, scope: !4337)
!4364 = !DILocation(line: 606, column: 14, scope: !4337)
!4365 = !DILocation(line: 606, column: 15, scope: !4337)
!4366 = !DILocation(line: 606, column: 22, scope: !4337)
!4367 = !DILocation(line: 606, column: 20, scope: !4337)
!4368 = !DILocation(line: 608, column: 9, scope: !4337)
!4369 = !DILocation(line: 608, column: 14, scope: !4337)
!4370 = !DILocation(line: 608, column: 26, scope: !4337)
!4371 = !DILocation(line: 608, column: 6, scope: !4337)
!4372 = !DILocation(line: 610, column: 6, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4337, file: !1, line: 610, column: 6)
!4374 = !DILocation(line: 610, column: 6, scope: !4337)
!4375 = !DILocation(line: 611, column: 7, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !1, line: 611, column: 7)
!4377 = distinct !DILexicalBlock(scope: !4373, file: !1, line: 610, column: 14)
!4378 = !DILocation(line: 611, column: 10, scope: !4376)
!4379 = !DILocation(line: 611, column: 16, scope: !4376)
!4380 = !DILocation(line: 611, column: 8, scope: !4376)
!4381 = !DILocation(line: 611, column: 7, scope: !4377)
!4382 = !DILocalVariable(name: "mcol", scope: !4383, file: !1, line: 612, type: !3212)
!4383 = distinct !DILexicalBlock(scope: !4376, file: !1, line: 611, column: 25)
!4384 = !DILocation(line: 612, column: 10, scope: !4383)
!4385 = !DILocation(line: 612, column: 16, scope: !4383)
!4386 = !DILocation(line: 612, column: 22, scope: !4383)
!4387 = !DILocalVariable(name: "size", scope: !4383, file: !1, line: 613, type: !93)
!4388 = !DILocation(line: 613, column: 8, scope: !4383)
!4389 = !DILocation(line: 613, column: 15, scope: !4383)
!4390 = !DILocation(line: 613, column: 16, scope: !4383)
!4391 = !DILocation(line: 613, column: 19, scope: !4383)
!4392 = !DILocation(line: 615, column: 16, scope: !4383)
!4393 = !DILocation(line: 615, column: 28, scope: !4383)
!4394 = !DILocation(line: 615, column: 32, scope: !4383)
!4395 = !DILocation(line: 615, column: 45, scope: !4383)
!4396 = !DILocation(line: 615, column: 4, scope: !4383)
!4397 = !DILocation(line: 615, column: 10, scope: !4383)
!4398 = !DILocation(line: 615, column: 14, scope: !4383)
!4399 = !DILocation(line: 617, column: 8, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 617, column: 8)
!4401 = !DILocation(line: 617, column: 8, scope: !4383)
!4402 = !DILocation(line: 618, column: 11, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 617, column: 14)
!4404 = !DILocation(line: 618, column: 17, scope: !4403)
!4405 = !DILocation(line: 618, column: 24, scope: !4403)
!4406 = !DILocation(line: 618, column: 9, scope: !4403)
!4407 = !DILocation(line: 619, column: 12, scope: !4403)
!4408 = !DILocation(line: 619, column: 18, scope: !4403)
!4409 = !DILocation(line: 619, column: 5, scope: !4403)
!4410 = !DILocation(line: 619, column: 24, scope: !4403)
!4411 = !DILocation(line: 619, column: 30, scope: !4403)
!4412 = !DILocation(line: 619, column: 34, scope: !4403)
!4413 = !DILocation(line: 619, column: 47, scope: !4403)
!4414 = !DILocation(line: 620, column: 5, scope: !4403)
!4415 = !DILocation(line: 620, column: 15, scope: !4403)
!4416 = !DILocation(line: 621, column: 4, scope: !4403)
!4417 = !DILocation(line: 623, column: 19, scope: !4383)
!4418 = !DILocation(line: 623, column: 20, scope: !4383)
!4419 = !DILocation(line: 623, column: 4, scope: !4383)
!4420 = !DILocation(line: 623, column: 10, scope: !4383)
!4421 = !DILocation(line: 623, column: 17, scope: !4383)
!4422 = !DILocation(line: 624, column: 3, scope: !4383)
!4423 = !DILocation(line: 625, column: 2, scope: !4377)
!4424 = !DILocation(line: 627, column: 7, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4426, file: !1, line: 627, column: 7)
!4426 = distinct !DILexicalBlock(scope: !4373, file: !1, line: 626, column: 7)
!4427 = !DILocation(line: 627, column: 10, scope: !4425)
!4428 = !DILocation(line: 627, column: 16, scope: !4425)
!4429 = !DILocation(line: 627, column: 8, scope: !4425)
!4430 = !DILocation(line: 627, column: 7, scope: !4426)
!4431 = !DILocation(line: 628, column: 4, scope: !4425)
!4432 = !DILocation(line: 630, column: 7, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4426, file: !1, line: 630, column: 7)
!4434 = !DILocation(line: 630, column: 7, scope: !4426)
!4435 = !DILocation(line: 630, column: 20, scope: !4433)
!4436 = !DILocation(line: 630, column: 25, scope: !4433)
!4437 = !DILocation(line: 630, column: 30, scope: !4433)
!4438 = !DILocation(line: 630, column: 14, scope: !4433)
!4439 = !DILocation(line: 630, column: 18, scope: !4433)
!4440 = !DILocation(line: 630, column: 13, scope: !4433)
!4441 = !DILocation(line: 633, column: 9, scope: !4337)
!4442 = !DILocation(line: 633, column: 15, scope: !4337)
!4443 = !DILocation(line: 633, column: 22, scope: !4337)
!4444 = !DILocation(line: 633, column: 27, scope: !4337)
!4445 = !DILocation(line: 633, column: 20, scope: !4337)
!4446 = !DILocation(line: 633, column: 2, scope: !4337)
!4447 = !DILocation(line: 634, column: 1, scope: !4337)
!4448 = distinct !DISubprogram(name: "RE_strandren_get_simplify", scope: !1, file: !1, line: 636, type: !4449, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!89, !2215, !2284, !93}
!4451 = !DILocalVariable(name: "obr", arg: 1, scope: !4448, file: !1, line: 636, type: !2215)
!4452 = !DILocation(line: 636, column: 52, scope: !4448)
!4453 = !DILocalVariable(name: "strand", arg: 2, scope: !4448, file: !1, line: 636, type: !2284)
!4454 = !DILocation(line: 636, column: 75, scope: !4448)
!4455 = !DILocalVariable(name: "verify", arg: 3, scope: !4448, file: !1, line: 636, type: !93)
!4456 = !DILocation(line: 636, column: 87, scope: !4448)
!4457 = !DILocalVariable(name: "simplify", scope: !4448, file: !1, line: 638, type: !89)
!4458 = !DILocation(line: 638, column: 9, scope: !4448)
!4459 = !DILocalVariable(name: "nr", scope: !4448, file: !1, line: 639, type: !93)
!4460 = !DILocation(line: 639, column: 6, scope: !4448)
!4461 = !DILocation(line: 639, column: 10, scope: !4448)
!4462 = !DILocation(line: 639, column: 18, scope: !4448)
!4463 = !DILocation(line: 639, column: 23, scope: !4448)
!4464 = !DILocation(line: 641, column: 12, scope: !4448)
!4465 = !DILocation(line: 641, column: 17, scope: !4448)
!4466 = !DILocation(line: 641, column: 29, scope: !4448)
!4467 = !DILocation(line: 641, column: 33, scope: !4448)
!4468 = !DILocation(line: 641, column: 10, scope: !4448)
!4469 = !DILocation(line: 642, column: 6, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4448, file: !1, line: 642, column: 6)
!4471 = !DILocation(line: 642, column: 14, scope: !4470)
!4472 = !DILocation(line: 642, column: 6, scope: !4448)
!4473 = !DILocation(line: 643, column: 7, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !1, line: 643, column: 7)
!4475 = distinct !DILexicalBlock(scope: !4470, file: !1, line: 642, column: 22)
!4476 = !DILocation(line: 643, column: 7, scope: !4475)
!4477 = !DILocation(line: 644, column: 45, scope: !4474)
!4478 = !DILocation(line: 644, column: 14, scope: !4474)
!4479 = !DILocation(line: 644, column: 19, scope: !4474)
!4480 = !DILocation(line: 644, column: 31, scope: !4474)
!4481 = !DILocation(line: 644, column: 35, scope: !4474)
!4482 = !DILocation(line: 644, column: 43, scope: !4474)
!4483 = !DILocation(line: 644, column: 12, scope: !4474)
!4484 = !DILocation(line: 644, column: 4, scope: !4474)
!4485 = !DILocation(line: 646, column: 4, scope: !4474)
!4486 = !DILocation(line: 647, column: 2, scope: !4475)
!4487 = !DILocation(line: 648, column: 9, scope: !4448)
!4488 = !DILocation(line: 648, column: 21, scope: !4448)
!4489 = !DILocation(line: 648, column: 29, scope: !4448)
!4490 = !DILocation(line: 648, column: 35, scope: !4448)
!4491 = !DILocation(line: 648, column: 41, scope: !4448)
!4492 = !DILocation(line: 648, column: 18, scope: !4448)
!4493 = !DILocation(line: 648, column: 2, scope: !4448)
!4494 = !DILocation(line: 649, column: 1, scope: !4448)
!4495 = distinct !DISubprogram(name: "RE_strandren_get_face", scope: !1, file: !1, line: 651, type: !4496, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!809, !2460, !2182, !93}
!4498 = !DILocalVariable(name: "obr", arg: 1, scope: !4495, file: !1, line: 651, type: !2460)
!4499 = !DILocation(line: 651, column: 39, scope: !4495)
!4500 = !DILocalVariable(name: "strand", arg: 2, scope: !4495, file: !1, line: 651, type: !2182)
!4501 = !DILocation(line: 651, column: 55, scope: !4495)
!4502 = !DILocalVariable(name: "verify", arg: 3, scope: !4495, file: !1, line: 651, type: !93)
!4503 = !DILocation(line: 651, column: 67, scope: !4495)
!4504 = !DILocalVariable(name: "face", scope: !4495, file: !1, line: 653, type: !809)
!4505 = !DILocation(line: 653, column: 7, scope: !4495)
!4506 = !DILocalVariable(name: "nr", scope: !4495, file: !1, line: 654, type: !93)
!4507 = !DILocation(line: 654, column: 6, scope: !4495)
!4508 = !DILocation(line: 654, column: 10, scope: !4495)
!4509 = !DILocation(line: 654, column: 18, scope: !4495)
!4510 = !DILocation(line: 654, column: 23, scope: !4495)
!4511 = !DILocation(line: 656, column: 8, scope: !4495)
!4512 = !DILocation(line: 656, column: 13, scope: !4495)
!4513 = !DILocation(line: 656, column: 25, scope: !4495)
!4514 = !DILocation(line: 656, column: 29, scope: !4495)
!4515 = !DILocation(line: 656, column: 6, scope: !4495)
!4516 = !DILocation(line: 657, column: 6, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4495, file: !1, line: 657, column: 6)
!4518 = !DILocation(line: 657, column: 10, scope: !4517)
!4519 = !DILocation(line: 657, column: 6, scope: !4495)
!4520 = !DILocation(line: 658, column: 7, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !1, line: 658, column: 7)
!4522 = distinct !DILexicalBlock(scope: !4517, file: !1, line: 657, column: 18)
!4523 = !DILocation(line: 658, column: 7, scope: !4522)
!4524 = !DILocation(line: 659, column: 37, scope: !4521)
!4525 = !DILocation(line: 659, column: 10, scope: !4521)
!4526 = !DILocation(line: 659, column: 15, scope: !4521)
!4527 = !DILocation(line: 659, column: 27, scope: !4521)
!4528 = !DILocation(line: 659, column: 31, scope: !4521)
!4529 = !DILocation(line: 659, column: 35, scope: !4521)
!4530 = !DILocation(line: 659, column: 8, scope: !4521)
!4531 = !DILocation(line: 659, column: 4, scope: !4521)
!4532 = !DILocation(line: 661, column: 4, scope: !4521)
!4533 = !DILocation(line: 662, column: 2, scope: !4522)
!4534 = !DILocation(line: 663, column: 9, scope: !4495)
!4535 = !DILocation(line: 663, column: 17, scope: !4495)
!4536 = !DILocation(line: 663, column: 25, scope: !4495)
!4537 = !DILocation(line: 663, column: 31, scope: !4495)
!4538 = !DILocation(line: 663, column: 37, scope: !4495)
!4539 = !DILocation(line: 663, column: 14, scope: !4495)
!4540 = !DILocation(line: 663, column: 2, scope: !4495)
!4541 = !DILocation(line: 664, column: 1, scope: !4495)
!4542 = distinct !DISubprogram(name: "RE_strandren_get_winspeed", scope: !1, file: !1, line: 667, type: !4543, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!89, !2719, !2182, !93}
!4545 = !DILocalVariable(name: "obi", arg: 1, scope: !4542, file: !1, line: 667, type: !2719)
!4546 = !DILocation(line: 667, column: 53, scope: !4542)
!4547 = !DILocalVariable(name: "strand", arg: 2, scope: !4542, file: !1, line: 667, type: !2182)
!4548 = !DILocation(line: 667, column: 69, scope: !4542)
!4549 = !DILocalVariable(name: "verify", arg: 3, scope: !4542, file: !1, line: 667, type: !93)
!4550 = !DILocation(line: 667, column: 81, scope: !4542)
!4551 = !DILocalVariable(name: "winspeed", scope: !4542, file: !1, line: 669, type: !89)
!4552 = !DILocation(line: 669, column: 9, scope: !4542)
!4553 = !DILocalVariable(name: "totvector", scope: !4542, file: !1, line: 670, type: !93)
!4554 = !DILocation(line: 670, column: 6, scope: !4542)
!4555 = !DILocation(line: 672, column: 12, scope: !4542)
!4556 = !DILocation(line: 672, column: 17, scope: !4542)
!4557 = !DILocation(line: 672, column: 10, scope: !4542)
!4558 = !DILocation(line: 673, column: 6, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4542, file: !1, line: 673, column: 6)
!4560 = !DILocation(line: 673, column: 14, scope: !4559)
!4561 = !DILocation(line: 673, column: 6, scope: !4542)
!4562 = !DILocation(line: 674, column: 7, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 674, column: 7)
!4564 = distinct !DILexicalBlock(scope: !4559, file: !1, line: 673, column: 22)
!4565 = !DILocation(line: 674, column: 7, scope: !4564)
!4566 = !DILocation(line: 675, column: 15, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4563, file: !1, line: 674, column: 15)
!4568 = !DILocation(line: 675, column: 20, scope: !4567)
!4569 = !DILocation(line: 675, column: 25, scope: !4567)
!4570 = !DILocation(line: 675, column: 35, scope: !4567)
!4571 = !DILocation(line: 675, column: 40, scope: !4567)
!4572 = !DILocation(line: 675, column: 45, scope: !4567)
!4573 = !DILocation(line: 675, column: 33, scope: !4567)
!4574 = !DILocation(line: 675, column: 13, scope: !4567)
!4575 = !DILocation(line: 676, column: 28, scope: !4567)
!4576 = !DILocation(line: 676, column: 40, scope: !4567)
!4577 = !DILocation(line: 676, column: 49, scope: !4567)
!4578 = !DILocation(line: 676, column: 67, scope: !4567)
!4579 = !DILocation(line: 676, column: 14, scope: !4567)
!4580 = !DILocation(line: 676, column: 19, scope: !4567)
!4581 = !DILocation(line: 676, column: 26, scope: !4567)
!4582 = !DILocation(line: 676, column: 12, scope: !4567)
!4583 = !DILocation(line: 677, column: 3, scope: !4567)
!4584 = !DILocation(line: 679, column: 4, scope: !4563)
!4585 = !DILocation(line: 680, column: 2, scope: !4564)
!4586 = !DILocation(line: 681, column: 9, scope: !4542)
!4587 = !DILocation(line: 681, column: 21, scope: !4542)
!4588 = !DILocation(line: 681, column: 26, scope: !4542)
!4589 = !DILocation(line: 681, column: 31, scope: !4542)
!4590 = !DILocation(line: 681, column: 41, scope: !4542)
!4591 = !DILocation(line: 681, column: 49, scope: !4542)
!4592 = !DILocation(line: 681, column: 39, scope: !4542)
!4593 = !DILocation(line: 681, column: 55, scope: !4542)
!4594 = !DILocation(line: 681, column: 18, scope: !4542)
!4595 = !DILocation(line: 681, column: 2, scope: !4542)
!4596 = !DILocation(line: 682, column: 1, scope: !4542)
!4597 = distinct !DISubprogram(name: "RE_findOrAddStrand", scope: !1, file: !1, line: 684, type: !4598, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{!2284, !2460, !93}
!4600 = !DILocalVariable(name: "obr", arg: 1, scope: !4597, file: !1, line: 684, type: !2460)
!4601 = !DILocation(line: 684, column: 42, scope: !4597)
!4602 = !DILocalVariable(name: "nr", arg: 2, scope: !4597, file: !1, line: 684, type: !93)
!4603 = !DILocation(line: 684, column: 51, scope: !4597)
!4604 = !DILocalVariable(name: "temp", scope: !4597, file: !1, line: 686, type: !4238)
!4605 = !DILocation(line: 686, column: 19, scope: !4597)
!4606 = !DILocalVariable(name: "v", scope: !4597, file: !1, line: 687, type: !2182)
!4607 = !DILocation(line: 687, column: 13, scope: !4597)
!4608 = !DILocalVariable(name: "a", scope: !4597, file: !1, line: 688, type: !93)
!4609 = !DILocation(line: 688, column: 6, scope: !4597)
!4610 = !DILocation(line: 690, column: 6, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4597, file: !1, line: 690, column: 6)
!4612 = !DILocation(line: 690, column: 8, scope: !4611)
!4613 = !DILocation(line: 690, column: 6, scope: !4597)
!4614 = !DILocation(line: 691, column: 44, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4611, file: !1, line: 690, column: 12)
!4616 = !DILocation(line: 691, column: 3, scope: !4615)
!4617 = !DILocation(line: 692, column: 10, scope: !4615)
!4618 = !DILocation(line: 692, column: 15, scope: !4615)
!4619 = !DILocation(line: 692, column: 30, scope: !4615)
!4620 = !DILocation(line: 692, column: 3, scope: !4615)
!4621 = !DILocation(line: 694, column: 5, scope: !4597)
!4622 = !DILocation(line: 694, column: 7, scope: !4597)
!4623 = !DILocation(line: 694, column: 3, scope: !4597)
!4624 = !DILocation(line: 696, column: 6, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4597, file: !1, line: 696, column: 6)
!4626 = !DILocation(line: 696, column: 9, scope: !4625)
!4627 = !DILocation(line: 696, column: 14, scope: !4625)
!4628 = !DILocation(line: 696, column: 28, scope: !4625)
!4629 = !DILocation(line: 696, column: 7, scope: !4625)
!4630 = !DILocation(line: 696, column: 6, scope: !4597)
!4631 = !DILocation(line: 697, column: 9, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4625, file: !1, line: 696, column: 32)
!4633 = !DILocation(line: 697, column: 14, scope: !4632)
!4634 = !DILocation(line: 697, column: 7, scope: !4632)
!4635 = !DILocation(line: 699, column: 21, scope: !4632)
!4636 = !DILocation(line: 699, column: 58, scope: !4632)
!4637 = !DILocation(line: 699, column: 63, scope: !4632)
!4638 = !DILocation(line: 699, column: 77, scope: !4632)
!4639 = !DILocation(line: 699, column: 57, scope: !4632)
!4640 = !DILocation(line: 699, column: 56, scope: !4632)
!4641 = !DILocation(line: 699, column: 3, scope: !4632)
!4642 = !DILocation(line: 699, column: 8, scope: !4632)
!4643 = !DILocation(line: 699, column: 19, scope: !4632)
!4644 = !DILocation(line: 700, column: 7, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4632, file: !1, line: 700, column: 7)
!4646 = !DILocation(line: 700, column: 7, scope: !4632)
!4647 = !DILocation(line: 700, column: 20, scope: !4645)
!4648 = !DILocation(line: 700, column: 25, scope: !4645)
!4649 = !DILocation(line: 700, column: 13, scope: !4645)
!4650 = !DILocation(line: 700, column: 38, scope: !4645)
!4651 = !DILocation(line: 700, column: 44, scope: !4645)
!4652 = !DILocation(line: 700, column: 49, scope: !4645)
!4653 = !DILocation(line: 700, column: 63, scope: !4645)
!4654 = !DILocation(line: 701, column: 10, scope: !4632)
!4655 = !DILocation(line: 701, column: 15, scope: !4632)
!4656 = !DILocation(line: 701, column: 27, scope: !4632)
!4657 = !DILocation(line: 701, column: 32, scope: !4632)
!4658 = !DILocation(line: 701, column: 26, scope: !4632)
!4659 = !DILocation(line: 701, column: 3, scope: !4632)
!4660 = !DILocation(line: 703, column: 3, scope: !4632)
!4661 = !DILocation(line: 703, column: 8, scope: !4632)
!4662 = !DILocation(line: 703, column: 22, scope: !4632)
!4663 = !DILocation(line: 704, column: 7, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4632, file: !1, line: 704, column: 7)
!4665 = !DILocation(line: 704, column: 7, scope: !4632)
!4666 = !DILocation(line: 704, column: 13, scope: !4664)
!4667 = !DILocation(line: 704, column: 23, scope: !4664)
!4668 = !DILocation(line: 705, column: 2, scope: !4632)
!4669 = !DILocation(line: 707, column: 5, scope: !4597)
!4670 = !DILocation(line: 707, column: 10, scope: !4597)
!4671 = !DILocation(line: 707, column: 22, scope: !4597)
!4672 = !DILocation(line: 707, column: 25, scope: !4597)
!4673 = !DILocation(line: 707, column: 3, scope: !4597)
!4674 = !DILocation(line: 709, column: 6, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4597, file: !1, line: 709, column: 6)
!4676 = !DILocation(line: 709, column: 7, scope: !4675)
!4677 = !DILocation(line: 709, column: 6, scope: !4597)
!4678 = !DILocalVariable(name: "i", scope: !4679, file: !1, line: 710, type: !93)
!4679 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 709, column: 15)
!4680 = !DILocation(line: 710, column: 7, scope: !4679)
!4681 = !DILocation(line: 712, column: 19, scope: !4679)
!4682 = !DILocation(line: 712, column: 6, scope: !4679)
!4683 = !DILocation(line: 712, column: 4, scope: !4679)
!4684 = !DILocation(line: 713, column: 31, scope: !4679)
!4685 = !DILocation(line: 713, column: 3, scope: !4679)
!4686 = !DILocation(line: 713, column: 8, scope: !4679)
!4687 = !DILocation(line: 713, column: 20, scope: !4679)
!4688 = !DILocation(line: 713, column: 23, scope: !4679)
!4689 = !DILocation(line: 713, column: 29, scope: !4679)
!4690 = !DILocation(line: 715, column: 12, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4679, file: !1, line: 715, column: 3)
!4692 = !DILocation(line: 715, column: 15, scope: !4691)
!4693 = !DILocation(line: 715, column: 9, scope: !4691)
!4694 = !DILocation(line: 715, column: 31, scope: !4691)
!4695 = !DILocation(line: 715, column: 8, scope: !4691)
!4696 = !DILocation(line: 715, column: 35, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4691, file: !1, line: 715, column: 3)
!4698 = !DILocation(line: 715, column: 36, scope: !4697)
!4699 = !DILocation(line: 715, column: 3, scope: !4691)
!4700 = !DILocation(line: 716, column: 16, scope: !4697)
!4701 = !DILocation(line: 716, column: 4, scope: !4697)
!4702 = !DILocation(line: 716, column: 6, scope: !4697)
!4703 = !DILocation(line: 716, column: 9, scope: !4697)
!4704 = !DILocation(line: 716, column: 14, scope: !4697)
!4705 = !DILocation(line: 715, column: 43, scope: !4697)
!4706 = !DILocation(line: 715, column: 48, scope: !4697)
!4707 = !DILocation(line: 715, column: 3, scope: !4697)
!4708 = distinct !{!4708, !4699, !4709}
!4709 = !DILocation(line: 716, column: 16, scope: !4691)
!4710 = !DILocation(line: 717, column: 2, scope: !4679)
!4711 = !DILocation(line: 718, column: 7, scope: !4597)
!4712 = !DILocation(line: 718, column: 10, scope: !4597)
!4713 = !DILocation(line: 718, column: 3, scope: !4597)
!4714 = !DILocation(line: 719, column: 9, scope: !4597)
!4715 = !DILocation(line: 719, column: 2, scope: !4597)
!4716 = !DILocation(line: 720, column: 1, scope: !4597)
!4717 = distinct !DISubprogram(name: "RE_addStrandBuffer", scope: !1, file: !1, line: 722, type: !4718, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{!2199, !2460, !93}
!4720 = !DILocalVariable(name: "obr", arg: 1, scope: !4717, file: !1, line: 722, type: !2460)
!4721 = !DILocation(line: 722, column: 45, scope: !4717)
!4722 = !DILocalVariable(name: "totvert", arg: 2, scope: !4717, file: !1, line: 722, type: !93)
!4723 = !DILocation(line: 722, column: 54, scope: !4717)
!4724 = !DILocalVariable(name: "strandbuf", scope: !4717, file: !1, line: 724, type: !2194)
!4725 = !DILocation(line: 724, column: 16, scope: !4717)
!4726 = !DILocation(line: 726, column: 13, scope: !4717)
!4727 = !DILocation(line: 726, column: 11, scope: !4717)
!4728 = !DILocation(line: 727, column: 19, scope: !4717)
!4729 = !DILocation(line: 727, column: 50, scope: !4717)
!4730 = !DILocation(line: 727, column: 49, scope: !4717)
!4731 = !DILocation(line: 727, column: 2, scope: !4717)
!4732 = !DILocation(line: 727, column: 13, scope: !4717)
!4733 = !DILocation(line: 727, column: 17, scope: !4717)
!4734 = !DILocation(line: 728, column: 22, scope: !4717)
!4735 = !DILocation(line: 728, column: 2, scope: !4717)
!4736 = !DILocation(line: 728, column: 13, scope: !4717)
!4737 = !DILocation(line: 728, column: 20, scope: !4717)
!4738 = !DILocation(line: 729, column: 18, scope: !4717)
!4739 = !DILocation(line: 729, column: 2, scope: !4717)
!4740 = !DILocation(line: 729, column: 13, scope: !4717)
!4741 = !DILocation(line: 729, column: 16, scope: !4717)
!4742 = !DILocation(line: 731, column: 18, scope: !4717)
!4743 = !DILocation(line: 731, column: 2, scope: !4717)
!4744 = !DILocation(line: 731, column: 7, scope: !4717)
!4745 = !DILocation(line: 731, column: 16, scope: !4717)
!4746 = !DILocation(line: 733, column: 9, scope: !4717)
!4747 = !DILocation(line: 733, column: 2, scope: !4717)
!4748 = distinct !DISubprogram(name: "RE_addRenderObject", scope: !1, file: !1, line: 738, type: !4749, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4749 = !DISubroutineType(types: !4750)
!4750 = !{!2215, !3778, !2463, !2463, !93, !93, !93}
!4751 = !DILocalVariable(name: "re", arg: 1, scope: !4748, file: !1, line: 738, type: !3778)
!4752 = !DILocation(line: 738, column: 39, scope: !4748)
!4753 = !DILocalVariable(name: "ob", arg: 2, scope: !4748, file: !1, line: 738, type: !2463)
!4754 = !DILocation(line: 738, column: 51, scope: !4748)
!4755 = !DILocalVariable(name: "par", arg: 3, scope: !4748, file: !1, line: 738, type: !2463)
!4756 = !DILocation(line: 738, column: 63, scope: !4748)
!4757 = !DILocalVariable(name: "index", arg: 4, scope: !4748, file: !1, line: 738, type: !93)
!4758 = !DILocation(line: 738, column: 72, scope: !4748)
!4759 = !DILocalVariable(name: "psysindex", arg: 5, scope: !4748, file: !1, line: 738, type: !93)
!4760 = !DILocation(line: 738, column: 83, scope: !4748)
!4761 = !DILocalVariable(name: "lay", arg: 6, scope: !4748, file: !1, line: 738, type: !93)
!4762 = !DILocation(line: 738, column: 98, scope: !4748)
!4763 = !DILocalVariable(name: "obr", scope: !4748, file: !1, line: 740, type: !2460)
!4764 = !DILocation(line: 740, column: 13, scope: !4748)
!4765 = !DILocation(line: 740, column: 18, scope: !4748)
!4766 = !DILocation(line: 742, column: 15, scope: !4748)
!4767 = !DILocation(line: 742, column: 19, scope: !4748)
!4768 = !DILocation(line: 742, column: 32, scope: !4748)
!4769 = !DILocation(line: 742, column: 2, scope: !4748)
!4770 = !DILocation(line: 743, column: 11, scope: !4748)
!4771 = !DILocation(line: 743, column: 2, scope: !4748)
!4772 = !DILocation(line: 743, column: 7, scope: !4748)
!4773 = !DILocation(line: 743, column: 9, scope: !4748)
!4774 = !DILocation(line: 744, column: 12, scope: !4748)
!4775 = !DILocation(line: 744, column: 2, scope: !4748)
!4776 = !DILocation(line: 744, column: 7, scope: !4748)
!4777 = !DILocation(line: 744, column: 10, scope: !4748)
!4778 = !DILocation(line: 745, column: 14, scope: !4748)
!4779 = !DILocation(line: 745, column: 2, scope: !4748)
!4780 = !DILocation(line: 745, column: 7, scope: !4748)
!4781 = !DILocation(line: 745, column: 12, scope: !4748)
!4782 = !DILocation(line: 746, column: 18, scope: !4748)
!4783 = !DILocation(line: 746, column: 2, scope: !4748)
!4784 = !DILocation(line: 746, column: 7, scope: !4748)
!4785 = !DILocation(line: 746, column: 16, scope: !4748)
!4786 = !DILocation(line: 747, column: 12, scope: !4748)
!4787 = !DILocation(line: 747, column: 2, scope: !4748)
!4788 = !DILocation(line: 747, column: 7, scope: !4748)
!4789 = !DILocation(line: 747, column: 10, scope: !4748)
!4790 = !DILocation(line: 749, column: 9, scope: !4748)
!4791 = !DILocation(line: 749, column: 2, scope: !4748)
!4792 = distinct !DISubprogram(name: "free_renderdata_vertnodes", scope: !1, file: !1, line: 752, type: !4793, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{null, !2939}
!4795 = !DILocalVariable(name: "vertnodes", arg: 1, scope: !4792, file: !1, line: 752, type: !2939)
!4796 = !DILocation(line: 752, column: 47, scope: !4792)
!4797 = !DILocalVariable(name: "a", scope: !4792, file: !1, line: 754, type: !93)
!4798 = !DILocation(line: 754, column: 6, scope: !4792)
!4799 = !DILocation(line: 756, column: 6, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4792, file: !1, line: 756, column: 6)
!4801 = !DILocation(line: 756, column: 15, scope: !4800)
!4802 = !DILocation(line: 756, column: 6, scope: !4792)
!4803 = !DILocation(line: 756, column: 23, scope: !4800)
!4804 = !DILocation(line: 758, column: 8, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4792, file: !1, line: 758, column: 2)
!4806 = !DILocation(line: 758, column: 7, scope: !4805)
!4807 = !DILocation(line: 758, column: 12, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4805, file: !1, line: 758, column: 2)
!4809 = !DILocation(line: 758, column: 22, scope: !4808)
!4810 = !DILocation(line: 758, column: 25, scope: !4808)
!4811 = !DILocation(line: 758, column: 2, scope: !4805)
!4812 = !DILocation(line: 759, column: 3, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4808, file: !1, line: 758, column: 36)
!4814 = !DILocation(line: 759, column: 13, scope: !4813)
!4815 = !DILocation(line: 759, column: 23, scope: !4813)
!4816 = !DILocation(line: 759, column: 26, scope: !4813)
!4817 = !DILocation(line: 761, column: 7, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4813, file: !1, line: 761, column: 7)
!4819 = !DILocation(line: 761, column: 17, scope: !4818)
!4820 = !DILocation(line: 761, column: 20, scope: !4818)
!4821 = !DILocation(line: 761, column: 7, scope: !4813)
!4822 = !DILocation(line: 762, column: 4, scope: !4818)
!4823 = !DILocation(line: 762, column: 14, scope: !4818)
!4824 = !DILocation(line: 762, column: 24, scope: !4818)
!4825 = !DILocation(line: 762, column: 27, scope: !4818)
!4826 = !DILocation(line: 763, column: 7, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4813, file: !1, line: 763, column: 7)
!4828 = !DILocation(line: 763, column: 17, scope: !4827)
!4829 = !DILocation(line: 763, column: 20, scope: !4827)
!4830 = !DILocation(line: 763, column: 7, scope: !4813)
!4831 = !DILocation(line: 764, column: 4, scope: !4827)
!4832 = !DILocation(line: 764, column: 14, scope: !4827)
!4833 = !DILocation(line: 764, column: 24, scope: !4827)
!4834 = !DILocation(line: 764, column: 27, scope: !4827)
!4835 = !DILocation(line: 765, column: 7, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4813, file: !1, line: 765, column: 7)
!4837 = !DILocation(line: 765, column: 17, scope: !4836)
!4838 = !DILocation(line: 765, column: 20, scope: !4836)
!4839 = !DILocation(line: 765, column: 7, scope: !4813)
!4840 = !DILocation(line: 766, column: 4, scope: !4836)
!4841 = !DILocation(line: 766, column: 14, scope: !4836)
!4842 = !DILocation(line: 766, column: 24, scope: !4836)
!4843 = !DILocation(line: 766, column: 27, scope: !4836)
!4844 = !DILocation(line: 767, column: 7, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4813, file: !1, line: 767, column: 7)
!4846 = !DILocation(line: 767, column: 17, scope: !4845)
!4847 = !DILocation(line: 767, column: 20, scope: !4845)
!4848 = !DILocation(line: 767, column: 7, scope: !4813)
!4849 = !DILocation(line: 768, column: 4, scope: !4845)
!4850 = !DILocation(line: 768, column: 14, scope: !4845)
!4851 = !DILocation(line: 768, column: 24, scope: !4845)
!4852 = !DILocation(line: 768, column: 27, scope: !4845)
!4853 = !DILocation(line: 769, column: 7, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4813, file: !1, line: 769, column: 7)
!4855 = !DILocation(line: 769, column: 17, scope: !4854)
!4856 = !DILocation(line: 769, column: 20, scope: !4854)
!4857 = !DILocation(line: 769, column: 7, scope: !4813)
!4858 = !DILocation(line: 770, column: 4, scope: !4854)
!4859 = !DILocation(line: 770, column: 14, scope: !4854)
!4860 = !DILocation(line: 770, column: 24, scope: !4854)
!4861 = !DILocation(line: 770, column: 27, scope: !4854)
!4862 = !DILocation(line: 771, column: 7, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4813, file: !1, line: 771, column: 7)
!4864 = !DILocation(line: 771, column: 17, scope: !4863)
!4865 = !DILocation(line: 771, column: 20, scope: !4863)
!4866 = !DILocation(line: 771, column: 7, scope: !4813)
!4867 = !DILocation(line: 772, column: 4, scope: !4863)
!4868 = !DILocation(line: 772, column: 14, scope: !4863)
!4869 = !DILocation(line: 772, column: 24, scope: !4863)
!4870 = !DILocation(line: 772, column: 27, scope: !4863)
!4871 = !DILocation(line: 773, column: 2, scope: !4813)
!4872 = !DILocation(line: 758, column: 32, scope: !4808)
!4873 = !DILocation(line: 758, column: 2, scope: !4808)
!4874 = distinct !{!4874, !4811, !4875}
!4875 = !DILocation(line: 773, column: 2, scope: !4805)
!4876 = !DILocation(line: 775, column: 2, scope: !4792)
!4877 = !DILocation(line: 775, column: 12, scope: !4792)
!4878 = !DILocation(line: 776, column: 1, scope: !4792)
!4879 = distinct !DISubprogram(name: "free_renderdata_vlaknodes", scope: !1, file: !1, line: 778, type: !4880, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{null, !3067}
!4882 = !DILocalVariable(name: "vlaknodes", arg: 1, scope: !4879, file: !1, line: 778, type: !3067)
!4883 = !DILocation(line: 778, column: 47, scope: !4879)
!4884 = !DILocalVariable(name: "a", scope: !4879, file: !1, line: 780, type: !93)
!4885 = !DILocation(line: 780, column: 6, scope: !4879)
!4886 = !DILocation(line: 782, column: 6, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4879, file: !1, line: 782, column: 6)
!4888 = !DILocation(line: 782, column: 15, scope: !4887)
!4889 = !DILocation(line: 782, column: 6, scope: !4879)
!4890 = !DILocation(line: 782, column: 23, scope: !4887)
!4891 = !DILocation(line: 784, column: 8, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4879, file: !1, line: 784, column: 2)
!4893 = !DILocation(line: 784, column: 7, scope: !4892)
!4894 = !DILocation(line: 784, column: 12, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4892, file: !1, line: 784, column: 2)
!4896 = !DILocation(line: 784, column: 22, scope: !4895)
!4897 = !DILocation(line: 784, column: 25, scope: !4895)
!4898 = !DILocation(line: 784, column: 2, scope: !4892)
!4899 = !DILocation(line: 785, column: 3, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4895, file: !1, line: 784, column: 36)
!4901 = !DILocation(line: 785, column: 13, scope: !4900)
!4902 = !DILocation(line: 785, column: 23, scope: !4900)
!4903 = !DILocation(line: 785, column: 26, scope: !4900)
!4904 = !DILocation(line: 787, column: 7, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4900, file: !1, line: 787, column: 7)
!4906 = !DILocation(line: 787, column: 17, scope: !4905)
!4907 = !DILocation(line: 787, column: 20, scope: !4905)
!4908 = !DILocation(line: 787, column: 7, scope: !4900)
!4909 = !DILocation(line: 788, column: 4, scope: !4905)
!4910 = !DILocation(line: 788, column: 14, scope: !4905)
!4911 = !DILocation(line: 788, column: 24, scope: !4905)
!4912 = !DILocation(line: 788, column: 27, scope: !4905)
!4913 = !DILocation(line: 789, column: 7, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4900, file: !1, line: 789, column: 7)
!4915 = !DILocation(line: 789, column: 17, scope: !4914)
!4916 = !DILocation(line: 789, column: 20, scope: !4914)
!4917 = !DILocation(line: 789, column: 7, scope: !4900)
!4918 = !DILocation(line: 790, column: 4, scope: !4914)
!4919 = !DILocation(line: 790, column: 14, scope: !4914)
!4920 = !DILocation(line: 790, column: 24, scope: !4914)
!4921 = !DILocation(line: 790, column: 27, scope: !4914)
!4922 = !DILocation(line: 791, column: 7, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4900, file: !1, line: 791, column: 7)
!4924 = !DILocation(line: 791, column: 17, scope: !4923)
!4925 = !DILocation(line: 791, column: 20, scope: !4923)
!4926 = !DILocation(line: 791, column: 7, scope: !4900)
!4927 = !DILocation(line: 792, column: 4, scope: !4923)
!4928 = !DILocation(line: 792, column: 14, scope: !4923)
!4929 = !DILocation(line: 792, column: 24, scope: !4923)
!4930 = !DILocation(line: 792, column: 27, scope: !4923)
!4931 = !DILocation(line: 793, column: 7, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4900, file: !1, line: 793, column: 7)
!4933 = !DILocation(line: 793, column: 17, scope: !4932)
!4934 = !DILocation(line: 793, column: 20, scope: !4932)
!4935 = !DILocation(line: 793, column: 7, scope: !4900)
!4936 = !DILocation(line: 794, column: 4, scope: !4932)
!4937 = !DILocation(line: 794, column: 14, scope: !4932)
!4938 = !DILocation(line: 794, column: 24, scope: !4932)
!4939 = !DILocation(line: 794, column: 27, scope: !4932)
!4940 = !DILocation(line: 795, column: 7, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4900, file: !1, line: 795, column: 7)
!4942 = !DILocation(line: 795, column: 17, scope: !4941)
!4943 = !DILocation(line: 795, column: 20, scope: !4941)
!4944 = !DILocation(line: 795, column: 7, scope: !4900)
!4945 = !DILocation(line: 796, column: 4, scope: !4941)
!4946 = !DILocation(line: 796, column: 14, scope: !4941)
!4947 = !DILocation(line: 796, column: 24, scope: !4941)
!4948 = !DILocation(line: 796, column: 27, scope: !4941)
!4949 = !DILocation(line: 797, column: 7, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4900, file: !1, line: 797, column: 7)
!4951 = !DILocation(line: 797, column: 17, scope: !4950)
!4952 = !DILocation(line: 797, column: 20, scope: !4950)
!4953 = !DILocation(line: 797, column: 7, scope: !4900)
!4954 = !DILocation(line: 798, column: 4, scope: !4950)
!4955 = !DILocation(line: 798, column: 14, scope: !4950)
!4956 = !DILocation(line: 798, column: 24, scope: !4950)
!4957 = !DILocation(line: 798, column: 27, scope: !4950)
!4958 = !DILocation(line: 799, column: 2, scope: !4900)
!4959 = !DILocation(line: 784, column: 32, scope: !4895)
!4960 = !DILocation(line: 784, column: 2, scope: !4895)
!4961 = distinct !{!4961, !4898, !4962}
!4962 = !DILocation(line: 799, column: 2, scope: !4892)
!4963 = !DILocation(line: 801, column: 2, scope: !4879)
!4964 = !DILocation(line: 801, column: 12, scope: !4879)
!4965 = !DILocation(line: 802, column: 1, scope: !4879)
!4966 = distinct !DISubprogram(name: "free_renderdata_tables", scope: !1, file: !1, line: 830, type: !4967, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{null, !3778}
!4969 = !DILocalVariable(name: "re", arg: 1, scope: !4966, file: !1, line: 830, type: !3778)
!4970 = !DILocation(line: 830, column: 37, scope: !4966)
!4971 = !DILocalVariable(name: "obi", scope: !4966, file: !1, line: 832, type: !2719)
!4972 = !DILocation(line: 832, column: 21, scope: !4966)
!4973 = !DILocalVariable(name: "obr", scope: !4966, file: !1, line: 833, type: !2460)
!4974 = !DILocation(line: 833, column: 13, scope: !4966)
!4975 = !DILocalVariable(name: "strandbuf", scope: !4966, file: !1, line: 834, type: !2194)
!4976 = !DILocation(line: 834, column: 16, scope: !4966)
!4977 = !DILocalVariable(name: "a", scope: !4966, file: !1, line: 835, type: !93)
!4978 = !DILocation(line: 835, column: 6, scope: !4966)
!4979 = !DILocation(line: 837, column: 11, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4966, file: !1, line: 837, column: 2)
!4981 = !DILocation(line: 837, column: 15, scope: !4980)
!4982 = !DILocation(line: 837, column: 27, scope: !4980)
!4983 = !DILocation(line: 837, column: 10, scope: !4980)
!4984 = !DILocation(line: 837, column: 7, scope: !4980)
!4985 = !DILocation(line: 837, column: 34, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4980, file: !1, line: 837, column: 2)
!4987 = !DILocation(line: 837, column: 2, scope: !4980)
!4988 = !DILocation(line: 838, column: 7, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 838, column: 7)
!4990 = distinct !DILexicalBlock(scope: !4986, file: !1, line: 837, column: 54)
!4991 = !DILocation(line: 838, column: 12, scope: !4989)
!4992 = !DILocation(line: 838, column: 7, scope: !4990)
!4993 = !DILocation(line: 839, column: 30, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4989, file: !1, line: 838, column: 23)
!4995 = !DILocation(line: 839, column: 35, scope: !4994)
!4996 = !DILocation(line: 839, column: 4, scope: !4994)
!4997 = !DILocation(line: 840, column: 4, scope: !4994)
!4998 = !DILocation(line: 840, column: 9, scope: !4994)
!4999 = !DILocation(line: 840, column: 18, scope: !4994)
!5000 = !DILocation(line: 841, column: 4, scope: !4994)
!5001 = !DILocation(line: 841, column: 9, scope: !4994)
!5002 = !DILocation(line: 841, column: 21, scope: !4994)
!5003 = !DILocation(line: 842, column: 3, scope: !4994)
!5004 = !DILocation(line: 844, column: 7, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 844, column: 7)
!5006 = !DILocation(line: 844, column: 12, scope: !5005)
!5007 = !DILocation(line: 844, column: 7, scope: !4990)
!5008 = !DILocation(line: 845, column: 30, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5005, file: !1, line: 844, column: 23)
!5010 = !DILocation(line: 845, column: 35, scope: !5009)
!5011 = !DILocation(line: 845, column: 4, scope: !5009)
!5012 = !DILocation(line: 846, column: 4, scope: !5009)
!5013 = !DILocation(line: 846, column: 9, scope: !5009)
!5014 = !DILocation(line: 846, column: 18, scope: !5009)
!5015 = !DILocation(line: 847, column: 4, scope: !5009)
!5016 = !DILocation(line: 847, column: 9, scope: !5009)
!5017 = !DILocation(line: 847, column: 21, scope: !5009)
!5018 = !DILocation(line: 848, column: 4, scope: !5009)
!5019 = !DILocation(line: 848, column: 9, scope: !5009)
!5020 = !DILocation(line: 848, column: 16, scope: !5009)
!5021 = !DILocation(line: 849, column: 3, scope: !5009)
!5022 = !DILocation(line: 851, column: 7, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 851, column: 7)
!5024 = !DILocation(line: 851, column: 12, scope: !5023)
!5025 = !DILocation(line: 851, column: 7, scope: !4990)
!5026 = !DILocation(line: 852, column: 10, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5028, file: !1, line: 852, column: 4)
!5028 = distinct !DILexicalBlock(scope: !5023, file: !1, line: 851, column: 19)
!5029 = !DILocation(line: 852, column: 9, scope: !5027)
!5030 = !DILocation(line: 852, column: 14, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5027, file: !1, line: 852, column: 4)
!5032 = !DILocation(line: 852, column: 19, scope: !5031)
!5033 = !DILocation(line: 852, column: 25, scope: !5031)
!5034 = !DILocation(line: 852, column: 4, scope: !5027)
!5035 = !DILocation(line: 853, column: 5, scope: !5031)
!5036 = !DILocation(line: 853, column: 15, scope: !5031)
!5037 = !DILocation(line: 853, column: 20, scope: !5031)
!5038 = !DILocation(line: 853, column: 26, scope: !5031)
!5039 = !DILocation(line: 852, column: 30, scope: !5031)
!5040 = !DILocation(line: 852, column: 4, scope: !5031)
!5041 = distinct !{!5041, !5034, !5042}
!5042 = !DILocation(line: 853, column: 28, scope: !5027)
!5043 = !DILocation(line: 855, column: 4, scope: !5028)
!5044 = !DILocation(line: 855, column: 14, scope: !5028)
!5045 = !DILocation(line: 855, column: 19, scope: !5028)
!5046 = !DILocation(line: 856, column: 4, scope: !5028)
!5047 = !DILocation(line: 856, column: 9, scope: !5028)
!5048 = !DILocation(line: 856, column: 14, scope: !5028)
!5049 = !DILocation(line: 857, column: 4, scope: !5028)
!5050 = !DILocation(line: 857, column: 9, scope: !5028)
!5051 = !DILocation(line: 857, column: 17, scope: !5028)
!5052 = !DILocation(line: 858, column: 3, scope: !5028)
!5053 = !DILocation(line: 860, column: 7, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 860, column: 7)
!5055 = !DILocation(line: 860, column: 12, scope: !5054)
!5056 = !DILocation(line: 860, column: 7, scope: !4990)
!5057 = !DILocation(line: 861, column: 32, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5054, file: !1, line: 860, column: 25)
!5059 = !DILocation(line: 861, column: 37, scope: !5058)
!5060 = !DILocation(line: 861, column: 4, scope: !5058)
!5061 = !DILocation(line: 862, column: 4, scope: !5058)
!5062 = !DILocation(line: 862, column: 9, scope: !5058)
!5063 = !DILocation(line: 862, column: 20, scope: !5058)
!5064 = !DILocation(line: 863, column: 4, scope: !5058)
!5065 = !DILocation(line: 863, column: 9, scope: !5058)
!5066 = !DILocation(line: 863, column: 23, scope: !5058)
!5067 = !DILocation(line: 864, column: 3, scope: !5058)
!5068 = !DILocation(line: 866, column: 14, scope: !4990)
!5069 = !DILocation(line: 866, column: 19, scope: !4990)
!5070 = !DILocation(line: 866, column: 12, scope: !4990)
!5071 = !DILocation(line: 867, column: 7, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 867, column: 7)
!5073 = !DILocation(line: 867, column: 7, scope: !4990)
!5074 = !DILocation(line: 868, column: 8, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 868, column: 8)
!5076 = distinct !DILexicalBlock(scope: !5072, file: !1, line: 867, column: 18)
!5077 = !DILocation(line: 868, column: 19, scope: !5075)
!5078 = !DILocation(line: 868, column: 8, scope: !5076)
!5079 = !DILocation(line: 868, column: 25, scope: !5075)
!5080 = !DILocation(line: 868, column: 35, scope: !5075)
!5081 = !DILocation(line: 868, column: 46, scope: !5075)
!5082 = !DILocation(line: 869, column: 8, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 869, column: 8)
!5084 = !DILocation(line: 869, column: 19, scope: !5083)
!5085 = !DILocation(line: 869, column: 8, scope: !5076)
!5086 = !DILocation(line: 869, column: 26, scope: !5083)
!5087 = !DILocation(line: 869, column: 36, scope: !5083)
!5088 = !DILocation(line: 869, column: 47, scope: !5083)
!5089 = !DILocation(line: 870, column: 4, scope: !5076)
!5090 = !DILocation(line: 870, column: 14, scope: !5076)
!5091 = !DILocation(line: 871, column: 3, scope: !5076)
!5092 = !DILocation(line: 873, column: 7, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 873, column: 7)
!5094 = !DILocation(line: 873, column: 12, scope: !5093)
!5095 = !DILocation(line: 873, column: 7, scope: !4990)
!5096 = !DILocation(line: 874, column: 4, scope: !5093)
!5097 = !DILocation(line: 874, column: 14, scope: !5093)
!5098 = !DILocation(line: 874, column: 19, scope: !5093)
!5099 = !DILocation(line: 876, column: 7, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 876, column: 7)
!5101 = !DILocation(line: 876, column: 12, scope: !5100)
!5102 = !DILocation(line: 876, column: 7, scope: !4990)
!5103 = !DILocation(line: 877, column: 4, scope: !5100)
!5104 = !DILocation(line: 877, column: 14, scope: !5100)
!5105 = !DILocation(line: 877, column: 19, scope: !5100)
!5106 = !DILocation(line: 879, column: 7, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 879, column: 7)
!5108 = !DILocation(line: 879, column: 12, scope: !5107)
!5109 = !DILocation(line: 879, column: 7, scope: !4990)
!5110 = !DILocation(line: 880, column: 4, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5107, file: !1, line: 879, column: 22)
!5112 = !DILocation(line: 880, column: 14, scope: !5111)
!5113 = !DILocation(line: 880, column: 19, scope: !5111)
!5114 = !DILocation(line: 881, column: 4, scope: !5111)
!5115 = !DILocation(line: 881, column: 9, scope: !5111)
!5116 = !DILocation(line: 881, column: 18, scope: !5111)
!5117 = !DILocation(line: 882, column: 3, scope: !5111)
!5118 = !DILocation(line: 884, column: 7, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 884, column: 7)
!5120 = !DILocation(line: 884, column: 12, scope: !5119)
!5121 = !DILocation(line: 884, column: 7, scope: !4990)
!5122 = !DILocation(line: 885, column: 4, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5119, file: !1, line: 884, column: 27)
!5124 = !DILocation(line: 885, column: 14, scope: !5123)
!5125 = !DILocation(line: 885, column: 19, scope: !5123)
!5126 = !DILocation(line: 886, column: 4, scope: !5123)
!5127 = !DILocation(line: 886, column: 9, scope: !5123)
!5128 = !DILocation(line: 886, column: 23, scope: !5123)
!5129 = !DILocation(line: 887, column: 3, scope: !5123)
!5130 = !DILocation(line: 889, column: 7, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !4990, file: !1, line: 889, column: 7)
!5132 = !DILocation(line: 889, column: 12, scope: !5131)
!5133 = !DILocation(line: 889, column: 7, scope: !4990)
!5134 = !DILocation(line: 890, column: 22, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5131, file: !1, line: 889, column: 21)
!5136 = !DILocation(line: 890, column: 27, scope: !5135)
!5137 = !DILocation(line: 890, column: 4, scope: !5135)
!5138 = !DILocation(line: 891, column: 4, scope: !5135)
!5139 = !DILocation(line: 891, column: 9, scope: !5135)
!5140 = !DILocation(line: 891, column: 17, scope: !5135)
!5141 = !DILocation(line: 892, column: 3, scope: !5135)
!5142 = !DILocation(line: 893, column: 2, scope: !4990)
!5143 = !DILocation(line: 837, column: 43, scope: !4986)
!5144 = !DILocation(line: 837, column: 48, scope: !4986)
!5145 = !DILocation(line: 837, column: 42, scope: !4986)
!5146 = !DILocation(line: 837, column: 2, scope: !4986)
!5147 = distinct !{!5147, !4987, !5148}
!5148 = !DILocation(line: 893, column: 2, scope: !4980)
!5149 = !DILocation(line: 895, column: 6, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !4966, file: !1, line: 895, column: 6)
!5151 = !DILocation(line: 895, column: 10, scope: !5150)
!5152 = !DILocation(line: 895, column: 6, scope: !4966)
!5153 = !DILocation(line: 896, column: 12, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5155, file: !1, line: 896, column: 3)
!5155 = distinct !DILexicalBlock(scope: !5150, file: !1, line: 895, column: 26)
!5156 = !DILocation(line: 896, column: 16, scope: !5154)
!5157 = !DILocation(line: 896, column: 30, scope: !5154)
!5158 = !DILocation(line: 896, column: 11, scope: !5154)
!5159 = !DILocation(line: 896, column: 8, scope: !5154)
!5160 = !DILocation(line: 896, column: 37, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5154, file: !1, line: 896, column: 3)
!5162 = !DILocation(line: 896, column: 3, scope: !5154)
!5163 = !DILocation(line: 897, column: 8, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5165, file: !1, line: 897, column: 8)
!5165 = distinct !DILexicalBlock(scope: !5161, file: !1, line: 896, column: 57)
!5166 = !DILocation(line: 897, column: 13, scope: !5164)
!5167 = !DILocation(line: 897, column: 8, scope: !5165)
!5168 = !DILocation(line: 898, column: 5, scope: !5164)
!5169 = !DILocation(line: 898, column: 15, scope: !5164)
!5170 = !DILocation(line: 898, column: 20, scope: !5164)
!5171 = !DILocation(line: 900, column: 8, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5165, file: !1, line: 900, column: 8)
!5173 = !DILocation(line: 900, column: 13, scope: !5172)
!5174 = !DILocation(line: 900, column: 8, scope: !5165)
!5175 = !DILocation(line: 901, column: 23, scope: !5172)
!5176 = !DILocation(line: 901, column: 28, scope: !5172)
!5177 = !DILocation(line: 901, column: 5, scope: !5172)
!5178 = !DILocation(line: 902, column: 3, scope: !5165)
!5179 = !DILocation(line: 896, column: 46, scope: !5161)
!5180 = !DILocation(line: 896, column: 51, scope: !5161)
!5181 = !DILocation(line: 896, column: 45, scope: !5161)
!5182 = !DILocation(line: 896, column: 3, scope: !5161)
!5183 = distinct !{!5183, !5162, !5184}
!5184 = !DILocation(line: 902, column: 3, scope: !5154)
!5185 = !DILocation(line: 904, column: 3, scope: !5155)
!5186 = !DILocation(line: 904, column: 13, scope: !5155)
!5187 = !DILocation(line: 904, column: 17, scope: !5155)
!5188 = !DILocation(line: 905, column: 3, scope: !5155)
!5189 = !DILocation(line: 905, column: 7, scope: !5155)
!5190 = !DILocation(line: 905, column: 21, scope: !5155)
!5191 = !DILocation(line: 906, column: 3, scope: !5155)
!5192 = !DILocation(line: 906, column: 7, scope: !5155)
!5193 = !DILocation(line: 906, column: 18, scope: !5155)
!5194 = !DILocation(line: 907, column: 28, scope: !5155)
!5195 = !DILocation(line: 907, column: 32, scope: !5155)
!5196 = !DILocation(line: 907, column: 46, scope: !5155)
!5197 = !DILocation(line: 907, column: 50, scope: !5155)
!5198 = !DILocation(line: 907, column: 3, scope: !5155)
!5199 = !DILocation(line: 907, column: 7, scope: !5155)
!5200 = !DILocation(line: 907, column: 21, scope: !5155)
!5201 = !DILocation(line: 907, column: 26, scope: !5155)
!5202 = !DILocation(line: 908, column: 2, scope: !5155)
!5203 = !DILocation(line: 910, column: 6, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !4966, file: !1, line: 910, column: 6)
!5205 = !DILocation(line: 910, column: 10, scope: !5204)
!5206 = !DILocation(line: 910, column: 6, scope: !4966)
!5207 = !DILocation(line: 911, column: 3, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5204, file: !1, line: 910, column: 23)
!5209 = !DILocation(line: 911, column: 13, scope: !5208)
!5210 = !DILocation(line: 911, column: 17, scope: !5208)
!5211 = !DILocation(line: 912, column: 3, scope: !5208)
!5212 = !DILocation(line: 912, column: 7, scope: !5208)
!5213 = !DILocation(line: 912, column: 18, scope: !5208)
!5214 = !DILocation(line: 913, column: 2, scope: !5208)
!5215 = !DILocation(line: 915, column: 17, scope: !4966)
!5216 = !DILocation(line: 915, column: 21, scope: !4966)
!5217 = !DILocation(line: 915, column: 2, scope: !4966)
!5218 = !DILocation(line: 916, column: 17, scope: !4966)
!5219 = !DILocation(line: 916, column: 21, scope: !4966)
!5220 = !DILocation(line: 916, column: 2, scope: !4966)
!5221 = !DILocation(line: 917, column: 17, scope: !4966)
!5222 = !DILocation(line: 917, column: 21, scope: !4966)
!5223 = !DILocation(line: 917, column: 2, scope: !4966)
!5224 = !DILocation(line: 918, column: 1, scope: !4966)
!5225 = distinct !DISubprogram(name: "free_renderdata_strandnodes", scope: !1, file: !1, line: 804, type: !5226, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!5226 = !DISubroutineType(types: !5227)
!5227 = !{null, !4238}
!5228 = !DILocalVariable(name: "strandnodes", arg: 1, scope: !5225, file: !1, line: 804, type: !4238)
!5229 = !DILocation(line: 804, column: 58, scope: !5225)
!5230 = !DILocalVariable(name: "a", scope: !5225, file: !1, line: 806, type: !93)
!5231 = !DILocation(line: 806, column: 6, scope: !5225)
!5232 = !DILocation(line: 808, column: 6, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5225, file: !1, line: 808, column: 6)
!5234 = !DILocation(line: 808, column: 17, scope: !5233)
!5235 = !DILocation(line: 808, column: 6, scope: !5225)
!5236 = !DILocation(line: 808, column: 25, scope: !5233)
!5237 = !DILocation(line: 810, column: 8, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5225, file: !1, line: 810, column: 2)
!5239 = !DILocation(line: 810, column: 7, scope: !5238)
!5240 = !DILocation(line: 810, column: 12, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5238, file: !1, line: 810, column: 2)
!5242 = !DILocation(line: 810, column: 24, scope: !5241)
!5243 = !DILocation(line: 810, column: 27, scope: !5241)
!5244 = !DILocation(line: 810, column: 2, scope: !5238)
!5245 = !DILocation(line: 811, column: 3, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5241, file: !1, line: 810, column: 40)
!5247 = !DILocation(line: 811, column: 13, scope: !5246)
!5248 = !DILocation(line: 811, column: 25, scope: !5246)
!5249 = !DILocation(line: 811, column: 28, scope: !5246)
!5250 = !DILocation(line: 813, column: 7, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5246, file: !1, line: 813, column: 7)
!5252 = !DILocation(line: 813, column: 19, scope: !5251)
!5253 = !DILocation(line: 813, column: 22, scope: !5251)
!5254 = !DILocation(line: 813, column: 7, scope: !5246)
!5255 = !DILocation(line: 814, column: 4, scope: !5251)
!5256 = !DILocation(line: 814, column: 14, scope: !5251)
!5257 = !DILocation(line: 814, column: 26, scope: !5251)
!5258 = !DILocation(line: 814, column: 29, scope: !5251)
!5259 = !DILocation(line: 815, column: 7, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5246, file: !1, line: 815, column: 7)
!5261 = !DILocation(line: 815, column: 19, scope: !5260)
!5262 = !DILocation(line: 815, column: 22, scope: !5260)
!5263 = !DILocation(line: 815, column: 7, scope: !5246)
!5264 = !DILocation(line: 816, column: 4, scope: !5260)
!5265 = !DILocation(line: 816, column: 14, scope: !5260)
!5266 = !DILocation(line: 816, column: 26, scope: !5260)
!5267 = !DILocation(line: 816, column: 29, scope: !5260)
!5268 = !DILocation(line: 817, column: 7, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5246, file: !1, line: 817, column: 7)
!5270 = !DILocation(line: 817, column: 19, scope: !5269)
!5271 = !DILocation(line: 817, column: 22, scope: !5269)
!5272 = !DILocation(line: 817, column: 7, scope: !5246)
!5273 = !DILocation(line: 818, column: 4, scope: !5269)
!5274 = !DILocation(line: 818, column: 14, scope: !5269)
!5275 = !DILocation(line: 818, column: 26, scope: !5269)
!5276 = !DILocation(line: 818, column: 29, scope: !5269)
!5277 = !DILocation(line: 819, column: 7, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5246, file: !1, line: 819, column: 7)
!5279 = !DILocation(line: 819, column: 19, scope: !5278)
!5280 = !DILocation(line: 819, column: 22, scope: !5278)
!5281 = !DILocation(line: 819, column: 7, scope: !5246)
!5282 = !DILocation(line: 820, column: 4, scope: !5278)
!5283 = !DILocation(line: 820, column: 14, scope: !5278)
!5284 = !DILocation(line: 820, column: 26, scope: !5278)
!5285 = !DILocation(line: 820, column: 29, scope: !5278)
!5286 = !DILocation(line: 821, column: 7, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5246, file: !1, line: 821, column: 7)
!5288 = !DILocation(line: 821, column: 19, scope: !5287)
!5289 = !DILocation(line: 821, column: 22, scope: !5287)
!5290 = !DILocation(line: 821, column: 7, scope: !5246)
!5291 = !DILocation(line: 822, column: 4, scope: !5287)
!5292 = !DILocation(line: 822, column: 14, scope: !5287)
!5293 = !DILocation(line: 822, column: 26, scope: !5287)
!5294 = !DILocation(line: 822, column: 29, scope: !5287)
!5295 = !DILocation(line: 823, column: 7, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5246, file: !1, line: 823, column: 7)
!5297 = !DILocation(line: 823, column: 19, scope: !5296)
!5298 = !DILocation(line: 823, column: 22, scope: !5296)
!5299 = !DILocation(line: 823, column: 7, scope: !5246)
!5300 = !DILocation(line: 824, column: 4, scope: !5296)
!5301 = !DILocation(line: 824, column: 14, scope: !5296)
!5302 = !DILocation(line: 824, column: 26, scope: !5296)
!5303 = !DILocation(line: 824, column: 29, scope: !5296)
!5304 = !DILocation(line: 825, column: 2, scope: !5246)
!5305 = !DILocation(line: 810, column: 36, scope: !5241)
!5306 = !DILocation(line: 810, column: 2, scope: !5241)
!5307 = distinct !{!5307, !5244, !5308}
!5308 = !DILocation(line: 825, column: 2, scope: !5238)
!5309 = !DILocation(line: 827, column: 2, scope: !5225)
!5310 = !DILocation(line: 827, column: 12, scope: !5225)
!5311 = !DILocation(line: 828, column: 1, scope: !5225)
!5312 = distinct !DISubprogram(name: "RE_findOrAddHalo", scope: !1, file: !1, line: 922, type: !5313, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!5313 = !DISubroutineType(types: !5314)
!5314 = !{!2295, !2460, !93}
!5315 = !DILocalVariable(name: "obr", arg: 1, scope: !5312, file: !1, line: 922, type: !2460)
!5316 = !DILocation(line: 922, column: 38, scope: !5312)
!5317 = !DILocalVariable(name: "nr", arg: 2, scope: !5312, file: !1, line: 922, type: !93)
!5318 = !DILocation(line: 922, column: 47, scope: !5312)
!5319 = !DILocalVariable(name: "h", scope: !5312, file: !1, line: 924, type: !2527)
!5320 = !DILocation(line: 924, column: 11, scope: !5312)
!5321 = !DILocalVariable(name: "temp", scope: !5312, file: !1, line: 924, type: !2526)
!5322 = !DILocation(line: 924, column: 16, scope: !5312)
!5323 = !DILocalVariable(name: "a", scope: !5312, file: !1, line: 925, type: !93)
!5324 = !DILocation(line: 925, column: 6, scope: !5312)
!5325 = !DILocation(line: 927, column: 6, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5312, file: !1, line: 927, column: 6)
!5327 = !DILocation(line: 927, column: 8, scope: !5326)
!5328 = !DILocation(line: 927, column: 6, scope: !5312)
!5329 = !DILocation(line: 928, column: 42, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5326, file: !1, line: 927, column: 12)
!5331 = !DILocation(line: 928, column: 3, scope: !5330)
!5332 = !DILocation(line: 929, column: 3, scope: !5330)
!5333 = !DILocation(line: 931, column: 5, scope: !5312)
!5334 = !DILocation(line: 931, column: 7, scope: !5312)
!5335 = !DILocation(line: 931, column: 3, scope: !5312)
!5336 = !DILocation(line: 933, column: 6, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5312, file: !1, line: 933, column: 6)
!5338 = !DILocation(line: 933, column: 9, scope: !5337)
!5339 = !DILocation(line: 933, column: 14, scope: !5337)
!5340 = !DILocation(line: 933, column: 22, scope: !5337)
!5341 = !DILocation(line: 933, column: 7, scope: !5337)
!5342 = !DILocation(line: 933, column: 6, scope: !5312)
!5343 = !DILocation(line: 936, column: 8, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5337, file: !1, line: 933, column: 26)
!5345 = !DILocation(line: 936, column: 13, scope: !5344)
!5346 = !DILocation(line: 936, column: 7, scope: !5344)
!5347 = !DILocation(line: 938, column: 28, scope: !5344)
!5348 = !DILocation(line: 938, column: 58, scope: !5344)
!5349 = !DILocation(line: 938, column: 63, scope: !5344)
!5350 = !DILocation(line: 938, column: 72, scope: !5344)
!5351 = !DILocation(line: 938, column: 57, scope: !5344)
!5352 = !DILocation(line: 938, column: 55, scope: !5344)
!5353 = !DILocation(line: 938, column: 16, scope: !5344)
!5354 = !DILocation(line: 938, column: 3, scope: !5344)
!5355 = !DILocation(line: 938, column: 8, scope: !5344)
!5356 = !DILocation(line: 938, column: 14, scope: !5344)
!5357 = !DILocation(line: 939, column: 7, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5344, file: !1, line: 939, column: 7)
!5359 = !DILocation(line: 939, column: 7, scope: !5344)
!5360 = !DILocation(line: 939, column: 20, scope: !5358)
!5361 = !DILocation(line: 939, column: 25, scope: !5358)
!5362 = !DILocation(line: 939, column: 13, scope: !5358)
!5363 = !DILocation(line: 939, column: 32, scope: !5358)
!5364 = !DILocation(line: 939, column: 38, scope: !5358)
!5365 = !DILocation(line: 939, column: 43, scope: !5358)
!5366 = !DILocation(line: 939, column: 51, scope: !5358)
!5367 = !DILocation(line: 940, column: 12, scope: !5344)
!5368 = !DILocation(line: 940, column: 17, scope: !5344)
!5369 = !DILocation(line: 940, column: 23, scope: !5344)
!5370 = !DILocation(line: 940, column: 28, scope: !5344)
!5371 = !DILocation(line: 940, column: 3, scope: !5344)
!5372 = !DILocation(line: 941, column: 3, scope: !5344)
!5373 = !DILocation(line: 941, column: 8, scope: !5344)
!5374 = !DILocation(line: 941, column: 16, scope: !5344)
!5375 = !DILocation(line: 942, column: 7, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5344, file: !1, line: 942, column: 7)
!5377 = !DILocation(line: 942, column: 7, scope: !5344)
!5378 = !DILocation(line: 942, column: 13, scope: !5376)
!5379 = !DILocation(line: 942, column: 23, scope: !5376)
!5380 = !DILocation(line: 943, column: 2, scope: !5344)
!5381 = !DILocation(line: 945, column: 5, scope: !5312)
!5382 = !DILocation(line: 945, column: 10, scope: !5312)
!5383 = !DILocation(line: 945, column: 16, scope: !5312)
!5384 = !DILocation(line: 945, column: 3, scope: !5312)
!5385 = !DILocation(line: 946, column: 6, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5312, file: !1, line: 946, column: 6)
!5387 = !DILocation(line: 946, column: 7, scope: !5386)
!5388 = !DILocation(line: 946, column: 6, scope: !5312)
!5389 = !DILocation(line: 947, column: 17, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5386, file: !1, line: 946, column: 15)
!5391 = !DILocation(line: 947, column: 6, scope: !5390)
!5392 = !DILocation(line: 947, column: 4, scope: !5390)
!5393 = !DILocation(line: 948, column: 18, scope: !5390)
!5394 = !DILocation(line: 948, column: 3, scope: !5390)
!5395 = !DILocation(line: 948, column: 8, scope: !5390)
!5396 = !DILocation(line: 948, column: 14, scope: !5390)
!5397 = !DILocation(line: 948, column: 16, scope: !5390)
!5398 = !DILocation(line: 949, column: 2, scope: !5390)
!5399 = !DILocation(line: 950, column: 7, scope: !5312)
!5400 = !DILocation(line: 950, column: 10, scope: !5312)
!5401 = !DILocation(line: 950, column: 3, scope: !5312)
!5402 = !DILocation(line: 951, column: 9, scope: !5312)
!5403 = !DILocation(line: 951, column: 2, scope: !5312)
!5404 = !DILocation(line: 952, column: 1, scope: !5312)
!5405 = distinct !DISubprogram(name: "RE_inithalo", scope: !1, file: !1, line: 956, type: !5406, scopeLine: 959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!2295, !3778, !2460, !5408, !839, !839, !839, !84, !84, !93}
!5408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5409, size: 64)
!5409 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !107, line: 203, baseType: !106)
!5410 = !DILocalVariable(name: "re", arg: 1, scope: !5405, file: !1, line: 956, type: !3778)
!5411 = !DILocation(line: 956, column: 30, scope: !5405)
!5412 = !DILocalVariable(name: "obr", arg: 2, scope: !5405, file: !1, line: 956, type: !2460)
!5413 = !DILocation(line: 956, column: 45, scope: !5405)
!5414 = !DILocalVariable(name: "ma", arg: 3, scope: !5405, file: !1, line: 956, type: !5408)
!5415 = !DILocation(line: 956, column: 60, scope: !5405)
!5416 = !DILocalVariable(name: "vec", arg: 4, scope: !5405, file: !1, line: 957, type: !839)
!5417 = !DILocation(line: 957, column: 34, scope: !5405)
!5418 = !DILocalVariable(name: "vec1", arg: 5, scope: !5405, file: !1, line: 957, type: !839)
!5419 = !DILocation(line: 957, column: 54, scope: !5405)
!5420 = !DILocalVariable(name: "orco", arg: 6, scope: !5405, file: !1, line: 958, type: !839)
!5421 = !DILocation(line: 958, column: 35, scope: !5405)
!5422 = !DILocalVariable(name: "hasize", arg: 7, scope: !5405, file: !1, line: 958, type: !84)
!5423 = !DILocation(line: 958, column: 47, scope: !5405)
!5424 = !DILocalVariable(name: "vectsize", arg: 8, scope: !5405, file: !1, line: 958, type: !84)
!5425 = !DILocation(line: 958, column: 61, scope: !5405)
!5426 = !DILocalVariable(name: "seed", arg: 9, scope: !5405, file: !1, line: 958, type: !93)
!5427 = !DILocation(line: 958, column: 75, scope: !5405)
!5428 = !DILocalVariable(name: "har", scope: !5405, file: !1, line: 960, type: !2527)
!5429 = !DILocation(line: 960, column: 11, scope: !5405)
!5430 = !DILocalVariable(name: "mtex", scope: !5405, file: !1, line: 961, type: !5431)
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5432 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTex", file: !304, line: 94, baseType: !340)
!5433 = !DILocation(line: 961, column: 8, scope: !5405)
!5434 = !DILocalVariable(name: "tin", scope: !5405, file: !1, line: 962, type: !84)
!5435 = !DILocation(line: 962, column: 8, scope: !5405)
!5436 = !DILocalVariable(name: "tr", scope: !5405, file: !1, line: 962, type: !84)
!5437 = !DILocation(line: 962, column: 13, scope: !5405)
!5438 = !DILocalVariable(name: "tg", scope: !5405, file: !1, line: 962, type: !84)
!5439 = !DILocation(line: 962, column: 17, scope: !5405)
!5440 = !DILocalVariable(name: "tb", scope: !5405, file: !1, line: 962, type: !84)
!5441 = !DILocation(line: 962, column: 21, scope: !5405)
!5442 = !DILocalVariable(name: "ta", scope: !5405, file: !1, line: 962, type: !84)
!5443 = !DILocation(line: 962, column: 25, scope: !5405)
!5444 = !DILocalVariable(name: "xn", scope: !5405, file: !1, line: 963, type: !84)
!5445 = !DILocation(line: 963, column: 8, scope: !5405)
!5446 = !DILocalVariable(name: "yn", scope: !5405, file: !1, line: 963, type: !84)
!5447 = !DILocation(line: 963, column: 12, scope: !5405)
!5448 = !DILocalVariable(name: "zn", scope: !5405, file: !1, line: 963, type: !84)
!5449 = !DILocation(line: 963, column: 16, scope: !5405)
!5450 = !DILocalVariable(name: "texvec", scope: !5405, file: !1, line: 963, type: !83)
!5451 = !DILocation(line: 963, column: 20, scope: !5405)
!5452 = !DILocalVariable(name: "hoco", scope: !5405, file: !1, line: 963, type: !294)
!5453 = !DILocation(line: 963, column: 31, scope: !5405)
!5454 = !DILocalVariable(name: "hoco1", scope: !5405, file: !1, line: 963, type: !294)
!5455 = !DILocation(line: 963, column: 40, scope: !5405)
!5456 = !DILocation(line: 965, column: 6, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 965, column: 6)
!5458 = !DILocation(line: 965, column: 12, scope: !5457)
!5459 = !DILocation(line: 965, column: 6, scope: !5405)
!5460 = !DILocation(line: 965, column: 20, scope: !5457)
!5461 = !DILocation(line: 967, column: 15, scope: !5405)
!5462 = !DILocation(line: 967, column: 20, scope: !5405)
!5463 = !DILocation(line: 967, column: 24, scope: !5405)
!5464 = !DILocation(line: 967, column: 32, scope: !5405)
!5465 = !DILocation(line: 967, column: 2, scope: !5405)
!5466 = !DILocation(line: 968, column: 6, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 968, column: 6)
!5468 = !DILocation(line: 968, column: 13, scope: !5467)
!5469 = !DILocation(line: 968, column: 6, scope: !5405)
!5470 = !DILocation(line: 968, column: 21, scope: !5467)
!5471 = !DILocation(line: 969, column: 6, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 969, column: 6)
!5473 = !DILocation(line: 969, column: 6, scope: !5405)
!5474 = !DILocation(line: 970, column: 16, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 969, column: 12)
!5476 = !DILocation(line: 970, column: 22, scope: !5475)
!5477 = !DILocation(line: 970, column: 26, scope: !5475)
!5478 = !DILocation(line: 970, column: 34, scope: !5475)
!5479 = !DILocation(line: 970, column: 3, scope: !5475)
!5480 = !DILocation(line: 971, column: 7, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5475, file: !1, line: 971, column: 7)
!5482 = !DILocation(line: 971, column: 15, scope: !5481)
!5483 = !DILocation(line: 971, column: 7, scope: !5475)
!5484 = !DILocation(line: 971, column: 23, scope: !5481)
!5485 = !DILocation(line: 972, column: 2, scope: !5475)
!5486 = !DILocation(line: 974, column: 24, scope: !5405)
!5487 = !DILocation(line: 974, column: 29, scope: !5405)
!5488 = !DILocation(line: 974, column: 34, scope: !5405)
!5489 = !DILocation(line: 974, column: 41, scope: !5405)
!5490 = !DILocation(line: 974, column: 7, scope: !5405)
!5491 = !DILocation(line: 974, column: 5, scope: !5405)
!5492 = !DILocation(line: 975, column: 13, scope: !5405)
!5493 = !DILocation(line: 975, column: 18, scope: !5405)
!5494 = !DILocation(line: 975, column: 22, scope: !5405)
!5495 = !DILocation(line: 975, column: 2, scope: !5405)
!5496 = !DILocation(line: 976, column: 15, scope: !5405)
!5497 = !DILocation(line: 976, column: 2, scope: !5405)
!5498 = !DILocation(line: 976, column: 7, scope: !5405)
!5499 = !DILocation(line: 976, column: 13, scope: !5405)
!5500 = !DILocation(line: 980, column: 6, scope: !5405)
!5501 = !DILocation(line: 980, column: 4, scope: !5405)
!5502 = !DILocation(line: 981, column: 16, scope: !5405)
!5503 = !DILocation(line: 981, column: 20, scope: !5405)
!5504 = !DILocation(line: 981, column: 15, scope: !5405)
!5505 = !DILocation(line: 981, column: 26, scope: !5405)
!5506 = !DILocation(line: 981, column: 34, scope: !5405)
!5507 = !DILocation(line: 981, column: 33, scope: !5405)
!5508 = !DILocation(line: 981, column: 24, scope: !5405)
!5509 = !DILocation(line: 981, column: 2, scope: !5405)
!5510 = !DILocation(line: 981, column: 7, scope: !5405)
!5511 = !DILocation(line: 981, column: 9, scope: !5405)
!5512 = !DILocation(line: 982, column: 16, scope: !5405)
!5513 = !DILocation(line: 982, column: 20, scope: !5405)
!5514 = !DILocation(line: 982, column: 15, scope: !5405)
!5515 = !DILocation(line: 982, column: 26, scope: !5405)
!5516 = !DILocation(line: 982, column: 34, scope: !5405)
!5517 = !DILocation(line: 982, column: 33, scope: !5405)
!5518 = !DILocation(line: 982, column: 24, scope: !5405)
!5519 = !DILocation(line: 982, column: 2, scope: !5405)
!5520 = !DILocation(line: 982, column: 7, scope: !5405)
!5521 = !DILocation(line: 982, column: 9, scope: !5405)
!5522 = !DILocation(line: 983, column: 21, scope: !5405)
!5523 = !DILocation(line: 983, column: 29, scope: !5405)
!5524 = !DILocation(line: 983, column: 28, scope: !5405)
!5525 = !DILocation(line: 983, column: 19, scope: !5405)
!5526 = !DILocation(line: 983, column: 11, scope: !5405)
!5527 = !DILocation(line: 983, column: 2, scope: !5405)
!5528 = !DILocation(line: 983, column: 7, scope: !5405)
!5529 = !DILocation(line: 983, column: 9, scope: !5405)
!5530 = !DILocation(line: 985, column: 30, scope: !5405)
!5531 = !DILocation(line: 985, column: 38, scope: !5405)
!5532 = !DILocation(line: 985, column: 37, scope: !5405)
!5533 = !DILocation(line: 985, column: 28, scope: !5405)
!5534 = !DILocation(line: 985, column: 18, scope: !5405)
!5535 = !DILocation(line: 985, column: 2, scope: !5405)
!5536 = !DILocation(line: 985, column: 7, scope: !5405)
!5537 = !DILocation(line: 985, column: 16, scope: !5405)
!5538 = !DILocation(line: 988, column: 6, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 988, column: 6)
!5540 = !DILocation(line: 988, column: 6, scope: !5405)
!5541 = !DILocation(line: 990, column: 3, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 988, column: 12)
!5543 = !DILocation(line: 990, column: 8, scope: !5542)
!5544 = !DILocation(line: 990, column: 13, scope: !5542)
!5545 = !DILocation(line: 992, column: 8, scope: !5542)
!5546 = !DILocation(line: 992, column: 13, scope: !5542)
!5547 = !DILocation(line: 992, column: 23, scope: !5542)
!5548 = !DILocation(line: 992, column: 27, scope: !5542)
!5549 = !DILocation(line: 992, column: 22, scope: !5542)
!5550 = !DILocation(line: 992, column: 33, scope: !5542)
!5551 = !DILocation(line: 992, column: 42, scope: !5542)
!5552 = !DILocation(line: 992, column: 41, scope: !5542)
!5553 = !DILocation(line: 992, column: 31, scope: !5542)
!5554 = !DILocation(line: 992, column: 16, scope: !5542)
!5555 = !DILocation(line: 992, column: 5, scope: !5542)
!5556 = !DILocation(line: 993, column: 8, scope: !5542)
!5557 = !DILocation(line: 993, column: 13, scope: !5542)
!5558 = !DILocation(line: 993, column: 23, scope: !5542)
!5559 = !DILocation(line: 993, column: 27, scope: !5542)
!5560 = !DILocation(line: 993, column: 22, scope: !5542)
!5561 = !DILocation(line: 993, column: 33, scope: !5542)
!5562 = !DILocation(line: 993, column: 42, scope: !5542)
!5563 = !DILocation(line: 993, column: 41, scope: !5542)
!5564 = !DILocation(line: 993, column: 31, scope: !5542)
!5565 = !DILocation(line: 993, column: 16, scope: !5542)
!5566 = !DILocation(line: 993, column: 5, scope: !5542)
!5567 = !DILocation(line: 994, column: 7, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5542, file: !1, line: 994, column: 7)
!5569 = !DILocation(line: 994, column: 9, scope: !5568)
!5570 = !DILocation(line: 994, column: 16, scope: !5568)
!5571 = !DILocation(line: 994, column: 20, scope: !5568)
!5572 = !DILocation(line: 994, column: 22, scope: !5568)
!5573 = !DILocation(line: 994, column: 29, scope: !5568)
!5574 = !DILocation(line: 994, column: 32, scope: !5568)
!5575 = !DILocation(line: 994, column: 34, scope: !5568)
!5576 = !DILocation(line: 994, column: 7, scope: !5542)
!5577 = !DILocation(line: 994, column: 45, scope: !5568)
!5578 = !DILocation(line: 994, column: 43, scope: !5568)
!5579 = !DILocation(line: 995, column: 20, scope: !5568)
!5580 = !DILocation(line: 995, column: 24, scope: !5568)
!5581 = !DILocation(line: 995, column: 13, scope: !5568)
!5582 = !DILocation(line: 995, column: 11, scope: !5568)
!5583 = !DILocation(line: 997, column: 19, scope: !5542)
!5584 = !DILocation(line: 997, column: 14, scope: !5542)
!5585 = !DILocation(line: 997, column: 3, scope: !5542)
!5586 = !DILocation(line: 997, column: 8, scope: !5542)
!5587 = !DILocation(line: 997, column: 12, scope: !5542)
!5588 = !DILocation(line: 998, column: 19, scope: !5542)
!5589 = !DILocation(line: 998, column: 14, scope: !5542)
!5590 = !DILocation(line: 998, column: 3, scope: !5542)
!5591 = !DILocation(line: 998, column: 8, scope: !5542)
!5592 = !DILocation(line: 998, column: 12, scope: !5542)
!5593 = !DILocation(line: 999, column: 16, scope: !5542)
!5594 = !DILocation(line: 999, column: 22, scope: !5542)
!5595 = !DILocation(line: 999, column: 7, scope: !5542)
!5596 = !DILocation(line: 999, column: 5, scope: !5542)
!5597 = !DILocation(line: 1001, column: 16, scope: !5542)
!5598 = !DILocation(line: 1001, column: 25, scope: !5542)
!5599 = !DILocation(line: 1001, column: 24, scope: !5542)
!5600 = !DILocation(line: 1001, column: 36, scope: !5542)
!5601 = !DILocation(line: 1001, column: 35, scope: !5542)
!5602 = !DILocation(line: 1001, column: 46, scope: !5542)
!5603 = !DILocation(line: 1001, column: 45, scope: !5542)
!5604 = !DILocation(line: 1001, column: 28, scope: !5542)
!5605 = !DILocation(line: 1001, column: 3, scope: !5542)
!5606 = !DILocation(line: 1001, column: 8, scope: !5542)
!5607 = !DILocation(line: 1001, column: 14, scope: !5542)
!5608 = !DILocation(line: 1003, column: 15, scope: !5542)
!5609 = !DILocation(line: 1003, column: 20, scope: !5542)
!5610 = !DILocation(line: 1003, column: 24, scope: !5542)
!5611 = !DILocation(line: 1003, column: 29, scope: !5542)
!5612 = !DILocation(line: 1003, column: 3, scope: !5542)
!5613 = !DILocation(line: 1004, column: 16, scope: !5542)
!5614 = !DILocation(line: 1004, column: 21, scope: !5542)
!5615 = !DILocation(line: 1004, column: 3, scope: !5542)
!5616 = !DILocation(line: 1005, column: 2, scope: !5542)
!5617 = !DILocation(line: 1007, column: 6, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 1007, column: 6)
!5619 = !DILocation(line: 1007, column: 10, scope: !5618)
!5620 = !DILocation(line: 1007, column: 15, scope: !5618)
!5621 = !DILocation(line: 1007, column: 6, scope: !5405)
!5622 = !DILocation(line: 1007, column: 33, scope: !5618)
!5623 = !DILocation(line: 1007, column: 38, scope: !5618)
!5624 = !DILocation(line: 1007, column: 43, scope: !5618)
!5625 = !DILocation(line: 1009, column: 13, scope: !5405)
!5626 = !DILocation(line: 1009, column: 17, scope: !5405)
!5627 = !DILocation(line: 1009, column: 2, scope: !5405)
!5628 = !DILocation(line: 1009, column: 7, scope: !5405)
!5629 = !DILocation(line: 1009, column: 11, scope: !5405)
!5630 = !DILocation(line: 1010, column: 10, scope: !5405)
!5631 = !DILocation(line: 1010, column: 14, scope: !5405)
!5632 = !DILocation(line: 1010, column: 2, scope: !5405)
!5633 = !DILocation(line: 1010, column: 7, scope: !5405)
!5634 = !DILocation(line: 1010, column: 8, scope: !5405)
!5635 = !DILocation(line: 1011, column: 10, scope: !5405)
!5636 = !DILocation(line: 1011, column: 14, scope: !5405)
!5637 = !DILocation(line: 1011, column: 2, scope: !5405)
!5638 = !DILocation(line: 1011, column: 7, scope: !5405)
!5639 = !DILocation(line: 1011, column: 8, scope: !5405)
!5640 = !DILocation(line: 1012, column: 10, scope: !5405)
!5641 = !DILocation(line: 1012, column: 14, scope: !5405)
!5642 = !DILocation(line: 1012, column: 2, scope: !5405)
!5643 = !DILocation(line: 1012, column: 7, scope: !5405)
!5644 = !DILocation(line: 1012, column: 8, scope: !5405)
!5645 = !DILocation(line: 1013, column: 20, scope: !5405)
!5646 = !DILocation(line: 1013, column: 24, scope: !5405)
!5647 = !DILocation(line: 1013, column: 19, scope: !5405)
!5648 = !DILocation(line: 1013, column: 12, scope: !5405)
!5649 = !DILocation(line: 1013, column: 2, scope: !5405)
!5650 = !DILocation(line: 1013, column: 7, scope: !5405)
!5651 = !DILocation(line: 1013, column: 10, scope: !5405)
!5652 = !DILocation(line: 1014, column: 12, scope: !5405)
!5653 = !DILocation(line: 1014, column: 2, scope: !5405)
!5654 = !DILocation(line: 1014, column: 7, scope: !5405)
!5655 = !DILocation(line: 1014, column: 10, scope: !5405)
!5656 = !DILocation(line: 1015, column: 13, scope: !5405)
!5657 = !DILocation(line: 1015, column: 17, scope: !5405)
!5658 = !DILocation(line: 1015, column: 2, scope: !5405)
!5659 = !DILocation(line: 1015, column: 7, scope: !5405)
!5660 = !DILocation(line: 1015, column: 11, scope: !5405)
!5661 = !DILocation(line: 1016, column: 13, scope: !5405)
!5662 = !DILocation(line: 1016, column: 18, scope: !5405)
!5663 = !DILocation(line: 1016, column: 2, scope: !5405)
!5664 = !DILocation(line: 1016, column: 7, scope: !5405)
!5665 = !DILocation(line: 1016, column: 11, scope: !5405)
!5666 = !DILocation(line: 1018, column: 6, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 1018, column: 6)
!5668 = !DILocation(line: 1018, column: 10, scope: !5667)
!5669 = !DILocation(line: 1018, column: 15, scope: !5667)
!5670 = !DILocation(line: 1018, column: 6, scope: !5405)
!5671 = !DILocation(line: 1018, column: 43, scope: !5667)
!5672 = !DILocation(line: 1018, column: 47, scope: !5667)
!5673 = !DILocation(line: 1018, column: 26, scope: !5667)
!5674 = !DILocation(line: 1018, column: 31, scope: !5667)
!5675 = !DILocation(line: 1018, column: 41, scope: !5667)
!5676 = !DILocation(line: 1019, column: 6, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 1019, column: 6)
!5678 = !DILocation(line: 1019, column: 10, scope: !5677)
!5679 = !DILocation(line: 1019, column: 15, scope: !5677)
!5680 = !DILocation(line: 1019, column: 6, scope: !5405)
!5681 = !DILocation(line: 1019, column: 44, scope: !5677)
!5682 = !DILocation(line: 1019, column: 48, scope: !5677)
!5683 = !DILocation(line: 1019, column: 32, scope: !5677)
!5684 = !DILocation(line: 1019, column: 37, scope: !5677)
!5685 = !DILocation(line: 1019, column: 42, scope: !5677)
!5686 = !DILocation(line: 1020, column: 6, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 1020, column: 6)
!5688 = !DILocation(line: 1020, column: 10, scope: !5687)
!5689 = !DILocation(line: 1020, column: 15, scope: !5687)
!5690 = !DILocation(line: 1020, column: 6, scope: !5405)
!5691 = !DILocation(line: 1020, column: 44, scope: !5687)
!5692 = !DILocation(line: 1020, column: 48, scope: !5687)
!5693 = !DILocation(line: 1020, column: 32, scope: !5687)
!5694 = !DILocation(line: 1020, column: 37, scope: !5687)
!5695 = !DILocation(line: 1020, column: 42, scope: !5687)
!5696 = !DILocation(line: 1021, column: 6, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 1021, column: 6)
!5698 = !DILocation(line: 1021, column: 10, scope: !5697)
!5699 = !DILocation(line: 1021, column: 15, scope: !5697)
!5700 = !DILocation(line: 1021, column: 6, scope: !5405)
!5701 = !DILocation(line: 1021, column: 45, scope: !5697)
!5702 = !DILocation(line: 1021, column: 49, scope: !5697)
!5703 = !DILocation(line: 1021, column: 32, scope: !5697)
!5704 = !DILocation(line: 1021, column: 37, scope: !5697)
!5705 = !DILocation(line: 1021, column: 43, scope: !5697)
!5706 = !DILocation(line: 1024, column: 6, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 1024, column: 6)
!5708 = !DILocation(line: 1024, column: 10, scope: !5707)
!5709 = !DILocation(line: 1024, column: 6, scope: !5405)
!5710 = !DILocation(line: 1026, column: 7, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !1, line: 1026, column: 7)
!5712 = distinct !DILexicalBlock(scope: !5707, file: !1, line: 1024, column: 19)
!5713 = !DILocation(line: 1026, column: 11, scope: !5711)
!5714 = !DILocation(line: 1026, column: 16, scope: !5711)
!5715 = !DILocation(line: 1026, column: 7, scope: !5712)
!5716 = !DILocation(line: 1027, column: 4, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5711, file: !1, line: 1026, column: 30)
!5718 = !DILocation(line: 1027, column: 9, scope: !5717)
!5719 = !DILocation(line: 1027, column: 13, scope: !5717)
!5720 = !DILocation(line: 1028, column: 3, scope: !5717)
!5721 = !DILocation(line: 1029, column: 12, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5711, file: !1, line: 1029, column: 12)
!5723 = !DILocation(line: 1029, column: 17, scope: !5722)
!5724 = !DILocation(line: 1029, column: 22, scope: !5722)
!5725 = !DILocation(line: 1029, column: 29, scope: !5722)
!5726 = !DILocation(line: 1029, column: 12, scope: !5711)
!5727 = !DILocation(line: 1031, column: 3, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5722, file: !1, line: 1029, column: 41)
!5729 = !DILocation(line: 1033, column: 10, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5722, file: !1, line: 1032, column: 8)
!5731 = !DILocation(line: 1033, column: 14, scope: !5730)
!5732 = !DILocation(line: 1033, column: 8, scope: !5730)
!5733 = !DILocation(line: 1034, column: 15, scope: !5730)
!5734 = !DILocation(line: 1034, column: 23, scope: !5730)
!5735 = !DILocation(line: 1034, column: 4, scope: !5730)
!5736 = !DILocation(line: 1036, column: 8, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5730, file: !1, line: 1036, column: 8)
!5738 = !DILocation(line: 1036, column: 14, scope: !5737)
!5739 = !DILocation(line: 1036, column: 20, scope: !5737)
!5740 = !DILocation(line: 1036, column: 8, scope: !5730)
!5741 = !DILocation(line: 1038, column: 4, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5737, file: !1, line: 1036, column: 34)
!5743 = !DILocation(line: 1039, column: 13, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5737, file: !1, line: 1039, column: 13)
!5745 = !DILocation(line: 1039, column: 19, scope: !5744)
!5746 = !DILocation(line: 1039, column: 25, scope: !5744)
!5747 = !DILocation(line: 1039, column: 13, scope: !5737)
!5748 = !DILocation(line: 1044, column: 4, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5744, file: !1, line: 1039, column: 41)
!5750 = !DILocation(line: 1046, column: 9, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5752, file: !1, line: 1046, column: 9)
!5752 = distinct !DILexicalBlock(scope: !5744, file: !1, line: 1045, column: 9)
!5753 = !DILocation(line: 1046, column: 9, scope: !5752)
!5754 = !DILocation(line: 1047, column: 17, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5751, file: !1, line: 1046, column: 15)
!5756 = !DILocation(line: 1047, column: 25, scope: !5755)
!5757 = !DILocation(line: 1047, column: 6, scope: !5755)
!5758 = !DILocation(line: 1048, column: 5, scope: !5755)
!5759 = !DILocation(line: 1051, column: 14, scope: !5730)
!5760 = !DILocation(line: 1051, column: 20, scope: !5730)
!5761 = !DILocation(line: 1051, column: 57, scope: !5730)
!5762 = !DILocation(line: 1051, column: 61, scope: !5730)
!5763 = !DILocation(line: 1051, column: 4, scope: !5730)
!5764 = !DILocation(line: 1053, column: 8, scope: !5730)
!5765 = !DILocation(line: 1053, column: 12, scope: !5730)
!5766 = !DILocation(line: 1053, column: 18, scope: !5730)
!5767 = !DILocation(line: 1053, column: 11, scope: !5730)
!5768 = !DILocation(line: 1053, column: 6, scope: !5730)
!5769 = !DILocation(line: 1056, column: 8, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5730, file: !1, line: 1056, column: 8)
!5771 = !DILocation(line: 1056, column: 14, scope: !5770)
!5772 = !DILocation(line: 1056, column: 20, scope: !5770)
!5773 = !DILocation(line: 1056, column: 8, scope: !5730)
!5774 = !DILocation(line: 1057, column: 14, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5770, file: !1, line: 1056, column: 31)
!5776 = !DILocation(line: 1057, column: 13, scope: !5775)
!5777 = !DILocation(line: 1057, column: 7, scope: !5775)
!5778 = !DILocation(line: 1058, column: 14, scope: !5775)
!5779 = !DILocation(line: 1058, column: 17, scope: !5775)
!5780 = !DILocation(line: 1058, column: 16, scope: !5775)
!5781 = !DILocation(line: 1058, column: 21, scope: !5775)
!5782 = !DILocation(line: 1058, column: 24, scope: !5775)
!5783 = !DILocation(line: 1058, column: 28, scope: !5775)
!5784 = !DILocation(line: 1058, column: 23, scope: !5775)
!5785 = !DILocation(line: 1058, column: 19, scope: !5775)
!5786 = !DILocation(line: 1058, column: 5, scope: !5775)
!5787 = !DILocation(line: 1058, column: 10, scope: !5775)
!5788 = !DILocation(line: 1058, column: 11, scope: !5775)
!5789 = !DILocation(line: 1059, column: 14, scope: !5775)
!5790 = !DILocation(line: 1059, column: 17, scope: !5775)
!5791 = !DILocation(line: 1059, column: 16, scope: !5775)
!5792 = !DILocation(line: 1059, column: 21, scope: !5775)
!5793 = !DILocation(line: 1059, column: 24, scope: !5775)
!5794 = !DILocation(line: 1059, column: 28, scope: !5775)
!5795 = !DILocation(line: 1059, column: 23, scope: !5775)
!5796 = !DILocation(line: 1059, column: 19, scope: !5775)
!5797 = !DILocation(line: 1059, column: 5, scope: !5775)
!5798 = !DILocation(line: 1059, column: 10, scope: !5775)
!5799 = !DILocation(line: 1059, column: 11, scope: !5775)
!5800 = !DILocation(line: 1060, column: 14, scope: !5775)
!5801 = !DILocation(line: 1060, column: 17, scope: !5775)
!5802 = !DILocation(line: 1060, column: 16, scope: !5775)
!5803 = !DILocation(line: 1060, column: 21, scope: !5775)
!5804 = !DILocation(line: 1060, column: 24, scope: !5775)
!5805 = !DILocation(line: 1060, column: 28, scope: !5775)
!5806 = !DILocation(line: 1060, column: 23, scope: !5775)
!5807 = !DILocation(line: 1060, column: 19, scope: !5775)
!5808 = !DILocation(line: 1060, column: 5, scope: !5775)
!5809 = !DILocation(line: 1060, column: 10, scope: !5775)
!5810 = !DILocation(line: 1060, column: 11, scope: !5775)
!5811 = !DILocation(line: 1061, column: 4, scope: !5775)
!5812 = !DILocation(line: 1062, column: 8, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5730, file: !1, line: 1062, column: 8)
!5814 = !DILocation(line: 1062, column: 14, scope: !5813)
!5815 = !DILocation(line: 1062, column: 20, scope: !5813)
!5816 = !DILocation(line: 1062, column: 8, scope: !5730)
!5817 = !DILocation(line: 1063, column: 16, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5813, file: !1, line: 1062, column: 32)
!5819 = !DILocation(line: 1063, column: 5, scope: !5818)
!5820 = !DILocation(line: 1063, column: 10, scope: !5818)
!5821 = !DILocation(line: 1063, column: 14, scope: !5818)
!5822 = !DILocation(line: 1064, column: 4, scope: !5818)
!5823 = !DILocation(line: 1065, column: 8, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5730, file: !1, line: 1065, column: 8)
!5825 = !DILocation(line: 1065, column: 14, scope: !5824)
!5826 = !DILocation(line: 1065, column: 20, scope: !5824)
!5827 = !DILocation(line: 1065, column: 8, scope: !5730)
!5828 = !DILocation(line: 1066, column: 16, scope: !5824)
!5829 = !DILocation(line: 1066, column: 5, scope: !5824)
!5830 = !DILocation(line: 1066, column: 10, scope: !5824)
!5831 = !DILocation(line: 1066, column: 14, scope: !5824)
!5832 = !DILocation(line: 1068, column: 2, scope: !5712)
!5833 = !DILocation(line: 1070, column: 14, scope: !5405)
!5834 = !DILocation(line: 1070, column: 18, scope: !5405)
!5835 = !DILocation(line: 1070, column: 2, scope: !5405)
!5836 = !DILocation(line: 1070, column: 7, scope: !5405)
!5837 = !DILocation(line: 1070, column: 12, scope: !5405)
!5838 = !DILocation(line: 1072, column: 9, scope: !5405)
!5839 = !DILocation(line: 1072, column: 2, scope: !5405)
!5840 = !DILocation(line: 1073, column: 1, scope: !5405)
!5841 = distinct !DISubprogram(name: "len_v3v3", scope: !3758, file: !3758, line: 759, type: !5842, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!5842 = !DISubroutineType(types: !5843)
!5843 = !{!84, !839, !839}
!5844 = !DILocalVariable(name: "a", arg: 1, scope: !5841, file: !3758, line: 759, type: !839)
!5845 = !DILocation(line: 759, column: 36, scope: !5841)
!5846 = !DILocalVariable(name: "b", arg: 2, scope: !5841, file: !3758, line: 759, type: !839)
!5847 = !DILocation(line: 759, column: 54, scope: !5841)
!5848 = !DILocalVariable(name: "d", scope: !5841, file: !3758, line: 761, type: !83)
!5849 = !DILocation(line: 761, column: 8, scope: !5841)
!5850 = !DILocation(line: 763, column: 14, scope: !5841)
!5851 = !DILocation(line: 763, column: 17, scope: !5841)
!5852 = !DILocation(line: 763, column: 20, scope: !5841)
!5853 = !DILocation(line: 763, column: 2, scope: !5841)
!5854 = !DILocation(line: 764, column: 16, scope: !5841)
!5855 = !DILocation(line: 764, column: 9, scope: !5841)
!5856 = !DILocation(line: 764, column: 2, scope: !5841)
!5857 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !3758, file: !3758, line: 357, type: !5858, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{null, !89, !839, !839}
!5860 = !DILocalVariable(name: "r", arg: 1, scope: !5857, file: !3758, line: 357, type: !89)
!5861 = !DILocation(line: 357, column: 32, scope: !5857)
!5862 = !DILocalVariable(name: "a", arg: 2, scope: !5857, file: !3758, line: 357, type: !839)
!5863 = !DILocation(line: 357, column: 50, scope: !5857)
!5864 = !DILocalVariable(name: "b", arg: 3, scope: !5857, file: !3758, line: 357, type: !839)
!5865 = !DILocation(line: 357, column: 68, scope: !5857)
!5866 = !DILocation(line: 359, column: 9, scope: !5857)
!5867 = !DILocation(line: 359, column: 16, scope: !5857)
!5868 = !DILocation(line: 359, column: 14, scope: !5857)
!5869 = !DILocation(line: 359, column: 2, scope: !5857)
!5870 = !DILocation(line: 359, column: 7, scope: !5857)
!5871 = !DILocation(line: 360, column: 9, scope: !5857)
!5872 = !DILocation(line: 360, column: 16, scope: !5857)
!5873 = !DILocation(line: 360, column: 14, scope: !5857)
!5874 = !DILocation(line: 360, column: 2, scope: !5857)
!5875 = !DILocation(line: 360, column: 7, scope: !5857)
!5876 = !DILocation(line: 361, column: 9, scope: !5857)
!5877 = !DILocation(line: 361, column: 16, scope: !5857)
!5878 = !DILocation(line: 361, column: 14, scope: !5857)
!5879 = !DILocation(line: 361, column: 2, scope: !5857)
!5880 = !DILocation(line: 361, column: 7, scope: !5857)
!5881 = !DILocation(line: 362, column: 1, scope: !5857)
!5882 = distinct !DISubprogram(name: "RE_inithalo_particle", scope: !1, file: !1, line: 1075, type: !5883, scopeLine: 1078, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!5883 = !DISubroutineType(types: !5884)
!5884 = !{!2295, !3778, !2460, !642, !5408, !839, !839, !839, !839, !84, !84, !93, !839}
!5885 = !DILocalVariable(name: "re", arg: 1, scope: !5882, file: !1, line: 1075, type: !3778)
!5886 = !DILocation(line: 1075, column: 39, scope: !5882)
!5887 = !DILocalVariable(name: "obr", arg: 2, scope: !5882, file: !1, line: 1075, type: !2460)
!5888 = !DILocation(line: 1075, column: 54, scope: !5882)
!5889 = !DILocalVariable(name: "dm", arg: 3, scope: !5882, file: !1, line: 1075, type: !642)
!5890 = !DILocation(line: 1075, column: 72, scope: !5882)
!5891 = !DILocalVariable(name: "ma", arg: 4, scope: !5882, file: !1, line: 1075, type: !5408)
!5892 = !DILocation(line: 1075, column: 86, scope: !5882)
!5893 = !DILocalVariable(name: "vec", arg: 5, scope: !5882, file: !1, line: 1076, type: !839)
!5894 = !DILocation(line: 1076, column: 43, scope: !5882)
!5895 = !DILocalVariable(name: "vec1", arg: 6, scope: !5882, file: !1, line: 1076, type: !839)
!5896 = !DILocation(line: 1076, column: 63, scope: !5882)
!5897 = !DILocalVariable(name: "orco", arg: 7, scope: !5882, file: !1, line: 1077, type: !839)
!5898 = !DILocation(line: 1077, column: 44, scope: !5882)
!5899 = !DILocalVariable(name: "uvco", arg: 8, scope: !5882, file: !1, line: 1077, type: !839)
!5900 = !DILocation(line: 1077, column: 63, scope: !5882)
!5901 = !DILocalVariable(name: "hasize", arg: 9, scope: !5882, file: !1, line: 1077, type: !84)
!5902 = !DILocation(line: 1077, column: 75, scope: !5882)
!5903 = !DILocalVariable(name: "vectsize", arg: 10, scope: !5882, file: !1, line: 1077, type: !84)
!5904 = !DILocation(line: 1077, column: 89, scope: !5882)
!5905 = !DILocalVariable(name: "seed", arg: 11, scope: !5882, file: !1, line: 1077, type: !93)
!5906 = !DILocation(line: 1077, column: 103, scope: !5882)
!5907 = !DILocalVariable(name: "pa_co", arg: 12, scope: !5882, file: !1, line: 1077, type: !839)
!5908 = !DILocation(line: 1077, column: 121, scope: !5882)
!5909 = !DILocalVariable(name: "har", scope: !5882, file: !1, line: 1079, type: !2527)
!5910 = !DILocation(line: 1079, column: 11, scope: !5882)
!5911 = !DILocalVariable(name: "mtex", scope: !5882, file: !1, line: 1080, type: !5431)
!5912 = !DILocation(line: 1080, column: 8, scope: !5882)
!5913 = !DILocalVariable(name: "tin", scope: !5882, file: !1, line: 1081, type: !84)
!5914 = !DILocation(line: 1081, column: 8, scope: !5882)
!5915 = !DILocalVariable(name: "tr", scope: !5882, file: !1, line: 1081, type: !84)
!5916 = !DILocation(line: 1081, column: 13, scope: !5882)
!5917 = !DILocalVariable(name: "tg", scope: !5882, file: !1, line: 1081, type: !84)
!5918 = !DILocation(line: 1081, column: 17, scope: !5882)
!5919 = !DILocalVariable(name: "tb", scope: !5882, file: !1, line: 1081, type: !84)
!5920 = !DILocation(line: 1081, column: 21, scope: !5882)
!5921 = !DILocalVariable(name: "ta", scope: !5882, file: !1, line: 1081, type: !84)
!5922 = !DILocation(line: 1081, column: 25, scope: !5882)
!5923 = !DILocalVariable(name: "xn", scope: !5882, file: !1, line: 1082, type: !84)
!5924 = !DILocation(line: 1082, column: 8, scope: !5882)
!5925 = !DILocalVariable(name: "yn", scope: !5882, file: !1, line: 1082, type: !84)
!5926 = !DILocation(line: 1082, column: 12, scope: !5882)
!5927 = !DILocalVariable(name: "zn", scope: !5882, file: !1, line: 1082, type: !84)
!5928 = !DILocation(line: 1082, column: 16, scope: !5882)
!5929 = !DILocalVariable(name: "texvec", scope: !5882, file: !1, line: 1082, type: !83)
!5930 = !DILocation(line: 1082, column: 20, scope: !5882)
!5931 = !DILocalVariable(name: "hoco", scope: !5882, file: !1, line: 1082, type: !294)
!5932 = !DILocation(line: 1082, column: 31, scope: !5882)
!5933 = !DILocalVariable(name: "hoco1", scope: !5882, file: !1, line: 1082, type: !294)
!5934 = !DILocation(line: 1082, column: 40, scope: !5882)
!5935 = !DILocalVariable(name: "in", scope: !5882, file: !1, line: 1082, type: !83)
!5936 = !DILocation(line: 1082, column: 50, scope: !5882)
!5937 = !DILocalVariable(name: "tex", scope: !5882, file: !1, line: 1082, type: !83)
!5938 = !DILocation(line: 1082, column: 57, scope: !5882)
!5939 = !DILocalVariable(name: "out", scope: !5882, file: !1, line: 1082, type: !83)
!5940 = !DILocation(line: 1082, column: 65, scope: !5882)
!5941 = !DILocalVariable(name: "i", scope: !5882, file: !1, line: 1083, type: !93)
!5942 = !DILocation(line: 1083, column: 6, scope: !5882)
!5943 = !DILocalVariable(name: "hasrgb", scope: !5882, file: !1, line: 1083, type: !93)
!5944 = !DILocation(line: 1083, column: 9, scope: !5882)
!5945 = !DILocation(line: 1085, column: 6, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1085, column: 6)
!5947 = !DILocation(line: 1085, column: 12, scope: !5946)
!5948 = !DILocation(line: 1085, column: 6, scope: !5882)
!5949 = !DILocation(line: 1085, column: 20, scope: !5946)
!5950 = !DILocation(line: 1087, column: 15, scope: !5882)
!5951 = !DILocation(line: 1087, column: 20, scope: !5882)
!5952 = !DILocation(line: 1087, column: 24, scope: !5882)
!5953 = !DILocation(line: 1087, column: 32, scope: !5882)
!5954 = !DILocation(line: 1087, column: 2, scope: !5882)
!5955 = !DILocation(line: 1088, column: 6, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1088, column: 6)
!5957 = !DILocation(line: 1088, column: 13, scope: !5956)
!5958 = !DILocation(line: 1088, column: 6, scope: !5882)
!5959 = !DILocation(line: 1088, column: 21, scope: !5956)
!5960 = !DILocation(line: 1089, column: 6, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1089, column: 6)
!5962 = !DILocation(line: 1089, column: 6, scope: !5882)
!5963 = !DILocation(line: 1090, column: 16, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5961, file: !1, line: 1089, column: 12)
!5965 = !DILocation(line: 1090, column: 22, scope: !5964)
!5966 = !DILocation(line: 1090, column: 26, scope: !5964)
!5967 = !DILocation(line: 1090, column: 34, scope: !5964)
!5968 = !DILocation(line: 1090, column: 3, scope: !5964)
!5969 = !DILocation(line: 1091, column: 7, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5964, file: !1, line: 1091, column: 7)
!5971 = !DILocation(line: 1091, column: 15, scope: !5970)
!5972 = !DILocation(line: 1091, column: 7, scope: !5964)
!5973 = !DILocation(line: 1091, column: 23, scope: !5970)
!5974 = !DILocation(line: 1092, column: 2, scope: !5964)
!5975 = !DILocation(line: 1094, column: 24, scope: !5882)
!5976 = !DILocation(line: 1094, column: 29, scope: !5882)
!5977 = !DILocation(line: 1094, column: 34, scope: !5882)
!5978 = !DILocation(line: 1094, column: 41, scope: !5882)
!5979 = !DILocation(line: 1094, column: 7, scope: !5882)
!5980 = !DILocation(line: 1094, column: 5, scope: !5882)
!5981 = !DILocation(line: 1095, column: 13, scope: !5882)
!5982 = !DILocation(line: 1095, column: 18, scope: !5882)
!5983 = !DILocation(line: 1095, column: 22, scope: !5882)
!5984 = !DILocation(line: 1095, column: 2, scope: !5882)
!5985 = !DILocation(line: 1096, column: 15, scope: !5882)
!5986 = !DILocation(line: 1096, column: 2, scope: !5882)
!5987 = !DILocation(line: 1096, column: 7, scope: !5882)
!5988 = !DILocation(line: 1096, column: 13, scope: !5882)
!5989 = !DILocation(line: 1100, column: 6, scope: !5882)
!5990 = !DILocation(line: 1100, column: 4, scope: !5882)
!5991 = !DILocation(line: 1101, column: 16, scope: !5882)
!5992 = !DILocation(line: 1101, column: 20, scope: !5882)
!5993 = !DILocation(line: 1101, column: 15, scope: !5882)
!5994 = !DILocation(line: 1101, column: 26, scope: !5882)
!5995 = !DILocation(line: 1101, column: 34, scope: !5882)
!5996 = !DILocation(line: 1101, column: 33, scope: !5882)
!5997 = !DILocation(line: 1101, column: 24, scope: !5882)
!5998 = !DILocation(line: 1101, column: 2, scope: !5882)
!5999 = !DILocation(line: 1101, column: 7, scope: !5882)
!6000 = !DILocation(line: 1101, column: 9, scope: !5882)
!6001 = !DILocation(line: 1102, column: 16, scope: !5882)
!6002 = !DILocation(line: 1102, column: 20, scope: !5882)
!6003 = !DILocation(line: 1102, column: 15, scope: !5882)
!6004 = !DILocation(line: 1102, column: 26, scope: !5882)
!6005 = !DILocation(line: 1102, column: 34, scope: !5882)
!6006 = !DILocation(line: 1102, column: 33, scope: !5882)
!6007 = !DILocation(line: 1102, column: 24, scope: !5882)
!6008 = !DILocation(line: 1102, column: 2, scope: !5882)
!6009 = !DILocation(line: 1102, column: 7, scope: !5882)
!6010 = !DILocation(line: 1102, column: 9, scope: !5882)
!6011 = !DILocation(line: 1103, column: 21, scope: !5882)
!6012 = !DILocation(line: 1103, column: 29, scope: !5882)
!6013 = !DILocation(line: 1103, column: 28, scope: !5882)
!6014 = !DILocation(line: 1103, column: 19, scope: !5882)
!6015 = !DILocation(line: 1103, column: 11, scope: !5882)
!6016 = !DILocation(line: 1103, column: 2, scope: !5882)
!6017 = !DILocation(line: 1103, column: 7, scope: !5882)
!6018 = !DILocation(line: 1103, column: 9, scope: !5882)
!6019 = !DILocation(line: 1105, column: 30, scope: !5882)
!6020 = !DILocation(line: 1105, column: 38, scope: !5882)
!6021 = !DILocation(line: 1105, column: 37, scope: !5882)
!6022 = !DILocation(line: 1105, column: 28, scope: !5882)
!6023 = !DILocation(line: 1105, column: 18, scope: !5882)
!6024 = !DILocation(line: 1105, column: 2, scope: !5882)
!6025 = !DILocation(line: 1105, column: 7, scope: !5882)
!6026 = !DILocation(line: 1105, column: 16, scope: !5882)
!6027 = !DILocation(line: 1108, column: 6, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1108, column: 6)
!6029 = !DILocation(line: 1108, column: 6, scope: !5882)
!6030 = !DILocation(line: 1110, column: 3, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6028, file: !1, line: 1108, column: 12)
!6032 = !DILocation(line: 1110, column: 8, scope: !6031)
!6033 = !DILocation(line: 1110, column: 13, scope: !6031)
!6034 = !DILocation(line: 1112, column: 8, scope: !6031)
!6035 = !DILocation(line: 1112, column: 13, scope: !6031)
!6036 = !DILocation(line: 1112, column: 23, scope: !6031)
!6037 = !DILocation(line: 1112, column: 27, scope: !6031)
!6038 = !DILocation(line: 1112, column: 22, scope: !6031)
!6039 = !DILocation(line: 1112, column: 33, scope: !6031)
!6040 = !DILocation(line: 1112, column: 42, scope: !6031)
!6041 = !DILocation(line: 1112, column: 41, scope: !6031)
!6042 = !DILocation(line: 1112, column: 31, scope: !6031)
!6043 = !DILocation(line: 1112, column: 16, scope: !6031)
!6044 = !DILocation(line: 1112, column: 5, scope: !6031)
!6045 = !DILocation(line: 1113, column: 8, scope: !6031)
!6046 = !DILocation(line: 1113, column: 13, scope: !6031)
!6047 = !DILocation(line: 1113, column: 23, scope: !6031)
!6048 = !DILocation(line: 1113, column: 27, scope: !6031)
!6049 = !DILocation(line: 1113, column: 22, scope: !6031)
!6050 = !DILocation(line: 1113, column: 33, scope: !6031)
!6051 = !DILocation(line: 1113, column: 42, scope: !6031)
!6052 = !DILocation(line: 1113, column: 41, scope: !6031)
!6053 = !DILocation(line: 1113, column: 31, scope: !6031)
!6054 = !DILocation(line: 1113, column: 16, scope: !6031)
!6055 = !DILocation(line: 1113, column: 5, scope: !6031)
!6056 = !DILocation(line: 1114, column: 7, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6031, file: !1, line: 1114, column: 7)
!6058 = !DILocation(line: 1114, column: 9, scope: !6057)
!6059 = !DILocation(line: 1114, column: 16, scope: !6057)
!6060 = !DILocation(line: 1114, column: 20, scope: !6057)
!6061 = !DILocation(line: 1114, column: 22, scope: !6057)
!6062 = !DILocation(line: 1114, column: 29, scope: !6057)
!6063 = !DILocation(line: 1114, column: 32, scope: !6057)
!6064 = !DILocation(line: 1114, column: 34, scope: !6057)
!6065 = !DILocation(line: 1114, column: 7, scope: !6031)
!6066 = !DILocation(line: 1114, column: 45, scope: !6057)
!6067 = !DILocation(line: 1114, column: 43, scope: !6057)
!6068 = !DILocation(line: 1115, column: 20, scope: !6057)
!6069 = !DILocation(line: 1115, column: 24, scope: !6057)
!6070 = !DILocation(line: 1115, column: 13, scope: !6057)
!6071 = !DILocation(line: 1115, column: 11, scope: !6057)
!6072 = !DILocation(line: 1117, column: 19, scope: !6031)
!6073 = !DILocation(line: 1117, column: 14, scope: !6031)
!6074 = !DILocation(line: 1117, column: 3, scope: !6031)
!6075 = !DILocation(line: 1117, column: 8, scope: !6031)
!6076 = !DILocation(line: 1117, column: 12, scope: !6031)
!6077 = !DILocation(line: 1118, column: 19, scope: !6031)
!6078 = !DILocation(line: 1118, column: 14, scope: !6031)
!6079 = !DILocation(line: 1118, column: 3, scope: !6031)
!6080 = !DILocation(line: 1118, column: 8, scope: !6031)
!6081 = !DILocation(line: 1118, column: 12, scope: !6031)
!6082 = !DILocation(line: 1119, column: 16, scope: !6031)
!6083 = !DILocation(line: 1119, column: 22, scope: !6031)
!6084 = !DILocation(line: 1119, column: 7, scope: !6031)
!6085 = !DILocation(line: 1119, column: 26, scope: !6031)
!6086 = !DILocation(line: 1119, column: 5, scope: !6031)
!6087 = !DILocation(line: 1121, column: 16, scope: !6031)
!6088 = !DILocation(line: 1121, column: 25, scope: !6031)
!6089 = !DILocation(line: 1121, column: 24, scope: !6031)
!6090 = !DILocation(line: 1121, column: 36, scope: !6031)
!6091 = !DILocation(line: 1121, column: 35, scope: !6031)
!6092 = !DILocation(line: 1121, column: 46, scope: !6031)
!6093 = !DILocation(line: 1121, column: 45, scope: !6031)
!6094 = !DILocation(line: 1121, column: 28, scope: !6031)
!6095 = !DILocation(line: 1121, column: 3, scope: !6031)
!6096 = !DILocation(line: 1121, column: 8, scope: !6031)
!6097 = !DILocation(line: 1121, column: 14, scope: !6031)
!6098 = !DILocation(line: 1123, column: 15, scope: !6031)
!6099 = !DILocation(line: 1123, column: 20, scope: !6031)
!6100 = !DILocation(line: 1123, column: 24, scope: !6031)
!6101 = !DILocation(line: 1123, column: 29, scope: !6031)
!6102 = !DILocation(line: 1123, column: 3, scope: !6031)
!6103 = !DILocation(line: 1124, column: 16, scope: !6031)
!6104 = !DILocation(line: 1124, column: 21, scope: !6031)
!6105 = !DILocation(line: 1124, column: 3, scope: !6031)
!6106 = !DILocation(line: 1125, column: 2, scope: !6031)
!6107 = !DILocation(line: 1127, column: 6, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1127, column: 6)
!6109 = !DILocation(line: 1127, column: 10, scope: !6108)
!6110 = !DILocation(line: 1127, column: 15, scope: !6108)
!6111 = !DILocation(line: 1127, column: 6, scope: !5882)
!6112 = !DILocation(line: 1127, column: 33, scope: !6108)
!6113 = !DILocation(line: 1127, column: 38, scope: !6108)
!6114 = !DILocation(line: 1127, column: 43, scope: !6108)
!6115 = !DILocation(line: 1129, column: 13, scope: !5882)
!6116 = !DILocation(line: 1129, column: 17, scope: !5882)
!6117 = !DILocation(line: 1129, column: 2, scope: !5882)
!6118 = !DILocation(line: 1129, column: 7, scope: !5882)
!6119 = !DILocation(line: 1129, column: 11, scope: !5882)
!6120 = !DILocation(line: 1130, column: 10, scope: !5882)
!6121 = !DILocation(line: 1130, column: 14, scope: !5882)
!6122 = !DILocation(line: 1130, column: 2, scope: !5882)
!6123 = !DILocation(line: 1130, column: 7, scope: !5882)
!6124 = !DILocation(line: 1130, column: 8, scope: !5882)
!6125 = !DILocation(line: 1131, column: 10, scope: !5882)
!6126 = !DILocation(line: 1131, column: 14, scope: !5882)
!6127 = !DILocation(line: 1131, column: 2, scope: !5882)
!6128 = !DILocation(line: 1131, column: 7, scope: !5882)
!6129 = !DILocation(line: 1131, column: 8, scope: !5882)
!6130 = !DILocation(line: 1132, column: 10, scope: !5882)
!6131 = !DILocation(line: 1132, column: 14, scope: !5882)
!6132 = !DILocation(line: 1132, column: 2, scope: !5882)
!6133 = !DILocation(line: 1132, column: 7, scope: !5882)
!6134 = !DILocation(line: 1132, column: 8, scope: !5882)
!6135 = !DILocation(line: 1133, column: 20, scope: !5882)
!6136 = !DILocation(line: 1133, column: 24, scope: !5882)
!6137 = !DILocation(line: 1133, column: 19, scope: !5882)
!6138 = !DILocation(line: 1133, column: 12, scope: !5882)
!6139 = !DILocation(line: 1133, column: 2, scope: !5882)
!6140 = !DILocation(line: 1133, column: 7, scope: !5882)
!6141 = !DILocation(line: 1133, column: 10, scope: !5882)
!6142 = !DILocation(line: 1134, column: 12, scope: !5882)
!6143 = !DILocation(line: 1134, column: 2, scope: !5882)
!6144 = !DILocation(line: 1134, column: 7, scope: !5882)
!6145 = !DILocation(line: 1134, column: 10, scope: !5882)
!6146 = !DILocation(line: 1135, column: 13, scope: !5882)
!6147 = !DILocation(line: 1135, column: 17, scope: !5882)
!6148 = !DILocation(line: 1135, column: 2, scope: !5882)
!6149 = !DILocation(line: 1135, column: 7, scope: !5882)
!6150 = !DILocation(line: 1135, column: 11, scope: !5882)
!6151 = !DILocation(line: 1136, column: 13, scope: !5882)
!6152 = !DILocation(line: 1136, column: 18, scope: !5882)
!6153 = !DILocation(line: 1136, column: 2, scope: !5882)
!6154 = !DILocation(line: 1136, column: 7, scope: !5882)
!6155 = !DILocation(line: 1136, column: 11, scope: !5882)
!6156 = !DILocation(line: 1138, column: 6, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1138, column: 6)
!6158 = !DILocation(line: 1138, column: 10, scope: !6157)
!6159 = !DILocation(line: 1138, column: 15, scope: !6157)
!6160 = !DILocation(line: 1138, column: 6, scope: !5882)
!6161 = !DILocation(line: 1138, column: 43, scope: !6157)
!6162 = !DILocation(line: 1138, column: 47, scope: !6157)
!6163 = !DILocation(line: 1138, column: 26, scope: !6157)
!6164 = !DILocation(line: 1138, column: 31, scope: !6157)
!6165 = !DILocation(line: 1138, column: 41, scope: !6157)
!6166 = !DILocation(line: 1139, column: 6, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1139, column: 6)
!6168 = !DILocation(line: 1139, column: 10, scope: !6167)
!6169 = !DILocation(line: 1139, column: 15, scope: !6167)
!6170 = !DILocation(line: 1139, column: 6, scope: !5882)
!6171 = !DILocation(line: 1139, column: 44, scope: !6167)
!6172 = !DILocation(line: 1139, column: 48, scope: !6167)
!6173 = !DILocation(line: 1139, column: 32, scope: !6167)
!6174 = !DILocation(line: 1139, column: 37, scope: !6167)
!6175 = !DILocation(line: 1139, column: 42, scope: !6167)
!6176 = !DILocation(line: 1140, column: 6, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1140, column: 6)
!6178 = !DILocation(line: 1140, column: 10, scope: !6177)
!6179 = !DILocation(line: 1140, column: 15, scope: !6177)
!6180 = !DILocation(line: 1140, column: 6, scope: !5882)
!6181 = !DILocation(line: 1140, column: 44, scope: !6177)
!6182 = !DILocation(line: 1140, column: 48, scope: !6177)
!6183 = !DILocation(line: 1140, column: 32, scope: !6177)
!6184 = !DILocation(line: 1140, column: 37, scope: !6177)
!6185 = !DILocation(line: 1140, column: 42, scope: !6177)
!6186 = !DILocation(line: 1141, column: 6, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1141, column: 6)
!6188 = !DILocation(line: 1141, column: 10, scope: !6187)
!6189 = !DILocation(line: 1141, column: 15, scope: !6187)
!6190 = !DILocation(line: 1141, column: 6, scope: !5882)
!6191 = !DILocation(line: 1141, column: 45, scope: !6187)
!6192 = !DILocation(line: 1141, column: 49, scope: !6187)
!6193 = !DILocation(line: 1141, column: 32, scope: !6187)
!6194 = !DILocation(line: 1141, column: 37, scope: !6187)
!6195 = !DILocation(line: 1141, column: 43, scope: !6187)
!6196 = !DILocation(line: 1143, column: 7, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1143, column: 6)
!6198 = !DILocation(line: 1143, column: 11, scope: !6197)
!6199 = !DILocation(line: 1143, column: 16, scope: !6197)
!6200 = !DILocation(line: 1143, column: 30, scope: !6197)
!6201 = !DILocation(line: 1143, column: 33, scope: !6197)
!6202 = !DILocation(line: 1143, column: 37, scope: !6197)
!6203 = !DILocation(line: 1143, column: 6, scope: !5882)
!6204 = !DILocation(line: 1144, column: 3, scope: !6197)
!6205 = !DILocation(line: 1144, column: 8, scope: !6197)
!6206 = !DILocation(line: 1144, column: 11, scope: !6197)
!6207 = !DILocation(line: 1146, column: 8, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1146, column: 2)
!6209 = !DILocation(line: 1146, column: 7, scope: !6208)
!6210 = !DILocation(line: 1146, column: 12, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6208, file: !1, line: 1146, column: 2)
!6212 = !DILocation(line: 1146, column: 13, scope: !6211)
!6213 = !DILocation(line: 1146, column: 2, scope: !6208)
!6214 = !DILocation(line: 1147, column: 7, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6211, file: !1, line: 1147, column: 7)
!6216 = !DILocation(line: 1147, column: 11, scope: !6215)
!6217 = !DILocation(line: 1147, column: 16, scope: !6215)
!6218 = !DILocation(line: 1147, column: 19, scope: !6215)
!6219 = !DILocation(line: 1147, column: 23, scope: !6215)
!6220 = !DILocation(line: 1147, column: 27, scope: !6215)
!6221 = !DILocation(line: 1147, column: 40, scope: !6215)
!6222 = !DILocation(line: 1147, column: 38, scope: !6215)
!6223 = !DILocation(line: 1147, column: 34, scope: !6215)
!6224 = !DILocation(line: 1147, column: 43, scope: !6215)
!6225 = !DILocation(line: 1147, column: 7, scope: !6211)
!6226 = !DILocation(line: 1148, column: 10, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6215, file: !1, line: 1147, column: 48)
!6228 = !DILocation(line: 1148, column: 14, scope: !6227)
!6229 = !DILocation(line: 1148, column: 19, scope: !6227)
!6230 = !DILocation(line: 1148, column: 8, scope: !6227)
!6231 = !DILocation(line: 1149, column: 15, scope: !6227)
!6232 = !DILocation(line: 1149, column: 23, scope: !6227)
!6233 = !DILocation(line: 1149, column: 4, scope: !6227)
!6234 = !DILocation(line: 1151, column: 8, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6227, file: !1, line: 1151, column: 8)
!6236 = !DILocation(line: 1151, column: 14, scope: !6235)
!6237 = !DILocation(line: 1151, column: 20, scope: !6235)
!6238 = !DILocation(line: 1151, column: 8, scope: !6227)
!6239 = !DILocation(line: 1153, column: 4, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6235, file: !1, line: 1151, column: 34)
!6241 = !DILocation(line: 1154, column: 13, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6235, file: !1, line: 1154, column: 13)
!6243 = !DILocation(line: 1154, column: 19, scope: !6242)
!6244 = !DILocation(line: 1154, column: 25, scope: !6242)
!6245 = !DILocation(line: 1154, column: 13, scope: !6235)
!6246 = !DILocation(line: 1155, column: 9, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6248, file: !1, line: 1155, column: 9)
!6248 = distinct !DILexicalBlock(scope: !6242, file: !1, line: 1154, column: 41)
!6249 = !DILocation(line: 1155, column: 15, scope: !6247)
!6250 = !DILocation(line: 1155, column: 9, scope: !6248)
!6251 = !DILocation(line: 1156, column: 16, scope: !6247)
!6252 = !DILocation(line: 1156, column: 22, scope: !6247)
!6253 = !DILocation(line: 1156, column: 30, scope: !6247)
!6254 = !DILocation(line: 1156, column: 40, scope: !6247)
!6255 = !DILocation(line: 1156, column: 6, scope: !6247)
!6256 = !DILocation(line: 1157, column: 4, scope: !6248)
!6257 = !DILocation(line: 1158, column: 13, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6242, file: !1, line: 1158, column: 13)
!6259 = !DILocation(line: 1158, column: 19, scope: !6258)
!6260 = !DILocation(line: 1158, column: 25, scope: !6258)
!6261 = !DILocation(line: 1158, column: 13, scope: !6242)
!6262 = !DILocation(line: 1159, column: 16, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6258, file: !1, line: 1158, column: 39)
!6264 = !DILocation(line: 1159, column: 24, scope: !6263)
!6265 = !DILocation(line: 1159, column: 5, scope: !6263)
!6266 = !DILocation(line: 1160, column: 4, scope: !6263)
!6267 = !DILocation(line: 1161, column: 13, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6258, file: !1, line: 1161, column: 13)
!6269 = !DILocation(line: 1161, column: 19, scope: !6268)
!6270 = !DILocation(line: 1161, column: 25, scope: !6268)
!6271 = !DILocation(line: 1161, column: 36, scope: !6268)
!6272 = !DILocation(line: 1161, column: 39, scope: !6268)
!6273 = !DILocation(line: 1161, column: 13, scope: !6258)
!6274 = !DILocalVariable(name: "uv_index", scope: !6275, file: !1, line: 1162, type: !93)
!6275 = distinct !DILexicalBlock(scope: !6268, file: !1, line: 1161, column: 45)
!6276 = !DILocation(line: 1162, column: 9, scope: !6275)
!6277 = !DILocation(line: 1162, column: 52, scope: !6275)
!6278 = !DILocation(line: 1162, column: 56, scope: !6275)
!6279 = !DILocation(line: 1162, column: 77, scope: !6275)
!6280 = !DILocation(line: 1162, column: 83, scope: !6275)
!6281 = !DILocation(line: 1162, column: 18, scope: !6275)
!6282 = !DILocation(line: 1163, column: 9, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6275, file: !1, line: 1163, column: 9)
!6284 = !DILocation(line: 1163, column: 17, scope: !6283)
!6285 = !DILocation(line: 1163, column: 9, scope: !6275)
!6286 = !DILocation(line: 1164, column: 50, scope: !6283)
!6287 = !DILocation(line: 1164, column: 54, scope: !6283)
!6288 = !DILocation(line: 1164, column: 15, scope: !6283)
!6289 = !DILocation(line: 1164, column: 14, scope: !6283)
!6290 = !DILocation(line: 1164, column: 6, scope: !6283)
!6291 = !DILocation(line: 1166, column: 43, scope: !6275)
!6292 = !DILocation(line: 1166, column: 47, scope: !6275)
!6293 = !DILocation(line: 1166, column: 15, scope: !6275)
!6294 = !DILocation(line: 1166, column: 13, scope: !6275)
!6295 = !DILocation(line: 1168, column: 20, scope: !6275)
!6296 = !DILocation(line: 1168, column: 27, scope: !6275)
!6297 = !DILocation(line: 1168, column: 26, scope: !6275)
!6298 = !DILocation(line: 1168, column: 19, scope: !6275)
!6299 = !DILocation(line: 1168, column: 36, scope: !6275)
!6300 = !DILocation(line: 1168, column: 5, scope: !6275)
!6301 = !DILocation(line: 1168, column: 14, scope: !6275)
!6302 = !DILocation(line: 1169, column: 20, scope: !6275)
!6303 = !DILocation(line: 1169, column: 27, scope: !6275)
!6304 = !DILocation(line: 1169, column: 26, scope: !6275)
!6305 = !DILocation(line: 1169, column: 35, scope: !6275)
!6306 = !DILocation(line: 1169, column: 19, scope: !6275)
!6307 = !DILocation(line: 1169, column: 38, scope: !6275)
!6308 = !DILocation(line: 1169, column: 5, scope: !6275)
!6309 = !DILocation(line: 1169, column: 14, scope: !6275)
!6310 = !DILocation(line: 1170, column: 5, scope: !6275)
!6311 = !DILocation(line: 1170, column: 14, scope: !6275)
!6312 = !DILocation(line: 1171, column: 4, scope: !6275)
!6313 = !DILocation(line: 1172, column: 13, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6268, file: !1, line: 1172, column: 13)
!6315 = !DILocation(line: 1172, column: 19, scope: !6314)
!6316 = !DILocation(line: 1172, column: 25, scope: !6314)
!6317 = !DILocation(line: 1172, column: 13, scope: !6268)
!6318 = !DILocation(line: 1174, column: 23, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6314, file: !1, line: 1172, column: 43)
!6320 = !DILocation(line: 1174, column: 21, scope: !6319)
!6321 = !DILocation(line: 1174, column: 32, scope: !6319)
!6322 = !DILocation(line: 1174, column: 5, scope: !6319)
!6323 = !DILocation(line: 1174, column: 15, scope: !6319)
!6324 = !DILocation(line: 1175, column: 23, scope: !6319)
!6325 = !DILocation(line: 1175, column: 21, scope: !6319)
!6326 = !DILocation(line: 1175, column: 32, scope: !6319)
!6327 = !DILocation(line: 1175, column: 5, scope: !6319)
!6328 = !DILocation(line: 1175, column: 15, scope: !6319)
!6329 = !DILocation(line: 1176, column: 17, scope: !6319)
!6330 = !DILocation(line: 1176, column: 5, scope: !6319)
!6331 = !DILocation(line: 1176, column: 15, scope: !6319)
!6332 = !DILocation(line: 1177, column: 4, scope: !6319)
!6333 = !DILocation(line: 1178, column: 13, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6314, file: !1, line: 1178, column: 13)
!6335 = !DILocation(line: 1178, column: 13, scope: !6314)
!6336 = !DILocation(line: 1179, column: 16, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6334, file: !1, line: 1178, column: 19)
!6338 = !DILocation(line: 1179, column: 24, scope: !6337)
!6339 = !DILocation(line: 1179, column: 5, scope: !6337)
!6340 = !DILocation(line: 1180, column: 4, scope: !6337)
!6341 = !DILocation(line: 1182, column: 23, scope: !6227)
!6342 = !DILocation(line: 1182, column: 29, scope: !6227)
!6343 = !DILocation(line: 1182, column: 66, scope: !6227)
!6344 = !DILocation(line: 1182, column: 70, scope: !6227)
!6345 = !DILocation(line: 1182, column: 13, scope: !6227)
!6346 = !DILocation(line: 1182, column: 11, scope: !6227)
!6347 = !DILocation(line: 1186, column: 8, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6227, file: !1, line: 1186, column: 8)
!6349 = !DILocation(line: 1186, column: 14, scope: !6348)
!6350 = !DILocation(line: 1186, column: 20, scope: !6348)
!6351 = !DILocation(line: 1186, column: 8, scope: !6227)
!6352 = !DILocation(line: 1187, column: 12, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6348, file: !1, line: 1186, column: 31)
!6354 = !DILocation(line: 1187, column: 5, scope: !6353)
!6355 = !DILocation(line: 1187, column: 11, scope: !6353)
!6356 = !DILocation(line: 1188, column: 12, scope: !6353)
!6357 = !DILocation(line: 1188, column: 5, scope: !6353)
!6358 = !DILocation(line: 1188, column: 11, scope: !6353)
!6359 = !DILocation(line: 1189, column: 12, scope: !6353)
!6360 = !DILocation(line: 1189, column: 5, scope: !6353)
!6361 = !DILocation(line: 1189, column: 11, scope: !6353)
!6362 = !DILocation(line: 1190, column: 12, scope: !6353)
!6363 = !DILocation(line: 1190, column: 17, scope: !6353)
!6364 = !DILocation(line: 1190, column: 5, scope: !6353)
!6365 = !DILocation(line: 1190, column: 11, scope: !6353)
!6366 = !DILocation(line: 1191, column: 12, scope: !6353)
!6367 = !DILocation(line: 1191, column: 17, scope: !6353)
!6368 = !DILocation(line: 1191, column: 5, scope: !6353)
!6369 = !DILocation(line: 1191, column: 11, scope: !6353)
!6370 = !DILocation(line: 1192, column: 12, scope: !6353)
!6371 = !DILocation(line: 1192, column: 17, scope: !6353)
!6372 = !DILocation(line: 1192, column: 5, scope: !6353)
!6373 = !DILocation(line: 1192, column: 11, scope: !6353)
!6374 = !DILocation(line: 1194, column: 23, scope: !6353)
!6375 = !DILocation(line: 1194, column: 27, scope: !6353)
!6376 = !DILocation(line: 1194, column: 32, scope: !6353)
!6377 = !DILocation(line: 1194, column: 37, scope: !6353)
!6378 = !DILocation(line: 1194, column: 42, scope: !6353)
!6379 = !DILocation(line: 1194, column: 48, scope: !6353)
!6380 = !DILocation(line: 1194, column: 56, scope: !6353)
!6381 = !DILocation(line: 1194, column: 62, scope: !6353)
!6382 = !DILocation(line: 1194, column: 5, scope: !6353)
!6383 = !DILocation(line: 1199, column: 13, scope: !6353)
!6384 = !DILocation(line: 1199, column: 5, scope: !6353)
!6385 = !DILocation(line: 1199, column: 10, scope: !6353)
!6386 = !DILocation(line: 1199, column: 11, scope: !6353)
!6387 = !DILocation(line: 1200, column: 13, scope: !6353)
!6388 = !DILocation(line: 1200, column: 5, scope: !6353)
!6389 = !DILocation(line: 1200, column: 10, scope: !6353)
!6390 = !DILocation(line: 1200, column: 11, scope: !6353)
!6391 = !DILocation(line: 1201, column: 13, scope: !6353)
!6392 = !DILocation(line: 1201, column: 5, scope: !6353)
!6393 = !DILocation(line: 1201, column: 10, scope: !6353)
!6394 = !DILocation(line: 1201, column: 11, scope: !6353)
!6395 = !DILocation(line: 1202, column: 4, scope: !6353)
!6396 = !DILocation(line: 1205, column: 8, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6227, file: !1, line: 1205, column: 8)
!6398 = !DILocation(line: 1205, column: 8, scope: !6227)
!6399 = !DILocation(line: 1206, column: 11, scope: !6397)
!6400 = !DILocation(line: 1206, column: 9, scope: !6397)
!6401 = !DILocation(line: 1206, column: 5, scope: !6397)
!6402 = !DILocation(line: 1208, column: 8, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6227, file: !1, line: 1208, column: 8)
!6404 = !DILocation(line: 1208, column: 14, scope: !6403)
!6405 = !DILocation(line: 1208, column: 20, scope: !6403)
!6406 = !DILocation(line: 1208, column: 8, scope: !6227)
!6407 = !DILocation(line: 1209, column: 37, scope: !6403)
!6408 = !DILocation(line: 1209, column: 43, scope: !6403)
!6409 = !DILocation(line: 1209, column: 52, scope: !6403)
!6410 = !DILocation(line: 1209, column: 57, scope: !6403)
!6411 = !DILocation(line: 1209, column: 63, scope: !6403)
!6412 = !DILocation(line: 1209, column: 68, scope: !6403)
!6413 = !DILocation(line: 1209, column: 74, scope: !6403)
!6414 = !DILocation(line: 1209, column: 84, scope: !6403)
!6415 = !DILocation(line: 1209, column: 90, scope: !6403)
!6416 = !DILocation(line: 1209, column: 17, scope: !6403)
!6417 = !DILocation(line: 1209, column: 5, scope: !6403)
!6418 = !DILocation(line: 1209, column: 10, scope: !6403)
!6419 = !DILocation(line: 1209, column: 15, scope: !6403)
!6420 = !DILocation(line: 1210, column: 8, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6227, file: !1, line: 1210, column: 8)
!6422 = !DILocation(line: 1210, column: 14, scope: !6421)
!6423 = !DILocation(line: 1210, column: 20, scope: !6421)
!6424 = !DILocation(line: 1210, column: 8, scope: !6227)
!6425 = !DILocation(line: 1211, column: 49, scope: !6421)
!6426 = !DILocation(line: 1211, column: 55, scope: !6421)
!6427 = !DILocation(line: 1211, column: 72, scope: !6421)
!6428 = !DILocation(line: 1211, column: 77, scope: !6421)
!6429 = !DILocation(line: 1211, column: 82, scope: !6421)
!6430 = !DILocation(line: 1211, column: 91, scope: !6421)
!6431 = !DILocation(line: 1211, column: 96, scope: !6421)
!6432 = !DILocation(line: 1211, column: 102, scope: !6421)
!6433 = !DILocation(line: 1211, column: 111, scope: !6421)
!6434 = !DILocation(line: 1211, column: 117, scope: !6421)
!6435 = !DILocation(line: 1211, column: 29, scope: !6421)
!6436 = !DILocation(line: 1211, column: 28, scope: !6421)
!6437 = !DILocation(line: 1211, column: 21, scope: !6421)
!6438 = !DILocation(line: 1211, column: 5, scope: !6421)
!6439 = !DILocation(line: 1211, column: 10, scope: !6421)
!6440 = !DILocation(line: 1211, column: 15, scope: !6421)
!6441 = !DILocation(line: 1212, column: 8, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6227, file: !1, line: 1212, column: 8)
!6443 = !DILocation(line: 1212, column: 14, scope: !6442)
!6444 = !DILocation(line: 1212, column: 20, scope: !6442)
!6445 = !DILocation(line: 1212, column: 8, scope: !6227)
!6446 = !DILocation(line: 1213, column: 46, scope: !6442)
!6447 = !DILocation(line: 1213, column: 52, scope: !6442)
!6448 = !DILocation(line: 1213, column: 61, scope: !6442)
!6449 = !DILocation(line: 1213, column: 66, scope: !6442)
!6450 = !DILocation(line: 1213, column: 72, scope: !6442)
!6451 = !DILocation(line: 1213, column: 81, scope: !6442)
!6452 = !DILocation(line: 1213, column: 86, scope: !6442)
!6453 = !DILocation(line: 1213, column: 92, scope: !6442)
!6454 = !DILocation(line: 1213, column: 104, scope: !6442)
!6455 = !DILocation(line: 1213, column: 110, scope: !6442)
!6456 = !DILocation(line: 1213, column: 26, scope: !6442)
!6457 = !DILocation(line: 1213, column: 25, scope: !6442)
!6458 = !DILocation(line: 1213, column: 5, scope: !6442)
!6459 = !DILocation(line: 1213, column: 10, scope: !6442)
!6460 = !DILocation(line: 1213, column: 17, scope: !6442)
!6461 = !DILocation(line: 1214, column: 8, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6227, file: !1, line: 1214, column: 8)
!6463 = !DILocation(line: 1214, column: 14, scope: !6462)
!6464 = !DILocation(line: 1214, column: 20, scope: !6462)
!6465 = !DILocation(line: 1214, column: 8, scope: !6227)
!6466 = !DILocalVariable(name: "add", scope: !6467, file: !1, line: 1215, type: !84)
!6467 = distinct !DILexicalBlock(scope: !6462, file: !1, line: 1214, column: 35)
!6468 = !DILocation(line: 1215, column: 11, scope: !6467)
!6469 = !DILocation(line: 1215, column: 37, scope: !6467)
!6470 = !DILocation(line: 1215, column: 43, scope: !6467)
!6471 = !DILocation(line: 1215, column: 59, scope: !6467)
!6472 = !DILocation(line: 1215, column: 64, scope: !6467)
!6473 = !DILocation(line: 1215, column: 52, scope: !6467)
!6474 = !DILocation(line: 1215, column: 67, scope: !6467)
!6475 = !DILocation(line: 1215, column: 76, scope: !6467)
!6476 = !DILocation(line: 1215, column: 81, scope: !6467)
!6477 = !DILocation(line: 1215, column: 87, scope: !6467)
!6478 = !DILocation(line: 1215, column: 98, scope: !6467)
!6479 = !DILocation(line: 1215, column: 104, scope: !6467)
!6480 = !DILocation(line: 1215, column: 17, scope: !6467)
!6481 = !DILocation(line: 1216, column: 5, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6483, file: !1, line: 1216, column: 5)
!6483 = distinct !DILexicalBlock(scope: !6467, file: !1, line: 1216, column: 5)
!6484 = !DILocation(line: 1216, column: 5, scope: !6483)
!6485 = !DILocation(line: 1216, column: 5, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !1, line: 1216, column: 5)
!6487 = !DILocation(line: 1217, column: 23, scope: !6467)
!6488 = !DILocation(line: 1217, column: 22, scope: !6467)
!6489 = !DILocation(line: 1217, column: 16, scope: !6467)
!6490 = !DILocation(line: 1217, column: 5, scope: !6467)
!6491 = !DILocation(line: 1217, column: 10, scope: !6467)
!6492 = !DILocation(line: 1217, column: 14, scope: !6467)
!6493 = !DILocation(line: 1218, column: 4, scope: !6467)
!6494 = !DILocation(line: 1223, column: 3, scope: !6227)
!6495 = !DILocation(line: 1147, column: 45, scope: !6215)
!6496 = !DILocation(line: 1146, column: 25, scope: !6211)
!6497 = !DILocation(line: 1146, column: 2, scope: !6211)
!6498 = distinct !{!6498, !6213, !6499}
!6499 = !DILocation(line: 1223, column: 3, scope: !6208)
!6500 = !DILocation(line: 1225, column: 14, scope: !5882)
!6501 = !DILocation(line: 1225, column: 18, scope: !5882)
!6502 = !DILocation(line: 1225, column: 2, scope: !5882)
!6503 = !DILocation(line: 1225, column: 7, scope: !5882)
!6504 = !DILocation(line: 1225, column: 12, scope: !5882)
!6505 = !DILocation(line: 1227, column: 9, scope: !5882)
!6506 = !DILocation(line: 1227, column: 2, scope: !5882)
!6507 = !DILocation(line: 1228, column: 1, scope: !5882)
!6508 = distinct !DISubprogram(name: "project_renderdata", scope: !1, file: !1, line: 1275, type: !6509, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{null, !3778, !6511, !895, !84, !895}
!6511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6512, size: 64)
!6512 = !DISubroutineType(types: !6513)
!6513 = !{null, !839, !901, !89}
!6514 = !DILocalVariable(name: "re", arg: 1, scope: !6508, file: !1, line: 1275, type: !3778)
!6515 = !DILocation(line: 1275, column: 33, scope: !6508)
!6516 = !DILocalVariable(name: "projectfunc", arg: 2, scope: !6508, file: !1, line: 1276, type: !6511)
!6517 = !DILocation(line: 1276, column: 32, scope: !6508)
!6518 = !DILocalVariable(name: "do_pano", arg: 3, scope: !6508, file: !1, line: 1277, type: !895)
!6519 = !DILocation(line: 1277, column: 30, scope: !6508)
!6520 = !DILocalVariable(name: "xoffs", arg: 4, scope: !6508, file: !1, line: 1277, type: !84)
!6521 = !DILocation(line: 1277, column: 45, scope: !6508)
!6522 = !DILocalVariable(name: "UNUSED_do_buckets", arg: 5, scope: !6508, file: !1, line: 1277, type: !895)
!6523 = !DILocation(line: 1277, column: 57, scope: !6508)
!6524 = !DILocalVariable(name: "obr", scope: !6508, file: !1, line: 1279, type: !2460)
!6525 = !DILocation(line: 1279, column: 13, scope: !6508)
!6526 = !DILocalVariable(name: "har", scope: !6508, file: !1, line: 1280, type: !2527)
!6527 = !DILocation(line: 1280, column: 11, scope: !6508)
!6528 = !DILocalVariable(name: "zn", scope: !6508, file: !1, line: 1281, type: !84)
!6529 = !DILocation(line: 1281, column: 8, scope: !6508)
!6530 = !DILocalVariable(name: "vec", scope: !6508, file: !1, line: 1281, type: !83)
!6531 = !DILocation(line: 1281, column: 12, scope: !6508)
!6532 = !DILocalVariable(name: "hoco", scope: !6508, file: !1, line: 1281, type: !294)
!6533 = !DILocation(line: 1281, column: 20, scope: !6508)
!6534 = !DILocalVariable(name: "a", scope: !6508, file: !1, line: 1282, type: !93)
!6535 = !DILocation(line: 1282, column: 6, scope: !6508)
!6536 = !DILocation(line: 1284, column: 6, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6508, file: !1, line: 1284, column: 6)
!6538 = !DILocation(line: 1284, column: 6, scope: !6508)
!6539 = !DILocalVariable(name: "panophi", scope: !6540, file: !1, line: 1285, type: !84)
!6540 = distinct !DILexicalBlock(scope: !6537, file: !1, line: 1284, column: 15)
!6541 = !DILocation(line: 1285, column: 9, scope: !6540)
!6542 = !DILocation(line: 1285, column: 18, scope: !6540)
!6543 = !DILocation(line: 1287, column: 21, scope: !6540)
!6544 = !DILocation(line: 1287, column: 16, scope: !6540)
!6545 = !DILocation(line: 1287, column: 3, scope: !6540)
!6546 = !DILocation(line: 1287, column: 7, scope: !6540)
!6547 = !DILocation(line: 1287, column: 14, scope: !6540)
!6548 = !DILocation(line: 1288, column: 21, scope: !6540)
!6549 = !DILocation(line: 1288, column: 16, scope: !6540)
!6550 = !DILocation(line: 1288, column: 3, scope: !6540)
!6551 = !DILocation(line: 1288, column: 7, scope: !6540)
!6552 = !DILocation(line: 1288, column: 14, scope: !6540)
!6553 = !DILocation(line: 1289, column: 2, scope: !6540)
!6554 = !DILocation(line: 1291, column: 11, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6508, file: !1, line: 1291, column: 2)
!6556 = !DILocation(line: 1291, column: 15, scope: !6555)
!6557 = !DILocation(line: 1291, column: 27, scope: !6555)
!6558 = !DILocation(line: 1291, column: 10, scope: !6555)
!6559 = !DILocation(line: 1291, column: 7, scope: !6555)
!6560 = !DILocation(line: 1291, column: 34, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6555, file: !1, line: 1291, column: 2)
!6562 = !DILocation(line: 1291, column: 2, scope: !6555)
!6563 = !DILocation(line: 1293, column: 9, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !1, line: 1293, column: 3)
!6565 = distinct !DILexicalBlock(scope: !6561, file: !1, line: 1291, column: 54)
!6566 = !DILocation(line: 1293, column: 8, scope: !6564)
!6567 = !DILocation(line: 1293, column: 13, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6564, file: !1, line: 1293, column: 3)
!6569 = !DILocation(line: 1293, column: 15, scope: !6568)
!6570 = !DILocation(line: 1293, column: 20, scope: !6568)
!6571 = !DILocation(line: 1293, column: 14, scope: !6568)
!6572 = !DILocation(line: 1293, column: 3, scope: !6564)
!6573 = !DILocation(line: 1294, column: 9, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !1, line: 1294, column: 8)
!6575 = distinct !DILexicalBlock(scope: !6568, file: !1, line: 1293, column: 34)
!6576 = !DILocation(line: 1294, column: 11, scope: !6574)
!6577 = !DILocation(line: 1294, column: 17, scope: !6574)
!6578 = !DILocation(line: 1294, column: 8, scope: !6575)
!6579 = !DILocation(line: 1294, column: 27, scope: !6574)
!6580 = !DILocation(line: 1294, column: 32, scope: !6574)
!6581 = !DILocation(line: 1294, column: 38, scope: !6574)
!6582 = !DILocation(line: 1294, column: 39, scope: !6574)
!6583 = !DILocation(line: 1294, column: 25, scope: !6574)
!6584 = !DILocation(line: 1294, column: 22, scope: !6574)
!6585 = !DILocation(line: 1295, column: 12, scope: !6574)
!6586 = !DILocation(line: 1297, column: 8, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6575, file: !1, line: 1297, column: 8)
!6588 = !DILocation(line: 1297, column: 8, scope: !6575)
!6589 = !DILocation(line: 1298, column: 13, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 1297, column: 17)
!6591 = !DILocation(line: 1298, column: 17, scope: !6590)
!6592 = !DILocation(line: 1298, column: 24, scope: !6590)
!6593 = !DILocation(line: 1298, column: 29, scope: !6590)
!6594 = !DILocation(line: 1298, column: 23, scope: !6590)
!6595 = !DILocation(line: 1298, column: 37, scope: !6590)
!6596 = !DILocation(line: 1298, column: 41, scope: !6590)
!6597 = !DILocation(line: 1298, column: 48, scope: !6590)
!6598 = !DILocation(line: 1298, column: 53, scope: !6590)
!6599 = !DILocation(line: 1298, column: 47, scope: !6590)
!6600 = !DILocation(line: 1298, column: 35, scope: !6590)
!6601 = !DILocation(line: 1298, column: 5, scope: !6590)
!6602 = !DILocation(line: 1298, column: 11, scope: !6590)
!6603 = !DILocation(line: 1299, column: 13, scope: !6590)
!6604 = !DILocation(line: 1299, column: 18, scope: !6590)
!6605 = !DILocation(line: 1299, column: 5, scope: !6590)
!6606 = !DILocation(line: 1299, column: 11, scope: !6590)
!6607 = !DILocation(line: 1300, column: 14, scope: !6590)
!6608 = !DILocation(line: 1300, column: 18, scope: !6590)
!6609 = !DILocation(line: 1300, column: 13, scope: !6590)
!6610 = !DILocation(line: 1300, column: 25, scope: !6590)
!6611 = !DILocation(line: 1300, column: 30, scope: !6590)
!6612 = !DILocation(line: 1300, column: 24, scope: !6590)
!6613 = !DILocation(line: 1300, column: 38, scope: !6590)
!6614 = !DILocation(line: 1300, column: 42, scope: !6590)
!6615 = !DILocation(line: 1300, column: 49, scope: !6590)
!6616 = !DILocation(line: 1300, column: 54, scope: !6590)
!6617 = !DILocation(line: 1300, column: 48, scope: !6590)
!6618 = !DILocation(line: 1300, column: 36, scope: !6590)
!6619 = !DILocation(line: 1300, column: 5, scope: !6590)
!6620 = !DILocation(line: 1300, column: 11, scope: !6590)
!6621 = !DILocation(line: 1301, column: 4, scope: !6590)
!6622 = !DILocation(line: 1303, column: 16, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6587, file: !1, line: 1302, column: 9)
!6624 = !DILocation(line: 1303, column: 21, scope: !6623)
!6625 = !DILocation(line: 1303, column: 26, scope: !6623)
!6626 = !DILocation(line: 1303, column: 5, scope: !6623)
!6627 = !DILocation(line: 1306, column: 4, scope: !6575)
!6628 = !DILocation(line: 1306, column: 16, scope: !6575)
!6629 = !DILocation(line: 1306, column: 21, scope: !6575)
!6630 = !DILocation(line: 1306, column: 25, scope: !6575)
!6631 = !DILocation(line: 1306, column: 33, scope: !6575)
!6632 = !DILocation(line: 1309, column: 4, scope: !6575)
!6633 = !DILocation(line: 1309, column: 11, scope: !6575)
!6634 = !DILocation(line: 1310, column: 4, scope: !6575)
!6635 = !DILocation(line: 1310, column: 11, scope: !6575)
!6636 = !DILocation(line: 1312, column: 22, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6575, file: !1, line: 1312, column: 9)
!6638 = !DILocation(line: 1312, column: 26, scope: !6637)
!6639 = !DILocation(line: 1312, column: 35, scope: !6637)
!6640 = !DILocation(line: 1312, column: 9, scope: !6637)
!6641 = !DILocation(line: 1312, column: 9, scope: !6575)
!6642 = !DILocation(line: 1313, column: 16, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6637, file: !1, line: 1312, column: 43)
!6644 = !DILocation(line: 1313, column: 21, scope: !6643)
!6645 = !DILocation(line: 1313, column: 25, scope: !6643)
!6646 = !DILocation(line: 1313, column: 5, scope: !6643)
!6647 = !DILocation(line: 1313, column: 10, scope: !6643)
!6648 = !DILocation(line: 1313, column: 14, scope: !6643)
!6649 = !DILocation(line: 1314, column: 4, scope: !6643)
!6650 = !DILocation(line: 1315, column: 13, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6637, file: !1, line: 1315, column: 13)
!6652 = !DILocation(line: 1315, column: 20, scope: !6651)
!6653 = !DILocation(line: 1315, column: 13, scope: !6637)
!6654 = !DILocation(line: 1316, column: 16, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6651, file: !1, line: 1315, column: 27)
!6656 = !DILocation(line: 1316, column: 21, scope: !6655)
!6657 = !DILocation(line: 1316, column: 25, scope: !6655)
!6658 = !DILocation(line: 1316, column: 5, scope: !6655)
!6659 = !DILocation(line: 1316, column: 10, scope: !6655)
!6660 = !DILocation(line: 1316, column: 14, scope: !6655)
!6661 = !DILocation(line: 1317, column: 4, scope: !6655)
!6662 = !DILocation(line: 1320, column: 5, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6651, file: !1, line: 1318, column: 9)
!6664 = !DILocation(line: 1320, column: 12, scope: !6663)
!6665 = !DILocation(line: 1321, column: 5, scope: !6663)
!6666 = !DILocation(line: 1321, column: 12, scope: !6663)
!6667 = !DILocation(line: 1323, column: 9, scope: !6663)
!6668 = !DILocation(line: 1323, column: 7, scope: !6663)
!6669 = !DILocation(line: 1324, column: 19, scope: !6663)
!6670 = !DILocation(line: 1324, column: 23, scope: !6663)
!6671 = !DILocation(line: 1324, column: 18, scope: !6663)
!6672 = !DILocation(line: 1324, column: 34, scope: !6663)
!6673 = !DILocation(line: 1324, column: 42, scope: !6663)
!6674 = !DILocation(line: 1324, column: 41, scope: !6663)
!6675 = !DILocation(line: 1324, column: 33, scope: !6663)
!6676 = !DILocation(line: 1324, column: 27, scope: !6663)
!6677 = !DILocation(line: 1324, column: 5, scope: !6663)
!6678 = !DILocation(line: 1324, column: 10, scope: !6663)
!6679 = !DILocation(line: 1324, column: 12, scope: !6663)
!6680 = !DILocation(line: 1325, column: 19, scope: !6663)
!6681 = !DILocation(line: 1325, column: 23, scope: !6663)
!6682 = !DILocation(line: 1325, column: 18, scope: !6663)
!6683 = !DILocation(line: 1325, column: 34, scope: !6663)
!6684 = !DILocation(line: 1325, column: 42, scope: !6663)
!6685 = !DILocation(line: 1325, column: 41, scope: !6663)
!6686 = !DILocation(line: 1325, column: 33, scope: !6663)
!6687 = !DILocation(line: 1325, column: 27, scope: !6663)
!6688 = !DILocation(line: 1325, column: 5, scope: !6663)
!6689 = !DILocation(line: 1325, column: 10, scope: !6663)
!6690 = !DILocation(line: 1325, column: 12, scope: !6663)
!6691 = !DILocation(line: 1328, column: 24, scope: !6663)
!6692 = !DILocation(line: 1328, column: 32, scope: !6663)
!6693 = !DILocation(line: 1328, column: 31, scope: !6663)
!6694 = !DILocation(line: 1328, column: 22, scope: !6663)
!6695 = !DILocation(line: 1328, column: 14, scope: !6663)
!6696 = !DILocation(line: 1328, column: 5, scope: !6663)
!6697 = !DILocation(line: 1328, column: 10, scope: !6663)
!6698 = !DILocation(line: 1328, column: 12, scope: !6663)
!6699 = !DILocation(line: 1330, column: 33, scope: !6663)
!6700 = !DILocation(line: 1330, column: 41, scope: !6663)
!6701 = !DILocation(line: 1330, column: 40, scope: !6663)
!6702 = !DILocation(line: 1330, column: 31, scope: !6663)
!6703 = !DILocation(line: 1330, column: 21, scope: !6663)
!6704 = !DILocation(line: 1330, column: 5, scope: !6663)
!6705 = !DILocation(line: 1330, column: 10, scope: !6663)
!6706 = !DILocation(line: 1330, column: 19, scope: !6663)
!6707 = !DILocation(line: 1332, column: 14, scope: !6663)
!6708 = !DILocation(line: 1332, column: 19, scope: !6663)
!6709 = !DILocation(line: 1332, column: 5, scope: !6663)
!6710 = !DILocation(line: 1332, column: 11, scope: !6663)
!6711 = !DILocation(line: 1333, column: 5, scope: !6663)
!6712 = !DILocation(line: 1333, column: 17, scope: !6663)
!6713 = !DILocation(line: 1333, column: 22, scope: !6663)
!6714 = !DILocation(line: 1333, column: 26, scope: !6663)
!6715 = !DILocation(line: 1333, column: 34, scope: !6663)
!6716 = !DILocation(line: 1334, column: 14, scope: !6663)
!6717 = !DILocation(line: 1334, column: 19, scope: !6663)
!6718 = !DILocation(line: 1334, column: 5, scope: !6663)
!6719 = !DILocation(line: 1334, column: 11, scope: !6663)
!6720 = !DILocation(line: 1335, column: 9, scope: !6663)
!6721 = !DILocation(line: 1335, column: 7, scope: !6663)
!6722 = !DILocation(line: 1336, column: 21, scope: !6663)
!6723 = !DILocation(line: 1336, column: 26, scope: !6663)
!6724 = !DILocation(line: 1336, column: 35, scope: !6663)
!6725 = !DILocation(line: 1336, column: 39, scope: !6663)
!6726 = !DILocation(line: 1336, column: 34, scope: !6663)
!6727 = !DILocation(line: 1336, column: 50, scope: !6663)
!6728 = !DILocation(line: 1336, column: 58, scope: !6663)
!6729 = !DILocation(line: 1336, column: 57, scope: !6663)
!6730 = !DILocation(line: 1336, column: 49, scope: !6663)
!6731 = !DILocation(line: 1336, column: 43, scope: !6663)
!6732 = !DILocation(line: 1336, column: 28, scope: !6663)
!6733 = !DILocation(line: 1336, column: 15, scope: !6663)
!6734 = !DILocation(line: 1336, column: 5, scope: !6663)
!6735 = !DILocation(line: 1336, column: 10, scope: !6663)
!6736 = !DILocation(line: 1336, column: 13, scope: !6663)
!6737 = !DILocation(line: 1339, column: 9, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6663, file: !1, line: 1339, column: 9)
!6739 = !DILocation(line: 1339, column: 14, scope: !6738)
!6740 = !DILocation(line: 1339, column: 19, scope: !6738)
!6741 = !DILocation(line: 1339, column: 9, scope: !6663)
!6742 = !DILocation(line: 1340, column: 10, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !1, line: 1340, column: 10)
!6744 = distinct !DILexicalBlock(scope: !6738, file: !1, line: 1339, column: 33)
!6745 = !DILocation(line: 1340, column: 15, scope: !6743)
!6746 = !DILocation(line: 1340, column: 18, scope: !6743)
!6747 = !DILocation(line: 1340, column: 10, scope: !6744)
!6748 = !DILocation(line: 1340, column: 25, scope: !6743)
!6749 = !DILocation(line: 1340, column: 30, scope: !6743)
!6750 = !DILocation(line: 1340, column: 33, scope: !6743)
!6751 = !DILocation(line: 1341, column: 5, scope: !6744)
!6752 = !DILocation(line: 1343, column: 17, scope: !6663)
!6753 = !DILocation(line: 1343, column: 22, scope: !6663)
!6754 = !DILocation(line: 1343, column: 26, scope: !6663)
!6755 = !DILocation(line: 1343, column: 31, scope: !6663)
!6756 = !DILocation(line: 1343, column: 25, scope: !6663)
!6757 = !DILocation(line: 1343, column: 5, scope: !6663)
!6758 = !DILocation(line: 1343, column: 10, scope: !6663)
!6759 = !DILocation(line: 1343, column: 15, scope: !6663)
!6760 = !DILocation(line: 1345, column: 16, scope: !6663)
!6761 = !DILocation(line: 1345, column: 21, scope: !6663)
!6762 = !DILocation(line: 1345, column: 26, scope: !6663)
!6763 = !DILocation(line: 1345, column: 31, scope: !6663)
!6764 = !DILocation(line: 1345, column: 35, scope: !6663)
!6765 = !DILocation(line: 1345, column: 39, scope: !6663)
!6766 = !DILocation(line: 1345, column: 34, scope: !6663)
!6767 = !DILocation(line: 1345, column: 24, scope: !6663)
!6768 = !DILocation(line: 1345, column: 5, scope: !6663)
!6769 = !DILocation(line: 1345, column: 10, scope: !6663)
!6770 = !DILocation(line: 1345, column: 14, scope: !6663)
!6771 = !DILocation(line: 1346, column: 16, scope: !6663)
!6772 = !DILocation(line: 1346, column: 21, scope: !6663)
!6773 = !DILocation(line: 1346, column: 26, scope: !6663)
!6774 = !DILocation(line: 1346, column: 31, scope: !6663)
!6775 = !DILocation(line: 1346, column: 35, scope: !6663)
!6776 = !DILocation(line: 1346, column: 39, scope: !6663)
!6777 = !DILocation(line: 1346, column: 34, scope: !6663)
!6778 = !DILocation(line: 1346, column: 24, scope: !6663)
!6779 = !DILocation(line: 1346, column: 5, scope: !6663)
!6780 = !DILocation(line: 1346, column: 10, scope: !6663)
!6781 = !DILocation(line: 1346, column: 14, scope: !6663)
!6782 = !DILocation(line: 1350, column: 15, scope: !6663)
!6783 = !DILocation(line: 1350, column: 20, scope: !6663)
!6784 = !DILocation(line: 1350, column: 5, scope: !6663)
!6785 = !DILocation(line: 1350, column: 12, scope: !6663)
!6786 = !DILocation(line: 1351, column: 5, scope: !6663)
!6787 = !DILocation(line: 1351, column: 17, scope: !6663)
!6788 = !DILocation(line: 1351, column: 22, scope: !6663)
!6789 = !DILocation(line: 1351, column: 26, scope: !6663)
!6790 = !DILocation(line: 1351, column: 34, scope: !6663)
!6791 = !DILocation(line: 1352, column: 10, scope: !6663)
!6792 = !DILocation(line: 1352, column: 8, scope: !6663)
!6793 = !DILocation(line: 1353, column: 23, scope: !6663)
!6794 = !DILocation(line: 1353, column: 28, scope: !6663)
!6795 = !DILocation(line: 1353, column: 16, scope: !6663)
!6796 = !DILocation(line: 1353, column: 45, scope: !6663)
!6797 = !DILocation(line: 1353, column: 55, scope: !6663)
!6798 = !DILocation(line: 1353, column: 53, scope: !6663)
!6799 = !DILocation(line: 1353, column: 42, scope: !6663)
!6800 = !DILocation(line: 1353, column: 31, scope: !6663)
!6801 = !DILocation(line: 1353, column: 10, scope: !6663)
!6802 = !DILocation(line: 1353, column: 8, scope: !6663)
!6803 = !DILocation(line: 1354, column: 15, scope: !6663)
!6804 = !DILocation(line: 1354, column: 5, scope: !6663)
!6805 = !DILocation(line: 1354, column: 10, scope: !6663)
!6806 = !DILocation(line: 1354, column: 13, scope: !6663)
!6807 = !DILocation(line: 1358, column: 3, scope: !6575)
!6808 = !DILocation(line: 1293, column: 30, scope: !6568)
!6809 = !DILocation(line: 1293, column: 3, scope: !6568)
!6810 = distinct !{!6810, !6572, !6811}
!6811 = !DILocation(line: 1358, column: 3, scope: !6564)
!6812 = !DILocation(line: 1359, column: 2, scope: !6565)
!6813 = !DILocation(line: 1291, column: 43, scope: !6561)
!6814 = !DILocation(line: 1291, column: 48, scope: !6561)
!6815 = !DILocation(line: 1291, column: 42, scope: !6561)
!6816 = !DILocation(line: 1291, column: 2, scope: !6561)
!6817 = distinct !{!6817, !6562, !6818}
!6818 = !DILocation(line: 1359, column: 2, scope: !6555)
!6819 = !DILocation(line: 1360, column: 1, scope: !6508)
!6820 = distinct !DISubprogram(name: "panotestclip", scope: !1, file: !1, line: 1233, type: !6821, scopeLine: 1234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{!93, !3778, !895, !89}
!6823 = !DILocalVariable(name: "re", arg: 1, scope: !6820, file: !1, line: 1233, type: !3778)
!6824 = !DILocation(line: 1233, column: 33, scope: !6820)
!6825 = !DILocalVariable(name: "do_pano", arg: 2, scope: !6820, file: !1, line: 1233, type: !895)
!6826 = !DILocation(line: 1233, column: 42, scope: !6820)
!6827 = !DILocalVariable(name: "v", arg: 3, scope: !6820, file: !1, line: 1233, type: !89)
!6828 = !DILocation(line: 1233, column: 57, scope: !6820)
!6829 = !DILocation(line: 1239, column: 6, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6820, file: !1, line: 1239, column: 6)
!6831 = !DILocation(line: 1239, column: 14, scope: !6830)
!6832 = !DILocation(line: 1239, column: 6, scope: !6820)
!6833 = !DILocation(line: 1240, column: 19, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6830, file: !1, line: 1239, column: 24)
!6835 = !DILocation(line: 1240, column: 10, scope: !6834)
!6836 = !DILocation(line: 1240, column: 3, scope: !6834)
!6837 = !DILocalVariable(name: "abs4", scope: !6838, file: !1, line: 1244, type: !84)
!6838 = distinct !DILexicalBlock(scope: !6830, file: !1, line: 1242, column: 7)
!6839 = !DILocation(line: 1244, column: 9, scope: !6838)
!6840 = !DILocalVariable(name: "c", scope: !6838, file: !1, line: 1245, type: !143)
!6841 = !DILocation(line: 1245, column: 9, scope: !6838)
!6842 = !DILocalVariable(name: "xparts", scope: !6838, file: !1, line: 1247, type: !93)
!6843 = !DILocation(line: 1247, column: 7, scope: !6838)
!6844 = !DILocation(line: 1247, column: 17, scope: !6838)
!6845 = !DILocation(line: 1247, column: 21, scope: !6838)
!6846 = !DILocation(line: 1247, column: 29, scope: !6838)
!6847 = !DILocation(line: 1247, column: 33, scope: !6838)
!6848 = !DILocation(line: 1247, column: 27, scope: !6838)
!6849 = !DILocation(line: 1247, column: 39, scope: !6838)
!6850 = !DILocation(line: 1247, column: 46, scope: !6838)
!6851 = !DILocation(line: 1247, column: 50, scope: !6838)
!6852 = !DILocation(line: 1247, column: 44, scope: !6838)
!6853 = !DILocation(line: 1249, column: 15, scope: !6838)
!6854 = !DILocation(line: 1249, column: 9, scope: !6838)
!6855 = !DILocation(line: 1249, column: 7, scope: !6838)
!6856 = !DILocation(line: 1251, column: 7, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6838, file: !1, line: 1251, column: 7)
!6858 = !DILocation(line: 1251, column: 14, scope: !6857)
!6859 = !DILocation(line: 1251, column: 13, scope: !6857)
!6860 = !DILocation(line: 1251, column: 11, scope: !6857)
!6861 = !DILocation(line: 1251, column: 7, scope: !6838)
!6862 = !DILocation(line: 1251, column: 21, scope: !6857)
!6863 = !DILocation(line: 1251, column: 20, scope: !6857)
!6864 = !DILocation(line: 1252, column: 12, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6857, file: !1, line: 1252, column: 12)
!6866 = !DILocation(line: 1252, column: 18, scope: !6865)
!6867 = !DILocation(line: 1252, column: 16, scope: !6865)
!6868 = !DILocation(line: 1252, column: 12, scope: !6857)
!6869 = !DILocation(line: 1252, column: 25, scope: !6865)
!6870 = !DILocation(line: 1252, column: 24, scope: !6865)
!6871 = !DILocation(line: 1254, column: 8, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6838, file: !1, line: 1254, column: 8)
!6873 = !DILocation(line: 1254, column: 13, scope: !6872)
!6874 = !DILocation(line: 1254, column: 12, scope: !6872)
!6875 = !DILocation(line: 1254, column: 8, scope: !6838)
!6876 = !DILocation(line: 1254, column: 20, scope: !6872)
!6877 = !DILocation(line: 1254, column: 19, scope: !6872)
!6878 = !DILocation(line: 1255, column: 13, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6872, file: !1, line: 1255, column: 13)
!6880 = !DILocation(line: 1255, column: 20, scope: !6879)
!6881 = !DILocation(line: 1255, column: 19, scope: !6879)
!6882 = !DILocation(line: 1255, column: 17, scope: !6879)
!6883 = !DILocation(line: 1255, column: 13, scope: !6872)
!6884 = !DILocation(line: 1255, column: 27, scope: !6879)
!6885 = !DILocation(line: 1255, column: 26, scope: !6879)
!6886 = !DILocation(line: 1257, column: 10, scope: !6838)
!6887 = !DILocation(line: 1257, column: 7, scope: !6838)
!6888 = !DILocation(line: 1258, column: 8, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6838, file: !1, line: 1258, column: 8)
!6890 = !DILocation(line: 1258, column: 13, scope: !6889)
!6891 = !DILocation(line: 1258, column: 12, scope: !6889)
!6892 = !DILocation(line: 1258, column: 8, scope: !6838)
!6893 = !DILocation(line: 1258, column: 20, scope: !6889)
!6894 = !DILocation(line: 1258, column: 19, scope: !6889)
!6895 = !DILocation(line: 1259, column: 13, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6889, file: !1, line: 1259, column: 13)
!6897 = !DILocation(line: 1259, column: 20, scope: !6896)
!6898 = !DILocation(line: 1259, column: 19, scope: !6896)
!6899 = !DILocation(line: 1259, column: 17, scope: !6896)
!6900 = !DILocation(line: 1259, column: 13, scope: !6889)
!6901 = !DILocation(line: 1259, column: 27, scope: !6896)
!6902 = !DILocation(line: 1259, column: 26, scope: !6896)
!6903 = !DILocation(line: 1261, column: 10, scope: !6838)
!6904 = !DILocation(line: 1261, column: 3, scope: !6838)
!6905 = !DILocation(line: 1263, column: 1, scope: !6820)
!6906 = distinct !DISubprogram(name: "RE_addRenderInstance", scope: !1, file: !1, line: 1364, type: !6907, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!6907 = !DISubroutineType(types: !6908)
!6908 = !{!2454, !3778, !2460, !2463, !2463, !93, !93, !901, !93}
!6909 = !DILocalVariable(name: "re", arg: 1, scope: !6906, file: !1, line: 1364, type: !3778)
!6910 = !DILocation(line: 1364, column: 49, scope: !6906)
!6911 = !DILocalVariable(name: "obr", arg: 2, scope: !6906, file: !1, line: 1364, type: !2460)
!6912 = !DILocation(line: 1364, column: 64, scope: !6906)
!6913 = !DILocalVariable(name: "ob", arg: 3, scope: !6906, file: !1, line: 1364, type: !2463)
!6914 = !DILocation(line: 1364, column: 77, scope: !6906)
!6915 = !DILocalVariable(name: "par", arg: 4, scope: !6906, file: !1, line: 1364, type: !2463)
!6916 = !DILocation(line: 1364, column: 89, scope: !6906)
!6917 = !DILocalVariable(name: "index", arg: 5, scope: !6906, file: !1, line: 1364, type: !93)
!6918 = !DILocation(line: 1364, column: 98, scope: !6906)
!6919 = !DILocalVariable(name: "psysindex", arg: 6, scope: !6906, file: !1, line: 1364, type: !93)
!6920 = !DILocation(line: 1364, column: 109, scope: !6906)
!6921 = !DILocalVariable(name: "mat", arg: 7, scope: !6906, file: !1, line: 1364, type: !901)
!6922 = !DILocation(line: 1364, column: 126, scope: !6906)
!6923 = !DILocalVariable(name: "lay", arg: 8, scope: !6906, file: !1, line: 1364, type: !93)
!6924 = !DILocation(line: 1364, column: 141, scope: !6906)
!6925 = !DILocalVariable(name: "obi", scope: !6906, file: !1, line: 1366, type: !2719)
!6926 = !DILocation(line: 1366, column: 21, scope: !6906)
!6927 = !DILocalVariable(name: "mat3", scope: !6906, file: !1, line: 1367, type: !2002)
!6928 = !DILocation(line: 1367, column: 8, scope: !6906)
!6929 = !DILocation(line: 1369, column: 7, scope: !6906)
!6930 = !DILocation(line: 1369, column: 5, scope: !6906)
!6931 = !DILocation(line: 1370, column: 12, scope: !6906)
!6932 = !DILocation(line: 1370, column: 2, scope: !6906)
!6933 = !DILocation(line: 1370, column: 7, scope: !6906)
!6934 = !DILocation(line: 1370, column: 10, scope: !6906)
!6935 = !DILocation(line: 1371, column: 11, scope: !6906)
!6936 = !DILocation(line: 1371, column: 2, scope: !6906)
!6937 = !DILocation(line: 1371, column: 7, scope: !6906)
!6938 = !DILocation(line: 1371, column: 9, scope: !6906)
!6939 = !DILocation(line: 1372, column: 12, scope: !6906)
!6940 = !DILocation(line: 1372, column: 2, scope: !6906)
!6941 = !DILocation(line: 1372, column: 7, scope: !6906)
!6942 = !DILocation(line: 1372, column: 10, scope: !6906)
!6943 = !DILocation(line: 1373, column: 14, scope: !6906)
!6944 = !DILocation(line: 1373, column: 2, scope: !6906)
!6945 = !DILocation(line: 1373, column: 7, scope: !6906)
!6946 = !DILocation(line: 1373, column: 12, scope: !6906)
!6947 = !DILocation(line: 1374, column: 18, scope: !6906)
!6948 = !DILocation(line: 1374, column: 2, scope: !6906)
!6949 = !DILocation(line: 1374, column: 7, scope: !6906)
!6950 = !DILocation(line: 1374, column: 16, scope: !6906)
!6951 = !DILocation(line: 1375, column: 12, scope: !6906)
!6952 = !DILocation(line: 1375, column: 2, scope: !6906)
!6953 = !DILocation(line: 1375, column: 7, scope: !6906)
!6954 = !DILocation(line: 1375, column: 10, scope: !6906)
!6955 = !DILocation(line: 1377, column: 6, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6906, file: !1, line: 1377, column: 6)
!6957 = !DILocation(line: 1377, column: 6, scope: !6906)
!6958 = !DILocation(line: 1378, column: 14, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6956, file: !1, line: 1377, column: 11)
!6960 = !DILocation(line: 1378, column: 19, scope: !6959)
!6961 = !DILocation(line: 1378, column: 24, scope: !6959)
!6962 = !DILocation(line: 1378, column: 3, scope: !6959)
!6963 = !DILocation(line: 1379, column: 14, scope: !6959)
!6964 = !DILocation(line: 1379, column: 20, scope: !6959)
!6965 = !DILocation(line: 1379, column: 3, scope: !6959)
!6966 = !DILocation(line: 1380, column: 16, scope: !6959)
!6967 = !DILocation(line: 1380, column: 21, scope: !6959)
!6968 = !DILocation(line: 1380, column: 27, scope: !6959)
!6969 = !DILocation(line: 1380, column: 3, scope: !6959)
!6970 = !DILocation(line: 1381, column: 16, scope: !6959)
!6971 = !DILocation(line: 1381, column: 21, scope: !6959)
!6972 = !DILocation(line: 1381, column: 3, scope: !6959)
!6973 = !DILocation(line: 1382, column: 3, scope: !6959)
!6974 = !DILocation(line: 1382, column: 8, scope: !6959)
!6975 = !DILocation(line: 1382, column: 13, scope: !6959)
!6976 = !DILocation(line: 1383, column: 2, scope: !6959)
!6977 = !DILocation(line: 1385, column: 15, scope: !6906)
!6978 = !DILocation(line: 1385, column: 19, scope: !6906)
!6979 = !DILocation(line: 1385, column: 34, scope: !6906)
!6980 = !DILocation(line: 1385, column: 2, scope: !6906)
!6981 = !DILocation(line: 1387, column: 9, scope: !6906)
!6982 = !DILocation(line: 1387, column: 2, scope: !6906)
!6983 = distinct !DISubprogram(name: "RE_makeRenderInstances", scope: !1, file: !1, line: 1390, type: !4967, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!6984 = !DILocalVariable(name: "re", arg: 1, scope: !6983, file: !1, line: 1390, type: !3778)
!6985 = !DILocation(line: 1390, column: 37, scope: !6983)
!6986 = !DILocalVariable(name: "obi", scope: !6983, file: !1, line: 1392, type: !2719)
!6987 = !DILocation(line: 1392, column: 21, scope: !6983)
!6988 = !DILocalVariable(name: "oldobi", scope: !6983, file: !1, line: 1392, type: !2719)
!6989 = !DILocation(line: 1392, column: 27, scope: !6983)
!6990 = !DILocalVariable(name: "newlist", scope: !6983, file: !1, line: 1393, type: !169)
!6991 = !DILocation(line: 1393, column: 11, scope: !6983)
!6992 = !DILocalVariable(name: "tot", scope: !6983, file: !1, line: 1394, type: !93)
!6993 = !DILocation(line: 1394, column: 6, scope: !6983)
!6994 = !DILocation(line: 1397, column: 22, scope: !6983)
!6995 = !DILocation(line: 1397, column: 26, scope: !6983)
!6996 = !DILocation(line: 1397, column: 7, scope: !6983)
!6997 = !DILocation(line: 1397, column: 5, scope: !6983)
!6998 = !DILocation(line: 1398, column: 22, scope: !6983)
!6999 = !DILocation(line: 1398, column: 60, scope: !6983)
!7000 = !DILocation(line: 1398, column: 59, scope: !6983)
!7001 = !DILocation(line: 1398, column: 2, scope: !6983)
!7002 = !DILocation(line: 1398, column: 6, scope: !6983)
!7003 = !DILocation(line: 1398, column: 20, scope: !6983)
!7004 = !DILocation(line: 1399, column: 19, scope: !6983)
!7005 = !DILocation(line: 1399, column: 2, scope: !6983)
!7006 = !DILocation(line: 1399, column: 6, scope: !6983)
!7007 = !DILocation(line: 1399, column: 17, scope: !6983)
!7008 = !DILocation(line: 1400, column: 25, scope: !6983)
!7009 = !DILocation(line: 1400, column: 29, scope: !6983)
!7010 = !DILocation(line: 1400, column: 10, scope: !6983)
!7011 = !DILocation(line: 1400, column: 15, scope: !6983)
!7012 = !DILocation(line: 1402, column: 7, scope: !6983)
!7013 = !DILocation(line: 1402, column: 11, scope: !6983)
!7014 = !DILocation(line: 1402, column: 5, scope: !6983)
!7015 = !DILocation(line: 1403, column: 14, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6983, file: !1, line: 1403, column: 2)
!7017 = !DILocation(line: 1403, column: 18, scope: !7016)
!7018 = !DILocation(line: 1403, column: 32, scope: !7016)
!7019 = !DILocation(line: 1403, column: 13, scope: !7016)
!7020 = !DILocation(line: 1403, column: 7, scope: !7016)
!7021 = !DILocation(line: 1403, column: 39, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7016, file: !1, line: 1403, column: 2)
!7023 = !DILocation(line: 1403, column: 2, scope: !7016)
!7024 = !DILocation(line: 1404, column: 4, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7022, file: !1, line: 1403, column: 68)
!7026 = !DILocation(line: 1404, column: 10, scope: !7025)
!7027 = !DILocation(line: 1404, column: 9, scope: !7025)
!7028 = !DILocation(line: 1406, column: 7, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7025, file: !1, line: 1406, column: 7)
!7030 = !DILocation(line: 1406, column: 12, scope: !7029)
!7031 = !DILocation(line: 1406, column: 7, scope: !7025)
!7032 = !DILocation(line: 1407, column: 15, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7029, file: !1, line: 1406, column: 17)
!7034 = !DILocation(line: 1407, column: 20, scope: !7033)
!7035 = !DILocation(line: 1407, column: 24, scope: !7033)
!7036 = !DILocation(line: 1407, column: 4, scope: !7033)
!7037 = !DILocation(line: 1407, column: 9, scope: !7033)
!7038 = !DILocation(line: 1407, column: 13, scope: !7033)
!7039 = !DILocation(line: 1408, column: 26, scope: !7033)
!7040 = !DILocation(line: 1408, column: 4, scope: !7033)
!7041 = !DILocation(line: 1409, column: 7, scope: !7033)
!7042 = !DILocation(line: 1410, column: 3, scope: !7033)
!7043 = !DILocation(line: 1412, column: 4, scope: !7029)
!7044 = !DILocation(line: 1412, column: 8, scope: !7029)
!7045 = !DILocation(line: 1412, column: 19, scope: !7029)
!7046 = !DILocation(line: 1413, column: 2, scope: !7025)
!7047 = !DILocation(line: 1403, column: 54, scope: !7022)
!7048 = !DILocation(line: 1403, column: 62, scope: !7022)
!7049 = !DILocation(line: 1403, column: 53, scope: !7022)
!7050 = !DILocation(line: 1403, column: 2, scope: !7022)
!7051 = distinct !{!7051, !7023, !7052}
!7052 = !DILocation(line: 1413, column: 2, scope: !7016)
!7053 = !DILocation(line: 1415, column: 17, scope: !6983)
!7054 = !DILocation(line: 1415, column: 21, scope: !6983)
!7055 = !DILocation(line: 1415, column: 2, scope: !6983)
!7056 = !DILocation(line: 1416, column: 2, scope: !6983)
!7057 = !DILocation(line: 1416, column: 6, scope: !6983)
!7058 = !DILocation(line: 1416, column: 21, scope: !6983)
!7059 = !DILocation(line: 1417, column: 1, scope: !6983)
!7060 = distinct !DISubprogram(name: "RE_instance_rotate_ray_start", scope: !1, file: !1, line: 1420, type: !7061, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7061 = !DISubroutineType(types: !7062)
!7062 = !{null, !2719, !7063}
!7063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7064, size: 64)
!7064 = !DIDerivedType(tag: DW_TAG_typedef, name: "Isect", file: !2359, line: 104, baseType: !2358)
!7065 = !DILocalVariable(name: "obi", arg: 1, scope: !7060, file: !1, line: 1420, type: !2719)
!7066 = !DILocation(line: 1420, column: 54, scope: !7060)
!7067 = !DILocalVariable(name: "is", arg: 2, scope: !7060, file: !1, line: 1420, type: !7063)
!7068 = !DILocation(line: 1420, column: 66, scope: !7060)
!7069 = !DILocation(line: 1422, column: 6, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7060, file: !1, line: 1422, column: 6)
!7071 = !DILocation(line: 1422, column: 10, scope: !7070)
!7072 = !DILocation(line: 1422, column: 14, scope: !7070)
!7073 = !DILocation(line: 1422, column: 19, scope: !7070)
!7074 = !DILocation(line: 1422, column: 24, scope: !7070)
!7075 = !DILocation(line: 1422, column: 6, scope: !7060)
!7076 = !DILocation(line: 1423, column: 14, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7070, file: !1, line: 1422, column: 46)
!7078 = !DILocation(line: 1423, column: 18, scope: !7077)
!7079 = !DILocation(line: 1423, column: 29, scope: !7077)
!7080 = !DILocation(line: 1423, column: 33, scope: !7077)
!7081 = !DILocation(line: 1423, column: 3, scope: !7077)
!7082 = !DILocation(line: 1424, column: 13, scope: !7077)
!7083 = !DILocation(line: 1424, column: 18, scope: !7077)
!7084 = !DILocation(line: 1424, column: 24, scope: !7077)
!7085 = !DILocation(line: 1424, column: 28, scope: !7077)
!7086 = !DILocation(line: 1424, column: 3, scope: !7077)
!7087 = !DILocation(line: 1425, column: 2, scope: !7077)
!7088 = !DILocation(line: 1426, column: 1, scope: !7060)
!7089 = distinct !DISubprogram(name: "RE_instance_rotate_ray_dir", scope: !1, file: !1, line: 1428, type: !7061, scopeLine: 1429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7090 = !DILocalVariable(name: "obi", arg: 1, scope: !7089, file: !1, line: 1428, type: !2719)
!7091 = !DILocation(line: 1428, column: 52, scope: !7089)
!7092 = !DILocalVariable(name: "is", arg: 2, scope: !7089, file: !1, line: 1428, type: !7063)
!7093 = !DILocation(line: 1428, column: 64, scope: !7089)
!7094 = !DILocation(line: 1430, column: 6, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7089, file: !1, line: 1430, column: 6)
!7096 = !DILocation(line: 1430, column: 10, scope: !7095)
!7097 = !DILocation(line: 1430, column: 14, scope: !7095)
!7098 = !DILocation(line: 1430, column: 19, scope: !7095)
!7099 = !DILocation(line: 1430, column: 24, scope: !7095)
!7100 = !DILocation(line: 1430, column: 6, scope: !7089)
!7101 = !DILocalVariable(name: "end", scope: !7102, file: !1, line: 1431, type: !83)
!7102 = distinct !DILexicalBlock(scope: !7095, file: !1, line: 1430, column: 46)
!7103 = !DILocation(line: 1431, column: 9, scope: !7102)
!7104 = !DILocation(line: 1433, column: 14, scope: !7102)
!7105 = !DILocation(line: 1433, column: 18, scope: !7102)
!7106 = !DILocation(line: 1433, column: 27, scope: !7102)
!7107 = !DILocation(line: 1433, column: 31, scope: !7102)
!7108 = !DILocation(line: 1433, column: 3, scope: !7102)
!7109 = !DILocation(line: 1434, column: 15, scope: !7102)
!7110 = !DILocation(line: 1434, column: 20, scope: !7102)
!7111 = !DILocation(line: 1434, column: 24, scope: !7102)
!7112 = !DILocation(line: 1434, column: 35, scope: !7102)
!7113 = !DILocation(line: 1434, column: 39, scope: !7102)
!7114 = !DILocation(line: 1434, column: 3, scope: !7102)
!7115 = !DILocation(line: 1436, column: 13, scope: !7102)
!7116 = !DILocation(line: 1436, column: 18, scope: !7102)
!7117 = !DILocation(line: 1436, column: 24, scope: !7102)
!7118 = !DILocation(line: 1436, column: 3, scope: !7102)
!7119 = !DILocation(line: 1437, column: 15, scope: !7102)
!7120 = !DILocation(line: 1437, column: 19, scope: !7102)
!7121 = !DILocation(line: 1437, column: 24, scope: !7102)
!7122 = !DILocation(line: 1437, column: 29, scope: !7102)
!7123 = !DILocation(line: 1437, column: 33, scope: !7102)
!7124 = !DILocation(line: 1437, column: 3, scope: !7102)
!7125 = !DILocation(line: 1438, column: 2, scope: !7102)
!7126 = !DILocation(line: 1439, column: 1, scope: !7089)
!7127 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !3758, file: !3758, line: 309, type: !5858, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7128 = !DILocalVariable(name: "r", arg: 1, scope: !7127, file: !3758, line: 309, type: !89)
!7129 = !DILocation(line: 309, column: 32, scope: !7127)
!7130 = !DILocalVariable(name: "a", arg: 2, scope: !7127, file: !3758, line: 309, type: !839)
!7131 = !DILocation(line: 309, column: 50, scope: !7127)
!7132 = !DILocalVariable(name: "b", arg: 3, scope: !7127, file: !3758, line: 309, type: !839)
!7133 = !DILocation(line: 309, column: 68, scope: !7127)
!7134 = !DILocation(line: 311, column: 9, scope: !7127)
!7135 = !DILocation(line: 311, column: 16, scope: !7127)
!7136 = !DILocation(line: 311, column: 14, scope: !7127)
!7137 = !DILocation(line: 311, column: 2, scope: !7127)
!7138 = !DILocation(line: 311, column: 7, scope: !7127)
!7139 = !DILocation(line: 312, column: 9, scope: !7127)
!7140 = !DILocation(line: 312, column: 16, scope: !7127)
!7141 = !DILocation(line: 312, column: 14, scope: !7127)
!7142 = !DILocation(line: 312, column: 2, scope: !7127)
!7143 = !DILocation(line: 312, column: 7, scope: !7127)
!7144 = !DILocation(line: 313, column: 9, scope: !7127)
!7145 = !DILocation(line: 313, column: 16, scope: !7127)
!7146 = !DILocation(line: 313, column: 14, scope: !7127)
!7147 = !DILocation(line: 313, column: 2, scope: !7127)
!7148 = !DILocation(line: 313, column: 7, scope: !7127)
!7149 = !DILocation(line: 314, column: 1, scope: !7127)
!7150 = distinct !DISubprogram(name: "RE_instance_rotate_ray", scope: !1, file: !1, line: 1441, type: !7061, scopeLine: 1442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7151 = !DILocalVariable(name: "obi", arg: 1, scope: !7150, file: !1, line: 1441, type: !2719)
!7152 = !DILocation(line: 1441, column: 48, scope: !7150)
!7153 = !DILocalVariable(name: "is", arg: 2, scope: !7150, file: !1, line: 1441, type: !7063)
!7154 = !DILocation(line: 1441, column: 60, scope: !7150)
!7155 = !DILocation(line: 1443, column: 31, scope: !7150)
!7156 = !DILocation(line: 1443, column: 36, scope: !7150)
!7157 = !DILocation(line: 1443, column: 2, scope: !7150)
!7158 = !DILocation(line: 1444, column: 29, scope: !7150)
!7159 = !DILocation(line: 1444, column: 34, scope: !7150)
!7160 = !DILocation(line: 1444, column: 2, scope: !7150)
!7161 = !DILocation(line: 1445, column: 1, scope: !7150)
!7162 = distinct !DISubprogram(name: "RE_instance_rotate_ray_restore", scope: !1, file: !1, line: 1447, type: !7061, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7163 = !DILocalVariable(name: "obi", arg: 1, scope: !7162, file: !1, line: 1447, type: !2719)
!7164 = !DILocation(line: 1447, column: 56, scope: !7162)
!7165 = !DILocalVariable(name: "is", arg: 2, scope: !7162, file: !1, line: 1447, type: !7063)
!7166 = !DILocation(line: 1447, column: 68, scope: !7162)
!7167 = !DILocation(line: 1449, column: 6, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7162, file: !1, line: 1449, column: 6)
!7169 = !DILocation(line: 1449, column: 10, scope: !7168)
!7170 = !DILocation(line: 1449, column: 14, scope: !7168)
!7171 = !DILocation(line: 1449, column: 19, scope: !7168)
!7172 = !DILocation(line: 1449, column: 24, scope: !7168)
!7173 = !DILocation(line: 1449, column: 6, scope: !7162)
!7174 = !DILocation(line: 1450, column: 14, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7168, file: !1, line: 1449, column: 46)
!7176 = !DILocation(line: 1450, column: 18, scope: !7175)
!7177 = !DILocation(line: 1450, column: 25, scope: !7175)
!7178 = !DILocation(line: 1450, column: 29, scope: !7175)
!7179 = !DILocation(line: 1450, column: 3, scope: !7175)
!7180 = !DILocation(line: 1451, column: 14, scope: !7175)
!7181 = !DILocation(line: 1451, column: 18, scope: !7175)
!7182 = !DILocation(line: 1451, column: 23, scope: !7175)
!7183 = !DILocation(line: 1451, column: 27, scope: !7175)
!7184 = !DILocation(line: 1451, column: 3, scope: !7175)
!7185 = !DILocation(line: 1452, column: 2, scope: !7175)
!7186 = !DILocation(line: 1453, column: 1, scope: !7162)
!7187 = distinct !DISubprogram(name: "clip_render_object", scope: !1, file: !1, line: 1455, type: !7188, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7188 = !DISubroutineType(types: !7189)
!7189 = !{!93, !873, !89, !901}
!7190 = !DILocalVariable(name: "boundbox", arg: 1, scope: !7187, file: !1, line: 1455, type: !873)
!7191 = !DILocation(line: 1455, column: 30, scope: !7187)
!7192 = !DILocalVariable(name: "bounds", arg: 2, scope: !7187, file: !1, line: 1455, type: !89)
!7193 = !DILocation(line: 1455, column: 52, scope: !7187)
!7194 = !DILocalVariable(name: "winmat", arg: 3, scope: !7187, file: !1, line: 1455, type: !901)
!7195 = !DILocation(line: 1455, column: 69, scope: !7187)
!7196 = !DILocalVariable(name: "mat", scope: !7187, file: !1, line: 1457, type: !485)
!7197 = !DILocation(line: 1457, column: 8, scope: !7187)
!7198 = !DILocalVariable(name: "vec", scope: !7187, file: !1, line: 1457, type: !294)
!7199 = !DILocation(line: 1457, column: 19, scope: !7187)
!7200 = !DILocalVariable(name: "a", scope: !7187, file: !1, line: 1458, type: !93)
!7201 = !DILocation(line: 1458, column: 6, scope: !7187)
!7202 = !DILocalVariable(name: "fl", scope: !7187, file: !1, line: 1458, type: !93)
!7203 = !DILocation(line: 1458, column: 9, scope: !7187)
!7204 = !DILocalVariable(name: "flag", scope: !7187, file: !1, line: 1458, type: !93)
!7205 = !DILocation(line: 1458, column: 13, scope: !7187)
!7206 = !DILocation(line: 1460, column: 13, scope: !7187)
!7207 = !DILocation(line: 1460, column: 18, scope: !7187)
!7208 = !DILocation(line: 1460, column: 2, scope: !7187)
!7209 = !DILocation(line: 1462, column: 8, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7187, file: !1, line: 1462, column: 2)
!7211 = !DILocation(line: 1462, column: 7, scope: !7210)
!7212 = !DILocation(line: 1462, column: 12, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7210, file: !1, line: 1462, column: 2)
!7214 = !DILocation(line: 1462, column: 14, scope: !7213)
!7215 = !DILocation(line: 1462, column: 2, scope: !7210)
!7216 = !DILocation(line: 1463, column: 12, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7213, file: !1, line: 1462, column: 24)
!7218 = !DILocation(line: 1463, column: 14, scope: !7217)
!7219 = !DILocation(line: 1463, column: 11, scope: !7217)
!7220 = !DILocation(line: 1463, column: 20, scope: !7217)
!7221 = !DILocation(line: 1463, column: 36, scope: !7217)
!7222 = !DILocation(line: 1463, column: 3, scope: !7217)
!7223 = !DILocation(line: 1463, column: 9, scope: !7217)
!7224 = !DILocation(line: 1464, column: 12, scope: !7217)
!7225 = !DILocation(line: 1464, column: 14, scope: !7217)
!7226 = !DILocation(line: 1464, column: 11, scope: !7217)
!7227 = !DILocation(line: 1464, column: 20, scope: !7217)
!7228 = !DILocation(line: 1464, column: 36, scope: !7217)
!7229 = !DILocation(line: 1464, column: 3, scope: !7217)
!7230 = !DILocation(line: 1464, column: 9, scope: !7217)
!7231 = !DILocation(line: 1465, column: 12, scope: !7217)
!7232 = !DILocation(line: 1465, column: 14, scope: !7217)
!7233 = !DILocation(line: 1465, column: 11, scope: !7217)
!7234 = !DILocation(line: 1465, column: 20, scope: !7217)
!7235 = !DILocation(line: 1465, column: 36, scope: !7217)
!7236 = !DILocation(line: 1465, column: 3, scope: !7217)
!7237 = !DILocation(line: 1465, column: 9, scope: !7217)
!7238 = !DILocation(line: 1466, column: 3, scope: !7217)
!7239 = !DILocation(line: 1466, column: 9, scope: !7217)
!7240 = !DILocation(line: 1467, column: 13, scope: !7217)
!7241 = !DILocation(line: 1467, column: 18, scope: !7217)
!7242 = !DILocation(line: 1467, column: 3, scope: !7217)
!7243 = !DILocation(line: 1469, column: 6, scope: !7217)
!7244 = !DILocation(line: 1470, column: 7, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7217, file: !1, line: 1470, column: 7)
!7246 = !DILocation(line: 1470, column: 7, scope: !7217)
!7247 = !DILocation(line: 1471, column: 13, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 1471, column: 13)
!7249 = distinct !DILexicalBlock(scope: !7245, file: !1, line: 1470, column: 15)
!7250 = !DILocation(line: 1471, column: 22, scope: !7248)
!7251 = !DILocation(line: 1471, column: 34, scope: !7248)
!7252 = !DILocation(line: 1471, column: 32, scope: !7248)
!7253 = !DILocation(line: 1471, column: 20, scope: !7248)
!7254 = !DILocation(line: 1471, column: 13, scope: !7249)
!7255 = !DILocation(line: 1471, column: 45, scope: !7248)
!7256 = !DILocation(line: 1471, column: 42, scope: !7248)
!7257 = !DILocation(line: 1472, column: 13, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7248, file: !1, line: 1472, column: 13)
!7259 = !DILocation(line: 1472, column: 22, scope: !7258)
!7260 = !DILocation(line: 1472, column: 34, scope: !7258)
!7261 = !DILocation(line: 1472, column: 32, scope: !7258)
!7262 = !DILocation(line: 1472, column: 20, scope: !7258)
!7263 = !DILocation(line: 1472, column: 13, scope: !7248)
!7264 = !DILocation(line: 1472, column: 45, scope: !7258)
!7265 = !DILocation(line: 1472, column: 42, scope: !7258)
!7266 = !DILocation(line: 1474, column: 13, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 1474, column: 13)
!7268 = !DILocation(line: 1474, column: 22, scope: !7267)
!7269 = !DILocation(line: 1474, column: 34, scope: !7267)
!7270 = !DILocation(line: 1474, column: 32, scope: !7267)
!7271 = !DILocation(line: 1474, column: 20, scope: !7267)
!7272 = !DILocation(line: 1474, column: 13, scope: !7249)
!7273 = !DILocation(line: 1474, column: 45, scope: !7267)
!7274 = !DILocation(line: 1474, column: 42, scope: !7267)
!7275 = !DILocation(line: 1475, column: 13, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7267, file: !1, line: 1475, column: 13)
!7277 = !DILocation(line: 1475, column: 22, scope: !7276)
!7278 = !DILocation(line: 1475, column: 34, scope: !7276)
!7279 = !DILocation(line: 1475, column: 32, scope: !7276)
!7280 = !DILocation(line: 1475, column: 20, scope: !7276)
!7281 = !DILocation(line: 1475, column: 13, scope: !7267)
!7282 = !DILocation(line: 1475, column: 45, scope: !7276)
!7283 = !DILocation(line: 1475, column: 42, scope: !7276)
!7284 = !DILocation(line: 1476, column: 3, scope: !7249)
!7285 = !DILocation(line: 1478, column: 13, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7287, file: !1, line: 1478, column: 13)
!7287 = distinct !DILexicalBlock(scope: !7245, file: !1, line: 1477, column: 8)
!7288 = !DILocation(line: 1478, column: 23, scope: !7286)
!7289 = !DILocation(line: 1478, column: 22, scope: !7286)
!7290 = !DILocation(line: 1478, column: 20, scope: !7286)
!7291 = !DILocation(line: 1478, column: 13, scope: !7287)
!7292 = !DILocation(line: 1478, column: 34, scope: !7286)
!7293 = !DILocation(line: 1478, column: 31, scope: !7286)
!7294 = !DILocation(line: 1479, column: 13, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7286, file: !1, line: 1479, column: 13)
!7296 = !DILocation(line: 1479, column: 23, scope: !7295)
!7297 = !DILocation(line: 1479, column: 20, scope: !7295)
!7298 = !DILocation(line: 1479, column: 13, scope: !7286)
!7299 = !DILocation(line: 1479, column: 34, scope: !7295)
!7300 = !DILocation(line: 1479, column: 31, scope: !7295)
!7301 = !DILocation(line: 1481, column: 13, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7287, file: !1, line: 1481, column: 13)
!7303 = !DILocation(line: 1481, column: 23, scope: !7302)
!7304 = !DILocation(line: 1481, column: 20, scope: !7302)
!7305 = !DILocation(line: 1481, column: 13, scope: !7287)
!7306 = !DILocation(line: 1481, column: 34, scope: !7302)
!7307 = !DILocation(line: 1481, column: 31, scope: !7302)
!7308 = !DILocation(line: 1482, column: 13, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7302, file: !1, line: 1482, column: 13)
!7310 = !DILocation(line: 1482, column: 23, scope: !7309)
!7311 = !DILocation(line: 1482, column: 22, scope: !7309)
!7312 = !DILocation(line: 1482, column: 20, scope: !7309)
!7313 = !DILocation(line: 1482, column: 13, scope: !7302)
!7314 = !DILocation(line: 1482, column: 34, scope: !7309)
!7315 = !DILocation(line: 1482, column: 31, scope: !7309)
!7316 = !DILocation(line: 1484, column: 12, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7217, file: !1, line: 1484, column: 12)
!7318 = !DILocation(line: 1484, column: 22, scope: !7317)
!7319 = !DILocation(line: 1484, column: 21, scope: !7317)
!7320 = !DILocation(line: 1484, column: 19, scope: !7317)
!7321 = !DILocation(line: 1484, column: 12, scope: !7217)
!7322 = !DILocation(line: 1484, column: 33, scope: !7317)
!7323 = !DILocation(line: 1484, column: 30, scope: !7317)
!7324 = !DILocation(line: 1485, column: 12, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7317, file: !1, line: 1485, column: 12)
!7326 = !DILocation(line: 1485, column: 22, scope: !7325)
!7327 = !DILocation(line: 1485, column: 19, scope: !7325)
!7328 = !DILocation(line: 1485, column: 12, scope: !7317)
!7329 = !DILocation(line: 1485, column: 33, scope: !7325)
!7330 = !DILocation(line: 1485, column: 30, scope: !7325)
!7331 = !DILocation(line: 1487, column: 11, scope: !7217)
!7332 = !DILocation(line: 1487, column: 8, scope: !7217)
!7333 = !DILocation(line: 1488, column: 7, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7217, file: !1, line: 1488, column: 7)
!7335 = !DILocation(line: 1488, column: 12, scope: !7334)
!7336 = !DILocation(line: 1488, column: 7, scope: !7217)
!7337 = !DILocation(line: 1489, column: 4, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7334, file: !1, line: 1488, column: 18)
!7339 = !DILocation(line: 1491, column: 2, scope: !7217)
!7340 = !DILocation(line: 1462, column: 20, scope: !7213)
!7341 = !DILocation(line: 1462, column: 2, scope: !7213)
!7342 = distinct !{!7342, !7215, !7343}
!7343 = !DILocation(line: 1491, column: 2, scope: !7210)
!7344 = !DILocation(line: 1493, column: 9, scope: !7187)
!7345 = !DILocation(line: 1493, column: 2, scope: !7187)
!7346 = !DILocation(line: 1494, column: 1, scope: !7187)
!7347 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !3758, file: !3758, line: 788, type: !7348, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{!84, !89, !839}
!7350 = !DILocalVariable(name: "r", arg: 1, scope: !7347, file: !3758, line: 788, type: !89)
!7351 = !DILocation(line: 788, column: 37, scope: !7347)
!7352 = !DILocalVariable(name: "a", arg: 2, scope: !7347, file: !3758, line: 788, type: !839)
!7353 = !DILocation(line: 788, column: 55, scope: !7347)
!7354 = !DILocalVariable(name: "d", scope: !7347, file: !3758, line: 790, type: !84)
!7355 = !DILocation(line: 790, column: 8, scope: !7347)
!7356 = !DILocation(line: 790, column: 21, scope: !7347)
!7357 = !DILocation(line: 790, column: 24, scope: !7347)
!7358 = !DILocation(line: 790, column: 12, scope: !7347)
!7359 = !DILocation(line: 794, column: 6, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7347, file: !3758, line: 794, column: 6)
!7361 = !DILocation(line: 794, column: 8, scope: !7360)
!7362 = !DILocation(line: 794, column: 6, scope: !7347)
!7363 = !DILocation(line: 795, column: 13, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7360, file: !3758, line: 794, column: 20)
!7365 = !DILocation(line: 795, column: 7, scope: !7364)
!7366 = !DILocation(line: 795, column: 5, scope: !7364)
!7367 = !DILocation(line: 796, column: 15, scope: !7364)
!7368 = !DILocation(line: 796, column: 18, scope: !7364)
!7369 = !DILocation(line: 796, column: 28, scope: !7364)
!7370 = !DILocation(line: 796, column: 26, scope: !7364)
!7371 = !DILocation(line: 796, column: 3, scope: !7364)
!7372 = !DILocation(line: 797, column: 2, scope: !7364)
!7373 = !DILocation(line: 799, column: 11, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7360, file: !3758, line: 798, column: 7)
!7375 = !DILocation(line: 799, column: 3, scope: !7374)
!7376 = !DILocation(line: 800, column: 5, scope: !7374)
!7377 = !DILocation(line: 803, column: 9, scope: !7347)
!7378 = !DILocation(line: 803, column: 2, scope: !7347)
!7379 = distinct !DISubprogram(name: "dot_v3v3", scope: !3758, file: !3758, line: 619, type: !5842, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7380 = !DILocalVariable(name: "a", arg: 1, scope: !7379, file: !3758, line: 619, type: !839)
!7381 = !DILocation(line: 619, column: 36, scope: !7379)
!7382 = !DILocalVariable(name: "b", arg: 2, scope: !7379, file: !3758, line: 619, type: !839)
!7383 = !DILocation(line: 619, column: 54, scope: !7379)
!7384 = !DILocation(line: 621, column: 9, scope: !7379)
!7385 = !DILocation(line: 621, column: 16, scope: !7379)
!7386 = !DILocation(line: 621, column: 14, scope: !7379)
!7387 = !DILocation(line: 621, column: 23, scope: !7379)
!7388 = !DILocation(line: 621, column: 30, scope: !7379)
!7389 = !DILocation(line: 621, column: 28, scope: !7379)
!7390 = !DILocation(line: 621, column: 21, scope: !7379)
!7391 = !DILocation(line: 621, column: 37, scope: !7379)
!7392 = !DILocation(line: 621, column: 44, scope: !7379)
!7393 = !DILocation(line: 621, column: 42, scope: !7379)
!7394 = !DILocation(line: 621, column: 35, scope: !7379)
!7395 = !DILocation(line: 621, column: 2, scope: !7379)
!7396 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !3758, file: !3758, line: 399, type: !7397, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7397 = !DISubroutineType(types: !7398)
!7398 = !{null, !89, !839, !84}
!7399 = !DILocalVariable(name: "r", arg: 1, scope: !7396, file: !3758, line: 399, type: !89)
!7400 = !DILocation(line: 399, column: 32, scope: !7396)
!7401 = !DILocalVariable(name: "a", arg: 2, scope: !7396, file: !3758, line: 399, type: !839)
!7402 = !DILocation(line: 399, column: 50, scope: !7396)
!7403 = !DILocalVariable(name: "f", arg: 3, scope: !7396, file: !3758, line: 399, type: !84)
!7404 = !DILocation(line: 399, column: 62, scope: !7396)
!7405 = !DILocation(line: 401, column: 9, scope: !7396)
!7406 = !DILocation(line: 401, column: 16, scope: !7396)
!7407 = !DILocation(line: 401, column: 14, scope: !7396)
!7408 = !DILocation(line: 401, column: 2, scope: !7396)
!7409 = !DILocation(line: 401, column: 7, scope: !7396)
!7410 = !DILocation(line: 402, column: 9, scope: !7396)
!7411 = !DILocation(line: 402, column: 16, scope: !7396)
!7412 = !DILocation(line: 402, column: 14, scope: !7396)
!7413 = !DILocation(line: 402, column: 2, scope: !7396)
!7414 = !DILocation(line: 402, column: 7, scope: !7396)
!7415 = !DILocation(line: 403, column: 9, scope: !7396)
!7416 = !DILocation(line: 403, column: 16, scope: !7396)
!7417 = !DILocation(line: 403, column: 14, scope: !7396)
!7418 = !DILocation(line: 403, column: 2, scope: !7396)
!7419 = !DILocation(line: 403, column: 7, scope: !7396)
!7420 = !DILocation(line: 404, column: 1, scope: !7396)
!7421 = distinct !DISubprogram(name: "zero_v3", scope: !3758, file: !3758, line: 43, type: !7422, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7422 = !DISubroutineType(types: !7423)
!7423 = !{null, !89}
!7424 = !DILocalVariable(name: "r", arg: 1, scope: !7421, file: !3758, line: 43, type: !89)
!7425 = !DILocation(line: 43, column: 28, scope: !7421)
!7426 = !DILocation(line: 45, column: 2, scope: !7421)
!7427 = !DILocation(line: 45, column: 7, scope: !7421)
!7428 = !DILocation(line: 46, column: 2, scope: !7421)
!7429 = !DILocation(line: 46, column: 7, scope: !7421)
!7430 = !DILocation(line: 47, column: 2, scope: !7421)
!7431 = !DILocation(line: 47, column: 7, scope: !7421)
!7432 = !DILocation(line: 48, column: 1, scope: !7421)
!7433 = distinct !DISubprogram(name: "len_v3", scope: !3758, file: !3758, line: 714, type: !7434, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2536)
!7434 = !DISubroutineType(types: !7435)
!7435 = !{!84, !839}
!7436 = !DILocalVariable(name: "a", arg: 1, scope: !7433, file: !3758, line: 714, type: !839)
!7437 = !DILocation(line: 714, column: 34, scope: !7433)
!7438 = !DILocation(line: 716, column: 24, scope: !7433)
!7439 = !DILocation(line: 716, column: 27, scope: !7433)
!7440 = !DILocation(line: 716, column: 15, scope: !7433)
!7441 = !DILocation(line: 716, column: 9, scope: !7433)
!7442 = !DILocation(line: 716, column: 2, scope: !7433)
